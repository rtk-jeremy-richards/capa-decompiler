{
    "null": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid entry0(void)\n\n{\n    *0x410913 = *0x410913 | 0x40d3a7;\n    *0x410913 = (*0x410913 | 0x40d3a7) & 0xffffff00 | *0x410913 + 0xbf;\n    do {\n        *0x410913 = *0x410913 & 0xffffff00 | *0x410913 + 0x85;\n        *0x41089b = *0x41089b + -0x73dbabff;\n    } while (*0x41089b < 0);\n    *0x4103a7 = 0xc7027f8d;\n    *0x4103ab = *0x4103ab | 0xa78c2444;\n    *0x4103af = *0x4103af + -0x72ffbf2d;\n    *0x4103b3 = 0xef85027f;\n    *0x4103b7 = *0x4103b7 | 0x8c24448b;\n    *0x4103bb = *0x4103bb | 0x75980081;\n    *0x4103bf = 0x3081a152;\n    *0x4103c3 = *0x4103c3 + -0x1ebd34f8;\n    *0x4103c7 = *0x4103c7 + 0x2366ef85;\n    *0x4103cb = *0x4103cb + -0x36749933;\n    *0x4103cf = 0x4b2d233;\n    *0x4103d3 = 0x8c245401;\n    *0x4103d7 = *0x4103d7 + -0x7432dc9a;\n    *0x4103db = *0x4103db | 0x818c2454;\n    *0x4103df = 0x82835202;\n    *0x4103e3 = 0x12328118;\n    *0x4103e7 = *0x4103e7 + 0x66083d83;\n    *0x4103eb = 0xc933c98b;\n    *0x4103ef = 0x4c0104b1;\n    *0x4103f3 = 0xc10f8c24;\n    *0x4103f7 = *0x4103f7 + 0x24448be8;\n    *0x4103fb = 0x5000818c;\n    *0x4103ff = 0xfb90040;\n    *0x410403 = *0x410403 + 0x4b8dc4b6;\n    *0x410407 = 0x33c92302;\n    *0x41040b = 0x104b1c9;\n    *0x41040f = 0x8d8c244c;\n    *0x410413 = *0x410413 + 0x4c8b024b;\n    *0x410417 = *0x410417 | 0x1818c24;\n    *0x41041b = *0x41041b + 1000;\n    *0x41041f = *0x41041f + -0x3fcc36dd;\n    *0x410423 = 0x440104b0;\n    *0x410427 = 0x3668c24;\n    *0x41042b = *0x41042b | 0x7ff781db;\n    *0x41042f = 0x8b0040fb;\n    *0x410433 = *0x410433 | 0x818c245c;\n    *0x410437 = *0x410437 + -0x405b0cfd;\n    *0x41043b = 0x7ff78110;\n    *0x41043f = 0x660040fb;\n    *0x410443 = *0x410443 + -0x3fcc3ef5;\n    *0x410447 = *0x410447 + 0x440104b0;\n    *0x41044b = 0xb668c24;\n    *0x41044f = 0x24448bc1;\n    *0x410453 = *0x410453 + 0x1c00818c;\n    *0x410457 = *0x410457 + -0x7e4f7433;\n    *0x41045b = *0x41045b + -0x7472a3d0;\n    *0x41045f = 0x66d92b0b;\n    *0x410463 = 0xdb33db03;\n    *0x410467 = *0x410467 + 0x5c0104b3;\n    *0x41046b = *0x41046b + 0x3668c24;\n    *0x41046f = *0x41046f + 0x245c8bdb;\n    *0x410473 = 0xc003818c;\n    *0x410477 = *0x410477 + 0x66000003;\n    *0x41047b = *0x41047b + -0x36cc2af5;\n    *0x41047f = *0x41047f + 0x4c0104b1;\n    *0x410483 = 0x9e8d8c24;\n    *0x410487 = 0x40ddfd;\n    *0x41048b = 0x8c24448b;\n    *0x41048f = *0x41048f | 0x46cd0081;\n    *0x410493 = 0x3081b66c;\n    *0x410497 = *0x410497 + -0x59937eb4;\n    *0x41049b = 0x66d13366;\n    *0x41049f = *0x41049f | 0xc033db23;\n    *0x4104a3 = *0x4104a3 + 0x440104b0;\n    *0x4104a7 = *0x4104a7 | 0x23668c24;\n    *0x4104ab = 0x244c8bdb;\n    *0x4104af = *0x4104af + 0x3101818c;\n    *0x4104b3 = 0x812305b1;\n    *0x4104b7 = *0x4104b7 + 0x52b13131;\n    *0x4104bb = 0xc833669d;\n    *0x4104bf = *0x4104bf + 0x4b2d233;\n    *0x4104c3 = *0x4104c3 + -0x73dbabff;\n    *0x4104c7 = 0x8b02d3c1;\n    *0x4104cb = 0x818c245c;\n    *0x4104cf = 0x5dfa0303;\n    *0x4104d3 = *0x4104d3 + 0x33381f1;\n    *0x4104d7 = 0x83f11dea;\n    *0x4104db = *0x4104db + -0x36ccfd17;\n    *0x4104df = *0x4104df + 0x4c0104b1;\n    *0x4104e3 = *0x4104e3 + 0x33668c24;\n    *0x4104e7 = *0x4104e7 | 0x244c8bd0;\n    *0x4104eb = 0x9101818c;\n    *0x4104ef = 0x81a3c2c2;\n    *0x4104f3 = *0x4104f3 + -0x3d2886cf;\n    *0x4104f7 = *0x4104f7 + -0x742edc5d;\n    *0x4104fb = *0x4104fb + -0x4d2dcc09;\n    *0x4104ff = *0x4104ff + 0x24540104;\n    *0x410503 = 0x66f78b8c;\n    *0x410507 = *0x410507 | 0x4c8bf903;\n    *0x41050b = *0x41050b + 0x1818c24;\n    *0x41050f = 0x5000bf00;\n    *0x410513 = *0x410513 | 0x66f90366;\n    *0x410517 = 0x8b66c223;\n    *0x41051b = *0x41051b + -0x4f3fcc0a;\n    *0x41051f = 0x24440104;\n    *0x410523 = *0x410523 | 0xc223668c;\n    *0x410527 = 0x8c244c8b;\n    *0x41052b = *0x41052b + 0x410181;\n    *0x41052f = *0x41052f | 0x8b6600bb;\n    *0x410533 = *0x410533 + -0x32cc990a;\n    *0x410537 = *0x410537 + 0x4b1c933;\n    *0x41053b = 0x8c244c01;\n    *0x41053f = *0x41053f + -0x7432cc9a;\n    *0x410543 = *0x410543 + -0x7e73dba4;\n    *0x410547 = 0xa803;\n    *0x41054b = 0x66ff85be;\n    *0x41054f = *0x41054f + -0x1dc0af5;\n    *0x410553 = 0x4b1c933;\n    *0x410557 = 0x8c244c01;\n    *0x41055b = *0x41055b + -0x740af49a;\n    *0x41055f = *0x41055f | 0x818c245c;\n    *0x410563 = *0x410563 + 0x40100003;\n    *0x410567 = *0x410567 | 0x8dfe2300;\n    *0x41056b = *0x41056b | 0x40ddfd96;\n    *0x41056f = *0x41056f | 0xb1c93300;\n    *0x410573 = 0x244c0104;\n    *0x410577 = 0xfd968d8c;\n    *0x41057b = 0x8b0040dd;\n    *0x41057f = *0x41057f + -0x7e73dba4;\n    *0x410583 = *0x410583 + -0x6e3678fd;\n    *0x410587 = *0x410587 | 0x6f338102;\n    *0x41058b = *0x41058b + 0xf0291c8;\n    *0x41058f = 0x3303f8a4;\n    *0x410593 = 0x104b1c9;\n    *0x410597 = *0x410597 + 0x38c244c;\n    *0x41059b = 0x24448bca;\n    *0x41059f = *0x41059f + 0x5c00818c;\n    *0x4105a3 = 0x81b2ef39;\n    *0x4105a7 = *0x4105a7 + -0x7005a3d0;\n    *0x4105ab = *0x4105ab + 0x2d9830f;\n    *0x4105af = 0xbe0fce8b;\n    *0x4105b3 = *0x4105b3 + -0x4c24cc21;\n    *0x4105b7 = 0x245c0104;\n    *0x4105bb = *0x4105bb + -0x74317474;\n    *0x4105bf = *0x4105bf + -0x7e73dbbc;\n    *0x4105c3 = *0x4105c3 + 0x48dc6c00;\n    *0x4105c7 = *0x4105c7 + 0x683081e9;\n    *0x4105cb = 0xfe948dc;\n    *0x4105cf = *0x4105cf + -0x2ffc2042;\n    *0x4105d3 = *0x4105d3 + 0x4b0c033;\n    *0x4105d7 = *0x4105d7 + -0x73dbbbff;\n    *0x4105db = 0x448bd003;\n    *0x4105df = 0x818c24;\n    *0x4105e3 = *0x4105e3 + -0x1bbd6d23;\n    *0x4105e7 = *0x4105e7 + -0x6d9bcf7f;\n    *0x4105eb = 0xe6c1ea42;\n    *0x4105ef = *0x4105ef + -0x2cfc99fe;\n    *0x4105f3 = *0x4105f3 + 0x33f88566;\n    *0x4105f7 = 0x104b2d2;\n    *0x4105fb = *0x4105fb + 0x668c2454;\n    *0x4105ff = 0x448bd303;\n    *0x410603 = 0x818c24;\n    *0x410607 = *0x410607 + -0x438626d4;\n    *0x41060b = 0x542c3081;\n    *0x41060f = *0x41060f + -0x7a9967c3;\n    *0x410613 = 0x2bfe2bf8;\n    *0x410617 = *0x410617 + -0x2753f023;\n    *0x41061b = *0x41061b + -0x4e36ccfd;\n    *0x41061f = 0x244c0104;\n    *0x410623 = *0x410623 + -0x7401d474;\n    *0x410627 = *0x410627 + -0x7e73dbbc;\n    *0x41062b = 0xeec06000;\n    *0x41062f = 0x48308175;\n    *0x410633 = *0x410633 + 0x2b65ee7a;\n    *0x410637 = 0xd8ac0fdd;\n    *0x41063b = *0x41063b | 0xebb28d03;\n    *0x41063f = *0x41063f + 0x330040da;\n    *0x410643 = *0x410643 + 0x104b2d2;\n    *0x410647 = 0xf8c2454;\n    *0x41064b = *0x41064b + -0x72fc2754;\n    *0x41064f = *0x41064f + 0x40daebb2;\n    *0x410653 = *0x410653 | 0x244c8b00;\n    *0x410657 = *0x410657 + 0x1818c;\n    *0x41065b = 0x8dca2b00;\n    *0x41065f = *0x41065f | 0x40daebb2;\n    *0x410663 = *0x410663 + 0x2da8300;\n    *0x410667 = *0x410667 | 0x4b1c933;\n    *0x41066b = *0x41066b + -0x73dbb3ff;\n    *0x41066f = 0x8b02da83;\n    *0x410673 = *0x410673 + -0x7e73dbbc;\n    *0x410677 = *0x410677 + -0x7a3dd500;\n    *0x41067b = 0x33ea0308;\n    *0x41067f = 0x104b1c9;\n    *0x410683 = *0x410683 + 0x668c244c;\n    *0x410687 = *0x410687 + -0x3a7428cd;\n    *0x41068b = *0x41068b + -0x73dbb375;\n    *0x41068f = *0x41068f + -0x35c4fe7f;\n    *0x410693 = *0x410693 + -0x3a74098d;\n    *0x410697 = 0xee23f885;\n    *0x41069b = 0x33d78b66;\n    *0x41069f = 0x104b0c0;\n    *0x4106a3 = 0x858c2444;\n    *0x4106a7 = 0x8bee23f8;\n    *0x4106ab = *0x4106ab | 0x818c2444;\n    *0x4106af = 0x4ea06f00;\n    *0x4106b3 = 0x3830816e;\n    *0x4106b7 = *0x4106b7 + 0x23d51df0;\n    *0x4106bb = *0x4106bb | 0xb1c933ee;\n    *0x4106bf = *0x4106bf + 0x244c0104;\n    *0x4106c3 = *0x4106c3 + -0x28749974;\n    *0x4106c7 = *0x4106c7 + -0x73dba375;\n    *0x4106cb = *0x4106cb | 0x1000381;\n    *0x4106cf = 0x33660000;\n    *0x4106d3 = *0x4106d3 + -0x20dc9918;\n    *0x4106d7 = 0x4b0c033;\n    *0x4106db = *0x4106db + -0x73dbbbff;\n    *0x4106df = 0xfdf2366;\n    *0x4106e3 = *0x4106e3 + 0x548bcdb6;\n    *0x4106e7 = 0x2818c24;\n    *0x4106eb = *0x4106eb + -0x7b8fa743;\n    *0x4106ef = *0x4106ef + -0x5fc9cd7f;\n    *0x4106f3 = 0xb60f82fb;\n    *0x4106f7 = *0x4106f7 + -0x26f49933;\n    *0x4106fb = *0x4106fb + 0x4b3db33;\n    *0x4106ff = *0x4106ff + -0x73dba3ff;\n    *0x410703 = *0x410703 | 0x3d90b66;\n    *0x410707 = *0x410707 + 0x24448bf0;\n    *0x41070b = 0x1700818c;\n    *0x41070f = 0x8189f02e;\n    *0x410713 = *0x410713 + 0x7bfc2430;\n    *0x410717 = *0x410717 + 0x33f003c7;\n    *0x41071b = *0x41071b | 0x104b3db;\n    *0x41071f = *0x41071f + -0x7e73dba4;\n    *0x410723 = *0x410723 + 0x40dd79cf;\n    *0x410727 = 0x244c8b00;\n    *0x41072b = *0x41072b + 0x2801818c;\n    *0x41072f = 0x81436d09;\n    *0x410733 = *0x410733 + -0x6b01d6cf;\n    *0x410737 = *0x410737 + -0x3a7499c0;\n    *0x41073b = *0x41073b | 0xdf6eb38d;\n    *0x41073f = 0xc0330040;\n    *0x410743 = *0x410743 + 0x440104b0;\n    *0x410747 = *0x410747 + -0x4c7273dc;\n    *0x41074b = 0x40df6e;\n    *0x41074f = *0x41074f + -0x73dbab75;\n    *0x410753 = *0x410753 | 0x46d10281;\n    *0x410757 = *0x410757 + -0x193ee877;\n    *0x41075b = 0xb0c03302;\n    *0x41075f = 0x24440104;\n    *0x410763 = *0x410763 + -0x227a9974;\n    *0x410767 = 0x8c24448b;\n    *0x41076b = 0x76630081;\n    *0x41076f = 0x30817602;\n    *0x410773 = *0x410773 | 0xab298b60;\n    *0x410777 = *0x410777 + -0x7a28cc9a;\n    *0x41077b = *0x41077b + -0x3241f03b;\n    *0x41077f = 0x4b1c933;\n    *0x410783 = *0x410783 | 0x8c244c01;\n    *0x410787 = 0x448bc585;\n    *0x41078b = 0x818c24;\n    *0x41078f = *0x41078f + -0x740af4b7;\n    *0x410793 = *0x410793 + -0x18c3cf7f;\n    *0x410797 = 0xbe0fd4ae;\n    *0x41079b = 0x33db03cd;\n    *0x41079f = *0x41079f + 0x104b2d2;\n    *0x4107a3 = *0x4107a3 + 0x38c2454;\n    *0x4107a7 = *0x4107a7 | 0x24448bdb;\n    *0x4107ab = 0x8b00818c;\n    *0x4107af = *0x4107af + -0x3e7ea909;\n    *0x4107b3 = *0x4107b3 + -0x36ccfd30;\n    *0x4107b7 = *0x4107b7 | 0x4c0104b1;\n    *0x4107bb = 0xfb338c24;\n    *0x4107bf = *0x4107bf + -0x21046673;\n    *0x4107c3 = *0x4107c3 + 0x4c8b0040;\n    *0x4107c7 = *0x4107c7 + 0x1818c24;\n    *0x4107cb = *0x4107cb + -0x23f37f5e;\n    *0x4107cf = 0x80653181;\n    *0x4107d3 = 0x998ddc0d;\n    *0x4107d7 = 0x40defb;\n    *0x4107db = *0x4107db + 0x4b1c933;\n    *0x4107df = *0x4107df | 0x8c244c01;\n    *0x4107e3 = *0x4107e3 | 0x8bca2366;\n    *0x4107e7 = *0x4107e7 | 0x818c244c;\n    *0x4107eb = 0x1ee81501;\n    *0x4107ef = 0x15318149;\n    *0x4107f3 = 0xc14f95bb;\n    *0x4107f7 = 0xc93302ff;\n    *0x4107fb = *0x4107fb | 0x4c0104b1;\n    *0x4107ff = *0x4107ff + -0x36cc73dc;\n    *0x410803 = *0x410803 + -0x73dbbb75;\n    *0x410807 = *0x410807 | 0x6c670081;\n    *0x41080b = *0x41080b + 0x30819afc;\n    *0x41080f = *0x41080f + -0x2b8841ac;\n    *0x410813 = *0x410813 | 0x33c52b66;\n    *0x410817 = *0x410817 + 0x104b3db;\n    *0x41081b = 0x668c245c;\n    *0x41081f = 0x8566ff03;\n    *0x410823 = *0x410823 + 0x245c8bd8;\n    *0x410827 = *0x410827 | 0xa203818c;\n    *0x41082b = 0x8179ae4b;\n    *0x41082f = *0x41082f + 0x57bca333;\n    *0x410833 = *0x410833 + -0x277a9986;\n    *0x410837 = *0x410837 + -0x123e38f5;\n    *0x41083b = *0x41083b | 0xb3db3302;\n    *0x41083f = *0x41083f + 0x245c0104;\n    *0x410843 = 0x8bc70b8c;\n    *0x410847 = 0x818c2454;\n    *0x41084b = *0x41084b + 0x307ed302;\n    *0x41084f = *0x41084f + 0x2328146;\n    *0x410853 = *0x410853 | 0xc151b938;\n    *0x410857 = 0x4d8d02ed;\n    *0x41085b = *0x41085b | 0xb1c93302;\n    *0x41085f = *0x41085f + 0x244c0104;\n    *0x410863 = *0x410863 + 0x24d8d8c;\n    *0x410867 = *0x410867 + -0x73dbbb75;\n    *0x41086b = *0x41086b | 0x1df0081;\n    *0x41086f = 0x30814829;\n    *0x410873 = *0x410873 + -0x6afd0324;\n    *0x410877 = *0x410877 + 0x33cd2366;\n    *0x41087b = 0x104b2d2;\n    *0x41087f = *0x41087f + 0x2b8c2454;\n    *0x410883 = *0x410883 + 0x24448bc9;\n    *0x410887 = *0x410887 + 0x3d00818c;\n    *0x41088b = *0x41088b | 0x81df1185;\n    *0x41088f = *0x41088f + 0x4a694830;\n    *0x410893 = 0xf7236681;\n    *0x410897 = *0x410897 + 0x4b2d233;\n    *0x41089b = *0x41089b + -0x73dbabff;\n    *0x41089f = *0x41089f | 0x448bfe8b;\n    *0x4108a3 = *0x4108a3 + 0x818c24;\n    *0x4108a7 = *0x4108a7 | 0x33048b5f;\n    *0x4108ab = *0x4108ab | 0x33d2be0f;\n    *0x4108af = *0x4108af | 0x104b0c0;\n    *0x4108b3 = 0xb8c2444;\n    *0x4108b7 = *0x4108b7 | 0x24548bc7;\n    *0x4108bb = 0x9f02818c;\n    *0x4108bf = 0x81e96bb8;\n    *0x4108c3 = 0x50fcae32;\n    *0x4108c7 = 0xc7856615;\n    *0x4108cb = *0x4108cb | 0x33f12b66;\n    *0x4108cf = *0x4108cf + 0x104b0c0;\n    *0x4108d3 = *0x4108d3 + 0x668c2444;\n    *0x4108d7 = *0x4108d7 + -0x35f40ed5;\n    *0x4108db = 0x8c245c8b;\n    *0x4108df = *0x4108df + -0x5493fc7f;\n    *0x4108e3 = 0x33810866;\n    *0x4108e7 = 0xfd137647;\n    *0x4108eb = 0xdb33ca0b;\n    *0x4108ef = 0x5c0104b3;\n    *0x4108f3 = 0xdf2b8c24;\n    *0x4108f7 = *0x4108f7 | 0x8c24448b;\n    *0x4108fb = *0x4108fb + -0x3c9eff7f;\n    *0x4108ff = *0x4108ff | 0x6a8d8b55;\n    *0x410903 = *0x410903 + 0x6ab78d02;\n    *0x410907 = *0x410907 + 0x330040d9;\n    *0x41090b = *0x41090b + 0x104b0c0;\n    *0x41090f = *0x41090f + 0x688c2444;\n    *0x410917 = *0x410917 + 0x6ab78dc3;\n    *0x41091b = *0x41091b | 0x40d9;\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 7327
    },
    "00427418": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00427418(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    char cVar9;\n    int32_t unaff_EBP;\n    ushort in_SS;\n    ushort in_FS;\n    ulong uVar10;\n    \n    uVar10 = fcn.0042745c();\n    uVar5 = uVar10;\n    puVar7 = (uVar10 >> 0x20) + 0x50;\n    iVar6 = 0x243c;\n    cVar9 = '^';\n    puVar8 = puVar7;\n    do {\n        uVar3 = *puVar8;\n        *puVar8 = uVar5;\n        uVar4 = *puVar8;\n        *puVar8 = uVar3 - cVar9;\n        uVar5 = uVar4;\n        puVar8 = puVar8 + 1;\n        cVar9 = cVar9 + '\\x01';\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    puVar1 = segment(in_FS, 0);\n    puVar2 = segment(in_FS, 0);\n    puVar1 = segment(in_SS, *puVar1);\n    *puVar2 = *puVar1;\n    *(unaff_EBP + 0x18) = puVar7;\n    // WARNING: Could not recover jumptable at 0x00427459. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(unaff_EBP + 0x18))();\n    return;\n}\n",
        "token_count": 421
    },
    "00427401": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00427401(void)\n\n{\n    uint *puVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    uint uVar8;\n    char cVar9;\n    uint8_t **ppuVar10;\n    int32_t iVar11;\n    ushort in_SS;\n    ushort in_FS;\n    ulong uVar12;\n    \n    fcn.00427418();\n    fcn.00427460();\n    puVar1 = segment(in_FS, 0);\n    ppuVar10 = &stack0xfffffffc & 0xffff0000 | *0x10 - 8U;\n    puVar4 = segment(in_SS, *0x10 - 8U);\n    *puVar4 = *puVar1;\n    iVar11 = *ppuVar10;\n    *ppuVar10 = 0x42741d;\n    uVar12 = fcn.0042745c();\n    uVar5 = uVar12;\n    puVar7 = (uVar12 >> 0x20) + 0x50;\n    iVar6 = 0x243c;\n    cVar9 = '^';\n    *ppuVar10 = puVar7;\n    do {\n        uVar2 = *puVar7;\n        *puVar7 = uVar5;\n        uVar3 = *puVar7;\n        *puVar7 = uVar2 - cVar9;\n        uVar5 = uVar3;\n        puVar7 = puVar7 + 1;\n        cVar9 = cVar9 + '\\x01';\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    uVar8 = *ppuVar10;\n    puVar1 = segment(in_FS, 0);\n    puVar4 = segment(in_FS, 0);\n    puVar1 = segment(in_SS, *puVar1);\n    *puVar4 = *puVar1;\n    *(iVar11 + 0x20) = uVar8;\n    // WARNING: Could not recover jumptable at 0x00427459. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(iVar11 + 0x20))();\n    return;\n}\n",
        "token_count": 543
    }
}