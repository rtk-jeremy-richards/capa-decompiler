{
    "00c091ea": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00c09218) overlaps instruction at (ram,0x00c09217)\n// \n\nvoid fcn.00c091ea(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    code *unaff_EBP;\n    code *pcVar6;\n    uint *puVar7;\n    ulong uVar8;\n    \n    while( true ) {\n        puVar7 = **0x10;\n        piVar1 = unaff_EBP + -9;\n        uVar3 = piVar1 + (*(piVar1 + (0x48 - *piVar1)) - *piVar1) + 0xfff & 0xfffff000;\n        **0x10 = 1;\n        *(*0x10 + -4) = uVar3;\n        *(*0x10 + -8) = 0xffffffff;\n        *(*0x10 + -0xc) = 0x32;\n        *(*0x10 + -0x10) = 7;\n        *(*0x10 + -0x14) = 0x1000;\n        *(*0x10 + -0x18) = uVar3;\n        *(*0x10 + -0x1c) = 0x5a;\n        pcVar6 = swi(0x80);\n        iVar4 = (*pcVar6)();\n        puVar5 = *0x10 + -0x14;\n        pcVar6 = unaff_EBP;\n        if (iVar4 == *(*0x10 + -0x18)) break;\n        *(*0x10 + -0x18) = 0x1d;\n        *(*0x10 + -0x18) = 0xc091bd;\n        uVar8 = fcn.00c091da();\n        iVar4 = uVar8 >> 0x20;\n        *(*0x10 + -0x18) = uVar8;\n        *(*0x10 + -0x1c) = iVar4;\n        *(*0x10 + -0x20) = *0x10 + -0x1c;\n        uVar2 = *(*0x10 + -0x1c);\n        puVar5 = *0x10 + -0x18;\n        pcVar6 = unaff_EBP + 2;\n        if (SCARRY4(*0x10 + -0x18, 1) != *0x10 + -0x17 < 0) break;\n        *(*0x10 + -0x1c) = iVar4;\n        *(*0x10 + -0x20) = *0x10 + -0x1c;\n        *(*0x10 + -0x20) = *(*0x10 + -0x20);\n        *(*0x10 + -0x24) = iVar4;\n        *(*0x10 + -0x28) = *0x10 + -0x24;\n        *(puVar7 + 0x61) = *(puVar7 + 0x61) & uVar2 >> 8;\n        unaff_EBP = *(unaff_EBP + 0x67) * 0x6a590a2e;\n        pcVar6 = swi(0x80);\n        (*pcVar6)();\n        *(*0x10 + -0x28) = 1;\n        pcVar6 = swi(0x80);\n        (*pcVar6)();\n        *0x10 = *0x10 + -0x20;\n    }\n    uVar2 = *puVar7;\n    *(puVar5 + -4) = uVar2;\n    *(puVar5 + -8) = uVar2;\n    *(puVar5 + -0xc) = puVar5 + -4;\n    *(puVar5 + -0x10) = iVar4;\n    *(puVar5 + -0x14) = puVar7[1];\n    *(puVar5 + -8) = puVar7[2];\n    *(puVar5 + -0x18) = puVar7 + 3;\n    *(puVar5 + -0x1c) = 0xc09233;\n    (*pcVar6)();\n    return;\n}\n",
        "token_count": 937
    }
}