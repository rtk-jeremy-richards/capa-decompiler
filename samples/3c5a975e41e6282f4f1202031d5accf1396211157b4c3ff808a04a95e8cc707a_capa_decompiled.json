{
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004011a5: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004011aa)\n\nvoid entry0(void)\n\n{\n    uint arg_ch;\n    uint extraout_EDX;\n    uint arg_8h;\n    \n    // [00] -r-x section size 16384 named .code\n    sub.MSVCRT.dll_memset(0x417008, 0, 0xac);\n    *0x41700c = sub.KERNEL32.DLL_GetModuleHandleW(0);\n    *0x417008 = sub.KERNEL32.DLL_HeapCreate(0, 0x1000, 0);\n    fcn.00405000();\n    *0x41702c = 0x416084;\n    fcn.0040ddd0();\n    fcn.0040db41();\n    fcn.0040aa40();\n    fcn.0040a2c9();\n    fcn.00409d61();\n    fcn.00409ae0();\n    fcn.00409609();\n    fcn.00408d8e();\n    fcn.004053bb();\n    fcn.0040c6e3();\n    fcn.0040b190();\n    fcn.00405068();\n    *0x417034 = sub.KERNEL32.DLL_GetStdHandle(0xfffffff5);\n    fcn.00409d80(4, 0x15, 0, 0x4170b0, 0x200);\n    fcn.0040a37a(*0x417098);\n    fcn.0040a2e8(8, 0x417098, 0x416074, 7);\n    fcn.0040a37a(*0x4170a0);\n    fcn.0040a2e8(4, 0x4170a0, 0x41606c, 8);\n    fcn.0040db6a(0xc, 0x186a1, 7, 0x41607c, 0x417090);\n    fcn.00405068();\n    fcn.0040a37a(*0x4170a8);\n    fcn.0040a2e8(4, 0x4170a8, 0x41606c, 8);\n    fcn.004098d0(0x401f3b);\n    arg_ch = fcn.0040de20(extraout_EDX);\n    fcn.00402f41();\n    arg_8h = 0x417040;\n    fcn.0040de60(0x417040, arg_ch);\n    fcn.00401b8f(arg_8h);\n    if (*0x417050 == 1) {\n        fcn.00403001();\n    }\n    fcn.00403df3();\n    fcn.00405379(0x4011aa, 0);\n    fcn.004098f0();\n    fcn.0040a655();\n    fcn.0040aa30();\n    fcn.0040d264();\n    fcn.00409ad0();\n    return;\n}\n",
        "token_count": 700
    },
    "00401500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00401500(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    uint extraout_EDX_02;\n    uint extraout_EDX_03;\n    uchar uVar4;\n    bool bVar5;\n    ulong uVar6;\n    uint uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    int32_t iStack104;\n    uchar *arg_8h;\n    uchar *puVar7;\n    uint in_stack_ffffffd4;\n    uint uStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uVar8;\n    \n    iVar3 = 0xb;\n    do {\n        uVar8 = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    iStack16 = 0x401519;\n    fcn.0040df60();\n    if (*0x41708c == 1) {\n        if ((*0x417074 == 1) && (*0x417060 != 1)) {\n            bVar5 = true;\n        }\n        else {\n            bVar5 = false;\n        }\n        if (bVar5) {\n            iStack16 = 0x416022;\n            iStack20 = *0x417088;\n            iStack24 = 0x401560;\n            uVar6 = fcn.00405760();\n            iStack16 = 1;\n            do {\n                iStack20 = uVar6;\n                in_stack_ffffffd4 = uVar8;\n                if (iStack20 < iStack16) break;\n                uStack28 = 0x401580;\n                uVar1 = fcn.0040de20();\n                iStack24 = uVar6 >> 0x20;\n                iStack20 = uVar6;\n                uStack28 = iStack24;\n                iStack24 = uVar1;\n                uStack28 = fcn.0040de20();\n                uVar2 = *0x417088;\n                fcn.004057f0();\n                puVar7 = &stack0xffffffe4;\n                fcn.0040de60(puVar7, uVar2);\n                uVar6 = fcn.0040249b();\n                uVar1 = uVar6 >> 0x20;\n                if (uVar6 != 0) {\n                    uVar1 = fcn.0040de20();\n                    fcn.00402bfa();\n                    fcn.0040de60(&stack0xffffffd8, uVar2);\n                    fcn.0040de20();\n                    fcn.0040dfc0(puVar7);\n                    fcn.0040dfc0(uVar1);\n                    uVar1 = 0x416062;\n                    fcn.0040dfc0(0x416062);\n                    fcn.0040de60(&stack0xffffffc8, uVar1);\n                    uVar1 = extraout_EDX_00;\n                }\n                uVar6 = CONCAT44(uVar1, iStack20);\n                bVar5 = SCARRY4(iStack16, 1);\n                iStack16 = iStack16 + 1;\n                in_stack_ffffffd4 = uVar8;\n            } while (!bVar5);\n            uStack28 = 0x401615;\n            fcn.00405700();\n            uStack28 = 0;\n            fcn.00409b00();\n            sub.KERNEL32.DLL_WriteFile();\n            fcn.00409b20();\n            fcn.00405068();\n        }\n    }\n    else {\n        *0x41708c = 1;\n        uStack136 = extraout_EDX;\n        while( true ) {\n            puStack140 = 0x401672;\n            uVar8 = fcn.0040de20();\n            puStack140 = uStack136;\n            uStack144 = 0x40167a;\n            uStack136 = uVar8;\n            puStack140 = fcn.0040de20();\n            uStack144 = 0x41602a;\n            uVar8 = *0x41701c;\n            fcn.004057f0();\n            fcn.0040de60(&stack0xffffff7c, uVar8);\n            puVar7 = puStack140;\n            iVar3 = fcn.00405920();\n            if (iVar3 != 0) {\n                fcn.0040de20();\n                uVar1 = fcn.0040de20();\n                iVar3 = iStack104;\n                fcn.004057f0();\n                puVar7 = &stack0xffffff44;\n                fcn.0040de60(&stack0xffffff70, iVar3);\n                uVar8 = extraout_EDX_01;\n                uVar2 = fcn.0040de20(extraout_EDX_01);\n                uVar8 = fcn.0040de20(uVar8, uVar2);\n                fcn.004057f0(uVar1, 1, 0x41602e, uVar8);\n                fcn.0040de60(&stack0xffffff44, uVar1);\n            }\n            bVar5 = true;\n            fcn.00405120();\n            if (!bVar5) break;\n            uVar4 = iStack24 % 2 == 0;\n            if (uVar4) {\n                uVar6 = fcn.00405980();\n                uStack136 = uVar6 >> 0x20;\n                *(*0x417090 + puVar7 * 0xc + 8) = uVar6;\n            }\n            else {\n                uVar8 = fcn.0040de20();\n                fcn.0040de20();\n                iStack104 = 1;\n                fcn.00405ac0();\n                fcn.0040e020();\n                fcn.00405160();\n                fcn.00405120();\n                if (uVar4) {\n                    uVar8 = fcn.0040de20();\n                    fcn.0040de20();\n                    fcn.00405d40();\n                    arg_8h = &stack0xffffffc0;\n                    fcn.0040de60(arg_8h, puVar7);\n                    fcn.0040de20();\n                    fcn.0040dfc0(uVar8);\n                    iVar3 = *0x417090 + arg_8h * 0xc + 4;\n                    fcn.0040de60(iVar3, uVar8);\n                    uVar8 = fcn.00405980();\n                    *(*0x417090 + iVar3 * 0xc) = uVar8;\n                    uVar8 = *0x417088;\n                    fcn.0040de20();\n                    fcn.0040dfc0(uVar8);\n                    fcn.0040dfc0(*0x417048);\n                    fcn.0040dfc0(*0x417064);\n                    fcn.0040dfc0(iVar3);\n                    uVar8 = 0x416062;\n                    fcn.0040dfc0(0x416062);\n                    uStack136 = 0x40190e;\n                    fcn.0040de60(0x417088, uVar8);\n                    uStack136 = extraout_EDX_03;\n                }\n                else {\n                    uVar1 = *0x417048;\n                    fcn.0040de20();\n                    fcn.0040dfc0(uVar1);\n                    fcn.0040dfc0(*0x417064);\n                    fcn.0040de20();\n                    fcn.0040de20();\n                    uVar2 = 0x416032;\n                    fcn.00405d40();\n                    iVar3 = iStack104;\n                    fcn.0040de60(&stack0xffffffd0, uVar2);\n                    iStack104 = 0x4017f0;\n                    fcn.0040a665(uVar8);\n                    if (*0x41707c == 1) {\n                        fcn.00405980();\n                        fcn.0040a6e5();\n                        iStack104 = iVar3;\n                    }\n                    fcn.00403c3e();\n                    uVar8 = *0x417088;\n                    fcn.0040de20();\n                    fcn.0040dfc0(uVar8);\n                    fcn.0040dfc0(uVar1);\n                    uVar8 = 0x416062;\n                    fcn.0040dfc0(0x416062);\n                    uStack136 = 0x40184c;\n                    fcn.0040de60(0x417088, uVar8);\n                    uStack136 = extraout_EDX_02;\n                }\n            }\n            iStack104 = iStack104 + 1;\n        }\n    }\n    uVar8 = in_stack_ffffffd4;\n    fcn.0040def0(in_stack_ffffffd4);\n    fcn.0040def0(iStack16);\n    fcn.0040def0(uVar8);\n    fcn.0040def0(uStack28);\n    fcn.0040def0(in_stack_ffffffd4);\n    return;\n}\n",
        "token_count": 2045
    },
    "00401fa9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004011a5: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004011aa)\n// WARNING: Removing unreachable block (ram,0x00401fba)\n// WARNING: Removing unreachable block (ram,0x00401fc9)\n\nvoid fcn.00401fa9(void)\n\n{\n    uint arg_8h;\n    uint arg_ch;\n    \n    fcn.0040df60();\n    arg_ch = *0x417068;\n    fcn.0040a787();\n    arg_8h = *0x417058;\n    fcn.0040a787();\n    fcn.004034d1(arg_8h, arg_ch);\n    fcn.0040a787(*0x417038);\n    sub.KERNEL32.DLL_RemoveDirectoryW(*0x417024);\n    sub.KERNEL32.DLL_RemoveDirectoryW(*0x417070);\n    fcn.00405379(0x4011aa, arg_8h);\n    fcn.004098f0();\n    fcn.0040a655();\n    fcn.0040aa30();\n    fcn.0040d264();\n    fcn.00409ad0();\n    return;\n}\n",
        "token_count": 271
    },
    "004021a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004021a4(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t extraout_EDX;\n    uint extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    uint extraout_EDX_02;\n    uint extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    uint extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    uint extraout_EDX_08;\n    int32_t extraout_EDX_09;\n    bool bVar4;\n    uchar uVar5;\n    ulong uVar6;\n    int32_t unaff_retaddr;\n    int32_t iStack148;\n    uint uStack144;\n    int32_t iStack132;\n    uint uStack124;\n    uint uStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0x4021b0;\n    fcn.0040df60();\n    uStack24 = param_2;\n    iStack28 = 0x4021b9;\n    fcn.004051a0();\n    iStack28 = 0x4021c7;\n    uVar6 = fcn.00405100();\n    if (uVar6 == 1) {\n        uStack32 = 0x4021d8;\n        iStack28 = uVar6 >> 0x20;\n        iVar1 = fcn.0040de20();\n        uStack32 = iStack28;\n        uStack36 = 0x4021e0;\n        iStack28 = iVar1;\n        uVar2 = fcn.0040de20();\n        uStack36 = uStack32;\n        uStack40 = 0x4021e8;\n        uStack32 = uVar2;\n        uVar2 = fcn.0040de20();\n        uStack40 = uStack36;\n        uStack44 = 0x4021f0;\n        uStack36 = uVar2;\n        uStack40 = fcn.0040de20();\n        uStack44 = 0x28;\n        unaff_retaddr = unaff_retaddr + 0x40;\n        fcn.00409bb0();\n        fcn.00405182();\n        unaff_retaddr = unaff_retaddr + extraout_EDX;\n        fcn.00406000();\n        uStack56 = 0x40221b;\n        fcn.0040de60(&stack0xffffffd4, unaff_retaddr);\n        uStack60 = 0x402221;\n        uStack56 = extraout_EDX_00;\n        uVar2 = fcn.0040de20();\n        uStack60 = uStack56;\n        uStack64 = 0x402229;\n        uStack56 = uVar2;\n        uVar2 = fcn.0040de20();\n        uStack64 = uStack60;\n        uStack68 = 0x402231;\n        uStack60 = uVar2;\n        uVar2 = fcn.0040de20();\n        uStack68 = uStack64;\n        uStack64 = uVar2;\n        uStack68 = fcn.0040de20();\n        iStack116 = iStack28 + 300;\n        fcn.00409bb0();\n        fcn.00405182();\n        iStack116 = iStack116 + extraout_EDX_01;\n        fcn.00406000();\n        uStack84 = 0x402267;\n        fcn.0040de60(&stack0xffffffbc, iStack116);\n        uStack88 = 0x40226d;\n        uStack84 = extraout_EDX_02;\n        uVar2 = fcn.0040de20();\n        uStack88 = uStack84;\n        iStack92 = 0x402275;\n        uStack84 = uVar2;\n        uVar2 = fcn.0040de20();\n        iStack92 = 1;\n        uStack96 = 0x416020;\n        uStack100 = uStack88;\n        uStack104 = 0x402288;\n        uStack88 = uVar2;\n        uVar2 = fcn.0040de20();\n        uStack104 = uStack100;\n        uStack108 = 0x402290;\n        uStack100 = uVar2;\n        uStack104 = fcn.0040de20();\n        uStack108 = *0x417014;\n        uStack112 = 2;\n        uStack120 = 0x4022a6;\n        fcn.004057f0();\n        uStack120 = 0x4022ab;\n        fcn.0040e020();\n        uStack124 = 0x4022b1;\n        uStack120 = extraout_EDX_03;\n        uVar2 = fcn.0040de20();\n        uStack124 = uStack120;\n        uStack120 = uVar2;\n        uStack124 = fcn.0040de20();\n        iVar1 = iStack92;\n        fcn.004057f0();\n        fcn.00405182();\n        iVar1 = iVar1 + extraout_EDX_04;\n        fcn.00405182();\n        iStack132 = extraout_EDX_05 + 1;\n        fcn.00408f09();\n        uStack144 = 0x4022ef;\n        fcn.0040de60(&stack0xffffff84, iVar1);\n        bVar4 = true;\n        uStack144 = 0x4022fa;\n        fcn.00405120();\n        if (bVar4) {\n            iStack148 = 0x402306;\n            uStack144 = extraout_EDX_06;\n            uVar2 = fcn.0040de20();\n            iStack148 = uStack144;\n            uStack144 = uVar2;\n            uVar3 = fcn.0040de20();\n            uVar2 = iStack148;\n            iStack148 = uVar3;\n            uVar3 = fcn.0040de20(uVar2, 1);\n            uVar2 = fcn.0040de20(uVar2, uVar3);\n            iVar1 = iStack132;\n            fcn.00406000(iStack132, uVar2);\n            fcn.00405182();\n            iVar1 = iVar1 + extraout_EDX_07;\n            uVar5 = iVar1 == 0;\n            fcn.0040d0a0();\n            fcn.0040de60(&stack0xffffff6c, iVar1);\n            fcn.00405120();\n            if (uVar5) {\n                uVar2 = extraout_EDX_08;\n                uVar3 = fcn.0040de20(extraout_EDX_08);\n                uVar3 = fcn.0040de20(uVar2, 0x10, uVar3);\n                uVar2 = fcn.0040de20(uVar2, uVar3);\n                fcn.004057f0(iVar1, 3, *0x417014, uVar2);\n                fcn.0040e020();\n                uVar2 = *0x41705c;\n                fcn.00405182(*0x41705c);\n                fcn.00408dc7(uVar2, iVar1 + extraout_EDX_09);\n                fcn.004051a0();\n                fcn.00401fa9(0);\n            }\n        }\n        else {\n            uStack144 = 0;\n            iStack148 = 0x4023ba;\n            fcn.00401fa9();\n        }\n    }\n    iStack148 = iStack132;\n    uVar2 = fcn.0040de20();\n    iVar1 = iStack148;\n    iStack148 = uVar2;\n    fcn.0040dfc0(iVar1);\n    fcn.00405170(iVar1);\n    fcn.0040def0(uStack144);\n    uVar2 = uStack144;\n    fcn.0040def0(uStack144);\n    fcn.0040def0(uVar2);\n    fcn.0040def0(iStack148);\n    return;\n}\n",
        "token_count": 1992
    },
    "0040240c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040240c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_stack_ffffffd8;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    fcn.00405060(0, 0, 0, 0);\n    fcn.00405060();\n    uVar2 = 0xffffffff;\n    iVar1 = fcn.0040ac50(0xffffffff, uVar3, 0x18);\n    if (iVar1 != 0) {\n        fcn.0040af20(iVar1, uVar3);\n        fcn.0040a970(uVar2);\n        in_stack_ffffffd8 = iVar1;\n    }\n    fcn.00405d80();\n    fcn.0040def0(in_stack_ffffffd8);\n    fcn.0040def0(in_stack_ffffffd8);\n    return;\n}\n",
        "token_count": 205
    },
    "0040249b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040249b(void)\n\n{\n    int32_t iVar1;\n    int32_t iStack28;\n    uint uVar2;\n    \n    uVar2 = 0;\n    fcn.00405060(0, 0, 0);\n    iStack28 = 0x4024bf;\n    iVar1 = fcn.0040ad40(0xffffffff, uVar2, 0x20000);\n    if (iVar1 != 0) {\n        fcn.0040a970();\n        iStack28 = iVar1;\n    }\n    fcn.0040def0(iStack28);\n    return;\n}\n",
        "token_count": 140
    },
    "0040271b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040271b(uint param_1, uint param_2, uint param_3, uint param_4, int32_t param_5, int32_t param_6)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    bool bVar9;\n    ulong uVar10;\n    int32_t unaff_retaddr;\n    uint in_stack_0000002c;\n    int32_t arg_ch;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *arg_8h;\n    \n    iVar8 = 0x11;\n    do {\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    fcn.0040df60();\n    fcn.00405060();\n    param_4 = fcn.00401500();\n    param_5 = 0;\n    do {\n        if (param_5 < param_6) break;\n        fcn.0040de20();\n        uVar1 = fcn.0040de20();\n        fcn.0040de20();\n        iVar2 = fcn.0040de20();\n        iVar8 = *(*0x417090 + param_6 * 0xc + 4);\n        fcn.0040d0a0();\n        fcn.00405182();\n        iVar8 = iVar8 + extraout_EDX;\n        fcn.00405e50();\n        fcn.0040de60(&stack0x00000008, iVar8);\n        fcn.0040de20();\n        fcn.0040de20();\n        arg_ch = unaff_retaddr;\n        fcn.00405db0();\n        arg_8h = &stack0xfffffffc;\n        uStack56 = 0x4027d7;\n        fcn.0040de60(arg_8h, arg_ch);\n        uStack56 = 10;\n        iStack64 = *0x41704c;\n        uStack68 = 0x4027eb;\n        uStack60 = uVar1;\n        sub.KERNEL32.DLL_FindResourceW();\n        iVar7 = *0x41704c;\n        uStack68 = 10;\n        iVar3 = sub.KERNEL32.DLL_FindResourceW();\n        uVar1 = *0x417048;\n        if (iVar8 == 0) {\n            if (iVar3 == 0) {\n                fcn.0040de20();\n                fcn.0040dfc0(uVar1);\n                fcn.0040dfc0(*0x417064);\n                uVar1 = *(*0x417090 + arg_8h * 0xc + 4);\n                fcn.0040dfc0(uVar1);\n                fcn.0040de60(&stack0xffffffe0, uVar1);\n                arg_ch = 0;\n                fcn.004046ff();\n                if (*0x41707c == 1) {\n                    fcn.0040a6e5();\n                }\n            }\n            else {\n                fcn.004026b8();\n                fcn.004046ef();\n                uVar6 = *0x417040;\n                fcn.004011de();\n                iVar8 = fcn.00409c40();\n                fcn.00409c40();\n                fcn.00409b40();\n                uVar5 = *0x417048;\n                iVar4 = fcn.0040de20();\n                fcn.0040dfc0(uVar5);\n                fcn.0040dfc0(*0x417064);\n                uVar1 = *(*0x417090 + iVar8 * 0xc + 4);\n                fcn.0040dfc0(uVar1);\n                fcn.0040de60(&stack0xffffffbc, uVar1);\n                if (iVar2 != 0) {\n                    uStack68 = fcn.0040e720(iVar2, &stack0xffffff88, iVar3 + 0x10, extraout_EDX_00);\n                    fcn.004046ff(iVar7, iVar2, uVar5, iVar4);\n                    if (*0x41707c == 1) {\n                        fcn.0040a6e5(uVar6, *(*0x417090 + iVar4 * 0xc));\n                    }\n                    fcn.00409b20();\n                }\n            }\n        }\n        else {\n            fcn.004026b8();\n            fcn.004046ef();\n            uVar1 = *0x417048;\n            fcn.0040de20();\n            fcn.0040dfc0(uVar1);\n            fcn.0040dfc0(*0x417064);\n            iVar7 = *(*0x417090 + iStack64 * 0xc + 4);\n            fcn.0040dfc0(iVar7);\n            fcn.0040de60(&stack0xffffffd4, iVar7);\n            uVar1 = *0x417040;\n            arg_ch = iVar7;\n            fcn.004011de();\n            fcn.004046ff(iStack64, uStack68, iVar7, uVar1);\n            if (*0x41707c == 1) {\n                fcn.0040a6e5(iVar8, *(*0x417090 + arg_ch * 0xc));\n            }\n        }\n        uVar10 = fcn.0040249b(iStack64);\n        uVar1 = uVar10 >> 0x20;\n        if (uVar10 != 0) {\n            *0x417078 = *0x417078 + 1;\n            uVar5 = fcn.0040de20(uVar1);\n            uVar1 = fcn.0040de20(uVar1, uVar5);\n            fcn.00402bfa(uStack68, uVar1);\n            fcn.0040e020();\n            uVar5 = *0x417080;\n            uVar6 = fcn.0040de20();\n            fcn.0040dfc0(uVar5);\n            uVar1 = extraout_EDX_01;\n            uVar5 = fcn.0040de20(extraout_EDX_01, uVar5, uVar6);\n            iVar7 = fcn.0040de20(uVar1, uVar5);\n            iVar8 = *0x417078 >> 0x1f;\n            fcn.00406100(*0x417078, iVar8, iVar7);\n            fcn.00405182();\n            iVar8 = iVar8 + extraout_EDX_02;\n            fcn.00405182(iVar8);\n            fcn.00409860(iVar8, iVar7 + extraout_EDX_03);\n            fcn.004051a0();\n            fcn.0040a494(*0x4170a0);\n            fcn.0040de20();\n            fcn.0040dfc0(arg_ch);\n            fcn.0040de60(*0x4170a4 + 8, arg_ch);\n        }\n        bVar9 = SCARRY4(param_6, 1);\n        param_6 = param_6 + 1;\n    } while (!bVar9);\n    fcn.00409b20();\n    fcn.0040de20();\n    fcn.0040de20();\n    fcn.0040de20();\n    fcn.00406100();\n    fcn.0040e020();\n    fcn.00405182();\n    fcn.00409860();\n    fcn.004051a0();\n    fcn.00401500();\n    fcn.0040def0(unaff_retaddr);\n    fcn.0040def0(unaff_retaddr);\n    uVar1 = param_3;\n    fcn.0040def0(param_3);\n    uStack56 = 0x402bb9;\n    fcn.0040def0(uVar1);\n    return;\n}\n",
        "token_count": 1832
    },
    "00402bc1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.00402bc1(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 9;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.0040df60();\n    sub.KERNEL32.DLL_GetNativeSystemInfo();\n    return *0x10 != 4;\n}\n",
        "token_count": 82
    },
    "00402ca9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402ca9(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    uint extraout_EDX_02;\n    bool bVar4;\n    ulong uVar5;\n    uint in_stack_ffffff60;\n    int32_t in_stack_ffffff64;\n    uint arg_ch;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *in_stack_ffffffd4;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    int32_t iStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    iStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0x402cb7;\n    fcn.0040df60();\n    uStack32 = 0x402cc3;\n    fcn.00405060();\n    uStack48 = extraout_EDX;\n    if (iStack24 == 1) {\n        uStack36 = 0x402cd2;\n        uStack32 = extraout_EDX;\n        uVar1 = fcn.0040de20();\n        uStack36 = uStack32;\n        uStack32 = uVar1;\n        uStack36 = fcn.0040de20();\n        uVar1 = uStack28;\n        fcn.00409b60();\n        in_stack_ffffffd4 = &stack0xffffffdc;\n        uStack48 = 0x402cf0;\n        fcn.0040de60(in_stack_ffffffd4, uVar1);\n        uStack48 = extraout_EDX_00;\n    }\n    uStack52 = 0x402cf6;\n    uVar1 = fcn.0040de20();\n    uStack52 = uStack48;\n    uStack56 = 0x402cfe;\n    uStack48 = uVar1;\n    uVar1 = fcn.0040de20();\n    uStack56 = uStack52;\n    uStack52 = uVar1;\n    uVar2 = fcn.0040de20();\n    uVar1 = uStack56;\n    uStack56 = uVar2;\n    uVar1 = fcn.0040de20(uVar1);\n    uVar2 = 1;\n    fcn.0040d0a0(in_stack_ffffffd4, 1, uVar1);\n    fcn.00405182();\n    in_stack_ffffffd4 = in_stack_ffffffd4 + extraout_EDX_01;\n    fcn.00405e50();\n    fcn.0040de60(&stack0xffffffc8, in_stack_ffffffd4);\n    iVar3 = sub.KERNEL32.DLL_FindResourceW(*0x41704c, uVar2, 10);\n    if (iVar3 != 0) {\n        arg_ch = *0x41704c;\n        uVar1 = fcn.004026b8(*0x41704c, iVar3);\n        *0x417018 = fcn.004046ef(uVar1);\n        fcn.004011de(uVar2, *0x417018, *0x417040);\n        uVar1 = extraout_EDX_02;\n        uVar2 = fcn.0040de20(extraout_EDX_02);\n        uVar1 = fcn.0040de20(uVar1, uVar2);\n        fcn.00409bb0(arg_ch, *0x417018, uVar1);\n        fcn.0040de60(0x41701c, arg_ch);\n        fcn.00409b20(uVar2);\n        uVar5 = fcn.00405920(*0x41701c, 0x41603a);\n        uVar1 = fcn.0040de20(uVar5 >> 0x20);\n        iVar3 = uVar5;\n        uVar1 = fcn.0040de20(uVar5 >> 0x20, uVar1);\n        in_stack_ffffff64 = *0x41701c;\n        fcn.00405ec0(*0x41701c, iVar3 + -1, uVar1);\n        in_stack_ffffff60 = 0x41701c;\n        fcn.0040de60(0x41701c, in_stack_ffffff64);\n    }\n    bVar4 = true;\n    fcn.00405120();\n    if (bVar4) {\n        if (in_stack_ffffff64 == 1) {\n            *0x417010 = fcn.00405492(fcn.0040271b, in_stack_ffffff60);\n        }\n        else {\n            fcn.0040271b(in_stack_ffffff60);\n        }\n    }\n    fcn.0040def0(in_stack_ffffff60);\n    fcn.0040def0(in_stack_ffffff64);\n    return;\n}\n",
        "token_count": 1145
    },
    "00402e9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00402e9d(void)\n\n{\n    uint uVar1;\n    uint in_stack_ffffffd4;\n    uint uStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0;\n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0x402eaa;\n    fcn.0040df60();\n    uStack28 = 0x402eb6;\n    fcn.00405060();\n    uStack28 = 10;\n    iStack32 = uStack24;\n    uStack36 = *0x41704c;\n    iStack32 = sub.KERNEL32.DLL_FindResourceW();\n    if (iStack32 != 0) {\n        in_stack_ffffffd4 = *0x41704c;\n        uStack36 = fcn.004026b8(*0x41704c, iStack32);\n        *0x417018 = fcn.004046ef(uStack36);\n    }\n    uVar1 = fcn.00409b40();\n    uStack36 = 0x200;\n    iStack32 = fcn.0040e720(uVar1, &stack0xffffffdc, in_stack_ffffffd4, *0x417018);\n    fcn.0040def0(0x200);\n    return;\n}\n",
        "token_count": 361
    },
    "004034d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004034d1(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.0040df60(0);\n    if (*0x417028 == 1) {\n        iVar1 = fcn.0040a3e3(*0x4170a0);\n        if (0 < iVar1) {\n            fcn.0040a3ed(*0x4170a0);\n            while( true ) {\n                iVar1 = fcn.0040a402(*0x4170a0);\n                if (iVar1 == 0) break;\n                fcn.0040a787();\n            }\n        }\n        iVar1 = fcn.0040a3e3(*0x417098);\n        if (0 < iVar1) {\n            fcn.00406f50(*0x417098, 1, 0, 5);\n            fcn.0040a3ed(*0x417098);\n            while( true ) {\n                iVar1 = fcn.0040a402(*0x417098);\n                if (iVar1 == 0) break;\n                sub.KERNEL32.DLL_RemoveDirectoryW();\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 272
    },
    "00403c3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00403c3e(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t in_stack_ffffffd4;\n    uint uVar4;\n    uint uVar5;\n    \n    uVar5 = 0;\n    fcn.0040df60(0);\n    fcn.00405060();\n    uVar4 = *0x4170b0;\n    piVar2 = fcn.00409e4d(*0x4170b0, uVar5);\n    if (*piVar2 < 1) {\n        puVar3 = fcn.00409e4d(*0x4170b0, uVar4);\n        *puVar3 = 1;\n        uVar4 = *0x417098;\n        fcn.0040a494();\n        fcn.0040de20();\n        fcn.0040dfc0(uVar4);\n        iVar1 = *0x41709c;\n        in_stack_ffffffd4 = *0x41709c + 0xc;\n        fcn.0040de60(in_stack_ffffffd4, uVar4);\n        *(iVar1 + 8) = *0x417084;\n        *0x417084 = *0x417084 + 1;\n    }\n    fcn.0040def0(in_stack_ffffffd4);\n    return;\n}\n",
        "token_count": 313
    },
    "00403cd7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403cd7(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ushort *puVar3;\n    uint extraout_EDX;\n    uint uStack92;\n    uchar *in_stack_ffffffac;\n    uint uVar4;\n    int32_t in_stack_ffffffb4;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    int32_t iStack40;\n    uint uStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0x403ce3;\n    fcn.0040df60();\n    uStack24 = param_3;\n    uStack28 = 0x403cec;\n    fcn.004051a0();\n    uStack28 = 0x403cf8;\n    fcn.00405060();\n    uStack28 = 10;\n    iStack32 = uStack24;\n    uStack36 = *0x41704c;\n    iStack40 = 0x403d0c;\n    iStack32 = sub.KERNEL32.DLL_FindResourceW();\n    if (iStack32 != 0) {\n        uStack44 = *0x41704c;\n        uStack48 = 0x403d2a;\n        iStack40 = iStack32;\n        uStack48 = fcn.004026b8();\n        uStack52 = 0x403d37;\n        uStack36 = uStack48;\n        *0x417018 = fcn.004046ef();\n        uStack52 = *0x417040;\n        iStack60 = iStack40;\n        iStack64 = 0x403d51;\n        iStack56 = *0x417018;\n        fcn.004011de();\n        if (iStack32 == 1) {\n            iStack64 = *0x417018 >> 0x1f;\n            iVar1 = *0x417018;\n            fcn.004046ff(*0x417058, uStack52, *0x417018);\n            fcn.00409b20(iVar1);\n            in_stack_ffffffac = 0x403dd6;\n            puVar3 = fcn.0040e050();\n            *puVar3 = 0;\n            goto code_r0x00403ddb;\n        }\n        iStack64 = extraout_EDX;\n        iVar1 = fcn.0040de20();\n        uVar4 = iStack64;\n        iStack64 = iVar1;\n        uVar2 = fcn.0040de20(uVar4);\n        uVar4 = uStack52;\n        in_stack_ffffffb4 = *0x417018;\n        fcn.00409c50(uStack52, *0x417018, 2, uVar2);\n        in_stack_ffffffac = &stack0xffffffc0;\n        fcn.0040de60(in_stack_ffffffac, uVar4);\n        fcn.00409b20(in_stack_ffffffb4);\n    }\n    uStack92 = fcn.0040de20();\n    fcn.0040dfc0(in_stack_ffffffb4);\n    fcn.00405170(in_stack_ffffffb4);\ncode_r0x00403ddb:\n    fcn.0040def0(uStack92);\n    fcn.0040def0(in_stack_ffffffac);\n    return;\n}\n",
        "token_count": 842
    },
    "00403df3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00403df3(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    uint extraout_EDX_02;\n    uint extraout_EDX_03;\n    uint extraout_EDX_04;\n    uint extraout_EDX_05;\n    uint extraout_EDX_06;\n    uint extraout_EDX_07;\n    uint extraout_EDX_08;\n    int32_t extraout_EDX_09;\n    int32_t extraout_EDX_10;\n    uint extraout_EDX_11;\n    uint extraout_EDX_12;\n    uint extraout_EDX_13;\n    int32_t extraout_EDX_14;\n    int32_t extraout_EDX_15;\n    int32_t extraout_EDX_16;\n    int32_t iVar8;\n    ulong uVar9;\n    int32_t unaff_retaddr;\n    int32_t noname_9;\n    uint arg_18h;\n    uchar *puVar10;\n    uint noname_11;\n    uint uStack132;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack8;\n    uchar *puVar11;\n    \n    iVar7 = 0xf;\n    do {\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    fcn.0040df60();\n    *0x41702c = 0x41609a;\n    puVar11 = NULL;\n    uStack8 = extraout_EDX;\n    do {\n        if (0x19 < puVar11) break;\n        unaff_retaddr = **0x41702c;\n        *0x41702c = *0x41702c + 1;\n        uStack8 = fcn.0040de20();\n        fcn.0040de20();\n        iVar7 = -unaff_retaddr;\n        fcn.00405d60();\n        fcn.0040de60(&stack0xfffffffc, iVar7);\n        uVar2 = uStack8;\n        fcn.0040de20();\n        fcn.0040dfc0(uVar2);\n        fcn.0040dfc0(iVar7);\n        puVar10 = &stack0xfffffff0;\n        uStack40 = 0x403e87;\n        fcn.0040de60(puVar10, iVar7);\n        puVar11 = puVar10 + 1;\n        uStack8 = extraout_EDX_00;\n    } while (!SCARRY4(puVar10, 1));\n    *0x41702c = 0x4160fe;\n    puVar11 = NULL;\n    do {\n        if (2 < puVar11) break;\n        unaff_retaddr = **0x41702c;\n        *0x41702c = *0x41702c + 1;\n        uStack8 = fcn.0040de20();\n        fcn.0040de20();\n        iVar7 = -unaff_retaddr;\n        fcn.00405d60();\n        fcn.0040de60(&stack0xfffffffc, iVar7);\n        fcn.0040de20();\n        fcn.0040dfc0(puVar11);\n        fcn.0040dfc0(iVar7);\n        puVar10 = &stack0xfffffff4;\n        uStack40 = 0x403f08;\n        fcn.0040de60(puVar10, iVar7);\n        puVar11 = puVar10 + 1;\n        uStack8 = extraout_EDX_01;\n    } while (!SCARRY4(puVar10, 1));\n    *0x41702c = 0x416103;\n    puVar11 = NULL;\n    do {\n        if (3 < puVar11) break;\n        iVar7 = **0x41702c;\n        *0x41702c = *0x41702c + 1;\n        uStack8 = fcn.0040de20();\n        fcn.0040de20();\n        iVar8 = -iVar7;\n        fcn.00405d60();\n        fcn.0040de60(&stack0xfffffffc, iVar8);\n        unaff_retaddr = iVar7;\n        fcn.0040de20();\n        fcn.0040dfc0(iVar7);\n        fcn.0040dfc0(iVar8);\n        puVar10 = &stack0xfffffff8;\n        uStack40 = 0x403f89;\n        fcn.0040de60(puVar10, iVar8);\n        puVar11 = puVar10 + 1;\n        uStack8 = extraout_EDX_02;\n    } while (!SCARRY4(puVar10, 1));\n    *0x41702c = 0x416101;\n    puVar11 = NULL;\n    do {\n        puVar10 = &stack0xfffffffc;\n        if (1 < puVar11) break;\n        unaff_retaddr = **0x41702c;\n        *0x41702c = *0x41702c + 1;\n        uStack8 = fcn.0040de20();\n        fcn.0040de20();\n        iVar7 = -unaff_retaddr;\n        fcn.00405d60();\n        fcn.0040de60(&stack0xfffffffc, iVar7);\n        uVar2 = param_1;\n        fcn.0040de20();\n        fcn.0040dfc0(uVar2);\n        fcn.0040dfc0(iVar7);\n        uStack40 = 0x40400a;\n        fcn.0040de60(&stack0xfffffffc, iVar7);\n        puVar11 = puVar10 + 1;\n        uStack8 = extraout_EDX_03;\n    } while (!SCARRY4(puVar10, 1));\n    *0x41702c = 0x4160d7;\n    puVar11 = NULL;\n    do {\n        if (0xd < puVar11) break;\n        unaff_retaddr = **0x41702c;\n        *0x41702c = *0x41702c + 1;\n        uStack8 = fcn.0040de20();\n        fcn.0040de20();\n        iVar7 = -unaff_retaddr;\n        fcn.00405d60();\n        fcn.0040de60(&stack0xfffffffc, iVar7);\n        uVar2 = param_2;\n        fcn.0040de20();\n        fcn.0040dfc0(uVar2);\n        fcn.0040dfc0(iVar7);\n        uStack40 = 0x40408b;\n        puVar10 = *0x10;\n        fcn.0040de60(*0x10, iVar7);\n        puVar11 = puVar10 + 1;\n        uStack8 = extraout_EDX_04;\n    } while (!SCARRY4(puVar10, 1));\n    *0x41702c = 0x4160e5;\n    iVar7 = 0;\n    do {\n        if (0xe < iVar7) break;\n        unaff_retaddr = **0x41702c;\n        *0x41702c = *0x41702c + 1;\n        uStack8 = fcn.0040de20();\n        fcn.0040de20();\n        iVar7 = -unaff_retaddr;\n        fcn.00405d60();\n        fcn.0040de60(&stack0xfffffffc, iVar7);\n        uVar2 = *0x417030;\n        fcn.0040de20();\n        fcn.0040dfc0(uVar2);\n        fcn.0040dfc0(iVar7);\n        iVar8 = 0x417030;\n        uStack40 = 0x404110;\n        fcn.0040de60(0x417030, iVar7);\n        iVar7 = iVar8 + 1;\n        uStack8 = extraout_EDX_05;\n    } while (!SCARRY4(iVar8, 1));\n    *0x41702c = 0x4160f4;\n    iVar7 = 0;\n    do {\n        if (9 < iVar7) break;\n        unaff_retaddr = **0x41702c;\n        *0x41702c = *0x41702c + 1;\n        uStack8 = fcn.0040de20();\n        fcn.0040de20();\n        iVar7 = -unaff_retaddr;\n        fcn.00405d60();\n        fcn.0040de60(&stack0xfffffffc, iVar7);\n        uVar2 = *0x417080;\n        fcn.0040de20();\n        fcn.0040dfc0(uVar2);\n        fcn.0040dfc0(iVar7);\n        iVar8 = 0x417080;\n        uStack40 = 0x404195;\n        fcn.0040de60(0x417080, iVar7);\n        iVar7 = iVar8 + 1;\n        uStack8 = extraout_EDX_06;\n    } while (!SCARRY4(iVar8, 1));\n    *0x41702c = 0x41608c;\n    iVar7 = 0;\n    do {\n        if (4 < iVar7) break;\n        unaff_retaddr = **0x41702c;\n        *0x41702c = *0x41702c + 1;\n        uStack8 = fcn.0040de20();\n        fcn.0040de20();\n        iVar7 = -unaff_retaddr;\n        fcn.00405d60();\n        fcn.0040de60(&stack0xfffffffc, iVar7);\n        uVar2 = *0x41705c;\n        fcn.0040de20();\n        fcn.0040dfc0(uVar2);\n        fcn.0040dfc0(iVar7);\n        iVar8 = 0x41705c;\n        uStack40 = 0x40421a;\n        fcn.0040de60(0x41705c, iVar7);\n        iVar7 = iVar8 + 1;\n        uStack8 = extraout_EDX_07;\n    } while (!SCARRY4(iVar8, 1));\n    *0x41702c = 0x41610b;\n    iVar7 = 0;\n    do {\n        if (3 < iVar7) break;\n        unaff_retaddr = **0x41702c;\n        *0x41702c = *0x41702c + 1;\n        uStack8 = fcn.0040de20();\n        fcn.0040de20();\n        iVar7 = -unaff_retaddr;\n        fcn.00405d60();\n        fcn.0040de60(&stack0xfffffffc, iVar7);\n        uVar2 = *0x417058;\n        fcn.0040de20();\n        fcn.0040dfc0(uVar2);\n        fcn.0040dfc0(iVar7);\n        iVar8 = 0x417058;\n        uStack40 = 0x40429f;\n        fcn.0040de60(0x417058, iVar7);\n        iVar7 = iVar8 + 1;\n        uStack8 = extraout_EDX_08;\n    } while (!SCARRY4(iVar8, 1));\n    uStack8 = *0x417058;\n    uVar1 = fcn.0040de20();\n    uVar2 = uStack8;\n    uStack8 = uVar1;\n    fcn.0040dfc0(uVar2);\n    uVar2 = param_3;\n    fcn.0040dfc0(param_3);\n    fcn.0040de60(0x417058, uVar2);\n    fcn.0040de20();\n    fcn.00403275();\n    uStack40 = 0x4042ed;\n    fcn.0040de60(&stack0x00000004, iVar7);\n    uStack40 = 0x4042f2;\n    fcn.004097fe();\n    uStack40 = 0;\n    uStack44 = 0x404300;\n    uVar9 = sub.KERNEL32.DLL_GetModuleHandleW();\n    uStack48 = 0x40430b;\n    uVar2 = fcn.0040de20();\n    uStack44 = uVar9 >> 0x20;\n    *0x41704c = uVar9;\n    uStack48 = uStack44;\n    uStack44 = uVar2;\n    uStack48 = fcn.0040de20();\n    fcn.0040de20();\n    fcn.0040de20();\n    iVar7 = *0x417040;\n    fcn.0040d0a0();\n    fcn.00405182();\n    iVar7 = iVar7 + extraout_EDX_09;\n    fcn.00405e50();\n    fcn.0040de60(&stack0xffffffec, iVar7);\n    fcn.0040de20();\n    fcn.0040de20();\n    fcn.0040de20();\n    fcn.0040de20();\n    fcn.0040d0a0();\n    fcn.00405182();\n    unaff_retaddr = unaff_retaddr + extraout_EDX_10;\n    fcn.00405e50();\n    fcn.0040de60(&stack0xffffffd0, unaff_retaddr);\n    fcn.00402e9d();\n    fcn.0040de20();\n    fcn.004021a4();\n    fcn.004051a0();\n    fcn.0040195b();\n    fcn.0040460e();\n    fcn.0040de20();\n    uVar2 = fcn.00405100();\n    fcn.0040358d();\n    uStack132 = 0x4043ee;\n    fcn.0040de60(0x417048, uVar2);\n    uStack132 = *0x417048;\n    sub.SHLWAPI.DLL_PathRemoveBackslashW();\n    fcn.0040213e();\n    uVar1 = fcn.0040de20();\n    uVar3 = fcn.0040de20();\n    fcn.00402bfa();\n    fcn.0040e020();\n    fcn.00405182();\n    fcn.00409860();\n    fcn.004051a0();\n    uVar2 = *0x417024;\n    uVar4 = fcn.0040de20();\n    fcn.0040dfc0(uVar2);\n    uVar2 = *0x417058;\n    fcn.0040dfc0(*0x417058);\n    noname_11 = 0x417058;\n    fcn.0040de60(0x417058, uVar2);\n    uVar5 = fcn.0040de20(extraout_EDX_11);\n    uVar2 = uStack132;\n    fcn.00401e55(uStack132, uVar5);\n    puVar11 = &stack0xffffff84;\n    fcn.0040de60(puVar11, uVar2);\n    fcn.00403855();\n    uVar2 = *0x417038;\n    uVar5 = fcn.0040de20();\n    fcn.0040dfc0(uVar2);\n    fcn.0040de60(&stack0xffffff7c, uVar2);\n    sub.SHLWAPI.DLL_PathQuoteSpacesW(uVar1);\n    uVar2 = fcn.0040de20();\n    fcn.0040dfc0(uVar3);\n    iVar7 = 0x416026;\n    fcn.0040dfc0(0x416026);\n    fcn.0040dfc0(uVar4);\n    puVar10 = &stack0xffffff60;\n    fcn.0040de60(puVar10, uVar4);\n    sub.SHLWAPI.DLL_PathQuoteSpacesW();\n    if (*0x417060 == 1) {\n        uVar9 = fcn.00405492(fcn.00402ca9);\n    }\n    else {\n        fcn.00402ca9();\n        uVar9 = CONCAT44(extraout_EDX_12, *0x417010);\n    }\n    *0x417010 = uVar9;\n    iVar8 = fcn.0040de20(uVar9 >> 0x20);\n    uVar3 = fcn.0040de20();\n    fcn.0040dfc0(uVar2);\n    arg_18h = 0x416026;\n    fcn.0040dfc0(0x416026);\n    fcn.0040dfc0(uVar5);\n    fcn.0040e020();\n    uVar1 = extraout_EDX_13;\n    uVar4 = fcn.0040de20(extraout_EDX_13);\n    uVar1 = fcn.0040de20(uVar1);\n    fcn.0040a795();\n    fcn.0040e020();\n    iVar6 = fcn.0040de20();\n    fcn.0040dfc0(iVar7);\n    noname_9 = iVar8;\n    fcn.0040dfc0(iVar8);\n    fcn.00405182();\n    iVar8 = iVar8 + extraout_EDX_14;\n    fcn.00405182();\n    iVar7 = iVar7 + extraout_EDX_15;\n    fcn.00405182();\n    fcn.00402022(iVar8, iVar7, iVar6 + extraout_EDX_16, uVar1, uVar4, uVar5, arg_18h, uVar2, uVar3, noname_9, puVar11, \n                 noname_11, puVar10);\n    uVar2 = fcn.004051a0();\n    fcn.00401fa9();\n    fcn.0040def0(noname_9);\n    fcn.0040def0(puVar11);\n    iVar7 = iVar8;\n    fcn.0040def0(iVar8);\n    fcn.0040def0(iVar7);\n    fcn.0040def0(puVar11);\n    fcn.0040def0(uVar2);\n    fcn.0040def0(arg_18h);\n    fcn.0040def0(iVar7);\n    fcn.0040def0(noname_9);\n    fcn.0040def0(iVar8);\n    return;\n}\n",
        "token_count": 4193
    },
    "004046ff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004046ff(int32_t param_1)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t unaff_retaddr;\n    uint uStack32;\n    \n    fcn.0040df60();\n    uStack32 = 0x404719;\n    fcn.00405060();\n    if (*0x417044 != 1) {\n        uStack32 = 0;\n        iVar2 = fcn.0040249b();\n        if (iVar2 != 0) {\n            bVar1 = true;\n            goto code_r0x00404739;\n        }\n    }\n    bVar1 = false;\ncode_r0x00404739:\n    if ((!bVar1) && (iVar2 = fcn.0040ac70(0xffffffff, uStack32),  iVar2 != 0)) {\n        if ((param_1 < 1) && ((param_1 < 0 || (unaff_retaddr == 0)))) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n        if (bVar1) {\n            fcn.0040af50(iVar2, unaff_EBX, unaff_retaddr);\n        }\n        uStack32 = 0;\n        fcn.0040a970();\n    }\n    fcn.0040def0(uStack32);\n    return;\n}\n",
        "token_count": 310
    },
    "00405532": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405532(void)\n\n{\n    if (*0x4170c0 == 0) {\n        (*_sym.imp.WINMM.DLL_timeBeginPeriod)(1);\n        *0x4170c0 = 1;\n    }\n    // WARNING: Could not recover jumptable at 0x0040554d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.DLL_Sleep)();\n    return;\n}\n",
        "token_count": 106
    },
    "0040559a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040559a(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStack844;\n    int32_t iStack840;\n    int32_t iStack832;\n    uchar auStack572 [4];\n    int32_t iStack568;\n    int32_t iStack564;\n    char cStack290;\n    uint auStack288 [70];\n    char cStack6;\n    \n    iStack844 = 0x114;\n    iVar4 = 200;\n    iVar3 = 0;\n    iVar5 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.DLL_GetVersionExW)(&iStack844);\n    if (iVar2 == 0) {\n        return 200;\n    }\n    if (iStack832 == 1) {\n        if (iStack840 == 0) {\n            return 10;\n        }\n        if (iStack840 != 10) {\n            if (iStack840 != 0x5a) {\n                return 200;\n            }\n            return 0x28;\n        }\n        return 0x1e;\n    }\n    if (iStack832 != 2) {\n        return 200;\n    }\n    uVar1 = 0;\n    iVar2 = fcn.00405553(auStack572);\n    if (iVar2 == 0) {\n        auStack288[0] = 0x11c;\n        iVar2 = (*_sym.imp.KERNEL32.DLL_GetVersionExW)(auStack288);\n        iStack568 = iStack844;\n        iStack564 = iStack840;\n        cStack290 = cStack6;\n        if (iVar2 == 0) goto code_r0x00405638;\n    }\n    iVar3 = iStack568;\n    iVar5 = iStack564;\n    if (cStack290 == '\\x01') {\n        uVar1 = 1;\n    }\ncode_r0x00405638:\n    if (iVar3 == 3) {\n        iVar4 = 5;\n    }\n    else if (iVar3 == 4) {\n        iVar4 = 0x14;\n    }\n    else if (iVar3 == 5) {\n        if (iVar5 == 0) {\n            iVar4 = 0x32;\n        }\n        else if (iVar5 == 1) {\n            iVar4 = 0x3c;\n        }\n        else if (iVar5 == 2) {\n            iVar4 = (-uVar1 & 0xfffffffb) + 0x41;\n        }\n    }\n    else if (iVar3 == 6) {\n        if (iVar5 == 0) {\n            iVar4 = (-uVar1 & 0xfffffffb) + 0x4b;\n        }\n        else if (iVar5 == 1) {\n            iVar4 = (-uVar1 & 0xfffffffb) + 0x55;\n        }\n        else if (iVar5 == 2) {\n            iVar4 = (-uVar1 & 0xfffffffb) + 0x5f;\n        }\n        else if (iVar5 == 3) {\n            iVar4 = (-uVar1 & 0xfffffffb) + 0x69;\n        }\n    }\n    else if ((iVar3 == 10) && (iVar5 == 0)) {\n        iVar4 = 0x6e;\n    }\n    return iVar4;\n}\n",
        "token_count": 764
    },
    "00405760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00405760(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    if ((param_1 == NULL) || (param_2 == NULL)) {\n        return 0;\n    }\n    if ((*param_2 == 0) || (iVar3 = *param_1,  iVar3 == 0)) {\n        return 0;\n    }\n    do {\n        param_1 = param_1 + 1;\n        if (iVar3 == *param_2) {\n            piVar4 = param_2 + 1;\n            iVar3 = *param_1;\n            piVar2 = param_1;\n            while (iVar3 != 0) {\n                if (*piVar4 == 0) goto code_r0x004057c2;\n                if (iVar3 != *piVar4) break;\n                piVar1 = piVar2 + 1;\n                piVar2 = piVar2 + 1;\n                piVar4 = piVar4 + 1;\n                iVar3 = *piVar1;\n            }\n            if (*piVar4 == 0) {\ncode_r0x004057c2:\n                iVar5 = iVar5 + 1;\n                param_1 = piVar2;\n            }\n        }\n        iVar3 = *param_1;\n        if (iVar3 == 0) {\n            return iVar5;\n        }\n    } while( true );\n}\n",
        "token_count": 359
    },
    "004057f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004057f0(int16_t *param_1, int32_t param_2, int16_t *param_3, uint param_4)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int32_t arg_8h;\n    int16_t *arg_8h_00;\n    int32_t iVar6;\n    \n    arg_8h = 0;\n    if (param_2 < 1) {\n        fcn.0040e2a0(param_4);\n        return;\n    }\n    if (param_1 == NULL) {\n        param_1 = 0x412024;\n    }\n    if (param_3 == NULL) {\n        param_3 = 0x412024;\n    }\n    iVar6 = 0;\n    arg_8h_00 = param_1;\n    if ((*param_3 == 0) || (param_3[1] == 0)) {\n        do {\n            iVar1 = *arg_8h_00;\n            if ((iVar1 == *param_3) || (iVar1 == 0)) {\n                iVar6 = iVar6 + 1;\n                if (iVar6 == param_2) {\n                    arg_8h = arg_8h_00 - param_1 >> 1;\n                    goto code_r0x004058c1;\n                }\n                if (iVar1 == 0) goto code_r0x004058c1;\n                param_1 = arg_8h_00 + 1;\n            }\n            arg_8h_00 = arg_8h_00 + 1;\n        } while( true );\n    }\n    piVar4 = param_3;\n    do {\n        iVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n    } while (iVar1 != 0);\n    iVar5 = piVar4 - (param_3 + 1) >> 1;\n    while( true ) {\n        for (; (iVar2 = sub.MSVCRT.dll_wcsncmp(arg_8h_00, param_3, iVar5),  iVar2 != 0 && (*arg_8h_00 != 0));\n            arg_8h_00 = arg_8h_00 + 1) {\n        }\n        iVar6 = iVar6 + 1;\n        if (iVar6 == param_2) break;\n        if (*arg_8h_00 == 0) goto code_r0x004058c1;\n        arg_8h_00 = arg_8h_00 + iVar5;\n        param_1 = arg_8h_00;\n    }\n    arg_8h = arg_8h_00 - param_1 >> 1;\ncode_r0x004058c1:\n    iVar6 = fcn.0040e180(arg_8h_00);\n    if (iVar6 != 0) {\n        uVar3 = fcn.0040e1d0(param_3);\n        sub.MSVCRT.dll_memmove(uVar3, param_1, arg_8h * 2);\n    }\n    iVar5 = fcn.0040e200(arg_8h, param_3);\n    if (iVar6 == 0) {\n        sub.MSVCRT.dll_wcsncpy(iVar5, param_1, arg_8h);\n    }\n    *(iVar5 + arg_8h * 2) = 0;\n    return;\n}\n",
        "token_count": 774
    },
    "00405920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00405920(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 1;\n    if ((((param_1 != NULL) && (param_2 != NULL)) && (*param_1 != 0)) && (piVar1 = param_1,  *param_2 != 0)) {\n        do {\n            piVar1 = piVar1 + 1;\n        } while (*piVar1 != 0);\n        iVar2 = piVar1 - param_1 >> 1;\n        if (iVar2 < 1) {\n            iVar3 = iVar2 + 1;\n        }\n        iVar3 = sub.MSVCRT.dll_wcsstr(param_1 + iVar3 + -1, param_2);\n        if (iVar3 != 0) {\n            return (iVar3 - param_1 >> 1) + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 231
    },
    "00405b40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405b40(code *param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int32_t iVar8;\n    int32_t arg_8h;\n    int16_t *piVar9;\n    int16_t *piVar10;\n    int16_t *piVar11;\n    int32_t iStack12;\n    uint8_t uStack8;\n    int16_t *piStack4;\n    \n    if (param_1 == NULL) {\n        arg_8h = 0;\n    }\n    else {\n        piVar4 = param_1;\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        arg_8h = piVar4 - (param_1 + 2) >> 1;\n    }\n    fcn.0040e180(param_1);\n    iVar2 = fcn.0040e180(param_1);\n    piVar3 = fcn.0040e200(arg_8h, param_4);\n    piVar4 = param_1;\n    if (iStack12 != 0) {\n        piVar4 = fcn.0040e2d0(iStack12);\n        param_1 = fcn.0040e2d0(iStack12);\n    }\n    piVar7 = piVar3;\n    if ((piVar4 != NULL) && (*piVar4 != 0)) {\n        if ((param_1 == NULL) || (*param_1 == 0)) {\n            piVar7 = piVar4;\n            do {\n                iVar1 = *piVar7;\n                piVar7 = piVar7 + 1;\n                *(piVar3 + (-2 - piVar4) + piVar7) = iVar1;\n            } while (iVar1 != 0);\n            piVar7 = piVar3 + arg_8h;\n        }\n        else {\n            piVar7 = param_1;\n            do {\n                iVar1 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar1 != 0);\n            iVar8 = piVar7 - (param_1 + 2) >> 1;\n            piVar5 = param_1;\n            piVar9 = piStack4;\n            piVar10 = piVar4;\n            piVar11 = piVar3;\n            if (iStack12 != 0) {\n                piVar5 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 0, iVar8 * 2 + 2);\n                piVar7 = param_1;\n                do {\n                    iVar1 = *piVar7;\n                    piVar7 = piVar7 + 1;\n                    *(piVar5 + (-2 - param_1) + piVar7) = iVar1;\n                    piVar9 = piVar5;\n                } while (iVar1 != 0);\n            }\n            param_1 = 0x40530d;\n            if ((uStack8 & 1) == 0) {\n                param_1 = sub.MSVCRT.dll_wcsncmp;\n            }\n            if (1 < piStack4) {\n                sub.MSVCRT.dll_wcsncpy(piVar3, piVar4, piStack4 + -1);\n                piVar3 = piVar3 + piStack4 + -1;\n                piVar4 = piVar4 + piStack4 + -1;\n            }\n            iVar1 = *piVar4;\n            piVar7 = piVar3;\n            piVar3 = piVar11;\n            while (iVar1 != 0) {\n                iVar6 = (*param_1)(piVar4, piVar5, iVar8);\n                if (iVar6 == 0) {\n                    piVar4 = piVar4 + iVar8;\n                    if ((iVar2 != -1) && (iVar2 = iVar2 + -1,  iVar2 < 1)) {\n                        iVar2 = arg_8h - (piVar4 - piVar10 >> 1);\n                        sub.MSVCRT.dll_wcsncpy(piVar7, piVar4, iVar2);\n                        piVar7 = piVar7 + iVar2;\n                        break;\n                    }\n                }\n                else {\n                    *piVar7 = *piVar4;\n                    piVar7 = piVar7 + 1;\n                    piVar4 = piVar4 + 1;\n                }\n                iVar1 = *piVar4;\n            }\n            if (iStack12 != 0) {\n                (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, piVar9);\n            }\n        }\n    }\n    fcn.0040e350(arg_8h - (piVar7 - piVar3 >> 1));\n    *piVar7 = 0;\n    return;\n}\n",
        "token_count": 1119
    },
    "00406020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00406020(int16_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t arg_8h;\n    int16_t *piVar1;\n    int16_t iVar2;\n    uint32_t arg_8h_00;\n    int32_t unaff_EBP;\n    int16_t *piVar3;\n    \n    arg_8h_00 = (param_3 < 0) - 1 & param_3;\n    arg_8h = fcn.0040e180(param_1);\n    piVar1 = fcn.0040e200(arg_8h_00, param_3);\n    if (arg_8h != 0) {\n        param_1 = fcn.0040e2d0(arg_8h);\n    }\n    piVar3 = piVar1;\n    if (param_1 != NULL) {\n        for (; 1 < unaff_EBP; unaff_EBP = unaff_EBP + -1) {\n            if (*param_1 == 0) goto code_r0x00406097;\n            param_1 = param_1 + 1;\n        }\n        iVar2 = *param_1;\n        if (iVar2 != 0) {\n            do {\n                if (arg_8h_00 == 0) break;\n                *piVar3 = iVar2;\n                arg_8h_00 = arg_8h_00 - 1;\n                iVar2 = *(param_1 + (2 - piVar1) + piVar3);\n                piVar3 = piVar3 + 1;\n            } while (iVar2 != 0);\n        }\n    }\ncode_r0x00406097:\n    fcn.0040e350(arg_8h_00);\n    *piVar3 = 0;\n    return;\n}\n",
        "token_count": 405
    },
    "004062b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004062b0(code *param_1, int16_t *param_2, int16_t *param_3, uint32_t param_4, int32_t param_5, int32_t param_6)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    code *arg_ch;\n    int16_t *piVar6;\n    int16_t *piVar7;\n    int32_t unaff_EBP;\n    int32_t iVar8;\n    int32_t unaff_ESI;\n    int32_t iVar9;\n    int32_t unaff_EDI;\n    int32_t iVar10;\n    int16_t *unaff_retaddr;\n    code *pcVar11;\n    int32_t iStack24;\n    int16_t *piStack12;\n    int16_t *piStack8;\n    code *pcStack4;\n    \n    iVar8 = 0;\n    if (param_1 == NULL) {\n        param_1 = 0x412024;\n    }\n    if (param_2 == NULL) {\n        param_2 = 0x412024;\n    }\n    if (param_3 == NULL) {\n        param_3 = 0x412024;\n    }\n    arg_ch = 0x40530d;\n    if ((param_4 & 1) == 0) {\n        arg_ch = sub.MSVCRT.dll_wcsncmp;\n    }\n    if (param_5 < 1) {\n        param_5 = 1;\n    }\n    piVar3 = param_2;\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + 1;\n    } while (iVar1 != 0);\n    iVar9 = piVar3 - (param_2 + 1) >> 1;\n    piVar3 = param_3;\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + 1;\n    } while (iVar1 != 0);\n    iVar10 = piVar3 - (param_3 + 1) >> 1;\n    if ((param_4 & 2) == 0) {\n        pcVar11 = param_1;\n        iVar2 = fcn.0040e180(param_1);\n        if (iVar2 != 0) {\n            unaff_retaddr = sub.MSVCRT.dll__wcsdup(unaff_retaddr);\n        }\n        iVar2 = fcn.0040e180(param_2);\n        piVar3 = param_2;\n        if (iVar2 != 0) {\n            piVar3 = sub.MSVCRT.dll__wcsdup(param_2);\n            unaff_retaddr = piVar3;\n        }\n        piVar4 = fcn.0040e180(param_1);\n        if (piVar4 != NULL) {\n            unaff_retaddr = sub.MSVCRT.dll__wcsdup(unaff_retaddr);\n        }\n        piVar5 = piStack8 + param_2 + -1;\n        piVar6 = piVar5;\n        if (param_3 != NULL) {\n            iVar1 = *piVar5;\n            piVar7 = piVar5;\n            while (iVar1 != 0) {\n                if (unaff_EBP == 0) {\n                    if ((iVar1 == *piVar3) &&\n                       (iVar2 = (*param_1)(piVar7, piVar3, iVar9),  iVar10 = unaff_ESI,  iVar2 == 0))\n                    goto code_r0x004064f3;\ncode_r0x00406482:\n                    piVar7 = piVar7 + 1;\n                    iVar10 = unaff_ESI;\n                }\n                else {\n                    iVar2 = (*param_1)(piVar7, piVar3, iVar9);\n                    iVar10 = unaff_ESI;\n                    if (iVar2 != 0) goto code_r0x00406482;\ncode_r0x004064f3:\n                    piVar7 = piVar7 + iVar9;\n                    iVar8 = iVar8 + 1;\n                    if ((param_3 != 0xffffffff) && (param_3 <= iVar8)) break;\n                }\n                unaff_ESI = iVar10;\n                iVar1 = *piVar7;\n            }\n        }\n        piVar3 = piStack8;\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n        piVar3 = fcn.0040e200((iVar10 - iVar9) * iVar8 + (piVar3 - (piStack8 + 1) >> 1), arg_ch);\n        if (iVar8 == 0) {\n            piVar6 = piStack8;\n            do {\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n                *(piVar3 + (-2 - piStack8) + piVar6) = iVar1;\n                piVar4 = piStack8;\n            } while (iVar1 != 0);\n        }\n        else {\n            piVar7 = piStack8;\n            if (1 < unaff_retaddr) {\n                piVar7 = piVar6;\n                sub.MSVCRT.dll_wcsncpy(piVar3, piVar4, unaff_retaddr);\n                piVar3 = piVar3 + unaff_EBP + -2;\n            }\n            iVar1 = *piVar7;\n            while (iVar1 != 0) {\n                if (iVar8 < 1) {\ncode_r0x00406557:\n                    *piVar3 = *piVar7;\n                    piVar3 = piVar3 + 1;\n                    piVar7 = piVar7 + 1;\n                }\n                else {\n                    if (unaff_EDI == 0) {\n                        if (iVar1 != *piStack12) goto code_r0x00406557;\n                        iVar10 = (*pcStack4)(piVar7, piStack12, iVar9);\n                    }\n                    else {\n                        iVar10 = (*pcStack4)(piVar7, piStack12, iVar9);\n                    }\n                    if (iVar10 != 0) goto code_r0x00406557;\n                    sub.MSVCRT.dll_wcsncpy(piVar3, piStack8, pcVar11);\n                    piVar7 = piVar7 + iVar9;\n                    iVar8 = iVar8 + -1;\n                    piVar3 = piVar3 + pcVar11;\n                }\n                iVar1 = *piVar7;\n            }\n            *piVar3 = 0;\n        }\n        if ((param_2 & 0x7fffffff) != 0) {\n            sub.MSVCRT.dll_free(piVar4);\n        }\n        if (piVar5 != NULL) {\n            sub.MSVCRT.dll_free(piStack12);\n        }\n        if (iStack24 != 0) {\n            sub.MSVCRT.dll_free(piStack8);\n        }\n    }\n    else if (((iVar9 != 0) && (param_6 != 0)) &&\n            (piVar3 = param_1 + (param_5 + -1) * 2,  piVar4 = piVar3,  *piVar3 != 0)) {\n        while ((param_6 == -1 || (iVar8 < param_6))) {\n            iVar2 = (*arg_ch)(piVar4, param_2, iVar9);\n            if (iVar2 == 0) {\n                sub.MSVCRT.dll_wcsncpy(piVar4, param_3, iVar10);\n                piVar3 = piVar3 + iVar9;\n                iVar8 = iVar8 + 1;\n                piVar4 = piVar4 + iVar10;\n            }\n            else {\n                piVar4 = piVar4 + 1;\n                piVar3 = piVar3 + 1;\n            }\n            if (*piVar3 == 0) {\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1761
    },
    "00406c90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406c90(int32_t *param_1, uint param_2, uint param_3, int32_t param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar6;\n    int32_t unaff_EDI;\n    int32_t unaff_retaddr;\n    \n    iVar6 = param_5;\n    piVar3 = param_1;\n    if ((param_1 != NULL) && (*param_1 != 0)) {\n        if (param_5 == -1) {\n            piVar4 = param_1[1];\n            iVar6 = param_1[4];\n        }\n        else {\n            unaff_EDI = fcn.0040a532(param_1, param_5);\n            iVar1 = param_4;\n            iVar5 = fcn.0040a532(piVar3, param_4);\n            iVar6 = (iVar1 - iVar6) + 1;\n            if (unaff_ESI == 0) {\n                return;\n            }\n            if (iVar5 == 0) {\n                return;\n            }\n            unaff_ESI = unaff_ESI + -8;\n            piVar4 = iVar5 + -8;\n        }\n        iVar1 = *piVar4;\n        piVar2 = *(unaff_ESI + 4);\n        iVar5 = unaff_EDI + 8;\n        if (unaff_retaddr == -1) {\n            unaff_retaddr = piVar3[0xb];\n        }\n        param_1 = piVar4;\n    // switch table (25 cases) at 0x406f04\n        switch(unaff_retaddr) {\n        case 1:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00407f80(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.004070c0();\n            }\n            break;\n        case 3:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00408ba0(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.00407ce0();\n            }\n            break;\n        case 5:\n        case 0x15:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.004084e0(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.00407620();\n            }\n            break;\n        case 8:\n            if ((unaff_EBX & 1) == 0) {\n                if ((unaff_EBX & 2) == 0) {\n                    fcn.00408790(&stack0xfffffff4, &param_1, iVar6, iVar5);\n                }\n                else {\n                    fcn.004088f0();\n                }\n            }\n            else if ((unaff_EBX & 2) == 0) {\n                fcn.004078d0(&stack0xfffffff4, &param_1);\n            }\n            else {\n                fcn.00407a30();\n            }\n            break;\n        case 9:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00408390(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.004074d0();\n            }\n            break;\n        case 0xb:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.004080d0(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.00407210();\n            }\n            break;\n        case 0xc:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00408220(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.00407360(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            break;\n        case 0xd:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00408630(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.00407770();\n            }\n            break;\n        case 0x18:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00407e30(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.00406f70();\n            }\n            break;\n        case 0x19:\n            if ((unaff_EBX & 1) == 0) {\n                fcn.00408a50(&stack0xfffffff4, &param_1, iVar6, iVar5);\n            }\n            else {\n                fcn.00407b90();\n            }\n        }\n        *(unaff_ESI + 4) = piVar2;\n        *param_1 = iVar1;\n        if (piVar2 == NULL) {\n            *piVar3 = unaff_ESI;\n        }\n        else {\n            *piVar2 = unaff_ESI;\n        }\n        if (iVar1 == 0) {\n            piVar3[1] = param_1;\n            *(piVar3 + 0xc) = 1;\n            return;\n        }\n        *(iVar1 + 4) = param_1;\n        *(piVar3 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 1307
    },
    "00406f70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00406f70(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar3 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(param_4 + *param_2) <= *(piVar1 + param_4)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00406f70(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00406f70(&param_3, param_2, iVar7, iVar3);\n    ppiVar4 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar2 = ppiVar4,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00407096;\n        if (*(ppiVar2 + iVar3) < *(param_3 + iVar3)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar4 = ppiVar2;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar2;\n            iVar6 = iVar6 + -1;\n            ppiVar2[1] = ppiVar5;\n            ppiVar4 = *ppiVar2;\n            ppiVar5 = ppiVar2;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x0040707c:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x00407096:\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar2;\n        ppiVar2[1] = ppiVar5;\n        ppiVar5 = ppiVar2;\n        ppiVar2 = *ppiVar2;\n    }\n    goto code_r0x0040707c;\n}\n",
        "token_count": 788
    },
    "004070c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004070c0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar3 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(param_4 + *param_2) <= *(piVar1 + param_4)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.004070c0(param_1, &ppiStack12, iVar6, param_4);\n    fcn.004070c0(&param_3, param_2, iVar7, iVar3);\n    ppiVar4 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar2 = ppiVar4,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x004071e6;\n        if (*(ppiVar2 + iVar3) < *(param_3 + iVar3)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar4 = ppiVar2;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar2;\n            iVar6 = iVar6 + -1;\n            ppiVar2[1] = ppiVar5;\n            ppiVar4 = *ppiVar2;\n            ppiVar5 = ppiVar2;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x004071cc:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x004071e6:\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar2;\n        ppiVar2[1] = ppiVar5;\n        ppiVar5 = ppiVar2;\n        ppiVar2 = *ppiVar2;\n    }\n    goto code_r0x004071cc;\n}\n",
        "token_count": 788
    },
    "00407210": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407210(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar2 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(param_4 + *param_2) <= *(piVar1 + param_4)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00407210(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00407210(&param_3, param_2, iVar7, iVar2);\n    ppiVar3 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar4 = ppiVar3,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00407340;\n        if (*(ppiVar4 + iVar2) < *(param_3 + iVar2)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar3 = ppiVar4;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar4;\n            iVar6 = iVar6 + -1;\n            ppiVar4[1] = ppiVar5;\n            ppiVar3 = *ppiVar4;\n            ppiVar5 = ppiVar4;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00407326:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x00407340:\n    for (; ppiVar3 = ppiVar4,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar3;\n        ppiVar3[1] = ppiVar5;\n        ppiVar4 = *ppiVar3;\n        ppiVar5 = ppiVar3;\n    }\n    goto code_r0x00407326;\n}\n",
        "token_count": 794
    },
    "00407360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407360(int32_t **arg_8h, int32_t **arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t arg_10h_00;\n    int32_t **ppiStack24;\n    int32_t **ppiStack20;\n    int32_t *apiStack16 [3];\n    \n    if (arg_10h == 2) {\n        piVar1 = *arg_8h;\n        if (((*(arg_14h + *arg_ch) < *(piVar1 + arg_14h)) << 8 | (*(arg_14h + *arg_ch) == *(piVar1 + arg_14h)) << 0xe)\n            == 0) {\n            *arg_8h = *arg_ch;\n            *arg_ch = piVar1;\n            **arg_8h = piVar1;\n            (*arg_ch)[1] = *arg_8h;\n            return;\n        }\n    }\n    else if (2 < arg_10h) {\n        iVar3 = arg_10h / 2;\n        arg_10h_00 = arg_10h - iVar3;\n        ppiStack24 = *arg_8h;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            ppiStack24 = *ppiStack24;\n        }\n        ppiStack20 = ppiStack24[1];\n        arg_10h = arg_10h - arg_10h_00;\n        fcn.00407360(arg_8h, &ppiStack20, arg_10h, arg_14h);\n        fcn.00407360(&ppiStack24, arg_ch, arg_10h_00, arg_14h);\n        ppiVar4 = apiStack16;\n        ppiVar2 = *arg_8h;\n        while (arg_10h != 0) {\n            if (arg_10h_00 == 0) {\n                if (arg_10h != 0) {\n                    do {\n                        ppiStack20 = ppiVar2;\n                        *ppiVar4 = ppiStack20;\n                        ppiStack20[1] = ppiVar4;\n                        arg_10h = arg_10h + -1;\n                        ppiVar4 = ppiStack20;\n                        ppiVar2 = *ppiStack20;\n                    } while (arg_10h != 0);\n                    *arg_8h = apiStack16[0];\n                    *arg_ch = ppiStack20;\n                    return;\n                }\n                goto code_r0x00407486;\n            }\n            if (*(ppiStack24 + arg_14h) < *(ppiVar2 + arg_14h) == (*(ppiStack24 + arg_14h) == *(ppiVar2 + arg_14h))) {\n                *ppiVar4 = ppiStack24;\n                arg_10h_00 = arg_10h_00 + -1;\n                ppiStack24[1] = ppiVar4;\n                ppiVar4 = ppiStack24;\n                ppiStack24 = *ppiStack24;\n            }\n            else {\n                *ppiVar4 = ppiVar2;\n                arg_10h = arg_10h + -1;\n                ppiVar2[1] = ppiVar4;\n                ppiVar4 = ppiVar2;\n                ppiVar2 = *ppiVar2;\n            }\n        }\n        for (; arg_10h_00 != 0; arg_10h_00 = arg_10h_00 + -1) {\n            *ppiVar4 = ppiStack24;\n            ppiStack24[1] = ppiVar4;\n            ppiVar4 = ppiStack24;\n            ppiStack24 = *ppiStack24;\n        }\ncode_r0x00407486:\n        *arg_8h = apiStack16[0];\n        *arg_ch = ppiVar4;\n    }\n    return;\n}\n",
        "token_count": 917
    },
    "004074d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004074d0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar2 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (((*(*param_2 + param_4) < *(piVar1 + param_4)) << 8 | (*(*param_2 + param_4) == *(piVar1 + param_4)) << 0xe)\n            != 0) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar6 = *param_1;\n    iVar5 = param_3 / 2;\n    iVar7 = param_3 - iVar5;\n    for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n        ppiVar6 = *ppiVar6;\n    }\n    ppiStack12 = ppiVar6[1];\n    iVar5 = param_3 - iVar7;\n    param_3 = ppiVar6;\n    fcn.004074d0(param_1, &ppiStack12, iVar5, param_4);\n    fcn.004074d0(&param_3, param_2, iVar7, iVar2);\n    ppiVar3 = *param_1;\n    ppiVar6 = apiStack8;\n    while (ppiVar4 = ppiVar3,  iVar5 != 0) {\n        if (iVar7 == 0) goto joined_r0x00407605;\n        if (*(param_3 + iVar2) < *(ppiVar4 + iVar2) == (*(param_3 + iVar2) == *(ppiVar4 + iVar2))) {\n            *ppiVar6 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar6;\n            ppiVar3 = ppiVar4;\n            ppiVar6 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar6 = ppiVar4;\n            iVar5 = iVar5 + -1;\n            ppiVar4[1] = ppiVar6;\n            ppiVar3 = *ppiVar4;\n            ppiVar6 = ppiVar4;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar6 = param_3;\n        param_3[1] = ppiVar6;\n        ppiVar6 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x004075eb:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar6;\n    return;\njoined_r0x00407605:\n    for (; ppiVar3 = ppiVar4,  iVar5 != 0; iVar5 = iVar5 + -1) {\n        *ppiVar6 = ppiVar3;\n        ppiVar3[1] = ppiVar6;\n        ppiVar4 = *ppiVar3;\n        ppiVar6 = ppiVar3;\n    }\n    goto code_r0x004075eb;\n}\n",
        "token_count": 850
    },
    "00407620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407620(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar3 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(param_4 + *param_2) <= *(piVar1 + param_4)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00407620(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00407620(&param_3, param_2, iVar7, iVar3);\n    ppiVar4 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar2 = ppiVar4,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00407746;\n        if (*(ppiVar2 + iVar3) < *(param_3 + iVar3)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar4 = ppiVar2;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar2;\n            iVar6 = iVar6 + -1;\n            ppiVar2[1] = ppiVar5;\n            ppiVar4 = *ppiVar2;\n            ppiVar5 = ppiVar2;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x0040772c:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x00407746:\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar2;\n        ppiVar2[1] = ppiVar5;\n        ppiVar5 = ppiVar2;\n        ppiVar2 = *ppiVar2;\n    }\n    goto code_r0x0040772c;\n}\n",
        "token_count": 785
    },
    "00407770": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407770(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t **ppiVar7;\n    int32_t **ppiVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar1 = param_4;\n    if (param_3 == 0x2) {\n        piVar3 = *param_1;\n        piVar4 = *param_2;\n        iVar9 = *(piVar3 + param_4 + 4);\n        iVar1 = *(param_4 + 4 + piVar4);\n        if (iVar1 < iVar9) {\n            return;\n        }\n        if ((iVar1 <= iVar9) && (*(param_4 + piVar4) <= *(piVar3 + param_4))) {\n            return;\n        }\n        *param_1 = piVar4;\n        *param_2 = piVar3;\n        **param_1 = piVar3;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar8 = *param_1;\n    iVar9 = param_3 / 2;\n    iVar10 = param_3 - iVar9;\n    for (; iVar9 != 0; iVar9 = iVar9 + -1) {\n        ppiVar8 = *ppiVar8;\n    }\n    ppiStack12 = ppiVar8[1];\n    iVar9 = param_3 - iVar10;\n    param_3 = ppiVar8;\n    fcn.00407770(param_1, &ppiStack12, iVar9, param_4);\n    fcn.00407770(&param_3, param_2, iVar10, iVar1);\n    ppiVar7 = *param_1;\n    ppiVar8 = apiStack8;\n    while (ppiVar6 = ppiVar7,  iVar9 != 0) {\n        if (iVar10 == 0) goto joined_r0x004078b2;\n        iVar5 = *(ppiVar6 + iVar1 + 4);\n        iVar2 = *(param_3 + iVar1 + 4);\n        if ((iVar5 < iVar2) || ((iVar5 <= iVar2 && (*(ppiVar6 + iVar1) < *(param_3 + iVar1))))) {\n            *ppiVar8 = param_3;\n            iVar10 = iVar10 + -1;\n            param_3[1] = ppiVar8;\n            ppiVar7 = ppiVar6;\n            ppiVar8 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar8 = ppiVar6;\n            iVar9 = iVar9 + -1;\n            ppiVar6[1] = ppiVar8;\n            ppiVar7 = *ppiVar6;\n            ppiVar8 = ppiVar6;\n        }\n    }\n    for (; iVar10 != 0; iVar10 = iVar10 + -1) {\n        *ppiVar8 = param_3;\n        param_3[1] = ppiVar8;\n        ppiVar8 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00407898:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar8;\n    return;\njoined_r0x004078b2:\n    for (; iVar9 != 0; iVar9 = iVar9 + -1) {\n        *ppiVar8 = ppiVar6;\n        ppiVar6[1] = ppiVar8;\n        ppiVar8 = ppiVar6;\n        ppiVar6 = *ppiVar6;\n    }\n    goto code_r0x00407898;\n}\n",
        "token_count": 917
    },
    "004078d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004078d0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    int32_t **unaff_EDI;\n    int32_t iVar9;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar4 = param_4;\n    if (param_3 == 0x2) {\n        iVar4 = fcn.00408cf0(*(*param_1 + param_4), *(*param_2 + param_4));\n        if (-1 < iVar4) {\n            return;\n        }\n        piVar1 = *param_1;\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar2 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar2 = *ppiVar2;\n    }\n    ppiStack12 = ppiVar2[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar2;\n    iVar9 = iVar6;\n    fcn.004078d0(param_1, &ppiStack12, iVar6, param_4);\n    fcn.004078d0(&param_3, param_2, iVar7, iVar4);\n    ppiStack12 = *param_1;\n    ppiVar3 = ppiStack12;\n    ppiVar8 = apiStack8;\n    ppiVar2 = param_3;\n    while (iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00407a11;\n        iVar5 = fcn.00408cf0(iVar9, *(ppiVar2 + iVar4), *(ppiVar3 + iVar4));\n        if (iVar5 < 0) {\n            iVar7 = iVar7 + -1;\n            *ppiVar8 = param_1;\n            param_1[1] = ppiVar8;\n            ppiVar2 = *param_1;\n            ppiVar3 = unaff_EDI;\n            ppiVar8 = param_1;\n            param_1 = ppiVar2;\n        }\n        else {\n            iVar6 = iVar6 + -1;\n            *ppiVar8 = unaff_EDI;\n            unaff_EDI[1] = ppiVar8;\n            ppiVar3 = *unaff_EDI;\n            ppiVar8 = unaff_EDI;\n            ppiVar2 = param_1;\n            unaff_EDI = *unaff_EDI;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar8 = ppiVar2;\n        param_3[1] = ppiVar8;\n        ppiVar2 = *param_3;\n        ppiVar8 = param_3;\n        param_3 = ppiVar2;\n    }\ncode_r0x004079f7:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar8;\n    return;\njoined_r0x00407a11:\n    for (; ppiVar2 = ppiStack12,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar8 = ppiVar3;\n        ppiVar2[1] = ppiVar8;\n        ppiVar3 = *ppiVar2;\n        ppiStack12 = ppiVar3;\n        ppiVar8 = ppiVar2;\n    }\n    goto code_r0x004079f7;\n}\n",
        "token_count": 937
    },
    "00407a30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407a30(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    int32_t **unaff_EDI;\n    int32_t iVar9;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar4 = param_4;\n    if (param_3 == 0x2) {\n        iVar4 = fcn.00408d50(*(*param_1 + param_4), *(*param_2 + param_4));\n        if (-1 < iVar4) {\n            return;\n        }\n        piVar1 = *param_1;\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar2 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar2 = *ppiVar2;\n    }\n    ppiStack12 = ppiVar2[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar2;\n    iVar9 = iVar6;\n    fcn.00407a30(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00407a30(&param_3, param_2, iVar7, iVar4);\n    ppiStack12 = *param_1;\n    ppiVar3 = ppiStack12;\n    ppiVar8 = apiStack8;\n    ppiVar2 = param_3;\n    while (iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00407b71;\n        iVar5 = fcn.00408d50(iVar9, *(ppiVar2 + iVar4), *(ppiVar3 + iVar4));\n        if (iVar5 < 0) {\n            iVar7 = iVar7 + -1;\n            *ppiVar8 = param_1;\n            param_1[1] = ppiVar8;\n            ppiVar2 = *param_1;\n            ppiVar3 = unaff_EDI;\n            ppiVar8 = param_1;\n            param_1 = ppiVar2;\n        }\n        else {\n            iVar6 = iVar6 + -1;\n            *ppiVar8 = unaff_EDI;\n            unaff_EDI[1] = ppiVar8;\n            ppiVar3 = *unaff_EDI;\n            ppiVar8 = unaff_EDI;\n            ppiVar2 = param_1;\n            unaff_EDI = *unaff_EDI;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar8 = ppiVar2;\n        param_3[1] = ppiVar8;\n        ppiVar2 = *param_3;\n        ppiVar8 = param_3;\n        param_3 = ppiVar2;\n    }\ncode_r0x00407b57:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar8;\n    return;\njoined_r0x00407b71:\n    for (; ppiVar2 = ppiStack12,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar8 = ppiVar3;\n        ppiVar2[1] = ppiVar8;\n        ppiVar3 = *ppiVar2;\n        ppiStack12 = ppiVar3;\n        ppiVar8 = ppiVar2;\n    }\n    goto code_r0x00407b57;\n}\n",
        "token_count": 937
    },
    "00407b90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407b90(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar2 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(param_4 + *param_2) <= *(piVar1 + param_4)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00407b90(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00407b90(&param_3, param_2, iVar7, iVar2);\n    ppiVar3 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar4 = ppiVar3,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00407cc0;\n        if (*(ppiVar4 + iVar2) < *(param_3 + iVar2)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar3 = ppiVar4;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar4;\n            iVar6 = iVar6 + -1;\n            ppiVar4[1] = ppiVar5;\n            ppiVar3 = *ppiVar4;\n            ppiVar5 = ppiVar4;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00407ca6:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x00407cc0:\n    for (; ppiVar3 = ppiVar4,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar3;\n        ppiVar3[1] = ppiVar5;\n        ppiVar4 = *ppiVar3;\n        ppiVar5 = ppiVar3;\n    }\n    goto code_r0x00407ca6;\n}\n",
        "token_count": 801
    },
    "00407ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407ce0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar2 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(param_4 + *param_2) <= *(piVar1 + param_4)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00407ce0(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00407ce0(&param_3, param_2, iVar7, iVar2);\n    ppiVar3 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar4 = ppiVar3,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00407e10;\n        if (*(ppiVar4 + iVar2) < *(param_3 + iVar2)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar3 = ppiVar4;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar4;\n            iVar6 = iVar6 + -1;\n            ppiVar4[1] = ppiVar5;\n            ppiVar3 = *ppiVar4;\n            ppiVar5 = ppiVar4;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00407df6:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x00407e10:\n    for (; ppiVar3 = ppiVar4,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar3;\n        ppiVar3[1] = ppiVar5;\n        ppiVar4 = *ppiVar3;\n        ppiVar5 = ppiVar3;\n    }\n    goto code_r0x00407df6;\n}\n",
        "token_count": 801
    },
    "00407e30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407e30(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    uint8_t *puVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar4 = param_4;\n    if (param_3 == 0x2) {\n        piVar2 = *param_1;\n        puVar1 = param_4 + *param_2;\n        if (*(piVar2 + param_4) < *puVar1 || *(piVar2 + param_4) == *puVar1) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar2;\n        **param_1 = piVar2;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar6 = *param_1;\n    iVar7 = param_3 / 2;\n    iVar8 = param_3 - iVar7;\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        ppiVar6 = *ppiVar6;\n    }\n    ppiStack12 = ppiVar6[1];\n    iVar7 = param_3 - iVar8;\n    param_3 = ppiVar6;\n    fcn.00407e30(param_1, &ppiStack12, iVar7, param_4);\n    fcn.00407e30(&param_3, param_2, iVar8, iVar4);\n    ppiVar5 = *param_1;\n    ppiVar6 = apiStack8;\n    while (ppiVar3 = ppiVar5,  iVar7 != 0) {\n        if (iVar8 == 0) goto joined_r0x00407f56;\n        if (*(ppiVar3 + iVar4) < *(param_3 + iVar4) || *(ppiVar3 + iVar4) == *(param_3 + iVar4)) {\n            *ppiVar6 = ppiVar3;\n            iVar7 = iVar7 + -1;\n            ppiVar3[1] = ppiVar6;\n            ppiVar5 = *ppiVar3;\n            ppiVar6 = ppiVar3;\n        }\n        else {\n            *ppiVar6 = param_3;\n            iVar8 = iVar8 + -1;\n            param_3[1] = ppiVar6;\n            ppiVar5 = ppiVar3;\n            ppiVar6 = param_3;\n            param_3 = *param_3;\n        }\n    }\n    for (; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *ppiVar6 = param_3;\n        param_3[1] = ppiVar6;\n        ppiVar6 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00407f3c:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar6;\n    return;\njoined_r0x00407f56:\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar6 = ppiVar3;\n        ppiVar3[1] = ppiVar6;\n        ppiVar6 = ppiVar3;\n        ppiVar3 = *ppiVar3;\n    }\n    goto code_r0x00407f3c;\n}\n",
        "token_count": 843
    },
    "00407f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00407f80(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar3 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(piVar1 + param_4) <= *(param_4 + *param_2)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00407f80(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00407f80(&param_3, param_2, iVar7, iVar3);\n    ppiVar4 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar2 = ppiVar4,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x004080a6;\n        if (*(param_3 + iVar3) < *(ppiVar2 + iVar3)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar4 = ppiVar2;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar2;\n            iVar6 = iVar6 + -1;\n            ppiVar2[1] = ppiVar5;\n            ppiVar4 = *ppiVar2;\n            ppiVar5 = ppiVar2;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x0040808c:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x004080a6:\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar2;\n        ppiVar2[1] = ppiVar5;\n        ppiVar5 = ppiVar2;\n        ppiVar2 = *ppiVar2;\n    }\n    goto code_r0x0040808c;\n}\n",
        "token_count": 790
    },
    "004080d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004080d0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    uint16_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar3 = param_4;\n    if (param_3 == 0x2) {\n        piVar2 = *param_1;\n        puVar1 = param_4 + *param_2;\n        if (*(piVar2 + param_4) < *puVar1 || *(piVar2 + param_4) == *puVar1) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar2;\n        **param_1 = piVar2;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar6 = *param_1;\n    iVar7 = param_3 / 2;\n    iVar8 = param_3 - iVar7;\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        ppiVar6 = *ppiVar6;\n    }\n    ppiStack12 = ppiVar6[1];\n    iVar7 = param_3 - iVar8;\n    param_3 = ppiVar6;\n    fcn.004080d0(param_1, &ppiStack12, iVar7, param_4);\n    fcn.004080d0(&param_3, param_2, iVar8, iVar3);\n    ppiVar4 = *param_1;\n    ppiVar6 = apiStack8;\n    while (ppiVar5 = ppiVar4,  iVar7 != 0) {\n        if (iVar8 == 0) goto joined_r0x00408200;\n        if (*(ppiVar5 + iVar3) < *(param_3 + iVar3) || *(ppiVar5 + iVar3) == *(param_3 + iVar3)) {\n            *ppiVar6 = ppiVar5;\n            iVar7 = iVar7 + -1;\n            ppiVar5[1] = ppiVar6;\n            ppiVar4 = *ppiVar5;\n            ppiVar6 = ppiVar5;\n        }\n        else {\n            *ppiVar6 = param_3;\n            iVar8 = iVar8 + -1;\n            param_3[1] = ppiVar6;\n            ppiVar4 = ppiVar5;\n            ppiVar6 = param_3;\n            param_3 = *param_3;\n        }\n    }\n    for (; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *ppiVar6 = param_3;\n        param_3[1] = ppiVar6;\n        ppiVar6 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x004081e6:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar6;\n    return;\njoined_r0x00408200:\n    for (; ppiVar4 = ppiVar5,  iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar6 = ppiVar4;\n        ppiVar4[1] = ppiVar6;\n        ppiVar5 = *ppiVar4;\n        ppiVar6 = ppiVar4;\n    }\n    goto code_r0x004081e6;\n}\n",
        "token_count": 850
    },
    "00408220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408220(int32_t **arg_8h, int32_t **arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t arg_10h_00;\n    int32_t **ppiStack24;\n    int32_t **ppiStack20;\n    int32_t *apiStack16 [3];\n    \n    if (arg_10h == 2) {\n        piVar1 = *arg_8h;\n        if (*(arg_14h + *arg_ch) < *(piVar1 + arg_14h)) {\n            *arg_8h = *arg_ch;\n            *arg_ch = piVar1;\n            **arg_8h = piVar1;\n            (*arg_ch)[1] = *arg_8h;\n            return;\n        }\n    }\n    else if (2 < arg_10h) {\n        iVar3 = arg_10h / 2;\n        arg_10h_00 = arg_10h - iVar3;\n        ppiStack24 = *arg_8h;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            ppiStack24 = *ppiStack24;\n        }\n        ppiStack20 = ppiStack24[1];\n        arg_10h = arg_10h - arg_10h_00;\n        fcn.00408220(arg_8h, &ppiStack20, arg_10h, arg_14h);\n        fcn.00408220(&ppiStack24, arg_ch, arg_10h_00, arg_14h);\n        ppiVar4 = apiStack16;\n        ppiVar2 = *arg_8h;\n        while (arg_10h != 0) {\n            if (arg_10h_00 == 0) {\n                if (arg_10h != 0) {\n                    do {\n                        ppiStack20 = ppiVar2;\n                        *ppiVar4 = ppiStack20;\n                        ppiStack20[1] = ppiVar4;\n                        arg_10h = arg_10h + -1;\n                        ppiVar4 = ppiStack20;\n                        ppiVar2 = *ppiStack20;\n                    } while (arg_10h != 0);\n                    *arg_8h = apiStack16[0];\n                    *arg_ch = ppiStack20;\n                    return;\n                }\n                goto code_r0x00408346;\n            }\n            if (*(ppiStack24 + arg_14h) < *(ppiVar2 + arg_14h)) {\n                *ppiVar4 = ppiStack24;\n                arg_10h_00 = arg_10h_00 + -1;\n                ppiStack24[1] = ppiVar4;\n                ppiVar4 = ppiStack24;\n                ppiStack24 = *ppiStack24;\n            }\n            else {\n                *ppiVar4 = ppiVar2;\n                arg_10h = arg_10h + -1;\n                ppiVar2[1] = ppiVar4;\n                ppiVar4 = ppiVar2;\n                ppiVar2 = *ppiVar2;\n            }\n        }\n        for (; arg_10h_00 != 0; arg_10h_00 = arg_10h_00 + -1) {\n            *ppiVar4 = ppiStack24;\n            ppiStack24[1] = ppiVar4;\n            ppiVar4 = ppiStack24;\n            ppiStack24 = *ppiStack24;\n        }\ncode_r0x00408346:\n        *arg_8h = apiStack16[0];\n        *arg_ch = ppiVar4;\n    }\n    return;\n}\n",
        "token_count": 858
    },
    "00408390": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00408390(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar2 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(piVar1 + param_4) <= *(*param_2 + param_4)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar6 = *param_1;\n    iVar5 = param_3 / 2;\n    iVar7 = param_3 - iVar5;\n    for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n        ppiVar6 = *ppiVar6;\n    }\n    ppiStack12 = ppiVar6[1];\n    iVar5 = param_3 - iVar7;\n    param_3 = ppiVar6;\n    fcn.00408390(param_1, &ppiStack12, iVar5, param_4);\n    fcn.00408390(&param_3, param_2, iVar7, iVar2);\n    ppiVar3 = *param_1;\n    ppiVar6 = apiStack8;\n    while (ppiVar4 = ppiVar3,  iVar5 != 0) {\n        if (iVar7 == 0) goto joined_r0x004084c5;\n        if (*(param_3 + iVar2) < *(ppiVar4 + iVar2)) {\n            *ppiVar6 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar6;\n            ppiVar3 = ppiVar4;\n            ppiVar6 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar6 = ppiVar4;\n            iVar5 = iVar5 + -1;\n            ppiVar4[1] = ppiVar6;\n            ppiVar3 = *ppiVar4;\n            ppiVar6 = ppiVar4;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar6 = param_3;\n        param_3[1] = ppiVar6;\n        ppiVar6 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x004084ab:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar6;\n    return;\njoined_r0x004084c5:\n    for (; ppiVar3 = ppiVar4,  iVar5 != 0; iVar5 = iVar5 + -1) {\n        *ppiVar6 = ppiVar3;\n        ppiVar3[1] = ppiVar6;\n        ppiVar4 = *ppiVar3;\n        ppiVar6 = ppiVar3;\n    }\n    goto code_r0x004084ab;\n}\n",
        "token_count": 795
    },
    "004084e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004084e0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar3 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(piVar1 + param_4) <= *(param_4 + *param_2)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.004084e0(param_1, &ppiStack12, iVar6, param_4);\n    fcn.004084e0(&param_3, param_2, iVar7, iVar3);\n    ppiVar4 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar2 = ppiVar4,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00408606;\n        if (*(param_3 + iVar3) < *(ppiVar2 + iVar3)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar4 = ppiVar2;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar2;\n            iVar6 = iVar6 + -1;\n            ppiVar2[1] = ppiVar5;\n            ppiVar4 = *ppiVar2;\n            ppiVar5 = ppiVar2;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x004085ec:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x00408606:\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar2;\n        ppiVar2[1] = ppiVar5;\n        ppiVar5 = ppiVar2;\n        ppiVar2 = *ppiVar2;\n    }\n    goto code_r0x004085ec;\n}\n",
        "token_count": 786
    },
    "00408630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00408630(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t **ppiVar7;\n    int32_t **ppiVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar1 = param_4;\n    if (param_3 == 0x2) {\n        piVar3 = *param_1;\n        piVar4 = *param_2;\n        iVar9 = *(piVar3 + param_4 + 4);\n        iVar1 = *(param_4 + 4 + piVar4);\n        if (iVar9 < iVar1) {\n            return;\n        }\n        if ((iVar9 <= iVar1) &&\n           (*(piVar3 + param_4) < *(param_4 + piVar4) || *(piVar3 + param_4) == *(param_4 + piVar4))) {\n            return;\n        }\n        *param_1 = piVar4;\n        *param_2 = piVar3;\n        **param_1 = piVar3;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar8 = *param_1;\n    iVar9 = param_3 / 2;\n    iVar10 = param_3 - iVar9;\n    for (; iVar9 != 0; iVar9 = iVar9 + -1) {\n        ppiVar8 = *ppiVar8;\n    }\n    ppiStack12 = ppiVar8[1];\n    iVar9 = param_3 - iVar10;\n    param_3 = ppiVar8;\n    fcn.00408630(param_1, &ppiStack12, iVar9, param_4);\n    fcn.00408630(&param_3, param_2, iVar10, iVar1);\n    ppiVar7 = *param_1;\n    ppiVar8 = apiStack8;\n    while (ppiVar6 = ppiVar7,  iVar9 != 0) {\n        if (iVar10 == 0) goto joined_r0x00408772;\n        iVar5 = *(ppiVar6 + iVar1 + 4);\n        iVar2 = *(param_3 + iVar1 + 4);\n        if ((iVar2 < iVar5) ||\n           ((iVar2 <= iVar5 && (*(param_3 + iVar1) <= *(ppiVar6 + iVar1) && *(ppiVar6 + iVar1) != *(param_3 + iVar1)))))\n        {\n            *ppiVar8 = param_3;\n            iVar10 = iVar10 + -1;\n            param_3[1] = ppiVar8;\n            ppiVar7 = ppiVar6;\n            ppiVar8 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar8 = ppiVar6;\n            iVar9 = iVar9 + -1;\n            ppiVar6[1] = ppiVar8;\n            ppiVar7 = *ppiVar6;\n            ppiVar8 = ppiVar6;\n        }\n    }\n    for (; iVar10 != 0; iVar10 = iVar10 + -1) {\n        *ppiVar8 = param_3;\n        param_3[1] = ppiVar8;\n        ppiVar8 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00408758:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar8;\n    return;\njoined_r0x00408772:\n    for (; iVar9 != 0; iVar9 = iVar9 + -1) {\n        *ppiVar8 = ppiVar6;\n        ppiVar6[1] = ppiVar8;\n        ppiVar8 = ppiVar6;\n        ppiVar6 = *ppiVar6;\n    }\n    goto code_r0x00408758;\n}\n",
        "token_count": 955
    },
    "00408790": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00408790(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    int32_t **unaff_EDI;\n    int32_t iVar9;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar4 = param_4;\n    if (param_3 == 0x2) {\n        iVar4 = fcn.00408cf0(*(*param_1 + param_4), *(*param_2 + param_4));\n        if (iVar4 < 1) {\n            return;\n        }\n        piVar1 = *param_1;\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar2 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar2 = *ppiVar2;\n    }\n    ppiStack12 = ppiVar2[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar2;\n    iVar9 = iVar6;\n    fcn.00408790(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00408790(&param_3, param_2, iVar7, iVar4);\n    ppiStack12 = *param_1;\n    ppiVar3 = ppiStack12;\n    ppiVar8 = apiStack8;\n    ppiVar2 = param_3;\n    while (iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x004088d1;\n        iVar5 = fcn.00408cf0(iVar9, *(ppiVar2 + iVar4), *(ppiVar3 + iVar4));\n        if (iVar5 < 1) {\n            iVar6 = iVar6 + -1;\n            *ppiVar8 = unaff_EDI;\n            unaff_EDI[1] = ppiVar8;\n            ppiVar3 = *unaff_EDI;\n            ppiVar8 = unaff_EDI;\n            ppiVar2 = param_1;\n            unaff_EDI = *unaff_EDI;\n        }\n        else {\n            iVar7 = iVar7 + -1;\n            *ppiVar8 = param_1;\n            param_1[1] = ppiVar8;\n            ppiVar2 = *param_1;\n            ppiVar3 = unaff_EDI;\n            ppiVar8 = param_1;\n            param_1 = ppiVar2;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar8 = ppiVar2;\n        param_3[1] = ppiVar8;\n        ppiVar2 = *param_3;\n        ppiVar8 = param_3;\n        param_3 = ppiVar2;\n    }\ncode_r0x004088b7:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar8;\n    return;\njoined_r0x004088d1:\n    for (; ppiVar2 = ppiStack12,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar8 = ppiVar3;\n        ppiVar2[1] = ppiVar8;\n        ppiVar3 = *ppiVar2;\n        ppiStack12 = ppiVar3;\n        ppiVar8 = ppiVar2;\n    }\n    goto code_r0x004088b7;\n}\n",
        "token_count": 935
    },
    "004088f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004088f0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    int32_t **unaff_EDI;\n    int32_t iVar9;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar4 = param_4;\n    if (param_3 == 0x2) {\n        iVar4 = fcn.00408d50(*(*param_1 + param_4), *(*param_2 + param_4));\n        if (iVar4 < 1) {\n            return;\n        }\n        piVar1 = *param_1;\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar2 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar2 = *ppiVar2;\n    }\n    ppiStack12 = ppiVar2[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar2;\n    iVar9 = iVar6;\n    fcn.004088f0(param_1, &ppiStack12, iVar6, param_4);\n    fcn.004088f0(&param_3, param_2, iVar7, iVar4);\n    ppiStack12 = *param_1;\n    ppiVar3 = ppiStack12;\n    ppiVar8 = apiStack8;\n    ppiVar2 = param_3;\n    while (iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00408a31;\n        iVar5 = fcn.00408d50(iVar9, *(ppiVar2 + iVar4), *(ppiVar3 + iVar4));\n        if (iVar5 < 1) {\n            iVar6 = iVar6 + -1;\n            *ppiVar8 = unaff_EDI;\n            unaff_EDI[1] = ppiVar8;\n            ppiVar3 = *unaff_EDI;\n            ppiVar8 = unaff_EDI;\n            ppiVar2 = param_1;\n            unaff_EDI = *unaff_EDI;\n        }\n        else {\n            iVar7 = iVar7 + -1;\n            *ppiVar8 = param_1;\n            param_1[1] = ppiVar8;\n            ppiVar2 = *param_1;\n            ppiVar3 = unaff_EDI;\n            ppiVar8 = param_1;\n            param_1 = ppiVar2;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar8 = ppiVar2;\n        param_3[1] = ppiVar8;\n        ppiVar2 = *param_3;\n        ppiVar8 = param_3;\n        param_3 = ppiVar2;\n    }\ncode_r0x00408a17:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar8;\n    return;\njoined_r0x00408a31:\n    for (; ppiVar2 = ppiStack12,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar8 = ppiVar3;\n        ppiVar2[1] = ppiVar8;\n        ppiVar3 = *ppiVar2;\n        ppiStack12 = ppiVar3;\n        ppiVar8 = ppiVar2;\n    }\n    goto code_r0x00408a17;\n}\n",
        "token_count": 938
    },
    "00408a50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00408a50(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    uint16_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar3 = param_4;\n    if (param_3 == 0x2) {\n        piVar2 = *param_1;\n        puVar1 = param_4 + *param_2;\n        if (*(piVar2 + param_4) < *puVar1 || *(piVar2 + param_4) == *puVar1) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar2;\n        **param_1 = piVar2;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar6 = *param_1;\n    iVar7 = param_3 / 2;\n    iVar8 = param_3 - iVar7;\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        ppiVar6 = *ppiVar6;\n    }\n    ppiStack12 = ppiVar6[1];\n    iVar7 = param_3 - iVar8;\n    param_3 = ppiVar6;\n    fcn.00408a50(param_1, &ppiStack12, iVar7, param_4);\n    fcn.00408a50(&param_3, param_2, iVar8, iVar3);\n    ppiVar4 = *param_1;\n    ppiVar6 = apiStack8;\n    while (ppiVar5 = ppiVar4,  iVar7 != 0) {\n        if (iVar8 == 0) goto joined_r0x00408b80;\n        if (*(ppiVar5 + iVar3) < *(param_3 + iVar3) || *(ppiVar5 + iVar3) == *(param_3 + iVar3)) {\n            *ppiVar6 = ppiVar5;\n            iVar7 = iVar7 + -1;\n            ppiVar5[1] = ppiVar6;\n            ppiVar4 = *ppiVar5;\n            ppiVar6 = ppiVar5;\n        }\n        else {\n            *ppiVar6 = param_3;\n            iVar8 = iVar8 + -1;\n            param_3[1] = ppiVar6;\n            ppiVar4 = ppiVar5;\n            ppiVar6 = param_3;\n            param_3 = *param_3;\n        }\n    }\n    for (; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *ppiVar6 = param_3;\n        param_3[1] = ppiVar6;\n        ppiVar6 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00408b66:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar6;\n    return;\njoined_r0x00408b80:\n    for (; ppiVar4 = ppiVar5,  iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar6 = ppiVar4;\n        ppiVar4[1] = ppiVar6;\n        ppiVar5 = *ppiVar4;\n        ppiVar6 = ppiVar4;\n    }\n    goto code_r0x00408b66;\n}\n",
        "token_count": 852
    },
    "00408ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00408ba0(int32_t **param_1, int32_t **param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiStack12;\n    int32_t *apiStack8 [2];\n    \n    iVar2 = param_4;\n    if (param_3 == 0x2) {\n        piVar1 = *param_1;\n        if (*(piVar1 + param_4) <= *(param_4 + *param_2)) {\n            return;\n        }\n        *param_1 = *param_2;\n        *param_2 = piVar1;\n        **param_1 = piVar1;\n        (*param_2)[1] = *param_1;\n        return;\n    }\n    if (param_3 < 3) {\n        return;\n    }\n    ppiVar5 = *param_1;\n    iVar6 = param_3 / 2;\n    iVar7 = param_3 - iVar6;\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n        ppiVar5 = *ppiVar5;\n    }\n    ppiStack12 = ppiVar5[1];\n    iVar6 = param_3 - iVar7;\n    param_3 = ppiVar5;\n    fcn.00408ba0(param_1, &ppiStack12, iVar6, param_4);\n    fcn.00408ba0(&param_3, param_2, iVar7, iVar2);\n    ppiVar3 = *param_1;\n    ppiVar5 = apiStack8;\n    while (ppiVar4 = ppiVar3,  iVar6 != 0) {\n        if (iVar7 == 0) goto joined_r0x00408cd0;\n        if (*(param_3 + iVar2) < *(ppiVar4 + iVar2)) {\n            *ppiVar5 = param_3;\n            iVar7 = iVar7 + -1;\n            param_3[1] = ppiVar5;\n            ppiVar3 = ppiVar4;\n            ppiVar5 = param_3;\n            param_3 = *param_3;\n        }\n        else {\n            *ppiVar5 = ppiVar4;\n            iVar6 = iVar6 + -1;\n            ppiVar4[1] = ppiVar5;\n            ppiVar3 = *ppiVar4;\n            ppiVar5 = ppiVar4;\n        }\n    }\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *ppiVar5 = param_3;\n        param_3[1] = ppiVar5;\n        ppiVar5 = param_3;\n        param_3 = *param_3;\n    }\ncode_r0x00408cb6:\n    *param_1 = apiStack8[0];\n    *param_2 = ppiVar5;\n    return;\njoined_r0x00408cd0:\n    for (; ppiVar3 = ppiVar4,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *ppiVar5 = ppiVar3;\n        ppiVar3[1] = ppiVar5;\n        ppiVar4 = *ppiVar3;\n        ppiVar5 = ppiVar3;\n    }\n    goto code_r0x00408cb6;\n}\n",
        "token_count": 801
    },
    "00408cf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00408cf0(uint16_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    \n    if (param_1 == NULL) {\n        if ((param_2 != NULL) && (*param_2 != 0)) {\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (param_2 == NULL) {\n            return 1;\n        }\n        do {\n            uVar1 = *param_1;\n            bVar2 = uVar1 < *param_2;\n            if (uVar1 != *param_2) {\ncode_r0x00408d27:\n                return -bVar2 | 1;\n            }\n            if (uVar1 == 0) {\n                return 0;\n            }\n            uVar1 = param_1[1];\n            bVar2 = uVar1 < param_2[1];\n            if (uVar1 != param_2[1]) goto code_r0x00408d27;\n            param_1 = param_1 + 2;\n            param_2 = param_2 + 2;\n        } while (uVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 273
    },
    "00408d50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00408d50(int32_t param_1, int16_t *param_2)\n\n{\n    uint uVar1;\n    \n    if (param_1 != 0) {\n        if (param_2 != NULL) {\n            uVar1 = sub.MSVCRT.dll__wcsicmp(param_1, param_2);\n            return uVar1;\n        }\n        return 1;\n    }\n    if ((param_2 != NULL) && (*param_2 != 0)) {\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 123
    },
    "00408df8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00408df8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_1 != 0) {\n        iVar1 = sub.MSVCRT.dll_wcslen(param_1);\n        iVar1 = iVar1 * 2 + 2;\n        iVar2 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 0, iVar1);\n        if (iVar2 != 0) {\n            sub.MSVCRT.dll_wcscpy(iVar2, iVar1);\n            return iVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 145
    },
    "00408f09": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00408f09(uint param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint arg_8h;\n    uint32_t uVar9;\n    uint uStack376;\n    uint32_t uStack372;\n    uint uStack368;\n    uint uStack364;\n    int32_t iStack360;\n    int32_t iStack356;\n    int32_t iStack352;\n    uint uStack348;\n    uint uStack344;\n    int32_t iStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    int32_t iStack324;\n    uint uStack320;\n    uint uStack316;\n    char16_t *pcStack312;\n    uint uStack308;\n    uint32_t uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    int32_t iStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    int32_t iStack260;\n    uint uStack256;\n    uint uStack252;\n    char16_t *pcStack248;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    int32_t iStack220;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    int32_t iStack204;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    int32_t iStack144;\n    uint32_t uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uchar auStack64 [4];\n    uint uStack60;\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack116 = param_1;\n    uVar9 = 0;\n    uStack120 = 0x408f21;\n    iVar3 = fcn.00408df8();\n    uStack120 = param_2;\n    uStack124 = 0x408f30;\n    fcn.00408df8();\n    uStack124 = param_3;\n    uStack128 = 0x408f43;\n    iVar4 = fcn.00408df8();\n    if (*0x4170c4 == 0) {\n        uStack116 = 0x11;\n        uStack120 = 0x408f58;\n        *0x4170c4 = (*_sym.imp.GDI32.DLL_GetStockObject)();\n    }\n    uStack116 = 1;\n    uStack120 = *0x41700c;\n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00408e54;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = *0x41700c;\n    uStack124 = 0x408f8f;\n    uStack32 = (*_sym.imp.USER32.DLL_LoadIconW)();\n    uStack124 = 0x7f00;\n    uStack128 = 0;\n    puStack132 = 0x408f9f;\n    uStack36 = (*_sym.imp.USER32.DLL_LoadCursorW)();\n    uStack24 = *0x416114;\n    puStack132 = &stack0xffffffc0;\n    uStack32 = 0x10;\n    uStack28 = 0;\n    uStack20 = 0;\n    uStack136 = 0x408fc7;\n    (*_sym.imp.USER32.DLL_RegisterClassExW)();\n    *0x4170c8 = 0;\n    uStack136 = 0x408fd2;\n    *0x4170d8 = fcn.00409471();\n    uStack136 = 1;\n    uStack140 = 0x408fde;\n    fcn.00409528();\n    if (*0x4170d8 == 0) {\ncode_r0x0040900b:\n        *0x4170dc = 0;\n    }\n    else {\n        uStack140 = *0x4170d8;\n        iStack144 = 0x408fee;\n        iVar5 = (*_sym.imp.USER32.DLL_IsWindowEnabled)();\n        if (iVar5 == 0) goto code_r0x0040900b;\n        uStack140 = 0;\n        iStack144 = *0x4170d8;\n        uStack148 = 0x408fff;\n        (*_sym.imp.USER32.DLL_EnableWindow)();\n        *0x4170dc = 1;\n    }\n    uStack140 = 0;\n    iStack144 = *0x41700c;\n    uStack148 = 0;\n    uStack152 = 0x40901e;\n    uStack152 = fcn.00409471();\n    pcVar1 = _sym.imp.USER32.DLL_GetSystemMetrics;\n    uStack156 = 0x82;\n    (*_sym.imp.USER32.DLL_GetSystemMetrics)();\n    iVar5 = (*pcVar1)();\n    pcVar1 = _sym.imp.USER32.DLL_CreateWindowExW;\n    iVar6 = (*_sym.imp.USER32.DLL_CreateWindowExW)();\n    if (iVar6 == 0) {\ncode_r0x0040925a:\n        if (iVar5 / 2 != 0x96) goto code_r0x0040926d;\n    }\n    else {\n        puStack208 = 0x409079;\n        iStack204 = iVar6;\n        (*_sym.imp.USER32.DLL_SetWindowLongW)();\n        puStack208 = NULL;\n        uStack212 = *0x41700c;\n        uStack216 = 0;\n        uStack224 = 0x16;\n        uStack228 = 0x118;\n        uStack232 = 10;\n        uStack236 = 10;\n        uStack240 = 0x5000000b;\n        pcStack248 = L\"STATIC\";\n        uStack252 = 0;\n        uStack256 = 0x4090a3;\n        iStack220 = iVar6;\n        *0x4170d4 = (*pcVar1)();\n        pcVar2 = _sym.imp.USER32.DLL_SendMessageW;\n        uStack256 = 1;\n        iStack260 = *0x4170c4;\n        uStack264 = 0x30;\n        uStack272 = 0x4090bb;\n        uStack268 = *0x4170d4;\n        (*_sym.imp.USER32.DLL_SendMessageW)();\n        pcVar1 = _sym.imp.USER32.DLL_CreateWindowExW;\n        if ((uStack140 & 1) != 0) {\n            uVar9 = 0x20;\n        }\n        uStack272 = 0;\n        uStack276 = *0x41700c;\n        uStack304 = uVar9 | 0x50010080;\n        uStack280 = 10;\n        uStack288 = 0x15;\n        uStack292 = 0x113;\n        uStack296 = 0x20;\n        uStack300 = 10;\n        uStack308 = 0;\n        pcStack312 = L\"EDIT\";\n        uStack316 = 0x200;\n        uStack320 = 0x4090f9;\n        iStack284 = iVar6;\n        *0x4170d0 = (*_sym.imp.USER32.DLL_CreateWindowExW)();\n        uStack320 = 1;\n        iStack324 = *0x4170c4;\n        uStack328 = 0x30;\n        uStack336 = 0x40910b;\n        uStack332 = *0x4170d0;\n        (*pcVar2)();\n        uStack336 = *0x4170d0;\n        iStack340 = 0x409117;\n        (*_sym.imp.USER32.DLL_SetFocus)();\n        if (iVar4 != 0) {\n            uStack344 = 0;\n            uStack348 = 0xc;\n            iStack352 = *0x4170d0;\n            iStack356 = 0x409128;\n            iStack340 = iVar4;\n            (*pcVar2)();\n            iStack360 = 0x40912e;\n            iStack356 = iVar4;\n            iStack356 = sub.MSVCRT.dll_wcslen();\n            uStack364 = 0x409136;\n            iStack360 = iVar4;\n            iStack360 = sub.MSVCRT.dll_wcslen();\n            uStack364 = 0xb1;\n            uStack368 = *0x4170d0;\n            uStack372 = 0x409145;\n            (*pcVar2)();\n        }\n        iStack340 = 0;\n        uStack344 = *0x41700c;\n        uStack348 = 1000;\n        iStack356 = 0x19;\n        iStack360 = 0x50;\n        uStack364 = 0x43;\n        uStack368 = 0x6e;\n        uStack372 = 0x50010001;\n        uStack376 = 0x412080;\n        iStack352 = iVar6;\n        *0x4170cc = (*pcVar1)(0, L\"BUTTON\");\n        (*pcVar2)(*0x4170cc, 0x30, *0x4170c4, 1);\n        uStack368 = 0x3e9001b;\n        uStack376 = CONCAT31(uStack376 >> 8 & 0xff | 0xd00, 1);\n        uStack372 = uStack372 & 0xff000000 | 0x103e8;\n        iVar7 = (*_sym.imp.USER32.DLL_CreateAcceleratorTableW)(&stack0xfffffe88, 2);\n        (*_sym.imp.USER32.DLL_SetForegroundWindow)(iVar6);\n        (*_sym.imp.USER32.DLL_BringWindowToTop)(iVar6);\n        while (*0x4170c8 == 0) {\n            iStack204 = 0;\n            puStack208 = &stack0xffffff64;\n            uStack212 = 0x4091df;\n            iVar8 = (*_sym.imp.USER32.DLL_GetMessageW)();\n            if (iVar8 == 0) break;\n            puStack208 = 0x4091f0;\n            iStack204 = iVar6;\n            iVar8 = (*_sym.imp.USER32.DLL_TranslateAcceleratorW)();\n            if (iVar8 == 0) {\n                (*_sym.imp.USER32.DLL_TranslateMessage)();\n                iStack204 = 0x40920a;\n                (*_sym.imp.USER32.DLL_DispatchMessageW)();\n            }\n        }\n        if (iVar7 != 0) {\n            (*_sym.imp.USER32.DLL_DestroyAcceleratorTable)();\n        }\n        if (iVar5 / 2 != 0x96) {\n            arg_8h = sub.MSVCRT.dll_wcslen();\n            iStack204 = 0x40923c;\n            puStack208 = fcn.0040e200(arg_8h, uStack60);\n            uStack212 = 0x409246;\n            iStack204 = iVar3;\n            sub.MSVCRT.dll_wcscpy();\n            puStack208 = NULL;\n            uStack212 = *0x417008;\n            uStack216 = 0x40925a;\n            iStack204 = iVar3;\n            (*_sym.imp.KERNEL32.DLL_HeapFree)();\n            goto code_r0x0040925a;\n        }\n    }\n    fcn.0040e2a0(uStack60);\ncode_r0x0040926d:\n    fcn.00408e3a();\n    iStack204 = 0x40927f;\n    fcn.00408e3a();\n    puStack208 = 0x409285;\n    iStack204 = iVar4;\n    fcn.00408e3a();\n    return;\n}\n",
        "token_count": 2758
    },
    "00409292": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409292(void)\n\n{\n    if (*0x4170dc != 0) {\n        (*_sym.imp.USER32.DLL_EnableWindow)(*0x4170d8, 1);\n    }\n    fcn.00409528(0);\n    return;\n}\n",
        "token_count": 62
    },
    "004092b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004092b1(uint arg_8h, int32_t arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    if ((arg_ch == 1) && (arg_14h != 0)) {\n        (*_sym.imp.USER32.DLL_SendMessageW)(arg_8h, 0x467, 1, arg_14h);\n        (*_sym.imp.KERNEL32.DLL_Sleep)(200);\n        (*_sym.imp.USER32.DLL_PostMessageW)(arg_8h, 0x467, 1, arg_14h);\n    }\n    return 0;\n}\n",
        "token_count": 143
    },
    "004092f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004092f5(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    int32_t iVar5;\n    uint uVar6;\n    code *pcVar7;\n    char *pcVar8;\n    uint uStack576;\n    code *pcStack552;\n    int16_t *piStack548;\n    int16_t aiStack542 [260];\n    ushort uStack22;\n    uint uStack20;\n    int32_t iStack12;\n    \n    iVar5 = 0;\n    if (*0x4170e0 == 0) {\n        uStack576 = 0;\n        *0x4170e0 = 1;\n        (*_sym.imp.OLE32.DLL_CoInitialize)();\n    }\n    uStack576 = 0x20;\n    sub.MSVCRT.dll_memset(&pcStack552, 0);\n    uStack576 = 0x412098;\n    pcVar2 = (*_sym.imp.KERNEL32.DLL_LoadLibraryW)();\n    pcVar1 = _sym.imp.KERNEL32.DLL_GetProcAddress;\n    if (pcVar2 != NULL) {\n        pcVar8 = \"SHBrowseForFolderW\";\n        (*_sym.imp.KERNEL32.DLL_GetProcAddress)(pcVar2);\n        pcVar7 = pcVar2;\n        uStack576 = (*pcVar1)(pcVar2, 0x4120c4);\n        if (iStack12 == 0) {\n            iStack12 = 0x412024;\n        }\n        sub.MSVCRT.dll_wcsncpy(aiStack542 + 1, iStack12, 0x103);\n        uStack22 = 0;\n        iVar3 = sub.MSVCRT.dll_wcslen(aiStack542 + 1);\n        if ((3 < iVar3) && (aiStack542[iVar3] == 0x5c)) {\n            aiStack542[iVar3] = 0;\n        }\n        fcn.00409471();\n        piStack548 = aiStack542 + 1;\n        uVar6 = 1;\n        pcStack552 = fcn.004092b1;\n        fcn.00409528(1);\n        iVar3 = (*pcVar8)(&uStack576);\n        fcn.00409528(0);\n        if (iVar3 != 0) {\n            puVar4 = fcn.0040e200(0x104, uStack20);\n            *puVar4 = 0;\n            (*pcVar7)(uVar6, puVar4);\n            (*_sym.imp.OLE32.DLL_CoTaskMemFree)(uVar6);\n            iVar5 = sub.MSVCRT.dll_wcslen(puVar4);\n            if (puVar4[iVar5 + -1] != 0x5c) {\n                puVar4[iVar5] = 0x5c;\n                puVar4[iVar5 + 1] = 0;\n                iVar5 = iVar5 + 1;\n            }\n        }\n        (*_sym.imp.KERNEL32.DLL_FreeLibrary)(pcVar2);\n        if (iVar5 != 0) goto code_r0x0040945d;\n    }\n    puVar4 = fcn.0040e200(0x104, param_2);\n    *puVar4 = 0;\ncode_r0x0040945d:\n    fcn.0040e350(0x104 - iVar5);\n    return;\n}\n",
        "token_count": 768
    },
    "00409528": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.00409528(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (param_1 == 0) {\n        puVar3 = *0x4170e4;\n        if (*0x4170e4 != NULL) {\n            do {\n                puVar1 = *puVar3;\n                iVar2 = (*_sym.imp.KERNEL32.DLL_GetCurrentThreadId)();\n                if (puVar3[2] == iVar2) {\n                    if (*(puVar3 + 0x11) != '\\0') {\n                        (*_sym.imp.USER32.DLL_EnableWindow)(puVar3[3], 1);\n                    }\n                    if (*(puVar3 + 4) != '\\0') {\n                        (*_sym.imp.USER32.DLL_SetWindowPos)(puVar3[3], 0xffffffff, 0, 0, 0, 0, 3);\n                    }\n                    fcn.0040dad2(0x4170e4, puVar3 + 2);\n                }\n                puVar3 = puVar1;\n            } while (puVar1 != NULL);\n        }\n    }\n    else {\n        (*_sym.imp.USER32.DLL_EnumWindows)(0x4094a7, param_1);\n        puVar3 = *0x4170e4;\n        while (puVar1 = puVar3,  puVar1 != NULL) {\n            puVar3 = *puVar1;\n            iVar2 = (*_sym.imp.KERNEL32.DLL_GetCurrentThreadId)();\n            if ((puVar1[2] == iVar2) && (*(puVar1 + 4) != '\\0')) {\n                (*_sym.imp.USER32.DLL_SetWindowPos)(puVar1[3], 0xfffffffe, 0, 0, 0, 0, 3);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 424
    },
    "00409860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "set environment variable"
        ],
        "decompiled_code": "\nvoid fcn.00409860(int32_t param_1, int32_t param_2)\n\n{\n    if (param_1 != 0) {\n        if (param_2 == 0) {\n            param_2 = 0x412024;\n        }\n        (*_sym.imp.KERNEL32.DLL_SetEnvironmentVariableW)(param_1, param_2);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "004098d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00409a1a)\n\nvoid fcn.004098d0(uint param_1)\n\n{\n    *0x4170e8 = param_1;\n    if (*0x4170f0 == 0) {\n        *0x4170f0 = (*_sym.imp.KERNEL32.DLL_SetUnhandledExceptionFilter)(0x409890);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00409a05. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.DLL_SetUnhandledExceptionFilter)();\n    return;\n}\n",
        "token_count": 145
    },
    "00409910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00409910(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (*0x4170ec == 0) {\n        *0x416118 = **param_1;\n    }\n    else {\n        *0x4170ec = 0;\n    }\n    piVar1 = *param_1;\n    if ((*piVar1 == -0x3ffffffb) && (1 < piVar1[4])) {\n        *0x4176e8 = piVar1[6];\n    }\n    else {\n        *0x4176e8 = 0;\n    }\n    *0x4176e0 = (*param_1)[3];\n    *0x4176e4 = *0x416001;\n    *0x4176ec = param_1[1][0x2c];\n    *0x4176f0 = param_1[1][0x29];\n    *0x4176f4 = param_1[1][0x2b];\n    *0x4176f8 = param_1[1][0x2a];\n    *0x4176fc = param_1[1][0x2d];\n    *0x417700 = param_1[1][0x28];\n    *0x417704 = param_1[1][0x27];\n    *0x417708 = param_1[1][0x31];\n    *0x41770c = param_1[1][0x30];\n    return 1;\n}\n",
        "token_count": 342
    },
    "00409c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00409c50(int16_t *param_1, uint32_t param_2, uint32_t param_3, uint param_4)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int16_t *piVar4;\n    int32_t arg_8h;\n    int32_t iVar5;\n    uint uVar6;\n    uint unaff_EBP;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    \n    param_2 = (param_2 < -1) - 1 & param_2;\n    if ((param_3 & 0x1f) == 0x19) {\n        if (param_2 == 0xffffffff) {\n            piVar4 = param_1;\n            do {\n                iVar2 = *piVar4;\n                piVar4 = piVar4 + 1;\n            } while (iVar2 != 0);\n            param_2 = piVar4 - (param_1 + 1) >> 1;\n        }\n        piVar4 = fcn.0040e200(param_2, param_4);\n        if ((param_1 != NULL) && (param_2 != 0)) {\n            iVar7 = param_1 - piVar4;\n            do {\n                iVar2 = *(iVar7 + piVar4);\n                if (iVar2 == 0) break;\n                *piVar4 = iVar2;\n                piVar4 = piVar4 + 1;\n                param_2 = param_2 - 1;\n            } while (param_2 != 0);\n        }\n        fcn.0040e350(param_2);\n        *piVar4 = 0;\n        return;\n    }\n    if ((param_3 & 0x1f) == 2) {\n        uVar6 = 0xfde9;\n        if (param_2 != 0xffffffff) {\n            if ((param_3 & 0x40) == 0) {\n                param_2 = fcn.0040e380(param_1, param_2);\n                uVar6 = 0xfde9;\n            }\n            goto code_r0x00409cfb;\n        }\n    }\n    else {\n        uVar6 = 0;\ncode_r0x00409cfb:\n        if (param_2 != 0xffffffff) {\n            iVar7 = 0;\n            cVar1 = *param_1;\n            while ((cVar1 != '\\0' && (iVar7 < param_2))) {\n                iVar7 = iVar7 + 1;\n                cVar1 = *(param_1 + iVar7);\n            }\n            goto code_r0x00409d23;\n        }\n    }\n    piVar4 = param_1;\n    do {\n        cVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar7 = piVar4 - (param_1 + 1);\ncode_r0x00409d23:\n    pcVar3 = _sym.imp.KERNEL32.DLL_MultiByteToWideChar;\n    uVar9 = 0;\n    iVar8 = iVar7;\n    arg_8h = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)(uVar6, 0, param_1, iVar7, 0, 0);\n    iVar5 = fcn.0040e200(arg_8h, unaff_EBP);\n    iVar7 = (*pcVar3)(uVar9, 0, iVar8, iVar7, iVar5, arg_8h + 1);\n    *(iVar5 + iVar7 * 2) = 0;\n    return;\n}\n",
        "token_count": 819
    },
    "00409fe3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * fcn.00409fe3(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((param_3 == 1) && (puVar1 = fcn.00409f58(param_1, param_2),  puVar1 != NULL)) {\n        if (param_1[4] != 0) {\n            fcn.00411a6a(puVar1, param_1[4]);\n        }\n    }\n    else {\n        if (param_2 == 0) {\n            param_2 = 0x412024;\n        }\n        if ((*(param_1 + 0xb) & 1) == 0) {\n            uVar2 = fcn.0040a24f(param_2);\n        }\n        else {\n            uVar2 = fcn.0040a26a();\n        }\n        uVar2 = uVar2 % param_1[9];\n        puVar1 = fcn.0040d51f(param_1[0xe]);\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        iVar3 = sub.MSVCRT.dll_wcslen(param_2);\n        uVar4 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 0, iVar3 * 2 + 2);\n        puVar1[1] = uVar4;\n        sub.MSVCRT.dll_wcscpy(uVar4, param_2);\n        *puVar1 = *(param_1[1] + uVar2 * 4);\n        *(param_1[1] + uVar2 * 4) = puVar1;\n        param_1[2] = 0;\n        param_1[10] = param_1[10] + 1;\n        *param_1 = puVar1;\n        puVar1 = puVar1 + 2;\n        param_1[5] = uVar2;\n    }\n    if ((puVar1 != NULL) && (sub.MSVCRT.dll_memset(puVar1, 0, param_1[7]),  (*(param_1 + 0xb) & 2) != 0)) {\n        fcn.00411b6f(puVar1, param_1[4]);\n    }\n    return puVar1;\n}\n",
        "token_count": 544
    },
    "0040a14a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * fcn.0040a14a(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if ((param_3 == 1) && (puVar1 = fcn.0040a296(param_1, param_2),  puVar1 != NULL)) {\n        if (param_1[4] != 0) {\n            fcn.00411a6a(puVar1, param_1[4]);\n        }\n    }\n    else {\n        iVar2 = param_2 % param_1[9];\n        puVar1 = fcn.0040d51f(param_1[0xe]);\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        puVar1[1] = param_2;\n        *puVar1 = *(param_1[1] + iVar2 * 4);\n        *(param_1[1] + iVar2 * 4) = puVar1;\n        param_1[2] = 0;\n        param_1[10] = param_1[10] + 1;\n        *param_1 = puVar1;\n        puVar1 = puVar1 + 2;\n        param_1[5] = iVar2;\n    }\n    if ((puVar1 != NULL) && (sub.MSVCRT.dll_memset(puVar1, 0, param_1[7]),  (*(param_1 + 0xb) & 2) != 0)) {\n        fcn.00411b6f(puVar1, param_1[4]);\n    }\n    return puVar1;\n}\n",
        "token_count": 374
    },
    "0040a1db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040a1db(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = *(param_1 + 0x14);\n    if (iVar1 < *(param_1 + 0x24)) {\n        piVar2 = *(param_1 + 4) + iVar1 * 4;\n        do {\n            if (*piVar2 != 0) {\n                *(param_1 + 0x14) = iVar1;\n                return *(*(param_1 + 4) + iVar1 * 4);\n            }\n            iVar1 = iVar1 + 1;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 < *(param_1 + 0x24));\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "0040a208": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.0040a208(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar1 = *param_1;\n    piVar2 = param_1[5];\n    param_1[2] = piVar1;\n    param_1[6] = piVar2;\n    if (piVar1 == NULL) {\n        if (piVar2 == 0xffffffff) {\n            param_1[5] = NULL;\n            goto code_r0x0040a234;\n        }\n    }\n    else {\n        piVar1 = *piVar1;\n        *param_1 = piVar1;\n        if (piVar1 != NULL) goto code_r0x0040a246;\n        param_1[5] = piVar2 + 1;\ncode_r0x0040a234:\n        piVar2 = fcn.0040a1db(param_1);\n        *param_1 = piVar2;\n    }\n    if (*param_1 == NULL) {\n        return NULL;\n    }\ncode_r0x0040a246:\n    return *param_1 + 2;\n}\n",
        "token_count": 263
    },
    "0040a37a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a37a(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    code *pcVar3;\n    \n    if (param_1 != 0) {\n        fcn.0040a436(param_1);\n        fcn.0040d8e6(*(param_1 + 0x1c));\n        pcVar3 = _sym.imp.KERNEL32.DLL_HeapFree;\n        **(param_1 + 0x24) = 0;\n        *(*(param_1 + 0x24) + 4) = 0;\n        puVar2 = *(param_1 + 0x20);\n        while (puVar2 != NULL) {\n            puVar1 = *puVar2;\n            (*pcVar3)(*0x417008, 0, puVar2);\n            puVar2 = puVar1;\n        }\n        if (*(param_1 + 0x32) != '\\0') {\n            (*pcVar3)(*0x417008, 0, *(param_1 + 0x24));\n        }\n        (*pcVar3)(*0x417008, 0, param_1);\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "0040a532": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * fcn.0040a532(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    iVar1 = param_1[5];\n    param_1[5] = param_2;\n    if ((param_2 < 0) || (iVar3 = param_1[4],  iVar3 <= param_2)) {\n        puVar2 = NULL;\n    }\n    else if (*(param_1 + 0xc) == '\\0') {\n        puVar2 = param_1[2];\n        if (iVar1 < param_2) {\n            iVar3 = iVar3 - param_2;\n            param_2 = param_2 - iVar1;\n            if (param_2 < iVar3) {\n                for (; (puVar2 != NULL && (param_2 != 0)); param_2 = param_2 + -1) {\n                    puVar2 = *puVar2;\n                }\n            }\n            else {\n                puVar2 = param_1[1];\n                while ((iVar3 = iVar3 + -1,  puVar2 != NULL && (iVar3 != 0))) {\n                    puVar2 = puVar2[1];\n                }\n            }\n        }\n        else {\n            iVar1 = iVar1 - param_2;\n            if (iVar1 < param_2) {\n                for (; (puVar2 != NULL && (iVar1 != 0)); iVar1 = iVar1 + -1) {\n                    puVar2 = puVar2[1];\n                }\n            }\n            else {\n                puVar2 = *param_1;\n                for (; (puVar2 != NULL && (param_2 != 0)); param_2 = param_2 + -1) {\n                    puVar2 = *puVar2;\n                }\n            }\n        }\n    }\n    else if (param_2 < iVar3 / 2) {\n        puVar2 = *param_1;\n        for (; (puVar2 != NULL && (param_2 != 0)); param_2 = param_2 + -1) {\n            puVar2 = *puVar2;\n        }\n    }\n    else {\n        puVar2 = param_1[1];\n        iVar3 = iVar3 - param_2;\n        while ((iVar3 = iVar3 + -1,  puVar2 != NULL && (iVar3 != 0))) {\n            puVar2 = puVar2[1];\n        }\n    }\n    param_1[2] = puVar2;\n    *param_1[3] = puVar2;\n    if (puVar2 == NULL) {\n        *(param_1 + 0xc) = 1;\n        puVar2 = NULL;\n    }\n    else {\n        *(param_1 + 0xc) = 0;\n        puVar2 = puVar2 + 2;\n    }\n    return puVar2;\n}\n",
        "token_count": 642
    },
    "0040a665": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040a665(int32_t s2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint lpPathName;\n    uint var_4h;\n    \n    if (s2 == 0) {\n        uVar4 = 0;\n    }\n    else {\n        sub.MSVCRT.dll_wcsncpy(&lpPathName, s2, 0x104);\n        var_4h._0_2_ = 0;\n        iVar2 = sub.MSVCRT.dll_wcslen(&lpPathName);\n        for (puVar3 = &lpPathName + iVar2 * 2;\n            (&lpPathName < puVar3 && (((iVar1 = *(puVar3 + -2),  iVar1 == 0x20 || (iVar1 == 0x5c)) || (iVar1 == 0x2f))))\n            ; puVar3 = puVar3 + -2) {\n        }\n        *puVar3 = 0;\n        uVar4 = (*_sym.imp.KERNEL32.DLL_CreateDirectoryW)(&lpPathName, 0);\n    }\n    return uVar4;\n}\n",
        "token_count": 277
    },
    "0040a759": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.0040a759(int32_t param_1, uint8_t param_2)\n\n{\n    uint uVar1;\n    \n    if (param_1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if ((param_2 & 2) != 0) {\n            (*_sym.imp.KERNEL32.DLL_SetFileAttributesW)(param_1, 0x80);\n        }\n        uVar1 = (*_sym.imp.KERNEL32.DLL_DeleteFileW)(param_1);\n    }\n    return uVar1;\n}\n",
        "token_count": 127
    },
    "0040a7da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040a7da(uint param_1, uint param_2)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t nFolder;\n    uint unaff_EDI;\n    \n    nFolder = 0;\n    arg_ch = fcn.0040e200(0x104, param_2);\n    // switch table (10 cases) at 0x40a8d2\n    switch(unaff_EBX) {\n    case 0:\n        break;\n    case 1:\n        nFolder = 0x26;\n        break;\n    case 2:\n        goto code_r0x0040a8bd;\n    case 3:\n        nFolder = 5;\n        break;\n    case 4:\n        nFolder = 0x1a;\n        break;\n    case 5:\n        nFolder = 0x23;\n        break;\n    case 6:\n        nFolder = 0xe;\n        break;\n    case 7:\n        nFolder = 0xd;\n        break;\n    case 8:\n        nFolder = 0x27;\n        break;\n    case 9:\n        nFolder = 0x2e;\n        break;\n    default:\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryW)(L\"Shell32.DLL\");\n        if (iVar1 != 0) {\n            *0x4170f8 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, \"SHGetKnownFolderPath\");\n            if ((*0x4170f8 != NULL) && (iVar2 = (**0x4170f8)(0x41611c, 0, 0, &stack0xfffffff0),  iVar2 == 0)) {\n                sub.MSVCRT.dll_wcscpy(arg_ch, unaff_EDI);\n                sub.MSVCRT.dll_wcscat(arg_ch, 0x4126cc);\n                nFolder = sub.MSVCRT.dll_wcslen(arg_ch);\n                (*_sym.imp.OLE32.DLL_CoTaskMemFree)(unaff_EDI);\n            }\n            (*_sym.imp.KERNEL32.DLL_FreeLibrary)(iVar1);\n            if (nFolder != 0) goto code_r0x0040a8bd;\n        }\n        fcn.0040a90c(0x28, arg_ch);\n        sub.MSVCRT.dll_wcscat(arg_ch, 0x4126d0);\n        nFolder = sub.MSVCRT.dll_wcslen(arg_ch);\n        goto code_r0x0040a8bd;\n    }\n    nFolder = fcn.0040a90c(nFolder, arg_ch);\ncode_r0x0040a8bd:\n    fcn.0040e350(0x104 - nFolder);\n    *(arg_ch + nFolder * 2) = 0;\n    return;\n}\n",
        "token_count": 641
    },
    "0040a8fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "set current directory"
        ],
        "decompiled_code": "\nuint fcn.0040a8fa(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x0040a901. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (*_sym.imp.KERNEL32.DLL_SetCurrentDirectoryW)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 103
    },
    "0040a970": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a970(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == -1) {\n        fcn.0040d995(*0x41771c);\n        return;\n    }\n    puVar1 = fcn.0040d3f9(*0x41771c, param_1);\n    if (puVar1 != NULL) {\n        if (puVar1[1] != 0) {\n            fcn.0040a9e0(puVar1);\n            (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, puVar1[1]);\n        }\n        (*_sym.imp.KERNEL32.DLL_CloseHandle)(*puVar1);\n        fcn.0040d3aa(*0x41771c, param_1);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0040a9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040a9e0(uint *param_1)\n\n{\n    uint uVar1;\n    uint uStack4;\n    \n    uStack4 = 0;\n    if (param_1[5] == 0) {\n        uVar1 = param_1[1];\n        (*_sym.imp.KERNEL32.DLL_WriteFile)(*param_1, uVar1, param_1[2] - param_1[3], &uStack4, 0);\n        param_1[3] = param_1[2];\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 134
    },
    "0040aa60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * fcn.0040aa60(int32_t param_1, int32_t *param_2, uint param_3, uint32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    int32_t *piVar3;\n    uchar uVar4;\n    uint unaff_retaddr;\n    int32_t *piStack4;\n    \n    piVar3 = NULL;\n    piVar1 = fcn.0040d438(*0x41771c, param_1);\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    if (param_1 == 1) {\n        uVar4 = (param_4 & 0x20000) != 0;\n        if ((param_4 & 0x40000) != 0) {\n            uVar4 = 7;\n        }\n        param_2 = (*_sym.imp.KERNEL32.DLL_CreateFileW)(unaff_retaddr, 0x80000000, uVar4, 0, 3, 0x80, 0);\ncode_r0x0040ab8c:\n        if (param_2 == 0xffffffff) goto code_r0x0040ac2f;\n    }\n    else {\n        if (param_1 == 2) {\n            uVar4 = (param_4 & 0x20000) != 0;\n            if ((param_4 & 0x40000) != 0) {\n                uVar4 = 7;\n            }\n            param_2 = (*_sym.imp.KERNEL32.DLL_CreateFileW)(unaff_retaddr, 0xc0000000, uVar4, 0, 4, 0x80, 0);\n            goto code_r0x0040ab8c;\n        }\n        if (param_1 != 3) goto code_r0x0040ab8c;\n        uVar4 = (param_4 & 0x20000) != 0;\n        if ((param_4 & 0x40000) != 0) {\n            uVar4 = 7;\n        }\n        param_2 = (*_sym.imp.KERNEL32.DLL_CreateFileW)(unaff_retaddr, 0xc0000000, uVar4, 0, 2, 0x80, 0);\n        if (param_2 == 0xffffffff) {\n            param_2 = (*_sym.imp.KERNEL32.DLL_CreateFileW)(unaff_retaddr, 0x40000000, uVar4, 0, 5, 0, 0);\n            goto code_r0x0040ab8c;\n        }\n    }\n    if (param_2 != NULL) {\n        if ((*0x41612c == 0) || ((param_4 & 0x80000) != 0)) {\n            piVar1[1] = 0;\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 0, *0x41612c);\n            piVar1[1] = iVar2;\n        }\n        *piVar1 = param_2;\n        piVar1[2] = *0x41612c;\n        piVar1[6] = unaff_EBP;\n        piVar1[3] = 0;\n        piVar1[5] = 1;\n        piVar1[7] = param_1 == 1;\n        if ((param_1 == 2) && ((param_4 & 0x100000) != 0)) {\n            (*_sym.imp.KERNEL32.DLL_SetFilePointer)(param_2, 0, &stack0xfffffff4, 2);\n        }\n        piVar3 = piVar1;\n        if (piStack4 != 0xffffffff) {\n            piVar3 = param_2;\n        }\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\ncode_r0x0040ac2f:\n    if (piStack4 != 0xffffffff) {\n        piVar1 = piStack4;\n    }\n    fcn.0040d3aa(*0x41771c, piVar1);\n    return piVar3;\n}\n",
        "token_count": 946
    },
    "0040ae20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * fcn.0040ae20(uint *param_1, int16_t *param_2, int32_t param_3)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int16_t **ppiVar5;\n    uint *unaff_ESI;\n    int16_t *piStack16;\n    uint *puStack4;\n    \n    puStack4 = NULL;\n    if ((param_2 == NULL) || (*param_2 == 0)) {\n        return NULL;\n    }\n    if (param_3 != 0x19) {\n        piStack16 = param_2;\n        iVar4 = fcn.0040b0d0((param_3 != 2) - 1 & 0xfde9);\n        if (iVar4 != 0) {\n            if (unaff_ESI[1] == 0) {\n                ppiVar5 = &piStack16;\n                uVar2 = *unaff_ESI;\n                unaff_ESI = puStack4;\n                (*_sym.imp.KERNEL32.DLL_WriteFile)(uVar2, iVar4, puStack4, ppiVar5, 0);\n            }\n            else {\n                ppiVar5 = fcn.0040afc0(unaff_ESI, iVar4, puStack4);\n            }\n            (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, iVar4, unaff_ESI, ppiVar5);\n        }\n        return piStack16;\n    }\n    piVar3 = param_2;\n    if (param_1[1] == 0) {\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n        piStack16 = NULL;\n        piVar3 = (piVar3 - (param_2 + 1) >> 1) * 2;\n        (*_sym.imp.KERNEL32.DLL_WriteFile)(*param_1, param_2, piVar3, &puStack4);\n        return piVar3;\n    }\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + 1;\n    } while (iVar1 != 0);\n    piStack16 = (piVar3 - (param_2 + 1) >> 1) * 2;\n    piVar3 = fcn.0040afc0(param_1, param_2);\n    return piVar3;\n}\n",
        "token_count": 563
    },
    "0040af50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040af50(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint unaff_EDI;\n    \n    if (param_2 == 0) {\n        return 0;\n    }\n    if (param_3 != 0) {\n        puVar1 = fcn.0040d3f9(*0x41771c, param_1);\n        if (puVar1 != NULL) {\n            if (puVar1[1] != 0) {\n                uVar2 = fcn.0040afc0(puVar1, param_2, param_3);\n                return uVar2;\n            }\n            (*_sym.imp.KERNEL32.DLL_WriteFile)(*puVar1, param_2, param_3, &stack0xfffffff4, 0);\n        }\n        return unaff_EDI;\n    }\n    return 0;\n}\n",
        "token_count": 213
    },
    "0040afc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040afc0(uint *param_1, uint *param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    int32_t iStack4;\n    \n    if (param_1[7] != 0) {\n        return 0;\n    }\n    if (param_1[5] == 1) {\n        iStack4 = -param_1[3] >> 0x1f;\n        (*_sym.imp.KERNEL32.DLL_SetFilePointer)(*param_1, -param_1[3], &iStack4, 1);\n        param_1[5] = 0;\n        param_1[3] = param_1[2];\n    }\n    if (param_3 < param_1[3]) {\n        puVar1 = (param_1[2] + param_1[1]) - param_1[3];\n        if (param_3 == 1) {\n            *puVar1 = *param_2;\n            param_1[3] = param_1[3] + -1;\n            return 1;\n        }\n        if (param_3 == 2) {\n            *puVar1 = *param_2;\n            param_1[3] = param_1[3] + -2;\n            return 2;\n        }\n        if (param_3 == 4) {\n            *puVar1 = *param_2;\n            param_1[3] = param_1[3] + -4;\n            return 4;\n        }\n    }\n    else {\n        fcn.0040a9e0(param_1);\n        if (param_1[2] <= param_3) {\n            (*_sym.imp.KERNEL32.DLL_WriteFile)(*param_1, param_1, param_3, &stack0xfffffff0, 0);\n            return param_3;\n        }\n        puVar1 = (param_1[1] - param_1[3]) + param_1[2];\n    }\n    sub.MSVCRT.dll_memcpy(puVar1);\n    param_1[3] = param_1[3] - param_3;\n    return param_3;\n}\n",
        "token_count": 486
    },
    "0040c5d6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040c5d6(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if (*(param_1 + 0x5c) == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = param_1 + 0x60;\n    }\n    uVar1 = *(param_1 + 0x14) >> 3 & 0x3f;\n    uVar4 = *(param_1 + 0x14) + param_3 * 8;\n    *(param_1 + 0x14) = uVar4;\n    if (uVar4 < param_3 << 3) {\n        *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n    }\n    *(param_1 + 0x18) = *(param_1 + 0x18) + (param_3 >> 0x1d);\n    if (uVar1 + param_3 < 0x40) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = -uVar1 + 0x40;\n        sub.MSVCRT.dll_memcpy(param_1 + 0x1c + uVar1, param_2, iVar2);\n        fcn.0040b2e7(param_1, param_1 + 0x1c, iVar3);\n        for (uVar4 = -uVar1 + 0x7f; uVar4 < param_3; uVar4 = uVar4 + 0x40) {\n            fcn.0040b2e7(param_1, param_2 + -0x3f + uVar4, iVar3);\n            iVar2 = iVar2 + 0x40;\n        }\n        uVar1 = 0;\n    }\n    sub.MSVCRT.dll_memcpy(param_1 + 0x1c + uVar1, param_2 + iVar2, param_3 - iVar2);\n    return;\n}\n",
        "token_count": 484
    },
    "0040d264": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d264(void)\n\n{\n    if (*0x416016 != 0) {\n        return;\n    }\n    if (*0x41760c != 0) {\n        (*_sym.imp.KERNEL32.DLL_TlsFree)(*0x417610);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0040d3aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d3aa(uint *param_1)\n\n{\n    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(param_1 + 8);\n    if ((param_1 < 0) || (param_1[2] <= param_1)) {\n        fcn.0040dad2(param_1 + 4, param_1);\n    }\n    else if (*(param_1[3] + param_1 * 4) != 0) {\n        sub.MSVCRT.dll_memset(*(param_1[3] + param_1 * 4), 0, *param_1);\n    }\n    (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(param_1 + 8);\n    return;\n}\n",
        "token_count": 164
    },
    "0040d438": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040d438(uint *param_1)\n\n{\n    int32_t in_ram_ffffffff;\n    uint uVar1;\n    \n    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(param_1 + 8);\n    if (param_1 == 0xffffffff) {\n        uVar1 = fcn.0040db12(0xf, in_ram_ffffffff + 8);\n    }\n    else {\n        if (param_1[2] <= param_1) {\n            param_1[2] = param_1[1] + param_1;\n            uVar1 = (*_sym.imp.KERNEL32.DLL_HeapReAlloc)(*0x417008, 8, param_1[3], (param_1[1] + param_1) * 4);\n            param_1[3] = uVar1;\n        }\n        if (*(param_1[3] + param_1 * 4) == 0) {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 8, *param_1);\n            *(param_1[3] + param_1 * 4) = uVar1;\n        }\n        else if (param_1[5] != NULL) {\n            (*param_1[5])(param_1);\n        }\n        uVar1 = *(param_1[3] + param_1 * 4);\n    }\n    (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(param_1 + 8);\n    return uVar1;\n}\n",
        "token_count": 344
    },
    "0040d6eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040d6eb(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    if (param_1[7] != NULL) {\n        (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(param_1 + 8);\n    }\n    ppiVar3 = param_2 + -4;\n    ppiVar1 = *ppiVar3;\n    *ppiVar3 = ppiVar1[2];\n    ppiVar1[5] = ppiVar1[5] + 1;\n    ppiVar1[2] = ppiVar3;\n    if (ppiVar1[5] != ppiVar1[4]) {\n        if ((ppiVar1[5] == 0x1) && (ppiVar1[3] <= ppiVar1[4])) {\n            if (*ppiVar1 != NULL) {\n                (*ppiVar1)[1] = ppiVar1[1];\n            }\n            if (ppiVar1 == *param_1) {\n                *param_1 = *ppiVar1;\n            }\n            else {\n                *ppiVar1[1] = *ppiVar1;\n            }\n            *ppiVar1 = param_1[1];\n            ppiVar1[1] = NULL;\n            param_1[1] = ppiVar1;\n            if (*ppiVar1 != NULL) {\n                (*ppiVar1)[1] = ppiVar1;\n            }\n        }\n        goto code_r0x0040d7a5;\n    }\n    piVar2 = *ppiVar1;\n    if (ppiVar1[3] == 0x1) {\n        if (piVar2 != NULL) {\n            piVar2[1] = ppiVar1[1];\n        }\n        piVar2 = *ppiVar1;\n        if (ppiVar1 == *param_1) {\n            *param_1 = piVar2;\n        }\n        else {\ncode_r0x0040d750:\n            *ppiVar1[1] = piVar2;\n        }\n    }\n    else {\n        if (piVar2 != NULL) {\n            piVar2[1] = ppiVar1[1];\n        }\n        piVar2 = *ppiVar1;\n        if (ppiVar1 != param_1[1]) goto code_r0x0040d750;\n        param_1[1] = piVar2;\n    }\n    param_1[3] = param_1[3] - ppiVar1[3];\n    (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, ppiVar1);\ncode_r0x0040d7a5:\n    if (param_1[7] != NULL) {\n        (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(param_1 + 8);\n    }\n    return;\n}\n",
        "token_count": 656
    },
    "0040d8e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d8e6(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    \n    ppiVar2 = *(param_1 + 8);\n    if (ppiVar2 == NULL) {\n        fcn.0040d67d(param_1);\n        if (*(param_1 + 0x1c) != 0) {\n            (*_sym.imp.KERNEL32.DLL_DeleteCriticalSection)(param_1 + 0x20);\n        }\n        (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, param_1);\n    }\n    else {\n        (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(0x41761c);\n        piVar1 = *(param_1 + 8) + 0x14;\n        *piVar1 = *piVar1 + -1;\n        if (*(*(param_1 + 8) + 0x14) < 1) {\n            *(param_1 + 8) = 0;\n            fcn.0040d8e6(param_1);\n            if (*ppiVar2 != NULL) {\n                *(*ppiVar2 + 4) = ppiVar2[1];\n            }\n            if (ppiVar2[1] != NULL) {\n                *ppiVar2[1] = *ppiVar2;\n            }\n            if (*0x417618 == ppiVar2) {\n                *0x417618 = *ppiVar2;\n            }\n            (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, ppiVar2);\n        }\n        (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(0x41761c);\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "0040d995": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d995(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h;\n    if (*(arg_8h + 0x14) != 0) {\n        fcn.0040dabb(arg_8h);\n        while( true ) {\n            iVar2 = fcn.0040da64(iVar1, &arg_8h);\n            if (iVar2 == 0) break;\n            (**(iVar1 + 0x14))(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0040d9e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d9e3(int32_t *arg_8h, code *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryW)(0x412700);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, \"InitOnceExecuteOnce\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(arg_8h, 0x40d9c3, arg_ch, &var_4h);\n        }\n        (*_sym.imp.KERNEL32.DLL_FreeLibrary)(iVar1);\n        if (pcVar2 != NULL) {\n            return;\n        }\n    }\n    iVar1 = (*_sym.imp.KERNEL32.DLL_InterlockedCompareExchange)(arg_8h, 1, 0);\n    if (iVar1 == 0) {\n        (*arg_ch)();\n        (*_sym.imp.KERNEL32.DLL_InterlockedExchange)(arg_8h, 2);\n    }\n    else if (iVar1 == 1) {\n        while (*arg_8h != 2) {\n            (*_sym.imp.KERNEL32.DLL_Sleep)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "0040da64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.0040da64(int32_t param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = NULL;\n    do {\n        piVar1 = *(param_1 + 0x18);\n        if ((piVar1 < 0) || (*(param_1 + 8) <= piVar1)) break;\n        piVar2 = *(*(param_1 + 0xc) + piVar1 * 4);\n        if ((piVar2 != NULL) && (*piVar2 != 0)) {\n            *param_2 = piVar1;\n            piVar3 = piVar2;\n        }\n        *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n    } while (piVar3 == NULL);\n    if (piVar3 == NULL) {\n        if (*(param_1 + 0x10) != 0) {\n            piVar3 = *(param_1 + 0x10) + 8;\n            *param_2 = piVar3;\n            if (piVar3 != NULL) {\n                return piVar3;\n            }\n        }\n        (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(param_1 + 0x20);\n    }\n    return piVar3;\n}\n",
        "token_count": 314
    },
    "0040de60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040de60(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170);\n    uVar3 = piVar1[2] - arg_ch;\n    if (*arg_8h == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417720, 0, uVar3 + 10);\n        *arg_8h = iVar2;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_HeapReAlloc)(*0x417720, 0, *arg_8h, uVar3 + 10);\n        *arg_8h = iVar2;\n    }\n    fcn.0040e300(*arg_8h, *piVar1 + arg_ch, uVar3 >> 1);\n    piVar1[2] = arg_ch;\n    return;\n}\n",
        "token_count": 258
    },
    "0040def0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040def0(int32_t arg_8h)\n\n{\n    uint in_EAX;\n    uint in_EDX;\n    \n    if (arg_8h != 0) {\n        (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417720, 0, arg_8h);\n    }\n    return CONCAT44(in_EDX, in_EAX);\n}\n",
        "token_count": 87
    },
    "0040dfc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dfc0(int32_t s)\n\n{\n    int32_t arg_8h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (s != 0) {\n        var_4h = sub.MSVCRT.dll_wcslen(s);\n    }\n    arg_8h = fcn.0040e200(var_4h, 0xffffffff);\n    if (s == 0) {\n        *(arg_8h + var_4h * 2) = 0;\n    }\n    else {\n        fcn.0040e300(arg_8h, s, var_4h);\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "0040e080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e080(uint *arg_8h, int32_t s)\n\n{\n    int32_t arg_10h;\n    uint uVar1;\n    uint var_4h;\n    \n    if (s != 0) {\n        arg_10h = sub.MSVCRT.dll_wcslen(s);\n        uVar1 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417720, 0, arg_10h * 2 + 10);\n        *arg_8h = uVar1;\n        fcn.0040e300(*arg_8h, s, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0040e0d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e0d0(int32_t *arg_8h, int32_t s)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (s == 0) {\n        if (*arg_8h != 0) {\n            (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417720, 0, *arg_8h);\n            *arg_8h = 0;\n        }\n    }\n    else {\n        var_4h = sub.MSVCRT.dll_wcslen(s);\n        if (*arg_8h == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417720, 0, var_4h * 2 + 10);\n            *arg_8h = iVar1;\n        }\n        else {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_HeapReAlloc)(*0x417720, 0, *arg_8h, var_4h * 2 + 10);\n            *arg_8h = iVar1;\n        }\n        fcn.0040e300(*arg_8h, s, var_4h);\n    }\n    return var_4h * 2 + 2;\n}\n",
        "token_count": 294
    },
    "0040e300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e300(uint *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    ushort *puVar1;\n    uint var_4h;\n    \n    puVar1 = arg_8h + arg_10h * 2;\n    for (; 0 < arg_10h; arg_10h = arg_10h + -2) {\n        *arg_8h = *arg_ch;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n    }\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 140
    },
    "0040e720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040e720(uint param_1, uint *param_2, uint param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack56 = param_3;\n    iStack52 = param_4;\n    uStack44 = param_1;\n    uStack40 = *param_2;\n    uStack24 = 0;\n    uStack20 = 0;\n    iVar1 = fcn.0040ffe0(&uStack56, \"1.2.8\", 0x38);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040e800(&uStack56, 4);\n        if (iVar1 != 1) {\n            fcn.0040fed0(&uStack56);\n            if ((iVar1 != 2) && ((iVar1 != -5 || (iStack52 != 0)))) {\n                return iVar1;\n            }\n            return -3;\n        }\n        *param_2 = uStack36;\n        iVar1 = fcn.0040fed0(&uStack56);\n    }\n    return iVar1;\n}\n",
        "token_count": 294
    },
    "0040e800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.0040e800(uint8_t **param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    uint16_t uVar9;\n    uint32_t uVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    int32_t iVar13;\n    uint32_t *puVar14;\n    uint32_t uStack52;\n    uint8_t *puStack48;\n    uint8_t *puStack44;\n    ushort uStack40;\n    uchar uStack38;\n    uchar uStack37;\n    uint32_t *puStack36;\n    uint8_t *puStack32;\n    uint8_t *puStack28;\n    int32_t iStack24;\n    uint32_t uStack20;\n    uint8_t *puStack16;\n    uint8_t *puStack12;\n    uint8_t *puStack8;\n    uint32_t *puStack4;\n    \n    if ((((param_1 == NULL) || (puVar14 = param_1[7],  puVar14 == NULL)) || (param_1[3] == NULL)) ||\n       ((*param_1 == NULL && (param_1[1] != NULL)))) {\n        return -2;\n    }\n    if (*puVar14 == 0xb) {\n        *puVar14 = 0xc;\n    }\n    puStack32 = param_1[3];\n    uVar10 = puVar14[0xe];\n    puStack44 = param_1[4];\n    puVar7 = *param_1;\n    puVar11 = param_1[1];\n    iStack24 = 0;\n    uVar8 = *puVar14;\n    puVar12 = puVar14[0xf];\n    if (uVar8 < 0x1f) {\n        puStack4 = puVar14 + 0x15;\n        uStack52 = uVar10;\n        puStack48 = puVar7;\n        puStack36 = puVar14;\n        puStack28 = puStack44;\n        puStack8 = puVar11;\n        do {\n            puVar6 = puVar12;\n            switch(*(uVar8 * 4 + 0x40fe40)) {\n            case 0x40e897:\n                uVar8 = puVar14[2];\n                if (uVar8 == 0) {\n                    *puVar14 = 0xc;\n                }\n                else {\n                    if (puVar12 < 0x10) {\n                        do {\n                            if (puVar11 == NULL) goto code_r0x0040ed69;\n                            uVar1 = *puVar7;\n                            puVar7 = puVar7 + 1;\n                            uVar10 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                            puVar12 = puVar12 + 8;\n                            puVar11 = puVar11 + -1;\n                            uStack52 = uVar10;\n                            puStack48 = puVar7;\n                        } while (puVar12 < 0x10);\n                        uVar8 = puVar14[2];\n                    }\n                    if (((uVar8 & 2) == 0) || (uVar10 != 0x8b1f)) {\n                        puVar14[4] = 0;\n                        if (puVar14[8] != 0) {\n                            *(puVar14[8] + 0x30) = 0xffffffff;\n                        }\n                        uVar8 = uVar10;\n                        if (((*(puVar14 + 2) & 1) == 0) ||\n                           (uVar8 = uStack52,  ((uVar10 >> 8) + (uVar10 & 0xff) * 0x100) % 0x1f != 0)) {\n                            param_1[6] = \"incorrect header check\";\n                            *puVar14 = 0x1d;\n                            uVar10 = uVar8;\n                        }\n                        else if ((uStack52 & 0xf) == 8) {\n                            puVar12 = puVar12 + -4;\n                            uVar10 = uStack52 >> 4;\n                            uVar8 = (uVar10 & 0xf) + 8;\n                            if (puVar14[9] == 0) {\n                                puVar14[9] = uVar8;\n                            }\n                            else if (puVar14[9] < uVar8) {\n                                param_1[6] = \"invalid window size\";\n                                *puVar14 = 0x1d;\n                                uStack52 = uVar10;\n                                break;\n                            }\n                            puVar14[5] = 1 << uVar8;\n                            puVar12 = fcn.00410ad0(0, 0, 0);\n                            puVar14[6] = puVar12;\n                            param_1[0xc] = puVar12;\n                            *puVar14 = ~(uStack52 >> 0xc) & 2 | 9;\n                            uStack52 = 0;\n                            puVar12 = NULL;\n                            uVar10 = 0;\n                        }\n                        else {\n                            param_1[6] = \"unknown compression method\";\n                            *puVar14 = 0x1d;\n                            uVar10 = uStack52;\n                        }\n                    }\n                    else {\n                        uVar10 = fcn.004102d0(0, 0, 0);\n                        puVar14[6] = uVar10;\n                        uStack40 = 0x8b1f;\n                        uVar10 = fcn.004102d0(puVar14[6], &uStack40, 2);\n                        puVar14[6] = uVar10;\n                        uStack52 = 0;\n                        puVar12 = NULL;\n                        *puVar14 = 1;\n                        uVar10 = 0;\n                    }\n                }\n                break;\n            case 0x40ea0e:\n                for (; puVar12 < 0x10; puVar12 = puVar12 + 8) {\n                    if (puVar11 == NULL) goto code_r0x0040ed69;\n                    uVar1 = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    uVar10 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                    puVar11 = puVar11 + -1;\n                    uStack52 = uVar10;\n                    puStack48 = puVar7;\n                }\n                puVar14[4] = uVar10;\n                if (uVar10 == '\\b') {\n                    if ((uVar10 & 0xe000) == 0) {\n                        if (puVar14[8] != NULL) {\n                            *puVar14[8] = uVar10 >> 8 & 1;\n                        }\n                        if ((puVar14[4] & 0x200) != 0) {\n                            uStack40 = uVar10;\n                            uVar10 = fcn.004102d0(puVar14[6], &uStack40, 2);\n                            puVar14[6] = uVar10;\n                        }\n                        uVar10 = 0;\n                        *puVar14 = 2;\n                        uStack52 = 0;\n                        puVar12 = NULL;\n                        do {\n                            if (puVar11 == NULL) goto code_r0x0040ed69;\n                            uVar1 = *puVar7;\n                            puVar7 = puVar7 + 1;\n                            uVar10 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                            puVar12 = puVar12 + 8;\n                            puVar11 = puVar11 + -1;\n                            uStack52 = uVar10;\n                            puStack48 = puVar7;\njoined_r0x0040eabb:\n                        } while (puVar12 < 0x20);\n                        if (puVar14[8] != 0) {\n                            *(puVar14[8] + 4) = uVar10;\n                        }\n                        if ((puVar14[4] & 0x200) != 0) {\n                            uStack40 = uVar10;\n                            uStack38 = uVar10 >> 0x10;\n                            uStack37 = uVar10 >> 0x18;\n                            uVar10 = fcn.004102d0(puVar14[6], &uStack40, 4);\n                            puVar14[6] = uVar10;\n                        }\n                        uVar10 = 0;\n                        *puVar14 = 3;\n                        uStack52 = 0;\n                        puVar12 = NULL;\n                        do {\n                            if (puVar11 == NULL) goto code_r0x0040ed69;\n                            uVar1 = *puVar7;\n                            puVar7 = puVar7 + 1;\n                            uVar10 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                            puVar12 = puVar12 + 8;\n                            puVar11 = puVar11 + -1;\n                            uStack52 = uVar10;\n                            puStack48 = puVar7;\njoined_r0x0040eb3b:\n                        } while (puVar12 < 0x10);\n                        if (puVar14[8] != 0) {\n                            *(puVar14[8] + 8) = uVar10 & 0xff;\n                            *(puVar14[8] + 0xc) = uVar10 >> 8;\n                        }\n                        if ((puVar14[4] & 0x200) != 0) {\n                            uStack40 = uVar10;\n                            uVar10 = fcn.004102d0(puVar14[6], &uStack40, 2);\n                            puVar14[6] = uVar10;\n                        }\n                        uVar10 = 0;\n                        *puVar14 = 4;\n                        uStack52 = 0;\n                        puVar12 = NULL;\n                        goto code_r0x0040ebb2;\n                    }\n                    param_1[6] = \"unknown header flags set\";\n                    *puVar14 = 0x1d;\n                }\n                else {\n                    param_1[6] = \"unknown compression method\";\n                    *puVar14 = 0x1d;\n                }\n                break;\n            case 0x40eab8:\n                goto joined_r0x0040eabb;\n            case 0x40eb38:\n                goto joined_r0x0040eb3b;\n            case 0x40ebb2:\ncode_r0x0040ebb2:\n                if ((puVar14[4] & 0x400) == 0) {\n                    if (puVar14[8] != 0) {\n                        *(puVar14[8] + 0x10) = 0;\n                    }\n                }\n                else {\n                    for (; puVar12 < 0x10; puVar12 = puVar12 + 8) {\n                        if (puVar11 == NULL) goto code_r0x0040ed69;\n                        uVar1 = *puVar7;\n                        puVar7 = puVar7 + 1;\n                        uVar10 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                        puVar11 = puVar11 + -1;\n                        uStack52 = uVar10;\n                        puStack48 = puVar7;\n                    }\n                    puVar14[0x10] = uVar10;\n                    if (puVar14[8] != 0) {\n                        *(puVar14[8] + 0x14) = uVar10;\n                    }\n                    if ((puVar14[4] & 0x200) != 0) {\n                        uStack40 = uVar10;\n                        uVar10 = fcn.004102d0(puVar14[6], &uStack40, 2);\n                        puVar14[6] = uVar10;\n                    }\n                    puVar12 = NULL;\n                    uStack52 = 0;\n                }\n                *puVar14 = 5;\n            case 0x40ec37:\n                if ((puVar14[4] & 0x400) == 0) {\ncode_r0x0040eccd:\n                    puVar14[0x10] = 0;\n                    *puVar14 = 6;\ncode_r0x0040ecda:\n                    if ((puVar14[4] & 0x800) == 0) {\n                        if (puVar14[8] != 0) {\n                            *(puVar14[8] + 0x1c) = 0;\n                        }\ncode_r0x0040edf5:\n                        puVar14[0x10] = 0;\n                        *puVar14 = 7;\ncode_r0x0040ee02:\n                        if ((puVar14[4] & 0x1000) == 0) {\n                            if (puVar14[8] != 0) {\n                                *(puVar14[8] + 0x24) = 0;\n                            }\ncode_r0x0040ee96:\n                            *puVar14 = 8;\n                            uVar10 = uStack52;\ncode_r0x0040eea0:\n                            if ((puVar14[4] & 0x200) != 0) {\n                                for (; puVar12 < 0x10; puVar12 = puVar12 + 8) {\n                                    if (puVar11 == NULL) goto code_r0x0040ed69;\n                                    uVar1 = *puVar7;\n                                    puVar7 = puVar7 + 1;\n                                    uVar10 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                                    puVar11 = puVar11 + -1;\n                                    uStack52 = uVar10;\n                                    puStack48 = puVar7;\n                                }\n                                if (uVar10 != *(puVar14 + 6)) {\n                                    param_1[6] = \"header crc mismatch\";\n                                    *puVar14 = 0x1d;\n                                    break;\n                                }\n                                puVar12 = NULL;\n                                uStack52 = 0;\n                            }\n                            if (puVar14[8] != 0) {\n                                *(puVar14[8] + 0x2c) = puVar14[4] >> 9 & 1;\n                                *(puVar14[8] + 0x30) = 1;\n                            }\n                            puVar6 = fcn.004102d0(0, 0, 0);\n                            puVar14[6] = puVar6;\n                            param_1[0xc] = puVar6;\n                            *puVar14 = 0xb;\n                            uVar10 = uStack52;\n                            break;\n                        }\n                        if (puVar11 != NULL) {\n                            puStack12 = NULL;\n                            do {\n                                puVar6 = puStack12 + puVar7;\n                                puStack16 = *puVar6;\n                                puStack12 = puStack12 + 1;\n                                uVar10 = puVar14[8];\n                                if (((uVar10 != 0) && (*(uVar10 + 0x24) != 0)) && (puVar14[0x10] < *(uVar10 + 0x28))) {\n                                    *(*(uVar10 + 0x24) + puVar14[0x10]) = *puVar6;\n                                    puVar14[0x10] = puVar14[0x10] + 1;\n                                    puVar7 = puStack48;\n                                }\n                            } while ((puStack16 != NULL) && (puStack12 < puVar11));\n                            if ((puVar14[4] & 0x200) != 0) {\n                                uVar10 = fcn.004102d0(puVar14[6], puVar7, puStack12);\n                                puVar14[6] = uVar10;\n                            }\n                            puVar7 = puVar7 + puStack12;\n                            puVar11 = puVar11 + -puStack12;\n                            puStack48 = puVar7;\n                            if (puStack16 == NULL) goto code_r0x0040ee96;\n                        }\n                    }\n                    else if (puVar11 != NULL) {\n                        puStack12 = NULL;\n                        do {\n                            puVar6 = puStack12 + puVar7;\n                            puStack16 = *puVar6;\n                            puStack12 = puStack12 + 1;\n                            uVar10 = puVar14[8];\n                            if (((uVar10 != 0) && (*(uVar10 + 0x1c) != 0)) && (puVar14[0x10] < *(uVar10 + 0x20))) {\n                                *(*(uVar10 + 0x1c) + puVar14[0x10]) = *puVar6;\n                                puVar14[0x10] = puVar14[0x10] + 1;\n                                puVar7 = puStack48;\n                            }\n                        } while ((puStack16 != NULL) && (puStack12 < puVar11));\n                        if ((puVar14[4] & 0x200) != 0) {\n                            uVar10 = fcn.004102d0(puVar14[6], puVar7, puStack12);\n                            puVar14[6] = uVar10;\n                        }\n                        puVar7 = puVar7 + puStack12;\n                        puVar11 = puVar11 + -puStack12;\n                        puStack48 = puVar7;\n                        if (puStack16 == NULL) goto code_r0x0040edf5;\n                    }\n                }\n                else {\n                    puStack16 = puVar14[0x10];\n                    if (puVar11 < puVar14[0x10]) {\n                        puStack16 = puVar11;\n                    }\n                    if (puStack16 != NULL) {\n                        uVar10 = puVar14[8];\n                        if ((uVar10 != 0) && (uStack20 = *(uVar10 + 0x10),  uStack20 != 0)) {\n                            puStack12 = *(uVar10 + 0x14) - puVar14[0x10];\n                            puVar6 = puStack16;\n                            if (*(uVar10 + 0x18) < puStack12 + puStack16) {\n                                puVar6 = *(uVar10 + 0x18) + -puStack12;\n                            }\n                            sub.MSVCRT.dll_memcpy(puStack12 + uStack20, puVar7, puVar6);\n                        }\n                        if ((puVar14[4] & 0x200) != 0) {\n                            uVar10 = fcn.004102d0(puVar14[6], puVar7, puStack16);\n                            puVar14[6] = uVar10;\n                        }\n                        puVar7 = puVar7 + puStack16;\n                        puVar11 = puVar11 + -puStack16;\n                        puVar14[0x10] = puVar14[0x10] - puStack16;\n                        puStack48 = puVar7;\n                    }\n                    if (puVar14[0x10] == 0) goto code_r0x0040eccd;\n                }\ncode_r0x0040ed69:\n                puVar7 = puStack28;\n                puVar14 = puStack36;\n                param_1[3] = puStack32;\n                param_1[4] = puStack44;\n                param_1[1] = puVar11;\n                *param_1 = puStack48;\n                puStack36[0xe] = uStack52;\n                puStack36[0xf] = puVar12;\n                if (((puStack36[10] == 0) &&\n                    (((puStack28 == param_1[4] || (0x1c < *puStack36)) || ((0x19 < *puStack36 && (param_2 == 4)))))) ||\n                   (iVar3 = fcn.004101e0(param_1, param_1[3], puStack28 - param_1[4]),  iVar3 == 0)) {\n                    puStack8 = puStack8 - param_1[1];\n                    iVar3 = puVar7 - param_1[4];\n                    param_1[2] = param_1[2] + puStack8;\n                    param_1[5] = param_1[5] + iVar3;\n                    puVar14[7] = puVar14[7] + iVar3;\n                    if ((puVar14[2] != 0) && (iVar3 != 0)) {\n                        if (puVar14[4] == 0) {\n                            puVar7 = fcn.00410ad0(puVar14[6], param_1[3] - iVar3, iVar3);\n                            puVar14[6] = puVar7;\n                            param_1[0xc] = puVar7;\n                        }\n                        else {\n                            puVar7 = fcn.004102d0();\n                            puVar14[6] = puVar7;\n                            param_1[0xc] = puVar7;\n                        }\n                    }\n                    uVar10 = *puVar14;\n                    if ((uVar10 == 0x13) || (uVar10 == 0xe)) {\n                        iVar13 = 0x100;\n                    }\n                    else {\n                        iVar13 = 0;\n                    }\n                    param_1[0xb] = ((uVar10 != 0xb) - 1 & 0x80) + (-(puVar14[1] != 0) & 0x40) + iVar13 + puVar14[0xf];\n                    if (((puStack8 != NULL) || (iVar3 != 0)) && (param_2 != 4)) {\n                        return iStack24;\n                    }\n                    if (iStack24 == 0) {\n                        return -5;\n                    }\n                }\n                else {\n                    *puVar14 = 0x1e;\ncode_r0x0040edda:\n                    iStack24 = -4;\n                }\n                return iStack24;\n            case 0x40ecda:\n                goto code_r0x0040ecda;\n            case 0x40edda:\n                goto code_r0x0040edda;\n            case 0x40ee02:\n                goto code_r0x0040ee02;\n            case 0x40eea0:\n                goto code_r0x0040eea0;\n            case 0x40ef3d:\n                for (; puVar12 < 0x20; puVar12 = puVar12 + 8) {\n                    if (puVar11 == NULL) goto code_r0x0040ed69;\n                    uVar1 = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    uVar10 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                    puVar11 = puVar11 + -1;\n                    uStack52 = uVar10;\n                    puStack48 = puVar7;\n                }\n                puVar6 = (uVar10 >> 8 & 0xff00) + ((uVar10 & 0xff00) + uVar10 * 0x10000) * 0x100 + (uVar10 >> 0x18);\n                uVar10 = 0;\n                puVar14[6] = puVar6;\n                uStack52 = 0;\n                puVar12 = NULL;\n                param_1[0xc] = puVar6;\n                *puVar14 = 10;\n            case 0x40efa0:\n                if (puVar14[3] == 0) {\n                    param_1[3] = puStack32;\n                    param_1[4] = puStack44;\n                    *param_1 = puVar7;\n                    param_1[1] = puVar11;\n                    puVar14[0xf] = puVar12;\n                    puVar14[0xe] = uVar10;\n                    return 2;\n                }\n                puVar6 = fcn.00410ad0(0, 0, 0);\n                puVar14[6] = puVar6;\n                param_1[0xc] = puVar6;\n                *puVar14 = 0xb;\n                uVar10 = uStack52;\ncode_r0x0040efcc:\n                if ((param_2 == 5) || (param_2 == 6)) goto code_r0x0040ed69;\ncode_r0x0040efe2:\n                if (puVar14[1] != 0) {\n                    *puVar14 = 0x1a;\n                    uStack52 = uVar10 >> (puVar12 & 7);\n                    puVar12 = puVar12 + -(puVar12 & 7);\n                    uVar10 = uStack52;\n                    break;\n                }\n                for (; puVar12 < 0x3; puVar12 = puVar12 + 8) {\n                    if (puVar11 == NULL) goto code_r0x0040ed69;\n                    uVar1 = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    uVar10 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                    puVar11 = puVar11 + -1;\n                    uStack52 = uVar10;\n                    puStack48 = puVar7;\n                }\n                puVar14[1] = uVar10 & 1;\n                switch(uVar10 >> 1 & 3) {\n                case 0:\n                    *puVar14 = 0xd;\n                    break;\n                case 1:\n                    puVar14[0x13] = 0x412738;\n                    puVar14[0x15] = 9;\n                    puVar14[0x14] = 0x412f38;\n                    puVar14[0x16] = 5;\n                    *puVar14 = 0x13;\n                    if (param_2 == 6) {\n                        uStack52 = uVar10 >> 3;\n                        puVar12 = puVar12 + -3;\n                        goto code_r0x0040ed69;\n                    }\n                    break;\n                case 2:\n                    uVar10 = uVar10 >> 3;\n                    puVar12 = puVar12 + -3;\n                    *puVar14 = 0x10;\n                    uStack52 = uVar10;\n                    goto code_r0x0040f1aa;\n                case 3:\n                    uVar10 = uVar10 >> 3;\n                    puVar12 = puVar12 + -3;\n                    param_1[6] = \"invalid block type\";\n                    *puVar14 = 0x1d;\n                    uStack52 = uVar10;\n                    goto code_r0x0040f1aa;\n                }\n                uVar10 = uVar10 >> 3;\n                puVar12 = puVar12 + -3;\n                uStack52 = uVar10;\n                break;\n            case 0x40efcc:\n                goto code_r0x0040efcc;\n            case 0x40efe2:\n                goto code_r0x0040efe2;\n            case 0x40f0cd:\n                uStack52 = uVar10 >> (puVar12 & 7);\n                for (puVar12 = puVar12 + -(puVar12 & 7); puVar12 < 0x20; puVar12 = puVar12 + 8) {\n                    if (puVar11 == NULL) goto code_r0x0040ed69;\n                    uVar1 = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    uStack52 = uStack52 + (uVar1 << (puVar12 & 0x1f));\n                    puVar11 = puVar11 + -1;\n                    puStack48 = puVar7;\n                }\n                if ((uStack52 & 0xffff) == ~uStack52 >> 0x10) {\n                    uVar10 = 0;\n                    puVar14[0x10] = uStack52 & 0xffff;\n                    puVar12 = NULL;\n                    uStack52 = 0;\n                    *puVar14 = 0xe;\n                    if (param_2 != 6) goto code_r0x0040f14c;\n                    uStack52 = 0;\n                    goto code_r0x0040ed69;\n                }\n                param_1[6] = \"invalid stored block lengths\";\n                *puVar14 = 0x1d;\n                uVar10 = uStack52;\n                break;\n            case 0x40f14c:\ncode_r0x0040f14c:\n                *puVar14 = 0xf;\n            case 0x40f152:\n                puStack16 = puVar14[0x10];\n                if (puStack16 == NULL) {\n                    *puVar14 = 0xb;\n                    break;\n                }\n                if (puVar11 < puStack16) {\n                    puStack16 = puVar11;\n                }\n                if (puStack44 < puStack16) {\n                    puStack16 = puStack44;\n                }\n                if (puStack16 != NULL) {\n                    sub.MSVCRT.dll_memcpy(puStack32, puVar7, puStack16);\n                    puStack44 = puStack44 + -puStack16;\n                    puVar7 = puVar7 + puStack16;\n                    puStack32 = puStack32 + puStack16;\n                    puVar11 = puVar11 + -puStack16;\n                    puVar14[0x10] = puVar14[0x10] - puStack16;\n                    uVar10 = uStack52;\n                    puStack48 = puVar7;\n                    break;\n                }\n                goto code_r0x0040ed69;\n            case 0x40f1ca:\n                for (; puVar12 < 0xe; puVar12 = puVar12 + 8) {\n                    if (puVar11 == NULL) goto code_r0x0040ed69;\n                    uVar1 = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    uVar10 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                    puVar11 = puVar11 + -1;\n                    uStack52 = uVar10;\n                    puStack48 = puVar7;\n                }\n                puVar12 = puVar12 + -0xe;\n                puVar14[0x18] = (uVar10 & 0x1f) + 0x101;\n                uVar8 = uVar10 >> 10;\n                puVar14[0x19] = (uVar10 >> 5 & 0x1f) + 1;\n                uVar10 = uVar10 >> 0xe;\n                puVar14[0x17] = (uVar8 & 0xf) + 4;\n                uStack52 = uVar10;\n                if ((puVar14[0x18] < 0x11f) && (puVar14[0x19] < 0x1f)) {\n                    puVar14[0x1a] = 0;\n                    *puVar14 = 0x11;\n                    goto code_r0x0040f24c;\n                }\n                param_1[6] = \"too many length or distance symbols\";\n                *puVar14 = 0x1d;\n                break;\n            case 0x40f24c:\ncode_r0x0040f24c:\n                if (puVar14[0x1a] < puVar14[0x17]) {\n                    do {\n                        for (; puVar12 < 0x3; puVar12 = puVar12 + 8) {\n                            if (puVar11 == NULL) goto code_r0x0040ed69;\n                            uVar1 = *puVar7;\n                            puVar7 = puVar7 + 1;\n                            uStack52 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                            puVar11 = puVar11 + -1;\n                            uVar10 = uStack52;\n                            puStack48 = puVar7;\n                        }\n                        uStack52 = uVar10 >> 3;\n                        puVar12 = puVar12 + -3;\n                        *(puVar14 + *(puVar14[0x1a] * 2 + 0x412fb8) * 2 + 0x70) = uVar10 & 7;\n                        puVar14[0x1a] = puVar14[0x1a] + 1;\n                        uVar10 = uStack52;\n                    } while (puVar14[0x1a] < puVar14[0x17]);\n                }\n                uVar10 = puVar14[0x1a];\n                while (uVar10 < 0x13) {\n                    *(puVar14 + *(puVar14[0x1a] * 2 + 0x412fb8) * 2 + 0x70) = 0;\n                    puVar14[0x1a] = puVar14[0x1a] + 1;\n                    uVar10 = puVar14[0x1a];\n                }\n                puVar14[0x15] = 7;\n                puVar14[0x13] = puVar14 + 0x14c;\n                puVar14[0x1b] = puVar14 + 0x14c;\n                iStack24 = fcn.00410df0(0, puVar14 + 0x1c, 0x13, puVar14 + 0x1b, puVar14 + 0x15, puVar14 + 0xbc);\n                if (iStack24 == 0) {\n                    puVar14[0x1a] = 0;\n                    *puVar14 = 0x12;\n                    goto code_r0x0040f340;\n                }\n                param_1[6] = \"invalid code lengths set\";\n                *puVar14 = 0x1d;\n                uVar10 = uStack52;\n                break;\n            case 0x40f340:\ncode_r0x0040f340:\n                puStack16 = puVar14[0x1a];\n                if (puStack16 < puVar14[0x19] + puVar14[0x18]) {\n                    do {\n                        puVar6 = *(puStack36[0x13] + ((1 << (*puStack4 & 0x1f)) - 1U & uStack52) * 4);\n                        puStack12 = puVar6;\n                        if (puVar12 < (puVar6 >> 8 & 0xff)) {\n                            do {\n                                if (puVar11 == NULL) goto code_r0x0040ed69;\n                                uStack52 = uStack52 + (*puVar7 << (puVar12 & 0x1f));\n                                puVar7 = puVar7 + 1;\n                                puVar12 = puVar12 + 8;\n                                puVar11 = puVar11 + -1;\n                                puVar6 = *(puStack36[0x13] + ((1 << (*puStack4 & 0x1f)) - 1U & uStack52) * 4);\n                                puStack48 = puVar7;\n                                puStack12 = puVar6;\n                            } while (puVar12 < (puVar6 >> 8 & 0xff));\n                        }\n                        uVar9 = puVar6 >> 0x10;\n                        puVar14 = puStack36;\n                        if (0xf < uVar9) {\n                            if (uVar9 == 0x10) {\n                                puStack12 = (puVar6 >> 8 & 0xff) + 2;\n                                for (; puVar12 < puStack12; puVar12 = puVar12 + 8) {\n                                    if (puVar11 == NULL) goto code_r0x0040ed69;\n                                    uVar1 = *puVar7;\n                                    puVar7 = puVar7 + 1;\n                                    uStack52 = uStack52 + (uVar1 << (puVar12 & 0x1f));\n                                    puVar11 = puVar11 + -1;\n                                    puStack48 = puVar7;\n                                }\n                                uVar10 = puVar6 >> 8 & 0xff;\n                                puVar12 = puVar12 + -uVar10;\n                                uStack52 = uStack52 >> (uVar10 & 0x1f);\n                                if (puStack16 != NULL) {\n                                    puStack12 = *(puStack36 + puStack16 * 2 + 0x6e);\n                                    uStack20 = uStack52 & 3;\n                                    uStack52 = uStack52 >> 2;\n                                    uStack20 = uStack20 + 3;\n                                    puVar12 = puVar12 + -2;\n                                    goto code_r0x0040f540;\n                                }\n                            }\n                            else {\n                                puStack12 = puVar6 >> 8 & 0xff;\n                                if (uVar9 == 0x11) {\n                                    for (; puVar12 < puStack12 + 3; puVar12 = puVar12 + 8) {\n                                        if (puVar11 == NULL) goto code_r0x0040ed69;\n                                        uVar1 = *puVar7;\n                                        puVar7 = puVar7 + 1;\n                                        uStack52 = uStack52 + (uVar1 << (puVar12 & 0x1f));\n                                        puVar11 = puVar11 + -1;\n                                        puStack48 = puVar7;\n                                    }\n                                    uStack52 = uStack52 >> (puStack12 & 0x1f);\n                                    uStack20 = (uStack52 & 7) + 3;\n                                    uStack52 = uStack52 >> 3;\n                                    iVar3 = -3;\n                                }\n                                else {\n                                    for (; puVar12 < puStack12 + 7; puVar12 = puVar12 + 8) {\n                                        if (puVar11 == NULL) goto code_r0x0040ed69;\n                                        uVar1 = *puVar7;\n                                        puVar7 = puVar7 + 1;\n                                        uStack52 = uStack52 + (uVar1 << (puVar12 & 0x1f));\n                                        puVar11 = puVar11 + -1;\n                                        puStack48 = puVar7;\n                                    }\n                                    uStack52 = uStack52 >> (puStack12 & 0x1f);\n                                    uStack20 = (uStack52 & 0x7f) + 0xb;\n                                    uStack52 = uStack52 >> 7;\n                                    iVar3 = -7;\n                                }\n                                puVar12 = puVar12 + (iVar3 - puStack12);\n                                puStack12 = NULL;\ncode_r0x0040f540:\n                                puVar7 = puStack48;\n                                uVar10 = uStack20;\n                                if (puStack16 + uStack20 <= puStack36[0x19] + puStack36[0x18]) {\n                                    for (; uVar10 != 0; uVar10 = uVar10 - 1) {\n                                        *(puStack36 + puStack36[0x1a] * 2 + 0x70) = puStack12;\n                                        puStack36[0x1a] = puStack36[0x1a] + 1;\n                                    }\n                                    goto code_r0x0040f578;\n                                }\n                            }\n                            param_1[6] = \"invalid bit length repeat\";\n                            *puStack36 = 0x1d;\n                            uVar10 = uStack52;\n                            goto code_r0x0040f1aa;\n                        }\n                        uVar10 = puVar6 >> 8 & 0xff;\n                        puVar12 = puVar12 + -uVar10;\n                        uStack52 = uStack52 >> (uVar10 & 0x1f);\n                        *(puStack36 + puStack16 * 2 + 0x70) = uVar9;\n                        puStack36[0x1a] = puStack36[0x1a] + 1;\n                        puStack12 = puVar6;\ncode_r0x0040f578:\n                        puStack16 = puStack36[0x1a];\n                    } while (puStack16 < puStack36[0x19] + puStack36[0x18]);\n                }\n                uVar10 = uStack52;\n                if (*puVar14 != 0x1d) {\n                    if (*(puVar14 + 0x9c) == 0) {\n                        param_1[6] = \"invalid code -- missing end-of-block\";\n                        *puVar14 = 0x1d;\n                    }\n                    else {\n                        puVar14[0x15] = 9;\n                        puVar14[0x13] = puVar14 + 0x14c;\n                        puVar14[0x1b] = puVar14 + 0x14c;\n                        iStack24 = fcn.00410df0(1, puVar14 + 0x1c, puVar14[0x18], puVar14 + 0x1b, puVar14 + 0x15, \n                                                puVar14 + 0xbc);\n                        if (iStack24 == 0) {\n                            puVar14[0x14] = puVar14[0x1b];\n                            puVar14[0x16] = 6;\n                            iStack24 = fcn.00410df0(2, puVar14 + (puVar14[0x18] + 0x38) * 2, puVar14[0x19], \n                                                    puVar14 + 0x1b, puVar14 + 0x16, puVar14 + 0xbc);\n                            if (iStack24 == 0) {\n                                *puVar14 = 0x13;\n                                if (param_2 != 6) goto code_r0x0040f699;\n                                goto code_r0x0040ed69;\n                            }\n                            param_1[6] = \"invalid distances set\";\n                            *puVar14 = 0x1d;\n                        }\n                        else {\n                            param_1[6] = \"invalid literal/lengths set\";\n                            *puVar14 = 0x1d;\n                        }\n                    }\n                }\n                break;\n            case 0x40f699:\ncode_r0x0040f699:\n                *puVar14 = 0x14;\n                puVar6 = puVar12;\n            case 0x40f69f:\n                if ((0x5 < puVar11) && (0x101 < puStack44)) {\n                    param_1[3] = puStack32;\n                    param_1[4] = puStack44;\n                    *param_1 = puVar7;\n                    param_1[1] = puVar11;\n                    puVar14[0xe] = uVar10;\n                    puVar14[0xf] = puVar6;\n                    fcn.00411250(param_1, puStack28);\n                    uVar10 = puVar14[0xe];\n                    puVar12 = puVar14[0xf];\n                    puStack32 = param_1[3];\n                    puVar7 = *param_1;\n                    puVar11 = param_1[1];\n                    puStack44 = param_1[4];\n                    uStack52 = uVar10;\n                    puStack48 = puVar7;\n                    if (*puVar14 == 0xb) {\n                        puVar14[0x6f1] = 0xffffffff;\n                    }\n                    break;\n                }\n                puStack16 = puVar14[0x13];\n                puVar14[0x6f1] = 0;\n                puVar5 = *(puVar14[0x13] + ((1 << (puVar14[0x15] & 0x1f)) - 1U & uVar10) * 4);\n                if (puVar6 < (puVar5 >> 8 & 0xff)) {\n                    do {\n                        puVar12 = puVar6;\n                        if (puVar11 == NULL) goto code_r0x0040ed69;\n                        uVar1 = *puVar7;\n                        puVar7 = puVar7 + 1;\n                        uVar10 = uVar10 + (uVar1 << (puVar6 & 0x1f));\n                        puVar6 = puVar6 + 8;\n                        puVar11 = puVar11 + -1;\n                        puVar5 = *(puVar14[0x13] + ((1 << (puVar14[0x15] & 0x1f)) - 1U & uVar10) * 4);\n                        uStack52 = uVar10;\n                        puStack48 = puVar7;\n                    } while (puVar6 < (puVar5 >> 8 & 0xff));\n                }\n                cVar2 = puVar5;\n                puVar4 = puVar5;\n                if ((cVar2 != '\\0') && ((puVar5 & 0xf0) == 0)) {\n                    uStack20 = puVar5 >> 8;\n                    uVar1 = puVar5 >> 8;\n                    puVar4 = *(puStack16 +\n                              ((((1 << (cVar2 + uVar1 & 0x1f)) - 1U & uStack52) >> (uVar1 & 0x1f)) + (puVar5 >> 0x10)) *\n                              4);\n                    puVar12 = puVar6;\n                    puStack12 = puVar5;\n                    if (puVar6 < (puVar4 >> 8 & 0xff) + (uStack20 & 0xff)) {\n                        do {\n                            if (puVar11 == NULL) goto code_r0x0040ed69;\n                            puVar6 = puVar12 + 8;\n                            puVar11 = puVar11 + -1;\n                            uVar1 = *puStack48;\n                            puStack48 = puStack48 + 1;\n                            uStack52 = uStack52 + (uVar1 << (puVar12 & 0x1f));\n                            uVar10 = puVar5 >> 8 & 0xff;\n                            uVar1 = uVar10;\n                            puVar4 = *(puStack36[0x13] +\n                                      ((((1 << (cVar2 + uVar1 & 0x1f)) - 1U & uStack52) >> (uVar1 & 0x1f)) +\n                                      (puVar5 >> 0x10)) * 4);\n                            puVar12 = puVar6;\n                        } while (puVar6 < (puVar4 >> 8 & 0xff) + uVar10);\n                    }\n                    uVar8 = puVar5 >> 8 & 0xff;\n                    uVar10 = uStack52 >> (uVar8 & 0x1f);\n                    puVar6 = puVar6 + -uVar8;\n                    puStack36[0x6f1] = uVar8;\n                    puVar7 = puStack48;\n                    puVar14 = puStack36;\n                }\n                uVar8 = puVar4 >> 8 & 0xff;\n                puVar14[0x6f1] = puVar14[0x6f1] + uVar8;\n                puVar12 = puVar6 + -uVar8;\n                uVar10 = uVar10 >> (uVar8 & 0x1f);\n                puVar14[0x10] = puVar4 >> 0x10;\n                uStack52 = uVar10;\n                if (puVar4 == '\\0') {\n                    *puVar14 = 0x19;\n                    break;\n                }\n                if ((puVar4 & 0x20) != 0) {\n                    puVar14[0x6f1] = 0xffffffff;\n                    *puVar14 = 0xb;\n                    break;\n                }\n                if ((puVar4 & 0x40) != 0) {\n                    param_1[6] = \"invalid literal/length code\";\n                    *puVar14 = 0x1d;\n                    break;\n                }\n                *puVar14 = 0x15;\n                puVar14[0x12] = puVar4 & 0xf;\ncode_r0x0040f8bf:\n                puVar6 = puVar14[0x12];\n                if (puVar6 != NULL) {\n                    if (puVar12 < puVar6) {\n                        do {\n                            if (puVar11 == NULL) goto code_r0x0040ed69;\n                            uVar1 = *puVar7;\n                            puVar7 = puVar7 + 1;\n                            puVar6 = puVar14[0x12];\n                            uVar10 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                            puVar12 = puVar12 + 8;\n                            puVar11 = puVar11 + -1;\n                            uStack52 = uVar10;\n                            puStack48 = puVar7;\n                        } while (puVar12 < puVar6);\n                    }\n                    puVar12 = puVar12 + -puVar6;\n                    uVar8 = (1 << (puVar6 & 0x1f)) - 1U & uVar10;\n                    uVar10 = uVar10 >> (puVar6 & 0x1f);\n                    puVar14[0x10] = puVar14[0x10] + uVar8;\n                    puVar14[0x6f1] = puVar14[0x6f1] + puVar6;\n                    uStack52 = uVar10;\n                }\n                puVar14[0x6f2] = puVar14[0x10];\n                *puVar14 = 0x16;\ncode_r0x0040f91f:\n                puStack16 = puVar14[0x14];\n                puVar6 = *(puVar14[0x14] + ((1 << (puVar14[0x16] & 0x1f)) - 1U & uVar10) * 4);\n                if (puVar12 < (puVar6 >> 8 & 0xff)) {\n                    do {\n                        if (puVar11 == NULL) goto code_r0x0040ed69;\n                        uVar1 = *puVar7;\n                        puVar7 = puVar7 + 1;\n                        uVar10 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                        puVar12 = puVar12 + 8;\n                        puVar11 = puVar11 + -1;\n                        puVar6 = *(puVar14[0x14] + ((1 << (puVar14[0x16] & 0x1f)) - 1U & uVar10) * 4);\n                        uStack52 = uVar10;\n                        puStack48 = puVar7;\n                    } while (puVar12 < (puVar6 >> 8 & 0xff));\n                }\n                puVar5 = puVar6;\n                if ((puVar6 & 0xf0) == 0) {\n                    uStack20 = puVar6 >> 8;\n                    uVar1 = puVar6 >> 8;\n                    puVar5 = *(puStack16 +\n                              ((((1 << (puVar6 + uVar1 & 0x1f)) - 1U & uStack52) >> (uVar1 & 0x1f)) + (puVar6 >> 0x10))\n                              * 4);\n                    puVar7 = puVar12;\n                    puStack12 = puVar6;\n                    if (puVar12 < (puVar5 >> 8 & 0xff) + (uStack20 & 0xff)) {\n                        do {\n                            puVar12 = puVar7;\n                            if (puVar11 == NULL) goto code_r0x0040ed69;\n                            puVar12 = puVar7 + 8;\n                            puVar11 = puVar11 + -1;\n                            uVar1 = *puStack48;\n                            puStack48 = puStack48 + 1;\n                            uStack52 = uStack52 + (uVar1 << (puVar7 & 0x1f));\n                            uVar10 = puVar6 >> 8 & 0xff;\n                            uVar1 = uVar10;\n                            puVar5 = *(puStack36[0x14] +\n                                      ((((1 << (puVar6 + uVar1 & 0x1f)) - 1U & uStack52) >> (uVar1 & 0x1f)) +\n                                      (puVar6 >> 0x10)) * 4);\n                            puVar7 = puVar12;\n                        } while (puVar12 < (puVar5 >> 8 & 0xff) + uVar10);\n                    }\n                    uVar8 = puVar6 >> 8 & 0xff;\n                    puVar12 = puVar12 + -uVar8;\n                    uVar10 = uStack52 >> (uVar8 & 0x1f);\n                    puStack36[0x6f1] = puStack36[0x6f1] + uVar8;\n                    puVar14 = puStack36;\n                }\n                uVar8 = puVar5 >> 8 & 0xff;\n                puVar14[0x6f1] = puVar14[0x6f1] + uVar8;\n                puVar12 = puVar12 + -uVar8;\n                uVar10 = uVar10 >> (uVar8 & 0x1f);\n                puVar7 = puStack48;\n                uStack52 = uVar10;\n                if ((puVar5 & 0x40) != 0) {\n                    param_1[6] = \"invalid distance code\";\n                    *puVar14 = 0x1d;\n                    break;\n                }\n                *puVar14 = 0x17;\n                puVar14[0x11] = puVar5 >> 0x10;\n                puVar14[0x12] = puVar5 & 0xf;\ncode_r0x0040fa8f:\n                puVar6 = puVar14[0x12];\n                if (puVar6 != NULL) {\n                    if (puVar12 < puVar6) {\n                        do {\n                            if (puVar11 == NULL) goto code_r0x0040ed69;\n                            uVar1 = *puVar7;\n                            puVar7 = puVar7 + 1;\n                            puVar6 = puVar14[0x12];\n                            uVar10 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                            puVar12 = puVar12 + 8;\n                            puVar11 = puVar11 + -1;\n                            uStack52 = uVar10;\n                            puStack48 = puVar7;\n                        } while (puVar12 < puVar6);\n                    }\n                    puVar12 = puVar12 + -puVar6;\n                    uVar8 = (1 << (puVar6 & 0x1f)) - 1U & uVar10;\n                    uVar10 = uVar10 >> (puVar6 & 0x1f);\n                    puVar14[0x11] = puVar14[0x11] + uVar8;\n                    puVar14[0x6f1] = puVar14[0x6f1] + puVar6;\n                    uStack52 = uVar10;\n                }\n                *puVar14 = 0x18;\ncode_r0x0040fae6:\n                if (puStack44 != NULL) {\n                    uVar8 = puVar14[0x11];\n                    if (puStack28 - puStack44 < uVar8) {\n                        puVar6 = uVar8 - (puStack28 - puStack44);\n                        if ((puVar14[0xb] <= puVar6 && puVar6 != puVar14[0xb]) && (puVar14[0x6f0] != 0)) {\n                            param_1[6] = \"invalid distance too far back\";\n                            *puVar14 = 0x1d;\n                            break;\n                        }\n                        if (puVar14[0xc] < puVar6) {\n                            puVar6 = puVar6 + -puVar14[0xc];\n                            puStack12 = (puVar14[0xd] + puVar14[10]) - puVar6;\n                        }\n                        else {\n                            puStack12 = (puVar14[0xd] - puVar6) + puVar14[0xc];\n                        }\n                        puVar7 = puVar14[0x10];\n                        if (puVar7 < puVar6) goto code_r0x0040fb5a;\n                    }\n                    else {\n                        puStack12 = puStack32 + -uVar8;\n                        puVar7 = puVar14[0x10];\ncode_r0x0040fb5a:\n                        puVar6 = puVar7;\n                    }\n                    if (puStack44 < puVar6) {\n                        puVar6 = puStack44;\n                    }\n                    puStack44 = puStack44 + -puVar6;\n                    puVar14[0x10] = puVar7 - puVar6;\n                    iVar3 = puStack12 - puStack32;\n                    do {\n                        *puStack32 = puStack32[iVar3];\n                        puStack32 = puStack32 + 1;\n                        puVar6 = puVar6 + -1;\n                    } while (puVar6 != NULL);\n                    puVar7 = puStack48;\n                    puVar14 = puStack36;\n                    if (puStack36[0x10] == 0) {\n                        *puStack36 = 0x14;\n                    }\n                    break;\n                }\n                goto code_r0x0040ed69;\n            case 0x40f8bf:\n                goto code_r0x0040f8bf;\n            case 0x40f91f:\n                goto code_r0x0040f91f;\n            case 0x40fa8f:\n                goto code_r0x0040fa8f;\n            case 0x40fae6:\n                goto code_r0x0040fae6;\n            case 0x40fba9:\n                if (puStack44 == NULL) goto code_r0x0040ed69;\n                puStack44 = puStack44 + -1;\n                *puStack32 = *(puVar14 + 0x10);\n                *puVar14 = 0x14;\n                puVar7 = puStack48;\n                puStack32 = puStack32 + 1;\n                break;\n            case 0x40fbd4:\n                if (puVar14[2] != 0) {\n                    for (; puVar12 < 0x20; puVar12 = puVar12 + 8) {\n                        if (puVar11 == NULL) goto code_r0x0040ed69;\n                        uVar1 = *puVar7;\n                        puVar7 = puVar7 + 1;\n                        uVar10 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                        puVar11 = puVar11 + -1;\n                        uStack52 = uVar10;\n                        puStack48 = puVar7;\n                    }\n                    puStack28 = puStack28 - puStack44;\n                    param_1[5] = param_1[5] + puStack28;\n                    puVar14[7] = puVar14[7] + puStack28;\n                    if (puStack28 != NULL) {\n                        if (puVar14[4] == 0) {\n                            puVar6 = fcn.00410ad0(puVar14[6], puStack32 - puStack28, puStack28);\n                        }\n                        else {\n                            puVar6 = fcn.004102d0();\n                        }\n                        puVar14[6] = puVar6;\n                        param_1[0xc] = puVar6;\n                        uVar10 = uStack52;\n                    }\n                    puStack28 = puStack44;\n                    uVar8 = uVar10;\n                    if (puVar14[4] == 0) {\n                        uVar8 = ((uVar10 & 0xff00) + uVar10 * 0x10000) * 0x100 + (uVar10 >> 8 & 0xff00) +\n                                (uVar10 >> 0x18);\n                    }\n                    if (uVar8 != puVar14[6]) {\n                        param_1[6] = \"incorrect data check\";\n                        *puVar14 = 0x1d;\n                        break;\n                    }\n                    uVar10 = 0;\n                    puVar12 = NULL;\n                    uStack52 = 0;\n                }\n                *puVar14 = 0x1b;\n            case 0x40fcac:\n                if ((puVar14[2] != 0) && (puVar14[4] != 0)) {\n                    for (; puVar12 < 0x20; puVar12 = puVar12 + 8) {\n                        if (puVar11 == NULL) goto code_r0x0040ed69;\n                        uVar1 = *puVar7;\n                        puVar7 = puVar7 + 1;\n                        uVar10 = uVar10 + (uVar1 << (puVar12 & 0x1f));\n                        puVar11 = puVar11 + -1;\n                        uStack52 = uVar10;\n                        puStack48 = puVar7;\n                    }\n                    if (uVar10 != puVar14[7]) {\n                        param_1[6] = \"incorrect length check\";\n                        *puVar14 = 0x1d;\n                        break;\n                    }\n                    puVar12 = NULL;\n                    uStack52 = 0;\n                }\n                *puVar14 = 0x1c;\ncode_r0x0040fd32:\n                iStack24 = 1;\n                goto code_r0x0040ed69;\n            case 0x40fd32:\n                goto code_r0x0040fd32;\n            case 0x40fd3f:\n                iStack24 = -3;\n                goto code_r0x0040ed69;\n            }\ncode_r0x0040f1aa:\n            uVar8 = *puVar14;\n        } while (uVar8 < 0x1f);\n    }\n    return -2;\n}\n",
        "token_count": 13811
    },
    "0040ff20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040ff20(int32_t param_1, uint param_2, char *param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    \n    if (((param_3 == NULL) || (*param_3 != '1')) || (param_4 != 0x38)) {\n        return -6;\n    }\n    if (param_1 == 0) {\n        return -2;\n    }\n    *(param_1 + 0x18) = 0;\n    if (*(param_1 + 0x20) == 0) {\n        *(param_1 + 0x20) = 0x411680;\n        *(param_1 + 0x28) = 0;\n    }\n    if (*(param_1 + 0x24) == 0) {\n        *(param_1 + 0x24) = 0x4116a0;\n    }\n    iVar1 = (**(param_1 + 0x20))(*(param_1 + 0x28), 1, 0x1bcc);\n    if (iVar1 == 0) {\n        return -4;\n    }\n    *(param_1 + 0x1c) = iVar1;\n    *(iVar1 + 0x34) = 0;\n    iVar2 = fcn.00410040(param_1, param_2, unaff_EBX, unaff_EDI, unaff_ESI, unaff_retaddr, param_1, param_2, param_3);\n    if (iVar2 != 0) {\n        (**(param_1 + 0x24))(*(param_1 + 0x28), iVar1);\n        *(param_1 + 0x1c) = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 431
    },
    "004101e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.004101e0(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar1 = *(param_1 + 0x1c);\n    if (*(iVar1 + 0x34) == 0) {\n        iVar2 = (**(param_1 + 0x20))(*(param_1 + 0x28), 1 << (*(iVar1 + 0x24) & 0x1f), 1);\n        *(iVar1 + 0x34) = iVar2;\n        if (iVar2 == 0) {\n            return 1;\n        }\n    }\n    if (*(iVar1 + 0x28) == 0) {\n        *(iVar1 + 0x28) = 1 << (*(iVar1 + 0x24) & 0x1f);\n        *(iVar1 + 0x30) = 0;\n        *(iVar1 + 0x2c) = 0;\n    }\n    uVar3 = *(iVar1 + 0x28);\n    if (uVar3 <= param_3) {\n        sub.MSVCRT.dll_memcpy(*(iVar1 + 0x34), param_2 - uVar3, uVar3);\n        *(iVar1 + 0x2c) = *(iVar1 + 0x28);\n        *(iVar1 + 0x30) = 0;\n        return 0;\n    }\n    uVar3 = uVar3 - *(iVar1 + 0x30);\n    if (param_3 < uVar3) {\n        uVar3 = param_3;\n    }\n    sub.MSVCRT.dll_memcpy(*(iVar1 + 0x34) + *(iVar1 + 0x30), param_2 - param_3, uVar3);\n    iVar2 = param_3 - uVar3;\n    if (iVar2 != 0) {\n        sub.MSVCRT.dll_memcpy(*(iVar1 + 0x34), param_2 - iVar2, iVar2);\n        *(iVar1 + 0x30) = iVar2;\n        *(iVar1 + 0x2c) = *(iVar1 + 0x28);\n        return 0;\n    }\n    *(iVar1 + 0x30) = *(iVar1 + 0x30) + uVar3;\n    if (*(iVar1 + 0x30) == *(iVar1 + 0x28)) {\n        *(iVar1 + 0x30) = 0;\n    }\n    if (*(iVar1 + 0x2c) < *(iVar1 + 0x28)) {\n        *(iVar1 + 0x2c) = *(iVar1 + 0x2c) + uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 631
    },
    "00410ad0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00410ad0(uint32_t param_1, uint8_t *param_2, uint32_t param_3)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    uint32_t uVar20;\n    \n    uVar3 = param_1 & 0xffff;\n    param_1 = param_1 >> 0x10;\n    if (param_3 == 1) {\n        uVar3 = uVar3 + *param_2;\n        if (0xfff0 < uVar3) {\n            uVar3 = uVar3 - 0xfff1;\n        }\n        param_1 = param_1 + uVar3;\n        if (0xfff0 < param_1) {\n            param_1 = param_1 - 0xfff1;\n        }\n        return param_1 << 0x10 | uVar3;\n    }\n    if (param_2 == NULL) {\n        return 1;\n    }\n    if (param_3 < 0x10) {\n        if (param_3 != 0) {\n            do {\n                uVar2 = *param_2;\n                param_2 = param_2 + 1;\n                uVar3 = uVar3 + uVar2;\n                param_1 = param_1 + uVar3;\n                param_3 = param_3 - 1;\n            } while (param_3 != 0);\n        }\n        if (0xfff0 < uVar3) {\n            uVar3 = uVar3 - 0xfff1;\n        }\n        return ((param_1 / 0xfff1) * 0xf + param_1) * 0x10000 | uVar3;\n    }\n    if (0x15af < param_3) {\n        uVar20 = param_3 / 0x15b0;\n        do {\n            param_3 = param_3 - 0x15b0;\n            iVar19 = 0x15b;\n            do {\n                iVar4 = uVar3 + *param_2;\n                iVar5 = iVar4 + param_2[1];\n                iVar6 = iVar5 + param_2[2];\n                iVar7 = iVar6 + param_2[3];\n                iVar8 = iVar7 + param_2[4];\n                iVar9 = iVar8 + param_2[5];\n                iVar10 = iVar9 + param_2[6];\n                iVar11 = iVar10 + param_2[7];\n                iVar12 = iVar11 + param_2[8];\n                iVar13 = iVar12 + param_2[9];\n                iVar14 = iVar13 + param_2[10];\n                iVar15 = iVar14 + param_2[0xb];\n                iVar16 = iVar15 + param_2[0xc];\n                iVar17 = iVar16 + param_2[0xd];\n                iVar18 = iVar17 + param_2[0xe];\n                puVar1 = param_2 + 0xf;\n                param_2 = param_2 + 0x10;\n                uVar3 = iVar18 + *puVar1;\n                param_1 = param_1 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar12 + iVar13 +\n                          iVar14 + iVar15 + iVar16 + iVar17 + iVar18 + uVar3;\n                iVar19 = iVar19 + -1;\n            } while (iVar19 != 0);\n            uVar3 = uVar3 % 0xfff1;\n            param_1 = param_1 % 0xfff1;\n            uVar20 = uVar20 - 1;\n        } while (uVar20 != 0);\n    }\n    if (param_3 != 0) {\n        if (0xf < param_3) {\n            uVar20 = param_3 >> 4;\n            do {\n                param_3 = param_3 - 0x10;\n                iVar19 = uVar3 + *param_2;\n                iVar4 = iVar19 + param_2[1];\n                iVar5 = iVar4 + param_2[2];\n                iVar6 = iVar5 + param_2[3];\n                iVar7 = iVar6 + param_2[4];\n                iVar8 = iVar7 + param_2[5];\n                iVar9 = iVar8 + param_2[6];\n                iVar10 = iVar9 + param_2[7];\n                iVar11 = iVar10 + param_2[8];\n                iVar12 = iVar11 + param_2[9];\n                iVar13 = iVar12 + param_2[10];\n                iVar14 = iVar13 + param_2[0xb];\n                iVar15 = iVar14 + param_2[0xc];\n                iVar16 = iVar15 + param_2[0xd];\n                iVar17 = iVar16 + param_2[0xe];\n                puVar1 = param_2 + 0xf;\n                param_2 = param_2 + 0x10;\n                uVar3 = iVar17 + *puVar1;\n                param_1 = param_1 + iVar19 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar12 +\n                          iVar13 + iVar14 + iVar15 + iVar16 + iVar17 + uVar3;\n                uVar20 = uVar20 - 1;\n            } while (uVar20 != 0);\n        }\n        for (; param_3 != 0; param_3 = param_3 - 1) {\n            uVar2 = *param_2;\n            param_2 = param_2 + 1;\n            uVar3 = uVar3 + uVar2;\n            param_1 = param_1 + uVar3;\n        }\n        uVar3 = uVar3 % 0xfff1;\n        param_1 = param_1 % 0xfff1;\n    }\n    return param_1 << 0x10 | uVar3;\n}\n",
        "token_count": 1421
    },
    "00410df0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00410df0(int32_t param_1, int32_t param_2, uint32_t param_3, int32_t *param_4, uint32_t *param_5, \n                 uint16_t *param_6)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint16_t *puVar12;\n    bool bVar13;\n    bool bVar14;\n    uint uStack120;\n    uint32_t uStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint32_t uStack104;\n    int32_t iStack100;\n    uint16_t *puStack96;\n    uint16_t *puStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint16_t auStack32 [16];\n    \n    uStack64 = 0;\n    uStack60 = 0;\n    uStack56 = 0;\n    uStack52 = 0;\n    uStack48 = 0;\n    uStack44 = 0;\n    uStack40 = 0;\n    uStack36 = 0;\n    if (param_3 != 0) {\n        uVar6 = 0;\n        do {\n            iVar8 = uVar6 * 2;\n            uVar6 = uVar6 + 1;\n            piVar1 = &uStack64 + *(param_2 + iVar8) * 2;\n            *piVar1 = *piVar1 + 1;\n        } while (uVar6 < param_3);\n    }\n    uVar6 = 0xf;\n    do {\n        if (*(&uStack64 + uVar6 * 2) != 0) break;\n        uVar6 = uVar6 - 1;\n    } while (uVar6 != 0);\n    uStack112 = *param_5;\n    if (uVar6 < *param_5) {\n        uStack112 = uVar6;\n    }\n    if (uVar6 == 0) {\n        **param_4 = 0x140;\n        *param_4 = *param_4 + 4;\n        **param_4 = 0x140;\n        *param_4 = *param_4 + 4;\n        *param_5 = 1;\n        return 0;\n    }\n    uVar9 = 1;\n    uStack84 = 1;\n    if (1 < uVar6) {\n        do {\n            uStack84 = uVar9;\n            if (*(&uStack64 + uVar9 * 2) != 0) break;\n            uVar9 = uVar9 + 1;\n            uStack84 = uVar9;\n        } while (uVar9 < uVar6);\n    }\n    if (uStack112 < uStack84) {\n        uStack112 = uStack84;\n    }\n    iVar8 = 1;\n    uVar9 = 1;\n    do {\n        iVar8 = iVar8 * 2 - *(&uStack64 + uVar9 * 2);\n        if (iVar8 < 0) {\n            return 0xffffffff;\n        }\n        uVar9 = uVar9 + 1;\n    } while (uVar9 < 0x10);\n    if ((0 < iVar8) && ((param_1 == 0 || (uVar6 != 1)))) {\n        return 0xffffffff;\n    }\n    uVar9 = 2;\n    auStack32[1] = 0;\n    do {\n        *(auStack32 + uVar9 + 2) = *(auStack32 + uVar9) + *(&uStack64 + uVar9);\n        uVar9 = uVar9 + 2;\n    } while (uVar9 < 0x1e);\n    uVar9 = 0;\n    if (param_3 != 0) {\n        do {\n            uVar4 = *(param_2 + uVar9 * 2);\n            if (uVar4 != 0) {\n                param_6[auStack32[uVar4]] = uVar9;\n                auStack32[*(param_2 + uVar9 * 2)] = auStack32[*(param_2 + uVar9 * 2)] + 1;\n            }\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < param_3);\n    }\n    if (param_1 == 0) {\n        puStack96 = param_6;\n        puStack92 = param_6;\n        iStack100 = 0x13;\n    }\n    else if (param_1 == 1) {\n        puStack92 = 0x414ff6;\n        puStack96 = 0x415036;\n        iStack100 = 0x100;\n    }\n    else {\n        puStack92 = 0x415278;\n        puStack96 = 0x4152b8;\n        iStack100 = -1;\n    }\n    uStack104 = 0;\n    uStack116 = 0;\n    uStack76 = 0xffffffff;\n    iStack108 = *param_4;\n    uStack88 = 1 << (uStack112 & 0x1f);\n    uVar9 = uStack88 - 1;\n    uVar10 = uStack84;\n    uStack80 = uStack88;\n    if (param_1 == 1) {\n        if (uStack88 < 0x355) {\ncode_r0x00411030:\n            do {\n                do {\n                    cVar2 = uVar10;\n                    uVar3 = cVar2 - uStack116;\n                    uVar4 = *param_6;\n                    uVar5 = uVar4;\n                    if (uVar5 < iStack100) {\n                        uStack120._0_2_ = uVar3 << 8;\n                    }\n                    else if (iStack100 < uVar5) {\n                        uStack120._0_2_ = CONCAT11(uVar3, *(puStack96 + uVar5));\n                        uVar4 = puStack92[uVar5];\n                    }\n                    else {\n                        uStack120 = CONCAT31(uVar3, 0x60);\n                        uVar4 = 0;\n                    }\n                    uStack120 = CONCAT22(uVar4, uStack120);\n                    iVar8 = 1 << (cVar2 - uStack116 & 0x1f);\n                    puVar7 = iStack108 + ((uStack104 >> (uStack116 & 0x1f)) + uStack88) * 4;\n                    uVar5 = uStack88;\n                    do {\n                        puVar7 = puVar7 + -iVar8;\n                        *puVar7 = uStack120;\n                        uVar5 = uVar5 - iVar8;\n                    } while (uVar5 != 0);\n                    for (uVar5 = 1 << (cVar2 - 1U & 0x1f); (uStack104 & uVar5) != 0; uVar5 = uVar5 >> 1) {\n                    }\n                    if (uVar5 == 0) {\n                        uStack104 = 0;\n                    }\n                    else {\n                        uStack104 = uVar5 + (uVar5 - 1 & uStack104);\n                    }\n                    param_6 = param_6 + 1;\n                    piVar1 = &uStack64 + uVar10 * 2;\n                    *piVar1 = *piVar1 + -1;\n                    if (*piVar1 == 0) {\n                        if (uVar10 == uVar6) {\n                            if (uStack104 != 0) {\n                                uStack120._0_2_ = CONCAT11(cVar2 - uStack116, 0x40);\n                                uStack120 = uStack120;\n                                *(iStack108 + uStack104 * 4) = uStack120;\n                            }\n                            *param_4 = *param_4 + uStack80 * 4;\n                            *param_5 = uStack112;\n                            return 0;\n                        }\n                        uVar10 = *(param_2 + *param_6 * 2);\n                        uStack84 = uVar10;\n                    }\n                } while ((uVar10 <= uStack112) || (uVar5 = uVar9 & uStack104,  uVar5 == uStack76));\n                if (uStack116 == 0) {\n                    uStack116 = uStack112;\n                }\n                iVar11 = uVar10 - uStack116;\n                uVar10 = uStack116 + iVar11;\n                iStack108 = iStack108 + uStack88 * 4;\n                iVar8 = 1 << (iVar11 & 0x1f);\n                if (uVar10 < uVar6) {\n                    puVar12 = &uStack64 + uVar10 * 2;\n                    do {\n                        uVar4 = *puVar12;\n                        if (iVar8 - uVar4 < 1) break;\n                        uVar10 = uVar10 + 1;\n                        iVar11 = iVar11 + 1;\n                        puVar12 = puVar12 + 1;\n                        iVar8 = (iVar8 - uVar4) * 2;\n                    } while (uVar10 < uVar6);\n                }\n                uStack88 = 1 << (iVar11 & 0x1f);\n                uStack80 = uStack80 + uStack88;\n                if (param_1 == 1) {\n                    bVar13 = uStack80 < 0x354;\n                    bVar14 = uStack80 == 0x354;\ncode_r0x004111b4:\n                    if (!bVar13 && !bVar14) {\n                        return 1;\n                    }\n                }\n                else if (param_1 == 2) {\n                    bVar13 = uStack80 < 0x250;\n                    bVar14 = uStack80 == 0x250;\n                    goto code_r0x004111b4;\n                }\n                *(*param_4 + uVar5 * 4) = iVar11;\n                *(*param_4 + 1 + uVar5 * 4) = uStack112;\n                *(*param_4 + 2 + uVar5 * 4) = iStack108 - *param_4 >> 2;\n                uVar10 = uStack84;\n                uStack76 = uVar5;\n            } while( true );\n        }\n    }\n    else if ((param_1 != 2) || (uStack88 < 0x251)) goto code_r0x00411030;\n    return 1;\n}\n",
        "token_count": 2447
    },
    "00411250": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411250(int32_t *param_1, int32_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint uVar9;\n    uint8_t *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    char cVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    uchar *puVar19;\n    uchar *puVar20;\n    uchar *puVar21;\n    uchar *puVar22;\n    uint32_t uVar23;\n    int32_t iVar24;\n    uchar *puVar25;\n    uint8_t *puStack56;\n    \n    puVar2 = param_1[7];\n    puStack56 = *param_1 + -1;\n    puVar10 = puStack56 + param_1[1] + -5;\n    uVar17 = puVar2[0xf];\n    puVar19 = param_1[3] + -1;\n    iVar3 = param_1[4];\n    iVar15 = puVar2[10];\n    uVar4 = puVar2[0xb];\n    uVar5 = puVar2[0xc];\n    iVar18 = puVar2[0xd];\n    iVar6 = puVar2[0x13];\n    iVar7 = puVar2[0x14];\n    uVar8 = puVar2[0x15];\n    uVar9 = puVar2[0x16];\n    uVar23 = puVar2[0xe];\n    puVar21 = puVar19;\ncode_r0x004112e1:\n    if (uVar17 < 0xf) {\n        puVar1 = puStack56 + 1;\n        puStack56 = puStack56 + 2;\n        uVar23 = uVar23 + (*puVar1 << (uVar17 & 0x1f)) + (*puStack56 << (uVar17 + 8 & 0x1f));\n        uVar17 = uVar17 + 0x10;\n    }\n    uVar13 = *(iVar6 + ((1 << (uVar8 & 0x1f)) - 1U & uVar23) * 4);\n    uVar12 = uVar13 >> 8 & 0xff;\n    uVar23 = uVar23 >> (uVar12 & 0x1f);\n    uVar17 = uVar17 - uVar12;\n    cVar16 = uVar13;\n    while (cVar16 != '\\0') {\n        puVar20 = puVar21;\n        if ((uVar13 & 0x10) != 0) {\n            uVar12 = uVar13 >> 0x10;\n            uVar13 = uVar13 & 0xf;\n            if (uVar13 != 0) {\n                if (uVar17 < uVar13) {\n                    puStack56 = puStack56 + 1;\n                    uVar23 = uVar23 + (*puStack56 << (uVar17 & 0x1f));\n                    uVar17 = uVar17 + 8;\n                }\n                uVar11 = (1 << uVar13) - 1U & uVar23;\n                uVar23 = uVar23 >> uVar13;\n                uVar12 = uVar12 + uVar11;\n                uVar17 = uVar17 - uVar13;\n            }\n            if (uVar17 < 0xf) {\n                puVar1 = puStack56 + 1;\n                puStack56 = puStack56 + 2;\n                uVar23 = uVar23 + (*puVar1 << (uVar17 & 0x1f)) + (*puStack56 << (uVar17 + 8 & 0x1f));\n                uVar17 = uVar17 + 0x10;\n            }\n            uVar13 = *(iVar7 + ((1 << (uVar9 & 0x1f)) - 1U & uVar23) * 4);\n            uVar11 = uVar13 >> 8 & 0xff;\n            uVar17 = uVar17 - uVar11;\n            uVar23 = uVar23 >> (uVar11 & 0x1f);\n            goto joined_r0x004113e5;\n        }\n        if ((uVar13 & 0x40) != 0) {\n            if ((uVar13 & 0x20) == 0) {\n                param_1[6] = \"invalid literal/length code\";\n                goto code_r0x00411622;\n            }\n            *puVar2 = 0xb;\n            goto code_r0x00411628;\n        }\n        uVar13 = *(iVar6 + (((1 << (uVar13 & 0x1f)) - 1U & uVar23) + (uVar13 >> 0x10)) * 4);\n        uVar12 = uVar13 >> 8 & 0xff;\n        uVar23 = uVar23 >> (uVar12 & 0x1f);\n        uVar17 = uVar17 - uVar12;\n        cVar16 = uVar13;\n    }\n    puVar21[1] = uVar13 >> 0x10;\n    puVar20 = puVar21 + 1;\n    goto code_r0x0041157a;\njoined_r0x004113e5:\n    if ((uVar13 & 0x10) != 0) goto code_r0x00411424;\n    if ((uVar13 & 0x40) != 0) {\n        param_1[6] = \"invalid distance code\";\n        goto code_r0x00411622;\n    }\n    uVar13 = *(iVar7 + (((1 << (uVar13 & 0x1f)) - 1U & uVar23) + (uVar13 >> 0x10)) * 4);\n    uVar11 = uVar13 >> 8 & 0xff;\n    uVar17 = uVar17 - uVar11;\n    uVar23 = uVar23 >> (uVar11 & 0x1f);\n    goto joined_r0x004113e5;\ncode_r0x00411424:\n    uVar14 = uVar13 & 0xf;\n    uVar11 = uVar17;\n    puVar1 = puStack56;\n    if (uVar17 < uVar14) {\n        uVar11 = uVar17 + 8;\n        uVar23 = uVar23 + (puStack56[1] << (uVar17 & 0x1f));\n        puVar1 = puStack56 + 1;\n        if (uVar11 < uVar14) {\n            uVar23 = uVar23 + (puStack56[2] << (uVar11 & 0x1f));\n            uVar11 = uVar17 + 0x10;\n            puVar1 = puStack56 + 2;\n        }\n    }\n    puStack56 = puVar1;\n    uVar17 = uVar11 - uVar14;\n    uVar11 = (1 << uVar14) - 1U & uVar23;\n    uVar23 = uVar23 >> uVar14;\n    uVar11 = (uVar13 >> 0x10) + uVar11;\n    if (uVar11 <= puVar21 - (puVar19 + (iVar3 - param_2))) {\n        puVar20 = puVar21 + -uVar11;\n        do {\n            puVar22 = puVar21;\n            puVar25 = puVar20;\n            puVar22[1] = puVar25[1];\n            uVar12 = uVar12 - 3;\n            puVar22[2] = puVar25[2];\n            puVar21 = puVar22 + 3;\n            *puVar21 = puVar25[3];\n            puVar20 = puVar25 + 3;\n        } while (2 < uVar12);\n        puVar20 = puVar21;\n        if (uVar12 != 0) {\n            puVar22[4] = puVar25[4];\n            puVar20 = puVar22 + 4;\n            if (1 < uVar12) {\n                puVar22[5] = puVar25[5];\n                puVar20 = puVar22 + 5;\n            }\n        }\n        goto code_r0x0041157a;\n    }\n    uVar13 = uVar11 - (puVar21 - (puVar19 + (iVar3 - param_2)));\n    if ((uVar4 < uVar13) && (puVar2[0x6f0] != 0)) {\n        param_1[6] = \"invalid distance too far back\";\ncode_r0x00411622:\n        *puVar2 = 0x1d;\ncode_r0x00411628:\n        iVar15 = puStack56 - (uVar17 >> 3);\n        iVar18 = uVar17 - (uVar17 & 0xfffffff8);\n        *param_1 = iVar15 + 1;\n        param_1[3] = puVar20 + 1;\n        param_1[1] = puVar10 + (5 - iVar15);\n        param_1[4] = puVar19 + iVar3 + -0x101 + (0x101 - puVar20);\n        puVar2[0xe] = uVar23 & (1 << (iVar18 & 0x1f)) - 1U;\n        puVar2[0xf] = iVar18;\n        return;\n    }\n    iVar24 = iVar18 + -1;\n    if (uVar5 == 0) {\n        puVar25 = iVar24 + (iVar15 - uVar13);\n        if (uVar13 < uVar12) {\n            uVar12 = uVar12 - uVar13;\n            do {\n                puVar21 = puVar25 + 1;\n                puVar25 = puVar25 + 1;\n                puVar20 = puVar20 + 1;\n                *puVar20 = *puVar21;\n                uVar13 = uVar13 - 1;\n            } while (uVar13 != 0);\ncode_r0x0041152c:\n            puVar25 = puVar20 + -uVar11;\n            puVar21 = puVar20;\n        }\n    }\n    else if (uVar5 < uVar13) {\n        uVar14 = uVar13 - uVar5;\n        puVar25 = iVar24 + (uVar5 - uVar13) + iVar15;\n        if (uVar14 < uVar12) {\n            uVar12 = uVar12 - uVar14;\n            do {\n                puVar22 = puVar20 + puVar25 + (1 - puVar21);\n                puVar20 = puVar20 + 1;\n                *puVar20 = *puVar22;\n                uVar14 = uVar14 - 1;\n            } while (uVar14 != 0);\n            puVar25 = iVar18 + -1;\n            puVar21 = puVar20;\n            if (uVar5 < uVar12) {\n                uVar12 = uVar12 - uVar5;\n                uVar13 = uVar5;\n                do {\n                    puVar21 = puVar25 + 1;\n                    puVar25 = puVar25 + 1;\n                    puVar20 = puVar20 + 1;\n                    *puVar20 = *puVar21;\n                    uVar13 = uVar13 - 1;\n                } while (uVar13 != 0);\n                goto code_r0x0041152c;\n            }\n        }\n    }\n    else {\n        puVar25 = iVar24 + (uVar5 - uVar13);\n        if (uVar13 < uVar12) {\n            uVar12 = uVar12 - uVar13;\n            do {\n                puVar21 = puVar25 + 1;\n                puVar25 = puVar25 + 1;\n                puVar20 = puVar20 + 1;\n                *puVar20 = *puVar21;\n                uVar13 = uVar13 - 1;\n            } while (uVar13 != 0);\n            goto code_r0x0041152c;\n        }\n    }\n    if (2 < uVar12) {\n        iVar24 = (uVar12 - 3) / 3 + 1;\n        do {\n            uVar12 = uVar12 - 3;\n            puVar21[1] = puVar25[1];\n            puVar20 = puVar25 + 2;\n            puVar25 = puVar25 + 3;\n            puVar21[2] = *puVar20;\n            puVar21 = puVar21 + 3;\n            *puVar21 = *puVar25;\n            iVar24 = iVar24 + -1;\n        } while (iVar24 != 0);\n    }\n    puVar20 = puVar21;\n    if (uVar12 != 0) {\n        puVar20 = puVar21 + 1;\n        *puVar20 = puVar25[1];\n        if (1 < uVar12) {\n            puVar20 = puVar21 + 2;\n            *puVar20 = puVar25[2];\n        }\n    }\ncode_r0x0041157a:\n    if ((puVar10 <= puStack56) || (puVar21 = puVar20,  puVar19 + iVar3 + -0x101 <= puVar20)) goto code_r0x00411628;\n    goto code_r0x004112e1;\n}\n",
        "token_count": 3050
    },
    "00411794": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411794(int32_t param_1, int32_t param_2, int32_t **param_3, int32_t param_4)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t **ppiVar7;\n    int32_t **ppiVar8;\n    int32_t **ppiVar9;\n    int32_t **ppiVar10;\n    int32_t *piVar11;\n    int32_t unaff_retaddr;\n    int32_t *piVar12;\n    int32_t *piStack8;\n    int32_t **ppiStack4;\n    \n    piVar6 = NULL;\n    if (param_4 != param_1) {\n        if (param_3 != NULL) {\n            piVar11 = *param_3;\n            while (piVar11 != 0xffffffff) {\n                ppiVar10 = param_3 + 1;\n                if (piVar11 == 0xfffffff9) {\n                    piVar11 = *ppiVar10;\n                    ppiStack4 = param_3[2];\n                    iVar2 = *(piVar11 + param_4);\n                    piVar12 = piVar11 + param_1;\n                    ppiVar10 = param_3 + 2 + ppiStack4 + 1;\n                    if (*piVar12 != 0) {\n                        (**0x41766c)(*piVar12);\n                    }\n                    if (iVar2 != 0) {\n                        iVar5 = (**0x417654)(*(iVar2 + -0x14), *(iVar2 + -8), *(iVar2 + -4), *(iVar2 + -0x10), piVar12);\n                        *(iVar5 + -0x18) = *(iVar2 + -0x18);\n                        (**0x417660)(iVar2, iVar5, 0);\n                    }\n                    piVar12 = ppiStack4 * 4 + 4;\n                }\n                else if (piVar11 == 0xfffffffa) {\n                    piVar11 = *ppiVar10;\n                    ppiVar10 = param_3 + 6;\n                    iVar2 = *(piVar11 + param_4);\n                    iVar5 = *(piVar11 + param_1);\n                    if (iVar5 != 0) {\n                        (**0x417674)(iVar5);\n                    }\n                    if (iVar2 != 0) {\n                        (**0x41765c)(*(iVar2 + 0x1c), *(iVar2 + 0x20), *(iVar2 + 0x10), piVar11 + param_1, \n                                     *(iVar2 + 0x24));\n                        (**0x417668)(*(piVar11 + param_4), *piStack8, 0);\n                    }\ncode_r0x00411905:\n                    piVar12 = 0x4;\n                }\n                else if (piVar11 == 0xfffffffb) {\n                    piVar11 = *ppiVar10;\n                    ppiVar10 = param_3 + 5;\n                    iVar2 = *(piVar11 + param_4);\n                    iVar5 = *(piVar11 + param_1);\n                    if (iVar5 != 0) {\n                        (**0x417670)(iVar5);\n                    }\n                    if (iVar2 != 0) {\n                        (**0x417658)(*(iVar2 + 0x28) + -8, piVar11 + param_1, *(iVar2 + 0x18), *(iVar2 + 0x2c));\n                        (**0x417664)(*(piVar11 + param_4), *ppiStack4, 0);\n                    }\n                    piVar12 = 0x8;\n                }\n                else {\n                    if (piVar11 == 0xfffffffc) {\n                        piVar11 = *ppiVar10;\n                        ppiVar10 = param_3 + 6;\n                        iVar2 = *(piVar11 + param_4);\n                        piVar12 = piVar11 + param_1;\n                        if (*piVar12 != 0) {\n                            (**0x41766c)(*piVar12);\n                        }\n                        if (iVar2 != 0) {\n                            uVar4 = (**0x417654)(*(iVar2 + -0x14), *(iVar2 + -8), *(iVar2 + -4), *(iVar2 + -0x10), \n                                                 piVar12);\n                            (**0x417660)(iVar2, uVar4, 0);\n                        }\n                        goto code_r0x00411905;\n                    }\n                    if (piVar11 == 0xfffffffd) {\n                        piVar11 = *ppiVar10;\n                        piVar12 = param_3[2];\n                        ppiVar10 = param_3 + 4;\n                        fcn.00411794();\n                    }\n                    else {\n                        if (piVar11 != 0xfffffffe) {\n                            piVar12 = piVar11 + param_1;\n                            iVar2 = *(piVar11 + param_4);\n                            if (*piVar12 != 0) {\n                                fcn.0040def0(*piVar12);\n                                *piVar12 = 0;\n                                iVar2 = param_2;\n                            }\n                            if (iVar2 != 0) {\n                                fcn.0040e080(piVar12, iVar2);\n                            }\n                            goto code_r0x00411905;\n                        }\n                        ppiStack4 = *ppiVar10;\n                        piStack8 = param_3[2];\n                        ppiVar1 = param_3[3];\n                        ppiVar3 = ppiVar1;\n                        ppiVar7 = ppiStack4;\n                        ppiVar10 = param_3 + 5;\n                        piVar11 = piStack8;\n                        if (0 < ppiStack4) {\n                            ppiVar7 = piStack8 + param_1;\n                            ppiVar8 = ppiVar7;\n                            ppiVar9 = ppiStack4;\n                            param_4 = unaff_retaddr;\n                            do {\n                                ppiVar3 = ppiVar8;\n                                fcn.00411794();\n                                ppiVar8 = ppiVar8 + ppiVar1;\n                                ppiVar9 = ppiVar9 + -1;\n                                ppiVar10 = ppiStack4;\n                                piVar11 = piVar6;\n                                unaff_retaddr = param_4;\n                            } while (ppiVar9 != NULL);\n                        }\n                        piVar12 = ppiVar7 * ppiVar3;\n                    }\n                }\n                if (piVar6 < piVar11) {\n                    sub.MSVCRT.dll_memcpy(param_1 + piVar6, piVar6 + param_4, piVar11 - piVar6);\n                }\n                piVar6 = piVar12 + piVar11;\n                param_3 = ppiVar10;\n                piVar11 = *ppiVar10;\n            }\n            if (param_2 <= piVar6) {\n                return;\n            }\n            param_2 = param_2 - piVar6;\n            param_4 = piVar6 + param_4;\n            param_1 = piVar6 + param_1;\n        }\n        sub.MSVCRT.dll_memcpy(param_1, param_4, param_2);\n    }\n    return;\n}\n",
        "token_count": 1603
    },
    "00411a6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00411a6a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t arg_8h_00;\n    uint uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *arg_ch;\n    do {\n        if (iVar2 == -1) {\n            return in_EAX;\n        }\n        piVar3 = arg_ch + 1;\n        if (iVar2 == -7) {\n            uVar4 = *(*piVar3 + arg_8h);\n            piVar3 = arg_ch + 2 + arg_ch[2] + 4;\ncode_r0x00411b54:\n            (**0x41766c)(uVar4);\n        }\n        else if (iVar2 == -6) {\n            iVar2 = *piVar3;\n            piVar3 = arg_ch + 6;\n            (**0x417674)(*(iVar2 + arg_8h));\n        }\n        else if (iVar2 == -5) {\n            iVar2 = *piVar3;\n            piVar3 = arg_ch + 5;\n            (**0x417670)(*(iVar2 + arg_8h));\n        }\n        else {\n            if (iVar2 == -4) {\n                iVar2 = *piVar3;\n                piVar3 = arg_ch + 6;\n                uVar4 = *(iVar2 + arg_8h);\n                goto code_r0x00411b54;\n            }\n            if (iVar2 == -3) {\n                iVar2 = *piVar3;\n                piVar3 = arg_ch + 4;\n                in_EAX = iVar2 + arg_8h;\n                fcn.00411a6a(in_EAX, arg_ch[3]);\n            }\n            else if (iVar2 == -2) {\n                iVar2 = *piVar3;\n                iVar1 = arg_ch[3];\n                arg_ch_00 = arg_ch[4];\n                piVar3 = arg_ch + 5;\n                if (0 < iVar2) {\n                    arg_8h_00 = arg_ch[2] + arg_8h;\n                    do {\n                        in_EAX = arg_8h_00;\n                        fcn.00411a6a(arg_8h_00, arg_ch_00);\n                        arg_8h_00 = arg_8h_00 + iVar1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n            }\n            else if (*(iVar2 + arg_8h) != 0) {\n                in_EAX = *(iVar2 + arg_8h);\n                fcn.0040def0(in_EAX);\n            }\n        }\n        iVar2 = *piVar3;\n        arg_ch = piVar3;\n    } while( true );\n}\n",
        "token_count": 664
    },
    "00411d62": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "get thread local storage value",
            "set thread local storage value",
            "allocate thread local storage"
        ],
        "decompiled_code": "\nvoid fcn.00411d62(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t unaff_ESI;\n    int32_t iVar5;\n    \n    if (*0x417678 == 0) {\n        *0x417698 = (*_sym.imp.KERNEL32.DLL_TlsAlloc)();\n        (*_sym.imp.KERNEL32.DLL_InitializeCriticalSection)(0x417680);\n        *0x417678 = 1;\n    }\n    iVar5 = *0x417698;\n    piVar2 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)();\n    if (piVar2 == NULL) {\n        piVar2 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 8, 0x14);\n        if (piVar2 == NULL) {\n            return;\n        }\n        (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(0x417680);\n        if (*0x41767c != NULL) {\n            **0x41767c = piVar2;\n        }\n        piVar2[1] = *0x41767c;\n        *0x41767c = piVar2;\n        (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(0x417680);\n        pcVar1 = _sym.imp.KERNEL32.DLL_GetCurrentProcess;\n        uVar3 = (*_sym.imp.KERNEL32.DLL_GetCurrentProcess)(piVar2 + 4, 0x100000, 0, 0);\n        uVar3 = (*_sym.imp.KERNEL32.DLL_GetCurrentThread)(uVar3);\n        uVar3 = (*pcVar1)(uVar3);\n        (*_sym.imp.KERNEL32.DLL_DuplicateHandle)(uVar3);\n        (*_sym.imp.KERNEL32.DLL_RegisterWaitForSingleObject)(piVar2 + 3, piVar2[4], 0x411e5a, piVar2, 0xffffffff, 8);\n        (*_sym.imp.KERNEL32.DLL_TlsSetValue)(*0x417698, piVar2);\n    }\n    piVar4 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 0, 0xc);\n    if (piVar4 != NULL) {\n        piVar4[1] = iVar5;\n        piVar4[2] = unaff_ESI;\n        *piVar4 = piVar2[2];\n        piVar2[2] = piVar4;\n    }\n    return;\n}\n",
        "token_count": 572
    },
    "004011de": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.004011de(void)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    bool bVar3;\n    uint8_t *in_stack_00000010;\n    int32_t in_stack_00000014;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uStack64;\n    char *pcStack60;\n    uint uStack56;\n    int32_t *piStack52;\n    uchar *puStack48;\n    int32_t iStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uchar *puStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t *piVar7;\n    \n    iVar1 = 0x10;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    iStack20 = 0x4011ff;\n    uVar5 = 0;\n    fcn.00405060();\n    iStack20 = uVar5;\n    iStack24 = 0x401207;\n    iStack24 = fcn.00405700();\n    puStack28 = 0x401214;\n    iStack16 = fcn.00409b00();\n    uStack32 = 0;\n    uStack36 = 5;\n    uStack40 = 0x100;\n    iStack44 = 4;\n    puStack48 = 0x401236;\n    puStack28 = &stack0xfffffff4;\n    fcn.0040db6a();\n    piStack52 = NULL;\n    uStack56 = 5;\n    pcStack60 = 0x100;\n    uStack64 = 4;\n    puStack48 = &stack0xffffffe8;\n    fcn.0040db6a();\n    puStack28 = NULL;\n    iStack20 = 0;\n    iStack16 = 0;\n    uStack56 = 0x20;\n    uStack36 = 0;\n    piVar7 = piStack52;\n    pcVar2 = pcStack60;\n    do {\n        if (0xff < uStack36) break;\n        *piVar7 = uStack36;\n        piVar7 = piVar7 + 1;\n        if (*pcVar2 == '\\0') {\n            pcVar2 = pcStack60;\n        }\n        *(iStack44 + uStack36 * 4) = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n        bVar3 = SCARRY4(uStack36, 1);\n        uStack36 = uStack36 + 1;\n    } while (!bVar3);\n    uStack32 = 0;\n    uStack36 = 0;\n    do {\n        if (0xff < uStack36) break;\n        uStack32 = uStack32 + piStack52[uStack36] + *(iStack44 + uStack36 * 4) & 0xff;\n        iStack20 = piStack52[uStack36];\n        piStack52[uStack36] = piStack52[uStack32];\n        piStack52[uStack32] = iStack20;\n        bVar3 = SCARRY4(uStack36, 1);\n        uStack36 = uStack36 + 1;\n    } while (!bVar3);\n    uStack36 = 0;\n    uStack32 = 0;\n    iStack24 = 0;\n    do {\n        if (in_stack_00000014 + -1 < iStack24) break;\n        uStack36 = uStack36 + 1 & 0xff;\n        uStack32 = uStack32 + piStack52[uStack36] & 0xff;\n        iStack20 = piStack52[uStack36];\n        piStack52[uStack36] = piStack52[uStack32];\n        piStack52[uStack32] = iStack20;\n        puStack28 = piStack52[uStack36] + (piStack52[uStack32] & 0xffU) & 0xff;\n        iStack16 = piStack52[puStack28];\n        *in_stack_00000010 = *in_stack_00000010 ^ iStack16;\n        in_stack_00000010 = in_stack_00000010 + 1;\n        bVar3 = SCARRY4(iStack24, 1);\n        iStack24 = iStack24 + 1;\n    } while (!bVar3);\n    fcn.0040db6a(4, 1, 5, 0, &stack0xffffffcc);\n    uVar6 = 5;\n    uVar4 = 1;\n    fcn.0040db6a(4, 1, 5, 0, &stack0xffffffc0);\n    uVar5 = uVar4;\n    fcn.00409b20();\n    uVar4 = fcn.0040def0(uVar4);\n    fcn.0040dcbd(uVar5, uVar4);\n    fcn.0040dcbd();\n    return uVar6;\n}\n",
        "token_count": 1121
    },
    "00402022": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00402022(uint noname_0, uint arg_4h, uint noname_2, uint arg_bp_ch, uint arg_10h, uint arg_14h, uint arg_18h, \n            uint arg_1ch, uint noname_8, uint noname_9, uint noname_10, int32_t noname_11, uint arg_38h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uStack00000038;\n    uint uStack28;\n    \n    iVar2 = 0x14;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    fcn.0040df60();\n    fcn.00405060();\n    fcn.00405060();\n    fcn.00405060();\n    uStack00000038 = sub.SHELL32.DLL_ShellExecuteExW(*0x10);\n    do {\n        do {\n            fcn.00405532(0x19);\n            iVar2 = noname_11;\n            iVar1 = sub.KERNEL32.DLL_GetExitCodeProcess();\n        } while (iVar1 == 0);\n    } while (noname_11 == 0x103);\n    fcn.0040def0(iVar2);\n    fcn.0040def0(iVar2);\n    fcn.0040def0(uStack28);\n    return;\n}\n",
        "token_count": 315
    },
    "004024f1": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004024f1(void)\n\n{\n    uint uVar1;\n    int32_t arg_ch;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_EDX;\n    int32_t extraout_EDX_00;\n    ulong uVar4;\n    int32_t in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc8;\n    uchar *s;\n    uchar *arg_8h;\n    \n    iVar3 = 9;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.0040df60();\n    fcn.004051a0();\n    *0x41702c = 0x4160d0;\n    s = NULL;\n    do {\n        if (6 < s) break;\n        iVar3 = **0x41702c;\n        *0x41702c = *0x41702c + 1;\n        uVar1 = fcn.0040de20();\n        fcn.0040de20();\n        iVar3 = -iVar3;\n        fcn.00405d60();\n        fcn.0040de60(&stack0xfffffff4, iVar3);\n        fcn.0040de20();\n        fcn.0040dfc0(uVar1);\n        fcn.0040dfc0(iVar3);\n        arg_8h = &stack0xffffffe8;\n        fcn.0040de60(arg_8h, iVar3);\n        s = arg_8h + 1;\n    } while (!SCARRY4(arg_8h, 1));\n    fcn.0040de20();\n    uVar1 = fcn.0040de20();\n    arg_ch = sub.KERNEL32.DLL_GetCommandLineW();\n    fcn.00409b60();\n    fcn.0040de60(&stack0xfffffffc, arg_ch);\n    fcn.0040de20();\n    fcn.0040dfc0(s);\n    fcn.0040de60(&stack0xfffffff4, s);\n    sub.SHLWAPI.DLL_PathRemoveArgsW(uVar1);\n    iVar3 = arg_ch;\n    uVar4 = fcn.00405d80();\n    if (0 < uVar4) {\n        uVar2 = fcn.0040de20(uVar4 >> 0x20);\n        in_stack_ffffffc8 = 0x416026;\n        fcn.0040dfc0(0x416026);\n        uVar1 = extraout_EDX;\n        uVar2 = fcn.0040de20(extraout_EDX, in_stack_ffffffc8, uVar2);\n        uVar2 = fcn.0040de20(uVar1, uVar2);\n        in_stack_ffffffbc = fcn.0040de20(uVar1, uVar2);\n        in_stack_ffffffb8 = fcn.0040de20(uVar1);\n        in_stack_ffffffb4 = iVar3 + 1;\n        fcn.004060b0(s);\n        fcn.00405182();\n        fcn.00406000(s + extraout_EDX_00);\n        fcn.0040de60(&stack0xffffffd8, in_stack_ffffffb4);\n    }\n    fcn.00409860();\n    uVar1 = fcn.0040de20();\n    fcn.0040dfc0(in_stack_ffffffc8);\n    fcn.00405170(in_stack_ffffffc8);\n    fcn.0040def0(in_stack_ffffffb8);\n    fcn.0040def0(in_stack_ffffffbc);\n    fcn.0040def0(arg_ch);\n    fcn.0040def0(uVar1);\n    fcn.0040def0(in_stack_ffffffb4);\n    return;\n}\n",
        "token_count": 858
    },
    "00403275": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00403275(void)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint in_stack_00000024;\n    uchar *puVar5;\n    char16_t *arg_ch;\n    uchar *puVar6;\n    uchar *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uint uVar7;\n    uint32_t uStack16;\n    uint uStack12;\n    \n    iVar4 = 7;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    uStack12 = 0x40328d;\n    fcn.0040df60();\n    puVar5 = &stack0xfffffff4;\n    puVar6 = &stack0xfffffff4;\n    uStack12 = in_stack_00000024;\n    fcn.004051a0();\n    fcn.00405060();\n    fcn.00405060();\n    iVar4 = fcn.00402bc1();\n    if ((iVar4 == 0) || (iVar4 = fcn.0040559a(),  iVar4 == 0x41)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uVar2 = fcn.0040de20();\n        iVar4 = fcn.0040de20();\n        uVar7 = 0x800;\n        fcn.00406260();\n        uStack32 = 0x4032f9;\n        fcn.0040de60(&stack0xfffffff4, uVar7);\n        uStack32 = 0x800;\n        puStack40 = 0x403307;\n        iStack36 = iVar4;\n        sub.KERNEL32.DLL_GetWindowsDirectoryW();\n        puStack40 = puVar5;\n        puVar6 = puStack40;\n        sub.SHLWAPI.DLL_PathAddBackslashW();\n        uVar7 = uStack32;\n        fcn.0040de20();\n        fcn.0040dfc0(uVar7);\n        arg_ch = L\"sysnative\";\n        fcn.0040dfc0(L\"sysnative\");\n        fcn.0040de60(&stack0xffffffd8, arg_ch);\n        sub.SHLWAPI.DLL_PathAddBackslashW();\n        uVar7 = fcn.0040de20();\n        fcn.0040dfc0(arg_ch);\n        fcn.0040dfc0(uVar7);\n        fcn.0040de60(&stack0xffffffc8, uVar7);\n        uVar7 = fcn.0040de20();\n        fcn.0040dfc0(arg_ch);\n        fcn.0040dfc0(uVar7);\n        fcn.0040dfc0(uVar7);\n        fcn.0040de60(&stack0xffffffb8, uVar7);\n        iVar3 = fcn.0040ad60(0, arg_ch);\n        if (iVar3 != 0) {\n            fcn.0040a970(0);\n        }\n        puStack40 = NULL;\n        iStack36 = uVar2;\n        iVar3 = fcn.0040ad60();\n        if (iVar3 != 0) {\n            puStack40 = NULL;\n            fcn.0040a970();\n        }\n        uStack16 = iVar3 != 0;\n        puVar5 = &stack0xffffffd8;\n        if (iVar4 + uStack16 == 0) {\n            fcn.0040de20();\n            fcn.0040de20();\n            uVar7 = 0x800;\n            fcn.00406260();\n            fcn.0040de60(&stack0xffffffd8, uVar7);\n            sub.KERNEL32.DLL_GetSystemDirectoryW();\n            puStack40 = puVar5;\n            sub.SHLWAPI.DLL_PathAddBackslashW();\n        }\n    }\n    else {\n        fcn.0040de20();\n        iStack36 = fcn.0040de20();\n        uVar7 = 0x800;\n        fcn.00406260();\n        uStack32 = 0x40345f;\n        fcn.0040de60(&stack0xfffffff4, uVar7);\n        uStack32 = 0x800;\n        puStack40 = 0x40346d;\n        sub.KERNEL32.DLL_GetSystemDirectoryW();\n        puStack40 = puVar6;\n        puVar6 = puStack40;\n        sub.SHLWAPI.DLL_PathAddBackslashW();\n    }\n    uVar7 = uStack32;\n    fcn.0040de20();\n    fcn.0040dfc0(uVar7);\n    fcn.00405170();\n    fcn.0040def0(puVar6);\n    fcn.0040def0(puVar6);\n    fcn.0040def0(puVar6);\n    fcn.0040def0(puVar6);\n    fcn.0040def0(puVar6);\n    return;\n}\n",
        "token_count": 1133
    },
    "00403855": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00403855(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    uint extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    uint extraout_EDX_05;\n    int32_t extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    uint extraout_EDX_08;\n    uint extraout_EDX_09;\n    int32_t extraout_EDX_10;\n    uint extraout_EDX_11;\n    int32_t extraout_EDX_12;\n    uint extraout_EDX_13;\n    int32_t extraout_EDX_14;\n    uchar *s;\n    uint arg_8h;\n    uchar *puVar5;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    int32_t iStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack8;\n    uchar *puVar6;\n    \n    iVar4 = 0xc;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    fcn.0040df60();\n    *0x41702c = 0x416091;\n    puVar6 = NULL;\n    uStack8 = extraout_EDX;\n    do {\n        if (8 < puVar6) break;\n        iVar4 = **0x41702c;\n        *0x41702c = *0x41702c + 1;\n        uStack8 = fcn.0040de20();\n        fcn.0040de20();\n        iVar4 = -iVar4;\n        fcn.00405d60();\n        fcn.0040de60(&stack0xfffffffc, iVar4);\n        uVar2 = uStack8;\n        fcn.0040de20();\n        fcn.0040dfc0(uVar2);\n        fcn.0040dfc0(iVar4);\n        puVar5 = &stack0xfffffff0;\n        fcn.0040de60(puVar5, iVar4);\n        puVar6 = puVar5 + 1;\n        uStack8 = extraout_EDX_00;\n    } while (!SCARRY4(puVar5, 1));\n    uStack8 = fcn.0040de20();\n    fcn.0040de20();\n    fcn.0040de20();\n    fcn.0040de20();\n    iVar4 = *0x417040;\n    fcn.0040d0a0();\n    fcn.00405182();\n    iVar4 = iVar4 + extraout_EDX_01;\n    fcn.00405e50();\n    fcn.0040de60(&stack0xfffffff8, iVar4);\n    fcn.0040de20();\n    fcn.0040de20();\n    iVar1 = fcn.0040de20();\n    fcn.0040de20();\n    iVar4 = *0x417040;\n    fcn.0040d0a0();\n    fcn.00405182();\n    iVar4 = iVar4 + extraout_EDX_02;\n    fcn.00405e50();\n    iStack64 = 0x40397c;\n    fcn.0040de60(&stack0xffffffe0, iVar4);\n    uStack68 = 0x403982;\n    iStack64 = extraout_EDX_03;\n    iVar4 = fcn.0040de20();\n    uStack68 = iStack64;\n    uStack72 = 0x40398a;\n    iStack64 = iVar4;\n    uVar2 = fcn.0040de20();\n    uStack72 = uStack68;\n    uStack76 = 0x403992;\n    uStack68 = uVar2;\n    uVar2 = fcn.0040de20();\n    uStack76 = uStack72;\n    uStack80 = 0x40399a;\n    uStack72 = uVar2;\n    uStack76 = fcn.0040de20();\n    uStack80 = 3;\n    fcn.0040d0a0();\n    fcn.00405182();\n    iVar1 = iVar1 + extraout_EDX_04;\n    fcn.00405e50();\n    puVar6 = &stack0xffffffc8;\n    uStack92 = 0x4039c1;\n    fcn.0040de60(puVar6, iVar1);\n    uStack96 = 0x4039c7;\n    uStack92 = extraout_EDX_05;\n    uVar2 = fcn.0040de20();\n    uStack96 = uStack92;\n    uStack100 = 0x4039cf;\n    uStack92 = uVar2;\n    uVar2 = fcn.0040de20();\n    uStack100 = uStack96;\n    uStack104 = 0x4039d7;\n    uStack96 = uVar2;\n    uVar2 = fcn.0040de20();\n    uStack104 = uStack100;\n    uStack100 = uVar2;\n    uStack104 = fcn.0040de20();\n    iStack156 = iStack64;\n    fcn.0040d0a0();\n    fcn.00405182();\n    iStack156 = iStack156 + extraout_EDX_06;\n    fcn.00405e50();\n    fcn.0040de60(&stack0xffffffb0, iStack156);\n    fcn.0040de20();\n    fcn.0040de20();\n    fcn.0040de20();\n    fcn.0040de20();\n    fcn.0040d0a0();\n    fcn.00405182();\n    puVar6 = puVar6 + extraout_EDX_07;\n    fcn.00405e50();\n    uStack148 = 0x403a4b;\n    fcn.0040de60(&stack0xffffff98, puVar6);\n    uStack152 = 0x403a51;\n    uStack148 = extraout_EDX_08;\n    uStack148 = fcn.0040de20();\n    uStack152 = 1;\n    fcn.00403cd7();\n    fcn.004051a0();\n    uVar3 = fcn.0040de20();\n    uVar2 = 3;\n    fcn.00403cd7();\n    fcn.0040de60(0x417054, uVar2);\n    fcn.0040de20();\n    uVar2 = uStack148;\n    fcn.00403cd7();\n    puVar6 = &stack0xffffff70;\n    fcn.0040de60(puVar6, uVar2);\n    fcn.0040de20();\n    fcn.00403cd7();\n    fcn.0040de60(&stack0xffffff64, uVar3);\n    fcn.0040de20();\n    s = puVar6;\n    fcn.00403cd7();\n    uStack224 = 0x403ae8;\n    fcn.0040de60(&stack0xffffff58, puVar6);\n    uStack228 = 0x403aee;\n    uStack224 = extraout_EDX_09;\n    uVar2 = fcn.0040de20();\n    uStack228 = uStack224;\n    uStack232 = 0x403af6;\n    uStack224 = uVar2;\n    uVar2 = fcn.0040de20();\n    uStack232 = uStack228;\n    uStack228 = uVar2;\n    uStack232 = fcn.0040de20();\n    iVar4 = *0x417068;\n    fcn.00402bfa();\n    fcn.0040e020();\n    uVar2 = 0x41605c;\n    fcn.00405182();\n    fcn.004065f0(s, uVar2, iVar4 + extraout_EDX_10);\n    puVar5 = &stack0xffffff34;\n    fcn.0040de60(puVar5, s);\n    uVar2 = extraout_EDX_11;\n    iVar1 = fcn.0040de20(extraout_EDX_11);\n    uVar3 = fcn.0040de20(uVar2);\n    uVar2 = fcn.0040de20(uVar2, uVar3);\n    iVar4 = *0x417058;\n    fcn.00402bfa(*0x417058, uVar2);\n    fcn.0040e020();\n    fcn.00405182(puVar6, 0x41602a);\n    iVar4 = iVar4 + extraout_EDX_12;\n    fcn.004065f0();\n    fcn.0040de60(&stack0xffffff18, puVar6);\n    uVar2 = fcn.0040de20(extraout_EDX_13);\n    uVar3 = fcn.0040de20(iVar4, uVar2);\n    fcn.0040dfc0(iVar4);\n    arg_8h = 0x416062;\n    fcn.0040dfc0(0x416062);\n    fcn.0040dfc0(puVar5);\n    fcn.0040dfc0(s);\n    fcn.0040dfc0(iVar1);\n    fcn.0040e020();\n    uVar2 = *0x417038;\n    fcn.00405182();\n    iVar1 = iVar1 + extraout_EDX_14;\n    fcn.0040240c();\n    fcn.004051a0();\n    fcn.0040def0(arg_8h);\n    fcn.0040def0(s);\n    fcn.0040def0(iVar4);\n    fcn.0040def0(iVar4);\n    fcn.0040def0(uVar3);\n    fcn.0040def0(iVar1);\n    fcn.0040def0(iVar4);\n    fcn.0040def0(s);\n    fcn.0040def0(iVar1);\n    fcn.0040def0(uVar2);\n    return;\n}\n",
        "token_count": 2353
    },
    "00409638": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00409638(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0040e200(0x104, param_1);\n    iVar2 = (*_sym.imp.KERNEL32.DLL_GetModuleFileNameW)(*0x41700c, iVar1, 0x104);\n    iVar3 = sub.MSVCRT.dll_wcscmp(iVar1, 0x4120dc);\n    if (iVar3 == 0) {\n        sub.MSVCRT.dll_memmove(iVar1, iVar1 + 8, iVar2 * 2 + -8);\n        iVar2 = iVar2 + -4;\n    }\n    fcn.0040e350(0x104 - iVar2);\n    *(iVar1 + iVar2 * 2) = 0;\n    return;\n}\n",
        "token_count": 197
    },
    "0040e200": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e200(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170);\n    if (arg_ch == -1) {\n        arg_ch = piVar1[2];\n    }\n    iVar2 = piVar1[2] + arg_8h * 2;\n    if (piVar1[1] + -4 <= iVar2) {\n        piVar1[1] = iVar2 + 0x4000;\n        iVar2 = (*_sym.imp.KERNEL32.DLL_HeapReAlloc)(*0x417720, 0, *piVar1, piVar1[1] + 10);\n        *piVar1 = iVar2;\n    }\n    piVar1[2] = arg_ch + arg_8h * 2;\n    return *piVar1 + arg_ch;\n}\n",
        "token_count": 244
    },
    "004102d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t * fcn.004102d0(uint32_t param_1, uint32_t *param_2, uint32_t param_3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if (param_2 == NULL) {\n        return param_2;\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            if ((param_2 & 3) == 0) break;\n            uVar1 = *param_2;\n            param_2 = param_2 + 1;\n            param_1 = param_1 >> 8 ^ *(((uVar1 ^ param_1) & 0xff) * 4 + 0x4131c8);\n            param_3 = param_3 - 1;\n        } while (param_3 != 0);\n    }\n    if (0x1f < param_3) {\n        uVar3 = param_3 >> 5;\n        do {\n            param_1 = param_1 ^ *param_2;\n            uVar2 = *((param_1 >> 0x10 & 0xff) * 4 + 0x4135c8) ^ *((param_1 >> 8 & 0xff) * 4 + 0x4139c8) ^\n                    *((param_1 >> 0x18) * 4 + 0x4131c8) ^ *((param_1 & 0xff) * 4 + 0x413dc8) ^ param_2[1];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4135c8) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4139c8) ^\n                    *((uVar2 >> 0x18) * 4 + 0x4131c8) ^ *((uVar2 & 0xff) * 4 + 0x413dc8) ^ param_2[2];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4135c8) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4139c8) ^\n                    *((uVar2 >> 0x18) * 4 + 0x4131c8) ^ *((uVar2 & 0xff) * 4 + 0x413dc8) ^ param_2[3];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4135c8) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4139c8) ^\n                    *((uVar2 >> 0x18) * 4 + 0x4131c8) ^ *((uVar2 & 0xff) * 4 + 0x413dc8) ^ param_2[4];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4135c8) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4139c8) ^\n                    *((uVar2 >> 0x18) * 4 + 0x4131c8) ^ *((uVar2 & 0xff) * 4 + 0x413dc8) ^ param_2[5];\n            param_3 = param_3 - 0x20;\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4135c8) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4139c8) ^\n                    *((uVar2 >> 0x18) * 4 + 0x4131c8) ^ *((uVar2 & 0xff) * 4 + 0x413dc8) ^ param_2[6];\n            uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4135c8) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4139c8) ^\n                    *((uVar2 >> 0x18) * 4 + 0x4131c8) ^ *((uVar2 & 0xff) * 4 + 0x413dc8) ^ param_2[7];\n            param_2 = param_2 + 8;\n            param_1 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4135c8) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4139c8) ^\n                      *((uVar2 >> 0x18) * 4 + 0x4131c8) ^ *((uVar2 & 0xff) * 4 + 0x413dc8);\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    if (3 < param_3) {\n        uVar3 = param_3 >> 2;\n        do {\n            param_1 = param_1 ^ *param_2;\n            param_3 = param_3 - 4;\n            param_2 = param_2 + 1;\n            param_1 = *((param_1 >> 0x10 & 0xff) * 4 + 0x4135c8) ^ *((param_1 >> 8 & 0xff) * 4 + 0x4139c8) ^\n                      *((param_1 >> 0x18) * 4 + 0x4131c8) ^ *((param_1 & 0xff) * 4 + 0x413dc8);\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    for (; param_3 != 0; param_3 = param_3 - 1) {\n        uVar1 = *param_2;\n        param_2 = param_2 + 1;\n        param_1 = param_1 >> 8 ^ *(((uVar1 ^ param_1) & 0xff) * 4 + 0x4131c8);\n    }\n    return ~param_1;\n}\n",
        "token_count": 1436
    },
    "00401b8f": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004011a5: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004011aa)\n\nvoid __cdecl fcn.00401b8f(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    uint extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    uint extraout_EDX_06;\n    uint extraout_EDX_07;\n    uchar uVar5;\n    ulong uVar6;\n    uint in_stack_ffffff30;\n    uint in_stack_ffffff34;\n    uint in_stack_ffffff38;\n    uint uStack136;\n    uchar *s;\n    uint uStack96;\n    int32_t iStack80;\n    int32_t iStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0x401b9e;\n    fcn.0040df60();\n    uStack40 = 0x401ba4;\n    uStack36 = extraout_EDX;\n    uVar1 = fcn.0040de20();\n    uStack40 = 2;\n    uStack44 = 0;\n    uStack48 = uStack36;\n    iStack52 = 0x401bb6;\n    uStack36 = uVar1;\n    uVar1 = fcn.0040de20();\n    iStack52 = uStack48;\n    uStack56 = 0x401bbe;\n    uStack48 = uVar1;\n    iStack52 = fcn.0040de20();\n    uStack56 = 0x401bc5;\n    fcn.00409638();\n    uStack56 = 0x401bca;\n    fcn.00405182();\n    iStack52 = iStack52 + extraout_EDX_00;\n    uStack56 = 0x401bd2;\n    sub.KERNEL32.DLL_LoadLibraryExW();\n    uStack56 = 0x401bd7;\n    uStack64 = fcn.004051a0();\n    uStack56 = 0;\n    uStack60 = 0x402109;\n    uStack68 = 0x401bef;\n    iStack52 = uStack64;\n    sub.KERNEL32.DLL_EnumResourceTypesW();\n    uStack68 = uStack64;\n    iStack72 = 0x401bf7;\n    sub.KERNEL32.DLL_FreeLibrary();\n    iStack72 = *0x4170a8;\n    iStack76 = 0x401c02;\n    iVar2 = fcn.0040a3e3();\n    if (0 < iVar2) {\n        iStack76 = *0x4170a8;\n        iStack80 = 0x401c17;\n        fcn.0040a3ed();\n        while( true ) {\n            s = &stack0xffffffb0;\n            iStack80 = *0x4170a8;\n            iVar2 = fcn.0040a402();\n            if (iVar2 == 0) break;\n            uVar1 = *(*0x4170ac + 8);\n            fcn.0040de20();\n            fcn.0040dfc0(uVar1);\n            uStack96 = 0x401c47;\n            fcn.0040de60(&stack0xffffffb0, uVar1);\n            uStack96 = uVar1;\n            uVar1 = uStack96;\n            iVar2 = fcn.00405d80();\n            if (iVar2 < 0xb) {\n                fcn.0040de20();\n                fcn.0040dfc0(s);\n                fcn.0040de60(&stack0xffffffa8, s);\n            }\n            else {\n                fcn.0040de20();\n                fcn.0040dfc0(uVar1);\n                uVar1 = uStack96;\n                fcn.0040dfc0(uStack96);\n                fcn.0040de60(&stack0xffffffa0, uVar1);\n            }\n        }\n        fcn.0040a436();\n        uVar1 = extraout_EDX_01;\n        fcn.0040de20();\n        uStack96 = 0x401cb9;\n        fcn.0040de20();\n        uStack96 = uVar1;\n        uStack96 = fcn.0040de20();\n        fcn.0040de20();\n        uVar1 = 1;\n        fcn.0040de20();\n        fcn.0040de20();\n        iVar2 = iStack76;\n        fcn.00405db0();\n        fcn.00405182();\n        iVar2 = iVar2 + extraout_EDX_02;\n        fcn.0040d0a0();\n        fcn.00405182();\n        iVar2 = iVar2 + extraout_EDX_03;\n        fcn.00405e50();\n        fcn.0040de60(&stack0xffffffa0, iVar2);\n        fcn.0040de20();\n        fcn.0040dfc0(uVar1);\n        uStack136 = 0x401d29;\n        fcn.0040de60(&stack0xffffff98, uVar1);\n        uStack136 = extraout_EDX_04;\n        uStack136 = fcn.0040de20();\n        fcn.0040de20();\n        uVar3 = fcn.0040de20();\n        fcn.0040de20();\n        fcn.0040d0a0();\n        fcn.00405182();\n        iVar2 = iVar2 + extraout_EDX_05;\n        uVar5 = iVar2 == 0;\n        fcn.00405e50();\n        fcn.0040de60(&stack0xffffff78, iVar2);\n        uVar1 = extraout_EDX_06;\n        uVar4 = fcn.0040de20(extraout_EDX_06);\n        uVar1 = fcn.0040de20(uVar1, uVar4);\n        fcn.00405ec0(uVar3, 10, uVar1);\n        fcn.0040de60(&stack0xffffff64, uVar3);\n        fcn.00405120();\n        if (!uVar5) {\n            uVar6 = fcn.004097fe();\n            uVar1 = uVar6 >> 0x20;\n            uVar5 = uVar6 == 0;\n            if (!uVar5) {\n                uVar3 = fcn.0040de20(uVar1);\n                uVar1 = fcn.0040de20(uVar1, uVar3);\n                uVar3 = 0;\n                fcn.00409812(0, uVar1);\n                fcn.0040e020();\n                fcn.00405160(uVar3);\n                fcn.00405120();\n                if (!uVar5) {\n                    *0x417050 = 1;\n                    uVar1 = extraout_EDX_07;\n                    uVar3 = fcn.0040de20(extraout_EDX_07);\n                    in_stack_ffffff38 = fcn.0040de20(uVar1, uVar3);\n                    in_stack_ffffff34 = 1;\n                    fcn.00409812(1, in_stack_ffffff38);\n                    in_stack_ffffff30 = 0x417020;\n                    fcn.0040de60(0x417020, in_stack_ffffff34);\n                }\n            }\n            fcn.0040def0(in_stack_ffffff34);\n            fcn.0040def0(in_stack_ffffff38);\n            fcn.0040def0(in_stack_ffffff30);\n            fcn.0040def0(in_stack_ffffff38);\n            fcn.0040def0(in_stack_ffffff30);\n            return;\n        }\n    }\n    fcn.00405379(0x4011aa, 0);\n    fcn.004098f0();\n    fcn.0040a655();\n    fcn.0040aa30();\n    fcn.0040d264();\n    fcn.00409ad0();\n    return;\n}\n",
        "token_count": 1981
    },
    "00405980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nulong fcn.00405980(uint16_t *param_1)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    bool bVar10;\n    bool bVar11;\n    \n    uVar4 = 0;\n    iVar9 = 0;\n    if (param_1 == NULL) goto code_r0x00405ab5;\n    for (; (*param_1 == 0x20 || (*param_1 == 9)); param_1 = param_1 + 1) {\n    }\n    if (*param_1 == 0x2d) {\n        bVar11 = true;\ncode_r0x004059ba:\n        param_1 = param_1 + 1;\n    }\n    else {\n        bVar11 = false;\n        if (*param_1 == 0x2b) goto code_r0x004059ba;\n    }\n    uVar8 = *param_1;\n    if (uVar8 == 0x24) {\n        while( true ) {\n            uVar8 = param_1[1];\n            param_1 = param_1 + 1;\n            if ((((uVar8 < 0x30) || (0x39 < uVar8)) && ((uVar8 < 0x41 || (0x46 < uVar8)))) &&\n               ((uVar8 < 0x61 || (0x66 < uVar8)))) break;\n            if ((uVar8 < 0x30) || (0x39 < uVar8)) {\n                uVar6 = iVar9 << 4 | uVar4 >> 0x1c;\n                uVar5 = uVar4 * 0x10;\n                if (uVar8 < 0x61) {\n                    uVar4 = (uVar5 + uVar8) - 0x37;\n                    iVar9 = (uVar6 + CARRY4(uVar5, uVar8)) - (uVar5 + uVar8 < 0x37);\n                }\n                else {\n                    uVar4 = (uVar5 + uVar8) - 0x57;\n                    iVar9 = (uVar6 + CARRY4(uVar5, uVar8)) - (uVar5 + uVar8 < 0x57);\n                }\n            }\n            else {\n                bVar10 = uVar4 < 3;\n                uVar5 = uVar4 - 3;\n                uVar6 = uVar5 * 0x10;\n                uVar4 = uVar6 + uVar8;\n                iVar9 = ((iVar9 - bVar10) * 0x10 | uVar5 >> 0x1c) + CARRY4(uVar6, uVar8);\n            }\n        }\n    }\n    else if (uVar8 == 0x25) {\n        uVar2 = param_1[1];\n        while ((uVar8 = uVar2,  0x2f < uVar8 && (uVar2 < 0x32))) {\n            bVar10 = uVar4 < 0x18;\n            uVar6 = uVar4 - 0x18;\n            uVar5 = uVar6 * 2;\n            uVar4 = uVar5 + uVar8;\n            iVar9 = ((iVar9 - bVar10) * 2 | uVar6 >> 0x1f) + CARRY4(uVar5, uVar8);\n            uVar2 = param_1[2];\n            param_1 = param_1 + 1;\n        }\n    }\n    else {\n        while ((0x2f < uVar8 && (uVar8 < 0x3a))) {\n            uVar5 = uVar4 >> 0x1e;\n            bVar10 = CARRY4(uVar4, uVar4 * 4);\n            uVar3 = uVar4 * 5;\n            puVar1 = param_1 + 1;\n            uVar6 = uVar4 * 10;\n            uVar7 = uVar6 + uVar8;\n            uVar4 = uVar7 - 0x30;\n            iVar9 = (((iVar9 + (iVar9 << 2 | uVar5) + bVar10) * 2 | uVar3 >> 0x1f) + CARRY4(uVar6, uVar8)) -\n                    (uVar7 < 0x30);\n            param_1 = param_1 + 1;\n            uVar8 = *puVar1;\n        }\n    }\n    if (bVar11) {\n        bVar11 = uVar4 != 0;\n        uVar4 = -uVar4;\n        iVar9 = -(iVar9 + bVar11);\n    }\ncode_r0x00405ab5:\n    return CONCAT44(iVar9, uVar4);\n}\n",
        "token_count": 1109
    },
    "00409f58": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * fcn.00409f58(uint *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (param_2 == 0) {\n        param_2 = 0x412024;\n    }\n    if ((*(param_1 + 0xb) & 1) == 0) {\n        uVar1 = fcn.0040a24f(param_2);\n        uVar1 = uVar1 % param_1[9];\n        for (puVar3 = *(param_1[1] + uVar1 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n            iVar2 = sub.MSVCRT.dll_wcscmp(puVar3[1], param_2);\n            if (iVar2 == 0) goto code_r0x00409fa3;\n            param_1[2] = puVar3;\n        }\n    }\n    else {\n        uVar1 = fcn.0040a26a();\n        uVar1 = uVar1 % param_1[9];\n        for (puVar3 = *(param_1[1] + uVar1 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n            iVar2 = sub.MSVCRT.dll__wcsicmp(puVar3[1], param_2);\n            if (iVar2 == 0) {\ncode_r0x00409fa3:\n                param_1[5] = uVar1;\n                *param_1 = puVar3;\n                return puVar3 + 2;\n            }\n            param_1[2] = puVar3;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 388
    },
    "00410000": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint fcn.00410000(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if ((param_1 == 0) || (iVar2 = *(param_1 + 0x1c),  iVar2 == 0)) {\n        return 0xfffffffe;\n    }\n    *(iVar2 + 0x28) = 0;\n    *(iVar2 + 0x2c) = 0;\n    *(iVar2 + 0x30) = 0;\n    if ((param_1 != 0) && (puVar3 = *(param_1 + 0x1c),  puVar3 != NULL)) {\n        puVar3[7] = 0;\n        *(param_1 + 0x14) = 0;\n        *(param_1 + 8) = 0;\n        *(param_1 + 0x18) = 0;\n        if (puVar3[2] != 0) {\n            *(param_1 + 0x30) = puVar3[2] & 1;\n        }\n        puVar1 = puVar3 + 0x14c;\n        *puVar3 = 0;\n        puVar3[0x1b] = puVar1;\n        puVar3[0x14] = puVar1;\n        puVar3[0x13] = puVar1;\n        puVar3[1] = 0;\n        puVar3[3] = 0;\n        puVar3[5] = 0x8000;\n        puVar3[8] = 0;\n        puVar3[0xe] = 0;\n        puVar3[0xf] = 0;\n        puVar3[0x6f0] = 1;\n        puVar3[0x6f1] = 0xffffffff;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 435
    },
    "00406100": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00406100(uint32_t param_1, int32_t param_2, uint param_3)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    uint unaff_retaddr;\n    \n    if (param_2 + (0x7fffffff < param_1) != 0) {\n        piVar3 = fcn.0040e200(0x40, param_3);\n        fcn.004116ac(piVar3, param_1, unaff_retaddr);\n        piVar1 = piVar3 + 1;\n        do {\n            iVar2 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar2 != 0);\n        fcn.0040e350(0x40 - (piVar3 - piVar1 >> 1));\n        return;\n    }\n    fcn.00406180(param_1, param_3);\n    return;\n}\n",
        "token_count": 219
    },
    "00409bb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00409bb0(uint param_1, uint32_t param_2, uint param_3)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t unaff_EBX;\n    \n    if (param_2 == 0xffffffff) {\n        fcn.00409b60(param_1, param_3);\n        return;\n    }\n    param_2 = (param_2 < 0) - 1 & param_2;\n    piVar2 = fcn.0040e200(param_2, param_3);\n    if ((unaff_EBX != 0) && (param_2 != 0)) {\n        unaff_EBX = unaff_EBX - piVar2;\n        do {\n            iVar1 = *(unaff_EBX + piVar2);\n            if (iVar1 == 0) break;\n            *piVar2 = iVar1;\n            piVar2 = piVar2 + 1;\n            param_2 = param_2 - 1;\n        } while (param_2 != 0);\n    }\n    fcn.0040e350(param_2);\n    *piVar2 = 0;\n    return;\n}\n",
        "token_count": 262
    },
    "0040ac70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * fcn.0040ac70(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint unaff_retaddr;\n    uint uVar5;\n    \n    piVar4 = NULL;\n    piVar1 = fcn.0040d438(*0x41771c, param_1);\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    uVar5 = 0;\n    piVar2 = (*_sym.imp.KERNEL32.DLL_CreateFileW)(unaff_retaddr, 0xc0000000, 0, 0, 2, 0x80, 0);\n    if (((piVar2 != 0xffffffff) ||\n        (piVar2 = (*_sym.imp.KERNEL32.DLL_CreateFileW)(uVar5, 0x40000000, 0, 0, 5, 0, 0),  piVar2 != 0xffffffff)) &&\n       (piVar2 != NULL)) {\n        if (*0x41612c == 0) {\n            piVar1[1] = 0;\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 0, *0x41612c);\n            piVar1[1] = iVar3;\n        }\n        *piVar1 = piVar2;\n        iVar3 = *0x41612c;\n        piVar1[3] = 0;\n        piVar1[7] = 0;\n        piVar1[2] = iVar3;\n        piVar1[5] = 1;\n        piVar1[6] = 2;\n        piVar4 = piVar1;\n        if (param_1 != 0xffffffff) {\n            piVar4 = piVar2;\n        }\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    if (param_1 != 0xffffffff) {\n        piVar1 = param_1;\n    }\n    fcn.0040d3aa(*0x41771c, piVar1);\n    return piVar4;\n}\n",
        "token_count": 498
    },
    "0040ad60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * fcn.0040ad60(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint unaff_retaddr;\n    \n    piVar4 = NULL;\n    piVar1 = fcn.0040d438(*0x41771c, param_1);\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    piVar2 = (*_sym.imp.KERNEL32.DLL_CreateFileW)(unaff_retaddr, 0x80000000, 0, 0, 3, 0x80, 0);\n    if ((piVar2 != 0xffffffff) && (piVar2 != NULL)) {\n        if (*0x41612c == 0) {\n            piVar1[1] = 0;\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 0, *0x41612c);\n            piVar1[1] = iVar3;\n        }\n        *piVar1 = piVar2;\n        iVar3 = *0x41612c;\n        piVar1[3] = 0;\n        piVar1[2] = iVar3;\n        piVar1[5] = 1;\n        piVar1[6] = 2;\n        piVar1[7] = 1;\n        piVar4 = piVar1;\n        if (param_1 != 0xffffffff) {\n            piVar4 = piVar2;\n        }\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    if (param_1 != 0xffffffff) {\n        piVar1 = param_1;\n    }\n    fcn.0040d3aa(*0x41771c, piVar1);\n    return piVar4;\n}\n",
        "token_count": 428
    },
    "0040d110": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * fcn.0040d110(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = NULL;\n    if (param_1 == -1) {\n        if (*0x417100 != 0) {\n            return 0x417108;\n        }\n    }\n    else if (0 < *0x417100) {\n        piVar1 = 0x417108;\n        iVar2 = *0x417100;\n        do {\n            if (*piVar1 == param_1) {\n                piVar3 = piVar1;\n            }\n            piVar1 = piVar1 + 5;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return piVar3;\n}\n",
        "token_count": 189
    },
    "0040d160": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0040d160(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    piVar5 = NULL;\n    piVar1 = *0x417100;\n    if (param_1 != -1) {\n        if (*0x417100 < 1) goto code_r0x0040d199;\n        piVar2 = 0x417108;\n        piVar4 = *0x417100;\n        do {\n            if (*piVar2 == param_1) {\n                piVar5 = piVar2;\n            }\n            piVar2 = piVar2 + 5;\n            piVar4 = piVar4 + -1;\n            piVar1 = piVar5;\n        } while (piVar4 != NULL);\n    }\n    if (piVar1 != NULL) {\n        return 0;\n    }\ncode_r0x0040d199:\n    iVar3 = *0x417100 + 1;\n    *(*0x417100 * 0x14 + 0x417108) = param_1;\n    *0x417100 = iVar3;\n    return iVar3 * 0x14 + 0x4170f4;\n}\n",
        "token_count": 297
    },
    "0040df60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040df60(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x416170 == -1) {\n        fcn.0040ddd0();\n        uVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170);\n        fcn.00411d62(fcn.0040df20, uVar1);\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170);\n        if (iVar2 == 0) {\n            fcn.0040e600();\n            uVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170);\n            fcn.00411d62(fcn.0040df20, uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00411744": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00411744(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    iVar2 = 0;\n    if (param_1 != NULL) {\ncode_r0x00411787:\n        do {\n            do {\n                piVar3 = param_1;\n                iVar1 = *piVar3;\n                if (iVar1 == -1) {\n                    return iVar2;\n                }\n                param_1 = piVar3 + 1;\n            } while (iVar1 < -7);\n            if (iVar1 < -3) {\n                iVar2 = 1;\n            }\n            else {\n                if (iVar1 == -3) {\n                    iVar2 = piVar3[3];\n                    param_1 = piVar3 + 4;\n                }\n                else {\n                    if (iVar1 != -2) goto code_r0x00411787;\n                    iVar2 = piVar3[4];\n                    param_1 = piVar3 + 5;\n                }\n                iVar2 = fcn.00411744(iVar2);\n            }\n        } while (iVar2 == 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 266
    },
    "00411b6f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00411b6f(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *var_4h;\n    \n    iVar8 = *param_2;\n    while (iVar8 != -1) {\n        piVar7 = param_2 + 1;\n        if (iVar8 == -7) {\n            iVar8 = *piVar7;\n            iVar1 = param_2[2];\n            iVar2 = param_2[3];\n            iVar3 = param_2[4];\n            iVar4 = param_2[5];\n            piVar7 = param_2 + 6;\n            if (0 < iVar1) {\n                piVar6 = param_1 + 4 + iVar8;\n                iVar9 = iVar1;\n                do {\n                    iVar5 = *piVar7;\n                    piVar7 = piVar7 + 1;\n                    *piVar6 = iVar5;\n                    piVar6 = piVar6 + 1;\n                    iVar9 = iVar9 + -1;\n                } while (iVar9 != 0);\n            }\n            (**0x417650)(iVar1, iVar2, iVar3, iVar4, iVar8 + param_1);\n        }\n        else if (iVar8 == -6) {\n            (**0x41765c)(param_2[2], param_2[3], param_2[4], *piVar7 + param_1, param_2[5]);\n            piVar7 = param_2 + 6;\n        }\n        else if (iVar8 == -5) {\n            (**0x417658)(param_2[2], *piVar7 + param_1, param_2[3], param_2[4]);\n            piVar7 = param_2 + 5;\n        }\n        else if (iVar8 == -4) {\n            (**0x417654)(param_2[2], param_2[3], param_2[4], param_2[5], *piVar7 + param_1);\n            piVar7 = param_2 + 6;\n        }\n        else if (iVar8 == -3) {\n            fcn.00411b6f(*piVar7 + param_1, param_2[3]);\n            piVar7 = param_2 + 4;\n        }\n        else if (iVar8 == -2) {\n            iVar8 = *piVar7;\n            iVar1 = param_2[4];\n            piVar7 = param_2 + 5;\n            if (0 < iVar8) {\n                do {\n                    fcn.00411b6f();\n                    iVar8 = iVar8 + -1;\n                    piVar7 = var_4h;\n                    param_1 = iVar1;\n                } while (iVar8 != 0);\n            }\n        }\n        param_2 = piVar7;\n        iVar8 = *piVar7;\n    }\n    return;\n}\n",
        "token_count": 701
    },
    "00406180": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00406180(uint param_1, uint param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iStack4;\n    \n    piVar3 = fcn.0040e200(0x20, param_2);\n    if (iStack4 == 0) {\n        *piVar3 = 0x30;\n        piVar4 = piVar3 + 1;\n    }\n    else {\n        piVar4 = piVar3;\n        if (iStack4 < 0) {\n            *piVar3 = 0x2d;\n            piVar4 = piVar3 + 1;\n            if (iStack4 == -0x80000000) {\n                piVar4 = 0x41202c;\n                do {\n                    iVar1 = *piVar4;\n                    piVar4 = piVar4 + 1;\n                    *(piVar3 + -0x209016 + piVar4) = iVar1;\n                } while (iVar1 != 0);\n                piVar4 = piVar3 + 0xb;\n                goto code_r0x00406242;\n            }\n            iStack4 = -iStack4;\n        }\n        iVar5 = 0;\n        if (iStack4 != 0) {\n            do {\n                iVar6 = iVar5 + 1;\n                iVar2 = iStack4 / 10;\n                (&stack0xffffffe9)[iVar5] = iStack4 + iVar2 * -10 + '0';\n                iStack4 = iVar2;\n                iVar5 = iVar6;\n            } while (iVar2 != 0);\n            for (; 0 < iVar6; iVar6 = iVar6 + -1) {\n                *piVar4 = (&stack0xffffffe8)[iVar6];\n                piVar4 = piVar4 + 1;\n            }\n        }\n    }\ncode_r0x00406242:\n    fcn.0040e350(0x20 - (piVar4 - piVar3 >> 1));\n    *piVar4 = 0;\n    return;\n}\n",
        "token_count": 487
    },
    "00406260": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00406260(uint32_t param_1, uint param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    param_1 = (param_1 < 0) - 1 & param_1;\n    puVar1 = fcn.0040e200(param_1, param_2);\n    if (param_1 != 0) {\n        puVar3 = puVar1;\n        for (uVar2 = param_1 >> 1; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar3 = 0x200020;\n            puVar3 = puVar3 + 1;\n        }\n        for (uVar2 = (param_1 & 1) != 0; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar3 = 0x20;\n            puVar3 = puVar3 + 2;\n        }\n        *(puVar1 + param_1 * 2) = 0;\n        return;\n    }\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 262
    },
    "0040b1d6": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.0040b1d6(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uchar auStack8 [8];\n    \n    uVar1 = 0;\n    do {\n        auStack8[uVar1] = *(param_2 + 0x14 + (uVar1 < 4) * 4) >> (('\\x03' - (uVar1 & 3)) * '\\b' & 0x1f);\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 8);\n    fcn.0040c5d6(param_2, 0x4126e8, 1);\n    while ((*(param_2 + 0x14) & 0x1f8) != 0x1c0) {\n        fcn.0040c5d6(param_2, 0x4126ec, 1);\n    }\n    fcn.0040c5d6(param_2, auStack8, 8);\n    uVar1 = 0;\n    do {\n        *(uVar1 + param_1) = *(param_2 + (uVar1 & 0xfffffffc)) >> (('\\x03' - (uVar1 & 3)) * '\\b' & 0x1f);\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x14);\n    sub.MSVCRT.dll_memset(param_2 + 0x1c, 0, 0x40);\n    sub.MSVCRT.dll_memset(param_2, 0, 0x14);\n    sub.MSVCRT.dll_memset(param_2 + 0x14, 0, 8);\n    sub.MSVCRT.dll_memset(auStack8, 0, 8);\n    sub.MSVCRT.dll_memset(param_2 + 0x60, 0, 0x40);\n    return;\n}\n",
        "token_count": 446
    },
    "0040c76f": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.0040c76f(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    \n    if (param_3 != 0) {\n        iVar3 = (param_3 - 1U >> 2) + 1;\n        puVar1 = param_1 + 1;\n        puVar2 = param_2 + 2;\n        do {\n            puVar1[-1] = puVar2[-2];\n            *puVar1 = puVar2[-1];\n            puVar1[1] = *puVar2;\n            puVar1[2] = puVar2[1];\n            iVar3 = iVar3 + -1;\n            puVar1 = puVar1 + 4;\n            puVar2 = puVar2 + 4;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0040c7aa": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c7aa(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    \n    fcn.0040c76f(&var_8h, arg_ch + 0x10, 8);\n    uVar2 = *(arg_ch + 0x10) >> 3 & 0x3f;\n    iVar1 = 0x38;\n    if (0x37 < uVar2) {\n        iVar1 = 0x78;\n    }\n    fcn.0040cf52(arg_ch, 0x416130, iVar1 - uVar2);\n    fcn.0040cf52(arg_ch, &var_8h, 8);\n    fcn.0040c76f(arg_8h, arg_ch, 0x10);\n    sub.MSVCRT.dll_memset(arg_ch, 0, 0x58);\n    return;\n}\n",
        "token_count": 220
    },
    "0040cf52": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.0040cf52(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *(param_1 + 0x10) >> 3 & 0x3f;\n    uVar2 = *(param_1 + 0x10) + param_3 * 8;\n    *(param_1 + 0x10) = uVar2;\n    if (uVar2 < param_3 << 3) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + (param_3 >> 0x1d);\n    uVar2 = -uVar1 + 0x40;\n    if (param_3 < uVar2) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.0040cfed(param_1 + 0x18 + uVar1, param_2, uVar2);\n        fcn.0040c838(param_1, param_1 + 0x18);\n        for (uVar1 = -uVar1 + 0x7f; uVar1 < param_3; uVar1 = uVar1 + 0x40) {\n            fcn.0040c838(param_1, param_2 + -0x3f + uVar1);\n            uVar2 = uVar2 + 0x40;\n        }\n        uVar1 = 0;\n    }\n    fcn.0040cfed(param_1 + 0x18 + uVar1, param_2 + uVar2, param_3 - uVar2);\n    return;\n}\n",
        "token_count": 412
    },
    "0040c838": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid fcn.0040c838(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t aiStack64 [4];\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    iVar1 = *param_1;\n    uVar4 = param_1[1];\n    uVar8 = param_1[2];\n    uVar6 = param_1[3];\n    piVar5 = aiStack64;\n    iVar7 = 0x10;\n    puVar2 = param_2 + 2;\n    do {\n        *piVar5 = CONCAT31(CONCAT21(*puVar2, *(puVar2 + -1)), *(puVar2 + -1));\n        piVar5 = piVar5 + 1;\n        iVar7 = iVar7 + -1;\n        puVar2 = puVar2 + 2;\n    } while (iVar7 != 0);\n    uVar3 = iVar1 + -0x28955b88 + (~uVar4 & uVar6 | uVar8 & uVar4) + aiStack64[0];\n    uVar3 = (uVar3 * 0x80 | uVar3 >> 0x19) + uVar4;\n    uVar6 = uVar6 + 0xe8c7b756 + (~uVar3 & uVar8 | uVar4 & uVar3) + aiStack64[1];\n    uVar6 = (uVar6 * 0x1000 | uVar6 >> 0x14) + uVar3;\n    uVar8 = uVar8 + 0x242070db + (~uVar6 & uVar4 | uVar6 & uVar3) + aiStack64[2];\n    uVar9 = (uVar8 >> 0xf | uVar8 * 0x20000) + uVar6;\n    uVar4 = uVar4 + 0xc1bdceee + (~uVar9 & uVar3 | uVar6 & uVar9) + aiStack64[3];\n    uVar8 = (uVar4 >> 10 | uVar4 * 0x400000) + uVar9;\n    uVar3 = uVar3 + (~uVar8 & uVar6 | uVar9 & uVar8) + 0xf57c0faf + iStack48;\n    uVar4 = (uVar3 * 0x80 | uVar3 >> 0x19) + uVar8;\n    uVar6 = uVar6 + (~uVar4 & uVar9 | uVar8 & uVar4) + 0x4787c62a + iStack44;\n    uVar6 = (uVar6 * 0x1000 | uVar6 >> 0x14) + uVar4;\n    uVar9 = uVar9 + (~uVar6 & uVar8 | uVar6 & uVar4) + 0xa8304613 + iStack40;\n    uVar9 = (uVar9 >> 0xf | uVar9 * 0x20000) + uVar6;\n    uVar8 = uVar8 + (~uVar9 & uVar4 | uVar6 & uVar9) + 0xfd469501 + iStack36;\n    uVar8 = (uVar8 >> 10 | uVar8 * 0x400000) + uVar9;\n    uVar4 = uVar4 + (~uVar8 & uVar6 | uVar9 & uVar8) + 0x698098d8 + iStack32;\n    uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar8;\n    uVar6 = uVar6 + (~uVar4 & uVar9 | uVar8 & uVar4) + 0x8b44f7af + iStack28;\n    uVar3 = (uVar6 * 0x1000 | uVar6 >> 0x14) + uVar4;\n    uVar6 = (uVar9 - 0xa44f) + (~uVar3 & uVar8 | uVar3 & uVar4) + iStack24;\n    uVar6 = (uVar6 >> 0xf | uVar6 * 0x20000) + uVar3;\n    uVar8 = uVar8 + (~uVar6 & uVar4 | uVar3 & uVar6) + 0x895cd7be + iStack20;\n    uVar8 = (uVar8 >> 10 | uVar8 * 0x400000) + uVar6;\n    uVar4 = uVar4 + 0x6b901122 + (~uVar8 & uVar3 | uVar6 & uVar8) + iStack16;\n    uVar9 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar8;\n    uVar4 = uVar3 + 0xfd987193 + (~uVar9 & uVar6 | uVar8 & uVar9) + iStack12;\n    uVar4 = (uVar4 * 0x1000 | uVar4 >> 0x14) + uVar9;\n    uVar6 = uVar6 + 0xa679438e + (~uVar4 & uVar8 | uVar4 & uVar9) + iStack8;\n    uVar6 = (uVar6 >> 0xf | uVar6 * 0x20000) + uVar4;\n    uVar8 = uVar8 + 0x49b40821 + (~uVar6 & uVar9 | uVar4 & uVar6) + iStack4;\n    uVar10 = (uVar8 >> 10 | uVar8 * 0x400000) + uVar6;\n    uVar8 = (~uVar4 & uVar6 | uVar4 & uVar10) + aiStack64[1] + uVar9 + 0xf61e2562;\n    uVar3 = (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar10;\n    uVar4 = (~uVar6 & uVar10 | uVar6 & uVar3) + 0xc040b340 + iStack40 + uVar4;\n    uVar4 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar3;\n    uVar6 = uVar6 + (~uVar10 & uVar3 | uVar4 & uVar10) + 0x265e5a51 + iStack20;\n    uVar8 = (uVar6 * 0x4000 | uVar6 >> 0x12) + uVar4;\n    uVar10 = uVar10 + (~uVar3 & uVar4 | uVar8 & uVar3) + 0xe9b6c7aa + aiStack64[0];\n    uVar9 = (uVar10 >> 0xc | uVar10 * 0x100000) + uVar8;\n    uVar3 = uVar3 + (~uVar4 & uVar8 | uVar4 & uVar9) + 0xd62f105d + iStack44;\n    uVar6 = (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar9;\n    uVar4 = uVar4 + (~uVar8 & uVar9 | uVar8 & uVar6) + 0x2441453 + iStack24;\n    uVar4 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar6;\n    uVar8 = uVar8 + (~uVar9 & uVar6 | uVar4 & uVar9) + 0xd8a1e681 + iStack4;\n    uVar8 = (uVar8 * 0x4000 | uVar8 >> 0x12) + uVar4;\n    uVar9 = uVar9 + (~uVar6 & uVar4 | uVar8 & uVar6) + 0xe7d3fbc8 + iStack48;\n    uVar9 = (uVar9 >> 0xc | uVar9 * 0x100000) + uVar8;\n    uVar6 = uVar6 + (~uVar4 & uVar8 | uVar4 & uVar9) + 0x21e1cde6 + iStack28;\n    uVar3 = (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar9;\n    uVar4 = (~uVar8 & uVar9 | uVar8 & uVar3) + 0xc33707d6 + iStack8 + uVar4;\n    uVar6 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar3;\n    uVar8 = uVar8 + (~uVar9 & uVar3 | uVar6 & uVar9) + 0xf4d50d87 + aiStack64[3];\n    uVar8 = (uVar8 * 0x4000 | uVar8 >> 0x12) + uVar6;\n    uVar9 = uVar9 + (~uVar3 & uVar6 | uVar8 & uVar3) + 0x455a14ed + iStack32;\n    uVar9 = (uVar9 >> 0xc | uVar9 * 0x100000) + uVar8;\n    uVar4 = uVar3 + 0xa9e3e905 + (~uVar6 & uVar8 | uVar6 & uVar9) + iStack12;\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar9;\n    uVar6 = (~uVar8 & uVar9 | uVar8 & uVar4) + 0xfcefa3f8 + aiStack64[2] + uVar6;\n    uVar6 = (uVar6 * 0x200 | uVar6 >> 0x17) + uVar4;\n    uVar8 = uVar8 + 0x676f02d9 + (~uVar9 & uVar4 | uVar6 & uVar9) + iStack36;\n    uVar3 = (uVar8 * 0x4000 | uVar8 >> 0x12) + uVar6;\n    uVar8 = uVar9 + 0x8d2a4c8a + (~uVar4 & uVar6 | uVar3 & uVar4) + iStack16;\n    uVar8 = (uVar8 >> 0xc | uVar8 * 0x100000) + uVar3;\n    uVar4 = uVar4 + ((uVar6 ^ uVar3 ^ uVar8) - 0x5c6be) + iStack44;\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar8;\n    uVar6 = uVar6 + (uVar3 ^ uVar8 ^ uVar4) + 0x8771f681 + iStack32;\n    uVar6 = (uVar6 * 0x800 | uVar6 >> 0x15) + uVar4;\n    uVar3 = uVar3 + (uVar6 ^ uVar8 ^ uVar4) + 0x6d9d6122 + iStack20;\n    uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar6;\n    uVar8 = uVar8 + (uVar6 ^ uVar3 ^ uVar4) + 0xfde5380c + iStack8;\n    uVar8 = (uVar8 >> 9 | uVar8 * 0x800000) + uVar3;\n    uVar4 = uVar4 + (uVar6 ^ uVar3 ^ uVar8) + 0xa4beea44 + aiStack64[1];\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar8;\n    uVar6 = uVar6 + (uVar3 ^ uVar8 ^ uVar4) + 0x4bdecfa9 + iStack48;\n    uVar6 = (uVar6 * 0x800 | uVar6 >> 0x15) + uVar4;\n    uVar3 = uVar3 + (uVar6 ^ uVar8 ^ uVar4) + 0xf6bb4b60 + iStack36;\n    uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar6;\n    uVar8 = uVar8 + (uVar6 ^ uVar3 ^ uVar4) + 0xbebfbc70 + iStack24;\n    uVar8 = (uVar8 >> 9 | uVar8 * 0x800000) + uVar3;\n    uVar4 = uVar4 + 0x289b7ec6 + (uVar6 ^ uVar3 ^ uVar8) + iStack12;\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar8;\n    uVar6 = uVar6 + (uVar3 ^ uVar8 ^ uVar4) + 0xeaa127fa + aiStack64[0];\n    uVar6 = (uVar6 * 0x800 | uVar6 >> 0x15) + uVar4;\n    uVar3 = uVar3 + (uVar6 ^ uVar8 ^ uVar4) + 0xd4ef3085 + aiStack64[3];\n    uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar6;\n    uVar8 = (uVar6 ^ uVar3 ^ uVar4) + 0x4881d05 + iStack40 + uVar8;\n    uVar8 = (uVar8 >> 9 | uVar8 * 0x800000) + uVar3;\n    uVar4 = (uVar6 ^ uVar3 ^ uVar8) + 0xd9d4d039 + iStack28 + uVar4;\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar8;\n    uVar6 = uVar6 + (uVar3 ^ uVar8 ^ uVar4) + 0xe6db99e5 + iStack16;\n    uVar6 = (uVar6 * 0x800 | uVar6 >> 0x15) + uVar4;\n    uVar3 = uVar3 + (uVar6 ^ uVar8 ^ uVar4) + 0x1fa27cf8 + iStack4;\n    uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar6;\n    uVar8 = uVar8 + (uVar6 ^ uVar3 ^ uVar4) + 0xc4ac5665 + aiStack64[2];\n    uVar8 = (uVar8 >> 9 | uVar8 * 0x800000) + uVar3;\n    uVar4 = uVar4 + ((~uVar6 | uVar8) ^ uVar3) + 0xf4292244 + aiStack64[0];\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar8;\n    uVar6 = uVar6 + ((~uVar3 | uVar4) ^ uVar8) + 0x432aff97 + iStack36;\n    uVar6 = (uVar6 * 0x400 | uVar6 >> 0x16) + uVar4;\n    uVar3 = uVar3 + ((~uVar8 | uVar6) ^ uVar4) + 0xab9423a7 + iStack8;\n    uVar3 = (uVar3 * 0x8000 | uVar3 >> 0x11) + uVar6;\n    uVar8 = uVar8 + ((~uVar4 | uVar3) ^ uVar6) + 0xfc93a039 + iStack44;\n    uVar8 = (uVar8 >> 0xb | uVar8 * 0x200000) + uVar3;\n    uVar4 = uVar4 + ((~uVar6 | uVar8) ^ uVar3) + 0x655b59c3 + iStack16;\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar8;\n    uVar6 = uVar6 + ((~uVar3 | uVar4) ^ uVar8) + 0x8f0ccc92 + aiStack64[3];\n    uVar6 = (uVar6 * 0x400 | uVar6 >> 0x16) + uVar4;\n    uVar3 = uVar3 + (((~uVar8 | uVar6) ^ uVar4) - 0x100b83) + iStack24;\n    uVar3 = (uVar3 * 0x8000 | uVar3 >> 0x11) + uVar6;\n    uVar8 = uVar8 + ((~uVar4 | uVar3) ^ uVar6) + 0x85845dd1 + aiStack64[1];\n    uVar8 = (uVar8 >> 0xb | uVar8 * 0x200000) + uVar3;\n    uVar4 = uVar4 + ((~uVar6 | uVar8) ^ uVar3) + 0x6fa87e4f + iStack32;\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar8;\n    uVar6 = uVar6 + 0xfe2ce6e0 + ((~uVar3 | uVar4) ^ uVar8) + iStack4;\n    uVar6 = (uVar6 * 0x400 | uVar6 >> 0x16) + uVar4;\n    uVar3 = uVar3 + ((~uVar8 | uVar6) ^ uVar4) + 0xa3014314 + iStack40;\n    uVar10 = (uVar3 * 0x8000 | uVar3 >> 0x11) + uVar6;\n    uVar8 = uVar8 + 0x4e0811a1 + ((~uVar4 | uVar10) ^ uVar6) + iStack12;\n    uVar3 = (uVar8 >> 0xb | uVar8 * 0x200000) + uVar10;\n    uVar4 = uVar4 + 0xf7537e82 + ((~uVar6 | uVar3) ^ uVar10) + iStack48;\n    uVar9 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar3;\n    uVar4 = uVar6 + 0xbd3af235 + ((~uVar10 | uVar9) ^ uVar3) + iStack20;\n    uVar6 = (uVar4 * 0x400 | uVar4 >> 0x16) + uVar9;\n    uVar4 = uVar10 + 0x2ad7d2bb + ((~uVar3 | uVar6) ^ uVar9) + aiStack64[2];\n    uVar8 = (uVar4 * 0x8000 | uVar4 >> 0x11) + uVar6;\n    *param_1 = iVar1 + uVar9;\n    param_1[2] = param_1[2] + uVar8;\n    uVar4 = uVar3 + 0xeb86d391 + ((~uVar9 | uVar8) ^ uVar6) + iStack28;\n    param_1[3] = param_1[3] + uVar6;\n    param_1[1] = (uVar4 >> 0xb | uVar4 * 0x200000) + param_1[1] + uVar8;\n    return;\n}\n",
        "token_count": 4756
    },
    "0040e350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e350(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170);\n    *(iVar1 + 8) = *(iVar1 + 8) + arg_8h * -2;\n    return;\n}\n",
        "token_count": 86
    },
    "0040e380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e380(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = arg_8h;\n    var_8h = 0;\n    puVar3 = arg_8h;\n    while ((arg_8h = puVar3,  *arg_8h != 0 && (var_8h < arg_ch))) {\n        uVar1 = *arg_8h;\n        if ((uVar1 & 0x80) == 0) {\n            var_8h = var_8h + 1;\n            puVar3 = arg_8h + 1;\n        }\n        else if ((uVar1 & 0xe0) == 0xc0) {\n            puVar3 = arg_8h + 1;\n            if ((arg_8h[1] & 0xc0) == 0x80) {\n                var_8h = var_8h + 1;\n                puVar3 = arg_8h + 2;\n            }\n        }\n        else if (((uVar1 & 0xf0) == 0xe0) && (arg_8h[1] != 0)) {\n            if (((arg_8h[1] & 0xc0) == 0x80) && ((arg_8h[2] & 0xc0) == 0x80)) {\n                var_8h = var_8h + 1;\n                puVar3 = arg_8h + 3;\n            }\n            else if ((arg_8h[1] & 0xc0) == 0x80) {\n                puVar3 = arg_8h + 2;\n            }\n            else {\n                puVar3 = arg_8h + 1;\n            }\n        }\n        else if (((uVar1 & 0xf8) == 0xf0) && ((arg_8h[1] != 0 && (arg_8h[2] != 0)))) {\n            if ((((arg_8h[1] & 0xc0) == 0x80) && ((arg_8h[2] & 0xc0) == 0x80)) && ((arg_8h[3] & 0xc0) == 0x80)) {\n                var_8h = var_8h + 1;\n                puVar3 = arg_8h + 4;\n            }\n            else if (((arg_8h[1] & 0xc0) == 0x80) && ((arg_8h[2] & 0xc0) == 0x80)) {\n                puVar3 = arg_8h + 3;\n            }\n            else if ((arg_8h[1] & 0xc0) == 0x80) {\n                puVar3 = arg_8h + 2;\n            }\n            else {\n                puVar3 = arg_8h + 1;\n            }\n        }\n        else {\n            puVar3 = arg_8h + 1;\n        }\n    }\n    return arg_8h - puVar2;\n}\n",
        "token_count": 737
    },
    "0040195b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040195b(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    uint extraout_EDX_02;\n    int32_t arg_ch;\n    uint *arg_8h;\n    uchar *puVar5;\n    uchar *arg_8h_00;\n    int32_t iVar6;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    iVar6 = 0;\n    fcn.0040df60();\n    *0x41702c = 0x416107;\n    puVar5 = NULL;\n    do {\n        if (3 < puVar5) break;\n        iVar6 = **0x41702c;\n        *0x41702c = *0x41702c + 1;\n        uVar1 = fcn.0040de20();\n        fcn.0040de20();\n        arg_ch = -iVar6;\n        fcn.00405d60();\n        fcn.0040de60(&stack0xffffffe4, arg_ch);\n        fcn.0040de20();\n        fcn.0040dfc0(uVar1);\n        fcn.0040dfc0(arg_ch);\n        arg_8h_00 = &stack0xffffffd8;\n        fcn.0040de60(arg_8h_00, arg_ch);\n        puVar5 = arg_8h_00 + 1;\n    } while (!SCARRY4(arg_8h_00, 1));\n    uStack16 = fcn.00409b40();\n    fcn.0040de20();\n    uVar1 = fcn.0040de20();\n    fcn.0040a6f6();\n    arg_8h = &uStack16;\n    fcn.0040de60(arg_8h, uVar1);\n    sub.KERNEL32.DLL_GetTempFileNameW(iVar6, 0x416020, 0, puVar5);\n    uVar1 = extraout_EDX;\n    uVar2 = fcn.0040de20(extraout_EDX);\n    uVar1 = fcn.0040de20(uVar1, uVar2);\n    fcn.00409b60(arg_8h, uVar1);\n    fcn.0040de60(0x417070, arg_8h);\n    fcn.0040a787(*0x417070);\n    uVar2 = *0x417070;\n    fcn.0040a665(*0x417070);\n    sub.KERNEL32.DLL_GetTempFileNameW(*0x417070, 0x416020, 0, uVar1);\n    uVar1 = extraout_EDX_00;\n    uVar3 = fcn.0040de20(extraout_EDX_00);\n    uVar4 = fcn.0040de20(uVar1, uVar3);\n    fcn.00409b60();\n    fcn.0040de60(0x417024, uVar2);\n    fcn.0040a787(*0x417024);\n    fcn.0040a665(*0x417024);\n    sub.KERNEL32.DLL_GetTempFileNameW(*0x417024, 0x416020, 0);\n    sub.SHLWAPI.DLL_PathAddBackslashW(*0x417024);\n    uVar1 = extraout_EDX_01;\n    uVar2 = fcn.0040de20(extraout_EDX_01);\n    uVar1 = fcn.0040de20(uVar1, uVar2);\n    fcn.00409b60(uVar4, uVar1);\n    fcn.0040de60(0x417038, uVar4);\n    fcn.0040a787(*0x417038);\n    uVar3 = *0x417038;\n    sub.SHLWAPI.DLL_PathRenameExtensionW(*0x417038, uVar1);\n    uVar2 = *0x417024;\n    sub.KERNEL32.DLL_GetTempFileNameW(*0x417024, 0x416020, 0, uVar4);\n    uVar1 = extraout_EDX_02;\n    uVar4 = fcn.0040de20(extraout_EDX_02);\n    uVar1 = fcn.0040de20(uVar1, uVar4);\n    fcn.00409b60(uVar3, uVar1);\n    uVar1 = 0x417068;\n    fcn.0040de60(0x417068, uVar3);\n    fcn.00409b20(uVar2);\n    fcn.0040def0(uVar2);\n    fcn.0040def0(uVar1);\n    fcn.0040def0(uVar1);\n    return;\n}\n",
        "token_count": 1114
    },
    "00401e55": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401e55(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint extraout_EDX;\n    uchar *puVar2;\n    uchar *arg_8h;\n    uchar *puStack32;\n    uint uStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    iStack16 = 0x401e5f;\n    fcn.0040df60();\n    iStack16 = param_2;\n    uStack20 = 0x401e68;\n    fcn.004051a0();\n    uStack20 = extraout_EDX;\n    uStack20 = fcn.0040de20();\n    uVar1 = fcn.0040de20();\n    fcn.00409638();\n    puStack32 = 0x401e87;\n    puVar2 = &stack0xffffffec;\n    fcn.0040de60(&stack0xffffffec, uVar1);\n    puStack32 = puVar2;\n    sub.SHLWAPI.DLL_PathQuoteSpacesW();\n    if (iStack16 < 1) {\n        puVar2 = puStack32;\n        fcn.0040de20();\n        fcn.0040dfc0(puVar2);\n        fcn.0040de60(&stack0xffffffe0, puVar2);\n    }\n    else {\n        uVar1 = fcn.0040de20();\n        fcn.004024f1();\n        arg_8h = &stack0xffffffe4;\n        fcn.0040de60(arg_8h, uVar1);\n        puVar2 = arg_8h;\n        uVar1 = fcn.0040de20();\n        fcn.0040dfc0(arg_8h);\n        fcn.0040dfc0(0x416026);\n        fcn.0040dfc0(uVar1);\n        fcn.0040de60(&stack0xffffffd0, uVar1);\n    }\n    uVar1 = fcn.0040de20();\n    fcn.0040dfc0(puVar2);\n    fcn.00405170(puVar2);\n    fcn.0040def0(uVar1);\n    fcn.0040def0(uVar1);\n    return;\n}\n",
        "token_count": 531
    },
    "0040213e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040213e(void)\n\n{\n    *0x417060 = fcn.00405100();\n    *0x417028 = fcn.00405100();\n    *0x417044 = fcn.00405100();\n    *0x41707c = fcn.00405100();\n    *0x417074 = fcn.00405100();\n    return 0;\n}\n",
        "token_count": 89
    },
    "004026b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004026b8(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    uint uVar2;\n    \n    uVar2 = 0;\n    fcn.0040df60(0, 0);\n    uVar1 = sub.KERNEL32.DLL_LoadResource(param_1, param_2);\n    uVar1 = sub.KERNEL32.DLL_SizeofResource(uVar2, unaff_retaddr, uVar1);\n    *0x417018 = uVar1;\n    uVar2 = fcn.00409b40();\n    fcn.00409c20(uVar1, uVar2, *0x417018);\n    sub.KERNEL32.DLL_FreeResource(uVar1);\n    return uVar1;\n}\n",
        "token_count": 176
    },
    "00402bfa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00402bfa(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint arg_8h;\n    uint extraout_EDX;\n    uint uVar2;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0;\n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0x402c04;\n    fcn.0040df60();\n    uStack16 = param_2;\n    uStack20 = 0x402c0d;\n    fcn.004051a0();\n    uStack20 = 0x402c19;\n    fcn.00405060();\n    uStack20 = 10000;\n    uStack24 = 0x402c23;\n    uStack28 = fcn.00409b40();\n    uStack24 = 10000;\n    uStack32 = uStack20;\n    uStack36 = 0x402c39;\n    uStack16 = uStack28;\n    sub.KERNEL32.DLL_GetShortPathNameW();\n    uStack36 = extraout_EDX;\n    uVar1 = fcn.0040de20();\n    uVar2 = uStack36;\n    uStack36 = uVar1;\n    uVar1 = fcn.0040de20(uVar2);\n    uVar2 = uStack28;\n    fcn.00409bb0(uStack28, 0xffffffff, uVar1);\n    fcn.0040de60(&stack0xffffffdc, uVar2);\n    uVar1 = uVar2;\n    fcn.00409b20();\n    arg_8h = fcn.0040de20();\n    fcn.0040dfc0(uVar1);\n    fcn.00405170(uVar1);\n    fcn.0040def0(arg_8h);\n    fcn.0040def0(uVar2);\n    return;\n}\n",
        "token_count": 472
    },
    "00402f41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00402f41(uint param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_EDX;\n    int32_t extraout_EDX_00;\n    uchar *puVar4;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0x402f4d;\n    fcn.0040df60();\n    uStack24 = param_1;\n    fcn.004051a0();\n    uStack24 = *0x416084;\n    uStack20 = *0x416088;\n    *0x41702c = 0x41608c;\n    fcn.00405110(*0x416084);\n    fcn.00405110(uStack24);\n    uVar2 = extraout_EDX;\n    uVar1 = fcn.0040de20(extraout_EDX);\n    uVar1 = fcn.0040de20(uVar2, uVar1);\n    uVar1 = fcn.0040de20(uVar2, uVar1);\n    uVar2 = fcn.0040de20(uVar2, uVar1);\n    puVar4 = &stack0xffffffe8;\n    fcn.0040d0c0(puVar4, 8, 1, uVar2);\n    fcn.00405182();\n    puVar4 = puVar4 + extraout_EDX_00;\n    fcn.00405e50();\n    iVar3 = fcn.00405170();\n    return puVar4 + iVar3;\n}\n",
        "token_count": 402
    },
    "00403001": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004011a5: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004011aa)\n\nvoid fcn.00403001(void)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    uint extraout_EDX_03;\n    uint extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    uint extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    uint extraout_EDX_08;\n    uint extraout_EDX_09;\n    uint extraout_EDX_10;\n    int32_t extraout_EDX_11;\n    bool bVar4;\n    ulong uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uStack172;\n    uint uStack144;\n    uint uStack120;\n    uint uStack116;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uchar *puVar9;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0;\n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0x40300e;\n    fcn.0040df60();\n    uStack32 = 0x403014;\n    uStack28 = extraout_EDX;\n    uVar2 = fcn.0040de20();\n    uStack32 = uStack28;\n    uStack36 = 0x40301c;\n    uStack28 = uVar2;\n    uVar2 = fcn.0040de20();\n    uStack36 = uStack32;\n    uStack40 = 0x403024;\n    uStack32 = uVar2;\n    uVar2 = fcn.0040de20();\n    uStack40 = uStack36;\n    uStack44 = 0x40302c;\n    uStack36 = uVar2;\n    uStack40 = fcn.0040de20();\n    uStack44 = 1;\n    iVar6 = *0x417040;\n    fcn.0040d0a0();\n    fcn.00405182();\n    iVar6 = iVar6 + extraout_EDX_00;\n    fcn.00405e50();\n    puVar9 = &stack0xffffffd4;\n    uStack56 = 0x403055;\n    fcn.0040de60(puVar9, iVar6);\n    uStack60 = 0x40305b;\n    uStack56 = extraout_EDX_01;\n    uVar2 = fcn.0040de20();\n    uStack60 = uStack56;\n    uStack64 = 0x403063;\n    uStack56 = uVar2;\n    uVar2 = fcn.0040de20();\n    uStack64 = uStack60;\n    uStack68 = 0x40306b;\n    uStack60 = uVar2;\n    uVar2 = fcn.0040de20();\n    uStack68 = uStack64;\n    uStack72 = 0x403073;\n    uStack64 = uVar2;\n    uStack68 = fcn.0040de20();\n    uStack72 = 1;\n    fcn.0040d0a0();\n    fcn.00405182();\n    puVar9 = puVar9 + extraout_EDX_02;\n    fcn.00405e50();\n    puStack84 = 0x40309a;\n    puVar1 = &stack0xffffffb8;\n    fcn.0040de60(&stack0xffffffb8, puVar9);\n    puStack84 = puVar1;\n    uStack88 = 0x4030a2;\n    uVar5 = fcn.00402e9d();\n    uStack92 = 0x4030ac;\n    uVar2 = fcn.0040de20();\n    uStack88 = uVar5 >> 0x20;\n    uStack92 = uVar5;\n    uStack96 = 0x4030b7;\n    uStack88 = uVar2;\n    fcn.004021a4();\n    uStack96 = 0x4030bc;\n    fcn.004051a0();\n    uStack96 = extraout_EDX_03;\n    uStack96 = fcn.0040de20();\n    fcn.0040de20();\n    uVar2 = *0x417020;\n    fcn.004092f5();\n    uStack116 = 0x4030e7;\n    fcn.0040de60(&stack0xffffffa0, uVar2);\n    bVar4 = true;\n    uStack116 = 0x4030f2;\n    fcn.00405120();\n    if (bVar4) {\n        uStack120 = 0x4030fe;\n        uStack116 = extraout_EDX_04;\n        uVar2 = fcn.0040de20();\n        uStack120 = uStack116;\n        uStack116 = uVar2;\n        uStack120 = fcn.0040de20();\n        fcn.0040de20();\n        fcn.0040de20();\n        iVar6 = *0x417040;\n        fcn.0040d0a0();\n        fcn.00405182();\n        iVar6 = iVar6 + extraout_EDX_05;\n        fcn.00405e50();\n        uStack144 = 0x40313f;\n        fcn.0040de60(&stack0xffffff88, iVar6);\n        uStack144 = extraout_EDX_06;\n        uStack144 = fcn.0040de20();\n        fcn.0040de20();\n        uVar2 = fcn.0040de20();\n        fcn.0040de20();\n        iVar6 = *0x417040;\n        fcn.0040d0a0();\n        fcn.00405182();\n        iVar6 = iVar6 + extraout_EDX_07;\n        fcn.00405e50();\n        uStack172 = 0x403186;\n        fcn.0040de60(&stack0xffffff70, iVar6);\n        uStack172 = extraout_EDX_08;\n        uStack172 = fcn.0040de20();\n        fcn.00403cd7(uVar2, 0);\n        uVar8 = 0x417054;\n        fcn.0040de60(0x417054, uVar2);\n        uVar3 = fcn.0040de20(extraout_EDX_09);\n        uVar7 = 0;\n        uVar2 = uStack172;\n        fcn.00403cd7(uStack172, 0, uVar3);\n        fcn.0040de60(&stack0xffffff54, uVar2);\n        sub.SHLWAPI.DLL_PathAddBackslashW(uVar7);\n        uVar3 = fcn.0040de20(extraout_EDX_10);\n        uVar3 = fcn.0040de20(uVar2, uVar8, uVar3);\n        fcn.0040dfc0(uVar2);\n        iVar6 = *0x417054;\n        fcn.0040dfc0(*0x417054);\n        fcn.00405182();\n        fcn.0040240c(iVar6 + extraout_EDX_11);\n        fcn.004051a0();\n        uVar7 = fcn.0040de20();\n        fcn.0040dfc0(uVar3);\n        uVar8 = 0x417048;\n        fcn.0040de60(0x417048, uVar3);\n        uVar2 = *0x417048;\n        sub.SHLWAPI.DLL_PathRemoveBackslashW(*0x417048, uVar8, uVar3, uVar7);\n        fcn.00402ca9(uVar2);\n    }\n    fcn.00405379(0x4011aa, 0);\n    fcn.004098f0();\n    fcn.0040a655();\n    fcn.0040aa30();\n    fcn.0040d264();\n    fcn.00409ad0();\n    return;\n}\n",
        "token_count": 1977
    },
    "0040358d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040358d(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint extraout_EDX;\n    bool bVar4;\n    int32_t unaff_retaddr;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0x403597;\n    fcn.0040df60();\n    uStack16 = param_3;\n    uStack20 = 0x4035a0;\n    fcn.004051a0();\n    uStack20 = 0x4035ac;\n    fcn.00405060();\n    uStack24 = extraout_EDX;\n    if (unaff_retaddr == 0) {\n        uVar1 = fcn.0040de20();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040de20(uVar2);\n        fcn.0040a795();\n        fcn.0040de60(&stack0xfffffff0, uVar2);\n    }\n    else if (unaff_retaddr == 1) {\n        uStack24 = *0x417070;\n        uVar1 = fcn.0040de20();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        fcn.0040dfc0(uVar2);\n        fcn.0040de60(&stack0xfffffff0, uVar2);\n    }\n    else if (unaff_retaddr == 2) {\n        uVar1 = fcn.0040de20();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040de20(uVar2);\n        uVar1 = 4;\n        fcn.0040a7da();\n        fcn.0040de60(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 3) {\n        uVar1 = fcn.0040de20();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040de20(uVar2);\n        uVar1 = 0;\n        fcn.0040a7da();\n        fcn.0040de60(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 4) {\n        uVar1 = fcn.0040de20();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040de20(uVar2);\n        uVar1 = 3;\n        fcn.0040a7da();\n        fcn.0040de60(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 5) {\n        uVar1 = fcn.0040de20();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040de20(uVar2);\n        uVar1 = 8;\n        fcn.0040a7da();\n        fcn.0040de60(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 6) {\n        uVar1 = fcn.0040de20();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040de20(uVar2);\n        uVar1 = 7;\n        fcn.0040a7da();\n        fcn.0040de60(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 7) {\n        uVar1 = fcn.0040de20();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040de20(uVar2);\n        uVar1 = 6;\n        fcn.0040a7da();\n        fcn.0040de60(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 8) {\n        uVar1 = fcn.0040de20();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040de20(uVar2);\n        uVar1 = 2;\n        fcn.0040a7da();\n        fcn.0040de60(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 9) {\n        uVar1 = fcn.0040de20();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040de20(uVar2);\n        uVar1 = 1;\n        fcn.0040a7da();\n        fcn.0040de60(&stack0xffffffec, uVar1);\n    }\n    else if (unaff_retaddr == 10) {\n        uVar1 = fcn.0040de20();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040de20(uVar2);\n        uVar1 = uStack16;\n        fcn.004092f5(uStack16, 0x416020);\n        fcn.0040de60(&stack0xffffffe8, uVar1);\n        bVar4 = true;\n        fcn.00405120();\n        if (bVar4) {\n            fcn.00405532(1);\n        }\n        else {\n            fcn.00401fa9(0);\n        }\n    }\n    else {\n        uVar1 = fcn.0040de20();\n        uVar2 = uStack24;\n        uStack24 = uVar1;\n        uVar2 = fcn.0040de20(uVar2);\n        fcn.0040a795();\n        fcn.0040de60(&stack0xfffffff0, uVar2);\n    }\n    uVar1 = uStack24;\n    uVar3 = fcn.0040de20();\n    fcn.0040dfc0(uVar1);\n    fcn.00405170(uVar1, uVar3);\n    fcn.0040def0(uVar2);\n    fcn.0040def0(uVar2);\n    return;\n}\n",
        "token_count": 1472
    },
    "0040460e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0040460e(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch;\n    uint *arg_8h;\n    uchar *puVar3;\n    uchar *arg_8h_00;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    fcn.0040df60();\n    *0x41702c = 0x4160b4;\n    puVar3 = NULL;\n    do {\n        if (0x1b < puVar3) break;\n        iVar1 = **0x41702c;\n        *0x41702c = *0x41702c + 1;\n        uVar2 = fcn.0040de20();\n        fcn.0040de20();\n        iVar1 = -iVar1;\n        fcn.00405d60();\n        fcn.0040de60(&stack0xffffffe8, iVar1);\n        fcn.0040de20();\n        fcn.0040dfc0(uVar2);\n        fcn.0040dfc0(iVar1);\n        arg_8h_00 = &stack0xffffffdc;\n        fcn.0040de60(arg_8h_00, iVar1);\n        puVar3 = arg_8h_00 + 1;\n    } while (!SCARRY4(arg_8h_00, 1));\n    fcn.0040de20();\n    uVar2 = uStack12;\n    arg_ch = fcn.00405100();\n    fcn.0040358d();\n    arg_8h = &uStack16;\n    fcn.0040de60(arg_8h, arg_ch);\n    fcn.0040a8fa(puVar3);\n    fcn.0040def0(uVar2);\n    fcn.0040def0(arg_8h);\n    fcn.0040def0(arg_ch);\n    return;\n}\n",
        "token_count": 451
    },
    "00405120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405120(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    \n    if (param_2 == NULL) {\n        param_2 = 0x416068;\n    }\n    if (param_1 == NULL) {\n        param_1 = 0x416068;\n    }\n    do {\n        iVar1 = *param_2;\n        param_2 = param_2 + 1;\n        iVar2 = *param_1;\n        param_1 = param_1 + 1;\n        if (iVar1 != iVar2) {\n            return 0;\n        }\n    } while (iVar1 != 0);\n    return 1;\n}\n",
        "token_count": 166
    },
    "00405436": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405436(int32_t param_1)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = fcn.004053ea(param_1, 0);\n    (*_sym.imp.KERNEL32.DLL_TerminateThread)(uVar1);\n    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(0x4176a0);\n    puVar2 = *0x4170bc;\n    do {\n        if (puVar2 == NULL) {\ncode_r0x00405485:\n            (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(0x4176a0);\n            return;\n        }\n        if (puVar2[3] == param_1) {\n            (*_sym.imp.KERNEL32.DLL_CloseHandle)(puVar2[2]);\n            fcn.0040dad2(0x4170bc, puVar2 + 2);\n            goto code_r0x00405485;\n        }\n        puVar2 = *puVar2;\n    } while( true );\n}\n",
        "token_count": 231
    },
    "00405553": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nbool fcn.00405553(uint *param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    \n    sub.MSVCRT.dll_memset(param_1, 0, 0x11c);\n    *param_1 = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.DLL_GetModuleHandleW)(L\"ntdll.dll\");\n    if ((iVar1 != 0) && (pcVar2 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, \"RtlGetVersion\"),  pcVar2 != NULL)) {\n        iVar1 = (*pcVar2)(param_1);\n        return iVar1 == 0;\n    }\n    return false;\n}\n",
        "token_count": 160
    },
    "00405d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00405d80(int16_t *param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    \n    if (param_1 != NULL) {\n        piVar1 = param_1 + 1;\n        do {\n            iVar2 = *param_1;\n            param_1 = param_1 + 1;\n        } while (iVar2 != 0);\n        return param_1 - piVar1 >> 1;\n    }\n    return 0;\n}\n",
        "token_count": 114
    },
    "00405db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405db0(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int16_t *arg_8h;\n    int32_t unaff_EDI;\n    int32_t arg_8h_00;\n    \n    arg_8h = param_1;\n    if (param_1 == NULL) {\n        arg_8h = 0x412024;\n    }\n    piVar4 = arg_8h;\n    do {\n        iVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n    } while (iVar1 != 0);\n    arg_8h_00 = piVar4 - (arg_8h + 1) >> 1;\n    iVar2 = fcn.0040e180(arg_8h);\n    iVar3 = fcn.0040e200(arg_8h_00, param_1);\n    if (arg_8h_00 != 0) {\n        if (iVar2 != 0) {\n            arg_8h = fcn.0040e2d0(iVar2);\n        }\n        piVar4 = arg_8h + arg_8h_00 + -1;\n        if (arg_8h <= piVar4) {\n            iVar5 = iVar3 - arg_8h;\n            iVar2 = (iVar3 + (arg_8h_00 + -1) * 2) - piVar4;\n            do {\n                iVar1 = *arg_8h;\n                *(arg_8h + iVar5) = *piVar4;\n                arg_8h = arg_8h + 1;\n                *(iVar2 + piVar4) = iVar1;\n                piVar4 = piVar4 + -1;\n                arg_8h_00 = unaff_EDI;\n            } while (arg_8h <= piVar4);\n        }\n    }\n    *(iVar3 + arg_8h_00 * 2) = 0;\n    return;\n}\n",
        "token_count": 466
    },
    "00405f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405f30(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t arg_8h;\n    ushort *arg_8h_00;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    int32_t unaff_EBP;\n    int16_t *piVar5;\n    int16_t iVar6;\n    \n    iVar6 = 0x20;\n    if (param_2 != NULL) {\n        iVar6 = *param_2;\n    }\n    arg_8h = fcn.00405d80(param_1);\n    if (param_1 == NULL) {\n        piVar3 = NULL;\n        piVar5 = param_1;\n    }\n    else {\n        iVar2 = *param_1;\n        piVar5 = param_1;\n        while (iVar2 == iVar6) {\n            piVar3 = piVar5 + 1;\n            piVar5 = piVar5 + 1;\n            iVar2 = *piVar3;\n        }\n        piVar5 = piVar5 - param_1 >> 1;\n        piVar3 = param_1;\n        if (piVar5 < arg_8h) {\n            piVar4 = param_1 + arg_8h + -1;\n            iVar2 = *piVar4;\n            while (iVar2 == iVar6) {\n                piVar1 = piVar4 + -1;\n                piVar4 = piVar4 + -1;\n                iVar2 = *piVar1;\n            }\n            arg_8h = arg_8h - ((param_1 + (arg_8h * 2 - piVar4) + -2 >> 1) + piVar5);\n        }\n        else {\n            arg_8h = arg_8h - piVar5;\n        }\n    }\n    fcn.0040e180(piVar3);\n    arg_8h_00 = fcn.0040e200(arg_8h, param_1);\n    if (unaff_EBP != 0) {\n        piVar3 = fcn.0040e2d0(unaff_EBP);\n    }\n    if (piVar3 == NULL) {\n        *arg_8h_00 = 0;\n        return;\n    }\n    fcn.0040e300(arg_8h_00, piVar3 + piVar5, arg_8h);\n    return;\n}\n",
        "token_count": 548
    },
    "004060b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004060b0(int16_t *param_1, int32_t param_2, uint param_3)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (param_1 != NULL) {\n        piVar2 = param_1;\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n        fcn.00406020(param_1, param_2, ((piVar2 - (param_1 + 1) >> 1) - param_2) + 1, param_3);\n        return;\n    }\n    fcn.0040e2a0(param_3);\n    return;\n}\n",
        "token_count": 168
    },
    "00408d8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408d8e(void)\n\n{\n    uint picce;\n    uint var_4h;\n    \n    sub.MSVCRT.dll_memset(&picce, 0, 8);\n    picce = 8;\n    var_4h = 0xb48;\n    (*_sym.imp.COMCTL32.DLL_InitCommonControlsEx)(&picce);\n    (*_sym.imp.OLE32.DLL_CoInitialize)(0);\n    return;\n}\n",
        "token_count": 102
    },
    "00409699": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00409699(int16_t *param_1, int16_t *param_2, int32_t param_3)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = *param_1;\n    for (; (iVar1 != 0 && (param_3 != 0)); param_3 = param_3 + -1) {\n        if (iVar1 == 0x22) {\n            iVar2 = iVar2 + 1;\n        }\n        else {\n            *param_2 = iVar1;\n            param_2 = param_2 + 1;\n        }\n        param_1 = param_1 + 1;\n        iVar1 = *param_1;\n    }\n    *param_2 = 0;\n    return iVar2;\n}\n",
        "token_count": 183
    },
    "004096da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004096da(void)\n\n{\n    bool bVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int16_t iVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *unaff_retaddr;\n    \n    ppiVar2 = fcn.0040d288(*0x4176c4);\n    piVar7 = 0xffffffff;\n    piVar3 = (*_sym.imp.KERNEL32.DLL_GetCommandLineW)();\n    iVar6 = *piVar3;\n    piVar4 = unaff_retaddr;\n    do {\n        if (iVar6 == 0) {\n            if (unaff_retaddr != NULL) {\ncode_r0x004097f3:\n                piVar7 = piVar3;\n                *unaff_retaddr = 0;\n            }\n            return piVar7;\n        }\n        piVar8 = NULL;\n        while (iVar6 == 0x20) {\n            piVar3 = piVar3 + 2;\n            iVar6 = *piVar3;\n        }\n        iVar6 = *piVar3;\n        if (iVar6 == 0x22) {\n            piVar3 = piVar3 + 2;\n            iVar6 = *piVar3;\n            piVar4 = piVar3;\n            piVar5 = piVar3;\n            piVar8 = piVar3;\n            if (iVar6 != 0) {\n                do {\n                    if (iVar6 == 0x22) break;\n                    piVar4 = piVar4 + 2;\n                    iVar6 = *piVar4;\n                } while (iVar6 != 0);\ncode_r0x00409762:\n                piVar5 = piVar4;\n                piVar8 = piVar3;\n                if (*piVar4 != 0) {\n                    piVar5 = piVar4 + 2;\n                }\n            }\ncode_r0x004097b4:\n            bVar1 = true;\n            piVar3 = piVar5;\n        }\n        else {\n            piVar5 = piVar3;\n            if (iVar6 != 0) {\n                do {\n                    piVar4 = piVar5;\n                    if (iVar6 == 0x20) break;\n                    piVar4 = piVar5 + 2;\n                    if (*piVar4 == 0x22) {\n                        piVar4 = piVar5 + 1;\n                        iVar6 = *piVar4;\n                        piVar5 = piVar4;\n                        piVar8 = piVar3;\n                        if (iVar6 == 0) goto code_r0x004097b4;\n                        do {\n                            if (iVar6 == 0x22) break;\n                            piVar4 = piVar4 + 2;\n                            iVar6 = *piVar4;\n                        } while (iVar6 != 0);\n                    }\n                    iVar6 = *piVar4;\n                    piVar5 = piVar4;\n                } while (iVar6 != 0);\n                goto code_r0x00409762;\n            }\n            bVar1 = false;\n        }\n        if ((*ppiVar2 == piVar7) && (unaff_retaddr != NULL)) {\n            if (piVar8 != NULL) {\n                *unaff_retaddr = piVar4 - piVar8 >> 1;\n                *ppiVar2 = *ppiVar2 + 1;\n                return piVar8;\n            }\n            goto code_r0x004097f3;\n        }\n        if (bVar1) {\n            piVar7 = piVar7 + 1;\n        }\n        iVar6 = *piVar3;\n    } while( true );\n}\n",
        "token_count": 819
    },
    "00409812": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409812(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    var_4h = 0;\n    piVar1 = fcn.0040d288(*0x4176c4);\n    if (-1 < arg_8h) {\n        *piVar1 = arg_8h;\n    }\n    uVar2 = fcn.004096da(&var_4h);\n    uVar3 = fcn.0040e200(var_4h, arg_ch);\n    uVar2 = fcn.00409699(uVar2, uVar3, var_4h);\n    fcn.0040e350(uVar2);\n    return;\n}\n",
        "token_count": 182
    },
    "00409b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409b60(int16_t *param_1, uint param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h;\n    int16_t *piVar3;\n    \n    arg_8h = 0;\n    if (param_1 != NULL) {\n        piVar3 = param_1;\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n        arg_8h = piVar3 - (param_1 + 1) >> 1;\n    }\n    iVar2 = fcn.0040e200(arg_8h, param_2);\n    if (arg_8h != 0) {\n        sub.MSVCRT.dll_memcpy(iVar2, param_1, arg_8h * 2);\n    }\n    *(iVar2 + arg_8h * 2) = 0;\n    return;\n}\n",
        "token_count": 221
    },
    "00409c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t fcn.00409c20(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    sub.MSVCRT.dll_memcpy(param_2, param_1, param_3);\n    return param_2 + param_3;\n}\n",
        "token_count": 62
    },
    "00409d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00409d80(int32_t param_1, uint param_2, uint param_3, uint *param_4)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = *param_4;\n    fcn.00409e6f();\n    pcVar1 = _sym.imp.KERNEL32.DLL_HeapAlloc;\n    puVar2 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008);\n    if (puVar2 != NULL) {\n        if (param_1 < 1) {\n            param_1 = 1;\n        }\n        iVar3 = (*pcVar1)(*0x417008, 8, param_1 << 2);\n        puVar2[1] = iVar3;\n        if (iVar3 == 0) {\n            (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, puVar2);\n            puVar2 = NULL;\n        }\n        else {\n            puVar2[8] = 0x3c;\n            puVar2[9] = param_1;\n            *puVar2 = 0;\n            puVar2[7] = 0;\n            puVar2[4] = uVar4;\n            puVar2[10] = 0;\n            puVar2[0xb] = 0;\n            puVar2[0xc] = param_4;\n            puVar2[0xd] = 0;\n            iVar3 = fcn.00411744(uVar4);\n            if (iVar3 != 0) {\n                puVar2[0xb] = puVar2[0xb] | 2;\n            }\n            uVar4 = fcn.0040d7b9(8, 0x10, 0x10000, 4);\n            puVar2[0xe] = uVar4;\n            iVar3 = (*pcVar1)(*0x417008, 8, 8);\n            puVar2[3] = iVar3;\n            *(iVar3 + 4) = 0x412024;\n            *param_4 = puVar2;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 499
    },
    "0040a0ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a0ba(int32_t *arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t arg_8h_00;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint var_8h;\n    \n    arg_ch = arg_8h[4];\n    piVar2 = arg_8h;\n    fcn.0040a13c(arg_8h);\n    while( true ) {\n        piVar1 = arg_8h;\n        arg_8h_00 = fcn.0040a208(arg_8h);\n        if (arg_8h_00 == 0) break;\n        if ((*(arg_8h + 0xb) & 4) == 0) {\n            (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, *(arg_8h_00 + -4));\n        }\n        if (arg_ch != 0) {\n            fcn.00411a6a(arg_8h_00, arg_ch);\n        }\n        var_8h = *(arg_8h_00 + -8);\n        piVar2 = arg_8h[0xe];\n        *arg_8h = &var_8h;\n        fcn.0040d6eb();\n    }\n    sub.MSVCRT.dll_memset(arg_8h[1], 0, arg_8h[9] << 2, piVar1, piVar2);\n    fcn.0040a13c(arg_8h);\n    arg_8h[10] = 0;\n    return;\n}\n",
        "token_count": 363
    },
    "0040a24f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040a24f(uint16_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    for (; *param_1 != 0; param_1 = param_1 + 1) {\n        iVar1 = iVar1 * 0x1003f + *param_1;\n    }\n    return iVar1;\n}\n",
        "token_count": 86
    },
    "0040a26a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040a26a(ushort *param_1)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    uVar1 = *param_1;\n    while( true ) {\n        iVar2 = sub.MSVCRT.dll_tolower(uVar1);\n        if (iVar2 == 0) break;\n        param_1 = param_1 + 1;\n        uVar1 = *param_1;\n        iVar3 = iVar3 * 0x1003f + iVar2;\n    }\n    return iVar3;\n}\n",
        "token_count": 138
    },
    "0040a296": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0040a296(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(param_1[1] + (param_2 % param_1[9]) * 4);\n    while( true ) {\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        if (puVar1[1] == param_2) break;\n        param_1[2] = puVar1;\n        puVar1 = *puVar1;\n    }\n    *param_1 = puVar1;\n    param_1[5] = param_2 % param_1[9];\n    return puVar1 + 2;\n}\n",
        "token_count": 160
    },
    "0040a2e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0040a2e8(uint param_1)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint *unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_retaddr;\n    \n    pcVar1 = _sym.imp.KERNEL32.DLL_HeapAlloc;\n    puVar3 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 0, 0x34);\n    if (unaff_EBX == NULL) {\n        unaff_EBX = (*pcVar1)(*0x417008, 0, 8);\n        *(puVar3 + 0x32) = 1;\n    }\n    else {\n        *(puVar3 + 0x32) = 0;\n    }\n    puVar3[3] = unaff_EBX + 1;\n    puVar3[2] = 0;\n    *puVar3 = 0;\n    puVar3[1] = 0;\n    puVar3[10] = unaff_ESI + 8;\n    puVar3[6] = unaff_retaddr;\n    puVar3[4] = 0;\n    *(puVar3 + 0xc) = 1;\n    puVar3[0xb] = param_1;\n    uVar2 = fcn.00411744(unaff_retaddr);\n    puVar3[8] = 0;\n    *(puVar3 + 0x31) = uVar2;\n    puVar3[9] = unaff_EBX;\n    *unaff_EBX = puVar3;\n    uVar4 = fcn.0040d7b9(unaff_ESI + 8, 0x10, 0x10000, 4);\n    puVar3[7] = uVar4;\n    return puVar3;\n}\n",
        "token_count": 423
    },
    "0040a402": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040a402(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == NULL) {\n        iVar1 = *param_1;\n        param_1[5] = 0;\n        param_1[2] = iVar1;\n        if (iVar1 == 0) goto code_r0x0040a42b;\n    }\n    else {\n        iVar1 = *param_1[2];\n        if (iVar1 == 0) goto code_r0x0040a42b;\n        param_1[5] = param_1[5] + 1;\n        param_1[2] = iVar1;\n    }\n    iVar1 = iVar1 + 8;\ncode_r0x0040a42b:\n    *param_1[3] = param_1[2];\n    return iVar1;\n}\n",
        "token_count": 200
    },
    "0040a494": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** fcn.0040a494(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    \n    ppiVar2 = fcn.0040d51f(param_1[7]);\n    if (ppiVar2 != NULL) {\n        sub.MSVCRT.dll_memset(ppiVar2, 0, param_1[10]);\n        if (*(param_1 + 0x31) != '\\0') {\n            fcn.00411b6f(ppiVar2 + 2, param_1[6]);\n        }\n        param_1[4] = param_1[4] + 1;\n        if (param_1[2] == NULL) {\n            if (*param_1 != NULL) {\n                (*param_1)[1] = ppiVar2;\n            }\n            param_1[2] = ppiVar2;\n            *ppiVar2 = *param_1;\n            ppiVar2[1] = NULL;\n            param_1[5] = NULL;\n            *(param_1 + 0xc) = 0;\n        }\n        else {\n            ppiVar2[1] = param_1[2];\n            *ppiVar2 = *param_1[2];\n            if (*param_1[2] != 0) {\n                *(*param_1[2] + 4) = ppiVar2;\n            }\n            *param_1[2] = ppiVar2;\n            param_1[5] = param_1[5] + 1;\n            param_1[2] = ppiVar2;\n        }\n        piVar1 = param_1[2];\n        if (piVar1[1] == 0) {\n            *param_1 = piVar1;\n        }\n        if (*piVar1 == 0) {\n            param_1[1] = piVar1;\n        }\n        *param_1[3] = piVar1;\n        ppiVar2 = ppiVar2 + 2;\n    }\n    return ppiVar2;\n}\n",
        "token_count": 462
    },
    "0040ac50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ac50(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0040aa60(param_1, param_2, 3, param_3);\n    return;\n}\n",
        "token_count": 52
    },
    "0040ad40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ad40(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0040aa60(param_1, param_2, 1, param_3);\n    return;\n}\n",
        "token_count": 52
    },
    "0040b2e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b2e7(uint32_t *param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    \n    if (param_3 == NULL) {\n        param_3 = param_2;\n    }\n    else {\n        sub.MSVCRT.dll_memcpy(param_3, param_2, 0x40);\n    }\n    uVar9 = *param_3;\n    uVar1 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar9 = param_1[1];\n    uVar3 = *param_1;\n    uVar4 = param_1[3];\n    uVar5 = param_1[2];\n    uVar10 = uVar9 >> 2 | uVar9 << 0x1e;\n    uVar6 = param_1[4] + 0x5a827999 + ((uVar4 ^ uVar5) & uVar9 ^ uVar4) + (uVar3 << 5 | uVar3 >> 0x1b) + uVar1;\n    uVar9 = param_3[1];\n    uVar2 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar13 = uVar3 >> 2 | uVar3 << 0x1e;\n    uVar16 = uVar4 + 0x5a827999 + ((uVar5 ^ uVar10) & uVar3 ^ uVar5) + (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar2;\n    uVar9 = param_3[2];\n    uVar3 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar7 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar6 = uVar5 + 0x5a827999 + ((uVar10 ^ uVar13) & uVar6 ^ uVar10) + (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar3;\n    uVar9 = param_3[3];\n    uVar4 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar17 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar10 = uVar10 + 0x5a827999 + ((uVar7 ^ uVar13) & uVar16 ^ uVar13) + (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar4;\n    uVar9 = param_3[4];\n    uVar5 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar19 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar13 = uVar13 + 0x5a827999 + ((uVar7 ^ uVar17) & uVar6 ^ uVar7) + (uVar10 * 0x20 | uVar10 >> 0x1b) + uVar5;\n    uVar9 = param_3[5];\n    uVar6 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar11 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar7 = uVar7 + ((uVar17 ^ uVar19) & uVar10 ^ uVar17) + (uVar13 * 0x20 | uVar13 >> 0x1b) + 0x5a827999 + uVar6;\n    uVar9 = param_3[6];\n    uVar10 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar14 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar17 = uVar17 + ((uVar19 ^ uVar11) & uVar13 ^ uVar19) + (uVar7 * 0x20 | uVar7 >> 0x1b) + 0x5a827999 + uVar10;\n    uVar9 = param_3[7];\n    uVar13 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar8 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar19 = uVar19 + ((uVar11 ^ uVar14) & uVar7 ^ uVar11) + (uVar17 * 0x20 | uVar17 >> 0x1b) + 0x5a827999 + uVar13;\n    uVar9 = param_3[8];\n    uVar7 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar18 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar11 = uVar11 + ((uVar8 ^ uVar14) & uVar17 ^ uVar14) + (uVar19 * 0x20 | uVar19 >> 0x1b) + 0x5a827999 + uVar7;\n    uVar9 = param_3[9];\n    uVar16 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar20 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar14 = uVar14 + ((uVar8 ^ uVar18) & uVar19 ^ uVar8) + (uVar11 * 0x20 | uVar11 >> 0x1b) + 0x5a827999 + uVar16;\n    uVar9 = param_3[10];\n    uVar17 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar12 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar8 = (uVar14 * 0x20 | uVar14 >> 0x1b) + uVar17 + ((uVar18 ^ uVar20) & uVar11 ^ uVar18) + uVar8 + 0x5a827999;\n    uVar9 = param_3[0xb];\n    uVar19 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar15 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar14 = uVar19 + (uVar8 * 0x20 | uVar8 >> 0x1b) + ((uVar20 ^ uVar12) & uVar14 ^ uVar20) + uVar18 + 0x5a827999;\n    uVar9 = param_3[0xc];\n    uVar11 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar18 = (uVar12 ^ (uVar12 ^ uVar15) & uVar8) + (uVar14 * 0x20 | uVar14 >> 0x1b) + uVar11 + uVar20 + 0x5a827999;\n    uVar20 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar9 = param_3[0xd];\n    uVar21 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar8 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar12 = (uVar15 ^ (uVar20 ^ uVar15) & uVar14) + (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar21 + uVar12 + 0x5a827999;\n    uVar9 = param_3[0xe];\n    uVar22 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar14 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar18 = (uVar20 ^ (uVar20 ^ uVar8) & uVar18) + (uVar12 * 0x20 | uVar12 >> 0x1b) + uVar22 + uVar15 + 0x5a827999;\n    uVar9 = param_3[0xf];\n    uVar15 = uVar9 >> 8 & 0xff00ff00 | uVar9 << 0x18 | (uVar9 & 0xff00) << 8 | uVar9 >> 0x18;\n    uVar20 = uVar15 + (uVar18 * 0x20 | uVar18 >> 0x1b) + ((uVar8 ^ uVar14) & uVar12 ^ uVar8) + uVar20 + 0x5a827999;\n    uVar9 = uVar3 ^ uVar1 ^ uVar21 ^ uVar7;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    uVar12 = uVar12 >> 2 | uVar12 * 0x40000000;\n    *param_3 = uVar9;\n    uVar1 = uVar4 ^ uVar2 ^ uVar22 ^ uVar16;\n    uVar2 = (uVar14 ^ (uVar14 ^ uVar12) & uVar18) + (uVar20 * 0x20 | uVar20 >> 0x1b) + uVar9 + uVar8 + 0x5a827999;\n    uVar9 = uVar1 << 1 | uVar1 < 0;\n    uVar18 = uVar18 >> 2 | uVar18 * 0x40000000;\n    param_3[1] = uVar9;\n    uVar3 = uVar5 ^ uVar3 ^ uVar15 ^ uVar17;\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    uVar8 = (uVar12 ^ (uVar12 ^ uVar18) & uVar20) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar9 + uVar14 + 0x5a827999;\n    uVar20 = uVar20 >> 2 | uVar20 * 0x40000000;\n    param_3[2] = uVar3;\n    uVar1 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar3 = uVar3 + (uVar8 * 0x20 | uVar8 >> 0x1b) + ((uVar20 ^ uVar18) & uVar2 ^ uVar18) + uVar12 + 0x5a827999;\n    uVar9 = uVar4 ^ *param_3 ^ uVar19 ^ uVar6;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[3] = uVar9;\n    uVar14 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar18 = uVar18 + ((uVar20 ^ uVar1) & uVar8 ^ uVar20) + (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x5a827999 + uVar9;\n    uVar9 = uVar5 ^ param_3[1] ^ uVar11 ^ uVar10;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[4] = uVar9;\n    uVar4 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar20 = uVar20 + (uVar1 ^ uVar14 ^ uVar3) + (uVar18 * 0x20 | uVar18 >> 0x1b) + 0x6ed9eba1 + uVar9;\n    uVar6 = param_3[2] ^ uVar21 ^ uVar13 ^ uVar6;\n    uVar9 = uVar6 << 1 | uVar6 < 0;\n    param_3[5] = uVar9;\n    uVar8 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar1 = uVar1 + (uVar14 ^ uVar4 ^ uVar18) + (uVar20 * 0x20 | uVar20 >> 0x1b) + uVar9 + 0x6ed9eba1;\n    uVar9 = param_3[3];\n    uVar10 = uVar9 ^ uVar22 ^ uVar7 ^ uVar10;\n    uVar3 = uVar10 << 1 | uVar10 < 0;\n    param_3[6] = uVar3;\n    uVar10 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar14 = uVar14 + (uVar20 ^ uVar4 ^ uVar8) + (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar3 + 0x6ed9eba1;\n    uVar3 = param_3[4];\n    uVar13 = uVar3 ^ uVar15 ^ uVar16 ^ uVar13;\n    uVar5 = uVar13 << 1 | uVar13 < 0;\n    param_3[7] = uVar5;\n    uVar2 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar4 = uVar4 + 0x6ed9eba1 + (uVar10 ^ uVar1 ^ uVar8) + (uVar14 * 0x20 | uVar14 >> 0x1b) + uVar5;\n    uVar5 = *param_3 ^ uVar17 ^ uVar7 ^ param_3[5];\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    param_3[8] = uVar5;\n    uVar6 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar5 + (uVar10 ^ uVar2 ^ uVar14) + uVar8 + 0x6ed9eba1;\n    uVar1 = param_3[1] ^ uVar19 ^ uVar16 ^ param_3[6];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[9] = uVar1;\n    uVar13 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar1 + (uVar2 ^ uVar6 ^ uVar4) + uVar10 + 0x6ed9eba1;\n    uVar1 = param_3[2] ^ uVar11 ^ uVar17 ^ param_3[7];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[10] = uVar1;\n    uVar7 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1 + (uVar6 ^ uVar13 ^ uVar5) + uVar2 + 0x6ed9eba1;\n    uVar1 = uVar9 ^ uVar21 ^ uVar19 ^ param_3[8];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[0xb] = uVar1;\n    uVar2 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = uVar6 + 0x6ed9eba1 + (uVar4 ^ uVar13 ^ uVar7) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar1;\n    uVar1 = uVar3 ^ uVar22 ^ uVar11 ^ param_3[9];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[0xc] = uVar1;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1 + (uVar2 ^ uVar5 ^ uVar7) + uVar13 + 0x6ed9eba1;\n    uVar1 = uVar15 ^ uVar21 ^ param_3[10] ^ param_3[5];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[0xd] = uVar1;\n    uVar13 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar1 + (uVar2 ^ uVar10 ^ uVar4) + uVar7 + 0x6ed9eba1;\n    uVar1 = *param_3 ^ uVar22 ^ param_3[0xb] ^ param_3[6];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[0xe] = uVar1;\n    uVar7 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1 + (uVar10 ^ uVar13 ^ uVar5) + uVar2 + 0x6ed9eba1;\n    uVar1 = param_3[1] ^ uVar15 ^ param_3[0xc] ^ param_3[7];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[0xf] = uVar1;\n    uVar6 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = uVar10 + 0x6ed9eba1 + (uVar13 ^ uVar7 ^ uVar4) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar1;\n    uVar1 = param_3[2] ^ *param_3 ^ param_3[0xd] ^ param_3[8];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    *param_3 = uVar1;\n    uVar1 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1 + (uVar5 ^ uVar7 ^ uVar6) + uVar13 + 0x6ed9eba1;\n    uVar2 = uVar9 ^ param_3[1] ^ param_3[0xe] ^ param_3[9];\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    param_3[1] = uVar2;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar13 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar2 + (uVar10 ^ uVar4 ^ uVar6) + uVar7 + 0x6ed9eba1;\n    uVar5 = uVar3 ^ param_3[2] ^ param_3[0xf] ^ param_3[10];\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    param_3[2] = uVar5;\n    uVar7 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar5 = uVar5 + (uVar4 * 0x20 | uVar4 >> 0x1b) + (uVar10 ^ uVar13 ^ uVar1) + uVar6 + 0x6ed9eba1;\n    uVar9 = uVar9 ^ *param_3 ^ param_3[0xb] ^ param_3[5];\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[3] = uVar9;\n    uVar2 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = uVar10 + 0x6ed9eba1 + (uVar13 ^ uVar7 ^ uVar4) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar9;\n    uVar9 = uVar3 ^ param_3[1] ^ param_3[0xc] ^ param_3[6];\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[4] = uVar9;\n    uVar1 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar3 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar9 + (uVar7 ^ uVar2 ^ uVar5) + uVar13 + 0x6ed9eba1;\n    uVar9 = param_3[2] ^ param_3[0xd] ^ param_3[7] ^ param_3[5];\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[5] = uVar9;\n    uVar10 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar5 = (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar9 + (uVar4 ^ uVar2 ^ uVar1) + uVar7 + 0x6ed9eba1;\n    uVar9 = param_3[3];\n    uVar4 = uVar9 ^ param_3[0xe] ^ param_3[8] ^ param_3[6];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[6] = uVar4;\n    uVar13 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar4 = (uVar10 ^ uVar3 ^ uVar1) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar4 + uVar2 + 0x6ed9eba1;\n    uVar3 = param_3[4];\n    uVar2 = uVar3 ^ param_3[0xf] ^ param_3[9] ^ param_3[7];\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    param_3[7] = uVar2;\n    uVar6 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar10 ^ uVar13 ^ uVar5) + (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar2 + uVar1 + 0x6ed9eba1;\n    uVar1 = *param_3 ^ param_3[10] ^ param_3[8] ^ param_3[5];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[8] = uVar1;\n    uVar1 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar6 | uVar4) & uVar13 | uVar6 & uVar4) + uVar1 + uVar10;\n    uVar10 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = param_3[1] ^ param_3[0xb] ^ param_3[9] ^ param_3[6];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[9] = uVar4;\n    uVar7 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar4 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar10 | uVar5) & uVar6 | uVar10 & uVar5) + uVar4 + uVar13;\n    uVar5 = param_3[2] ^ param_3[0xc] ^ param_3[10] ^ param_3[7];\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    param_3[10] = uVar5;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + 0x8f1bbcdc + ((uVar1 | uVar7) & uVar10 | uVar1 & uVar7) + uVar5 + uVar6;\n    uVar2 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = uVar9 ^ param_3[0xd] ^ param_3[0xb] ^ param_3[8];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[0xb] = uVar1;\n    uVar1 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar4) & uVar7 | uVar2 & uVar4) + uVar1 + uVar10;\n    uVar6 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = uVar3 ^ param_3[0xe] ^ param_3[0xc] ^ param_3[9];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[0xc] = uVar4;\n    uVar4 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar6 | uVar5) & uVar2 | uVar6 & uVar5) + uVar4 + uVar7;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = param_3[0xf] ^ param_3[0xd] ^ param_3[10] ^ param_3[5];\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    param_3[0xd] = uVar5;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + 0x8f1bbcdc + ((uVar10 | uVar1) & uVar6 | uVar10 & uVar1) + uVar5 + uVar2;\n    uVar2 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = *param_3 ^ param_3[0xe] ^ param_3[0xb] ^ param_3[6];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[0xe] = uVar1;\n    uVar1 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar4) & uVar10 | uVar2 & uVar4) + uVar1 + uVar6;\n    uVar6 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = param_3[1] ^ param_3[0xf] ^ param_3[0xc] ^ param_3[7];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[0xf] = uVar4;\n    uVar4 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar5 | uVar6) & uVar2 | uVar5 & uVar6) + uVar4 + uVar10;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = param_3[2] ^ *param_3 ^ param_3[0xd] ^ param_3[8];\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    *param_3 = uVar5;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + 0x8f1bbcdc + ((uVar10 | uVar1) & uVar6 | uVar10 & uVar1) + uVar5 + uVar2;\n    uVar2 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = uVar9 ^ param_3[1] ^ param_3[0xe] ^ param_3[9];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[1] = uVar1;\n    uVar1 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar4) & uVar10 | uVar2 & uVar4) + uVar1 + uVar6;\n    uVar6 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = uVar3 ^ param_3[2] ^ param_3[0xf] ^ param_3[10];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[2] = uVar4;\n    uVar4 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar6 | uVar5) & uVar2 | uVar6 & uVar5) + uVar4 + uVar10;\n    uVar9 = uVar9 ^ *param_3 ^ param_3[0xb] ^ param_3[5];\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[3] = uVar9;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar9 = (uVar4 * 0x20 | uVar4 >> 0x1b) + 0x8f1bbcdc + ((uVar10 | uVar1) & uVar6 | uVar10 & uVar1) + uVar9 + uVar2;\n    uVar3 = uVar3 ^ param_3[1] ^ param_3[0xc] ^ param_3[6];\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    param_3[4] = uVar3;\n    uVar3 = (uVar4 & uVar5 | (uVar4 | uVar5) & uVar10) + uVar3 + uVar6 + 0x8f1bbcdc + (uVar9 * 0x20 | uVar9 >> 0x1b);\n    uVar6 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = param_3[2] ^ param_3[0xd] ^ param_3[7] ^ param_3[5];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[5] = uVar4;\n    uVar4 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc + ((uVar6 | uVar9) & uVar5 | uVar6 & uVar9) + uVar4 + uVar10;\n    uVar13 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar9 = param_3[3];\n    uVar1 = uVar9 ^ param_3[0xe] ^ param_3[8] ^ param_3[6];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[6] = uVar1;\n    uVar5 = (uVar4 * 0x20 | uVar4 >> 0x1b) + 0x8f1bbcdc + ((uVar13 | uVar3) & uVar6 | uVar13 & uVar3) + uVar1 + uVar5;\n    uVar2 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar3 = param_3[4];\n    uVar1 = uVar3 ^ param_3[0xf] ^ param_3[9] ^ param_3[7];\n    uVar10 = uVar1 << 1 | uVar1 < 0;\n    param_3[7] = uVar10;\n    uVar1 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar6 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar4) & uVar13 | uVar2 & uVar4) + uVar10 + uVar6;\n    uVar4 = *param_3 ^ param_3[10] ^ param_3[8] ^ param_3[5];\n    uVar10 = uVar4 << 1 | uVar4 < 0;\n    param_3[8] = uVar10;\n    uVar4 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar13 = (uVar6 * 0x20 | uVar6 >> 0x1b) + 0x8f1bbcdc + ((uVar1 | uVar5) & uVar2 | uVar1 & uVar5) + uVar10 + uVar13;\n    uVar5 = param_3[1] ^ param_3[0xb] ^ param_3[9] ^ param_3[6];\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    param_3[9] = uVar5;\n    uVar10 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar5 = (uVar13 * 0x20 | uVar13 >> 0x1b) + 0x8f1bbcdc + ((uVar6 | uVar4) & uVar1 | uVar6 & uVar4) + uVar5 + uVar2;\n    uVar2 = param_3[2] ^ param_3[0xc] ^ param_3[10] ^ param_3[7];\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    param_3[10] = uVar2;\n    uVar6 = uVar9 ^ param_3[0xd] ^ param_3[0xb] ^ param_3[8];\n    uVar7 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar6 = uVar6 << 1 | uVar6 < 0;\n    param_3[0xb] = uVar6;\n    uVar2 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0x8f1bbcdc + ((uVar10 | uVar13) & uVar4 | uVar10 & uVar13) + uVar2 + uVar1;\n    uVar1 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc + ((uVar7 | uVar5) & uVar10 | uVar7 & uVar5) + uVar6 + uVar4;\n    uVar4 = uVar3 ^ param_3[0xe] ^ param_3[0xc] ^ param_3[9];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[0xc] = uVar4;\n    uVar6 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar10 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0xca62c1d6 + (uVar7 ^ uVar1 ^ uVar2) + uVar4 + uVar10;\n    uVar4 = param_3[0xf] ^ param_3[0xd] ^ param_3[10] ^ param_3[5];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[0xd] = uVar4;\n    uVar16 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar2 = (uVar10 * 0x20 | uVar10 >> 0x1b) + 0xca62c1d6 + (uVar1 ^ uVar6 ^ uVar5) + uVar4 + uVar7;\n    uVar4 = *param_3 ^ param_3[0xe] ^ param_3[0xb] ^ param_3[6];\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    param_3[0xe] = uVar4;\n    uVar17 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar13 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6 + (uVar10 ^ uVar6 ^ uVar16) + uVar4 + uVar1;\n    uVar4 = param_3[0xc];\n    uVar5 = param_3[1] ^ param_3[0xf] ^ uVar4 ^ param_3[7];\n    uVar5 = uVar5 << 1 | uVar5 < 0;\n    param_3[0xf] = uVar5;\n    uVar1 = (uVar13 * 0x20 | uVar13 >> 0x1b) + (uVar17 ^ uVar2 ^ uVar16) + uVar5 + 0xca62c1d6 + uVar6;\n    uVar10 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar5 = param_3[0xd];\n    uVar2 = param_3[2] ^ *param_3 ^ uVar5 ^ param_3[8];\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    *param_3 = uVar2;\n    uVar7 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0xca62c1d6 + (uVar17 ^ uVar10 ^ uVar13) + uVar2 + uVar16;\n    uVar6 = uVar9 ^ param_3[1] ^ param_3[0xe] ^ param_3[9];\n    uVar6 = uVar6 << 1 | uVar6 < 0;\n    param_3[1] = uVar6;\n    uVar16 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar2 * 0x20 | uVar2 >> 0x1b) + (uVar10 ^ uVar7 ^ uVar1) + uVar6 + uVar17 + 0xca62c1d6;\n    uVar6 = uVar3 ^ param_3[2] ^ param_3[0xf] ^ param_3[10];\n    uVar6 = uVar6 << 1 | uVar6 < 0;\n    param_3[2] = uVar6;\n    uVar17 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0xca62c1d6 + (uVar7 ^ uVar16 ^ uVar2) + uVar6 + uVar10;\n    uVar9 = uVar9 ^ *param_3 ^ param_3[0xb] ^ param_3[5];\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[3] = uVar9;\n    uVar13 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6 + (uVar1 ^ uVar16 ^ uVar17) + uVar9 + uVar7;\n    uVar10 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar9 = param_3[1];\n    uVar3 = uVar3 ^ uVar9 ^ param_3[0xc] ^ param_3[6];\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    param_3[4] = uVar3;\n    uVar6 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar3 = (uVar10 ^ uVar2 ^ uVar17) + uVar3 + uVar16 + (uVar13 * 0x20 | uVar13 >> 0x1b) + 0xca62c1d6;\n    uVar1 = param_3[2] ^ param_3[0xd] ^ param_3[7] ^ param_3[5];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[5] = uVar1;\n    uVar7 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar1 = (uVar10 ^ uVar6 ^ uVar13) + uVar1 + uVar17 + (uVar3 * 0x20 | uVar3 >> 0x1b) + 0xca62c1d6;\n    uVar2 = param_3[3] ^ param_3[0xe] ^ param_3[8] ^ param_3[6];\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    param_3[6] = uVar2;\n    uVar13 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0xca62c1d6 + (uVar6 ^ uVar7 ^ uVar3) + uVar2 + uVar10;\n    uVar2 = param_3[4] ^ param_3[0xf] ^ param_3[9] ^ param_3[7];\n    uVar10 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar3 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    param_3[7] = uVar2;\n    uVar2 = (uVar10 ^ uVar7 ^ uVar1) + uVar2 + uVar6 + 0xca62c1d6 + (uVar13 * 0x20 | uVar13 >> 0x1b);\n    uVar1 = *param_3 ^ param_3[10] ^ param_3[8] ^ param_3[5];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[8] = uVar1;\n    uVar7 = (uVar2 * 0x20 | uVar2 >> 0x1b) + (uVar13 ^ uVar10 ^ uVar3) + uVar1 + 0xca62c1d6 + uVar7;\n    uVar13 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar1 = uVar9 ^ param_3[0xb] ^ param_3[9] ^ param_3[6];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[9] = uVar1;\n    uVar6 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar10 = (uVar7 * 0x20 | uVar7 >> 0x1b) + (uVar13 ^ uVar2 ^ uVar3) + uVar1 + 0xca62c1d6 + uVar10;\n    uVar1 = param_3[2] ^ uVar4 ^ param_3[10] ^ param_3[7];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    param_3[10] = uVar1;\n    uVar16 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar2 = (uVar10 * 0x20 | uVar10 >> 0x1b) + 0xca62c1d6 + (uVar13 ^ uVar6 ^ uVar7) + uVar1 + uVar3;\n    uVar3 = param_3[3] ^ uVar5 ^ param_3[0xb] ^ param_3[8];\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    param_3[0xb] = uVar3;\n    uVar7 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar1 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6 + (uVar6 ^ uVar16 ^ uVar10) + uVar3 + uVar13;\n    uVar4 = param_3[9] ^ param_3[4] ^ param_3[0xe] ^ uVar4;\n    uVar3 = uVar4 << 1 | uVar4 < 0;\n    param_3[0xc] = uVar3;\n    uVar10 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0xca62c1d6 + (uVar16 ^ uVar7 ^ uVar2) + uVar3 + uVar6;\n    uVar3 = param_3[10] ^ param_3[0xf] ^ uVar5 ^ param_3[5];\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    param_3[0xd] = uVar3;\n    uVar4 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar5 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6 + (uVar1 ^ uVar7 ^ uVar10) + uVar3 + uVar16;\n    uVar3 = param_3[0xb] ^ *param_3 ^ param_3[0xe] ^ param_3[6];\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    param_3[0xe] = uVar3;\n    uVar1 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar3 = (uVar5 * 0x20 | uVar5 >> 0x1b) + 0xca62c1d6 + (uVar4 ^ uVar2 ^ uVar10) + uVar3 + uVar7;\n    uVar9 = uVar9 ^ param_3[0xf] ^ param_3[7] ^ param_3[0xc];\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    param_3[0xf] = uVar9;\n    param_1[3] = param_1[3] + uVar1;\n    param_1[2] = param_1[2] + (uVar5 >> 2 | uVar5 * 0x40000000);\n    *param_1 = *param_1 + (uVar4 ^ uVar1 ^ uVar5) + uVar9 + (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar10 + 0xca62c1d6;\n    param_1[1] = param_1[1] + uVar3;\n    param_1[4] = param_1[4] + uVar4;\n    return;\n}\n",
        "token_count": 11998
    },
    "0040d288": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040d288(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x417610);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 8, *0x41760c);\n        (*_sym.imp.KERNEL32.DLL_TlsSetValue)(*0x417610, iVar1);\n        for (puVar2 = *0x417608; puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[3] != NULL) {\n                (*puVar2[3])(puVar2[2] + iVar1);\n            }\n        }\n        fcn.00411d62(0x40d226, iVar1);\n    }\n    return unaff_retaddr + iVar1;\n}\n",
        "token_count": 219
    },
    "0040d2f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040d2f3(uint32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t unaff_EDI;\n    code *pcVar6;\n    \n    pcVar1 = _sym.imp.KERNEL32.DLL_TlsSetValue;\n    if ((param_1 & 3) != 0) {\n        param_1 = param_1 + (4 - (param_1 & 3));\n    }\n    iVar3 = *0x41760c;\n    if (*0x41760c == NULL) {\n        *0x417610 = (*_sym.imp.KERNEL32.DLL_TlsAlloc)();\n        uVar2 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 8, param_1);\n        (*pcVar1)(*0x417610, uVar2);\n        iVar3 = *0x41760c;\n    }\n    *0x41760c = iVar3 + param_1;\n    pcVar6 = *0x41760c;\n    uVar2 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x417610);\n    iVar4 = (*_sym.imp.KERNEL32.DLL_HeapReAlloc)(*0x417008, 8, uVar2);\n    (*pcVar1)(*0x417610, iVar4);\n    if ((pcVar6 != NULL) || (unaff_EDI != 0)) {\n        piVar5 = fcn.0040db12(0x417608, 0x14);\n        *piVar5 = iVar3;\n        piVar5[1] = pcVar6;\n        piVar5[2] = unaff_EDI;\n        if (pcVar6 != NULL) {\n            (*pcVar6)(iVar3 + iVar4);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 432
    },
    "0040d51f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** fcn.0040d51f(int32_t **param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    ppiVar3 = NULL;\n    if (param_1[7] != NULL) {\n        (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(param_1 + 8);\n    }\n    ppiVar1 = param_1[1];\n    if (ppiVar1 == NULL) {\n        piVar2 = param_1[3] >> 4 & 0xfffffff0;\n        if (piVar2 < param_1[5]) {\n            piVar2 = param_1[5];\n        }\n        else if (param_1[6] < piVar2) {\n            piVar2 = param_1[6];\n        }\n        ppiVar1 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 0, param_1[4] * piVar2 + 0x18);\n        if (ppiVar1 == NULL) {\n            ppiVar1 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 0, param_1[4] + 6);\n            if (ppiVar1 == NULL) goto code_r0x0040d65a;\n            ppiVar1[3] = 0x1;\n        }\n        else {\n            ppiVar1[3] = piVar2;\n        }\n        param_1[3] = param_1[3] + ppiVar1[3];\n        ppiVar1[4] = 0x1;\n        ppiVar1[5] = NULL;\n        ppiVar1[2] = NULL;\n        if (ppiVar1[3] < 2) {\n            *ppiVar1 = *param_1;\n            ppiVar1[1] = NULL;\n            *param_1 = ppiVar1;\n        }\n        else {\n            *ppiVar1 = param_1[1];\n            ppiVar1[1] = NULL;\n            param_1[1] = ppiVar1;\n        }\n        if (*ppiVar1 != NULL) {\n            (*ppiVar1)[1] = ppiVar1;\n        }\n        ppiVar3 = ppiVar1 + 6;\n    }\n    else {\n        if (ppiVar1[5] < 1) {\n            ppiVar3 = ppiVar1 + param_1[4] * ppiVar1[4] + 0x18;\n            ppiVar1[4] = ppiVar1[4] + 1;\n        }\n        else {\n            ppiVar3 = ppiVar1[2];\n            ppiVar1[2] = *ppiVar3;\n            ppiVar1[5] = ppiVar1[5] + -1;\n        }\n        if ((ppiVar1[5] == NULL) && (ppiVar1[3] <= ppiVar1[4])) {\n            if (*ppiVar1 != NULL) {\n                *(*ppiVar1 + 4) = ppiVar1[1];\n            }\n            if (ppiVar1 == param_1[1]) {\n                param_1[1] = *ppiVar1;\n            }\n            else {\n                *ppiVar1[1] = *ppiVar1;\n            }\n            *ppiVar1 = *param_1;\n            ppiVar1[1] = NULL;\n            *param_1 = ppiVar1;\n            if (*ppiVar1 != NULL) {\n                *(*ppiVar1 + 4) = ppiVar1;\n            }\n        }\n    }\ncode_r0x0040d65a:\n    if (param_1[7] != NULL) {\n        (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(param_1 + 8);\n    }\n    if (ppiVar3 == NULL) {\n        ppiVar3 = NULL;\n    }\n    else {\n        *ppiVar3 = ppiVar1;\n        ppiVar3 = ppiVar3 + 1;\n    }\n    return ppiVar3;\n}\n",
        "token_count": 922
    },
    "0040d7b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.0040d7b9(int32_t param_1, uint param_2, uint param_3, uint32_t param_4)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint unaff_EBX;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint unaff_retaddr;\n    int32_t iVar5;\n    \n    uVar3 = param_1 + 4;\n    puVar4 = NULL;\n    if ((uVar3 & 3) != 0) {\n        uVar3 = uVar3 + (4 - (uVar3 & 3));\n    }\n    if ((param_4 & 4) == 0) {\n        puVar4 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 0, 0x38);\n        if (puVar4 != NULL) {\n            puVar4[5] = unaff_EBX;\n            puVar4[6] = unaff_retaddr;\n            *puVar4 = 0;\n            puVar4[1] = 0;\n            puVar4[2] = 0;\n            puVar4[4] = uVar3;\n            if (((param_4 & 3) == 1) || ((param_4 & 3) == 0)) {\n                puVar4[7] = 1;\n                (*_sym.imp.KERNEL32.DLL_InitializeCriticalSection)(puVar4 + 8);\n            }\n            else {\n                puVar4[7] = 0;\n            }\n        }\n    }\n    else {\n        fcn.0040d9e3(0x417614, 0x40d982);\n        iVar5 = 0x41761c;\n        (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(0x41761c);\n        for (puVar1 = *0x417618; puVar1 != NULL; puVar1 = *puVar1) {\n            if ((puVar1[3] == uVar3) && (puVar1[4] == param_1)) {\n                puVar1[5] = puVar1[5] + 1;\n                puVar4 = puVar1[2];\n                puVar1 = *0x417618;\n                if (puVar4 != NULL) goto code_r0x0040d885;\n                break;\n            }\n        }\n        puVar2 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 0, 0x18);\n        puVar1 = *0x417618;\n        if (puVar2 != NULL) {\n            iVar5 = uVar3 - 4;\n            puVar4 = fcn.0040d7b9();\n            puVar1 = *0x417618;\n            if (puVar4 != NULL) {\n                puVar4[2] = puVar2;\n                puVar2[1] = 0;\n                puVar2[2] = puVar4;\n                puVar2[3] = uVar3;\n                puVar2[4] = param_1;\n                puVar2[5] = 1;\n                *puVar2 = *0x417618;\n                puVar1 = puVar2;\n                if (*0x417618 != NULL) {\n                    (*0x417618)[1] = puVar2;\n                }\n            }\n        }\ncode_r0x0040d885:\n        *0x417618 = puVar1;\n        (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(0x41761c, iVar5);\n    }\n    return puVar4;\n}\n",
        "token_count": 803
    },
    "0040db6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * fcn.0040db6a(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_EBP;\n    uint *unaff_ESI;\n    uint unaff_EDI;\n    int32_t unaff_retaddr;\n    int32_t *in_stack_00000014;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    iVar5 = *in_stack_00000014;\n    fcn.0040dcbd(iVar5);\n    puVar1 = NULL;\n    if (0 < param_1) {\n        iVar2 = unaff_retaddr * param_1;\n        puVar1 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 0, iVar2 + 0x18);\n        if (puVar1 != NULL) {\n            puVar1[1] = unaff_EDI;\n            puVar1[2] = unaff_retaddr;\n            puVar1[4] = param_1;\n            puVar1[5] = unaff_EBP;\n            puVar1[3] = in_stack_00000014;\n            *puVar1 = 1;\n            puVar3 = puVar1 + 6;\n            puVar4 = puVar3;\n            sub.MSVCRT.dll_memset(puVar3, 0, iVar2);\n            *in_stack_00000014 = puVar3;\n            iVar2 = fcn.00411744(unaff_retaddr);\n            puVar1 = puVar3;\n            if ((iVar2 != 0) && (0 < param_1)) {\n                do {\n                    puVar1 = unaff_ESI;\n                    fcn.00411b6f(puVar4, unaff_retaddr, puVar3);\n                    puVar3 = puVar3 + iVar5;\n                    param_1 = param_1 + -1;\n                    unaff_ESI = puVar1;\n                } while (param_1 != 0);\n            }\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 461
    },
    "0040dcbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040dcbd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    \n    if (param_1 != 0) {\n        if ((*(param_1 + -0x10) != 0) && (iVar1 = 0,  arg_8h = param_1,  0 < *(param_1 + -8))) {\n            do {\n                fcn.00411a6a(arg_8h, *(param_1 + -0x10));\n                arg_8h = arg_8h + *(param_1 + -0x14);\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < *(param_1 + -8));\n        }\n        **(param_1 + -0xc) = 0;\n        (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, param_1 + -0x18);\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "0040e020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get thread local storage value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040e020(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170, param_1);\n    *(iVar1 + 8) = *(iVar1 + 8) + 2;\n    return;\n}\n",
        "token_count": 98
    },
    "0040e050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get thread local storage value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __fastcall fcn.0040e050(uint param_1)\n\n{\n    int32_t *piVar1;\n    uint var_4h;\n    \n    piVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170, param_1);\n    return *piVar1 + piVar1[2];\n}\n",
        "token_count": 93
    },
    "0040e180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e180(uint32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    puVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170);\n    if ((arg_8h < *puVar1) || (*puVar1 + puVar1[2] < arg_8h)) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = (arg_8h - *puVar1) + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 140
    },
    "0040e1d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e1d0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint var_4h;\n    \n    piVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170);\n    return *piVar1 + arg_8h;\n}\n",
        "token_count": 77
    },
    "0040e6a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e6a0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170);\n    piVar1[2] = arg_8h;\n    return *piVar1 + piVar1[2];\n}\n",
        "token_count": 98
    },
    "0040fed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040fed0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (((param_1 != 0) && (*(param_1 + 0x1c) != 0)) && (*(param_1 + 0x24) != NULL)) {\n        iVar1 = *(*(param_1 + 0x1c) + 0x34);\n        if (iVar1 != 0) {\n            (**(param_1 + 0x24))(*(param_1 + 0x28), iVar1);\n        }\n        (**(param_1 + 0x24))(*(param_1 + 0x28), *(param_1 + 0x1c));\n        *(param_1 + 0x1c) = 0;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 189
    },
    "0040ffe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ffe0(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0040ff20(param_1, 0xf, param_2, param_3);\n    return;\n}\n",
        "token_count": 53
    },
    "00410040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00410040(int32_t noname_0, uint32_t noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, \n            uint noname_6, uint arg_24h, uint arg_28h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((noname_0 == 0) || (iVar1 = *(noname_0 + 0x1c),  iVar1 == 0)) {\n        return 0xfffffffe;\n    }\n    if (noname_1 < 0) {\n        iVar3 = 0;\n        noname_1 = -noname_1;\n    }\n    else {\n        iVar3 = (noname_1 >> 4) + 1;\n        if (noname_1 < 0x30) {\n            noname_1 = noname_1 & 0xf;\n        }\n    }\n    if ((noname_1 != 0) && ((noname_1 < 8 || (0xf < noname_1)))) {\n        return 0xfffffffe;\n    }\n    if ((*(iVar1 + 0x34) != 0) && (*(iVar1 + 0x24) != noname_1)) {\n        (**(noname_0 + 0x24))(*(noname_0 + 0x28), *(iVar1 + 0x34));\n        *(iVar1 + 0x34) = 0;\n    }\n    *(iVar1 + 8) = iVar3;\n    *(iVar1 + 0x24) = noname_1;\n    uVar2 = fcn.00410000(noname_0);\n    return uVar2;\n}\n",
        "token_count": 396
    },
    "004116ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * fcn.004116ac(ushort *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    ushort *puVar2;\n    \n    puVar2 = param_1;\n    if ((param_3 < 1) && (param_3 < 0)) {\n        uVar1 = ~param_2;\n        param_2 = uVar1 + 1;\n        *param_1 = 0x2d;\n        param_3 = ~param_3 + (0xfffffffe < uVar1);\n        puVar2 = param_1 + 1;\n    }\n    fcn.004116e6(puVar2, param_2, param_3);\n    return param_1;\n}\n",
        "token_count": 171
    },
    "004116e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.004116e6(int16_t *param_1, uint param_2)\n\n{\n    int16_t extraout_CX;\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int64_t iVar3;\n    int16_t aiStack64 [30];\n    uint uStack4;\n    \n    piVar2 = aiStack64;\n    do {\n        iVar3 = fcn.00405260();\n        uStack4 = param_2;\n        *piVar2 = extraout_CX + 0x30;\n        piVar2 = piVar2 + 1;\n        param_2 = iVar3;\n        piVar1 = param_1;\n    } while (iVar3 != 0);\n    do {\n        piVar2 = piVar2 + -1;\n        *piVar1 = *piVar2;\n        piVar1 = piVar1 + 1;\n    } while (piVar2 != &stack0xffffffb0);\n    *piVar1 = 0;\n    return param_1;\n}\n",
        "token_count": 233
    },
    "00411e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00411e80(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    \n    if (param_1 != NULL) {\n        piVar5 = param_1;\n        do {\n            iVar1 = *piVar5;\n            piVar5 = piVar5 + 1;\n        } while (iVar1 != 0);\n        iVar4 = (piVar5 - (param_1 + 1) >> 1) + 1;\n        iVar2 = (*_sym.imp.KERNEL32.DLL_WideCharToMultiByte)(0xfde9, 0, param_1, iVar4, 0, 0, 0, 0);\n        if (iVar2 != 0) {\n            puVar3 = sub.MSVCRT.dll_malloc(iVar2 + 1);\n            if (puVar3 != NULL) {\n                iVar4 = (*_sym.imp.KERNEL32.DLL_WideCharToMultiByte)(0xfde9, 0, param_1, iVar4, puVar3, iVar2, 0, 0);\n                puVar3[iVar4] = 0;\n                return puVar3;\n            }\n        }\n    }\n    puVar3 = sub.MSVCRT.dll_malloc(1);\n    *puVar3 = 0;\n    return puVar3;\n}\n",
        "token_count": 323
    },
    "00408dc7": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint fcn.00408dc7(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.00409471();\n    fcn.00409528(1);\n    uVar1 = (*_sym.imp.USER32.DLL_MessageBoxW)(uVar1, param_1, unaff_retaddr, param_2);\n    fcn.00409528(0);\n    return uVar1;\n}\n",
        "token_count": 107
    },
    "0040b2b1": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid fcn.0040b2b1(uint *param_1, uint param_2)\n\n{\n    param_1[6] = 0;\n    param_1[5] = 0;\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    param_1[4] = 0xc3d2e1f0;\n    param_1[0x17] = param_2;\n    return;\n}\n",
        "token_count": 141
    },
    "0040c810": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data with MD5"
        ],
        "decompiled_code": "\nvoid fcn.0040c810(uint *param_1)\n\n{\n    param_1[5] = 0;\n    param_1[4] = 0;\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    return;\n}\n",
        "token_count": 101
    },
    "0040d4cc": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * fcn.0040d4cc(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EDI;\n    uint unaff_retaddr;\n    \n    puVar1 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 8);\n    puVar1[4] = 0;\n    *puVar1 = 0x38;\n    puVar1[5] = unaff_retaddr;\n    puVar1[1] = unaff_EDI;\n    puVar1[2] = unaff_EDI;\n    uVar2 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 8, unaff_EDI << 2);\n    puVar1[3] = uVar2;\n    (*_sym.imp.KERNEL32.DLL_InitializeCriticalSection)(puVar1 + 8);\n    return puVar1;\n}\n",
        "token_count": 205
    },
    "00405ac0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00405ac0(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    ushort *arg_8h;\n    uint32_t uVar2;\n    uint32_t arg_8h_00;\n    int32_t unaff_ESI;\n    \n    uVar1 = fcn.00405d80(param_1);\n    uVar2 = (param_1 < 0) - 1 & param_1;\n    arg_8h_00 = uVar1;\n    if (uVar2 < uVar1) {\n        arg_8h_00 = uVar2;\n    }\n    fcn.0040e180(param_1);\n    arg_8h = fcn.0040e200(arg_8h_00, param_1);\n    if (unaff_ESI != 0) {\n        param_1 = fcn.0040e2d0(unaff_ESI);\n    }\n    if (param_1 != 0) {\n        fcn.0040e300(arg_8h, param_1 + (uVar1 - arg_8h_00) * 2, arg_8h_00);\n        return;\n    }\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 276
    },
    "00405ec0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00405ec0(uint32_t param_1)\n\n{\n    uint32_t arg_8h;\n    int32_t arg_8h_00;\n    ushort *arg_8h_01;\n    uint32_t uVar1;\n    \n    arg_8h = fcn.00405d80(param_1);\n    uVar1 = (param_1 < 0) - 1 & param_1;\n    if (uVar1 < arg_8h) {\n        arg_8h = uVar1;\n    }\n    arg_8h_00 = fcn.0040e180(param_1);\n    arg_8h_01 = fcn.0040e200(arg_8h, param_1);\n    if (arg_8h_00 != 0) {\n        param_1 = fcn.0040e2d0(arg_8h_00);\n    }\n    if ((param_1 != 0) && (0 < arg_8h)) {\n        fcn.0040e300(arg_8h_01, param_1, arg_8h);\n        return;\n    }\n    *arg_8h_01 = 0;\n    return;\n}\n",
        "token_count": 264
    },
    "004053c7": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool fcn.004053c7(uint param_1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    iVar1 = fcn.004053ea(param_1);\n    if (iVar1 == 0) {\n        bVar2 = false;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_WaitForSingleObject)(iVar1, 0);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 110
    },
    "004053ea": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint fcn.004053ea(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    uVar3 = 0;\n    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(0x4176a0);\n    puVar1 = *0x4170bc;\n    do {\n        if (puVar1 == NULL) {\ncode_r0x00405427:\n            (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(0x4176a0);\n            return uVar3;\n        }\n        if (puVar1[3] == unaff_retaddr) {\n            iVar2 = (*_sym.imp.KERNEL32.DLL_WaitForSingleObject)(puVar1[2], 0);\n            if (iVar2 != 0) {\n                uVar3 = puVar1[2];\n            }\n            goto code_r0x00405427;\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 227
    },
    "00405492": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nint32_t fcn.00405492(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uchar auStack4 [4];\n    \n    iVar5 = 0;\n    iVar3 = (*_sym.imp.KERNEL32.DLL_CreateThread)(0, 0x1000, param_1, param_2, 0, auStack4);\n    if (iVar3 != 0) {\n        (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(0x4176a0);\n        iVar5 = *0x416110;\n        puVar2 = *0x4170bc;\n        while (puVar2 != NULL) {\n            puVar1 = puVar2 + 2;\n            *0x416110 = iVar5;\n            iVar5 = (*_sym.imp.KERNEL32.DLL_WaitForSingleObject)(*puVar1, 0);\n            if (iVar5 == 0) {\n                (*_sym.imp.KERNEL32.DLL_CloseHandle)(*puVar1);\n                puVar2 = *puVar2;\n                fcn.0040dad2(0x4170bc, puVar1);\n                iVar5 = *0x416110;\n            }\n            else {\n                puVar2 = *puVar2;\n                iVar5 = *0x416110;\n            }\n        }\n        *0x416110 = iVar5 + 1;\n        piVar4 = fcn.0040db12(0x4170bc, 0x10);\n        *piVar4 = iVar3;\n        piVar4[1] = iVar5;\n        (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(0x4176a0);\n    }\n    return iVar5;\n}\n",
        "token_count": 404
    },
    "0040dad2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040dad2(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    \n    ppiVar1 = param_2 + -8;\n    if (*param_1 == ppiVar1) {\n        *param_1 = *ppiVar1;\n        if (*ppiVar1 != NULL) {\n            (*ppiVar1)[1] = 0;\n        }\n    }\n    else {\n        **(param_2 + -4) = *ppiVar1;\n        if (*ppiVar1 != NULL) {\n            (*ppiVar1)[1] = *(param_2 + -4);\n        }\n    }\n    (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, ppiVar1);\n    return;\n}\n",
        "token_count": 179
    },
    "0040d1c0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0040d1c0(int32_t *param_1, uint param_2)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    if (param_1 != NULL) {\n        iVar4 = (*param_1 >> 0x1f & 7U) + *param_1 >> 3;\n    }\n    piVar1 = fcn.0040e200(iVar4 * 2, param_2);\n    if (0 < iVar4) {\n        piVar2 = piVar1;\n        piVar3 = param_1 + 1;\n        do {\n            piVar1 = piVar2 + 2;\n            *piVar2 = \"0123456789abcdefK\"[*piVar3 >> 4];\n            piVar2[1] = \"0123456789abcdefK\"[*piVar3 & 0xf];\n            iVar4 = iVar4 + -1;\n            piVar2 = piVar1;\n            piVar3 = piVar3 + 1;\n        } while (iVar4 != 0);\n    }\n    *piVar1 = 0;\n    return;\n}\n",
        "token_count": 278
    },
    "0040a6e5": {
        "rules": [
            "set file attributes"
        ],
        "decompiled_code": "\nvoid fcn.0040a6e5(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x0040a6ed. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.DLL_SetFileAttributesW)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00405379": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405379(void)\n\n{\n    uint *puVar1;\n    \n    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(0x4176a0);\n    while (*0x4170bc != 0) {\n        puVar1 = *0x4170bc + 8;\n        (*_sym.imp.KERNEL32.DLL_CloseHandle)(*puVar1);\n        fcn.0040dad2(0x4170bc, puVar1);\n    }\n    (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(0x4176a0);\n    return;\n}\n",
        "token_count": 130
    },
    "00405e50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405e50(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    uint arg_8h;\n    int32_t arg_8h_00;\n    ushort *puVar2;\n    int16_t *piVar3;\n    uint unaff_retaddr;\n    \n    arg_8h = fcn.00405d80(param_1);\n    arg_8h_00 = fcn.0040e180(param_1);\n    puVar2 = fcn.0040e200(arg_8h, unaff_retaddr);\n    if (arg_8h_00 != 0) {\n        param_1 = fcn.0040e2d0(arg_8h_00);\n    }\n    if (param_1 != NULL) {\n        piVar3 = param_1;\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n            *(puVar2 + (-2 - param_1) + piVar3) = iVar1;\n        } while (iVar1 != 0);\n        (*_sym.imp.USER32.DLL_CharUpperW)(puVar2);\n        return;\n    }\n    *puVar2 = 0;\n    return;\n}\n",
        "token_count": 272
    },
    "00409e6f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00409e6f(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    code *pcVar3;\n    \n    if (param_1 != 0) {\n        fcn.0040a0ba(param_1);\n        fcn.0040d8e6(*(param_1 + 0x38));\n        pcVar3 = _sym.imp.KERNEL32.DLL_HeapFree;\n        (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, *(param_1 + 4));\n        (*pcVar3)(*0x417008, 0, *(param_1 + 0xc));\n        puVar2 = *(param_1 + 0x34);\n        while (puVar2 != NULL) {\n            puVar1 = *puVar2;\n            (*pcVar3)(*0x417008, 0, puVar2);\n            puVar2 = puVar1;\n        }\n        **(param_1 + 0x30) = 0;\n        (*pcVar3)(*0x417008, 0, param_1);\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "0040a436": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040a436(uint *param_1)\n\n{\n    int32_t arg_ch;\n    uint *puVar1;\n    uint *puVar2;\n    \n    arg_ch = param_1[6];\n    puVar2 = *param_1;\n    if (arg_ch == 0) {\n        while (puVar2 != NULL) {\n            puVar2 = *puVar2;\n            fcn.0040d6eb();\n        }\n    }\n    else {\n        while (puVar2 != NULL) {\n            puVar1 = *puVar2;\n            fcn.00411a6a(puVar2 + 2, arg_ch);\n            fcn.0040d6eb();\n            puVar2 = puVar1;\n        }\n    }\n    param_1[2] = 0;\n    *param_1[3] = 0;\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[4] = 0;\n    *(param_1 + 0xc) = 1;\n    return;\n}\n",
        "token_count": 240
    },
    "0040a604": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a604(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            fcn.0040a436(arg_ch);\n        }\n        for (arg_8h = *arg_8h; arg_8h != NULL; arg_8h = *arg_8h) {\n            fcn.0040a494(arg_ch);\n            fcn.00411794();\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "0040cfed": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040cfed(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0040d020": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d020(int32_t param_1, uint param_2, uint param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    iVar2 = fcn.0040d110(param_2);\n    if (iVar2 != 0) {\n        if (param_1 == 0) {\n            param_1 = 0x412024;\n        }\n        iVar5 = (**(iVar2 + 4))(param_2, 1);\n        if (iVar5 != 0) {\n            pcVar3 = fcn.00411e80(param_1);\n            pcVar4 = pcVar3;\n            do {\n                cVar1 = *pcVar4;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar1 != '\\0');\n            (**(iVar2 + 8))(iVar5, pcVar3, pcVar4 - (pcVar3 + 1));\n            (**(iVar2 + 0xc))(iVar5);\n            fcn.00411e70(pcVar3);\n        }\n    }\n    fcn.0040d1c0(iVar5, param_3);\n    if (iVar5 != 0) {\n        (**(iVar2 + 0x10))(iVar5);\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "0040d67d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d67d(uint *param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    if (param_1[7] != 0) {\n        (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(param_1 + 8);\n    }\n    puVar2 = param_1[1];\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, puVar2);\n        puVar2 = puVar1;\n    }\n    puVar2 = *param_1;\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, puVar2);\n        puVar2 = puVar1;\n    }\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[3] = 0;\n    if (param_1[7] != 0) {\n        (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(param_1 + 8);\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "00411ce4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00411ce4(int32_t *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    (*_sym.imp.KERNEL32.DLL_UnregisterWait)(param_1[3]);\n    (*_sym.imp.KERNEL32.DLL_CloseHandle)(param_1[4]);\n    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(0x417680);\n    iVar2 = param_1[1];\n    if (*param_1 != 0) {\n        *(*param_1 + 4) = param_1[1];\n        iVar2 = *0x41767c;\n    }\n    *0x41767c = iVar2;\n    if (param_1[1] != NULL) {\n        *param_1[1] = *param_1;\n    }\n    (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(0x417680);\n    puVar3 = param_1[2];\n    while (puVar3 != NULL) {\n        puVar1 = *puVar3;\n        (*puVar3[1])(puVar3[2]);\n        (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, puVar3);\n        puVar3 = puVar1;\n    }\n    (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417008, 0, param_1);\n    return;\n}\n",
        "token_count": 318
    },
    "0040a6f6": {
        "rules": [
            "get common file path",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0040a6f6(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    \n    iVar1 = fcn.0040e200(0x104, param_1);\n    iVar2 = (*_sym.imp.KERNEL32.DLL_GetTempPathW)(0x104, iVar1);\n    iVar3 = (*_sym.imp.KERNEL32.DLL_LoadLibraryW)(L\"Kernel32.DLL\");\n    if (iVar3 != 0) {\n        pcVar4 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar3, \"GetLongPathNameW\");\n        if (pcVar4 != NULL) {\n            iVar2 = (*pcVar4)(iVar1, iVar1, 0x104);\n        }\n        (*_sym.imp.KERNEL32.DLL_FreeLibrary)(iVar3);\n    }\n    fcn.0040e350(0x104 - iVar2);\n    *(iVar1 + iVar2 * 2) = 0;\n    return;\n}\n",
        "token_count": 237
    },
    "0040a795": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0040a795(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0040e200(0x104, param_1);\n    iVar2 = (*_sym.imp.KERNEL32.DLL_GetCurrentDirectoryW)(0x104, iVar1);\n    if (iVar2 != 0) {\n        if (*(iVar1 + -2 + iVar2 * 2) != 0x5c) {\n            *(iVar1 + iVar2 * 2) = 0x5c;\n            iVar2 = iVar2 + 1;\n        }\n    }\n    fcn.0040e350(0x104 - iVar2);\n    *(iVar1 + iVar2 * 2) = 0;\n    return;\n}\n",
        "token_count": 175
    },
    "0040a90c": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a90c(uint nFolder, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint ppidl;\n    \n    iVar2 = 0;\n    iVar1 = (*_sym.imp.SHELL32.DLL_SHGetFolderLocation)(0, nFolder, 0, 0, &ppidl);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.SHELL32.DLL_SHGetPathFromIDListW)(ppidl, arg_ch);\n        if (iVar1 != 0) {\n            iVar2 = sub.MSVCRT.dll_wcslen(arg_ch);\n            if (iVar2 != 0) {\n                if (*(arg_ch + -2 + iVar2 * 2) != 0x5c) {\n                    *(arg_ch + iVar2 * 2) = 0x5c;\n                    iVar2 = iVar2 + 1;\n                }\n            }\n        }\n        (*_sym.imp.OLE32.DLL_CoTaskMemFree)(ppidl);\n    }\n    *(arg_ch + iVar2 * 2) = 0;\n    return iVar2;\n}\n",
        "token_count": 258
    },
    "00405170": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00405170(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    \n    puVar1 = sub.KERNEL32.DLL_TlsGetValue(*0x416170, param_1, param_2);\n    return CONCAT44(param_1, *puVar1);\n}\n",
        "token_count": 71
    },
    "00405182": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nulong fcn.00405182(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = *0x416170;\n    puVar2 = sub.KERNEL32.DLL_TlsGetValue();\n    return CONCAT44(*puVar2, uVar1);\n}\n",
        "token_count": 65
    },
    "0040de20": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint fcn.0040de20(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint dwErrCode;\n    uint var_4h;\n    \n    uVar2 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n    iVar3 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170);\n    uVar1 = *(iVar3 + 8);\n    (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar2);\n    return uVar1;\n}\n",
        "token_count": 125
    },
    "0040e2a0": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e2a0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint var_4h;\n    \n    piVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170);\n    piVar1[2] = arg_8h;\n    *(*piVar1 + arg_8h) = 0;\n    return;\n}\n",
        "token_count": 94
    },
    "0040e2d0": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e2d0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint var_4h;\n    \n    piVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170);\n    return *piVar1 + -1 + arg_8h;\n}\n",
        "token_count": 80
    },
    "0040e660": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040e660(uint param_1)\n\n{\n    uint *puVar1;\n    uint var_4h;\n    \n    puVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170, param_1);\n    (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417720, 0, *puVar1);\n    (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x417720, 0, puVar1);\n    return;\n}\n",
        "token_count": 132
    },
    "0040e6e0": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: dwErrCode\n\nvoid __cdecl fcn.0040e6e0(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint dwErrCode;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n    iVar2 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*0x416170, uVar1);\n    *(iVar2 + 8) = arg_8h;\n    (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n    return;\n}\n",
        "token_count": 140
    },
    "00408e54": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408e54(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if (arg_ch == 2) {\n        (*_sym.imp.USER32.DLL_UnregisterClassW)(*0x416114, *0x41700c);\n        *0x4170c8 = 1;\n        return 0;\n    }\n    if (arg_ch != 0x10) {\n        if (arg_ch != 0x111) {\n    // WARNING: Could not recover jumptable at 0x00408e6f. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar1 = (*_sym.imp.USER32.DLL_DefWindowProcW)();\n            return uVar1;\n        }\n        if (arg_10h == 1000) {\n            puVar2 = (*_sym.imp.USER32.DLL_GetWindowLongW)(arg_8h, 0xffffffeb);\n            iVar3 = (*_sym.imp.USER32.DLL_GetWindowTextLengthW)(*0x4170d0);\n            uVar4 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417008, 0, (iVar3 + 1) * 2);\n            uVar1 = *0x4170d0;\n            *puVar2 = uVar4;\n            (*_sym.imp.USER32.DLL_GetWindowTextW)(uVar1, uVar4, iVar3 + 1);\n            fcn.00409292();\n            (*_sym.imp.USER32.DLL_DestroyWindow)(arg_8h);\n            return 0;\n        }\n        if (arg_10h != 0x3e9) {\n            return 0;\n        }\n    }\n    fcn.00409292();\n    (*_sym.imp.USER32.DLL_DestroyWindow)(arg_8h);\n    return 0;\n}\n",
        "token_count": 437
    },
    "0040e600": {
        "rules": [
            "set thread local storage value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpTlsValue\n\nvoid __fastcall fcn.0040e600(uint param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint lpTlsValue;\n    \n    puVar1 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417720, 0, 0xc, param_1);\n    uVar2 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x417720, 0, 0x10);\n    *puVar1 = uVar2;\n    puVar1[1] = 0x10;\n    puVar1[2] = 0;\n    (*_sym.imp.KERNEL32.DLL_TlsSetValue)(*0x416170, puVar1);\n    return;\n}\n",
        "token_count": 180
    },
    "0040ddd0": {
        "rules": [
            "allocate thread local storage"
        ],
        "decompiled_code": "\nvoid fcn.0040ddd0(void)\n\n{\n    *0x417720 = (*_sym.imp.KERNEL32.DLL_HeapCreate)(0, 0x1000, 0);\n    *0x416170 = (*_sym.imp.KERNEL32.DLL_TlsAlloc)();\n    fcn.0040e600();\n    return;\n}\n",
        "token_count": 76
    }
}