{
    "null": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hDllHandle\n\ncode ** dbg._CRT_INIT(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    code **ppcVar4;\n    code **ret;\n    code *dwReason;\n    code **ExChange;\n    ulong onexitbegin;\n    ulong lpreserved;\n    int64_t in_GS_OFFSET;\n    bool bVar5;\n    ulong hDllHandle;\n    \n    // WINBOOL _CRT_INIT(HANDLE hDllHandle,DWORD dwReason,LPVOID lpreserved);\n    pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n    if (dwReason == 0) {\n        if (*0x67b31000 < 1) {\n            ret = NULL;\n        }\n        else {\n            ret._0_4_ = *0x67b31000 + -1;\n            *0x67b31000 = ret;\n            while( true ) {\n                LOCK();\n                bVar5 = *0x67b31a58 == 0;\n                *0x67b31a58 = *0x67b31a58 ^ bVar5 * (*0x67b31a58 ^ 1);\n                if (!bVar5 * *0x67b31a58 == 0) break;\n                (*pcVar3)(1000);\n            }\n            if (*0x67b31a50 == 2) {\n                ret = dbg._decode_pointer(*0x67b31a40);\n                ppcVar4 = ret;\n                if (ret != NULL) {\n                    ret = dbg._decode_pointer(*0x67b31a48);\n                    ExChange = ret;\n                    while (ExChange = ExChange + -1,  ppcVar4 <= ExChange) {\n                        while (dwReason = *ExChange,  dwReason != NULL) {\n                            ExChange = ExChange + -1;\n                            (*dwReason)();\n                            if (ExChange < ppcVar4) goto code_r0x67b011cf;\n                        }\n                    }\ncode_r0x67b011cf:\n                    sym.free(ppcVar4);\n                    *0x67b31a48 = 0;\n                    *0x67b31a40 = 0;\n                }\n                ret = 0x1;\n                *0x67b31a50 = 0;\n                *0x67b31a58 = 0;\n                return ret;\n            }\n            sym._amsg_exit(0x1f);\n            ret = 0x1;\n        }\n    }\n    else {\n        ret = 0x1;\n        if (dwReason == 1) {\n            uVar1 = *(*(in_GS_OFFSET + 0x30) + 8);\n            do {\n                LOCK();\n                bVar5 = *0x67b31a58 == 0;\n                *0x67b31a58 = *0x67b31a58 ^ bVar5 * (*0x67b31a58 ^ uVar1);\n                uVar2 = !bVar5 * *0x67b31a58;\n                if (uVar2 == 0) {\n                    bVar5 = false;\ncode_r0x67b01116:\n                    if (*0x67b31a50 == 1) {\n                        sym._amsg_exit(0x1f);\n                    }\n                    else if (*0x67b31a50 == 0) {\n                        dwReason = 0x67b35020;\n                        *0x67b31a50 = 1;\n                        sym._initterm(0x67b35010, 0x67b35020);\n                    }\n                    if (*0x67b31a50 == 1) {\n                        dwReason = 0x67b35008;\n                        sym._initterm(0x67b35000, 0x67b35008);\n                        *0x67b31a50 = 2;\n                    }\n                    if (!bVar5) {\n                        *0x67b31a58 = 0;\n                    }\n                    if (*0x67b2bd40 != NULL) {\n                        dwReason = 0x2;\n                        (**0x67b2bd40)(arg1, 2, arg3);\n                    }\n                    *0x67b31000 = *0x67b31000 + 1;\n                    ret = 0x1;\n                    return ret;\n                }\n                if (uVar1 == uVar2) {\n                    bVar5 = true;\n                    goto code_r0x67b01116;\n                }\n                (*pcVar3)(1000);\n            } while( true );\n        }\n    }\n    return ret;\n}\n",
        "token_count": 1030
    },
    "67b0c8a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.67b0c8a0(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong *puVar2;\n    ulong auStackX8 [4];\n    uint64_t uStack16;\n    \n    puVar2 = auStackX8;\n    uVar1 = in_RAX;\n    if (0xfff < in_RAX) {\n        do {\n            puVar2 = puVar2 + -0x200;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack16 = in_RAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack16;\n}\n",
        "token_count": 185
    }
}