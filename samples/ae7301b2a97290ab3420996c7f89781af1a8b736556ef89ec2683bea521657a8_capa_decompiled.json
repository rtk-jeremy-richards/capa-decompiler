{
    "null": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00421f90) overlaps instruction at (ram,0x00421f8f)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Heritage AFTER dead removal. Example location: s0xffffffdc : 0x00421f10\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl\nentry0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n      uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13, \n      uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, uint noname_20, \n      uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, uint noname_26, uint noname_27, \n      uint noname_28, uint noname_29, uint noname_30, uint noname_31, uint noname_32, uint noname_33, uint noname_34, \n      uint noname_35, uint noname_36, uint noname_37, uint noname_38, uint noname_39, uint noname_40, uint noname_41, \n      uint noname_42, uint noname_43, uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, \n      uint noname_49, uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n      uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, uint noname_62, \n      uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint noname_67, uint noname_68, uint noname_69, \n      uint noname_70, uint noname_71, uint noname_72, uint noname_73, uint noname_74, uint noname_75, uint noname_76, \n      uint noname_77, uint noname_78, uint noname_79, uint noname_80, uint noname_81, uint noname_82, uint noname_83, \n      uint noname_84, uint noname_85, uint noname_86, uint noname_87, uint noname_88, uint noname_89, uint noname_90, \n      uint noname_91, uint noname_92, uint noname_93, uint arg_180h, uint noname_95, uint noname_96, uint noname_97, \n      uint noname_98, uint noname_99, uint arg_198h, uint noname_101, uint noname_102, uint noname_103, uint noname_104\n      , uint noname_105, uint arg_1b0h, uint noname_107, uint noname_108, uint noname_109, uint noname_110, \n      uint noname_111, uint arg_1c8h, uint noname_113, uint noname_114, uint noname_115, uint noname_116, \n      uint noname_117, uint arg_1e0h)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    code *pcVar4;\n    uint8_t uVar5;\n    ushort *puVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint8_t *puVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint8_t *puVar12;\n    int32_t *piVar13;\n    int32_t iVar14;\n    uchar *puVar15;\n    uchar *puVar17;\n    uint *puVar19;\n    uint *puVar20;\n    uint *puVar21;\n    uint *puVar22;\n    uchar *puVar23;\n    uint16_t *puVar24;\n    uint32_t uVar25;\n    uint8_t **ppuVar26;\n    uint8_t **ppuVar27;\n    uint8_t **ppuVar28;\n    int32_t iVar29;\n    uint8_t in_AF;\n    uint var_1h;\n    uchar auStack16036 [12];\n    uint16_t auStack16024 [192];\n    uint16_t auStack15640 [12];\n    uint16_t auStack15616 [12];\n    uint16_t auStack15592 [12];\n    uint16_t auStack15568 [12];\n    uint16_t auStack15544 [192];\n    uint16_t auStack15160 [370];\n    ushort auStack14420 [16];\n    uint16_t auStack14388 [514];\n    uint16_t auStack13360 [514];\n    uint16_t auStack12332 [256];\n    uint16_t auStack11820 [5746];\n    uchar auStack328 [116];\n    uint32_t uStack212;\n    ushort *puStack208;\n    uint16_t *puStack196;\n    uint32_t uStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    int32_t iStack172;\n    int32_t iStack168;\n    int32_t iStack164;\n    uint32_t uStack148;\n    uint32_t uStack140;\n    uint32_t uStack132;\n    uint32_t uStack128;\n    uint32_t uStack124;\n    uint32_t uStack120;\n    uint32_t uStack116;\n    uint8_t uStack97;\n    uint32_t uStack96;\n    uint8_t *puStack64;\n    uint uStack40;\n    uint8_t **ppuStack36;\n    uchar *puVar16;\n    uint *puVar18;\n    \n    do {\n    } while (&stack0xffffffdc != &stack0xffffc15c);\n    puStack64 = 0x415002;\n    uStack96 = 0;\n    uStack97 = 0;\n    uStack116 = 0;\n    uStack120 = 1;\n    uStack124 = 1;\n    uStack128 = 1;\n    uStack132 = 1;\n    iVar10 = 0x1f36;\n    puVar6 = &stack0xffffc168;\n    do {\n        *puVar6 = 0x400;\n        puVar6 = puVar6 + 1;\n        iVar10 = iVar10 + -1;\n    } while (iVar10 != 0);\n    uVar25 = 0;\n    uStack140 = 0xffffffff;\n    iVar10 = 0;\n    do {\n        if (puStack64 == 0x421429) goto code_r0x00421eef;\n        uVar5 = *puStack64;\n        iVar10 = iVar10 + 1;\n        puStack64 = puStack64 + 1;\n        uVar25 = uVar25 << 8 | uVar5;\n    } while (iVar10 < 5);\ncode_r0x0042156c:\n    uVar11 = uStack132;\n    puVar24 = &stack0xffffc168 + uStack116 * 0x10 * 2;\n    if (uStack140 < 0x1000000) {\n        if (puStack64 == 0x421429) goto code_r0x00421eef;\n        uStack140 = uStack140 << 8;\n        uVar5 = *puStack64;\n        puStack64 = puStack64 + 1;\n        uVar25 = uVar25 << 8 | uVar5;\n    }\n    uVar3 = *puVar24;\n    uVar7 = (uStack140 >> 0xb) * uVar3;\n    if (uVar25 < uVar7) {\n        iVar10 = 1;\n        *puVar24 = uVar3 + (0x800 - uVar3 >> 5);\n        iVar14 = (uStack97 >> 5) * 0x600 + -0x302c;\n        uStack140 = uVar7;\n        if (uStack116 < 7) goto code_r0x004216e7;\n        uStack148 = *((uStack96 - uStack120) + 0x401000);\n        do {\n            uStack148 = uStack148 << 1;\n            iVar10 = iVar10 * 2;\n            uVar11 = uStack148 & 0x100;\n            iVar29 = iVar10 + uVar11 * 2 + iVar14;\n            if (uStack140 < 0x1000000) {\n                if (puStack64 == 0x421429) goto code_r0x00421eef;\n                uStack140 = uStack140 << 8;\n                uVar5 = *puStack64;\n                puStack64 = puStack64 + 1;\n                uVar25 = uVar25 << 8 | uVar5;\n            }\n            uVar3 = *(&stack0xffffd1d4 + iVar29 + 0x302c);\n            uVar7 = (uStack140 >> 0xb) * uVar3;\n            if (uVar25 < uVar7) {\n                *(&stack0xffffd1d4 + iVar29 + 0x302c) = uVar3 + (0x800 - uVar3 >> 5);\n                uStack140 = uVar7;\n                if (uVar11 != 0) goto code_r0x004216df;\n            }\n            else {\n                uStack140 = uStack140 - uVar7;\n                uVar25 = uVar25 - uVar7;\n                iVar10 = iVar10 + 1;\n                *(&stack0xffffd1d4 + iVar29 + 0x302c) = uVar3 - (uVar3 >> 5);\n                if (uVar11 == 0) goto code_r0x004216df;\n            }\n        } while (iVar10 < 0x100);\n        goto code_r0x00421758;\n    }\n    uVar25 = uVar25 - uVar7;\n    uStack140 = uStack140 - uVar7;\n    *puVar24 = uVar3 - (uVar3 >> 5);\n    iVar10 = uStack116 * 2;\n    if (uStack140 < 0x1000000) {\n        if (puStack64 == 0x421429) goto code_r0x00421eef;\n        uVar5 = *puStack64;\n        uStack140 = uStack140 * 0x100;\n        puStack64 = puStack64 + 1;\n        uVar25 = uVar25 * 0x100 | uVar5;\n    }\n    uVar3 = *(&stack0xffffc2e8 + iVar10);\n    uVar7 = (uStack140 >> 0xb) * uVar3;\n    if (uVar25 < uVar7) {\n        uStack132 = uStack128;\n        *(&stack0xffffc2e8 + iVar10) = uVar3 + (0x800 - uVar3 >> 5);\n        uStack128 = uStack124;\n        uStack124 = uStack120;\n        puStack196 = &stack0xffffc7cc;\n        uStack116 = (6 < uStack116) * 3;\ncode_r0x00421ac3:\n        if (uVar7 < 0x1000000) {\n            if (puStack64 == 0x421429) goto code_r0x00421eef;\n            uVar5 = *puStack64;\n            uVar7 = uVar7 << 8;\n            puStack64 = puStack64 + 1;\n            uVar25 = uVar25 << 8 | uVar5;\n        }\n        uVar3 = *puStack196;\n        uStack140 = (uVar7 >> 0xb) * uVar3;\n        if (uVar25 < uStack140) {\n            iStack168 = 0;\n            *puStack196 = uVar3 + (0x800 - uVar3 >> 5);\n            puStack196 = puStack196 + 2;\ncode_r0x00421b94:\n            iStack164 = 3;\n        }\n        else {\n            uVar7 = uVar7 - uStack140;\n            uVar25 = uVar25 - uStack140;\n            *puStack196 = uVar3 - (uVar3 >> 5);\n            if (uVar7 < 0x1000000) {\n                if (puStack64 == 0x421429) goto code_r0x00421eef;\n                uVar5 = *puStack64;\n                uVar7 = uVar7 * 0x100;\n                puStack64 = puStack64 + 1;\n                uVar25 = uVar25 * 0x100 | uVar5;\n            }\n            uVar3 = puStack196[1];\n            uVar11 = (uVar7 >> 0xb) * uVar3;\n            if (uVar25 < uVar11) {\n                iStack168 = 8;\n                puStack196[1] = uVar3 + (0x800 - uVar3 >> 5);\n                puStack196 = puStack196 + 0x82;\n                uStack140 = uVar11;\n                goto code_r0x00421b94;\n            }\n            uStack140 = uVar7 - uVar11;\n            uVar25 = uVar25 - uVar11;\n            iStack168 = 0x10;\n            iStack164 = 8;\n            puStack196[1] = uVar3 - (uVar3 >> 5);\n            puStack196 = puStack196 + 0x102;\n        }\n        iStack172 = iStack164;\n        iVar10 = 1;\n        do {\n            iVar14 = iVar10 * 2;\n            puVar24 = puStack196 + iVar10;\n            if (uStack140 < 0x1000000) {\n                if (puStack64 == 0x421429) goto code_r0x00421eef;\n                uStack140 = uStack140 << 8;\n                uVar5 = *puStack64;\n                puStack64 = puStack64 + 1;\n                uVar25 = uVar25 << 8 | uVar5;\n            }\n            uVar3 = *puVar24;\n            uVar11 = (uStack140 >> 0xb) * uVar3;\n            if (uVar25 < uVar11) {\n                *puVar24 = uVar3 + (0x800 - uVar3 >> 5);\n                uStack140 = uVar11;\n            }\n            else {\n                uStack140 = uStack140 - uVar11;\n                uVar25 = uVar25 - uVar11;\n                *puVar24 = uVar3 - (uVar3 >> 5);\n                iVar14 = iVar14 + 1;\n            }\n            iStack172 = iStack172 + -1;\n            iVar10 = iVar14;\n        } while (iStack172 != 0);\n        iStack168 = (iVar14 - (1 << iStack164)) + iStack168;\n        if (uStack116 < 4) {\n            uStack116 = uStack116 + 7;\n            iVar10 = iStack168;\n            if (3 < iStack168) {\n                iVar10 = 3;\n            }\n            iStack176 = 6;\n            iVar14 = 1;\n            do {\n                iVar14 = iVar14 * 2;\n                puVar24 = &stack0xffffc4c8 + iVar14 + iVar10 * 0x80;\n                if (uStack140 < 0x1000000) {\n                    if (puStack64 == 0x421429) goto code_r0x00421eef;\n                    uStack140 = uStack140 << 8;\n                    uVar5 = *puStack64;\n                    puStack64 = puStack64 + 1;\n                    uVar25 = uVar25 << 8 | uVar5;\n                }\n                uVar3 = *puVar24;\n                uVar11 = (uStack140 >> 0xb) * uVar3;\n                if (uVar25 < uVar11) {\n                    *puVar24 = uVar3 + (0x800 - uVar3 >> 5);\n                    uStack140 = uVar11;\n                }\n                else {\n                    uStack140 = uStack140 - uVar11;\n                    uVar25 = uVar25 - uVar11;\n                    iVar14 = iVar14 + 1;\n                    *puVar24 = uVar3 - (uVar3 >> 5);\n                }\n                iStack176 = iStack176 + -1;\n            } while (iStack176 != 0);\n            uVar11 = iVar14 - 0x40;\n            uStack212 = uVar11;\n            if (3 < uVar11) {\n                iStack180 = (uVar11 >> 1) + -1;\n                uStack212 = uVar11 & 1 | 2;\n                if (uVar11 < 0xe) {\n                    uStack212 = uStack212 << (iStack180 & 0x1f);\n                    puStack208 = &stack0xffffc168 + (uStack212 + (0x2af - uVar11)) * 2;\n                }\n                else {\n                    iVar10 = (uVar11 >> 1) + -5;\n                    do {\n                        if (uStack140 < 0x1000000) {\n                            if (puStack64 == 0x421429) goto code_r0x00421eef;\n                            uStack140 = uStack140 << 8;\n                            uVar5 = *puStack64;\n                            puStack64 = puStack64 + 1;\n                            uVar25 = uVar25 << 8 | uVar5;\n                        }\n                        uStack140 = uStack140 >> 1;\n                        uStack212 = uStack212 * 2;\n                        if (uStack140 <= uVar25) {\n                            uVar25 = uVar25 - uStack140;\n                            uStack212 = uStack212 | 1;\n                        }\n                        iVar10 = iVar10 + -1;\n                    } while (iVar10 != 0);\n                    uStack212 = uStack212 << 4;\n                    puStack208 = &stack0xffffc7ac;\n                    iStack180 = 4;\n                }\n                uStack184 = 1;\n                iVar10 = 1;\n                do {\n                    iVar14 = iVar10 * 2;\n                    puVar24 = puStack208 + iVar10;\n                    if (uStack140 < 0x1000000) {\n                        if (puStack64 == 0x421429) goto code_r0x00421eef;\n                        uStack140 = uStack140 << 8;\n                        uVar5 = *puStack64;\n                        puStack64 = puStack64 + 1;\n                        uVar25 = uVar25 << 8 | uVar5;\n                    }\n                    uVar3 = *puVar24;\n                    uVar11 = (uStack140 >> 0xb) * uVar3;\n                    if (uVar25 < uVar11) {\n                        *puVar24 = uVar3 + (0x800 - uVar3 >> 5);\n                        uStack140 = uVar11;\n                    }\n                    else {\n                        uStack140 = uStack140 - uVar11;\n                        uVar25 = uVar25 - uVar11;\n                        *puVar24 = uVar3 - (uVar3 >> 5);\n                        iVar14 = iVar14 + 1;\n                        uStack212 = uStack212 | uStack184;\n                    }\n                    uStack184 = uStack184 << 1;\n                    iStack180 = iStack180 + -1;\n                    iVar10 = iVar14;\n                } while (iStack180 != 0);\n            }\n            uStack120 = uStack212 + 1;\n            if (uStack120 == 0) goto code_r0x00421eef;\n        }\n        iStack168 = iStack168 + 2;\n        if (uStack120 <= uStack96) {\n            puVar12 = uStack96 + 0x401000;\n            puVar9 = (0x401000 - uStack120) + uStack96;\n            while( true ) {\n                uStack97 = *puVar9;\n                puVar9 = puVar9 + 1;\n                *puVar12 = uStack97;\n                puVar12 = puVar12 + 1;\n                uStack96 = uStack96 + 1;\n                iStack168 = iStack168 + -1;\n                if (iStack168 == 0) break;\n                if (0x1fcef < uStack96) goto code_r0x00421eef;\n            }\n            goto code_r0x00421ea0;\n        }\n        goto code_r0x00421eef;\n    }\n    uVar25 = uVar25 - uVar7;\n    uStack140 = uStack140 - uVar7;\n    *(&stack0xffffc2e8 + iVar10) = uVar3 - (uVar3 >> 5);\n    if (uStack140 < 0x1000000) {\n        if (puStack64 == 0x421429) goto code_r0x00421eef;\n        uVar5 = *puStack64;\n        uStack140 = uStack140 * 0x100;\n        puStack64 = puStack64 + 1;\n        uVar25 = uVar25 * 0x100 | uVar5;\n    }\n    uVar3 = *(&stack0xffffc300 + iVar10);\n    uVar7 = (uStack140 >> 0xb) * uVar3;\n    if (uVar7 <= uVar25) {\n        uStack140 = uStack140 - uVar7;\n        uVar25 = uVar25 - uVar7;\n        *(&stack0xffffc300 + iVar10) = uVar3 - (uVar3 >> 5);\n        if (uStack140 < 0x1000000) {\n            if (puStack64 == 0x421429) goto code_r0x00421eef;\n            uVar5 = *puStack64;\n            uStack140 = uStack140 * 0x100;\n            puStack64 = puStack64 + 1;\n            uVar25 = uVar25 * 0x100 | uVar5;\n        }\n        uVar3 = *(&stack0xffffc318 + iVar10);\n        uVar7 = (uStack140 >> 0xb) * uVar3;\n        if (uVar25 < uVar7) {\n            *(&stack0xffffc318 + iVar10) = uVar3 + (0x800 - uVar3 >> 5);\n            uVar11 = uStack124;\n        }\n        else {\n            uVar25 = uVar25 - uVar7;\n            uStack140 = uStack140 - uVar7;\n            *(&stack0xffffc318 + iVar10) = uVar3 - (uVar3 >> 5);\n            if (uStack140 < 0x1000000) {\n                if (puStack64 == 0x421429) goto code_r0x00421eef;\n                uVar5 = *puStack64;\n                uStack140 = uStack140 * 0x100;\n                puStack64 = puStack64 + 1;\n                uVar25 = uVar25 * 0x100 | uVar5;\n            }\n            uVar3 = *(&stack0xffffc330 + iVar10);\n            uVar7 = (uStack140 >> 0xb) * uVar3;\n            if (uVar25 < uVar7) {\n                *(&stack0xffffc330 + iVar10) = uVar3 + (0x800 - uVar3 >> 5);\n                uVar11 = uStack128;\n            }\n            else {\n                uVar25 = uVar25 - uVar7;\n                uVar7 = uStack140 - uVar7;\n                *(&stack0xffffc330 + iVar10) = uVar3 - (uVar3 >> 5);\n                uStack132 = uStack128;\n            }\n            uStack128 = uStack124;\n        }\n        uStack124 = uStack120;\n        uStack120 = uVar11;\ncode_r0x00421aa7:\n        puStack196 = &stack0xffffcbd0;\n        uStack116 = (6 < uStack116) * 3 + 8;\n        goto code_r0x00421ac3;\n    }\n    *(&stack0xffffc300 + iVar10) = uVar3 + (0x800 - uVar3 >> 5);\n    iVar10 = uStack116 * 0x20;\n    if (uVar7 < 0x1000000) {\n        if (puStack64 == 0x421429) goto code_r0x00421eef;\n        uVar5 = *puStack64;\n        uVar7 = uVar7 * 0x100;\n        puStack64 = puStack64 + 1;\n        uVar25 = uVar25 << 8 | uVar5;\n    }\n    uVar3 = *(&stack0xffffc348 + iVar10);\n    uStack140 = (uVar7 >> 0xb) * uVar3;\n    if (uStack140 <= uVar25) {\n        uVar7 = uVar7 - uStack140;\n        uVar25 = uVar25 - uStack140;\n        *(&stack0xffffc348 + iVar10) = uVar3 - (uVar3 >> 5);\n        goto code_r0x00421aa7;\n    }\n    *(&stack0xffffc348 + iVar10) = uVar3 + (0x800 - uVar3 >> 5);\n    if (uStack96 == 0) goto code_r0x00421eef;\n    uStack116 = (6 < uStack116) * 2 + 9;\n    uStack97 = *((uStack96 - uStack120) + 0x401000);\n    *(uStack96 + 0x401000) = uStack97;\n    uStack96 = uStack96 + 1;\ncode_r0x00421ea0:\n    if (0x1fcef < uStack96) {\ncode_r0x00421eef:\n        puVar15 = &stack0xffffffdc;\n        do {\n            puVar16 = puVar15 + -4;\n            *(puVar15 + -4) = 0;\n            puVar15 = puVar15 + -4;\n        } while (puVar16 != &stack0xfffffeb8);\n        puVar17 = &stack0xffffffe0;\n        iVar10 = 0x15400;\n        ppuVar26 = ppuStack36;\n        do {\n            uVar5 = *ppuVar26;\n            ppuVar26 = ppuVar26 + 1;\n            iVar10 = iVar10 + -5;\n            iVar14 = iVar10;\n            ppuVar28 = ppuVar26;\n            if (iVar10 != 0) goto code_r0x00421f2d;\ncode_r0x00421f56:\n            do {\n                iVar10 = iVar14 + -1;\n                if (iVar10 == 0 || iVar14 < 1) {\n                    ppuVar26 = ppuStack36 + 0x7c00;\n                    goto code_r0x00421f61;\n                }\n                uVar5 = *ppuVar28;\n                ppuVar26 = ppuVar28 + 1;\n                if (((uVar5 < 0x80) || (0x8f < uVar5)) || (*(ppuVar28 + -1) != 0xf)) {\ncode_r0x00421f2d:\n                    iVar14 = iVar10;\n                    ppuVar28 = ppuVar26;\n                    if (1 < uVar5 + 0x18) goto code_r0x00421f56;\n                }\n                iVar14 = iVar10;\n                ppuVar28 = ppuVar26;\n            } while (*ppuVar26 != 0x12);\n            puVar9 = *ppuVar26;\n            *ppuVar26 = (((CONCAT21(puVar9 >> 8, puVar9 >> 0x10) & 0xffff) << 8 | puVar9 >> 0x18) - ppuVar26) +\n                        ppuStack36;\n            ppuVar26 = ppuVar26 + 1;\n        } while( true );\n    }\n    goto code_r0x0042156c;\ncode_r0x004216df:\n    if (iVar10 < 0x100) {\ncode_r0x004216e7:\n        iVar10 = iVar10 * 2;\n        puVar24 = &stack0xffffcfd4 + iVar10 + iVar14 + 0x302c;\n        if (uStack140 < 0x1000000) {\n            if (puStack64 == 0x421429) goto code_r0x00421eef;\n            uStack140 = uStack140 << 8;\n            uVar5 = *puStack64;\n            puStack64 = puStack64 + 1;\n            uVar25 = uVar25 << 8 | uVar5;\n        }\n        uVar3 = *puVar24;\n        uVar11 = (uStack140 >> 0xb) * uVar3;\n        if (uVar25 < uVar11) {\n            *puVar24 = uVar3 + (0x800 - uVar3 >> 5);\n            uStack140 = uVar11;\n        }\n        else {\n            uVar25 = uVar25 - uVar11;\n            iVar10 = iVar10 + 1;\n            *puVar24 = uVar3 - (uVar3 >> 5);\n            uStack140 = uStack140 - uVar11;\n        }\n        goto code_r0x004216df;\n    }\ncode_r0x00421758:\n    uStack97 = iVar10;\n    *(uStack96 + 0x401000) = uStack97;\n    uStack96 = uStack96 + 1;\n    if (uStack116 < 4) {\n        uStack116 = 0;\n    }\n    else if (uStack116 < 10) {\n        uStack116 = uStack116 - 3;\n    }\n    else {\n        uStack116 = uStack116 - 6;\n    }\n    goto code_r0x00421ea0;\ncode_r0x00421f7e:\n    while( true ) {\n        uVar5 = *ppuVar28;\n        ppuVar26 = ppuVar28 + 1;\n        if (uVar5 != 0) break;\ncode_r0x00421f61:\n        puVar9 = *ppuVar26;\n        if (puVar9 == NULL) {\ncode_r0x00421fac:\n            pcVar4 = ppuStack36[0x8976];\n            *(puVar17 + -4) = puVar9;\n            *(puVar17 + -8) = puVar17 + -4;\n            *(puVar17 + -0xc) = 4;\n            *(puVar17 + -0x10) = 0x1000;\n            *(puVar17 + -0x14) = ppuStack36 + -0x400;\n            puVar21 = puVar17 + -0x18;\n            *(puVar17 + -0x18) = 0x421fc5;\n            (*pcVar4)();\n            *(ppuStack36 + -0xe81) = *(ppuStack36 + -0xe81) & 0x7f;\n            *(ppuStack36 + -0xe59) = *(ppuStack36 + -0xe59) & 0x7f;\n            uVar8 = *puVar21;\n            *puVar21 = uVar8;\n            puVar21[-1] = puVar21;\n            puVar21[-2] = uVar8;\n            puVar21[-3] = 0x1000;\n            puVar21[-4] = ppuStack36 + -0x400;\n            puVar22 = puVar21 + -5;\n            puVar21[-5] = 0x421fda;\n            (*pcVar4)();\n            iVar29 = *(puVar22 + 4);\n            iVar14 = *(puVar22 + 0x14);\n            iVar10 = *(puVar22 + 0x1c);\n            puVar15 = puVar22 + 0x24;\n            do {\n                puVar23 = puVar15;\n                *(puVar23 + -4) = 0;\n                puVar15 = puVar23 + -4;\n            } while (puVar23 + -4 != puVar22 + -0x5c);\n            pcVar1 = iVar29 + -0x22;\n            *pcVar1 = *pcVar1 - (iVar14 + 1 >> 8);\n            uVar5 = iVar29;\n            puVar9 = iVar10 + -0x66;\n            *puVar9 = *puVar9 ^ uVar5 + (9 < (uVar5 & 0xf) | in_AF) * -6 & 0xf;\n            *(iVar14 + 0x7ecce921) = iVar10;\n            *(puVar23 + 0x7c) = 0x73;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        piVar13 = ppuVar26[1] + ppuStack36;\n        *(puVar17 + -4) = puVar9 + 0x2251c + ppuStack36;\n        ppuVar28 = ppuVar26 + 2;\n        pcVar4 = ppuStack36[0x8974];\n        puVar18 = puVar17 + -8;\n        puVar17 = puVar17 + -8;\n        *puVar18 = 0x421f7d;\n        uVar8 = (*pcVar4)();\n    }\n    if (uVar5 < '\\0') {\n        *(puVar17 + -4) = *ppuVar26;\n        ppuVar28 = ppuVar28 + 3;\n    }\n    else {\n        *(puVar17 + -4) = ppuVar26;\n        ppuVar27 = ppuVar26;\n        do {\n            ppuVar28 = ppuVar27;\n            if (ppuVar26 == NULL) break;\n            ppuVar26 = ppuVar26 + -1;\n            ppuVar28 = ppuVar27 + 1;\n            uVar2 = *ppuVar27;\n            ppuVar27 = ppuVar28;\n        } while (uVar5 - 1 != uVar2);\n    }\n    *(puVar17 + -8) = uVar8;\n    pcVar4 = ppuStack36[0x8975];\n    puVar19 = puVar17 + -0xc;\n    puVar17 = puVar17 + -0xc;\n    *puVar19 = 0x421f9b;\n    iVar10 = (*pcVar4)();\n    if (iVar10 == 0) {\n        pcVar4 = ppuStack36[0x8979];\n        puVar20 = puVar17 + -4;\n        puVar17 = puVar17 + -4;\n        *puVar20 = 0x421fac;\n        puVar9 = (*pcVar4)();\n        goto code_r0x00421fac;\n    }\n    *piVar13 = iVar10;\n    piVar13 = piVar13 + 1;\n    goto code_r0x00421f7e;\n}\n",
        "token_count": 8002
    }
}