{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004042d6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004042d6(uint32_t arg_8h)\n\n{\n    fcn.004042b3();\n    if ((arg_8h & 1) != 0) {\n        fcn.004046dd();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0040479e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040479e(uint32_t arg_8h)\n\n{\n    fcn.0040478e();\n    if ((arg_8h & 1) != 0) {\n        fcn.004046dd();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00409717": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00409717(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00406fbd();\n    var_4h = 0;\n    if (*0x7fcd00 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x401b84);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x401b78);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x7fcd00 = fcn.00406f4b(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x401b68);\n        *0x7fcd04 = fcn.00406f4b(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401b54);\n        *0x7fcd08 = fcn.00406f4b(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401b38);\n        *0x7fcd10 = fcn.00406f4b(uVar3);\n        if (*0x7fcd10 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x401b20);\n            *0x7fcd0c = fcn.00406f4b(uVar3);\n        }\n    }\n    if ((*0x7fcd0c != iVar1) && (*0x7fcd10 != iVar1)) {\n        pcVar4 = fcn.00406fc6(*0x7fcd0c);\n        pcVar5 = fcn.00406fc6(*0x7fcd10);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00409859;\n        }\n    }\n    if ((((*0x7fcd04 != iVar1) && (pcVar4 = fcn.00406fc6(*0x7fcd04),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x7fcd08 != iVar1 && (pcVar4 = fcn.00406fc6(*0x7fcd08),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00409859:\n    pcVar4 = fcn.00406fc6(*0x7fcd00);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 850
    },
    "0040c20e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c20e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7f9b80 ^ &stack0xfffffffc;\n    fcn.00404570(arg_10h);\n    var_14h = fcn.0040d1f9(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040c771(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c267:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c2a7;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c299:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c2a7;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c299;\n        goto code_r0x0040c267;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c2a7:\n    fcn.004095b5(unaff_EBX);\n    return;\n}\n",
        "token_count": 513
    },
    "0040c2b6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c2b6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7f9b80 ^ &stack0xfffffffc;\n    fcn.00404570(arg_10h);\n    var_14h = fcn.0040d1f9(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040ccb5(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c30f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c34f;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c341:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c34f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c341;\n        goto code_r0x0040c30f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c34f:\n    fcn.004095b5(unaff_EBX);\n    return;\n}\n",
        "token_count": 513
    },
    "0040d1f9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d4bb)\n// WARNING: Removing unreachable block (ram,0x0040d484)\n// WARNING: Removing unreachable block (ram,0x0040d86c)\n// WARNING: Removing unreachable block (ram,0x0040d493)\n// WARNING: Removing unreachable block (ram,0x0040d49b)\n// WARNING: Removing unreachable block (ram,0x0040d4a1)\n// WARNING: Removing unreachable block (ram,0x0040d4a4)\n// WARNING: Removing unreachable block (ram,0x0040d4ab)\n// WARNING: Removing unreachable block (ram,0x0040d4b5)\n// WARNING: Removing unreachable block (ram,0x0040d510)\n// WARNING: Removing unreachable block (ram,0x0040d50a)\n// WARNING: Removing unreachable block (ram,0x0040d516)\n// WARNING: Removing unreachable block (ram,0x0040d533)\n// WARNING: Removing unreachable block (ram,0x0040d535)\n// WARNING: Removing unreachable block (ram,0x0040d53d)\n// WARNING: Removing unreachable block (ram,0x0040d540)\n// WARNING: Removing unreachable block (ram,0x0040d545)\n// WARNING: Removing unreachable block (ram,0x0040d548)\n// WARNING: Removing unreachable block (ram,0x0040d875)\n// WARNING: Removing unreachable block (ram,0x0040d553)\n// WARNING: Removing unreachable block (ram,0x0040d88c)\n// WARNING: Removing unreachable block (ram,0x0040d893)\n// WARNING: Removing unreachable block (ram,0x0040d55e)\n// WARNING: Removing unreachable block (ram,0x0040d571)\n// WARNING: Removing unreachable block (ram,0x0040d573)\n// WARNING: Removing unreachable block (ram,0x0040d580)\n// WARNING: Removing unreachable block (ram,0x0040d585)\n// WARNING: Removing unreachable block (ram,0x0040d58b)\n// WARNING: Removing unreachable block (ram,0x0040d594)\n// WARNING: Removing unreachable block (ram,0x0040d59b)\n// WARNING: Removing unreachable block (ram,0x0040d5b3)\n// WARNING: Removing unreachable block (ram,0x0040d5c4)\n// WARNING: Removing unreachable block (ram,0x0040d5d2)\n// WARNING: Removing unreachable block (ram,0x0040d611)\n// WARNING: Removing unreachable block (ram,0x0040d61a)\n// WARNING: Removing unreachable block (ram,0x0040d832)\n// WARNING: Removing unreachable block (ram,0x0040d628)\n// WARNING: Removing unreachable block (ram,0x0040d632)\n// WARNING: Removing unreachable block (ram,0x0040d84d)\n// WARNING: Removing unreachable block (ram,0x0040d63f)\n// WARNING: Removing unreachable block (ram,0x0040d646)\n// WARNING: Removing unreachable block (ram,0x0040d650)\n// WARNING: Removing unreachable block (ram,0x0040d655)\n// WARNING: Removing unreachable block (ram,0x0040d665)\n// WARNING: Removing unreachable block (ram,0x0040d66a)\n// WARNING: Removing unreachable block (ram,0x0040d674)\n// WARNING: Removing unreachable block (ram,0x0040d679)\n// WARNING: Removing unreachable block (ram,0x0040d68b)\n// WARNING: Removing unreachable block (ram,0x0040d698)\n// WARNING: Removing unreachable block (ram,0x0040d6a7)\n// WARNING: Removing unreachable block (ram,0x0040d6b4)\n// WARNING: Removing unreachable block (ram,0x0040d6d1)\n// WARNING: Removing unreachable block (ram,0x0040d6d5)\n// WARNING: Removing unreachable block (ram,0x0040d6dc)\n// WARNING: Removing unreachable block (ram,0x0040d6e5)\n// WARNING: Removing unreachable block (ram,0x0040d6e8)\n// WARNING: Removing unreachable block (ram,0x0040d6f9)\n// WARNING: Removing unreachable block (ram,0x0040d707)\n// WARNING: Removing unreachable block (ram,0x0040d712)\n// WARNING: Removing unreachable block (ram,0x0040d719)\n// WARNING: Removing unreachable block (ram,0x0040d744)\n// WARNING: Removing unreachable block (ram,0x0040d749)\n// WARNING: Removing unreachable block (ram,0x0040d754)\n// WARNING: Removing unreachable block (ram,0x0040d75d)\n// WARNING: Removing unreachable block (ram,0x0040d763)\n// WARNING: Removing unreachable block (ram,0x0040d766)\n// WARNING: Removing unreachable block (ram,0x0040d78c)\n// WARNING: Removing unreachable block (ram,0x0040d791)\n// WARNING: Removing unreachable block (ram,0x0040d796)\n// WARNING: Removing unreachable block (ram,0x0040d7a3)\n// WARNING: Removing unreachable block (ram,0x0040d7b4)\n// WARNING: Removing unreachable block (ram,0x0040d7e5)\n// WARNING: Removing unreachable block (ram,0x0040d7ba)\n// WARNING: Removing unreachable block (ram,0x0040d7e0)\n// WARNING: Removing unreachable block (ram,0x0040d7c4)\n// WARNING: Removing unreachable block (ram,0x0040d7da)\n// WARNING: Removing unreachable block (ram,0x0040d7d3)\n// WARNING: Removing unreachable block (ram,0x0040d7e8)\n// WARNING: Removing unreachable block (ram,0x0040d815)\n// WARNING: Removing unreachable block (ram,0x0040d7f2)\n// WARNING: Removing unreachable block (ram,0x0040d67d)\n// WARNING: Removing unreachable block (ram,0x0040d65a)\n// WARNING: Removing unreachable block (ram,0x0040d850)\n// WARNING: Removing unreachable block (ram,0x0040d596)\n// WARNING: Removing unreachable block (ram,0x0040d85a)\n// WARNING: Removing unreachable block (ram,0x0040d89b)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0040d1f9(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00406282();\n        *puVar2 = 0x16;\n        fcn.0040774f(0, 0, 0, 0, 0);\n        fcn.004095b5(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040d28c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40d8c1\n    (**0x40d8c1)();\n    return;\n}\n",
        "token_count": 1899
    },
    "00403070": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00403070(void)\n\n{\n    *0x2f53b92 = 0x6c;\n    *0x2f53b86 = 0x6d;\n    *0x2f53b84 = 0x69;\n    *0x2f53b88 = 0x67;\n    *0x2f53b90 = 100;\n    *0x2f53b96 = 0;\n    *0x2f53b8a = 0x33;\n    *0x2f53b82 = 0x73;\n    *0x2f53b94 = 0x6c;\n    *0x2f53b8e = 0x2e;\n    *0x2f53b8c = 0x32;\n    *0x2f53b80 = 0x6d;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x2f53b80);\n    return;\n}\n",
        "token_count": 220
    },
    "00403120": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403120(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uchar auStack56 [4];\n    uint uStack52;\n    uchar auStack48 [48];\n    \n    if (*0x2f53b7c == 3) {\n        uStack52 = 0;\n        fcn.00409b90(auStack48, 0, 0x30);\n        (*_sym.imp.KERNEL32.dll_GetDefaultCommConfigA)(0x402ce0, &uStack52, auStack56);\n        (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(0, 0, 0, 0);\n    }\n    *param_1 = param_3 ^ param_2;\n    return;\n}\n",
        "token_count": 175
    },
    "0040c771": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c771(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040cc72;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040c8a6;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040c8ad;\ncode_r0x0040c8a6:\n                        do {\n                            var_4h = 1;\ncode_r0x0040c8ad:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040c8bb;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040c8bb:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7f9de4 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7f9de4 < iVar12) {\n                if (iVar12 < *0x7f9de0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x7f9de0;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040cc72;\n            }\n            var_10h = *0x7f9de4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040ca5e;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040ca5e:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040cc72:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3684
    },
    "0040ccb5": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ccb5(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040d1b6;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x7f9e00 - 1;\n        iVar4 = *0x7f9e00 + (*0x7f9e00 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x7f9e00 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040cdea;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040cdf1;\ncode_r0x0040cdea:\n                        do {\n                            var_4h = 1;\ncode_r0x0040cdf1:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040cdff;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040cdff:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7f9dfc - *0x7f9e00) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7f9dfc < iVar12) {\n                if (iVar12 < *0x7f9df8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x7f9e0c;\n                    iVar4 = *0x7f9e04 + (*0x7f9e04 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7f9e04 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x7f9e04 + (*0x7f9e04 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7f9e04 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x7f9e0c + *0x7f9df8;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040d1b6;\n            }\n            var_10h = *0x7f9dfc - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x7f9e00 - 1;\n            iVar12 = *0x7f9e00 + (*0x7f9e00 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x7f9e00 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040cfa2;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040cfa2:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x7f9e04 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040d1b6:\n    var_20h = iVar12 << (0x1fU - *0x7f9e04 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x7f9e08 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x7f9e08 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3700
    },
    "004042b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004042b3(uint *param_1)\n\n{\n    *param_1 = 0x401200;\n    if (param_1[2] != 0) {\n        fcn.00404d9b(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00404933": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00404a26: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00404a2b)\n// WARNING: Removing unreachable block (ram,0x00404a59)\n// WARNING: Removing unreachable block (ram,0x00404a31)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404933(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00405e38(0x7f78a0, 0x18);\n    fcn.0040533e(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x7fc6d0 != 1) {\n        *0x7fc6cc = 1;\n        *0x7fc6c8 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00406fc6(*0x2f63938);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00406fc6(*0x2f63934);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00406fbd();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00406fc6(*piVar2);\n                        iVar3 = fcn.00406fbd();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00406fc6(*0x2f63938);\n                        piVar1 = fcn.00406fc6(*0x2f63934);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.0040486d(0x4011c4);\n        }\n        fcn.0040486d(0x4011cc);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00405264(8);\n    }\n    return;\n}\n",
        "token_count": 809
    },
    "00407dee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00407dee(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00405264(0);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "004095b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004095b5(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x7f9b80) {\n        return;\n    }\n    *0x7fce78 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x7fce7c = &arg_8h;\n    *0x7fcdb8 = 0x10001;\n    *0x7fcd60 = 0xc0000409;\n    *0x7fcd64 = 1;\n    var_328h = *0x7f9b80;\n    var_324h = *0x7f9b84;\n    *0x7fcd6c = unaff_retaddr;\n    *0x7fce44 = in_GS;\n    *0x7fce48 = in_FS;\n    *0x7fce4c = in_ES;\n    *0x7fce50 = in_DS;\n    *0x7fce54 = unaff_EDI;\n    *0x7fce58 = unaff_ESI;\n    *0x7fce5c = unaff_EBX;\n    *0x7fce60 = in_EDX;\n    *0x7fce64 = in_ECX;\n    *0x7fce68 = in_EAX;\n    *0x7fce6c = unaff_EBP;\n    *0x7fce70 = unaff_retaddr;\n    *0x7fce74 = in_CS;\n    *0x7fce80 = in_SS;\n    *0x7fcdb0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040a880(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402c28);\n    if (*0x7fcdb0 == 0) {\n        fcn.0040a880(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 843
    },
    "004031b0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004031b0(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uStack572;\n    uchar auStack552 [4];\n    uchar auStack548 [4];\n    uchar auStack544 [536];\n    uint32_t *puStack8;\n    \n    uVar2 = *param_1;\n    uVar3 = param_1[1];\n    fcn.00403190();\n    uStack572 = uVar2;\n    iVar1 = *0x7fa100;\n    if (*0x2f53b7c == 0x14) {\n        (*_sym.imp.KERNEL32.dll_GetCPInfoExW)(0, 0, auStack544);\n        iVar1 = *0x7fa100;\n    }\n    do {\n        if (*0x2f53b7c == 0xfa9) {\n            *0x2f53b78 = 0xedeb2e40;\n        }\n        else if (*0x2f53b7c == 0x3eb) {\n            *0x2f53aec = 0;\n        }\n        *0x2f53b74 = 0xf4ea3dee;\n        fcn.004031a0();\n        if (*0x2f53b7c == 0x9e6) {\n            (*_sym.imp.KERNEL32.dll_GetProcessPriorityBoost)(0, auStack552);\n        }\n        uVar3 = uVar3 - (uVar2 >> 5 ^ uVar2 * 0x10 + iVar1 ^ uStack572 + 0x23f);\n        if (*0x2f53b7c == 0xc) {\n            (*_sym.imp.KERNEL32.dll_WriteConsoleA)(0, 0, 0, auStack548, 0);\n        }\n        fcn.00403110();\n        fcn.00403120();\n        uVar2 = uVar2 - unaff_ESI;\n        uStack572 = uVar3;\n    } while (uVar3 != 0xfffffdc2);\n    puStack8[1] = 0xfffffdc2;\n    *puStack8 = uVar2;\n    return;\n}\n",
        "token_count": 507
    },
    "00403370": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.00403370(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    \n    fcn.0040c6e0();\n    pcVar5 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n    pcVar4 = _sym.imp.KERNEL32.dll_WriteProfileSectionA;\n    pcVar3 = _sym.imp.KERNEL32.dll_FindNextVolumeW;\n    pcVar2 = _sym.imp.KERNEL32.dll_SetHandleCount;\n    uVar6 = *0x2f53af0;\n    uVar1 = *0x2f53b7c >> 3;\n    while (uVar1 != 0) {\n        if (*0x2f53b7c == 0x959) {\n            (*pcVar2)();\n            (*pcVar3)();\n            (*pcVar4)();\n            (*pcVar5)();\n            (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExA)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasW)();\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasW)();\n            (*pcVar4)();\n            (*_sym.imp.KERNEL32.dll_EnumResourceTypesA)();\n            (*_sym.imp.KERNEL32.dll_SetThreadPriorityBoost)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleTitleW)();\n            (*_sym.imp.KERNEL32.dll_BeginUpdateResourceW)();\n            (*pcVar4)();\n            (*_sym.imp.KERNEL32.dll_FindResourceExA)();\n        }\n        fcn.004031b0();\n        uVar6 = uVar6 - 1;\n        uVar1 = uVar6;\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "00403190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403190(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 45
    },
    "004031a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004031a0(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 48
    },
    "00403490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403490(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "004034d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "get OS version",
            "get common file path",
            "allocate thread local storage",
            "resolve function by parsing PE exports",
            "set thread local storage value"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00404a5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a5f(uint arg_8h)\n\n{\n    fcn.00404933(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "004078b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004078c7)\n// WARNING: Removing unreachable block (ram,0x004078cd)\n// WARNING: Removing unreachable block (ram,0x004078cf)\n\nvoid fcn.004078b3(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "00407520": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407520(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00405e38(0x7f79d8, 0xc);\n    fcn.0040533e(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x7fcbb0;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x7fcbac;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00407564;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00404d9b(arg_8h_00);\ncode_r0x00407564:\n        fcn.00404d9b(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00407587();\n    fcn.00405e7d();\n    return;\n}\n",
        "token_count": 400
    }
}