{
    "00401000": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00406066": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406066(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x40f004) {\n        return;\n    }\n    *0x40fdc8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x40fdcc = &arg_8h;\n    *0x40fd08 = 0x10001;\n    *0x40fcb0 = 0xc0000409;\n    *0x40fcb4 = 1;\n    var_328h = *0x40f004;\n    var_324h = *0x40f008;\n    *0x40fcbc = unaff_retaddr;\n    *0x40fd94 = in_GS;\n    *0x40fd98 = in_FS;\n    *0x40fd9c = in_ES;\n    *0x40fda0 = in_DS;\n    *0x40fda4 = unaff_EDI;\n    *0x40fda8 = unaff_ESI;\n    *0x40fdac = unaff_EBX;\n    *0x40fdb0 = in_EDX;\n    *0x40fdb4 = in_ECX;\n    *0x40fdb8 = in_EAX;\n    *0x40fdbc = unaff_EBP;\n    *0x40fdc0 = unaff_retaddr;\n    *0x40fdc4 = in_CS;\n    *0x40fdd0 = in_SS;\n    *0x40fd00 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.004079da(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x40d13c);\n    if (*0x40fd00 == 0) {\n        fcn.004079da(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 831
    },
    "0040659f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040660b: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00406610)\n// WARNING: Removing unreachable block (ram,0x0040663e)\n// WARNING: Removing unreachable block (ram,0x00406616)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040659f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    *0x410010 = *(unaff_EBP + 0x10);\n    if (*(unaff_EBP + 0xc) == 0) {\n        uVar1 = fcn.004071cb(*0x410848);\n        uVar2 = fcn.004071cb(*0x410844);\n        *(unaff_EBP + -0x1c) = uVar2;\n        if (uVar1 != 0) {\n            while (*(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -4,  uVar1 <= *(unaff_EBP + -0x1c)) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n            }\n        }\n        fcn.00406439(0x40d114);\n    }\n    fcn.00406439(0x40d11c);\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00407a80(8);\n    }\n    return;\n}\n",
        "token_count": 417
    },
    "00408146": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408146(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00407a80(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "null": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: lpMem\n// WARNING: Variable defined which should be unmapped: dwFlags\n\nvoid entry0(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    ushort uVar5;\n    int32_t unaff_EBP;\n    uint32_t uVar6;\n    uint var_70h;\n    uint var_44h;\n    uint var_40h;\n    uint dwFlags;\n    uint lpMem;\n    uint var_20h;\n    uint var_1ch;\n    uint uVar7;\n    uint var_4h;\n    \n    fcn.00407946();\n    fcn.00407748(0x40e2f0, 0x60);\n    *(unaff_EBP + -4) = 0;\n    (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(unaff_EBP + -0x70);\n    *(unaff_EBP + -4) = 0xfffffffe;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcessHeap;\n    uVar7 = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, 0x94);\n    puVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n    if (puVar3 == NULL) {\n        fcn.00406075(0x12);\n    }\n    else {\n        *puVar3 = 0x94;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(puVar3);\n        if (iVar4 == 0) {\n            uVar2 = (*pcVar1)(0, puVar3);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n        }\n        else {\n            *(unaff_EBP + -0x20) = puVar3[4];\n            *(unaff_EBP + -0x24) = puVar3[1];\n            *(unaff_EBP + -0x28) = puVar3[2];\n            uVar6 = puVar3[3] & 0x7fff;\n            uVar2 = (*pcVar1)(0, puVar3);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n            *0x40ffd8 = *(unaff_EBP + -0x20);\n            if (*0x40ffd8 != 2) {\n                uVar6 = uVar6 | 0x8000;\n            }\n            *0x40ffe4 = *(unaff_EBP + -0x24);\n            *0x40ffe8 = *(unaff_EBP + -0x28);\n            *0x40ffe0 = *0x40ffe4 * 0x100 + *0x40ffe8;\n            *0x40ffdc = uVar6;\n            uVar2 = fcn.00406099();\n            *(unaff_EBP + -0x20) = uVar2;\n            iVar4 = fcn.004076ed(1);\n            if (iVar4 == 0) {\n                fcn.00406075(0x1c);\n            }\n            iVar4 = fcn.0040750e();\n            if (iVar4 == 0) {\n                fcn.00406075(0x10);\n            }\n            fcn.00407117();\n            *(unaff_EBP + -4) = 1;\n            iVar4 = fcn.00406ed7();\n            if (iVar4 < 0) {\n                fcn.004063c8(0x1b);\n            }\n            *0x410858 = (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n            *0x40fca0 = fcn.00406da2();\n            iVar4 = fcn.00406ce9();\n            if (iVar4 < 0) {\n                fcn.004063c8(8);\n            }\n            iVar4 = fcn.00406a76();\n            if (iVar4 < 0) {\n                fcn.004063c8(9);\n            }\n            iVar4 = fcn.004064e4(1);\n            if (iVar4 != 0) {\n                fcn.004063c8(iVar4);\n            }\n            uVar2 = fcn.00406a19();\n            if ((*(unaff_EBP + -0x44) & 1) == 0) {\n                uVar5 = 10;\n            }\n            else {\n                uVar5 = *(unaff_EBP + -0x40);\n            }\n            uVar2 = main(uVar7, 0, uVar2, uVar5);\n            *(unaff_EBP + -0x1c) = uVar2;\n            if (*(unaff_EBP + -0x20) == 0) {\n                fcn.00406644(uVar2);\n            }\n            fcn.00406666();\n            *(unaff_EBP + -4) = 0xfffffffe;\n        }\n    }\n    fcn.0040778d();\n    return;\n}\n",
        "token_count": 1170
    },
    "00408328": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408328(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    code *unaff_ESI;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00406471(unaff_EBP + -8);\n    if (iVar1 != 0) {\n        fcn.00407b93();\n    }\n    if (*(unaff_EBP + -8) == 2) {\n        (*unaff_ESI)();\n        *0x4105ec = fcn.0040715f();\n        if (*0x4105ec != unaff_EBX) {\n            (*unaff_ESI)();\n            *0x4105e8 = fcn.0040715f();\n        }\n    }\n    iVar1 = *(unaff_EBP + -0x10);\n    if ((*0x4105e8 == iVar1) || (*0x4105ec == iVar1)) {\ncode_r0x004083ef:\n        if (*0x4105e0 != iVar1) {\n            pcVar2 = fcn.004071cb();\n            iVar3 = (*pcVar2)();\n            *(unaff_EBP + -4) = iVar3;\n            if ((iVar3 != unaff_EBX) && (*0x4105e4 != iVar1)) {\n                pcVar2 = fcn.004071cb(*0x4105e4);\n                uVar4 = (*pcVar2)();\n                *(unaff_EBP + -4) = uVar4;\n            }\n        }\n    }\n    else {\n        pcVar2 = fcn.004071cb();\n        iVar3 = (*pcVar2)();\n        if (iVar3 != unaff_EBX) {\n            pcVar2 = fcn.004071cb(*0x4105ec, iVar3, 1, unaff_EBP + -0x20, 0xc);\n            iVar3 = (*pcVar2)();\n            if ((iVar3 != 0) && ((*(unaff_EBP + -0x18) & 1) != 0)) goto code_r0x004083ef;\n        }\n        iVar1 = fcn.004064a8();\n        if (iVar1 != 0) {\n            fcn.00407b93();\n        }\n        if (*(unaff_EBP + -0xc) < 4) {\n            *(unaff_EBP + 0x10) = *(unaff_EBP + 0x10) | 0x40000;\n        }\n        else {\n            *(unaff_EBP + 0x10) = *(unaff_EBP + 0x10) | 0x200000;\n        }\n    }\n    pcVar2 = fcn.004071cb(*0x4105dc, *(unaff_EBP + -4), *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 783
    },
    "00405b0a": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00405c0c) overlaps instruction at (ram,0x00405c07)\n// \n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nint32_t * fcn.00405b0a(void)\n\n{\n    char *pcVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint *extraout_ECX;\n    uint8_t uVar4;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uchar in_ZF;\n    uint var_bp_8h;\n    \n    func_0x00403df9();\n    piVar2 = func_0x003fd61b();\n    if (in_ZF) {\n        return piVar2;\n    }\n    *piVar2 = *piVar2 + piVar2;\n    uVar4 = unaff_EBX >> 8;\n    if (!CARRY1(uVar4, uVar4) && uVar4 * '\\x02' != '\\0') {\n        *((unaff_EBX & 0xffff0000 | CONCAT11(uVar4 * '\\x02', unaff_EBX)) + 0xd4) = unaff_ESI;\n    }\n    *0x6a5a5a1a = *0x6a5a5a1a + '\\x1a';\n    pcVar1 = extraout_ECX + -1;\n    *pcVar1 = *pcVar1 + unaff_EBX;\n    if (*pcVar1 == '\\0') {\n        if (*pcVar1 == '\\0') {\n            *0x6a5a5a1a = *0x6a5a5a1a + '\\x1a';\n            func_0x0043ea7e();\n            return *0x6d;\n        }\n        *extraout_ECX = 0x6a5a5a1a;\n    }\n    else {\n        *(unaff_EBP + 0x570189c0) = *(unaff_EBP + 0x570189c0) + '\\x1a';\n    }\n    uVar3 = func_0x004433c0();\n    *(unaff_ESI + 0x18) = uVar3;\n    func_0x0040472d();\n    if (*0x10 != NULL) {\n        if (*0x10 == NULL) {\n            return *(unaff_EBP + 0x28);\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 603
    },
    "0040524e": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004052bb) overlaps instruction at (ram,0x004052b8)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040524e(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_ch, uint arg_10h, \n            uint arg_14h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t *piVar7;\n    uint uVar8;\n    char extraout_CL;\n    char extraout_CL_00;\n    char extraout_CH;\n    char extraout_CH_00;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    uint8_t uVar9;\n    uint8_t *unaff_EBX;\n    int32_t *unaff_EBP;\n    int32_t *piVar11;\n    int32_t unaff_ESI;\n    char *unaff_EDI;\n    ushort in_CS;\n    bool bVar12;\n    char cVar13;\n    char cVar14;\n    uint var_ch;\n    uint var_8h;\n    uint uStack17901;\n    uint var_114h;\n    uchar uStack27;\n    uchar uStack26;\n    uchar uStack25;\n    uchar uStack24;\n    char cStack23;\n    uchar uStack22;\n    char cStack21;\n    uint var_20h;\n    ushort uStack15;\n    uint uStack13;\n    uint *puStack9;\n    uchar uStack5;\n    uchar uStack4;\n    ushort uStack3;\n    uint32_t uVar10;\n    \n    *unaff_EBP = *unaff_EBP + 1;\n    uStack5 = 0x5c;\n    uStack4 = 0x52;\n    uStack3 = 0x40;\n    iVar5 = func_0x00407712();\n    uStack5 = 0x34;\n    uStack4 = 0x7c;\n    uStack3 = 0x45;\n    unaff_EBP[-3] = iVar5;\n    puVar1 = *(unaff_ESI + 4);\n    uStack13 = 0x6e;\n    bVar12 = unaff_EBP == 0x10b;\n    stack0xffffffef = 0x9094;\n    uStack15 = 0x45;\n    cStack21 = 0x88;\n    var_20h._0_1_ = 0x52;\n    var_20h._1_1_ = 0x40;\n    var_20h._2_1_ = 0;\n    puStack9 = puVar1;\n    pcVar6 = func_0x004297a8();\n    if (bVar12) {\n        puStack9 = 0xff000003;\n        if (pcVar6 == NULL) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        var_20h._1_1_ = in_CS;\n        var_20h._2_1_ = in_CS >> 8;\n        cStack23 = 0xa0;\n        uStack22 = 0x52;\n        cStack21 = 0x40;\n        var_20h._0_1_ = 0;\n        iVar5 = func_0x5b000025();\n        *(iVar5 * 2) = *(iVar5 * 2) + 'h';\n        pcVar6 = (iVar5 + 1U & 0xffffff00) - 8;\n        *pcVar6 = *pcVar6 + extraout_CH;\n        unaff_EDI = CONCAT22(stack0xffffffef, CONCAT11(var_20h._2_1_, var_20h._1_1_));\n        unaff_EBP = &var_20h + 3;\n    }\n    else {\n        *unaff_EBX = *unaff_EBX | pcVar6;\n        *pcVar6 = *pcVar6 + pcVar6;\n        cStack21 = puStack9;\n        var_20h._0_1_ = puStack9 >> 8;\n        var_20h._1_1_ = puStack9 >> 0x10;\n        var_20h._2_1_ = puStack9 >> 0x18;\n        uStack25 = 0x9d;\n        uStack24 = 0x52;\n        cStack23 = 0x40;\n        uStack22 = 0;\n        fcn.00407837();\n        cVar4 = cStack21;\n        unaff_EBX = CONCAT13(var_20h._2_1_, CONCAT12(var_20h._1_1_, CONCAT11(var_20h, cStack21)));\n        cStack21 = 0xa3;\n        var_20h._0_1_ = 0x52;\n        var_20h._1_1_ = 0x40;\n        var_20h._2_1_ = 0;\n        piVar7 = func_0x0044d530();\n        cStack23 = 0x40;\n        uStack22 = 0x24;\n        cStack21 = 0;\n        var_20h._0_1_ = 0;\n        uStack27 = 0xf8;\n        uStack26 = 0xb9;\n        uStack25 = 0x45;\n        uStack24 = 0;\n        if (SCARRY4(&uStack27, 0xc) == &stack0xfffffff1 < 0) {\n            *0xe9004094 = piVar7 + *piVar7;\n            cStack23 = *0xe9004094 + **0xe9004094;\n            uVar2 = *0xe9004094 & 0xffffff00;\n            cVar14 = SCARRY1(cVar4, extraout_CH_00);\n            uVar9 = cVar4 + extraout_CH_00;\n            uVar3 = unaff_EBX & 0xffffff00;\n            uVar10 = uVar3 | uVar9;\n            cVar13 = uVar9 < '\\0';\n            bVar12 = uVar9 == 0;\n            var_20h._2_1_ = uVar3 >> 8;\n            cVar4 = var_20h._2_1_;\n            stack0xffffffef = uVar3 >> 0x10;\n            uStack22 = uVar2 >> 8;\n            cStack21 = uVar2 >> 0x10;\n            var_20h._0_1_ = uVar2 >> 0x18;\n            uStack27 = 0x24;\n            uStack26 = 0x53;\n            uStack25 = 0x40;\n            uStack24 = 0;\n            var_20h._1_1_ = uVar9;\n            iVar5 = func_0x003fd905();\n            piVar7 = extraout_ECX;\n            if (bVar12) {\n                piVar11 = &uStack27;\n                uStack27 = SUB41(unaff_EBP, 0);\n                uStack26 = unaff_EBP >> 8;\n                uStack25 = unaff_EBP >> 0x10;\n                uStack24 = unaff_EBP >> 0x18;\n            }\n            else {\n                piVar11 = unaff_EBP;\n                if ((bVar12) && (uStack27 = 0x31,  uStack26 = 0x75,  uStack25 = 0x40,  uStack24 = 0,  cVar14 != cVar13))\n                {\n                    uVar10 = unaff_EBX & 0xffff0000 | CONCAT11(cVar4 * '\\x02', uVar9);\n                    if (cVar4 * '\\x02' != '\\0') goto code_r0x00405344;\n                }\n                else {\n                    uVar10 = CONCAT13(var_20h, CONCAT12(cStack21, CONCAT11(uStack22, cStack23)));\n                    cStack23 = -100;\n                    uStack22 = 0x87;\n                    cStack21 = 0x45;\n                    var_20h._0_1_ = 0;\n                    iVar5 = unaff_EBP[3];\n                    uStack27 = iVar5;\n                    uStack26 = iVar5 >> 8;\n                    uStack25 = iVar5 >> 0x10;\n                    uStack24 = iVar5 >> 0x18;\n                }\n                iVar5 = func_0x0043b399();\n                piVar7 = extraout_ECX_00;\n            }\ncode_r0x00405344:\n            piVar11[-3] = iVar5;\n            *puVar1 = 0x45b3b0;\n            piVar11[-3] = puVar1;\n            *piVar7 = iVar5;\n            func_0x0043924f(0x45eec8);\n            func_0x0044d0de(puVar1, 0x5b, puVar1);\n            func_0x004279dd(piVar11[4]);\n            *unaff_EDI = *unaff_EDI + extraout_CL_00;\n            *(uVar10 + 0x148bb) = *(uVar10 + 0x148bb) + '\\x01';\n            func_0x00440fb9(puVar1, puVar1, uStack17901);\n            func_0x003f94bd(piVar11 + 1);\n            *(piVar11 + -0xb) = unaff_EDI;\n            *0x45dab4 = piVar11 + 1;\n            *(extraout_ECX_01 + 0x2c) = 0x45daa8;\n            return;\n        }\n    }\n    unaff_EBP[4] = unaff_EBX;\n    var_20h._1_1_ = 0xbd;\n    var_20h._2_1_ = 0x52;\n    stack0xffffffef = 0x40;\n    uVar8 = fcn.00404eb7();\n    var_20h._1_1_ = uVar8;\n    var_20h._2_1_ = uVar8 >> 8;\n    stack0xffffffef = uVar8 >> 0x10;\n    cStack23 = 0xc3;\n    uStack22 = 0x52;\n    cStack21 = 0x40;\n    var_20h._0_1_ = 0;\n    uVar8 = func_0x00437ec5();\n    iVar5 = unaff_EBP[-2];\n    cStack23 = iVar5;\n    uStack22 = iVar5 >> 8;\n    cStack21 = iVar5 >> 0x10;\n    var_20h._0_1_ = iVar5 >> 0x18;\n    *(unaff_EBX + 0x120) = uVar8;\n    *(unaff_EDI + 0x14) = 0x80000001;\n    *(unaff_EBP + 0x458bb045) = *(unaff_EBP + 0x458bb045) + extraout_CL;\n    return;\n}\n",
        "token_count": 2528
    },
    "00406a76": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nuint fcn.00406a76(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    if (*0x41084c == 0) {\n        fcn.00408dfd();\n    }\n    iVar4 = 0;\n    pcVar3 = *0x40fca0;\n    if (*0x40fca0 != NULL) {\n        for (; *pcVar3 != '\\0'; pcVar3 = pcVar3 + iVar2 + 1) {\n            if (*pcVar3 != '=') {\n                iVar4 = iVar4 + 1;\n            }\n            iVar2 = fcn.00408570(pcVar3);\n        }\n        piVar1 = fcn.00408ee9(iVar4 + 1, 4);\n        pcVar3 = *0x40fca0;\n        *0x40fff8 = piVar1;\n        if (piVar1 != NULL) {\n            do {\n                if (*pcVar3 == '\\0') {\n                    fcn.00408e1b(*0x40fca0);\n                    *0x40fca0 = NULL;\n                    *piVar1 = 0;\n                    *0x410840 = 1;\n                    return 0;\n                }\n                iVar4 = fcn.00408570(pcVar3);\n                iVar4 = iVar4 + 1;\n                if (*pcVar3 != '=') {\n                    iVar2 = fcn.00408ee9(iVar4, 1);\n                    *piVar1 = iVar2;\n                    if (iVar2 == 0) {\n                        fcn.00408e1b(*0x40fff8);\n                        *0x40fff8 = NULL;\n                        return 0xffffffff;\n                    }\n                    iVar2 = fcn.004085fb(iVar2, iVar4, pcVar3);\n                    if (iVar2 != 0) {\n                        fcn.00407b93(0, 0, 0, 0, 0);\n                    }\n                    piVar1 = piVar1 + 1;\n                }\n                pcVar3 = pcVar3 + iVar4;\n            } while( true );\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 492
    },
    "0040577d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040577d(int32_t param_1, uint8_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint unaff_EBX;\n    uchar *puVar3;\n    int32_t unaff_ESI;\n    \n    puVar3 = CONCAT31(CONCAT21(unaff_EBX >> 0x10, (unaff_EBX >> 8) * '\\x02'), 0x20);\n    *in_EAX = *in_EAX + in_EAX;\n    puVar1 = unaff_ESI + 0x6a;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + param_2;\n    *(puVar3 + 0x75077510) = (*(puVar3 + 0x75077510) - param_1) - CARRY1(uVar2, param_2);\n    *(in_EAX + 3) = *(in_EAX + 3) << (param_1 & 0x1f);\n    LOCK();\n    *puVar3 = *puVar3;\n    func_0x003fbc54(0x45e900);\n    return;\n}\n",
        "token_count": 278
    },
    "00404eb7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00405a1d) overlaps instruction at (ram,0x00405a1c)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Possible PIC construction at 0x00405a0a: Changing call to branch\n// WARNING: Possible PIC construction at 0x0040515d: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00405a0f)\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x0040563b)\n// WARNING: Removing unreachable block (ram,0x00405a28)\n// WARNING: Removing unreachable block (ram,0x00405a16)\n\nint32_t * __thiscall\nfcn.00404eb7(int32_t param_1, int32_t **param_2, int32_t **param_3, int32_t **param_4, uint param_5, uint param_6, \n            int32_t *param_7, uint param_8, int32_t **param_9, int32_t *param_10, int32_t param_11, uint param_12, \n            uint param_13)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    uint32_t in_EAX;\n    int32_t iVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t **ppiVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    char extraout_CL;\n    char extraout_CL_00;\n    ushort extraout_CX;\n    ushort extraout_CX_00;\n    uint8_t *extraout_ECX;\n    uint8_t *extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    uint8_t *puVar12;\n    int32_t extraout_ECX_02;\n    char extraout_CH;\n    int32_t extraout_ECX_03;\n    char **extraout_ECX_04;\n    char extraout_CH_00;\n    int32_t extraout_ECX_05;\n    int32_t extraout_ECX_06;\n    int32_t extraout_ECX_07;\n    int32_t *extraout_ECX_08;\n    char extraout_CH_01;\n    uint *extraout_ECX_09;\n    uint *extraout_ECX_10;\n    uint *puVar13;\n    unkbyte6 *extraout_ECX_11;\n    unkbyte6 *pVar14;\n    int32_t extraout_ECX_12;\n    uint8_t extraout_DL;\n    ushort extraout_DX;\n    int32_t *extraout_EDX;\n    uint32_t *puVar15;\n    int32_t *piVar16;\n    uint8_t uVar17;\n    uint32_t unaff_EBX;\n    uchar *puVar18;\n    int32_t **unaff_EBP;\n    int32_t **ppiVar19;\n    int32_t **ppiVar20;\n    int32_t **ppiVar21;\n    uint32_t unaff_EDI;\n    int32_t iVar22;\n    int32_t **ppiVar23;\n    int32_t in_FS_OFFSET;\n    uint8_t uVar24;\n    bool bVar25;\n    uchar uVar26;\n    bool bVar27;\n    char cVar28;\n    char cVar29;\n    char cVar30;\n    ulong uVar31;\n    unkbyte6 Var32;\n    uint in_stack_00000068;\n    uint in_stack_0000006c;\n    int32_t **ppiStack52;\n    int32_t **ppiVar33;\n    int32_t **in_stack_ffffffdc;\n    uint in_stack_ffffffe0;\n    int32_t **in_stack_ffffffe4;\n    int32_t **in_stack_ffffffe8;\n    uint uVar34;\n    \n    uVar24 = (in_EAX & 0xffffff8c) - *(in_EAX & 0xffffff8c);\n    pcVar6 = in_EAX & 0xffffff00 | uVar24;\n    *(param_1 + 0x1a90249c) = *(param_1 + 0x1a90249c) + param_1;\n    *pcVar6 = *pcVar6 + uVar24;\n    fcn.0040a240();\n    iVar5 = 0;\n    do {\n        (&stack0x00001ad8)[iVar5] = *(&param_8 + iVar5) ^ 0x52;\n        iVar5 = iVar5 + 1;\n    } while (iVar5 < 2000);\n    param_3 = 0x404fa9;\n    pcVar6 = (*&stack0x00001ad8)();\n    uVar24 = *(unaff_EBX + 0x110) < unaff_EDI;\n    puVar12 = extraout_ECX;\n    if (*(unaff_EBX + 0x110) == unaff_EDI) {\n        *(unaff_EBP + 0x13) = pcVar6;\n        param_3 = 0x404fbc;\n        pcVar6 = fcn.004066c2();\n        puVar12 = extraout_ECX_00;\n    }\n    uVar8 = pcVar6 >> 0x1f;\n    do {\n        uVar7 = uVar8;\n        puVar1 = unaff_EBX - 0xa6fb06;\n        uVar17 = *puVar1;\n        uVar2 = *puVar1 - pcVar6;\n        *puVar1 = uVar2 - uVar24;\n        uVar8 = uVar7 & 0xffffff00;\n        uVar24 = uVar17 < pcVar6 || uVar2 < uVar24;\n    } while (*puVar1 != 0);\n    piVar10 = unaff_EBP[2];\n    piVar11 = unaff_EBP[-9];\n    cVar28 = unaff_EBX;\n    *piVar11 = cVar28;\n    iVar5 = *0x471e94;\n    param_2 = uVar7 >> 0xc;\n    if (param_2 == NULL) {\n        param_4 = 0x75;\n        param_3 = unaff_EBP[4];\n        if (*0x471e94 + 5 == 0) {\n            return 0x45d5c0;\n        }\n        *0x45d5c0 = *0x45d5c0 + -0x40;\n        *0x1 = *0x1 + (*0x471e94 + 5 >> 8);\n        piVar11 = piVar10;\ncode_r0x0040519c:\n        iVar5 = 0x455aa0;\n        iVar4 = func_0x00402151();\n        *(iVar4 + -0x77) = *(iVar4 + -0x77) + extraout_DL;\n        puVar12 = unaff_EBP + 0x5a;\n        cVar30 = '\\0';\n        *puVar12 = *puVar12 | extraout_DL;\n        cVar28 = *puVar12 < '\\0';\n        bVar25 = *puVar12 == 0;\n        func_0x0042f57e();\n        if (bVar25) {\n            func_0x0043d89d();\n            cVar30 = SBORROW4(iVar5, 1);\n            iVar5 = iVar5 + -1;\n            cVar28 = iVar5 < 0;\n        }\n        do {\n            iVar22 = iVar5;\n            ppiVar9 = fcn.004064de();\n            ppiVar20 = *(unaff_EBP + 9);\n            uVar34 = 0x45c9f4;\n        } while (cVar30 != cVar28);\n        ppiVar23 = *(unaff_EBP + 9);\n        piVar10[5] = unaff_EBP + -0x213;\n        cVar30 = '\\0';\n        cVar28 = ppiVar23 < 0;\n        bVar25 = ppiVar23 == NULL;\n        ppiVar21 = *(unaff_EBP + 0x15);\n        in_stack_ffffffdc = ppiVar9;\n        in_stack_ffffffe4 = ppiVar9;\n        in_stack_ffffffe8 = ppiVar9;\n        (**(*(unaff_EBP + -0x1df) + 4))();\n        if (!bVar25 && cVar30 == cVar28) {\n            ppiVar9 = 0x4557e4;\n            ppiVar21 = in_stack_ffffffdc;\n        }\n        pcVar6 = *extraout_ECX_04;\n        if (pcVar6 == NULL) {\n            piVar10 = func_0x0044457c();\n            return piVar10;\n        }\n        *pcVar6 = *pcVar6 + pcVar6;\n        if (*pcVar6 == '\\0') {\n            pcVar3 = swi(0x45);\n            (*pcVar3)();\n            *(extraout_ECX_05 + -0x39ebdbbc) = *(extraout_ECX_05 + -0x39ebdbbc) + extraout_ECX_05;\n            func_0x0040d5dc();\n            piVar10 = func_0x003ff14f();\n            return piVar10;\n        }\n        ppiVar33 = 0xfffffffe;\n        *(unaff_EBP + -99) = *(unaff_EBP + -99) | ppiVar23 >> 8;\n        ppiVar19 = unaff_EBP + 3;\n        *ppiVar23 = *ppiVar23 + ppiVar23;\n        uVar26 = *(ppiVar23 + -0x67) == '\\f';\n        in_stack_ffffffe0 = 0x405642;\n        func_0x0043d564();\n        uVar31 = fcn.004080e2();\n        piVar10 = uVar31;\n        if (uVar26) {\n            if (ppiVar21 * 0x400 == 0) {\n                ppiVar19 = unaff_EBP + 1;\n                pcVar6 = (uVar31 >> 0x20) + 0xf;\n                *pcVar6 = *pcVar6 + extraout_CH_00;\n            }\n            uVar24 = uVar31 >> 0x20 | *(ppiVar21 * 0x400 + -0x77);\n            if ((POPCOUNT(uVar24) & 1U) != 0) {\n                return piVar10;\n            }\n            piVar10 = piVar10 + -0xe;\n            if (piVar10 == NULL) {\n    // WARNING: Could not recover jumptable at 0x00405693. Too many branches\n    // WARNING: Treating indirect jump as call\n                piVar10 = (**0x6a413e02)();\n                return piVar10;\n            }\n            puVar12 = (piVar10 & 0xffffff00 | piVar10 - 1) - 0x7d;\n            *puVar12 = *puVar12 & uVar24;\n            ppiVar19[-3] = 0x254c;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        if (!uVar26) {\n            return piVar10;\n        }\n        piVar16 = piVar10 * 2;\n        *piVar16 = *piVar16 - piVar10;\n        if (*piVar16 == 0) {\n            int.004077d8();\n            piVar10 = *ppiVar19;\n            ppiVar21[5] = piVar10 + 4;\n            *ppiVar23 = *ppiVar23 + extraout_CL;\n            *(unaff_EBP + 3) = 0x402742;\n            *(unaff_EBP + -1) = piVar10[6];\n            iVar22 = *(unaff_EBP + -1);\n            *(unaff_EBP + -1) = piVar10;\n            *(unaff_EBP + -5) = piVar10[3];\n            uVar34 = *(unaff_EBP + -1);\n            *(unaff_EBP + 0xb) = piVar10[3];\n            iVar5 = piVar10[4];\n            *(unaff_EBP + 7) = 10;\n            piVar10[2] = (piVar10 + 4 & 0xc3ec8bc3) * iVar5;\n            *(unaff_EBP + 3) = iVar22;\n            *(unaff_EBP + -1) = 0x10;\n            *(unaff_EBP + -5) = uVar34;\n            puVar18 = unaff_EBP + -9;\n            *(unaff_EBP + -9) = 0x4059c1;\n            func_0x003fb656();\n            *(puVar18 + -4) = 0x45dfe0;\n            *(puVar18 + -8) = 0x45ff7c;\n            unaff_EBP = *piVar10;\n            ppiVar19 = ppiVar9 + 0xa61;\n            *piVar10 = piVar10[10];\n            piVar10[-1] = 1;\n            piVar10[-2] = 0x45752c;\n            ppiVar23 = iVar22 + 4;\n            *(ppiVar9 + 0xcc4ad47) = *(ppiVar9 + 0xcc4ad47) + extraout_ECX_07;\n            piVar10[-3] = 0x45cbfc;\n            piVar10[-4] = ppiVar21[0x3a];\n            if (*0x10 == 0x4 || piVar10 + -4 < 0x100) {\n                piVar10[-0x45] = ppiVar21;\n                param_2 = 0x405a0f;\n                goto code_r0x00405d1d;\n            }\n            *(iVar22 + -0x71) = *(iVar22 + -0x71) << 1 | piVar10 + -4 < 0x100;\n            puVar12 = extraout_ECX_07 + 0x60685003;\n            bVar25 = false;\n            *puVar12 = *puVar12 | extraout_ECX_07;\n            bVar27 = *puVar12 == 0;\n            goto code_r0x00405a6d;\n        }\n        *piVar10 = *piVar10 + uVar31;\n        ppiStack52 = ppiVar9;\n        unaff_EBP = ppiVar33;\ncode_r0x00405b3f:\n        ppiVar21[0x15] = ppiVar21[0x15] + ppiVar23;\n        piVar10 = unaff_EBP[3];\n        cVar28 = piVar10 < 0x2;\n        uVar26 = piVar10 + -2 < 0;\n        bVar25 = piVar10 == 0x2;\n        uVar31 = fcn.0040524e(ppiVar23, in_stack_ffffffdc, in_stack_ffffffe0, in_stack_ffffffe4, in_stack_ffffffe8, \n                              uVar34, ppiVar20, iVar22);\n        puVar15 = uVar31 >> 0x20;\n        uVar8 = uVar31;\n        uVar17 = ppiStack52 >> 8;\n        uVar24 = uVar31 >> 0x20;\n        if (!bVar25) {\n            cVar30 = extraout_CX + '\\x01';\n            *puVar15 = *puVar15 & (uVar8 & 0xffffff00 | (uVar31 - (extraout_CX >> 8)) - cVar28);\n            cVar28 = uVar17 * '\\x02';\n            ppiStack52 = ppiStack52 & 0xffff0000 | CONCAT11(cVar28, ppiStack52);\n            if (cVar28 == '\\0') {\n                *(ppiStack52 + 0x14886) = *(ppiStack52 + 0x14886) + cVar30;\n                *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) + uVar24;\n                goto code_r0x004058cc;\n            }\n            *(ppiVar21 + -0x15) = *(ppiVar21 + -0x15) ^ uVar24;\n            unaff_EBP = unaff_EBP + 1;\n            *ppiVar23 = *ppiVar23 + cVar30;\ncode_r0x004058af:\n            *(ppiStack52 + 0x148bb) = *(ppiStack52 + 0x148bb) + '\\x01';\n            func_0x00440fb9();\ncode_r0x004058cc:\n            func_0x003f94bd();\n            unaff_EBP[-3] = ppiVar23;\n            *0x45dab4 = unaff_EBP;\n            *(extraout_ECX_06 + 0x2c) = 0x45daa8;\n            return 0x45daa8;\n        }\n        if (cVar28 || bVar25) {\n            func_0x0040e1e5();\n            piVar10 = ppiVar21[2];\n            if (uVar26) {\n                ppiStack52 = CONCAT31(ppiStack52 >> 8, 0xf8);\n                pcVar6 = (piVar10 & 0xffffff00 | (piVar10 - *piVar10) - cVar28) + 0x34;\n                *pcVar6 = *pcVar6 + extraout_CH_01;\n            }\n        }\n        else {\n            pcVar6 = unaff_EBP + (uVar8 - 0x381);\n            *pcVar6 = *pcVar6 + uVar24;\n            ppiVar21 = ppiVar21 + 1;\n            puVar12 = unaff_EBP + (uVar8 - 0x303);\n            *puVar12 = *puVar12 | uVar17;\n        }\n        uVar31 = func_0x003f9b28();\n        piVar10 = ppiVar23 + -1;\n        ppiVar19 = uVar31 + 1;\n        piVar16 = ppiStack52[0x6be];\n        param_4 = 0x45c434;\n        if (ppiVar19 < 1) {\n            ppiStack52[0x3a] = ppiVar19;\n            uVar26 = ppiStack52[0x53] == 0x59;\n            piVar10 = unaff_EBP[0x1c];\n            param_2 = param_7;\n            param_3 = ppiStack52;\n            goto code_r0x00405b9f;\n        }\n        if (ppiVar19 == NULL) {\n            in(0xff);\n    // WARNING: Could not recover jumptable at 0x00405bf1. Too many branches\n    // WARNING: Treating indirect jump as call\n            piVar10 = (**((uVar31 >> 0x20) + 0x15))();\n            return piVar10;\n        }\n        if (ppiVar19 != NULL) {\n            param_3 = ppiVar21[2];\n            puVar13 = extraout_ECX_09;\n            goto code_r0x00405bd9;\n        }\n        *piVar10 = *piVar10 + extraout_ECX_09;\n        *(extraout_ECX_09 + 0x20680841) = *(extraout_ECX_09 + 0x20680841) + extraout_ECX_09;\n        *unaff_EBP = 0;\n        piVar10 = ppiStack52[0x41];\n        param_3 = ppiVar19;\n        if (ppiVar21 == 0xfffff0a1) {\n            *0xfffff0f1 = *0xfffff0f1 | 0x10;\n            ppiVar23 = ppiStack52 + 0x34;\n            param_3 = ppiVar21;\n            *0xfffff0c5 = ppiVar19;\n            if (*0xfffff0f1 == 0) {\n                param_2 = 0x40d;\n                uVar24 = piVar16;\n                *(piVar10 + 1) = uVar24;\n                if (piVar10[0x6cc] == ppiStack52) {\n                    *(piVar16 + 0x1ad2e817) = *(piVar16 + 0x1ad2e817) + uVar24;\n                    *piVar10 = *piVar10 + piVar10;\n                    *ppiVar23 = *ppiVar23 | uVar24;\n                    if (piVar16 < *0x40f144 + piVar16) {\n                        iVar5 = piVar16 * 0xc;\n                        do {\n                            *(iVar5 + 8 + *0xfffff0fd) = 0;\n                            piVar16 = piVar16 + 1;\n                            iVar5 = iVar5 + 0xc;\n                        } while (piVar16 < *0x40f144 + *0x40f140);\n                        ppiStack52 = unaff_EBP[-1];\n                    }\n                    uVar34 = *0xfffff105;\n                    iVar5 = *(piVar10 & 0xffffff00 | piVar10 + 0x83 | 0x40f140);\n                    if (iVar5 == -0x3fffff72) {\n                        *0xfffff105 = 0x83;\n                    }\n                    else if (iVar5 == -0x3fffff70) {\n                        *0xfffff105 = 0x81;\n                    }\n                    else if (iVar5 == -0x3fffff6f) {\n                        *0xfffff105 = 0x84;\n                    }\n                    else if (iVar5 == -0x3fffff6d) {\n                        *0xfffff105 = 0x85;\n                    }\n                    else if (iVar5 == -0x3fffff73) {\n                        *0xfffff105 = 0x82;\n                    }\n                    else if (iVar5 == -0x3fffff71) {\n                        *0xfffff105 = 0x86;\n                    }\n                    else if (iVar5 == -0x3fffff6e) {\n                        *0xfffff105 = 0x8a;\n                    }\n                    param_13 = *0xfffff105;\n                    param_12 = 8;\n                    param_11 = 0x4069fd;\n                    (*ppiStack52)();\n                    *0xfffff101 = unaff_EBP[-2];\n                    *0xfffff105 = uVar34;\n                    return 0xffffffff;\n                }\n                param_4 = 0x405e70;\n                uVar31 = func_0x0043c0e3();\n                if (-0xf5f < uVar31) {\n                    *ppiVar23 = *ppiVar23 + extraout_CX_00;\n                    goto code_r0x004058af;\n                }\n                if (uVar31 == -0xf5f) goto code_r0x0040602d;\n                ppiStack52[0x6bb] = 0xd2e81789;\n                *ppiStack52 = *ppiStack52 + (uVar31 >> 0x28);\n                ppiVar19 = ppiStack52 + -0x1845b6cf;\n                uVar24 = extraout_CX_00 & 7;\n                *ppiVar19 = *ppiVar19 << uVar24 | *ppiVar19 >> 8 - uVar24;\n                puVar12 = (uVar31 >> 0x20) + 0x73;\n                uVar24 = extraout_CX_00 >> 8;\n                bVar25 = CARRY1(*puVar12, uVar24);\n                *puVar12 = *puVar12 + uVar24;\n                uVar24 = *puVar12;\n                ppiVar20 = ppiVar21;\n                ppiVar19 = ppiVar23;\n                while( true ) {\n                    bVar27 = uVar24 == 0;\n                    ppiVar23 = ppiVar19 + 2;\n                    *ppiVar19 = *ppiVar20;\n                    piVar10 = func_0x0043c7f8();\n                    uVar24 = piVar10;\n                    if (!bVar25 && !bVar27) break;\n                    uVar17 = *piVar10;\n                    *piVar10 = *piVar10 + uVar24;\n                    if (SCARRY1(uVar17, uVar24) == *piVar10 < '\\0') goto code_r0x00405f08;\n                    bVar25 = CARRY1(*piVar10, uVar24);\n                    *piVar10 = *piVar10 + uVar24;\n                    uVar24 = *piVar10;\n                    ppiVar20 = ppiVar20 + 2;\n                    ppiVar19 = ppiVar23;\n                }\n                if (!bVar27) {\n                    return piVar10;\n                }\n                *piVar10 = *piVar10 + uVar24;\n                unaff_EBP[3] = 0x7c000001;\n                *piVar10 = *piVar10 + uVar24;\ncode_r0x00405f08:\n                *0xc = ppiStack52;\n                func_0x0043e0c1();\n                piVar10 = func_0x0042c948();\n                unaff_EBP[-1] = piVar10;\n                func_0x003ff2d4();\n                piVar10 = func_0x003f9e31();\n                piVar16 = unaff_EBP[4];\n                ppiVar21 = ppiVar20 + 3;\n                if (ppiVar23 <= *(ppiVar20 + 0x1093)) {\n                    ppiVar23 = ppiVar23 * 4;\n                    if (ppiVar23 + *extraout_ECX_11 < *extraout_ECX_11) {\n                        return 0xffffffff;\n                    }\n                    ppiVar21 = fcn.00408ea9();\n                    ppiVar19 = ppiStack52;\ncode_r0x00406d6a:\n                    if (ppiVar21 == ppiVar19) {\n                        return 0xffffffff;\n                    }\n                    fcn.00406b51(ppiVar21, ppiVar23 + ppiVar21, unaff_EBP + -2);\n                    *0x40ffec = unaff_EBP[-2] + -1;\n                    *0x40fff0 = ppiVar21;\n                    return NULL;\n                }\n                pcVar6 = piVar10 + in_FS_OFFSET + -0x75;\n                *pcVar6 = *pcVar6 + piVar16;\n                *(piVar10 + -0x20) = *(piVar10 + -0x20) | piVar16;\n                ppiVar19 = ppiVar19 + -8;\n                *ppiVar19 = *ppiVar19 + (ppiStack52 >> 8);\n                pVar14 = extraout_ECX_11;\n                cVar28 = *ppiVar19;\n            }\n            else {\n                pVar14 = unaff_EBP[2];\n                cVar28 = *0xfffff0a1;\n                piVar11 = piVar10;\n                param_2 = piVar10;\n                if ('\\0' < *0xfffff0a1) {\n                    *(ppiStack52 + -0x53af6ed) = *(ppiStack52 + -0x53af6ed) + pVar14;\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n            }\n            piVar16 = param_2;\n            if (cVar28 != '\\0') {\n                ppiVar21[0xafb] = ppiVar21[0xafb] | 0xffffffe8;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *(ppiStack52 + -0x3b7cebba) = *(ppiStack52 + -0x3b7cebba) ^ pVar14;\n            uVar8 = piVar10 & 0xffffff00 | piVar10 + 0x77;\n            iVar5 = 0x45743c;\n            cVar30 = SCARRY4(uVar8, 0xc);\n            piVar10 = uVar8 + 0xc;\n            cVar28 = piVar10 < 0;\n            param_2 = 0x9;\n            if (uVar8 < 0xfffffff4) {\n                for (; cVar28 = piVar10,  iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *ppiVar23 = cVar28;\n                    ppiVar23 = ppiVar23 + 1;\n                }\n                piVar11[-3] = 0;\n                if (piVar11[-3] == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                param_9 = 0x458d08;\n                param_8 = 0x45cb74;\n                if (*0x10 == 0xffffffdc) {\n                    *piVar10 = *piVar10 + cVar28;\n                    if (((*piVar10 == '\\0') && (*(uVar8 + 0x400024) == 0x10b)) && (0xe < *(uVar8 + 0x400080))) {\n                        return *(uVar8 + 0x4000f4) != 0;\n                    }\n                    return NULL;\n                }\n                if (*0x10 != 0xffffffdc) {\n                    *piVar10 = *piVar10 + cVar28;\n                    if (SCARRY1(cVar28, '\\0') == cVar28 < '\\0') {\n                        *piVar10 = *piVar10 + cVar28;\n                    }\n                    return piVar10;\n                }\n                param_10 = piVar10;\n                fcn.00409114();\n                func_0x00447684();\n                func_0x003fe2a7();\n                func_0x00404615();\ncode_r0x0040602d:\n                (*ppiVar21[2])();\n                piVar10 = func_0x003fd8ed();\n                return piVar10;\n            }\n            while( true ) {\n                (**(iVar5 + 0xc))();\n                Var32 = func_0x0043c30f();\n                param_2 = piVar16;\n                param_3 = ppiVar21;\n                if (cVar30 == cVar28) break;\n                cVar30 = false;\n                cVar28 = false;\n                iVar5 = extraout_ECX_12;\n            }\n            iVar5 = 1;\n            piVar10 = Var32 ^ 0x85;\n            cVar28 = *(ppiVar23 + 0x14 + piVar10);\n            *(ppiVar23 + 0x14 + piVar10) = '\\0';\n            out(Var32 >> 0x20, piVar10);\n            *piVar10 = (*piVar10 - piVar10) - (cVar28 << 7 < '\\0');\n            *(extraout_ECX_12 + -0x75) = *(extraout_ECX_12 + -0x75) + piVar16;\n            *(ppiVar23 + 0x14 + piVar10) = '\\0';\n            if (extraout_ECX_12 == 1 || *(ppiVar23 + 0x14 + piVar10) == '\\0') {\n                *piVar10 = *piVar10 + piVar10;\n                if (*(ppiVar21 + 0x46) != 0) {\n                    fcn.00408e1b(*(ppiVar21 + 0x46));\n                }\n                iVar5 = *(ppiVar21 + 0x4a);\n                if (iVar5 == 0) goto code_r0x00407458;\n            }\n            fcn.00408e1b(iVar5);\ncode_r0x00407458:\n            if (*(ppiVar21 + 0x5e) != 0x40f0c8) {\n                fcn.00408e1b(*(ppiVar21 + 0x5e));\n            }\n            fcn.00407b58(0xd);\n            piVar11[-1] = 0;\n            iVar5 = *(ppiVar21 + 0x6a);\n            if (((iVar5 != 0) && (iVar22 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(),  iVar22 == 0)) &&\n               (iVar5 != 0x40f440)) {\n                fcn.00408e1b(iVar5);\n            }\n            piVar11[-1] = -2;\n            fcn.004074f9();\n            fcn.00407b58(0xc);\n            piVar11[-1] = 1;\n            piVar10 = *(ppiVar21 + 0x6e);\n            if (((piVar10 != NULL) && (fcn.004094ab(),  piVar10 != *0x40fa48)) &&\n               ((piVar10 != 0x40f970 && (*piVar10 == 0)))) {\n                fcn.004092e5();\n            }\n            piVar11[-1] = -2;\n            fcn.00407505();\n            fcn.00408e1b(ppiVar21 + 2);\n            piVar10 = fcn.0040778d();\n            return piVar10;\n        }\n    }\n    else {\n        uVar24 = (unaff_EBX >> 8) * '\\x02' + ((uVar7 >> 0xb & 1) != 0);\n        uVar8 = unaff_EBX & 0xffff0000 | CONCAT11(uVar24, cVar28);\n        if (uVar24 == 0) {\n            param_4 = in_stack_00000068;\n            unaff_EBP[-4] = param_2;\n            param_2 = iVar5 + unaff_EBP[-1];\n            param_3 = unaff_EBP[3];\n            piVar10[5] = uVar8;\n            cVar29 = SBORROW1(*(unaff_EBP + -1), '%');\n            cVar30 = *(unaff_EBP + -1) + -0x25 < '\\0';\n            uVar7 = func_0x004031cd();\n            if (cVar29 == cVar30) {\n                piVar10 = func_0x003fecf7();\n                return piVar10;\n            }\n            pcVar6 = uVar7 & 0xffff0000 | CONCAT11(uVar7 >> 8 & *(piVar11 + -1), uVar7);\n            *pcVar6 = *pcVar6 + uVar7;\n            func_0x003fed49();\n            param_8 = 0x457098;\n            param_7 = *(uVar8 + 0x120);\n            puVar12 = *(extraout_ECX_01 + 0x590020d5);\n            pcVar6 = param_2;\n        }\n        param_2 = pcVar6;\n        cVar30 = CONCAT11(uVar24, cVar28) >> 8;\n        cVar29 = cVar30 + *puVar12;\n        ppiVar19 = unaff_EBX & 0xffff0000 | CONCAT11(cVar29, cVar28);\n        if (cVar29 == '\\0' || SCARRY1(cVar30, *puVar12) != cVar29 < '\\0') {\n            uVar8 = *(uVar8 + 0x120) + 1;\n            param_3 = 0x4050c2;\n            (**(uVar8 & 0xffffff00 | uVar8 + (puVar12 >> 8) + CARRY1(uVar24, *puVar12)))();\n            cVar28 = *ppiVar19;\n            *ppiVar19 = *ppiVar19 + extraout_CH;\n            pcVar3 = swi(4);\n            if (SCARRY1(cVar28, extraout_CH) == true) {\n                (*pcVar3)();\n            }\n            param_3 = 0x4050ca;\n            param_11 = func_0x004049d7();\n            piVar10[2] = param_11;\n            param_9 = ppiVar19 + 0x3aa;\n            param_8 = 0x4050e8;\n            param_10 = piVar10;\n            param_7 = (**0x455080)();\n            param_8 = 0x471408;\n            param_4 = unaff_EBP[-0x41];\n            param_3 = 0x405106;\n            func_0x0044d644();\n            param_3 = 0x40510e;\n            func_0x0043c483();\n            bVar25 = unaff_EBP[3] == NULL;\n            param_3 = 0x456538;\n            piVar11 = 0x457bbc;\n            piVar10[0x60] = 0x56500475;\n            if ((bVar25) || (ppiVar23 = unaff_EBP + -0x54,  !bVar25)) {\n                bVar25 = ppiVar19 == NULL;\n                ppiVar23 = unaff_EBP[-0x37];\n            }\n            param_2 = piVar10;\n            uVar31 = func_0x0040308c();\n            ppiVar21 = uVar31;\n            if (!bVar25) goto code_r0x00406d6a;\n            *(piVar10 + 0x56) = *(piVar10 + 0x56) + (uVar31 >> 0x20);\n            goto code_r0x0040519c;\n        }\n        param_3 = 0x4050a0;\n        param_4 = unaff_EBP;\n        uVar31 = func_0x0043c1c3();\n        puVar12 = uVar31;\n        uVar24 = *puVar12;\n        *puVar12 = *puVar12 + uVar31;\n        *(extraout_ECX_02 + -0x77cffc0) = (*(extraout_ECX_02 + -0x77cffc0) - (uVar31 >> 0x20)) - CARRY1(uVar24, uVar31);\n        *(unaff_EBP + 0x55) = *(unaff_EBP + 0x55) + unaff_EBP + -2;\n        param_3 = 0x40548b;\n        func_0x0043e236();\n        param_3 = 0x1;\n        uVar26 = ppiVar19 == NULL;\n        unaff_EBP[0x36] = extraout_EDX;\n        param_2 = ppiVar19[0x679];\n        fcn.00406150();\n        if (!uVar26) {\n            func_0x0043d9b6();\n            func_0x0040331c();\n            piVar10 = fcn.0040659f(param_2, param_3, param_4);\n            return piVar10;\n        }\n        *(unaff_EBP + -2) = 0;\n        func_0x004139b9();\n        piVar11 = *unaff_EBP;\n        piVar10 = unaff_EBP[3];\n        if (uVar26) {\n            func_0x003fdb6d();\n            goto code_r0x00405507;\n        }\n        piVar16 = func_0x0040358b();\n        if (!uVar26) {\n            uVar26 = piVar16 + *piVar16 == 0;\n        }\n        piVar16 = func_0x0043b979();\n        if (!uVar26) {\n            while( true ) {\n                fcn.00406aa3();\ncode_r0x00405507:\n                func_0x0042a792();\n                iVar5 = func_0x00437319();\n                piVar11 = *(iVar5 + 0x10);\n                if (-1 < *piVar11) break;\n                *piVar11 = *piVar11 + piVar11;\n            }\n            (**(extraout_ECX_03 + 8))();\n            piVar11 = unaff_EBP[0x3a1];\n            *piVar11 = 0x14;\n            piVar10[0x66] = piVar11;\n            return piVar11;\n        }\n        bVar25 = piVar16 < unaff_EBP[3];\n        ppiVar23 = piVar16 - unaff_EBP[3];\n        bVar27 = ppiVar23 == NULL;\n        ppiVar21 = ppiVar19 + 0x785;\ncode_r0x00405a6d:\n        ppiVar20 = unaff_EBP + -0x13;\n        iVar22 = 0x45cd10;\n        uVar34 = 0x405a7c;\n        iVar5 = func_0x004017f7();\n        ppiVar9 = 0x45bb24;\n        *ppiVar21 = iVar5;\n        if (bVar27) {\n            fcn.00407f2e();\n            ppiStack52 = ppiVar19;\n            unaff_EBP = ppiVar9;\n            if ((!bVar27) && (bVar27)) {\n                out(*ppiVar21, extraout_DX);\n                return ppiVar19[0x48] ^ 0x75;\n            }\n            goto code_r0x00405b3f;\n        }\n        if (!bVar25 && !bVar27) {\n            ppiStack52 = unaff_EBP;\n        }\n        fcn.00408ff3();\n    // WARNING: Call to offcut address within same function\n        func_0x004059c2();\n        ppiVar21[5] = extraout_ECX_08;\n        (**(iVar5 + 4))();\n        func_0x00416c48();\n        piVar10 = unaff_EBP[2];\n    // WARNING: Call to offcut address within same function\n        iVar5 = func_0x004074c0();\n        iVar22 = iVar5 + -0xd;\n        bVar25 = iVar22 != 0;\n        if (iVar5 < 0xd) {\n            pcVar6 = ppiVar19 + -0x76af03bb;\n            *pcVar6 = *pcVar6 + extraout_CL_00;\n            uVar26 = *pcVar6 == '\\0';\n            if (!uVar26) goto code_r0x00405ae8;\n        }\n        else {\n            iVar22 = 0x7fffffff;\n            if (bVar25) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            uVar26 = *0x800019e7 == extraout_CL_00;\n            if (uVar26) {\ncode_r0x00405ae8:\n                *(iVar22 + 0xf4) = 0x50fc458b;\n                unaff_EBP[-1] = ppiVar21;\n            }\n            else {\n                pcVar6 = ppiVar21[4] + 0x57;\n                *pcVar6 = *pcVar6 + ppiVar19;\n                uVar26 = *pcVar6 == '\\0';\n            }\n        }\n        piVar10[0x5a] = -0x3874fc83;\n        func_0x00403df9();\ncode_r0x00405b9f:\n        piVar11 = func_0x003fd61b();\n        if (uVar26) {\n            return piVar11;\n        }\n        *piVar11 = *piVar11 + piVar11;\n        uVar24 = ppiStack52 >> 8;\n        ppiStack52 = ppiStack52 & 0xffff0000 | CONCAT11(uVar24 * '\\x02', ppiStack52);\n        puVar13 = extraout_ECX_10;\n        if (!CARRY1(uVar24, uVar24) && uVar24 * '\\x02' != '\\0') {\ncode_r0x00405bd9:\n            ppiStack52[0x35] = ppiVar21;\n        }\n        param_4 = 0x6a5a5a1a;\n        *0x6a5a5a1a = *0x6a5a5a1a + '\\x1a';\n        pcVar6 = puVar13 + -1;\n        *pcVar6 = *pcVar6 + ppiStack52;\n        if (*pcVar6 != '\\0') {\n            *(unaff_EBP + 0x15c06270) = *(unaff_EBP + 0x15c06270) + '\\x1a';\ncode_r0x00405c12:\n            piVar10 = func_0x004433c0();\n            ppiVar21[6] = piVar10;\n            func_0x0040472d();\n            if (*0x10 == 0xfffffff0) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            if (*0x10 != 0xfffffff0) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            return unaff_EBP[10];\n        }\n        param_3 = unaff_EBP[3];\n        if (*pcVar6 != '\\0') {\n            *puVar13 = 0x6a5a5a1a;\n            param_2 = piVar10;\n            goto code_r0x00405c12;\n        }\n        *0x6a5a5a1a = *0x6a5a5a1a + '\\x1a';\n    }\n    param_2 = 0x6d;\ncode_r0x00405d1d:\n    func_0x0043ea7e();\n    return *param_2;\n}\n",
        "token_count": 10268
    },
    "00406471": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00406471(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x40ffd8 != 0)) {\n        *param_1 = *0x40ffd8;\n        return 0;\n    }\n    puVar1 = fcn.00407cee();\n    *puVar1 = 0x16;\n    fcn.00407c8f(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 121
    },
    "004064a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004064a8(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x40ffd8 != 0)) {\n        *param_1 = *0x40ffe4;\n        return 0;\n    }\n    puVar1 = fcn.00407cee();\n    *puVar1 = 0x16;\n    fcn.00407c8f(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 120
    },
    "00406684": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406684(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004071c2();\n    fcn.00408275(uVar1);\n    fcn.00408196(uVar1);\n    fcn.00407b89(uVar1);\n    fcn.0040818c(uVar1);\n    fcn.00408182(uVar1);\n    fcn.00407f78(uVar1);\n    fcn.004068a9(uVar1);\n    fcn.00407f67(uVar1);\n    *0x40f00c = fcn.0040715f(fcn.00406655);\n    return;\n}\n",
        "token_count": 151
    },
    "00406aa3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.00406aa3(int32_t param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    char unaff_BL;\n    \n    pcVar1 = param_1 + -0x73;\n    *pcVar1 = *pcVar1 + unaff_BL;\n    if (*pcVar1 != '\\0') {\n        *(param_2 + 0x75c33a06) = *(param_2 + 0x75c33a06) + param_1;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 147
    },
    "00407117": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407129)\n// WARNING: Removing unreachable block (ram,0x0040712f)\n// WARNING: Removing unreachable block (ram,0x00407131)\n\nvoid fcn.00407117(void)\n\n{\n    return;\n}\n",
        "token_count": 61
    },
    "004077d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __fastcall int.004077d8(int32_t param_1, uint param_2)\n\n{\n    char *pcVar1;\n    char in_AL;\n    int32_t unaff_EBP;\n    char in_CF;\n    \n    pcVar1 = unaff_EBP + -0x75 + param_1;\n    *pcVar1 = *pcVar1 + (param_2 >> 8) + in_CF;\n    return in_AL + '\\x03';\n}\n",
        "token_count": 102
    },
    "00407fd2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407fd2(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint *puVar4;\n    int32_t iVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00407748(0x40e420, 0x20);\n    iVar5 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 < 0xc) {\n        if (iVar1 != 0xb) {\n            if (iVar1 == 2) {\n                puVar4 = 0x4105b0;\n                uVar3 = *0x4105b0;\n                goto code_r0x00408087;\n            }\n            if (iVar1 != 4) {\n                if (iVar1 == 6) goto code_r0x00408065;\n                if (iVar1 != 8) goto code_r0x00408049;\n            }\n        }\n        iVar5 = fcn.00407352();\n        *(unaff_EBP + -0x28) = iVar5;\n        if (iVar5 == 0) goto code_r0x0040817c;\n        iVar2 = fcn.00407f91(*(iVar5 + 0x5c));\n        puVar4 = iVar2 + 8;\n        uVar3 = *puVar4;\n    }\n    else {\n        if (iVar1 == 0xf) {\n            puVar4 = 0x4105bc;\n            uVar3 = *0x4105bc;\n        }\n        else if (iVar1 == 0x15) {\n            puVar4 = 0x4105b4;\n            uVar3 = *0x4105b4;\n        }\n        else {\n            if (iVar1 != 0x16) {\ncode_r0x00408049:\n                puVar4 = fcn.00407cee();\n                *puVar4 = 0x16;\n                fcn.00407c8f(0, 0, 0, 0, 0);\n                goto code_r0x0040817c;\n            }\ncode_r0x00408065:\n            puVar4 = 0x4105b8;\n            uVar3 = *0x4105b8;\n        }\ncode_r0x00408087:\n        *(unaff_EBP + -0x1c) = 1;\n        uVar3 = fcn.004071cb(uVar3);\n    }\n    *(unaff_EBP + -0x20) = uVar3;\n    iVar2 = 0;\n    if (*(unaff_EBP + -0x20) == 1) goto code_r0x0040817c;\n    if (*(unaff_EBP + -0x20) == 0) {\n        iVar2 = fcn.00406655(3);\n    }\n    if (*(unaff_EBP + -0x1c) != iVar2) {\n        fcn.00407b58(iVar2);\n    }\n    *(unaff_EBP + -4) = 0;\n    if (((iVar1 == 8) || (iVar1 == 0xb)) || (iVar1 == 4)) {\n        *(unaff_EBP + -0x2c) = *(iVar5 + 0x60);\n        *(iVar5 + 0x60) = 0;\n        if (iVar1 == 8) {\n            *(unaff_EBP + -0x30) = *(iVar5 + 100);\n            *(iVar5 + 100) = 0x8c;\n            goto code_r0x004080eb;\n        }\ncode_r0x0040811e:\n        uVar3 = fcn.004071c2();\n        *puVar4 = uVar3;\n    }\n    else {\ncode_r0x004080eb:\n        if (iVar1 != 8) goto code_r0x0040811e;\n        *(unaff_EBP + -0x24) = *0x40f140;\n        while (*(unaff_EBP + -0x24) < *0x40f144 + *0x40f140) {\n            *(*(unaff_EBP + -0x24) * 0xc + 8 + *(iVar5 + 0x5c)) = 0;\n            *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + 1;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00408146();\n    if (iVar1 == 8) {\n        (**(unaff_EBP + -0x20))(8, *(iVar5 + 100));\n    }\n    else {\n        (**(unaff_EBP + -0x20))(iVar1);\n        if ((iVar1 != 0xb) && (iVar1 != 4)) goto code_r0x0040817c;\n    }\n    *(iVar5 + 0x60) = *(unaff_EBP + -0x2c);\n    if (iVar1 == 8) {\n        *(iVar5 + 100) = *(unaff_EBP + -0x30);\n    }\ncode_r0x0040817c:\n    fcn.0040778d();\n    return;\n}\n",
        "token_count": 1260
    },
    "004080e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004080e2(void)\n\n{\n    char *in_EAX;\n    uint uVar1;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    int32_t unaff_EBP;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    ushort in_ES;\n    int32_t in_FS_OFFSET;\n    char cVar3;\n    \n    cVar3 = unaff_EBX >> 8;\n    uVar2 = unaff_EBX & 0xffff0000 | CONCAT11(cVar3 << 1 | cVar3 < '\\0', unaff_EBX);\n    *(in_EAX + in_FS_OFFSET) = in_ES;\n    *in_EAX = *in_EAX + in_EAX;\n    if (uVar2 == 8) {\n        *(unaff_EBP + -0x25) = *0x40f140;\n        while (*(unaff_EBP + -0x25) < *0x40f144 + *0x40f140) {\n            *(*(unaff_EBP + -0x25) * 0xc + 8 + *(unaff_EDI + 0x5d)) = in_EAX;\n            *(unaff_EBP + -0x25) = *(unaff_EBP + -0x25) + 1;\n        }\n    }\n    else {\n        uVar1 = fcn.004071c2();\n        *unaff_ESI = uVar1;\n    }\n    *(unaff_EBP + -5) = 0xfffffffe;\n    fcn.00408146();\n    if (uVar2 == 8) {\n        (**(unaff_EBP + -0x21))(8, *(unaff_EDI + 0x65));\n    }\n    else {\n        (**(unaff_EBP + -0x21))(uVar2);\n        if ((uVar2 != 0xb) && (uVar2 != 4)) goto code_r0x0040817a;\n    }\n    *(unaff_EDI + 0x61) = *(unaff_EBP + -0x2d);\n    if (uVar2 == 8) {\n        *(unaff_EDI + 0x65) = *(unaff_EBP + -0x31);\n    }\ncode_r0x0040817a:\n    fcn.0040778d();\n    return;\n}\n",
        "token_count": 525
    },
    "004086de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004086de(void)\n\n{\n    uint32_t *puVar1;\n    char *pcVar2;\n    char *unaff_EBX;\n    char **unaff_ESI;\n    \n    *unaff_EBX = *unaff_EBX + unaff_EBX;\n    *unaff_ESI = unaff_EBX;\n    if ((unaff_ESI[1] != *0x40f868) && ((*(unaff_ESI[2] + 0x70) & *0x40fa64) == 0)) {\n        pcVar2 = fcn.0040899a();\n        unaff_ESI[1] = pcVar2;\n    }\n    if ((unaff_ESI[2][0x70] & 2U) == 0) {\n        puVar1 = unaff_ESI[2] + 0x70;\n        *puVar1 = *puVar1 | 2;\n        *(unaff_ESI + 3) = 1;\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00408ff3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408ff3(void)\n\n{\n    int32_t in_EAX;\n    \n    // WARNING: Could not recover jumptable at 0x00408ff5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(in_EAX * 4 + 0x409008))();\n    return;\n}\n",
        "token_count": 76
    },
    "004082a1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nuint fcn.004082a1(uint param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uchar auStack36 [8];\n    uint8_t uStack28;\n    uchar auStack24 [4];\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = fcn.004071c2();\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    if (*0x4105dc == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MessageBoxA\"),  iVar2 == 0)) {\n            return 0;\n        }\n        *0x4105dc = fcn.0040715f(iVar2);\n        uVar3 = (*pcVar4)(iVar1, \"GetActiveWindow\");\n        *0x4105e0 = fcn.0040715f(uVar3);\n        uVar3 = (*pcVar4)(iVar1, \"GetLastActivePopup\");\n        *0x4105e4 = fcn.0040715f(uVar3);\n        iVar2 = fcn.00406471(&var_8h);\n        if (iVar2 != 0) {\n            fcn.00407b93(0, 0, 0, 0, 0);\n        }\n        if (var_8h == 2) {\n            uVar3 = (*pcVar4)(iVar1, \"GetUserObjectInformationA\");\n            *0x4105ec = fcn.0040715f(uVar3);\n            if (*0x4105ec != 0) {\n                uVar3 = (*pcVar4)(iVar1, \"GetProcessWindowStation\");\n                *0x4105e8 = fcn.0040715f(uVar3);\n            }\n        }\n    }\n    iVar1 = var_10h;\n    if ((*0x4105e8 == var_10h) || (*0x4105ec == var_10h)) {\ncode_r0x004083ef:\n        if (*0x4105e0 != iVar1) {\n            pcVar4 = fcn.004071cb(*0x4105e0);\n            var_4h = (*pcVar4)();\n            if ((var_4h != 0) && (*0x4105e4 != iVar1)) {\n                pcVar4 = fcn.004071cb(*0x4105e4, var_4h);\n                var_4h = (*pcVar4)();\n            }\n        }\n    }\n    else {\n        pcVar4 = fcn.004071cb(*0x4105e8);\n        iVar2 = (*pcVar4)();\n        if (iVar2 != 0) {\n            pcVar4 = fcn.004071cb(*0x4105ec, iVar2, 1, auStack36, 0xc, auStack24);\n            iVar2 = (*pcVar4)();\n            if ((iVar2 != 0) && ((uStack28 & 1) != 0)) goto code_r0x004083ef;\n        }\n        iVar1 = fcn.004064a8(&var_ch);\n        if (iVar1 != 0) {\n            fcn.00407b93(0, 0, 0, 0, 0);\n        }\n        if (var_ch < 4) {\n            param_3 = param_3 | 0x40000;\n        }\n        else {\n            param_3 = param_3 | 0x200000;\n        }\n    }\n    pcVar4 = fcn.004071cb(*0x4105dc, var_4h, param_1, param_2, param_3);\n    uVar3 = (*pcVar4)();\n    return uVar3;\n}\n",
        "token_count": 929
    }
}