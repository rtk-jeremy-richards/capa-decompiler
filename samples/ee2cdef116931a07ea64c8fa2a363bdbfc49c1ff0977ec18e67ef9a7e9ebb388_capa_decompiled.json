{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040116f)\n\nuint32_t __cdecl fcn.00401000(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint32_t arg_8h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    // [00] -r-x section size 94208 named .text\n    *0x428f14 = 0x7b83531e;\n    arg_8h_00 = 0x1e00;\n    uVar1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, 0);\n    if (uVar1 != 0) {\n        (*_sym.imp.USER32.dll_HiliteMenuItem)(uVar1, uVar1, 0x7e7e, *0x428f14 & uVar1);\n        arg_8h_00 = arg_ch & 0xffff;\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar1 | 0xcd130000 | uVar1, arg_8h_00 + 0x9a00);\n        (*_sym.imp.USER32.dll_LoadCursorFromFileA)(-*0x428f14);\n        (*_sym.imp.VERSION.dll_VerQueryValueA)\n                  (uVar1 | 0x922b3c4f | uVar1, uVar1 & 0x818c00, arg_8h_00, arg_8h_00 - 0x85);\n    }\n    if ((uVar1 == 0) && (uVar2 = (arg_8h_00 | 0x5e00) - arg_8h,  *0x428f14 < 0x7b83531f)) {\n        uVar1 = fcn.00402913(arg_8h_00, arg_8h_00, *0x428f14, arg_8h * arg_8h_00 & 0xff);\n        *0x428f14 = uVar2 - (uVar2 ^ uVar1);\n        uVar1 = *0x428f14;\n        if ((arg_8h_00 < 0x1e01) && (uVar1 = uVar2 + (uVar2 | 0xd9),  *0x428f14 != 0xffffffff)) {\n            if ((uVar2 & arg_10h) == 0) {\n                fcn.00403a7e();\n            }\n            uVar1 = 0;\n            if ((uVar2 == 0x6a00) && (uVar1 = *0x428f14,  *0x428f14 == 0)) {\n                uVar1 = (uVar2 & arg_10h) - 0x30d4;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 655
    },
    "004011e7": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004014e8)\n// WARNING: Removing unreachable block (ram,0x0040120d)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004011e7(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint lpNumberOfAttrsRead;\n    uint yBottom;\n    uint lpLocaleEnumProc;\n    int32_t var_ch;\n    uchar *var_8h;\n    uint var_4h;\n    \n    *0x428eeb = 0;\n    uVar3 = arg_10h - 0x8300U & 0xffff;\n    if (uVar3 < 0xed00) {\n        uVar3 = 0;\n    }\n    else {\n        uVar2 = uVar3 + 0x9d2a5cfd ^ 0x9d6b1644;\n        var_8h = *0x43900c;\n        *0x428eeb = uVar3 % arg_ch;\n        for (var_ch = 0x11117; var_ch != (uVar3 - *0x428eeb) + -0xecb0;\n            var_ch = var_ch - ((arg_8h - 0x1ff5U | 0x1f70) - 0x5f7a)) {\n            uVar1 = arg_ch & 0xe9;\n            if (arg_ch << 8 != 0x7000) {\n                return arg_ch;\n            }\n            yBottom._0_2_ = uVar1 + arg_ch * 0x47;\n            *var_8h = *(uVar2 + (yBottom - uVar1) + -0x1f10);\n            if ('p' < yBottom) {\n                return yBottom;\n            }\n            uVar1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)((yBottom | arg_ch) - 0x1f70, yBottom ^ arg_ch);\n            if (uVar1 != 0) {\n                (*_sym.imp.USER32.dll_WINNLSGetIMEHotkey)(arg_ch + (arg_ch ^ 0x5ef33bab));\n                (*_sym.imp.USER32.dll_SetRect)(arg_ch, uVar1, yBottom, arg_ch * 0x403f, (yBottom - uVar1) + yBottom);\n                (*_sym.imp.KERNEL32.dll_ReadConsoleOutputAttribute)\n                          ((arg_ch | 0x317bef68) + uVar1, (arg_ch | 0x24000000) - uVar1, uVar1 ^ 0xe4, \n                           uVar1 * -0x51000000, uVar1);\n                (*_sym.imp.VERSION.dll_VerInstallFileW)\n                          (uVar1 - 0xab1b, uVar1 - 0x6c00, 0, yBottom, yBottom, uVar1 + 0xf6, arg_ch, \n                           yBottom * 0x40000000);\n                yBottom._0_2_ = 0;\n                (*_sym.imp.VERSION.dll_VerFindFileA)(0x66a100, 0, uVar1, arg_ch, arg_ch & 0x1ad64568, uVar1, arg_ch, 0);\n            }\n            var_8h = var_8h + ((yBottom ^ uVar1) - 0x1f6f);\n            if (yBottom != 0x1f70) {\n                return arg_ch;\n            }\n            uVar2 = uVar2 + (0x71 - (arg_ch & 0xff));\n        }\n        if (arg_ch == 0x6f) {\n            uVar3 = *0x428eeb >> 2;\n        }\n        else {\n            *((*0x428eeb ^ arg_ch) + 0xf3ead004 ^ 0xf3a94034) = var_8h;\n            uVar3 = *0x428eeb;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 941
    },
    "00401c1a": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401d47)\n// WARNING: Removing unreachable block (ram,0x00401dd7)\n// WARNING: Removing unreachable block (ram,0x00401e08)\n// WARNING: Removing unreachable block (ram,0x00401da5)\n\nuint32_t __cdecl fcn.00401c1a(uint32_t arg_8h, uint arg_ch, uint noname_2, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uchar *var_4h;\n    \n    uVar2 = arg_8h * 0x100;\n    *0x428f18 = uVar2;\n    if (0x15 < arg_8h) {\n        uVar3 = arg_8h * 0x8a7201 & 0xff;\n        *0x428f1d = arg_8h;\n        uVar1 = arg_14h + 0x5ae9a60e;\n        var_4h = (uVar2 - uVar1) + 0xf814da0b ^ 0x9d68ea7d;\n        *0x428f1c = arg_ch - *0x428f1d;\n        if (uVar1 == 0x5ae9a60e) {\n            var_ch = *((*0x428f1c + uVar1 + 0x99012a16 ^ 0xf3a94034) + (0x16 - arg_8h) * 4);\n            *0x428f1c = (arg_8h / uVar1) % 0x5ae9a60e;\n            var_10h = (arg_8h & 0xff & arg_8h) + 0x18be;\n            *0x428f18 = (uVar3 | 0x5a7e) + 0x5ae9a60e;\n            uVar2 = arg_8h;\n            if (*0x428f1d < '\\x17') {\n                for (; var_10h != (uVar3 ^ *0x428f18) + 0xa515ff66; var_10h = var_10h + -1) {\n                    uVar2 = (arg_14h & 0xa84fb250) * arg_14h;\n                    if (uVar2 != 0) {\n                        return uVar2;\n                    }\n                    *var_ch = *var_4h;\n                    var_ch = var_ch + 1;\n                    var_4h = var_4h + 1;\n                }\n                *((arg_8h | *0x428f1d) + 0xf3ead00e ^ 0xf3a94034) = var_ch;\n                uVar2 = *0x428f18 >> 2;\n                if (*0x428f18 >> 2 != 0x16ba8023) {\n                    uVar2 = *0x428f1d;\n                }\n            }\n        }\n        else {\n            uVar2 = *0x428f1c;\n            *0x428f18 = arg_8h / uVar1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 776
    },
    "00401f94": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401fc3)\n// WARNING: Removing unreachable block (ram,0x00402194)\n// WARNING: Removing unreachable block (ram,0x00401fae)\n// WARNING: Removing unreachable block (ram,0x00402326)\n// WARNING: Removing unreachable block (ram,0x0040228e)\n// WARNING: Removing unreachable block (ram,0x00402657)\n// WARNING: Removing unreachable block (ram,0x00401ffb)\n\nuint32_t __cdecl fcn.00401f94(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t dwPartitionMethod;\n    uint lpSubBlock;\n    uint lplpBuffer;\n    uint lpLocaleEnumProc;\n    uint32_t var_34h;\n    int32_t var_30h;\n    uint cchLang;\n    uint szLang;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar5 = 0x3b;\n    *0x428ed1 = 0x1d;\n    *0x428ecd = arg_10h ^ 0x8d;\n    uVar6 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, (*0x428ecd & 0x78) - 8);\n    if (uVar6 != 0) {\n        (*_sym.imp.VERSION.dll_VerFindFileA)\n                  (*0x428ecd - *0x428ed1, 0x78, uVar6 & 0xa15, uVar6 ^ 0x63000000, *0x428ecd, 0xaca1e53a, \n                   *0x428ed1 ^ 0x55cb798e, *0x428ed1 + *0x428ecd * 0x9d8);\n        (*_sym.imp.USER32.dll_SetParent)(uVar6, 0xff - *0x428ecd);\n        *0x428ecd = arg_10h | *0x428ed1;\n        (*_sym.imp.VERSION.dll_VerFindFileW)\n                  (uVar6 - 0xe7, 0x95550000, uVar6, 0x3b, *0x428ecd * 0x3b + 0x3b, 0x78, (*0x428ecd & 0x3b) * 0x1526a91f\n                   , uVar6);\n        uVar5 = *0x428ed1;\n        (*_sym.imp.USER32.dll_SetClipboardViewer)(*0x428ed1 - (uVar6 & 0x7ceb));\n        (*_sym.imp.KERNEL32.dll_CommConfigDialogW)(*0x428ed1 | 0x78, uVar5 & uVar6 | 0x78, uVar5);\n    }\n    uVar10 = *0x428ed1;\n    *0x428ed1 = arg_10h ^ *0x428ecd;\n    uVar9 = *0x428ecd;\n    if (0x3a < uVar5) {\n        iVar8 = *((uVar6 * uVar10 + 0x627c3b65 ^ 0x623dbaf1) + ((*0x428ed1 | uVar5) - 0xbf) * 4) -\n                (*0x428ecd * 0x78 + -0x4218);\n        uVar10 = uVar6 / *0x428ecd;\n        *0x428ed1 = uVar10;\n        if (*0x428ed1 < '\\0') {\n            uVar9 = 0x78;\n        }\n        else {\n            var_10h = ((iVar8 + uVar6 + *0x428ecd + -0x8d) - (iVar8 - ((uVar6 ^ uVar5) - 0x3b))) -\n                      ((uVar5 | 0x78) - 0x7b);\n            uVar11 = arg_ch ^ *0x428ecd;\n            *0x428ecd = arg_ch;\n            uVar9 = arg_ch;\n            if (*0x428ed1 < '\\x01') {\n                for (; *(var_10h + ((uVar6 - arg_ch) + 4) * 2) != (arg_ch | uVar6) + 0x5a49;\n                    var_10h = var_10h + -0x10000) {\n                    *0x428ed8 = 0;\n                }\n                iVar8 = var_10h + uVar6 * arg_ch;\n                uVar12 = (arg_14h & 0x99) - uVar6 & 0xffff;\n                uVar9 = uVar5;\n                if (*0x428ed1 == 0) {\n                    *0x428ed1 = 0;\n                    iVar8 = (var_10h +\n                            *(iVar8 + *(iVar8 + (((uVar10 & 0xff) - uVar5) + 0x4a) * 4) + (uVar12 - uVar5) + 0x1a)) -\n                            ((uVar12 ^ uVar6) - 0x99);\n                    var_8h = *(iVar8 + (uVar6 + 6) * 4) + (arg_ch & uVar12);\n                    var_24h = var_10h + *(iVar8 + (uVar12 - 0x91) * 4);\n                    do {\n                        if (var_8h == *0x428ecd - 4) {\n                            return 0;\n                        }\n                        uVar5 = arg_14h * 0x6eab;\n                        *0x428ede = uVar5 | arg_10h;\n                        if (*0x428ede < 'U') {\n                            return 0;\n                        }\n                        var_30h = *(var_24h + (uVar5 + 0x6eab) * 4) + var_10h;\n                        var_34h = 0;\n                        while (*(var_30h + arg_14h * -0x6eab + -0x6eab) != *0x428ede - 0x55) {\n                            uVar3 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, 0);\n                            if (uVar3 != 0) {\n                                (*_sym.imp.VERSION.dll_VerQueryValueA)\n                                          (uVar3 - 0x30, uVar3, uVar3 | 0xa1, uVar3 * uVar3 + 0xdc);\n                            }\n                            uVar2 = uVar3 >> 2;\n                            if (0 < uVar3) {\n                                return uVar2;\n                            }\n                            uVar1 = uVar2 >> 1;\n                            dwPartitionMethod = uVar1;\n                            uVar4 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)\n                                              ((uVar3 | 0xa1) - 0xa1, dwPartitionMethod & 0xa1);\n                            if (uVar4 != 0) {\n                                (*_sym.imp.KERNEL32.dll_CreateTapePartition)\n                                          (uVar2, dwPartitionMethod, (uVar1 ^ uVar2) - dwPartitionMethod, uVar2);\n                                *0x428edf = (uVar3 >> 2) << 8;\n                                (*_sym.imp.USER32.dll_SetCapture)((uVar1 ^ uVar2) * 0x19);\n                                (*_sym.imp.VERSION.dll_GetFileVersionInfoW)\n                                          ((uVar4 | 0x3e) ^ dwPartitionMethod, uVar4 ^ 0xa1 | 0xa1, uVar2, \n                                           dwPartitionMethod | 0x8970);\n                                (*_sym.imp.USER32.dll_ShowCaret)(uVar4);\n                                dwPartitionMethod = arg_ch;\n                                (*_sym.imp.VERSION.dll_VerQueryValueW)\n                                          (uVar4, uVar2 | 0xa1, arg_ch * (arg_ch ^ uVar2), 0xa1 - (uVar2 | 0x41d2));\n                            }\n                            var_34h = (var_34h << 7 | var_34h >> 0x19) +\n                                      (*(var_30h + (dwPartitionMethod & uVar2)) ^ 0x50);\n                            var_30h = var_30h + uVar2 + 1;\n                            if (uVar2 < '\\0') {\n                                return dwPartitionMethod & 0xffff;\n                            }\n                        }\n                        *0x428ede = *0x428ede >> 3;\n                        if (var_34h == 0x3bdab3e5 - ((uVar6 ^ (uVar10 & 0xff) + uVar11 & 0xffff) - 0x89)) {\n                            uVar9 = arg_14h * 0x100;\n                            if (-0x100 < uVar9) {\n                                return 0;\n                            }\n                            if (arg_14h < -1) {\n                                return arg_14h;\n                            }\n                            if (uVar9 == 0xfffffeff) {\n                                return arg_14h;\n                            }\n                            if (uVar9 != 0xffffff00) {\n                                return arg_14h;\n                            }\n                            var_8h = *(*(iVar8 + ((uVar9 ^ 0xfc) + 0xd) * 4) + var_10h + arg_14h * -0xfe +\n                                      (*(iVar8 + 0x18) - var_8h) * 2 + -0xfe);\n                            var_24h = (var_10h + *(iVar8 + (6 - arg_14h) * 4)) - (arg_14h + 1);\n                            uVar2 = arg_14h + 1;\n                            if ('\\0' < uVar2) {\n                                return arg_14h;\n                            }\n                            if ('\\0' < uVar2) {\n                                return uVar2;\n                            }\n                            iVar7 = (*(var_10h + *(var_24h + (var_8h - ((arg_14h & 0xff & arg_14h) - 0xff)) * 4)))\n                                              (0, (arg_14h - uVar2) + 0x1f089, (arg_14h * arg_ch ^ arg_14h) + 0x10fd, \n                                               0x40);\n                            *(uVar2 + 0x1560aeae ^ 0x15233ea2) = iVar7 - (uVar2 & arg_14h);\n                        }\n                        var_24h = var_24h + 4;\n                        uVar2 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(uVar5 & *0x428ede, *0x428ede - 10);\n                        if (uVar2 != 0) {\n                            (*_sym.imp.VERSION.dll_VerLanguageNameA)(*0x428ede + 0x17e65b19, uVar2, *0x428ede & uVar2);\n                            (*_sym.imp.VERSION.dll_VerLanguageNameW)\n                                      (uVar2 * 0x100 + uVar2 + -0x3f000000, uVar2, *0x428ede ^ uVar2 * 0x100);\n                        }\n                        var_8h = var_8h - 1;\n                    } while (uVar2 == 0);\n                    uVar9 = uVar2;\n                }\n            }\n        }\n    }\n    return uVar9;\n}\n",
        "token_count": 2762
    },
    "004029a0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402a42)\n// WARNING: Removing unreachable block (ram,0x00402a04)\n// WARNING: Removing unreachable block (ram,0x004029c7)\n// WARNING: Removing unreachable block (ram,0x00402a27)\n// WARNING: Removing unreachable block (ram,0x00402b14)\n// WARNING: Removing unreachable block (ram,0x004029f0)\n\nuint32_t fcn.004029a0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    *0x428f42 = 0x7290;\n    uVar1 = fcn.00404cbf();\n    *0x428f42 = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, (uVar1 & 0xffff) - 0x40);\n    uVar2 = uVar2 & 0xff;\n    if (uVar2 != '\\0') {\n        (*_sym.imp.KERNEL32.dll_WriteProfileSectionA)(-(uVar1 & 0xffff), *0x428f42);\n        uVar2 = uVar2 / 0x2b;\n        (*_sym.imp.VERSION.dll_VerQueryValueA)(*0x428f42, uVar2 | *0x428f42, uVar2, 0);\n    }\n    *0x428f42 = 0;\n    return uVar2;\n}\n",
        "token_count": 335
    },
    "00402b23": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402b73)\n\nuint32_t __cdecl fcn.00402b23(uint noname_0, uint noname_1, uint noname_2, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t arg_8h;\n    uint32_t uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    uVar1 = arg_14h;\n    if ((arg_14h & 0xffff) < 0xe1) {\n        if ((-0x21 < uVar1) && (arg_8h = (uVar1 >> 1) << 8,  uVar2 = (arg_14h & 0xffff) / 0x33 << 8,  uVar1 != 0xdf)) {\n            if (uVar1 >> 1 == 0x70) {\n                *0x428ee9 = uVar1;\n                fcn.004011e7(arg_8h, 0x70, arg_8h);\n            }\n            uVar2 = arg_14h & 0xff;\n        }\n    }\n    *0x428ee9 = uVar1;\n    return uVar2;\n}\n",
        "token_count": 293
    },
    "00402bf6": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c1e)\n// WARNING: Removing unreachable block (ram,0x004039fd)\n// WARNING: Removing unreachable block (ram,0x00403573)\n// WARNING: Removing unreachable block (ram,0x004034d8)\n// WARNING: Removing unreachable block (ram,0x0040351b)\n// WARNING: Removing unreachable block (ram,0x0040317b)\n// WARNING: Removing unreachable block (ram,0x00403a54)\n// WARNING: Removing unreachable block (ram,0x00403254)\n// WARNING: Removing unreachable block (ram,0x004036ea)\n// WARNING: Removing unreachable block (ram,0x00403a6c)\n// WARNING: Removing unreachable block (ram,0x00403295)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00402bf6(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint var_6ch;\n    uint dwHandle;\n    uint lptstrFilename;\n    uint lpmi;\n    uint hmenu;\n    uint fByPosition;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint pBlock;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint pfnFilterProc;\n    uint lpDateFmtEnumProcEx;\n    uint FileHandle;\n    uint var_28h;\n    uint lpNamedPipeName;\n    uint lpCollectDataTimeout;\n    uint var_1ch;\n    uint var_18h;\n    uint lpLocaleEnumProc;\n    uint lplpBuffer;\n    int32_t var_ch;\n    uint8_t *var_8h;\n    uint var_4h;\n    \n    uVar5 = arg_8h & 0x92;\n    uVar6 = uVar5 >> 1;\n    uVar7 = uVar5 >> 3;\n    if (0x11 < uVar7) {\n        *0x428f27 = (uVar5 - uVar6) + 0x1560ae65 ^ 0x15233ea2;\n        if (uVar5 < 0x93) {\n            *0x428f23 = (*0x428f27)[(uVar7 | 0xd0) - 0xd2];\n            var_8h = *0x428f23 - (uVar5 * 0xd0 + -0x76a0);\n            uVar5 = uVar6;\n            if (uVar6 == 0x49) {\n                var_ch = uVar7 * 0x49 + 0x1eb66;\n                while (var_ch != 0x12 - uVar7) {\n                    uVar1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, 0);\n                    if (uVar1 != 0) {\n                        (*_sym.imp.USER32.dll_TranslateAcceleratorW)(uVar1 * (uVar1 & 0x4f78e5eb), 0xf1, 0);\n                        (*_sym.imp.VERSION.dll_VerQueryValueW)(0xf1, (uVar1 & 0x4a4b) * 0xf1, 0xfdb99036, 0);\n                        (*_sym.imp.KERNEL32.dll_LocalReAlloc)(uVar1, 0xf1, 0xffff7be6);\n                        (*_sym.imp.VERSION.dll_VerQueryValueA)(uVar1, uVar1, 0xf1, (uVar1 ^ 0x61ee81b9) + 0xf1);\n                        (*_sym.imp.VERSION.dll_VerFindFileA)\n                                  (uVar1 + 0xd4a2, uVar1 * -0x6023705d, 0xf1, (uVar1 & 0xf1) - uVar1, \n                                   uVar1 ^ 0x9c ^ uVar1, 0xf1, 0xf1, 0xf1);\n                    }\n                    if (var_ch < 8) {\n                        uVar1 = arg_8h * '\\x02';\n                        lpCollectDataTimeout._0_1_ =\n                             (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(uVar1 - 0x66, uVar1 - 0x66);\n                        if (lpCollectDataTimeout != 0) {\n                            (*_sym.imp.USER32.dll_CharPrevA)(lpCollectDataTimeout - 0x5f00, lpCollectDataTimeout);\n                            lpCollectDataTimeout._0_1_ = lpCollectDataTimeout / 0x5b;\n                            (*_sym.imp.KERNEL32.dll_CreateProcessA)\n                                      (lpCollectDataTimeout, lpCollectDataTimeout, lpCollectDataTimeout, \n                                       lpCollectDataTimeout + 0xea2bf069, 0, lpCollectDataTimeout, lpCollectDataTimeout\n                                       , lpCollectDataTimeout, lpCollectDataTimeout, lpCollectDataTimeout);\n                            (*_sym.imp.KERNEL32.dll_GetNamedPipeHandleStateA)\n                                      (lpCollectDataTimeout, lpCollectDataTimeout, lpCollectDataTimeout ^ 0xec, \n                                       lpCollectDataTimeout, lpCollectDataTimeout, lpCollectDataTimeout, \n                                       lpCollectDataTimeout);\n                            (*_sym.imp.KERNEL32.dll_MapUserPhysicalPagesScatter)\n                                      (lpCollectDataTimeout & 0xce, lpCollectDataTimeout + 0xed12, lpCollectDataTimeout)\n                            ;\n                        }\n                        uVar1 = lpCollectDataTimeout >> 1;\n                        *0x428f30 = uVar1;\n                        uVar2 = uVar1 & lpCollectDataTimeout;\n                        if (lpCollectDataTimeout < '\\0') {\n                            return lpCollectDataTimeout;\n                        }\n                        *0x428f30 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)\n                                              (uVar1 & uVar2, lpCollectDataTimeout + *0x428f30);\n                        if (*0x428f30 != 0) {\n                            (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)\n                                      (*0x428f30, uVar2 | 0x6000000, (uVar2 ^ *0x428f30) & *0x428f30, \n                                       lpCollectDataTimeout);\n                            (*_sym.imp.VERSION.dll_VerLanguageNameW)(uVar2 & lpCollectDataTimeout, 0, uVar2);\n                            (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeA)\n                                      (lpCollectDataTimeout & 0x88, lpCollectDataTimeout);\n                        }\n                        *var_8h = *(*0x428f23 + lpCollectDataTimeout + uVar2);\n                        uVar1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(*0x428f30 + uVar2, *0x428f30 * uVar2);\n                        if (uVar1 != 0) {\n                            (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeA)(uVar2, *0x428f30);\n                            (*_sym.imp.KERNEL32.dll_WaitNamedPipeW)(uVar1, (uVar1 & 0xc9b40e3d) - uVar1);\n                            (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeW)(uVar1 & 0x43, uVar1);\n                            (*_sym.imp.VERSION.dll_VerInstallFileW)\n                                      (uVar1, uVar2 ^ 0x82c5be4f | uVar1, uVar1, *0x428f30, *0x428f30 * uVar1, \n                                       (*0x428f30 ^ 0x6c) - uVar1, *0x428f30 + (uVar1 | 0xc), uVar2);\n                        }\n                        var_8h = var_8h + uVar1 + *0x428f30 + 1;\n                        *0x428f30 = uVar2 * 0x2f00;\n                        *0x428f23 = *0x428f23 + (uVar2 ^ uVar1) + 1;\n                        var_ch = var_ch - ((*0x428f30 ^ uVar2) + 1);\n                    }\n                    else {\n                        uVar3 = (arg_ch ^ 0x4743) * arg_ch;\n                        uVar3 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)\n                                          ((arg_8h & 0xff & uVar3) - 0x90, (uVar3 | arg_8h & 0xff) - 0x11f3);\n                        if (uVar3 != 0) {\n                            (*_sym.imp.VERSION.dll_VerLanguageNameA)\n                                      (uVar3 - (arg_8h & 0xff), (uVar3 | 0xf939396c) & arg_8h & 0xff, \n                                       (arg_8h & 0xff) * (uVar3 ^ 0x296a00));\n                            (*_sym.imp.KERNEL32.dll_lstrcmpiW)(arg_8h & 0xff, (arg_8h & 0xff) + 0x5700);\n                            return 0;\n                        }\n                        uVar1 = arg_ch;\n                        uVar2 = uVar1 | 0x92;\n                        uVar6 = **0x428f23 * 0x1000000 + **0x428f23 * 0x10000 + **0x428f23 * 0x100 + **0x428f23;\n                        if (0x59b3 < arg_ch) {\n                            *0x428f34 = 0;\n                            return arg_ch;\n                        }\n                        *0x428f27 = *0x428f23;\n                        var_3ch = 0;\n                        uVar3 = arg_8h;\n                        *0x428f34 = uVar3;\n                        FileHandle._0_1_ = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)((arg_8h & 0xffff) - 0x59b3, 0);\n                        pBlock._0_2_ = arg_ch;\n                        if (FileHandle != 0) {\n                            (*_sym.imp.VERSION.dll_VerQueryValueA)(0, uVar2, uVar2 - 0x5f400, FileHandle);\n                            FileHandle._0_1_ = uVar1 & 0x6d;\n                            (*_sym.imp.KERNEL32.dll_EnumDateFormatsExW)(0, arg_ch, *0x428f34 ^ FileHandle);\n                            (*_sym.imp.KERNEL32.dll_BindIoCompletionCallback)\n                                      ((FileHandle | 0x500) ^ arg_ch, FileHandle ^ 0x1b00, *0x428f34);\n                            (*_sym.imp.KERNEL32.dll_IsBadHugeReadPtr)(uVar2 | 5 | *0x428f34, 0);\n                            (*_sym.imp.KERNEL32.dll_SetConsoleScreenBufferSize)(*0x428f34 + 0xc518, 0);\n                            pBlock._0_2_ = uVar3;\n                        }\n                        if ((*0x428f27)[FileHandle & uVar2] == uVar6) {\n                            uVar4 = arg_ch ^ 0xcd;\n                            if (uVar4 < 0x597e) {\n                                return 0x55;\n                            }\n                            *0x428f3a = uVar4 >> 2;\n                            if (0x597e < uVar4) {\n                                return *0x428f3a;\n                            }\n                            if ((*0x428f27)[1] == uVar6) {\n                                var_3ch = ((arg_ch | 0xea) ^ 0xea) - 0x5910;\n                            }\n                        }\n                        *0x428f34 = *0x428f34 >> 3;\n                        *0x428f34 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, FileHandle + uVar2 + -0xb3);\n                        if (*0x428f34 != 0) {\n                            (*_sym.imp.VERSION.dll_VerQueryValueW)\n                                      (0, pBlock + uVar2 * 0x195f8f5, uVar2 + *0x428f34, FileHandle | 0xe000000);\n                            (*_sym.imp.KERNEL32.dll_IsBadCodePtr)(uVar2);\n                            *0x428f34 = uVar3;\n                            (*_sym.imp.USER32.dll_UnhookWindowsHook)(pBlock, (uVar2 | 0xcf440000) - uVar2);\n                        }\n                        if (var_3ch == FileHandle) {\n                            *0x428f3e = uVar1 + 0x8a;\n                            if (*0x428f3e != 0x3d) {\n                                return *0x428f3e;\n                            }\n                            var_8h[((arg_ch | 0xad00) + *0x428f3e ^ 0x3d) - 0xfdcd] = **0x428f23;\n                            uVar3 = uVar3 ^ 0xf0e8;\n                            if (*0x428f3e < '=') {\n                                return *0x428f3e;\n                            }\n                            var_8h = var_8h + ((uVar3 | *0x428f3e) - 0xa97e);\n                            uVar4 = uVar3 >> 3;\n                            if ('=' < *0x428f3e) {\n                                return uVar4;\n                            }\n                            *0x428f23 = *0x428f23 + ((uVar3 | *0x428f3e) - 0xa97e);\n                            uVar3 = *0x428f3e % 0x1e;\n                            *0x428f3e = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)\n                                                  ((uVar4 | *0x428f3e) - 0x153f, uVar4 * *0x428f3e + -0x50b3f);\n                            if (*0x428f3e != 0) {\n                                (*_sym.imp.VERSION.dll_VerFindFileW)\n                                          (*0x428f3e, uVar3, (uVar3 ^ 0x2602) * uVar3, uVar4 ^ 0x6474, uVar3, 0, \n                                           (uVar4 | 0xd3a300) ^ *0x428f3e, *0x428f3e - (uVar4 ^ 0x9d723c5f));\n                                (*_sym.imp.USER32.dll_ReleaseDC)(*0x428f3e, *0x428f3e);\n                                (*_sym.imp.VERSION.dll_VerQueryValueW)\n                                          (uVar4, uVar3 | 0xed00, uVar4 + uVar3, (*0x428f3e & 0xfb4647e1) - *0x428f3e);\n                                (*_sym.imp.VERSION.dll_GetFileVersionInfoA)\n                                          (uVar3 * (uVar4 ^ 0xf200), uVar4, uVar4, uVar4 + 0x27b58d72);\n                            }\n                            var_ch = var_ch - (*0x428f3e + uVar4 + -0x152a);\n                        }\n                        else {\n                            uVar1 = arg_8h | 0xb;\n                            if (uVar1 == 0xba) {\n                                return 0xba;\n                            }\n                            if (uVar1 != 0xbb) {\n                                return uVar1;\n                            }\n                            var_ch = var_ch - ((arg_ch | 0xbb) - 0x59b3);\n                            uVar3 = arg_ch - 0xbb;\n                            *0x428f23 = *0x428f23 + ((uVar3 | 0xbb) - 0x58f3);\n                            uVar6 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, uVar3 * 0xbb + -0x40fd28);\n                            if (uVar6 != 0) {\n                                (*_sym.imp.VERSION.dll_VerQueryValueW)(0xbb, uVar3, uVar6 ^ 0xbb, 0xbb);\n                                (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n                                (*_sym.imp.USER32.dll_InsertMenuItemA)\n                                          (uVar6 & 0xff, (uVar3 | 0x8d000000) + uVar6, uVar3 * (uVar6 & 0xff) + 0xcc, \n                                           uVar6);\n                            }\n                        }\n                    }\n                }\n                *0x428f23 = *(uVar7 + 0x1560ae9c ^ 0x15233ea2);\n                *0x428f27 = uVar7 + 0x3f979a07 ^ 0x3fd40a0d;\n                **0x428f27 = var_8h - *0x428f23 >> 3;\n            }\n        }\n        else {\n            uVar5 = 0xd0;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 3853
    },
    "004045a3": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004045de)\n// WARNING: Removing unreachable block (ram,0x004046b4)\n// WARNING: Removing unreachable block (ram,0x004045c1)\n// WARNING: Removing unreachable block (ram,0x0040465f)\n// WARNING: Removing unreachable block (ram,0x004045f6)\n// WARNING: Removing unreachable block (ram,0x004046cb)\n\nuint32_t fcn.004045a3(void)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    uint lpLocaleEnumProc;\n    uint nIndex;\n    \n    uVar3 = 0xe0;\n    uVar1 = fcn.00402b23(0xe0, 0xe000, 0xe0, 0xe0);\n    if (uVar1 < 0xe1) {\n        if (uVar1 == 0xe0) {\n            uVar3 = fcn.004058fb(0xafe0, 0xafe0, 0xe0);\n            uVar3 = uVar3 & 0xff;\n            if (uVar3 < 0) {\n                uVar3 = 0xe000;\n            }\n            else {\n                iVar2 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(uVar3, 0);\n                if (iVar2 != 0) {\n                    (*_sym.imp.VERSION.dll_VerQueryValueA)(uVar3, 0, 0x54, 0);\n                    (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar3);\n                    (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n                    (*_sym.imp.USER32.dll_GetClassLongA)(0, 0);\n                }\n                if (0 < iVar2) {\n                    uVar3 = 0;\n                }\n            }\n        }\n    }\n    else {\n        uVar3 = 0xe000;\n    }\n    return uVar3;\n}\n",
        "token_count": 444
    },
    "004049e1": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404b0f)\n// WARNING: Removing unreachable block (ram,0x00404af4)\n\nint16_t fcn.004049e1(void)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x428ee1 = 0x4b00;\n    *0x428ee1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, 0);\n    if (*0x428ee1 != 0) {\n        (*_sym.imp.VERSION.dll_VerLanguageNameW)(0x1ad00, 0xb600, 0);\n        (*_sym.imp.USER32.dll_DefMDIChildProcA)(*0x428ee1 * (*0x428ee1 | 0x26e4), 0x26e4, 0x2600, 0);\n        *0x428ee3 = *0x428ee1;\n        (*_sym.imp.USER32.dll_EnumPropsExW)(0xffff9400, 0x26e4, (*0x428ee1 ^ 0x26e4) * 0xb600);\n    }\n    *0x428ee3 = 0;\n    iVar1 = fcn.0040154e(0, *0x428ee1);\n    iVar2 = 0;\n    if (iVar1 != 1) {\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 337
    },
    "00404cbf": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404e68)\n// WARNING: Removing unreachable block (ram,0x00404d5b)\n// WARNING: Removing unreachable block (ram,0x00404d32)\n// WARNING: Removing unreachable block (ram,0x00404e4c)\n// WARNING: Removing unreachable block (ram,0x004050c5)\n// WARNING: Removing unreachable block (ram,0x00404cf8)\n// WARNING: Heritage AFTER dead removal. Example location: r0x0043900c : 0x004050a5\n// WARNING: Restarted to delay deadcode elimination for space: ram\n\nuint32_t fcn.00404cbf(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint flags;\n    uint var_18h;\n    uint var_14h;\n    uint dwFlags;\n    uint uCheck;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *0x428f48 = 0x40;\n    *0x428f44 = *0x43900c;\n    *0x428f48 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, 0);\n    if (*0x428f48 != 0) {\n        (*_sym.imp.VERSION.dll_VerFindFileA)\n                  (*0x428f48 | 0x9bc4, 0x80, *0x428f48 * 0x40, 0x48, (*0x428f48 & 0xffff1f68) - 0xe098, 0x40, 0xffff9d4b\n                   , 0);\n        (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        (*_sym.imp.USER32.dll_AnyPopup)();\n    }\n    var_8h = *(((*0x428f48 ^ 0x40) + 0x3f9799d9 ^ 0x3fd40a0d) + ((*0x428f48 ^ 0x40) - 0x40) * 4);\n    while( true ) {\n        if (var_8h == 0) {\n            if (*0x428f48 != 0) {\n                return 0x40;\n            }\n            if ((*0x428f48 & 0x40) != 0) {\n                return *0x428f48 & 0x40;\n            }\n            *0x428f48 = 0x40;\n            (**0x43900c)();\n            uVar2 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)\n                              ((*0x428f48 % *0x428f48 ^ *0x428f48) - 0x40, (*0x428f48 | *0x428f48 % *0x428f48) - 0x40);\n            if (uVar2 == 0) {\n                return *0x428f48;\n            }\n            (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeW)(uVar2, *0x428f48);\n            (*_sym.imp.USER32.dll_GetQueueStatus)(uVar2 & 1);\n            return *0x428f48;\n        }\n        *0x428f4c = 0x8900;\n        *0x428f4c = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, 0);\n        if (*0x428f4c != 0) {\n            (*_sym.imp.KERNEL32.dll_GetCommState)(0x8a, 0x8a830000);\n            (*_sym.imp.USER32.dll_CheckMenuItem)(0x79912800, *0x428f4c * 0x80, *0x428f4c * 0x3d2600 + -0x8a);\n        }\n        uVar2 = *0x428f4c + 0x80;\n        if (0x80 < uVar2) {\n            return 0x80;\n        }\n        **0x428f44 = (*0x428f44)[(*0x428f4c | 0x80) - 0x80] ^ (*0x428f4c ^ 0x8a) + 0xdfece38e;\n        uVar1 = 0x80 / uVar2;\n        if (0x80 < uVar2) {\n            return uVar2;\n        }\n        uVar3 = uVar2 >> 2;\n        if (0x20 < uVar3) break;\n        (*0x428f44)[1] = (*0x428f44)[uVar1 + *0x428f4c] ^ 0x47235349;\n        *0x428f4e = uVar2 >> 1;\n        if (uVar3 < 0x20) {\n            return *0x428f4c;\n        }\n        *0x428f44 = *0x428f44 + ((*0x428f4c | uVar2) - 0x78);\n        *0x428f4c = *0x428f4e & *0x428f4c;\n        var_8h = var_8h - (uVar1 * uVar3 + -0x1f);\n        if (uVar2 != 0x80) {\n            return uVar2 >> 1;\n        }\n    }\n    return *0x428f4c;\n}\n",
        "token_count": 1210
    },
    "004058fb": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004058fb(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint lpLocaleEnumProc;\n    uint var_4h;\n    \n    *0x428eec = arg_ch;\n    uVar4 = (arg_10h & 0xff) * 0x100;\n    if (arg_ch * 0x66 < 0x1340) {\n        uVar5 = arg_ch;\n    }\n    else {\n        uVar3 = uVar4 % arg_10h;\n        uVar2 = arg_ch * 0x66 + (uVar3 ^ 0xaf81);\n        uVar6 = uVar4 - 0x7f00 & 0xffff;\n        uVar5 = uVar3;\n        if (0xdfff < uVar4) {\n            uVar5 = uVar4 / uVar2 & 0xffff;\n            uVar1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)\n                              (((arg_ch >> 3) - uVar2) + 0xacc5, (arg_ch ^ uVar5) - 0xafe1);\n            if (uVar1 != 0) {\n                (*_sym.imp.USER32.dll_DdeInitializeA)(uVar5 ^ uVar1 | uVar2, uVar3, uVar5 | 0xb9, uVar1);\n                (*_sym.imp.USER32.dll_PtInRect)(uVar2 * -0x5aa18ec5, uVar2 + uVar6, uVar3 & *0x428eec);\n                (*_sym.imp.KERNEL32.dll_GetConsoleTitleW)(*0x428eec & uVar2 & 0x9ebf18d8, 0);\n                *0x428eee = arg_8h - uVar2;\n            }\n            *0x428eec = (uVar2 - uVar1) + arg_10h;\n            uVar5 = uVar6;\n            if (uVar2 < 0xc2c2) {\n                if (uVar1 == 0) {\n                    fcn.004019e9(uVar3);\n                }\n                *0x428eee = (uVar4 % arg_10h) * '\\x02' + 0x48;\n                if (uVar6 < 0x6101) {\n                    if (uVar6 == 0x6100) {\n                        uVar5 = uVar1;\n                    }\n                    else {\n                        uVar5 = *0x428eee;\n                    }\n                }\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 626
    },
    "00405ab1": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405ac6)\n\nuint32_t fcn.00405ab1(uchar param_1, uint8_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h;\n    int32_t unaff_ESI;\n    \n    *0x428ecc = param_2;\n    *0x428ec7 = param_2 >> 3;\n    uVar1 = *0x428ec7;\n    if ((*0x428ec7 == 0) && (*0x428ec8 = uVar1 * 0x100,  uVar1 = param_2,  param_2 == 0)) {\n        *0x428ec7 = param_2 + 4;\n        if (param_2 == 0) {\n            arg_8h = -1;\n            *0x428ecc = param_1;\n            *0x428ecc = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(*0x428ec8, param_1);\n            if (*0x428ecc != 0) {\n                (*_sym.imp.USER32.dll_ValidateRect)(*0x428ecc, *0x428ec8 * *0x428ec8);\n                (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(0xffffffff, 0, 0, *0x428ec8 * 0x98);\n                (*_sym.imp.USER32.dll_SwitchToThisWindow)(*0x428ec8 & *0x428ec7 | *0x428ecc, *0x428ec7 - 0x3ea2);\n                arg_8h = *0x428ec8 + 0xfd0c;\n                (*_sym.imp.USER32.dll_RegisterClipboardFormatW)(*0x428ecc);\n            }\n            if (*0x428ec8 == 0) {\n                *0x428ecc = fcn.00401f94(arg_8h, *0x428ec7, 0, arg_8h);\n            }\n            *0x428ec8 = (*0x428ecc | 0x8a00) - unaff_ESI;\n            if (*0x428ecc == 0xff) {\n                uVar1 = 0xff;\n            }\n            else {\n                *0x428ec7 = *0x428ec7 - 1;\n                *0x428ecc = (*0x428ec8 + *0x428ec7) - 0x15;\n                uVar1 = *0x428ec8;\n            }\n        }\n        else {\n            uVar1 = *0x428ec7;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 586
    },
    "004041c5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404235)\n// WARNING: Removing unreachable block (ram,0x004041f6)\n\nuint32_t __cdecl fcn.004041c5(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint pDst;\n    uint var_24h;\n    uint lpFileInformation;\n    uint lpLocaleEnumProc;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint lpString;\n    uint szWinDir;\n    \n    uVar5 = (arg_ch & 0xf400) >> 3;\n    var_ch = ((arg_ch & 0xf400) - (uVar5 & 0xff)) + 0x9d2b49fd ^ 0x9d6acbf1;\n    uVar2 = arg_ch - 0x9b & 0xffff ^ 0xe49b;\n    uVar3 = uVar5 & 0xff;\n    var_14h = *((uVar2 * 0x9b + 0xf3d9ed18 ^ 0xf3a94034) + ((uVar5 & 0xff | uVar2) - 0x1be4) * 4);\n    uVar2 = 0xe4 - (uVar5 & 0xff) & 0xffff;\n    uVar1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(uVar3 + (uVar5 & 0xff), 0);\n    if (uVar1 != 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(uVar5 & 0x9b | 0xbba800, 0x9b, uVar3 ^ 0x9081);\n        (*_sym.imp.VERSION.dll_VerFindFileA)\n                  (uVar2 | 0x5c75, (uVar3 ^ 0x9b) & 0xb42d1dd9, uVar1, uVar1, uVar2 * 0x643d563b, 0x9b, uVar2, \n                   0x98000000);\n        (*_sym.imp.KERNEL32.dll_IsValidLanguageGroup)(uVar5 & 0xff, uVar3 | 0x7000);\n        (*_sym.imp.KERNEL32.dll_SizeofResource)(uVar1, 0x9b);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(0x9b, uVar5 & 0xff, 0);\n    }\n    var_18h = uVar1 * 0x9b + 0xc69c;\n    while( true ) {\n        if (var_18h == 0) {\n            if (uVar2 == 0xe3) {\n                return uVar5 & 0xff;\n            }\n            *((uVar2 - (uVar2 >> 1)) + 0xf3eacfb2 ^ 0xf3a94034) = var_14h;\n            return uVar2;\n        }\n        uVar3 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(arg_8h - 0x1a34, 0);\n        if (uVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_Process32Next)(uVar3, uVar3 * -0xd0cffff);\n            (*_sym.imp.USER32.dll_SetMessageQueue)(uVar3);\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesExW)((arg_8h | uVar3) - uVar3, 0, arg_8h & 0x7b000000);\n            (*_sym.imp.USER32.dll_GetCapture)();\n        }\n        if (arg_8h == 0x1a33) break;\n        uVar6 = arg_ch + (arg_8h & uVar3);\n        *(var_14h + uVar6 + arg_8h + -0x1a4e) = *var_ch;\n        *0x428ef5 = arg_8h >> 1;\n        var_14h = var_14h + arg_8h * arg_8h + *0x428ef5 + -0x2aea7a9;\n        uVar3 = arg_8h & 0x91db | arg_ch;\n        uVar4 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(*0x428ef5 * uVar3 + -0xd2f4a4, (arg_8h ^ uVar6) - 0x1a2e);\n        if (uVar4 != 0) {\n            (*_sym.imp.USER32.dll_CharPrevW)(*0x428ef5, uVar6 + uVar4);\n            (*_sym.imp.USER32.dll_CharToOemW)((uVar4 ^ 0xbe0b) - *0x428ef5, uVar3);\n            (*_sym.imp.VERSION.dll_VerInstallFileA)\n                      (uVar6, uVar6 * 0x2700, *0x428ef5 * 0x254b8e7d, uVar3 + *0x428ef5 * -0xebf4, \n                       *0x428ef5 | uVar4 | uVar6, uVar4 ^ uVar3, uVar4 * 0x35e95e04 * uVar6, uVar4);\n        }\n        var_ch = var_ch + (uVar6 & uVar4) + 1;\n        var_18h = var_18h - ((*0x428ef5 & uVar3) - 0x19);\n        if (uVar4 == 0xffffffff) {\n            return *0x428ef5;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1337
    },
    "0040154e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040154e(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint32_t hFindVolumeMountPoint;\n    \n    uVar2 = arg_8h & 0xff;\n    *0x428ee4 = 0;\n    if (-1 < uVar2) {\n        hFindVolumeMountPoint = (arg_8h & 0xffff) - 99;\n        uVar1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)\n                          (hFindVolumeMountPoint * (arg_ch & 0xffff), arg_8h + hFindVolumeMountPoint + 99);\n        uVar1 = uVar1 & 0xffff;\n        if (uVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_GetThreadPriorityBoost)(uVar1, arg_8h - uVar2);\n            (*_sym.imp.VERSION.dll_VerQueryValueW)\n                      (uVar2 & *0x428ee4, *0x428ee4 * (hFindVolumeMountPoint | 0x6303), \n                       hFindVolumeMountPoint | 0x1bd20000, arg_8h ^ *0x428ee4);\n            hFindVolumeMountPoint = arg_8h;\n            (*_sym.imp.USER32.dll_InflateRect)(arg_8h, arg_8h - 0xdcf9, (uVar1 | 0x5e1b) * arg_8h);\n            (*_sym.imp.VERSION.dll_VerLanguageNameW)(arg_8h + (uVar2 ^ 0xae44), *0x428ee4 - 0x26, *0x428ee4);\n            (*_sym.imp.USER32.dll_BroadcastSystemMessageA)\n                      (arg_8h ^ 0x85eb00, arg_8h, uVar1 ^ *0x428ee4 ^ 0xb9, uVar1, uVar2);\n        }\n        if (arg_8h == 0) {\n            hFindVolumeMountPoint = fcn.00404754(uVar1, *0x428ee4, hFindVolumeMountPoint);\n        }\n        uVar2 = arg_ch & 0xff;\n        if (-1 < uVar2) {\n            arg_8h = arg_8h & hFindVolumeMountPoint;\n            hFindVolumeMountPoint = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(arg_8h | hFindVolumeMountPoint, 0);\n            if (hFindVolumeMountPoint != 0) {\n                (*_sym.imp.USER32.dll_CallMsgFilterA)(uVar2, uVar1);\n                (*_sym.imp.KERNEL32.dll_FindNextVolumeMountPointA)\n                          (hFindVolumeMountPoint * (arg_8h & 0x8f000000), uVar1 | 0x128390fe, *0x428ee4 ^ 0x647c0000);\n                (*_sym.imp.VERSION.dll_GetFileVersionInfoA)\n                          (uVar2 - uVar1 * hFindVolumeMountPoint, *0x428ee4, *0x428ee4, arg_8h + 0xfa000000 + uVar2);\n                (*_sym.imp.USER32.dll_SetDlgItemTextA)(uVar1, uVar1 | 0xb3, *0x428ee4);\n                hFindVolumeMountPoint = (arg_ch | 0xd0985b86) - arg_8h;\n                (*_sym.imp.VERSION.dll_VerLanguageNameW)\n                          (hFindVolumeMountPoint, arg_8h - (*0x428ee4 | arg_8h), hFindVolumeMountPoint);\n            }\n            uVar2 = uVar1 + 1 & 0xffff;\n            if (uVar2 == 0) {\n                uVar2 = hFindVolumeMountPoint;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 887
    },
    "0040178a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040179f)\n\nuint32_t fcn.0040178a(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    uint32_t unaff_ESI;\n    uint32_t uVar3;\n    uint16_t unaff_DI;\n    uint32_t unaff_retaddr;\n    uint16_t uVar4;\n    \n    uVar3 = 0xea0c;\n    uVar1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, 0);\n    uVar1 = uVar1 & 0xff;\n    if (uVar1 != '\\0') {\n        (*_sym.imp.KERNEL32.dll_FindResourceExW)(0xea0c, 0xea0c, uVar1 * uVar1, uVar1 - 0xea0c);\n        uVar3 = 0x2b8;\n    }\n    uVar3 = uVar3 ^ 0xc900 | uVar3;\n    uVar2 = uVar3;\n    if (((uVar3 < 0xeb0d) && (uVar2 = uVar1,  uVar3 != 0xeb0b)) && (uVar2 = unaff_ESI & 0xff,  uVar3 != 0xeb0b)) {\n        *0x428f3f = unaff_retaddr;\n        uVar2 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, (unaff_ESI & 0xff & unaff_retaddr & 0xffff) - 0xb3);\n        uVar2 = uVar2 & 0xff;\n        if (uVar2 != '\\0') {\n            (*_sym.imp.KERNEL32.dll_GetCommTimeouts)((uVar3 ^ 0x18) + uVar2, uVar3 | 0x5f1100 | uVar1);\n            uVar1 = *0x428f3f >> 1;\n        }\n        *0x428f3f = *0x428f3f & unaff_DI;\n        if (uVar3 < 0xeb0c) {\n            uVar2 = *0x428f3f;\n        }\n        else {\n            if (uVar2 == '\\0') {\n                uVar3 = fcn.00403c0d(uVar2, uVar1);\n            }\n            uVar2 = (unaff_EBX ^ uVar2) & 0xff;\n            uVar1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)\n                              ((uVar3 & *0x428f3f) - 0x80, uVar2 + (unaff_EBX & 0xffff) + -0x166);\n            uVar1 = uVar1 & 0xffff;\n            if (uVar1 != 0) {\n                (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeW)(uVar2, uVar2);\n                (*_sym.imp.USER32.dll_CreateIconFromResourceEx)\n                          (uVar3 * *0x428f3f - uVar1, uVar1 * (uVar3 ^ 0x1c), uVar1 ^ uVar2, uVar1 * 2 + *0x428f3f, \n                           uVar3, uVar3, uVar2);\n                (*_sym.imp.VERSION.dll_VerLanguageNameA)\n                          (uVar2 ^ 0xa9 | uVar2, uVar3 - 0xcc, *0x428f3f - (uVar2 | 0xbb4c0000));\n                uVar4 = *0x428f3f;\n                (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(*0x428f3f, uVar1 | uVar3, uVar3);\n                (*_sym.imp.KERNEL32.dll_CreateIoCompletionPort)\n                          (uVar2 + 0xf40f37f9, uVar1, *0x428f3f % uVar3 + (*0x428f3f % uVar3 | 0xe769), \n                           (uVar2 | *0x428f3f) ^ uVar2);\n                *0x428f3f = uVar4 * 2;\n            }\n            uVar2 = *0x428f3f;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 973
    },
    "004019e9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004019e9(uint16_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = param_1;\n    *0x428eef = (param_1 ^ 0x5b00) & param_1;\n    if (*0x428eef != 0xffff) {\n        *0x428eef = param_1 - *0x428eef % 0x55;\n        uVar2 = param_1;\n        if (*0x428eef < 1) {\n            *0x428eef = *0x428eef * param_1;\n            uVar1 = 0;\n            if (uVar2 == 0) {\n                *0x428eef = 0;\n                if (param_1 == 0) {\n                    uVar1 = fcn.00401e5d();\n                }\n                uVar1 = uVar1 >> 2;\n                uVar2 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(param_1 | uVar1, uVar1 - param_1);\n                uVar2 = uVar2 & 0xffff;\n                if (uVar2 != 0) {\n                    (*_sym.imp.VERSION.dll_VerQueryValueW)\n                              ((*0x428eef | 0x40e8) ^ uVar2, *0x428eef + uVar2 * 0x39ad86da, \n                               *0x428eef & 0x6500 ^ *0x428eef, *0x428eef);\n                    (*_sym.imp.KERNEL32.dll_ReadConsoleInputW)(uVar1 * 0x6500, *0x428eef, uVar2, uVar2);\n                    (*_sym.imp.VERSION.dll_VerFindFileW)\n                              (*0x428eef * uVar1 + 0x7cb60000, uVar1 * *0x428eef, uVar2, *0x428eef ^ 0xcb, *0x428eef, \n                               uVar2, (uVar1 ^ 0x790b) + uVar2, uVar2 - 0x5a4f);\n                }\n                uVar3 = ((uVar1 | 0xa78f00) ^ uVar2) & 0xffff;\n                uVar2 = uVar1;\n                if (((-1 < *0x428eef) && (uVar2 = uVar3,  0x9a < ((uVar1 | 0xc29b) + *0x428eef & 0xff))) &&\n                   (uVar1 + 1 < 2)) {\n                    uVar2 = *0x428eef;\n                }\n            }\n        }\n        else {\n            uVar2 = *0x428eef;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 655
    },
    "00403c0d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403dce)\n// WARNING: Removing unreachable block (ram,0x00403d71)\n\nuint32_t __cdecl fcn.00403c0d(uint arg_8h, uint32_t arg_ch)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint lpLocaleEnumProc;\n    \n    uVar4 = arg_ch & 0xff;\n    iVar1 = uVar4;\n    if (uVar4 == 0) {\n        uVar4 = arg_ch & 0xffff | 0x64e;\n        if (uVar4 == 0x64d) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = uVar4 - 1 & 0xffff;\n            uVar2 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, 0);\n            uVar2 = uVar2 & 0xff;\n            if (uVar2 != '\\0') {\n                (*_sym.imp.USER32.dll_DlgDirSelectExA)(-uVar4, uVar4 * 0xfa86, uVar2, 0x6b - uVar4);\n                (*_sym.imp.USER32.dll_GetMenuItemRect)(uVar4 ^ 0x5b81 ^ uVar2, uVar4, uVar2 + 0xf3, 0);\n                uVar3 = uVar4 - 0xbc;\n                (*_sym.imp.USER32.dll_GetUserObjectInformationA)\n                          (uVar4, (uVar3 | 0x6442d4b) + uVar2, uVar3 * 0x6dbc, uVar3, (uVar4 - uVar2) + -0x63dcba28);\n                (*_sym.imp.USER32.dll_SetWindowTextA)(uVar4 - 0xe2, uVar2 + (arg_ch & 0x75));\n            }\n            if ((uVar4 ^ uVar2) == 0x64d) {\n                if (uVar2 == '\\0') {\n                    iVar1 = fcn.004029a0();\n                }\n                if (iVar1 == 0) {\n                    *0x428f41 = 0xc4;\n                    if (uVar2 == 0) {\n                        uVar4 = 0xc4;\n                    }\n                    else {\n                        uVar4 = 0xc4;\n                    }\n                }\n                else {\n                    uVar4 = 0x64d;\n                }\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 581
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403e62)\n// WARNING: Removing unreachable block (ram,0x00403e4c)\n// WARNING: Removing unreachable block (ram,0x00403e76)\n// WARNING: Removing unreachable block (ram,0x00403eaf)\n// WARNING: Removing unreachable block (ram,0x00403e2b)\n\nuint8_t main(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint dwFlags;\n    uint lpCommTimeouts;\n    \n    fcn.00405ab1(0, 0);\n    uVar1 = fcn.004049e1(0, 0, 0);\n    *0x428ec6 = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(uVar1, 0);\n    uVar2 = uVar2 & 0xffff;\n    if (uVar2 != 0) {\n        (*_sym.imp.USER32.dll_SwitchDesktop)(0x1e9d);\n        (*_sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsA)((uVar2 | 0xc68700) & uVar1, 0x16cb4c49, 0);\n        (*_sym.imp.VERSION.dll_VerQueryValueW)\n                  ((*0x428ec6 & 0x62e0) + *0x428ec6, *0x428ec6 * 0x73026a5 - uVar2, 0, *0x428ec6 | 0x599d);\n        (*_sym.imp.USER32.dll_SetProcessWindowStation)(*0x428ec6);\n    }\n    *0x428ec6 = (uVar1 | 100) + uVar2;\n    *0x428ec6 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, (uVar2 ^ 0x1e9d) - 0x1e9d);\n    if (*0x428ec6 != 0) {\n        (*_sym.imp.KERNEL32.dll_VirtualLock)((uVar2 ^ 0x1e9d) & 0x6e13, *0x428ec6 - 0x6ed1);\n        (*_sym.imp.USER32.dll_IsCharAlphaA)(0x5f9f);\n        (*_sym.imp.KERNEL32.dll_DebugActiveProcess)(uVar1 + 0x1e9d);\n    }\n    return *0x428ec6;\n}\n",
        "token_count": 557
    },
    "00403ff6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403ff6(uint noname_0, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint dwThreadId;\n    \n    arg_ch = arg_ch & 0xffff;\n    uVar2 = arg_ch ^ 0x5608;\n    if (((uVar2 != 0x5607) && (uVar2 = arg_10h - 0xe07c00 & 0xffff,  uVar2 < 0x8401)) && (-1 < arg_ch)) {\n        uVar3 = arg_ch - 0xc00 & 0xffff;\n        uVar1 = uVar3 ^ 4 | arg_ch;\n        if (uVar3 < 0xf401) {\n            *0x428f0c = uVar2 - 0xa799;\n            uVar4 = uVar3 % *0x428f0c & 0xffff;\n            if (arg_ch == 0) {\n                uVar3 = fcn.00401000(uVar3, arg_ch, uVar1);\n                uVar3 = uVar3 & 0xffff;\n                uVar2 = uVar4 >> 3;\n                if (((uVar1 == 4) && (*0x428f0c = arg_10h ^ 0x15d0,  uVar2 = uVar4,  0x15cf < *0x428f0c)) &&\n                   ((uVar2 = uVar3 >> 1,  uVar2 < 0x6797 &&\n                    (uVar1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)\n                                       (*0x428f0c + uVar4 + -0x109d0, 0x15d0 - *0x428f0c),  uVar1 != 0)))) {\n                    (*_sym.imp.KERNEL32.dll_TlsGetValue)(uVar1 - (uVar4 ^ 0x93cb0000));\n                    (*_sym.imp.VERSION.dll_VerFindFileA)\n                              (uVar2, (uVar2 ^ 0x6a511567) + *0x428f0c, (uVar4 & *0x428f0c) * -0x4be6f94e, uVar3 - 0x44\n                               , uVar4 + *0x428f0c, (uVar3 | uVar4) ^ uVar2, *0x428f0c * 2 + 0x69, \n                               (uVar4 | uVar3) ^ uVar4);\n                    (*_sym.imp.KERNEL32.dll_ContinueDebugEvent)(uVar3, uVar1, uVar3 | 0x20b60000);\n                }\n            }\n            else {\n                uVar2 = uVar1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 664
    },
    "00404754": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404987)\n\nuint32_t __cdecl fcn.00404754(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)((arg_10h & 0xff) - 0x9d, 0);\n    uVar1 = uVar1 & 0xff;\n    if (uVar1 != '\\0') {\n        (*_sym.imp.USER32.dll_EnumDisplayMonitors)(uVar1 * -0x9dab, uVar1 + 0x69000000, 0x33aa0000, 0);\n        (*_sym.imp.VERSION.dll_GetFileVersionInfoW)(uVar1, uVar1 * uVar1, uVar1, uVar1);\n        (*_sym.imp.VERSION.dll_VerFindFileA)(uVar1, 0x4cac, 0xd6120000, uVar1, uVar1 + 0xb382, uVar1, 0x467a, uVar1);\n        (*_sym.imp.KERNEL32.dll_GetCurrencyFormatW)(0, -uVar1, 0, uVar1, 0x54374cd7 - uVar1, uVar1 * 0x5900);\n    }\n    uVar2 = (arg_10h & 0xffff) + uVar1;\n    uVar4 = uVar2 & 0xffff;\n    uVar1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, uVar4 + uVar1 + -0xff9d);\n    uVar3 = uVar1 & 0xff;\n    if (uVar3 != '\\0') {\n        (*_sym.imp.VERSION.dll_GetFileVersionInfoW)\n                  (uVar4 - (uVar3 ^ 0xad), uVar3, uVar1 & 0xc1, (uVar2 & 0x6f00) * uVar4);\n        (*_sym.imp.KERNEL32.dll_RequestDeviceWakeup)(uVar4 | 0x49ae3e41);\n        (*_sym.imp.USER32.dll_InsertMenuItemW)(uVar3 + (uVar4 | 0xa1ee), uVar4 | 0x903d3d93, 0, 0);\n        (*_sym.imp.VERSION.dll_VerFindFileW)\n                  (uVar4, uVar4 | 0xba, uVar3 * uVar3, uVar4, uVar4, uVar3 + 0xb500, uVar3 | uVar4, \n                   uVar4 + uVar3 * 0x3f9d);\n    }\n    uVar1 = uVar3;\n    if ((-1 < uVar3) && (uVar3 != 0xff)) {\n        if (uVar4 == 0xff9d) {\n            fcn.004045a3();\n            uVar1 = uVar3 * (arg_ch | 0x7f6eb33) & 0xffff;\n            if ((uVar3 < '\\x01') && (uVar1 = uVar3,  uVar3 - arg_8h == -1)) {\n                uVar1 = arg_10h & 0xff;\n            }\n        }\n        else {\n            uVar1 = uVar4 * (arg_8h | 0x5d);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 822
    },
    "00404b36": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404c0c)\n// WARNING: Removing unreachable block (ram,0x00404ba0)\n// WARNING: Removing unreachable block (ram,0x00404be4)\n\nuint32_t __cdecl fcn.00404b36(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t arg_ch_00;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    *0x428ef9 = arg_8h;\n    if (arg_8h == 0xff) {\n        uVar2 = 0xff;\n    }\n    else {\n        uVar2 = arg_8h | 0x37;\n        if (arg_8h == 0) {\n            uVar3 = uVar2 * 0x25 & 0xff;\n            if (uVar3 < 0xf4) {\n                uVar3 = uVar3 | (uVar2 * 0x25 & 0x86) - uVar3 & 0xff;\n                arg_ch_00 = uVar3 & arg_ch;\n                if (uVar3 == 0xff) {\n                    fcn.004053e1(0xff, arg_ch_00, arg_ch_00);\n                }\n                uVar1 = (arg_ch | 0x33) * *0x428ef9;\n                uVar2 = arg_10h * arg_10h;\n                if (arg_ch_00 == 0) {\n                    if (*0x428ef9 == 0) {\n                        uVar1 = fcn.00405cd3();\n                    }\n                    uVar2 = uVar1 & 0xff;\n                    if (uVar3 == 0xff) {\n                        if (uVar2 != '\\0') {\n                            uVar2 = *0x428ef9;\n                        }\n                    }\n                    else {\n                        uVar2 = *0x428ef9;\n                    }\n                }\n            }\n            else {\n                uVar2 = 0;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 478
    },
    "0040512e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004051cd)\n// WARNING: Removing unreachable block (ram,0x004051aa)\n\nuint32_t __cdecl fcn.0040512e(uint arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_ch;\n    uint lptstrFilename;\n    uint lpTotalBytesAvail;\n    \n    *0x428ef1 = 0;\n    uVar2 = (arg_ch & 0xff) >> 3;\n    if (((arg_ch & 0xff) < 0xd3) && (*0x428ef1 = uVar2,  uVar2 == 0x1a)) {\n        iVar3 = (uVar2 * 0x10000 ^ 0xff) * arg_ch;\n        *0x428ef1 = arg_ch;\n        uVar5 = uVar2 * 0x10000 + 1;\n        uVar4 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, 0);\n        uVar4 = uVar4 & 0xff;\n        cVar1 = uVar4;\n        if (cVar1 != '\\0') {\n            (*_sym.imp.KERNEL32.dll_GetFileType)(iVar3 * 0x28686284);\n            (*_sym.imp.KERNEL32.dll_PeekNamedPipe)\n                      (*0x428ef1 - 0x62ce00, *0x428ef1 | 0x75000000, uVar5, 0xbe1f, iVar3 * 0x1a, uVar4 + 0xe8);\n            (*_sym.imp.VERSION.dll_VerQueryValueW)(0xffff7600, uVar4 + 0x2253cde8, 0, 0x1a - (*0x428ef1 ^ 0x8400));\n            (*_sym.imp.VERSION.dll_GetFileVersionInfoA)(0xdee0, 0, 0x15bc, uVar5 & 0x1a | *0x428ef1);\n        }\n        if (uVar5 == 0x1a0001) {\n            fcn.00403b85(0x1a, 0x1a, 0x1a, iVar3);\n        }\n        uVar2 = *0x428ef1;\n        if ((cVar1 != -1) && (uVar5 = uVar5 >> 1,  uVar2 = uVar4,  uVar4 == 0)) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(uVar5 - 0xd0000, uVar5 - 0xd0000);\n            if (uVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_SetVolumeMountPointW)(uVar5 | 0xee, *0x428ef1 & 0xf8000000);\n            }\n            if (cVar1 == '\\0') {\n                fcn.00404b36(0, 0, uVar5);\n            }\n            uVar4 = (uVar2 | 0x7a00) * arg_ch & 0xffff;\n            uVar2 = *0x428ef1;\n            if (((uVar4 < 0x1401) && (uVar5 < 0xd0001)) && (uVar2 = uVar4,  '\\0' < arg_8h)) {\n                uVar2 = arg_8h;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 811
    },
    "004053e1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405701)\n// WARNING: Removing unreachable block (ram,0x004057c4)\n\nuint16_t __cdecl fcn.004053e1(uint noname_0, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint dwMilliseconds;\n    \n    uVar5 = arg_ch & 0xffff;\n    *0x428efb = arg_10h ^ 0x82;\n    uVar3 = *0x428efb + uVar5 + 0x9d2b497b ^ 0x9d69c770;\n    *0x428efc = *0x428efb * uVar5 * 0xc;\n    if (-1 < *0x428efc) {\n        uVar1 = *0x428efb;\n        uVar4 = *0x428efc;\n        uVar2 = (*0x428efb ^ arg_10h) + *0x428efb;\n        if (uVar5 == 0) {\n            *0x428efb = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)((uVar5 ^ uVar2) - 0x104, uVar2 * *0x428efc);\n            if (*0x428efb != 0) {\n                (*_sym.imp.VERSION.dll_GetFileVersionInfoA)\n                          (*0x428efb & 0x6d | *0x428efc, *0x428efb & 0x12, *0x428efb + uVar5, \n                           *0x428efc | 0xb54d0000 | *0x428efb);\n                (*_sym.imp.USER32.dll_MsgWaitForMultipleObjectsEx)\n                          (uVar5, (uVar2 | 0xbd5fd182) * uVar2, uVar2 * uVar2, uVar5, uVar5 + 0xeab1 + *0x428efb);\n                (*_sym.imp.VERSION.dll_VerQueryValueA)\n                          (*0x428efc * 0xa000000, uVar2 & *0x428efb, uVar2 + (uVar2 ^ 0x8c700000), uVar2);\n                (*_sym.imp.VERSION.dll_VerInstallFileW)\n                          (uVar2 - uVar5, uVar5 ^ *0x428efc, uVar5 + (*0x428efb | 0x9b000000), \n                           (*0x428efb + 0x1ffd536c) - *0x428efb, uVar2, uVar2, uVar2, uVar2 * uVar5);\n            }\n            var_ch = *((uVar1 * uVar4 + 0xf3ead024 ^ 0xf3a94034) + ((uVar5 ^ uVar2) - 0x104) * 4);\n            var_10h = (uVar5 & *0x428efc) + 1;\n            *0x428efb = arg_ch;\n            if (-1 < uVar5) {\n                *0x428efb = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(*0x428efc | uVar5, uVar2 * uVar5);\n                if (*0x428efb != 0) {\n                    (*_sym.imp.VERSION.dll_GetFileVersionInfoA)\n                              ((*0x428efc | 0x2c) ^ uVar5, *0x428efb | uVar2, uVar5 ^ *0x428efc, \n                               uVar2 * *0x428efc * *0x428efb);\n                    (*_sym.imp.USER32.dll_SetMenuInfo)(*0x428efc, *0x428efb * 0x8a40aec);\n                }\n                while (var_10h != (uVar2 | *0x428efb) - 0x104) {\n                    *0x428f06 = arg_ch | 0xc652;\n                    *0x428f04 = arg_ch * -0x5e00;\n                    *var_ch = *(uVar3 + (*0x428f04 & 0x6329));\n                    var_ch = var_ch + (1 - *0x428f04);\n                    uVar3 = uVar3 + 1;\n                    var_10h = var_10h - ((*0x428f06 & 0xc652) - 0xc651);\n                    *0x428f00 = *0x428f06 + 0x49000000;\n                    *0x428f04 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(*0x428f04 * *0x428f06, 0);\n                    if (*0x428f04 != 0) {\n                        (*_sym.imp.KERNEL32.dll_ExitProcess)(*0x428f06);\n                        (*_sym.imp.VERSION.dll_GetFileVersionInfoW)\n                                  (1, 1 - (*0x428f06 | 0xfe00), 0xc152b442, *0x428f04 * 0x218900);\n                        (*_sym.imp.VERSION.dll_VerLanguageNameA)\n                                  (*0x428f04 & 0xc652 | 0xf2a5, *0x428f06, *0x428f00 * 0xf7fc);\n                        *0x428f00 = 1 % *0x428f00;\n                        (*_sym.imp.USER32.dll_GetClipboardData)(0);\n                        (*_sym.imp.VERSION.dll_GetFileVersionInfoW)\n                                  ((*0x428f00 | 0xd000000) - 0xc652, *0x428f04, *0x428f04, *0x428f00 ^ 0x1b3d);\n                    }\n                }\n                *0x439010 = var_ch;\n            }\n        }\n    }\n    return *0x428efc;\n}\n",
        "token_count": 1388
    },
    "00405cd3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405d0b)\n// WARNING: Removing unreachable block (ram,0x00405cf4)\n\nuint32_t fcn.00405cd3(void)\n\n{\n    uint32_t uVar1;\n    \n    *0x428f0a = 0xda49;\n    *0x428f0a = fcn.00403ff6(0, 0, 0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(*0x428f0a * 0xda49 + -0x585345c6, 0);\n    uVar1 = uVar1 & 0xff;\n    if (uVar1 != '\\0') {\n        (*_sym.imp.KERNEL32.dll_ScrollConsoleScreenBufferA)\n                  (0xda49, *0x428f0a + 0xda49, (uVar1 & *0x428f0a) - 0xa1, uVar1, 0x9e49);\n        *0x428f0a = *0x428f0a ^ 0x5900;\n    }\n    return uVar1;\n}\n",
        "token_count": 259
    },
    "00402913": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402946)\n\nchar __cdecl fcn.00402913(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401c1a(0x16, 0x16, 0x16, 0);\n    if (arg_14h == -1) {\n        arg_14h._0_1_ = '\\x16';\n    }\n    return arg_14h;\n}\n",
        "token_count": 129
    },
    "00403b85": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403bff)\n\nuint32_t fcn.00403b85(uint32_t param_1)\n\n{\n    uint32_t unaff_ESI;\n    \n    param_1 = param_1 & 0xffff;\n    if ((param_1 + (param_1 | 0x121a00) & 0xffff) == 0x1a34) {\n        param_1 = fcn.004041c5(0x1a34, param_1);\n        param_1 = param_1 & 0xffff;\n        if ((param_1 == 0xe4) && (0x1a < (unaff_ESI & 0xffff))) {\n            param_1 = unaff_ESI & 0xffff;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 181
    },
    "00401e5d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401f3c)\n// WARNING: Removing unreachable block (ram,0x00401e7f)\n\nuint32_t fcn.00401e5d(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)(0, 0);\n    uVar2 = uVar1 & 0xff;\n    if (uVar2 != '\\0') {\n        (*_sym.imp.VERSION.dll_VerInstallFileW)\n                  (uVar1 & 0xd2, 0, 0, 0, (uVar2 | 0x23d2) - uVar2, uVar2 * 0x253c0000, 0, 0);\n        (*_sym.imp.USER32.dll_IsChild)(0x1084893f, uVar2);\n        (*_sym.imp.USER32.dll_OemToCharW)(0x23d2, uVar2 | 0x23d2);\n        (*_sym.imp.VERSION.dll_VerLanguageNameW)((uVar2 ^ 0xe4d80000) * 0x23d2, 0x47a4, (uVar1 & 3) * 0x23d2);\n    }\n    uVar1 = fcn.0040512e(0, 0x23d2);\n    if ((uVar2 == 0) && (bVar3 = uVar1 == 0x13ff,  uVar1 = uVar2,  bVar3)) {\n        uVar1 = 0xa1;\n    }\n    return uVar1;\n}\n",
        "token_count": 396
    },
    "00403a7e": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint32_t fcn.00403a7e(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    *0x428f1f = 0x59b3;\n    *0x428f21 = 0xb3;\n    *0x428f1f = fcn.00402bf6(0x59b3, 0x59b3);\n    uVar1 = *0x428f21;\n    uVar3 = *0x428f21;\n    if (*0x428f21 == 0xb3) {\n        uVar4 = *0x428f1f;\n        *0x428f1f = 0xb3;\n        uVar2 = fcn.0040178a(0xb3, 0xb3);\n        *0x428f1f = *0x428f1f | 0xaa00;\n        if (uVar4 < 0x4a) {\n            *0x428f1f = uVar1;\n            if (*0x428f21 == 0xb2) {\n                uVar4 = 0xb3;\n            }\n            else {\n                uVar4 = ((uVar2 & 0xff) * (uVar3 | 0x7c91aaff) & 0xff) % uVar4;\n                *0x428f1f = uVar4;\n            }\n        }\n    }\n    else {\n        uVar4 = *0x428f1f;\n    }\n    return uVar4;\n}\n",
        "token_count": 357
    }
}