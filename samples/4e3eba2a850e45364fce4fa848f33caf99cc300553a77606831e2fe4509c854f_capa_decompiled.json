{
    "0045f176": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0045f176(uint8_t *param_1, uint8_t *param_2, int32_t param_3, int32_t *param_4, int32_t param_5, \n                 uint32_t param_6, uint32_t *param_7)\n\n{\n    ushort *puVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    ushort *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint8_t *puVar13;\n    uint8_t *puVar14;\n    uint8_t *puVar15;\n    uint16_t *puVar16;\n    uint32_t uVar17;\n    uint8_t *puVar18;\n    uint32_t uVar19;\n    uint32_t uStack140;\n    ushort *puStack136;\n    uint16_t *puStack124;\n    uint32_t uStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint32_t uStack76;\n    uint32_t uStack68;\n    uint32_t uStack60;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint8_t uStack25;\n    uint32_t uStack24;\n    \n    uStack24 = 0;\n    uStack25 = 0;\n    puVar1 = param_1 + 4;\n    uVar2 = param_1[2];\n    uVar3 = param_1[1];\n    uVar4 = *param_1;\n    *param_4 = 0;\n    uStack44 = 0;\n    *param_7 = 0;\n    uStack48 = 1;\n    uStack52 = 1;\n    uStack56 = 1;\n    uStack60 = 1;\n    puVar7 = puVar1;\n    for (iVar11 = (0x300 << (param_1[1] + uVar4 & 0x1f)) + 0x736; iVar11 != 0; iVar11 = iVar11 + -1) {\n        *puVar7 = 0x400;\n        puVar7 = puVar7 + 1;\n    }\n    uVar19 = 0;\n    uStack68 = 0xffffffff;\n    puVar13 = param_2 + param_3;\n    iVar11 = 0;\n    puVar15 = param_2;\n    do {\n        if (puVar15 == puVar13) {\n            return 1;\n        }\n        uVar5 = *puVar15;\n        iVar11 = iVar11 + 1;\n        puVar15 = puVar15 + 1;\n        uVar19 = uVar19 << 8 | uVar5;\n    } while (iVar11 < 5);\n    if (param_6 != 0) {\ncode_r0x0045f272:\n        uVar12 = uStack60;\n        uVar17 = uStack24 & (1 << (uVar2 & 0x1f)) - 1U;\n        puVar16 = puVar1 + uStack44 * 0x10 + uVar17;\n        if (uStack68 < 0x1000000) {\n            if (puVar15 == puVar13) {\n                return 1;\n            }\n            uStack68 = uStack68 << 8;\n            uVar5 = *puVar15;\n            puVar15 = puVar15 + 1;\n            uVar19 = uVar19 << 8 | uVar5;\n        }\n        uVar6 = *puVar16;\n        uVar8 = (uStack68 >> 0xb) * uVar6;\n        if (uVar19 < uVar8) {\n            *puVar16 = (0x800 - uVar6 >> 5) + uVar6;\n            iVar9 = ((uStack24 & (1 << (uVar3 & 0x1f)) - 1U) << (uVar4 & 0x1f)) + (uStack25 >> (8 - uVar4 & 0x1f));\n            iVar11 = 1;\n            uStack68 = uVar8;\n            if (uStack44 < 7) goto code_r0x0045f3ed;\n            uStack76 = *((uStack24 - uStack48) + param_5);\n            do {\n                uStack76 = uStack76 << 1;\n                iVar10 = iVar11 * 2;\n                uVar12 = uStack76 & 0x100;\n                if (uStack68 < 0x1000000) {\n                    if (puVar15 == puVar13) {\n                        return 1;\n                    }\n                    uStack68 = uStack68 << 8;\n                    uVar5 = *puVar15;\n                    puVar15 = puVar15 + 1;\n                    uVar19 = uVar19 << 8 | uVar5;\n                }\n                uVar6 = puVar1[iVar9 * 0x300 + uVar12 + iVar11 + 0x836];\n                uVar17 = (uStack68 >> 0xb) * uVar6;\n                if (uVar19 < uVar17) {\n                    puVar1[iVar9 * 0x300 + uVar12 + iVar11 + 0x836] = (0x800 - uVar6 >> 5) + uVar6;\n                    uStack68 = uVar17;\n                    if (uVar12 != 0) goto code_r0x0045f3e5;\n                }\n                else {\n                    uStack68 = uStack68 - uVar17;\n                    uVar19 = uVar19 - uVar17;\n                    iVar10 = iVar10 + 1;\n                    puVar1[iVar9 * 0x300 + uVar12 + iVar11 + 0x836] = uVar6 - (uVar6 >> 5);\n                    if (uVar12 == 0) goto code_r0x0045f3e5;\n                }\n                iVar11 = iVar10;\n            } while (iVar10 < 0x100);\n            goto code_r0x0045f45e;\n        }\n        uVar19 = uVar19 - uVar8;\n        uStack68 = uStack68 - uVar8;\n        *puVar16 = uVar6 - (uVar6 >> 5);\n        if (uStack68 < 0x1000000) {\n            if (puVar15 == puVar13) {\n                return 1;\n            }\n            uVar5 = *puVar15;\n            uStack68 = uStack68 * 0x100;\n            puVar15 = puVar15 + 1;\n            uVar19 = uVar19 * 0x100 | uVar5;\n        }\n        uVar6 = puVar1[uStack44 + 0xc0];\n        uVar8 = (uStack68 >> 0xb) * uVar6;\n        if (uVar19 < uVar8) {\n            uStack60 = uStack56;\n            puVar1[uStack44 + 0xc0] = (0x800 - uVar6 >> 5) + uVar6;\n            uStack56 = uStack52;\n            uStack52 = uStack48;\n            puStack124 = param_1 + 0x668;\n            uStack44 = (6 < uStack44) * 3;\ncode_r0x0045f7c9:\n            if (uVar8 < 0x1000000) {\n                if (puVar15 == puVar13) {\n                    return 1;\n                }\n                uVar5 = *puVar15;\n                uVar8 = uVar8 << 8;\n                puVar15 = puVar15 + 1;\n                uVar19 = uVar19 << 8 | uVar5;\n            }\n            uVar6 = *puStack124;\n            uStack68 = (uVar8 >> 0xb) * uVar6;\n            if (uVar19 < uStack68) {\n                iStack96 = 0;\n                *puStack124 = (0x800 - uVar6 >> 5) + uVar6;\n                iVar11 = uVar17 * 0x10 + 4;\ncode_r0x0045f89a:\n                puStack124 = iVar11 + puStack124;\n                iStack92 = 3;\n            }\n            else {\n                uVar8 = uVar8 - uStack68;\n                uVar19 = uVar19 - uStack68;\n                *puStack124 = uVar6 - (uVar6 >> 5);\n                if (uVar8 < 0x1000000) {\n                    if (puVar15 == puVar13) {\n                        return 1;\n                    }\n                    uVar5 = *puVar15;\n                    uVar8 = uVar8 * 0x100;\n                    puVar15 = puVar15 + 1;\n                    uVar19 = uVar19 * 0x100 | uVar5;\n                }\n                uVar6 = puStack124[1];\n                uVar12 = (uVar8 >> 0xb) * uVar6;\n                if (uVar19 < uVar12) {\n                    iStack96 = 8;\n                    puStack124[1] = (0x800 - uVar6 >> 5) + uVar6;\n                    iVar11 = uVar17 * 0x10 + 0x104;\n                    uStack68 = uVar12;\n                    goto code_r0x0045f89a;\n                }\n                uStack68 = uVar8 - uVar12;\n                uVar19 = uVar19 - uVar12;\n                iStack96 = 0x10;\n                iStack92 = 8;\n                puStack124[1] = uVar6 - (uVar6 >> 5);\n                puStack124 = puStack124 + 0x102;\n            }\n            iStack100 = iStack92;\n            iVar11 = 1;\n            do {\n                iVar9 = iVar11 * 2;\n                puVar16 = puStack124 + iVar11;\n                if (uStack68 < 0x1000000) {\n                    if (puVar15 == puVar13) {\n                        return 1;\n                    }\n                    uStack68 = uStack68 << 8;\n                    uVar5 = *puVar15;\n                    puVar15 = puVar15 + 1;\n                    uVar19 = uVar19 << 8 | uVar5;\n                }\n                uVar6 = *puVar16;\n                uVar12 = (uStack68 >> 0xb) * uVar6;\n                if (uVar19 < uVar12) {\n                    *puVar16 = (0x800 - uVar6 >> 5) + uVar6;\n                    uStack68 = uVar12;\n                }\n                else {\n                    uStack68 = uStack68 - uVar12;\n                    uVar19 = uVar19 - uVar12;\n                    *puVar16 = uVar6 - (uVar6 >> 5);\n                    iVar9 = iVar9 + 1;\n                }\n                iStack100 = iStack100 + -1;\n                iVar11 = iVar9;\n            } while (iStack100 != 0);\n            iStack96 = (iVar9 - (1 << iStack92)) + iStack96;\n            if (uStack44 < 4) {\n                uStack44 = uStack44 + 7;\n                iVar11 = iStack96;\n                if (3 < iStack96) {\n                    iVar11 = 3;\n                }\n                iStack104 = 6;\n                iVar9 = 1;\n                do {\n                    iVar10 = iVar9 * 2;\n                    puVar16 = puVar1 + iVar11 * 0x40 + iVar9 + 0x1b0;\n                    if (uStack68 < 0x1000000) {\n                        if (puVar15 == puVar13) {\n                            return 1;\n                        }\n                        uStack68 = uStack68 << 8;\n                        uVar5 = *puVar15;\n                        puVar15 = puVar15 + 1;\n                        uVar19 = uVar19 << 8 | uVar5;\n                    }\n                    uVar6 = *puVar16;\n                    uVar12 = (uStack68 >> 0xb) * uVar6;\n                    if (uVar19 < uVar12) {\n                        *puVar16 = (0x800 - uVar6 >> 5) + uVar6;\n                        uStack68 = uVar12;\n                    }\n                    else {\n                        uStack68 = uStack68 - uVar12;\n                        uVar19 = uVar19 - uVar12;\n                        iVar10 = iVar10 + 1;\n                        *puVar16 = uVar6 - (uVar6 >> 5);\n                    }\n                    iStack104 = iStack104 + -1;\n                    iVar9 = iVar10;\n                } while (iStack104 != 0);\n                uVar12 = iVar10 - 0x40;\n                uStack140 = uVar12;\n                if (3 < uVar12) {\n                    iStack108 = (uVar12 >> 1) + -1;\n                    uStack140 = uVar12 & 1 | 2;\n                    if (uVar12 < 0xe) {\n                        uStack140 = uStack140 << (iStack108 & 0x1f);\n                        puStack136 = puVar1 + uStack140 + (0x2af - uVar12);\n                    }\n                    else {\n                        iVar11 = (uVar12 >> 1) + -5;\n                        do {\n                            if (uStack68 < 0x1000000) {\n                                if (puVar15 == puVar13) {\n                                    return 1;\n                                }\n                                uStack68 = uStack68 << 8;\n                                uVar5 = *puVar15;\n                                puVar15 = puVar15 + 1;\n                                uVar19 = uVar19 << 8 | uVar5;\n                            }\n                            uStack68 = uStack68 >> 1;\n                            uStack140 = uStack140 * 2;\n                            if (uStack68 <= uVar19) {\n                                uVar19 = uVar19 - uStack68;\n                                uStack140 = uStack140 | 1;\n                            }\n                            iVar11 = iVar11 + -1;\n                        } while (iVar11 != 0);\n                        uStack140 = uStack140 << 4;\n                        puStack136 = param_1 + 0x648;\n                        iStack108 = 4;\n                    }\n                    uStack112 = 1;\n                    iVar11 = 1;\n                    do {\n                        iVar9 = iVar11 * 2;\n                        puVar16 = puStack136 + iVar11;\n                        if (uStack68 < 0x1000000) {\n                            if (puVar15 == puVar13) {\n                                return 1;\n                            }\n                            uStack68 = uStack68 << 8;\n                            uVar5 = *puVar15;\n                            puVar15 = puVar15 + 1;\n                            uVar19 = uVar19 << 8 | uVar5;\n                        }\n                        uVar6 = *puVar16;\n                        uVar12 = (uStack68 >> 0xb) * uVar6;\n                        if (uVar19 < uVar12) {\n                            *puVar16 = (0x800 - uVar6 >> 5) + uVar6;\n                            uStack68 = uVar12;\n                        }\n                        else {\n                            uStack68 = uStack68 - uVar12;\n                            uVar19 = uVar19 - uVar12;\n                            *puVar16 = uVar6 - (uVar6 >> 5);\n                            iVar9 = iVar9 + 1;\n                            uStack140 = uStack140 | uStack112;\n                        }\n                        uStack112 = uStack112 << 1;\n                        iStack108 = iStack108 + -1;\n                        iVar11 = iVar9;\n                    } while (iStack108 != 0);\n                }\n                uStack48 = uStack140 + 1;\n                if (uStack48 == 0) goto code_r0x0045fbb8;\n            }\n            iStack96 = iStack96 + 2;\n            if (uStack24 < uStack48) {\n                return 1;\n            }\n            puVar14 = uStack24 + param_5;\n            puVar18 = uStack24 + (param_5 - uStack48);\n            while( true ) {\n                uStack25 = *puVar18;\n                puVar18 = puVar18 + 1;\n                *puVar14 = uStack25;\n                puVar14 = puVar14 + 1;\n                uStack24 = uStack24 + 1;\n                iStack96 = iStack96 + -1;\n                if (iStack96 == 0) break;\n                if (param_6 <= uStack24) goto code_r0x0045fbb8;\n            }\n            goto code_r0x0045fba7;\n        }\n        uVar19 = uVar19 - uVar8;\n        uStack68 = uStack68 - uVar8;\n        puVar1[uStack44 + 0xc0] = uVar6 - (uVar6 >> 5);\n        if (uStack68 < 0x1000000) {\n            if (puVar15 == puVar13) {\n                return 1;\n            }\n            uVar5 = *puVar15;\n            uStack68 = uStack68 * 0x100;\n            puVar15 = puVar15 + 1;\n            uVar19 = uVar19 * 0x100 | uVar5;\n        }\n        uVar6 = puVar1[uStack44 + 0xcc];\n        uVar8 = (uStack68 >> 0xb) * uVar6;\n        if (uVar8 <= uVar19) {\n            uStack68 = uStack68 - uVar8;\n            uVar19 = uVar19 - uVar8;\n            puVar1[uStack44 + 0xcc] = uVar6 - (uVar6 >> 5);\n            if (uStack68 < 0x1000000) {\n                if (puVar15 == puVar13) {\n                    return 1;\n                }\n                uVar5 = *puVar15;\n                uStack68 = uStack68 * 0x100;\n                puVar15 = puVar15 + 1;\n                uVar19 = uVar19 * 0x100 | uVar5;\n            }\n            uVar6 = puVar1[uStack44 + 0xd8];\n            uVar8 = (uStack68 >> 0xb) * uVar6;\n            if (uVar19 < uVar8) {\n                puVar1[uStack44 + 0xd8] = (0x800 - uVar6 >> 5) + uVar6;\n                uVar12 = uStack52;\n            }\n            else {\n                uVar19 = uVar19 - uVar8;\n                uStack68 = uStack68 - uVar8;\n                puVar1[uStack44 + 0xd8] = uVar6 - (uVar6 >> 5);\n                if (uStack68 < 0x1000000) {\n                    if (puVar15 == puVar13) {\n                        return 1;\n                    }\n                    uVar5 = *puVar15;\n                    uStack68 = uStack68 * 0x100;\n                    puVar15 = puVar15 + 1;\n                    uVar19 = uVar19 * 0x100 | uVar5;\n                }\n                uVar6 = puVar1[uStack44 + 0xe4];\n                uVar8 = (uStack68 >> 0xb) * uVar6;\n                if (uVar19 < uVar8) {\n                    puVar1[uStack44 + 0xe4] = (0x800 - uVar6 >> 5) + uVar6;\n                    uVar12 = uStack56;\n                }\n                else {\n                    uVar19 = uVar19 - uVar8;\n                    uVar8 = uStack68 - uVar8;\n                    puVar1[uStack44 + 0xe4] = uVar6 - (uVar6 >> 5);\n                    uStack60 = uStack56;\n                }\n                uStack56 = uStack52;\n            }\n            uStack52 = uStack48;\n            uStack48 = uVar12;\ncode_r0x0045f7ad:\n            puStack124 = param_1 + 0xa6c;\n            uStack44 = (6 < uStack44) * 3 + 8;\n            goto code_r0x0045f7c9;\n        }\n        puVar1[uStack44 + 0xcc] = (0x800 - uVar6 >> 5) + uVar6;\n        if (uVar8 < 0x1000000) {\n            if (puVar15 == puVar13) {\n                return 1;\n            }\n            uVar5 = *puVar15;\n            uVar8 = uVar8 * 0x100;\n            puVar15 = puVar15 + 1;\n            uVar19 = uVar19 << 8 | uVar5;\n        }\n        uVar6 = puVar1[uStack44 * 0x10 + uVar17 + 0xf0];\n        uStack68 = (uVar8 >> 0xb) * uVar6;\n        if (uStack68 <= uVar19) {\n            uVar8 = uVar8 - uStack68;\n            uVar19 = uVar19 - uStack68;\n            puVar1[uStack44 * 0x10 + uVar17 + 0xf0] = uVar6 - (uVar6 >> 5);\n            goto code_r0x0045f7ad;\n        }\n        puVar1[uStack44 * 0x10 + uVar17 + 0xf0] = (0x800 - uVar6 >> 5) + uVar6;\n        if (uStack24 == 0) {\n            return 1;\n        }\n        uStack44 = (6 < uStack44) * 2 + 9;\n        uStack25 = *((uStack24 - uStack48) + param_5);\n        *(param_5 + uStack24) = uStack25;\n        uStack24 = uStack24 + 1;\n        goto code_r0x0045fba7;\n    }\n    goto code_r0x0045fbd7;\ncode_r0x0045f3e5:\n    while (iVar11 = iVar10,  iVar10 < 0x100) {\ncode_r0x0045f3ed:\n        iVar10 = iVar11 * 2;\n        puVar16 = puVar1 + iVar9 * 0x300 + iVar11 + 0x736;\n        if (uStack68 < 0x1000000) {\n            if (puVar15 == puVar13) {\n                return 1;\n            }\n            uStack68 = uStack68 << 8;\n            uVar5 = *puVar15;\n            puVar15 = puVar15 + 1;\n            uVar19 = uVar19 << 8 | uVar5;\n        }\n        uVar6 = *puVar16;\n        uVar12 = (uStack68 >> 0xb) * uVar6;\n        if (uVar19 < uVar12) {\n            *puVar16 = (0x800 - uVar6 >> 5) + uVar6;\n            uStack68 = uVar12;\n        }\n        else {\n            uVar19 = uVar19 - uVar12;\n            iVar10 = iVar10 + 1;\n            *puVar16 = uVar6 - (uVar6 >> 5);\n            uStack68 = uStack68 - uVar12;\n        }\n    }\ncode_r0x0045f45e:\n    uStack25 = iVar10;\n    *(param_5 + uStack24) = uStack25;\n    uStack24 = uStack24 + 1;\n    if (uStack44 < 4) {\n        uStack44 = 0;\n    }\n    else if (uStack44 < 10) {\n        uStack44 = uStack44 - 3;\n    }\n    else {\n        uStack44 = uStack44 - 6;\n    }\ncode_r0x0045fba7:\n    if (param_6 <= uStack24) goto code_r0x0045fbb8;\n    goto code_r0x0045f272;\ncode_r0x0045fbb8:\n    if (uStack68 < 0x1000000) {\n        if (puVar15 == puVar13) {\n            return 1;\n        }\n        puVar15 = puVar15 + 1;\n    }\ncode_r0x0045fbd7:\n    *param_4 = puVar15 - param_2;\n    *param_7 = uStack24;\n    return 0;\n}\n",
        "token_count": 5565
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Type propagation algorithm not settling\n\nvoid __fastcall entry0(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uchar *puVar9;\n    uchar *puVar10;\n    uint8_t uVar12;\n    uchar *puVar11;\n    uint32_t *puVar13;\n    uint8_t *puVar14;\n    bool bVar15;\n    bool bVar16;\n    int32_t aiStack3780 [2];\n    uint8_t *puStack3772;\n    int32_t iStack3768;\n    uchar auStack3764 [4];\n    uint32_t *puStack3760;\n    int32_t iStack3756;\n    uchar auStack3752 [4];\n    uint uStack3748;\n    uint uStack3744;\n    uint32_t auStack3740 [923];\n    uint32_t uStack48;\n    int32_t iStack44;\n    uint32_t *puStack40;\n    int32_t iStack36;\n    int32_t iVar8;\n    \n    puVar13 = *0x45fc03 + 0x45fc03;\n    iStack36 = *puVar13 * 0x1000;\n    iVar1 = *(*0x45fc03 + 0x45fc05);\n    puVar14 = *0x45fc03 + 0x45fc09 + (*puVar13 * 0x1000 - iVar1);\n    puStack40 = puVar13;\n    iStack44 = iVar1;\n    iVar8 = iVar1;\n    do {\n        iVar7 = iVar8 + -1;\n        puVar14[iVar7] = *(iVar8 + 5 + puVar13);\n        iVar8 = iVar7;\n    } while (iVar7 != 0);\n    uVar2 = (*puVar14 & 0xf) << 8;\n    uStack48 = (*puVar14 & 0xfffffff0) << 0xc | uVar2 | puVar14[1];\n    iVar7 = -0x300 << (puVar14[1] + (uVar2 >> 8) & 0x1f);\n    iVar8 = iVar7 * 2;\n    *(&stack0xfffff164 + iVar8) = uStack48;\n    *(&stack0xfffff160 + iVar8) = 0;\n    *(&stack0xfffff15c + iVar8) = 0;\n    *(&stack0xfffff158 + iVar8) = &stack0xfffff15c + iVar8;\n    *(&stack0xfffff154 + iVar8) = (param_2 & 0xffff0000 | *puVar13) << 0xc;\n    *(&stack0xfffff150 + iVar8) = puVar13;\n    *(&stack0xfffff14c + iVar8) = &stack0xfffff160 + iVar8;\n    *(&stack0xfffff148 + iVar8) = iVar1;\n    *(&stack0xfffff144 + iVar8) = puVar14 + 2;\n    *(&stack0xfffff140 + iVar8) = &stack0xfffff164 + iVar8;\n    *(&stack0xfffff13c + iVar8) = 0x45f118;\n    fcn.0045f176();\n    *(iStack36 + puStack40) = 0;\n    puVar10 = iStack36 + -0x1000;\n    puVar9 = NULL;\n    puVar11 = &stack0xffffffd8;\ncode_r0x0045f127:\n    do {\n        do {\n            puVar13 = puStack40;\n            puVar5 = puVar9;\n            if (puVar10 <= puVar5) {\n                bVar16 = false;\n                bVar15 = false;\n                while (!bVar15 && !bVar16) {\n                    puVar10 = puVar10 & 0xffffff00 | *(puVar5 + iVar7 * 4);\n                    uVar2 = iVar7 * -0x5737965c != iVar7 * -0x5737965c;\n                    bVar15 = CARRY4(puVar5, puVar5);\n                    uVar3 = puVar5 * 2;\n                    uVar6 = uVar3 + uVar2;\n                    uVar4 = in(puVar10);\n                    iVar7 = iVar7 + -1;\n                    uVar12 = uVar6;\n                    puVar5 = uVar6 & 0xffffff00 | uVar12 >> 7 | uVar12 << 1;\n                    uVar12 = puVar11 + 1 >> 8 | uVar4 + -0x14 + (bVar15 || CARRY4(uVar3, uVar2));\n                    puVar11 = CONCAT11(uVar12, puVar11 + 1);\n                    bVar16 = uVar12 < '\\0';\n                    bVar15 = uVar12 == 0;\n                }\n                entry0 = 0xe9;\n                *0x45f0a4 = 0xb56;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            puVar9 = puVar5 + 1;\n            puVar11 = puVar5;\n            puStack40 = puVar13 + 1;\n        } while ((*puVar13 & 0xfe) != 0xe8);\n        puVar11 = puVar5 + 1;\n        puVar9 = puVar5 + 5;\n        puStack40 = puVar13 + 5;\n        puVar5 = *(puVar13 + 1);\n        if (puVar5 < 0) goto code_r0x0045f144;\n    } while (puVar10 <= puVar5);\n    goto code_r0x0045f14a;\ncode_r0x0045f144:\n    if (-1 < puVar5 + puVar11) {\n        puVar5 = puVar5 + puVar11 + puVar10;\ncode_r0x0045f14a:\n        *(puVar13 + 1) = puVar5 - puVar11;\n    }\n    goto code_r0x0045f127;\n}\n",
        "token_count": 1408
    }
}