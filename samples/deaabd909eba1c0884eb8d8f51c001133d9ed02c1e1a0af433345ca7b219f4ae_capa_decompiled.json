{
    "0040129c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040129c(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    code *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = *0x41fb4c;\n    if (*0x41fb4c < 0x100) {\n        fcn.004011ea();\n        var_1ch = *0x41fb4c;\n    }\n    iVar1 = *0x41fb54 + -0x404040;\n    if (arg_8h == 0) {\n        iVar1 = 4;\n    }\n    *0x41fb4c = var_1ch;\n    (*var_1ch)(0, arg_ch, *0x41fb50, iVar1);\n    return;\n}\n",
        "token_count": 193
    },
    "00401566": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401566(uint arg_8h)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x41fb78 == NULL) {\n        fcn.00401541(arg_8h, 0);\n    }\n    else {\n        (**0x41fb78)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00401750": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Removing unreachable block (ram,0x004017a2)\n\nvoid __cdecl fcn.00401750(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_21h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_9h;\n    \n    if (((arg_8h != 0 && arg_ch != 0) && (iVar1 = fcn.00402fe0(arg_ch),  iVar1 != 0)) && (*(iVar1 + 6) != 0)) {\n        var_18h = iVar1 + 0x18 + *(iVar1 + 0x14);\n        *NULL = 0;\n        do {\n            if (stack0xffffffdc == 0) {\n                fcn.00402c62(arg_8h, arg_ch, *(iVar1 + 0x54));\n            }\n            fcn.00402c62(arg_8h + *(var_18h + 0xc), arg_ch + *(var_18h + 0x14), *(var_18h + 0x10));\n            var_18h = var_18h + 0x28;\n            *NULL = stack0xffffffdc + 1;\n        } while (*NULL < *(iVar1 + 6));\n    }\n    return;\n}\n",
        "token_count": 372
    },
    "004031a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004031a9(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    arg_8h_00 = fcn.0040129c(1, 0x1a000);\n    var_1ch = 0;\n    if (arg_8h_00 != 0) {\n        iVar1 = (arg_8h_00 + 0x251) - *0x41fb58;\n        fcn.00401750(arg_8h_00, arg_ch);\n        *(arg_8h + 0x54) = arg_8h_00;\n        *(arg_8h + 0x58) = iVar1;\n        var_1ch = arg_8h_00 + *0x41fb5c;\n    }\n    return var_1ch;\n}\n",
        "token_count": 244
    },
    "004032a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.004032a2(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int16_t iVar5;\n    int16_t iVar6;\n    int32_t *piStack92;\n    int32_t *piStack60;\n    uint32_t uStack48;\n    uint var_ch;\n    \n    iVar3 = fcn.00402baf();\n    piVar4 = *(iVar3 + 0xc) + 0x14;\n    piStack92 = *(*(iVar3 + 0xc) + 0x14);\n    piStack60 = NULL;\n    if (piStack92 != piVar4) {\n        while( true ) {\n            piVar2 = piStack92[4];\n            if (arg_ch != NULL && piVar2 == arg_ch) break;\n            if ((arg_8h != 0) && (*(piStack92 + 9) >> 1 != 0)) {\n                uStack48 = 0;\n                while( true ) {\n                    iVar6 = *(piStack92[10] + uStack48 * 2);\n                    if (iVar6 - 0x61U < 0x1a) {\n                        iVar6 = iVar6 + -0x20;\n                    }\n                    iVar1 = *(arg_8h + uStack48 * 2);\n                    iVar5 = iVar1 + -0x20;\n                    if (0x19 < iVar1 - 0x61U) {\n                        iVar5 = iVar1;\n                    }\n                    if (iVar6 == 0) break;\n                    uStack48 = uStack48 + 1;\n                    if (iVar6 != iVar5) goto code_r0x00403536;\n                    if (*(piStack92 + 9) >> 1 <= uStack48) {\n                        return piVar2;\n                    }\n                }\n                if (iVar5 == 0) {\n                    return piVar2;\n                }\n            }\ncode_r0x00403536:\n            piStack92 = *piStack92;\n            if (piStack92 == piVar4) {\n                return NULL;\n            }\n        }\n        piStack60 = piStack92 + -2;\n    }\n    return piStack60;\n}\n",
        "token_count": 524
    },
    "004036ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00403716)\n\nuint32_t fcn.004036ab(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcStack76;\n    uint uStack52;\n    ushort uStack46;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    int16_t iStack36;\n    char cStack33;\n    uint32_t uStack32;\n    int32_t iStack28;\n    uint var_bp_ch;\n    \n    iStack28 = 0;\n    uStack32 = 0x3fbba3ba;\n    cStack33 = '9';\n    iStack36 = -0x641;\n    uStack40 = 0x31f84058;\n    uStack46 = 0x9c8f;\n    uStack52 = 0;\n    if (*0x41fb74 == NULL) goto code_r0x00403887;\ncode_r0x004038ad:\n    pcStack76 = fcn.00402787;\n    do {\n        if (*pcStack76 == 0x540c - iStack36) {\n            if (iStack28 + -1 + (0xd97a02c < uStack32) < (uStack32 + 0xf2685fd3 < 0x1d8cbe7a)) break;\n            if (((*(pcStack76 + 0x3c) + pcStack76)[1] == cStack33 + '\\f') &&\n               (*(*(pcStack76 + 0x3c) + pcStack76) == -0x77 - cStack33)) {\n                iVar1 = fcn.004032a2(0, pcStack76);\n                uStack44 = uStack40 ^ 0x31f84058;\n                arg_8h = *(iVar1 + 0x28);\n                uVar2 = uStack40 ^ 0x31f8405a;\n                iVar3 = uStack40 + 0xce07bfa9;\n                iVar1 = fcn.0040145f(arg_8h);\n                if (uVar2 <= iVar1 + iVar3) {\n                    iVar3 = 0x31f84058 - uStack40;\n                    iVar1 = (**0x41fb74)(arg_8h, &uStack52);\n                    uStack44 = iVar1 == iVar3;\n                }\n                return uStack44;\n            }\n        }\n        pcStack76 = pcStack76 + (0x31f83058 - uStack40) & 0x31f83058 - uStack40;\n    } while( true );\ncode_r0x00403887:\n    fcn.00402b04();\n    goto code_r0x004038ad;\n}\n",
        "token_count": 629
    },
    "004038b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004038b9(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uStack104;\n    uint uStack100;\n    uint uStack88;\n    uchar auStack84 [36];\n    uint uStack48;\n    int32_t iStack44;\n    char cStack37;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    int32_t iStack28;\n    uint16_t uStack22;\n    uint var_ch;\n    \n    uStack22 = 0xef39;\n    iStack28 = 0;\n    uStack32 = 0xd39239e;\n    uStack36 = 0x27f75a9a;\n    cStack37 = -0x22;\n    uStack88 = 0;\n    uStack100 = 0;\n    if (arg_ch != 0) {\n        fcn.004024cf(auStack84, 0x41e72b, 0x18);\n        uStack48 = uStack32 + 0xf2c6dc62;\n        iStack44 = iStack28 + -1 + (0xd39239d < uStack32);\n        pcVar2 = fcn.00402203(auStack84);\n        uStack100 = 0;\n        if (pcVar2 != NULL) {\n            iStack44 = arg_ch;\n            uVar1 = uStack36 ^ 0x27f75a9a;\n            do {\n                uStack104 = uVar1;\n                uVar1 = (0x27f75a9b - uStack36) + uStack104;\n            } while (*(arg_ch + uStack104) != -0x22 - cStack37);\n    // WARNING: Ignoring partial resolution of indirect\n            uStack48._2_2_ = uStack104;\n    // WARNING: Ignoring partial resolution of indirect\n            uStack48._0_2_ = uStack104;\n            (*pcVar2)(arg_8h, &uStack48, uStack22 ^ 0xef39, &uStack88);\n            uStack100 = uStack88;\n        }\n    }\n    return uStack100;\n}\n",
        "token_count": 514
    },
    "0040414a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040414a(int32_t arg_8h)\n\n{\n    uint var_24h;\n    int16_t *var_20h;\n    uint var_1ch;\n    code *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    if (arg_8h == 0) {\n        for (var_18h = fcn.00402787;\n            ((*var_18h != 0x5a4d || (*(var_18h + *(var_18h + 0x3c) + 1) != 'E')) ||\n            (var_20h = var_18h,  *(var_18h + *(var_18h + 0x3c)) != 'P')); var_18h = var_18h + -0x1000 & 0xfffff000) {\n        }\n    }\n    else {\n        var_20h = fcn.004032a2(arg_8h, 0);\n    }\n    return var_20h;\n}\n",
        "token_count": 242
    },
    "0040138e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00401407)\n\nuint32_t __cdecl fcn.0040138e(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_bp_ch;\n    \n    uVar1 = arg_8h & 7;\n    if (arg_8h < 8) {\n        uVar1 = arg_8h;\n    }\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00402203": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402203(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t arg_8h_00;\n    int32_t iVar4;\n    uint var_54h;\n    uint32_t var_50h;\n    uint var_48h;\n    uint16_t *var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    \n    arg_8h_00 = fcn.00403082();\n    iVar4 = fcn.00402fe0(arg_8h_00);\n    iVar4 = *(iVar4 + 0x78);\n    uVar3 = *(arg_8h_00 + 0x18 + iVar4);\n    if (uVar3 != 0) {\n        var_40h = arg_8h_00 + *(arg_8h_00 + iVar4 + 0x24);\n        var_3ch = 0;\n        do {\n            var_50h = 0;\n            do {\n                cVar1 = *(arg_8h_00 + *(arg_8h_00 + *(arg_8h_00 + 0x20 + iVar4) + var_3ch * 4) + var_50h);\n                cVar2 = *(arg_8h + var_50h);\n                if (cVar1 == '\\0') break;\n                var_50h = var_50h + 1;\n            } while ((cVar1 == cVar2 && cVar2 != '\\0') && var_50h < 0x20);\n            if (cVar1 == cVar2) {\n                return arg_8h_00 + *(arg_8h_00 + *(arg_8h_00 + iVar4 + 0x1c) + *var_40h * 4);\n            }\n            var_3ch = var_3ch + 1;\n            var_40h = var_40h + 1;\n        } while (var_3ch < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 534
    },
    "004024cf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004024cf(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    if (arg_10h != 0) {\n        var_24h = 0;\n        do {\n            uVar1 = var_24h;\n            if (7 < var_24h) {\n                uVar1 = var_24h & 7;\n            }\n            if (arg_10h < uVar1 || 8 < uVar1) {\n                return;\n            }\n            fcn.0040323e(arg_8h, arg_ch, var_24h, *(uVar1 + 0x41e784));\n            var_24h = var_24h + 1;\n        } while (var_24h < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "0040264e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n\nvoid __cdecl fcn.0040264e(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    \n    var_24h = 0;\n    var_28h = 4;\n    do {\n        for (uVar2 = *(var_24h + 0x41e04e); uVar2 < arg_10h; uVar2 = uVar2 + 0x33) {\n            uVar1 = uVar2 & 3;\n            if (2 < var_28h) {\n                uVar1 = uVar2 % 0x32;\n            }\n            var_28h = var_28h + uVar2;\n            *(arg_8h + uVar2) = ('\\x18' - *(*0x41fb60 + uVar1)) + *(arg_ch + uVar2);\n        }\n        var_24h = var_24h + 1;\n    } while (var_28h != 0 && var_24h < 0x33);\n    return;\n}\n",
        "token_count": 386
    },
    "00402a18": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nbool fcn.00402a18(void)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    uint arg_8h;\n    int32_t iVar3;\n    uint var_bp_ch;\n    \n    arg_8h = fcn.00403082();\n    iVar3 = fcn.00402fe0(arg_8h);\n    uVar1 = *(iVar3 + 8);\n    iVar3 = fcn.00402baf();\n    bVar2 = true;\n    if (*(iVar3 + 0xa4) != 5) {\n        bVar2 = 0x549352b9 < uVar1 && *(iVar3 + 0xa4) < 6;\n    }\n    return bVar2;\n}\n",
        "token_count": 177
    },
    "00402fe0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n\nchar * __cdecl fcn.00402fe0(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_eh;\n    \n    pcVar2 = arg_8h + *(arg_8h + 0x3c);\n    if (((*(arg_8h + 3 + *(arg_8h + 0x3c)) == '\\0') && (*pcVar2 == 'P')) && (pcVar2[2] == '\\0')) {\n        pcVar1 = NULL;\n        if (pcVar2[1] == 'E') {\n            pcVar1 = pcVar2;\n        }\n        return pcVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 188
    },
    "00404067": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_6h\n\nbool __cdecl fcn.00404067(uint noname_0, char *arg_ch)\n\n{\n    bool bVar1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_12h;\n    uint var_ch;\n    uint var_6h;\n    \n    while( true ) {\n        if (*arg_ch == -0x48) {\n            bVar1 = false;\n            if (arg_ch[3] == 'P') {\n                bVar1 = arg_ch[4] == -0x33;\n            }\n            return bVar1;\n        }\n        if (*arg_ch != -1) break;\n        if (arg_ch[1] != '%') {\n            return false;\n        }\n        arg_ch = **(arg_ch + 2);\n    }\n    return false;\n}\n",
        "token_count": 190
    },
    "0040145f": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n\nuint32_t __cdecl fcn.0040145f(int16_t *arg_8h)\n\n{\n    uint var_24h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_5h;\n    \n    var_1ch = 0;\n    if (*arg_8h != 0) {\n        var_18h = 0;\n        do {\n            if (999 < var_18h) {\n                return 0xffffffff;\n            }\n            var_1ch = var_18h + 1;\n            var_18h = var_1ch;\n        } while (arg_8h[var_1ch] != 0);\n    }\n    return var_1ch;\n}\n",
        "token_count": 188
    },
    "004015f6": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004015f6(void)\n\n{\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_eh;\n    \n    var_34h = &uStack100;\n    var_eh._0_2_ = 0x4860;\n    var_14h = 0x451c59c5;\n    var_18h._0_2_ = 0xb1c4;\n    var_18h._2_2_ = 0xf3e2;\n    var_3ch = &var_2ch;\n    var_40h = 0xff8;\n    var_30h = 0xe0462a;\n    var_38h = &var_2ch;\n    uStack84 = 0x1a;\n    uStack88 = 0xb13;\n    uStack92 = 0x14d;\n    uStack96 = 0x14d;\n    uStack100 = 0xe0462a;\n    puStack80 = var_38h;\n    var_44h = (*_sym.imp.KERNEL32.dll_LockFileEx)();\n    (*_sym.imp.USER32.dll_MessageBeep)(var_40h);\n    return;\n}\n",
        "token_count": 385
    },
    "004025e4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_6h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004025e4(void)\n\n{\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    ushort var_8h;\n    uint var_6h;\n    \n    var_6h._0_2_ = 0x96bc;\n    var_8h = 0xbd4d;\n    (*_sym.imp.KERNEL32.dll_GetLargePageMinimum)();\n    (*_sym.imp.KERNEL32.dll_GetTimeZoneInformation)(&var_b4h);\n    return;\n}\n",
        "token_count": 146
    },
    "00402d3e": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00402d3e(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    \n    var_10h = 0x4d40bbf7;\n    var_1ch = 0;\n    do {\n        do {\n            uVar2 = 0x6a9065f3 - var_10h;\n            uVar5 = var_10h + 0xce15208b;\n            var_14h = var_1ch;\n            iVar1 = 0x4d4b3355 - var_10h;\n            uVar4 = var_10h + 0xc1c18568;\n            (*_sym.imp.GDI32.dll_RemoveFontMemResourceEx)(0xc1d1f3);\n            (*_sym.imp.USER32.dll_RemoveClipboardFormatListener)(0x21d96);\n            var_1ch = uVar5;\n            var_18h = iVar1;\n        } while (uVar2 < uVar4);\n        iVar1 = 0x4d40c69c - var_10h;\n        (*_sym.imp.KERNEL32.dll_AllocateUserPhysicalPages)(0x7d3e5b, &var_18h, &var_18h);\n        iVar3 = var_10h + 0xb2bf440a;\n        (*_sym.imp.USER32.dll_GetGuiResources)(0xa8d970, iVar1);\n        (*_sym.imp.KERNEL32.dll_SwitchToThread)();\n        var_1ch = var_14h + iVar3;\n    } while (var_1ch != (var_10h ^ 0x4d40b9fc));\n    return;\n}\n",
        "token_count": 560
    },
    "00403b56": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00403b56(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint arg_8h_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint noname_0;\n    uint uStack340;\n    uchar auStack248 [168];\n    uchar auStack80 [20];\n    uchar auStack60 [8];\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uchar *puStack44;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uint var_ch;\n    \n    uStack28 = 0;\n    iStack32 = 0x3edab496;\n    uStack36 = 0x15c407c9;\n    uStack48 = 0x6cde1b;\n    puStack44 = NULL;\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    fcn.004016ce();\n    (*_sym.imp.KERNEL32.dll_GetLargePageMinimum)();\n    noname_0 = 0x403c2c;\n    (*_sym.imp.KERNEL32.dll_GetTimeZoneInformation)(&stack0xffffff08);\n    uVar1 = fcn.00402826(noname_0, _sym.imp.KERNEL32.dll_CloseHandle);\n    if (uVar1 == (uStack40 ^ 0x15c407c9)) {\n        do {\n            do {\n                fcn.004015ad(arg_8h_00, 0, arg_8h);\n                uVar3 = uStack48;\n                uVar1 = uStack52;\n                uStack340 = (*_sym.imp.ADVAPI32.dll_IsTokenRestricted)(0x16d247);\n                uVar2 = -(0x49dc6a36 < uStack36) - iStack32;\n                puStack44 = &stack0xffffffc4;\n            } while (uVar2 < uVar3 || uVar2 - uVar3 < (0x49dc6a36 - uStack36 < uVar1));\n            uVar3 = 0xa2e7df8c - uStack36;\n            uVar1 = -(0xa2e7df8c < uStack36) - iStack32;\n            (*_sym.imp.OLEAUT32.dll_VarCyFromR8)(0x420a6666, &stack0xffffffc4);\n            fcn.00402359();\n        } while (0x776dc7c9 < uVar1 && (uVar3 < arg_10h) <= uVar1 + 0x88923836);\n    }\n    (*_sym.imp.KERNEL32.dll_LockFileEx)\n              (0xe0462a, uStack40 ^ 0x15c40684, uStack40 ^ 0x15c40684, 0x15c412dc - uStack40, uStack40 ^ 0x15c407d3, \n               &stack0xffffffb0);\n    (*_sym.imp.USER32.dll_MessageBeep)(uStack340);\n    fcn.00402d3e();\n    return 0;\n}\n",
        "token_count": 726
    },
    "004018a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401a1d) overlaps instruction at (ram,0x00401a1c)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00401ff1)\n// WARNING: Removing unreachable block (ram,0x00401a69)\n// WARNING: Removing unreachable block (ram,0x00401a0e)\n// WARNING: Removing unreachable block (ram,0x00401b8b)\n// WARNING: Removing unreachable block (ram,0x004021c4)\n// WARNING: Removing unreachable block (ram,0x004019c6)\n// WARNING: Removing unreachable block (ram,0x00401a83)\n// WARNING: Removing unreachable block (ram,0x00401ee1)\n// WARNING: Removing unreachable block (ram,0x00401a00)\n// WARNING: Removing unreachable block (ram,0x00401a07)\n// WARNING: Removing unreachable block (ram,0x00401a33)\n// WARNING: Removing unreachable block (ram,0x00401a5b)\n// WARNING: Removing unreachable block (ram,0x00401da0)\n// WARNING: Removing unreachable block (ram,0x00401b68)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.004018a4(void)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    code *pcVar4;\n    uint *puVar5;\n    uint8_t uVar6;\n    char cVar12;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    unkbyte3 Var13;\n    int32_t iVar10;\n    uint uVar11;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    int32_t extraout_ECX_03;\n    int32_t extraout_ECX_04;\n    int32_t extraout_ECX_05;\n    int32_t extraout_ECX_06;\n    int32_t extraout_ECX_07;\n    int32_t extraout_ECX_08;\n    int32_t extraout_ECX_09;\n    int32_t extraout_ECX_10;\n    int32_t extraout_ECX_11;\n    int32_t extraout_ECX_12;\n    int32_t extraout_ECX_13;\n    uint32_t extraout_ECX_14;\n    int32_t extraout_ECX_15;\n    char *extraout_ECX_16;\n    char *extraout_ECX_17;\n    char *extraout_ECX_18;\n    char *extraout_ECX_19;\n    char *pcVar14;\n    char *extraout_ECX_20;\n    char *extraout_ECX_21;\n    char *extraout_ECX_22;\n    code *pcVar15;\n    char cVar16;\n    unkbyte6 *unaff_EBX;\n    int32_t unaff_EBP;\n    uint *puVar17;\n    uint32_t unaff_ESI;\n    uint32_t uVar18;\n    unkbyte6 *pVar19;\n    int32_t *unaff_EDI;\n    ushort in_SS;\n    bool bVar20;\n    ulong uVar21;\n    uint64_t uVar22;\n    uchar uStack96;\n    uchar uStack95;\n    uchar uStack94;\n    uchar uStack93;\n    uchar uStack84;\n    uchar uStack83;\n    ushort uStack82;\n    uint32_t uStack60;\n    uint32_t uStack52;\n    uint uStack40;\n    unkbyte6 *pStack36;\n    uint uStack24;\n    uint uStack20;\n    uchar uStack16;\n    uint uStack4;\n    \ncode_r0x004018a4:\n    puVar17 = &uStack4;\n    pStack36 = 0x16154556;\n    uStack60 = 0x2fbd8c13;\n    pcVar15 = _sym.imp.SHLWAPI.dll_IsCharSpaceA;\n    uVar18 = unaff_ESI;\n    uStack4 = unaff_EBP;\ncode_r0x004018e4:\n    uVar21 = (*pcVar15)();\n    pcVar15 = uVar21 >> 0x20;\n    uVar18 = uVar18 + 1;\n    *0x9fa07eb7 = uVar21;\n    *(unaff_EDI + pcVar15 * 4 + -0x35b78b93) = 0;\n    uVar8 = uVar21 & 0xffffff00;\n    *(uVar18 * 2 + 0x79063464) = uVar8;\n    puVar1 = unaff_EBX + extraout_ECX * 8;\n    *puVar1 = *puVar1 | uVar18;\n    iVar7 = (uVar8 | 0xd5) + 0x68d7dc43;\n    cVar16 = unaff_EBX >> 8;\n    if (iVar7 != 0) goto code_r0x004018bb;\n    uVar8 = 0x9c7733c5;\n    iVar7 = extraout_ECX + -1;\n    uStack16 = unaff_ESI;\n    if (iVar7 != 0) goto code_r0x00401966;\ncode_r0x00401912:\n    uVar21 = (*0x4042a0)();\n    uVar18 = uVar18 + 1;\n    *0x9fa07eb7 = uVar21;\n    *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n    uVar8 = uVar21 & 0xffffff00;\n    *(uVar18 * 2 + 0x79063464) = uVar8;\n    puVar1 = unaff_EBX + extraout_ECX_00 * 8;\n    *puVar1 = *puVar1 | uVar18;\n    uVar8 = (uVar8 | 0xd5) + 0x68d7dc43;\n    if (uVar8 != 0) {\n        return uVar8;\n    }\n    uVar9 = 0x9c7733c5;\n    bVar20 = false;\n    iVar7 = extraout_ECX_00;\n    while (uVar8 = iVar7 - 1,  uVar8 == 0 || bVar20) {\n        uStack96 = 0x57;\n        uStack95 = 0x19;\n        uStack94 = 0x40;\n        uStack93 = 0;\n        uVar21 = (*_sym.imp.SHLWAPI.dll_SHRegGetValueW)();\n        pcVar15 = uVar21 >> 0x20;\n        *0x9fa07eb7 = uVar21;\n        uVar18 = uVar18 + 1;\n        uVar8 = *0x9fa07eb7 & 0xffffff00;\n        *(unaff_EDI + pcVar15 * 4 + -0x35b78b93) = 0;\n        iVar7 = extraout_ECX_01;\n        uStack52 = uVar9;\ncode_r0x00401966:\n        *(uVar18 * 2 + 0x79063464) = uVar8 & 0xffffff00;\n        puVar1 = unaff_EBX + iVar7 * 8;\n        *puVar1 = *puVar1 | uVar18;\n        uVar9 = uVar8 & 0xffffff00 | 0xd5;\n        if (uVar9 == 0x972823bd) {\n            uVar9 = 0x9c7733c5;\n            uVar8 = iVar7 - 1;\n            if (uVar8 != 0) {\n                unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(cVar16 * '\\x02', unaff_EBX);\n                *(unaff_EBX + -0x605f8149) = *(unaff_EBX + -0x605f8149) << (uVar8 & 0x1f);\n                uVar18 = uVar18 + 1;\n                *(unaff_EDI + pcVar15 * 4 + -0x35b78b93) = 0;\n                *(uVar18 * 2 + 0x79063464) = 0x9c773300;\n                puVar1 = unaff_EBX + uVar8 * 8;\n                *puVar1 = *puVar1 | uVar18;\n                goto code_r0x004019ab;\n            }\n            goto code_r0x00401983;\n        }\n        uVar9 = uVar9 + 0xf3d3526d;\n        uVar6 = uVar9 ^ 6;\n        uVar9 = uVar9 ^ 6;\n        bVar20 = uVar6 == 0;\n        if (uVar6 < '\\0') goto code_r0x00401912;\n        uStack96 = 0xf8;\n        uStack95 = 0x75;\n        uStack94 = 0xb0;\n        uStack93 = 0xd;\n        uVar18 = *unaff_EBX;\n        if (!bVar20) goto code_r0x004018e4;\n    }\n    uVar9 = uVar9 & 0xffffff10;\ncode_r0x00401983:\n    uVar18 = 0xfd3b3a1b;\n    puVar17 = &uStack4;\n    uStack52 = uVar9;\n    if (uVar8 < 0xfd3b3a1c) goto code_r0x00401da5;\n    uVar22 = 0xf62a1d43f62a1d4c;\n    uVar18 = uVar9 & 0x1a2a27f5;\n    puVar17 = &uStack4;\ncode_r0x00401f69:\n    uStack60 = uVar22 >> 0x20;\n    if (uVar18 != uVar22) {\n        return uStack60;\n    }\n    uStack96 = 0x75;\n    uStack95 = 0x20;\n    uStack94 = 0x40;\n    uStack93 = 0;\n    uVar21 = (*0x40420a)();\n    iVar7 = uVar21 >> 0x20;\n    uVar18 = uVar18 + 1;\n    *0x9fa07eb7 = uVar21;\n    *(unaff_EDI + iVar7 * 4 + -0x35b78b93) = 0;\n    uVar8 = uVar21 & 0xffffff00;\n    *(uVar18 * 2 + 0x79063464) = uVar8;\n    pcVar14 = extraout_ECX_19;\n    do {\n        puVar1 = unaff_EBX + pcVar14 * 8;\n        *puVar1 = *puVar1 | uVar18;\n        iVar10 = (uVar8 + 1 & 0xffffff00 | (uVar8 + 1) - 0x2c) + 0x68d7dc43;\n        bVar20 = iVar10 == 0;\n        if (!bVar20) {\n            Var13 = iVar10 >> 8;\n            uVar8 = CONCAT31(Var13, 0xd);\n            uVar18 = *unaff_EBX;\n            if (bVar20) goto code_r0x00402050;\n            uVar21 = CONCAT44(iVar7, CONCAT31(Var13, 0xd));\n            uStack84 = 0xd;\n            iVar7 = *unaff_EBX;\n            *(unaff_EBX + -0x605f8149) = *(unaff_EBX + -0x605f8149) << (pcVar14 & 0x1f);\n            goto code_r0x00401fa5;\n        }\n        uVar8 = 0x9c7733c5;\n        pcVar14 = pcVar14 + -1;\n        if (pcVar14 != NULL) goto code_r0x004020f5;\n        uStack40 = 0x7733c500;\n        pStack36 = 0x9c;\ncode_r0x004020a6:\n        uStack83 = 0xb7;\n        uStack82 = 0x4020;\n        uVar21 = (*_sym.imp.KERNEL32.dll_GetProcessVersion)();\n        iVar7 = uVar21 >> 0x20;\n        uVar18 = uVar18 + 1;\n        *0x9fa07eb7 = uVar21;\n        *(unaff_EDI + iVar7 * 4 + -0x35b78b93) = 0;\n        uVar8 = uVar21 & 0xffffff00;\n        *(uVar18 * 2 + 0x79063464) = uVar8;\n        puVar1 = unaff_EBX + extraout_ECX_20 * 8;\n        *puVar1 = *puVar1 | uVar18;\n        uVar8 = (uVar8 | 0xd5) + 0x68d7dc43;\n        pcVar14 = extraout_ECX_20;\n    } while (uVar8 != 0);\n    if (extraout_ECX_20 != 0x1) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uStack40 = 0x7733c500;\n    pStack36 = 0x9c;\ncode_r0x004020f2:\n    uVar21 = (*_sym.imp.KERNEL32.dll_FindFirstFileExA)();\n    *0x9fa07eb7 = uVar21;\n    uVar18 = uStack24 + 0xe9eabaa3;\n    uVar8 = *0x9fa07eb7 & 0xffffff00;\n    *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n    bVar20 = false;\n    pcVar14 = extraout_ECX_21;\n    while( true ) {\n        uVar8 = uVar8 & 0xffffff00 | -bVar20;\n        *(uVar18 * 2 + 0x79063464) = uVar8;\n        puVar1 = unaff_EBX + pcVar14 * 8;\n        *puVar1 = *puVar1 | uVar18;\n        uVar8 = uVar8 + 1;\n        uVar8 = (uVar8 & 0xffffff00 | uVar8 - 0x2c) + 0x68d7dc43;\n        if (uVar8 == 0) break;\n        uStack83 = uVar18;\n        uStack82 = uVar18 >> 8;\n        puVar17 = puVar17 + 1;\ncode_r0x004020f5:\n        uVar8 = uVar8 + 0x69ac442c + (0xbaa846e9 < uVar8);\n        bVar20 = uVar8 < 0x8b;\n        if (uVar8 != 0x8b) goto code_r0x004020f2;\n    }\n    uVar8 = 0x9c7733c5;\n    pcVar14 = pcVar14 + -1;\n    if (pcVar14 == NULL) {\n        return uStack60;\n    }\n    while( true ) {\n        *(uVar18 * 2 + 0x79063464) = uVar8 & 0xffffff00;\n        puVar1 = unaff_EBX + pcVar14 * 8;\n        *puVar1 = *puVar1 | uVar18;\n        if ((uVar8 & 0xffffff00 | 0xd5) == 0x972823bd) break;\n        if (CONCAT13(pStack36._0_1_, uStack40._1_3_) != 0x16154556 - CONCAT13(uStack16, uStack20._1_3_))\n        goto code_r0x0040201f;\n        uStack84 = 0;\n        uVar21 = (*0x4042ee)();\n        pVar19 = uVar18 + 1;\n        *0x9fa07eb7 = uVar21;\n        *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n        uVar8 = uVar21 & 0xffffff00;\n        *(pVar19 * 2 + 0x79063464) = uVar8;\n        puVar1 = unaff_EBX + extraout_ECX_11 * 8;\n        *puVar1 = *puVar1 | pVar19;\n        uVar8 = uVar8 | 0xd5;\n        if (uVar8 == 0x972823bd) {\n            uVar8 = 0x9c7733c5;\n            iVar7 = extraout_ECX_11 + -1;\n            if (iVar7 != 0) goto code_r0x00401de5;\n            uVar21 = (*0x404276)();\n            *0x9fa07eb7 = uVar21;\n            *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n            uVar8 = uVar21 & 0xffffff00;\n            *((uVar18 + 2) * 2 + 0x79063464) = uVar8;\n            puVar1 = unaff_EBX + extraout_ECX_10 * 8;\n            *puVar1 = *puVar1 | uVar18 + 2;\n            uVar18 = (uVar8 | 0xd5) + 0x68d7dc43;\n            if (uVar18 != 0) {\n                uStack96 = in_SS;\n                uStack95 = in_SS >> 8;\n                goto code_r0x00401cbb;\n            }\n            uVar18 = 0x9c7733c5;\n            if (extraout_ECX_10 != 1) {\n                iVar7 = in(uVar21 >> 0x20);\n                *unaff_EDI = iVar7;\n                return uVar18;\n            }\n        }\n        else {\n            puVar17 = puVar17 + 1;\n            uVar18 = uVar8 + 0x1a9a5d59 & 0xffffff20;\n        }\n        if ((uVar18 & 0xe9eabaab) != 0x16154556) {\n            return uStack60;\n        }\n        uVar21 = (*0x404210)();\n        uVar18 = 0xe9eabaac;\n        *0x9fa07eb7 = uVar21;\n        *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n        uVar8 = uVar21 & 0xffffff00;\n        puVar1 = unaff_EBX + extraout_ECX_02 * 8;\n        *0x4cdba9bc = uVar8;\n        *puVar1 = *puVar1 | 0xe9eabaac;\n        if ((uVar8 | 0xd5) != 0x972823bd) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uStack84 = 0;\n        uVar9 = 0x9c7733c5;\n        uVar8 = extraout_ECX_02 - 1;\n        if (uVar8 == 0) {\n            uStack40 = uStack40 & 0xffffff00;\n        }\n        else {\ncode_r0x00401ac8:\n            if (uVar8 != (uVar9 ^ 0x16154556)) goto code_r0x0040201f;\ncode_r0x00401da5:\n            uStack96 = 0xca;\n            uStack95 = 0x1d;\n            uStack94 = 0x40;\n            uStack93 = 0;\n            uVar21 = (*_sym.imp.ADVAPI32.dll_QueryServiceObjectSecurity)();\n            pVar19 = uVar18 + 1;\n            *0x9fa07eb7 = uVar21;\n            *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n            uVar8 = uVar21 & 0xffffff00;\n            *(pVar19 * 2 + 0x79063464) = uVar8;\n            puVar1 = unaff_EBX + extraout_ECX_12 * 8;\n            *puVar1 = *puVar1 | pVar19;\n            uVar8 = uVar8 + 1;\n            iVar7 = extraout_ECX_12;\ncode_r0x00401de5:\n            puVar5 = _sym.imp.USER32.dll_GetRawInputDeviceList;\n            if ((uVar8 & 0xffffff00 | uVar8 - 0x2c) != 0x972823bd) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            uVar18 = iVar7 - 1;\n            if (uVar18 == 0) {\n                uVar21 = (*_sym.imp.USER32.dll_GetRawInputDeviceList)();\n                pVar19 = unaff_ESI + (0xa6355cdb < uStack20) + 1;\n                *0x9fa07eb7 = uVar21;\n                *(puVar5 + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n                uVar18 = uVar21 & 0xffffff00;\n                *(pVar19 * 2 + 0x79063464) = uVar18;\n                puVar1 = unaff_EBX + extraout_ECX_13 * 8;\n                *puVar1 = *puVar1 | pVar19;\n                if ((uVar18 | 0xd5) != 0x972823bd) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                unaff_EBX = 0x9c7733c5;\n                uVar18 = extraout_ECX_13 - 1;\n                if (uVar18 != 0) {\n                    uVar11 = in(uVar21 >> 0x20);\n                    *puVar5 = uVar11;\n                    return 0x9c7797c5;\n                }\n            }\n            else {\n                unaff_EBX = 0x9c773300;\n            }\ncode_r0x00401e40:\n            unaff_EDI = uStack20 ^ 0x43770edb;\n            uVar8 = CONCAT22(uStack82, CONCAT11(uStack83, uStack84)) < uVar18;\n            uVar18 = (pVar19 - unaff_EBX) - uVar8;\n            uStack40 = unaff_EBX;\n            pStack36 = unaff_EBX;\n            if (pVar19 < unaff_EBX || pVar19 - unaff_EBX < uVar8) {\n                return uStack60;\n            }\ncode_r0x004019ab:\n            if (CONCAT13(pStack36._0_1_, uStack40._1_3_) == (CONCAT13(uStack20, uStack24._1_3_) ^ 0x16154556)) {\ncode_r0x00401b90:\n                uStack84 = 0;\n                uVar21 = (*_sym.imp.SHLWAPI.dll_PathCombineA)();\n                uVar18 = uVar18 + 1;\n                *0x9fa07eb7 = uVar21;\n                *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n                uVar8 = uVar21 & 0xffffff00;\n                *(uVar18 * 2 + 0x79063464) = uVar8;\n                puVar1 = unaff_EBX + extraout_ECX_06 * 8;\n                *puVar1 = *puVar1 | uVar18;\n                iVar10 = (uVar8 | 0xd5) + 0x68d7dc43;\n                bVar20 = iVar10 == 0;\n                iVar7 = extraout_ECX_06;\n                if (bVar20) {\n                    uVar8 = 0x9c7733c5;\n                    bVar20 = false;\n                    goto code_r0x00401bcb;\n                }\ncode_r0x00401b76:\n                uVar18 = *unaff_EBX;\n                if (!bVar20) goto code_r0x00401b16;\ncode_r0x00401b7a:\n                if (iVar7 == 1 || bVar20) goto code_r0x00401edb;\n                while( true ) {\n                    uStack84 = 0;\n                    uVar21 = (*_sym.imp.GDI32.dll_CreateEnhMetaFileW)();\n                    uVar18 = uVar18 + 1;\n                    *0x9fa07eb7 = uVar21;\n                    *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n                    uVar8 = uVar21 & 0xffffff00;\n                    *(uVar18 * 2 + 0x79063464) = uVar8;\n                    puVar1 = unaff_EBX + extraout_ECX_07 * 8;\n                    *puVar1 = *puVar1 | uVar18;\n                    uVar8 = uVar8 | 0xd5;\n                    if (uVar8 == 0x972823bd) break;\n                    uVar8 = uVar8 + 0xf3d3526d;\n                    uVar6 = uVar8 ^ 6;\n                    uVar8 = uVar8 ^ 6;\n                    bVar20 = uVar6 == 0;\n                    if (uVar6 < '\\0') goto code_r0x00401b90;\n                    uStack84 = 0xd;\n                    uVar18 = *unaff_EBX;\n                    iVar7 = extraout_ECX_07;\n                    if (!bVar20) goto code_r0x00401b67;\ncode_r0x00401bcb:\n                    if (iVar7 != 1 && !bVar20) {\n                        return uVar8;\n                    }\n                }\n                uVar8 = 0x9c7733c5;\n                if (extraout_ECX_07 != 1) {\n                    return uVar8;\n                }\ncode_r0x00401c07:\n                uStack40 = uVar8 << 8;\n                pStack36 = uVar8 >> 0x18;\ncode_r0x0040201f:\n                uStack83 = 0x26;\n                uStack82 = 0x4020;\n                uVar21 = (*0x40428e)();\n                *0x9fa07eb7 = uVar21;\n                pcVar14 = extraout_ECX_18;\ncode_r0x0040202b:\n                iVar7 = uVar21 >> 0x20;\n                uVar18 = uVar18 + 1;\n                *(unaff_EDI + iVar7 * 4 + -0x35b78b93) = 0;\n                uVar8 = uVar21 & 0xffffff00;\n                *(uVar18 * 2 + 0x79063464) = uVar8;\n                puVar1 = unaff_EBX + pcVar14 * 8;\n                *puVar1 = *puVar1 | uVar18;\n                uVar8 = (uVar8 | 0xd5) + 0x68d7dc43;\n                bVar20 = uVar8 == 0;\n                if (!bVar20) goto code_r0x00401ffb;\n                uVar8 = 0x9c7733c5;\n                bVar20 = false;\ncode_r0x00402050:\n                if (pcVar14 != 0x1 && !bVar20) goto code_r0x004020a6;\ncode_r0x00402052:\n                uStack40 = uVar8 << 8;\n                pStack36 = uVar8 >> 0x18;\n                if (uVar8 != 0x16154556U - CONCAT13(uStack16, uStack20._1_3_)) goto code_r0x0040201f;\n                uStack83 = 0x41;\n                uStack82 = 0x401c;\n                uVar21 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)();\n                uVar18 = uVar18 + 1;\n                *0x9fa07eb7 = uVar21;\n                *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n                uVar8 = uVar21 & 0xffffff00;\n                *(uVar18 * 2 + 0x79063464) = uVar8;\n                puVar1 = unaff_EBX + extraout_ECX_08 * 8;\n                *puVar1 = *puVar1 | uVar18;\n                iVar7 = extraout_ECX_08;\ncode_r0x00401c5b:\n                uVar8 = (uVar8 + 1 & 0xffffff00 | (uVar8 + 1) - 0x2c) + 0x68d7dc43;\n                bVar20 = uVar8 == 0;\ncode_r0x00401c64:\n                if (!bVar20) {\n                    return uStack60;\n                }\n                uVar8 = uVar8 | 0x9c7733c5;\n                bVar20 = uVar8 == 0;\n                while (iVar7 = iVar7 + -1,  iVar7 == 0 || bVar20) {\n                    uStack52 = uStack52 & 0xffffff | uVar8 << 0x18;\n                    uStack60 = uStack60 & 0xffffff | iVar7 * 0x1000000;\n                    if (uVar8 != 0xe9eabab6) {\n                        return uStack60;\n                    }\n                    uStack93 = 0x8f;\n                    uVar21 = (*_sym.imp.OLEAUT32.dll_VariantTimeToSystemTime)();\n                    uVar18 = uVar18 + 1;\n                    *0x9fa07eb7 = uVar21;\n                    *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n                    uVar8 = uVar21 & 0xffffff00;\n                    *(uVar18 * 2 + 0x79063464) = uVar8;\n                    puVar1 = unaff_EBX + extraout_ECX_09 * 8;\n                    *puVar1 = *puVar1 | uVar18;\n                    uVar8 = (uVar8 | 0xd5) + 0x68d7dc43;\n                    bVar20 = uVar8 == 0;\n                    iVar7 = extraout_ECX_09;\n                    if (!bVar20) goto code_r0x00401c64;\n                    uVar18 = 0x9c7733c5;\n                    iVar7 = extraout_ECX_09 + -1;\n                    if (iVar7 == 0) goto code_r0x00401cbb;\n                    uVar18 = *unaff_EBX;\n                    uVar6 = *(unaff_EBX + 0xc5) ^ 6;\n                    uVar8 = (*(unaff_EBX + 0xc5) | 0x9c773300) ^ 6;\n                    bVar20 = uVar6 == 0;\n                    if (uVar6 < '\\0') {\n                        uVar8 = (uVar8 & 0xff | 0x9c773300) ^ 0xcb;\n                        goto code_r0x00401c5b;\n                    }\n                    uStack93 = 0xf8;\n                    uVar18 = *unaff_EBX;\n                    if (!bVar20) goto code_r0x00401c07;\n                }\n                uStack96 = uVar18 >> 8;\n                uStack95 = uVar18 >> 0x10;\n                uStack94 = uVar18 >> 0x18;\n                puVar17 = puVar17 + 1;\n                *unaff_EBX = *unaff_EBX - (iVar7 >> 8);\n                uVar18 = uVar8 + 0x244c8b16 & 0xffffff3c;\ncode_r0x00401cbb:\n                if (uVar18 == 0x9d5e2b4) {\n                    return 0x157b9ce0;\n                }\ncode_r0x00401edb:\n                pcVar4 = _sym.imp.KERNEL32.dll_GetTempFileNameA;\n                uVar21 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)();\n                pcVar15 = pcVar4 + 1;\n                *0x9fa07eb7 = uVar21;\n                *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n                uVar18 = uVar21 & 0xffffff00;\n                *(pcVar15 * 2 + 0x79063464) = uVar18;\n                puVar1 = unaff_EBX + extraout_ECX_15 * 8;\n                *puVar1 = *puVar1 | pcVar15;\n                if ((uVar18 | 0xd5) != 0x972823bd) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                uStack60 = 0x9c7733c5;\n                if (extraout_ECX_15 != 1) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                if ((CONCAT13(uStack93, CONCAT12(uStack94, CONCAT11(uStack95, uStack96))) & 0x9c7733c5) != 0) {\n                    return 0x9c7733c5;\n                }\n                uStack96 = 0x8c;\n                uStack95 = 0x1e;\n                uStack94 = 0x40;\n                uStack93 = 0;\n                uVar21 = (*_sym.imp.SETUPAPI.dll_CM_Get_Device_IDW)();\n                pVar19 = pcVar4 + 2;\n                *0x9fa07eb7 = uVar21;\n                *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n                uVar18 = uVar21 & 0xffffff00;\n                *(pVar19 * 2 + 0x79063464) = uVar18;\n                puVar1 = unaff_EBX + extraout_ECX_14 * 8;\n                *puVar1 = *puVar1 | pVar19;\n                uVar18 = (uVar18 | 0xd5) + 0x68d7dc43;\n                if (uVar18 != 0) {\n                    unaff_EBX = uVar18 & 0xffffff04;\n                    uVar18 = extraout_ECX_14;\n                    uStack52 = uStack60;\n                    goto code_r0x00401e40;\n                }\n                if (extraout_ECX_14 != 1) {\n                    return 0x9c7733c4;\n                }\n                if ((0x16154557 - uStack20 & 0x9c7733c5) != extraout_ECX_14 - 1) {\n                    return 0x9c7733c5;\n                }\n                uStack40 = 0x9c7733c5;\n                uStack52 = 0x9c7733c5;\n                uStack60 = 0x9c7733c5;\n                uStack93 = 0;\n                uStack94 = 0x40;\n                uStack95 = 0x1e;\n                uStack96 = 0x8c;\n                iVar7 = CONCAT13(uStack20, uStack24._1_3_) + -0x16154555;\n                uStack84 = 0;\n                uVar21 = (*_sym.imp.GDI32.dll_EnumFontsW)();\n                *0x9fa07eb7 = uVar21;\n                pcVar14 = extraout_ECX_16;\ncode_r0x00401fa5:\n                uVar18 = iVar7 + 1;\n                *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\ncode_r0x00401faf:\n                iVar7 = uVar21 >> 0x20;\n                uVar8 = uVar21 & 0xffffff00;\n                *(uVar18 * 2 + 0x79063464) = uVar8;\n                puVar1 = unaff_EBX + pcVar14 * 8;\n                *puVar1 = *puVar1 | uVar18;\n                if ((uVar8 | 0xd5) != 0x972823bd) {\n                    return uStack60;\n                }\n                uVar9 = 0x9c7733c5;\n                bVar20 = false;\ncode_r0x00401fca:\n                uVar21 = CONCAT44(iVar7, uVar9);\n                pcVar14 = pcVar14 + -1;\n                if (pcVar14 != NULL && !bVar20) {\n                    unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11((unaff_EBX >> 8) * '\\x02', unaff_EBX);\n                    *(unaff_EBX + -0x605f8149) = *(unaff_EBX + -0x605f8149) << 1;\n                    goto code_r0x0040202b;\n                }\n                uStack40 = uVar9 << 8;\n                pStack36 = uVar9 >> 0x18;\n                uStack83 = 0xd9;\n                uStack82 = 0x401f;\n                uVar21 = (*_sym.imp.KERNEL32.dll_MulDiv)();\n                iVar7 = uVar21 >> 0x20;\n                uVar18 = uVar18 + 1;\n                *0x9fa07eb7 = uVar21;\n                *(unaff_EDI + iVar7 * 4 + -0x35b78b93) = 0;\n                uVar8 = uVar21 & 0xffffff00;\n                *(uVar18 * 2 + 0x79063464) = uVar8;\n                puVar1 = unaff_EBX + extraout_ECX_17 * 8;\n                *puVar1 = *puVar1 | uVar18;\n                uVar8 = (uVar8 | 0xd5) + 0x68d7dc43;\n                bVar20 = uVar8 == 0;\n                pcVar14 = extraout_ECX_17;\ncode_r0x00401ffb:\n                if (!bVar20) {\n                    uVar8 = uVar8 + 0x8afb762a;\n                    uVar21 = CONCAT44(iVar7, uVar8);\n                    uVar6 = uVar8 ^ 6;\n                    uVar9 = uVar8 ^ 6;\n                    uVar22 = CONCAT44(iVar7, uVar8) ^ 6;\n                    bVar20 = uVar6 == 0;\n                    if (-1 < uVar6) goto code_r0x00401fc1;\n                    goto code_r0x00401faf;\n                }\n                uVar8 = uVar8 | 0x9c7733c5;\n                if (pcVar14 + -1 != NULL && uVar8 != 0) {\n                    puVar17 = puVar17 + 1;\n                    *unaff_EBX = *unaff_EBX - (pcVar14 + -1 >> 8);\n                    uVar8 = uVar8 + 0x244c8b16 & 0xffffff3c;\n                    goto code_r0x00402052;\n                }\n                if ((uVar18 & uVar8) != uVar8) {\n                    return uStack60;\n                }\n                uStack84 = 0x8f;\n                uStack83 = 0x1a;\n                uStack82 = 0x40;\n                uVar21 = (*_sym.imp.USER32.dll_VkKeyScanW)();\n                uVar18 = (uVar18 & uVar8) + 1;\n                *0x9fa07eb7 = uVar21;\n                *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n                uVar8 = uVar21 & 0xffffff00;\n                *(uVar18 * 2 + 0x79063464) = uVar8;\n                puVar1 = unaff_EBX + extraout_ECX_03 * 8;\n                *puVar1 = *puVar1 | uVar18;\n                uVar8 = (uVar8 | 0xd5) + 0x68d7dc43;\n                iVar7 = extraout_ECX_03;\n                if (uVar8 != 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\ncode_r0x00401ab4:\n                uVar8 = uVar8 | 0x9c7733c5;\n                if (iVar7 != 1 && uVar8 != 0) {\n                    uVar8 = uVar8 & 0xffffff28;\ncode_r0x00401b0d:\n                    pStack36 = uVar8 >> 0x18;\n                    iVar10 = CONCAT13(uStack16, uStack20._1_3_);\ncode_r0x00401b16:\n                    uStack60 = iVar10 + 0xe9eabaa3;\n                    if ((uStack52 & 0xf62a1d4d) != 0x1a2a27f4) {\n                        return uStack60;\n                    }\n                    uStack83 = 0x50;\n                    uStack82 = 0x401b;\n                    uVar21 = (*_sym.imp.GDI32.dll_GetTextCharacterExtra)();\n                    uVar18 = uVar18 + 1;\n                    *0x9fa07eb7 = uVar21;\n                    *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n                    uVar8 = uVar21 & 0xffffff00;\n                    *(uVar18 * 2 + 0x79063464) = uVar8;\n                    iVar7 = extraout_ECX_05;\n                    goto code_r0x00401b67;\n                }\n                uStack40 = uVar8 << 8;\n                pStack36 = uVar8 >> 0x18;\n                uVar9 = CONCAT13(uStack16, uStack20._1_3_);\n                goto code_r0x00401ac8;\n            }\n        }\n        uStack84 = 0;\n        uVar21 = (*_sym.imp.ADVAPI32.dll_CloseEventLog)();\n        *0x9fa07eb7 = uVar21;\n        uVar18 = uVar18 + 1;\n        uVar8 = *0x9fa07eb7 & 0xffffff00;\n        *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n        pcVar14 = extraout_ECX_22;\n    }\n    if (pcVar14 == 0x1) {\n        uVar21 = (*_sym.imp.RPCRT4.dll_RpcBindingFromStringBindingW)();\n        uVar18 = uVar18 + 1;\n        *0x9fa07eb7 = uVar21;\n        *(unaff_EDI + (uVar21 >> 0x20) * 4 + -0x35b78b93) = 0;\n        uVar8 = uVar21 & 0xffffff00;\n        *(uVar18 * 2 + 0x79063464) = uVar8;\n        puVar1 = unaff_EBX + extraout_ECX_04 * 8;\n        *puVar1 = *puVar1 | uVar18;\n        uVar8 = (uVar8 | 0xd5) + 0x68d7dc43;\n        if (uVar8 != 0) {\n            uVar18 = uVar18 ^ unaff_EDI[-0x19];\n            iVar7 = extraout_ECX_04;\n            goto code_r0x00401ab4;\n        }\n        uVar8 = 0x9c7733c5;\n        iVar7 = extraout_ECX_04 + -1;\n        if (iVar7 == 0) goto code_r0x00401b0d;\n        iVar10 = -0x6388ccc4;\n        bVar20 = false;\n        uStack84 = 0xd;\n        goto code_r0x00401b76;\n    }\n    *(puVar17 + -0x10) = 0x4f454bd6;\n    *(puVar17 + -0x11) = 0x75;\n    *(puVar17 + -0x18) = *(puVar17 + 8);\n    uVar11 = fcn.00403082();\n    *(puVar17 + -0x1c) = uVar11;\n    *(puVar17 + -0x20) = uVar11;\n    iVar7 = fcn.00402fe0(uVar11);\n    iVar7 = *(iVar7 + 0x78);\n    iVar10 = *(*(puVar17 + -0x1c) + 0x20 + iVar7);\n    uVar18 = *(*(puVar17 + -0x1c) + 0x18 + iVar7);\n    *(puVar17 + -0x24) = uVar18;\n    *(puVar17 + -0x28) = *(puVar17 + -0x20) + iVar10;\n    *(puVar17 + -0x2c) = *(puVar17 + -0x20) + iVar7;\n    *(puVar17 + -0x30) = 0;\n    if (uVar18 == (*(puVar17 + -0x10) ^ 0x4f454bd6)) goto code_r0x004022b5;\n    iVar7 = *(*(puVar17 + -0x2c) + 0x24);\n    *(puVar17 + -0x3c) = 0;\n    *(puVar17 + -0x40) = *(puVar17 + -0x20) + iVar7;\ncode_r0x0040230c:\n    iVar7 = *(*(puVar17 + -0x28) + *(puVar17 + -0x3c) * 4);\n    *(puVar17 + -0x38) = *(puVar17 + -0x40);\n    *(puVar17 + -0x34) = *(puVar17 + -0x3c);\n    *(puVar17 + -0x54) = *(puVar17 + -0x20) + iVar7;\n    *(puVar17 + -0x50) = 0;\n    do {\n        iVar7 = *(puVar17 + -0x50);\n        uVar6 = *(*(puVar17 + -0x54) + iVar7);\n        uVar2 = *(*(puVar17 + -0x18) + iVar7);\n        *(puVar17 + -0x48) = iVar7;\n        *(puVar17 + -0x49) = uVar2;\n        *(puVar17 + -0x41) = uVar6 == uVar2;\n        if (uVar6 == (*(puVar17 + -0x11) ^ 0x75)) break;\n        uVar18 = *(puVar17 + -0x48) + (0x4f454bd7 - *(puVar17 + -0x10));\n        *(puVar17 + -0x50) = uVar18;\n    } while ((*(puVar17 + -0x41) & *(puVar17 + -0x49) != (*(puVar17 + -0x11) ^ 0x75) &\n             uVar18 < 0x4f454bf6U - *(puVar17 + -0x10)) != 0);\n    if ((*(puVar17 + -0x41) & 1) != 0) {\n        *(puVar17 + -0x30) =\n             *(puVar17 + -0x20) + *(*(puVar17 + -0x20) + *(*(puVar17 + -0x2c) + 0x1c) + **(puVar17 + -0x38) * 4);\n        goto code_r0x004022b5;\n    }\n    uVar18 = *(puVar17 + -0x34) + *(puVar17 + -0x10) + -0x4f454bd5;\n    *(puVar17 + -0x30) = 0;\n    *(puVar17 + -0x3c) = uVar18;\n    *(puVar17 + -0x40) = *(puVar17 + -0x38) + 2;\n    if (*(puVar17 + -0x24) <= uVar18) {\ncode_r0x004022b5:\n        return *(puVar17 + -0x30);\n    }\n    goto code_r0x0040230c;\ncode_r0x00401fc1:\n    uVar18 = *unaff_EBX;\n    if (!bVar20) {\n        cVar16 = *pcVar14;\n        cVar12 = uVar8 >> 8;\n        cVar3 = *pcVar14 + cVar12;\n        *pcVar14 = cVar3;\n        pcVar15 = swi(4);\n        if (SCARRY1(cVar16, cVar12) != SCARRY1(cVar3, '\\0')) {\n            uVar22 = (*pcVar15)();\n        }\n        goto code_r0x00401f69;\n    }\n    goto code_r0x00401fca;\ncode_r0x00401b67:\n    puVar1 = unaff_EBX + iVar7 * 8;\n    *puVar1 = *puVar1 | uVar18;\n    uVar8 = uVar8 + 1 & 0xffffff00 | (uVar8 + 1) - 0x2c;\n    iVar10 = uVar8 + 0x68d7dc43;\n    if (iVar10 != 0) {\n        *unaff_EDI = iVar10;\n        *(iVar7 + 0x39202444) = *(iVar7 + 0x39202444) - iVar7;\n        return uVar8 + 0x8d2bff59;\n    }\n    bVar20 = false;\n    goto code_r0x00401b7a;\ncode_r0x004018bb:\n    *0xc70c3f62 = iVar7;\n    unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(cVar16 + *0xc70c3f62, unaff_EBX);\n    *0xc70c3f62 = *0xc70c3f62 & 0x40;\n    unaff_EBP = &uStack4 + 1;\n    unaff_ESI = uVar18;\n    goto code_r0x004018a4;\n}\n",
        "token_count": 11563
    },
    "00401000": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00401000(int32_t arg_8h, ushort *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iStack60;\n    uint var_bp_ch;\n    \n    // [00] -r-x section size 16384 named .text\n    *(arg_ch + 2) = arg_8h;\n    iVar1 = 0;\n    do {\n        iStack60 = iVar1;\n        iVar1 = iStack60 + 1;\n    } while (*(arg_8h + iStack60) != '\\0');\n    arg_ch[1] = iStack60;\n    *arg_ch = iStack60;\n    return;\n}\n",
        "token_count": 162
    },
    "004010ee": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00401158)\n\nvoid __cdecl fcn.004010ee(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint var_ch;\n    \n    if (arg_14h == 0) {\n        fcn.00402c62(arg_8h, arg_ch, *(arg_18h + 0x3c));\n    }\n    fcn.00402c62(arg_8h + *(arg_10h + 0xc), arg_ch + *(arg_10h + 0x14), *(arg_10h + 0x10));\n    return;\n}\n",
        "token_count": 178
    },
    "00402c62": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.00402c62(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iStack44;\n    uint var_bp_ch;\n    \n    if (arg_10h != 0) {\n        iStack44 = 0;\n        do {\n            *(arg_8h + iStack44) = *(arg_ch + iStack44);\n            iStack44 = iStack44 + 1;\n        } while (iStack44 != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 144
    },
    "004035d3": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x0040368f)\n\nint32_t __cdecl fcn.004035d3(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iStack52;\n    uint var_bp_ch;\n    \n    iVar1 = 0;\n    do {\n        iStack52 = iVar1;\n        iVar1 = iStack52 + 1;\n    } while (*(arg_8h + iStack52) != '\\0');\n    return iStack52;\n}\n",
        "token_count": 128
    },
    "00402826": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nuint __cdecl fcn.00402826(uint noname_0, char *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uStack36;\n    uint var_bp_8h;\n    \n    for (; *arg_ch != -0x48; arg_ch = **(arg_ch + 2)) {\n        if ((*arg_ch != -1) || (arg_ch[1] != '%')) goto code_r0x00402949;\n    }\n    if ((arg_ch[3] != 'P') || (uStack36 = 1,  arg_ch[4] != -0x33)) {\ncode_r0x00402949:\n        uStack36 = 1;\n        iVar1 = fcn.00402a18();\n        if (iVar1 == 0) {\n            iVar1 = fcn.004036ab();\n            uStack36 = 0;\n            if (iVar1 != 0) {\n                uStack36 = 1;\n            }\n        }\n    }\n    return uStack36;\n}\n",
        "token_count": 237
    },
    "004011ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x00401261)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004011ea(void)\n\n{\n    uint arg_8h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ah;\n    ushort var_ah;\n    uint var_8h;\n    uint var_2h;\n    \n    var_2h._0_2_ = 0x470a;\n    var_8h = 0x7517faba;\n    var_ah = 0xe5f5;\n    fcn.004024cf(&var_2ah, 0x41e743, 0xe);\n    arg_8h = fcn.00402e8f();\n    *0x41fb4c = fcn.004038b9(arg_8h, &var_2ah);\n    return;\n}\n",
        "token_count": 214
    },
    "0040133a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040133a(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    uVar1 = arg_8h & 3;\n    if (2 < arg_ch) {\n        uVar1 = arg_8h % 0x32;\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "00401441": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401441(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    arg_8h[2] = arg_ch + *0x41fb6c;\n    *arg_8h = arg_ch + *0x41fb70;\n    return;\n}\n",
        "token_count": 67
    },
    "00401541": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401541(uint arg_8h, int32_t arg_ch)\n\n{\n    *0x41fb78 = fcn.004031a9(arg_8h, *(arg_ch + 8));\n    return;\n}\n",
        "token_count": 54
    },
    "004015ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n\nvoid __cdecl fcn.004015ad(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_ch;\n    uint var_5h;\n    \n    *0x41fb3c = arg_8h;\n    *0x41fb40 = arg_ch;\n    *0x41fb44 = arg_10h + 8;\n    return;\n}\n",
        "token_count": 103
    },
    "004016ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "accept command line arguments"
        ],
        "decompiled_code": "\nint32_t fcn.004016ce(void)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    \n    var_ch = 0x64a49d92;\n    (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    (*_sym.imp.USER32.dll_GetCapture)();\n    (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    (*_sym.imp.USER32.dll_GetInputState)();\n    var_10h = var_ch ^ 0x64a49d93;\n    (*_sym.imp.KERNEL32.dll_GetThreadPriorityBoost)(0xff1b5b, &var_10h);\n    return 0x64a49d92 - var_ch;\n}\n",
        "token_count": 201
    },
    "004021c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.004021c9(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x34);\n}\n",
        "token_count": 85
    },
    "00402359": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00402359(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    code *var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_88h;\n    uint var_54h;\n    int32_t var_50h;\n    int16_t *var_3ch;\n    uint var_38h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int16_t var_10h;\n    char var_dh;\n    int32_t var_ch;\n    \n    var_ch = 0x624b524d;\n    var_dh = -0x15;\n    var_10h = -0xbd9;\n    fcn.00403e2d(&var_98h);\n    var_54h = var_98h;\n    var_50h = (0x61d702fa - var_ch) + *0x41fb64;\n    var_1ch = *0x41fb34;\n    var_18h = *0x41fb38;\n    var_14h = *0x41fb3c;\n    var_20h = *0x41fb40;\n    var_24h = *0x41fb44;\n    for (var_a8h = fcn.00402787;\n        ((var_3ch = var_a8h,  *var_a8h != var_10h + 0x6626 || (*(var_a8h + *(var_a8h + 0x3c) + 1) != var_dh + 'Z')) ||\n        (*(var_a8h + *(var_a8h + 0x3c)) != ';' - var_dh));\n        var_a8h = var_a8h + var_ch + -0x624b624d & var_ch + 0x9db49db3U) {\n    }\n    iVar1 = 0x624b52d1 - var_ch;\n    iVar2 = fcn.00402fe0(var_a8h);\n    var_38h = *(iVar2 + 0x50);\n    fcn.00401541(&var_88h, &var_98h);\n    fcn.00401566(&var_88h);\n    return iVar1;\n}\n",
        "token_count": 556
    },
    "00402b04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402b04(void)\n\n{\n    uint32_t uVar1;\n    uint arg_8h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    \n    var_8h = 0x179ad4a7;\n    var_9h = 0x5f;\n    var_24h._0_1_ = 0;\n    fcn.004024cf(&var_24h, 0x41e78d, 0x10);\n    var_2ch = 0;\n    uVar1 = var_2ch;\n    do {\n        var_2ch = uVar1;\n        uVar1 = var_2ch + (0x179ad4a8 - var_8h);\n    } while (*(&var_24h + var_2ch) != (var_9h ^ 0x5f));\n    if (var_8h + 0xe8652b5bU < var_2ch) {\n        arg_8h = fcn.00402e8f();\n        *0x41fb74 = fcn.004038b9(arg_8h, &var_24h);\n    }\n    else {\n        *0x41fb74 = 0;\n        fcn.00402b04();\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "00402baf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.00402baf(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 85
    },
    "00402bea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402bea(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    var_14h = -1;\n    if ((iVar1 != 0) && (var_14h = iVar1,  iVar1 == 1)) {\n        var_14h = 0;\n    }\n    return var_14h;\n}\n",
        "token_count": 134
    },
    "00402c3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402c3d(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00402e8f();\n    fcn.004038b9(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 77
    },
    "00402e8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00402e8f(void)\n\n{\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_87h;\n    uint var_76h;\n    uint *var_2eh;\n    uint *var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    char var_15h;\n    int32_t var_14h;\n    uint var_eh;\n    \n    var_24h = &var_87h;\n    var_eh._0_2_ = 0x6bca;\n    var_14h = 0x458a03b6;\n    var_15h = -0x52;\n    var_2eh._0_2_ = 0xb6f;\n    fcn.004024cf(var_24h, 0x41e71d, 0xe);\n    var_20h = var_14h + -0x458a03b6;\n    var_28h = &var_76h;\n    while( true ) {\n        unique0x00007a00 = var_28h;\n        var_1ch = var_20h;\n        if ((var_2eh <= 0x6d07U - var_eh) || (*var_24h == var_15h + 'R')) break;\n        var_20h = var_14h + -0x458a03b5;\n        *var_28h = *var_24h;\n        var_28h = stack0xffffffd0 + 2;\n        var_24h = var_24h + 1;\n        var_20h = var_1ch + var_20h;\n        if (var_20h == var_14h + -0x458a03a5) {\ncode_r0x00402f38:\n            fcn.004032a2(&var_76h, 0);\n            return;\n        }\n    }\n    *var_28h = var_eh + -0x6bca;\n    goto code_r0x00402f38;\n}\n",
        "token_count": 512
    },
    "00403082": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00403082(void)\n\n{\n    int32_t iVar1;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint *var_88h;\n    uint *var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_29h;\n    uint8_t var_15h;\n    uint32_t var_14h;\n    uint var_eh;\n    \n    var_88h = &var_29h;\n    var_eh._0_2_ = -0x3a9a;\n    var_14h = 0x4074270d;\n    var_15h = 0x88;\n    fcn.004024cf(var_88h, 0x41e712, 0xb);\n    var_80h = 0;\n    var_84h = &var_70h;\n    do {\n        if (*var_88h == (var_15h ^ 0x88)) {\n            *var_84h = var_eh + 0x3a9a;\n            break;\n        }\n        iVar1 = var_14h + 0xbf8bd8f4;\n        *var_84h = *var_88h;\n        var_80h = var_80h + iVar1;\n        var_84h = var_84h + 2;\n        var_88h = var_88h + 1;\n    } while (var_80h != (var_14h ^ 0x40742719));\n    fcn.004032a2(&var_70h, 0);\n    return;\n}\n",
        "token_count": 418
    },
    "00403259": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ah\n\nint16_t __cdecl fcn.00403259(uint arg_8h)\n\n{\n    uint var_ah;\n    \n    if (arg_8h - 0x61U < 0x1a) {\n        arg_8h._0_2_ = arg_8h + -0x20;\n    }\n    return arg_8h;\n}\n",
        "token_count": 93
    },
    "00403ac1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403ac1(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_12h;\n    uint var_8h;\n    \n    iVar1 = *(in_FS_OFFSET + arg_8h);\n    unique0x1000000f = -1;\n    if ((iVar1 != 0) && (unique0x10000017 = iVar1,  iVar1 == 1)) {\n        stack0xffffffec = 0;\n    }\n    return stack0xffffffec;\n}\n",
        "token_count": 163
    },
    "00403e2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n\nuint __cdecl fcn.00403e2d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_10h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t var_29h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    \n    var_34h = 0;\n    var_24h = 0;\n    do {\n        var_34h = (*(var_24h * 0xf4 + 0x41f578) ^ *(var_24h * 0xf4 + 0x41f574)) + var_34h;\n        var_24h = var_24h + 1;\n    } while (var_24h != 7);\n    var_1ch = 1;\n    iVar1 = fcn.004036ab();\n    if (iVar1 == 0) {\n        *0x8 = 0;\n        iVar1 = fcn.0040129c(0, var_34h);\n        var_20h = 0;\n        do {\n            arg_10h = *(stack0xffffffd4 * 0xf4 + 0x41f578) ^ *(stack0xffffffd4 * 0xf4 + 0x41f574);\n            fcn.00402c62(var_20h + iVar1, *(stack0xffffffd4 * 0xf4 + 0x41f4cc), arg_10h);\n            *NULL = stack0xffffffd4 + 1;\n            var_20h = arg_10h + var_20h;\n        } while (*NULL != 7);\n        fcn.0040264e(iVar1, iVar1, var_34h);\n        fcn.00401441(arg_8h, iVar1);\n        *(arg_8h + 0xc) = *0x41fb68 + -0x12958;\n        var_1ch = 0;\n        *(arg_8h + 4) = *0x41fb64 + -0x744f53;\n    }\n    return var_1ch;\n}\n",
        "token_count": 622
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "",
        "token_count": 0
    }
}