{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_5ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    // [00] -r-x section size 28672 named .text\n    iVar3 = *0x425b50;\n    if (arg_ch == 0xf) {\n        uVar4 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_5ch);\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_1ch);\n        iVar5 = var_10h;\n        pcVar2 = _sym.imp.GDI32.dll_DeleteObject;\n        var_10h = 0;\n        for (; var_18h < iVar5; var_18h = var_18h + 4) {\n            iVar7 = iVar5 - var_18h;\n            var_8h = CONCAT11((*(iVar3 + 0x52) * iVar7 + *(iVar3 + 0x56) * var_18h) / iVar5, \n                              (*(iVar3 + 0x51) * iVar7 + *(iVar3 + 0x55) * var_18h) / iVar5) << 8 |\n                     (*(iVar3 + 0x50) * iVar7 + *(iVar3 + 0x54) * var_18h) / iVar5 & 0xffU;\n            uVar6 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            var_10h = var_10h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, &var_1ch, uVar6);\n            (*pcVar2)(uVar6);\n        }\n        if (*(iVar3 + 0x58) != -1) {\n            iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(*(iVar3 + 0x34));\n            if (iVar5 != 0) {\n                var_1ch = 0x10;\n                var_18h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar4, *(iVar3 + 0x58));\n                pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n                uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, iVar5);\n                (*_sym.imp.USER32.dll_DrawTextA)(uVar4, 0x425340, 0xffffffff, &var_1ch, 0x820);\n                (*pcVar1)(uVar4, uVar6);\n                (*pcVar2)(iVar5);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_5ch);\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = *0x425b48;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar4;\n}\n",
        "token_count": 848
    },
    "null": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    code *pcVar9;\n    code *pcVar10;\n    uint uVar11;\n    uint uVar12;\n    char *pcVar13;\n    uint uStack464;\n    uint32_t *puStack460;\n    char *pcStack456;\n    int32_t iStack452;\n    uint uStack448;\n    uint uStack444;\n    char *pcStack440;\n    uint uStack436;\n    uint uStack432;\n    uchar *puStack428;\n    uint uStack424;\n    uint uStack420;\n    uint uStack416;\n    uint uStack412;\n    uint32_t *puStack408;\n    uchar auStack364 [364];\n    \n    puStack408 = 0x403559;\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    puStack408 = 0x8001;\n    uStack412 = 0x403564;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    uStack412 = 0;\n    uStack416 = 0x40356b;\n    *0x425bf8 = (*_sym.imp.ole32.dll_OleInitialize)();\n    uStack416 = 8;\n    uStack420 = 0x403577;\n    *0x425b44 = fcn.004065e9();\n    uStack420 = 0;\n    puStack428 = &stack0xfffffe94;\n    uStack424 = 0x160;\n    uStack432 = 0;\n    uStack436 = 0x4204f8;\n    pcStack440 = 0x403593;\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoA)();\n    pcStack440 = \"NSIS Error\";\n    uStack444 = 0x425340;\n    uStack448 = 0x4035a2;\n    fcn.00406111();\n    uStack448 = 0x4035a8;\n    uStack448 = (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n    iStack452 = 0x42b000;\n    pcStack456 = 0x4035b4;\n    fcn.00406111();\n    pcStack456 = NULL;\n    puStack460 = 0x4035bb;\n    *0x425b40 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    uStack464 = 0x42b000;\n    if (*0x42b000 == '\\\"') {\n        uStack436 = CONCAT31(uStack436._1_3_, 0x22);\n        uStack464 = 0x42b001;\n    }\n    puStack460 = uStack436;\n    puVar3 = fcn.00405bcc();\n    puVar4 = (*_sym.imp.USER32.dll_CharNextA)(puVar3);\n    pcStack440 = puVar4;\n    while (uVar2 = uStack448,  cVar1 = *puVar4,  cVar1 != '\\0') {\n        while (cVar1 == ' ') {\n            puVar4 = puVar4 + 1;\n            cVar1 = *puVar4;\n        }\n        uStack448 = CONCAT31(uStack448._1_3_, 0x20);\n        if (*puVar4 == '\\\"') {\n            puVar4 = puVar4 + 1;\n            uStack448 = uVar2 & 0xffffff00 | 0x22;\n        }\n        puVar5 = puVar4;\n        if (*puVar4 == '/') {\n            puVar5 = puVar4 + 1;\n            if ((*puVar5 == 'S') && ((*(puVar4 + 2) == ' ' || (*(puVar4 + 2) == '\\0')))) {\n                *0x425be0 = 1;\n            }\n            if ((*puVar5 == (((str.NCRC[3] << 8 | str.NCRC[2]) << 8 | str.NCRC[1]) << 8 | str.NCRC[0])) &&\n               ((*(puVar4 + 5) == ' ' || (*(puVar4 + 5) == '\\0')))) {\n                uStack436 = uStack436 | 4;\n            }\n            if (*(puVar4 + -1) == (((str.__D[3] << 8 | str.__D[2]) << 8 | str.__D[1]) << 8 | str.__D[0])) {\n                *(puVar4 + -1) = '\\0';\n                fcn.00406111(0x42b400, puVar4 + 3);\n                break;\n            }\n        }\n        puVar4 = fcn.00405bcc();\n        puVar3 = puVar5;\n        if (*puVar4 == '\\\"') {\n            puVar4 = puVar4 + 1;\n        }\n    }\n    pcVar8 = _sym.imp.KERNEL32.dll_GetTempPathA;\n    pcVar13 = 0x42c400;\n    (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x400, 0x42c400, puVar3);\n    iVar6 = fcn.004034fe();\n    if (iVar6 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(0x42c400, 0x3fb);\n        pcVar13 = \"\\\\Temp\";\n        puVar4 = 0x42c400;\n        sub.KERNEL32.dll_lstrcatA(0x42c400, \"\\\\Temp\");\n        iVar6 = fcn.004034fe();\n        if (iVar6 == 0) {\n            (*pcVar8)(0x3fc, 0x42c400);\n            sub.KERNEL32.dll_lstrcatA(0x42c400, 0x40a7e4);\n            pcVar8 = _sym.imp.KERNEL32.dll_SetEnvironmentVariableA;\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(\"TEMP\", 0x42c400);\n            (*pcVar8)(0x40a7d8, 0x42c400);\n            iVar6 = fcn.004034fe();\n            if (iVar6 == 0) goto code_r0x004037f3;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x42c000);\n    uStack448 = 0x403752;\n    puVar4 = puStack408;\n    puStack428 = fcn.004030a5(puStack408);\n    if (puStack428 == NULL) {\n        if (*0x425b5c != 0) {\n            uStack448 = 0;\n            iStack452 = 0x42b000;\n            pcStack456 = 0x40376d;\n            puVar3 = fcn.00405bcc();\n            if (0x42afff < puVar3) {\n                do {\n                    if (*puVar3 == (((str.___[3] << 8 | str.___[2]) << 8 | str.___[1]) << 8 | str.___[0])) break;\n                    puVar3 = puVar3 + -1;\n                } while (0x42afff < puVar3);\n            }\n            uStack436 = \"Error launching installer\";\n            if (puVar3 < 0x42b000) goto code_r0x0040381e;\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n            puStack460 = 0x4037be;\n            puVar4 = puVar3;\n            iVar6 = fcn.00405c8f();\n            if (iVar6 == 0) goto code_r0x004037f3;\n            uStack464 = 0x42b400;\n            puStack460 = puVar3;\n            fcn.00406111();\n            pcVar13 = 0x42b800;\n            fcn.00406111(0x42b800, puVar3);\n            pcStack456 = NULL;\n        }\n        *0x425bec = -1;\n        uStack448 = fcn.00403a92();\n        puVar4 = 0x1;\n        fcn.00406415(1);\n    }\ncode_r0x004037f3:\n    while( true ) {\n        fcn.00403997(puVar4);\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        if (puStack460 == NULL) break;\n        fcn.004058d0(puStack460, 0x200010);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(2);\ncode_r0x0040381e:\n        pcStack456 = \"~nsu.tmp\";\n        puStack460 = 0x42c400;\n        uStack464 = 0x403829;\n        sub.KERNEL32.dll_lstrcatA();\n        uStack464 = 0x42bc00;\n        pcVar13 = 0x403836;\n        iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x42c400);\n        if (iVar6 != 0) {\n            (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x42c400, 0);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x42c400);\n            if (*0x42b400 == '\\0') {\n                uStack464 = 0x42bc00;\n                puStack460 = 0x42b400;\n                fcn.00406111();\n            }\n            uStack464 = uStack432;\n            fcn.00406111(0x426000);\n            iVar6 = 0x1a;\n            *0x426400 = *0x40a7c1 << 8 | *0x40a7c0;\n            do {\n                fcn.00406133(0x4200f8, *(*0x425b50 + 0x120));\n                (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x4200f8);\n                if ((iStack452 != 0) && (iVar7 = (*_sym.imp.KERNEL32.dll_CopyFileA)(0x42cc00, 0x4200f8, 1),  iVar7 != 0)\n                   ) {\n                    fcn.00405fc5(0x4200f8, 0);\n                    fcn.00406133(0x4200f8, *(*0x425b50 + 0x124));\n                    iVar7 = fcn.0040586f(0x4200f8);\n                    if (iVar7 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar7);\n                        iStack452 = 0;\n                    }\n                }\n                *0x426400 = *0x426400 + 1;\n                *0x426400 = *0x426400 & 0xff00 | *0x426400;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            pcVar13 = NULL;\n            puVar4 = 0x42c400;\n            fcn.00405fc5();\n        }\n    }\n    if (*0x425bd4 != 0) {\n        uVar12 = 3;\n        pcVar8 = fcn.004065e9(3);\n        pcVar9 = fcn.004065e9(4);\n        pcVar10 = fcn.004065e9(5);\n        if (((pcVar8 != NULL) && (pcVar9 != NULL)) && (pcVar10 != NULL)) {\n            uVar11 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &stack0xfffffe34);\n            iVar6 = (*pcVar8)(uVar11);\n            if (iVar6 != 0) {\n                (*pcVar9)(0, \"SeShutdownPrivilege\", &stack0xfffffe40);\n                uStack464 = 1;\n                iStack452 = 2;\n                (*pcVar10)(pcVar13, 0, &stack0xfffffe30, 0, 0, 0);\n            }\n        }\n        iVar6 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0);\n        if (iVar6 == 0) {\n            fcn.0040140b(uVar12, 9);\n        }\n    }\n    if (*0x425bec != -1) {\n        iStack452 = *0x425bec;\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(iStack452);\n    if (*0x40a694 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a694);\n        *0x40a694 = -1;\n    }\n    fcn.004039dc();\n    fcn.0040597c(0x42c800, 7);\n    return;\n}\n",
        "token_count": 2875
    },
    "004066e9": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004066e9(uint *param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    bool bVar14;\n    uint var_90h;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    int32_t var_78h;\n    uint32_t var_74h;\n    uint8_t *var_70h;\n    int32_t var_6ch;\n    uint8_t *var_68h;\n    int32_t var_64h;\n    uint32_t var_60h;\n    uint var_5ch;\n    uint16_t *var_58h;\n    uint16_t *var_54h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint32_t dwBytes;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t hMem;\n    \n    puVar12 = param_1;\n    puVar13 = &var_88h;\n    for (iVar8 = 0x22; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar13 = *puVar12;\n        puVar12 = puVar12 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    uVar9 = var_44h;\n    puVar11 = var_54h;\n    if (var_30h == -1) {\n        return 1;\n    }\ncode_r0x0040671c:\n    do {\n        uVar5 = var_20h;\n        uVar7 = var_2ch;\n        puVar4 = var_68h;\n        puVar3 = var_70h;\n        if (0x1c < var_88h) {\n            return 0xffffffff;\n        }\n    // switch table (29 cases) at 0x40713b\n        switch(*(var_88h * 4 + 0x40713b)) {\n        case 0x406732:\n            if (var_6ch == 0) goto code_r0x0040711e;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            uVar1 = *puVar3;\n            if (0xe1 < uVar1) {\n                return 0xffffffff;\n            }\n            var_3ch = (uVar1 % 0x2d) % 9;\n            var_1ch = (1 << uVar1 / 0x2d) - 1;\n            var_18h = (1 << (uVar1 % 0x2d) / 9) - 1;\n            iVar10 = (0x300 << var_3ch + uVar1 / 0x2d) + 0x736;\n            iVar8 = iVar10 * 2;\n            if (iVar8 != var_78h) {\n                if (hMem != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(hMem);\n                }\n                hMem = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar8);\n                if (hMem == 0) {\n                    return 0xffffffff;\n                }\n                var_78h = iVar8;\n            }\n            while (iVar10 != 0) {\n                iVar10 = iVar10 + -1;\n                *(hMem + iVar10 * 2) = 0x400;\n            }\n            dwBytes = 0;\n            for (var_48h = 0; var_48h < 4; var_48h = var_48h + 1) {\ncode_r0x004067d7:\n                if (var_6ch == 0) {\n                    var_88h = 1;\n                    goto code_r0x0040711e;\n                }\n                var_6ch = var_6ch + -1;\n                dwBytes = dwBytes | *var_70h << (var_48h << 3 & 0x1f);\n                var_70h = var_70h + 1;\n            }\n            if (dwBytes != var_74h) {\n                var_74h = dwBytes;\n                if (var_8h != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(var_8h);\n                }\n                var_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n                if (var_8h == 0) {\n                    return 0xffffffff;\n                }\n            }\n            var_48h = 5;\n            *(var_8h + -1 + var_74h) = 0;\n            while (uVar7 = var_48h,  var_48h = var_48h - 1,  uVar7 != 0) {\ncode_r0x00406847:\n                if (var_6ch == 0) {\n                    var_88h = 3;\n                    goto code_r0x0040711e;\n                }\n                var_6ch = var_6ch + -1;\n                uVar1 = *var_70h;\n                var_70h = var_70h + 1;\n                var_ch = var_ch << 8 | uVar1;\n            }\n        case 0x406872:\n            var_84h = 6;\n            var_4ch = var_60h & var_1ch;\n            puVar11 = hMem + (var_38h * 0x10 + (var_60h & var_1ch)) * 2;\n            break;\n        case 0x4067d7:\n            goto code_r0x004067d7;\n        case 0x406847:\n            goto code_r0x00406847;\n        case 0x406898:\n            if (dwBytes != 0) {\n                var_34h = 1;\n                var_84h = 7;\n                puVar11 = hMem + 0x180 + var_38h * 2;\n                break;\n            }\n            var_58h = ((var_5ch >> (8 - var_3ch & 0x1f)) + ((var_60h & var_18h) << (var_3ch & 0x1f))) * 0x600 + 0xe6c +\n                      hMem;\n            if (var_38h < 4) {\n                var_38h = 0;\n            }\n            else if (var_38h < 10) {\n                var_38h = var_38h + -3;\n            }\n            else {\n                var_38h = var_38h + -6;\n            }\n            if (var_34h != 0) {\n                uVar7 = var_14h - var_2ch;\n                if (var_74h <= uVar7) {\n                    uVar7 = uVar7 + var_74h;\n                }\n                uVar9 = 1;\n                var_5ch._1_1_ = *(uVar7 + var_8h);\n                do {\n                    uVar1 = var_5ch._1_1_;\n                    var_5ch._1_1_ = var_5ch._1_1_ << 1;\n                    var_48h = uVar1 >> 7;\n                    puVar11 = var_58h + ((uVar1 >> 7) + 1) * 0x100 + uVar9;\n                    uVar2 = *puVar11;\n                    var_54h = puVar11;\n                    uVar7 = (var_10h >> 0xb) * uVar2;\n                    bVar14 = uVar7 <= var_ch;\n                    if (bVar14) {\n                        var_10h = var_10h - uVar7;\n                        var_ch = var_ch - uVar7;\n                        dwBytes = 1;\n                        uVar9 = uVar9 * 2 + 1;\n                        *puVar11 = uVar2 - (uVar2 >> 5);\n                    }\n                    else {\n                        dwBytes = 0;\n                        var_10h = uVar7;\n                        uVar9 = uVar9 * 2;\n                        *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                    }\n                    dwBytes = bVar14;\n                    var_44h = uVar9;\n                    if (var_10h < 0x1000000) {\ncode_r0x00406931:\n                        if (var_6ch == 0) {\n                            var_88h = 0xd;\n                            goto code_r0x0040711e;\n                        }\n                        var_10h = var_10h << 8;\n                        uVar1 = *var_70h;\n                        var_6ch = var_6ch + -1;\n                        var_70h = var_70h + 1;\n                        var_ch = var_ch << 8 | uVar1;\n                    }\n                    if (var_48h != dwBytes) goto code_r0x00406a0f;\n                } while (uVar9 < 0x100);\n                goto code_r0x00406a73;\n            }\n            uVar9 = 1;\n            do {\n                puVar11 = var_58h + uVar9;\n                uVar2 = *puVar11;\n                var_54h = puVar11;\n                uVar7 = (var_10h >> 0xb) * uVar2;\n                if (var_ch < uVar7) {\n                    var_10h = uVar7;\n                    uVar9 = uVar9 * 2;\n                    *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_10h = var_10h - uVar7;\n                    var_ch = var_ch - uVar7;\n                    uVar9 = uVar9 * 2 + 1;\n                    *puVar11 = uVar2 - (uVar2 >> 5);\n                }\n                var_44h = uVar9;\n                if (var_10h < 0x1000000) {\ncode_r0x00406aae:\n                    if (var_6ch == 0) {\n                        var_88h = 0xf;\n                        goto code_r0x0040711e;\n                    }\n                    var_10h = var_10h << 8;\n                    uVar1 = *var_70h;\n                    var_6ch = var_6ch + -1;\n                    var_70h = var_70h + 1;\n                    var_ch = var_ch << 8 | uVar1;\n                }\n            } while (uVar9 < 0x100);\n            goto code_r0x00406a77;\n        case 0x406931:\n            goto code_r0x00406931;\n        case 0x4069ea:\n            goto code_r0x004069ea;\n        case 0x406a7d:\n            goto code_r0x00406a7d;\n        case 0x406aae:\n            goto code_r0x00406aae;\n        case 0x406b37:\n            if (dwBytes != 1) {\n                var_80h = 0x16;\n                var_20h = var_24h;\n                var_24h = var_28h;\n                var_28h = var_2ch;\n                var_38h = ((6 < var_38h) - 1 & 0xfffffffd) + 10;\n                var_58h = hMem + 0x664;\n                goto code_r0x00406b8f;\n            }\n            var_84h = 8;\n            puVar11 = hMem + 0x198 + var_38h * 2;\n            break;\n        case 0x406ba1:\n            if (dwBytes == 0) {\n                var_84h = 9;\n                puVar11 = hMem + ((var_38h + 0xf) * 0x10 + var_4ch) * 2;\n            }\n            else {\n                var_84h = 10;\n                puVar11 = hMem + 0x1b0 + var_38h * 2;\n            }\n            break;\n        case 0x406be4:\n            if (dwBytes != 0) goto code_r0x00406c9f;\n            if (var_60h == 0) {\n                return 0xffffffff;\n            }\n            var_38h = (6 < var_38h) * 2 + 9;\n        case 0x406c08:\n            if (var_64h == 0) {\n                var_88h = 0x1b;\n                goto code_r0x0040711e;\n            }\n            uVar7 = var_14h - var_2ch;\n            if (var_74h <= uVar7) {\n                uVar7 = uVar7 + var_74h;\n            }\n            var_5ch._0_1_ = *(uVar7 + var_8h);\n            *(var_14h + var_8h) = var_5ch;\n            var_60h = var_60h + 1;\n            var_68h = var_68h + 1;\n            var_64h = var_64h + -1;\n            *puVar4 = var_5ch;\n            goto code_r0x00406c43;\n        case 0x406c55:\n            if (dwBytes == 0) goto code_r0x00406c96;\n            var_84h = 0xb;\n            puVar11 = hMem + 0x1c8 + var_38h * 2;\n            break;\n        case 0x406c7c:\n            uVar6 = var_24h;\n            if (dwBytes != 0) {\n                var_20h = var_24h;\n                uVar6 = uVar5;\n            }\n            var_24h = var_28h;\n            var_28h = uVar6;\ncode_r0x00406c96:\n            var_2ch = var_28h;\n            var_28h = uVar7;\ncode_r0x00406c9f:\n            var_80h = 0x15;\n            var_58h = hMem + 0xa68;\n        case 0x406b8f:\ncode_r0x00406b8f:\n            var_84h = 0x12;\n            puVar11 = var_58h;\n            break;\n        case 0x406cb6:\n            var_38h = ((6 < var_38h) - 1 & 0xfffffffd) + 0xb;\n            goto code_r0x00406e67;\n        case 0x406ccd:\n            iVar8 = var_30h;\n            if (3 < var_30h) {\n                iVar8 = 3;\n            }\n            dwBytes = 6;\n            var_7ch = 0x19;\n            var_58h = iVar8 * 0x80 + 0x360 + hMem;\n            goto code_r0x00406fc9;\n        case 0x406cfb:\n            var_2ch = uVar9;\n            if (3 < uVar9) {\n                iVar8 = uVar9 >> 1;\n                dwBytes = iVar8 - 1;\n                uVar7 = (uVar9 & 1 | 2) << (dwBytes & 0x1f);\n                var_2ch = uVar7;\n                if (0xd < uVar9) {\n                    uVar9 = 0;\n                    var_48h = iVar8 - 5;\n                    goto code_r0x00406d67;\n                }\n                var_58h = hMem + 0x55e + (uVar7 - uVar9) * 2;\ncode_r0x00406dab:\n                uVar9 = 0;\n                var_50h = 1;\n                var_44h = 0;\n                for (var_48h = 0; var_48h < dwBytes; var_48h = var_48h + 1) {\n                    puVar11 = var_58h + var_50h;\n                    var_54h = puVar11;\n                    uVar2 = *puVar11;\n                    uVar7 = (var_10h >> 0xb) * uVar2;\n                    if (var_ch < uVar7) {\n                        var_10h = uVar7;\n                        var_50h = var_50h << 1;\n                        *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                    }\n                    else {\n                        var_10h = var_10h - uVar7;\n                        var_ch = var_ch - uVar7;\n                        uVar9 = var_44h | 1 << (var_48h & 0x1f);\n                        var_44h = uVar9;\n                        *puVar11 = uVar2 - (uVar2 >> 5);\n                        var_50h = var_50h * 2 + 1;\n                    }\n                    if (var_10h < 0x1000000) {\ncode_r0x00406dbf:\n                        if (var_6ch == 0) {\n                            var_88h = 0x10;\n                            goto code_r0x0040711e;\n                        }\n                        var_10h = var_10h << 8;\n                        uVar1 = *var_70h;\n                        var_6ch = var_6ch + -1;\n                        var_70h = var_70h + 1;\n                        var_ch = var_ch << 8 | uVar1;\n                    }\n                }\n                var_2ch = var_2ch + uVar9;\n            }\n            var_2ch = var_2ch + 1;\ncode_r0x00406e67:\n            if (var_2ch == 0) {\n                var_30h = 0xffffffff;\n                goto code_r0x0040711e;\n            }\n            if (var_60h < var_2ch) {\n                return 0xffffffff;\n            }\n            var_30h = var_30h + 2;\n            var_60h = var_60h + var_30h;\ncode_r0x00406e85:\n            do {\n                puVar3 = var_68h;\n                if (var_64h == 0) {\n                    var_88h = 0x1c;\n                    goto code_r0x0040711e;\n                }\n                uVar7 = var_14h - var_2ch;\n                if (var_74h <= uVar7) {\n                    uVar7 = uVar7 + var_74h;\n                }\n                var_5ch._0_1_ = *(uVar7 + var_8h);\n                *(var_14h + var_8h) = var_5ch;\n                var_68h = var_68h + 1;\n                var_64h = var_64h + -1;\n                var_30h = var_30h + -1;\n                *puVar3 = var_5ch;\n                var_14h = (var_14h + 1) % var_74h;\n            } while (0 < var_30h);\n            goto code_r0x00406c46;\n        case 0x406d3c:\n            while (var_6ch != 0) {\n                var_10h = var_10h << 8;\n                uVar1 = *var_70h;\n                var_6ch = var_6ch + -1;\n                var_70h = var_70h + 1;\n                var_ch = var_ch << 8 | uVar1;\n                uVar7 = var_2ch;\n                do {\n                    var_48h = var_48h - 1;\ncode_r0x00406d67:\n                    if (var_48h < 1) {\n                        dwBytes = 4;\n                        var_2ch = uVar7 + uVar9 * 0x10;\n                        var_58h = hMem + 0x644;\n                        goto code_r0x00406dab;\n                    }\n                    uVar9 = uVar9 * 2;\n                    var_10h = var_10h >> 1;\n                    var_44h = uVar9;\n                    if (var_10h <= var_ch) {\n                        var_ch = var_ch - var_10h;\n                        uVar9 = uVar9 | 1;\n                        var_44h = uVar9;\n                    }\n                } while (0xffffff < var_10h);\n            }\n            var_88h = 0xc;\n            goto code_r0x0040711e;\n        case 0x406dbf:\n            goto code_r0x00406dbf;\n        case 0x406e85:\n            goto code_r0x00406e85;\n        case 0x406ece:\n            if (dwBytes == 0) {\n                var_30h = 0;\n                iVar8 = var_4ch * 8 + 2;\ncode_r0x00406ee5:\n                var_58h = var_58h + iVar8;\n                dwBytes = 3;\n                goto code_r0x00406fc2;\n            }\n            var_84h = 0x13;\n            puVar11 = var_58h + 1;\n            break;\n        case 0x406f07:\n            goto code_r0x00406f07;\n        case 0x406f55:\n            goto code_r0x00406f55;\n        case 0x406f8b:\n            if (dwBytes == 0) {\n                var_30h = 8;\n                iVar8 = var_4ch * 8 + 0x82;\n                goto code_r0x00406ee5;\n            }\n            var_58h = var_58h + 0x102;\n            var_30h = 0x10;\n            dwBytes = 8;\ncode_r0x00406fc2:\n            var_7ch = 0x14;\n        case 0x406fc9:\ncode_r0x00406fc9:\n            var_50h = 1;\n            for (var_48h = dwBytes; 0 < var_48h; var_48h = var_48h - 1) {\n                puVar11 = var_58h + var_50h;\n                var_54h = puVar11;\n                uVar2 = *puVar11;\n                uVar9 = (var_10h >> 0xb) * uVar2;\n                if (var_ch < uVar9) {\n                    var_10h = uVar9;\n                    var_50h = var_50h << 1;\n                    *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_10h = var_10h - uVar9;\n                    var_ch = var_ch - uVar9;\n                    *puVar11 = uVar2 - (uVar2 >> 5);\n                    var_50h = var_50h * 2 + 1;\n                }\n                if (var_10h < 0x1000000) {\ncode_r0x00406fd8:\n                    if (var_6ch == 0) {\n                        var_88h = 0x18;\n                        goto code_r0x0040711e;\n                    }\n                    var_10h = var_10h << 8;\n                    uVar1 = *var_70h;\n                    var_6ch = var_6ch + -1;\n                    var_70h = var_70h + 1;\n                    var_ch = var_ch << 8 | uVar1;\n                }\n            }\n            uVar9 = var_50h - (1 << (dwBytes & 0x1f));\n            var_44h = uVar9;\n            var_88h = var_7ch;\n            goto code_r0x00406f80;\n        case 0x406fd8:\n            goto code_r0x00406fd8;\n        case 0x40707c:\n            var_30h = var_30h + uVar9;\n            var_88h = var_80h;\n            goto code_r0x00406f80;\n        }\n        var_54h = puVar11;\ncode_r0x00406f07:\n        uVar2 = *puVar11;\n        uVar7 = (var_10h >> 0xb) * uVar2;\n        bVar14 = uVar7 <= var_ch;\n        if (bVar14) {\n            var_10h = var_10h - uVar7;\n            var_ch = var_ch - uVar7;\n            dwBytes = 1;\n            *puVar11 = uVar2 - (uVar2 >> 5);\n        }\n        else {\n            var_10h = uVar7;\n            dwBytes = 0;\n            *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n        }\n        dwBytes = bVar14;\n        var_88h = var_84h;\n        if (var_10h < 0x1000000) {\ncode_r0x00406f55:\n            if (var_6ch == 0) {\n                var_88h = 5;\n                goto code_r0x0040711e;\n            }\n            var_10h = var_10h << 8;\n            uVar1 = *var_70h;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            var_ch = var_ch << 8 | uVar1;\n            var_88h = var_84h;\n        }\ncode_r0x00406f80:\n    } while( true );\ncode_r0x00406a0f:\n    if (uVar9 < 0x100) {\n        puVar11 = var_58h + uVar9;\n        uVar2 = *puVar11;\n        var_54h = puVar11;\n        uVar7 = (var_10h >> 0xb) * uVar2;\n        if (var_ch < uVar7) {\n            var_10h = uVar7;\n            uVar9 = uVar9 * 2;\n            *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n        }\n        else {\n            var_10h = var_10h - uVar7;\n            var_ch = var_ch - uVar7;\n            uVar9 = uVar9 * 2 + 1;\n            *puVar11 = uVar2 - (uVar2 >> 5);\n        }\n        var_44h = uVar9;\n        if (var_10h < 0x1000000) {\ncode_r0x004069ea:\n            if (var_6ch == 0) {\n                var_88h = 0xe;\n                goto code_r0x0040711e;\n            }\n            var_10h = var_10h << 8;\n            uVar1 = *var_70h;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            var_ch = var_ch << 8 | uVar1;\n        }\n        goto code_r0x00406a0f;\n    }\ncode_r0x00406a73:\n    var_34h = 0;\ncode_r0x00406a77:\n    var_5ch._0_1_ = var_44h;\ncode_r0x00406a7d:\n    if (var_64h == 0) {\n        var_88h = 0x1a;\ncode_r0x0040711e:\n        puVar12 = &var_88h;\n        for (iVar8 = 0x22; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *param_1 = *puVar12;\n            puVar12 = puVar12 + 1;\n            param_1 = param_1 + 1;\n        }\n        return 0;\n    }\n    var_60h = var_60h + 1;\n    var_68h = var_68h + 1;\n    var_64h = var_64h + -1;\n    *puVar4 = var_5ch;\n    *(var_14h + var_8h) = var_5ch;\ncode_r0x00406c43:\n    var_14h = (var_14h + 1) % var_74h;\ncode_r0x00406c46:\n    var_88h = 2;\n    goto code_r0x0040671c;\n}\n",
        "token_count": 6633
    },
    "00401434": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t ** __cdecl fcn.00401434(int32_t **hWndChildAfter)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t *arg_10h;\n    uint uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t **ppiVar14;\n    uint *puVar15;\n    int32_t **ppiVar16;\n    bool bVar17;\n    uint in_stack_fffffd7c;\n    uint in_stack_fffffd80;\n    uint uVar18;\n    uint uVar19;\n    char *pcVar20;\n    int32_t **ppiVar21;\n    uint lpFindFileData;\n    uint *puStack536;\n    uint *puStack532;\n    uint uStack524;\n    int32_t **ppiStack520;\n    int32_t **ppiStack516;\n    uint var_1ech;\n    uint var_d8h;\n    int32_t lpFileOp;\n    uint var_54h;\n    int32_t var_50h;\n    int32_t lpRect;\n    uint var_48h;\n    int32_t var_44h;\n    uint lpWideCharStr;\n    ushort uStack64;\n    int32_t *lpdwHandle;\n    int32_t lpMultiByteStr;\n    uint8_t var_2dh;\n    int32_t *var_2ch;\n    int32_t **var_28h;\n    int32_t **dwFileAttributes;\n    int32_t **var_20h;\n    int32_t **lpLastWriteTime;\n    int32_t **var_18h;\n    int32_t **var_14h;\n    int32_t **lpNumberOfBytesWritten;\n    int32_t **nNumberOfBytesToWrite;\n    int32_t lpValueName;\n    int32_t **var_4h;\n    \n    ppiVar8 = *0x40c014;\n    pcVar6 = _sym.imp.USER32.dll_ShowWindow;\n    ppiVar14 = hWndChildAfter;\n    ppiVar16 = &fcn.00401434::var_2ch;\n    for (iVar13 = 7; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *ppiVar16 = *ppiVar14;\n        ppiVar14 = ppiVar14 + 1;\n        ppiVar16 = ppiVar16 + 1;\n    }\n    lpValueName = *0x425b48;\n    iVar13 = var_28h * 0x400;\n    ppiVar14 = iVar13 + 0x426000;\n    ppiVar16 = dwFileAttributes * 0x400 + 0x426000;\n    *0x40c010 = &fcn.00401434::var_28h;\n    var_4h = NULL;\n    if (0x42 < var_2ch - 2U) goto code_r0x00402d0a;\n    // switch table (67 cases) at 0x402d1c\n    switch(*((var_2ch - 2U) * 4 + 0x402d1c)) {\n    case 0x40148f:\n        fcn.00406594(\"Jump: %d\", var_28h);\n        return var_28h;\n    case 0x4014a4:\n        uVar11 = fcn.00402e79(0);\n        fcn.00406594(\"Aborting: \\\"%s\\\"\", uVar11);\n        goto code_r0x004014bb;\n    case 0x4014c5:\n        *0x42530c = *0x42530c + 1;\n        if (*0x425b48 == 0) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        return 0x7fffffff;\n    case 0x4014e0:\n        iVar13 = fcn.0040136d(var_28h);\n        fcn.00406594(\"Call: %d\", iVar13 + -1);\n        ppiVar8 = fcn.00401389(iVar13 + -1, 0);\n        return ppiVar8;\n    case 0x401502:\n        uVar11 = fcn.00402e79(0);\n        fcn.00406594(\"detailprint: %s\", uVar11);\n        fcn.00405372(var_28h, 0);\n        break;\n    case 0x401523:\n        iVar13 = fcn.00402e5c(0);\n        fcn.00406594(\"Sleep(%d)\", iVar13);\n        if (iVar13 < 2) {\n            iVar13 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar13);\n        break;\n    case 0x40154c:\n        fcn.00406594(\"BringToFront\");\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(lpValueName);\n        break;\n    case 0x401565:\n        iVar13 = var_28h * 4;\n        if (var_20h == NULL) {\n            *(iVar13 + 0x425c00) = *(iVar13 + 0x425bc0);\n            uVar11 = fcn.00402e5c(1);\n            *(var_28h * 4 + 0x425bc0) = uVar11;\n        }\n        else {\n            *(iVar13 + 0x425bc0) = *(iVar13 + 0x425c00);\n        }\n        break;\n    case 0x4015a2:\n        puVar1 = var_20h * 4 + 0x425bc0;\n        uVar12 = *puVar1;\n        ppiVar8 = (&fcn.00401434::var_28h)[uVar12 == 0];\n        *puVar1 = uVar12 & lpLastWriteTime;\n        return ppiVar8;\n    case 0x4015c3:\n        goto code_r0x00402cb3;\n    case 0x4015d0:\n        if (*0x425310 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x425310, dwFileAttributes);\n        }\n        if (*0x425324 != 0) {\n            (*pcVar6)(*0x425324, var_28h);\n        }\n        break;\n    case 0x4015fc:\n        uVar11 = fcn.00402e79(0xfffffff0);\n        fcn.00406594(\"SetFileAttributes: \\\"%s\\\":%08X\", uVar11, dwFileAttributes);\n        iVar13 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(uVar11, dwFileAttributes);\n        if (iVar13 != 0) break;\n        var_4h = 0x1;\n        pcVar20 = \"SetFileAttributes failed.\";\n        goto code_r0x00401634;\n    case 0x40163e:\n        uVar11 = fcn.00402e79(0xfffffff0);\n        fcn.00406594(\"CreateDirectory: \\\"%s\\\" (%d)\", uVar11, dwFileAttributes);\n        puVar3 = fcn.00405c3a(uVar11);\n        if (puVar3 != NULL) {\n            do {\n                puVar3 = fcn.00405bcc(puVar3, 0x5c);\n                uVar2 = *puVar3;\n                *puVar3 = 0;\n                hWndChildAfter = hWndChildAfter & 0xffffff | uVar2 << 0x18;\n                iVar13 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(uVar11, 0);\n                if (iVar13 == 0) {\n                    iVar13 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    if (iVar13 == 0xb7) {\n                        uVar12 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(uVar11);\n                        if ((uVar12 & 0x10) == 0) {\n                            fcn.00406594(\"CreateDirectory: can\\'t create \\\"%s\\\" - a file already exists\", uVar11);\n                            var_4h = var_4h + 1;\n                        }\n                    }\n                    else {\n                        uVar9 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        fcn.00406594(\"CreateDirectory: can\\'t create \\\"%s\\\" (err=%d)\", uVar11, uVar9);\n                        var_4h = var_4h + 1;\n                    }\n                }\n                else {\n                    fcn.00406594(\"CreateDirectory: \\\"%s\\\" created\", uVar11);\n                }\n                *puVar3 = hWndChildAfter._3_1_;\n                puVar3 = puVar3 + 1;\n            } while (hWndChildAfter._3_1_ != 0);\n        }\n        if (dwFileAttributes != NULL) {\n            fcn.00401423(0xffffffe6);\n            fcn.00406111(0x42b800, uVar11);\n            iVar13 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(uVar11);\n            if (iVar13 == 0) {\n                uVar9 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.00406594(\"SetCurrentDirectory(%s) failed (%d)\", uVar11, uVar9);\n                var_4h = var_4h + 1;\n            }\n            break;\n        }\n        uVar11 = 0xfffffff5;\n        goto code_r0x00402448;\n    case 0x401724:\n        uVar11 = fcn.00402e79(0);\n        iVar13 = fcn.004065c2(uVar11);\n        if (iVar13 == 0) {\n            fcn.00406594(\"IfFileExists: file \\\"%s\\\" does not exist, jumping %d\", uVar11, var_20h);\n            return var_20h;\n        }\n        fcn.00406594(\"IfFileExists: file \\\"%s\\\" exists, jumping %d\", uVar11, dwFileAttributes);\n        return dwFileAttributes;\n    case 0x401765:\n        uVar9 = fcn.00402e79(0xffffffd0);\n        uVar18 = 0xffffffdf;\n        hWndChildAfter = fcn.00402e79(0xffffffdf);\n        uVar11 = fcn.00402e79(0x13);\n        fcn.00406594(\"Rename: %s\", uVar11);\n        iVar13 = (*_sym.imp.KERNEL32.dll_MoveFileA)(uVar9, hWndChildAfter);\n        if (iVar13 == 0) {\n            if ((var_20h == NULL) || (iVar13 = fcn.004065c2(uVar18, uVar9),  iVar13 == 0)) {\n                var_4h = 0x1;\n                pcVar20 = \"Rename failed: %s\";\n            }\n            else {\n                fcn.00405fc5(uVar9, hWndChildAfter);\n                fcn.00401423(0xffffffe4);\n                pcVar20 = \"Rename on reboot: %s\";\n                uVar11 = uVar18;\n            }\n            goto code_r0x004022b5;\n        }\n        uVar11 = 0xffffffe3;\n        goto code_r0x00402448;\n    case 0x4017df:\n        ppiVar8 = fcn.00402e79(0);\n        iVar13 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(ppiVar8, 0x400, ppiVar16, &fcn.00401434::hWndChildAfter);\n        if (iVar13 == 0) {\ncode_r0x0040181f:\n            var_4h = 0x1;\n            *ppiVar16 = 0;\n        }\n        else if ((ppiVar8 < hWndChildAfter) && (*hWndChildAfter != '\\0')) {\n            iVar13 = fcn.004065c2(ppiVar8);\n            if (iVar13 == 0) goto code_r0x0040181f;\n            fcn.00406111(hWndChildAfter, iVar13 + 0x2c);\n        }\n        if (var_20h == NULL) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(ppiVar16, ppiVar16, 0x400);\n        }\n        break;\n    case 0x401843:\n        uVar11 = fcn.00402e79(0xffffffff);\n        iVar13 = (*_sym.imp.KERNEL32.dll_SearchPathA)(0, uVar11, 0, 0x400, ppiVar14, &fcn.00401434::hWndChildAfter);\n        bVar17 = iVar13 == 0;\n        goto code_r0x0040185f;\n    case 0x40186a:\n        uVar11 = fcn.00402e79(0xffffffef);\n        iVar13 = fcn.00405dd1(ppiVar14, uVar11);\n        goto code_r0x0040187a;\n    case 0x401885:\n        iVar13 = fcn.00402e79(0x31);\n        hWndChildAfter = var_28h & 7;\n        lpValueName = iVar13;\n        fcn.00406594(\"File: overwriteflag=%d, allowskipfilesflag=%d, name=\\\"%s\\\"\", hWndChildAfter, var_28h >> 3 & 2, \n                     iVar13);\n        iVar10 = fcn.00405c0e(iVar13);\n        if (iVar10 == 0) {\n            uVar9 = 0x42b800;\n            uVar11 = fcn.00406111(0x40ac10, 0x42b800, iVar13);\n            uVar11 = fcn.00405ba1(uVar11);\n            sub.KERNEL32.dll_lstrcatA(uVar11);\n        }\n        else {\n            uVar9 = 0x40ac10;\n            fcn.00406111(0x40ac10);\n        }\n        fcn.0040637c(0x40ac10);\n        while( true ) {\n            if (2 < hWndChildAfter) {\n                iVar13 = fcn.004065c2(0x40ac10);\n                uVar12 = 0;\n                if (iVar13 != 0) {\n                    uVar12 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar13 + 0x14, &fcn.00401434::lpLastWriteTime);\n                }\n                hWndChildAfter = ((hWndChildAfter - 3U | 0x80000000) & uVar12) == 0;\n            }\n            if (hWndChildAfter == NULL) {\n                fcn.00405d7d(0x40ac10);\n            }\n            iVar13 = fcn.00405da2(0x40ac10, 0x40000000, (hWndChildAfter != 0x1) + '\\x01');\n            lpWideCharStr._0_2_ = iVar13;\n            lpWideCharStr._2_2_ = iVar13 >> 0x10;\n            if (iVar13 != -1) {\n                fcn.00405372(0xffffffea, lpValueName);\n                *0x425bf4 = *0x425bf4 + 1;\n                iVar13 = fcn.004032de(var_20h, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), 0, 0);\n                *0x425bf4 = *0x425bf4 + -1;\n                fcn.00406594(\"File: wrote %d to \\\"%s\\\"\", iVar13, 0x40ac10);\n                if ((lpLastWriteTime != 0xffffffff) || (var_18h != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)\n                              (CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), &fcn.00401434::lpLastWriteTime, 0, \n                               &fcn.00401434::lpLastWriteTime);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(CONCAT22(lpWideCharStr._2_2_, lpWideCharStr));\n                if (-1 < iVar13) goto code_r0x00402d0a;\n                if (iVar13 == -2) {\n                    uVar19 = 0xffffffe9;\n                    fcn.00406133(0x40ac10, 0xffffffe9);\n                    uVar18 = 0x40ac10;\n                    sub.KERNEL32.dll_lstrcatA(uVar9, lpValueName, 0x40ac10);\n                }\n                else {\n                    uVar19 = 0xffffffee;\n                    uVar18 = 0x40ac10;\n                    fcn.00406133(0x40ac10, 0xffffffee);\n                }\n                fcn.00406594(0x40a3bc, 0x40ac10);\n                uVar9 = 0x200010;\n                uVar11 = 0x40ac10;\n                goto code_r0x004024fd;\n            }\n            if (hWndChildAfter != NULL) {\n                fcn.00405372(0xffffffe2, lpValueName);\n                if (hWndChildAfter == 0x2) {\n                    var_4h = 0x1;\n                }\n                uVar11 = 0x40ac10;\n                pcVar20 = \"File: skipped: \\\"%s\\\" (overwriteflag=%d)\";\n                goto code_r0x004027cf;\n            }\n            fcn.00406594(\"File: error creating \\\"%s\\\"\", 0x40ac10);\n            fcn.00406111(0x40b410, 0x426000);\n            fcn.00406111(0x426000, 0x40ac10);\n            fcn.00406133(0x40b010, var_14h);\n            fcn.00406111(0x426000, 0x40b410);\n            iVar13 = fcn.004058d0();\n            if (iVar13 != 4) break;\n            fcn.00406594(\"File: error, user retry\");\n        }\n        if (iVar13 == 5) {\n            fcn.00406594(\"File: error, user cancel\");\n            *0x425bc8 = *0x425bc8 + 1;\n            return 0;\n        }\n        fcn.00406594(\"File: error, user abort\");\n        in_stack_fffffd80 = 0x40ac10;\n        in_stack_fffffd7c = 0xfffffffa;\ncode_r0x004014bb:\n        fcn.00405372(in_stack_fffffd7c, in_stack_fffffd80);\n        return 0x7fffffff;\n    case 0x401aa2:\n        uVar11 = fcn.00402e79(0);\n        pcVar20 = \"Delete: \\\"%s\\\"\";\n        goto code_r0x00401b06;\n    case 0x401ab2:\n        uVar11 = fcn.00402e79(0x31);\n        fcn.00406594(\"MessageBox: %d,\\\"%s\\\"\", var_28h, uVar11);\n        ppiVar8 = fcn.004058d0(uVar11, var_28h);\n        if (ppiVar8 != NULL) {\n            if (ppiVar8 == var_20h) {\n                return lpLastWriteTime;\n            }\n            if (ppiVar8 == var_18h) {\n                return var_14h;\n            }\n            break;\n        }\n        goto code_r0x00402a77;\n    case 0x401af7:\n        uVar11 = fcn.00402e79(0xfffffff0);\n        pcVar20 = \"RMDir: \\\"%s\\\"\";\ncode_r0x00401b06:\n        fcn.00406594(pcVar20, uVar11);\n        fcn.0040597c(uVar11, dwFileAttributes);\n        break;\n    case 0x401b1b:\n        uVar11 = fcn.00402e79(1);\n        sub.KERNEL32.dll_lstrlenA(uVar11);\n        goto code_r0x00402cb3;\n    case 0x401b2d:\n        hWndChildAfter = fcn.00402e5c(2);\n        iVar13 = fcn.00402e5c(3);\n        nNumberOfBytesToWrite = fcn.00402e79(1);\n        *ppiVar14 = 0;\n        if (((var_20h == NULL) || (hWndChildAfter != NULL)) &&\n           ((iVar10 = sub.KERNEL32.dll_lstrlenA(nNumberOfBytesToWrite),  -1 < iVar13 ||\n            (iVar13 = iVar13 + iVar10,  -1 < iVar13)))) {\n            if (iVar10 < iVar13) {\n                iVar13 = iVar10;\n            }\n            fcn.00406111(ppiVar14, nNumberOfBytesToWrite + iVar13);\n            iVar13 = hWndChildAfter;\n            if (hWndChildAfter != NULL) {\n                if (hWndChildAfter < 0) {\n                    iVar10 = sub.KERNEL32.dll_lstrlenA(ppiVar14);\n                    hWndChildAfter = iVar13 + iVar10;\n                    if (hWndChildAfter < 0) {\n                        hWndChildAfter = NULL;\n                    }\n                }\n                if (hWndChildAfter < 0x400) {\n                    *(hWndChildAfter + ppiVar14) = 0;\n                }\n            }\n        }\n        break;\n    case 0x401bae:\n        uVar11 = fcn.00402e79(0x20);\n        uVar9 = fcn.00402e79(0x31);\n        if (var_18h == NULL) {\n            iVar13 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n            dwFileAttributes = lpLastWriteTime;\n        }\n        else {\n            iVar13 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(uVar11, uVar9);\n            dwFileAttributes = lpLastWriteTime;\n        }\n        goto joined_r0x00401e8f;\n    case 0x401bdc:\n        hWndChildAfter = fcn.00402e79(1);\n        iVar10 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(hWndChildAfter, ppiVar14, 0x400);\n        if ((iVar10 == 0) ||\n           ((var_20h != NULL && (iVar10 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(hWndChildAfter, ppiVar14),  iVar10 == 0))))\n        {\n            var_4h = 0x1;\n            *ppiVar14 = 0;\n        }\n        *(iVar13 + 0x4263ff) = 0;\n        break;\n    case 0x401c1c:\n        uVar12 = fcn.00402e5c(0);\n        uVar4 = fcn.00402e5c(1);\n        if (var_14h != NULL) {\n            if (uVar12 < uVar4) {\n                return lpLastWriteTime;\n            }\n            if (uVar12 <= uVar4) {\n                return var_20h;\n            }\n            return var_18h;\n        }\n        if (uVar12 < uVar4) {\n            return lpLastWriteTime;\n        }\n        if (uVar12 <= uVar4) {\n            return var_20h;\n        }\n        return var_18h;\n    case 0x401c56:\n        fcn.00402e5c(1);\n        iVar13 = fcn.00402e5c(2);\n        if (0xc < lpLastWriteTime) goto code_r0x00402cb3;\n    // switch table (13 cases) at 0x402e28\n        switch(*(lpLastWriteTime * 4 + 0x402e28)) {\n        case 0x401c77:\n            break;\n        case 0x401c7b:\n            break;\n        case 0x401c7f:\n            break;\n        case 0x401c86:\n            goto joined_r0x00401cc1;\n        case 0x401c93:\n            break;\n        case 0x401c97:\n            break;\n        case 0x401c9b:\n            break;\n        case 0x401c9f:\n            break;\n        case 0x401ca8:\n            break;\n        case 0x401cb2:\n            break;\n        case 0x401cbf:\njoined_r0x00401cc1:\n            if (iVar13 == 0) {\n                var_4h = 0x1;\n            }\n            break;\n        case 0x401cd7:\n            break;\n        case 0x401cdb:\n        }\n        goto code_r0x00402cb3;\n    case 0x401ce3:\n        uVar11 = fcn.00402e79(1);\n        uVar9 = fcn.00402e5c(2);\n        (*_sym.imp.USER32.dll_wsprintfA)(ppiVar14, uVar11, uVar9);\n        break;\n    case 0x401d01:\n        ppiVar16 = var_20h;\n        if (var_20h != NULL) {\n            do {\n                ppiVar16 = ppiVar16 + -1;\n                if (ppiVar8 == NULL) goto code_r0x00401d1d;\n                ppiVar8 = *ppiVar8;\n            } while (ppiVar16 != NULL);\n            if (ppiVar8 == NULL) {\ncode_r0x00401d1d:\n                fcn.00406594(\"Exch: stack < %d elements\", var_20h);\n                goto code_r0x004024ef;\n            }\n            puVar15 = 0x40ac10;\n            fcn.00406111(0x40ac10, ppiVar8 + 1);\n            ppiVar14 = *0x40c014 + 1;\n            fcn.00406111(ppiVar8 + 1, ppiVar14);\n            goto code_r0x00402c31;\n        }\n        if (dwFileAttributes == NULL) {\n            ppiVar8 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x404);\n            fcn.00406133(ppiVar8 + 1, var_28h);\n            *ppiVar8 = *0x40c014;\n            *0x40c014 = ppiVar8;\n            break;\n        }\n        if (*0x40c014 != NULL) {\n            fcn.00406111(ppiVar14, *0x40c014 + 1);\n            *0x40c014 = *ppiVar8;\n            ppiVar21 = ppiVar14;\n            goto code_r0x00401d88;\n        }\n        fcn.00406594(\"Pop: stack empty\");\n        goto code_r0x00402a77;\n    case 0x401dc0:\n        uVar11 = fcn.00402e5c(3);\n        lpWideCharStr._0_2_ = uVar11;\n        lpWideCharStr._2_2_ = uVar11 >> 0x10;\n        hWndChildAfter = fcn.00402e5c(4);\n        if ((var_14h & 1) != 0) {\n            uVar11 = fcn.00402e79(0x33);\n            lpWideCharStr._0_2_ = uVar11;\n            lpWideCharStr._2_2_ = uVar11 >> 0x10;\n        }\n        if ((var_14h & 2) != 0) {\n            hWndChildAfter = fcn.00402e79(0x44);\n        }\n        if (var_2ch == 0x21) {\n            uVar11 = fcn.00402e5c();\n            uVar9 = fcn.00402e5c(2);\n            if (var_14h >> 2 == 0) {\n                lpValueName = (*_sym.imp.USER32.dll_SendMessageA)\n                                        (uVar11, uVar9, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), hWndChildAfter);\n                dwFileAttributes = var_28h;\n            }\n            else {\n                iVar13 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)\n                                   (uVar11, uVar9, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), hWndChildAfter, 0, \n                                    var_14h >> 2, &fcn.00401434::lpValueName);\n                var_4h = iVar13 == 0;\n                dwFileAttributes = var_28h;\n            }\n        }\n        else {\n            pcVar20 = fcn.00402e79(1);\n            pcVar5 = fcn.00402e79(0x12);\n            lpValueName = (*_sym.imp.USER32.dll_FindWindowExA)\n                                    (CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), hWndChildAfter, \n                                     -(*pcVar20 != '\\0') & pcVar20, -(*pcVar5 != '\\0') & pcVar5);\n            dwFileAttributes = var_28h;\n        }\n        goto joined_r0x00402a0a;\n    case 0x401e80:\n        uVar11 = fcn.00402e5c(0);\n        iVar13 = (*_sym.imp.USER32.dll_IsWindow)(uVar11);\njoined_r0x00401e8f:\n        if (iVar13 == 0) {\n            return var_20h;\n        }\n        return dwFileAttributes;\n    case 0x401e9d:\n        uVar11 = fcn.00402e5c(2);\n        uVar11 = fcn.00402e5c(1, uVar11);\n        (*_sym.imp.USER32.dll_GetDlgItem)(uVar11);\n        goto code_r0x00402cb3;\n    case 0x401eb8:\n        uVar11 = fcn.00402e5c(0, 0xffffffeb, *0x425b88 + dwFileAttributes);\n        (*_sym.imp.USER32.dll_SetWindowLongA)(uVar11);\n        break;\n    case 0x401ed4:\n        uVar11 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x425b48, dwFileAttributes);\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar11, &fcn.00401434::lpRect);\n        uVar9 = fcn.00402e79(0, 0, var_44h * var_20h, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr) * var_20h, 0x10);\n        uVar9 = (*_sym.imp.USER32.dll_LoadImageA)(0, uVar9);\n        iVar13 = (*_sym.imp.USER32.dll_SendMessageA)(uVar11, 0x172, 0, uVar9);\n        if (iVar13 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar13);\n        }\n        break;\n    case 0x401f2e:\n        uVar11 = (*_sym.imp.USER32.dll_GetDC)(*0x425b48);\n        uVar9 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar11, 0x5a, 0x48);\n        uVar9 = fcn.00402e5c(2, uVar9);\n        *0x40c018 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar9);\n        *0x40c018 = -*0x40c018;\n        (*_sym.imp.USER32.dll_ReleaseDC)(lpValueName, uVar11);\n        *0x40c028 = fcn.00402e5c(3);\n        *0x40c02c = var_18h & 1;\n        *0x40c02f = 1;\n        *0x40c02d = var_18h & 2;\n        *0x40c02e = var_18h & 4;\n        fcn.00406133(0x40c034, dwFileAttributes);\n        (*_sym.imp.GDI32.dll_CreateFontIndirectA)(0x40c018);\n        goto code_r0x00402cb3;\n    case 0x401fb4:\n        uVar11 = fcn.00402e5c(0);\n        uVar9 = fcn.00402e5c(1);\n        if (var_20h != NULL) {\n            fcn.00406594(\"HideWindow\");\n        }\n        if (lpLastWriteTime == NULL) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar11, uVar9);\n        }\n        break;\n    case 0x401ff2:\n        pcVar20 = fcn.00402e79(0);\n        uVar11 = fcn.00402e79(0x31);\n        pcVar5 = fcn.00402e79(0x22);\n        fcn.00402e79(0x15);\n        fcn.00401423(0xffffffec);\n        iVar13 = (*_sym.imp.SHELL32.dll_ShellExecuteA)\n                           (lpValueName, -(*pcVar20 != '\\0') & pcVar20, uVar11, -(*pcVar5 != '\\0') & pcVar5, 0x42b800, \n                            lpLastWriteTime);\n        if (0x20 < iVar13) {\n            fcn.00406594(\"ExecShell: success (\\\"%s\\\": file:\\\"%s\\\" params:\\\"%s\\\")\", pcVar20, uVar11, pcVar5);\n            break;\n        }\n        fcn.00406594(\"ExecShell: warning: error (\\\"%s\\\": file:\\\"%s\\\" params:\\\"%s\\\")=%d\", pcVar20, uVar11, pcVar5, iVar13\n                    );\n        goto code_r0x00402a77;\n    case 0x40206e:\n        uVar9 = fcn.00402e79(0);\n        fcn.00406594(\"Exec: command=\\\"%s\\\"\", uVar9);\n        pcVar20 = 0xffffffeb;\n        uVar11 = uVar9;\n        fcn.00405372(0xffffffeb, uVar9);\n        hWndChildAfter = fcn.0040586f(uVar9);\n        if (hWndChildAfter != NULL) {\n            fcn.00406594(\"Exec: success (\\\"%s\\\")\", uVar9);\n            pcVar6 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n            ppiVar8 = hWndChildAfter;\n            if (var_20h != NULL) {\n                while (iVar13 = (*pcVar6)(hWndChildAfter, 100),  iVar13 == 0x102) {\n                    fcn.00406622(0xf);\n                }\n                (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hWndChildAfter, &fcn.00401434::lpNumberOfBytesWritten);\n                if (dwFileAttributes < 0) {\n                    ppiVar8 = hWndChildAfter;\n                    if (lpNumberOfBytesWritten != NULL) {\n                        var_4h = 0x1;\n                    }\n                }\n                else {\n                    fcn.0040606f(pcVar20, lpNumberOfBytesWritten, ppiVar16);\n                    ppiVar8 = hWndChildAfter;\n                }\n            }\n            goto code_r0x004020f3;\n        }\n        var_4h = 0x1;\n        goto code_r0x004022b5;\n    case 0x40210f:\n        uVar11 = fcn.00402e79(2);\n        hWndChildAfter = fcn.004065c2(uVar11);\n        if (hWndChildAfter == NULL) {\n            *ppiVar14 = 0;\n            *ppiVar16 = 0;\n            goto code_r0x00402a77;\n        }\n        fcn.0040606f(ppiVar16, hWndChildAfter[5]);\n        goto code_r0x00402cb3;\n    case 0x40213f:\n        nNumberOfBytesToWrite = fcn.00402e79(0xffffffee);\n        lpNumberOfBytesWritten =\n             sub.VERSION.dll_GetFileVersionInfoSizeA(nNumberOfBytesToWrite, &fcn.00401434::lpdwHandle);\n        *ppiVar14 = 0;\n        *ppiVar16 = 0;\n        var_4h = 0x1;\n        if ((lpNumberOfBytesWritten == NULL) ||\n           (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, lpNumberOfBytesWritten),  hWndChildAfter == NULL\n           )) break;\n        ppiStack520 = lpNumberOfBytesWritten;\n        uStack524 = 0;\n        puStack532 = 0x40218a;\n        ppiVar21 = nNumberOfBytesToWrite;\n        ppiStack516 = hWndChildAfter;\n        iVar13 = sub.VERSION.dll_GetFileVersionInfoA();\n        ppiVar8 = hWndChildAfter;\n        if (iVar13 != 0) {\n            puStack532 = &fcn.00401434::nNumberOfBytesToWrite;\n            puStack536 = &fcn.00401434::lpWideCharStr;\n            lpFindFileData = 0x40a28c;\n            ppiVar21 = hWndChildAfter;\n            iVar13 = sub.VERSION.dll_VerQueryValueA();\n            ppiVar8 = hWndChildAfter;\n            if (iVar13 != 0) {\n                fcn.0040606f(ppiVar14, *(CONCAT22(lpWideCharStr._2_2_, lpWideCharStr) + 8));\n                fcn.0040606f(ppiVar16, *(CONCAT22(lpWideCharStr._2_2_, lpWideCharStr) + 0xc));\n                var_4h = NULL;\n                ppiVar8 = hWndChildAfter;\n                ppiVar21 = ppiVar16;\n            }\n        }\ncode_r0x00401d88:\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar8, ppiVar21);\n        break;\n    case 0x4021ca:\n        var_4h = 0x1;\n        if (-1 < *0x425bf8) {\n            uVar11 = fcn.00402e79(0xfffffff0);\n            uVar9 = fcn.00402e79(1);\n            lpWideCharStr._0_2_ = uVar9;\n            lpWideCharStr._2_2_ = uVar9 >> 0x10;\n            if (((var_18h != NULL) &&\n                (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar11),  hWndChildAfter != NULL)) ||\n               (hWndChildAfter = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(uVar11, 0, 8),  hWndChildAfter != NULL)) {\n                pcVar6 = sub.KERNEL32.dll_GetProcAddress(hWndChildAfter, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr));\n                if (pcVar6 == NULL) {\n                    fcn.00405372(0xfffffff7, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr));\n                    fcn.00406594(\"Error registering DLL: %s not found in %s\", \n                                 CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), uVar11);\n                }\n                else {\n                    var_4h = NULL;\n                    if (var_20h == NULL) {\n                        (*pcVar6)(lpValueName, 0x400, 0x426000, 0x40c014, 0x40a000);\n                    }\n                    else {\n                        fcn.00401423(var_20h);\n                        iVar13 = (*pcVar6)();\n                        if (iVar13 != 0) {\n                            var_4h = 0x1;\n                        }\n                    }\n                }\n                if ((lpLastWriteTime == NULL) && (iVar13 = fcn.00403a11(hWndChildAfter),  iVar13 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(hWndChildAfter);\n                }\n                break;\n            }\n            fcn.00401423(0xfffffff6);\n            pcVar20 = \"Error registering DLL: Could not load %s\";\n            goto code_r0x004022b5;\n        }\n        fcn.00401423(0xffffffe7);\n        pcVar20 = \"Error registering DLL: Could not initialize OLE\";\ncode_r0x00401634:\n        fcn.00406594(pcVar20);\n        break;\n    case 0x4022d2:\n        lpMultiByteStr = fcn.00402e79(0xfffffff0);\n        uVar11 = fcn.00402e79(0xffffffdf);\n        lpWideCharStr._0_2_ = uVar11;\n        lpWideCharStr._2_2_ = uVar11 >> 0x10;\n        lpNumberOfBytesWritten = fcn.00402e79(2);\n        pcVar20 = fcn.00402e79(0xffffffcd);\n        lpdwHandle = fcn.00402e79(0x45);\n        iVar13 = fcn.00405c0e(CONCAT22(lpWideCharStr._2_2_, lpWideCharStr));\n        if (iVar13 == 0) {\n            fcn.00402e79(0x21);\n        }\n        fcn.00406594(\"CreateShortcut: out: \\\"%s\\\", in: \\\"%s %s\\\", icon: %s,%d, sw=%d, hk=%d\", lpMultiByteStr, \n                     CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), lpNumberOfBytesWritten, pcVar20, var_18h & 0xff, \n                     var_18h >> 8 & 0xff, var_18h >> 0x10);\n        iVar13 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x408390, 0, 1, 0x408380, &fcn.00401434::hWndChildAfter);\n        if (-1 < iVar13) {\n            lpValueName = (***hWndChildAfter)(hWndChildAfter, 0x4083a0, &fcn.00401434::nNumberOfBytesToWrite);\n            if (-1 < lpValueName) {\n                lpValueName = (*(*hWndChildAfter)[0x14])(hWndChildAfter, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr));\n                if ((var_18h & 0x8000) == 0) {\n                    (*(*hWndChildAfter)[9])(hWndChildAfter, 0x42b800);\n                }\n                uVar12 = var_18h >> 8 & 0x7f;\n                if (uVar12 != 0) {\n                    (*(*hWndChildAfter)[0xf])(hWndChildAfter, uVar12);\n                }\n                (*(*hWndChildAfter)[0xd])(hWndChildAfter, var_18h >> 0x10);\n                if (*pcVar20 != '\\0') {\n                    (*(*hWndChildAfter)[0x11])(hWndChildAfter, pcVar20, var_18h & 0xff);\n                }\n                (*(*hWndChildAfter)[0xb])(hWndChildAfter, lpNumberOfBytesWritten);\n                (*(*hWndChildAfter)[7])(hWndChildAfter, lpdwHandle);\n                if (-1 < lpValueName) {\n                    lpValueName = -0x7fffbffb;\n                    iVar13 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                       (0, 0, lpMultiByteStr, 0xffffffff, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), \n                                        0x400);\n                    if (iVar13 != 0) {\n                        lpValueName = (*(*nNumberOfBytesToWrite)[6])\n                                                (nNumberOfBytesToWrite, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), 1)\n                        ;\n                    }\n                }\n                (*(*nNumberOfBytesToWrite)[2])(nNumberOfBytesToWrite);\n            }\n            (*(*hWndChildAfter)[2])(hWndChildAfter);\n            if (-1 < lpValueName) {\n                uVar11 = 0xfffffff4;\n                goto code_r0x00402448;\n            }\n        }\n        var_4h = 0x1;\n        uVar11 = 0xfffffff0;\n        goto code_r0x00402448;\n    case 0x402456:\n        iVar13 = fcn.00402e79(0);\n        iVar10 = fcn.00402e79(0x11);\n        hWndChildAfter = fcn.00402e79(0x23);\n        fcn.00406594(\"CopyFiles \\\"%s\\\"->\\\"%s\\\"\", iVar13, iVar10);\n        iVar7 = fcn.004065c2(iVar13);\n        if (iVar7 != 0) {\n            lpFileOp = lpValueName;\n            var_54h = 2;\n            iVar7 = sub.KERNEL32.dll_lstrlenA(iVar13);\n            *(iVar7 + 1 + iVar13) = 0;\n            iVar7 = sub.KERNEL32.dll_lstrlenA(iVar10);\n            *(iVar7 + 1 + iVar10) = 0;\n            lpWideCharStr._2_2_ = SUB42(hWndChildAfter, 0);\n            uStack64 = hWndChildAfter >> 0x10;\n            var_48h._0_2_ = var_20h._0_2_;\n            var_50h = iVar13;\n            lpRect = iVar10;\n            fcn.00405372(0, hWndChildAfter);\n            iVar13 = (*_sym.imp.SHELL32.dll_SHFileOperationA)(&fcn.00401434::lpFileOp);\n            if (iVar13 == 0) break;\n        }\n        fcn.00405372(0xfffffff9, 0);\n        goto code_r0x00402a77;\n    case 0x4024e7:\n        if (var_28h != 0xbadf00d) {\ncode_r0x004024ef:\n            uVar19 = 0x200010;\n            uVar18 = 0xffffffe8;\n            uVar9 = 0;\n            uVar11 = fcn.00406133(0, 0xffffffe8);\ncode_r0x004024fd:\n            fcn.004058d0(uVar11, uVar9, uVar18, uVar19);\n            return 0x7fffffff;\n        }\n        *0x425bd4 = *0x425bd4 + 1;\n        break;\n    case 0x402517:\n        lpMultiByteStr = 0;\n        nNumberOfBytesToWrite = NULL;\n        hWndChildAfter = NULL;\n        fcn.00406111(0x40b010, \"<RM>\");\n        fcn.00406111(0x40b410, 0x40b010);\n        if (var_28h != NULL) {\n            lpMultiByteStr = fcn.00402e79(0);\n        }\n        if (dwFileAttributes != NULL) {\n            nNumberOfBytesToWrite = fcn.00402e79(0x11);\n        }\n        if (var_18h != NULL) {\n            hWndChildAfter = fcn.00402e79(0x22);\n        }\n        uVar11 = fcn.00402e79(0xffffffcd);\n        fcn.00406594(\"WriteINIStr: wrote [%s] %s=%s in %s\", 0x40ac10, 0x40b010, 0x40b410, uVar11);\n        iVar13 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)\n                           (lpMultiByteStr, nNumberOfBytesToWrite, hWndChildAfter, uVar11);\n        goto code_r0x0040187a;\n    case 0x40259b:\n        hWndChildAfter = hWndChildAfter & 0xffff | *0x40a178 << 0x10;\n        uVar11 = fcn.00402e79(1);\n        lpdwHandle = fcn.00402e79(0x12);\n        uVar9 = fcn.00402e79(0xffffffdd);\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                  (uVar11, lpdwHandle, &fcn.00401434::hWndChildAfter + 2, ppiVar14, 0x3ff, uVar9);\n        bVar17 = *ppiVar14 == '\\n';\ncode_r0x0040185f:\n        if (bVar17) {\ncode_r0x00402a4b:\n            var_4h = 0x1;\n            *ppiVar14 = 0;\n        }\n        break;\n    case 0x4025dc:\n        hWndChildAfter = fcn.004064b2(dwFileAttributes);\n        if (var_18h == NULL) {\n            iVar13 = fcn.00402f83(2);\n            if (iVar13 == 0) goto code_r0x00402a77;\n            uVar11 = fcn.00402e79(0x33);\n            nNumberOfBytesToWrite = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar13, uVar11);\n            fcn.00406594(\"DeleteRegValue: \\\"%s\\\\%s\\\" \\\"%s\\\"\", hWndChildAfter, 0x40b410, uVar11);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar13);\n        }\n        else {\n            uVar11 = fcn.00402e79(0x22);\n            fcn.00406594(\"DeleteRegKey: \\\"%s\\\\%s\\\"\", hWndChildAfter, uVar11);\n            uVar9 = fcn.00402f6e(dwFileAttributes, uVar11, var_18h & 2);\n            nNumberOfBytesToWrite = fcn.00402eb9(uVar9, dwFileAttributes, uVar11);\n        }\n        if (nNumberOfBytesToWrite == NULL) break;\n        goto code_r0x00402a77;\n    case 0x402670:\n        uVar11 = fcn.00402f6e(var_28h);\n        lpNumberOfBytesWritten = var_18h;\n        nNumberOfBytesToWrite = var_14h;\n        lpValueName = fcn.00402e79(2);\n        hWndChildAfter = fcn.00402e79(0x11);\n        uVar9 = fcn.004064b2(uVar11);\n        lpWideCharStr._0_2_ = uVar9;\n        lpWideCharStr._2_2_ = uVar9 >> 0x10;\n        var_4h = 0x1;\n        iVar13 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                           (uVar11, hWndChildAfter, 0, 0, 0, *0x425bf0 | 2, 0, &fcn.00401434::lpMultiByteStr, 0);\n        if (iVar13 != 0) {\n            uVar11 = CONCAT22(lpWideCharStr._2_2_, lpWideCharStr);\n            pcVar20 = \"WriteReg: error creating key \\\"%s\\\\%s\\\"\";\ncode_r0x004027cf:\n            fcn.00406594(pcVar20, uVar11, hWndChildAfter);\n            break;\n        }\n        iVar13 = 0;\n        if (lpNumberOfBytesWritten == 0x1) {\n            fcn.00402e79(0x23);\n            iVar13 = sub.KERNEL32.dll_lstrlenA(0x40b410);\n            iVar13 = iVar13 + 1;\n            if (nNumberOfBytesToWrite != 0x1) {\n                fcn.00406594(\"WriteRegExpandStr: \\\"%s\\\\%s\\\" \\\"%s\\\"=\\\"%s\\\"\", CONCAT22(lpWideCharStr._2_2_, lpWideCharStr)\n                             , hWndChildAfter, lpValueName, 0x40b410);\n                goto code_r0x00402718;\n            }\n            fcn.00406594(\"WriteRegStr: \\\"%s\\\\%s\\\" \\\"%s\\\"=\\\"%s\\\"\", CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), \n                         hWndChildAfter, lpValueName, 0x40b410);\n        }\n        else {\ncode_r0x00402718:\n            if (lpNumberOfBytesWritten == 0x4) {\n                *0x40b410 = fcn.00402e5c(3);\n                iVar13 = 4;\n                fcn.00406594(\"WriteRegDWORD: \\\"%s\\\\%s\\\" \\\"%s\\\"=\\\"0x%08x\\\"\", CONCAT22(lpWideCharStr._2_2_, lpWideCharStr)\n                             , hWndChildAfter, lpValueName, *0x40b410);\n            }\n            if (lpNumberOfBytesWritten == 0x3) {\n                iVar13 = fcn.004032de(lpLastWriteTime, 0, 0x40b410, 0xc00);\n                fcn.00406516(&fcn.00401434::var_d8h, 0x80, 0x40b410, iVar13);\n                fcn.00406594(\"WriteRegBin: \\\"%s\\\\%s\\\" \\\"%s\\\"=\\\"%s\\\"\", CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), \n                             hWndChildAfter, lpValueName, &fcn.00401434::var_d8h);\n            }\n        }\n        iVar13 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)\n                           (lpMultiByteStr, lpValueName, 0, nNumberOfBytesToWrite, 0x40b410, iVar13);\n        if (iVar13 == 0) {\n            var_4h = NULL;\n        }\n        else {\n            fcn.00406594(\"WriteReg: error writing into \\\"%s\\\\%s\\\" \\\"%s\\\"\", CONCAT22(lpWideCharStr._2_2_, lpWideCharStr)\n                         , hWndChildAfter, lpValueName);\n        }\ncode_r0x004028a4:\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(lpMultiByteStr);\n        break;\n    case 0x4027dc:\n        lpMultiByteStr = fcn.00402f83(0x20019);\n        uVar11 = fcn.00402e79(0x33);\n        *ppiVar14 = 0;\n        if (lpMultiByteStr != 0) {\n            lpdwHandle = 0x400;\n            iVar10 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)\n                               (lpMultiByteStr, uVar11, 0, &fcn.00401434::hWndChildAfter, ppiVar14, \n                                &fcn.00401434::lpdwHandle);\n            if (iVar10 == 0) {\n                if (hWndChildAfter == 0x4) {\n                    var_4h = var_18h == NULL;\n                    fcn.0040606f();\n                    goto code_r0x004028a4;\n                }\n                if ((hWndChildAfter == 0x1) || (hWndChildAfter == 0x2)) {\n                    var_4h = var_18h;\n                    goto code_r0x0040289d;\n                }\n            }\n            *ppiVar14 = 0;\n            var_4h = 0x1;\n            goto code_r0x004028a4;\n        }\n        goto code_r0x00402a77;\n    case 0x40284e:\n        lpMultiByteStr = fcn.00402f83(0x20019);\n        uVar11 = fcn.00402e5c(3);\n        *ppiVar14 = 0;\n        if (lpMultiByteStr != 0) {\n            hWndChildAfter = 0x3ff;\n            if (var_18h == NULL) {\n                iVar10 = (*_sym.imp.ADVAPI32.dll_RegEnumValueA)\n                                   (lpMultiByteStr, uVar11, ppiVar14, &fcn.00401434::hWndChildAfter, 0, 0, 0, 0);\n                if (iVar10 != 0) goto code_r0x00402a77;\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(lpMultiByteStr, uVar11, ppiVar14, 0x3ff);\n            }\ncode_r0x0040289d:\n            *(iVar13 + 0x4263ff) = 0;\n            goto code_r0x004028a4;\n        }\n        goto code_r0x00402a77;\n    case 0x4028af:\n        if (*ppiVar14 == '\\0') break;\n        ppiVar8 = fcn.00406088(ppiVar14);\ncode_r0x004020f3:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(ppiVar8);\n        break;\n    case 0x4028c3:\n        uVar11 = fcn.00402e79(0xffffffed);\n        iVar13 = fcn.00405da2(uVar11, dwFileAttributes, var_20h);\n        if (iVar13 == -1) {\ncode_r0x00402a75:\n            *ppiVar14 = 0;\n            goto code_r0x00402a77;\n        }\n        goto code_r0x00402cb3;\n    case 0x4028e5:\n        if (var_20h == NULL) {\n            uVar11 = fcn.00402e79(0x11);\n            uVar11 = sub.KERNEL32.dll_lstrlenA(uVar11);\n        }\n        else {\n            *0x40b010 = fcn.00402e5c(1);\n            uVar11 = 1;\n        }\n        if (*ppiVar14 != '\\0') {\n            puVar15 = &fcn.00401434::hWndChildAfter;\n            uVar19 = 0;\n            uVar18 = 0x40b010;\n            uVar9 = fcn.00406088(ppiVar14);\n            iVar13 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar9, ppiVar14, uVar18, uVar11, puVar15, uVar19);\n            goto code_r0x0040187a;\n        }\n        goto code_r0x00402a77;\n    case 0x40292d:\n        lpMultiByteStr = 0;\n        iVar13 = fcn.00402e5c(2);\n        lpWideCharStr._0_2_ = iVar13;\n        lpWideCharStr._2_2_ = iVar13 >> 0x10;\n        if (iVar13 < 1) break;\n        if (0x3ff < iVar13) {\n            lpWideCharStr._0_2_ = 0x3ff;\n            lpWideCharStr._2_2_ = 0;\n        }\n        iVar13 = lpMultiByteStr;\n        if (*ppiVar14 != '\\0') {\n            hWndChildAfter = hWndChildAfter & 0xffffff;\n            nNumberOfBytesToWrite = fcn.00406088(ppiVar14);\n            iVar13 = lpMultiByteStr;\n            if (0 < CONCAT22(lpWideCharStr._2_2_, lpWideCharStr)) {\n                while (iVar10 = fcn.00405e1a(nNumberOfBytesToWrite, &stack0xffffffcf, 1),  iVar10 != 0) {\n                    if (lpLastWriteTime != NULL) {\n                        fcn.0040606f(ppiVar16, var_2dh);\n                        return 0;\n                    }\n                    if ((hWndChildAfter._3_1_ == 0xd) || (hWndChildAfter._3_1_ == 10)) {\n                        if ((hWndChildAfter._3_1_ == var_2dh) || ((var_2dh != 0xd && (var_2dh != 10)))) {\n                            (*_sym.imp.KERNEL32.dll_SetFilePointer)(nNumberOfBytesToWrite, 0xffffffff, 0, 1);\n                        }\n                        else {\n                            *(iVar13 + ppiVar16) = var_2dh;\n                            iVar13 = iVar13 + 1;\n                        }\n                        break;\n                    }\n                    *(iVar13 + ppiVar16) = var_2dh;\n                    iVar13 = iVar13 + 1;\n                    hWndChildAfter = hWndChildAfter & 0xffffff | var_2dh << 0x18;\n                    if ((var_2dh == 0) || (CONCAT22(lpWideCharStr._2_2_, lpWideCharStr) <= iVar13)) break;\n                }\n            }\n        }\n        *(iVar13 + ppiVar16) = 0;\ncode_r0x0040187a:\n        if (iVar13 != 0) break;\ncode_r0x00402a77:\n        var_4h = 0x1;\n        break;\n    case 0x4029e6:\n        if (*ppiVar14 == '\\0') break;\n        uVar11 = fcn.00402e5c(2, 0, lpLastWriteTime);\n        uVar9 = fcn.00406088(ppiVar14);\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar9, ppiVar14, uVar11);\n        ppiVar14 = ppiVar16;\njoined_r0x00402a0a:\n        if (dwFileAttributes < 0) break;\n        goto code_r0x00402cb3;\n    case 0x402a15:\n        if (*ppiVar14 != '\\0') {\n            uVar11 = fcn.00406088(ppiVar14);\n            (*_sym.imp.KERNEL32.dll_FindClose)(uVar11);\n        }\n        break;\n    case 0x402a2f:\n        if (*ppiVar16 != '\\0') {\n            puVar15 = &fcn.00401434::lpFindFileData;\n            uVar11 = fcn.00406088(ppiVar16);\n            iVar13 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(uVar11, ppiVar16, puVar15);\n            if (iVar13 != 0) goto code_r0x00402a8a;\n        }\n        goto code_r0x00402a4b;\n    case 0x402a59:\n        uVar11 = fcn.00402e79(2);\n        iVar13 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(uVar11, &fcn.00401434::lpFindFileData);\n        if (iVar13 == -1) {\n            *ppiVar16 = 0;\n            goto code_r0x00402a75;\n        }\n        fcn.0040606f(ppiVar16, iVar13);\ncode_r0x00402a8a:\n        puVar15 = &fcn.00401434::var_1ech;\ncode_r0x00402c31:\n        fcn.00406111(ppiVar14, puVar15);\n        break;\n    case 0x402a97:\n        lpNumberOfBytesWritten = 0xfffffd66;\n        iVar13 = fcn.00402e79(0xfffffff0);\n        lpMultiByteStr = iVar13;\n        iVar10 = fcn.00405c0e(iVar13);\n        if (iVar10 == 0) {\n            fcn.00402e79(0xffffffed);\n        }\n        fcn.00405d7d(iVar13);\n        hWndChildAfter = fcn.00405da2(iVar13, 0x40000000, 2);\n        pcVar6 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        if (hWndChildAfter != 0xffffffff) {\n            nNumberOfBytesToWrite = *0x425b54;\n            iVar13 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x425b54);\n            if (iVar13 != 0) {\n                fcn.004034e7(0);\n                fcn.004034d1(iVar13, nNumberOfBytesToWrite);\n                arg_10h = (*pcVar6)(0x40, var_20h);\n                lpdwHandle = arg_10h;\n                if (arg_10h != NULL) {\n                    fcn.004032de(dwFileAttributes, 0, arg_10h, var_20h);\n                    for (; *arg_10h != '\\0'; arg_10h = arg_10h + var_44h + 8) {\n                        var_44h = *arg_10h;\n                        dwFileAttributes = arg_10h[1] + iVar13;\n                        fcn.00405d5d();\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(lpdwHandle, dwFileAttributes);\n                }\n                (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (hWndChildAfter, iVar13, nNumberOfBytesToWrite, &fcn.00401434::lpNumberOfBytesWritten, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar13);\n                lpNumberOfBytesWritten = fcn.004032de(0xffffffff, hWndChildAfter, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hWndChildAfter);\n        }\n        fcn.00406594(\"created uninstaller: %d, \\\"%s\\\"\", lpNumberOfBytesWritten, lpMultiByteStr);\n        uVar11 = 0xfffffff3;\n        if (lpNumberOfBytesWritten < 0) {\n            uVar11 = 0xffffffef;\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpMultiByteStr);\n            var_4h = 0x1;\n        }\ncode_r0x00402448:\n        fcn.00401423(uVar11);\n        break;\n    case 0x402bab:\n        if (var_28h != NULL) {\n            fcn.00406594(\"settings logging to %d\", dwFileAttributes);\n            *0x4242c0 = dwFileAttributes;\n            fcn.00406594(\"logging set to %d\", dwFileAttributes);\n            if (dwFileAttributes == NULL) {\n                fcn.00406415(1);\n            }\n            else {\n                fcn.00403a71();\n            }\n            break;\n        }\n        uVar11 = fcn.00402e79(1);\n        pcVar20 = 0x40a3bc;\ncode_r0x004022b5:\n        fcn.00406594(pcVar20, uVar11);\n        break;\n    case 0x402bfd:\n        hWndChildAfter = fcn.00402e5c(0);\n        if (*0x425b6c <= hWndChildAfter) goto code_r0x00402a77;\n        iVar13 = hWndChildAfter * 0x418 + *0x425b68;\n        if (var_20h < 0) {\n            var_20h = -1 - var_20h;\n            if (var_20h == NULL) {\n                fcn.00406133(iVar13 + 0x18, var_18h);\n                *(iVar13 + 9) = *(iVar13 + 9) | 1;\n            }\n            else {\n                dwFileAttributes = fcn.00402e5c(1);\n            }\n            *(iVar13 + var_20h * 4) = dwFileAttributes;\n            if (lpLastWriteTime != NULL) {\n                fcn.0040117d(hWndChildAfter);\n            }\n            break;\n        }\n        ppiVar14 = ppiVar16;\n        if (var_20h == NULL) {\n            puVar15 = iVar13 + 0x18;\n            goto code_r0x00402c31;\n        }\n        goto code_r0x00402cb3;\n    case 0x402c83:\n        uVar12 = fcn.00402e5c(0);\n        if (0x1f < uVar12) goto code_r0x00402a77;\n        if (lpLastWriteTime == NULL) {\n            if (var_20h == NULL) {\n                fcn.00406133(ppiVar16, *(*0x425b50 + 0x94 + uVar12 * 4));\n            }\n            else {\n                *(*0x425b50 + 0x94 + uVar12 * 4) = dwFileAttributes;\n            }\n            break;\n        }\n        if (var_20h != NULL) {\n            fcn.00401299(uVar12);\n            fcn.004011ef(0, 0);\n            break;\n        }\n        fcn.004012e2(0);\n        ppiVar14 = ppiVar16;\ncode_r0x00402cb3:\n        fcn.0040606f(ppiVar14);\n        break;\n    case 0x402ce6:\n        (*_sym.imp.USER32.dll_SendMessageA)(*0x425b48, 0xb, *0x422530 & var_28h, 0);\n        if (var_28h != NULL) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(lpValueName, 0, 0);\n        }\n    }\ncode_r0x00402d0a:\n    *0x425bc8 = *0x425bc8 + var_4h;\n    return NULL;\n}\n",
        "token_count": 15536
    },
    "004030a5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.004030a5(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t dwBytes;\n    int32_t var_10h;\n    uint *hFile;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = NULL;\n    var_4h = 0;\n    *0x425b4c = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x425b4c = *0x425b4c + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x42cc00, 0x400);\n    puVar1 = fcn.00405da2(0x42cc00, 0x80000000, 3);\n    if (puVar1 == 0xffffffff) {\n        *0x40a694 = puVar1;\n        return \"Error launching installer\";\n    }\n    *0x40a694 = puVar1;\n    hFile = puVar1;\n    fcn.00406111(0x42bc00, 0x42cc00);\n    uVar2 = fcn.00405be8(0x42bc00);\n    fcn.00406111(0x42d000, uVar2);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(puVar1, 0);\n    *0x4200f0 = uVar3;\n    for (; 0 < uVar3; uVar3 = uVar3 - uVar8) {\n        uVar4 = (-(*0x425b54 != 0) & 0x7e00) + 0x200;\n        uVar8 = uVar3;\n        if (uVar4 <= uVar3) {\n            uVar8 = uVar4;\n        }\n        puVar1 = 0x4180f0;\n        iVar5 = fcn.004034d1();\n        if (iVar5 == 0) {\n            fcn.00403041(1);\n            goto code_r0x0040327d;\n        }\n        if (*0x425b54 == 0) {\n            puVar1 = &var_28h;\n            fcn.00405d5d();\n            if (((((var_28h & 0xfffffff0) == 0) && (var_24h == -0x21524111)) && (var_18h == 0x74736e49)) &&\n               ((var_1ch == 0x74666f73 && (var_20h == 0x6c6c754e)))) {\n                arg_8h = arg_8h | var_28h;\n                *0x425be0 = *0x425be0 | arg_8h & 2;\n                *0x425b54 = *0x40c0e0;\n                if (uVar3 < var_10h) goto code_r0x0040327d;\n                if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                var_4h = var_4h + 1;\n                uVar3 = var_10h - 4;\n                if (uVar3 < uVar8) {\n                    uVar8 = uVar3;\n                }\n            }\n        }\n        else if ((arg_8h & 2) == 0) {\n            fcn.00403041(0);\n        }\n        if (uVar3 < *0x4200f0) {\n            puVar6 = fcn.0040665b();\n            puVar1 = var_8h;\n            var_8h = puVar6;\n        }\n        *0x40c0e0 = *0x40c0e0 + uVar8;\n    }\n    fcn.00403041(1, puVar1);\n    if (*0x425b54 != 0) {\n        if (var_4h != 0) {\n            fcn.004034e7(*0x40c0e0);\n            iVar5 = fcn.004034d1(&arg_8h, 4);\n            if ((iVar5 == 0) || (var_8h != arg_8h)) goto code_r0x0040327d;\n        }\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        fcn.004034e7(*0x425b54 + 0x1c);\n        iVar5 = fcn.004032de(0xffffffff, 0, puVar1, dwBytes);\n        if (iVar5 == dwBytes) {\n            *0x425b58 = *puVar1;\n            if ((var_28h & 1) != 0) {\n                *0x425b5c = *0x425b5c + 1;\n            }\n            piVar7 = puVar1 + 0x11;\n            iVar5 = 8;\n            *0x425b50 = puVar1;\n            do {\n                piVar7 = piVar7 + -2;\n                *piVar7 = *piVar7 + puVar1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            uVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 1);\n            puVar1[0xf] = uVar2;\n            fcn.00405d5d(0x425b60, puVar1 + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x0040327d:\n    return \n    \"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n    ;\n}\n",
        "token_count": 1417
    },
    "00403997": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00403997(void)\n\n{\n    if (*0x40a694 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a694);\n        *0x40a694 = -1;\n    }\n    fcn.004039dc();\n    fcn.0040597c(0x42c800, 7);\n    return;\n}\n",
        "token_count": 85
    },
    "00403a92": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00403a92(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    \n    iVar7 = *0x425b50;\n    pcVar2 = fcn.004065e9();\n    if (pcVar2 == NULL) {\n        *0x42c000 = 0x30;\n        *0x42c001 = 0x78;\n        *0x42c002 = 0;\n        fcn.00405ff8(0x80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x421530, 0);\n        if (*0x421530 == '\\0') {\n            fcn.00405ff8(0x80000003, \".DEFAULT\\\\Control Panel\\\\International\", \"Locale\", 0x421530, 0);\n        }\n        sub.KERNEL32.dll_lstrcatA();\n    }\n    else {\n        (*pcVar2)();\n        fcn.0040606f();\n    }\n    fcn.00403d77();\n    *0x425bc0 = *0x425b58 & 0x20;\n    *0x425bdc = 0x10000;\n    iVar3 = fcn.00405c8f();\n    if ((iVar3 == 0) && (*(iVar7 + 0x48) != 0)) {\n        uVar6 = 0x4242e0;\n        fcn.00405ff8(*(iVar7 + 0x44), *(iVar7 + 0x48) + *0x425b78, *(iVar7 + 0x4c) + *0x425b78, 0x4242e0, 0);\n        if (*0x4242e0 != '\\0') {\n            if (*0x4242e0 == '\\\"') {\n                uVar6 = 0x4242e1;\n                puVar4 = fcn.00405bcc();\n                *puVar4 = 0;\n            }\n            iVar3 = sub.KERNEL32.dll_lstrlenA();\n            if (((uVar6 < iVar3 + -4 + uVar6) && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(),  iVar3 == 0)) &&\n               ((uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(),  uVar6 == 0xffffffff || ((uVar6 & 0x10) == 0))))\n            {\n                fcn.00405be8();\n            }\n            fcn.00405ba1();\n            fcn.00406111();\n        }\n    }\n    iVar3 = fcn.00405c8f();\n    if (iVar3 == 0) {\n        uStack148 = 0x403bd8;\n        fcn.00406133(0x42b400, *(iVar7 + 0x118));\n    }\n    if (((*0x425b58 & 0x10) != 0) && (*0x425b5c == 0)) {\n        uStack148 = 0x403bee;\n        fcn.00403a71();\n        *0x4242c0 = 1;\n    }\n    uStack148 = 0x8040;\n    uStack152 = 0;\n    uStack156 = 0;\n    iVar9 = 1;\n    iVar8 = 0x67;\n    iVar3 = *0x425b40;\n    *0x425328 = (*_sym.imp.USER32.dll_LoadImageA)(*0x425b40, 0x67, 1);\n    if (*(iVar7 + 0x50) == -1) {\ncode_r0x00403c9e:\n        iVar7 = fcn.0040140b(0);\n        if (iVar7 == 0) {\n            fcn.00403d77();\n            if (*0x425be0 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x421110, 5);\n                pcVar2 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n                iVar7 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"RichEd20\");\n                if (iVar7 == 0) {\n                    (*pcVar2)(\"RichEd32\");\n                }\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoA;\n                iVar7 = (*_sym.imp.USER32.dll_GetClassInfoA)(0, \"RichEdit20A\", 0x4252e0);\n                if (iVar7 == 0) {\n                    (*pcVar2)(0, \"RichEdit\", 0x4252e0);\n                    *0x425304 = \"RichEdit20A\";\n                    (*_sym.imp.USER32.dll_RegisterClassA)(0x4252e0);\n                }\n                uVar5 = (*_sym.imp.USER32.dll_DialogBoxParamA)(*0x425b40, *0x425320 + 0x69U & 0xffff, 0, 0x403e44, 0);\n                fcn.0040140b(5);\n                fcn.004039c1(1);\n                return uVar5;\n            }\n            iVar7 = fcn.00405444(0);\n            if (iVar7 == 0) {\n                fcn.0040140b(1);\n                goto code_r0x00403d6d;\n            }\n            if (*0x42530c == 0) {\n                fcn.0040140b(2);\n            }\n        }\n        uVar5 = 2;\n    }\n    else {\n        iVar7 = 0x4252e0;\n        *0x4252e4 = fcn.00401000;\n        *0x4252f0 = *0x425b40;\n        *0x425304 = 0x40a878;\n        *0x4252f4 = *0x425328;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassA)(0x4252e0);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &stack0xffffff64, 0);\n            *0x421110 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                                  (0x80, 0x40a878, 0, 0x80000000, iVar7, iVar3, iVar8 - iVar7, iVar9 - iVar3, 0, 0, \n                                   *0x425b40, 0);\n            goto code_r0x00403c9e;\n        }\ncode_r0x00403d6d:\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1534
    },
    "00404cef": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404cef(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    var_4h = (*pcVar1)(arg_8h, 0x408);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_10h = *0x425b68;\n    var_14h = *0x425b50 + 0x94;\n    if (arg_ch == 0x110) {\n        var_1ch = 0;\n        var_ch = 2;\n        *0x425ba0 = arg_8h;\n        *0x421528 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x425b6c << 2);\n        uVar2 = (*_sym.imp.USER32.dll_LoadBitmapA)(*0x425b40, 0x6e);\n        *0x42151c = 0xffffffff;\n        *0x421524 = (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffffc, fcn.004052e6);\n        *0x421114 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*0x421114, uVar2, 0xff00ff);\n        (*pcVar1)(var_4h, 0x1109, 2, *0x421114);\n        iVar3 = (*pcVar1)(var_4h, 0x111c, 0, 0);\n        if (iVar3 < 0x10) {\n            (*pcVar1)(var_4h, 0x111b, 0x10, 0);\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(uVar2);\n        iVar3 = 0;\n        do {\n            iVar7 = *(var_14h + iVar3 * 4);\n            if (iVar7 != 0) {\n                if (iVar3 != 0x20) {\n                    var_ch = 0;\n                }\n                uVar2 = fcn.00406133(0, iVar7);\n                uVar2 = (*pcVar1)(var_8h, 0x143, 0, uVar2);\n                (*pcVar1)(var_8h, 0x151, uVar2, iVar3);\n            }\n            uVar5 = var_ch;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x21);\n        fcn.00404317(arg_8h, 0x15, *(arg_14h + 0x30 + var_ch * 4));\n        fcn.00404317(arg_8h, 0x16, *(arg_14h + 0x34 + uVar5 * 4));\n        iVar3 = 0;\n        uVar2 = 0;\n        if (*0x425b6c < 1) {\ncode_r0x00404f1a:\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(var_4h, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffff0, uVar5 & 0xfffffffb);\n        }\n        else {\n            var_18h = var_10h + 8;\n            do {\n                puVar8 = var_18h + 4;\n                if (*puVar8 != '\\0') {\n                    uVar5 = *var_18h;\n                    var_40h = uVar5 & 0x20;\n                    var_4ch = 0xffff0002;\n                    var_48h = 0xd;\n                    var_3ch = 0x20;\n                    var_50h = uVar2;\n                    var_38h = puVar8;\n                    var_24h = iVar3;\n                    if ((uVar5 & 2) == 0) {\n                        if ((uVar5 & 4) == 0) {\n                            uVar4 = (*pcVar1)(var_4h, 0x1100, 0, &var_50h);\n                            *(*0x421528 + iVar3 * 4) = uVar4;\n                        }\n                        else {\n                            uVar2 = (*pcVar1)(var_4h, 0x110a, 3, uVar2);\n                        }\n                    }\n                    else {\n                        var_48h = 0x4d;\n                        var_28h = 1;\n                        uVar2 = (*pcVar1)(var_4h, 0x1100, 0, &var_50h);\n                        var_1ch = 1;\n                        *(*0x421528 + iVar3 * 4) = uVar2;\n                        uVar2 = *(*0x421528 + iVar3 * 4);\n                    }\n                }\n                iVar3 = iVar3 + 1;\n                var_18h = var_18h + 0x106;\n            } while (iVar3 < *0x425b6c);\n            if (var_1ch == 0) goto code_r0x00404f1a;\n        }\n        if (var_ch == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_8h, 5);\n            fcn.0040434c(var_8h);\n            goto code_r0x004052d1;\n        }\n        fcn.0040434c(var_4h);\n    }\n    if (arg_ch == 0x405) {\n        arg_10h = 0;\n        arg_ch = 0x40f;\n        arg_14h = 1;\n    }\n    if (((arg_ch == 0x4e) || (arg_ch == 0x413)) && ((var_ch = arg_14h,  arg_ch == 0x413 || (*(arg_14h + 4) == 0x408))))\n    {\n        if (((*0x425b58 & 0x200) == 0) &&\n           (((arg_ch == 0x413 || (*(arg_14h + 8) == -2)) && (iVar3 = fcn.00404c3d(var_4h, arg_ch != 0x413),  -1 < iVar3)\n            ))) {\n            puVar8 = iVar3 * 0x418 + 8 + var_10h;\n            uVar5 = *puVar8;\n            if ((uVar5 & 0x10) == 0) {\n                if ((uVar5 & 0x40) == 0) {\n                    uVar5 = uVar5 ^ 1;\n                }\n                else {\n                    uVar6 = uVar5 ^ 0x80;\n                    if (uVar6 < '\\0') {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xff | 1;\n                    }\n                    else {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xfe;\n                    }\n                }\n                *puVar8 = uVar5;\n                fcn.0040117d(iVar3);\n                arg_10h = iVar3 + 1;\n                arg_14h = ~*0x425b58 >> 8 & 1;\n                arg_ch = 0x40f;\n            }\n        }\n        if (var_ch != 0) {\n            if (*(var_ch + 8) == -0x192) {\n                (*pcVar1)(var_4h, 0x419, 0, *(var_ch + 0x5c));\n            }\n            if (*(var_ch + 8) == -0x196) {\n                if (*(var_ch + 0xc) == 2) {\n                    puVar8 = *(var_ch + 0x5c) * 0x418 + 8 + var_10h;\n                    *puVar8 = *puVar8 | 0x20;\n                }\n                else {\n                    puVar8 = *(var_ch + 0x5c) * 0x418 + 8 + var_10h;\n                    *puVar8 = *puVar8 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) || (iVar3 = (*pcVar1)(var_8h, 0x147, 0, 0),  iVar3 == -1))\n        goto code_r0x004052d1;\n        iVar3 = (*pcVar1)(var_8h, 0x150, iVar3, 0);\n        if ((iVar3 == -1) || (*(var_14h + iVar3 * 4) == 0)) {\n            iVar3 = 0x20;\n        }\n        fcn.00401299(iVar3);\n        (*pcVar1)(arg_8h, 0x420, 0, iVar3);\n        arg_10h = -1;\n        arg_14h = 0;\n        arg_ch = 0x40f;\n    }\n    if (arg_ch == 0x200) {\n        (*pcVar1)(var_4h, 0x200, 0, 0);\n    }\n    if (arg_ch == 0x40b) {\n        if (*0x421114 != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*0x421114);\n        }\n        if (*0x421528 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x421528);\n        }\n        *0x421114 = 0;\n        *0x421528 = 0;\n        *0x425ba0 = 0;\n    }\n    if (arg_ch == 0x40f) {\n        fcn.004011ef(0, 0);\n        if (arg_10h != 0) {\n            iVar3 = arg_10h;\n            if (arg_10h != -1) {\n                iVar3 = arg_10h + -1;\n            }\n            fcn.00404cbd(8, iVar3);\n        }\n        if (arg_14h != 0) {\n            arg_14h = fcn.004012e2(*0x421528);\n            fcn.00401299(arg_14h);\n            iVar3 = 0;\n            iVar7 = 0;\n            if (0 < arg_14h) {\n                do {\n                    if (*(var_14h + iVar3 * 4) != 0) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < arg_14h);\n            }\n            (*pcVar1)(var_8h, 0x14e, iVar7, 0);\n            arg_ch = 0x420;\n        }\n        fcn.004011ef(0, 0);\n        var_1ch = *0x421528;\n        var_38h = 0xf030;\n        var_10h = 0;\n        if (0 < *0x425b6c) {\n            puVar8 = *0x425b68 + 8;\n            do {\n                uVar5 = *(var_1ch + var_10h * 4);\n                if (uVar5 != 0) {\n                    uVar6 = *puVar8;\n                    var_44h = 8;\n                    if ((uVar6 & 0x100) != 0) {\n                        var_34h = puVar8 + 4;\n                        var_44h = 9;\n                        *(puVar8 + 1) = *(puVar8 + 1) & 0xfe;\n                    }\n                    if ((uVar6 & 0x40) == 0) {\n                        iVar3 = (uVar6 & 1) + 1;\n                        if ((uVar6 & 0x10) != 0) {\n                            iVar3 = (uVar6 & 1) + 4;\n                        }\n                    }\n                    else {\n                        iVar3 = 3;\n                    }\n                    var_3ch = (iVar3 << 0xb | uVar6 & 8) * 2 | uVar6 & 0x20;\n                    var_40h = uVar5;\n                    (*pcVar1)(var_4h, 0x1102, (uVar6 >> 5 & 1U) + 1, uVar5);\n                    (*pcVar1)(var_4h, 0x110d, 0, &var_44h);\n                }\n                var_10h = var_10h + 1;\n                puVar8 = puVar8 + 0x106;\n            } while (var_10h < *0x425b6c);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(var_4h, 0, 1);\n        if (*(*0x42531c + 0x10) != 0) {\n            uVar2 = fcn.00404c10(5);\n            fcn.00404b5b(0x3ff, 0xfffffffb, uVar2);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x425b58 & 0x100) != 0)) {\n        iVar3 = (arg_14h == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(var_4h, iVar3);\n        uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe, iVar3);\n        (*pcVar1)(uVar2);\n    }\ncode_r0x004052d1:\n    fcn.0040437e(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 3361
    },
    "004054ca": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004054ca(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uchar *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    iVar4 = arg_ch;\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar7 = 0;\n    var_4h = *0x425324;\n    if (arg_ch == 0x110) {\n        var_2ch = 0xffffffff;\n        var_20h = 0xffffffff;\n        var_34h = 2;\n        var_30h = 0;\n        var_28h = NULL;\n        var_24h = 0;\n        var_1ch = 0;\n        uStack28 = 0;\n        arg_10h = *(*0x425b50 + 0x5c);\n        arg_ch = *(*0x425b50 + 0x60);\n        *0x425310 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x425308 = (*pcVar1)(arg_8h, 0x3ee);\n        *0x425324 = (*pcVar1)(arg_8h, 0x3f8);\n        var_4h = *0x425324;\n        fcn.0040434c(*0x425310);\n        *0x425314 = fcn.00404c10(4);\n        uVar10 = 0x42b400;\n        uVar9 = 0xfffffffd;\n        uVar8 = 0;\n        *0x42532c = 0;\n        uVar3 = fcn.00406133(0, 0xfffffffd);\n        fcn.00406594(\"New install of \\\"%s\\\" to \\\"%s\\\"\", uVar3, uVar8, uVar9, uVar10);\n        (*_sym.imp.USER32.dll_GetClientRect)(var_4h, &var_14h);\n        var_2ch = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n        var_2ch = var_ch - var_2ch;\n        (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x101b, 0, &var_34h);\n        (*pcVar2)(var_4h, 0x1036, 0x4000, 0x4000);\n        if (-1 < arg_10h) {\n            (*pcVar2)(var_4h, 0x1001, 0, arg_10h);\n            (*pcVar2)(var_4h, 0x1026, 0, arg_10h);\n        }\n        if (-1 < arg_ch) {\n            (*pcVar2)(var_4h, 0x1024, 0, arg_ch);\n        }\n        fcn.00404317(arg_8h, 0x1b, *(arg_14h + 0x30));\n        if ((*0x425b58 & 3) != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x425310, 0);\n            if ((*0x425b58 & 2) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(var_4h, 8);\n            }\n            else {\n                *0x425310 = 0;\n            }\n            fcn.0040434c(*0x425308);\n        }\n        uVar3 = (*pcVar1)(arg_8h, 0x3ec);\n        (*pcVar2)(uVar3, 0x401, 0, 0x75300000);\n        if ((*0x425b58 & 4) != 0) {\n            (*pcVar2)(uVar3, 0x409, 0, arg_ch);\n            (*pcVar2)(uVar3, 0x2001, 0, arg_10h);\n        }\ncode_r0x00405868:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec, 0, &arg_ch);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00405444, uVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        }\n        pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n        if (iVar4 == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x425310, 0);\n                (*pcVar1)(var_4h, 8);\n                fcn.0040434c(var_4h);\n                goto code_r0x004056f0;\n            }\n        }\n        else {\ncode_r0x004056f0:\n            if (iVar4 == 0x404) {\n                if (*0x42530c != 0) {\n                    *0x420508 = 2;\n                    fcn.004042f0();\n                    goto code_r0x00405711;\n                }\n                (*pcVar1)(*0x425b48, 8);\n                if (*0x425bcc == 0) {\n                    fcn.00405372(*(*0x42050c + 0x34), 0);\n                }\n                fcn.004042f0(1);\n            }\n            if ((iVar4 == 0x7b) && (arg_10h == var_4h)) {\n                arg_10h = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n                if (0 < arg_10h) {\n                    uVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    uVar8 = fcn.00406133(0, 0xffffffe1);\n                    (*_sym.imp.USER32.dll_AppendMenuA)(uVar3, 0, 1, uVar8);\n                    iVar4 = arg_14h;\n                    iVar5 = arg_14h >> 0x10;\n                    if (arg_14h == -1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(var_4h, &var_14h);\n                        iVar4 = var_14h;\n                        iVar5 = var_10h;\n                    }\n                    iVar4 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar3, 0x180, iVar4, iVar5, 0, arg_8h, 0);\n                    if (iVar4 == 1) {\n                        iVar4 = 1;\n                        var_34h = 0;\n                        var_28h = 0x421530;\n                        var_24h = 0xfff;\n                        arg_8h = arg_10h;\n                        do {\n                            arg_8h = arg_8h + -1;\n                            iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, arg_8h, &var_3ch);\n                            iVar4 = iVar4 + 2 + iVar5;\n                        } while (arg_8h != 0);\n                        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                        (*_sym.imp.USER32.dll_EmptyClipboard)();\n                        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar4);\n                        puVar6 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                        do {\n                            var_28h = puVar6;\n                            iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, iVar7, &var_3ch);\n                            puVar6 = puVar6 + iVar4;\n                            *puVar6 = 0xd;\n                            puVar6[1] = 10;\n                            puVar6 = puVar6 + 2;\n                            iVar7 = iVar7 + 1;\n                        } while (iVar7 < arg_10h);\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n                        (*_sym.imp.USER32.dll_SetClipboardData)(1, uVar3);\n                        (*_sym.imp.USER32.dll_CloseClipboard)();\n                    }\n                }\n                goto code_r0x00405868;\n            }\n        }\ncode_r0x00405711:\n        uVar3 = fcn.0040437e(iVar4, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 2079
    },
    "00405934": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405934(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t unaff_retaddr;\n    \n    iVar1 = fcn.00405d7d(param_1);\n    if (iVar1 != -1) {\n        if ((param_1 & 1) == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)();\n        }\n        if (iVar2 != 0) {\n            return 1;\n        }\n        if ((unaff_retaddr & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(param_1, iVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 188
    },
    "0040597c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040597c(char *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lpFindFileData;\n    uint var_120h;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t hFindFile;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch & 4;\n    var_ch = fcn.00405c8f(arg_8h);\n    if ((arg_ch & 8) == 0) {\n        uVar1 = arg_ch & 1;\n        if ((uVar1 == 0) || ((var_ch != 0 && ((arg_ch & 2) != 0)))) {\n            fcn.00406111(0x422538, arg_8h);\n            if (uVar1 == 0) {\n                fcn.00405be8(arg_8h);\n            }\n            else {\n                sub.KERNEL32.dll_lstrcatA(0x422538, \"\\\\*.*\");\n            }\n            if ((*arg_8h != '\\0') || (*0x422538 == '\\\\')) {\n                sub.KERNEL32.dll_lstrcatA(arg_8h, 0x40a28c);\n            }\n            iVar2 = sub.KERNEL32.dll_lstrlenA(arg_8h);\n            hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(0x422538, &lpFindFileData);\n            if (hFindFile != -1) {\n                do {\n                    puVar5 = &var_120h;\n                    pcVar3 = fcn.00405bcc(&var_120h, 0x3f);\n                    if ((*pcVar3 != '\\0') && (var_1ch != '\\0')) {\n                        puVar5 = &var_1ch;\n                    }\n                    if ((*puVar5 != '.') ||\n                       ((*(puVar5 + 1) != '\\0' && ((*(puVar5 + 1) != '.' || (*(puVar5 + 2) != '\\0')))))) {\n                        fcn.00406111(arg_8h + iVar2, puVar5);\n                        if ((lpFindFileData & 0x10) == 0) {\n                            fcn.00406594(\"Delete: DeleteFile(\\\"%s\\\")\", arg_8h);\n                            iVar4 = fcn.00405934(arg_8h, var_4h);\n                            if (iVar4 == 0) {\n                                if (var_4h == 0) {\n                                    fcn.00406594(\"Delete: DeleteFile failed(\\\"%s\\\")\");\n                                    *0x425bc8 = *0x425bc8 + 1;\n                                }\n                                else {\n                                    fcn.00406594(\"Delete: DeleteFile on Reboot(\\\"%s\\\")\");\n                                    fcn.00405372(0xfffffff1, arg_8h);\n                                    fcn.00405fc5(arg_8h, 0);\n                                }\n                            }\n                            else {\n                                fcn.00405372(0xfffffff2, arg_8h);\n                            }\n                        }\n                        else if ((arg_ch & 3) == 3) {\n                            fcn.0040597c(arg_8h, arg_ch);\n                        }\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(hFindFile, &lpFindFileData);\n                } while (iVar4 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n            }\n            if (uVar1 != 0) {\n                (arg_8h + iVar2)[-1] = '\\0';\n            }\n        }\n        if (uVar1 != 0) {\n            if (var_ch != 0) {\n                iVar2 = fcn.004065c2(arg_8h);\n                if (iVar2 == 0) {\n                    return;\n                }\n                fcn.00405ba1(arg_8h);\n                fcn.00406594(\"RMDir: RemoveDirectory(\\\"%s\\\")\", arg_8h);\n                iVar2 = fcn.00405934(arg_8h, var_4h | 1);\n                if (iVar2 != 0) {\n                    fcn.00405372(0xffffffe5, arg_8h);\n                    return;\n                }\n                if (var_4h != 0) {\n                    fcn.00406594(\"RMDir: RemoveDirectory on Reboot(\\\"%s\\\")\");\n                    fcn.00405372(0xfffffff1, arg_8h);\n                    fcn.00405fc5(arg_8h, 0);\n                    return;\n                }\n            }\n            fcn.00406594();\n            *0x425bc8 = *0x425bc8 + 1;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg_8h);\n        *0x425bc8 = *0x425bc8 + (iVar2 == 0);\n    }\n    return;\n}\n",
        "token_count": 1142
    },
    "00405c8f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00405c8f(uint param_1)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    \n    fcn.00406111(0x422938, param_1);\n    pcVar1 = fcn.00405c3a(0x422938);\n    if ((pcVar1 != NULL) &&\n       ((pcVar5 = pcVar1,  fcn.0040637c(pcVar1),  (*0x425b58 & 0x80) == 0 || ((*pcVar1 != '\\0' && (*pcVar1 != '\\\\'))))))\n    {\n        while( true ) {\n            uVar4 = 0x422938;\n            iVar3 = sub.KERNEL32.dll_lstrlenA(0x422938);\n            if (iVar3 <= pcVar1 + -0x422938) {\n                fcn.00405ba1(0x422938, uVar4, pcVar5);\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0x422938);\n                return iVar3 != -1;\n            }\n            puVar2 = fcn.004065c2(0x422938);\n            if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) break;\n            pcVar5 = 0x422938;\n            fcn.00405be8();\n        }\n    }\n    return false;\n}\n",
        "token_count": 336
    },
    "00405d7d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00405d7d(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return uVar1;\n}\n",
        "token_count": 105
    },
    "00405e49": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405e49(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *arg_10h;\n    int32_t lpBuffer;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int32_t unaff_retaddr;\n    uchar *puStack116;\n    uint uStack112;\n    int32_t iStack108;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetShortPathNameA;\n    if (unaff_retaddr != 0) {\n        fcn.00405da2();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            return;\n        }\n        if (0x400 < iVar2) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)();\n    if ((iVar2 != 0) && (iVar2 < 0x401)) {\n        iVar3 = (*_sym.imp.USER32.dll_wsprintfA)();\n        fcn.00406133(0x4236c0, *(*0x425b50 + 0x128));\n        iVar2 = fcn.00405da2();\n        if (iVar2 != -1) {\n            arg_10h = (*_sym.imp.KERNEL32.dll_GetFileSize)();\n            lpBuffer = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n            if ((lpBuffer != 0) && (iVar4 = fcn.00405e1a(iVar2, lpBuffer, arg_10h),  iVar4 != 0)) {\n                iVar4 = fcn.00405d07(lpBuffer, \"[Rename]\\r\\n\");\n                if (iVar4 == 0) {\n                    iStack108 = 0x405f49;\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n                    arg_10h = arg_10h + 10;\n                    puStack116 = arg_10h;\n                }\n                else {\n                    iStack108 = 0x405f5c;\n                    puVar5 = fcn.00405d07(iVar4 + 10, 0x40ab3c);\n                    if (puVar5 == NULL) {\n                        iVar2 = 0x40;\n                        puStack116 = arg_10h;\n                    }\n                    else {\n                        puVar7 = arg_10h + lpBuffer;\n                        puVar6 = puVar7 + iVar3;\n                        for (; puVar5 < puVar7; puVar7 = puVar7 + -1) {\n                            *puVar6 = *puVar7;\n                            puVar6 = puVar6 + -1;\n                        }\n                        iVar2 = 0x40;\n                        puStack116 = puVar5 + (1 - lpBuffer);\n                    }\n                }\n                puStack116 = puStack116 + lpBuffer;\n                uStack112 = 0x422ec0;\n                iStack108 = iVar3;\n                fcn.00405d5d();\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar2, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_WriteFile)(iVar2, lpBuffer, arg_10h + iVar3, &stack0xffffff8c, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(lpBuffer);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n    }\n    return;\n}\n",
        "token_count": 779
    },
    "00406415": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406415(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h != 0) {\n        if (*0x40a908 != -1) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a908);\n        }\n        *0x40a908 = 0xffffffff;\n        return;\n    }\n    if (*0x4242c0 == 0) {\n        return;\n    }\n    if (*0x423ec0 != '\\0') {\n        if (*0x40a908 != -1) goto code_r0x00406482;\n        *0x40a908 = fcn.00405da2(0x423ec0, 0x40000000, 4);\n        if (*0x40a908 == -1) {\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40a908, 0, 0, 2);\n    }\n    if (*0x40a908 == -1) {\n        return;\n    }\ncode_r0x00406482:\n    sub.KERNEL32.dll_lstrcatA(0x424ae0, 0x40ab64);\n    uVar1 = sub.KERNEL32.dll_lstrlenA(0x424ae0, &arg_8h, 0);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(*0x40a908, 0x424ae0, uVar1);\n    return;\n}\n",
        "token_count": 333
    },
    "004065c2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004065c2(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(param_1, 0x422d80);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        uVar2 = 0x422d80;\n    }\n    return uVar2;\n}\n",
        "token_count": 116
    },
    "0040117d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0040117d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = *(param_1 * 0x418 + 8 + *0x425b68);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x425b6c) {\n            puVar3 = uVar4 * 0x418 + 8 + *0x425b68;\n            iVar5 = 0;\n            do {\n                uVar2 = *puVar3;\n                if ((uVar2 & 2) == 0) {\n                    if ((uVar2 & 4) == 0) {\n                        iVar6 = iVar5;\n                        if ((uVar2 & 0x10) == 0) {\n                            *puVar3 = (uVar2 ^ uVar1) & 1 ^ uVar2;\n                        }\n                    }\n                    else {\n                        iVar6 = iVar5 + -1;\n                        if (iVar5 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x106;\n                iVar5 = iVar6;\n            } while (uVar4 < *0x425b6c);\n        }\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "004011ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011ef(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *0x425b68;\n    iVar5 = arg_8h * 0x418 + *0x425b68;\n    var_4h = 0;\n    var_8h = 0;\n    if (((*(iVar5 + 8) & 2) != 0) && (arg_ch != 0)) {\n        arg_8h = arg_8h + 1;\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n    }\n    if (arg_8h < *0x425b6c) {\n        do {\n            puVar1 = arg_8h * 0x418 + 8 + iVar2;\n            uVar3 = arg_8h + 1;\n            uVar4 = *puVar1;\n            if ((uVar4 & 2) != 0) {\n                uVar3 = fcn.004011ef(arg_8h, 1);\n                uVar4 = *puVar1;\n            }\n            if ((uVar4 & 4) != 0) {\n                if (var_4h == 0) {\n                    return uVar3;\n                }\n                if (var_8h != 0) {\n                    *(iVar5 + 8) = *(iVar5 + 8) | 0x40;\n                    return uVar3;\n                }\n                *(iVar5 + 8) = *(iVar5 + 8) & 0xffffff7f | 1;\n                return uVar3;\n            }\n            if ((uVar4 & 0x40) != 0) {\n                var_4h = var_4h + 1;\n            }\n            if ((uVar4 & 1) == 0) {\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_4h = var_4h + 1;\n            }\n            arg_8h = uVar3;\n        } while (uVar3 < *0x425b6c);\n    }\n    return 0;\n}\n",
        "token_count": 538
    },
    "004012e2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012e2(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *0x425b50 + 0x94;\n    do {\n        uVar1 = 0;\n        if (*var_8h != 0) {\n            bVar3 = *0x425b6c == 0;\n            if (*0x425b6c != 0) {\n                puVar2 = *0x425b68 + 8;\n                do {\n                    if (((*puVar2 & 6) == 0) &&\n                       (((arg_8h == 0 || (*(arg_8h + uVar1 * 4) != 0)) &&\n                        ((puVar2[-1] & 1 << (var_4h & 0x1f)) != (*puVar2 & 1) << (var_4h & 0x1f))))) break;\n                    uVar1 = uVar1 + 1;\n                    puVar2 = puVar2 + 0x106;\n                } while (uVar1 < *0x425b6c);\n                bVar3 = uVar1 == *0x425b6c;\n            }\n            if (bVar3) {\n                return var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        if (0x1f < var_4h) {\n            return var_4h;\n        }\n    } while( true );\n}\n",
        "token_count": 394
    },
    "004032de": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004032de(int32_t nDenominator, uint hFile, uint32_t arg_10h, uint32_t nNumber)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint var_54h;\n    int32_t var_14h;\n    int32_t lpNumberOfBytesWritten;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = nNumber;\n    uVar5 = arg_10h;\n    var_8h = nNumber;\n    if (arg_10h == 0) {\n        var_8h = 0x8000;\n    }\n    var_4h = 0;\n    uVar2 = arg_10h;\n    if (arg_10h == 0) {\n        uVar2 = 0x4100e8;\n    }\n    if (-1 < nDenominator) {\n        fcn.004034e7(*0x425b98 + nDenominator);\n    }\n    iVar1 = fcn.004034d1(&nNumber, 4);\n    if (iVar1 != 0) {\n        if ((nNumber & 0x80000000) == 0) {\n            if (uVar5 == 0) {\n                while( true ) {\n                    if (nNumber < 1) {\n                        return var_4h;\n                    }\n                    uVar5 = var_8h;\n                    if (nNumber < var_8h) {\n                        uVar5 = nNumber;\n                    }\n                    iVar1 = fcn.004034d1();\n                    if (iVar1 == 0) break;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, 0x40c0e8, uVar5, &arg_10h, 0);\n                    if ((iVar1 == 0) || (uVar5 != arg_10h)) {\n                        return 0xfffffffe;\n                    }\n                    var_4h = var_4h + uVar5;\n                    nNumber = nNumber - uVar5;\n                }\n            }\n            else {\n                if (nNumber < uVar4) {\n                    uVar4 = nNumber;\n                }\n                iVar1 = fcn.004034d1(uVar5, uVar4);\n                if (iVar1 != 0) {\n                    return uVar4;\n                }\n            }\n        }\n        else {\n            var_ch = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            fcn.004066c9();\n            uVar5 = nNumber & 0x7fffffff;\n            nNumber = uVar5;\n            if (uVar5 == 0) {\n                return var_4h;\n            }\n            while( true ) {\n                uVar4 = 0x4000;\n                if (nNumber < 0x4000) {\n                    uVar4 = nNumber;\n                }\n                uVar6 = 0x40c0e8;\n                iVar1 = fcn.004034d1();\n                if (iVar1 == 0) break;\n                nNumber = nNumber - uVar4;\n                *0x40c070 = 0x40c0e8;\n                *0x40c074 = uVar4;\n                while( true ) {\n                    *0x40c07c = var_8h;\n                    *0x40c078 = uVar2;\n                    var_14h = fcn.004066e9(uVar6);\n                    if (var_14h < 0) {\n                        return 0xfffffffc;\n                    }\n                    iVar3 = *0x40c078 - uVar2;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n                    if (((*0x425bf4 & 1) != 0) && ((200 < iVar1 - var_ch || (nNumber == 0)))) {\n                        uVar6 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar5 - nNumber, 100, uVar5);\n                        (*_sym.imp.USER32.dll_wsprintfA)(&var_54h, \"... %d%%\", uVar6);\n                        uVar6 = 0;\n                        fcn.00405372(0, &var_54h);\n                        var_ch = iVar1;\n                    }\n                    if (iVar3 == 0) break;\n                    if (arg_10h == 0) {\n                        iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, uVar2, iVar3, &lpNumberOfBytesWritten, 0);\n                        if (iVar1 == 0) {\n                            return 0xfffffffe;\n                        }\n                        if (lpNumberOfBytesWritten != iVar3) {\n                            return 0xfffffffe;\n                        }\n                    }\n                    else {\n                        var_8h = var_8h - iVar3;\n                        uVar2 = *0x40c078;\n                    }\n                    var_4h = var_4h + iVar3;\n                    if (var_14h == 1) {\n                        return var_4h;\n                    }\n                }\n                if (nNumber < 1) {\n                    return var_4h;\n                }\n            }\n        }\n    }\n    return 0xfffffffd;\n}\n",
        "token_count": 1177
    },
    "0040437e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040437e(int32_t arg_8h, uint hdc, uint hWnd)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((arg_8h - 0x133U < 6) &&\n       (puVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xffffffeb),  pcVar1 = _sym.imp.USER32.dll_GetSysColor, \n       puVar2 != NULL)) {\n        uVar3 = *puVar2;\n        if ((*(puVar2 + 5) & 2) != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uVar3);\n        }\n        if ((*(puVar2 + 5) & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar3);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar2[4]);\n        var_8h = puVar2[1];\n        if ((*(puVar2 + 5) & 8) != 0) {\n            var_8h = (*pcVar1)(var_8h);\n        }\n        if ((*(puVar2 + 5) & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n        }\n        if ((*(puVar2 + 5) & 0x10) != 0) {\n            var_ch = puVar2[2];\n            if (puVar2[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar2[3]);\n            }\n            uVar3 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar2[3] = uVar3;\n        }\n        return puVar2[3];\n    }\n    return 0;\n}\n",
        "token_count": 455
    },
    "00404460": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404460(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    char *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    pcVar5 = _sym.imp.USER32.dll_SendMessageA;\n    pcVar3 = _sym.imp.USER32.dll_GetDlgItem;\n    if (arg_ch == 0x110) {\n        iVar7 = *(arg_14h + 0x30);\n        if (iVar7 < 0) {\n            iVar7 = *(*0x42531c - (iVar7 * 4 + 4));\n        }\n        cVar2 = *(iVar7 + *0x425b78);\n        var_8h = 0;\n        pcVar10 = iVar7 + *0x425b78 + 1;\n        var_4h = fcn.0040442b;\n        uVar9 = ~*(arg_14h + 0x14) >> 5 & 1 | *(arg_14h + 0x14) & 1;\n        var_ch = pcVar10;\n        fcn.00404317(arg_8h, 0x22, *(arg_14h + 0x34));\n        fcn.00404317(arg_8h, 0x23, *(arg_14h + 0x38));\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, (uVar9 == 0) + 0x40a, 1);\n        fcn.00404339(uVar9);\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.0040434c(uVar6);\n        pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar6, 0x45b, 1, 0);\n        iVar7 = *(*0x425b50 + 0x68);\n        if (iVar7 < 0) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar7);\n        }\n        (*pcVar3)(uVar6, 0x443, 0, iVar7);\n        (*pcVar3)(uVar6, 0x445, 0, 0x4010000);\n        uVar8 = sub.KERNEL32.dll_lstrlenA(pcVar10);\n        (*pcVar3)(uVar6, 0x435, 0, uVar8);\n        *0x420504 = 0;\n        (*pcVar3)(uVar6, 0x449, cVar2, &var_ch);\n        *0x420504 = 0;\n        return 0;\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h >> 0x10 != 0) || (*0x420504 != 0)) || (puVar1 = *0x42050c + 0x14,  (*puVar1 & 0x20) == 0))\n        goto code_r0x004046d7;\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a, 0xf0, 0, 0);\n        uVar9 = (*pcVar5)(uVar6);\n        *puVar1 = *puVar1 & 0xfffffffe | uVar9 & 1;\n        fcn.00404339(uVar9 & 1);\n        fcn.004046ea();\n    }\n    if (arg_ch == 0x4e) {\n        uVar6 = (*pcVar3)(arg_8h, 1000);\n        if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n            var_8h = *(arg_14h + 0x1c);\n            var_ch = *(arg_14h + 0x18);\n            var_4h = 0x4242e0;\n            if (var_8h - var_ch < 0x800) {\n                (*pcVar5)(uVar6, 1099, 0, &var_ch);\n                pcVar4 = _sym.imp.USER32.dll_LoadCursorA;\n                uVar6 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n                pcVar3 = _sym.imp.USER32.dll_SetCursor;\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(arg_8h, \"open\", var_4h, 0, 0, 1);\n                uVar6 = (*pcVar4)(0, 0x7f00);\n                (*pcVar3)(uVar6);\n            }\n        }\n        if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n            if (*(arg_14h + 0x10) == 0xd) {\n                (*pcVar5)(*0x425b48, 0x111, 1, 0);\n            }\n            if (*(arg_14h + 0x10) == 0x1b) {\n                (*pcVar5)(*0x425b48, 0x10, 0, 0);\n            }\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x40b) {\n        *0x420504 = *0x420504 + 1;\n    }\ncode_r0x004046d7:\n    uVar6 = fcn.0040437e(arg_ch, arg_10h, arg_14h);\n    return uVar6;\n}\n",
        "token_count": 1367
    },
    "00404c10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00404c10(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x425b68;\n    iVar3 = *0x425b6c;\n    if (*0x425b6c != 0) {\n        do {\n            if ((*(iVar2 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar2 + param_1 * 4);\n            }\n            iVar3 = iVar3 + -1;\n            iVar2 = iVar2 + 0x418;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 167
    },
    "00405372": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405372(uint arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *0x425324;\n    if (*0x425324 != 0) {\n        var_8h = *0x425bf4;\n        uVar4 = *0x425bf4 & 1;\n        if (uVar4 == 0) {\n            fcn.00406133(0x420510, arg_8h);\n        }\n        iVar2 = sub.KERNEL32.dll_lstrlenA(0x420510);\n        if (lpString2 != 0) {\n            iVar3 = sub.KERNEL32.dll_lstrlenA(lpString2);\n            if (0x7ff < iVar3 + iVar2) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatA(0x420510, lpString2);\n        }\n        if ((var_8h & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextA)(*0x425308, 0x420510);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if ((var_8h & 2) == 0) {\n            var_1ch = 0x420510;\n            var_30h = 1;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n            var_2ch = var_2ch - uVar4;\n            var_28h = 0;\n            (*pcVar1)(var_4h, 0x1007 - uVar4, 0, &var_30h);\n            (*pcVar1)(var_4h, 0x1013, var_2ch, 0);\n        }\n        if (uVar4 != 0) {\n            *(iVar2 + 0x420510) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 514
    },
    "00405444": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00405444(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    \n    iVar4 = *0x425b6c;\n    iVar3 = *0x425b68;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x425bf8 = *0x425bf8 | uVar1;\n    fcn.00404363(0);\n    if (iVar4 != 0) {\n        iVar3 = iVar3 + 0x18;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(iVar3 + -0x10) & 1) == 0) {\n                fcn.00406594(\"Skipping section: \\\"%s\\\"\", iVar3);\n            }\n            else {\n                pcVar5 = \"Section: \\\"%s\\\"\";\n                fcn.00406594(\"Section: \\\"%s\\\"\", iVar3);\n                iVar2 = fcn.00401389(pcVar5, unaff_ESI, *(iVar3 + -0xc));\n                if (iVar2 != 0) {\n                    *0x425bcc = *0x425bcc + 1;\n                    break;\n                }\n            }\n            iVar3 = iVar3 + 0x418;\n        } while (iVar4 != 0);\n    }\n    fcn.00404363(0x404);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x425bcc;\n}\n",
        "token_count": 352
    },
    "0040665b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.0040665b(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x423ac4 == 0) {\n        uVar2 = 0;\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                uVar1 = uVar1 >> 1 ^ -((uVar1 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar2 * 4 + 0x423ac0) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            param_1 = param_1 >> 8 ^ *((param_1 & 0xff ^ *param_2) * 4 + 0x423ac0);\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return ~param_1;\n}\n",
        "token_count": 308
    },
    "00401389": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00401389(int32_t param_1)\n\n{\n    int32_t *hWndChildAfter;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    while ((-1 < param_1 && (hWndChildAfter = param_1 * 0x1c + *0x425b70,  *hWndChildAfter != 1))) {\n        iVar1 = fcn.00401434(hWndChildAfter);\n        if (iVar1 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar1 = fcn.0040136d();\n        if (iVar1 == 0) {\n            iVar2 = 1;\n            iVar1 = param_1 + 1;\n        }\n        else {\n            iVar1 = iVar1 + -1;\n            iVar2 = iVar1 - param_1;\n        }\n        param_1 = iVar1;\n        if (unaff_retaddr != 0) {\n            *0x42532c = *0x42532c + iVar2;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x42532c, 30000, *0x425314, 0);\n            (*_sym.imp.USER32.dll_SendMessageA)(0x4013a8, 0x402, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 317
    },
    "004046ea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004046ea(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x420500;\n    if (*0x425bcc == 0) {\n        uVar1 = *0x42152c;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 86
    },
    "00404c3d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404c3d(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        (*pcVar1)(arg_8h, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(arg_8h, 0x110c, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 322
    },
    "004058d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004058d0(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x425be0 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x425be8 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        *0x40a8e4 = *0x425b48;\n        *0x40a8e8 = *0x425b40;\n        *0x40a8ec = param_1;\n        *0x40a8f0 = 0x425340;\n        *0x40a8f4 = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectA)(0x40a8e0);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00405c3a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar * fcn.00405c3a(char *param_1)\n\n{\n    code *pcVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextA;\n    pcVar2 = (*_sym.imp.USER32.dll_CharNextA)(param_1);\n    uVar3 = (*pcVar1)(pcVar2);\n    if (((*param_1 == '\\0') || (*pcVar2 != ':')) || (pcVar2[1] != '\\\\')) {\n        if ((*param_1 == '\\\\') && (param_1[1] == '\\\\')) {\n            iVar4 = 2;\n            do {\n                iVar4 = iVar4 + -1;\n                pcVar2 = fcn.00405bcc();\n                if (*pcVar2 == '\\0') goto code_r0x00405c87;\n                pcVar2 = pcVar2 + 1;\n            } while (iVar4 != 0);\n        }\n        else {\ncode_r0x00405c87:\n            pcVar2 = NULL;\n        }\n    }\n    else {\n        pcVar2 = (*pcVar1)(uVar3);\n    }\n    return pcVar2;\n}\n",
        "token_count": 272
    },
    "00406133": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00406133(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint *arg_8h_00;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *ppidl;\n    int32_t var_4h;\n    \n    puVar7 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x42531c - (arg_ch * 4 + 4));\n    }\n    puVar5 = *0x425b78 + arg_ch;\n    arg_8h_00 = 0x4242e0;\n    if ((0x4242df < arg_8h) && (arg_8h + -0x1090b8 < 0x800)) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar7;\n    }\n    do {\n        while( true ) {\n            uVar1 = *puVar5;\n            if ((uVar1 == 0) || (0x3ff < arg_8h_00 + -0x1090b8)) {\n                *arg_8h_00 = 0;\n                if (arg_8h != NULL) {\n                    fcn.00406111(arg_8h, 0x4242e0);\n                }\n                return;\n            }\n            puVar6 = puVar5 + 1;\n            if (uVar1 < 4) break;\n            if (uVar1 == 4) {\n                *arg_8h_00 = *puVar6;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                *arg_8h_00 = uVar1;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar5 = puVar6;\n            }\n        }\n        uVar2 = puVar5[2];\n        var_ch = uVar2;\n        uVar3 = *puVar6;\n        puVar7 = uVar3;\n        uVar8 = (var_ch & 0x7f) << 7 | puVar7 & 0x7f;\n        var_18h = CONCAT22(uVar3 >> 7, uVar3) | 0x8000;\n        var_10h = CONCAT22(uVar2 >> 7, uVar2) | 0x8000;\n        var_14h = puVar7;\n        if (uVar1 == 2) {\n            iVar9 = 2;\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n            if ((((iVar4 < 0) && (iVar4 != 0x5a04)) && (var_ch != 0x23)) && (var_ch != 0x2e)) {\n                var_4h = 0;\n            }\n            else {\n                var_4h = 1;\n            }\n            if (*0x425bc4 != 0) {\n                var_10h = 0x4;\n                iVar9 = 4;\n            }\n            if (uVar3 < '\\0') {\n                var_18h = (puVar7 & 0x3f) + *0x425b78;\n                var_10h = puVar7 & 0x40;\n                var_14h = arg_8h_00;\n                fcn.00405ff8(0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", var_18h, arg_8h_00, var_10h);\n                if (*arg_8h_00 == 0) {\n                    fcn.00406133(arg_8h_00, var_ch);\n                    goto code_r0x004062d8;\n                }\ncode_r0x004062dd:\n                if (var_ch == 0x1a) {\n                    sub.KERNEL32.dll_lstrcatA();\n                }\n            }\n            else {\n                if (puVar7 == 0x25) {\n                    var_10h = 0x400;\n                    var_18h = 0x406265;\n                    var_14h = arg_8h_00;\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n                }\n                else {\n                    if (puVar7 == 0x24) {\n                        var_10h = 0x400;\n                        var_18h = 0x406278;\n                        var_14h = arg_8h_00;\n                        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)();\n                        iVar9 = 0;\n                    }\n                    while (iVar9 != 0) {\n                        iVar9 = iVar9 + -1;\n                        if ((*0x425b44 != NULL) && (var_4h != 0)) {\n                            var_10h = arg_8h_00;\n                            var_14h = NULL;\n                            var_18h = NULL;\n                            iVar4 = (**0x425b44)(*0x425b48, (&fcn.00406133::var_18h)[iVar9]);\n                            if (iVar4 == 0) break;\n                        }\n                        var_10h = &fcn.00406133::ppidl;\n                        var_14h = (&fcn.00406133::var_18h)[iVar9];\n                        var_18h = *0x425b48;\n                        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)();\n                        if (iVar4 == 0) {\n                            var_14h = ppidl;\n                            var_18h = 0x4062c2;\n                            var_10h = arg_8h_00;\n                            iVar4 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)();\n                            var_18h = ppidl;\n                            (*_sym.imp.ole32.dll_CoTaskMemFree)();\n                            if (iVar4 != 0) break;\n                        }\n                        *arg_8h_00 = 0;\n                    }\n                }\ncode_r0x004062d8:\n                if (*arg_8h_00 != 0) goto code_r0x004062dd;\n            }\ncode_r0x004062ee:\n            fcn.0040637c(arg_8h_00);\n        }\n        else if (uVar1 == 3) {\n            if (uVar8 == 0x1d) {\n                fcn.0040606f(arg_8h_00, *0x425b48);\n            }\n            else {\n                fcn.00406111(arg_8h_00, uVar8 * 0x400 + 0x426000);\n            }\n            if (uVar8 - 0x15 < 7) goto code_r0x004062ee;\n        }\n        else if (uVar1 == 1) {\n            fcn.00406133(arg_8h_00, -1 - uVar8);\n        }\n        iVar4 = sub.KERNEL32.dll_lstrlenA();\n        arg_8h_00 = arg_8h_00 + iVar4;\n        puVar5 = puVar5 + 3;\n    } while( true );\n}\n",
        "token_count": 1711
    },
    "0040637c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040637c(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    \n    if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n    }\n    if ((*param_1 != 0) && (in_EAX = fcn.00405c0e(param_1),  in_EAX != 0)) {\n        param_1 = param_1 + 2;\n    }\n    pcVar2 = _sym.imp.USER32.dll_CharNextA;\n    uVar1 = *param_1;\n    uVar3 = in_EAX & 0xffffff00 | uVar1;\n    puVar7 = param_1;\n    puVar6 = param_1;\n    while (uVar1 != 0) {\n        if ((0x1f < uVar3) && (pcVar4 = fcn.00405bcc(\"*?|<>/\\\":\", uVar3),  *pcVar4 == '\\0')) {\n            iVar5 = (*pcVar2)(puVar7);\n            fcn.00405d5d(puVar6, puVar7, iVar5 - puVar7);\n            puVar6 = (*pcVar2)(puVar6);\n        }\n        puVar7 = (*pcVar2)(puVar7);\n        uVar1 = *puVar7;\n        uVar3 = puVar7 & 0xffffff00 | uVar1;\n    }\n    *puVar6 = 0;\n    while( true ) {\n        puVar6 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, puVar6);\n        if ((*puVar6 != 0x20) && (*puVar6 != 0x5c)) break;\n        *puVar6 = 0;\n        if (puVar6 <= param_1) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 519
    },
    "00406516": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406516(int32_t lpString1, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    int32_t ARG_0;\n    \n    ARG_0 = lpString1;\n    arg_ch = arg_ch / 3;\n    uVar2 = 0;\n    bVar1 = arg_ch < arg_14h;\n    if (bVar1) {\n        arg_14h = arg_ch - 1;\n    }\n    if (arg_14h != 0) {\n        do {\n            (*_sym.imp.USER32.dll_wsprintfA)(ARG_0, \"%02x%c\", *(uVar2 + arg_10h), -(uVar2 != arg_14h - 1) & 0x20);\n            ARG_0 = ARG_0 + 3;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_14h);\n    }\n    if (bVar1) {\n        sub.KERNEL32.dll_lstrcatA(lpString1, 0x40ac04);\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "00404af5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404af5(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (arg_ch == 1) {\n        fcn.004058b4(0x3fb, arg_14h);\n        (*pcVar1)(arg_8h, 0x466, 1, arg_14h);\n    }\n    if (arg_ch == 2) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (iVar2 = fcn.0040140b(7),  iVar2 != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        (*pcVar1)(arg_8h, 0x465, 0, uVar3);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "00405ff8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ff8(uint hKey, uint lpcbData, uint lpValueName, uchar *lpType, int32_t samDesired)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = lpType;\n    *lpType = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, lpcbData, 0, -(samDesired != 0) & 0x100 | 0x20019, &samDesired)\n    ;\n    if (iVar2 == 0) {\n        lpcbData = 0x400;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(samDesired, lpValueName, 0, &lpType, puVar1, &lpcbData);\n        if ((iVar2 != 0) || ((lpType != 0x1 && (lpType != 0x2)))) {\n            *puVar1 = 0;\n        }\n        puVar1[0x3ff] = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(samDesired);\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "00404755": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid __cdecl fcn.00404755(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    char extraout_AH;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint *arg_10h_00;\n    int32_t iVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint *var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    code *var_34h;\n    uint *var_30h;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar4 = _sym.imp.USER32.dll_GetDlgItem;\n    var_20h = *0x42050c;\n    var_4h = *(*0x42050c + 0x38);\n    puVar7 = *(*0x42050c + 0x3c) * 0x400 + 0x426000;\n    if (arg_ch == 0x40b) {\n        fcn.004058b4(0x3fb, puVar7);\n        fcn.0040637c(puVar7);\n        fcn.00403a71();\n        iVar2 = (*pcVar4)(arg_8h, 0x3f0);\n        if (iVar2 == 0) goto code_r0x00404ae0;\n        *0x4242c0 = (*_sym.imp.USER32.dll_IsDlgButtonChecked)(arg_8h, 0x3f0);\n    }\n    if (arg_ch == 0x110) {\n        var_8h = (*pcVar4)(arg_8h, 0x3fb);\n        (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        if (extraout_AH < '\\0') {\n            uVar3 = (*pcVar4)(arg_8h, 0x3f0);\n            fcn.00404317(arg_8h, 8, 0xffffffe0);\n            (*_sym.imp.USER32.dll_ShowWindow)(uVar3, 8);\n        }\n        iVar2 = fcn.00405c0e(puVar7);\n        if ((iVar2 != 0) && (iVar2 = fcn.00405c3a(puVar7),  iVar2 == 0)) {\n            fcn.00405ba1(puVar7);\n        }\n        *0x425318 = arg_8h;\n        (*_sym.imp.USER32.dll_SetWindowTextA)(var_8h, puVar7);\n        var_38h = *(arg_14h + 0x34);\n        var_3ch = 0x1;\n        var_40h = arg_8h;\n        var_44h = 0x40483e;\n        fcn.00404317();\n        var_44h = *(arg_14h + 0x30);\n        var_48h = 0x14;\n        fcn.00404317(arg_8h);\n        fcn.0040434c(var_8h);\n        pcVar4 = fcn.004065e9(7);\n        if (pcVar4 == NULL) goto code_r0x00404ae0;\n        (*pcVar4)(var_8h, 1);\n    }\n    iVar2 = var_4h;\n    if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            if (arg_10h >> 0x10 != 0x300) goto code_r0x00404ae0;\n            arg_ch = 0x40f;\n        }\n        if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar8 = &fcn.00404755::var_44h;\n            for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n            var_48h = arg_8h;\n            var_40h = 0x421530;\n            var_34h = fcn.00404af5;\n            var_30h = puVar7;\n            var_3ch = fcn.00406133(0x421118, iVar2);\n            var_38h = 0x41;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderA)(&fcn.00404755::var_48h);\n            if (iVar2 == 0) {\n                arg_ch = 0x40f;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                var_48h = puVar7;\n                fcn.00405ba1();\n                if ((*(*0x425b50 + 0x11c) != 0) && (puVar7 == 0x42b400)) {\n                    uVar3 = 0;\n                    fcn.00406133(0, *(*0x425b50 + 0x11c));\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x4242e0, 0x421530);\n                    if (iVar2 != 0) {\n                        var_48h = puVar7;\n                        sub.KERNEL32.dll_lstrcatA(uVar3, 0x4242e0);\n                    }\n                }\n                *0x421520 = *0x421520 + 1;\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x3fb, puVar7);\n            }\n        }\n    }\n    if ((arg_ch == 0x40f) || (arg_ch == 0x405)) {\n        var_4h = 0;\n        var_8h = 0;\n        fcn.004058b4(0x3fb, puVar7);\n        iVar2 = fcn.00405c8f(puVar7);\n        if (iVar2 == 0) {\n            var_4h = 1;\n        }\n        fcn.00406111(0x420d10, puVar7);\n        puVar6 = NULL;\n        var_38h = 0;\n        var_ch = fcn.004065e9();\n        if (var_ch != NULL) {\n            do {\n                var_3ch = &fcn.00404755::var_14h;\n                var_40h = &fcn.00404755::var_1ch;\n                var_44h = &fcn.00404755::var_28h;\n                var_48h = 0x420d10;\n                iVar2 = (*var_ch)();\n                if (iVar2 != 0) {\n                    var_ch = 0xa;\n                    uVar1 = var_24h << 0x16;\n                    var_24h = var_24h >> 10;\n                    var_8h = 1;\n                    puVar7 = var_28h >> 10 | uVar1;\n                    goto code_r0x00404a4c;\n                }\n                if (puVar6 != NULL) {\n                    *puVar6 = 0;\n                }\n                var_38h = 0x420d10;\n                var_3ch = 0x4049bf;\n                puVar6 = fcn.00405be8();\n                *puVar6 = 0;\n                puVar6 = puVar6 + -1;\n                *puVar6 = 0x5c;\n            } while (puVar6 != 0x420d10);\n        }\n        var_40h = 0x420d10;\n        var_44h = 0x4049d5;\n        var_3ch = puVar7;\n        fcn.00406111();\n        var_44h = 0x420d10;\n        var_48h = 0x4049db;\n        puVar6 = fcn.00405c3a();\n        if (puVar6 != NULL) {\n            *puVar6 = 0;\n        }\n        var_48h = &fcn.00404755::var_24h;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                          (0x420d10, &fcn.00404755::var_10h, &fcn.00404755::var_18h, &fcn.00404755::var_ch);\n        puVar7 = arg_8h;\n        if (iVar2 != 0) {\n            var_40h = var_10h * var_18h;\n            var_38h = 0x400;\n            var_3ch = var_ch;\n            var_44h = 0x404a14;\n            puVar7 = (*_sym.imp.KERNEL32.dll_MulDiv)();\n            var_8h = 1;\n        }\ncode_r0x00404a4c:\n        puVar8 = 0x5;\n        var_3ch = 0x404a53;\n        arg_10h_00 = fcn.00404c10();\n        if ((var_8h != 0) && (puVar7 < arg_10h_00)) {\n            var_4h = 2;\n        }\n        if (*(*0x42531c + 0x10) != 0) {\n            var_40h = 0xfffffffb;\n            var_44h = 0x3ff;\n            var_48h = 0x404a7b;\n            var_3ch = arg_10h_00;\n            fcn.00404b5b(0x3ff, 0xfffffffb, arg_10h_00);\n            if (var_8h == 0) {\n                var_48h = 0x4204f8;\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x400);\n                puVar8 = arg_8h;\n            }\n            else {\n                puVar8 = 0x400;\n                var_48h = puVar7;\n                fcn.00404b5b(0x400, 0xfffffffc, puVar7);\n            }\n        }\n        *0x425be4 = var_4h;\n        if (var_4h == 0) {\n            puVar8 = 0x7;\n            var_4h = fcn.0040140b();\n        }\n        if ((*(var_20h + 0x14) & 0x400) != 0) {\n            var_4h = 0;\n        }\n        fcn.00404339(var_4h == 0, puVar8);\n        if ((var_4h == 0) && (*0x421520 == 0)) {\n            fcn.004046ea();\n        }\n        *0x421520 = 0;\n    }\ncode_r0x00404ae0:\n    fcn.0040437e(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 2614
    },
    "00406088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406088(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char cVar6;\n    int32_t iVar7;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    var_4h = 1;\n    cVar2 = '\\n';\n    cVar6 = '9';\n    if (*arg_8h == 0x2d) {\n        arg_8h = arg_8h + 1;\n        var_4h = -1;\n    }\n    puVar3 = arg_8h;\n    if (*arg_8h == 0x30) {\n        puVar3 = arg_8h + 1;\n        uVar1 = *puVar3;\n        if (('/' < uVar1) && (uVar1 < '8')) {\n            cVar2 = '\\b';\n            cVar6 = '7';\n        }\n        if ((uVar1 & 0xdf) == 0x58) {\n            cVar2 = '\\x10';\n            puVar3 = arg_8h + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if ((uVar4 < 0x30) || (cVar6 < uVar4)) {\n            if ((cVar2 != '\\x10') || (((uVar4 & 0xffffffdf) < 0x41 || (0x46 < (uVar4 & 0xffffffdf))))) {\n                return var_4h * iVar7;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        iVar7 = cVar2 * iVar7 + iVar5;\n    } while( true );\n}\n",
        "token_count": 446
    },
    "00402eb9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key",
            "delete registry key"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402eb9(uint hKey, uint lpSubKey, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10ch;\n    uint phkResult;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, lpSubKey, 0, *0x425bf0 | 8, &phkResult);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegEnumKeyA;\n    if (iVar1 == 0) {\n        do {\n            iVar1 = (*pcVar2)(phkResult, 0, &var_10ch, 0x105);\n            if (iVar1 != 0) break;\n            if (arg_10h != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n                goto code_r0x00402f4a;\n            }\n            iVar1 = fcn.00402eb9(phkResult, &var_10ch, 0);\n        } while (iVar1 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        pcVar2 = fcn.004065e9(2);\n        if (pcVar2 == NULL) {\n            if ((*0x425bf0 != 0) || (iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(hKey, lpSubKey),  iVar1 != 0)) {\ncode_r0x00402f4a:\n                iVar1 = 1;\n            }\n        }\n        else {\n            iVar1 = (*pcVar2)(hKey, lpSubKey, *0x425bf0, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 399
    },
    "00402fbe": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402fbe(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_40h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n        arg_ch = 0x113;\n    }\n    if (arg_ch == 0x113) {\n        iVar2 = *0x40c0e0;\n        if (*0x4200f0 <= *0x40c0e0) {\n            iVar2 = *0x4200f0;\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar2, 100, *0x4200f0);\n        (*_sym.imp.USER32.dll_wsprintfA)(&var_40h, \"verifying installer: %d%%\", uVar1);\n        (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, &var_40h);\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x406, &var_40h);\n    }\n    return 0;\n}\n",
        "token_count": 270
    },
    "00404b5b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b5b(uint nIDDlgItem, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint arg_ch_00;\n    int8_t iVar6;\n    uint uVar7;\n    char *pcVar8;\n    uint *arg_8h;\n    uint var_40h;\n    uint var_20h;\n    \n    iVar6 = 0x14;\n    arg_ch_00 = 0xffffffdc;\n    if (arg_10h < 0x100000) {\n        iVar6 = 10;\n        arg_ch_00 = 0xffffffdd;\n    }\n    if (arg_10h < 0x400) {\n        iVar6 = 0;\n        arg_ch_00 = 0xffffffde;\n    }\n    if (arg_10h < 0xffff3333) {\n        arg_10h = arg_10h + (1 << iVar6) / 0x14;\n    }\n    uVar1 = fcn.00406133(&var_20h, 0xffffffdf);\n    arg_8h = &var_40h;\n    uVar2 = fcn.00406133(arg_8h, arg_ch_00);\n    uVar5 = ((arg_10h & 0xffffff) * 10 >> iVar6) % 10;\n    arg_10h = arg_10h >> iVar6;\n    pcVar8 = \"%u.%u%s%s\";\n    uVar7 = 0x421530;\n    iVar3 = fcn.00406133(0x421530, arg_ch);\n    iVar4 = sub.KERNEL32.dll_lstrlenA(0x421530, uVar7, arg_ch, pcVar8, arg_10h, uVar5, uVar2, arg_8h, arg_ch_00, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfA)(iVar3 + iVar4);\n    sub.USER32.dll_SetDlgItemTextA(*0x425318, nIDDlgItem, 0x421530);\n    return;\n}\n",
        "token_count": 485
    },
    "00401299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401299(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x425b6c != 0)) {\n        puVar2 = *0x425b68 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x106;\n        } while (uVar3 < *0x425b6c);\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00402e79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402e79(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = param_1;\n    if (param_1 < 0) {\n        uVar1 = -param_1;\n    }\n    uVar2 = fcn.00406133((uVar1 >> 4) * 0x400 + 0x40ac10, *(*0x40c010 + (uVar1 & 0xf) * 4));\n    if (param_1 < 0) {\n        fcn.0040637c(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 148
    },
    "00402f6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402f6e(int32_t param_1)\n\n{\n    if (param_1 == 0) {\n        param_1 = *0x425bc4 + -0x7fffffff;\n    }\n    return param_1;\n}\n",
        "token_count": 58
    },
    "00403d77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403d77(void)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    \n    uVar4 = 0xffff;\n    uVar1 = fcn.00406088(0x42c000);\n    do {\n        if (*0x425b84 != 0) {\n            puVar3 = *(*0x425b50 + 100) * *0x425b84 + *0x425b80;\n            iVar5 = *0x425b84;\n            do {\n                puVar3 = puVar3 - *(*0x425b50 + 100);\n                iVar5 = iVar5 + -1;\n                if (((*puVar3 ^ uVar1) & uVar4) == 0) {\n                    *0x425320 = *(puVar3 + 1);\n                    *0x425be8 = *(puVar3 + 3);\n                    *0x42531c = puVar3 + 5;\n                    if (*0x42531c != NULL) {\n                        fcn.0040606f(0x42c000, *puVar3);\n                        uVar2 = fcn.00406133(0x425340, 0xfffffffe);\n                        (*_sym.imp.USER32.dll_SetWindowTextA)(*0x421110, uVar2);\n                        piVar6 = *0x425b68;\n                        for (iVar5 = *0x425b6c; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            if (*piVar6 != 0) {\n                                fcn.00406133(piVar6 + 6, *piVar6);\n                            }\n                            piVar6 = piVar6 + 0x106;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar5 != 0);\n        }\n        if (uVar4 == 0xffff) {\n            uVar4 = 0x3ff;\n        }\n        else {\n            uVar4 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 476
    },
    "00404317": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404317(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00406133(0, param_3);\n    sub.USER32.dll_SetDlgItemTextA(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 88
    },
    "0040442b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040442b(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch, *0x420504 + arg_8h, arg_10h);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    *arg_14h = iVar1;\n    *0x420504 = *0x420504 + iVar1;\n    return 0;\n}\n",
        "token_count": 132
    },
    "0040470e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040470e(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.00404317(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 1000, *(arg_14h + 0x3c) * 0x400 + 0x426000);\n    }\n    fcn.0040437e(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 148
    },
    "00405ba1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00405ba1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, iVar1 + param_1);\n    if (*pcVar2 != '\\\\') {\n        sub.KERNEL32.dll_lstrcatA(param_1, 0x40a28c);\n    }\n    return param_1;\n}\n",
        "token_count": 118
    },
    "00405be8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00405be8(char *param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = param_1 + iVar1;\n    do {\n        if (*pcVar2 == '\\\\') break;\n        pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, pcVar2);\n    } while (param_1 < pcVar2);\n    *pcVar2 = '\\0';\n    return pcVar2 + 1;\n}\n",
        "token_count": 129
    },
    "00405dd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00405dd1(uchar *arg_8h, uint lpPathName)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar1 = arg_8h;\n    iVar4 = 100;\n    do {\n        iVar4 = iVar4 + -1;\n        arg_8h = *0x40ab38;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        arg_8h._0_3_ = CONCAT12(arg_8h._2_1_ + uVar2 % 0x1a, arg_8h._0_2_);\n        arg_8h = arg_8h & 0xff000000 | arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(lpPathName, &arg_8h, 0, puVar1);\n        if (iVar3 != 0) {\n            return puVar1;\n        }\n    } while (iVar4 != 0);\n    *puVar1 = 0;\n    return NULL;\n}\n",
        "token_count": 255
    },
    "0040606f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040606f(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfA)(param_1, 0x408324, param_2);\n    return;\n}\n",
        "token_count": 50
    },
    "00406594": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406594(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    *0x424ae0 = 0;\n    iVar1 = sub.KERNEL32.dll_lstrlenA(0x424ae0, param_1, &stack0x00000008);\n    (*_sym.imp.USER32.dll_wvsprintfA)(iVar1 + 0x424ae0);\n    fcn.00406415(0);\n    return;\n}\n",
        "token_count": 101
    },
    "00405da2": {
        "rules": [
            "get file attributes",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00405da2(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(unaff_retaddr, param_1, 1, 0, param_2, -(uVar1 != 0xffffffff) & uVar1, 0);\n    return;\n}\n",
        "token_count": 111
    },
    "0040586f": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040586f(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    int32_t lpProcessAttributes;\n    uint hObject;\n    \n    *0x422d38 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, lpCommandLine, 0, 0, 0, 0, 0, 0, 0x422d38, &lpProcessAttributes);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar1 = lpProcessAttributes;\n    }\n    return iVar1;\n}\n",
        "token_count": 143
    },
    "00402f83": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402f83(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00402e79(0x22, 0, *0x425bf0 | arg_8h, &arg_8h);\n    uVar1 = fcn.00402f6e(*(*0x40c010 + 4), uVar1);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(uVar1);\n    return ~-(iVar2 != 0) & arg_8h;\n}\n",
        "token_count": 142
    },
    "004039c1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004039c1(uint param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x4204fc; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_1);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004039dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004039dc(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x4204fc;\n    fcn.004039c1(0);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(piVar2[2]);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    *0x4204fc = NULL;\n    return;\n}\n",
        "token_count": 145
    },
    "00403a11": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00403a11(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x4204fc;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == param_1) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 94
    },
    "00405bcc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405bcc(char *param_1, char param_2)\n\n{\n    for (; (*param_1 != '\\0' && (*param_1 != param_2)); param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1)) {\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00405d07": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405d07(int32_t arg_8h, uint lpString2)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    while( true ) {\n        iVar4 = (*pcVar2)(arg_8h);\n        if (iVar4 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(iVar3 + arg_8h);\n        *(iVar3 + arg_8h) = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(arg_8h, lpString2);\n        *(iVar3 + arg_8h) = uVar1;\n        if (iVar4 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 247
    },
    "00405d5d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405d5d(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00406622": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406622(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "004066c9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004066c9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x80;\n    do {\n        iVar1 = iVar1 + -1;\n        *(iVar1 + param_1) = 0;\n    } while (iVar1 != 0);\n    *(param_1 + 0x78) = 0xffffffff;\n    *(param_1 + 0x68) = 1;\n    *(param_1 + 100) = 1;\n    *(param_1 + 0x60) = 1;\n    *(param_1 + 0x5c) = 1;\n    return;\n}\n",
        "token_count": 151
    },
    "004034fe": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nvoid fcn.004034fe(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.0040637c(0x42c400);\n    iVar1 = fcn.00405c0e(0x42c400);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.00405ba1(0x42c400);\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x42c400, 0);\n    fcn.00405dd1(0x42c000, 0x42c400);\n    return;\n}\n",
        "token_count": 131
    },
    "004065e9": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004065e9(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(param_1 * 8 + 0x40a910);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    if ((iVar2 == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1),  iVar2 == 0)) {\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, *(param_1 * 8 + 0x40a914));\n    return;\n}\n",
        "token_count": 149
    },
    "00405e1a": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405e1a(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 144
    }
}