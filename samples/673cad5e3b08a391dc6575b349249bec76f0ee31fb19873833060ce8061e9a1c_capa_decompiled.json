{
    "00401151": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t * fcn.00401151(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    \n    if (param_3 != 0) {\n        param_2 = param_2 & 0xffff;\n        puVar2 = param_1;\n        for (uVar1 = param_3 >> 1; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar2 = param_2 | param_2 << 0x10;\n            puVar2 = puVar2 + 1;\n        }\n        for (uVar1 = (param_3 & 1) != 0; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar2 = param_2;\n            puVar2 = puVar2 + 2;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 222
    },
    "00404192": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404192(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    arg_8h = arg_8h | 7;\n    if (((arg_8h <= arg_10h) && (arg_ch <= arg_10h - (arg_ch >> 1))) &&\n       (arg_ch = (arg_ch >> 1) + arg_ch,  arg_10h = arg_8h,  arg_8h < arg_ch)) {\n        arg_10h = arg_ch;\n    }\n    return arg_10h;\n}\n",
        "token_count": 136
    },
    "004041c3": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004041c3(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    arg_8h = arg_8h | 0xf;\n    if (((arg_8h <= arg_10h) && (arg_ch <= arg_10h - (arg_ch >> 1))) &&\n       (arg_ch = (arg_ch >> 1) + arg_ch,  arg_10h = arg_8h,  arg_8h < arg_ch)) {\n        arg_10h = arg_ch;\n    }\n    return arg_10h;\n}\n",
        "token_count": 138
    },
    "0040b5bb": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040b5bb(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0040b66d:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x0040b671:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0040b674:\n            cVar4 = fcn.0040baba(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0040b619:\n                arg_8h = 0x10;\n                goto code_r0x0040b674;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0040b62d;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0040b601;\n                }\n            }\ncode_r0x0040b67d:\n            cVar4 = fcn.0040b8d6();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.0040b87c();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0040b67d;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0040b62d:\n            cVar4 = fcn.0040ba27(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.0040bc9e();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0040b67d;\n            if (cVar4 == 'i') goto code_r0x0040b66d;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.0040bc0b();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.0040bc7f();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0040b619;\n            }\n            goto code_r0x0040b671;\n        }\ncode_r0x0040b601:\n        cVar4 = fcn.0040bcb6();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x0040b703;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x0040b703:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.0040af21(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.0040be4b(&var_4h, arg_ch, arg_14h);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.0040af21(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040bda6(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.0040af21(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1697
    },
    "00415570": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00415570(uint8_t **arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t *arg_ch;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.0040c396();\n        *puVar2 = 0x16;\n        fcn.0040c2bc();\n    }\n    else if (((arg_8h[3] >> 0xd & 1) != 0) && ((arg_8h[3] >> 0xc & 1) == 0)) {\n        if ((arg_8h[3] >> 1 & 1) == 0) {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 1;\n            if ((arg_8h[3] & 0x4c0) == 0) {\n                fcn.0041599f(arg_8h);\n            }\n            *arg_8h = arg_8h[1];\n            puVar3 = arg_8h[6];\n            arg_ch = arg_8h[1];\n            arg_8h_00 = fcn.004136ae(arg_8h);\n            puVar3 = fcn.0041f220(arg_8h_00, arg_ch, puVar3);\n            arg_8h[2] = puVar3;\n            puVar3 = arg_8h[2];\n            if ((puVar3 != NULL) && (puVar3 != 0xffffffff)) {\n                if ((arg_8h[3] & 6) == 0) {\n                    iVar4 = fcn.004136ae(arg_8h);\n                    if ((iVar4 == -1) || (iVar4 = fcn.004136ae(arg_8h),  iVar4 == -2)) {\n                        iVar4 = 0x431260;\n                    }\n                    else {\n                        iVar4 = fcn.004136ae(arg_8h);\n                        uVar5 = fcn.004136ae(arg_8h);\n                        iVar4 = *((iVar4 >> 6) * 4 + 0x458250) + (uVar5 & 0x3f) * 0x38;\n                    }\n                    if ((*(iVar4 + 0x28) & 0x82) == 0x82) {\n                        LOCK();\n                        arg_8h[3] = arg_8h[3] | 0x20;\n                    }\n                }\n                if (((arg_8h[6] == 0x200) && ((arg_8h[3] >> 6 & 1) != 0)) && ((arg_8h[3] & 0x100) == 0)) {\n                    arg_8h[6] = 0x1000;\n                }\n                arg_8h[2] = arg_8h[2] + -1;\n                uVar1 = **arg_8h;\n                *arg_8h = *arg_8h + 1;\n                return uVar1;\n            }\n            LOCK();\n            arg_8h[3] = arg_8h[3] | (puVar3 != NULL) * 8 + 8;\n            arg_8h[2] = NULL;\n        }\n        else {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 0x10;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 803
    },
    "0041557b": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nushort __cdecl fcn.0041557b(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uchar uVar7;\n    int32_t arg_ch;\n    \n    if (arg_8h == NULL) {\n        puVar4 = fcn.0040c396();\n        *puVar4 = 0x16;\n        fcn.0040c2bc();\n    }\n    else if (((arg_8h[3] >> 0xd & 1) != 0) && ((arg_8h[3] >> 0xc & 1) == 0)) {\n        if ((arg_8h[3] >> 1 & 1) == 0) {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 1;\n            if ((arg_8h[3] & 0x4c0U) == 0) {\n                fcn.0041599f(arg_8h);\n            }\n            iVar3 = arg_8h[2];\n            if (iVar3 != 1) {\n                uVar7 = 0;\n            }\n            else {\n                uVar7 = **arg_8h;\n            }\n            *arg_8h = arg_8h[1];\n            iVar5 = arg_8h[6];\n            arg_ch = arg_8h[1];\n            arg_8h_00 = fcn.004136ae(arg_8h);\n            iVar5 = fcn.0041f220(arg_8h_00, arg_ch, iVar5);\n            arg_8h[2] = iVar5;\n            iVar5 = arg_8h[2];\n            if (((iVar5 != 0) && (iVar5 != 1)) && (iVar5 != -1)) {\n                if ((arg_8h[3] & 6U) == 0) {\n                    iVar5 = fcn.004136ae(arg_8h);\n                    if ((iVar5 == -1) || (iVar5 = fcn.004136ae(arg_8h),  iVar5 == -2)) {\n                        iVar5 = 0x431260;\n                    }\n                    else {\n                        iVar5 = fcn.004136ae(arg_8h);\n                        uVar6 = fcn.004136ae(arg_8h);\n                        iVar5 = *((iVar5 >> 6) * 4 + 0x458250) + (uVar6 & 0x3f) * 0x38;\n                    }\n                    if ((*(iVar5 + 0x28) & 0x82) == 0x82) {\n                        LOCK();\n                        arg_8h[3] = arg_8h[3] | 0x20;\n                    }\n                }\n                if (((arg_8h[6] == 0x200) && ((arg_8h[3] >> 6 & 1) != 0)) && ((arg_8h[3] >> 8 & 1) == 0)) {\n                    arg_8h[6] = 0x1000;\n                }\n                if (iVar3 != 1) {\n                    uVar2 = **arg_8h;\n                    arg_8h[2] = arg_8h[2] + -2;\n                    *arg_8h = *arg_8h + 2;\n                    return uVar2;\n                }\n                uVar1 = **arg_8h;\n                arg_8h[2] = arg_8h[2] + -1;\n                *arg_8h = *arg_8h + 1;\n                return CONCAT11(uVar1, uVar7);\n            }\n            LOCK();\n            arg_8h[3] = arg_8h[3] | (iVar5 != 0) * 8 + 8;\n            arg_8h[2] = 0;\n        }\n        else {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 0x10;\n        }\n    }\n    return 0xffff;\n}\n",
        "token_count": 932
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040138b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.0040138b(uint *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint noname_6, \n            int32_t arg_24h)\n\n{\n    uint *arg_8h_00;\n    uint *var_1ch;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    if (arg_24h != 0) {\n        fcn.004029d6(0x42e5cc, 2);\n    }\n    (**(*arg_10h + 8))(&var_1ch, arg_ch);\n    arg_8h_00 = &var_1ch;\n    if (0xf < var_8h) {\n        arg_8h_00 = var_1ch;\n    }\n    fcn.004029d6(arg_8h_00, var_ch);\n    fcn.00402948();\n    *arg_8h = 0;\n    arg_8h[4] = 0;\n    arg_8h[5] = 0;\n    fcn.00402ac0(&arg_14h);\n    fcn.00402948();\n    return arg_8h;\n}\n",
        "token_count": 284
    },
    "00401576": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00401576(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    puVar1 = arg_8h;\n    if (arg_ch == 1) {\n        arg_8h = arg_8h & 0xffffff00;\n        *puVar1 = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0xf;\n        fcn.00403c64(0x15, arg_8h, \"iostream stream error\");\n    }\n    else {\n        uVar2 = fcn.00405e54(arg_ch);\n        fcn.0040207f(uVar2);\n    }\n    return puVar1;\n}\n",
        "token_count": 171
    },
    "0040171f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040171f(int32_t *param_1)\n\n{\n    uint unaff_ESI;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*param_1 == 0) {\n        fcn.0040454d(0);\n        if (*param_1 == 0) {\n            *0x457958 = *0x457958 + 1;\n            *param_1 = *0x457958;\n        }\n        fcn.004045a5();\n    }\n    fcn.00406578(unaff_ESI);\n    return;\n}\n",
        "token_count": 132
    },
    "004017b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004017b0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar1 = *(in_ECX + 4);\n    if (arg_8h < *(iVar1 + 0xc)) {\n        iVar2 = *(*(iVar1 + 8) + arg_8h * 4);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (*(iVar1 + 0x14) != '\\0') {\n        iVar1 = fcn.0040489a();\n        if (arg_8h < *(iVar1 + 0xc)) {\n            iVar2 = *(*(iVar1 + 8) + arg_8h * 4);\n        }\n        else {\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 214
    },
    "004018c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004018c8(int32_t *arg_8h, uint arg_ch)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    uint unaff_ESI;\n    uint var_38h;\n    \n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        ppcVar1 = fcn.00406586(0x44, unaff_ESI);\n        uVar2 = fcn.00401798();\n        uVar2 = fcn.0040164a(uVar2);\n        ppcVar1[1] = NULL;\n        *ppcVar1 = vtable.std::ctype_wchar_t_.0;\n        fcn.00401943(uVar2);\n        *arg_8h = ppcVar1;\n        fcn.004016a2();\n    }\n    return 2;\n}\n",
        "token_count": 194
    },
    "0040191a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040191a(code **param_1)\n\n{\n    *param_1 = vtable.std::ctype_wchar_t_.0;\n    if (param_1[4] != NULL) {\n        fcn.0040bffb(param_1[3]);\n    }\n    fcn.0040bffb(param_1[5]);\n    *param_1 = vtable.std::_Facet_base.0;\n    return;\n}\n",
        "token_count": 98
    },
    "00401b1b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00401b1b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x431014 ^ &stack0xfffffffc;\n    _var_14h = 0;\n    fcn.00405ff6(&var_ch, arg_8h, &var_14h, in_ECX + 0x18);\n    fcn.00406578(var_14h);\n    return;\n}\n",
        "token_count": 145
    },
    "00401be7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401be7(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    char *arg_8h_00;\n    uint var_1ch;\n    uint var_8h;\n    \n    *(in_ECX + 0xc) = arg_8h & 0x17;\n    uVar2 = *(in_ECX + 0x10) & arg_8h & 0x17;\n    if (uVar2 != 0) {\n        if (arg_ch == '\\0') {\n            if ((uVar2 & 4) == 0) {\n                arg_8h_00 = \"ios_base::failbit set\";\n                if ((uVar2 & 2) == 0) {\n                    arg_8h_00 = \"ios_base::eofbit set\";\n                }\n            }\n            else {\n                arg_8h_00 = \"ios_base::badbit set\";\n            }\n            arg_ch_00 = fcn.00401379(&var_8h, 1);\n            fcn.00401bbe(arg_8h_00, arg_ch_00);\n        }\n        else {\n            arg_ch_00 = 0;\n            arg_8h_00 = NULL;\n        }\n        fcn.004078ea(arg_8h_00, arg_ch_00);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 344
    },
    "00401f5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid fcn.00401f5c(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *arg_8h;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004221b9(0x28, 8);\n    *(unaff_EBP + -0x24) = arg_8h;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    fcn.00402800(arg_8h);\n    if (*(unaff_EBP + -0x34) != '\\0') {\n        piVar1 = *(*(*(*arg_8h + 4) + 0x30 + arg_8h) + 4);\n        *(unaff_EBP + -0x2c) = piVar1;\n        (**(*piVar1 + 4))();\n        uVar2 = fcn.00403a42(unaff_EBP + -0x30);\n        *(unaff_EBP + -0x20) = uVar2;\n        fcn.0040177f();\n        *(unaff_EBP + -4) = 0;\n        iVar3 = *(*arg_8h + 4) + arg_8h;\n        uVar2 = *(iVar3 + 0x38);\n        *(unaff_EBP + -0x30) = 0;\n        *(unaff_EBP + -0x2c) = uVar2;\n        (**(**(unaff_EBP + -0x20) + 0x18))\n                  (unaff_EBP + -0x30, *(unaff_EBP + -0x30), uVar2, iVar3, *(iVar3 + 0x40), *(unaff_EBX + 8), \n                   *(unaff_EBX + 0xc));\n        uVar2 = *(unaff_EBP + -0x1c);\n        if (*(unaff_EBP + -0x30) != '\\0') {\n            uVar2 = 4;\n        }\n        *(unaff_EBP + -0x1c) = uVar2;\n        *(unaff_EBP + -0x28) = uVar2;\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    uVar4 = 4;\n    if (*(arg_8h + *(*arg_8h + 4) + 0x38) != 0) {\n        uVar4 = 0;\n    }\n    fcn.00401be7(uVar4 | *(arg_8h + *(*arg_8h + 4) + 0xc) | *(unaff_EBP + -0x1c), 0);\n    fcn.004027e5();\n    fcn.004221a3();\n    return;\n}\n",
        "token_count": 778
    },
    "00402baf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00402baf(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h, uint arg_1ch, uint *****arg_20h\n            , uint32_t arg_24h)\n\n{\n    char cVar1;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    int32_t *piVar2;\n    uint *****arg_8h_00;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *****pppppuVar6;\n    int32_t *arg_8h_01;\n    int32_t *unaff_ESI;\n    uint *****pppppuVar7;\n    int32_t arg_1ch_00;\n    uint unaff_EDI;\n    uint32_t arg_1ch_01;\n    uint32_t uVar8;\n    uint *****pppppuStack84;\n    int32_t *piStack80;\n    int32_t *piStack76;\n    int32_t iStack72;\n    uint *****pppppuStack68;\n    uint32_t uStack64;\n    uint *****pppppuStack60;\n    uchar auStack56 [8];\n    uint32_t uStack48;\n    uint uStack44;\n    uint32_t uStack40;\n    uint32_t uStack12;\n    \n    uStack12 = *0x431014 ^ &pppppuStack84;\n    iStack72 = arg_ch;\n    pppppuStack68 = arg_20h;\n    uStack64 = arg_24h;\n    piStack76 = arg_18h;\n    if ((arg_24h == 0) || ((*arg_20h != '+' && (*arg_20h != '-')))) {\n        arg_1ch_01 = 0;\n    }\n    else {\n        arg_1ch_01 = 1;\n    }\n    if (((((arg_18h[5] & 0xe00U) == 0x800) && (arg_1ch_01 + 2 <= arg_24h)) && (*(arg_20h + arg_1ch_01) == '0')) &&\n       ((cVar1 = *(arg_20h + arg_1ch_01 + 1),  cVar1 == 'x' || (cVar1 == 'X')))) {\n        arg_1ch_01 = arg_1ch_01 + 2;\n    }\n    piStack80 = *(arg_18h[0xc] + 4);\n    (**(*piStack80 + 4))();\n    piVar2 = fcn.00403d89(&pppppuStack84);\n    fcn.0040177f();\n    uStack40 = 7;\n    pppppuStack60 = NULL;\n    uStack44 = 0;\n    uVar8 = uStack64;\n    fcn.0040288d(uStack64, 0);\n    arg_8h_00 = &pppppuStack68;\n    if (7 < uStack48) {\n        arg_8h_00 = pppppuStack68;\n    }\n    (**(*piVar2 + 0x2c))(piStack76, iStack72 + piStack76);\n    piVar2 = *(arg_18h[0xc] + 4);\n    (**(*piVar2 + 4))();\n    piVar3 = fcn.00403ad2(&stack0xffffff98);\n    arg_8h_01 = piVar3;\n    fcn.0040177f();\n    (**(*piVar3 + 0x14))(auStack56);\n    pppppuVar7 = &pppppuStack60;\n    if (0xf < uStack40) {\n        pppppuVar7 = pppppuStack60;\n    }\n    if ((*pppppuVar7 != '\\x7f') && ('\\0' < *pppppuVar7)) {\n        uVar4 = (**(*unaff_ESI + 0x10))();\n        cVar1 = *pppppuVar7;\n        uVar4 = uVar4 & 0xffff;\n        while (((cVar1 != '\\x7f' && (arg_18h = piVar2,  '\\0' < cVar1)) && (cVar1 < arg_8h_01 - arg_1ch_01))) {\n            arg_8h_01 = arg_8h_01 - cVar1;\n            fcn.0040356e(arg_8h_01, 1, uVar4);\n            if ('\\0' < *(pppppuVar7 + 1)) {\n                pppppuVar7 = pppppuVar7 + 1;\n            }\n            uVar4 = uVar8;\n            arg_18h = piVar2;\n            cVar1 = *pppppuVar7;\n        }\n    }\n    if (((arg_18h[9] < 0) || ((arg_18h[9] < 1 && (arg_18h[8] == 0)))) || (arg_18h[8] <= pppppuStack68)) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = arg_18h[8] - pppppuStack68;\n    }\n    pppppuVar7 = pppppuStack68;\n    if ((arg_18h[5] & 0x1c0U) == 0x40) {\n        pppppuVar6 = &pppppuStack84;\n        if (7 < uStack64) {\n            pppppuVar6 = pppppuStack84;\n        }\n        puVar5 = fcn.00402b76(arg_8h, &stack0xffffff94, arg_10h, arg_14h, pppppuVar6, arg_1ch_01);\n    }\n    else if ((arg_18h[5] & 0x1c0U) == 0x100) {\n        pppppuVar6 = &pppppuStack84;\n        if (7 < uStack64) {\n            pppppuVar6 = pppppuStack84;\n        }\n        puVar5 = fcn.00402b76(arg_8h, &stack0xffffff94, arg_10h, arg_14h, pppppuVar6, arg_1ch_01);\n        puVar5 = fcn.00402b46(arg_8h, &stack0xffffff94, *puVar5, puVar5[1], arg_1ch, arg_1ch_00);\n        arg_1ch_00 = 0;\n    }\n    else {\n        puVar5 = fcn.00402b46(arg_8h, &stack0xffffff94, arg_10h, arg_14h, arg_1ch, arg_1ch_00);\n        arg_1ch_00 = 0;\n        pppppuVar6 = &pppppuStack84;\n        if (7 < uStack64) {\n            pppppuVar6 = pppppuStack84;\n        }\n        puVar5 = fcn.00402b76(arg_8h, &stack0xffffff94, *puVar5, puVar5[1], pppppuVar6, arg_1ch_01);\n    }\n    pppppuVar6 = &pppppuStack84;\n    if (7 < uStack64) {\n        pppppuVar6 = pppppuStack84;\n    }\n    puVar5 = fcn.00402b76(arg_8h, &stack0xffffff94, *puVar5, puVar5[1], pppppuVar6 + arg_1ch_01 * 2, \n                          pppppuVar7 - arg_1ch_01);\n    arg_10h_00 = *puVar5;\n    arg_14h_00 = puVar5[1];\n    arg_18h[8] = 0;\n    arg_18h[9] = 0;\n    fcn.00402b46(arg_8h, unaff_EDI, arg_10h_00, arg_14h_00, arg_1ch, arg_1ch_00);\n    fcn.00402948();\n    if (7 < uStack64) {\n        if (0xfff < uStack64 * 2 + 2) {\n            fcn.0040129c(&stack0xffffffa4, &stack0xffffffa8);\n        }\n        fcn.004065b6(pppppuStack84);\n    }\n    fcn.00406578(arg_8h_00);\n    return;\n}\n",
        "token_count": 1941
    },
    "00402f4f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00402f4f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t ******arg_18h, uint arg_1ch, \n            uint *******arg_20h, int32_t ******arg_24h)\n\n{\n    char cVar1;\n    uint arg_14h_00;\n    ushort uVar2;\n    uint8_t **ppuVar3;\n    int32_t *piVar4;\n    uint *******arg_8h_00;\n    uint32_t uVar5;\n    uint *puVar6;\n    int32_t *******pppppppiVar7;\n    uint uVar8;\n    int32_t unaff_EBX;\n    int32_t ******arg_8h_01;\n    int32_t *unaff_ESI;\n    uint *******pppppppuVar9;\n    int32_t arg_1ch_00;\n    int32_t ******arg_1ch_01;\n    bool bVar10;\n    int32_t ******ppppppiVar11;\n    int32_t ******ppppppiVar12;\n    int32_t ******ppppppiStack108;\n    int32_t ******ppppppiStack104;\n    int32_t *******apppppppiStack100 [2];\n    int32_t ******ppppppiStack92;\n    int32_t ****ppppiStack88;\n    int32_t *******pppppppiStack84;\n    uint uStack80;\n    int32_t iStack76;\n    uint16_t auStack72 [2];\n    uint *******pppppppuStack68;\n    uint32_t uStack64;\n    uint *******pppppppuStack60;\n    uchar auStack56 [8];\n    uint32_t uStack48;\n    uint uStack44;\n    uint32_t uStack40;\n    uint32_t uStack12;\n    \n    uStack12 = *0x431014 ^ &ppppppiStack108;\n    uStack80 = arg_ch;\n    ppppppiStack104 = arg_24h;\n    apppppppiStack100[0] = arg_18h;\n    pppppppuStack68 = arg_20h;\n    if ((arg_24h == NULL) || ((*arg_20h != '+' && (*arg_20h != '-')))) {\n        arg_1ch_01 = NULL;\n    }\n    else {\n        arg_1ch_01 = 0x1;\n    }\n    if ((arg_18h[5] & 0x3000) == 0x3000) {\n        uVar8 = 0x42e720;\n        if (((arg_1ch_01 + 2U <= arg_24h) && (*(arg_20h + arg_1ch_01) == '0')) &&\n           ((cVar1 = *(arg_20h + arg_1ch_01 + 1U),  cVar1 == 'x' || (cVar1 == 'X')))) {\n            arg_1ch_01 = arg_1ch_01 + 2U;\n        }\n    }\n    else {\n        uVar8 = 0x42e71c;\n    }\n    pppppppiStack84 = fcn.0040ab00(arg_20h, uVar8);\n    auStack72[0] = 0x2e;\n    ppuVar3 = fcn.0040bf3f();\n    auStack72[0] = auStack72[0] & 0xff00 | **ppuVar3;\n    iStack76 = fcn.0040ab00(arg_20h, auStack72);\n    ppppiStack88 = arg_18h[0xc][1];\n    (*(*ppppiStack88)[1])();\n    piVar4 = fcn.00403d89(&ppppppiStack92);\n    fcn.0040177f();\n    uStack40 = 7;\n    ppppppiVar12 = NULL;\n    pppppppuStack60 = NULL;\n    uStack44 = 0;\n    ppppppiVar11 = ppppppiStack104;\n    fcn.0040288d(ppppppiStack104, 0);\n    arg_8h_00 = &pppppppuStack68;\n    if (7 < uStack48) {\n        arg_8h_00 = pppppppuStack68;\n    }\n    (**(*piVar4 + 0x2c))(iStack76, unaff_EBX + iStack76);\n    pppppppiStack84 = arg_18h[0xc][1];\n    (*(*pppppppiStack84)[1])();\n    piVar4 = fcn.00403ad2(&ppppiStack88);\n    fcn.0040177f();\n    (**(*piVar4 + 0x14))(auStack56);\n    uVar5 = (**(*piVar4 + 0x10))();\n    arg_8h_01 = apppppppiStack100[0];\n    ppppppiStack92 = uVar5 & 0xffff;\n    bVar10 = apppppppiStack100[0] == ppppppiVar11;\n    if (!bVar10) {\n        uVar2 = (**(*unaff_ESI + 0xc))();\n        pppppppiVar7 = &pppppppiStack84;\n        if (7 < uStack64) {\n            pppppppiVar7 = pppppppiStack84;\n        }\n        *(pppppppiVar7 + arg_8h_01 * 2) = uVar2;\n        bVar10 = arg_8h_01 == ppppppiVar11;\n    }\n    if (bVar10) {\n        arg_8h_01 = ppppppiStack108;\n    }\n    pppppppuVar9 = &pppppppuStack60;\n    if (0xf < uStack40) {\n        pppppppuVar9 = pppppppuStack60;\n    }\n    cVar1 = *pppppppuVar9;\n    apppppppiStack100[0] = arg_8h_01;\n    ppppppiVar11 = ppppppiStack92;\n    while (((cVar1 != '\\x7f' && (arg_18h = ppppppiVar12,  '\\0' < cVar1)) && (cVar1 < arg_8h_01 - arg_1ch_01))) {\n        arg_8h_01 = arg_8h_01 - cVar1;\n        fcn.0040356e(arg_8h_01, 1, ppppppiVar11);\n        if ('\\0' < *(pppppppuVar9 + 1)) {\n            pppppppuVar9 = pppppppuVar9 + 1;\n        }\n        arg_18h = ppppppiVar12;\n        ppppppiVar11 = ppppppiStack104;\n        cVar1 = *pppppppuVar9;\n    }\n    if (((arg_18h[9] < 0) || ((arg_18h[9] < 1 && (arg_18h[8] == NULL)))) || (arg_18h[8] <= pppppppuStack68)) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = arg_18h[8] - pppppppuStack68;\n    }\n    apppppppiStack100[0] = pppppppuStack68;\n    if ((arg_18h[5] & 0x1c0) == 0x40) {\n        pppppppiVar7 = &pppppppiStack84;\n        if (7 < uStack64) {\n            pppppppiVar7 = pppppppiStack84;\n        }\n        puVar6 = fcn.00402b76(arg_8h, &stack0xffffff84, arg_10h, arg_14h, pppppppiVar7, arg_1ch_01);\n    }\n    else if ((arg_18h[5] & 0x1c0) == 0x100) {\n        pppppppiVar7 = &pppppppiStack84;\n        if (7 < uStack64) {\n            pppppppiVar7 = pppppppiStack84;\n        }\n        puVar6 = fcn.00402b76(arg_8h, &stack0xffffff84, arg_10h, arg_14h, pppppppiVar7, arg_1ch_01);\n        puVar6 = fcn.00402b46(arg_8h, &stack0xffffff84, *puVar6, puVar6[1], arg_1ch, arg_1ch_00);\n        arg_1ch_00 = 0;\n    }\n    else {\n        puVar6 = fcn.00402b46(arg_8h, &stack0xffffff84, arg_10h, arg_14h, arg_1ch, arg_1ch_00);\n        arg_1ch_00 = 0;\n        pppppppiVar7 = &pppppppiStack84;\n        if (7 < uStack64) {\n            pppppppiVar7 = pppppppiStack84;\n        }\n        puVar6 = fcn.00402b76(arg_8h, &stack0xffffff84, *puVar6, puVar6[1], pppppppiVar7, arg_1ch_01);\n    }\n    pppppppiVar7 = &pppppppiStack84;\n    if (7 < uStack64) {\n        pppppppiVar7 = pppppppiStack84;\n    }\n    apppppppiStack100[0] = apppppppiStack100[0] - arg_1ch_01;\n    puVar6 = fcn.00402b76(arg_8h, &stack0xffffff84, *puVar6, puVar6[1], pppppppiVar7 + arg_1ch_01 * 2, \n                          apppppppiStack100[0]);\n    uVar8 = *puVar6;\n    arg_14h_00 = puVar6[1];\n    arg_18h[8] = NULL;\n    arg_18h[9] = NULL;\n    fcn.00402b46(arg_8h, ppppppiStack104, uVar8, arg_14h_00, arg_1ch, arg_1ch_00);\n    fcn.00402948();\n    if (7 < uStack64) {\n        ppppppiStack92 = uStack64 * 2 + 2;\n        apppppppiStack100[0] = pppppppiStack84;\n        if (0xfff < ppppppiStack92) {\n            fcn.0040129c(apppppppiStack100, &ppppppiStack92);\n        }\n        fcn.004065b6(apppppppiStack100[0]);\n    }\n    fcn.00406578(arg_8h_00);\n    return;\n}\n",
        "token_count": 2495
    },
    "0040338c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040338c(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *arg_8h;\n    uint32_t uVar3;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406909(0x1c);\n    *(unaff_EBP + -0x28) = arg_8h;\n    piVar1 = *(*(*arg_8h + 4) + 0x38 + arg_8h);\n    if (piVar1 != NULL) {\n        fcn.00402800(arg_8h);\n        if (*(unaff_EBP + -0x1c) != '\\0') {\n            *(unaff_EBP + -0x24) = 0;\n            *(unaff_EBP + -4) = 0;\n            iVar2 = (**(*piVar1 + 0x34))();\n            uVar4 = 4;\n            uVar3 = 0;\n            if (iVar2 == -1) {\n                uVar3 = uVar4;\n            }\n            *(unaff_EBP + -0x24) = uVar3;\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*(arg_8h + *(*arg_8h + 4) + 0x38) != 0) {\n                uVar4 = 0;\n            }\n            fcn.00401be7(uVar4 | *(arg_8h + *(*arg_8h + 4) + 0xc) | uVar3, 0);\n        }\n        fcn.004027e5();\n    }\n    fcn.0040685b();\n    return;\n}\n",
        "token_count": 432
    },
    "0040344a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040344a(void)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004068d3(4);\n    *(unaff_EBP + -4) = 0;\n    iVar1 = *(*extraout_ECX + 4);\n    if ((*(iVar1 + 0xc + extraout_ECX) == 0) && ((*(iVar1 + 0x14 + extraout_ECX) & 2) != 0)) {\n        iVar1 = (**(**(iVar1 + 0x38 + extraout_ECX) + 0x34))();\n        if (iVar1 == -1) {\n            fcn.00401be7(*(extraout_ECX + *(*extraout_ECX + 4) + 0xc) | 4, 0);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00406838();\n    return;\n}\n",
        "token_count": 232
    },
    "004036f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004036f2(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    \n    if ((*param_1[8] == 0) || (piVar1 = param_1[0xc],  *piVar1 < 1)) {\n        param_2 = (**(*param_1 + 0xc))(param_2);\n    }\n    else {\n        *piVar1 = *piVar1 + -1;\n        puVar2 = *param_1[8];\n        *param_1[8] = puVar2 + 1;\n        *puVar2 = param_2;\n    }\n    return param_2 & 0xffff;\n}\n",
        "token_count": 172
    },
    "00403fc7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403fc7(int32_t *arg_8h, uint arg_ch)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_EDI;\n    code **ppcVar4;\n    uint var_38h;\n    \n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        ppcVar1 = fcn.00406586(0x18, unaff_EDI);\n        ppcVar4 = ppcVar1;\n        for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *ppcVar4 = NULL;\n            ppcVar4 = ppcVar4 + 1;\n        }\n        uVar2 = fcn.00401798();\n        uVar2 = fcn.0040164a(uVar2);\n        ppcVar1[1] = NULL;\n        *ppcVar1 = vtable.std::numpunct_wchar_t_.0;\n        fcn.004041f4(uVar2, 1);\n        *arg_8h = ppcVar1;\n        fcn.004016a2();\n    }\n    return 4;\n}\n",
        "token_count": 276
    },
    "00404026": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404026(int32_t *arg_8h, uint arg_ch)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    uint unaff_ESI;\n    uint var_38h;\n    \n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        ppcVar1 = fcn.00406586(8, unaff_ESI);\n        uVar2 = fcn.00401798();\n        fcn.0040164a(uVar2);\n        ppcVar1[1] = NULL;\n        *ppcVar1 = \n        vtable.std::num_put_wchar_t__class_std::ostreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0;\n        *arg_8h = ppcVar1;\n        fcn.004016a2();\n    }\n    return 4;\n}\n",
        "token_count": 199
    },
    "00404070": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404070(uint arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t *arg_8h_00;\n    int32_t unaff_EBP;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.004068d3(0x18);\n    *(unaff_EBP + -0x18) = arg_8h_00;\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00402800(arg_8h_00);\n    if (*(unaff_EBP + -0x20) == '\\0') {\n        uVar2 = 4;\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        iVar1 = fcn.004036f2(*(unaff_EBP + 8));\n        uVar2 = 0;\n        if (iVar1 == -1) {\n            uVar2 = 4;\n        }\n        *(unaff_EBP + -0x1c) = uVar2;\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    uVar3 = 4;\n    if (*(arg_8h_00 + *(*arg_8h_00 + 4) + 0x38) != 0) {\n        uVar3 = 0;\n    }\n    fcn.00401be7(uVar3 | *(arg_8h_00 + *(*arg_8h_00 + 4) + 0xc) | uVar2, 0);\n    fcn.004027e5();\n    fcn.00406838();\n    return;\n}\n",
        "token_count": 420
    },
    "004041f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004041f4(uint noname_0, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint in_stack_ffffff84;\n    uchar auStack120 [48];\n    uchar auStack72 [4];\n    int32_t iStack68;\n    ulong uStack64;\n    uint auStack56 [11];\n    uint32_t uStack12;\n    \n    uStack12 = *0x431014 ^ &stack0xffffff84;\n    iStack68 = fcn.0040bf3f();\n    puVar1 = fcn.00405f83(auStack120);\n    puVar4 = auStack56;\n    for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(in_ECX + 8) = 0;\n    *(in_ECX + 0x10) = 0;\n    *(in_ECX + 0x14) = 0;\n    fcn.00405f83(auStack120);\n    iVar3 = iStack68;\n    uVar2 = 0x42e5cf;\n    if (arg_ch == '\\0') {\n        uVar2 = *(iStack68 + 8);\n    }\n    uVar2 = fcn.00404330(uVar2, 0, auStack120);\n    *(in_ECX + 8) = uVar2;\n    uVar2 = fcn.004017f0(\"false\", 0, auStack56);\n    *(in_ECX + 0x10) = uVar2;\n    uVar2 = fcn.004017f0(\"true\", 0, auStack56);\n    *(in_ECX + 0x14) = uVar2;\n    if (arg_ch == '\\0') {\n        *(in_ECX + 0xc) = **(iVar3 + 0x30);\n        iStack68._0_2_ = **(iVar3 + 0x34);\n    }\n    else {\n        auStack72[0] = 0x2e;\n        iStack68 = 0;\n        uStack64 = 0;\n        fcn.00404397(&iStack68, auStack72, 1, &uStack64, auStack56);\n        *(in_ECX + 0xc) = iStack68;\n        auStack72[0] = 0x2c;\n        iStack68 = 0;\n        uStack64 = 0;\n        fcn.00404397(&iStack68, auStack72, 1, &uStack64, auStack56);\n    }\n    *(in_ECX + 0xe) = iStack68;\n    fcn.00406578(in_stack_ffffff84);\n    return;\n}\n",
        "token_count": 677
    },
    "00404d8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404d8a(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x422398;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x431014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = vtable.std::basic_filebuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    if (param_1[0x13] != NULL) {\n        fcn.00405274(uVar1);\n    }\n    if (*(param_1 + 0x12) != '\\0') {\n        fcn.00405301();\n    }\n    fcn.00404e2c();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 218
    },
    "00405155": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405155(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x48) = arg_ch == 1;\n    *(in_ECX + 0x3e) = 0;\n    fcn.0040518e();\n    *(in_ECX + 0x4c) = arg_8h;\n    uVar2 = *0x457a44;\n    uVar1 = *0x457a40;\n    *(in_ECX + 0x38) = 0;\n    *(in_ECX + 0x40) = uVar1;\n    *(in_ECX + 0x44) = uVar2;\n    return;\n}\n",
        "token_count": 180
    },
    "00405301": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405301(uint32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (*(param_1 + 0x4c) != 0) {\n        fcn.00405274();\n        cVar1 = fcn.00404ffc();\n        uVar3 = -(cVar1 != '\\0') & param_1;\n        iVar2 = fcn.0040cf33(*(param_1 + 0x4c));\n        if (iVar2 == 0) goto code_r0x0040532f;\n    }\n    uVar3 = 0;\ncode_r0x0040532f:\n    fcn.00405155(0, 2);\n    return uVar3;\n}\n",
        "token_count": 178
    },
    "004055ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004055ac(uint arg_8h, uint arg_ch)\n\n{\n    ushort uVar1;\n    int32_t in_ECX;\n    \n    fcn.004051cb();\n    *(in_ECX + 0x3c) = 0;\n    *(in_ECX + 0x38) = arg_8h;\n    uVar1 = fcn.00404138(0x20);\n    *(in_ECX + 0x40) = uVar1;\n    if (*(in_ECX + 0x38) == 0) {\n        fcn.00401be7(*(in_ECX + 0xc) | 4, 0);\n    }\n    if (arg_ch != '\\0') {\n        fcn.0040618c(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00406bed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00406bed(void)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar1 != NULL) && (*piVar1 == 0x5a4d)) && (piVar2 = *(piVar1 + 0x1e) + piVar1,  *piVar2 == 0x4550)) &&\n       ((piVar1 = 0x10b,  *(piVar2 + 6) == 0x10b && (0xe < piVar2[0x1d])))) {\n        return CONCAT31(1, piVar2[0x3a] != 0);\n    }\n    return piVar1 & 0xffffff00;\n}\n",
        "token_count": 187
    },
    "00409b08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00409b08(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    code *pcVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    int32_t var_64h;\n    int32_t var_60h;\n    int32_t var_58h;\n    uint *var_54h;\n    uint var_50h;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t *var_40h;\n    uint32_t *var_3ch;\n    uint32_t *var_34h;\n    uint32_t *var_30h;\n    uint var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    uint32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_18h = var_18h & 0xffffff00;\n    var_8h = fcn.0040aa80(arg_ch, arg_14h, arg_18h);\n    if ((var_8h < -1) || (arg_18h[1] <= var_8h)) goto code_r0x00409ea7;\n    if (((*arg_8h != -0x1f928c9d) || (arg_8h[4] != 3)) ||\n       ((((arg_8h[5] != 0x19930520 && (arg_8h[5] != 0x19930521)) && (arg_8h[5] != 0x19930522)) || (arg_8h[7] != 0)))) {\n        var_4h = arg_10h;\n        goto code_r0x00409c56;\n    }\n    iVar4 = fcn.0040978c();\n    if (*(iVar4 + 0x10) == 0) {\n        return;\n    }\n    iVar4 = fcn.0040978c();\n    arg_8h = *(iVar4 + 0x10);\n    iVar4 = fcn.0040978c();\n    var_18h = CONCAT31(var_18h._1_3_, 1);\n    var_4h = *(iVar4 + 0x14);\n    if ((arg_8h == NULL) ||\n       ((((*arg_8h == -0x1f928c9d && (arg_8h[4] == 3)) &&\n         ((arg_8h[5] == 0x19930520 || ((arg_8h[5] == 0x19930521 || (arg_8h[5] == 0x19930522)))))) && (arg_8h[7] == 0))))\n    goto code_r0x00409ea7;\n    iVar4 = fcn.0040978c();\n    if (*(iVar4 + 0x1c) == 0) {\ncode_r0x00409c56:\n        var_30h = arg_18h;\n        var_2ch = 0;\n        if (((*arg_8h == -0x1f928c9d) && (arg_8h[4] == 3)) &&\n           ((arg_8h[5] == 0x19930520 || ((arg_8h[5] == 0x19930521 || (arg_8h[5] == 0x19930522)))))) {\n            if (arg_18h[3] != 0) {\n                fcn.00407956(&var_40h, &var_30h, var_8h, arg_14h, arg_18h, arg_20h);\n                var_28h = var_40h;\n                var_ch = var_3ch;\n                if (var_3ch < var_34h) {\n                    var_1ch = var_3ch * 0x14;\n                    do {\n                        iVar4 = var_8h;\n                        puVar6 = *(*var_28h + 0x10) + var_1ch;\n                        puVar7 = &var_64h;\n                        var_ch = var_3ch;\n                        for (iVar5 = 5; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            *puVar7 = *puVar6;\n                            puVar6 = puVar6 + 1;\n                            puVar7 = puVar7 + 1;\n                        }\n                        if (((var_64h <= iVar4) && (iVar4 <= var_60h)) && (var_10h = 0,  var_58h != 0)) {\n                            iVar4 = arg_8h[7];\n                            var_24h = **(iVar4 + 0xc);\n                            var_20h = *(iVar4 + 0xc) + 1;\n                            var_14h = var_54h;\n                            do {\n                                var_50h = *var_14h;\n                                uStack80 = var_14h[1];\n                                uStack76 = var_14h[2];\n                                uStack72 = var_14h[3];\n                                piVar8 = var_20h;\n                                var_3ch = var_ch;\n                                for (iVar5 = var_24h; var_ch = var_3ch,  0 < iVar5; iVar5 = iVar5 + -1) {\n                                    iVar4 = fcn.00409fe3(&var_50h, *piVar8, iVar4);\n                                    if (iVar4 != 0) {\n                                        fcn.00409a88(arg_8h, arg_ch, var_4h, arg_14h, arg_18h, &var_50h, *piVar8, \n                                                     &var_64h, arg_20h, arg_24h);\n                                        var_3ch = var_ch;\n                                        goto code_r0x00409d91;\n                                    }\n                                    iVar4 = arg_8h[7];\n                                    piVar8 = piVar8 + 1;\n                                    var_3ch = var_ch;\n                                }\n                                var_10h = var_10h + 1;\n                                var_14h = var_14h + 4;\n                            } while (var_10h != var_58h);\n                        }\ncode_r0x00409d91:\n                        var_3ch = var_3ch + 1;\n                        var_1ch = var_1ch + 0x14;\n                        var_ch = var_3ch;\n                    } while (var_3ch < var_34h);\n                }\n            }\n            if (arg_1ch != '\\0') {\n                fcn.00407d20(arg_8h);\n            }\n            if (0x19930520 < (*arg_18h & 0x1fffffff)) {\n                if (arg_18h[7] != 0) {\n                    if ((arg_18h[8] >> 2 & 1) != 0) goto code_r0x00409dea;\n                    cVar3 = fcn.0040a51d(arg_8h, arg_18h[7]);\n                    if (cVar3 != '\\0') goto code_r0x00409e36;\n                    goto code_r0x00409e6b;\n                }\n                if (((arg_18h[8] >> 2 & 1) != 0) && (arg_20h == 0)) {\ncode_r0x00409dea:\n                    iVar4 = fcn.0040978c();\n                    *(iVar4 + 0x10) = arg_8h;\n                    iVar4 = fcn.0040978c();\n                    *(iVar4 + 0x14) = var_4h;\n                    goto code_r0x00409e46;\n                }\n            }\n        }\n        else if (arg_18h[3] != 0) {\n            if (arg_1ch != '\\0') goto code_r0x00409ea7;\n            fcn.00409ead(arg_8h, arg_ch, var_4h, arg_14h, arg_18h, var_8h, arg_20h, arg_24h);\n        }\ncode_r0x00409e36:\n        iVar4 = fcn.0040978c();\n        if (*(iVar4 + 0x1c) == 0) {\n            return;\n        }\n    }\n    else {\n        iVar4 = fcn.0040978c();\n        var_ch = *(iVar4 + 0x1c);\n        iVar4 = fcn.0040978c();\n        *(iVar4 + 0x1c) = 0;\n        cVar3 = fcn.0040a51d(arg_8h, var_ch);\n        puVar2 = var_ch;\n        if (cVar3 != '\\0') goto code_r0x00409c56;\n        arg_24h = 0;\n        arg_18h = puVar2;\n        if (0 < *var_ch) {\n            do {\n                cVar3 = fcn.0040a1a6(0x45744c);\n                if (cVar3 != '\\0') goto code_r0x00409e4b;\n                arg_24h = arg_24h + 0x10;\n                var_10h = var_10h + 1;\n            } while (var_10h < *puVar2);\n        }\ncode_r0x00409e46:\n        fcn.0041180a();\ncode_r0x00409e4b:\n        fcn.00407d20(arg_8h);\n        fcn.0040a18e();\n        fcn.004078ea(&var_3ch, 0x42fbe4);\ncode_r0x00409e6b:\n        iVar4 = fcn.0040978c();\n        *(iVar4 + 0x10) = arg_8h;\n        iVar4 = fcn.0040978c();\n        *(iVar4 + 0x14) = var_4h;\n        if (arg_24h == 0) {\n            arg_24h = arg_ch;\n        }\n        fcn.00407b49(arg_24h, arg_8h);\n        fcn.0040a41d(arg_ch, arg_14h, arg_18h);\n        arg_8h_00 = fcn.0040a5da(arg_18h);\n        fcn.0040a394(arg_8h_00);\n    }\ncode_r0x00409ea7:\n    fcn.0040eae9();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 2499
    },
    "0040a318": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a318(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x30);\n    fcn.00407bf1(*(unaff_EBP + -0x34));\n    iVar1 = fcn.0040978c();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.0040978c();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x3c);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x40) == 0 && (unaff_EBX != 0)))) {\n        iVar1 = fcn.00407e26(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00407d20(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 376
    },
    "0040a435": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040a435(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    code *pcVar2;\n    int32_t arg_10h_01;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00406d00(0x42fb00, 0x10);\n    arg_10h_01 = fcn.0040aa80(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = arg_10h_01;\n    iVar3 = fcn.0040978c();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (arg_10h_01 != *(unaff_EBP + 0x14)) {\n        if ((arg_10h_01 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= arg_10h_01)) goto code_r0x0040a517;\n        iVar1 = *(iVar3 + 8);\n        arg_10h_00 = *(iVar1 + arg_10h_01 * 8);\n        *(unaff_EBP + -0x20) = arg_10h_00;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + arg_10h_01 * 8) != 0) {\n            fcn.0040aa9d(*(unaff_EBP + 8), iVar3, arg_10h_00);\n            fcn.0040a5f0(*(*(iVar3 + 8) + 4 + arg_10h_01 * 8), *(unaff_EBP + 8), 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        arg_10h_01 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = arg_10h_01;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040a503();\n    if (arg_10h_01 == *(unaff_EBP + 0x14)) {\n        fcn.0040aa9d(*(unaff_EBP + 8), *(unaff_EBP + 0x10), arg_10h_01);\n        *in_FS_OFFSET = *(unaff_EBP + -0x10);\n        return;\n    }\ncode_r0x0040a517:\n    fcn.0040eae9();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 732
    },
    "0040a503": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a503(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040978c();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.0040978c();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0040ab46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040ab46(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x431014 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.0040c396();\n        *puVar1 = 0x16;\n        fcn.0040c2bc();\n        goto code_r0x0040ac9b;\n    }\n    fcn.0040afcf(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.0040af92(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    var_ch = 0;\n    iVar2 = fcn.0040b239();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x0040ac73;\ncode_r0x0040acbe:\n                    *(puVar1 + arg_14h + -1) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x0040acbe;\n                    goto code_r0x0040ac73;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x0040ac73:\n            *(puVar1 + var_468h) = 0;\n        }\n    }\n    fcn.0040b062();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x0040ac9b:\n    fcn.00406578(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 814
    },
    "0040b239": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.0040b239(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.0040bd27();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0040b259:\n            puVar2 = fcn.0040c396();\n            *puVar2 = 0x16;\n            fcn.0040c2bc();\n        }\n        else {\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0040b2ff:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0040b312;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.0040b121(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x40b33d\n                    switch(uVar3) {\n                    case 0:\n                        cVar1 = fcn.0040b39a();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0040b2ff;\n                    case 2:\n                        cVar1 = fcn.0040b35d();\n                        break;\n                    case 3:\n                        cVar1 = fcn.0040b7ed();\n                        break;\n                    case 4:\n                        goto code_r0x0040b2d9;\n                    case 5:\n                        cVar1 = fcn.0040b447();\n                        break;\n                    case 6:\n                        cVar1 = fcn.0040b46d();\n                        break;\n                    case 7:\n                        cVar1 = fcn.0040b5bb(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0040b26c;\n                    default:\n                        goto code_r0x0040b259;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0040b2ff;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x0040b312:\n                cVar1 = fcn.0040bd42();\n            } while (cVar1 != '\\0');\n        }\n    }\ncode_r0x0040b26c:\n    return 0xffffffff;\ncode_r0x0040b2d9:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0040b2ff;\n}\n",
        "token_count": 971
    },
    "0040b46d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040b46d(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.0040c396();\n        *puVar6 = 0x16;\n        fcn.0040c2bc();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0040b66d:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0040b671:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0040b674:\n            cVar4 = fcn.0040baba(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0040b619:\n                arg_8h = 0x10;\n                goto code_r0x0040b674;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0040b62d;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0040b601;\n                }\n            }\ncode_r0x0040b67d:\n            cVar4 = fcn.0040b8d6();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.0040b87c();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0040b67d;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0040b62d:\n            cVar4 = fcn.0040ba27(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.0040bc9e();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0040b67d;\n            if (cVar4 == 'i') goto code_r0x0040b66d;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.0040bc0b();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.0040bc7f();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0040b619;\n            }\n            goto code_r0x0040b671;\n        }\ncode_r0x0040b601:\n        cVar4 = fcn.0040bcb6();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x0040b703;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x0040b703:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.0040af21(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.0040be4b(&uStack8, arg_ch, arg_14h);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.0040af21(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040bda6(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.0040af21(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2381
    },
    "0040baba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040baba(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.0040b820(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.0040c396();\n                *puVar2 = 0x16;\n                uVar3 = fcn.0040c2bc();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x0040bb70;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x0040bb70;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x0040bb70:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.0040ad54(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 0;\n    if (iVar1 == 8) {\n        fcn.0040ae93(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.0040ae20(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1118
    },
    "0040ef04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040ef04(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if (*(param_1 + 0x14) != '\\0') {\n        *(param_1 + 0x14) = 0;\n    }\n    puVar1 = fcn.0040c396();\n    *puVar1 = 0x22;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x14) = 0;\n    return 0x22;\n}\n",
        "token_count": 122
    },
    "0041222f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041222f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x45862c, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0040c396();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0040c31d(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00416d22": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nulong __cdecl fcn.00416d22(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00406d00(0x430068, 0x10);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.0040c396();\n        *puVar1 = 0x16;\n        fcn.0040c2bc();\n        uVar2 = 0xffffffffffffffff;\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.0040c81c(*(unaff_EBP + 8));\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.004167d1(*(unaff_EBP + 8));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -0x1c) = uVar2 >> 0x20;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004167c7(0x430068);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 358
    },
    "004167d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.004167d1(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.0040c396();\n        *puVar2 = 0x16;\n        fcn.0040c2bc();\n        return -1;\n    }\n    arg_8h_00 = fcn.004136ae(arg_8h);\n    if (arg_8h[2] < 0) {\n        arg_8h[2] = 0;\n    }\n    iVar5 = fcn.00416ec0(arg_8h_00, 0, 0, 1);\n    arg_10h = iVar5 >> 0x20;\n    if ((iVar5 < 0x100000000) && (iVar5 < 0)) {\ncode_r0x004168fc:\n        iVar7 = -1;\n    }\n    else {\n        if ((arg_8h[3] & 0xc0U) == 0) {\n            return iVar5 - arg_8h[2];\n        }\n        iVar3 = arg_8h_00 >> 6;\n        iVar4 = (arg_8h_00 & 0x3f) * 0x38;\n        uVar1 = *(iVar4 + 0x29 + *(iVar3 * 4 + 0x458250));\n        var_4h = var_4h & 0xffffff00 | uVar1;\n        iVar7 = *arg_8h - arg_8h[1];\n        if ((arg_8h[3] & 3U) == 0) {\n            if ((arg_8h[3] >> 2 & 1) == 0) {\n                puVar2 = fcn.0040c396();\n                *puVar2 = 0x16;\n                goto code_r0x004168fc;\n            }\n        }\n        else {\n            if ((uVar1 == 1) && ((*(iVar4 + 0x2d + *(iVar3 * 4 + 0x458250)) & 2) != 0)) {\n                iVar5 = fcn.00416b0e(arg_8h, iVar5, arg_10h);\n                return iVar5;\n            }\n            if (*(iVar4 + 0x28 + *(iVar3 * 4 + 0x458250)) < '\\0') {\n                iVar6 = fcn.00416ca4(arg_8h[1], *arg_8h, var_4h);\n                iVar7 = iVar6 + iVar7;\n            }\n        }\n        if (iVar5 != 0) {\n            if ((arg_8h[3] & 1U) == 0) {\n                if (uVar1 == 1) {\n                    iVar7 = fcn.00421cd0(iVar7, 2, 0);\n                }\n                iVar7 = iVar7 + iVar5;\n            }\n            else {\n                iVar7 = fcn.00416955(arg_8h, iVar5, arg_10h, iVar7, iVar7 >> 0x20);\n            }\n        }\n    }\n    return iVar7;\n}\n",
        "token_count": 804
    },
    "00418d3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00418d3e(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_19h;\n    \n    if (*(unaff_EBP + -0x19) != '\\0') {\n        fcn.0040c432(3);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0041b555": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b555(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack24;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0041b492:\n            if (arg_ch != 0) {\n                piVar3 = arg_8h;\n                iVar5 = arg_ch;\n                if ((arg_14h == 0) || (arg_10h != NULL)) {\n                    do {\n                        if (*piVar3 == 0) break;\n                        piVar3 = piVar3 + 1;\n                        iVar5 = iVar5 + -1;\n                    } while (iVar5 != 0);\n                    if (iVar5 != 0) {\n                        if (arg_14h == -1) {\n                            iVar4 = arg_10h - piVar3;\n                            do {\n                                iVar1 = *(iVar4 + piVar3);\n                                *piVar3 = iVar1;\n                                piVar3 = piVar3 + 1;\n                                if (iVar1 == 0) break;\n                                iVar5 = iVar5 + -1;\n                            } while (iVar5 != 0);\n                        }\n                        else {\n                            iVar4 = arg_14h;\n                            if (arg_14h != 0) {\n                                do {\n                                    iVar1 = *arg_10h;\n                                    arg_10h = arg_10h + 1;\n                                    *piVar3 = iVar1;\n                                    piVar3 = piVar3 + 1;\n                                    if ((iVar1 == 0) || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                                    iVar4 = iVar4 + -1;\n                                } while (iVar4 != 0);\n                            }\n                            if (iVar4 == 0) {\n                                *piVar3 = 0;\n                            }\n                        }\n                        if (iVar5 != 0) {\n                            return 0;\n                        }\n                        if (arg_14h == -1) {\n                            arg_8h[arg_ch + -1] = 0;\n                            return 0x50;\n                        }\n                        *arg_8h = 0;\n                        puVar2 = fcn.0040c396();\n                        uStack24 = 0x22;\n                        goto code_r0x0041b4b0;\n                    }\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0041b492;\n    puVar2 = fcn.0040c396();\n    uStack24 = 0x16;\ncode_r0x0041b4b0:\n    *puVar2 = uStack24;\n    fcn.0040c2bc();\n    return uStack24;\n}\n",
        "token_count": 695
    },
    "0042161e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 fcn.0042161e(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x42dc50 | *0x42dcc0;\n        dVar7 = SUB168(in_XMM0, 0) & *0x42dc58 | *0x42dcc8;\n        uVar1 = SUB82(*0x42dc70 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x42dc88 & dVar7;\n        dVar9 = (*0x42dc80 & dVar6) * *(uVar1 + 0x42e160) - *0x42dc60;\n        dVar6 = (dVar6 - (*0x42dc80 & dVar6)) * *(uVar1 + 0x42e160);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x42e168);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x42e168) - *0x42dc68);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x42dd18 * dVar11 + *0x42dd28) * dVar11 + *0x42dd38) * dVar11 * dVar11 +\n                   ((*0x42dd10 * dVar7 + *0x42dd20) * dVar7 + *0x42dd30) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x42dd40 * dVar7 + *(uVar1 + 0x42dd58) + dVar10 * *0x42dc98 + (dVar8 & *(iVar5 + 0x42dca8)) +\n                   *(uVar1 + 0x42dd50) + dVar9 + dVar10 * *0x42dc90 + (dVar6 & *(iVar5 + 0x42dca0));\n        }\n        dStack12 = -(*0x42dcd0 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x42dcc0 == (param_1 & *0x42dc50 | *0x42dcc0)) {\n                    return *0x42dcf8;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x42dc50;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x0042182a;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x42dce0);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x42dcf0;\ncode_r0x0042182a:\n    fcn.0041fdc3(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1019
    },
    "00421d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.00421d80(void)\n\n{\n    uint32_t uVar1;\n    float10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    if (1 < *0x457eac) {\n        return in_ST0;\n    }\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    uVar1 = in_ST0 < 0;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack28 < 0) {\n        if (uStack24 < 0x401e) {\n            return (uStack28 >> (0x3eU - uStack24 & 0x1f) ^ -uVar1) + uVar1;\n        }\n        if (((uStack24 < 0x401f) && (uVar1 != 0)) && (uStack28 == 0x80000000)) {\n            return uStack28;\n        }\n    }\n    return 0x80000000;\n}\n",
        "token_count": 261
    },
    "0042207b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0042207b(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    \n    if (0 < *0x457eac) {\n        auVar1 = pshuflw(ZEXT216(arg_ch), ZEXT216(arg_ch), 0);\n        do {\n            if ((arg_8h & 0xfff) < 0xff1) {\n                uVar3 = SUB162(auVar1, 0);\n                uVar4 = SUB162(auVar1 >> 0x10, 0);\n                auVar2 = CONCAT214(-(*0x42e58e == arg_8h[7]), \n                                   CONCAT212(-(*0x42e58c == arg_8h[6]), \n                                             CONCAT210(-(*0x42e58a == arg_8h[5]), \n                                                       CONCAT28(-(*0x42e588 == arg_8h[4]), \n                                                                CONCAT26(-(*0x42e586 == arg_8h[3]), \n                                                                         CONCAT24(-(*0x42e584 == arg_8h[2]), \n                                                                                  CONCAT22(-(*0x42e582 == arg_8h[1]), \n                                                                                           -(*0x42e580 == *arg_8h)))))))\n                                  ) |\n                         CONCAT214(-(arg_8h[7] == uVar4), \n                                   CONCAT212(-(arg_8h[6] == uVar3), \n                                             CONCAT210(-(arg_8h[5] == uVar4), \n                                                       CONCAT28(-(arg_8h[4] == uVar3), \n                                                                CONCAT26(-(arg_8h[3] == uVar4), \n                                                                         CONCAT24(-(arg_8h[2] == uVar3), \n                                                                                  CONCAT22(-(arg_8h[1] == uVar4), \n                                                                                           -(*arg_8h == uVar3))))))));\n                uVar3 = SUB161(auVar2 >> 7, 0) & 1 | (SUB161(auVar2 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar2 >> 0x17, 0) & 1) << 2 | (SUB161(auVar2 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar2 >> 0x27, 0) & 1) << 4 | (SUB161(auVar2 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar2 >> 0x37, 0) & 1) << 6 | (SUB161(auVar2 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar2 >> 0x47, 0) & 1) << 8 | (SUB161(auVar2 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar2 >> 0x57, 0) & 1) << 10 | (SUB161(auVar2 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar2 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar2 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar2 >> 0x77, 0) & 1) << 0xe | SUB161(auVar2 >> 0x7f, 0) << 0xf;\n                if (uVar3 != 0) goto code_r0x00422117;\n                iVar5 = 0x10;\n            }\n            else {\n                if (*arg_8h == arg_ch) {\n                    return arg_8h;\n                }\n                if (*arg_8h == 0) {\n                    return NULL;\n                }\n                iVar5 = 2;\n            }\n            arg_8h = arg_8h + iVar5;\n        } while( true );\n    }\n    uVar3 = *arg_8h;\n    while ((uVar3 != 0 && (uVar3 != arg_ch))) {\n        arg_8h = arg_8h + 1;\n        uVar3 = *arg_8h;\n    }\ncode_r0x004220b6:\n    return (uVar3 != arg_ch) - 1 & arg_8h;\ncode_r0x00422117:\n    iVar5 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n        }\n    }\n    arg_8h = arg_8h + iVar5;\n    uVar3 = *arg_8h;\n    goto code_r0x004220b6;\n}\n",
        "token_count": 1134
    },
    "00404f35": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404f35(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00404e4d();\n    if ((arg_8h & 1) != 0) {\n        fcn.004065b6(in_ECX + -8);\n    }\n    return in_ECX + -8;\n}\n",
        "token_count": 84
    },
    "004050ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004050ef(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x38;\n    fcn.0040686a();\n    piVar1 = *(unaff_EBP + 8);\n    iVar3 = 0;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.00406586(0x34, uVar4);\n        *(unaff_EBP + -0x10) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 != 0) {\n            uVar4 = fcn.00401798();\n            uVar4 = fcn.0040164a(uVar4);\n            iVar3 = fcn.00404d13(uVar4, 0);\n        }\n        *piVar1 = iVar3;\n        if (iVar2 != 0) {\n            fcn.004016a2();\n        }\n    }\n    fcn.00406838();\n    return;\n}\n",
        "token_count": 323
    },
    "0040bc7f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bc7f(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.0040baba(8, 0);\n    return;\n}\n",
        "token_count": 93
    },
    "00415989": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00415989(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    fcn.004136ae(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.0040c396();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                cVar1 = fcn.00415904(arg_ch);\n                arg_ch[2] = 0;\n                if (cVar1 == '\\0') goto code_r0x004155ad;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) && (cVar1 = fcn.00413713(arg_ch),  cVar1 == '\\0')) {\n                fcn.0041599f(arg_ch);\n            }\n            cVar1 = fcn.0041576a(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                arg_8h = 0xffffffff;\n            }\n            else {\n                arg_8h = arg_8h & 0xff;\n            }\n            return arg_8h;\n        }\n        puVar2 = fcn.0040c396();\n        *puVar2 = 0x22;\n    }\ncode_r0x004155ad:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffffffff;\n}\n",
        "token_count": 471
    },
    "00415994": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00415994(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    fcn.004136ae(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.0040c396();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                cVar1 = fcn.00415904(arg_ch);\n                arg_ch[2] = 0;\n                if (cVar1 == '\\0') goto code_r0x0041569d;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) && (cVar1 = fcn.00413713(arg_ch),  cVar1 == '\\0')) {\n                fcn.0041599f(arg_ch);\n            }\n            cVar1 = fcn.00415836(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                arg_8h = 0xffff;\n            }\n            else {\n                arg_8h = arg_8h & 0xffff;\n            }\n            return arg_8h;\n        }\n        puVar2 = fcn.0040c396();\n        *puVar2 = 0x22;\n    }\ncode_r0x0041569d:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffff;\n}\n",
        "token_count": 472
    },
    "00416485": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00416485(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00406d00(0x430048, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0040c383();\n        *puVar1 = 0;\n        puVar1 = fcn.0040c396();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x458450)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x458250) + 0x28 + iVar3) & 1) != 0) {\n                fcn.0041a7d9(lpCriticalSection);\n                uVar2 = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x458250) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.0040c396();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0040c383();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.00416577(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00416544();\n                goto code_r0x00416567;\n            }\n        }\n        puVar1 = fcn.0040c383();\n        *puVar1 = 0;\n        puVar1 = fcn.0040c396();\n        *puVar1 = 9;\n        fcn.0040c2bc();\n    }\n    uVar2 = 0xffffffff;\ncode_r0x00416567:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 660
    },
    "0040129c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.0040129c(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    \n    *param_2 = *param_2 + 0x23;\n    iVar1 = *(*param_1 + -4);\n    if ((*param_1 - iVar1) - 4U < 0x20) {\n        *param_1 = iVar1;\n        return;\n    }\n    fcn.0040c258(0, 0, 0, 0, 0);\n    fcn.0040c2e9(0, 0, 0, 0, 0);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 172
    },
    "00403a42": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a42(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint unaff_ESI;\n    int32_t *var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x431014 ^ &stack0xfffffffc;\n    fcn.0040454d(0);\n    piVar2 = *0x458650;\n    var_ch = *0x458650;\n    arg_8h_00 = fcn.0040171f();\n    iVar3 = fcn.004017b0(arg_8h_00);\n    if ((iVar3 == 0) && (piVar2 == NULL)) {\n        iVar3 = fcn.00404026(&var_ch, arg_8h);\n        piVar2 = var_ch;\n        if (iVar3 == -1) {\n            fcn.004015f5();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.0040486e(var_ch);\n        (**(*piVar2 + 4))();\n        *0x458650 = piVar2;\n    }\n    fcn.004045a5();\n    fcn.00406578(unaff_ESI);\n    return;\n}\n",
        "token_count": 311
    },
    "00403ad2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403ad2(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint unaff_ESI;\n    int32_t *var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x431014 ^ &stack0xfffffffc;\n    fcn.0040454d(0);\n    piVar2 = *0x458648;\n    var_ch = *0x458648;\n    arg_8h_00 = fcn.0040171f();\n    iVar3 = fcn.004017b0(arg_8h_00);\n    if ((iVar3 == 0) && (piVar2 == NULL)) {\n        iVar3 = fcn.00403fc7(&var_ch, arg_8h);\n        piVar2 = var_ch;\n        if (iVar3 == -1) {\n            fcn.004015f5();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.0040486e(var_ch);\n        (**(*piVar2 + 4))();\n        *0x458648 = piVar2;\n    }\n    fcn.004045a5();\n    fcn.00406578(unaff_ESI);\n    return;\n}\n",
        "token_count": 312
    },
    "00403d89": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d89(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint unaff_ESI;\n    int32_t *var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x431014 ^ &stack0xfffffffc;\n    fcn.0040454d(0);\n    piVar2 = *0x45864c;\n    var_ch = *0x45864c;\n    arg_8h_00 = fcn.0040171f();\n    iVar3 = fcn.004017b0(arg_8h_00);\n    if ((iVar3 == 0) && (piVar2 == NULL)) {\n        iVar3 = fcn.004018c8(&var_ch, arg_8h);\n        piVar2 = var_ch;\n        if (iVar3 == -1) {\n            fcn.004015f5();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.0040486e(var_ch);\n        (**(*piVar2 + 4))();\n        *0x45864c = piVar2;\n    }\n    fcn.004045a5();\n    fcn.00406578(unaff_ESI);\n    return;\n}\n",
        "token_count": 315
    },
    "00404bc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00404bc0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040686a(8);\n    fcn.0040454d(0);\n    piVar1 = *0x457a48;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.0040171f();\n    iVar3 = fcn.004017b0(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.004050ef(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004015f5();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040486e(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x423134)();\n        (*pcVar2)();\n        *0x457a48 = piVar1;\n    }\n    fcn.004045a5();\n    fcn.00406838();\n    return;\n}\n",
        "token_count": 419
    },
    "00419243": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419243(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x004191ae:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    piVar4 = arg_8h;\n                    iVar5 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if (iVar1 == 0) break;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                    }\n                    else {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if ((iVar1 == 0) || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *piVar4 = 0;\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.0040c396();\n                    uVar6 = 0x22;\n                    goto code_r0x0041919c;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x004191ae;\n    puVar2 = fcn.0040c396();\n    uVar6 = 0x16;\ncode_r0x0041919c:\n    *puVar2 = uVar6;\n    fcn.0040c2bc();\n    return uVar6;\n}\n",
        "token_count": 618
    },
    "0041f7c9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f7c9(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0041f74c:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = '\\0';\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    pcVar4 = arg_8h;\n                    iVar5 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            cVar1 = pcVar4[arg_10h - arg_8h];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar1 == '\\0') break;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                    }\n                    else {\n                        do {\n                            cVar1 = pcVar4[arg_10h - arg_8h];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if ((cVar1 == '\\0') || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *pcVar4 = '\\0';\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg_8h = '\\0';\n                    puVar2 = fcn.0040c396();\n                    uVar6 = 0x22;\n                    goto code_r0x0041f73a;\n                }\n                *arg_8h = '\\0';\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0041f74c;\n    puVar2 = fcn.0040c396();\n    uVar6 = 0x16;\ncode_r0x0041f73a:\n    *puVar2 = uVar6;\n    fcn.0040c2bc();\n    return uVar6;\n}\n",
        "token_count": 622
    },
    "00421126": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00421126(void)\n\n{\n    if (*0x431a50 == -2) {\n        fcn.00421107();\n    }\n    return *0x431a50 != -1;\n}\n",
        "token_count": 47
    },
    "00421145": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00421145(void)\n\n{\n    if ((*0x431a50 != -1) && (*0x431a50 != -2)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x431a50);\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00404d13": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d13(uint noname_0, code *arg_ch)\n\n{\n    code **ppcVar1;\n    code **in_ECX;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint var_30h;\n    uint var_4h;\n    \n    in_ECX[1] = arg_ch;\n    *in_ECX = vtable.std::codecvt_wchar_t__char__struct__Mbstatet_.0;\n    ppcVar1 = fcn.00405f83(&var_30h);\n    ppcVar3 = in_ECX + 2;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *ppcVar3 = *ppcVar1;\n        ppcVar1 = ppcVar1 + 1;\n        ppcVar3 = ppcVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "00406f47": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406fb6)\n// WARNING: Removing unreachable block (ram,0x00406f7a)\n// WARNING: Removing unreachable block (ram,0x0040702e)\n\nuint fcn.00406f47(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t in_XCR0;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x457eac = 0;\n    *0x431030 = *0x431030 | 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(10);\n    uVar5 = *0x431030;\n    if (iVar3 != 0) {\n        piVar1 = cpuid_basic_info(0);\n        puVar2 = cpuid_Version_info(1);\n        uVar6 = puVar2[3];\n        if (((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) &&\n           (((((pcVar4 = *puVar2 & 0xfff3ff0,  pcVar4 == 0x106c0 || (pcVar4 == 0x20660)) || (pcVar4 == 0x20670)) ||\n             ((pcVar4 == 0x30650 || (pcVar4 == 0x30660)))) || (pcVar4 == reloc.KERNEL32.dll_RaiseException)))) {\n            *0x457eb0 = *0x457eb0 | 1;\n        }\n        if (*piVar1 < 7) {\n            uVar7 = 0;\n        }\n        else {\n            iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n            uVar7 = *(iVar3 + 4);\n            if ((uVar7 & 0x200) != 0) {\n                *0x457eb0 = *0x457eb0 | 2;\n            }\n        }\n        *0x457eac = 1;\n        uVar5 = *0x431030 | 2;\n        if ((uVar6 & 0x100000) != 0) {\n            uVar5 = *0x431030 | 6;\n            *0x457eac = 2;\n            if ((((uVar6 & 0x8000000) != 0) && ((uVar6 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n                *0x457eac = 3;\n                uVar5 = *0x431030 | 0xe;\n                if ((uVar7 & 0x20) != 0) {\n                    *0x457eac = 5;\n                    uVar5 = *0x431030 | 0x2e;\n                    if (((uVar7 & 0xd0030000) == 0xd0030000) && ((in_XCR0 & 0xe0) == 0xe0)) {\n                        *0x431030 = *0x431030 | 0x6e;\n                        *0x457eac = 6;\n                        uVar5 = *0x431030;\n                    }\n                }\n            }\n        }\n    }\n    *0x431030 = uVar5;\n    return 0;\n}\n",
        "token_count": 850
    },
    "004078ea": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004078ea(int32_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10h;\n    uint lpArguments;\n    int32_t *var_8h;\n    uint8_t *var_4h;\n    \n    lpArguments = 0x19930520;\n    if (arg_ch != NULL) {\n        if ((*arg_ch & 0x10) != 0) {\n            iVar1 = *(*arg_8h + -4);\n            pcVar2 = *(iVar1 + 0x20);\n            arg_ch = *(iVar1 + 0x18);\n            (**0x423134)(*arg_8h + -4);\n            (*pcVar2)();\n            if (arg_ch == NULL) goto code_r0x00407931;\n        }\n        if ((*arg_ch & 8) != 0) {\n            lpArguments = 0x1994000;\n        }\n    }\ncode_r0x00407931:\n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0xe06d7363, 1, 3, &lpArguments);\n    return;\n}\n",
        "token_count": 281
    },
    "004198ef": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.004198ef(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    char **ppcVar10;\n    char **arg_8h_00;\n    char **var_28h;\n    char **var_24h;\n    uint var_20h;\n    char **var_1ch;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char **var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        puVar3 = fcn.0040c396();\n        iVar8 = 0x16;\n        *puVar3 = 0x16;\n        fcn.0040c2bc();\n    }\n    else {\n        pcVar7 = NULL;\n        *arg_ch = 0;\n        iVar8 = *arg_8h;\n        var_28h = NULL;\n        var_24h = NULL;\n        var_20h = 0;\n        ppcVar10 = var_28h;\n        while (var_28h = ppcVar10,  iVar8 != 0) {\n            var_4h = CONCAT13(var_4h >> 0x18, 0x3f2a);\n            iVar8 = fcn.00420670(iVar8, &var_4h);\n            if (iVar8 == 0) {\n                iVar8 = fcn.00419524(*arg_8h, 0, 0, &var_28h);\n            }\n            else {\n                iVar8 = fcn.004195d5(*arg_8h, iVar8, &var_28h);\n            }\n            ppcVar10 = var_28h;\n            var_8h = iVar8;\n            if (iVar8 != 0) goto code_r0x004194d5;\n            arg_8h = arg_8h + 1;\n            iVar8 = *arg_8h;\n        }\n        var_4h = NULL;\n        var_ch = (var_24h - ppcVar10 >> 2) + 1;\n        uVar9 = ~-(var_24h < ppcVar10) & (var_24h - ppcVar10) + 3U >> 2;\n        var_8h = ppcVar10;\n        if (uVar9 != 0) {\n            uVar6 = 0;\n            do {\n                pcVar5 = *var_8h;\n                var_10h = pcVar5 + 1;\n                do {\n                    cVar1 = *pcVar5;\n                    pcVar5 = pcVar5 + 1;\n                } while (cVar1 != '\\0');\n                pcVar7 = pcVar5 + pcVar7 + (1 - var_10h);\n                var_8h = var_8h + 1;\n                uVar6 = uVar6 + 1;\n                var_4h = pcVar7;\n            } while (uVar6 != uVar9);\n        }\n        iVar8 = fcn.0040f441(var_ch, var_4h, 1);\n        if (iVar8 == 0) {\n            iVar8 = -1;\n            var_8h = 0xffffffff;\n        }\n        else {\n            var_ch = iVar8 + var_ch * 4;\n            var_18h = var_ch;\n            if (ppcVar10 != var_24h) {\n                var_1ch = iVar8 - ppcVar10;\n                var_8h = ppcVar10;\n                do {\n                    var_14h = *var_8h;\n                    var_10h = var_14h;\n                    do {\n                        cVar1 = *var_10h;\n                        var_10h = var_10h + 1;\n                    } while (cVar1 != '\\0');\n                    var_10h = var_10h + (1 - (var_14h + 1));\n                    iVar4 = fcn.0041f7c9(var_ch, var_4h + (var_18h - var_ch), var_14h, var_10h);\n                    if (iVar4 != 0) {\n                        fcn.0040c2e9(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar8 = (*pcVar2)();\n                        return iVar8;\n                    }\n                    *(var_1ch + var_8h) = var_ch;\n                    var_8h = var_8h + 1;\n                    var_ch = var_ch + var_10h;\n                } while (var_8h != var_24h);\n            }\n            var_8h = NULL;\n            *arg_ch = iVar8;\n            iVar8 = 0;\n        }\n        fcn.0041222f(0);\ncode_r0x004194d5:\n        uVar6 = 0;\n        uVar9 = ~-(var_24h < ppcVar10) & var_24h + (3 - ppcVar10) >> 2;\n        arg_8h_00 = ppcVar10;\n        var_1ch = ppcVar10;\n        var_18h = uVar9;\n        if (uVar9 != 0) {\n            do {\n                fcn.0041222f(*ppcVar10);\n                uVar6 = uVar6 + 1;\n                ppcVar10 = ppcVar10 + 1;\n                iVar8 = var_8h;\n                arg_8h_00 = var_28h;\n            } while (uVar6 != uVar9);\n        }\n        fcn.0041222f(arg_8h_00);\n    }\n    return iVar8;\n}\n",
        "token_count": 1347
    },
    "0041a7d9": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a7d9(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x458250));\n    return;\n}\n",
        "token_count": 70
    },
    "0041a7fc": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a7fc(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x458250));\n    return;\n}\n",
        "token_count": 70
    },
    "0041d39f": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d39f(uint8_t *arg_8h, uint32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    \n    if (arg_8h == NULL) {\n        arg_ch = 0;\n    }\n    else {\n        if (arg_ch != 0) {\n            if ((arg_ch & 0xffffff80) == 0) {\n                *arg_8h = arg_ch;\n                return 1;\n            }\n            if ((arg_ch & 0xfffff800) == 0) {\n                uVar3 = 0xc0;\n                iVar4 = 1;\n                iVar2 = iVar4;\n            }\n            else if ((arg_ch & 0xffff0000) == 0) {\n                if ((0xd7ff < arg_ch) && (arg_ch < 0xe000)) {\ncode_r0x0041d43d:\n                    iVar2 = fcn.0041d44a(arg_10h);\n                    return iVar2;\n                }\n                iVar4 = 2;\n                uVar3 = 0xe0;\n                iVar2 = iVar4;\n            }\n            else {\n                if (((arg_ch & 0xffe00000) != 0) || (0x10ffff < arg_ch)) goto code_r0x0041d43d;\n                iVar4 = 3;\n                uVar3 = 0xf0;\n                iVar2 = iVar4;\n            }\n            do {\n                uVar1 = arg_ch;\n                arg_ch = arg_ch >> 6;\n                arg_8h[iVar4] = uVar1 & 0x3f | 0x80;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *arg_8h = arg_ch | uVar3;\n            *arg_10h = 0;\n            arg_10h[1] = 0;\n            return iVar2 + 1;\n        }\n        *arg_8h = arg_ch;\n    }\n    *arg_10h = arg_ch;\n    arg_10h[1] = arg_ch;\n    return 1;\n}\n",
        "token_count": 497
    },
    "004060f5": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.004060f5(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x422398;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x431014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    while (*0x431004 < 10) {\n        iVar1 = *0x431004 * 4;\n        *0x431004 = *0x431004 + 1;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*(iVar1 + 0x457a80), uVar2);\n        if (pcVar3 != NULL) {\n            (**0x423134)();\n            (*pcVar3)();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 232
    },
    "00401106": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401106(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.00401100();\n    iVar2 = fcn.0040bed4(*puVar1, puVar1[1], arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar2 < 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 138
    },
    "00401134": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401134(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00401106(param_1, param_2, param_3, 0, &stack0x00000010);\n    return;\n}\n",
        "token_count": 58
    },
    "004011c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.004011c5(code **param_1, int32_t param_2)\n\n{\n    *param_1 = vtable.std::exception.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    fcn.0040715b(param_2 + 4, param_1 + 1);\n    return param_1;\n}\n",
        "token_count": 90
    },
    "0040c2cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c2cc(void)\n\n{\n    code *pcVar1;\n    \n    fcn.0040c258(0, 0, 0, 0, 0);\n    fcn.0040c2e9(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 89
    },
    "004013fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013fa(code *arg_8h, code *arg_ch, uint arg_10h)\n\n{\n    code **in_ECX;\n    uint uVar1;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint uVar2;\n    uint var_1ch;\n    \n    uVar1 = 0;\n    uVar2 = 0;\n    fcn.00402a60();\n    uVar1 = fcn.0040138b(&var_1ch, arg_8h, arg_ch, arg_10h, uVar1, in_stack_ffffffc4, in_stack_ffffffc8, \n                         in_stack_ffffffcc);\n    fcn.004012c9(uVar1, uVar2);\n    fcn.00402948();\n    in_ECX[3] = arg_8h;\n    *in_ECX = vtable.std::_System_error.0;\n    in_ECX[4] = arg_ch;\n    return;\n}\n",
        "token_count": 231
    },
    "004017f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004017f0(int32_t param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ushort *lpWideCharStr;\n    int32_t lpMultiByteStr;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint in_stack_ffffffd8;\n    uchar auStack24 [4];\n    ulong uStack20;\n    ulong uStack12;\n    uint32_t uStack4;\n    \n    uStack4 = *0x431014 ^ &stack0xffffffd8;\n    uStack20 = 0;\n    iVar2 = fcn.0040bf70(param_1);\n    iVar4 = 0;\n    iVar5 = iVar2 + 1;\n    lpMultiByteStr = param_1;\n    while ((iVar5 != 0 && (iVar3 = fcn.00404397(auStack24, lpMultiByteStr, iVar5, &uStack20, param_3),  0 < iVar3))) {\n        lpMultiByteStr = lpMultiByteStr + iVar3;\n        iVar4 = iVar4 + 1;\n        iVar5 = iVar5 - iVar3;\n    }\n    iVar4 = iVar4 + 1;\n    lpWideCharStr = fcn.0040aae3(iVar4, 2);\n    if (lpWideCharStr != NULL) {\n        uStack12 = 0;\n        while ((iVar4 != 0 && (iVar5 = fcn.00404397(lpWideCharStr, param_1, iVar2 + 1, &uStack12, param_3),  0 < iVar5))\n              ) {\n            param_1 = param_1 + iVar5;\n            lpWideCharStr = lpWideCharStr + 1;\n            iVar4 = iVar4 + -1;\n        }\n        *lpWideCharStr = 0;\n        fcn.00406578(in_stack_ffffffd8);\n        return;\n    }\n    fcn.004046b7();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 469
    },
    "00401a96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00401a96(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x431014 ^ &stack0xfffffffc;\n    _var_10h = 0;\n    fcn.00404397(&var_8h, &arg_8h, 1, &var_10h, in_ECX + 0x18);\n    fcn.00406578(var_10h);\n    return;\n}\n",
        "token_count": 147
    },
    "00401d17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nvoid fcn.00401d17(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint ****ppppuVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint ****arg_8h;\n    char *arg_8h_00;\n    uint32_t unaff_EBX;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint32_t in_stack_ffffffcc;\n    uint ****ppppuStack48;\n    uint ****ppppuStack44;\n    uint ****appppuStack40 [2];\n    uint uStack32;\n    int32_t iStack24;\n    uint32_t uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = *0x458644;\n    uStack8 = *0x431014 ^ &stack0xffffffcc;\n    iVar6 = *(*(*0x458644 + 0x3c) + 0x78 + *0x458644) + *0x458644;\n    ppppuStack48 = NULL;\n    ppppuStack44 = *(iVar6 + 0x18);\n    piVar7 = *(iVar6 + 0x20) + *0x458644;\n    if (ppppuStack44 != NULL) {\n        do {\n            arg_8h_00 = *piVar7 + iVar2;\n            uStack32 = 0;\n            uStack16 = 0;\n            uStack12 = 0xf;\n            pcVar5 = arg_8h_00;\n            do {\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            fcn.0040298d(arg_8h_00, pcVar5 - (arg_8h_00 + 1));\n            ppppuVar3 = appppuStack40[0];\n            arg_8h = appppuStack40;\n            if (0xf < uStack20) {\n                arg_8h = appppuStack40[0];\n            }\n            if ((iStack24 == 0xe) && (iVar4 = fcn.00407ee0(arg_8h, \"VirtualProtect\", 0xe),  iVar4 == 0)) {\n                in_stack_ffffffcc = *(*(iVar6 + 0x1c) + *(*(iVar6 + 0x24) + unaff_EBX * 2 + iVar2) * 4 + iVar2);\n                if (0xf < uStack20) {\n                    ppppuStack44 = uStack20 + 1;\n                    ppppuStack48 = ppppuVar3;\n                    if (0xfff < ppppuStack44) {\n                        fcn.0040129c(&ppppuStack48, &ppppuStack44);\n                    }\n                    fcn.004065b6(ppppuStack48);\n                }\n                break;\n            }\n            piVar7 = piVar7 + 1;\n            if (0xf < uStack20) {\n                ppppuStack48 = uStack20 + 1;\n                ppppuStack44 = ppppuVar3;\n                if (0xfff < ppppuStack48) {\n                    fcn.0040129c(&ppppuStack44, &ppppuStack48);\n                }\n                fcn.004065b6(ppppuStack44);\n            }\n            unaff_EBX = unaff_EBX + 1;\n        } while (unaff_EBX < in_stack_ffffffcc);\n    }\n    fcn.00406578(in_stack_ffffffcc);\n    return;\n}\n",
        "token_count": 809
    },
    "0040288d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040288d(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *in_ECX;\n    uint *puVar2;\n    \n    uVar1 = arg_8h;\n    if (arg_8h < in_ECX[5] || arg_8h == in_ECX[5]) {\n        puVar2 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar2 = *in_ECX;\n        }\n        in_ECX[4] = arg_8h;\n        fcn.00401151(puVar2, arg_ch, arg_8h);\n        *(puVar2 + arg_8h * 2) = 0;\n    }\n    else {\n        arg_8h = arg_8h & 0xffffff00;\n        fcn.00403b62(uVar1, arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "004028d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004028d8(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *in_ECX;\n    uint *puVar2;\n    \n    uVar1 = arg_ch;\n    if (arg_ch < in_ECX[5] || arg_ch == in_ECX[5]) {\n        puVar2 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar2 = *in_ECX;\n        }\n        in_ECX[4] = arg_ch;\n        fcn.004034e1(puVar2, arg_8h, arg_ch);\n        *(puVar2 + arg_ch * 2) = 0;\n    }\n    else {\n        arg_ch = arg_ch & 0xffffff00;\n        fcn.00403bde(uVar1, arg_ch, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00402923": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402923(uint param_1, ushort *param_2)\n\n{\n    fcn.004071e0(param_1, param_2, 0x18);\n    *(param_2 + 8) = 0;\n    *(param_2 + 10) = 7;\n    *param_2 = 0;\n    return;\n}\n",
        "token_count": 83
    },
    "0040298d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040298d(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *in_ECX;\n    uint *puVar2;\n    \n    uVar1 = arg_ch;\n    if (arg_ch < in_ECX[5] || arg_ch == in_ECX[5]) {\n        puVar2 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            puVar2 = *in_ECX;\n        }\n        in_ECX[4] = arg_ch;\n        fcn.004034c8(puVar2, arg_8h, arg_ch);\n        *(puVar2 + arg_ch) = 0;\n    }\n    else {\n        arg_ch = arg_ch & 0xffffff00;\n        fcn.00403c64(uVar1, arg_ch, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "004029d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004029d6(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    \n    uVar2 = arg_ch;\n    iVar1 = in_ECX[4];\n    if (in_ECX[5] - iVar1 < arg_ch) {\n        arg_ch = arg_ch & 0xffffff00;\n        fcn.00403ce5(uVar2, arg_ch, arg_8h, uVar2);\n    }\n    else {\n        in_ECX[4] = iVar1 + arg_ch;\n        if (0xf < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        fcn.004034c8(in_ECX + iVar1, arg_8h, arg_ch);\n        *(in_ECX + iVar1 + arg_ch) = 0;\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00402a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402a60(uint *param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = param_2[4];\n    if (0xf < param_2[5]) {\n        param_2 = *param_2;\n    }\n    if (uVar1 < 0x10) {\n        fcn.004071e0(param_1, param_2, 0x10);\n        uVar3 = 0xf;\n    }\n    else {\n        uVar3 = uVar1 | 0xf;\n        if (0x7fffffff < uVar3) {\n            uVar3 = 0x7fffffff;\n        }\n        uVar2 = fcn.00403e63(uVar3 + 1);\n        *param_1 = uVar2;\n        fcn.004034c8(uVar2, param_2, uVar1 + 1);\n    }\n    param_1[4] = uVar1;\n    param_1[5] = uVar3;\n    return;\n}\n",
        "token_count": 253
    },
    "00402ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402ac0(uint param_1, uchar *param_2)\n\n{\n    fcn.004071e0(param_1, param_2, 0x18);\n    *(param_2 + 0x10) = 0;\n    *(param_2 + 0x14) = 0xf;\n    *param_2 = 0;\n    return;\n}\n",
        "token_count": 89
    },
    "00402edb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00402edb(uint param_1, uchar *param_2, char *param_3, uint32_t param_4)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    ushort *puVar3;\n    \n    *param_2 = 0x25;\n    pcVar2 = param_2 + 1;\n    if ((param_4 & 0x20) != 0) {\n        *pcVar2 = '+';\n        pcVar2 = param_2 + 2;\n    }\n    if ((param_4 & 8) != 0) {\n        *pcVar2 = '#';\n        pcVar2 = pcVar2 + 1;\n    }\n    puVar3 = pcVar2 + 1;\n    if (*param_3 == 'L') {\n        *pcVar2 = 'I';\n        *puVar3 = 0x3436;\n        puVar3 = pcVar2 + 3;\n    }\n    else {\n        *pcVar2 = *param_3;\n    }\n    if ((param_4 & 0xe00) == 0x400) {\n        uVar1 = 0x6f;\n    }\n    else if ((param_4 & 0xe00) == 0x800) {\n        uVar1 = ~(param_4 << 3) & 0x20U | 0x58;\n    }\n    else {\n        uVar1 = param_3[1];\n    }\n    *puVar3 = uVar1;\n    *(puVar3 + 1) = 0;\n    return param_2;\n}\n",
        "token_count": 355
    },
    "004032e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.004032e3(uint param_1, uchar *param_2, char param_3, uint32_t param_4)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    char cVar3;\n    uint32_t uVar4;\n    \n    *param_2 = 0x25;\n    puVar1 = param_2 + 1;\n    if ((param_4 & 0x20) != 0) {\n        *puVar1 = 0x2b;\n        puVar1 = param_2 + 2;\n    }\n    if ((param_4 & 0x10) != 0) {\n        *puVar1 = 0x23;\n        puVar1 = puVar1 + 1;\n    }\n    *puVar1 = 0x2a2e;\n    puVar2 = puVar1 + 1;\n    if (param_3 != '\\0') {\n        *puVar2 = param_3;\n        puVar2 = puVar1 + 3;\n    }\n    uVar4 = param_4 & 0x3000;\n    if ((param_4 & 4) == 0) {\n        if (uVar4 != 0x2000) {\n            if (uVar4 == 0x3000) {\n                cVar3 = 'a';\n            }\n            else {\n                cVar3 = (uVar4 != 0x1000) * '\\x02' + 'e';\n            }\n            goto code_r0x0040336c;\n        }\n    }\n    else if (uVar4 != 0x2000) {\n        if (uVar4 == 0x3000) {\n            cVar3 = 'A';\n        }\n        else {\n            cVar3 = (uVar4 != 0x1000) * '\\x02' + 'E';\n        }\n        goto code_r0x0040336c;\n    }\n    cVar3 = 'f';\ncode_r0x0040336c:\n    *puVar2 = cVar3;\n    *(puVar2 + 1) = 0;\n    return param_2;\n}\n",
        "token_count": 474
    },
    "004034c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004034c8(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.004071e0(param_1, param_2, param_3);\n    return param_1;\n}\n",
        "token_count": 52
    },
    "004034e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004034e1(uint param_1, uint param_2, int32_t param_3)\n\n{\n    fcn.004071e0(param_1, param_2, param_3 * 2);\n    return param_1;\n}\n",
        "token_count": 57
    },
    "0040356e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040356e(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint *in_ECX;\n    \n    uVar4 = arg_8h;\n    uVar2 = in_ECX[4];\n    if (arg_8h <= uVar2) {\n        if (in_ECX[5] - uVar2 < arg_ch) {\n            arg_8h = arg_8h & 0xffffff00;\n            fcn.00403e85(arg_ch, arg_8h, uVar4, arg_ch, arg_10h);\n        }\n        else {\n            in_ECX[4] = uVar2 + arg_ch;\n            if (7 < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            iVar1 = in_ECX + arg_8h * 2;\n            fcn.004034e1(iVar1 + arg_ch * 2, iVar1, (uVar2 - arg_8h) + 1);\n            fcn.00401151(iVar1, arg_10h, arg_ch);\n        }\n        return;\n    }\n    fcn.0040374b();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 316
    },
    "004035e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004035e0(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5, uint param_6)\n\n{\n    fcn.004034e1(param_1, param_2, param_4);\n    fcn.00401151(param_1 + param_4 * 2, param_6, param_5);\n    fcn.004034e1(param_1 + (param_5 + param_4) * 2, param_2 + param_4 * 2, (param_3 - param_4) + 1);\n    return;\n}\n",
        "token_count": 149
    },
    "00403664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403664(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    \n    uVar2 = arg_8h;\n    iVar1 = in_ECX[4];\n    if (in_ECX[5] - iVar1 < arg_8h) {\n        arg_8h = arg_8h & 0xffffff00;\n        fcn.00403f20(uVar2, arg_8h, uVar2, arg_ch);\n    }\n    else {\n        in_ECX[4] = iVar1 + arg_8h;\n        if (0xf < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        fcn.00407790(in_ECX + iVar1, arg_ch, arg_8h);\n        *(in_ECX + iVar1 + arg_8h) = 0;\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "00403726": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403726(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = param_1;\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    fcn.004028d8(param_1, piVar2 - (param_1 + 1) >> 1);\n    return;\n}\n",
        "token_count": 109
    },
    "00403787": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00403787(void)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint extraout_EDX;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uVar9;\n    uint32_t var_4h;\n    \n    fcn.004068d3(0x4c);\n    *(unaff_EBP + -0x24) = extraout_EDX;\n    *(unaff_EBP + -0x2c) = 0x457998;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    uVar3 = fcn.0040bf70(extraout_EDX);\n    *(unaff_EBP + -0x20) = uVar3;\n    *(unaff_EBP + -0x30) = 0;\n    uVar7 = *(*(*0x457998 + 4) + 0x4579b8);\n    iVar6 = *(*(*0x457998 + 4) + 0x4579bc);\n    if ((iVar6 < 0) || ((((iVar6 < 1 && (uVar7 == 0)) || (iVar6 < 0)) || ((iVar6 < 1 && (uVar7 <= uVar3)))))) {\n        *(unaff_EBP + -0x48) = 0;\n        iVar6 = *(unaff_EBP + -0x44);\n        iVar4 = *(unaff_EBP + -0x48);\n    }\n    else {\n        iVar4 = uVar7 - uVar3;\n        iVar6 = iVar6 - (uVar7 < uVar3);\n    }\n    *(unaff_EBP + -0x28) = iVar4;\n    *(unaff_EBP + -0x14) = iVar6;\n    var_4h = *(unaff_EBP + -0x2c);\n    fcn.00402800(var_4h);\n    if (*(unaff_EBP + -0x4c) == '\\0') {\n        uVar7 = 4;\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        piVar1 = *(*(*(*0x457998 + 4) + 0x4579c8) + 4);\n        *(unaff_EBP + -0x38) = piVar1;\n        (**(*piVar1 + 4))();\n        uVar9 = fcn.00403d89(unaff_EBP + -0x3c);\n        *(unaff_EBP + -0x34) = uVar9;\n        fcn.0040177f();\n        if ((*(*(*0x457998 + 4) + 0x4579ac) & 0x1c0) != 0x40) {\n            while ((-1 < iVar6 && ((0 < iVar6 || (iVar4 != 0))))) {\n                var_4h = *(*(*0x457998 + 4) + 0x4579d8);\n                iVar2 = fcn.004036f2();\n                if (iVar2 == -1) {\n                    uVar7 = 4;\n                    *(unaff_EBP + -0x18) = 4;\n                    *(unaff_EBP + -0x1c) = 4;\n                    goto code_r0x004038b5;\n                }\n                bVar8 = iVar4 != 0;\n                iVar4 = iVar4 + -1;\n                *(unaff_EBP + -0x28) = iVar4;\n                *(unaff_EBP + -0x48) = iVar4;\n                iVar6 = iVar6 + -1 + bVar8;\n                *(unaff_EBP + -0x14) = iVar6;\n                *(unaff_EBP + -0x44) = iVar6;\n            }\n        }\n        uVar7 = 0;\ncode_r0x004038b5:\n        iVar6 = *(unaff_EBP + -0x20);\n        iVar4 = 0;\n        while (uVar7 == 0) {\n            if ((iVar4 < 0) || ((iVar4 < 1 && (iVar6 == 0)))) {\n                iVar6 = *(unaff_EBP + -0x28);\n                iVar4 = *(unaff_EBP + -0x14);\n                goto code_r0x00403939;\n            }\n            *(unaff_EBP + -0x38) = **(unaff_EBP + -0x24);\n            var_4h = (**(**(unaff_EBP + -0x34) + 0x30))(*(unaff_EBP + -0x38), var_4h);\n            var_4h = var_4h & 0xffff;\n            iVar2 = fcn.004036f2();\n            uVar7 = *(unaff_EBP + -0x18);\n            if (iVar2 == -1) {\n                uVar7 = 4;\n            }\n            *(unaff_EBP + -0x18) = uVar7;\n            *(unaff_EBP + -0x1c) = uVar7;\n            iVar4 = *(unaff_EBP + -0x20);\n            iVar6 = iVar4 + -1;\n            *(unaff_EBP + -0x20) = iVar6;\n            *(unaff_EBP + -0x58) = iVar6;\n            iVar4 = *(unaff_EBP + -0x30) + -1 + (iVar4 != 0);\n            *(unaff_EBP + -0x30) = iVar4;\n            *(unaff_EBP + -0x54) = iVar4;\n            iVar5 = *(unaff_EBP + -0x24) + 1;\n            *(unaff_EBP + -0x24) = iVar5;\n            *(unaff_EBP + -0x40) = iVar5;\n        }\ncode_r0x00403973:\n        iVar6 = *(*0x457998 + 4);\n        *(iVar6 + 0x4579b8) = 0;\n        *(iVar6 + 0x4579bc) = 0;\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    uVar3 = 4;\n    iVar6 = *(*0x457998 + 4) + *(unaff_EBP + -0x2c);\n    uVar9 = 0;\n    if (*(iVar6 + 0x38) != 0) {\n        uVar3 = 0;\n    }\n    uVar7 = uVar3 | *(iVar6 + 0xc) | uVar7;\n    fcn.00401be7(uVar7, 0);\n    fcn.004027e5(uVar7, uVar9, var_4h);\n    fcn.00406838();\n    return;\ncode_r0x00403939:\n    if ((iVar4 < 0) || ((iVar4 < 1 && (iVar6 == 0)))) goto code_r0x00403973;\n    var_4h = *(*(*0x457998 + 4) + 0x4579d8);\n    iVar2 = fcn.004036f2();\n    if (iVar2 == -1) {\n        uVar7 = *(unaff_EBP + -0x18) | 4;\n        *(unaff_EBP + -0x1c) = uVar7;\n        goto code_r0x00403973;\n    }\n    bVar8 = iVar6 != 0;\n    iVar6 = iVar6 + -1;\n    *(unaff_EBP + -0x48) = iVar6;\n    iVar4 = *(unaff_EBP + -0x14) + -1 + bVar8;\n    *(unaff_EBP + -0x14) = iVar4;\n    *(unaff_EBP + -0x44) = iVar4;\n    uVar7 = *(unaff_EBP + -0x18);\n    goto code_r0x00403939;\n}\n",
        "token_count": 1950
    },
    "00403a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403a10(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00404138(10);\n    fcn.00404070(uVar1 & 0xffff);\n    fcn.0040338c();\n    return arg_8h;\n}\n",
        "token_count": 73
    },
    "00403b62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00403b62(int32_t *param_1, uint32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t unaff_EBX;\n    \n    if (param_2 < 0x7fffffff) {\n        iVar2 = fcn.00404192(param_2, param_1[5], 0x7ffffffe);\n        iVar3 = fcn.00404175(iVar2 + 1);\n        param_1[4] = param_2;\n        param_1[5] = iVar2;\n        fcn.00401151(iVar3, param_3, param_2);\n        *(iVar3 + param_2 * 2) = 0;\n        if (7 < unaff_EBX) {\n            fcn.00403e19(*param_1, unaff_EBX * 2 + 2);\n        }\n        *param_1 = iVar3;\n        return param_1;\n    }\n    fcn.004012be();\n    pcVar1 = swi(3);\n    piVar4 = (*pcVar1)();\n    return piVar4;\n}\n",
        "token_count": 281
    },
    "00403bde": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00403bde(int32_t *param_1, uint32_t param_2, uint param_3, uint32_t param_4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint unaff_EBX;\n    \n    if (param_2 < 0x7fffffff) {\n        iVar2 = fcn.00404192(param_2, param_1[5], 0x7ffffffe);\n        iVar3 = fcn.00404175(iVar2 + 1);\n        param_1[4] = param_2;\n        param_1[5] = iVar2;\n        fcn.004034e1(iVar3, unaff_EBX, param_2);\n        *(iVar3 + param_2 * 2) = 0;\n        if (7 < param_4) {\n            fcn.00403e19(*param_1, param_4 * 2 + 2);\n        }\n        *param_1 = iVar3;\n        return param_1;\n    }\n    fcn.004012be();\n    pcVar1 = swi(3);\n    piVar4 = (*pcVar1)();\n    return piVar4;\n}\n",
        "token_count": 286
    },
    "00403c64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00403c64(int32_t *param_1, uint32_t param_2, uint param_3, uint param_4)\n\n{\n    uint32_t arg_ch;\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if (param_2 < 0x80000000) {\n        arg_ch = param_1[5];\n        uVar2 = fcn.004041c3(param_2, arg_ch, 0x7fffffff);\n        iVar3 = fcn.00403e63(-(0xfffffffe < uVar2) | uVar2 + 1);\n        param_1[4] = param_2;\n        param_1[5] = uVar2;\n        fcn.004034c8(iVar3, param_4, param_2);\n        *(param_2 + iVar3) = 0;\n        if (0xf < arg_ch) {\n            fcn.00403e19(*param_1, arg_ch + 1);\n        }\n        *param_1 = iVar3;\n        return param_1;\n    }\n    fcn.004012be();\n    pcVar1 = swi(3);\n    piVar4 = (*pcVar1)();\n    return piVar4;\n}\n",
        "token_count": 298
    },
    "00403ce5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00403ce5(uint *param_1, uint32_t param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    int32_t arg_10h;\n    uint32_t arg_ch;\n    uint arg_ch_00;\n    code *pcVar1;\n    uint32_t uVar2;\n    uint arg_8h;\n    uint *puVar3;\n    uint unaff_ESI;\n    \n    arg_10h = param_1[4];\n    if (param_2 <= 0x7fffffffU - arg_10h) {\n        arg_ch = param_1[5];\n        uVar2 = fcn.004041c3(param_2 + arg_10h, arg_ch, 0x7fffffff);\n        arg_8h = fcn.00403e63(-(0xfffffffe < uVar2) | uVar2 + 1);\n        param_1[4] = param_2 + arg_10h;\n        param_1[5] = uVar2;\n        if (arg_ch < 0x10) {\n            fcn.00402a2f(arg_8h, param_1, arg_10h, param_4, param_5);\n        }\n        else {\n            arg_ch_00 = *param_1;\n            fcn.00402a2f(arg_8h, arg_ch_00, arg_10h, param_4, param_5);\n            fcn.00403e19(arg_ch_00, arg_ch + 1);\n        }\n        *param_1 = unaff_ESI;\n        return param_1;\n    }\n    fcn.004012be();\n    pcVar1 = swi(3);\n    puVar3 = (*pcVar1)();\n    return puVar3;\n}\n",
        "token_count": 399
    },
    "00403e85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00403e85(uint *param_1, uint32_t param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint32_t unaff_EBX;\n    \n    iVar1 = param_1[4];\n    if (param_2 <= 0x7ffffffeU - iVar1) {\n        iVar3 = fcn.00404192(param_2 + iVar1, param_1[5], 0x7ffffffe);\n        uVar4 = fcn.00404175(iVar3 + 1);\n        param_1[4] = param_2 + iVar1;\n        param_1[5] = iVar3;\n        if (unaff_EBX < 8) {\n            fcn.004035e0(uVar4, param_1, iVar1, param_3, param_4);\n        }\n        else {\n            arg_8h = *param_1;\n            fcn.004035e0(uVar4, arg_8h, iVar1, param_3, param_4);\n            fcn.00403e19(arg_8h, unaff_EBX * 2 + 2);\n        }\n        *param_1 = param_5;\n        return param_1;\n    }\n    fcn.004012be();\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 358
    },
    "00403f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00403f20(uint *param_1, uint32_t param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    int32_t arg_10h;\n    uint32_t arg_ch;\n    uint arg_ch_00;\n    code *pcVar1;\n    uint32_t uVar2;\n    uint arg_8h;\n    uint *puVar3;\n    uint unaff_EDI;\n    \n    arg_10h = param_1[4];\n    if (param_2 <= 0x7fffffffU - arg_10h) {\n        arg_ch = param_1[5];\n        uVar2 = fcn.004041c3(param_2 + arg_10h, arg_ch, 0x7fffffff);\n        arg_8h = fcn.00403e63(-(0xfffffffe < uVar2) | uVar2 + 1);\n        param_1[4] = param_2 + arg_10h;\n        param_1[5] = uVar2;\n        if (arg_ch < 0x10) {\n            fcn.004036bf(arg_8h, param_1, arg_10h, param_4, param_5);\n        }\n        else {\n            arg_ch_00 = *param_1;\n            fcn.004036bf(arg_8h, arg_ch_00, arg_10h, param_4, param_5);\n            fcn.00403e19(arg_ch_00, arg_ch + 1);\n        }\n        *param_1 = unaff_EDI;\n        return param_1;\n    }\n    fcn.004012be();\n    pcVar1 = swi(3);\n    puVar3 = (*pcVar1)();\n    return puVar3;\n}\n",
        "token_count": 395
    },
    "00404175": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404175(uint32_t param_1)\n\n{\n    code *pcVar1;\n    \n    if (param_1 < 0x80000000) {\n        fcn.00403e63(param_1 * 2);\n        return;\n    }\n    fcn.0040124f();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 88
    },
    "00404330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00404330(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.0040bf70(param_1);\n    iVar2 = iVar2 + 1;\n    iVar3 = fcn.0040aae3(iVar2, 1);\n    if (iVar3 != 0) {\n        if (iVar2 != 0) {\n            fcn.004071e0(iVar3, param_1, iVar2);\n        }\n        return iVar3;\n    }\n    fcn.004046b7();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 164
    },
    "00404c55": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404c55(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040686a(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x42338c;\n        extraout_ECX[4] = 0;\n        extraout_ECX[0xc] = 0;\n        extraout_ECX[0xd] = 0;\n        extraout_ECX[0xe] = 0;\n        extraout_ECX[2] = vtable.std::basic_ios_wchar_t__struct_std::char_traits_wchar_t__.0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_ostream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(*(*extraout_ECX + 4) + -4 + extraout_ECX) = *(*extraout_ECX + 4) + -8;\n    fcn.004055ac(arg_8h_00, arg_ch_00);\n    fcn.00406838();\n    return;\n}\n",
        "token_count": 428
    },
    "00405c39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00405c39(int16_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t **var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = arg_10h;\n    uVar5 = arg_ch;\n    if ((-1 < arg_10h) && ((0 < arg_10h || (arg_ch != 0)))) {\n        do {\n            if (*in_ECX[7] == 0) {\n                var_4h = 0;\n            }\n            else {\n                var_4h = *in_ECX[0xb];\n            }\n            var_ch = in_ECX + 0xb;\n            var_8h = var_4h >> 0x1f;\n            if ((var_8h < 0) || ((-1 < var_4h || var_8h < 0 && (var_4h == 0)))) {\n                pcVar1 = *(*in_ECX + 0x1c);\n                (**0x423134)();\n                iVar2 = (*pcVar1)();\n                if (iVar2 == -1) break;\n                bVar6 = uVar5 != 0;\n                uVar5 = uVar5 - 1;\n                iVar4 = iVar4 + -1 + bVar6;\n                *arg_8h = iVar2;\n                iVar3 = 2;\n            }\n            else {\n                if ((iVar4 <= var_8h) && ((iVar4 < var_8h || (uVar5 < var_4h)))) {\n                    var_8h = iVar4;\n                    var_4h = uVar5;\n                }\n                iVar3 = var_4h * 2;\n                fcn.004071e0(arg_8h, *in_ECX[7], iVar3);\n                bVar6 = uVar5 < var_4h;\n                uVar5 = uVar5 - var_4h;\n                iVar4 = (iVar4 - var_8h) - bVar6;\n                **var_ch = **var_ch - var_4h;\n                *in_ECX[7] = *in_ECX[7] + iVar3;\n            }\n            arg_8h = arg_8h + iVar3;\n            if ((iVar4 < 1) && ((iVar4 < 0 || (uVar5 == 0)))) break;\n        } while( true );\n    }\n    return CONCAT44((arg_10h - iVar4) - (arg_ch < uVar5), arg_ch - uVar5);\n}\n",
        "token_count": 660
    },
    "00405d54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00405d54(ushort *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t **var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = arg_10h;\n    uVar5 = arg_ch;\n    if ((-1 < arg_10h) && ((0 < arg_10h || (arg_ch != 0)))) {\n        do {\n            if (*in_ECX[8] == 0) {\n                var_4h = 0;\n            }\n            else {\n                var_4h = *in_ECX[0xc];\n            }\n            var_ch = in_ECX + 0xc;\n            var_8h = var_4h >> 0x1f;\n            if ((var_8h < 0) || ((-1 < var_4h || var_8h < 0 && (var_4h == 0)))) {\n                pcVar1 = *(*in_ECX + 0xc);\n                (**0x423134)(*arg_8h);\n                iVar2 = (*pcVar1)();\n                if (iVar2 == -1) break;\n                bVar6 = uVar5 != 0;\n                uVar5 = uVar5 - 1;\n                iVar4 = iVar4 + -1 + bVar6;\n                iVar3 = 2;\n            }\n            else {\n                if ((iVar4 <= var_8h) && ((iVar4 < var_8h || (uVar5 < var_4h)))) {\n                    var_8h = iVar4;\n                    var_4h = uVar5;\n                }\n                iVar3 = var_4h * 2;\n                fcn.004071e0(*in_ECX[8], arg_8h, iVar3);\n                bVar6 = uVar5 < var_4h;\n                uVar5 = uVar5 - var_4h;\n                iVar4 = (iVar4 - var_8h) - bVar6;\n                **var_ch = **var_ch - var_4h;\n                *in_ECX[8] = *in_ECX[8] + iVar3;\n            }\n            arg_8h = arg_8h + iVar3;\n            if ((iVar4 < 1) && ((iVar4 < 0 || (uVar5 == 0)))) break;\n        } while( true );\n    }\n    return CONCAT44((arg_10h - iVar4) - (arg_ch < uVar5), arg_ch - uVar5);\n}\n",
        "token_count": 652
    },
    "00407ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407ee0(uint32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n    }\n    else if (arg_10h == 2) {\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n    }\n    else if (arg_10h == 3) {\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n    }\n    else {\n        if (arg_10h != 4) {\ncode_r0x004083c3:\n    // switch table (32 cases) at 0x4094dc\n            switch(arg_10h) {\n            case 0:\n                break;\n            case 1:\n                goto code_r0x00408bc8;\n            case 2:\n                goto code_r0x00408ff1;\n            case 3:\n                goto code_r0x00408b84;\n            case 4:\n                goto code_r0x00408748;\n            case 5:\n                goto code_r0x00408b34;\n            case 6:\n                goto code_r0x00408f5e;\n            case 7:\n                goto code_r0x00409377;\n            case 8:\n                goto code_r0x004086b5;\n            case 9:\n                goto code_r0x00408aa1;\n            case 10:\n                goto code_r0x00408eca;\n            case 0xb:\n                goto code_r0x004092e4;\n            case 0xc:\n                goto code_r0x00408622;\n            case 0xd:\n                goto code_r0x00408a0e;\n            case 0xe:\n                goto code_r0x00408e37;\n            case 0xf:\n                goto code_r0x00409251;\n            case 0x10:\n                goto code_r0x0040858f;\n            case 0x11:\n                goto code_r0x0040897b;\n            case 0x12:\n                goto code_r0x00408da4;\n            case 0x13:\n                goto code_r0x004091bd;\n            case 0x14:\n                goto code_r0x004084fc;\n            case 0x15:\n                goto code_r0x004088e8;\n            case 0x16:\n                goto code_r0x00408d11;\n            case 0x17:\n                goto code_r0x0040912a;\n            case 0x1a:\n                goto code_r0x00408c7e;\n            case 0x1b:\n                goto code_r0x00409097;\n            case 0x1c:\n                uVar1 = *(arg_8h + arg_10h + -0x1c);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1c)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n            case 0x18:\n                uVar1 = *(arg_8h + arg_10h + -0x18);\n                if (uVar1 != *(arg_ch + arg_10h + -0x18)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004084fc:\n                uVar1 = *(arg_8h + arg_10h + -0x14);\n                if (uVar1 != *(arg_ch + arg_10h + -0x14)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040858f:\n                uVar1 = *(arg_8h + arg_10h + -0x10);\n                if (uVar1 != *(arg_ch + arg_10h + -0x10)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408622:\n                uVar1 = *(arg_8h + arg_10h + -0xc);\n                if (uVar1 != *(arg_ch + arg_10h + -0xc)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004086b5:\n                uVar1 = *(arg_8h + arg_10h + -8);\n                if (uVar1 != *(arg_ch + arg_10h + -8)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408748:\n                uVar1 = *(arg_8h + arg_10h + -4);\n                if (uVar1 != *(arg_ch + arg_10h + -4)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -1) - *(arg_ch + arg_10h + -1);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n                break;\n            case 0x1d:\n                uVar1 = *(arg_8h + arg_10h + -0x1d);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1d)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n            case 0x19:\n                if (*(arg_8h + arg_10h + -0x19) != *(arg_ch + arg_10h + -0x19)) {\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004088e8:\n                uVar1 = *(arg_8h + arg_10h + -0x15);\n                if (uVar1 != *(arg_ch + arg_10h + -0x15)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040897b:\n                uVar1 = *(arg_8h + arg_10h + -0x11);\n                if (uVar1 != *(arg_ch + arg_10h + -0x11)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408a0e:\n                uVar1 = *(arg_8h + arg_10h + -0xd);\n                if (uVar1 != *(arg_ch + arg_10h + -0xd)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408aa1:\n                uVar1 = *(arg_8h + arg_10h + -9);\n                if (uVar1 != *(arg_ch + arg_10h + -9)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408b34:\n                if (*(arg_8h + arg_10h + -5) != *(arg_ch + arg_10h + -5)) {\ncode_r0x00408b40:\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\ncode_r0x00408b84:\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\ncode_r0x00408ba6:\n                    iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408bc8:\n                uVar1 = *(arg_ch + arg_10h + -1);\n                uVar3 = *(arg_8h + arg_10h + -1);\n                if (uVar3 == uVar1) {\n                    return 0;\n                }\n                return (0 < uVar3 - uVar1) * 2 + -1;\n            case 0x1e:\n                uVar1 = *(arg_8h + arg_10h + -0x1e);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1e)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1e);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408c7e:\n                uVar1 = *(arg_8h + arg_10h + -0x1a);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1a)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408d11:\n                uVar1 = *(arg_8h + arg_10h + -0x16);\n                if (uVar1 != *(arg_ch + arg_10h + -0x16)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408da4:\n                uVar1 = *(arg_8h + arg_10h + -0x12);\n                if (uVar1 != *(arg_ch + arg_10h + -0x12)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408e37:\n                uVar1 = *(arg_8h + arg_10h + -0xe);\n                if (uVar1 != *(arg_ch + arg_10h + -0xe)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408eca:\n                if (*(arg_8h + arg_10h + -10) != *(arg_ch + arg_10h + -10)) {\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408f5e:\n                uVar1 = *(arg_8h + arg_10h + -6);\n                if (uVar1 != *(arg_ch + arg_10h + -6)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408ff1:\n                if (*(arg_8h + arg_10h + -2) != *(arg_ch + arg_10h + -2)) goto code_r0x00408ba6;\n                break;\n            case 0x1f:\n                uVar1 = *(arg_8h + arg_10h + -0x1f);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1f)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1f);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1e) - *(arg_ch + arg_10h + -0x1e);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409097:\n                uVar1 = *(arg_8h + arg_10h + -0x1b);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1b)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040912a:\n                uVar1 = *(arg_8h + arg_10h + -0x17);\n                if (uVar1 != *(arg_ch + arg_10h + -0x17)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004091bd:\n                if (*(arg_8h + arg_10h + -0x13) != *(arg_ch + arg_10h + -0x13)) {\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409251:\n                uVar1 = *(arg_8h + arg_10h + -0xf);\n                if (uVar1 != *(arg_ch + arg_10h + -0xf)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004092e4:\n                uVar1 = *(arg_8h + arg_10h + -0xb);\n                if (uVar1 != *(arg_ch + arg_10h + -0xb)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409377:\n                if (*(arg_8h + arg_10h + -7) != *(arg_ch + arg_10h + -7)) {\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    goto code_r0x00408b40;\n                }\n                goto code_r0x00408b84;\n            default:\n                goto code_r0x00407f26;\n            }\n            return 0;\n        }\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n    }\n    if (uVar3 == uVar1) {\n        return 0;\n    }\n    return (0 < uVar3 - uVar1) * 2 + -1;\ncode_r0x00407f26:\n    if (*arg_8h != *arg_ch) {\n        iVar2 = (*arg_8h & 0xff) - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 3) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[1] != arg_ch[1]) {\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 5) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 6) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 7) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[2] != arg_ch[2]) {\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 9) - *(arg_ch + 9);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 10) - *(arg_ch + 10);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[3] != arg_ch[3]) {\n        iVar2 = (arg_8h[3] & 0xff) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xd) - *(arg_ch + 0xd);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xe) - *(arg_ch + 0xe);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[4] != arg_ch[4]) {\n        iVar2 = (arg_8h[4] & 0xff) - *(arg_ch + 4);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x11) - *(arg_ch + 0x11);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x12) - *(arg_ch + 0x12);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[5] != arg_ch[5]) {\n        iVar2 = (arg_8h[5] & 0xff) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x15) - *(arg_ch + 0x15);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x16) - *(arg_ch + 0x16);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[6] != arg_ch[6]) {\n        iVar2 = (arg_8h[6] & 0xff) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x19) - *(arg_ch + 0x19);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1a) - *(arg_ch + 0x1a);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[7] != arg_ch[7]) {\n        iVar2 = (arg_8h[7] & 0xff) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1d) - *(arg_ch + 0x1d);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1e) - *(arg_ch + 0x1e);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    arg_8h = arg_8h + 8;\n    arg_ch = arg_ch + 8;\n    arg_10h = arg_10h + -0x20;\n    goto code_r0x004083c3;\n}\n",
        "token_count": 13822
    },
    "0040a1c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl\nfcn.0040a1c5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 0x3c;\n    fcn.00406d00();\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x40) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x30) = *(arg_8h_00 + -4);\n    iVar3 = *(unaff_EBP + 8);\n    uVar1 = fcn.00407bcd(unaff_EBP + -0x4c, *(iVar3 + 0x18));\n    *(unaff_EBP + -0x34) = uVar1;\n    iVar2 = fcn.0040978c();\n    *(unaff_EBP + -0x38) = *(iVar2 + 0x10);\n    iVar2 = fcn.0040978c();\n    *(unaff_EBP + -0x3c) = *(iVar2 + 0x14);\n    iVar2 = fcn.0040978c();\n    *(iVar2 + 0x10) = iVar3;\n    iVar3 = fcn.0040978c();\n    *(iVar3 + 0x14) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x44) = 1;\n    *(unaff_EBP + -4) = 1;\n    uVar1 = fcn.004079c6(arg_8h_00, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), *(unaff_EBP + 0x20));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    *(unaff_EBP + -0x44) = 0;\n    fcn.0040a318(0x42fb28, arg_ch_00);\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 721
    },
    "0040a51d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a51d(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == NULL) {\n        fcn.0040eae9();\n        pcVar3 = swi(3);\n        uVar6 = (*pcVar3)();\n        return uVar6;\n    }\n    iVar7 = *arg_ch;\n    uVar6 = 0;\n    if (0 < iVar7) {\n        var_4h = 0;\n        arg_10h = *(arg_8h + 0x1c);\n        piVar5 = *(arg_10h + 0xc);\n        iVar1 = *piVar5;\n        in_EAX = piVar5 + 1;\n        do {\n            if (0 < iVar1) {\n                iVar2 = arg_ch[1];\n                piVar5 = in_EAX;\n                var_8h = iVar1;\n                do {\n                    iVar4 = fcn.00409fe3(iVar2 + var_4h, *piVar5, arg_10h);\n                    if (iVar4 != 0) {\n                        uVar6 = 1;\n                        break;\n                    }\n                    var_8h = var_8h + -1;\n                    piVar5 = piVar5 + 1;\n                } while (0 < var_8h);\n            }\n            var_4h = var_4h + 0x10;\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n    }\n    return in_EAX & 0xffffff00 | uVar6;\n}\n",
        "token_count": 475
    },
    "0040a842": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a842(int32_t arg_8h, uint lpProcName, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = arg_8h * 4 + 0x457f48;\n    iVar3 = *piVar1;\n    if (iVar3 == -1) {\n        iVar3 = 0;\n    }\n    else if (iVar3 == 0) {\n        for (; arg_10h != arg_14h; arg_10h = arg_10h + 1) {\n            iVar3 = *arg_10h;\n            iVar4 = *(iVar3 * 4 + 0x457f3c);\n            if (iVar4 == 0) {\n                iVar4 = fcn.0040a8e2(*(iVar3 * 4 + 0x424a9c));\n                piVar2 = iVar3 * 4 + 0x457f3c;\n                if (iVar4 != 0) {\n                    iVar3 = *piVar2;\n                    *piVar2 = iVar4;\n                    if (iVar3 != 0) {\n                        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar4);\n                    }\n                    goto code_r0x0040a8cb;\n                }\n                *piVar2 = -1;\n            }\n            else if (iVar4 != -1) {\ncode_r0x0040a8cb:\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, lpProcName);\n                if (iVar3 != 0) {\n                    *piVar1 = iVar3;\n                    return iVar3;\n                }\n                break;\n            }\n        }\n        *piVar1 = -1;\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 444
    },
    "0040b447": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b447(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.0040b1c5(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 193
    },
    "0040b7ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b7ed(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.0040b1c5(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 228
    },
    "0040c3ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c3ea(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x457f68);\n    return;\n}\n",
        "token_count": 50
    },
    "0040c432": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c432(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x457f68);\n    return;\n}\n",
        "token_count": 50
    },
    "0040c81c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c81c(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "0040c830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c830(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "0040ef2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ef2b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.0040eeea();\n    iVar1 = fcn.0040ef6a(in_ECX + 8, arg_8h * 2);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 165
    },
    "004122b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004122b7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.0040e2a9(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.004118d1(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 123
    },
    "00414448": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414448(void)\n\n{\n    fcn.0041462d(0, \"AreFileApisANSI\", 0x427188, \"AreFileApisANSI\");\n    return;\n}\n",
        "token_count": 46
    },
    "00414462": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414462(void)\n\n{\n    fcn.0041462d(1, \"CompareStringEx\", 0x42719c, \"CompareStringEx\");\n    return;\n}\n",
        "token_count": 43
    },
    "0041447c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041447c(void)\n\n{\n    fcn.0041462d(2, \"EnumSystemLocalesEx\", 0x4271b4, \"EnumSystemLocalesEx\");\n    return;\n}\n",
        "token_count": 49
    },
    "00414496": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414496(void)\n\n{\n    fcn.0041462d(8, \"GetDateFormatEx\", 0x4271f0, \"GetDateFormatEx\");\n    return;\n}\n",
        "token_count": 44
    },
    "004144b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004144b0(void)\n\n{\n    fcn.0041462d(0xb, \"GetLocaleInfoEx\", 0x427208, \"GetLocaleInfoEx\");\n    return;\n}\n",
        "token_count": 46
    },
    "004144ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004144ca(void)\n\n{\n    fcn.0041462d(0xe, \"GetTimeFormatEx\", 0x427220, \"GetTimeFormatEx\");\n    return;\n}\n",
        "token_count": 45
    },
    "004144e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004144e4(void)\n\n{\n    fcn.0041462d(0xf, \"GetUserDefaultLocaleName\", 0x427238, \"GetUserDefaultLocaleName\");\n    return;\n}\n",
        "token_count": 48
    },
    "004144fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004144fe(void)\n\n{\n    fcn.0041462d(0x13, \"IsValidLocaleName\", 0x427264, \"IsValidLocaleName\");\n    return;\n}\n",
        "token_count": 44
    },
    "00414518": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414518(void)\n\n{\n    fcn.0041462d(0x15, \"LCIDToLocaleName\", 0x427298, \"LCIDToLocaleName\");\n    return;\n}\n",
        "token_count": 48
    },
    "00414532": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414532(void)\n\n{\n    fcn.0041462d(0x14, 0x427288, 0x427280, 0x427288);\n    return;\n}\n",
        "token_count": 46
    },
    "0041454c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041454c(void)\n\n{\n    fcn.0041462d(0x16, \"LocaleNameToLCID\", 0x4272b4, \"LocaleNameToLCID\");\n    return;\n}\n",
        "token_count": 51
    },
    "00419266": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419266(int16_t *arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    if (arg_8h == NULL) {\n        fcn.0040eeea();\n        *(arg_ch + 8) = 0;\n        *(arg_ch + 0xc) = 0;\n    }\n    else {\n        if (*arg_8h != 0) {\n            arg_8h_00 = fcn.00418e21(arg_14h, 0, arg_8h, 0xffffffff, 0, 0, 0, 0);\n            if (arg_8h_00 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.0040c360(uVar2);\n                piVar3 = fcn.0040c396();\n                return *piVar3;\n            }\n            if ((*(arg_ch + 0xc) <= arg_8h_00 && arg_8h_00 != *(arg_ch + 0xc)) &&\n               (iVar1 = fcn.0041982c(arg_8h_00),  iVar1 != 0)) {\n                return iVar1;\n            }\n            iVar1 = fcn.00418e21(arg_14h, 0, arg_8h, 0xffffffff, *(arg_ch + 8), *(arg_ch + 0xc), 0, 0);\n            if (iVar1 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.0040c360(uVar2);\n                piVar3 = fcn.0040c396();\n                return *piVar3;\n            }\n            *(arg_ch + 0x10) = iVar1 + -1;\n            return 0;\n        }\n        if ((*(arg_ch + 0xc) == 0) && (iVar1 = fcn.0041982c(1),  iVar1 != 0)) {\n            return iVar1;\n        }\n        **(arg_ch + 8) = 0;\n    }\n    *(arg_ch + 0x10) = 0;\n    return 0;\n}\n",
        "token_count": 526
    },
    "0041982c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041982c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.0040eeea();\n    iVar1 = fcn.0040ef6a(in_ECX + 8, arg_8h);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 159
    },
    "0041a64f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041a64f(char *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    uint *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint uVar9;\n    char *pcVar10;\n    char *pcVar11;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h == NULL) {\n        puVar4 = fcn.0040c396();\n        *puVar4 = 0x16;\n        return 0xffffffff;\n    }\n    pcVar5 = fcn.00421f50(arg_8h, 0x3d);\n    pcVar11 = arg_8h;\n    if ((pcVar5 == NULL) || (pcVar5 == arg_8h)) {\ncode_r0x0041a509:\n        puVar4 = fcn.0040c396();\n        *puVar4 = 0x16;\n        goto code_r0x0041a514;\n    }\n    cVar1 = pcVar5[1];\n    fcn.0041a5e0();\n    uVar9 = 0;\n    if (*0x4581d8 == NULL) {\n        if ((arg_ch != 0) && (*0x4581dc != 0)) {\n            iVar6 = fcn.0040f6fb();\n            if (iVar6 == 0) goto code_r0x0041a509;\n            fcn.0041a5e0();\n            goto code_r0x0041a3c6;\n        }\n        if (cVar1 == '\\0') {\n            uVar9 = 0;\n            goto code_r0x0041a517;\n        }\n        *0x4581d8 = fcn.004121d2(1, 4);\n        fcn.0041222f(0);\n        if (*0x4581d8 != NULL) {\n            if (*0x4581dc == 0) {\n                *0x4581dc = fcn.004121d2(1, 4);\n                fcn.0041222f(0);\n                if (*0x4581dc == 0) goto code_r0x0041a514;\n            }\n            goto code_r0x0041a3c6;\n        }\n    }\n    else {\ncode_r0x0041a3c6:\n        piVar7 = *0x4581d8;\n        if (*0x4581d8 != NULL) {\n            iVar6 = fcn.0041a5fa(arg_8h, pcVar5 - arg_8h);\n            if ((-1 < iVar6) && (*piVar7 != 0)) {\n                fcn.0041222f(piVar7[iVar6]);\n                if (cVar1 == '\\0') {\n                    for (; piVar7[iVar6] != 0; iVar6 = iVar6 + 1) {\n                        piVar7[iVar6] = piVar7[iVar6 + 1];\n                    }\n                    piVar7 = fcn.0041cbf3(piVar7, iVar6, 4);\n                    fcn.0041222f(0);\n                    if (piVar7 != NULL) {\ncode_r0x0041a48e:\n                        *0x4581d8 = piVar7;\n                    }\n                }\n                else {\n                    pcVar11 = NULL;\n                    piVar7[iVar6] = arg_8h;\n                }\n                if (arg_ch != 0) {\n                    pcVar10 = arg_8h;\n                    do {\n                        cVar2 = *pcVar10;\n                        pcVar10 = pcVar10 + 1;\n                    } while (cVar2 != '\\0');\n                    iVar6 = fcn.004121d2(pcVar10 + (2 - (arg_8h + 1)), 1);\n                    if (iVar6 != 0) {\n                        iVar8 = fcn.00411846(iVar6, pcVar10 + (2 - (arg_8h + 1)), arg_8h);\n                        if (iVar8 != 0) {\n                            fcn.0040c2e9(0, 0, 0, 0, 0);\n                            pcVar3 = swi(3);\n                            uVar9 = (*pcVar3)();\n                            return uVar9;\n                        }\n                        (pcVar5 + (iVar6 - arg_8h) + 1)[-1] = '\\0';\n                        iVar8 = fcn.00420854(iVar6, -(cVar1 != '\\0') & pcVar5 + (iVar6 - arg_8h) + 1);\n                        if (iVar8 == 0) {\n                            puVar4 = fcn.0040c396();\n                            uVar9 = 0xffffffff;\n                            *puVar4 = 0x2a;\n                        }\n                    }\n                    fcn.0041222f(iVar6);\n                }\n                goto code_r0x0041a517;\n            }\n            if (cVar1 == '\\0') goto code_r0x0041a517;\n            arg_ch_00 = -iVar6 + 2;\n            if ((-iVar6 <= arg_ch_00) && (arg_ch_00 < 0x3fffffff)) {\n                piVar7 = fcn.0041cbf3(piVar7, arg_ch_00, 4);\n                fcn.0041222f(0);\n                if (piVar7 != NULL) {\n                    piVar7[-iVar6] = arg_8h;\n                    piVar7[1 - iVar6] = 0;\n                    pcVar11 = NULL;\n                    goto code_r0x0041a48e;\n                }\n            }\n        }\n    }\ncode_r0x0041a514:\n    uVar9 = 0xffffffff;\ncode_r0x0041a517:\n    fcn.0041222f(pcVar11);\n    return uVar9;\n}\n",
        "token_count": 1371
    },
    "00421ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00421ad0(int16_t *arg_8h)\n\n{\n    if ((*arg_8h == 0x5a4d) && (*(*(arg_8h + 0x1e) + arg_8h) == 0x4550)) {\n        return *(*(arg_8h + 0x1e) + arg_8h + 6) == 0x10b;\n    }\n    return false;\n}\n",
        "token_count": 103
    },
    "00407cd6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407cd6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040a071(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "004045a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004045a5(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 != 0) {\n        if (iVar1 < 8) {\n            fcn.004060e7(iVar1 * 0x18 + 0x457898);\n        }\n        return;\n    }\n    fcn.0040c432(4);\n    return;\n}\n",
        "token_count": 102
    },
    "0040147f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040147f(uint arg_8h, uint arg_ch, char *arg_10h)\n\n{\n    char cVar1;\n    code **in_ECX;\n    char *pcVar2;\n    uchar *arg_10h_00;\n    uchar auStack48 [4];\n    uint32_t uStack44;\n    char *pcStack40;\n    uint32_t auStack36 [2];\n    uint uStack28;\n    uint uStack24;\n    uint32_t uStack12;\n    \n    uStack12 = *0x431014 ^ auStack48;\n    uStack44 = 0;\n    uStack28 = 0;\n    uStack24 = 0xf;\n    pcVar2 = arg_10h;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.0040298d(arg_10h, pcVar2 - (arg_10h + 1));\n    arg_10h_00 = &stack0xffffffcc;\n    fcn.004013fa(arg_8h, arg_ch, arg_10h_00);\n    if (0xf < uStack44) {\n        auStack36[0] = uStack44 + 1;\n        pcStack40 = arg_10h;\n        if (0xfff < auStack36[0]) {\n            fcn.0040129c(&pcStack40, auStack36);\n        }\n        fcn.004065b6(pcStack40);\n    }\n    *in_ECX = vtable.std::system_error.0;\n    fcn.00406578(arg_10h_00);\n    return;\n}\n",
        "token_count": 376
    },
    "0040164a": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040164a(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_retaddr;\n    \n    fcn.0040454d(0);\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    if (unaff_retaddr != 0) {\n        fcn.004049a0(param_1, unaff_retaddr);\n        return param_1;\n    }\n    fcn.00404714(\"bad locale name\");\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 307
    },
    "00421107": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00421107(void)\n\n{\n    *0x431a50 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "00401c69": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00401c69(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint arg_8h;\n    int32_t extraout_ECX;\n    uint32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint32_t uVar3;\n    uint var_34h;\n    uint var_30h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.00406909(0x28);\n    *(unaff_EBP + -0x34) = extraout_EDX;\n    *(unaff_EBP + -0x20) = vtable.std::exception.0;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -4) = 0;\n    uVar2 = extraout_EDX;\n    for (uVar3 = 0; *(unaff_EBP + -0x30) = uVar3,  uVar3 < uVar2; uVar3 = uVar3 + 1) {\n        cVar1 = *(extraout_ECX + uVar3);\n        *(extraout_ECX + uVar3) = (*((uVar3 & 3) + 0x42e754) ^ *(extraout_ECX + uVar3)) + cVar1;\n        arg_8h = fcn.00403787();\n        fcn.00403a10(arg_8h);\n        *(extraout_ECX + uVar3) = *(extraout_ECX + uVar3) - cVar1;\n        uVar2 = *(unaff_EBP + -0x34);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x20) = vtable.std::exception.0;\n    fcn.004071be(unaff_EBP + -0x1c);\n    fcn.0040685b();\n    return;\n}\n",
        "token_count": 479
    },
    "0040296e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040296e(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.0040298d(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 103
    },
    "00402b46": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00402b46(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.00403548();\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return arg_ch;\n}\n",
        "token_count": 129
    },
    "00402b76": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00402b76(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.00403548();\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return arg_ch;\n}\n",
        "token_count": 129
    },
    "00404930": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404930(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040454d(0);\n    iVar4 = *(arg_8h + 0xc);\n    while (iVar4 != 0) {\n        iVar4 = iVar4 + -1;\n        piVar1 = *(*(arg_8h + 8) + iVar4 * 4);\n        if (piVar1 != NULL) {\n            pcVar2 = *(*piVar1 + 8);\n            (**0x423134)();\n            puVar3 = (*pcVar2)();\n            if (puVar3 != NULL) {\n                pcVar2 = **puVar3;\n                (**0x423134)(1);\n                (*pcVar2)();\n            }\n        }\n    }\n    fcn.0040bffb(*(arg_8h + 8));\n    fcn.004045a5();\n    return;\n}\n",
        "token_count": 242
    },
    "0041d469": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041d469(uint8_t *param_1, uint32_t param_2, uint32_t *param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    \n    if (param_1 == NULL) {\n        param_2 = 0;\n    }\n    else {\n        if (param_2 != 0) {\n            if ((param_2 & 0xffffff80) == 0) {\n                *param_1 = param_2;\n                return 1;\n            }\n            if ((param_2 & 0xfffff800) == 0) {\n                uVar3 = 0xc0;\n                iVar4 = 1;\n                iVar2 = iVar4;\n            }\n            else if ((param_2 & 0xffff0000) == 0) {\n                if ((0xd7ff < param_2) && (param_2 < 0xe000)) {\ncode_r0x0041d43d:\n                    iVar2 = fcn.0041d44a(param_3);\n                    return iVar2;\n                }\n                iVar4 = 2;\n                uVar3 = 0xe0;\n                iVar2 = iVar4;\n            }\n            else {\n                if (((param_2 & 0xffe00000) != 0) || (0x10ffff < param_2)) goto code_r0x0041d43d;\n                iVar4 = 3;\n                uVar3 = 0xf0;\n                iVar2 = iVar4;\n            }\n            do {\n                uVar1 = param_2;\n                param_2 = param_2 >> 6;\n                param_1[iVar4] = uVar1 & 0x3f | 0x80;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *param_1 = param_2 | uVar3;\n            *param_3 = 0;\n            param_3[1] = 0;\n            return iVar2 + 1;\n        }\n        *param_1 = param_2;\n    }\n    *param_3 = param_2;\n    param_3[1] = param_2;\n    return 1;\n}\n",
        "token_count": 500
    }
}