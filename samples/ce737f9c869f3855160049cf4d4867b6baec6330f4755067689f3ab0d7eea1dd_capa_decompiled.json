{
    "00409a23": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409a23(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.0040a261(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 82
    },
    "00409b90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00409b90(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar18 = (arg_10h - 4) + arg_8h;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = arg_10h >> 2;\n            if (uVar16 < 8) goto code_r0x00409d78;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar18 = puVar18 + -1;\n            }\n    // switch table (4 cases) at 0x409e9c\n            switch(*((arg_10h & 3) * 4 + 0x409e9c)) {\n            case 0x409eb4:\ncode_r0x00409eb4:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x409ec4:\ncode_r0x00409ec4:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x409ed8:\ncode_r0x00409ed8:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                *(puVar18 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x409e9c\n            switch(*(arg_10h * 4 + 0x409e9c)) {\n            case 0x409eb4:\n                goto code_r0x00409eb4;\n            case 0x409ec4:\n                goto code_r0x00409ec4;\n            case 0x409ed8:\n                goto code_r0x00409ed8;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar18 & 3);\n            switch(*((puVar18 & 3) * 4 + 0x409da0)) {\n            case 0x409db0:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar16 = arg_10h >> 2;\n                puVar18 = puVar18 - 1;\n                if (uVar16 < 8) {\ncode_r0x00409d78:\n    // WARNING: Could not recover jumptable at 0x00409d7a. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x409e4c\n                    puVar18 = (**(uVar16 * -4 + 0x409e4c))();\n                    return puVar18;\n                }\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x409e9c)) {\n                case 0x409eb4:\n                    goto code_r0x00409eb4;\n                case 0x409ec4:\n                    goto code_r0x00409ec4;\n                case 0x409ed8:\n                    goto code_r0x00409ed8;\n                }\n                break;\n            case 0x409dd4:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar18 = puVar18 - 2;\n                if (uVar16 < 8) goto code_r0x00409d78;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x409e9c)) {\n                case 0x409eb4:\n                    goto code_r0x00409eb4;\n                case 0x409ec4:\n                    goto code_r0x00409ec4;\n                case 0x409ed8:\n                    goto code_r0x00409ed8;\n                }\n                break;\n            case 0x409dfc:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar18 = puVar18 - 3;\n                if (uVar16 < 8) goto code_r0x00409d78;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x409e9c)) {\n                case 0x409eb4:\n                    goto code_r0x00409eb4;\n                case 0x409ec4:\n                    goto code_r0x00409ec4;\n                case 0x409ed8:\n                    goto code_r0x00409ed8;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    if (((0x7f < arg_10h) && (*0x57c964 != 0)) && ((arg_8h & 0xf) == (arg_ch & 0xf))) {\n        puVar18 = arg_8h;\n        if ((arg_ch & 0xf) != 0) {\n            uVar17 = 0x10 - (arg_ch & 0xf);\n            arg_10h = arg_10h - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = arg_10h >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = arg_ch[1];\n            uVar2 = arg_ch[2];\n            uVar3 = arg_ch[3];\n            uVar4 = arg_ch[4];\n            uVar5 = arg_ch[5];\n            uVar6 = arg_ch[6];\n            uVar7 = arg_ch[7];\n            uVar8 = arg_ch[8];\n            uVar9 = arg_ch[9];\n            uVar10 = arg_ch[10];\n            uVar11 = arg_ch[0xb];\n            uVar12 = arg_ch[0xc];\n            uVar13 = arg_ch[0xd];\n            uVar14 = arg_ch[0xe];\n            uVar15 = arg_ch[0xf];\n            *puVar18 = *arg_ch;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = arg_ch[0x11];\n            uVar2 = arg_ch[0x12];\n            uVar3 = arg_ch[0x13];\n            uVar4 = arg_ch[0x14];\n            uVar5 = arg_ch[0x15];\n            uVar6 = arg_ch[0x16];\n            uVar7 = arg_ch[0x17];\n            uVar8 = arg_ch[0x18];\n            uVar9 = arg_ch[0x19];\n            uVar10 = arg_ch[0x1a];\n            uVar11 = arg_ch[0x1b];\n            uVar12 = arg_ch[0x1c];\n            uVar13 = arg_ch[0x1d];\n            uVar14 = arg_ch[0x1e];\n            uVar15 = arg_ch[0x1f];\n            puVar18[0x10] = arg_ch[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            arg_ch = arg_ch + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((arg_10h & 0x7f) != 0) {\n            for (uVar16 = (arg_10h & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = arg_ch[1];\n                uVar2 = arg_ch[2];\n                uVar3 = arg_ch[3];\n                *puVar18 = *arg_ch;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                arg_ch = arg_ch + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((arg_10h & 0xf) != 0) {\n                for (uVar16 = (arg_10h & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar18 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar17 = arg_10h >> 2;\n        if (uVar17 < 8) goto code_r0x00409c10;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar18 = puVar18 + 1;\n        }\n    // switch table (4 cases) at 0x409d00\n        switch(*((arg_10h & 3) * 4 + 0x409d00)) {\n        case 0x409d18:\ncode_r0x00409d18:\n            *puVar18 = *arg_ch;\n            return arg_8h;\n        case 0x409d24:\ncode_r0x00409d24:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x409d38:\ncode_r0x00409d38:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            *(puVar18 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x409d10)) {\n        case 0x409d18:\n            goto code_r0x00409d18;\n        case 0x409d24:\n            goto code_r0x00409d24;\n        case 0x409d38:\n            goto code_r0x00409d38;\n        }\n    }\n    else {\n        uVar16 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x409c14)) {\n        case 0x409c24:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar18 = arg_8h + 3;\n            if (uVar17 < 8) {\ncode_r0x00409c10:\n    // WARNING: Could not recover jumptable at 0x00409c10. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x409c94\n                puVar18 = (**(uVar17 * 4 + 0x409c94))();\n                return puVar18;\n            }\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x409d00)) {\n            case 0x409d18:\n                goto code_r0x00409d18;\n            case 0x409d24:\n                goto code_r0x00409d24;\n            case 0x409d38:\n                goto code_r0x00409d38;\n            }\n            break;\n        case 0x409c50:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar18 = arg_8h + 2;\n            if (uVar17 < 8) goto code_r0x00409c10;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x409d00)) {\n            case 0x409d18:\n                goto code_r0x00409d18;\n            case 0x409d24:\n                goto code_r0x00409d24;\n            case 0x409d38:\n                goto code_r0x00409d38;\n            }\n            break;\n        case 0x409c74:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar18 = arg_8h + 1;\n            if (uVar17 < 8) goto code_r0x00409c10;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x409d00)) {\n            case 0x409d18:\n                goto code_r0x00409d18;\n            case 0x409d24:\n                goto code_r0x00409d24;\n            case 0x409d38:\n                goto code_r0x00409d38;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 4196
    },
    "00409f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00409f00(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar18 = (arg_10h - 4) + arg_8h;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = arg_10h >> 2;\n            if (uVar16 < 8) goto code_r0x0040a0e8;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar18 = puVar18 + -1;\n            }\n    // switch table (4 cases) at 0x40a20c\n            switch(*((arg_10h & 3) * 4 + 0x40a20c)) {\n            case 0x40a224:\ncode_r0x0040a224:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x40a234:\ncode_r0x0040a234:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x40a248:\ncode_r0x0040a248:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                *(puVar18 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x40a20c\n            switch(*(arg_10h * 4 + 0x40a20c)) {\n            case 0x40a224:\n                goto code_r0x0040a224;\n            case 0x40a234:\n                goto code_r0x0040a234;\n            case 0x40a248:\n                goto code_r0x0040a248;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar18 & 3);\n            switch(*((puVar18 & 3) * 4 + 0x40a110)) {\n            case 0x40a120:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar16 = arg_10h >> 2;\n                puVar18 = puVar18 - 1;\n                if (uVar16 < 8) {\ncode_r0x0040a0e8:\n    // WARNING: Could not recover jumptable at 0x0040a0ea. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x40a1bc\n                    puVar18 = (**(uVar16 * -4 + 0x40a1bc))();\n                    return puVar18;\n                }\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40a20c)) {\n                case 0x40a224:\n                    goto code_r0x0040a224;\n                case 0x40a234:\n                    goto code_r0x0040a234;\n                case 0x40a248:\n                    goto code_r0x0040a248;\n                }\n                break;\n            case 0x40a144:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar18 = puVar18 - 2;\n                if (uVar16 < 8) goto code_r0x0040a0e8;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40a20c)) {\n                case 0x40a224:\n                    goto code_r0x0040a224;\n                case 0x40a234:\n                    goto code_r0x0040a234;\n                case 0x40a248:\n                    goto code_r0x0040a248;\n                }\n                break;\n            case 0x40a16c:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar18 = puVar18 - 3;\n                if (uVar16 < 8) goto code_r0x0040a0e8;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40a20c)) {\n                case 0x40a224:\n                    goto code_r0x0040a224;\n                case 0x40a234:\n                    goto code_r0x0040a234;\n                case 0x40a248:\n                    goto code_r0x0040a248;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    if (((0x7f < arg_10h) && (*0x57c964 != 0)) && ((arg_8h & 0xf) == (arg_ch & 0xf))) {\n        puVar18 = arg_8h;\n        if ((arg_ch & 0xf) != 0) {\n            uVar17 = 0x10 - (arg_ch & 0xf);\n            arg_10h = arg_10h - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = arg_10h >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = arg_ch[1];\n            uVar2 = arg_ch[2];\n            uVar3 = arg_ch[3];\n            uVar4 = arg_ch[4];\n            uVar5 = arg_ch[5];\n            uVar6 = arg_ch[6];\n            uVar7 = arg_ch[7];\n            uVar8 = arg_ch[8];\n            uVar9 = arg_ch[9];\n            uVar10 = arg_ch[10];\n            uVar11 = arg_ch[0xb];\n            uVar12 = arg_ch[0xc];\n            uVar13 = arg_ch[0xd];\n            uVar14 = arg_ch[0xe];\n            uVar15 = arg_ch[0xf];\n            *puVar18 = *arg_ch;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = arg_ch[0x11];\n            uVar2 = arg_ch[0x12];\n            uVar3 = arg_ch[0x13];\n            uVar4 = arg_ch[0x14];\n            uVar5 = arg_ch[0x15];\n            uVar6 = arg_ch[0x16];\n            uVar7 = arg_ch[0x17];\n            uVar8 = arg_ch[0x18];\n            uVar9 = arg_ch[0x19];\n            uVar10 = arg_ch[0x1a];\n            uVar11 = arg_ch[0x1b];\n            uVar12 = arg_ch[0x1c];\n            uVar13 = arg_ch[0x1d];\n            uVar14 = arg_ch[0x1e];\n            uVar15 = arg_ch[0x1f];\n            puVar18[0x10] = arg_ch[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            arg_ch = arg_ch + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((arg_10h & 0x7f) != 0) {\n            for (uVar16 = (arg_10h & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = arg_ch[1];\n                uVar2 = arg_ch[2];\n                uVar3 = arg_ch[3];\n                *puVar18 = *arg_ch;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                arg_ch = arg_ch + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((arg_10h & 0xf) != 0) {\n                for (uVar16 = (arg_10h & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar18 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar17 = arg_10h >> 2;\n        if (uVar17 < 8) goto code_r0x00409f80;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar18 = puVar18 + 1;\n        }\n    // switch table (4 cases) at 0x40a070\n        switch(*((arg_10h & 3) * 4 + 0x40a070)) {\n        case 0x40a088:\ncode_r0x0040a088:\n            *puVar18 = *arg_ch;\n            return arg_8h;\n        case 0x40a094:\ncode_r0x0040a094:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x40a0a8:\ncode_r0x0040a0a8:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            *(puVar18 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x40a080)) {\n        case 0x40a088:\n            goto code_r0x0040a088;\n        case 0x40a094:\n            goto code_r0x0040a094;\n        case 0x40a0a8:\n            goto code_r0x0040a0a8;\n        }\n    }\n    else {\n        uVar16 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x409f84)) {\n        case 0x409f94:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar18 = arg_8h + 3;\n            if (uVar17 < 8) {\ncode_r0x00409f80:\n    // WARNING: Could not recover jumptable at 0x00409f80. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x40a004\n                puVar18 = (**(uVar17 * 4 + 0x40a004))();\n                return puVar18;\n            }\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40a070)) {\n            case 0x40a088:\n                goto code_r0x0040a088;\n            case 0x40a094:\n                goto code_r0x0040a094;\n            case 0x40a0a8:\n                goto code_r0x0040a0a8;\n            }\n            break;\n        case 0x409fc0:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar18 = arg_8h + 2;\n            if (uVar17 < 8) goto code_r0x00409f80;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40a070)) {\n            case 0x40a088:\n                goto code_r0x0040a088;\n            case 0x40a094:\n                goto code_r0x0040a094;\n            case 0x40a0a8:\n                goto code_r0x0040a0a8;\n            }\n            break;\n        case 0x409fe4:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar18 = arg_8h + 1;\n            if (uVar17 < 8) goto code_r0x00409f80;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40a070)) {\n            case 0x40a088:\n                goto code_r0x0040a088;\n            case 0x40a094:\n                goto code_r0x0040a094;\n            case 0x40a0a8:\n                goto code_r0x0040a0a8;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 4225
    },
    "00406b68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.00406b68(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040a680();\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x40162c;\n        fcn.00406a54();\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    cVar1 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = 0x40149c;\n    if (cVar1 != '\\0') {\n        fcn.0040965c(*(*extraout_ECX + 4) + extraout_ECX);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 320
    },
    "00407181": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004071be)\n// WARNING: Removing unreachable block (ram,0x004071c9)\n\nint64_t __cdecl fcn.00407181(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uchar uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uchar *puVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    int64_t iVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    if ((-1 < arg_10h) && ((puVar5 = arg_8h,  var_4h = in_ECX,  iVar1 = 0,  0 < arg_10h || (iVar1 = 0,  arg_ch != 0))))\n    {\n        while( true ) {\n            do {\n                iVar8 = fcn.004070ef();\n                if (iVar8 < 1) {\n                    arg_8h = (**(*var_4h + 0x1c))();\n                    var_8h = fcn.004070a0();\n                    cVar2 = fcn.0040708e(&var_8h, &arg_8h);\n                    if (cVar2 != '\\0') {\n                        return iVar1;\n                    }\n                    uVar3 = fcn.0040707f(&arg_8h);\n                    *puVar5 = uVar3;\n                    puVar5 = puVar5 + 1;\n                    iVar1 = iVar1 + 1;\n                    bVar7 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar7;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar8) {\n                        iVar8 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    uVar6 = iVar8;\n                    uVar4 = fcn.00406a6c(uVar6);\n                    fcn.00404d07(puVar5, uVar4);\n                    puVar5 = puVar5 + uVar6;\n                    iVar1 = iVar8 + iVar1;\n                    bVar7 = arg_ch < uVar6;\n                    arg_ch = arg_ch - uVar6;\n                    arg_10h = (arg_10h - (iVar8 >> 0x20)) - bVar7;\n                    fcn.004070ce(uVar6);\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar1;\n            }\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 640
    },
    "00407266": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004072a2)\n// WARNING: Removing unreachable block (ram,0x004072ad)\n\nint64_t __cdecl fcn.00407266(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    bool bVar6;\n    int64_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    if ((-1 < arg_10h) && ((var_4h = in_ECX,  iVar2 = 0,  0 < arg_10h || (iVar2 = 0,  arg_ch != 0)))) {\n        while( true ) {\n            do {\n                iVar7 = fcn.00407110();\n                if (iVar7 < 1) {\n                    iVar1 = *var_4h;\n                    uVar4 = fcn.00407086(arg_8h);\n                    var_8h = (**(iVar1 + 0xc))(uVar4);\n                    var_ch = fcn.004070a0();\n                    cVar3 = fcn.0040708e(&var_ch, &var_8h);\n                    if (cVar3 != '\\0') {\n                        return iVar2;\n                    }\n                    arg_8h = arg_8h + 1;\n                    iVar2 = iVar2 + 1;\n                    bVar6 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar6;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar7) {\n                        iVar7 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    uVar5 = iVar7;\n                    uVar4 = fcn.00406a72(arg_8h, uVar5);\n                    fcn.00404d07(uVar4);\n                    arg_8h = arg_8h + uVar5;\n                    iVar2 = iVar7 + iVar2;\n                    bVar6 = arg_ch < uVar5;\n                    arg_ch = arg_ch - uVar5;\n                    arg_10h = (arg_10h - (iVar7 >> 0x20)) - bVar6;\n                    fcn.004070ff(uVar5);\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar2;\n            }\n        }\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 626
    },
    "00407542": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407542(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    \n    iVar1 = fcn.00406a72();\n    if ((iVar1 != 0) && (uVar2 = fcn.00406a72(),  *(in_ECX + 0x3c) < uVar2)) {\n        uVar3 = fcn.00406a72();\n        *(in_ECX + 0x3c) = uVar3;\n    }\n    if (((arg_18h & 1) != 0) && (iVar1 = fcn.00406a6c(),  uVar2 = *0x401704,  iVar1 != 0)) {\n        if (arg_14h == 2) {\n            iVar1 = fcn.00406a66();\n            uVar5 = *(in_ECX + 0x3c) - iVar1;\ncode_r0x004075be:\n            bVar7 = CARRY4(arg_ch, uVar5);\n            arg_ch = arg_ch + uVar5;\n            arg_10h = arg_10h + (uVar5 >> 0x1f) + bVar7;\n        }\n        else if (arg_14h == 1) {\n            if ((arg_18h & 2) == 0) {\n                iVar1 = fcn.00406a6c();\n                iVar4 = fcn.00406a66();\n                uVar5 = iVar1 - iVar4;\n                goto code_r0x004075be;\n            }\ncode_r0x004075cd:\n            arg_ch = *0x401700;\n            arg_10h = *0x401704;\n        }\n        else if (arg_14h != 0) goto code_r0x004075cd;\n        uVar5 = *0x401700;\n        if (-1 < arg_10h) {\n            iVar1 = fcn.00406a66();\n            uVar6 = *(in_ECX + 0x3c) - iVar1;\n            iVar1 = uVar6 >> 0x1f;\n            uVar5 = *0x401700;\n            if ((arg_10h <= iVar1) && ((arg_10h < iVar1 || (arg_ch <= uVar6)))) {\n                iVar1 = fcn.00406a6c();\n                iVar4 = fcn.00406a66();\n                fcn.004070ce((arg_ch - iVar1) + iVar4);\n                uVar5 = arg_ch;\n                uVar2 = arg_10h;\n                if (((arg_18h & 2) != 0) && (iVar1 = fcn.00406a72(),  iVar1 != 0)) {\n                    uVar3 = fcn.00406aa3();\n                    uVar3 = fcn.00406a6c(uVar3);\n                    uVar3 = fcn.004073a9(uVar3);\n                    fcn.00406aca(uVar3);\n                }\n            }\n        }\n        goto code_r0x00407732;\n    }\n    if (((arg_18h & 2) == 0) || (iVar1 = fcn.00406a72(),  uVar2 = *0x401704,  iVar1 == 0)) {\n        uVar5 = arg_ch;\n        uVar2 = arg_10h;\n        if ((arg_ch | arg_10h) != 0) {\n            arg_10h = *0x401704;\n            uVar5 = *0x401700;\n            uVar2 = arg_10h;\n        }\n        goto code_r0x00407732;\n    }\n    if (arg_14h == 2) {\n        iVar1 = fcn.00406a66();\n        uVar5 = *(in_ECX + 0x3c) - iVar1;\ncode_r0x004076b1:\n        bVar7 = CARRY4(arg_ch, uVar5);\n        arg_ch = arg_ch + uVar5;\n        arg_10h = arg_10h + (uVar5 >> 0x1f) + bVar7;\n    }\n    else {\n        if (arg_14h == 1) {\n            iVar1 = fcn.00406a72();\n            iVar4 = fcn.00406a66();\n            uVar5 = iVar1 - iVar4;\n            goto code_r0x004076b1;\n        }\n        if (arg_14h != 0) {\n            arg_ch = *0x401700;\n            arg_10h = *0x401704;\n        }\n    }\n    uVar5 = *0x401700;\n    if (-1 < arg_10h) {\n        iVar1 = fcn.00406a66();\n        uVar6 = *(in_ECX + 0x3c) - iVar1;\n        iVar1 = uVar6 >> 0x1f;\n        uVar5 = *0x401700;\n        if ((arg_10h <= iVar1) && ((arg_10h < iVar1 || (arg_ch <= uVar6)))) {\n            iVar1 = fcn.00406a72();\n            iVar4 = fcn.00406a66();\n            fcn.004070ff((arg_ch - iVar1) + iVar4);\n            uVar5 = arg_ch;\n            uVar2 = arg_10h;\n        }\n    }\ncode_r0x00407732:\n    arg_10h = uVar2;\n    fcn.00407120(uVar5, arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 1309
    },
    "00407748": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004077e4)\n// WARNING: Removing unreachable block (ram,0x00407879)\n\nuint __cdecl\nfcn.00407748(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint32_t arg_24h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int64_t iVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar6 = fcn.004073bf();\n    iVar2 = fcn.00406a72();\n    if ((iVar2 != 0) && (uVar3 = fcn.00406a72(),  *(in_ECX + 0x3c) < uVar3)) {\n        uVar4 = fcn.00406a72();\n        *(in_ECX + 0x3c) = uVar4;\n    }\n    uVar1 = *0x401704;\n    uVar4 = *0x401700;\n    if (iVar6 != CONCAT44(*0x401704, *0x401700)) {\n        if (((arg_24h & 1) == 0) || (iVar2 = fcn.00406a6c(),  iVar2 == 0)) {\n            if (((arg_24h & 2) != 0) &&\n               (((iVar2 = fcn.00406a72(),  iVar2 != 0 && (-1 < iVar6)) &&\n                (iVar2 = fcn.00406a66(),  iVar6 <= *(in_ECX + 0x3c) - iVar2)))) {\n                iVar2 = fcn.00406a72();\n                iVar5 = fcn.00406a66();\n                fcn.004070ff((iVar6 - iVar2) + iVar5);\n                goto code_r0x004078a3;\n            }\n        }\n        else if ((-1 < iVar6) && (iVar2 = fcn.00406a66(),  iVar6 <= *(in_ECX + 0x3c) - iVar2)) {\n            iVar2 = fcn.00406a6c();\n            iVar5 = fcn.00406a66();\n            fcn.004070ce((iVar6 - iVar2) + iVar5);\n            if (((arg_24h & 2) != 0) && (iVar2 = fcn.00406a72(),  iVar2 != 0)) {\n                uVar4 = fcn.00406aa3();\n                uVar4 = fcn.00406a6c(uVar4);\n                uVar4 = fcn.004073a9(uVar4);\n                fcn.00406aca(uVar4);\n            }\n            goto code_r0x004078a3;\n        }\n        iVar6 = CONCAT44(uVar1, uVar4);\n    }\ncode_r0x004078a3:\n    fcn.00407120(iVar6);\n    return arg_8h;\n}\n",
        "token_count": 703
    },
    "00407963": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407963(int32_t param_1, uint32_t param_2, uint param_3)\n\n{\n    if (*(param_1 + 0x38) == 0) {\n        param_2 = param_2 | 4;\n    }\n    fcn.00406f1b(param_2, param_3);\n    return;\n}\n",
        "token_count": 83
    },
    "00407b45": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00407b45(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.004070a0();\n    if (uVar1 < 2) {\n        return 1;\n    }\n    return uVar1 - 1;\n}\n",
        "token_count": 64
    },
    "00407b7f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00407b7f(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040a680();\n    *(unaff_EBP + -0x10) = arg_8h_00;\n    fcn.0040915e(0);\n    *(unaff_EBP + -4) = 0;\n    fcn.00406956();\n    fcn.00406956();\n    fcn.00406956();\n    fcn.00406956();\n    *(unaff_EBP + -4) = 4;\n    if (*(unaff_EBP + 8) == 0) {\n        fcn.00404d1e(0x401600);\n        fcn.0040a71f(unaff_EBP + -0x1c, 0x417c0c);\n    }\n    fcn.0040937a(arg_8h_00, *(unaff_EBP + 8));\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return arg_8h_00;\n}\n",
        "token_count": 314
    },
    "00407c55": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n\nuint __cdecl fcn.00407c55(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_34h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040a680();\n    *(unaff_EBP + -0x10) = 0;\n    piVar2 = *(unaff_EBP + 8);\n    if ((piVar2 != NULL) && (*piVar2 == 0)) {\n        iVar3 = fcn.0040a69f(0x18);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            uVar4 = fcn.00406d6d();\n            uVar4 = fcn.00407b7f(uVar4);\n            *(unaff_EBP + -0x10) = 1;\n            iVar3 = fcn.00406d77(uVar4, 0);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        uVar1 = *(unaff_EBP + -0x10);\n        *piVar2 = iVar3;\n        if ((uVar1 & 1) != 0) {\n            fcn.00407bfe();\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return 2;\n}\n",
        "token_count": 393
    },
    "00407cd1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00407cd1(uint32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = fcn.00404f4d(param_2);\n        fcn.00407963(uVar1 | param_1);\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "00407d33": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407d33(int32_t arg_8h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    int32_t in_ECX;\n    bool bVar10;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (((*(in_ECX + 0x40) & 8) != 0) && (iVar3 = fcn.00406a72(),  iVar3 != 0)) {\n        uVar7 = *(in_ECX + 0x3c);\n        uVar4 = fcn.00406a72();\n        if (uVar4 < uVar7) {\n            uVar5 = fcn.00406aa3();\n            uVar5 = fcn.004073a9(uVar7, uVar5);\n            fcn.00406aca(uVar5);\n        }\n    }\n    iVar3 = fcn.004070a0();\n    var_ch = iVar3;\n    cVar1 = fcn.0040708e(&var_ch, &arg_8h);\n    if (cVar1 != '\\0') {\n        iVar3 = fcn.004073c9(&arg_8h);\n        return iVar3;\n    }\n    iVar6 = fcn.00406a72();\n    if (iVar6 != 0) {\n        uVar7 = fcn.00406aa3();\n        uVar4 = fcn.00406a72();\n        if (uVar4 < uVar7) goto code_r0x00407ed8;\n    }\n    if ((*(in_ECX + 0x40) & 2) != 0) {\n        return iVar3;\n    }\n    iVar6 = fcn.00406a72();\n    if (iVar6 == 0) {\n        var_4h = 0;\n    }\n    else {\n        iVar6 = fcn.00406aa3();\n        iVar8 = fcn.00406a66();\n        var_4h = iVar6 - iVar8;\n    }\n    uVar7 = var_4h >> 1;\n    if (uVar7 < 0x20) {\n        uVar7 = 0x20;\n    }\n    else if (uVar7 == 0) {\n        return iVar3;\n    }\n    do {\n        if (var_4h <= 0x7fffffff - uVar7) break;\n        uVar7 = uVar7 >> 1;\n    } while (uVar7 != 0);\n    if (uVar7 == 0) {\n        return iVar3;\n    }\n    iVar6 = uVar7 + var_4h;\n    iVar3 = fcn.00407955(iVar6);\n    var_ch = fcn.00406a66();\n    bVar10 = var_4h == 0;\n    if (!bVar10) {\n        fcn.00404d07(iVar3, var_ch, var_4h);\n        bVar10 = var_4h == 0;\n    }\n    if (bVar10) {\n        *(in_ECX + 0x3c) = iVar3;\n        fcn.00406aae(iVar3, iVar3 + iVar6);\n    }\n    else {\n        *(in_ECX + 0x3c) = *(in_ECX + 0x3c) + (iVar3 - var_ch);\n        var_8h = iVar3 - var_ch;\n        iVar6 = fcn.00406a72(iVar3 + iVar6);\n        iVar6 = fcn.004073a9(iVar6 + var_8h);\n        fcn.00406aca(iVar6 + var_8h);\n        if ((*(in_ECX + 0x40) & 4) == 0) {\n            iVar6 = fcn.00406a72();\n            fcn.00406a6c(iVar6 + 1);\n        }\n    }\n    fcn.00406a83(iVar3);\n    if ((*(in_ECX + 0x40) & 1) != 0) {\n        fcn.00406a32(var_ch, var_4h);\n    }\n    *(in_ECX + 0x40) = *(in_ECX + 0x40) | 1;\ncode_r0x00407ed8:\n    puVar9 = fcn.004073af();\n    uVar2 = fcn.0040707f(&arg_8h);\n    *puVar9 = uVar2;\n    return arg_8h;\n}\n",
        "token_count": 1055
    },
    "00407f13": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407f13(uint *param_1, char param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    if ((param_2 != '\\0') && (0xf < param_1[5])) {\n        uVar1 = *param_1;\n        if (param_3 != 0) {\n            fcn.00404d07(param_1, uVar1, param_3);\n        }\n        fcn.00406a32(uVar1, param_1[5] + 1);\n    }\n    param_1[5] = 0xf;\n    fcn.0040798c(unaff_retaddr);\n    return;\n}\n",
        "token_count": 163
    },
    "00407ff6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.00407ff6(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040a680();\n    *(unaff_EBP + -0x10) = &var_18h;\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    uVar5 = *(unaff_EBP + 8) | 0xf;\n    uVar2 = fcn.00407b45();\n    *(unaff_EBP + -0x1c) = uVar2;\n    if (uVar2 < uVar5) {\n        uVar5 = *(unaff_EBP + 8);\n    }\n    else {\n        uVar2 = extraout_ECX[5];\n        *(unaff_EBP + -0x14) = uVar2;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar1 = *(unaff_EBP + -0x14);\n        if ((uVar5 / 3 < uVar1) && (uVar5 = *(unaff_EBP + -0x1c),  uVar2 <= uVar5 - uVar1)) {\n            uVar5 = uVar1 + uVar2;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.00407955(uVar5 + 1);\n    if (*(unaff_EBP + 0xc) != 0) {\n        uVar4 = fcn.00406a23(*(unaff_EBP + 0xc));\n        fcn.00404d07(uVar3, uVar4);\n    }\n    fcn.00407f13(1, 0);\n    uVar4 = *(unaff_EBP + 0xc);\n    *extraout_ECX = uVar3;\n    extraout_ECX[5] = uVar5;\n    fcn.0040798c(uVar4);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 655
    },
    "004081ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __thiscall fcn.004081ca(int32_t param_1, uint32_t param_2, uint param_3, uint param_4)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    char cVar2;\n    \n    uVar1 = fcn.00407b45();\n    if (uVar1 < param_2) {\n        fcn.00406c48();\n    }\n    if (*(param_1 + 0x14) < param_2) {\n        fcn.00407ff6(param_2, *(param_1 + 0x10), unaff_EDI, unaff_ESI, unaff_retaddr, param_2, param_3, param_4);\n    }\n    else if ((cVar2 == '\\0') || (0xf < param_2)) {\n        if (param_2 == 0) {\n            fcn.0040798c(0);\n        }\n    }\n    else {\n        uVar1 = *(param_1 + 0x10);\n        if (param_2 < *(param_1 + 0x10)) {\n            uVar1 = param_2;\n        }\n        fcn.00407f13(1, uVar1);\n    }\n    return param_2 != 0;\n}\n",
        "token_count": 298
    },
    "00408319": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408319(int32_t param_1, uint param_2)\n\n{\n    uchar uVar1;\n    char unaff_SI;\n    \n    fcn.00406fd7();\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x38) = param_2;\n    uVar1 = fcn.0040822e(0x20);\n    *(param_1 + 0x40) = uVar1;\n    if (*(param_1 + 0x38) == 0) {\n        fcn.00407cd1(4, 0);\n    }\n    if (unaff_SI != '\\0') {\n        fcn.0040965c(param_1);\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "004087c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nvoid __cdecl fcn.004087c8(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    uint var_14h;\n    uint var_ch_2;\n    \n    fcn.0040a680();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    *(unaff_EBP + -0x14) = *(unaff_EBP + 8);\n    while (*(unaff_EBP + 0xc) != 0) {\n        fcn.00408749();\n        *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + -1;\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) + 0x1c;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 285
    },
    "0040a261": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a261(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x57aa84, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0040c8ed();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0040c8ab(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0040a391": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040a391(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x40a43c;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0040a468;\n        uStack36 = *0x44d468 ^ &fcn.0040a391::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0040a391::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040d7e1();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0040a391::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 726
    },
    "0040b741": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b741(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x44d468) {\n        return;\n    }\n    *0x57b448 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x57b44c = &arg_8h;\n    *0x57b388 = 0x10001;\n    *0x57b330 = 0xc0000409;\n    *0x57b334 = 1;\n    var_328h = *0x44d468;\n    var_324h = *0x44d46c;\n    *0x57b33c = unaff_retaddr;\n    *0x57b414 = in_GS;\n    *0x57b418 = in_FS;\n    *0x57b41c = in_ES;\n    *0x57b420 = in_DS;\n    *0x57b424 = unaff_EDI;\n    *0x57b428 = unaff_ESI;\n    *0x57b42c = unaff_EBX;\n    *0x57b430 = in_EDX;\n    *0x57b434 = in_ECX;\n    *0x57b438 = in_EAX;\n    *0x57b43c = unaff_EBP;\n    *0x57b440 = unaff_retaddr;\n    *0x57b444 = in_CS;\n    *0x57b450 = in_SS;\n    *0x57b380 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00413be2(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402f6c);\n    if (*0x57b380 == 0) {\n        fcn.00413be2(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 833
    },
    "0040caf6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040caf6(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040d7e1();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040d7e1();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0040cdbd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cdbd(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0040a5cd(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040d7e1();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040d7e1();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0040a5a6(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040cb55(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "0040f214": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040f31a: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040f31f)\n// WARNING: Removing unreachable block (ram,0x0040f34e)\n// WARNING: Removing unreachable block (ram,0x0040f325)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040f214(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040ee10(0x4184f8, 0x20);\n    fcn.004116d8(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x57aaf4 != 1) {\n        *0x57aaf0 = 1;\n        *0x57aaec = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x57b948);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x57b944);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.0040d631();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.0040d631();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x57b948);\n                        piVar2 = (*pcVar1)(*0x57b944);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x401230;\n            while (*(unaff_EBP + -0x1c) < 0x40123c) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x401240;\n        while (*(unaff_EBP + -0x20) < 0x401244) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004115ff(8);\n    }\n    return;\n}\n",
        "token_count": 1017
    },
    "004138a5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004138a5(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004115ff(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0041486e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041486e(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d468 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.0040d631();\n    var_14h = 0;\n    if (*0x57b808 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x404230);\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x404224), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x004149cb;\n        *0x57b808 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x404214);\n        *0x57b80c = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x404200);\n        *0x57b810 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x4041e4);\n        *0x57b818 = (*pcVar4)(uVar3);\n        if (*0x57b818 != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x4041cc);\n            *0x57b814 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x57b814 == var_18h) || (*0x57b818 == var_18h)) {\ncode_r0x0041497a:\n        if ((((*0x57b80c != var_18h) && (pcVar4 = (*pcVar6)(*0x57b80c),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x57b810 != var_18h && (pcVar4 = (*pcVar6)(*0x57b810),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x57b814);\n        pcVar5 = (*pcVar6)(*0x57b818);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0041497a;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x57b808);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x004149cb:\n    fcn.0040b741(unaff_EBX);\n    return;\n}\n",
        "token_count": 932
    },
    "00405d39": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.00405d39(void)\n\n{\n    code *pcVar1;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpReturnedString;\n    uint lpConsoleTitle;\n    uint lpVersionInformation;\n    uint lpszLongPath;\n    uint lpFindFileData;\n    uint hActCtx;\n    int32_t var_34h;\n    uint lpOverlapped;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    int32_t lpBytesRead;\n    \n    uVar2 = 0;\n    do {\n        if (uVar2 < 0x1e3bd) {\n            (*_sym.imp.USER32.dll_GetMenuBarInfo)(0, 0, 0, 0);\n            (*_sym.imp.USER32.dll_GetMessageTime)();\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_ReleaseActCtx;\n    } while ((((uVar2 < 0x1ea07d10) || (lpBytesRead == 0xacef98)) || (var_34h == 0xad6910c)) &&\n            (uVar2 = uVar2 + 1,  uVar2 < 0x8df05308));\n    iVar3 = 0;\n    do {\n        if (iVar3 == 0x13b4) {\n            *0x57a524 = *0x57a524 + 0x38d6;\n        }\n        if (*0x57a524 == 0xdcc) {\n            (*pcVar1)(0);\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x31aa3a);\n    *0x5772b8 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, *0x57a524);\n    uVar2 = 0x962a66;\n    do {\n        if (*0x57a524 == 3) {\n            (*_sym.imp.KERNEL32.dll_FindNextFileW)(0, &lpFindFileData);\n        }\n        if (*0x57a524 == 0x71f) {\n            (*_sym.imp.KERNEL32.dll_EnumCalendarInfoA)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_VerifyVersionInfoW)(&lpVersionInformation, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_EnumCalendarInfoW)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetLongPathNameA)(0, &lpszLongPath, 0);\n            (*_sym.imp.KERNEL32.dll_GetStringTypeA)(0, 0, 0, 0, 0);\n        }\n        uVar2 = uVar2 - 1;\n    } while (uVar2 != 0);\n    if (*0x57a524 != 0) {\n        do {\n            if (*0x57a524 == 0xfe) {\n                (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpszLongPath, 0);\n                (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(0, 0, 0, 0);\n                (*pcVar1)(0);\n            }\n            fcn.004057bf(uVar2);\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *0x57a524);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_DeleteVolumeMountPointA;\n    if (*0x57a524 == 0x19c) {\n        (*_sym.imp.KERNEL32.dll_DeleteVolumeMountPointA)(0);\n        (*_sym.imp.KERNEL32.dll_ActivateActCtx)(&hActCtx, 0);\n        (*_sym.imp.KERNEL32.dll_EnumDateFormatsW)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll__hread)(0, 0x401390, 0);\n        lpOverlapped = 0;\n        var_14h = 0;\n        uStack20 = 0;\n        uStack16 = 0;\n        uStack12 = 0;\n        (*_sym.imp.KERNEL32.dll_TransactNamedPipe)(0, 0, 0, &lpszLongPath, 0, &lpBytesRead, &lpOverlapped);\n        (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesW)(0, 0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n        (*_sym.imp.KERNEL32.dll_SetVolumeMountPointW)(0, 0);\n        (*pcVar1)(0);\n    }\n    iVar3 = 0;\n    do {\n        if (iVar3 == 0xab9d) {\n            *0x57a520 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x44e168);\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x2594b);\n    *0x44e168 = 0;\n    iVar3 = 0;\n    do {\n        if (iVar3 == 0x148) {\n            fcn.004058da();\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x71761d);\n    fcn.00405797(*0x5772b8, *0x57a524, 0x44cae0);\n    iVar3 = 0;\n    do {\n        if (iVar3 == 0x2f64) {\n            fcn.004058cb();\n            iVar3 = extraout_ECX;\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x46d9a);\n    iVar3 = 0xdd7b3;\n    do {\n        if (*0x57a524 == 0x21) {\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileSectionA)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasA)(0, &lpszLongPath, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WriteProfileStringW)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetProfileSectionW)(0, &lpReturnedString, 0);\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *0x44e169 = 0x676d6973;\n    *0x44e171 = 0x6c6c;\n    *0x44e173 = 0;\n    *0x44e168 = 0x6d;\n    *0x44e16d = 0x642e3233;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x44e168);\n    iVar3 = 0x1ef75;\n    do {\n        (*_sym.imp.KERNEL32.dll_SetLastError)(0);\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    if (*0x57a524 == 0x58c) {\n        (*_sym.imp.KERNEL32.dll_SetPriorityClass)(0, 0);\n        (*pcVar1)(0x4013dc);\n        (*_sym.imp.KERNEL32.dll_GetLongPathNameA)(0, &lpszLongPath, 0);\n        (*_sym.imp.KERNEL32.dll_FindResourceA)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_CopyFileA)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetConsoleTitleA)(&lpConsoleTitle, 0);\n        (*_sym.imp.KERNEL32.dll_DeleteTimerQueueTimer)(0, 0, 0);\n    }\n    fcn.004058c4();\n    return 0;\n}\n",
        "token_count": 1765
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00406aea": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406aea(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if ((*(param_1 + 0x40) & 1) != 0) {\n        iVar1 = fcn.00406a72();\n        if (iVar1 == 0) {\n            iVar1 = fcn.00406a78();\n        }\n        else {\n            iVar1 = fcn.00406aa3();\n        }\n        iVar2 = fcn.00406a66();\n        uVar3 = fcn.00406a66(iVar1 - iVar2);\n        fcn.00406a32(uVar3);\n    }\n    fcn.00406a83(0, 0, 0);\n    fcn.00406aae(0, 0);\n    *(param_1 + 0x40) = *(param_1 + 0x40) & 0xfffffffe;\n    *(param_1 + 0x3c) = 0;\n    return;\n}\n",
        "token_count": 238
    },
    "00406bce": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00406bce(uint8_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if ((param_1 & 1) == 0) {\n        uVar1 = 4;\n    }\n    if ((param_1 & 2) == 0) {\n        uVar1 = uVar1 | 2;\n    }\n    if ((param_1 & 8) != 0) {\n        uVar1 = uVar1 | 8;\n    }\n    if ((param_1 & 4) != 0) {\n        uVar1 = uVar1 | 0x10;\n    }\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "00408275": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00408275(uint param_1, uint8_t param_2)\n\n{\n    fcn.004081a1();\n    if ((param_2 & 1) != 0) {\n        fcn.00409b80(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 69
    },
    "0040957c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040957c(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401660;\n    if ((arg_8h & 1) != 0) {\n        fcn.00409b80();\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004097a6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004097a6(uint32_t arg_8h)\n\n{\n    fcn.00409a9d();\n    if ((arg_8h & 1) != 0) {\n        fcn.00409b80();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00409ac6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409ac6(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401730;\n    fcn.00409a23();\n    if ((arg_8h & 1) != 0) {\n        fcn.00409b80();\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "00409b3f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409b3f(uint32_t arg_8h)\n\n{\n    fcn.00409b2f();\n    if ((arg_8h & 1) != 0) {\n        fcn.00409b80();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0040c95f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c95f(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x402100;\n    fcn.00409a9d();\n    if ((arg_8h & 1) != 0) {\n        fcn.00409b80();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0041449c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041449c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040ee10(0x418578, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0040c900();\n        *puVar2 = 0;\n        puVar2 = fcn.0040c8ed();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x57b820)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x57b840;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00413cd9(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0040c8ed();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0040c900();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00413d9f(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00414568();\n                goto code_r0x0041455f;\n            }\n        }\n        puVar2 = fcn.0040c900();\n        *puVar2 = 0;\n        puVar2 = fcn.0040c8ed();\n        *puVar2 = 9;\n        fcn.0040e822();\n    }\ncode_r0x0041455f:\n    fcn.0040ee55();\n    return;\n}\n",
        "token_count": 612
    },
    "0040c798": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040c798(uint32_t param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar18;\n    \n    puVar18 = unaff_EDI;\n    if ((unaff_ESI & 0xf) != 0) {\n        uVar17 = 0x10 - (unaff_ESI & 0xf);\n        param_1 = param_1 - uVar17;\n        for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n            *puVar18 = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n            puVar18 = puVar18 + 1;\n        }\n        for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n            puVar18 = puVar18 + 1;\n        }\n    }\n    for (uVar16 = param_1 >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n        uVar1 = unaff_ESI[1];\n        uVar2 = unaff_ESI[2];\n        uVar3 = unaff_ESI[3];\n        uVar4 = unaff_ESI[4];\n        uVar5 = unaff_ESI[5];\n        uVar6 = unaff_ESI[6];\n        uVar7 = unaff_ESI[7];\n        uVar8 = unaff_ESI[8];\n        uVar9 = unaff_ESI[9];\n        uVar10 = unaff_ESI[10];\n        uVar11 = unaff_ESI[0xb];\n        uVar12 = unaff_ESI[0xc];\n        uVar13 = unaff_ESI[0xd];\n        uVar14 = unaff_ESI[0xe];\n        uVar15 = unaff_ESI[0xf];\n        *puVar18 = *unaff_ESI;\n        puVar18[1] = uVar1;\n        puVar18[2] = uVar2;\n        puVar18[3] = uVar3;\n        puVar18[4] = uVar4;\n        puVar18[5] = uVar5;\n        puVar18[6] = uVar6;\n        puVar18[7] = uVar7;\n        puVar18[8] = uVar8;\n        puVar18[9] = uVar9;\n        puVar18[10] = uVar10;\n        puVar18[0xb] = uVar11;\n        puVar18[0xc] = uVar12;\n        puVar18[0xd] = uVar13;\n        puVar18[0xe] = uVar14;\n        puVar18[0xf] = uVar15;\n        uVar1 = unaff_ESI[0x11];\n        uVar2 = unaff_ESI[0x12];\n        uVar3 = unaff_ESI[0x13];\n        uVar4 = unaff_ESI[0x14];\n        uVar5 = unaff_ESI[0x15];\n        uVar6 = unaff_ESI[0x16];\n        uVar7 = unaff_ESI[0x17];\n        uVar8 = unaff_ESI[0x18];\n        uVar9 = unaff_ESI[0x19];\n        uVar10 = unaff_ESI[0x1a];\n        uVar11 = unaff_ESI[0x1b];\n        uVar12 = unaff_ESI[0x1c];\n        uVar13 = unaff_ESI[0x1d];\n        uVar14 = unaff_ESI[0x1e];\n        uVar15 = unaff_ESI[0x1f];\n        puVar18[0x10] = unaff_ESI[0x10];\n        puVar18[0x11] = uVar1;\n        puVar18[0x12] = uVar2;\n        puVar18[0x13] = uVar3;\n        puVar18[0x14] = uVar4;\n        puVar18[0x15] = uVar5;\n        puVar18[0x16] = uVar6;\n        puVar18[0x17] = uVar7;\n        puVar18[0x18] = uVar8;\n        puVar18[0x19] = uVar9;\n        puVar18[0x1a] = uVar10;\n        puVar18[0x1b] = uVar11;\n        puVar18[0x1c] = uVar12;\n        puVar18[0x1d] = uVar13;\n        puVar18[0x1e] = uVar14;\n        puVar18[0x1f] = uVar15;\n        unaff_ESI = unaff_ESI + 0x20;\n        puVar18 = puVar18 + 0x20;\n    }\n    if ((param_1 & 0x7f) != 0) {\n        for (uVar16 = (param_1 & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = unaff_ESI[1];\n            uVar2 = unaff_ESI[2];\n            uVar3 = unaff_ESI[3];\n            *puVar18 = *unaff_ESI;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            unaff_ESI = unaff_ESI + 4;\n            puVar18 = puVar18 + 4;\n        }\n        if ((param_1 & 0xf) != 0) {\n            for (uVar16 = (param_1 & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *unaff_ESI;\n                unaff_ESI = unaff_ESI + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n                *puVar18 = *unaff_ESI;\n                unaff_ESI = unaff_ESI + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n    }\n    return unaff_EDI;\n}\n",
        "token_count": 1607
    },
    "0040500d": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040500d(uint32_t *param_1, uint32_t param_2)\n\n{\n    *param_1 = *param_1 ^ param_2;\n    return;\n}\n",
        "token_count": 44
    },
    "00404dbc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00404dbc(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.0040915e(0);\n    iVar1 = *(param_1 + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(param_1 + 4) = iVar1 + -1;\n    }\n    iVar1 = *(param_1 + 4);\n    fcn.00409186();\n    return ~-(iVar1 != 0) & param_1;\n}\n",
        "token_count": 130
    },
    "00406ca2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406ca2(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    if ((arg_8h != 0) && (iVar1 = fcn.0040a69f(arg_8h),  iVar1 == 0)) {\n        fcn.00404cb0(0);\n        fcn.0040a71f(&var_ch, 0x417b14);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "004080e6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t __cdecl fcn.004080e6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040a680();\n    fcn.0040915e(0);\n    iVar1 = *0x57a93c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = iVar1;\n    uVar2 = fcn.00404d5f();\n    iVar3 = fcn.00404e60(uVar2);\n    if ((iVar3 == 0) && (iVar3 = iVar1,  iVar1 == 0)) {\n        iVar3 = fcn.00407c55(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00409aa8(0x401618);\n            fcn.0040a71f(unaff_EBP + -0x20, 0x417d84);\n        }\n        iVar3 = *(unaff_EBP + -0x10);\n        *0x57a93c = iVar3;\n        fcn.00404d94();\n        fcn.00404df7();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00409186();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar3;\n}\n",
        "token_count": 412
    },
    "004056b6": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004056b6(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    puVar5 = arg_8h;\n    iVar1 = *arg_ch;\n    iVar2 = arg_ch[1];\n    var_8h = *arg_8h;\n    uVar6 = arg_8h[1];\n    iVar3 = arg_ch[2];\n    iVar4 = arg_ch[3];\n    var_4h = -0x3910c8e0;\n    var_ch = 0x20;\n    do {\n        arg_8h = var_8h * 0x10 + iVar3;\n        arg_ch = (var_8h >> 5) + iVar4;\n        *0x5772bc = 0xffcf03fc;\n        fcn.0040500d(&arg_8h, var_4h + var_8h);\n        *0x5772bc = 0;\n        uVar6 = uVar6 - (arg_ch ^ arg_8h);\n        *0x5772c4 = 0xffffffff;\n        arg_ch = (uVar6 >> 5) + iVar2;\n        arg_8h = uVar6 * 0x10 + iVar1 ^ var_4h + uVar6;\n        *0x5772c0 = 0xff6b3619;\n        fcn.0040500d();\n        var_8h = var_8h - arg_8h;\n        var_4h = var_4h + 0x61c88647;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    puVar5[1] = uVar6;\n    *puVar5 = var_8h;\n    return;\n}\n",
        "token_count": 492
    },
    "00405797": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00405797(int32_t param_1, uint32_t param_2, uint param_3)\n\n{\n    for (param_2 = param_2 >> 3; param_2 != 0; param_2 = param_2 - 1) {\n        fcn.004056b6(param_1, param_3);\n        param_1 = param_1 + 8;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "004058da": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nvoid fcn.004058da(void)\n\n{\n    uint uStack144;\n    uint uStack140;\n    \n    uStack140 = 0x44e168;\n    *0x44e16c = 0x65;\n    *0x44e16d = 0x336c;\n    *0x44e16f = 0x6c642e32;\n    *0x44e173 = 0x6c;\n    *0x44e168 = 0x6e72656b;\n    *0x44e174 = *0x44e174 & 0xff00;\n    uStack144 = 0x405912;\n    *0x57a520 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    uStack144 = 0x44e168;\n    *0x44e173 = 0x65;\n    *0x44e16c = 0x75;\n    *0x44e16d = 0x6c61;\n    *0x44e168 = 0x74726956;\n    *0x44e174 = 0x7463;\n    *0x44e176 = 0;\n    *0x44e16f = 0x746f7250;\n    *0x44e164 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x57a520);\n    (**0x44e164)(*0x5772b8, *0x57a524, 0x40, &stack0xffffff70);\n    return;\n}\n",
        "token_count": 339
    },
    "00407a06": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407a06(int32_t param_1, uint param_2, int32_t param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x40) = param_4;\n    if ((param_3 != 0) && ((param_4 & 6) != 6)) {\n        iVar1 = fcn.00407955(param_3);\n        fcn.00404d07(iVar1, unaff_retaddr, param_3);\n        param_3 = param_3 + iVar1;\n        *(param_1 + 0x3c) = param_3;\n        if ((*(param_1 + 0x40) & 4) == 0) {\n            fcn.00406a83(iVar1, iVar1, param_3);\n        }\n        if ((*(param_1 + 0x40) & 2) == 0) {\n            iVar2 = param_3;\n            if ((*(param_1 + 0x40) & 0x10) == 0) {\n                iVar2 = iVar1;\n            }\n            fcn.00406aca(iVar1, iVar2, param_3);\n            iVar2 = fcn.00406a6c();\n            if (iVar2 == 0) {\n                fcn.00406a83(iVar1, 0, iVar1);\n            }\n        }\n        *(param_1 + 0x40) = *(param_1 + 0x40) | 1;\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "00407a93": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t fcn.00407a93(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00406bf7();\n    iVar2 = fcn.00407a8b();\n    if (iVar2 - (uVar1 >> 1) < uVar1) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = uVar1 + (uVar1 >> 1);\n    }\n    if (uVar1 < param_1) {\n        uVar1 = param_1;\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "00404fea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404fea(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    *arg_8h = arg_ch ^ arg_10h;\n    return;\n}\n",
        "token_count": 61
    },
    "004058cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004058cb(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00406c1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00406c1a(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 != 0) && (in_EAX = fcn.00406a23(),  in_EAX <= param_2)) {\n        iVar1 = fcn.00406a23();\n        in_EAX = iVar1 + *(param_1 + 0x10);\n        if (param_2 < in_EAX) {\n            return CONCAT31(in_EAX >> 8, 1);\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 152
    },
    "00406d6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00406d6d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(*param_1 + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = *param_1 + 0x1c;\n    }\n    return iVar1;\n}\n",
        "token_count": 78
    },
    "00406e3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406e3c(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    fcn.00409b90(arg_10h, arg_8h, arg_ch - arg_8h);\n    return arg_ch;\n}\n",
        "token_count": 67
    },
    "00406e62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406e62(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    fcn.00409b90(arg_14h, arg_8h, arg_ch - arg_8h);\n    return arg_ch;\n}\n",
        "token_count": 72
    },
    "0040798c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0040798c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_1h;\n    \n    *(in_ECX + 0x10) = arg_8h;\n    iVar1 = fcn.00406a23(&var_1h);\n    fcn.00404d11(iVar1 + arg_8h);\n    return;\n}\n",
        "token_count": 114
    },
    "00407a8b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00407a8b(void)\n\n{\n    return 0x9249249;\n}\n",
        "token_count": 23
    },
    "00407aec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00407aec(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(param_1 + 0x10);\n    if (uVar1 < param_2) {\n        uVar1 = fcn.00406b5d();\n    }\n    uVar1 = uVar1 - param_2;\n    if (uVar1 < param_3) {\n        param_3 = uVar1;\n    }\n    if (param_3 != 0) {\n        iVar2 = fcn.00406a23(uVar1 - param_3);\n        iVar2 = fcn.00406a23(iVar2 + param_2 + param_3);\n        fcn.00404d0c(iVar2 + param_2);\n        fcn.0040798c(*(param_1 + 0x10) - param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 232
    },
    "00408291": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408291(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    uVar2 = fcn.00406952();\n    if (uVar2 < arg_ch) {\n        fcn.00406b5d();\n    }\n    iVar3 = fcn.00406952();\n    uVar2 = iVar3 - arg_ch;\n    if (arg_10h < iVar3 - arg_ch) {\n        uVar2 = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.00407aec(uVar2 + arg_ch, 0xffffffff);\n        fcn.00407aec(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.004081ca(uVar2, 0);\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00406a23(uVar2);\n            uVar4 = fcn.00406a23(iVar3 + arg_ch);\n            fcn.00404d07(uVar4);\n            fcn.0040798c(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "004083a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004083a8(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_ECX;\n    \n    cVar1 = fcn.00406c1a(arg_8h);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004081ca(arg_ch, 0);\n        if (cVar1 != '\\0') {\n            uVar3 = fcn.00406a23(arg_8h, arg_ch);\n            fcn.00404d07(uVar3);\n            fcn.0040798c(arg_ch);\n        }\n    }\n    else {\n        iVar2 = fcn.00406a23();\n        fcn.00408291(in_ECX, arg_8h - iVar2, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00408407": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.00408407(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040a680();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x401624;\n        fcn.00406a54();\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    uVar1 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = 0x4014ac;\n    uVar2 = *(unaff_EBP + 8);\n    extraout_ECX[2] = 0;\n    extraout_ECX[3] = 0;\n    fcn.00408319(uVar2, uVar1);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 372
    },
    "004085c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004085c3(int32_t param_1, int32_t param_2)\n\n{\n    for (; param_1 != param_2; param_1 = param_1 + 0x1c) {\n        fcn.0040859f();\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "004086c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004086c5(uint *arg_8h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint uVar3;\n    uint *in_ECX;\n    \n    puVar1 = arg_8h;\n    if (in_ECX != arg_8h) {\n        uVar3 = fcn.00406cde(&arg_8h + 3);\n        uVar3 = fcn.00406cde(&arg_8h + 3, uVar3);\n        cVar2 = fcn.00407b68(uVar3);\n        if ((cVar2 == '\\0') || (puVar1[5] < 0x10)) {\n            fcn.00407f13(1, 0);\n            if (puVar1[5] < 0x10) {\n                fcn.00404d0c();\n            }\n            else {\n                *in_ECX = *puVar1;\n                *puVar1 = 0;\n            }\n            in_ECX[4] = puVar1[4];\n            in_ECX[5] = puVar1[5];\n            puVar1[4] = 0;\n            puVar1[5] = 0;\n        }\n        else {\n            fcn.0040859f(puVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "004087aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004087aa(int32_t param_1, int32_t param_2)\n\n{\n    for (; param_1 != param_2; param_1 = param_1 + 0x1c) {\n        fcn.0040860b();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "004088e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004088e6(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x1c) {\n        fcn.00406cde(arg_8h);\n        fcn.00408831();\n        arg_10h = arg_10h + 0x1c;\n    }\n    return arg_10h;\n}\n",
        "token_count": 112
    },
    "00408953": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408953(int32_t param_1, uint param_2, uint param_3)\n\n{\n    fcn.00408890(param_2, param_3, param_1 + 0xc);\n    return;\n}\n",
        "token_count": 56
    },
    "00408967": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408967(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.004088b7(arg_8h, arg_ch, arg_10h, in_ECX + 0xc);\n    return arg_ch * 0x1c + arg_8h;\n}\n",
        "token_count": 88
    },
    "00408a59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nuint __cdecl\nfcn.00408a59(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint arg_8h, uint noname_6, \n            uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint var_14h;\n    uint var_ch_2;\n    \n    fcn.0040a680();\n    *(unaff_EBP + -4) = 0;\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    *(unaff_EBP + -0x14) = *(unaff_EBP + 0x10);\n    for (; iVar2 != *(unaff_EBP + 0xc); iVar2 = iVar2 + 0x1c) {\n        fcn.004089b0();\n        *(unaff_EBP + 0x10) = *(unaff_EBP + 0x10) + 0x1c;\n    }\n    uVar1 = *(unaff_EBP + 0x10);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 330
    },
    "00408afd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408afd(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.00408aca(param_2, param_3, param_4, param_1 + 0xc);\n    return;\n}\n",
        "token_count": 65
    },
    "00408b15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00408b15(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040a680();\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    uVar3 = fcn.00407a8b();\n    uVar1 = *(unaff_EBP + 8);\n    if (uVar3 < uVar1) {\n        fcn.00406c0f();\n    }\n    uVar3 = fcn.00406bf7();\n    if (uVar3 < uVar1) {\n        uVar4 = fcn.00407ac8(uVar1);\n        *(unaff_EBP + -4) = 0;\n        iVar5 = extraout_ECX[1];\n        iVar2 = *extraout_ECX;\n        *(unaff_EBP + -0x14) = uVar4;\n        fcn.00408afd(iVar2, iVar5, uVar4);\n        iVar5 = fcn.00406c03();\n        if (*extraout_ECX != 0) {\n            fcn.00408953(*extraout_ECX, extraout_ECX[1]);\n            fcn.00406a32(*extraout_ECX, (extraout_ECX[2] - *extraout_ECX) / 0x1c);\n        }\n        iVar2 = *(unaff_EBP + -0x14);\n        extraout_ECX[2] = uVar1 * 0x1c + iVar2;\n        extraout_ECX[1] = iVar5 * 0x1c + iVar2;\n        *extraout_ECX = iVar2;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 535
    },
    "00408bd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nvoid __cdecl\nfcn.00408bd7(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *extraout_ECX;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_5ch;\n    uint var_40h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040a680();\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x10) = &stack0xffffffa4;\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    if (arg_ch_00 != 0) {\n        iVar2 = fcn.00406c03();\n        iVar3 = fcn.00407a8b();\n        if (iVar3 - iVar2 < arg_ch_00) {\n            fcn.00406c0f();\n        }\n        uVar4 = fcn.00406bf7();\n        if (uVar4 < iVar2 + arg_ch_00) {\n            iVar3 = fcn.00407a93(iVar2 + arg_ch_00);\n            *(unaff_EBP + -0x24) = iVar3;\n            uVar5 = fcn.00407ac8(iVar3);\n            *(unaff_EBP + -0x14) = uVar5;\n            iVar2 = *extraout_ECX;\n            *(unaff_EBP + -0x1c) = 0;\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -0x18) = (*(unaff_EBP + 8) - iVar2) / 0x1c;\n            uVar5 = fcn.00406cde(*(unaff_EBP + 0x10));\n            fcn.00408967(*(unaff_EBP + -0x18) * 0x1c + *(unaff_EBP + -0x14), arg_ch_00, uVar5);\n            *(unaff_EBP + -0x1c) = 1;\n            fcn.00408afd(*extraout_ECX, *(unaff_EBP + 8), *(unaff_EBP + -0x14));\n            iVar2 = extraout_ECX[1];\n            *(unaff_EBP + -0x1c) = 2;\n            fcn.00408afd(*(unaff_EBP + 8), iVar2, (*(unaff_EBP + -0x18) + arg_ch_00) * 0x1c + *(unaff_EBP + -0x14));\n            iVar2 = fcn.00406c03();\n            if (*extraout_ECX != 0) {\n                fcn.00408953(*extraout_ECX, extraout_ECX[1]);\n                fcn.00406a32(*extraout_ECX, (extraout_ECX[2] - *extraout_ECX) / 0x1c);\n            }\n            iVar1 = *(unaff_EBP + -0x14);\n            extraout_ECX[2] = iVar3 * 0x1c + iVar1;\n            extraout_ECX[1] = (arg_ch_00 + iVar2) * 0x1c + iVar1;\n            *extraout_ECX = iVar1;\n        }\n        else {\n            if ((extraout_ECX[1] - *(unaff_EBP + 8)) / 0x1c < arg_ch_00) {\n                fcn.00408369(*(unaff_EBP + 0x10), unaff_EDI, unaff_ESI, unaff_EBX);\n                iVar2 = extraout_ECX[1];\n                *(unaff_EBP + -4) = 2;\n                fcn.00408afd(*(unaff_EBP + 8), iVar2, arg_ch_00 * 0x1c + *(unaff_EBP + 8));\n                *(unaff_EBP + -4) = 3;\n                uVar5 = fcn.00406cde(unaff_EBP + -0x40);\n                fcn.00408967(extraout_ECX[1], arg_ch_00 - (extraout_ECX[1] - *(unaff_EBP + 8)) / 0x1c, uVar5);\n                extraout_ECX[1] = extraout_ECX[1] + arg_ch_00 * 0x1c;\n                iVar2 = extraout_ECX[1];\n                *(unaff_EBP + -4) = 2;\n                fcn.00408763(*(unaff_EBP + 8), iVar2 + arg_ch_00 * -0x1c, unaff_EBP + -0x40);\n            }\n            else {\n                fcn.00408369(*(unaff_EBP + 0x10), unaff_EDI, unaff_ESI, unaff_EBX);\n                iVar2 = extraout_ECX[1];\n                *(unaff_EBP + 0xc) = iVar2;\n                *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + arg_ch_00 * -0x1c;\n                *(unaff_EBP + -4) = 5;\n                iVar3 = fcn.00408afd(*(unaff_EBP + 0xc), iVar2, iVar2);\n                uVar5 = *(unaff_EBP + 0xc);\n                extraout_ECX[1] = iVar3;\n                fcn.00408783(*(unaff_EBP + 8), uVar5, iVar2);\n                fcn.00408763(*(unaff_EBP + 8), arg_ch_00 * 0x1c + *(unaff_EBP + 8), unaff_EBP + -0x5c);\n            }\n            fcn.004081a1();\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1602
    },
    "00408e4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408e4a(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    uVar1 = fcn.00406c03();\n    iVar2 = fcn.00407a8b();\n    if (iVar2 - param_1 < uVar1) {\n        fcn.00406c0f();\n    }\n    uVar3 = fcn.00406bf7();\n    if (uVar3 < uVar1 + param_1) {\n        uVar4 = fcn.00407a93(uVar1 + param_1);\n        fcn.00408b15(uVar4);\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00408ea1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408ea1(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint unaff_EDI;\n    \n    iVar3 = fcn.00406cde(param_2);\n    cVar2 = fcn.00406b46(iVar3);\n    if (cVar2 == '\\0') {\n        if (param_1[1] == param_1[2]) {\n            fcn.00408e4a(1);\n        }\n        fcn.00408749(param_1 + 3, param_1[1], unaff_EDI);\n    }\n    else {\n        iVar1 = *param_1;\n        if (param_1[1] == param_1[2]) {\n            fcn.00408e4a(1);\n        }\n        fcn.004085a4(param_1 + 3, param_1[1], ((iVar3 - iVar1) / 0x1c) * 0x1c + *param_1);\n    }\n    param_1[1] = param_1[1] + 0x1c;\n    return;\n}\n",
        "token_count": 271
    },
    "0040f354": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f354(uint arg_8h)\n\n{\n    fcn.0040f214(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0040fcd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040fceb)\n// WARNING: Removing unreachable block (ram,0x0040fcf1)\n// WARNING: Removing unreachable block (ram,0x0040fcf3)\n\nvoid fcn.0040fcd7(void)\n\n{\n    return;\n}\n",
        "token_count": 67
    },
    "004057bf": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get OS version",
            "get common file path",
            "create directory",
            "get geographical location",
            "manipulate console buffer"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004057bf(int32_t arg_8h)\n\n{\n    uint var_c2ch;\n    uint lpszVolumeMountPoint;\n    uint lpCPInfoEx;\n    uint var_20ch;\n    uint lpVersionInformation;\n    uint ReturnedData;\n    uint lpBuffer;\n    uint lpNumberOfEventsRead;\n    uint lpNumberOfEventsWritten;\n    \n    if (*0x57a524 == 0x37) {\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_CreateFileMappingA)(0, 0, 0, 0, 0, 0x401270);\n        (*_sym.imp.KERNEL32.dll_OpenEventW)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n        (*_sym.imp.KERNEL32.dll_VerifyVersionInfoW)(&var_20ch, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_ReadConsoleInputW)(0, &lpBuffer, 0, &lpNumberOfEventsRead);\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(0, 0);\n        (*_sym.imp.KERNEL32.dll_GlobalFlags)(0);\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryExW)(0x401308, 0x401290, 0);\n        (*_sym.imp.KERNEL32.dll_FindFirstVolumeMountPointA)(0, &lpszVolumeMountPoint, 0);\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&var_c2ch, 0);\n        (*_sym.imp.KERNEL32.dll_GetCPInfoExW)(0, 0, &lpCPInfoEx);\n        (*_sym.imp.KERNEL32.dll_WriteConsoleInputA)(0, 0, 0, &lpNumberOfEventsWritten);\n        (*_sym.imp.KERNEL32.dll_FindActCtxSectionGuid)(0, 0, 0, 0, &ReturnedData);\n        (*_sym.imp.KERNEL32.dll_CreateFileA)(0x401388, 0, 0, 0, 0, 0, 0);\n    }\n    *(*0x5772b8 + arg_8h) = *(*0x57a938 + 0x38d6 + arg_8h);\n    return;\n}\n",
        "token_count": 539
    },
    "004085e2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004085e2(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_8h != arg_ch) {\n        do {\n            arg_10h = arg_10h + -0x1c;\n            arg_ch = arg_ch + -0x1c;\n            fcn.0040859f();\n        } while (arg_ch != arg_8h);\n    }\n    return arg_10h;\n}\n",
        "token_count": 112
    },
    "0040adc1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040adc1(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.0040a261(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00415771": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00415771(void)\n\n{\n    *0x44e140 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x404248, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "00406c53": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406c53(int32_t param_1)\n\n{\n    *(param_1 + 0x10) = param_1 + 8;\n    *(param_1 + 0x14) = param_1 + 0xc;\n    *(param_1 + 0x20) = param_1 + 0x18;\n    *(param_1 + 0x24) = param_1 + 0x1c;\n    *(param_1 + 0x30) = param_1 + 0x28;\n    *(param_1 + 0x34) = param_1 + 0x2c;\n    fcn.00406aae(0, 0);\n    fcn.00406a83(0, 0, 0);\n    return;\n}\n",
        "token_count": 179
    },
    "00406fd7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406fd7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    *(param_1 + 0x30) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0x201;\n    *(param_1 + 0x18) = 6;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x2c) = 0;\n    fcn.00406fc9(0);\n    iVar1 = fcn.0040a69f(4);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00404e2e();\n    }\n    *(param_1 + 0x30) = uVar2;\n    return;\n}\n",
        "token_count": 270
    },
    "00404cf6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00404cf6(char *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    \n    pcVar1 = param_1 + 1;\n    do {\n        cVar2 = *param_1;\n        param_1 = param_1 + 1;\n    } while (cVar2 != '\\0');\n    return param_1 - pcVar1;\n}\n",
        "token_count": 91
    },
    "00404d07": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00404d07(uint *param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        param_2 = (param_3 - 4) + param_2;\n        puVar18 = (param_3 - 4) + param_1;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = param_3 >> 2;\n            if (uVar16 < 8) goto code_r0x00409d78;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + -1;\n                puVar18 = puVar18 + -1;\n            }\n            switch(param_3 & 3) {\n            case 1:\n                goto code_r0x00409eb4;\n            case 2:\n                goto code_r0x00409ec4;\n            case 3:\n                goto code_r0x00409ed8;\n            }\n        }\n        else {\n            switch(param_3) {\n            case 0:\n                break;\n            case 1:\ncode_r0x00409eb4:\n                *(puVar18 + 3) = *(param_2 + 3);\n                return param_1;\n            case 2:\ncode_r0x00409ec4:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                return param_1;\n            case 3:\ncode_r0x00409ed8:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                *(puVar18 + 1) = *(param_2 + 1);\n                return param_1;\n            default:\n                param_3 = param_3 - (puVar18 & 3);\n                switch(puVar18 & 3) {\n                case 1:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    param_2 = param_2 + -1;\n                    uVar16 = param_3 >> 2;\n                    puVar18 = puVar18 - 1;\n                    if (uVar16 < 8) {\ncode_r0x00409d78:\n    // WARNING: Could not recover jumptable at 0x00409d7a. Too many branches\n    // WARNING: Treating indirect jump as call\n                        puVar18 = (**(uVar16 * -4 + 0x409e4c))();\n                        return puVar18;\n                    }\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00409eb4;\n                    case 2:\n                        goto code_r0x00409ec4;\n                    case 3:\n                        goto code_r0x00409ed8;\n                    }\n                    break;\n                case 2:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    param_2 = param_2 + -2;\n                    puVar18 = puVar18 - 2;\n                    if (uVar16 < 8) goto code_r0x00409d78;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00409eb4;\n                    case 2:\n                        goto code_r0x00409ec4;\n                    case 3:\n                        goto code_r0x00409ed8;\n                    }\n                    break;\n                case 3:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 1) = *(param_2 + 1);\n                    param_2 = param_2 + -3;\n                    puVar18 = puVar18 - 3;\n                    if (uVar16 < 8) goto code_r0x00409d78;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00409eb4;\n                    case 2:\n                        goto code_r0x00409ec4;\n                    case 3:\n                        goto code_r0x00409ed8;\n                    }\n                }\n            }\n        }\n        return param_1;\n    }\n    if (((0x7f < param_3) && (*0x57c964 != 0)) && ((param_1 & 0xf) == (param_2 & 0xf))) {\n        puVar18 = param_1;\n        if ((param_2 & 0xf) != 0) {\n            uVar17 = 0x10 - (param_2 & 0xf);\n            param_3 = param_3 - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = param_3 >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = param_2[1];\n            uVar2 = param_2[2];\n            uVar3 = param_2[3];\n            uVar4 = param_2[4];\n            uVar5 = param_2[5];\n            uVar6 = param_2[6];\n            uVar7 = param_2[7];\n            uVar8 = param_2[8];\n            uVar9 = param_2[9];\n            uVar10 = param_2[10];\n            uVar11 = param_2[0xb];\n            uVar12 = param_2[0xc];\n            uVar13 = param_2[0xd];\n            uVar14 = param_2[0xe];\n            uVar15 = param_2[0xf];\n            *puVar18 = *param_2;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = param_2[0x11];\n            uVar2 = param_2[0x12];\n            uVar3 = param_2[0x13];\n            uVar4 = param_2[0x14];\n            uVar5 = param_2[0x15];\n            uVar6 = param_2[0x16];\n            uVar7 = param_2[0x17];\n            uVar8 = param_2[0x18];\n            uVar9 = param_2[0x19];\n            uVar10 = param_2[0x1a];\n            uVar11 = param_2[0x1b];\n            uVar12 = param_2[0x1c];\n            uVar13 = param_2[0x1d];\n            uVar14 = param_2[0x1e];\n            uVar15 = param_2[0x1f];\n            puVar18[0x10] = param_2[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            param_2 = param_2 + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((param_3 & 0x7f) != 0) {\n            for (uVar16 = (param_3 & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = param_2[1];\n                uVar2 = param_2[2];\n                uVar3 = param_2[3];\n                *puVar18 = *param_2;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                param_2 = param_2 + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((param_3 & 0xf) != 0) {\n                for (uVar16 = (param_3 & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return param_1;\n    }\n    puVar18 = param_1;\n    if ((param_1 & 3) == 0) {\n        uVar17 = param_3 >> 2;\n        if (uVar17 < 8) goto code_r0x00409c10;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *param_2;\n            param_2 = param_2 + 1;\n            puVar18 = puVar18 + 1;\n        }\n        switch(param_3 & 3) {\n        case 1:\n            goto code_r0x00409d18;\n        case 2:\n            goto code_r0x00409d24;\n        case 3:\n            goto code_r0x00409d38;\n        }\n    }\n    else {\n        switch(param_3) {\n        case 0:\n            break;\n        case 1:\ncode_r0x00409d18:\n            *puVar18 = *param_2;\n            return param_1;\n        case 2:\ncode_r0x00409d24:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            return param_1;\n        case 3:\ncode_r0x00409d38:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            *(puVar18 + 2) = *(param_2 + 2);\n            return param_1;\n        default:\n            uVar16 = (param_3 - 4) + (param_1 & 3);\n            switch(param_1 & 3) {\n            case 1:\n                *param_1 = *param_2;\n                *(param_1 + 1) = *(param_2 + 1);\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 2) = *(param_2 + 2);\n                param_2 = param_2 + 3;\n                puVar18 = param_1 + 3;\n                if (uVar17 < 8) {\ncode_r0x00409c10:\n    // WARNING: Could not recover jumptable at 0x00409c10. Too many branches\n    // WARNING: Treating indirect jump as call\n                    puVar18 = (**(uVar17 * 4 + 0x409c94))();\n                    return puVar18;\n                }\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00409d18;\n                case 2:\n                    goto code_r0x00409d24;\n                case 3:\n                    goto code_r0x00409d38;\n                }\n                break;\n            case 2:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 1) = *(param_2 + 1);\n                param_2 = param_2 + 2;\n                puVar18 = param_1 + 2;\n                if (uVar17 < 8) goto code_r0x00409c10;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00409d18;\n                case 2:\n                    goto code_r0x00409d24;\n                case 3:\n                    goto code_r0x00409d38;\n                }\n                break;\n            case 3:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                param_2 = param_2 + 1;\n                puVar18 = param_1 + 1;\n                if (uVar17 < 8) goto code_r0x00409c10;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00409d18;\n                case 2:\n                    goto code_r0x00409d24;\n                case 3:\n                    goto code_r0x00409d38;\n                }\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 3858
    },
    "00404d0c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00404d0c(uint *param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        param_2 = (param_3 - 4) + param_2;\n        puVar18 = (param_3 - 4) + param_1;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = param_3 >> 2;\n            if (uVar16 < 8) goto code_r0x0040a0e8;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + -1;\n                puVar18 = puVar18 + -1;\n            }\n            switch(param_3 & 3) {\n            case 1:\n                goto code_r0x0040a224;\n            case 2:\n                goto code_r0x0040a234;\n            case 3:\n                goto code_r0x0040a248;\n            }\n        }\n        else {\n            switch(param_3) {\n            case 0:\n                break;\n            case 1:\ncode_r0x0040a224:\n                *(puVar18 + 3) = *(param_2 + 3);\n                return param_1;\n            case 2:\ncode_r0x0040a234:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                return param_1;\n            case 3:\ncode_r0x0040a248:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                *(puVar18 + 1) = *(param_2 + 1);\n                return param_1;\n            default:\n                param_3 = param_3 - (puVar18 & 3);\n                switch(puVar18 & 3) {\n                case 1:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    param_2 = param_2 + -1;\n                    uVar16 = param_3 >> 2;\n                    puVar18 = puVar18 - 1;\n                    if (uVar16 < 8) {\ncode_r0x0040a0e8:\n    // WARNING: Could not recover jumptable at 0x0040a0ea. Too many branches\n    // WARNING: Treating indirect jump as call\n                        puVar18 = (**(uVar16 * -4 + 0x40a1bc))();\n                        return puVar18;\n                    }\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x0040a224;\n                    case 2:\n                        goto code_r0x0040a234;\n                    case 3:\n                        goto code_r0x0040a248;\n                    }\n                    break;\n                case 2:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    param_2 = param_2 + -2;\n                    puVar18 = puVar18 - 2;\n                    if (uVar16 < 8) goto code_r0x0040a0e8;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x0040a224;\n                    case 2:\n                        goto code_r0x0040a234;\n                    case 3:\n                        goto code_r0x0040a248;\n                    }\n                    break;\n                case 3:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 1) = *(param_2 + 1);\n                    param_2 = param_2 + -3;\n                    puVar18 = puVar18 - 3;\n                    if (uVar16 < 8) goto code_r0x0040a0e8;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x0040a224;\n                    case 2:\n                        goto code_r0x0040a234;\n                    case 3:\n                        goto code_r0x0040a248;\n                    }\n                }\n            }\n        }\n        return param_1;\n    }\n    if (((0x7f < param_3) && (*0x57c964 != 0)) && ((param_1 & 0xf) == (param_2 & 0xf))) {\n        puVar18 = param_1;\n        if ((param_2 & 0xf) != 0) {\n            uVar17 = 0x10 - (param_2 & 0xf);\n            param_3 = param_3 - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = param_3 >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = param_2[1];\n            uVar2 = param_2[2];\n            uVar3 = param_2[3];\n            uVar4 = param_2[4];\n            uVar5 = param_2[5];\n            uVar6 = param_2[6];\n            uVar7 = param_2[7];\n            uVar8 = param_2[8];\n            uVar9 = param_2[9];\n            uVar10 = param_2[10];\n            uVar11 = param_2[0xb];\n            uVar12 = param_2[0xc];\n            uVar13 = param_2[0xd];\n            uVar14 = param_2[0xe];\n            uVar15 = param_2[0xf];\n            *puVar18 = *param_2;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = param_2[0x11];\n            uVar2 = param_2[0x12];\n            uVar3 = param_2[0x13];\n            uVar4 = param_2[0x14];\n            uVar5 = param_2[0x15];\n            uVar6 = param_2[0x16];\n            uVar7 = param_2[0x17];\n            uVar8 = param_2[0x18];\n            uVar9 = param_2[0x19];\n            uVar10 = param_2[0x1a];\n            uVar11 = param_2[0x1b];\n            uVar12 = param_2[0x1c];\n            uVar13 = param_2[0x1d];\n            uVar14 = param_2[0x1e];\n            uVar15 = param_2[0x1f];\n            puVar18[0x10] = param_2[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            param_2 = param_2 + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((param_3 & 0x7f) != 0) {\n            for (uVar16 = (param_3 & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = param_2[1];\n                uVar2 = param_2[2];\n                uVar3 = param_2[3];\n                *puVar18 = *param_2;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                param_2 = param_2 + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((param_3 & 0xf) != 0) {\n                for (uVar16 = (param_3 & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return param_1;\n    }\n    puVar18 = param_1;\n    if ((param_1 & 3) == 0) {\n        uVar17 = param_3 >> 2;\n        if (uVar17 < 8) goto code_r0x00409f80;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *param_2;\n            param_2 = param_2 + 1;\n            puVar18 = puVar18 + 1;\n        }\n        switch(param_3 & 3) {\n        case 1:\n            goto code_r0x0040a088;\n        case 2:\n            goto code_r0x0040a094;\n        case 3:\n            goto code_r0x0040a0a8;\n        }\n    }\n    else {\n        switch(param_3) {\n        case 0:\n            break;\n        case 1:\ncode_r0x0040a088:\n            *puVar18 = *param_2;\n            return param_1;\n        case 2:\ncode_r0x0040a094:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            return param_1;\n        case 3:\ncode_r0x0040a0a8:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            *(puVar18 + 2) = *(param_2 + 2);\n            return param_1;\n        default:\n            uVar16 = (param_3 - 4) + (param_1 & 3);\n            switch(param_1 & 3) {\n            case 1:\n                *param_1 = *param_2;\n                *(param_1 + 1) = *(param_2 + 1);\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 2) = *(param_2 + 2);\n                param_2 = param_2 + 3;\n                puVar18 = param_1 + 3;\n                if (uVar17 < 8) {\ncode_r0x00409f80:\n    // WARNING: Could not recover jumptable at 0x00409f80. Too many branches\n    // WARNING: Treating indirect jump as call\n                    puVar18 = (**(uVar17 * 4 + 0x40a004))();\n                    return puVar18;\n                }\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x0040a088;\n                case 2:\n                    goto code_r0x0040a094;\n                case 3:\n                    goto code_r0x0040a0a8;\n                }\n                break;\n            case 2:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 1) = *(param_2 + 1);\n                param_2 = param_2 + 2;\n                puVar18 = param_1 + 2;\n                if (uVar17 < 8) goto code_r0x00409f80;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x0040a088;\n                case 2:\n                    goto code_r0x0040a094;\n                case 3:\n                    goto code_r0x0040a0a8;\n                }\n                break;\n            case 3:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                param_2 = param_2 + 1;\n                puVar18 = param_1 + 1;\n                if (uVar17 < 8) goto code_r0x00409f80;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x0040a088;\n                case 2:\n                    goto code_r0x0040a094;\n                case 3:\n                    goto code_r0x0040a0a8;\n                }\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 3877
    },
    "00406f1b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406f1b(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint *arg_8h_00;\n    int32_t in_ECX;\n    uint32_t uVar1;\n    uint32_t extraout_ECX;\n    uint uVar2;\n    uint uVar3;\n    uint var_1ch;\n    uint var_8h;\n    \n    *(in_ECX + 0xc) = arg_8h & 0x17;\n    uVar1 = *(in_ECX + 0x10) & arg_8h & 0x17;\n    if (uVar1 != 0) {\n        arg_8h_00 = NULL;\n        if (arg_ch == '\\0') goto code_r0x00406f3f;\n        uVar3 = 0;\n        do {\n            fcn.0040a71f(arg_8h_00, uVar3);\n            uVar1 = extraout_ECX;\ncode_r0x00406f3f:\n            if ((uVar1 & 4) == 0) {\n                if ((uVar1 & 2) == 0) {\n                    uVar3 = fcn.00404f2e(&var_8h, 1);\n                    uVar2 = 0x401534;\n                }\n                else {\n                    uVar3 = fcn.00404f2e(&var_8h, 1);\n                    uVar2 = 0x40154c;\n                }\n            }\n            else {\n                uVar3 = fcn.00404f2e(&var_8h, 1);\n                uVar2 = 0x401564;\n            }\n            fcn.00406ef5(uVar2, uVar3);\n            uVar3 = 0x417b68;\n            arg_8h_00 = &var_1ch;\n        } while( true );\n    }\n    return;\n}\n",
        "token_count": 424
    },
    "0040c6a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c6a0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040ee10(0x418260, 0xc);\n    fcn.004116d8(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x57aa80;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x57aa7c;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040c6e4;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040a261(arg_8h_00);\ncode_r0x0040c6e4:\n        fcn.0040a261(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040c707();\n    fcn.0040ee55();\n    return;\n}\n",
        "token_count": 403
    },
    "0040abe6": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040abe6(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040c913(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "0040ac16": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.0040ac16(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040c913(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 118
    }
}