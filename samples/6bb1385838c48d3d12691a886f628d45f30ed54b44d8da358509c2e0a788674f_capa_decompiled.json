{
    "008c32df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.008c32df(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.008c4b96(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "008c1f3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.008c1f3c(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    \n    if (param_2 != NULL) {\n        in_EAX = param_1 + 4;\n        puVar1 = in_EAX;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar1 = *in_EAX;\n        }\n        if (puVar1 <= param_2) {\n            if (0xf < *(param_1 + 0x18)) {\n                in_EAX = *in_EAX;\n            }\n            if (param_2 < *(param_1 + 0x14) + in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 201
    },
    "008c2146": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.008c2146(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    \n    if (param_2 != NULL) {\n        in_EAX = param_1 + 4;\n        puVar1 = in_EAX;\n        if (7 < *(param_1 + 0x18)) {\n            puVar1 = *in_EAX;\n        }\n        if (puVar1 <= param_2) {\n            if (7 < *(param_1 + 0x18)) {\n                in_EAX = *in_EAX;\n            }\n            in_EAX = in_EAX + *(param_1 + 0x14) * 2;\n            if (param_2 < in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 209
    },
    "008c21cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.008c21cd(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint arg_10h;\n    \n    if ((param_2 != '\\0') && (7 < *(param_1 + 0x18))) {\n        arg_10h = *(param_1 + 4);\n        if (param_3 != 0) {\n            fcn.008c0d13(param_1 + 4, 8, arg_10h, param_3);\n        }\n        fcn.008c3374(arg_10h);\n    }\n    *(param_1 + 0x18) = 7;\n    fcn.008c2128(param_3);\n    return;\n}\n",
        "token_count": 166
    },
    "008c2218": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c2218(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint *puVar3;\n    \n    if (*(in_ECX + 0x14) < arg_8h) {\n        fcn.008c30d2();\n    }\n    uVar2 = *(in_ECX + 0x14) - arg_8h;\n    if (uVar2 < arg_ch) {\n        arg_ch = uVar2;\n    }\n    if (arg_ch != 0) {\n        puVar3 = in_ECX + 4;\n        puVar1 = puVar3;\n        if (0xf < *(in_ECX + 0x18)) {\n            puVar1 = *puVar3;\n            puVar3 = *puVar3;\n        }\n        fcn.008c0d67(puVar3 + arg_8h, *(in_ECX + 0x18) - arg_8h, puVar1 + arg_ch + arg_8h, uVar2 - arg_ch);\n        fcn.008c210c(*(in_ECX + 0x14) - arg_ch);\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "008c23f6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c23f6(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint *puVar3;\n    uint var_4h;\n    \n    uVar1 = arg_8h;\n    if (*(in_ECX + 0x14) < arg_8h) {\n        fcn.008c30d2();\n    }\n    uVar2 = *(in_ECX + 0x14) - arg_8h;\n    if (uVar2 < arg_ch) {\n        arg_ch = uVar2;\n    }\n    if (arg_ch != 0) {\n        puVar3 = in_ECX + 4;\n        arg_8h = puVar3;\n        if (7 < *(in_ECX + 0x18)) {\n            arg_8h = *puVar3;\n            puVar3 = *puVar3;\n        }\n        fcn.008c0d2f(puVar3 + uVar1 * 2, *(in_ECX + 0x18) - uVar1, arg_8h + (uVar1 + arg_ch) * 2, uVar2 - arg_ch);\n        fcn.008c2128(*(in_ECX + 0x14) - arg_ch);\n    }\n    return;\n}\n",
        "token_count": 308
    },
    "008c258a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __thiscall fcn.008c258a(int32_t param_1, uint32_t param_2, char param_3)\n\n{\n    uint32_t uVar1;\n    \n    if (param_2 == 0xffffffff) {\n        fcn.008c309a();\n    }\n    if (*(param_1 + 0x18) < param_2) {\n        fcn.008c22d4(param_2, *(param_1 + 0x14));\n    }\n    else if ((param_3 == '\\0') || (0xf < param_2)) {\n        if (param_2 == 0) {\n            fcn.008c210c(0);\n        }\n    }\n    else {\n        uVar1 = *(param_1 + 0x14);\n        if (param_2 < *(param_1 + 0x14)) {\n            uVar1 = param_2;\n        }\n        fcn.008c2182(1, uVar1);\n    }\n    return param_2 != 0;\n}\n",
        "token_count": 228
    },
    "008c25e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __thiscall fcn.008c25e8(int32_t param_1, uint32_t param_2, char param_3)\n\n{\n    uint32_t uVar1;\n    \n    if (0x7ffffffe < param_2) {\n        fcn.008c309a();\n    }\n    if (*(param_1 + 0x18) < param_2) {\n        fcn.008c2476(param_2, *(param_1 + 0x14));\n    }\n    else if ((param_3 == '\\0') || (7 < param_2)) {\n        if (param_2 == 0) {\n            fcn.008c2128(0);\n        }\n    }\n    else {\n        uVar1 = *(param_1 + 0x14);\n        if (param_2 < *(param_1 + 0x14)) {\n            uVar1 = param_2;\n        }\n        fcn.008c21cd(1, uVar1);\n    }\n    return param_2 != 0;\n}\n",
        "token_count": 229
    },
    "008c2b2b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c2b2b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.008c3abd(8);\n    *(unaff_EBP + -0x14) = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    while (*(unaff_EBP + 0xc) != 0) {\n        fcn.008c2adb();\n        *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + -1;\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) + 0x1c;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.008c3b2c();\n    return;\n}\n",
        "token_count": 218
    },
    "008c342b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c342b(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x8df220) {\n        return;\n    }\n    *0xce9510 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0xce9514 = &arg_8h;\n    *0xce9450 = 0x10001;\n    *0xce93f8 = 0xc0000409;\n    *0xce93fc = 1;\n    var_328h = *0x8df220;\n    var_324h = *0x8df224;\n    *0xce9404 = unaff_retaddr;\n    *0xce94dc = in_GS;\n    *0xce94e0 = in_FS;\n    *0xce94e4 = in_ES;\n    *0xce94e8 = in_DS;\n    *0xce94ec = unaff_EDI;\n    *0xce94f0 = unaff_ESI;\n    *0xce94f4 = unaff_EBX;\n    *0xce94f8 = in_EDX;\n    *0xce94fc = in_ECX;\n    *0xce9500 = in_EAX;\n    *0xce9504 = unaff_EBP;\n    *0xce9508 = unaff_retaddr;\n    *0xce950c = in_CS;\n    *0xce9518 = in_SS;\n    *0xce9448 = (**0x8d8034)();\n    fcn.008c4e2e(1);\n    (**0x8d8030)(0);\n    (**0x8d802c)(0x8d84ac);\n    if (*0xce9448 == 0) {\n        fcn.008c4e2e(1);\n    }\n    uVar1 = (**0x8d8028)(0xc0000409);\n    (**0x8d8024)(uVar1);\n    return;\n}\n",
        "token_count": 793
    },
    "008c379a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.008c379a(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x8c3845;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.008c3871;\n        uStack36 = *0x8df220 ^ &fcn.008c379a::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.008c379a::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.008c50fd();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.008c379a::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 724
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "008c5640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.008c5640(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.008c6c28(0x8dbfb0, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.008c50fd();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.008c624d();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.008c62a0(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.008c5706();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.008c624d();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.008c6c6d();\n    return;\n}\n",
        "token_count": 572
    },
    "008c5706": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.008c5706(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.008c50fd();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.008c50fd();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "008c59ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c59ce(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.008c39d8(*(unaff_EBP + -0x28));\n    iVar1 = fcn.008c50fd();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.008c50fd();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.008c39b1(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.008c5766(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 384
    },
    "008c642e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.008c642e(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.008c88a0();\n    fcn.008c64ba(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 90
    },
    "008c833e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nfloat10 fcn.008c833e(double param_1)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    uchar in_XMM0 [16];\n    double dVar7;\n    double dVar8;\n    uint64_t in_XMM2_Qa;\n    double dVar9;\n    uint32_t uVar11;\n    uchar auVar10 [16];\n    double dVar12;\n    ulong in_XMM6_Qa;\n    double dVar13;\n    double dVar14;\n    double dVar15;\n    double dVar16;\n    double dVar17;\n    uint in_XMM7_Dc;\n    uint in_XMM7_Dd;\n    double dStack12;\n    \n    dVar6 = SUB168(in_XMM0, 0);\n    uVar11 = SUB164(in_XMM0 >> 0x20, 0);\n    uVar3 = uVar11 >> 0xc;\n    auVar10 = pinsrw(ZEXT816(0), 0x2000, 2);\n    uVar2 = uVar3 & 0x7ffff;\n    if (uVar2 - 0x3fb00 < 0x3bb) {\n        iVar4 = (uVar3 & 0xfffc) - 0xfb00;\n        auVar10 = CONCAT88(in_XMM2_Qa & CONCAT44(in_XMM7_Dd, in_XMM7_Dc), *0x8d9d38 & dVar6) | auVar10;\n        iVar5 = iVar4 * 4;\n        dVar9 = SUB168(auVar10, 0);\n        dVar13 = dVar6 * *(iVar4 * 2 + 0x8d94a0);\n        dVar1 = SQRT(*0x8d9d40 - dVar6 * dVar6) * dVar9;\n        dVar7 = dVar13 - dVar1;\n        uVar11 = SUB164(auVar10 >> 0x20, 0);\n        uVar2 = uVar11 & 0x80000000;\n        dVar8 = dVar7 * dVar7;\n        return ((dVar6 - dVar9) * (dVar6 + dVar9)) / (dVar13 + dVar1) +\n               (*0x8d9ce0 + *0x8d9ce8 * dVar8) * dVar7 * dVar8 * dVar8 +\n               _str.UUUUUU * dVar7 * dVar8 + (*(iVar5 + 0x8d85a0) ^ uVar2 << 0x20) +\n               ((*(iVar5 + 0x8d85a8) ^ SUB168(CONCAT412(uVar11, ZEXT412(uVar2) << 0x20) >> 0x40, 0)) &\n               0xffffffff00000000);\n    }\n    if (uVar2 - 0x3febb < 0x43) {\n        dVar1 = SQRT(*0x8d9d40 - dVar6 * dVar6);\n        dVar7 = dVar6 & *0x8d9cd0;\n        dVar8 = (dVar6 & 0x7fffffffffffffff) - dVar7;\n        dVar9 = *0x8d9d38 & dVar1 | SUB168(auVar10, 0);\n        iVar5 = ((dVar1 << 2) >> 0x30) - 0xfec0;\n        dVar1 = dVar1 * *(iVar5 * 8 + 0x8d94a0);\n        dVar13 = (dVar7 * dVar9 - dVar1) + dVar8 * dVar9;\n        iVar5 = iVar5 * 0x10;\n        dVar14 = dVar13 * dVar13;\n        auVar10 = pinsrw(0x0, (SUB161(CONCAT412(in_XMM7_Dd, CONCAT48(in_XMM7_Dc, dVar6)) >> 0x3f, 0) & 1) << 0xf, 3);\n        return (((*0x8d9ce8 * dVar14 + *0x8d9ce0) * dVar13 * dVar14 * dVar14 +\n                _str.UUUUUU * dVar13 * dVar14 + (*0x8d9ca0 - *(iVar5 + 0x8d85a0))) -\n               (((*0x8d9d40 - dVar7 * dVar7) - dVar9 * dVar9) - ((dVar6 & 0x7fffffffffffffff) + dVar7) * dVar8) /\n               (dVar1 + dVar1 + dVar13)) + (*0x8d9ca8 - *(iVar5 + 0x8d85a8) & 0xffffffff00000000) | SUB168(auVar10, 0);\n    }\n    if (uVar2 - 0x3c300 < 0x3800) {\n        dVar1 = dVar6 * dVar6;\n        dVar7 = dVar6 * dVar6;\n        dVar8 = dVar6 * dVar1;\n        return dVar6 + dVar8 * dVar8 * dVar8 * (*0x8d9cf0 * dVar1 + *0x8d9d00 + *0x8d9d10 * dVar1 * dVar1) +\n                       dVar6 * dVar7 * (*0x8d9cf8 * dVar7 + *0x8d9d08 + *0x8d9d18 * dVar7 * dVar7);\n    }\n    if (uVar2 - 0x3fefe < 2) {\n        dVar1 = SQRT(*0x8d9d40 - dVar6 * dVar6);\n        dVar8 = dVar6 & *0x8d9cc0;\n        uVar11 = dVar1 >> 0x20;\n        dVar14 = dVar1 & 0xffffffff | uVar11 << 0x20;\n        dVar7 = dVar1 & *0x8d9cc0;\n        dVar6 = dVar6 - dVar8;\n        dVar12 = SUB168(CONCAT412(uVar11, CONCAT48(SUB84(dVar1, 0), dVar14)) >> 0x40, 0);\n        dVar15 = SUB128(CONCAT84(in_XMM6_Qa, uVar11), 0) << 0x20;\n        dVar1 = (uVar11 << 0x20) * (uVar11 << 0x20);\n        dVar9 = (uVar11 << 0x20) * (uVar11 << 0x20);\n        dVar16 = dVar15 * dVar1;\n        dVar17 = SUB168(CONCAT412(uVar11, ZEXT812(dVar15)) >> 0x40, 0) * dVar9;\n        dVar13 = dVar16 * dVar16 * dVar16;\n        auVar10 = pinsrw(ZEXT816(0), SUB162(in_XMM0 >> 0x30, 0) & 0x8000, 3);\n        return (((*0x8d9ca0 + (*0x8d9d20 * dVar1 + *0x8d9d28) * dVar16 * dVar16 * dVar13) -\n                ((dVar1 * dVar1 * *0x8d9d10 + *0x8d9d00 + *0x8d9cf0 * dVar1) * dVar13 +\n                 (SUB128(CONCAT84(dVar17, (dVar9 * dVar9 * *0x8d9d18 + *0x8d9d08 + *0x8d9cf8 * dVar9) * dVar17 >> 0x20)\n                         , 0) << 0x20) +\n                (((((*0x8d9d40 - dVar8 * dVar8) - (dVar8 + dVar8) * dVar6) - dVar7 * dVar7) - dVar6 * dVar6) +\n                (dVar14 + dVar14 + (dVar7 - dVar14)) * (dVar7 - dVar14)) / (dVar12 + dVar12))) -\n               (dVar15 - (*0x8d9ca8 + (dVar15 - *0x8d9ca8)))) - (dVar15 - *0x8d9ca8) | SUB168(auVar10, 0);\n    }\n    if (uVar2 < 0x3ff00) {\n        if (0x7fdf < (param_1 >> 0x30 & 0x7ff0) - 0x10) {\n            param_1 = param_1 | param_1 + 0.0;\n        }\n        return param_1;\n    }\n    if ((0x3ff00000 - (uVar11 & 0x7fffffff) | SUB164(in_XMM0, 0)) != 0) {\n        if (((param_1 >> 0x20 & 0x7fffffff) + 0x80100000) - (SUB84(param_1, 0) == 0) < 0) {\n            auVar10 = pinsrw(ZEXT816(0), 0x7ff0, 3);\n            dStack12 = SUB168(auVar10, 0) * 0.0;\n            arg_14h = 0x3d;\n        }\n        else {\n            dStack12 = param_1 + 0.0;\n            arg_14h = 0x3f1;\n        }\n        fcn.008cf423(&param_1, &param_1, &dStack12, arg_14h);\n        return dStack12;\n    }\n    return *0x8d9ca8 + *0x8d9ca0 | ~*0x8d9d30 & dVar6;\n}\n",
        "token_count": 2285
    },
    "008cb460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x008cb553: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x008cb558)\n// WARNING: Removing unreachable block (ram,0x008cb586)\n// WARNING: Removing unreachable block (ram,0x008cb55e)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.008cb460(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.008c6c28(0x8dc170, 0x18);\n    fcn.008cc1c6(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0xce9770 != 1) {\n        *0xce976c = 1;\n        *0xce9768 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.008c4eb1(*0xce9fb4);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.008c4eb1(*0xce9fb0);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.008c4ea8();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.008c4eb1(*piVar2);\n                        iVar3 = fcn.008c4ea8();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.008c4eb1(*0xce9fb4);\n                        piVar1 = fcn.008c4eb1(*0xce9fb0);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.008cb39a(0x8d8170);\n        }\n        fcn.008cb39a(0x8d8178);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.008cc0ec(8);\n    }\n    return;\n}\n",
        "token_count": 802
    },
    "008d066e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.008d066e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x8df220 ^ &stack0xfffffffc;\n    fcn.008c71f5(arg_10h);\n    var_14h = fcn.008d55ce(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.008d4b46(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x008d06c7:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x008d0707;\n        }\n        if (iVar1 != 2) {\ncode_r0x008d06f9:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x008d0707;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x008d06f9;\n        goto code_r0x008d06c7;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x008d0707:\n    fcn.008c342b(unaff_EBX);\n    return;\n}\n",
        "token_count": 509
    },
    "008d0716": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.008d0716(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x8df220 ^ &stack0xfffffffc;\n    fcn.008c71f5(arg_10h);\n    var_14h = fcn.008d55ce(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.008d508a(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x008d076f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x008d07af;\n        }\n        if (iVar1 != 2) {\ncode_r0x008d07a1:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x008d07af;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x008d07a1;\n        goto code_r0x008d076f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x008d07af:\n    fcn.008c342b(unaff_EBX);\n    return;\n}\n",
        "token_count": 506
    },
    "008d0d1a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.008d0d1a(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.008cc0ec(0);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "008d0d74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.008d0d74(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.008c4ea8();\n    var_4h = 0;\n    if (*0xce9eb0 == 0) {\n        iVar2 = (**0x8d80f8)(\"USER32.DLL\");\n        pcVar4 = *0x8d8010;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (**0x8d8010)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0xce9eb0 = fcn.008c4e36(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0xce9eb4 = fcn.008c4e36(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0xce9eb8 = fcn.008c4e36(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0xce9ec0 = fcn.008c4e36(uVar3);\n        if (*0xce9ec0 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0xce9ebc = fcn.008c4e36(uVar3);\n        }\n    }\n    if ((*0xce9ebc != iVar1) && (*0xce9ec0 != iVar1)) {\n        pcVar4 = fcn.008c4eb1(*0xce9ebc);\n        pcVar5 = fcn.008c4eb1(*0xce9ec0);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x008d0eb6;\n        }\n    }\n    if ((((*0xce9eb4 != iVar1) && (pcVar4 = fcn.008c4eb1(*0xce9eb4),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0xce9eb8 != iVar1 && (pcVar4 = fcn.008c4eb1(*0xce9eb8),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x008d0eb6:\n    pcVar4 = fcn.008c4eb1(*0xce9eb0);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 827
    },
    "008d4b46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.008d4b46(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x008d5047;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x008d4c7b;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x008d4c82;\ncode_r0x008d4c7b:\n                        do {\n                            var_4h = 1;\ncode_r0x008d4c82:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x008d4c90;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x008d4c90:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x8e04b0 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x8e04b0 < iVar12) {\n                if (iVar12 < *0x8e04ac) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x8e04ac;\n                    uVar5 = 1;\n                }\n                goto code_r0x008d5047;\n            }\n            var_10h = *0x8e04b0 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x008d4e33;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x008d4e33:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x008d5047:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3683
    },
    "008d508a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.008d508a(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x008d558b;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x8e04cc - 1;\n        iVar4 = *0x8e04cc + (*0x8e04cc >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x8e04cc & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x008d51bf;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x008d51c6;\ncode_r0x008d51bf:\n                        do {\n                            var_4h = 1;\ncode_r0x008d51c6:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x008d51d4;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x008d51d4:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x8e04c8 - *0x8e04cc) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x8e04c8 < iVar12) {\n                if (iVar12 < *0x8e04c4) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x8e04d8;\n                    iVar4 = *0x8e04d0 + (*0x8e04d0 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x8e04d0 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x8e04d0 + (*0x8e04d0 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x8e04d0 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x8e04d8 + *0x8e04c4;\n                    uVar5 = 1;\n                }\n                goto code_r0x008d558b;\n            }\n            var_10h = *0x8e04c8 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x8e04cc - 1;\n            iVar12 = *0x8e04cc + (*0x8e04cc >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x8e04cc & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x008d5377;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x008d5377:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x8e04d0 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x008d558b:\n    var_20h = iVar12 << (0x1fU - *0x8e04d0 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x8e04d4 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x8e04d4 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3685
    },
    "008d55ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x008d5890)\n// WARNING: Removing unreachable block (ram,0x008d5859)\n// WARNING: Removing unreachable block (ram,0x008d5c41)\n// WARNING: Removing unreachable block (ram,0x008d5868)\n// WARNING: Removing unreachable block (ram,0x008d5870)\n// WARNING: Removing unreachable block (ram,0x008d5876)\n// WARNING: Removing unreachable block (ram,0x008d5879)\n// WARNING: Removing unreachable block (ram,0x008d5880)\n// WARNING: Removing unreachable block (ram,0x008d588a)\n// WARNING: Removing unreachable block (ram,0x008d58e5)\n// WARNING: Removing unreachable block (ram,0x008d58df)\n// WARNING: Removing unreachable block (ram,0x008d58eb)\n// WARNING: Removing unreachable block (ram,0x008d5908)\n// WARNING: Removing unreachable block (ram,0x008d590a)\n// WARNING: Removing unreachable block (ram,0x008d5912)\n// WARNING: Removing unreachable block (ram,0x008d5915)\n// WARNING: Removing unreachable block (ram,0x008d591a)\n// WARNING: Removing unreachable block (ram,0x008d591d)\n// WARNING: Removing unreachable block (ram,0x008d5c4a)\n// WARNING: Removing unreachable block (ram,0x008d5928)\n// WARNING: Removing unreachable block (ram,0x008d5c61)\n// WARNING: Removing unreachable block (ram,0x008d5c68)\n// WARNING: Removing unreachable block (ram,0x008d5933)\n// WARNING: Removing unreachable block (ram,0x008d5946)\n// WARNING: Removing unreachable block (ram,0x008d5948)\n// WARNING: Removing unreachable block (ram,0x008d5955)\n// WARNING: Removing unreachable block (ram,0x008d595a)\n// WARNING: Removing unreachable block (ram,0x008d5960)\n// WARNING: Removing unreachable block (ram,0x008d5969)\n// WARNING: Removing unreachable block (ram,0x008d5970)\n// WARNING: Removing unreachable block (ram,0x008d5988)\n// WARNING: Removing unreachable block (ram,0x008d5999)\n// WARNING: Removing unreachable block (ram,0x008d59a7)\n// WARNING: Removing unreachable block (ram,0x008d59e6)\n// WARNING: Removing unreachable block (ram,0x008d59ef)\n// WARNING: Removing unreachable block (ram,0x008d5c07)\n// WARNING: Removing unreachable block (ram,0x008d59fd)\n// WARNING: Removing unreachable block (ram,0x008d5a07)\n// WARNING: Removing unreachable block (ram,0x008d5c22)\n// WARNING: Removing unreachable block (ram,0x008d5a14)\n// WARNING: Removing unreachable block (ram,0x008d5a1b)\n// WARNING: Removing unreachable block (ram,0x008d5a25)\n// WARNING: Removing unreachable block (ram,0x008d5a2a)\n// WARNING: Removing unreachable block (ram,0x008d5a3a)\n// WARNING: Removing unreachable block (ram,0x008d5a3f)\n// WARNING: Removing unreachable block (ram,0x008d5a49)\n// WARNING: Removing unreachable block (ram,0x008d5a4e)\n// WARNING: Removing unreachable block (ram,0x008d5a60)\n// WARNING: Removing unreachable block (ram,0x008d5a6d)\n// WARNING: Removing unreachable block (ram,0x008d5a7c)\n// WARNING: Removing unreachable block (ram,0x008d5a89)\n// WARNING: Removing unreachable block (ram,0x008d5aa6)\n// WARNING: Removing unreachable block (ram,0x008d5aaa)\n// WARNING: Removing unreachable block (ram,0x008d5ab1)\n// WARNING: Removing unreachable block (ram,0x008d5aba)\n// WARNING: Removing unreachable block (ram,0x008d5abd)\n// WARNING: Removing unreachable block (ram,0x008d5ace)\n// WARNING: Removing unreachable block (ram,0x008d5adc)\n// WARNING: Removing unreachable block (ram,0x008d5ae7)\n// WARNING: Removing unreachable block (ram,0x008d5aee)\n// WARNING: Removing unreachable block (ram,0x008d5b19)\n// WARNING: Removing unreachable block (ram,0x008d5b1e)\n// WARNING: Removing unreachable block (ram,0x008d5b29)\n// WARNING: Removing unreachable block (ram,0x008d5b32)\n// WARNING: Removing unreachable block (ram,0x008d5b38)\n// WARNING: Removing unreachable block (ram,0x008d5b3b)\n// WARNING: Removing unreachable block (ram,0x008d5b61)\n// WARNING: Removing unreachable block (ram,0x008d5b66)\n// WARNING: Removing unreachable block (ram,0x008d5b6b)\n// WARNING: Removing unreachable block (ram,0x008d5b78)\n// WARNING: Removing unreachable block (ram,0x008d5b89)\n// WARNING: Removing unreachable block (ram,0x008d5bba)\n// WARNING: Removing unreachable block (ram,0x008d5b8f)\n// WARNING: Removing unreachable block (ram,0x008d5bb5)\n// WARNING: Removing unreachable block (ram,0x008d5b99)\n// WARNING: Removing unreachable block (ram,0x008d5baf)\n// WARNING: Removing unreachable block (ram,0x008d5ba8)\n// WARNING: Removing unreachable block (ram,0x008d5bbd)\n// WARNING: Removing unreachable block (ram,0x008d5bea)\n// WARNING: Removing unreachable block (ram,0x008d5bc7)\n// WARNING: Removing unreachable block (ram,0x008d5a52)\n// WARNING: Removing unreachable block (ram,0x008d5a2f)\n// WARNING: Removing unreachable block (ram,0x008d5c25)\n// WARNING: Removing unreachable block (ram,0x008d596b)\n// WARNING: Removing unreachable block (ram,0x008d5c2f)\n// WARNING: Removing unreachable block (ram,0x008d5c70)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.008d55ce(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.008c4667();\n        *puVar2 = 0x16;\n        fcn.008c35a2(0, 0, 0, 0, 0);\n        fcn.008c342b(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x008d5661. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x8d5c96\n    (**0x8d5c96)();\n    return;\n}\n",
        "token_count": 1897
    },
    "008c2649": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.008c2649(uint param_1)\n\n{\n    uint32_t unaff_ESI;\n    \n    fcn.008c21cd(1, 0);\n    if ((unaff_ESI & 1) != 0) {\n        fcn.008c3374(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 78
    },
    "008cdc5e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nunkbyte5 __fastcall fcn.008cdc5e(uint param_1, uchar param_2)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBP;\n    float10 in_ST0;\n    float10 fVar1;\n    uint unaff_retaddr;\n    uint var_9fh;\n    uint var_90h;\n    \n    *(unaff_EBP + -0xa0) = (*0x8dffee < ABS(in_ST0)) << 8 | (*0x8dffee == ABS(in_ST0)) << 0xe;\n    if ((*(unaff_EBP + -0x9f) & 0x41) == 0) {\n        fVar1 = ROUND(in_ST0);\n        *(unaff_EBP + -0xa0) = (fVar1 < 0) << 8 | (fVar1 == 0) << 0xe;\n        fVar1 = in_ST0 - fVar1;\n        *(unaff_EBP + -0xa0) = (fVar1 < 0) << 8 | (fVar1 == 0) << 0xe;\n        f2xm1(ABS(fVar1));\n        return CONCAT14(*(unaff_EBP + -0x9f), in_EAX);\n    }\n    *(unaff_EBP + -0xa0) = (in_ST0 < 0) << 8 | (in_ST0 == 0) << 0xe;\n    if ((*(unaff_EBP + -0x9f) & 1) == 0) {\n        return CONCAT14(param_2, unaff_retaddr);\n    }\n    *(unaff_EBP + -0x90) = 4;\n    return CONCAT14(param_2, unaff_retaddr);\n}\n",
        "token_count": 386
    },
    "008d0246": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.008d0246(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.008c6c28(0x8dc318, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.008c467a();\n        *puVar2 = 0;\n        puVar2 = fcn.008c4667();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0xce9fc8)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0xce9fe0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.008d3702(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.008c4667();\n                    *puVar2 = 9;\n                    puVar2 = fcn.008c467a();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.008cfb13(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.008d0318(0x8dc318);\n                goto code_r0x008d0312;\n            }\n        }\n        puVar2 = fcn.008c467a();\n        *puVar2 = 0;\n        puVar2 = fcn.008c4667();\n        *puVar2 = 9;\n        fcn.008c35a2(0, 0, 0, 0, 0);\n    }\ncode_r0x008d0312:\n    fcn.008c6c6d();\n    return;\n}\n",
        "token_count": 636
    },
    "008c0d83": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nvoid fcn.008c0d83(int32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint unaff_EDI;\n    uchar auStackY4276 [4];\n    int32_t *piStackY4272;\n    uchar auStackY4268 [4];\n    uchar auStackY4264 [4];\n    uint uStackY4260;\n    uint uStackY4256;\n    uint32_t uStackY4252;\n    uint32_t *puStackY4248;\n    uint8_t uStackY4244;\n    uint8_t uStackY4243;\n    uint8_t uStackY4242;\n    uint8_t uStackY4241;\n    uint uStackY4240;\n    uint uStackY4236;\n    uint uStackY4232;\n    uint uStackY4228;\n    uint uStackY4224;\n    uint uStackY4220;\n    uint uStackY4216;\n    uint uStackY4212;\n    uint uStackY4208;\n    uint uStackY4204;\n    uint uStackY4200;\n    uint uStackY4196;\n    uint uStackY4192;\n    uint uStackY4188;\n    uint uStackY4184;\n    uint uStackY4180;\n    uint uStackY4176;\n    uint uStackY4172;\n    uint uStackY4168;\n    int32_t iStackY4164;\n    uint uStackY4160;\n    uint uStackY4156;\n    uint uStackY4152;\n    uint uStackY4148;\n    uint uStackY4144;\n    uint uStackY4140;\n    uint uStackY4136;\n    uint uStackY4132;\n    uint uStackY4128;\n    uint uStackY4124;\n    uint uStackY4120;\n    uint uStackY4116;\n    uint uStackY4112;\n    uint uStackY4108;\n    uchar auStackY4104 [2048];\n    uchar auStackY2056 [1992];\n    uint uStackY64;\n    char16_t *pcStackY60;\n    uchar *puStackY56;\n    uint uStackY52;\n    uchar *puStackY48;\n    uchar *puStackY44;\n    uchar *puStackY40;\n    uchar *puStackY36;\n    uint uStackY32;\n    uint uStackY28;\n    uint32_t uStackY24;\n    uint uStackY20;\n    \n    fcn.008c3440();\n    piStackY4272 = param_1;\n    puStackY4248 = param_2;\n    *0xcc018f = 0x32;\n    *0xcbb420 = 0;\n    *0xcc018b = 0x6e;\n    *0xcbb480 = 0;\n    *0xcc0189 = 0x65;\n    *0xcbe2d4 = 0xf3f9f346;\n    *0xcc0191 = 100;\n    *0xcbd018 = 0;\n    *0xcbd01c = 0;\n    *0xcc0193 = 0x6c;\n    *0xcbed60 = 0;\n    *0xcc018e = 0x33;\n    *0xcbb47c = 0xd57c7618;\n    *0xcc0190 = 0x2e;\n    *0xcbb440 = 0xba248176;\n    *0xcbb444 = 0xffffffff;\n    *0xcc0192 = 0x6c;\n    *0xcbeda0 = 0;\n    *0xcbeda4 = 0;\n    *0xcc0188 = 0x6b;\n    *0xcbed50 = 0;\n    *0xcc018d = 0x6c;\n    *0xcbed2c = 0xdafc2b0c;\n    *0xcc018c = 0x65;\n    *0xcbe2f0 = 0xbb6aa30c;\n    *0xcc018a = 0x72;\n    *0xcbed58 = 0;\n    *0xcbed5c = 0;\n    uStackY20 = 0xcc0188;\n    *0xcc0194 = 0;\n    uStackY24 = 0x8c1133;\n    uStackY4200 = *0xcbe2f0;\n    uStackY4196 = *0xcbed60;\n    uStackY4192 = *0xcbed58;\n    uStackY4168 = *0xcbb420;\n    uStackY4156 = *0xcbe2d4;\n    uStackY4152 = *0xcbb47c;\n    uStackY4148 = *0xcbed2c;\n    uStackY4140 = *0xcbeda0;\n    uStackY4136 = *0xcbd018;\n    uStackY4120 = *0xcbb480;\n    uStackY4116 = *0xcbb440;\n    uStackY4112 = *0xcbed50;\n    *0xcbedc4 = (**0x8d8008)();\n    *0xcbedd2 = 0x6f;\n    *0x8ef168 = 0xb756ec50;\n    *0xcbedd5 = 0x6c;\n    *0xce93b8 = 0;\n    *0xcbedd6 = 0x41;\n    *0x8ef164 = 0;\n    *0xcbedd3 = 0x62;\n    *0xcbb454 = 0x8a2a9718;\n    *0xcbedd9 = 0x6f;\n    *0xcbb488 = 0;\n    *0xcbb48c = 0;\n    *0xcbedd0 = 0x47;\n    *0xcbed7c = 0xd855589a;\n    *0xcbedd1 = 0x6c;\n    *0xcbe2e0 = 0;\n    *0xcbe2e4 = 0;\n    *0xcbedd8 = 0x6c;\n    *0xcc2948 = 0;\n    *0xcc294c = 0;\n    *0xcbedd4 = 0x61;\n    *0xcbed30 = 0;\n    *0xcbed34 = 0;\n    *0xcbedda = 99;\n    *0xcbb450 = 0;\n    *0xcbedd7 = 0x6c;\n    *0xcbed18 = 0;\n    *0xcbed1c = 0;\n    *0xcbeddb = 0;\n    uStackY24 = *param_2;\n    uStackY28 = 0;\n    uStackY32 = 0x8c142a;\n    uStackY4188 = *0xcbed7c;\n    uStackY4184 = *0xcbed18;\n    uStackY4180 = *0xce93b8;\n    uStackY4176 = *0x8ef168;\n    uStackY4172 = *0xcbb454;\n    uStackY4160 = *0xcbb488;\n    uStackY4144 = *0xcbb450;\n    uStackY4132 = *0xcc2948;\n    uStackY4128 = *0xcbed30;\n    uStackY4124 = *0xcbe2e0;\n    uStackY4108 = *0x8ef164;\n    iVar2 = (**0x8d8004)();\n    uVar4 = 0;\n    iStackY4164 = 4;\n    uStackY4252 = 0;\n    if (*puStackY4248 != 0) {\n        do {\n            puVar3 = *piStackY4272 + uStackY4252;\n            uVar1 = puVar3[3];\n            uStackY4228 = 2;\n            uStackY4244 = uVar1 << 2;\n            uStackY4240 = 0xc0;\n            uStackY4242 = *puVar3 | uStackY4244 & 0xc0;\n            uStackY4224 = 4;\n            uStackY4220 = 0xc0;\n            uStackY4243 = puVar3[1] | (uVar1 & 0xc) << 4;\n            uStackY4212 = 6;\n            uStackY4236 = 0xc0;\n            uStackY4241 = puVar3[2] | uVar1 << 6;\n            *(uVar4 + iVar2) = uStackY4242;\n            *(uVar4 + 1 + iVar2) = uStackY4243;\n            uStackY4216 = 0xb6f4c84c;\n            if (*0xcc2954 == 0x34e) {\n                *0xcbe2e8 = 0;\n                *0xcbe2ec = 0;\n                uStackY4260 = *0xcbe2e8;\n            }\n            uStackY4232 = 0xfaace874;\n            *0x8ef160 = uStackY4232;\n            *0xcbed20 = uStackY4216;\n            *(uVar4 + 2 + iVar2) = uStackY4241;\n            *0xcbb460 = 0xe0cdb12a;\n            *0xcbb464 = 0xffffffff;\n            uStackY4208 = *0xcbb460;\n            if (*0xcc2954 == 0x390) {\n                uStackY32 = 0;\n                puStackY36 = &stack0xfffff7f8;\n                puStackY40 = &stack0xffffef4c;\n                puStackY44 = &stack0xffffef58;\n                puStackY48 = &stack0xffffef54;\n                uStackY52 = 0;\n                puStackY56 = &stack0xffffeff8;\n                pcStackY60 = L\"yevodanekosimoya\";\n                uStackY64 = 0x8c1802;\n                (**0x8d8000)();\n                *0xce93bc = 0x83df3254;\n                uStackY4256 = *0xce93bc;\n            }\n            *0xcbb428 = 0xac276670;\n            uStackY4252 = uStackY4252 + iStackY4164;\n            uVar4 = uVar4 + 3;\n            uStackY4204 = *0xcbb428;\n        } while (uStackY4252 < *puStackY4248);\n    }\n    *piStackY4272 = iVar2;\n    *puStackY4248 = uVar4;\n    uStackY20 = 0x8c18f4;\n    fcn.008c342b(unaff_EDI);\n    return;\n}\n",
        "token_count": 2431
    },
    "008c1bba": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.008c1bba(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_ch;\n    char *var_5ch;\n    char16_t *pcStack92;\n    int32_t var_50h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_28h;\n    uint var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x3e6;\n    iVar3 = 0;\n    if (var_50h == 0x23c91b) {\n        (**0x8d8020)();\n        var_28h = 0;\n        var_24h = 0;\n        uStack36 = 0;\n        uStack32 = 0;\n        uStack28 = 0;\n        (**0x8d801c)(0);\n        pcStack92 = 0x57;\n        var_5ch = \"livelivojihagahuyeratu rixuzifowe\";\n        fcn.008c3f85(0x8e0910, \"%s %c\", \"livelivojihagahuyeratu rixuzifowe\");\n        pcStack92 = 0x8c1c24;\n        fcn.008c2c39();\n        pcStack92 = \n        L\"bavirulejaxebamucatorodeze yozeloweyogalegehi megemibaholipuwiwisojisabafo vedavunulofisiluzanuxeyafa be gejebosutoxemavudofepaye hi lucokelagodagugehotuci zatocanepepeguxotaresurexi kixiwadoxotuhobibahowaji\"\n        ;\n        var_5ch = 0x8c1c31;\n        fcn.008c2aef();\n        var_5ch = &fcn.008c1bba::var_5ch;\n        fcn.008c2ff1(var_5ch);\n        arg_ch = 1;\n        fcn.008c21cd(1, 0);\n        fcn.008c3ed6(L\"yehadakuje walirexixuzahevotajipetohozaso\", arg_ch);\n        fcn.008c3d90(*0x8d81f8);\n        fcn.008c3d65(0, 0, 0);\n        fcn.008c3c44(0, 0);\n        fcn.008c3b5a(*0x8d81f0, *0x8d81f0 >> 0x20);\n        fcn.008c2cfc();\n        fcn.008c3374();\n    }\n    iVar4 = 0;\n    while( true ) {\n        (**0x8d8018)();\n        (**0x8d8014)();\n        pcVar1 = *0x8d8004;\n        if (((0xe60ad9 < iVar4) && (var_24h != 'i')) && (var_44h != 0x16838de3)) break;\n        iVar4 = iVar4 + 1;\n        if (0xe4a4b34 < iVar4) {\ncode_r0x008c1deb:\n            iVar4 = 0;\n            do {\n                if (iVar4 == 0x516c56) {\n                    *0xcc2954 = *0x8dd414;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < 0x55bd1c);\n            *0xcc2954 = *0xcc2954 + 0x638b9;\n            *0xcbe2d0 = (**0x8d8004)(0, *0xcc2954, unaff_EBX);\n            *0xcbe2d0 = (*pcVar1)(0, *0xcc2954);\n            uVar2 = 0;\n            *0xce93a0 = *0x8dd008;\n            if (*0xcc2954 != 0) {\n                do {\n                    var_14h = *0xce93a0 + 0x638b9;\n                    *(uVar2 + *0xcbe2d0) = *(var_14h + uVar2);\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 < *0xcc2954);\n            }\n            fcn.008c0d83(0xcbe2d0, 0xcc2954);\n            *0xcbb44c = (**0x8d8010)(*0xcbedc4, 0x8e0910);\n            var_8h = 0x40;\n            do {\n                if (iVar3 == 0x658c4) {\n                    (**0x8d800c)(*0xcbe2d0, *0xcc2954, var_8h, &fcn.008c1bba::var_14h);\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < 0x667c97);\n            fcn.008c1a9e(*0xcbe2d0, *0xcc2954, 0x8dd010);\n            return;\n        }\n    }\n    *0xcc2938 = 0x9251f4de;\n    if (*0xcc2954 == 0x187) {\n        *0xcbedc0 = 0;\n        var_14h = *0xcbedc0;\n    }\n    *0xcbed90 = 0xf5dec666;\n    var_10h = *0xcbed90;\n    var_ch = *0xcc2938;\n    goto code_r0x008c1deb;\n}\n",
        "token_count": 1360
    },
    "008c199a": {
        "rules": [
            "encrypt data using HC-128/b24f3f77371449e18042164d6f6569c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c199a(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *extraout_EDX;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (0 < arg_ch) {\n        do {\n            uVar1 = fcn.008c1906();\n            *extraout_EDX = *extraout_EDX ^ uVar1;\n            *0xcc2930 = 0xfc7352ee;\n            *0xcc2934 = 0xffffffff;\n            if (arg_ch == 0x649) {\n                *0xce9398 = 0;\n                *0xce939c = 0;\n            }\n            *0x8ef140 = 0xaa6d9b4e;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "008c8907": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.008c8907(uint param_1, int32_t param_2)\n\n{\n    float10 fVar1;\n    char cVar2;\n    uint8_t uVar3;\n    ushort uVar4;\n    int32_t unaff_EBP;\n    float10 in_ST0;\n    float10 in_ST1;\n    uint var_a2h;\n    uint var_94h;\n    uint var_90h;\n    \n    if (*(param_2 + 0xe) == '\\x05') {\n        uVar4 = CONCAT31(*(unaff_EBP + -0xa4) >> 8 & 0xfe | 2, 0x3f);\n    }\n    else {\n        uVar4 = 0x133f;\n    }\n    *(unaff_EBP + -0xa2) = uVar4;\n    fVar1 = 0;\n    *(unaff_EBP + -0x94) = param_2;\n    *(unaff_EBP + -0xa0) = (in_ST0 < fVar1) << 9 | (in_ST0 != fVar1) << 10 | (in_ST0 == fVar1) << 0xe;\n    *(unaff_EBP + -0x90) = 0;\n    fVar1 = 0;\n    *(unaff_EBP + -0xa0) = (in_ST1 < fVar1) << 9 | (in_ST1 != fVar1) << 10 | (in_ST1 == fVar1) << 0xe;\n    uVar3 = (*(unaff_EBP + -0x9f) << 1) >> 1;\n    cVar2 = (*(unaff_EBP + -0x9f) << 1) >> 1;\n    // WARNING: Could not recover jumptable at 0x008c8991. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(param_2 + (*(((cVar2 << 1 | cVar2 < '\\0') & 0xf) + 0x8df75c) |\n                  *(((uVar3 & 7) << 1 | uVar3 < '\\0') + 0x8df75c) << 2) + 0x10))();\n    return;\n}\n",
        "token_count": 505
    },
    "008c8b15": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.008c8b15(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 93
    },
    "008c1a9e": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c1a9e(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    *0xcbb474 = *arg_10h;\n    *0xcbedb0 = 0xd15e210a;\n    *0xcbedb4 = 0xffffffff;\n    if (*0xcc2954 == 0x6dc) {\n        *0xce9390 = 0xe2eeb842;\n        *0xce9394 = 0xffffffff;\n    }\n    *0x8ef144 = 0xd885057e;\n    fcn.008c199a(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 165
    },
    "008c22d4": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.008c22d4(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t arg_10h;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.008c3abd(0x10);\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    uVar4 = *(unaff_EBP + 8) | 0xf;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = *(unaff_EBP + 8);\n    }\n    else {\n        uVar1 = *(extraout_ECX + 0x18);\n        *(unaff_EBP + -0x14) = uVar1;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar2 = *(unaff_EBP + -0x14);\n        if ((uVar4 / 3 < uVar2) && (uVar1 <= -uVar2 - 2)) {\n            uVar4 = uVar2 + uVar1;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.008c205d(uVar4 + 1);\n    *(unaff_EBP + -0x18) = uVar3;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0xc) != 0) {\n        if (*(extraout_ECX + 0x18) < 0x10) {\n            arg_10h = extraout_ECX + 4;\n        }\n        else {\n            arg_10h = *(extraout_ECX + 4);\n        }\n        fcn.008c0d4b(*(unaff_EBP + -0x18), uVar4 + 1, arg_10h, *(unaff_EBP + 0xc));\n    }\n    fcn.008c2182(1, 0);\n    *(extraout_ECX + 4) = *(unaff_EBP + -0x18);\n    *(extraout_ECX + 0x18) = uVar4;\n    fcn.008c210c(*(unaff_EBP + 0xc));\n    fcn.008c3b2c();\n    return;\n}\n",
        "token_count": 599
    },
    "008c2476": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.008c2476(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t arg_10h;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.008c3abd(0x10);\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    uVar4 = *(unaff_EBP + 8) | 7;\n    if (uVar4 < 0x7fffffff) {\n        uVar1 = *(extraout_ECX + 0x18);\n        *(unaff_EBP + -0x14) = uVar1;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar2 = *(unaff_EBP + -0x14);\n        if ((uVar4 / 3 < uVar2) && (uVar1 <= 0x7ffffffe - uVar2)) {\n            uVar4 = uVar2 + uVar1;\n        }\n    }\n    else {\n        uVar4 = *(unaff_EBP + 8);\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.008c20a7(uVar4 + 1);\n    *(unaff_EBP + -0x18) = uVar3;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0xc) != 0) {\n        if (*(extraout_ECX + 0x18) < 8) {\n            arg_10h = extraout_ECX + 4;\n        }\n        else {\n            arg_10h = *(extraout_ECX + 4);\n        }\n        fcn.008c0d13(*(unaff_EBP + -0x18), uVar4 + 1, arg_10h, *(unaff_EBP + 0xc));\n    }\n    fcn.008c21cd(1, 0);\n    *(extraout_ECX + 4) = *(unaff_EBP + -0x18);\n    *(extraout_ECX + 0x18) = uVar4;\n    fcn.008c2128(*(unaff_EBP + 0xc));\n    fcn.008c3b2c();\n    return;\n}\n",
        "token_count": 600
    },
    "008c2d8e": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __cdecl fcn.008c2d8e(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t arg_ch_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    int32_t extraout_ECX_00;\n    int32_t unaff_EBP;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.008c3af3(0x34);\n    *(unaff_EBP + -0x40) = extraout_ECX;\n    *(unaff_EBP + -0x38) = *(unaff_EBP + 0x14);\n    uVar2 = fcn.008c1efe();\n    arg_ch_00 = *(unaff_EBP + 0x10);\n    if (arg_ch_00 != 0) {\n        iVar3 = (*(extraout_ECX + 0x10) - *(extraout_ECX + 0xc)) / 0x1c;\n        iVar7 = 0x9249249;\n        if (0x9249249U - iVar3 < arg_ch_00) {\n            iVar3 = fcn.008c2a2b();\n            iVar7 = extraout_ECX_00;\n        }\n        uVar4 = iVar3 + arg_ch_00;\n        if (uVar2 < uVar4) {\n            if (iVar7 - (uVar2 >> 1) < uVar2) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = uVar2 + (uVar2 >> 1);\n            }\n            if (uVar2 < uVar4) {\n                uVar2 = uVar4;\n            }\n            uVar5 = fcn.008c1fc1(uVar2);\n            *(unaff_EBP + -0x34) = uVar5;\n            *(unaff_EBP + -0x3c) = uVar5;\n            *(unaff_EBP + -4) = 0;\n            uVar5 = fcn.008c2d4b(*(extraout_ECX + 0xc), *(unaff_EBP + 0xc), uVar5);\n            *(unaff_EBP + -0x3c) = uVar5;\n            uVar5 = fcn.008c2d26(uVar5, arg_ch_00, *(unaff_EBP + -0x38));\n            *(unaff_EBP + -0x3c) = uVar5;\n            fcn.008c2d4b(*(unaff_EBP + 0xc), *(extraout_ECX + 0x10), uVar5);\n            *(unaff_EBP + -4) = 0xffffffff;\n            iVar7 = *(extraout_ECX + 0xc);\n            iVar3 = *(extraout_ECX + 0x10);\n            if (*(extraout_ECX + 0xc) != 0) {\n                fcn.008c2c57(*(extraout_ECX + 0xc), *(extraout_ECX + 0x10));\n                fcn.008c3374(*(extraout_ECX + 0xc));\n            }\n            iVar1 = *(unaff_EBP + -0x34);\n            *(extraout_ECX + 0x14) = uVar2 * 0x1c + iVar1;\n            *(extraout_ECX + 0x10) = (arg_ch_00 + (iVar3 - iVar7) / 0x1c) * 0x1c + iVar1;\n            *(extraout_ECX + 0xc) = iVar1;\n        }\n        else {\n            if ((*(extraout_ECX + 0x10) - *(unaff_EBP + 0xc)) / 0x1c < arg_ch_00) {\n                fcn.008c28fe(*(unaff_EBP + -0x38));\n                fcn.008c2d4b(*(unaff_EBP + 0xc), *(extraout_ECX + 0x10), arg_ch_00 * 0x1c + *(unaff_EBP + 0xc));\n                *(unaff_EBP + -4) = 2;\n                fcn.008c2d26(*(extraout_ECX + 0x10), arg_ch_00 - (*(extraout_ECX + 0x10) - *(unaff_EBP + 0xc)) / 0x1c, \n                             unaff_EBP + -0x30);\n                *(unaff_EBP + -4) = 0xffffffff;\n                *(extraout_ECX + 0x10) = *(extraout_ECX + 0x10) + arg_ch_00 * 0x1c;\n                fcn.008c2aba(*(unaff_EBP + 0xc), *(extraout_ECX + 0x10) + arg_ch_00 * -0x1c, unaff_EBP + -0x30);\n            }\n            else {\n                fcn.008c28fe(*(unaff_EBP + -0x38));\n                uVar5 = *(extraout_ECX + 0x10);\n                *(unaff_EBP + -0x34) = uVar5;\n                *(unaff_EBP + -0x34) = *(unaff_EBP + -0x34) + arg_ch_00 * -0x1c;\n                uVar6 = fcn.008c2d4b(*(unaff_EBP + -0x34), uVar5, uVar5);\n                *(extraout_ECX + 0x10) = uVar6;\n                fcn.008c2d66(*(unaff_EBP + 0xc), *(unaff_EBP + -0x34), uVar5);\n                fcn.008c2aba(*(unaff_EBP + 0xc), arg_ch_00 * 0x1c + *(unaff_EBP + 0xc), unaff_EBP + -0x30);\n            }\n            fcn.008c21cd(1, 0);\n        }\n    }\n    fcn.008c3b40();\n    return;\n}\n",
        "token_count": 1460
    },
    "008ce835": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.008ce835(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_ESI) {\n        if (*(unaff_EBP + -0x20) != unaff_ESI) {\n            puVar1 = *((*unaff_EDI >> 5) * 4 + 0xce9fe0) + 4 + (*unaff_EDI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.008d37a2(*unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "008c0d2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.008c0d2f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.008c0cc7(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 71
    },
    "008c1906": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nuint32_t fcn.008c1906(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0xcbb474 = *0xcbb474 * 0x343fd + 0x269ec3;\n    return *0xcbb474 >> 0x10 & 0x7fff;\n}\n",
        "token_count": 80
    },
    "008c1f77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.008c1f77(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar1 = *param_1;\n    if (piVar1 == NULL) {\n        fcn.008c35c8();\n        piVar1 = *param_1;\n        if (piVar1 != NULL) goto code_r0x008c1f8c;\n        iVar2 = 0;\n    }\n    else {\ncode_r0x008c1f8c:\n        iVar2 = *piVar1;\n    }\n    piVar3 = param_1[1] + param_2 * 7;\n    if (piVar3 < *(iVar2 + 0x10) || piVar3 == *(iVar2 + 0x10)) {\n        if (piVar1 == NULL) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *piVar1;\n        }\n        if (*(iVar2 + 0xc) <= piVar3) goto code_r0x008c1fb7;\n    }\n    fcn.008c35c8();\ncode_r0x008c1fb7:\n    param_1[1] = param_1[1] + param_2 * 7;\n    return param_1;\n}\n",
        "token_count": 313
    },
    "008c2128": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.008c2128(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x14) = param_2;\n    if (*(param_1 + 0x18) < 8) {\n        param_1 = param_1 + 4;\n    }\n    else {\n        param_1 = *(param_1 + 4);\n    }\n    *(param_1 + param_2 * 2) = 0;\n    return;\n}\n",
        "token_count": 113
    },
    "008c26b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c26b0(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint32_t arg_14h;\n    \n    if (*(arg_8h + 0x14) < arg_ch) {\n        fcn.008c30d2();\n    }\n    arg_14h = *(arg_8h + 0x14) - arg_ch;\n    if (arg_10h < arg_14h) {\n        arg_14h = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.008c2218(arg_14h + arg_ch, 0xffffffff);\n        fcn.008c2218(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.008c258a(arg_14h, 0);\n        if (cVar1 != '\\0') {\n            if (*(arg_8h + 0x18) < 0x10) {\n                arg_8h = arg_8h + 4;\n            }\n            else {\n                arg_8h = *(arg_8h + 4);\n            }\n            if (*(in_ECX + 0x18) < 0x10) {\n                arg_8h_00 = in_ECX + 4;\n            }\n            else {\n                arg_8h_00 = *(in_ECX + 4);\n            }\n            fcn.008c0d4b(arg_8h_00, *(in_ECX + 0x18), arg_8h + arg_ch, arg_14h);\n            fcn.008c210c(arg_14h);\n        }\n    }\n    return;\n}\n",
        "token_count": 405
    },
    "008c27b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c27b4(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint32_t arg_14h;\n    \n    if (*(arg_8h + 0x14) < arg_ch) {\n        fcn.008c30d2();\n    }\n    arg_14h = *(arg_8h + 0x14) - arg_ch;\n    if (arg_10h < arg_14h) {\n        arg_14h = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.008c23f6(arg_14h + arg_ch, 0xffffffff);\n        fcn.008c23f6(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.008c25e8(arg_14h, 0);\n        if (cVar1 != '\\0') {\n            if (*(arg_8h + 0x18) < 8) {\n                arg_8h = arg_8h + 4;\n            }\n            else {\n                arg_8h = *(arg_8h + 4);\n            }\n            if (*(in_ECX + 0x18) < 8) {\n                arg_8h_00 = in_ECX + 4;\n            }\n            else {\n                arg_8h_00 = *(in_ECX + 4);\n            }\n            fcn.008c0d13(arg_8h_00, *(in_ECX + 0x18), arg_8h + arg_ch * 2, arg_14h);\n            fcn.008c2128(arg_14h);\n        }\n    }\n    return;\n}\n",
        "token_count": 406
    },
    "008c288a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c288a(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    cVar1 = fcn.008c2146(arg_8h);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.008c25e8(arg_ch, 0);\n        if (cVar1 != '\\0') {\n            if (*(in_ECX + 0x18) < 8) {\n                iVar2 = in_ECX + 4;\n            }\n            else {\n                iVar2 = *(in_ECX + 4);\n            }\n            fcn.008c0d13(iVar2, *(in_ECX + 0x18), arg_8h, arg_ch);\n            fcn.008c2128(arg_ch);\n        }\n    }\n    else {\n        if (*(in_ECX + 0x18) < 8) {\n            iVar2 = in_ECX + 4;\n        }\n        else {\n            iVar2 = *(in_ECX + 4);\n        }\n        fcn.008c27b4(in_ECX, arg_8h - iVar2 >> 1, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "008c2a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.008c2a60(code **param_1, int32_t param_2)\n\n{\n    fcn.008c3282(param_2);\n    *param_1 = vtable.std::logic_error.0;\n    fcn.008c2847(param_2 + 0xc);\n    return param_1;\n}\n",
        "token_count": 78
    },
    "008c2a9f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.008c2a9f(int32_t param_1, int32_t param_2)\n\n{\n    for (; param_1 != param_2; param_1 = param_1 + 0x1c) {\n        fcn.008c2649();\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "008c2aba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.008c2aba(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    for (; param_1 != param_2; param_1 = param_1 + 0x1c) {\n        fcn.008c27b4(param_3, 0, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "008c2b11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c2b11(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.008c2a9f(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 64
    },
    "008c2b86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.008c2b86(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t unaff_EBP;\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.008c3af3(0x30);\n    arg_8h_00 = *(unaff_EBP + 8);\n    iVar1 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x34) = iVar1;\n    *(unaff_EBP + -0x38) = iVar1;\n    *(unaff_EBP + -0x18) = 7;\n    fcn.008c2128(0);\n    *(unaff_EBP + -4) = 0;\n    while (arg_8h_00 != *(unaff_EBP + 0xc)) {\n        if (iVar1 != 0) {\n            fcn.008c28fe(unaff_EBP + -0x30);\n        }\n        fcn.008c2924(arg_8h_00);\n        iVar1 = iVar1 + 0x1c;\n        *(unaff_EBP + -0x34) = iVar1;\n        arg_8h_00 = arg_8h_00 + 0x1c;\n        *(unaff_EBP + -0x3c) = arg_8h_00;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.008c21cd(1, 0);\n    fcn.008c3b40();\n    return;\n}\n",
        "token_count": 416
    },
    "008c2c57": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.008c2c57(int32_t param_1, uint param_2, uint param_3)\n\n{\n    fcn.008c2b11(param_2, param_3, param_1 + 8);\n    return;\n}\n",
        "token_count": 59
    },
    "008c2c6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c2c6e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.008c2b2b(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 76
    },
    "008c2c96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c2c96(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.008c2b86(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 69
    },
    "008c2cbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.008c2cbe(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint noname_3, uint arg_18h)\n\n{\n    uint var_4h;\n    \n    fcn.008c2c12(arg_8h, arg_ch, arg_10h);\n    return arg_10h + ((arg_ch - arg_8h) / 0x1c) * -0x1c;\n}\n",
        "token_count": 110
    },
    "008c2d26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.008c2d26(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.008c2c6e(arg_8h, arg_ch, arg_10h, in_ECX + 8);\n    return arg_ch * 0x1c + arg_8h;\n}\n",
        "token_count": 91
    },
    "008c2d66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c2d66(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.008c2cbe(arg_8h, arg_ch, arg_10h, arg_ch, arg_ch);\n    return;\n}\n",
        "token_count": 69
    },
    "008c3b5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c3b5a(uint arg_8h, uint arg_ch)\n\n{\n    uint var_2c8h;\n    \n    fcn.008c6634(arg_8h, arg_ch);\n    fcn.008c88a0();\n    fcn.008c64b3();\n    return;\n}\n",
        "token_count": 74
    },
    "008c3c44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c3c44(uint arg_8h, uint arg_ch)\n\n{\n    fcn.008c3b80(arg_8h, arg_ch, 0x40);\n    return;\n}\n",
        "token_count": 49
    },
    "008c3d65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c3d65(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.008c3c5b(fcn.008c7346, arg_8h, arg_ch, 0, &arg_10h);\n    return;\n}\n",
        "token_count": 68
    },
    "008c3ed6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.008c3ed6(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.008c6c28(0x8dbe98, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.008c4667();\n        *puVar1 = 0x16;\n        fcn.008c35a2(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.008c6670();\n        fcn.008c6788(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.008c6670();\n        arg_8h_00 = fcn.008c8c5c(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.008c6670();\n        uVar4 = fcn.008c8dd4(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.008c6670();\n        fcn.008c8cf8(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.008c3f72();\n    }\n    fcn.008c6c6d();\n    return;\n}\n",
        "token_count": 473
    },
    "008c3f72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.008c3f72(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.008c6670();\n    fcn.008c67f6(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 57
    },
    "008c646b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c646b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2c8h;\n    uint var_8fh;\n    \n    fcn.008c6634(arg_8h, arg_ch);\n    fcn.008c6634(arg_10h, arg_14h);\n    fcn.008c8907();\n    fcn.008c64b3();\n    return;\n}\n",
        "token_count": 108
    },
    "008cb58c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008cb58c(uint arg_8h)\n\n{\n    fcn.008cb460(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "008cbce8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x008cbcfc)\n// WARNING: Removing unreachable block (ram,0x008cbd02)\n// WARNING: Removing unreachable block (ram,0x008cbd04)\n\nvoid fcn.008cbce8(void)\n\n{\n    return;\n}\n",
        "token_count": 61
    },
    "008ce797": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.008ce797(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.008c6c28(0x8dc278, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.008c4667();\n        *puVar1 = 0x16;\n        fcn.008c35a2(0, 0, 0, 0, 0);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.008ce078(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.008ce835();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.008c6c6d();\n    return;\n}\n",
        "token_count": 456
    },
    "008ce863": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008ce863(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.008ce797(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 76
    },
    "008d4472": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.008d4472(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.008c4667();\n        *puVar1 = 0x16;\n        fcn.008c35a2(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0xce9f88;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "008c3731": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.008c3731(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.008c611b(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "008c2924": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.008c2924(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_4h;\n    \n    if (in_ECX != arg_8h) {\n        var_14h = *(in_ECX + 4);\n        uVar1 = *(in_ECX + 8);\n        uVar2 = *(in_ECX + 0xc);\n        uVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 4) = *(arg_8h + 4);\n        *(in_ECX + 8) = *(arg_8h + 8);\n        *(in_ECX + 0xc) = *(arg_8h + 0xc);\n        *(in_ECX + 0x10) = *(arg_8h + 0x10);\n        *(arg_8h + 4) = var_14h;\n        *(arg_8h + 8) = uVar1;\n        *(arg_8h + 0xc) = uVar2;\n        *(arg_8h + 0x10) = uVar3;\n        uVar1 = *(in_ECX + 0x14);\n        *(in_ECX + 0x14) = *(arg_8h + 0x14);\n        *(arg_8h + 0x14) = uVar1;\n        uVar1 = *(in_ECX + 0x18);\n        *(in_ECX + 0x18) = *(arg_8h + 0x18);\n        *(arg_8h + 0x18) = uVar1;\n    }\n    fcn.008c342b(var_14h);\n    return;\n}\n",
        "token_count": 421
    },
    "008c2c12": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.008c2c12(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_8h != arg_ch) {\n        do {\n            arg_10h = arg_10h + -0x1c;\n            arg_ch = arg_ch + -0x1c;\n            fcn.008c2924(arg_ch);\n        } while (arg_ch != arg_8h);\n    }\n    return arg_10h;\n}\n",
        "token_count": 115
    },
    "008c2ff1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008c2ff1(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = *(in_ECX + 0x10);\n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    uVar1 = fcn.008c1efe();\n    if ((arg_8h_00 - *(in_ECX + 0xc)) / 0x1c < uVar1) {\n        uVar2 = fcn.008c2d26(arg_8h_00, 1, arg_8h);\n        *(in_ECX + 0x10) = uVar2;\n    }\n    else {\n        fcn.008c23c4(arg_8h_00);\n        fcn.008c2f87(&var_8h, var_8h, var_4h, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "008c2c39": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.008c2c39(int32_t param_1)\n\n{\n    fcn.008c2575();\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    return param_1;\n}\n",
        "token_count": 82
    },
    "008c2cfc": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.008c2cfc(int32_t param_1)\n\n{\n    if (*(param_1 + 0xc) != 0) {\n        fcn.008c2c57(*(param_1 + 0xc), *(param_1 + 0x10));\n        fcn.008c3374(*(param_1 + 0xc));\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 131
    },
    "008d6ee1": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.008d6ee1(void)\n\n{\n    *0x8e05c4 = (**0x8d80dc)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 60
    },
    "008c4c24": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.008c4c24(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.008c6c28(0x8dbf20, 0xc);\n    fcn.008cc1c6(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0xce93f0;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0xce93ec;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x008c4c68;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.008c4b96(arg_8h_00);\ncode_r0x008c4c68:\n        fcn.008c4b96(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.008c4c8b();\n    fcn.008c6c6d();\n    return;\n}\n",
        "token_count": 408
    }
}