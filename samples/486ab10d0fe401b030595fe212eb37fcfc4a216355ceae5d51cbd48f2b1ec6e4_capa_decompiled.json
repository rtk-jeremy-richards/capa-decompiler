{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_5ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    // [00] -r-x section size 28672 named .text\n    iVar3 = *0x42f414;\n    if (arg_ch == 0xf) {\n        uVar4 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_5ch);\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_1ch);\n        iVar5 = var_10h;\n        pcVar2 = _sym.imp.GDI32.dll_DeleteObject;\n        var_10h = 0;\n        for (; var_18h < iVar5; var_18h = var_18h + 4) {\n            iVar7 = iVar5 - var_18h;\n            var_8h = CONCAT11((*(iVar3 + 0x52) * iVar7 + *(iVar3 + 0x56) * var_18h) / iVar5, \n                              (*(iVar3 + 0x51) * iVar7 + *(iVar3 + 0x55) * var_18h) / iVar5) << 8 |\n                     (*(iVar3 + 0x50) * iVar7 + *(iVar3 + 0x54) * var_18h) / iVar5 & 0xffU;\n            uVar6 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            var_10h = var_10h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, &var_1ch, uVar6);\n            (*pcVar2)(uVar6);\n        }\n        if (*(iVar3 + 0x58) != -1) {\n            iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(*(iVar3 + 0x34));\n            if (iVar5 != 0) {\n                var_1ch = 0x10;\n                var_18h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar4, *(iVar3 + 0x58));\n                pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n                uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, iVar5);\n                (*_sym.imp.USER32.dll_DrawTextA)(uVar4, 0x42ec00, 0xffffffff, &var_1ch, 0x820);\n                (*pcVar1)(uVar4, uVar6);\n                (*pcVar2)(iVar5);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_5ch);\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = *0x42f408;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar4;\n}\n",
        "token_count": 849
    },
    "null": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    char *pcStack464;\n    int32_t iStack456;\n    uint uStack452;\n    char *pcStack448;\n    char *pcStack444;\n    uint uStack440;\n    uchar *puStack436;\n    uint uStack432;\n    uint uStack428;\n    uint uStack424;\n    uint uStack372;\n    \n    uStack372 = 0;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    *0x42f40c = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    *0x42f40c = *0x42f40c & 0xbfffffff;\n    if ((*0x42f40c != 6) && (pcVar3 = fcn.00406338(),  pcVar3 != NULL)) {\n        (*pcVar3)();\n    }\n    pcVar10 = \"UXTHEME\";\n    do {\n        fcn.004062ca(pcVar10);\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        pcVar10 = pcVar10 + iVar4 + 1;\n    } while (*pcVar10 != '\\0');\n    fcn.00406338();\n    *0x42f404 = fcn.00406338();\n    pcVar3 = fcn.00406338();\n    if (pcVar3 != NULL) {\n        uStack424 = 0x40329a;\n        iVar4 = (*pcVar3)();\n        if (iVar4 != 0) {\n            *0x42f40c = *0x42f40c | 0x40000000;\n        }\n    }\n    uStack424 = 0x4032ac;\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    uStack424 = 0;\n    uStack428 = 0x4032b3;\n    *0x42f4d8 = (*_sym.imp.ole32.dll_OleInitialize)();\n    uStack428 = 0;\n    puStack436 = &stack0xfffffe8c;\n    uStack432 = 0x160;\n    uStack440 = NULL;\n    pcStack444 = 0x429830;\n    pcStack448 = 0x4032cf;\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoA)();\n    pcStack448 = \"NSIS Error\";\n    uStack452 = 0x42ec00;\n    fcn.00405fa0();\n    iStack456 = (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n    fcn.00405fa0(0x435000);\n    *0x42f400 = 0x400000;\n    uVar5 = 0x435000;\n    if (*0x435000 == '\\\"') {\n        uStack440 = CONCAT31(uStack440._1_3_, 0x22);\n        uVar5 = 0x435001;\n    }\n    pcStack464 = uStack440;\n    puVar6 = fcn.00405963(uVar5);\n    puVar7 = (*_sym.imp.USER32.dll_CharNextA)(puVar6);\n    pcStack444 = puVar7;\n    while (uVar2 = uStack452,  cVar1 = *puVar7,  cVar1 != '\\0') {\n        while (cVar1 == ' ') {\n            puVar7 = puVar7 + 1;\n            cVar1 = *puVar7;\n        }\n        uStack452 = CONCAT31(uStack452._1_3_, 0x20);\n        if (*puVar7 == '\\\"') {\n            puVar7 = puVar7 + 1;\n            uStack452 = uVar2 & 0xffffff00 | 0x22;\n        }\n        puVar8 = puVar7;\n        if (*puVar7 == '/') {\n            puVar8 = puVar7 + 1;\n            if ((*puVar8 == 'S') && ((*(puVar7 + 2) == ' ' || (*(puVar7 + 2) == '\\0')))) {\n                *0x42f4c0 = 1;\n            }\n            if ((*puVar8 == (((str.NCRC[3] << 8 | str.NCRC[2]) << 8 | str.NCRC[1]) << 8 | str.NCRC[0])) &&\n               ((*(puVar7 + 5) == ' ' || (*(puVar7 + 5) == '\\0')))) {\n                uStack440 = uStack440 | 4;\n            }\n            if (*(puVar7 + -1) == (((str.__D[3] << 8 | str.__D[2]) << 8 | str.__D[1]) << 8 | str.__D[0])) {\n                *(puVar7 + -1) = '\\0';\n                fcn.00405fa0(0x435400, puVar7 + 3);\n                break;\n            }\n        }\n        puVar7 = fcn.00405963();\n        puVar6 = puVar8;\n        if (*puVar7 == '\\\"') {\n            puVar7 = puVar7 + 1;\n        }\n    }\n    pcVar3 = _sym.imp.KERNEL32.dll_GetTempPathA;\n    (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x400, 0x436400, puVar6);\n    iVar4 = fcn.004031db();\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(0x436400, 0x3fb);\n        pcVar10 = 0x436400;\n        sub.KERNEL32.dll_lstrcatA(0x436400, \"\\\\Temp\");\n        iVar4 = fcn.004031db();\n        if (iVar4 == 0) {\n            (*pcVar3)(0x3fc, 0x436400);\n            sub.KERNEL32.dll_lstrcatA(0x436400, 0x40a16c);\n            pcVar3 = _sym.imp.KERNEL32.dll_SetEnvironmentVariableA;\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(\"TEMP\", 0x436400);\n            (*pcVar3)(0x40a160, 0x436400);\n            iVar4 = fcn.004031db();\n            if (iVar4 == 0) goto code_r0x00403526;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x436000);\n    pcVar10 = 0x6;\n    iStack456 = 0x40348c;\n    puStack436 = fcn.00402d63(6);\n    if (puStack436 == NULL) {\n        if (*0x42f420 != 0) {\n            iStack456 = 0;\n            pcStack464 = 0x4034a7;\n            puVar7 = fcn.00405963(0x435000);\n            if (0x434fff < puVar7) {\n                do {\n                    if (*puVar7 == (((*0x40a15b << 8 | *0x40a15a) << 8 | *0x40a159) << 8 | *0x40a158)) break;\n                    puVar7 = puVar7 + -1;\n                } while (0x434fff < puVar7);\n            }\n            pcStack444 = \"Error launching installer\";\n            if (puVar7 < 0x435000) goto code_r0x00403552;\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n            pcVar10 = puVar7;\n            iVar4 = fcn.00405a26();\n            if (iVar4 == 0) goto code_r0x00403526;\n            fcn.00405fa0(0x435400, puVar7);\n            pcVar10 = 0x435800;\n            fcn.00405fa0(0x435800, puVar7);\n            pcStack464 = NULL;\n        }\n        *0x42f4cc = -1;\n        iStack456 = fcn.004037ce();\n    }\ncode_r0x00403526:\n    while( true ) {\n        fcn.004036f4(pcVar10);\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        if (pcStack464 == NULL) break;\n        fcn.004056bc(pcStack464, 0x200010);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(2);\ncode_r0x00403552:\n        iVar4 = fcn.00405627();\n        pcStack464 = \"~nsu\";\n        sub.KERNEL32.dll_lstrcatA(0x436400);\n        if (iVar4 != 0) {\n            sub.KERNEL32.dll_lstrcatA(0x436400, 0x40a14c);\n        }\n        pcVar10 = \".tmp\";\n        sub.KERNEL32.dll_lstrcatA(0x436400);\n        iVar9 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x436400, 0x435c00);\n        if (iVar9 != 0) {\n            if (iVar4 == 0) {\n                fcn.0040560a();\n            }\n            else {\n                fcn.0040558d(0x436400);\n            }\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x436400);\n            if (*0x435400 == '\\0') {\n                pcStack464 = 0x435400;\n                fcn.00405fa0();\n            }\n            fcn.00405fa0(0x430000, puStack436);\n            iVar4 = 0x1a;\n            *0x430400 = *0x40a141 << 8 | *0x40a140;\n            do {\n                fcn.00405fc2(0x429430, *(*0x42f414 + 0x120));\n                (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x429430);\n                if ((iStack456 != 0) && (iVar9 = (*_sym.imp.KERNEL32.dll_CopyFileA)(0x436c00, 0x429430, 1),  iVar9 != 0)\n                   ) {\n                    fcn.00405d7f(0x429430, 0);\n                    fcn.00405fc2(0x429430, *(*0x42f414 + 0x124));\n                    iVar9 = fcn.0040563f(0x429430);\n                    if (iVar9 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar9);\n                        iStack456 = 0;\n                    }\n                }\n                *0x430400 = *0x430400 + 1;\n                *0x430400 = *0x430400 & 0xff00 | *0x430400;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            pcVar10 = 0x436400;\n            fcn.00405d7f(0x436400, 0);\n        }\n    }\n    if (*0x42f4b4 != 0) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &stack0xfffffe3c);\n        iVar4 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar5);\n        if (iVar4 != 0) {\n            (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueA)(0, \"SeShutdownPrivilege\", &stack0xfffffe50);\n            pcStack448 = 0x1;\n            puStack436 = 0x2;\n            (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(iStack456, 0, &stack0xfffffe40, 0, 0, 0);\n        }\n        pcVar3 = fcn.00406338(4);\n        if (((pcVar3 != NULL) && (iVar4 = (*pcVar3)(0, 0, 0, 0x25, 0x80040002),  iVar4 == 0)) ||\n           (iVar4 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0x80040002),  iVar4 == 0)) {\n            fcn.0040140b(9);\n        }\n    }\n    if (*0x42f4cc != -1) {\n        iStack456 = *0x42f4cc;\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(iStack456);\n    if (*0x40a018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a018);\n        *0x40a018 = -1;\n    }\n    fcn.00403739();\n    fcn.00405768(0x436800, 7);\n    return;\n}\n",
        "token_count": 2915
    },
    "00401434": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00401434(int32_t **hWndChildAfter)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint uVar11;\n    int32_t *arg_10h;\n    int32_t iVar12;\n    uint extraout_EDX;\n    uint uVar13;\n    int32_t **ppiVar14;\n    char *pcVar15;\n    int32_t **ppiVar16;\n    int32_t **ppiVar17;\n    char *pcVar18;\n    bool bVar19;\n    ulong uVar20;\n    ulong uVar21;\n    uint in_stack_fffffdcc;\n    uint in_stack_fffffdd0;\n    uint uVar22;\n    uint lpFindFileData;\n    uint var_19ch;\n    uint32_t var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    code *var_7ch;\n    code *var_78h;\n    uint var_74h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    uint32_t var_68h;\n    uint var_64h;\n    uint32_t var_60h;\n    uint var_5ch;\n    uint32_t lpFileOp;\n    uint var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint lpRect;\n    uint var_40h;\n    uint lpMultiByteStr;\n    int32_t var_38h;\n    uint lpValueName;\n    int32_t *hFile;\n    int32_t *var_2ch;\n    uint32_t var_28h;\n    uint32_t dwFileAttributes;\n    uint32_t var_20h;\n    uint32_t lpLastWriteTime;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint8_t var_dh;\n    int32_t lpWideCharStr;\n    uint32_t hWndParent;\n    uint32_t var_4h;\n    \n    ppiVar16 = *0x40b858;\n    pcVar6 = _sym.imp.USER32.dll_ShowWindow;\n    hWndParent = *0x42f408;\n    uVar13 = 0;\n    ppiVar14 = hWndChildAfter;\n    ppiVar17 = &var_2ch;\n    for (iVar12 = 7; iVar12 != 0; iVar12 = iVar12 + -1) {\n        *ppiVar17 = *ppiVar14;\n        ppiVar14 = ppiVar14 + 1;\n        ppiVar17 = ppiVar17 + 1;\n    }\n    iVar12 = var_28h * 0x400;\n    var_4h = 0;\n    pcVar15 = iVar12 + 0x430000;\n    pcVar18 = dwFileAttributes * 0x400 + 0x430000;\n    *0x40b854 = &var_28h;\n    if (0x41 < var_2ch - 2U) goto code_r0x00402957;\n    // switch table (66 cases) at 0x402969\n    switch(*((var_2ch - 2U) * 4 + 0x402969)) {\n    case 0x401490:\ncode_r0x00401492:\n        fcn.004050c7(in_stack_fffffdcc, in_stack_fffffdd0);\n        return 0x7fffffff;\n    case 0x40149c:\n        *0x42ebcc = *0x42ebcc + 1;\n        if (hWndParent == 0) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        return 0x7fffffff;\n    case 0x4014b7:\n        iVar12 = fcn.0040136d(var_28h);\n        uVar9 = fcn.00401389(iVar12 + -1, 0);\n        return uVar9;\n    case 0x4014ca:\n        fcn.004050c7(var_28h, 0);\n        break;\n    case 0x4014d6:\n        uVar21 = fcn.00402aa9(0);\n        iVar12 = uVar21;\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        if (iVar12 < 2) {\n            iVar12 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar12);\n        break;\n    case 0x4014f4:\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(hWndParent);\n        break;\n    case 0x401502:\n        iVar12 = var_28h * 4;\n        if (var_20h == 0) {\n            *(iVar12 + 0x42f4e0) = *(iVar12 + 0x42f4a0);\n            uVar13 = fcn.00402aa9(1);\n            *(var_28h * 4 + 0x42f4a0) = uVar13;\n        }\n        else {\n            *(iVar12 + 0x42f4a0) = *(iVar12 + 0x42f4e0);\n        }\n        break;\n    case 0x401541:\n        puVar1 = var_20h * 4 + 0x42f4a0;\n        uVar9 = *puVar1;\n        uVar4 = (&var_28h)[uVar9 == 0];\n        *puVar1 = uVar9 & lpLastWriteTime;\n        return uVar4;\n    case 0x401562:\n        goto code_r0x004028ff;\n    case 0x40156f:\n        if (*0x42ebd0 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x42ebd0, dwFileAttributes);\n        }\n        if (*0x42ebe4 != 0) {\n            (*pcVar6)(*0x42ebe4, var_28h);\n        }\n        break;\n    case 0x40159d:\n        uVar13 = fcn.00402acb(0xfffffff0);\n        iVar12 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(uVar13, dwFileAttributes);\n        goto code_r0x004015ae;\n    case 0x4015bb:\n        uVar13 = fcn.00402acb(0xfffffff0);\n        puVar3 = fcn.004059d1(uVar13);\n        if (puVar3 != NULL) {\n            do {\n                puVar3 = fcn.00405963(puVar3, 0x5c);\n                uVar2 = *puVar3;\n                *puVar3 = 0;\n                hWndChildAfter = hWndChildAfter & 0xffffff | uVar2 << 0x18;\n                if (((uVar2 == 0) && (var_20h != 0)) && (iVar12 = fcn.00405627(),  iVar12 != 0)) {\n                    iVar12 = fcn.0040558d(uVar13);\n                }\n                else {\n                    iVar12 = fcn.0040560a(uVar13);\n                }\n                if ((iVar12 != 0) &&\n                   ((iVar12 != 0xb7 ||\n                    (uVar9 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(uVar13),  (uVar9 & 0x10) == 0)))) {\n                    var_4h = var_4h + 1;\n                }\n                *puVar3 = hWndChildAfter._3_1_;\n                puVar3 = puVar3 + 1;\n            } while (hWndChildAfter._3_1_ != 0);\n        }\n        if (dwFileAttributes == 0) goto code_r0x0040223d;\n        fcn.00401423(0xffffffe6);\n        fcn.00405fa0(0x435800, uVar13);\n        iVar12 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(uVar13);\n        if (iVar12 == 0) {\n            var_4h = var_4h + 1;\n        }\n        break;\n    case 0x401659:\n        uVar13 = fcn.00402acb(0);\n        iVar12 = fcn.004062a3(uVar13);\n        lpLastWriteTime = dwFileAttributes;\n        goto joined_r0x00401a0c;\n    case 0x40166a:\n        uVar13 = fcn.00402acb(0xffffffd0);\n        uVar11 = fcn.00402acb(0xffffffdf);\n        fcn.00402acb(0x13);\n        iVar12 = (*_sym.imp.KERNEL32.dll_MoveFileA)(uVar13, uVar11);\n        if (iVar12 == 0) {\n            if ((var_20h == 0) || (iVar12 = fcn.004062a3(uVar13),  iVar12 == 0)) goto code_r0x0040271c;\n            fcn.00405d7f(uVar13, uVar11);\n        }\n        goto code_r0x0040223d;\n    case 0x4016bb:\n        ppiVar16 = fcn.00402acb(0);\n        iVar12 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(ppiVar16, 0x400, pcVar18, &hWndChildAfter);\n        if (iVar12 == 0) {\ncode_r0x004016fb:\n            var_4h = 1;\n            *pcVar18 = '\\0';\n        }\n        else if ((ppiVar16 < hWndChildAfter) && (*hWndChildAfter != '\\0')) {\n            iVar12 = fcn.004062a3(ppiVar16);\n            if (iVar12 == 0) goto code_r0x004016fb;\n            fcn.00405fa0(hWndChildAfter, iVar12 + 0x2c);\n        }\n        if (var_20h == 0) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(pcVar18, pcVar18, 0x400);\n        }\n        break;\n    case 0x40171f:\n        uVar13 = fcn.00402acb(0xffffffff);\n        iVar12 = (*_sym.imp.KERNEL32.dll_SearchPathA)(0, uVar13, 0, 0x400, pcVar15, &hWndChildAfter);\n        bVar19 = iVar12 == 0;\n        goto code_r0x0040173b;\n    case 0x401746:\n        uVar13 = fcn.00402acb(0xffffffef);\n        iVar12 = fcn.00405b68(pcVar15, uVar13);\n        goto code_r0x004015ae;\n    case 0x401759:\n        uVar9 = fcn.00402acb(0x31);\n        hWndChildAfter = var_28h & 7;\n        hWndParent = uVar9;\n        iVar12 = fcn.004059a5(uVar9);\n        if (iVar12 == 0) {\n            uVar11 = 0x435800;\n            uVar13 = fcn.00405fa0(0x40a418, 0x435800, uVar9);\n            uVar13 = fcn.00405938(uVar13);\n            sub.KERNEL32.dll_lstrcatA(uVar13);\n        }\n        else {\n            uVar11 = 0x40a418;\n            fcn.00405fa0(0x40a418);\n        }\n        fcn.0040620a(0x40a418);\n        do {\n            if (2 < hWndChildAfter) {\n                iVar12 = fcn.004062a3(0x40a418);\n                uVar9 = 0;\n                if (iVar12 != 0) {\n                    uVar9 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar12 + 0x14, &lpLastWriteTime);\n                }\n                hWndChildAfter = ((hWndChildAfter - 3U | 0x80000000) & uVar9) == 0;\n            }\n            if (hWndChildAfter == NULL) {\n                fcn.00405b14(0x40a418);\n            }\n            lpWideCharStr = fcn.00405b39(0x40a418, 0x40000000, (hWndChildAfter != 0x1) + '\\x01');\n            if (lpWideCharStr != -1) {\n                fcn.004050c7(0xffffffea, hWndParent);\n                *0x42f4d4 = *0x42f4d4 + 1;\n                iVar12 = fcn.00402f9c(var_20h, lpWideCharStr, 0, 0);\n                *0x42f4d4 = *0x42f4d4 + -1;\n                if ((lpLastWriteTime != 0xffffffff) || (var_18h != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)(lpWideCharStr, &lpLastWriteTime, 0, &lpLastWriteTime);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(lpWideCharStr);\n                if (-1 < iVar12) goto code_r0x00402957;\n                if (iVar12 == -2) {\n                    uVar8 = 0xffffffe9;\n                    fcn.00405fc2(0x40a418, 0xffffffe9);\n                    uVar22 = 0x40a418;\n                    sub.KERNEL32.dll_lstrcatA(uVar11, hWndParent, 0x40a418);\n                }\n                else {\n                    uVar8 = 0xffffffee;\n                    uVar22 = 0x40a418;\n                    fcn.00405fc2(0x40a418, 0xffffffee);\n                }\n                uVar11 = 0x200010;\n                uVar13 = 0x40a418;\n                goto code_r0x004022e2;\n            }\n            if (hWndChildAfter != NULL) {\n                fcn.004050c7(0xffffffe2, hWndParent);\n                bVar19 = hWndChildAfter == 0x2;\n                goto code_r0x004015b0;\n            }\n            fcn.00405fa0(0x40ac18, 0x430000);\n            fcn.00405fa0(0x430000, 0x40a418);\n            fcn.00405fc2(0x40a818, var_14h);\n            fcn.00405fa0(0x430000, 0x40ac18);\n            iVar12 = fcn.004056bc();\n        } while (iVar12 == 4);\n        if (iVar12 != 5) {\n            in_stack_fffffdd0 = 0x40a418;\n            in_stack_fffffdcc = 0xfffffffa;\n            goto code_r0x00401492;\n        }\n        *0x42f4a8 = *0x42f4a8 + 1;\n        goto code_r0x00402960;\n    case 0x4018fd:\n        uVar13 = 0;\n        goto code_r0x00401934;\n    case 0x401900:\n        uVar13 = fcn.00402acb(0x31);\n        uVar9 = fcn.004056bc(uVar13, var_28h);\n        if (uVar9 == 0) goto code_r0x0040271c;\n        if (uVar9 == var_20h) {\n            return lpLastWriteTime;\n        }\n        if (uVar9 == var_18h) {\n            return var_14h;\n        }\n        break;\n    case 0x401932:\n        uVar13 = 0xfffffff0;\ncode_r0x00401934:\n        uVar13 = fcn.00402acb(uVar13);\n        fcn.00405768(uVar13, dwFileAttributes);\n        break;\n    case 0x401947:\n        uVar13 = fcn.00402acb(1);\n        sub.KERNEL32.dll_lstrlenA(uVar13);\n        goto code_r0x004028ff;\n    case 0x401959:\n        uVar21 = fcn.00402aa9(2);\n        var_40h._0_2_ = uVar21;\n        var_40h._2_2_ = uVar21 >> 0x10;\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        _var_38h = fcn.00402aa9(3);\n        iVar12 = _var_38h;\n        hWndChildAfter = CONCAT22(var_40h._2_2_, var_40h);\n        hFile = fcn.00402acb(1);\n        iVar10 = sub.KERNEL32.dll_lstrlenA(hFile);\n        *pcVar15 = '\\0';\n        if (CONCAT22(lpMultiByteStr._2_2_, lpMultiByteStr) == 0) {\n            hWndChildAfter = iVar10;\n        }\n        if ((hWndChildAfter != NULL) && ((-1 < var_38h || (iVar12 = iVar10 + var_38h,  -1 < iVar12)))) {\n            if (iVar10 < iVar12) {\n                iVar12 = iVar10;\n            }\n            fcn.00405fa0(pcVar15, hFile + iVar12);\n            if (hWndChildAfter < 0) {\n                iVar12 = sub.KERNEL32.dll_lstrlenA(pcVar15);\n                hWndChildAfter = hWndChildAfter + iVar12;\n                if (hWndChildAfter < 0) {\n                    hWndChildAfter = NULL;\n                }\n            }\n            if (hWndChildAfter < 0x400) {\n                pcVar15[hWndChildAfter] = '\\0';\n            }\n        }\n        break;\n    case 0x4019ed:\n        uVar13 = fcn.00402acb(0x20);\n        uVar11 = fcn.00402acb(0x31);\n        if (var_18h == 0) {\n            iVar12 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n        }\n        else {\n            iVar12 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(uVar13, uVar11);\n        }\n        goto joined_r0x00401a0c;\n    case 0x401a1e:\n        hWndChildAfter = fcn.00402acb(1);\n        iVar10 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(hWndChildAfter, pcVar15, 0x400);\n        if ((iVar10 == 0) ||\n           ((var_20h != 0 && (iVar10 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(hWndChildAfter, pcVar15),  iVar10 == 0)))) {\n            var_4h = 1;\n            *pcVar15 = '\\0';\n        }\n        *(iVar12 + 0x4303ff) = 0;\n        break;\n    case 0x401a5e:\n        uVar21 = fcn.00402aa9(0);\n        uVar9 = uVar21;\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        uVar4 = fcn.00402aa9(1);\n        if (var_14h != 0) {\n            if (uVar9 < uVar4) {\n                return lpLastWriteTime;\n            }\n            if (uVar9 <= uVar4) {\n                return var_20h;\n            }\n            return var_18h;\n        }\n        if (uVar9 < uVar4) {\n            return lpLastWriteTime;\n        }\n        if (uVar9 <= uVar4) {\n            return var_20h;\n        }\n        return var_18h;\n    case 0x401a9e:\n        uVar21 = fcn.00402aa9(1);\n        hWndChildAfter = uVar21;\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        uVar21 = fcn.00402aa9(2);\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        if (0xd < lpLastWriteTime) goto code_r0x004028ff;\n    // switch table (14 cases) at 0x402a71\n        switch(*(lpLastWriteTime * 4 + 0x402a71)) {\n        case 0x401aca:\n            break;\n        case 0x401ace:\n            break;\n        case 0x401ad2:\n            break;\n        case 0x401ad7:\n            goto joined_r0x00401b14;\n        case 0x401ae4:\n            break;\n        case 0x401ae8:\n            break;\n        case 0x401aec:\n            break;\n        case 0x401af2:\n            break;\n        case 0x401afb:\n            break;\n        case 0x401b05:\n            break;\n        case 0x401b12:\njoined_r0x00401b14:\n            if (uVar21 == 0) {\n                var_4h = 1;\n            }\n            break;\n        case 0x401b2a:\n            break;\n        case 0x401b2e:\n            break;\n        case 0x401b32:\n        }\n        goto code_r0x004028ff;\n    case 0x401b3f:\n        uVar13 = fcn.00402acb(1);\n        uVar21 = fcn.00402aa9(2);\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        (*_sym.imp.USER32.dll_wsprintfA)(pcVar15, uVar13, uVar21);\n        break;\n    case 0x401b63:\n        ppiVar14 = *0x40b858;\n        if (var_20h == 0) {\n            if (dwFileAttributes != 0) {\n                if (*0x40b858 != NULL) {\n                    fcn.00405fa0(pcVar15, *0x40b858 + 1);\n                    *0x40b858 = *ppiVar16;\n                    goto code_r0x00401bd2;\n                }\n                goto code_r0x0040271c;\n            }\n            ppiVar16 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x404);\n            fcn.00405fc2(ppiVar16 + 1, var_28h);\n            *ppiVar16 = *0x40b858;\n            *0x40b858 = ppiVar16;\n        }\n        else {\n            do {\n                var_20h = var_20h - 1;\n                if (ppiVar14 == NULL) goto code_r0x004022d4;\n                ppiVar14 = *ppiVar14;\n            } while (var_20h != 0);\n            if (ppiVar14 == NULL) goto code_r0x004022d4;\n            ppiVar14 = ppiVar14 + 1;\n            pcVar15 = 0x40a418;\n            ppiVar16 = ppiVar14;\n            fcn.00405fa0(0x40a418, ppiVar14);\n            fcn.00405fa0(ppiVar14, *0x40b858 + 1);\ncode_r0x00402875:\n            fcn.00405fa0(pcVar15, ppiVar16);\n        }\n        break;\n    case 0x401c0a:\n        uVar21 = fcn.00402aa9(3);\n        hWndParent = uVar21;\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        uVar21 = fcn.00402aa9(4);\n        hWndChildAfter = uVar21;\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        if ((var_14h & 1) != 0) {\n            hWndParent = fcn.00402acb(0x33);\n        }\n        if ((var_14h & 2) != 0) {\n            hWndChildAfter = fcn.00402acb(0x44);\n        }\n        if (var_2ch == 0x21) {\n            uVar21 = fcn.00402aa9();\n            lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n            lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n            uVar20 = fcn.00402aa9(2);\n            lpMultiByteStr._0_2_ = uVar20 >> 0x20;\n            lpMultiByteStr._2_2_ = uVar20 >> 0x30;\n            if (var_14h >> 2 == 0) {\n                lpWideCharStr = (*_sym.imp.USER32.dll_SendMessageA)(uVar21, uVar20, hWndParent, hWndChildAfter);\n                dwFileAttributes = var_28h;\n            }\n            else {\n                iVar12 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)\n                                   (uVar21, uVar20, hWndParent, hWndChildAfter, 0, var_14h >> 2, &lpWideCharStr);\n                var_4h = iVar12 == 0;\n                dwFileAttributes = var_28h;\n            }\n        }\n        else {\n            pcVar18 = fcn.00402acb(1);\n            pcVar5 = fcn.00402acb(0x12);\n            lpWideCharStr =\n                 (*_sym.imp.USER32.dll_FindWindowExA)\n                           (hWndParent, hWndChildAfter, -(*pcVar18 != '\\0') & pcVar18, -(*pcVar5 != '\\0') & pcVar5);\n            dwFileAttributes = var_28h;\n        }\njoined_r0x004026af:\n        if (-1 < dwFileAttributes) goto code_r0x004028ff;\n        break;\n    case 0x401cda:\n        uVar21 = fcn.00402aa9(0);\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        iVar12 = (*_sym.imp.USER32.dll_IsWindow)(uVar21);\n        lpLastWriteTime = dwFileAttributes;\njoined_r0x00401a0c:\n        if (iVar12 == 0) {\n            return var_20h;\n        }\n        return lpLastWriteTime;\n    case 0x401cfb:\n        uVar21 = fcn.00402aa9(2);\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        uVar20 = fcn.00402aa9(1);\n        lpMultiByteStr._0_2_ = uVar20 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar20 >> 0x30;\n        (*_sym.imp.USER32.dll_GetDlgItem)(uVar20, uVar21);\n        goto code_r0x004028ff;\n    case 0x401d20:\n        iVar12 = *0x42f468 + dwFileAttributes;\n        uVar21 = fcn.00402aa9(0);\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        (*_sym.imp.USER32.dll_SetWindowLongA)(uVar21, 0xffffffeb, iVar12);\n        break;\n    case 0x401d41:\n        uVar13 = (*_sym.imp.USER32.dll_GetDlgItem)(hWndParent, dwFileAttributes);\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar13, &lpRect);\n        uVar11 = fcn.00402acb(0, 0, CONCAT22(var_40h._2_2_, var_40h) * var_20h, \n                              CONCAT22(lpMultiByteStr._2_2_, lpMultiByteStr) * var_20h, 0x10);\n        uVar11 = (*_sym.imp.USER32.dll_LoadImageA)(0, uVar11);\n        iVar12 = (*_sym.imp.USER32.dll_SendMessageA)(uVar13, 0x172, 0, uVar11);\n        if (iVar12 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar12);\n        }\n        break;\n    case 0x401d9b:\n        uVar13 = (*_sym.imp.USER32.dll_GetDC)(hWndParent);\n        uVar21 = fcn.00402aa9(2);\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        uVar11 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar13, 0x5a, 0x48);\n        *0x40b818 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar21, uVar11);\n        *0x40b818 = -*0x40b818;\n        (*_sym.imp.USER32.dll_ReleaseDC)(hWndParent, uVar13);\n        uVar21 = fcn.00402aa9(3);\n        *0x40b828 = uVar21;\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        *0x40b82c = var_18h & 1;\n        *0x40b82f = 1;\n        *0x40b82d = var_18h & 2;\n        *0x40b82e = var_18h & 4;\n        fcn.00405fc2(0x40b834, dwFileAttributes);\n        (*_sym.imp.GDI32.dll_CreateFontIndirectA)(0x40b818);\n        goto code_r0x004028ff;\n    case 0x401e2b:\n        uVar21 = fcn.00402aa9(0);\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        uVar20 = fcn.00402aa9(1);\n        lpMultiByteStr._0_2_ = uVar20 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar20 >> 0x30;\n        if (lpLastWriteTime == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar21, uVar20);\n        }\n        break;\n    case 0x401e5f:\n        pcVar15 = fcn.00402acb(0);\n        iVar12 = 0x31;\n        var_64h = fcn.00402acb(0x31);\n        pcVar18 = fcn.00402acb(0x22);\n        fcn.00402acb(0x15);\n        fcn.00401423(0xffffffec);\n        var_70h = var_18h;\n        var_6ch = hWndParent;\n        lpFileOp = lpLastWriteTime;\n        var_68h = -(*pcVar15 != '\\0') & pcVar15;\n        var_5ch = 0x435800;\n        var_60h = -(*pcVar18 != '\\0') & pcVar18;\n        iVar10 = fcn.00405682(&var_74h);\n        if (iVar10 == 0) goto code_r0x0040271c;\n        if ((var_70h & 0x40) != 0) {\n            fcn.004063ad(CONCAT22(lpMultiByteStr._2_2_, lpMultiByteStr));\n            goto code_r0x00401f26;\n        }\n        break;\n    case 0x401ee1:\n        uVar13 = fcn.00402acb(0);\n        fcn.004050c7(0xffffffeb, uVar13);\n        iVar12 = fcn.0040563f(uVar13);\n        if (iVar12 == 0) goto code_r0x0040271c;\n        if (var_20h != 0) {\n            iVar10 = fcn.004063ad(iVar12);\n            if (dwFileAttributes < 0) {\n                if (iVar10 != 0) {\n                    var_4h = 1;\n                }\n            }\n            else {\n                fcn.00405efe(pcVar18, iVar10);\n            }\n        }\ncode_r0x00401f26:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar12);\n        break;\n    case 0x401f31:\n        uVar13 = fcn.00402acb(2);\n        hWndChildAfter = fcn.004062a3(uVar13);\n        if (hWndChildAfter != NULL) {\n            fcn.00405efe(pcVar18, hWndChildAfter[5]);\n            goto code_r0x004028ff;\n        }\n        *pcVar15 = '\\0';\n        *pcVar18 = '\\0';\n        goto code_r0x0040271c;\n    case 0x401f61:\n        hFile = fcn.00402acb(0xffffffee);\n        pcVar6 = fcn.00406338(9, hFile, &lpMultiByteStr);\n        lpWideCharStr = (*pcVar6)();\n        *pcVar15 = '\\0';\n        *pcVar18 = '\\0';\n        var_4h = 1;\n        if ((lpWideCharStr != 0) &&\n           (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, lpWideCharStr),  hWndChildAfter != NULL)) {\n            var_7ch = fcn.00406338(10);\n            var_78h = fcn.00406338(0xb);\n            iVar12 = (*var_7ch)(hFile, 0, lpWideCharStr, hWndChildAfter);\n            ppiVar16 = hWndChildAfter;\n            if ((iVar12 != 0) &&\n               (ppiVar14 = hWndChildAfter,  iVar12 = (*var_78h)(hWndChildAfter, 0x40a014, &hWndParent, &lpValueName), \n               ppiVar16 = hWndChildAfter,  iVar12 != 0)) {\n                uVar13 = *(hWndParent + 8);\n                fcn.00405efe(pcVar15, uVar13);\n                fcn.00405efe(ppiVar14, *(hWndParent + 0xc), pcVar15, uVar13, pcVar18);\n                var_4h = 0;\n                ppiVar16 = hWndChildAfter;\n            }\ncode_r0x00401bd2:\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar16);\n        }\n        break;\n    case 0x402002:\n        var_4h = 1;\n        if (-1 < *0x42f4d8) {\n            uVar13 = fcn.00402acb(0xfffffff0);\n            hWndChildAfter = fcn.00402acb(1);\n            if (((var_18h != 0) && (iVar12 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar13),  iVar12 != 0)) ||\n               (iVar12 = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(uVar13, 0, 8),  iVar12 != 0)) {\n                pcVar6 = sub.KERNEL32.dll_GetProcAddress(iVar12, hWndChildAfter);\n                if (pcVar6 == NULL) {\n                    fcn.004050c7(0xfffffff7, hWndChildAfter);\n                }\n                else {\n                    var_4h = 0;\n                    if (var_20h == 0) {\n                        (*pcVar6)(hWndParent, 0x400, 0x430000, 0x40b858, 0x40a000);\n                    }\n                    else {\n                        fcn.00401423(var_20h);\n                        iVar10 = (*pcVar6)();\n                        if (iVar10 != 0) {\n                            var_4h = 1;\n                        }\n                    }\n                }\n                if ((lpLastWriteTime == 0) && (iVar10 = fcn.0040376e(iVar12),  iVar10 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar12);\n                }\n                break;\n            }\n        }\n        goto code_r0x0040223d;\n    case 0x4020d1:\n        uVar13 = fcn.00402acb(0xfffffff0);\n        lpMultiByteStr._0_2_ = uVar13;\n        lpMultiByteStr._2_2_ = uVar13 >> 0x10;\n        lpWideCharStr = fcn.00402acb(0xffffffdf);\n        var_80h = fcn.00402acb(2);\n        var_7ch = fcn.00402acb(0xffffffcd);\n        lpValueName = fcn.00402acb(0x45);\n        var_88h = var_18h & 0xfff;\n        var_78h = var_18h >> 0x10 & 0xffff;\n        uVar9 = var_18h >> 0xc & 7;\n        iVar12 = fcn.004059a5(lpWideCharStr);\n        if (iVar12 == 0) {\n            fcn.00402acb(0x21);\n        }\n        iVar12 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x40851c, 0, 1, 0x40850c, &hWndChildAfter);\n        if (-1 < iVar12) {\n            hWndParent = (***hWndChildAfter)(hWndChildAfter, 0x40852c, &hFile);\n            if (-1 < hWndParent) {\n                hWndParent = (*(*hWndChildAfter)[0x14])(hWndChildAfter, lpWideCharStr);\n                if ((var_18h & 0x8000) == 0) {\n                    (*(*hWndChildAfter)[9])(hWndChildAfter, 0x435800);\n                }\n                if (uVar9 != 0) {\n                    (*(*hWndChildAfter)[0xf])(hWndChildAfter, uVar9);\n                }\n                (*(*hWndChildAfter)[0xd])(hWndChildAfter, var_78h);\n                if (*var_7ch != 0x0) {\n                    (*(*hWndChildAfter)[0x11])(hWndChildAfter, var_7ch, var_88h);\n                }\n                (*(*hWndChildAfter)[0xb])(hWndChildAfter, var_80h);\n                (*(*hWndChildAfter)[7])(hWndChildAfter, lpValueName);\n                if (-1 < hWndParent) {\n                    hWndParent = 0x80004005;\n                    iVar12 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                       (0, 0, CONCAT22(lpMultiByteStr._2_2_, lpMultiByteStr), 0xffffffff, lpWideCharStr\n                                        , 0x400);\n                    if (iVar12 != 0) {\n                        hWndParent = (**(*hFile + 0x18))(hFile, lpWideCharStr, 1);\n                    }\n                }\n                (**(*hFile + 8))(hFile);\n            }\n            (*(*hWndChildAfter)[2])(hWndChildAfter);\n            if (-1 < hWndParent) goto code_r0x0040223d;\n        }\n        var_4h = 1;\n        goto code_r0x0040223d;\n    case 0x40224b:\n        iVar12 = fcn.00402acb(0);\n        iVar10 = fcn.00402acb(0x11);\n        hWndChildAfter = fcn.00402acb(0x23);\n        iVar7 = fcn.004062a3(iVar12);\n        if (iVar7 != 0) {\n            lpFileOp = hWndParent;\n            var_54h = 2;\n            iVar7 = sub.KERNEL32.dll_lstrlenA(iVar12);\n            *(iVar7 + 1 + iVar12) = 0;\n            iVar7 = sub.KERNEL32.dll_lstrlenA(iVar10);\n            *(iVar7 + 1 + iVar10) = 0;\n            var_40h._2_2_ = SUB42(hWndChildAfter, 0);\n            lpMultiByteStr._0_2_ = hWndChildAfter >> 0x10;\n            lpRect._0_2_ = var_20h;\n            var_50h = iVar12;\n            var_4ch = iVar10;\n            fcn.004050c7(0, hWndChildAfter);\n            iVar12 = (*_sym.imp.SHELL32.dll_SHFileOperationA)(&lpFileOp);\n            if (iVar12 == 0) break;\n        }\n        fcn.004050c7(0xfffffff9, 0);\n        goto code_r0x0040271c;\n    case 0x4022cd:\n        if (var_28h != 0xbadf00d) {\ncode_r0x004022d4:\n            uVar8 = 0x200010;\n            uVar22 = 0xffffffe8;\n            uVar11 = 0;\n            uVar13 = fcn.00405fc2(0, 0xffffffe8);\ncode_r0x004022e2:\n            fcn.004056bc(uVar13, uVar11, uVar22, uVar8);\n            return 0x7fffffff;\n        }\n        *0x42f4b4 = *0x42f4b4 + 1;\n        break;\n    case 0x4022fc:\n        uVar11 = 0;\n        uVar22 = 0;\n        if (var_28h != 0) {\n            uVar11 = fcn.00402acb(0);\n        }\n        if (dwFileAttributes != 0) {\n            uVar22 = fcn.00402acb(0x11);\n        }\n        if (var_18h != 0) {\n            uVar13 = fcn.00402acb(0x22);\n        }\n        uVar8 = fcn.00402acb(0xffffffcd);\n        iVar12 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(uVar11, uVar22, uVar13, uVar8);\ncode_r0x004015ae:\n        bVar19 = iVar12 == 0;\ncode_r0x004015b0:\n        if (bVar19) goto code_r0x0040271c;\n        break;\n    case 0x402340:\n        hWndChildAfter = hWndChildAfter & 0xffff | *0x40a010 << 0x10;\n        uVar13 = fcn.00402acb(1);\n        uVar11 = fcn.00402acb(0x12);\n        lpMultiByteStr._0_2_ = uVar11;\n        lpMultiByteStr._2_2_ = uVar11 >> 0x10;\n        uVar11 = fcn.00402acb(0xffffffdd);\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                  (uVar13, CONCAT22(lpMultiByteStr._2_2_, lpMultiByteStr), &hWndChildAfter + 2, pcVar15, 0x3ff, uVar11);\n        bVar19 = *pcVar15 == '\\n';\ncode_r0x0040173b:\n        if (bVar19) {\ncode_r0x004026f0:\n            var_4h = 1;\n            *pcVar15 = '\\0';\n        }\n        break;\n    case 0x402381:\n        if (var_18h == 0) {\n            iVar10 = fcn.00402b0b(2);\n            if (iVar10 == 0) goto code_r0x0040271c;\n            uVar13 = fcn.00402acb(0x33);\n            iVar12 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar10, uVar13);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar10);\n        }\n        else {\n            uVar13 = fcn.00402acb(0x22);\n            iVar12 = fcn.00402b89(dwFileAttributes, uVar13, var_18h >> 1);\n        }\n        if (iVar12 != 0) goto code_r0x0040271c;\n        break;\n    case 0x4023d6:\n        lpMultiByteStr._0_2_ = var_14h;\n        lpMultiByteStr._2_2_ = var_14h >> 0x10;\n        lpValueName = fcn.00402acb(2);\n        uVar13 = fcn.00402acb(0x11);\n        var_4h = 1;\n        hWndChildAfter = fcn.00402b5b(var_28h, uVar13, 2);\n        if (hWndChildAfter != NULL) {\n            uVar9 = 0;\n            if (var_18h == 1) {\n                fcn.00402acb(0x23);\n                iVar12 = sub.KERNEL32.dll_lstrlenA(0x40ac18);\n                uVar9 = iVar12 + 1;\n            }\n            uVar21 = CONCAT44(var_80h, *0x40ac18);\n            if (var_18h == 4) {\n                uVar21 = fcn.00402aa9(3);\n                uVar9 = var_18h;\n            }\n            if (var_18h == 3) {\n                uVar9 = fcn.00402f9c(lpLastWriteTime, 0, 0x40ac18, 0xc00);\n                var_80h = uVar21 >> 0x20;\n                *0x40ac18 = uVar21;\n            }\n            iVar12 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)\n                               (hWndChildAfter, lpValueName, 0, CONCAT22(lpMultiByteStr._2_2_, lpMultiByteStr), 0x40ac18\n                                , uVar9);\n            var_80h = uVar21 >> 0x20;\n            *0x40ac18 = uVar21;\n            ppiVar16 = hWndChildAfter;\n            if (iVar12 == 0) {\n                var_4h = 0;\n            }\ncode_r0x00402542:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(ppiVar16);\n            var_80h = uVar21 >> 0x20;\n            *0x40ac18 = uVar21;\n        }\n        break;\n    case 0x402473:\n        ppiVar16 = fcn.00402b0b(0x20019);\n        uVar13 = fcn.00402acb(0x33);\n        *pcVar15 = '\\0';\n        if (ppiVar16 != NULL) {\n            lpMultiByteStr._0_2_ = 0x400;\n            lpMultiByteStr._2_2_ = 0;\n            iVar10 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)\n                               (ppiVar16, uVar13, 0, &hWndChildAfter, pcVar15, &lpMultiByteStr);\n            if (iVar10 == 0) {\n                if (hWndChildAfter == 0x4) {\n                    var_4h = var_18h == 0;\n                    fcn.00405efe();\n                    uVar21 = CONCAT44(var_80h, *0x40ac18);\n                    goto code_r0x00402542;\n                }\n                if ((hWndChildAfter == 0x1) || (hWndChildAfter == 0x2)) {\n                    var_4h = var_18h;\n                    goto code_r0x0040253b;\n                }\n            }\n            *pcVar15 = '\\0';\n            uVar21 = CONCAT44(var_80h, *0x40ac18);\n            var_4h = 1;\n            goto code_r0x00402542;\n        }\n        goto code_r0x0040271c;\n    case 0x4024e5:\n        ppiVar16 = fcn.00402b0b(0x20019);\n        uVar21 = fcn.00402aa9(3);\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        *pcVar15 = '\\0';\n        if (ppiVar16 != NULL) {\n            hWndChildAfter = 0x3ff;\n            if (var_18h == 0) {\n                iVar10 = (*_sym.imp.ADVAPI32.dll_RegEnumValueA)(ppiVar16, uVar21, pcVar15, &hWndChildAfter, 0, 0, 0, 0);\n                if (iVar10 != 0) {\n                    var_4h = 1;\n                }\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(ppiVar16, uVar21, pcVar15, 0x3ff);\n            }\ncode_r0x0040253b:\n            *(iVar12 + 0x4303ff) = 0;\n            uVar21 = CONCAT44(var_80h, *0x40ac18);\n            goto code_r0x00402542;\n        }\n        goto code_r0x0040271c;\n    case 0x40254d:\n        iVar12 = fcn.00405f17(pcVar15);\n        if (iVar12 != 0) goto code_r0x00401f26;\n        break;\n    case 0x402561:\n        uVar13 = fcn.00402acb(0xffffffed);\n        iVar12 = fcn.00405b39(uVar13, dwFileAttributes, var_20h);\n        if (iVar12 == -1) goto code_r0x0040271a;\ncode_r0x004028ff:\n        fcn.00405efe(pcVar15);\n        break;\n    case 0x402583:\n        if (var_20h == 0) {\n            uVar13 = fcn.00402acb(0x11);\n            uVar13 = sub.KERNEL32.dll_lstrlenA(uVar13);\n        }\n        else {\n            uVar13 = 1;\n            *0x40a818 = fcn.00402aa9(1);\n            lpMultiByteStr._0_2_ = extraout_EDX;\n            lpMultiByteStr._2_2_ = extraout_EDX >> 0x10;\n        }\n        if (*pcVar15 != '\\0') {\n            uVar11 = fcn.00405f17(pcVar15);\n            iVar12 = fcn.00405be0(uVar11, 0x40a818, uVar13);\n            goto code_r0x004015ae;\n        }\n        goto code_r0x0040271c;\n    case 0x4025ca:\n        hWndParent = 0;\n        uVar21 = fcn.00402aa9(2);\n        lpWideCharStr = uVar21;\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        if (lpWideCharStr < 1) break;\n        if (0x3ff < lpWideCharStr) {\n            lpWideCharStr = 0x3ff;\n        }\n        iVar12 = hWndParent;\n        if (*pcVar15 != '\\0') {\n            hWndChildAfter = hWndChildAfter & 0xffffff;\n            hFile = fcn.00405f17(pcVar15);\n            iVar12 = hWndParent;\n            if (0 < lpWideCharStr) {\n                while (iVar10 = fcn.00405bb1(hFile, &var_dh, 1),  iVar10 != 0) {\n                    if (lpLastWriteTime != 0) {\n                        fcn.00405efe(pcVar18, var_dh);\n                        goto code_r0x00402960;\n                    }\n                    if ((hWndChildAfter._3_1_ == 0xd) || (hWndChildAfter._3_1_ == 10)) {\n                        if ((hWndChildAfter._3_1_ == var_dh) || ((var_dh != 0xd && (var_dh != 10)))) {\n                            (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0xffffffff, 0, 1);\n                        }\n                        else {\n                            pcVar18[iVar12] = var_dh;\n                            iVar12 = iVar12 + 1;\n                        }\n                        break;\n                    }\n                    pcVar18[iVar12] = var_dh;\n                    iVar12 = iVar12 + 1;\n                    hWndChildAfter = hWndChildAfter & 0xffffff | var_dh << 0x18;\n                    if ((var_dh == 0) || (lpWideCharStr <= iVar12)) break;\n                }\n            }\n        }\n        pcVar18[iVar12] = '\\0';\n        bVar19 = iVar12 == 0;\n        goto code_r0x004015b0;\n    case 0x402687:\n        if (*pcVar15 != '\\0') {\n            uVar21 = fcn.00402aa9(2);\n            uVar13 = uVar21;\n            lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n            lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n            uVar22 = 0;\n            uVar11 = fcn.00405f17(pcVar15);\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar11, pcVar15, uVar13, uVar22, lpLastWriteTime);\n            pcVar15 = pcVar18;\n            goto joined_r0x004026af;\n        }\n        break;\n    case 0x4026ba:\n        iVar12 = fcn.00405f17(pcVar15);\n        if (iVar12 != 0) {\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar12);\n        }\n        break;\n    case 0x4026d4:\n        iVar12 = fcn.00405f17(pcVar18);\n        if ((iVar12 != 0) && (iVar12 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(iVar12, &lpFindFileData),  iVar12 != 0)) {\ncode_r0x0040272f:\n            ppiVar16 = &var_19ch;\n            goto code_r0x00402875;\n        }\n        goto code_r0x004026f0;\n    case 0x4026fe:\n        uVar13 = fcn.00402acb(2);\n        iVar12 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(uVar13, &lpFindFileData);\n        if (iVar12 != -1) {\n            fcn.00405efe(pcVar18, iVar12);\n            goto code_r0x0040272f;\n        }\n        *pcVar18 = '\\0';\ncode_r0x0040271a:\n        *pcVar15 = '\\0';\ncode_r0x0040271c:\n        var_4h = 1;\n        break;\n    case 0x40273c:\n        lpWideCharStr = -0x29a;\n        uVar13 = fcn.00402acb(0xfffffff0);\n        lpValueName = uVar13;\n        iVar12 = fcn.004059a5(uVar13);\n        if (iVar12 == 0) {\n            fcn.00402acb(0xffffffed);\n        }\n        fcn.00405b14(uVar13);\n        hWndChildAfter = fcn.00405b39(uVar13, 0x40000000, 2);\n        pcVar6 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        if (hWndChildAfter != 0xffffffff) {\n            hFile = *0x42f418;\n            iVar12 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x42f418);\n            if (iVar12 != 0) {\n                fcn.004031c4(0);\n                fcn.004031ae(iVar12, hFile);\n                arg_10h = (*pcVar6)(0x40, var_20h);\n                lpMultiByteStr._0_2_ = SUB42(arg_10h, 0);\n                lpMultiByteStr._2_2_ = arg_10h >> 0x10;\n                if (arg_10h != NULL) {\n                    fcn.00402f9c(dwFileAttributes, 0, arg_10h, var_20h);\n                    for (; *arg_10h != '\\0'; arg_10h = arg_10h + var_84h + 8) {\n                        var_84h = *arg_10h;\n                        dwFileAttributes = arg_10h[1] + iVar12;\n                        fcn.00405af4();\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)\n                              (CONCAT22(lpMultiByteStr._2_2_, lpMultiByteStr), dwFileAttributes);\n                }\n                fcn.00405be0(hWndChildAfter, iVar12, hFile);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar12);\n                lpWideCharStr = fcn.00402f9c(0xffffffff, hWndChildAfter, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hWndChildAfter);\n        }\n        if (lpWideCharStr < 0) {\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpValueName);\n            var_4h = 1;\n        }\ncode_r0x0040223d:\n        fcn.00401423();\n        break;\n    case 0x40283d:\n        uVar21 = fcn.00402aa9(0);\n        var_40h._0_2_ = uVar21;\n        var_40h._2_2_ = uVar21 >> 0x10;\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        if (*0x42f44c <= uVar21) goto code_r0x0040271c;\n        iVar12 = uVar21 * 0x418 + *0x42f448;\n        if (-1 < var_20h) {\n            pcVar15 = pcVar18;\n            if (var_20h == 0) {\n                ppiVar16 = iVar12 + 0x18;\n                goto code_r0x00402875;\n            }\n            goto code_r0x004028ff;\n        }\n        var_20h = -1 - var_20h;\n        if (var_20h == 0) {\n            fcn.00405fc2(iVar12 + 0x18, var_18h);\n            uVar21 = CONCAT44(lpValueName, dwFileAttributes);\n            *(iVar12 + 9) = *(iVar12 + 9) | 1;\n        }\n        else {\n            uVar21 = fcn.00402aa9(1);\n        }\n        dwFileAttributes = uVar21;\n        *(iVar12 + var_20h * 4) = dwFileAttributes;\n        if (lpLastWriteTime != 0) {\n            fcn.0040117d(CONCAT22(var_40h._2_2_, var_40h));\n            lpValueName = uVar21 >> 0x20;\n            dwFileAttributes = uVar21;\n        }\n        break;\n    case 0x4028cb:\n        uVar21 = fcn.00402aa9(0);\n        uVar9 = uVar21;\n        lpMultiByteStr._0_2_ = uVar21 >> 0x20;\n        lpMultiByteStr._2_2_ = uVar21 >> 0x30;\n        if (0x1f < uVar9) goto code_r0x0040271c;\n        if (lpLastWriteTime == 0) {\n            if (var_20h == 0) {\n                fcn.00405fc2(pcVar18, *(*0x42f414 + 0x94 + uVar9 * 4));\n            }\n            else {\n                *(*0x42f414 + 0x94 + uVar9 * 4) = dwFileAttributes;\n            }\n        }\n        else {\n            if (var_20h == 0) {\n                fcn.004012e2(0);\n                pcVar15 = pcVar18;\n                goto code_r0x004028ff;\n            }\n            fcn.00401299(uVar9);\n            fcn.004011ef(0, 0);\n        }\n        break;\n    case 0x402932:\n        (*_sym.imp.USER32.dll_SendMessageA)(hWndParent, 0xb, *0x42b870 & var_28h, 0);\n        if (var_28h != 0) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(hWndParent, 0, 0);\n        }\n        break;\n    case 0x402962:\n        goto code_r0x00402962;\n    }\ncode_r0x00402957:\n    *0x42f4a8 = *0x42f4a8 + var_4h;\ncode_r0x00402960:\n    var_28h = 0;\ncode_r0x00402962:\n    return var_28h;\n}\n",
        "token_count": 14080
    },
    "00402d63": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00402d63(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t dwBytes;\n    int32_t var_10h;\n    uint *hFile;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = NULL;\n    var_4h = 0;\n    *0x42f410 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x42f410 = *0x42f410 + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x436c00, 0x400);\n    puVar1 = fcn.00405b39(0x436c00, 0x80000000, 3);\n    if (puVar1 == 0xffffffff) {\n        *0x40a018 = puVar1;\n        return \"Error launching installer\";\n    }\n    *0x40a018 = puVar1;\n    hFile = puVar1;\n    fcn.00405fa0(0x435c00, 0x436c00);\n    uVar2 = fcn.0040597f(0x435c00);\n    fcn.00405fa0(0x437000, uVar2);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(puVar1, 0);\n    *0x42142c = uVar3;\n    for (; 0 < uVar3; uVar3 = uVar3 - uVar8) {\n        uVar4 = (-(*0x42f418 != 0) & 0x7e00) + 0x200;\n        uVar8 = uVar3;\n        if (uVar4 <= uVar3) {\n            uVar8 = uVar4;\n        }\n        puVar1 = 0x421430;\n        iVar5 = fcn.004031ae();\n        if (iVar5 == 0) {\n            fcn.00402cff(1);\n            goto code_r0x00402f3b;\n        }\n        if (*0x42f418 == 0) {\n            puVar1 = &var_28h;\n            fcn.00405af4();\n            if (((((var_28h & 0xfffffff0) == 0) && (var_24h == -0x21524111)) && (var_18h == 0x74736e49)) &&\n               ((var_1ch == 0x74666f73 && (var_20h == 0x6c6c754e)))) {\n                arg_8h = arg_8h | var_28h;\n                *0x42f4c0 = *0x42f4c0 | arg_8h & 2;\n                *0x42f418 = *0x415420;\n                if (uVar3 < var_10h) goto code_r0x00402f3b;\n                if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                var_4h = var_4h + 1;\n                uVar3 = var_10h - 4;\n                if (uVar3 < uVar8) {\n                    uVar8 = uVar3;\n                }\n            }\n        }\n        else if ((arg_8h & 2) == 0) {\n            fcn.00402cff(0);\n        }\n        if (uVar3 < *0x42142c) {\n            puVar6 = fcn.004063ef();\n            puVar1 = var_8h;\n            var_8h = puVar6;\n        }\n        *0x415420 = *0x415420 + uVar8;\n    }\n    fcn.00402cff(1, puVar1);\n    if (*0x42f418 != 0) {\n        if (var_4h != 0) {\n            fcn.004031c4(*0x415420);\n            iVar5 = fcn.004031ae(&arg_8h, 4);\n            if ((iVar5 == 0) || (var_8h != arg_8h)) goto code_r0x00402f3b;\n        }\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        fcn.004031c4(*0x42f418 + 0x1c);\n        iVar5 = fcn.00402f9c(0xffffffff, 0, puVar1, dwBytes);\n        if (iVar5 == dwBytes) {\n            *0x42f41c = *puVar1;\n            if ((var_28h & 1) != 0) {\n                *0x42f420 = *0x42f420 + 1;\n            }\n            piVar7 = puVar1 + 0x11;\n            iVar5 = 8;\n            *0x42f414 = puVar1;\n            do {\n                piVar7 = piVar7 + -2;\n                *piVar7 = *piVar7 + puVar1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            uVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 1);\n            puVar1[0xf] = uVar2;\n            fcn.00405af4(0x42f440, puVar1 + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x00402f3b:\n    return \n    \"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n    ;\n}\n",
        "token_count": 1403
    },
    "004036f4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004036f4(void)\n\n{\n    if (*0x40a018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a018);\n        *0x40a018 = -1;\n    }\n    fcn.00403739();\n    fcn.00405768(0x436800, 7);\n    return;\n}\n",
        "token_count": 84
    },
    "004037ce": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004037ce(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    \n    iVar7 = *0x42f414;\n    pcVar2 = fcn.00406338();\n    if (pcVar2 == NULL) {\n        *0x436000 = 0x30;\n        *0x436001 = 0x78;\n        *0x436002 = 0;\n        fcn.00405e87(0x80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x42a870, 0);\n        if (*0x42a870 == '\\0') {\n            fcn.00405e87(0x80000003, \".DEFAULT\\\\Control Panel\\\\International\", \"Locale\", 0x42a870, 0);\n        }\n        sub.KERNEL32.dll_lstrcatA();\n    }\n    else {\n        (*pcVar2)();\n        fcn.00405efe();\n    }\n    fcn.00403a93();\n    *0x42f4a0 = *0x42f41c & 0x20;\n    *0x42f4bc = 0x10000;\n    iVar3 = fcn.00405a26();\n    if ((iVar3 == 0) && (*(iVar7 + 0x48) != 0)) {\n        uVar6 = 0x42e3a0;\n        fcn.00405e87(*(iVar7 + 0x44), *(iVar7 + 0x48) + *0x42f458, *(iVar7 + 0x4c) + *0x42f458, 0x42e3a0, 0);\n        if (*0x42e3a0 != '\\0') {\n            if (*0x42e3a0 == '\\\"') {\n                uVar6 = 0x42e3a1;\n                puVar4 = fcn.00405963();\n                *puVar4 = 0;\n            }\n            iVar3 = sub.KERNEL32.dll_lstrlenA();\n            if (((uVar6 < iVar3 + -4 + uVar6) && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(),  iVar3 == 0)) &&\n               ((uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(),  uVar6 == 0xffffffff || ((uVar6 & 0x10) == 0))))\n            {\n                fcn.0040597f();\n            }\n            fcn.00405938();\n            fcn.00405fa0();\n        }\n    }\n    iVar3 = fcn.00405a26();\n    if (iVar3 == 0) {\n        uStack148 = 0x403914;\n        fcn.00405fc2(0x435400, *(iVar7 + 0x118));\n    }\n    uStack148 = 0x8040;\n    uStack152 = 0;\n    uStack156 = 0;\n    iVar9 = 1;\n    iVar8 = 0x67;\n    iVar3 = *0x42f400;\n    *0x42ebe8 = (*_sym.imp.USER32.dll_LoadImageA)(*0x42f400, 0x67, 1);\n    if (*(iVar7 + 0x50) == -1) {\ncode_r0x004039ba:\n        iVar7 = fcn.0040140b(0);\n        if (iVar7 == 0) {\n            fcn.00403a93();\n            if (*0x42f4c0 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x42a850, 5);\n                iVar7 = fcn.004062ca(\"RichEd20\");\n                if (iVar7 == 0) {\n                    fcn.004062ca(\"RichEd32\");\n                }\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoA;\n                iVar7 = (*_sym.imp.USER32.dll_GetClassInfoA)(0, \"RichEdit20A\", 0x42eba0);\n                if (iVar7 == 0) {\n                    (*pcVar2)(0, \"RichEdit\", 0x42eba0);\n                    *0x42ebc4 = \"RichEdit20A\";\n                    (*_sym.imp.USER32.dll_RegisterClassA)(0x42eba0);\n                }\n                uVar5 = (*_sym.imp.USER32.dll_DialogBoxParamA)(*0x42f400, *0x42ebe0 + 0x69U & 0xffff, 0, 0x403b6b, 0);\n                fcn.0040140b(5);\n                fcn.0040371e(1);\n                return uVar5;\n            }\n            iVar7 = fcn.00405199(0);\n            if (iVar7 == 0) {\n                fcn.0040140b(1);\n                goto code_r0x00403a89;\n            }\n            if (*0x42ebcc == 0) {\n                fcn.0040140b(2);\n            }\n        }\n        uVar5 = 2;\n    }\n    else {\n        iVar7 = 0x42eba0;\n        *0x42eba4 = fcn.00401000;\n        *0x42ebb0 = *0x42f400;\n        *0x42ebc4 = 0x40a1f4;\n        *0x42ebb4 = *0x42ebe8;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassA)(0x42eba0);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &stack0xffffff64, 0);\n            *0x42a850 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                                  (0x80, 0x40a1f4, 0, 0x80000000, iVar7, iVar3, iVar8 - iVar7, iVar9 - iVar3, 0, 0, \n                                   *0x42f400, 0);\n            goto code_r0x004039ba;\n        }\ncode_r0x00403a89:\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1457
    },
    "00404a44": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a44(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    uVar2 = arg_8h;\n    var_4h = (*pcVar1)(arg_8h, 0x408);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_10h = *0x42f448;\n    var_14h = *0x42f414 + 0x94;\n    if (arg_ch == 0x110) {\n        var_1ch = 0;\n        var_ch = 2;\n        *0x42f480 = arg_8h;\n        *0x42a868 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x42f44c << 2);\n        uVar2 = (*_sym.imp.USER32.dll_LoadBitmapA)(*0x42f400, 0x6e);\n        *0x42a85c = 0xffffffff;\n        *0x42a864 = (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffffc, fcn.0040503b);\n        *0x42a854 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*0x42a854, uVar2, 0xff00ff);\n        (*pcVar1)(var_4h, 0x1109, 2, *0x42a854);\n        iVar3 = (*pcVar1)(var_4h, 0x111c, 0, 0);\n        if (iVar3 < 0x10) {\n            (*pcVar1)(var_4h, 0x111b, 0x10, 0);\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(uVar2);\n        iVar3 = 0;\n        do {\n            iVar7 = *(var_14h + iVar3 * 4);\n            if (iVar7 != 0) {\n                if (iVar3 != 0x20) {\n                    var_ch = 0;\n                }\n                uVar2 = fcn.00405fc2(0, iVar7);\n                uVar2 = (*pcVar1)(var_8h, 0x143, 0, uVar2);\n                (*pcVar1)(var_8h, 0x151, uVar2, iVar3);\n            }\n            uVar5 = var_ch;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x21);\n        fcn.0040403f(arg_8h, 0x15, *(arg_14h + 0x30 + var_ch * 4));\n        fcn.0040403f(arg_8h, 0x16, *(arg_14h + 0x34 + uVar5 * 4));\n        iVar3 = 0;\n        uVar2 = 0;\n        if (*0x42f44c < 1) {\ncode_r0x00404c6f:\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(var_4h, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffff0, uVar5 & 0xfffffffb);\n        }\n        else {\n            var_18h = var_10h + 8;\n            do {\n                puVar8 = var_18h + 4;\n                if (*puVar8 != '\\0') {\n                    uVar5 = *var_18h;\n                    var_40h = uVar5 & 0x20;\n                    var_4ch = 0xffff0002;\n                    var_48h = 0xd;\n                    var_3ch = 0x20;\n                    var_50h = uVar2;\n                    var_38h = puVar8;\n                    var_24h = iVar3;\n                    if ((uVar5 & 2) == 0) {\n                        if ((uVar5 & 4) == 0) {\n                            uVar4 = (*pcVar1)(var_4h, 0x1100, 0, &var_50h);\n                            *(*0x42a868 + iVar3 * 4) = uVar4;\n                        }\n                        else {\n                            uVar2 = (*pcVar1)(var_4h, 0x110a, 3, uVar2);\n                        }\n                    }\n                    else {\n                        var_48h = 0x4d;\n                        var_28h = 1;\n                        uVar2 = (*pcVar1)(var_4h, 0x1100, 0, &var_50h);\n                        var_1ch = 1;\n                        *(*0x42a868 + iVar3 * 4) = uVar2;\n                        uVar2 = *(*0x42a868 + iVar3 * 4);\n                    }\n                }\n                iVar3 = iVar3 + 1;\n                var_18h = var_18h + 0x106;\n            } while (iVar3 < *0x42f44c);\n            if (var_1ch == 0) goto code_r0x00404c6f;\n        }\n        if (var_ch == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_8h, 5);\n            fcn.00404074(var_8h);\n            goto code_r0x00405026;\n        }\n        uVar2 = var_4h;\n        fcn.00404074(var_4h);\n    }\n    if (arg_ch == 0x405) {\n        arg_10h = 0;\n        arg_ch = 0x40f;\n        arg_14h = 1;\n    }\n    if (((arg_ch == 0x4e) || (arg_ch == 0x413)) && ((var_ch = arg_14h,  arg_ch == 0x413 || (*(arg_14h + 4) == 0x408))))\n    {\n        if (((*0x42f41c & 0x200) == 0) &&\n           (((arg_ch == 0x413 || (*(arg_14h + 8) == -2)) && (iVar3 = fcn.00404992(var_4h, arg_ch != 0x413),  -1 < iVar3)\n            ))) {\n            puVar8 = iVar3 * 0x418 + 8 + var_10h;\n            uVar5 = *puVar8;\n            if ((uVar5 & 0x10) == 0) {\n                if ((uVar5 & 0x40) == 0) {\n                    uVar5 = uVar5 ^ 1;\n                }\n                else {\n                    uVar6 = uVar5 ^ 0x80;\n                    if (uVar6 < '\\0') {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xff | 1;\n                    }\n                    else {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xfe;\n                    }\n                }\n                *puVar8 = uVar5;\n                fcn.0040117d(iVar3);\n                arg_10h = iVar3 + 1;\n                arg_14h = ~*0x42f41c >> 8 & 1;\n                arg_ch = 0x40f;\n            }\n        }\n        if (var_ch != 0) {\n            if (*(var_ch + 8) == -0x192) {\n                (*pcVar1)(var_4h, 0x419, 0, *(var_ch + 0x5c));\n            }\n            if (*(var_ch + 8) == -0x196) {\n                if (*(var_ch + 0xc) == 2) {\n                    puVar8 = *(var_ch + 0x5c) * 0x418 + 8 + var_10h;\n                    *puVar8 = *puVar8 | 0x20;\n                }\n                else {\n                    puVar8 = *(var_ch + 0x5c) * 0x418 + 8 + var_10h;\n                    *puVar8 = *puVar8 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) || (iVar3 = (*pcVar1)(var_8h, 0x147, 0, 0),  iVar3 == -1))\n        goto code_r0x00405026;\n        iVar3 = (*pcVar1)(var_8h, 0x150, iVar3, 0);\n        if ((iVar3 == -1) || (*(var_14h + iVar3 * 4) == 0)) {\n            iVar3 = 0x20;\n        }\n        fcn.00401299(iVar3);\n        (*pcVar1)(arg_8h, 0x420, 0, iVar3);\n        arg_10h = -1;\n        arg_14h = 0;\n        arg_ch = 0x40f;\n    }\n    if (arg_ch == 0x200) {\n        (*pcVar1)(var_4h, 0x200, 0, 0);\n    }\n    if (arg_ch == 0x40b) {\n        if (*0x42a854 != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*0x42a854);\n        }\n        if (*0x42a868 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x42a868);\n        }\n        *0x42a854 = 0;\n        *0x42a868 = 0;\n        *0x42f480 = 0;\n    }\n    if (arg_ch == 0x40f) {\n        fcn.004011ef(0, 0);\n        if (arg_10h != 0) {\n            iVar3 = arg_10h;\n            if (arg_10h != -1) {\n                iVar3 = arg_10h + -1;\n            }\n            fcn.00404a12(8, iVar3);\n        }\n        if (arg_14h != 0) {\n            arg_14h = fcn.004012e2(*0x42a868);\n            fcn.00401299(arg_14h);\n            iVar3 = 0;\n            iVar7 = 0;\n            if (0 < arg_14h) {\n                do {\n                    if (*(var_14h + iVar3 * 4) != 0) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < arg_14h);\n            }\n            (*pcVar1)(var_8h, 0x14e, iVar7, 0);\n            arg_ch = 0x420;\n        }\n        fcn.004011ef(0, 0);\n        var_1ch = *0x42a868;\n        var_38h = 0xf030;\n        var_10h = 0;\n        if (0 < *0x42f44c) {\n            puVar8 = *0x42f448 + 8;\n            do {\n                uVar5 = *(var_1ch + var_10h * 4);\n                if (uVar5 != 0) {\n                    uVar6 = *puVar8;\n                    var_44h = 8;\n                    if ((uVar6 & 0x100) != 0) {\n                        var_34h = puVar8 + 4;\n                        var_44h = 9;\n                        *(puVar8 + 1) = *(puVar8 + 1) & 0xfe;\n                    }\n                    if ((uVar6 & 0x40) == 0) {\n                        iVar3 = (uVar6 & 1) + 1;\n                        if ((uVar6 & 0x10) != 0) {\n                            iVar3 = (uVar6 & 1) + 4;\n                        }\n                    }\n                    else {\n                        iVar3 = 3;\n                    }\n                    var_3ch = (iVar3 << 0xb | uVar6 & 8) * 2 | uVar6 & 0x20;\n                    var_40h = uVar5;\n                    (*pcVar1)(var_4h, 0x1102, (uVar6 >> 5 & 1U) + 1, uVar5);\n                    (*pcVar1)(var_4h, 0x110d, 0, &var_44h);\n                }\n                var_10h = var_10h + 1;\n                puVar8 = puVar8 + 0x106;\n            } while (var_10h < *0x42f44c);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(var_4h, 0, 1);\n        if (*(*0x42ebdc + 0x10) != 0) {\n            fcn.00404965(5);\n            uVar2 = 0x3ff;\n            fcn.0040494d();\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x42f41c & 0x100) != 0)) {\n        iVar3 = (arg_14h == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(var_4h, iVar3, uVar2);\n        uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe, iVar3);\n        (*pcVar1)(uVar2);\n    }\ncode_r0x00405026:\n    fcn.004040a6(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 3394
    },
    "00405205": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405205(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uchar *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    iVar5 = arg_ch;\n    pcVar2 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar8 = 0;\n    var_4h = *0x42ebe4;\n    if (arg_ch == 0x110) {\n        var_2ch = 0xffffffff;\n        var_20h = 0xffffffff;\n        var_34h = 2;\n        var_30h = 0;\n        var_28h = NULL;\n        var_24h = 0;\n        var_1ch = 0;\n        uStack28 = 0;\n        arg_10h = *(*0x42f414 + 0x5c);\n        arg_ch = *(*0x42f414 + 0x60);\n        *0x42ebd0 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x42ebc8 = (*pcVar2)(arg_8h, 0x3ee);\n        *0x42ebe4 = (*pcVar2)(arg_8h, 0x3f8);\n        var_4h = *0x42ebe4;\n        fcn.00404074(*0x42ebd0);\n        *0x42ebd4 = fcn.00404965(4);\n        *0x42ebec = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(var_4h, &var_14h);\n        var_2ch = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        var_2ch = var_ch - var_2ch;\n        (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x101b, 0, &var_34h);\n        (*pcVar1)(var_4h, 0x1036, 0x4000, 0x4000);\n        if (-1 < arg_10h) {\n            (*pcVar1)(var_4h, 0x1001, 0, arg_10h);\n            (*pcVar1)(var_4h, 0x1026, 0, arg_10h);\n        }\n        if (-1 < arg_ch) {\n            (*pcVar1)(var_4h, 0x1024, 0, arg_ch);\n        }\n        fcn.0040403f(arg_8h, 0x1b, *(arg_14h + 0x30));\n        if ((*0x42f41c & 3) != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x42ebd0, 0);\n            if ((*0x42f41c & 2) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(var_4h, 8);\n            }\n            else {\n                *0x42ebd0 = 0;\n            }\n            fcn.00404074(*0x42ebc8);\n        }\n        uVar3 = (*pcVar2)(arg_8h, 0x3ec);\n        (*pcVar1)(uVar3, 0x401, 0, 0x75300000);\n        if ((*0x42f41c & 4) != 0) {\n            (*pcVar1)(uVar3, 0x409, 0, arg_ch);\n            (*pcVar1)(uVar3, 0x2001, 0, arg_10h);\n        }\ncode_r0x00405586:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec, 0, &arg_ch);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00405199, uVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        }\n        pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n        if (iVar5 == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x42ebd0, 0);\n                (*pcVar2)(var_4h, 8);\n                fcn.00404074(var_4h);\n                goto code_r0x0040540e;\n            }\n        }\n        else {\ncode_r0x0040540e:\n            if (iVar5 == 0x404) {\n                if (*0x42ebcc != 0) {\n                    *0x429c40 = 2;\n                    fcn.00404018();\n                    goto code_r0x0040542f;\n                }\n                (*pcVar2)(*0x42f408, 8);\n                if (*0x42f4ac == 0) {\n                    fcn.004050c7(*(*0x42a048 + 0x34), 0);\n                }\n                fcn.00404018(1);\n            }\n            if ((iVar5 == 0x7b) && (arg_10h == var_4h)) {\n                arg_10h = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n                if (0 < arg_10h) {\n                    uVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    uVar4 = fcn.00405fc2(0, 0xffffffe1);\n                    (*_sym.imp.USER32.dll_AppendMenuA)(uVar3, 0, 1, uVar4);\n                    iVar5 = arg_14h;\n                    iVar6 = arg_14h >> 0x10;\n                    if (arg_14h == -1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(var_4h, &var_14h);\n                        iVar5 = var_14h;\n                        iVar6 = var_10h;\n                    }\n                    iVar5 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar3, 0x180, iVar5, iVar6, 0, arg_8h, 0);\n                    if (iVar5 == 1) {\n                        iVar5 = 1;\n                        var_34h = 0;\n                        var_28h = 0x42a870;\n                        var_24h = 0x1000;\n                        arg_8h = arg_10h;\n                        do {\n                            arg_8h = arg_8h + -1;\n                            iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, arg_8h, &var_3ch);\n                            iVar5 = iVar5 + 2 + iVar6;\n                        } while (arg_8h != 0);\n                        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                        (*_sym.imp.USER32.dll_EmptyClipboard)();\n                        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar5);\n                        puVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                        do {\n                            var_28h = puVar7;\n                            iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, iVar8, &var_3ch);\n                            puVar7 = puVar7 + iVar5;\n                            *puVar7 = 0xd;\n                            puVar7[1] = 10;\n                            puVar7 = puVar7 + 2;\n                            iVar8 = iVar8 + 1;\n                        } while (iVar8 < arg_10h);\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n                        (*_sym.imp.USER32.dll_SetClipboardData)(1, uVar3);\n                        (*_sym.imp.USER32.dll_CloseClipboard)();\n                    }\n                }\n                goto code_r0x00405586;\n            }\n        }\ncode_r0x0040542f:\n        uVar3 = fcn.004040a6(iVar5, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 2012
    },
    "00405720": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405720(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t unaff_retaddr;\n    \n    iVar1 = fcn.00405b14(param_1);\n    if (iVar1 != -1) {\n        if ((param_1 & 1) == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)();\n        }\n        if (iVar2 != 0) {\n            return 1;\n        }\n        if ((unaff_retaddr & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(param_1, iVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 187
    },
    "00405768": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405768(char *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lpFindFileData;\n    uint var_120h;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t hFindFile;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch & 4;\n    var_ch = fcn.00405a26(arg_8h);\n    if ((arg_ch & 8) == 0) {\n        uVar1 = arg_ch & 1;\n        if ((uVar1 == 0) || ((var_ch != 0 && ((arg_ch & 2) != 0)))) {\n            fcn.00405fa0(0x42b878, arg_8h);\n            if (uVar1 == 0) {\n                fcn.0040597f(arg_8h);\n            }\n            else {\n                sub.KERNEL32.dll_lstrcatA(0x42b878, \"\\\\*.*\");\n            }\n            if ((*arg_8h != '\\0') || (*0x42b878 == '\\\\')) {\n                sub.KERNEL32.dll_lstrcatA(arg_8h, 0x40a014);\n            }\n            iVar2 = sub.KERNEL32.dll_lstrlenA(arg_8h);\n            hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(0x42b878, &lpFindFileData);\n            if (hFindFile != -1) {\n                do {\n                    puVar5 = &var_120h;\n                    pcVar3 = fcn.00405963(&var_120h, 0x3f);\n                    if ((*pcVar3 != '\\0') && (var_1ch != '\\0')) {\n                        puVar5 = &var_1ch;\n                    }\n                    if ((*puVar5 != '.') ||\n                       ((*(puVar5 + 1) != '\\0' && ((*(puVar5 + 1) != '.' || (*(puVar5 + 2) != '\\0')))))) {\n                        fcn.00405fa0(arg_8h + iVar2, puVar5);\n                        if ((lpFindFileData & 0x10) == 0) {\n                            iVar4 = fcn.00405720(arg_8h, var_4h);\n                            if (iVar4 == 0) {\n                                if (var_4h == 0) {\n                                    *0x42f4a8 = *0x42f4a8 + 1;\n                                }\n                                else {\n                                    fcn.004050c7(0xfffffff1, arg_8h);\n                                    fcn.00405d7f(arg_8h, 0);\n                                }\n                            }\n                            else {\n                                fcn.004050c7(0xfffffff2, arg_8h);\n                            }\n                        }\n                        else if ((arg_ch & 3) == 3) {\n                            fcn.00405768(arg_8h, arg_ch);\n                        }\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(hFindFile, &lpFindFileData);\n                } while (iVar4 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n            }\n            if (uVar1 != 0) {\n                (arg_8h + iVar2)[-1] = '\\0';\n            }\n        }\n        if (uVar1 != 0) {\n            if (var_ch != 0) {\n                iVar2 = fcn.004062a3(arg_8h);\n                if (iVar2 == 0) {\n                    return;\n                }\n                fcn.00405938(arg_8h);\n                iVar2 = fcn.00405720(arg_8h, var_4h | 1);\n                if (iVar2 != 0) {\n                    fcn.004050c7(0xffffffe5, arg_8h);\n                    return;\n                }\n                if (var_4h != 0) {\n                    fcn.004050c7(0xfffffff1, arg_8h);\n                    fcn.00405d7f(arg_8h, 0);\n                    return;\n                }\n            }\n            *0x42f4a8 = *0x42f4a8 + 1;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg_8h);\n        *0x42f4a8 = *0x42f4a8 + (iVar2 == 0);\n    }\n    return;\n}\n",
        "token_count": 1047
    },
    "00405a26": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00405a26(uint param_1)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    \n    fcn.00405fa0(0x42bc78, param_1);\n    pcVar1 = fcn.004059d1(0x42bc78);\n    if ((pcVar1 != NULL) &&\n       ((pcVar5 = pcVar1,  fcn.0040620a(pcVar1),  (*0x42f41c & 0x80) == 0 || ((*pcVar1 != '\\0' && (*pcVar1 != '\\\\'))))))\n    {\n        while( true ) {\n            uVar4 = 0x42bc78;\n            iVar3 = sub.KERNEL32.dll_lstrlenA(0x42bc78);\n            if (iVar3 <= pcVar1 + -0x42bc78) {\n                fcn.00405938(0x42bc78, uVar4, pcVar5);\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0x42bc78);\n                return iVar3 != -1;\n            }\n            puVar2 = fcn.004062a3(0x42bc78);\n            if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) break;\n            pcVar5 = 0x42bc78;\n            fcn.0040597f();\n        }\n    }\n    return false;\n}\n",
        "token_count": 344
    },
    "00405b14": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00405b14(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "00405c0f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405c0f(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *hFile;\n    uchar *arg_10h;\n    int32_t lpBuffer;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetShortPathNameA;\n    *0x42c600 = 0x4c554e;\n    if (param_2 != 0) {\n        uVar2 = fcn.00405b39(param_2, 0, 1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n        iVar3 = (*pcVar1)(param_2, 0x42c600, 0x400);\n        if (iVar3 == 0) {\n            return;\n        }\n        if (0x400 < iVar3) {\n            return;\n        }\n    }\n    iVar3 = (*pcVar1)(param_1, 0x42ca00, 0x400);\n    if ((iVar3 != 0) && (iVar3 < 0x401)) {\n        iVar3 = (*_sym.imp.USER32.dll_wsprintfA)(0x42c200, \"%s=%s\\r\\n\", 0x42c600, 0x42ca00);\n        fcn.00405fc2(0x42ca00, *(*0x42f414 + 0x128));\n        hFile = fcn.00405b39(0x42ca00, 0xc0000000, 4);\n        if (hFile != 0xffffffff) {\n            arg_10h = (*_sym.imp.KERNEL32.dll_GetFileSize)(hFile, 0);\n            lpBuffer = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, arg_10h + iVar3 + 10);\n            if ((lpBuffer != 0) && (puVar7 = arg_10h,  iVar4 = fcn.00405bb1(hFile, lpBuffer, arg_10h),  iVar4 != 0)) {\n                iVar4 = fcn.00405a9e(lpBuffer, \"[Rename]\\r\\n\");\n                if (iVar4 == 0) {\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(arg_10h + lpBuffer, \"[Rename]\\r\\n\");\n                    arg_10h = arg_10h + 10;\n                    puVar7 = arg_10h;\n                }\n                else {\n                    hFile = puVar7;\n                    puVar5 = fcn.00405a9e(iVar4 + 10, 0x40a3b8);\n                    puVar7 = arg_10h;\n                    if (puVar5 != NULL) {\n                        puVar7 = arg_10h + lpBuffer;\n                        puVar6 = puVar7 + iVar3;\n                        for (; puVar5 < puVar7; puVar7 = puVar7 + -1) {\n                            *puVar6 = *puVar7;\n                            puVar6 = puVar6 + -1;\n                        }\n                        puVar7 = puVar5 + (1 - lpBuffer);\n                    }\n                }\n                fcn.00405af4(puVar7 + lpBuffer, 0x42c200, iVar3);\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 0);\n                fcn.00405be0(hFile, lpBuffer, arg_10h + iVar3);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(lpBuffer);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hFile);\n        }\n    }\n    return;\n}\n",
        "token_count": 839
    },
    "004062a3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004062a3(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(param_1, 0x42c0c0);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        uVar2 = 0x42c0c0;\n    }\n    return uVar2;\n}\n",
        "token_count": 120
    },
    "0040117d": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid fcn.0040117d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = *(param_1 * 0x418 + 8 + *0x42f448);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x42f44c) {\n            puVar3 = uVar4 * 0x418 + 8 + *0x42f448;\n            iVar5 = 0;\n            do {\n                uVar2 = *puVar3;\n                if ((uVar2 & 2) == 0) {\n                    if ((uVar2 & 4) == 0) {\n                        iVar6 = iVar5;\n                        if ((uVar2 & 0x10) == 0) {\n                            *puVar3 = (uVar2 ^ uVar1) & 1 ^ uVar2;\n                        }\n                    }\n                    else {\n                        iVar6 = iVar5 + -1;\n                        if (iVar5 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x106;\n                iVar5 = iVar6;\n            } while (uVar4 < *0x42f44c);\n        }\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "004012e2": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012e2(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *0x42f414 + 0x94;\n    do {\n        uVar1 = 0;\n        if (*var_8h != 0) {\n            bVar3 = *0x42f44c == 0;\n            if (*0x42f44c != 0) {\n                puVar2 = *0x42f448 + 8;\n                do {\n                    if (((*puVar2 & 6) == 0) &&\n                       (((arg_8h == 0 || (*(arg_8h + uVar1 * 4) != 0)) &&\n                        ((puVar2[-1] & 1 << (var_4h & 0x1f)) != (*puVar2 & 1) << (var_4h & 0x1f))))) break;\n                    uVar1 = uVar1 + 1;\n                    puVar2 = puVar2 + 0x106;\n                } while (uVar1 < *0x42f44c);\n                bVar3 = uVar1 == *0x42f44c;\n            }\n            if (bVar3) {\n                return var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        if (0x1f < var_4h) {\n            return var_4h;\n        }\n    } while( true );\n}\n",
        "token_count": 394
    },
    "00402bcd": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402bcd(uint arg_8h, uint lpSubKey, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10ch;\n    uint hKey;\n    \n    iVar1 = fcn.00405e26(arg_8h, lpSubKey, CONCAT31((arg_10h & 0x300) >> 8, 8), &hKey);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegEnumKeyA;\n    if (iVar1 == 0) {\n        do {\n            iVar1 = (*pcVar2)(hKey, 0, &var_10ch, 0x105);\n            if (iVar1 != 0) break;\n            if ((arg_10h & 1) != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n                return 0x3eb;\n            }\n            iVar1 = fcn.00402bcd(hKey, &var_10ch, arg_10h);\n        } while (iVar1 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        pcVar2 = fcn.00406338(3);\n        if (pcVar2 == NULL) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(arg_8h, lpSubKey);\n        }\n        else {\n            iVar1 = (*pcVar2)(arg_8h, lpSubKey, arg_10h & 0x300, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 362
    },
    "004041aa": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004041aa(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    char *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    pcVar3 = _sym.imp.USER32.dll_GetDlgItem;\n    pcVar5 = _sym.imp.USER32.dll_SendMessageA;\n    if (arg_ch == 0x110) {\n        iVar7 = *(arg_14h + 0x30);\n        if (iVar7 < 0) {\n            iVar7 = *(*0x42ebdc - (iVar7 * 4 + 4));\n        }\n        cVar2 = *(iVar7 + *0x42f458);\n        var_8h = 0;\n        pcVar10 = iVar7 + *0x42f458 + 1;\n        var_4h = fcn.00404175;\n        uVar9 = ~*(arg_14h + 0x14) >> 5 & 1 | *(arg_14h + 0x14) & 1;\n        var_ch = pcVar10;\n        fcn.0040403f(arg_8h, 0x22, *(arg_14h + 0x34));\n        fcn.0040403f(arg_8h, 0x23, *(arg_14h + 0x38));\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, (uVar9 == 0) + 0x40a, 1);\n        fcn.00404061(uVar9);\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.00404074(uVar6);\n        pcVar5 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar6, 0x45b, 1, 0);\n        iVar7 = *(*0x42f414 + 0x68);\n        if (iVar7 < 0) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar7);\n        }\n        (*pcVar5)(uVar6, 0x443, 0, iVar7);\n        (*pcVar5)(uVar6, 0x445, 0, 0x4010000);\n        uVar8 = sub.KERNEL32.dll_lstrlenA(pcVar10);\n        (*pcVar5)(uVar6, 0x435, 0, uVar8);\n        *0x42983c = 0;\n        (*pcVar5)(uVar6, 0x449, cVar2, &var_ch);\n        *0x42983c = 0;\n        return 0;\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h >> 0x10 != 0) || (*0x42983c != 0)) || (puVar1 = *0x42a048 + 0x14,  (*puVar1 & 0x20) == 0))\n        goto code_r0x00404417;\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a, 0xf0, 0, 0);\n        uVar9 = (*pcVar5)(uVar6);\n        *puVar1 = *puVar1 & 0xfffffffe | uVar9 & 1;\n        fcn.00404061(uVar9 & 1);\n        fcn.0040442a();\n    }\n    if (arg_ch == 0x4e) {\n        uVar6 = (*pcVar3)(arg_8h, 1000);\n        if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n            var_8h = *(arg_14h + 0x1c);\n            var_ch = *(arg_14h + 0x18);\n            var_4h = 0x42e3a0;\n            if (var_8h - var_ch < 0x800) {\n                (*pcVar5)(uVar6, 1099, 0, &var_ch);\n                pcVar4 = _sym.imp.USER32.dll_LoadCursorA;\n                uVar6 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n                pcVar3 = _sym.imp.USER32.dll_SetCursor;\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n                uVar8 = 1;\n                uVar6 = var_4h;\n                fcn.0040444e(arg_8h, var_4h);\n                uVar6 = (*pcVar4)(0, 0x7f00, arg_8h, uVar6, uVar8);\n                (*pcVar3)(uVar6);\n            }\n        }\n        if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n            if (*(arg_14h + 0x10) == 0xd) {\n                (*pcVar5)(*0x42f408, 0x111, 1, 0);\n            }\n            if (*(arg_14h + 0x10) == 0x1b) {\n                (*pcVar5)(*0x42f408, 0x10, 0, 0);\n            }\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x40b) {\n        *0x42983c = *0x42983c + 1;\n    }\ncode_r0x00404417:\n    uVar6 = fcn.004040a6(arg_ch, arg_10h, arg_14h);\n    return uVar6;\n}\n",
        "token_count": 1385
    },
    "004050c7": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050c7(uint arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *0x42ebe4;\n    if (*0x42ebe4 != 0) {\n        var_8h = *0x42f4d4;\n        uVar4 = *0x42f4d4 & 1;\n        if (uVar4 == 0) {\n            fcn.00405fc2(0x42a050, arg_8h);\n        }\n        iVar2 = sub.KERNEL32.dll_lstrlenA(0x42a050);\n        if (lpString2 != 0) {\n            iVar3 = sub.KERNEL32.dll_lstrlenA(lpString2);\n            if (0x7ff < iVar3 + iVar2) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatA(0x42a050, lpString2);\n        }\n        if ((var_8h & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextA)(*0x42ebc8, 0x42a050);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if ((var_8h & 2) == 0) {\n            var_1ch = 0x42a050;\n            var_30h = 1;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n            var_2ch = var_2ch - uVar4;\n            var_28h = 0;\n            (*pcVar1)(var_4h, 0x1007 - uVar4, 0, &var_30h);\n            (*pcVar1)(var_4h, 0x1013, var_2ch, 0);\n        }\n        if (uVar4 != 0) {\n            *(iVar2 + 0x42a050) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 532
    },
    "004063ef": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t fcn.004063ef(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x42ce04 == 0) {\n        uVar2 = 0;\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                uVar1 = uVar1 >> 1 ^ -((uVar1 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar2 * 4 + 0x42ce00) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            param_1 = param_1 >> 8 ^ *((param_1 & 0xff ^ *param_2) * 4 + 0x42ce00);\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return ~param_1;\n}\n",
        "token_count": 307
    },
    "0040645d": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040645d(uint8_t **arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **ppuVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t **ppuVar7;\n    char cVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uint uVar11;\n    uint *puVar12;\n    uint8_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint8_t *var_40h;\n    uint8_t *var_38h;\n    uint8_t *var_34h;\n    uint8_t **var_30h;\n    uint8_t *var_2ch;\n    uint8_t **var_20h;\n    uint8_t *var_1ch;\n    uint8_t *var_18h;\n    uint8_t *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint8_t **var_8h;\n    int32_t var_4h;\n    \n    var_38h = *arg_8h;\n    ppuVar1 = arg_8h + 4;\n    var_34h = arg_8h[1];\n    var_30h = arg_8h[0x26ee];\n    puVar10 = arg_8h[0x14a];\n    var_40h = arg_8h[0x14b];\n    if (var_30h < arg_8h[0x26ed]) {\n        var_2ch = arg_8h[0x26ed] + (-1 - var_30h);\n    }\n    else {\n        var_2ch = arg_8h[0x26ec] + -var_30h;\n    }\ncode_r0x00406e71:\n    while (*ppuVar1 < 0x10) {\n    // switch table (16 cases) at 0x406eac\n        switch(*(*ppuVar1 * 4 + 0x406eac)) {\n        case 0x4064d5:\n            for (; puVar10 < 0x3; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406e81;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar10 = puVar10 + -3;\n            puVar5 = var_40h >> 3;\n            uVar14 = (var_40h & 7) >> 1;\n            arg_8h[0x149] = (-((var_40h & 1) != 0) & 7) + 8;\n            if (uVar14 == 0) {\n                *ppuVar1 = 0x9;\n                var_40h = puVar5 >> (puVar10 & 7);\n                puVar10 = puVar10 + -(puVar10 & 7);\n            }\n            else {\n                var_40h = puVar5;\n                if (uVar14 == 1) {\n                    if (*0x42e388 == '\\0') {\n                        var_8h = NULL;\n                        piVar4 = 0x42d208;\n                        do {\n                            cVar8 = '\\b';\n                            if (0x42d444 < piVar4) {\n                                if (piVar4 < 0x42d608) {\n                                    cVar8 = '\\t';\n                                }\n                                else if (piVar4 < 0x42d668) {\n                                    cVar8 = '\\a';\n                                }\n                            }\n                            *piVar4 = cVar8;\n                            piVar4 = piVar4 + 1;\n                        } while (piVar4 < 0x42d688);\n                        fcn.00406f54(0x42d208, 0x120, 0x101, 0x408414, 0x408454, 0x42d204, 0x40a40c, 0x42db08, &var_8h);\n                        puVar12 = 0x42d208;\n                        for (iVar6 = 0x1e; iVar6 != 0; iVar6 = iVar6 + -1) {\n                            *puVar12 = 5;\n                            puVar12 = puVar12 + 1;\n                        }\n                        fcn.00406f54(0x42d208, 0x1e, 0, 0x408494, 0x4084d0, 0x42d200, 0x40a410, 0x42db08, &var_8h);\n                        *0x42e388 = *0x42e388 + '\\x01';\n                    }\n                    *(arg_8h + 8) = *0x40a40c;\n                    *(arg_8h + 0x21) = *0x40a410;\n                    arg_8h[9] = *0x42d204;\n                    arg_8h[10] = *0x42d200;\n                    goto code_r0x0040662d;\n                }\n                if (uVar14 != 2) goto code_r0x0040650d;\n                *ppuVar1 = 0xb;\n            }\n            break;\n        case 0x406514:\n            goto code_r0x00406514;\n        case 0x40666a:\n            for (; puVar10 < 0x20; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406e81;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar10 = NULL;\n            puVar5 = var_40h & 0xffff;\n            var_40h = NULL;\n            arg_8h[5] = puVar5;\n            if (puVar5 == NULL) goto code_r0x00406770;\n            puVar5 = 0xa;\n            goto code_r0x00406776;\n        case 0x40668f:\n            if (var_34h == NULL) {\ncode_r0x00406e81:\n                uVar11 = 0;\n                arg_8h[0x14b] = var_40h;\n                arg_8h[0x14a] = puVar10;\n                arg_8h[1] = NULL;\n                goto code_r0x00406535;\n            }\n            if (var_2ch == NULL) {\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h[0x26ed];\n                    ppuVar7 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        if (ppuVar7 < ppuVar3) {\n                            var_2ch = ppuVar3 + (-1 - ppuVar7);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar7;\n                        }\n                        var_30h = ppuVar7;\n                        if (var_2ch != NULL) goto code_r0x0040673c;\n                    }\n                }\n                arg_8h[0x26ee] = var_30h;\n                fcn.00406eec(arg_8h);\n                var_30h = arg_8h[0x26ee];\n                ppuVar7 = arg_8h[0x26ed];\n                if (var_30h < ppuVar7) {\n                    var_2ch = ppuVar7 + (-1 - var_30h);\n                }\n                else {\n                    var_2ch = arg_8h[0x26ec] + -var_30h;\n                }\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        var_30h = ppuVar3;\n                        if (ppuVar3 < ppuVar7) {\n                            var_2ch = ppuVar7 + (-1 - ppuVar3);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar3;\n                        }\n                    }\n                }\n                if (var_2ch == NULL) goto code_r0x00406e9d;\n            }\ncode_r0x0040673c:\n            puVar5 = var_2ch;\n            if (var_34h <= var_2ch) {\n                puVar5 = var_34h;\n            }\n            puVar9 = arg_8h[5];\n            if (puVar5 <= arg_8h[5]) {\n                puVar9 = puVar5;\n            }\n            fcn.00405af4();\n            var_38h = var_38h + puVar9;\n            var_34h = var_34h + -puVar9;\n            var_30h = var_30h + puVar9;\n            var_2ch = var_2ch + -puVar9;\n            ppuVar7 = arg_8h + 5;\n            *ppuVar7 = *ppuVar7 + -puVar9;\n            if (*ppuVar7 == NULL) {\ncode_r0x00406770:\n                puVar5 = arg_8h[0x149];\ncode_r0x00406776:\n                *ppuVar1 = puVar5;\n            }\n            break;\n        case 0x40679d:\n            for (; puVar10 < 0xe; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406e81;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[5] = var_40h & 0x3fff;\n            if (((var_40h & 0x3fff & 0x1f) < 0x1e) && ((var_40h & 0x3e0) < 0x3a1)) {\n                var_40h = var_40h >> 0xe;\n                puVar10 = puVar10 + -0xe;\n                arg_8h[6] = NULL;\n                *ppuVar1 = 0xc;\n                goto code_r0x004067dc;\n            }\n            goto code_r0x00406514;\n        case 0x4067dc:\ncode_r0x004067dc:\n            if (arg_8h[6] < (arg_8h[5] >> 10) + 4) {\n                do {\n                    for (; puVar10 < 0x3; puVar10 = puVar10 + 8) {\n                        if (var_34h == NULL) goto code_r0x00406e81;\n                        var_34h = var_34h + -1;\n                        var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                        var_38h = var_38h + 1;\n                    }\n                    puVar5 = var_40h & 7;\n                    puVar10 = puVar10 + -3;\n                    var_40h = var_40h >> 3;\n                    arg_8h[arg_8h[6][0x408400] + 7] = puVar5;\n                    arg_8h[6] = arg_8h[6] + 1;\n                } while (arg_8h[6] < (arg_8h[5] >> 10) + 4);\n            }\n            while (arg_8h[6] < 0x13) {\n                arg_8h[arg_8h[6][0x408400] + 7] = NULL;\n                arg_8h[6] = arg_8h[6] + 1;\n            }\n            ppuVar7 = arg_8h + 0x147;\n            var_8h = NULL;\n            *ppuVar7 = 0x7;\n            iVar6 = fcn.00406f54(arg_8h + 7, 0x13, 0x13, 0, 0, arg_8h + 0x148, ppuVar7, arg_8h + 0x14c, &var_8h);\n            if ((iVar6 == 0) && (*ppuVar7 != NULL)) {\n                arg_8h[6] = NULL;\n                *ppuVar1 = 0xd;\ncode_r0x004069bf:\n                while (arg_8h[6] < (arg_8h[5] >> 5 & 0x1f) + 0x102 + (arg_8h[5] & 0x1f)) {\n                    for (; puVar10 < arg_8h[0x147]; puVar10 = puVar10 + 8) {\n                        if (var_34h == NULL) goto code_r0x00406e81;\n                        var_34h = var_34h + -1;\n                        var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                        var_38h = var_38h + 1;\n                    }\n                    uVar14 = *(arg_8h[0x147] * 2 + 0x40a3e8) & var_40h;\n                    uVar2 = arg_8h[0x148][uVar14 * 4 + 1];\n                    uVar15 = uVar2;\n                    var_14h = *(arg_8h[0x148] + uVar14 * 4 + 2);\n                    if (var_14h < 0x10) {\n                        puVar10 = puVar10 + -uVar15;\n                        var_40h = var_40h >> (uVar2 & 0x1f);\n                        arg_8h[arg_8h[6] + 7] = var_14h;\n                        arg_8h[6] = arg_8h[6] + 1;\n                    }\n                    else {\n                        if (var_14h == 0x12) {\n                            var_8h = 0xb;\n                            puVar5 = 0x7;\n                        }\n                        else {\n                            puVar5 = var_14h + -0xe;\n                            var_8h = 0x3;\n                        }\n                        for (; puVar10 < puVar5 + uVar15; puVar10 = puVar10 + 8) {\n                            if (var_34h == NULL) goto code_r0x00406e81;\n                            var_34h = var_34h + -1;\n                            var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                            var_38h = var_38h + 1;\n                        }\n                        uVar14 = var_40h >> (uVar2 & 0x1f);\n                        puVar10 = puVar10 + (-puVar5 - uVar15);\n                        puVar9 = var_8h + (*(puVar5 * 2 + 0x40a3e8) & uVar14);\n                        var_40h = uVar14 >> (puVar5 & 0x1f);\n                        puVar5 = arg_8h[6];\n                        if ((arg_8h[5] >> 5 & 0x1f) + 0x102 + (arg_8h[5] & 0x1f) < puVar9 + puVar5)\n                        goto code_r0x00406514;\n                        if (var_14h == 0x10) {\n                            if (puVar5 == NULL) goto code_r0x00406514;\n                            puVar13 = arg_8h[puVar5 + 6];\n                        }\n                        else {\n                            puVar13 = NULL;\n                        }\n                        ppuVar7 = arg_8h + puVar5 + 7;\n                        do {\n                            *ppuVar7 = puVar13;\n                            puVar5 = puVar5 + 1;\n                            ppuVar7 = ppuVar7 + 1;\n                            puVar9 = puVar9 + -1;\n                        } while (puVar9 != NULL);\n                        arg_8h[6] = puVar5;\n                    }\n                }\n                arg_8h[0x148] = NULL;\n                var_ch = 0;\n                uVar14 = arg_8h[5] & 0x1f;\n                uVar15 = uVar14 + 0x101;\n                var_14h = (arg_8h[5] >> 5 & 0x1f) + 1;\n                var_4h = 9;\n                var_10h = 6;\n                iVar6 = fcn.00406f54(arg_8h + 7, uVar15, 0x101, 0x408414, 0x408454, &var_18h, &var_4h, arg_8h + 0x14c, \n                                     &var_ch);\n                if (var_4h == 0) {\n                    iVar6 = -1;\n                }\n                if (((iVar6 != 0) ||\n                    (iVar6 = fcn.00406f54(arg_8h + uVar14 + 0x108, var_14h, 0, 0x408494, 0x4084d0, &var_1ch, &var_10h, \n                                          arg_8h + 0x14c, &var_ch),  iVar6 != 0)) ||\n                   ((var_10h == 0 && (0x101 < uVar15)))) goto code_r0x00406514;\n                *ppuVar1 = NULL;\n                *(arg_8h + 0x21) = var_10h;\n                arg_8h[9] = var_18h;\n                *(arg_8h + 8) = var_4h;\n                arg_8h[10] = var_1ch;\ncode_r0x00406aa9:\n                arg_8h[7] = *(arg_8h + 8);\n                arg_8h[6] = arg_8h[9];\n                *ppuVar1 = 0x1;\ncode_r0x00406abc:\n                for (; puVar10 < arg_8h[7]; puVar10 = puVar10 + 8) {\n                    if (var_34h == NULL) goto code_r0x00406e81;\n                    var_34h = var_34h + -1;\n                    var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                    var_38h = var_38h + 1;\n                }\n                puVar5 = arg_8h[6] + (*(arg_8h[7] * 2 + 0x40a3e8) & var_40h) * 4;\n                var_40h = var_40h >> (puVar5[1] & 0x1f);\n                puVar10 = puVar10 + -puVar5[1];\n                uVar2 = *puVar5;\n                puVar9 = uVar2;\n                if (puVar9 == NULL) {\n                    arg_8h[6] = *(puVar5 + 2);\n                    *ppuVar1 = 0x6;\n                }\n                else if ((uVar2 & 0x10) == 0) {\n                    if ((uVar2 & 0x40) == 0) goto code_r0x00406c0f;\n                    if ((uVar2 & 0x20) == 0) goto code_r0x00406514;\n                    *ppuVar1 = 0x7;\n                }\n                else {\n                    arg_8h[6] = puVar9 & 0xf;\n                    arg_8h[5] = *(puVar5 + 2);\n                    *ppuVar1 = 0x2;\n                }\n            }\n            else {\n                *ppuVar1 = 0x11;\n            }\n            break;\n        case 0x4069bf:\n            goto code_r0x004069bf;\n        case 0x406aa9:\n            goto code_r0x00406aa9;\n        case 0x406abc:\n            goto code_r0x00406abc;\n        case 0x406b52:\n            puVar5 = arg_8h[6];\n            for (; puVar10 < puVar5; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406e81;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[5] = arg_8h[5] + (*(puVar5 * 2 + 0x40a3e8) & var_40h);\n            var_40h = var_40h >> (puVar5 & 0x1f);\n            puVar10 = puVar10 + -puVar5;\n            arg_8h[7] = *(arg_8h + 0x21);\n            arg_8h[6] = arg_8h[10];\n            *ppuVar1 = 0x3;\n        case 0x406ba3:\n            for (; puVar10 < arg_8h[7]; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406e81;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar5 = arg_8h[6] + (*(arg_8h[7] * 2 + 0x40a3e8) & var_40h) * 4;\n            var_40h = var_40h >> (puVar5[1] & 0x1f);\n            puVar10 = puVar10 + -puVar5[1];\n            uVar2 = *puVar5;\n            puVar9 = uVar2;\n            if ((uVar2 & 0x10) == 0) {\n                if ((uVar2 & 0x40) != 0) goto code_r0x00406514;\ncode_r0x00406c0f:\n                arg_8h[7] = puVar9;\n                arg_8h[6] = puVar5 + *(puVar5 + 2) * 4;\n            }\n            else {\n                arg_8h[6] = puVar9 & 0xf;\n                arg_8h[7] = *(puVar5 + 2);\n                *ppuVar1 = 0x4;\n            }\n            break;\n        case 0x406c21:\n            puVar5 = arg_8h[6];\n            for (; puVar10 < puVar5; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406e81;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[7] = arg_8h[7] + (*(puVar5 * 2 + 0x40a3e8) & var_40h);\n            var_40h = var_40h >> (puVar5 & 0x1f);\n            puVar10 = puVar10 + -puVar5;\n            *ppuVar1 = 0x5;\n        case 0x406c65:\n            puVar5 = arg_8h[7];\n            if (var_30h + (-0x1ba0 - ppuVar1) < puVar5) {\n                puVar5 = arg_8h[0x26ec] + (-ppuVar1 - puVar5) + -0x1ba0;\n            }\n            else {\n                puVar5 = -puVar5;\n            }\n            var_20h = puVar5 + var_30h;\n            puVar5 = arg_8h[5];\n            ppuVar7 = var_30h;\n            while (var_30h = ppuVar7,  puVar5 != NULL) {\n                if (var_2ch == NULL) {\n                    if (ppuVar7 == arg_8h[0x26ec]) {\n                        ppuVar3 = arg_8h[0x26ed];\n                        var_30h = arg_8h + 0x6ec;\n                        if (ppuVar3 != var_30h) {\n                            if (var_30h < ppuVar3) {\n                                var_2ch = ppuVar3 + (-1 - var_30h);\n                            }\n                            else {\n                                var_2ch = arg_8h[0x26ec] - var_30h;\n                            }\n                            ppuVar7 = var_30h;\n                            if (var_2ch != NULL) goto code_r0x00406d39;\n                        }\n                    }\n                    arg_8h[0x26ee] = ppuVar7;\n                    fcn.00406eec();\n                    var_30h = arg_8h[0x26ee];\n                    ppuVar7 = arg_8h[0x26ed];\n                    if (var_30h < ppuVar7) {\n                        var_2ch = ppuVar7 + (-1 - var_30h);\n                    }\n                    else {\n                        var_2ch = arg_8h[0x26ec] + -var_30h;\n                    }\n                    var_8h = arg_8h[0x26ec];\n                    if ((var_30h == var_8h) && (ppuVar3 = arg_8h + 0x6ec,  ppuVar7 != ppuVar3)) {\n                        var_30h = ppuVar3;\n                        if (ppuVar3 < ppuVar7) {\n                            var_2ch = ppuVar7 + (-1 - ppuVar3);\n                        }\n                        else {\n                            var_2ch = var_8h - ppuVar3;\n                        }\n                    }\n                    if (var_2ch == NULL) goto code_r0x00406e9d;\n                }\ncode_r0x00406d39:\n                *var_30h = *var_20h;\n                ppuVar7 = var_30h + 1;\n                var_20h = var_20h + 1;\n                var_2ch = var_2ch + -1;\n                if (var_20h == arg_8h[0x26ec]) {\n                    var_20h = arg_8h + 0x6ec;\n                }\n                ppuVar3 = arg_8h + 5;\n                *ppuVar3 = *ppuVar3 + -1;\n                puVar5 = *ppuVar3;\n            }\ncode_r0x0040662d:\n            *ppuVar1 = NULL;\n            break;\n        case 0x406d6b:\n            if (var_2ch == NULL) {\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h[0x26ed];\n                    ppuVar7 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        if (ppuVar7 < ppuVar3) {\n                            var_2ch = ppuVar3 + (-1 - ppuVar7);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar7;\n                        }\n                        var_30h = ppuVar7;\n                        if (var_2ch != NULL) goto code_r0x00406e0a;\n                    }\n                }\n                arg_8h[0x26ee] = var_30h;\n                fcn.00406eec(arg_8h);\n                var_30h = arg_8h[0x26ee];\n                ppuVar7 = arg_8h[0x26ed];\n                if (var_30h < ppuVar7) {\n                    var_2ch = ppuVar7 + (-1 - var_30h);\n                }\n                else {\n                    var_2ch = arg_8h[0x26ec] + -var_30h;\n                }\n                var_8h = arg_8h[0x26ec];\n                if ((var_30h == var_8h) && (ppuVar3 = arg_8h + 0x6ec,  ppuVar7 != ppuVar3)) {\n                    var_30h = ppuVar3;\n                    if (ppuVar3 < ppuVar7) {\n                        var_2ch = ppuVar7 + (-1 - ppuVar3);\n                    }\n                    else {\n                        var_2ch = var_8h - ppuVar3;\n                    }\n                }\n                if (var_2ch != NULL) goto code_r0x00406e0a;\n                goto code_r0x00406e9d;\n            }\ncode_r0x00406e0a:\n            *var_30h = *(arg_8h + 6);\n            var_2ch = var_2ch + -1;\n            var_30h = var_30h + 1;\n            goto code_r0x0040662d;\n        case 0x406e1c:\n            if (0x7 < puVar10) {\n                puVar10 = puVar10 + -8;\n                var_34h = var_34h + 1;\n                var_38h = var_38h + -1;\n            }\n        case 0x406e2a:\n            arg_8h[0x26ee] = var_30h;\n            fcn.00406eec();\n            var_30h = arg_8h[0x26ee];\n            ppuVar7 = arg_8h[0x26ed];\n            if (var_30h < ppuVar7) {\n                var_2ch = ppuVar7 + (-1 - var_30h);\n            }\n            else {\n                var_2ch = arg_8h[0x26ec] + -var_30h;\n            }\n            if (var_30h != ppuVar7) {\ncode_r0x00406e9d:\n                uVar11 = 0;\n                goto code_r0x0040651d;\n            }\n            *ppuVar1 = arg_8h[0x149];\n            if (arg_8h[0x149] != 0x8) {\n                uVar11 = 1;\n                goto code_r0x0040651d;\n            }\n        }\n    }\n    goto code_r0x00406514;\ncode_r0x0040650d:\n    if (uVar14 == 3) {\ncode_r0x00406514:\n        uVar11 = 0xffffffff;\n        *ppuVar1 = 0x11;\ncode_r0x0040651d:\n        arg_8h[0x14b] = var_40h;\n        arg_8h[0x14a] = puVar10;\n        arg_8h[1] = var_34h;\ncode_r0x00406535:\n        *arg_8h = var_38h;\n        arg_8h[0x26ee] = var_30h;\n        fcn.00406eec(arg_8h);\n        return uVar11;\n    }\n    goto code_r0x00406e71;\n}\n",
        "token_count": 7400
    },
    "004011ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011ef(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *0x42f448;\n    iVar5 = arg_8h * 0x418 + *0x42f448;\n    var_4h = 0;\n    var_8h = 0;\n    if (((*(iVar5 + 8) & 2) != 0) && (arg_ch != 0)) {\n        arg_8h = arg_8h + 1;\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n    }\n    if (arg_8h < *0x42f44c) {\n        do {\n            puVar1 = arg_8h * 0x418 + 8 + iVar2;\n            uVar3 = arg_8h + 1;\n            uVar4 = *puVar1;\n            if ((uVar4 & 2) != 0) {\n                uVar3 = fcn.004011ef(arg_8h, 1);\n                uVar4 = *puVar1;\n            }\n            if ((uVar4 & 4) != 0) {\n                if (var_4h == 0) {\n                    return uVar3;\n                }\n                if (var_8h != 0) {\n                    *(iVar5 + 8) = *(iVar5 + 8) | 0x40;\n                    return uVar3;\n                }\n                *(iVar5 + 8) = *(iVar5 + 8) & 0xffffff7f | 1;\n                return uVar3;\n            }\n            if ((uVar4 & 0x40) != 0) {\n                var_4h = var_4h + 1;\n            }\n            if ((uVar4 & 1) == 0) {\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_4h = var_4h + 1;\n            }\n            arg_8h = uVar3;\n        } while (uVar3 < *0x42f44c);\n    }\n    return 0;\n}\n",
        "token_count": 538
    },
    "00402f9c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402f9c(int32_t nDenominator, uint arg_ch, int32_t arg_10h, uint32_t nNumber)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_54h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar6 = nNumber;\n    var_8h = nNumber;\n    if (arg_10h == 0) {\n        var_8h = 0x8000;\n    }\n    var_4h = 0;\n    var_ch = arg_10h;\n    if (arg_10h == 0) {\n        var_ch = 0x419428;\n    }\n    if (-1 < nDenominator) {\n        fcn.004031c4(*0x42f478 + nDenominator);\n    }\n    iVar2 = fcn.004031ae(&nNumber, 4);\n    uVar5 = var_8h;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    if (iVar2 != 0) {\n        if ((nNumber & 0x80000000) == 0) {\n            if (arg_10h == 0) {\n                while( true ) {\n                    if (nNumber < 1) {\n                        return var_4h;\n                    }\n                    uVar6 = nNumber;\n                    if (uVar5 <= nNumber) {\n                        uVar6 = uVar5;\n                    }\n                    iVar2 = fcn.004031ae();\n                    if (iVar2 == 0) break;\n                    iVar2 = fcn.00405be0(arg_ch, 0x415428, uVar6);\n                    if (iVar2 == 0) {\n                        return 0xfffffffe;\n                    }\n                    var_4h = var_4h + uVar6;\n                    nNumber = nNumber - uVar6;\n                }\n            }\n            else {\n                if (nNumber < uVar6) {\n                    uVar6 = nNumber;\n                }\n                iVar2 = fcn.004031ae(arg_10h, uVar6);\n                if (iVar2 != 0) {\n                    return uVar6;\n                }\n            }\n        }\n        else {\n            var_10h = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            *0x40bd8c = 0;\n            *0x40bd88 = 0;\n            uVar6 = nNumber & 0x7fffffff;\n            *0x40b870 = 8;\n            *0x415418 = 0x40d410;\n            *0x415414 = 0x40d410;\n            *0x415410 = 0x415410;\n            nNumber = uVar6;\n            if (uVar6 == 0) {\n                *0x40b870 = 8;\n                *0x40bd88 = 0;\n                *0x40bd8c = 0;\n                *0x415410 = 0x415410;\n                *0x415414 = 0x40d410;\n                *0x415418 = 0x40d410;\n                return var_4h;\n            }\n            while( true ) {\n                uVar5 = 0x4000;\n                if (nNumber < 0x4000) {\n                    uVar5 = nNumber;\n                }\n                iVar2 = fcn.004031ae();\n                if (iVar2 == 0) break;\n                nNumber = nNumber - uVar5;\n                *0x40b860 = 0x415428;\n                *0x40b864 = uVar5;\n                while( true ) {\n                    iVar2 = var_ch;\n                    *0x40b868 = var_ch;\n                    *0x40b86c = var_8h;\n                    var_14h = fcn.0040645d(0x40b860);\n                    if (var_14h < 0) {\n                        return 0xfffffffc;\n                    }\n                    iVar2 = *0x40b868 - iVar2;\n                    iVar3 = (*pcVar1)();\n                    if (((*0x42f4d4 & 1) != 0) && ((200 < iVar3 - var_10h || (nNumber == 0)))) {\n                        uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar6 - nNumber, 100, uVar6);\n                        (*_sym.imp.USER32.dll_wsprintfA)(&var_54h, \"... %d%%\", uVar4);\n                        fcn.004050c7(0, &var_54h);\n                        var_10h = iVar3;\n                    }\n                    if (iVar2 == 0) break;\n                    if (arg_10h == 0) {\n                        iVar3 = fcn.00405be0(arg_ch, var_ch, iVar2);\n                        if (iVar3 == 0) {\n                            return 0xfffffffe;\n                        }\n                    }\n                    else {\n                        var_8h = var_8h - iVar2;\n                        var_ch = *0x40b868;\n                    }\n                    var_4h = var_4h + iVar2;\n                    if (var_14h == 1) {\n                        return var_4h;\n                    }\n                }\n                if (nNumber < 1) {\n                    return var_4h;\n                }\n            }\n        }\n    }\n    return 0xfffffffd;\n}\n",
        "token_count": 1249
    },
    "004040a6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004040a6(int32_t arg_8h, uint hdc, uint hWnd)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((((arg_8h - 0x133U < 6) &&\n         (puVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xffffffeb),  pcVar1 = _sym.imp.USER32.dll_GetSysColor, \n         puVar2 != NULL)) && (puVar2[2] < 2)) && ((puVar2[4] < 3 && ((puVar2[5] & 0xffffffe0) == 0)))) {\n        uVar3 = *puVar2;\n        if ((puVar2[5] & 2) != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uVar3);\n        }\n        if ((*(puVar2 + 5) & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar3);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar2[4]);\n        var_8h = puVar2[1];\n        if ((*(puVar2 + 5) & 8) != 0) {\n            var_8h = (*pcVar1)(var_8h);\n        }\n        if ((*(puVar2 + 5) & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n        }\n        if ((*(puVar2 + 5) & 0x10) != 0) {\n            var_ch = puVar2[2];\n            if (puVar2[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar2[3]);\n            }\n            uVar3 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar2[3] = uVar3;\n        }\n        return puVar2[3];\n    }\n    return 0;\n}\n",
        "token_count": 495
    },
    "00404965": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00404965(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x42f448;\n    iVar3 = *0x42f44c;\n    if (*0x42f44c != 0) {\n        do {\n            if ((*(iVar2 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar2 + param_1 * 4);\n            }\n            iVar3 = iVar3 + -1;\n            iVar2 = iVar2 + 0x418;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 166
    },
    "00405199": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00405199(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar4 = *0x42f44c;\n    iVar2 = *0x42f448;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x42f4d8 = *0x42f4d8 | uVar1;\n    uVar5 = 0;\n    fcn.0040408b(0);\n    if (iVar4 != 0) {\n        puVar3 = iVar2 + 0xc;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(puVar3 + -1) & 1) != 0) {\n                uVar5 = *puVar3;\n                iVar2 = fcn.00401389();\n                if (iVar2 != 0) {\n                    *0x42f4ac = *0x42f4ac + 1;\n                    break;\n                }\n            }\n            puVar3 = puVar3 + 0x106;\n        } while (iVar4 != 0);\n    }\n    fcn.0040408b(0x404, uVar5);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x42f4ac;\n}\n",
        "token_count": 314
    },
    "00401389": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.00401389(int32_t param_1)\n\n{\n    int32_t *hWndChildAfter;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    while ((-1 < param_1 && (hWndChildAfter = param_1 * 0x1c + *0x42f450,  *hWndChildAfter != 1))) {\n        iVar1 = fcn.00401434(hWndChildAfter);\n        if (iVar1 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar1 = fcn.0040136d();\n        if (iVar1 == 0) {\n            iVar2 = 1;\n            iVar1 = param_1 + 1;\n        }\n        else {\n            iVar1 = iVar1 + -1;\n            iVar2 = iVar1 - param_1;\n        }\n        param_1 = iVar1;\n        if (unaff_retaddr != 0) {\n            *0x42ebec = *0x42ebec + iVar2;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x42ebec, 30000, *0x42ebd4, 0);\n            (*_sym.imp.USER32.dll_SendMessageA)(0x4013a8, 0x402, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 319
    },
    "00402b89": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402b89(uint arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t arg_8h_00;\n    \n    if (*arg_ch == '\\0') {\n        uVar1 = 0x3eb;\n    }\n    else {\n        arg_10h = arg_10h | 0x100020;\n        uVar1 = fcn.00402b43(arg_8h, &arg_10h);\n        arg_8h_00 = fcn.00405dab(uVar1);\n        if (arg_8h_00 == 0) {\n            uVar1 = 6;\n        }\n        else {\n            uVar1 = fcn.00402bcd(arg_8h_00, arg_ch, arg_10h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 198
    },
    "0040442a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040442a(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x429838;\n    if (*0x42f4ac == 0) {\n        uVar1 = *0x42a86c;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 90
    },
    "00404822": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404822(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (arg_ch == 1) {\n        fcn.004056a0(0x3fb, arg_14h);\n        (*pcVar1)(arg_8h, 0x466, 1, arg_14h);\n    }\n    if (arg_ch == 2) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (iVar2 = fcn.0040140b(7),  iVar2 != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        (*pcVar1)(arg_8h, 0x465, 0, uVar3);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "00404992": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404992(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        (*pcVar1)(arg_8h, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(arg_8h, 0x110c, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 320
    },
    "004056bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004056bc(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x42f4c0 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x42f4c8 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        *0x40a21c = *0x42f408;\n        *0x40a220 = *0x42f400;\n        *0x40a224 = param_1;\n        *0x40a228 = 0x42ec00;\n        *0x40a22c = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectA)(0x40a218);\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "004059d1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.004059d1(char *param_1)\n\n{\n    code *pcVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextA;\n    pcVar2 = (*_sym.imp.USER32.dll_CharNextA)(param_1);\n    uVar3 = (*pcVar1)(pcVar2);\n    if (((*param_1 == '\\0') || (*pcVar2 != ':')) || (pcVar2[1] != '\\\\')) {\n        if ((*param_1 == '\\\\') && (param_1[1] == '\\\\')) {\n            iVar4 = 2;\n            do {\n                iVar4 = iVar4 + -1;\n                pcVar2 = fcn.00405963();\n                if (*pcVar2 == '\\0') goto code_r0x00405a1e;\n                pcVar2 = pcVar2 + 1;\n            } while (iVar4 != 0);\n        }\n        else {\ncode_r0x00405a1e:\n            pcVar2 = NULL;\n        }\n    }\n    else {\n        pcVar2 = (*pcVar1)(uVar3);\n    }\n    return pcVar2;\n}\n",
        "token_count": 273
    },
    "00405e87": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e87(uint arg_8h, int32_t arg_ch, uint lpValueName, uchar *arg_14h, int32_t hKey)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    var_4h = 0x400;\n    iVar2 = fcn.00405e26(arg_8h, arg_ch, -(hKey != 0) & 0x100 | 0x20019, &hKey);\n    puVar1 = arg_14h;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, lpValueName, 0, &arg_ch, arg_14h, &var_4h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        puVar1[0x3ff] = 0;\n        if (iVar2 == 0) {\n            if (arg_ch == 1) {\n                return;\n            }\n            if (arg_ch == 2) {\n                return;\n            }\n        }\n    }\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 269
    },
    "00405fc2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405fc2(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint8_t *arg_8h_00;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint8_t *ppidl;\n    \n    puVar6 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x42ebdc - (arg_ch * 4 + 4));\n    }\n    puVar7 = arg_ch + *0x42f458;\n    arg_8h_00 = 0x42e3a0;\n    if ((0x42e39f < arg_8h) && (arg_8h + -0x42e3a0 < 0x800)) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar6;\n    }\n    do {\n        while( true ) {\n            uVar1 = *puVar7;\n            if ((uVar1 == 0) || (0x3ff < arg_8h_00 + -0x42e3a0)) {\n                *arg_8h_00 = 0;\n                if (arg_8h != NULL) {\n                    fcn.00405fa0(arg_8h, 0x42e3a0);\n                }\n                return;\n            }\n            puVar6 = puVar7 + 1;\n            if (uVar1 < 4) break;\n            if (uVar1 == 4) {\n                *arg_8h_00 = *puVar6;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar7 = puVar7 + 2;\n            }\n            else {\n                *arg_8h_00 = uVar1;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar7 = puVar6;\n            }\n        }\n        uVar2 = puVar7[2];\n        var_ch = uVar2;\n        uVar3 = *puVar6;\n        var_14h = uVar3;\n        uVar8 = (var_ch & 0x7f) << 7 | var_14h & 0x7f;\n        var_18h = CONCAT22(uVar3 >> 7, uVar3) | 0x8000;\n        var_10h = CONCAT22(uVar2 >> 7, uVar2) | 0x8000;\n        if (uVar1 == 2) {\n            puVar6 = 0x2;\n            iVar9 = 2;\n            if ((((*0x42f40c < 0) && (*0x42f40c != 0x5a04)) && (var_ch != 0x23)) && (var_ch != 0x2e)) {\n                bVar4 = false;\n            }\n            else {\n                bVar4 = true;\n            }\n            if (*0x42f4a4 != 0) {\n                puVar6 = 0x4;\n                iVar9 = 4;\n            }\n            if (uVar3 < '\\0') {\n                puVar6 = var_14h & 0x40;\n                fcn.00405e87(0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", (var_14h & 0x3f) + *0x42f458, \n                             arg_8h_00, puVar6);\n                if (*arg_8h_00 == 0) {\n                    fcn.00405fc2(arg_8h_00, var_ch);\n                    goto code_r0x00406169;\n                }\ncode_r0x0040616e:\n                if (var_ch == 0x1a) {\n                    sub.KERNEL32.dll_lstrcatA(puVar6, \"\\\\Microsoft\\\\Internet Explorer\\\\Quick Launch\", arg_8h_00);\n                }\n            }\n            else {\n                if (var_14h == 0x25) {\n                    puVar6 = 0x400;\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(arg_8h_00, 0x400);\n                }\n                else {\n                    if (var_14h == 0x24) {\n                        puVar6 = 0x400;\n                        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(arg_8h_00, 0x400);\n                        iVar9 = 0;\n                    }\n                    while ((iVar9 != 0 &&\n                           (((iVar9 = iVar9 + -1,  *0x42f404 == NULL || (!bVar4)) ||\n                            (puVar6 = arg_8h_00,  iVar5 = (**0x42f404)(*0x42f408, (&var_18h)[iVar9], 0, 0, arg_8h_00), \n                            iVar5 != 0))))) {\n                        puVar6 = (&var_18h)[iVar9];\n                        iVar5 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)(*0x42f408, puVar6, &ppidl);\n                        if (iVar5 == 0) {\n                            puVar6 = ppidl;\n                            var_8h = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(ppidl, arg_8h_00);\n                            (*_sym.imp.ole32.dll_CoTaskMemFree)(ppidl);\n                            if (var_8h != 0) break;\n                        }\n                        *arg_8h_00 = 0;\n                    }\n                }\ncode_r0x00406169:\n                if (*arg_8h_00 != 0) goto code_r0x0040616e;\n            }\ncode_r0x0040617f:\n            fcn.0040620a(arg_8h_00);\n        }\n        else if (uVar1 == 3) {\n            if (uVar8 == 0x1d) {\n                fcn.00405efe(arg_8h_00, *0x42f408);\n            }\n            else {\n                fcn.00405fa0(arg_8h_00, uVar8 * 0x400 + 0x430000);\n            }\n            if (uVar8 - 0x15 < 7) goto code_r0x0040617f;\n        }\n        else if (uVar1 == 1) {\n            fcn.00405fc2(arg_8h_00, -1 - uVar8);\n        }\n        iVar9 = sub.KERNEL32.dll_lstrlenA();\n        arg_8h_00 = arg_8h_00 + iVar9;\n        puVar7 = puVar7 + 3;\n    } while( true );\n}\n",
        "token_count": 1586
    },
    "0040620a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040620a(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    \n    if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n    }\n    if ((*param_1 != 0) && (in_EAX = fcn.004059a5(param_1),  in_EAX != 0)) {\n        param_1 = param_1 + 2;\n    }\n    pcVar2 = _sym.imp.USER32.dll_CharNextA;\n    uVar1 = *param_1;\n    uVar3 = in_EAX & 0xffffff00 | uVar1;\n    puVar7 = param_1;\n    puVar6 = param_1;\n    while (uVar1 != 0) {\n        if ((0x1f < uVar3) && (pcVar4 = fcn.00405963(\"*?|<>/\\\":\", uVar3),  *pcVar4 == '\\0')) {\n            iVar5 = (*pcVar2)(puVar7);\n            fcn.00405af4(puVar6, puVar7, iVar5 - puVar7);\n            puVar6 = (*pcVar2)(puVar6);\n        }\n        puVar7 = (*pcVar2)(puVar7);\n        uVar1 = *puVar7;\n        uVar3 = puVar7 & 0xffffff00 | uVar1;\n    }\n    *puVar6 = 0;\n    while( true ) {\n        puVar6 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, puVar6);\n        if ((*puVar6 != 0x20) && (*puVar6 != 0x5c)) break;\n        *puVar6 = 0;\n        if (puVar6 <= param_1) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 517
    },
    "00406f54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00406f54(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            uint32_t *arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    int32_t iVar1;\n    unkbyte3 Var2;\n    uint uVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint8_t uVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    uint32_t *puVar15;\n    uint var_ech;\n    uint var_b0h;\n    uint var_ach;\n    int32_t aiStack172 [14];\n    uint32_t var_70h;\n    uint var_6ch;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t *var_20h;\n    uint32_t *var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar15 = arg_20h;\n    puVar13 = &var_70h;\n    for (iVar5 = 0x10; piVar6 = arg_8h,  uVar8 = arg_ch,  iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar13 = 0;\n        puVar13 = puVar13 + 1;\n    }\n    do {\n        (&var_70h)[*piVar6] = (&var_70h)[*piVar6] + 1;\n        uVar8 = uVar8 - 1;\n        piVar6 = piVar6 + 1;\n    } while (uVar8 != 0);\n    if (var_70h == arg_ch) {\n        *arg_1ch = 0;\n        *arg_20h = 0;\n        uVar3 = 0;\n    }\n    else {\n        uVar8 = 1;\n        arg_20h = *arg_20h;\n        uVar9 = 0xf;\n        do {\n            iVar5 = 0;\n            if ((&var_70h)[uVar8] != 0) break;\n            uVar8 = uVar8 + 1;\n        } while (uVar8 < 0x10);\n        var_4h = uVar8;\n        if (arg_20h < uVar8) {\n            arg_20h = uVar8;\n        }\n        do {\n            if ((&var_70h)[uVar9] != 0) break;\n            uVar9 = uVar9 - 1;\n        } while (uVar9 != 0);\n        var_18h = uVar9;\n        if (uVar9 < arg_20h) {\n            arg_20h = uVar9;\n        }\n        *puVar15 = arg_20h;\n        var_30h = 1 << (uVar8 & 0x1f);\n        for (; uVar8 < uVar9; uVar8 = uVar8 + 1) {\n            if (var_30h - (&var_70h)[uVar8] < 0) goto code_r0x00407285;\n            var_30h = (var_30h - (&var_70h)[uVar8]) * 2;\n        }\n        iVar7 = (&var_70h)[uVar9];\n        var_30h = var_30h - iVar7;\n        if (-1 < var_30h) {\n            var_ach = 0;\n            (&var_70h)[uVar9] = iVar7 + var_30h;\n            iVar7 = 0;\n            iVar10 = uVar9 - 1;\n            if (iVar10 != 0) {\n                iVar14 = 0;\n                do {\n                    iVar7 = iVar7 + *(&var_6ch + iVar14);\n                    iVar10 = iVar10 + -1;\n                    *(aiStack172 + iVar14) = iVar7;\n                    iVar14 = iVar14 + 4;\n                } while (iVar10 != 0);\n            }\n            uVar8 = 0;\n            piVar6 = arg_8h;\n            do {\n                iVar7 = *piVar6;\n                piVar6 = piVar6 + 1;\n                if (iVar7 != 0) {\n                    iVar10 = (&var_b0h)[iVar7];\n                    *(iVar10 * 4 + 0x42d688) = uVar8;\n                    (&var_b0h)[iVar7] = iVar10 + 1;\n                }\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < arg_ch);\n            iVar7 = (&var_b0h)[uVar9];\n            var_ch = -1;\n            var_24h = 0;\n            iVar10 = -arg_20h;\n            var_8h = 0;\n            var_b0h = 0;\n            var_20h = 0x42d688;\n            var_ech = 0;\n            if (var_4h <= var_18h) {\n                var_28h = var_4h - 1;\n                var_1ch = &var_70h + var_4h;\n                do {\n                    var_10h = *var_1ch;\n                    while (var_10h != 0) {\n                        arg_8h._2_2_ = arg_8h >> 0x10;\n                        var_2ch = var_10h - 1;\n                        var_14h = arg_20h + iVar10;\n                        if (arg_20h + iVar10 < var_4h) {\n                            do {\n                                iVar14 = var_ch + 1;\n                                var_ch = iVar14;\n                                uVar8 = var_18h - var_14h;\n                                if (arg_20h < var_18h - var_14h) {\n                                    uVar8 = arg_20h;\n                                }\n                                uVar9 = var_4h - var_14h;\n                                uVar11 = 1 << (uVar9 & 0x1f);\n                                if ((var_10h < uVar11) &&\n                                   (iVar5 = uVar11 + (-1 - var_2ch),  puVar15 = var_1ch,  uVar9 < uVar8)) {\n                                    while (uVar9 = uVar9 + 1,  uVar9 < uVar8) {\n                                        uVar11 = puVar15[1];\n                                        if (iVar5 * 2 <= uVar11) break;\n                                        iVar5 = iVar5 * 2 - uVar11;\n                                        puVar15 = puVar15 + 1;\n                                    }\n                                }\n                                var_24h = 1 << (uVar9 & 0x1f);\n                                uVar8 = *arg_28h + var_24h;\n                                if (0x5a0 < uVar8) goto code_r0x00407285;\n                                iVar5 = arg_24h + *arg_28h * 4;\n                                *arg_28h = uVar8;\n                                (&var_ech)[iVar14] = iVar5;\n                                uVar8 = var_8h;\n                                if (iVar14 == 0) {\n                                    *arg_1ch = iVar5;\n                                }\n                                else {\n                                    iVar1 = *(&stack0xffffff0c + iVar14 * 4);\n                                    (&var_b0h)[iVar14] = var_8h;\n                                    arg_8h._0_2_ = uVar9 & 0xff | (arg_20h & 0xff) << 8;\n                                    uVar8 = uVar8 >> (iVar10 & 0x1f);\n                                    arg_8h = CONCAT22((iVar5 - iVar1 >> 2) - uVar8, arg_8h);\n                                    *(iVar1 + uVar8 * 4) = arg_8h;\n                                }\n                                iVar10 = var_14h;\n                                var_14h = var_14h + arg_20h;\n                            } while (var_14h < var_4h);\n                        }\n                        uVar12 = iVar10;\n                        Var2 = CONCAT21(arg_8h._2_2_, var_4h - uVar12);\n                        if (var_20h < iVar7 * 4 + 0x42d688U) {\n                            uVar8 = *var_20h;\n                            if (uVar8 < arg_10h) {\n                                arg_8h._0_2_ = CONCAT31(Var2, (uVar8 < 0x100) + -1) & 0xff60;\n                                uVar4 = *var_20h;\n                                var_20h = var_20h + 1;\n                            }\n                            else {\n                                iVar14 = (uVar8 - arg_10h) * 2;\n                                var_20h = var_20h + 1;\n                                arg_8h = CONCAT31(Var2, *(iVar14 + arg_18h) + 'P');\n                                uVar4 = *(iVar14 + arg_14h);\n                            }\n                            arg_8h = CONCAT22(uVar4, arg_8h);\n                        }\n                        else {\n                            arg_8h = CONCAT31(Var2, 0xc0);\n                        }\n                        for (uVar8 = var_8h >> (uVar12 & 0x1f); uVar8 < var_24h;\n                            uVar8 = uVar8 + (1 << (var_4h - uVar12 & 0x1f))) {\n                            *(iVar5 + uVar8 * 4) = arg_8h;\n                        }\n                        uVar8 = 1 << (var_28h & 0x1f);\n                        while ((var_8h & uVar8) != 0) {\n                            var_8h = var_8h ^ uVar8;\n                            uVar8 = uVar8 >> 1;\n                        }\n                        var_8h = var_8h ^ uVar8;\n                        var_10h = 1;\n                        var_10h = var_2ch;\n                        if (((1 << (uVar12 & 0x1f)) - 1U & var_8h) != (&var_b0h)[var_ch]) {\n                            do {\n                                iVar10 = iVar10 - arg_20h;\n                                var_ch = var_ch + -1;\n                            } while (((1 << (iVar10 & 0x1f)) - 1U & var_8h) != (&var_b0h)[var_ch]);\n                        }\n                    }\n                    var_4h = var_4h + 1;\n                    var_1ch = var_1ch + 1;\n                    var_28h = var_28h + 1;\n                } while (var_4h <= var_18h);\n            }\n            if (var_30h == 0) {\n                return 0;\n            }\n            if (var_18h == 1) {\n                return 0;\n            }\n        }\ncode_r0x00407285:\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 2593
    },
    "004044d1": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004044d1(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uchar *puVar8;\n    uint32_t uVar9;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    code *var_38h;\n    int32_t var_34h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = *0x42a048;\n    var_8h = *(*0x42a048 + 0x38);\n    iVar6 = *(*0x42a048 + 0x3c) * 0x400 + 0x430000;\n    if (arg_ch == 0x40b) {\n        fcn.004056a0(0x3fb, iVar6);\n        fcn.0040620a(iVar6);\n    }\n    if (arg_ch == 0x110) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fb);\n        iVar2 = fcn.004059a5(iVar6);\n        if ((iVar2 != 0) && (iVar2 = fcn.004059d1(iVar6),  iVar2 == 0)) {\n            fcn.00405938(iVar6);\n        }\n        *0x42ebd8 = arg_8h;\n        (*_sym.imp.USER32.dll_SetWindowTextA)(uVar1, iVar6);\n        var_48h = *(arg_14h + 0x34);\n        var_4ch = 0x1;\n        fcn.0040403f(arg_8h);\n        fcn.0040403f(arg_8h, 0x14, *(arg_14h + 0x30));\n        fcn.00404074(uVar1);\n        pcVar3 = fcn.00406338(7);\n        if (pcVar3 == NULL) goto code_r0x0040480d;\n        (*pcVar3)(uVar1, 1);\n    }\n    iVar2 = var_8h;\n    if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            if (arg_10h >> 0x10 != 0x300) goto code_r0x0040480d;\n            arg_ch = 0x40f;\n        }\n        if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar7 = &fcn.004044d1::var_48h;\n            for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            var_4ch = arg_8h;\n            var_44h = 0x42a870;\n            var_38h = fcn.00404822;\n            var_34h = iVar6;\n            var_40h = fcn.00405fc2(0x429c48, iVar2);\n            var_3ch = 0x41;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderA)(&fcn.004044d1::var_4ch);\n            if (iVar2 == 0) {\n                arg_ch = 0x40f;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                fcn.00405938(iVar6);\n                if ((*(*0x42f414 + 0x11c) != 0) && (iVar6 == 0x435400)) {\n                    uVar1 = 0;\n                    fcn.00405fc2(0, *(*0x42f414 + 0x11c));\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x42e3a0, 0x42a870);\n                    if (iVar2 != 0) {\n                        sub.KERNEL32.dll_lstrcatA(uVar1, 0x42e3a0, 0x435400);\n                    }\n                }\n                *0x42a860 = *0x42a860 + 1;\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x3fb, iVar6);\n            }\n        }\n    }\n    if ((arg_ch == 0x40f) || (arg_ch == 0x405)) {\n        var_4h = 0;\n        var_8h = 0;\n        fcn.004056a0(0x3fb, iVar6);\n        iVar2 = fcn.00405a26(iVar6);\n        if (iVar2 == 0) {\n            var_4h = 1;\n        }\n        fcn.00405fa0(0x429840, iVar6);\n        var_48h = 1;\n        var_ch = fcn.00406338();\n        if (var_ch != NULL) {\n            puVar8 = NULL;\n            do {\n                var_4ch = &fcn.004044d1::var_24h;\n                iVar2 = (*var_ch)(0x429840, &fcn.004044d1::var_2ch, &fcn.004044d1::var_18h);\n                if (iVar2 != 0) {\n                    var_2ch = var_2ch >> 10 | var_28h << 0x16;\n                    var_28h = var_28h >> 10;\n                    var_8h = 1;\n                    goto code_r0x00404766;\n                }\n                if (puVar8 != NULL) {\n                    *puVar8 = 0;\n                }\n                var_48h = 0x429840;\n                var_4ch = 0x4046e0;\n                puVar8 = fcn.0040597f();\n                *puVar8 = 0;\n                puVar8 = puVar8 + -1;\n                *puVar8 = 0x5c;\n            } while (puVar8 != 0x429840);\n        }\n        var_4ch = iVar6;\n        fcn.00405fa0(0x429840);\n        puVar8 = fcn.004059d1(0x429840);\n        if (puVar8 != NULL) {\n            *puVar8 = 0;\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                          (0x429840, &fcn.004044d1::var_10h, &fcn.004044d1::var_14h, &fcn.004044d1::var_ch, \n                           &fcn.004044d1::var_20h);\n        if (iVar6 != 0) {\n            var_48h = 0x400;\n            var_4ch = var_ch;\n            var_2ch = (*_sym.imp.KERNEL32.dll_MulDiv)(var_10h * var_14h);\n            var_28h = var_2ch >> 0x1f;\n            var_8h = 1;\n        }\ncode_r0x00404766:\n        uVar9 = 5;\n        var_4ch = 0x40476d;\n        uVar4 = fcn.00404965();\n        if (((var_8h != 0) && (var_28h == 0)) && (var_2ch < uVar4)) {\n            var_4h = 2;\n        }\n        if (*(*0x42ebdc + 0x10) != 0) {\n            var_4ch = uVar4;\n            fcn.0040494d(0x3ff, 0xfffffffb);\n            if (var_8h == 0) {\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x400, 0x429830);\n                uVar9 = arg_8h;\n            }\n            else {\n                uVar9 = 0x400;\n                fcn.00404888(0x400, 0x400, var_2ch, var_28h);\n            }\n        }\n        *0x42f4c4 = var_4h;\n        if (var_4h == 0) {\n            uVar9 = 7;\n            var_4h = fcn.0040140b();\n        }\n        if ((*(var_1ch + 0x14) & 0x400) != 0) {\n            var_4h = 0;\n        }\n        fcn.00404061(var_4h == 0, uVar9);\n        if ((var_4h == 0) && (*0x42a860 == 0)) {\n            fcn.0040442a();\n        }\n        *0x42a860 = 0;\n    }\ncode_r0x0040480d:\n    fcn.004040a6(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 2159
    },
    "00405f17": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405f17(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char cVar6;\n    int32_t iVar7;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    var_4h = 1;\n    cVar2 = '\\n';\n    cVar6 = '9';\n    if (*arg_8h == 0x2d) {\n        arg_8h = arg_8h + 1;\n        var_4h = -1;\n    }\n    puVar3 = arg_8h;\n    if (*arg_8h == 0x30) {\n        puVar3 = arg_8h + 1;\n        uVar1 = *puVar3;\n        if (('/' < uVar1) && (uVar1 < '8')) {\n            cVar2 = '\\b';\n            cVar6 = '7';\n        }\n        if ((uVar1 & 0xdf) == 0x58) {\n            cVar2 = '\\x10';\n            puVar3 = arg_8h + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if ((uVar4 < 0x30) || (cVar6 < uVar4)) {\n            if ((cVar2 != '\\x10') || (((uVar4 & 0xffffffdf) < 0x41 || (0x46 < (uVar4 & 0xffffffdf))))) {\n                return var_4h * iVar7;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        iVar7 = cVar2 * iVar7 + iVar5;\n    } while( true );\n}\n",
        "token_count": 447
    },
    "00402c7c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c7c(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_40h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n        arg_ch = 0x113;\n    }\n    if (arg_ch == 0x113) {\n        iVar2 = *0x415420;\n        if (*0x42142c <= *0x415420) {\n            iVar2 = *0x42142c;\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar2, 100, *0x42142c);\n        (*_sym.imp.USER32.dll_wsprintfA)(&var_40h, \"verifying installer: %d%%\", uVar1);\n        (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, &var_40h);\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x406, &var_40h);\n    }\n    return 0;\n}\n",
        "token_count": 263
    },
    "004062ca": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004062ca(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint lpBuffer;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    if (0x104 < uVar1) {\n        uVar1 = 0;\n    }\n    if ((uVar1 == 0) || ((&stack0xfffffedb)[uVar1] == '\\\\')) {\n        iVar2 = 1;\n    }\n    else {\n        iVar2 = 0;\n    }\n    (*_sym.imp.USER32.dll_wsprintfA)(&lpBuffer + uVar1, \"%s%s.dll\", iVar2 + 0x40a014, arg_8h);\n    (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(&lpBuffer, 0, 8);\n    return;\n}\n",
        "token_count": 203
    },
    "00406eec": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00406eec(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *(param_1 + 0x9bb4);\n    while( true ) {\n        uVar2 = *(param_1 + 0x9bb8);\n        if (uVar2 < uVar4) {\n            uVar2 = *(param_1 + 0x9bb0);\n        }\n        uVar1 = *(param_1 + 0xc);\n        uVar3 = uVar2 - uVar4;\n        if (uVar1 <= uVar2 - uVar4) {\n            uVar3 = uVar1;\n        }\n        *(param_1 + 0xc) = uVar1 - uVar3;\n        fcn.00405af4();\n        *(param_1 + 8) = *(param_1 + 8) + uVar3;\n        if (uVar4 + uVar3 != *(param_1 + 0x9bb0)) break;\n        uVar4 = param_1 + 0x1bb0;\n        if (*(param_1 + 0x9bb8) == *(param_1 + 0x9bb0)) {\n            *(param_1 + 0x9bb8) = uVar4;\n        }\n    }\n    *(param_1 + 0x9bb4) = uVar4 + uVar3;\n    return;\n}\n",
        "token_count": 342
    },
    "00401299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401299(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x42f44c != 0)) {\n        puVar2 = *0x42f448 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x106;\n        } while (uVar3 < *0x42f44c);\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00402acb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402acb(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = param_1;\n    if (param_1 < 0) {\n        uVar1 = -param_1;\n    }\n    uVar2 = fcn.00405fc2((uVar1 >> 4) * 0x400 + 0x40a418, *(*0x40b854 + (uVar1 & 0xf) * 4));\n    if (param_1 < 0) {\n        fcn.0040620a(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 148
    },
    "00403a93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403a93(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    \n    uVar3 = 0xffff;\n    uVar1 = fcn.00405f17(0x436000);\n    do {\n        if (*0x42f464 != 0) {\n            puVar2 = *(*0x42f414 + 100) * *0x42f464 + *0x42f460;\n            iVar4 = *0x42f464;\n            do {\n                puVar2 = puVar2 - *(*0x42f414 + 100);\n                iVar4 = iVar4 + -1;\n                if (((*puVar2 ^ uVar1) & uVar3) == 0) {\n                    *0x42ebe0 = *(puVar2 + 1);\n                    *0x42f4c8 = *(puVar2 + 3);\n                    *0x42ebdc = puVar2 + 5;\n                    if (*0x42ebdc != NULL) {\n                        fcn.00405efe(0x436000, *puVar2);\n                        fcn.00403b4c();\n                        piVar5 = *0x42f448;\n                        for (iVar4 = *0x42f44c; iVar4 != 0; iVar4 = iVar4 + -1) {\n                            if (*piVar5 != 0) {\n                                fcn.00405fc2(piVar5 + 6, *piVar5);\n                            }\n                            piVar5 = piVar5 + 0x106;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar4 != 0);\n        }\n        if (uVar3 == 0xffff) {\n            uVar3 = 0x3ff;\n        }\n        else {\n            uVar3 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 440
    },
    "0040403f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040403f(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00405fc2(0, param_3);\n    sub.USER32.dll_SetDlgItemTextA(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 90
    },
    "00404175": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404175(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch, *0x42983c + arg_8h, arg_10h);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    *arg_14h = iVar1;\n    *0x42983c = *0x42983c + iVar1;\n    return 0;\n}\n",
        "token_count": 134
    },
    "0040448a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040448a(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.0040403f(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 1000, *(arg_14h + 0x3c) * 0x400 + 0x430000);\n    }\n    fcn.004040a6(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 149
    },
    "00404888": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404888(uint nIDDlgItem, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int8_t iVar5;\n    uint arg_ch_00;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    char *pcVar9;\n    uint *arg_8h;\n    uint var_40h;\n    uint var_20h;\n    \n    arg_ch_00 = 0xffffffdc;\n    if (arg_14h == 0) {\n        iVar5 = 0x14;\n        if (arg_10h < 0x100000) {\n            iVar5 = 10;\n            arg_ch_00 = 0xffffffdd;\n        }\n        if (arg_10h < 0x400) {\n            iVar5 = 0;\n            arg_ch_00 = 0xffffffde;\n        }\n        if (arg_10h < 0xffff3333) {\n            arg_10h = (1 << iVar5) / 0x14 + arg_10h;\n        }\n        uVar6 = arg_10h >> iVar5;\n        uVar7 = ((arg_10h & 0xffffff) * 10 >> iVar5) % 10;\n    }\n    else {\n        uVar6 = arg_10h >> 0x14 | arg_14h << 0xc;\n        uVar7 = 0;\n    }\n    uVar1 = fcn.00405fc2(&var_20h, 0xffffffdf);\n    arg_8h = &var_40h;\n    uVar2 = fcn.00405fc2(arg_8h, arg_ch_00);\n    pcVar9 = \"%u.%u%s%s\";\n    uVar8 = 0x42a870;\n    iVar3 = fcn.00405fc2(0x42a870, arg_ch);\n    iVar4 = sub.KERNEL32.dll_lstrlenA(0x42a870, uVar8, arg_ch, pcVar9, uVar6, uVar7, uVar2, arg_8h, arg_ch_00, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfA)(iVar3 + iVar4);\n    sub.USER32.dll_SetDlgItemTextA(*0x42ebd8, nIDDlgItem, 0x42a870);\n    return;\n}\n",
        "token_count": 557
    },
    "00405938": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00405938(int32_t param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, iVar1 + param_1);\n    if (*pcVar2 != '\\\\') {\n        sub.KERNEL32.dll_lstrcatA(param_1, 0x40a014);\n    }\n    return param_1;\n}\n",
        "token_count": 116
    },
    "0040597f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.0040597f(char *param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = param_1 + iVar1;\n    do {\n        if (*pcVar2 == '\\\\') break;\n        pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, pcVar2);\n    } while (param_1 < pcVar2);\n    *pcVar2 = '\\0';\n    return pcVar2 + 1;\n}\n",
        "token_count": 129
    },
    "00405b68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00405b68(uchar *arg_8h, uint lpPathName)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar1 = arg_8h;\n    iVar4 = 100;\n    do {\n        iVar4 = iVar4 + -1;\n        arg_8h = *0x40a3b4;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        arg_8h._0_3_ = CONCAT12(arg_8h._2_1_ + uVar2 % 0x1a, arg_8h._0_2_);\n        arg_8h = arg_8h & 0xff000000 | arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(lpPathName, &arg_8h, 0, puVar1);\n        if (iVar3 != 0) {\n            return puVar1;\n        }\n    } while (iVar4 != 0);\n    *puVar1 = 0;\n    return NULL;\n}\n",
        "token_count": 257
    },
    "00405efe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405efe(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfA)(param_1, 0x4083a4, param_2);\n    return;\n}\n",
        "token_count": 51
    },
    "004063ad": {
        "rules": [
            "delay execution",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004063ad(uint hProcess)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpExitCode;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 100);\n    while (iVar2 == 0x102) {\n        fcn.00406374(0xf);\n        iVar2 = (*pcVar1)(hProcess, 100);\n    }\n    (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hProcess, &lpExitCode);\n    return lpExitCode;\n}\n",
        "token_count": 147
    },
    "00405b39": {
        "rules": [
            "get file attributes",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00405b39(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(unaff_retaddr, param_1, 1, 0, param_2, -(uVar1 != 0xffffffff) & uVar1, 0);\n    return;\n}\n",
        "token_count": 111
    },
    "0040563f": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040563f(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    int32_t lpProcessAttributes;\n    uint hObject;\n    \n    *0x42c078 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)\n                      (0, lpCommandLine, 0, 0, 0, 0x4000000, 0, 0, 0x42c078, &lpProcessAttributes);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar1 = lpProcessAttributes;\n    }\n    return iVar1;\n}\n",
        "token_count": 149
    },
    "00405682": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00405682(uint *param_1)\n\n{\n    param_1[9] = 0;\n    *param_1 = 0x3c;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExA)(param_1);\n    return;\n}\n",
        "token_count": 61
    },
    "00405e26": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405e26(uint arg_8h, uint lpSubKey, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00405dab(arg_8h, &arg_10h);\n    if (iVar1 == 0) {\n        uVar2 = 6;\n    }\n    else {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(iVar1, lpSubKey, 0, arg_10h, arg_14h);\n    }\n    return uVar2;\n}\n",
        "token_count": 143
    },
    "00405e54": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405e54(uint arg_8h, uint lpSubKey, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00405dab(arg_8h, &arg_10h);\n    if (iVar1 == 0) {\n        uVar2 = 6;\n    }\n    else {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, arg_10h, 0, arg_14h, 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 155
    },
    "0040371e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040371e(uint param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x429834; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_1);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00403739": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403739(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x429834;\n    fcn.0040371e(0);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(piVar2[2]);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    *0x429834 = NULL;\n    return;\n}\n",
        "token_count": 143
    },
    "0040376e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040376e(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x429834;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == param_1) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "00405963": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405963(char *param_1, char param_2)\n\n{\n    for (; (*param_1 != '\\0' && (*param_1 != param_2)); param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1)) {\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00405a9e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405a9e(int32_t arg_8h, uint lpString2)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    while( true ) {\n        iVar4 = (*pcVar2)(arg_8h);\n        if (iVar4 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(iVar3 + arg_8h);\n        *(iVar3 + arg_8h) = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(arg_8h, lpString2);\n        *(iVar3 + arg_8h) = uVar1;\n        if (iVar4 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 248
    },
    "00405af4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405af4(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00406374": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406374(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00406338": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint fcn.00406338(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = *(param_1 * 8 + 0x40a240);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2);\n    if ((iVar1 == 0) && (iVar1 = fcn.004062ca(uVar2),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, *(param_1 * 8 + 0x40a244));\n    return uVar2;\n}\n",
        "token_count": 151
    },
    "00405d7f": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nvoid fcn.00405d7f(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 5;\n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileExA)(param_1, param_2, 5);\n    if (iVar1 == 0) {\n        fcn.00405c0f(param_2, uVar2);\n    }\n    *0x42f4b0 = *0x42f4b0 + 1;\n    return;\n}\n",
        "token_count": 126
    },
    "0040558d": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040558d(uint lpFileName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar pSecurityDescriptor;\n    uint var_1fh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpSecurityAttributes;\n    uchar *var_8h;\n    uint var_4h;\n    \n    var_1fh._0_1_ = 0;\n    stack0xffffffe0 = 0x40837c;\n    var_18h = 0x40837c;\n    var_8h = &pSecurityDescriptor;\n    var_14h = 0;\n    var_4h = 0;\n    pSecurityDescriptor = 1;\n    var_1fh._1_2_ = 4;\n    var_10h = 0x40836c;\n    lpSecurityAttributes = 0xc;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(lpFileName, &lpSecurityAttributes);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 != 0xb7) {\n            return iVar2;\n        }\n        iVar2 = (*_sym.imp.ADVAPI32.dll_SetFileSecurityA)(lpFileName, 0x80000007, &pSecurityDescriptor);\n        if (iVar2 == 0) {\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 362
    },
    "0040560a": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nuint fcn.0040560a(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(param_1, 0);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 100
    },
    "00405bb1": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405bb1(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 143
    },
    "00405be0": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405be0(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 143
    }
}