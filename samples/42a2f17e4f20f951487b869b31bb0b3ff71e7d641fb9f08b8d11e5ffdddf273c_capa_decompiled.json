{
    "004052b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004052b9(uint *param_1)\n\n{\n    *param_1 = 0x401268;\n    if (param_1[2] != 0) {\n        fcn.004068d8(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00403440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00403440(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uchar auStack56 [4];\n    uint uStack52;\n    uchar auStack48 [48];\n    \n    if (*0x2f55be4 == 3) {\n        uStack52 = 0;\n        fcn.00408080(auStack48, 0, 0x30);\n        (*_sym.imp.KERNEL32.dll_GetDefaultCommConfigA)(0x402d78, &uStack52, auStack56);\n        (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(0, 0, 0, 0);\n    }\n    *param_1 = param_3 ^ param_2;\n    return;\n}\n",
        "token_count": 173
    },
    "004048a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl\nfcn.004048a0(uint noname_0, uint noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h_00;\n    int32_t arg_10h;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    int32_t var_4h;\n    uint32_t var_ch_3;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_10h;\n    uint auStack40 [3];\n    uint var_24h;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_14h;\n    uint var_10h_3;\n    uint var_ch;\n    \n    var_14h = 0x7f9e30;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    puStack20 = &stack0xffffffcc;\n    uVar4 = var_ch_3 | 7;\n    if (uVar4 < 0x7fffffff) {\n        uVar1 = *(var_4h + 0x18);\n        uVar3 = uVar1 >> 1;\n        var_ch_3 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= 0x7ffffffe - uVar3)) {\n            var_ch_3 = uVar3 + uVar1;\n        }\n    }\n    uVar4 = var_ch_3 + 1;\n    var_10h_3 = 0;\n    if (uVar4 == 0) {\n        uVar4 = 0;\n    }\n    else if (0xffffffff / uVar4 < 2) {\n        uStack24 = 0;\n        fcn.004051ec(&uStack24);\n        auStack40[0] = 0x401210;\n        fcn.00405d6b(auStack40, 0x7fa4b8);\n        var_10h_3 = CONCAT31(var_10h_3._1_3_, 2);\n        puStack20 = &stack0xffffffc0;\n        fcn.00404a20();\n        return 0x404974;\n    }\n    puStack20 = &stack0xffffffcc;\n    arg_8h_00 = fcn.00405abb(uVar4 * 2);\n    var_10h_3 = 0xffffffff;\n    if (noname_2 != 0) {\n        if (*(var_4h + 0x18) < 8) {\n            arg_10h = var_4h + 4;\n        }\n        else {\n            arg_10h = *(var_4h + 4);\n        }\n        fcn.004056b5(arg_8h_00, var_ch_3 * 2 + 2, arg_10h, noname_2 * 2);\n    }\n    if (7 < *(var_4h + 0x18)) {\n        fcn.00405604();\n    }\n    *(var_4h + 4) = arg_8h_00;\n    *(var_4h + 0x18) = var_ch_3;\n    *(var_4h + 0x14) = noname_2;\n    puVar2 = var_4h + 4;\n    if (7 < var_ch_3) {\n        puVar2 = arg_8h_00;\n    }\n    *(puVar2 + noname_2 * 2) = 0;\n    *in_FS_OFFSET = uStack16;\n    return puVar2;\n}\n",
        "token_count": 936
    },
    "00404a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404a20(uint32_t param_1)\n\n{\n    code *pcVar1;\n    uint auStack16 [4];\n    \n    if (param_1 == 0) {\n        param_1 = 0;\n    }\n    else if (0xffffffff / param_1 < 2) {\n        auStack16[0] = 0;\n        fcn.004051ec(auStack16);\n        auStack16[0] = 0x401210;\n        fcn.00405d6b(auStack16, 0x7fa4b8);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00405abb(param_1 * 2);\n    return;\n}\n",
        "token_count": 170
    },
    "004058f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004059ea: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004059ef)\n// WARNING: Removing unreachable block (ram,0x00405a1d)\n// WARNING: Removing unreachable block (ram,0x004059f5)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004058f7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00408c00(0x7fa040, 0x18);\n    fcn.004088c8(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x7fe730 != 1) {\n        *0x7fe72c = 1;\n        *0x7fe728 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00407b17(*0x2f65998);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00407b17(*0x2f65994);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00407b0e();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00407b17(*piVar2);\n                        iVar3 = fcn.00407b0e();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00407b17(*0x2f65998);\n                        piVar1 = fcn.00407b17(*0x2f65994);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00405831(0x4011d4);\n        }\n        fcn.00405831(0x4011dc);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004087ee(8);\n    }\n    return;\n}\n",
        "token_count": 802
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00405ebb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00405ebb(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x405f66;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00405f92;\n        uStack36 = *0x7fbaa8 ^ &fcn.00405ebb::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00405ebb::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00407d63();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00405ebb::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 721
    },
    "004061ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004061ab(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x7fbaa8) {\n        return;\n    }\n    *0x7fee70 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x7fee74 = &arg_8h;\n    *0x7fedb0 = 0x10001;\n    *0x7fed58 = 0xc0000409;\n    *0x7fed5c = 1;\n    var_328h = *0x7fbaa8;\n    var_324h = *0x7fbaac;\n    *0x7fed64 = unaff_retaddr;\n    *0x7fee3c = in_GS;\n    *0x7fee40 = in_FS;\n    *0x7fee44 = in_ES;\n    *0x7fee48 = in_DS;\n    *0x7fee4c = unaff_EDI;\n    *0x7fee50 = unaff_ESI;\n    *0x7fee54 = unaff_EBX;\n    *0x7fee58 = in_EDX;\n    *0x7fee5c = in_ECX;\n    *0x7fee60 = in_EAX;\n    *0x7fee64 = unaff_EBP;\n    *0x7fee68 = unaff_retaddr;\n    *0x7fee6c = in_CS;\n    *0x7fee78 = in_SS;\n    *0x7feda8 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040aa1c(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x401b40);\n    if (*0x7feda8 == 0) {\n        fcn.0040aa1c(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 840
    },
    "004091b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004091b8(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004087ee(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00409b93": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00409b93(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00408c00(0x7fa2b8, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.00407d63();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.00408e38();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.0040a760(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00409c59();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.00408e38();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.00408c45();\n    return;\n}\n",
        "token_count": 569
    },
    "00409c59": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00409c59(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00407d63();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00407d63();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00409f21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409f21(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.004060f9(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00407d63();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00407d63();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.004060d2(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00409cb9(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "0040ce7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040ce7b(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00407b0e();\n    var_4h = 0;\n    if (*0x7ff0d8 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x402c94);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x402c88);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x7ff0d8 = fcn.00407a9c(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x402c78);\n        *0x7ff0dc = fcn.00407a9c(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402c64);\n        *0x7ff0e0 = fcn.00407a9c(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402c48);\n        *0x7ff0e8 = fcn.00407a9c(uVar3);\n        if (*0x7ff0e8 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x402c30);\n            *0x7ff0e4 = fcn.00407a9c(uVar3);\n        }\n    }\n    if ((*0x7ff0e4 != iVar1) && (*0x7ff0e8 != iVar1)) {\n        pcVar4 = fcn.00407b17(*0x7ff0e4);\n        pcVar5 = fcn.00407b17(*0x7ff0e8);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040cfbd;\n        }\n    }\n    if ((((*0x7ff0dc != iVar1) && (pcVar4 = fcn.00407b17(*0x7ff0dc),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x7ff0e0 != iVar1 && (pcVar4 = fcn.00407b17(*0x7ff0e0),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040cfbd:\n    pcVar4 = fcn.00407b17(*0x7ff0d8);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 865
    },
    "0040e57e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e57e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7fbaa8 ^ &stack0xfffffffc;\n    fcn.00405497(arg_10h);\n    var_14h = fcn.0040f569(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040eae1(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040e5d7:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e617;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040e609:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e617;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040e609;\n        goto code_r0x0040e5d7;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040e617:\n    fcn.004061ab(unaff_EBX);\n    return;\n}\n",
        "token_count": 509
    },
    "0040e626": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e626(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7fbaa8 ^ &stack0xfffffffc;\n    fcn.00405497(arg_10h);\n    var_14h = fcn.0040f569(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040f025(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040e67f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e6bf;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040e6b1:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e6bf;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040e6b1;\n        goto code_r0x0040e67f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040e6bf:\n    fcn.004061ab(unaff_EBX);\n    return;\n}\n",
        "token_count": 512
    },
    "0040eae1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040eae1(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040efe2;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040ec16;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040ec1d;\ncode_r0x0040ec16:\n                        do {\n                            var_4h = 1;\ncode_r0x0040ec1d:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040ec2b;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040ec2b:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7fbe44 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7fbe44 < iVar12) {\n                if (iVar12 < *0x7fbe40) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x7fbe40;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040efe2;\n            }\n            var_10h = *0x7fbe44 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040edce;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040edce:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040efe2:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3669
    },
    "0040f025": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f025(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040f526;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x7fbe60 - 1;\n        iVar4 = *0x7fbe60 + (*0x7fbe60 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x7fbe60 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040f15a;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040f161;\ncode_r0x0040f15a:\n                        do {\n                            var_4h = 1;\ncode_r0x0040f161:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040f16f;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040f16f:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7fbe5c - *0x7fbe60) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7fbe5c < iVar12) {\n                if (iVar12 < *0x7fbe58) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x7fbe6c;\n                    iVar4 = *0x7fbe64 + (*0x7fbe64 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7fbe64 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x7fbe64 + (*0x7fbe64 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7fbe64 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x7fbe6c + *0x7fbe58;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040f526;\n            }\n            var_10h = *0x7fbe5c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x7fbe60 - 1;\n            iVar12 = *0x7fbe60 + (*0x7fbe60 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x7fbe60 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040f312;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040f312:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x7fbe64 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040f526:\n    var_20h = iVar12 << (0x1fU - *0x7fbe64 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x7fbe68 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x7fbe68 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3647
    },
    "0040f569": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040f82b)\n// WARNING: Removing unreachable block (ram,0x0040f7f4)\n// WARNING: Removing unreachable block (ram,0x0040fbdc)\n// WARNING: Removing unreachable block (ram,0x0040f803)\n// WARNING: Removing unreachable block (ram,0x0040f80b)\n// WARNING: Removing unreachable block (ram,0x0040f811)\n// WARNING: Removing unreachable block (ram,0x0040f814)\n// WARNING: Removing unreachable block (ram,0x0040f81b)\n// WARNING: Removing unreachable block (ram,0x0040f825)\n// WARNING: Removing unreachable block (ram,0x0040f880)\n// WARNING: Removing unreachable block (ram,0x0040f87a)\n// WARNING: Removing unreachable block (ram,0x0040f886)\n// WARNING: Removing unreachable block (ram,0x0040f8a3)\n// WARNING: Removing unreachable block (ram,0x0040f8a5)\n// WARNING: Removing unreachable block (ram,0x0040f8ad)\n// WARNING: Removing unreachable block (ram,0x0040f8b0)\n// WARNING: Removing unreachable block (ram,0x0040f8b5)\n// WARNING: Removing unreachable block (ram,0x0040f8b8)\n// WARNING: Removing unreachable block (ram,0x0040fbe5)\n// WARNING: Removing unreachable block (ram,0x0040f8c3)\n// WARNING: Removing unreachable block (ram,0x0040fbfc)\n// WARNING: Removing unreachable block (ram,0x0040fc03)\n// WARNING: Removing unreachable block (ram,0x0040f8ce)\n// WARNING: Removing unreachable block (ram,0x0040f8e1)\n// WARNING: Removing unreachable block (ram,0x0040f8e3)\n// WARNING: Removing unreachable block (ram,0x0040f8f0)\n// WARNING: Removing unreachable block (ram,0x0040f8f5)\n// WARNING: Removing unreachable block (ram,0x0040f8fb)\n// WARNING: Removing unreachable block (ram,0x0040f904)\n// WARNING: Removing unreachable block (ram,0x0040f90b)\n// WARNING: Removing unreachable block (ram,0x0040f923)\n// WARNING: Removing unreachable block (ram,0x0040f934)\n// WARNING: Removing unreachable block (ram,0x0040f942)\n// WARNING: Removing unreachable block (ram,0x0040f981)\n// WARNING: Removing unreachable block (ram,0x0040f98a)\n// WARNING: Removing unreachable block (ram,0x0040fba2)\n// WARNING: Removing unreachable block (ram,0x0040f998)\n// WARNING: Removing unreachable block (ram,0x0040f9a2)\n// WARNING: Removing unreachable block (ram,0x0040fbbd)\n// WARNING: Removing unreachable block (ram,0x0040f9af)\n// WARNING: Removing unreachable block (ram,0x0040f9b6)\n// WARNING: Removing unreachable block (ram,0x0040f9c0)\n// WARNING: Removing unreachable block (ram,0x0040f9c5)\n// WARNING: Removing unreachable block (ram,0x0040f9d5)\n// WARNING: Removing unreachable block (ram,0x0040f9da)\n// WARNING: Removing unreachable block (ram,0x0040f9e4)\n// WARNING: Removing unreachable block (ram,0x0040f9e9)\n// WARNING: Removing unreachable block (ram,0x0040f9fb)\n// WARNING: Removing unreachable block (ram,0x0040fa08)\n// WARNING: Removing unreachable block (ram,0x0040fa17)\n// WARNING: Removing unreachable block (ram,0x0040fa24)\n// WARNING: Removing unreachable block (ram,0x0040fa41)\n// WARNING: Removing unreachable block (ram,0x0040fa45)\n// WARNING: Removing unreachable block (ram,0x0040fa4c)\n// WARNING: Removing unreachable block (ram,0x0040fa55)\n// WARNING: Removing unreachable block (ram,0x0040fa58)\n// WARNING: Removing unreachable block (ram,0x0040fa69)\n// WARNING: Removing unreachable block (ram,0x0040fa77)\n// WARNING: Removing unreachable block (ram,0x0040fa82)\n// WARNING: Removing unreachable block (ram,0x0040fa89)\n// WARNING: Removing unreachable block (ram,0x0040fab4)\n// WARNING: Removing unreachable block (ram,0x0040fab9)\n// WARNING: Removing unreachable block (ram,0x0040fac4)\n// WARNING: Removing unreachable block (ram,0x0040facd)\n// WARNING: Removing unreachable block (ram,0x0040fad3)\n// WARNING: Removing unreachable block (ram,0x0040fad6)\n// WARNING: Removing unreachable block (ram,0x0040fafc)\n// WARNING: Removing unreachable block (ram,0x0040fb01)\n// WARNING: Removing unreachable block (ram,0x0040fb06)\n// WARNING: Removing unreachable block (ram,0x0040fb13)\n// WARNING: Removing unreachable block (ram,0x0040fb24)\n// WARNING: Removing unreachable block (ram,0x0040fb55)\n// WARNING: Removing unreachable block (ram,0x0040fb2a)\n// WARNING: Removing unreachable block (ram,0x0040fb50)\n// WARNING: Removing unreachable block (ram,0x0040fb34)\n// WARNING: Removing unreachable block (ram,0x0040fb4a)\n// WARNING: Removing unreachable block (ram,0x0040fb43)\n// WARNING: Removing unreachable block (ram,0x0040fb58)\n// WARNING: Removing unreachable block (ram,0x0040fb85)\n// WARNING: Removing unreachable block (ram,0x0040fb62)\n// WARNING: Removing unreachable block (ram,0x0040f9ed)\n// WARNING: Removing unreachable block (ram,0x0040f9ca)\n// WARNING: Removing unreachable block (ram,0x0040fbc0)\n// WARNING: Removing unreachable block (ram,0x0040f906)\n// WARNING: Removing unreachable block (ram,0x0040fbca)\n// WARNING: Removing unreachable block (ram,0x0040fc0b)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0040f569(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00406744();\n        *puVar2 = 0x16;\n        fcn.004066dc(0, 0, 0, 0, 0);\n        fcn.004061ab(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040f5fc. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40fc31\n    (**0x40fc31)();\n    return;\n}\n",
        "token_count": 1882
    },
    "00404d94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d94(uint32_t arg_8h)\n\n{\n    fcn.00404d75();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405604();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00404ddd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ddd(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401228;\n    fcn.00404d75();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405604();\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "00404e2c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e2c(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401234;\n    fcn.00404d75();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405604();\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "004052dc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004052dc(uint32_t arg_8h)\n\n{\n    fcn.004052b9();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405604();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00405742": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405742(uint32_t arg_8h)\n\n{\n    fcn.00405732();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405604();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "00403390": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00403390(void)\n\n{\n    *0x2f55bfa = 0x6c;\n    *0x2f55bee = 0x6d;\n    *0x2f55bec = 0x69;\n    *0x2f55bf0 = 0x67;\n    *0x2f55bf8 = 100;\n    *0x2f55bfe = 0;\n    *0x2f55bf2 = 0x33;\n    *0x2f55bea = 0x73;\n    *0x2f55bfc = 0x6c;\n    *0x2f55bf6 = 0x2e;\n    *0x2f55bf4 = 0x32;\n    *0x2f55be8 = 0x6d;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x2f55be8);\n    return;\n}\n",
        "token_count": 215
    },
    "004034d0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004034d0(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uStack312;\n    uchar auStack292 [4];\n    uchar auStack288 [4];\n    uchar auStack284 [276];\n    uint32_t *puStack8;\n    \n    uVar2 = *param_1;\n    uVar3 = param_1[1];\n    fcn.004034b0();\n    uStack312 = uVar2;\n    iVar1 = *0x7fc160;\n    if (*0x2f55be4 == 0x14) {\n        (*_sym.imp.KERNEL32.dll_GetCPInfoExA)(0, 0, auStack284);\n        iVar1 = *0x7fc160;\n    }\n    do {\n        if (*0x2f55be4 == 0xfa9) {\n            *0x2f55be0 = 0xedeb2e40;\n        }\n        else if (*0x2f55be4 == 0x3eb) {\n            *0x2f55b54 = 0;\n        }\n        *0x2f55bdc = 0xf4ea3dee;\n        fcn.004034c0();\n        if (*0x2f55be4 == 0x9e6) {\n            (*_sym.imp.KERNEL32.dll_GetProcessPriorityBoost)(0, auStack292);\n        }\n        uVar3 = uVar3 - (uVar2 >> 5 ^ uVar2 * 0x10 + iVar1 ^ uStack312 + 0x23f);\n        if (*0x2f55be4 == 0xc) {\n            (*_sym.imp.KERNEL32.dll_WriteConsoleA)(0, 0, 0, auStack288, 0);\n        }\n        fcn.00403430();\n        fcn.00403440();\n        uVar2 = uVar2 - unaff_ESI;\n        uStack312 = uVar3;\n    } while (uVar3 != 0xfffffdc2);\n    puStack8[1] = 0xfffffdc2;\n    *puStack8 = uVar2;\n    return;\n}\n",
        "token_count": 504
    },
    "004036a0": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.004036a0(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    \n    fcn.0040ea50();\n    pcVar5 = _sym.imp.KERNEL32.dll_FindNextVolumeA;\n    pcVar4 = _sym.imp.KERNEL32.dll_WriteProfileSectionA;\n    pcVar3 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetNumberFormatA;\n    uVar6 = *0x2f55b58;\n    uVar1 = *0x2f55be4 >> 3;\n    while (uVar1 != 0) {\n        if (*0x2f55be4 == 0x959) {\n            (*pcVar2)();\n            (*pcVar5)();\n            (*pcVar4)();\n            (*pcVar3)();\n            (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExW)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasW)();\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasA)();\n            (*pcVar4)();\n            (*_sym.imp.KERNEL32.dll_EnumResourceTypesA)();\n            (*_sym.imp.KERNEL32.dll_SetThreadPriorityBoost)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleTitleW)();\n            (*_sym.imp.KERNEL32.dll_BeginUpdateResourceA)();\n            (*_sym.imp.KERNEL32.dll_GetComputerNameA)();\n            (*_sym.imp.KERNEL32.dll_FindResourceExA)();\n        }\n        fcn.004034d0();\n        uVar6 = uVar6 - 1;\n        uVar1 = uVar6;\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "004034b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004034b0(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 46
    },
    "004034c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004034c0(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 48
    },
    "004037f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004037f0(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00403830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "PEB access",
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d",
            "contain loop",
            "get common file path",
            "allocate thread local storage",
            "resolve function by parsing PE exports",
            "get disk size"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00404660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00404660(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t **ppuVar3;\n    uint32_t **ppuVar4;\n    int32_t unaff_ESI;\n    \n    uVar1 = *(unaff_ESI + 0x18);\n    ppuVar4 = unaff_ESI + 4;\n    ppuVar3 = ppuVar4;\n    if (7 < uVar1) {\n        ppuVar3 = *ppuVar4;\n    }\n    if (ppuVar3 < 0x402e39) {\n        ppuVar3 = ppuVar4;\n        if (7 < uVar1) {\n            ppuVar3 = *ppuVar4;\n        }\n        if (0x402e38 < ppuVar3 + *(unaff_ESI + 0x14) * 2) {\n            if (7 < uVar1) {\n                ppuVar4 = *ppuVar4;\n            }\n            fcn.00404700(0x402e38 - ppuVar4 >> 1);\n            return;\n        }\n    }\n    cVar2 = fcn.004047b0();\n    if (cVar2 != '\\0') {\n        ppuVar3 = ppuVar4;\n        if (7 < *(unaff_ESI + 0x18)) {\n            ppuVar3 = *ppuVar4;\n        }\n        fcn.004056b5(ppuVar3, *(unaff_ESI + 0x18) * 2, 0x402e38, in_EAX * 2);\n        *(unaff_ESI + 0x14) = in_EAX;\n        if (7 < *(unaff_ESI + 0x18)) {\n            ppuVar4 = *ppuVar4;\n        }\n        *(ppuVar4 + in_EAX * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "00404700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00404700(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *arg_8h;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    \n    if (*(in_EAX + 0x14) < param_2) {\n        fcn.00404f9f();\n    }\n    uVar4 = *(in_EAX + 0x14) - param_2;\n    if (param_3 < uVar4) {\n        uVar4 = param_3;\n    }\n    if (param_1 != in_EAX) {\n        cVar1 = fcn.004047b0();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x18) < 8) {\n                iVar2 = in_EAX + 4;\n            }\n            else {\n                iVar2 = *(in_EAX + 4);\n            }\n            piVar3 = param_1 + 4;\n            arg_8h = piVar3;\n            if (7 < *(param_1 + 0x18)) {\n                arg_8h = *piVar3;\n            }\n            fcn.004056b5(arg_8h, *(param_1 + 0x18) * 2, iVar2 + param_2 * 2, uVar4 * 2);\n            *(param_1 + 0x14) = uVar4;\n            if (7 < *(param_1 + 0x18)) {\n                piVar3 = *piVar3;\n            }\n            *(uVar4 * 2 + piVar3) = 0;\n        }\n        return param_1;\n    }\n    fcn.00404810();\n    fcn.00404810();\n    return param_1;\n}\n",
        "token_count": 429
    },
    "004047b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.004047b0(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                 uint param_8, uint param_9, uint param_10, uint param_11, uint param_12)\n\n{\n    int32_t in_EAX;\n    uint unaff_ESI;\n    uint32_t unaff_EDI;\n    uint unaff_retaddr;\n    \n    if (0x7ffffffe < unaff_EDI) {\n        fcn.00404e53();\n    }\n    if (*(in_EAX + 0x18) < unaff_EDI) {\n        fcn.004048a0(in_EAX, unaff_EDI, *(in_EAX + 0x14), unaff_ESI, unaff_retaddr, param_1, param_2, param_3, param_4, \n                     param_5, param_6, param_7, param_8, param_9, param_10, param_11, param_12);\n        return unaff_EDI != 0;\n    }\n    if (unaff_EDI == 0) {\n        *(in_EAX + 0x14) = 0;\n        if (7 < *(in_EAX + 0x18)) {\n            **(in_EAX + 4) = 0;\n            return false;\n        }\n        *(in_EAX + 4) = 0;\n    }\n    return unaff_EDI != 0;\n}\n",
        "token_count": 337
    },
    "00404810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00404810(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint *puVar3;\n    int32_t unaff_ESI;\n    uint *puStack8;\n    uint *puStack4;\n    \n    if (*(unaff_ESI + 0x14) < unaff_EBX) {\n        fcn.00404f9f();\n    }\n    uVar1 = *(unaff_ESI + 0x14) - unaff_EBX;\n    if (uVar1 < in_EAX) {\n        in_EAX = uVar1;\n    }\n    if (in_EAX != 0) {\n        puVar3 = unaff_ESI + 4;\n        puStack8 = puVar3;\n        puStack4 = puVar3;\n        if (7 < *(unaff_ESI + 0x18)) {\n            puStack8 = *puVar3;\n            puStack4 = *puVar3;\n        }\n        fcn.0040517e(puStack4 + unaff_EBX * 2, (*(unaff_ESI + 0x18) - unaff_EBX) * 2, \n                     puStack8 + (unaff_EBX + in_EAX) * 2, (uVar1 - in_EAX) * 2);\n        iVar2 = *(unaff_ESI + 0x14) - in_EAX;\n        *(unaff_ESI + 0x14) = iVar2;\n        if (7 < *(unaff_ESI + 0x18)) {\n            puVar3 = *puVar3;\n        }\n        *(puVar3 + iVar2 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 394
    },
    "00404ab7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404ab7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0040517e(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 68
    },
    "00404b52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b52(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00404a99(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 64
    },
    "00404b6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b6d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00404ab7(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 65
    },
    "00404bbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404bbe(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.00404b52(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 71
    },
    "00404bdd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404bdd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.00404b6d(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 72
    },
    "0040510a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040510a(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004061ba(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.0040525c(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = 0x40121c;\n    fcn.004050df(arg_8h_00 + 0xc);\n    fcn.00406223();\n    return;\n}\n",
        "token_count": 195
    },
    "00405a23": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a23(uint arg_8h)\n\n{\n    fcn.004058f7(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00408a39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00408a4d)\n// WARNING: Removing unreachable block (ram,0x00408a53)\n// WARNING: Removing unreachable block (ram,0x00408a55)\n\nvoid fcn.00408a39(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "00405e52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405e52(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040a66e(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "00408465": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408465(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00408c00(0x7fa198, 0xc);\n    fcn.004088c8(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x7fe7ac;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x7fe7a8;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004084a9;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.004068d8(arg_8h_00);\ncode_r0x004084a9:\n        fcn.004068d8(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004084cc();\n    fcn.00408c45();\n    return;\n}\n",
        "token_count": 398
    },
    "0055212a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x005520a8) overlaps instruction at (ram,0x005520a7)\n// \n// WARNING: Removing unreachable block (ram,0x0055202e)\n\nuchar * __fastcall fcn.0055212a(int32_t param_1, int32_t *param_2)\n\n{\n    uint16_t *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    ushort uVar4;\n    uint8_t uVar5;\n    uchar *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t unaff_EBX;\n    int32_t *unaff_EBP;\n    uchar *puVar9;\n    uint *unaff_ESI;\n    int16_t iVar10;\n    uint *unaff_EDI;\n    uint16_t in_CS;\n    uint16_t in_SS;\n    ushort in_DS;\n    int32_t in_GS_OFFSET;\n    bool bVar12;\n    uint8_t in_AF;\n    int32_t *piVar13;\n    uint32_t *puVar11;\n    \n    puVar6 = &stack0xfffffffc;\n    do {\n        uVar3 = *0xd99361ee;\n        puVar9 = puVar6 + 1;\n        if (puVar9 != NULL) {\n            uVar5 = in(param_2);\n            do {\n            } while (-1 < uVar5);\n            uVar2 = 9 < (uVar5 & 0xf) | in_AF;\n            uVar5 = uVar5 + uVar2 * '\\x06';\n            *param_2 = (*param_2 - param_1) - (0x90 < (uVar5 & 0xf0) | uVar2 * (0xf9 < uVar5));\n            uVar4 = *0xe71837bd;\n            puVar6[0x641c8b94] = puVar6[0x641c8b94] ^ param_1 + 1U;\n            *unaff_EDI = *unaff_ESI;\n            iVar10 = unaff_EDI + -1;\n            segment(uVar4, iVar10);\n            puVar11 = unaff_EDI + -1 & 0xffff0000 | iVar10 - 4;\n            segment(in_DS, unaff_ESI + -1);\n            *(unaff_ESI + 1) = *(unaff_ESI + 1) >> 1 | (param_2 < *(puVar11 + -0x1054e913)) << 7;\n            *0x6598222d = 0x37bd;\n            *puVar11 = *puVar11 ^ unaff_EBX - 1;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar5 = 0x6e < unaff_EBX;\n        uVar7 = unaff_EBX & 0xffffff00 | unaff_EBX + 0x91;\n        piVar13 = unaff_EBP;\n        while( true ) {\n            bVar12 = uVar7 < 0x3c1fa1a7 || uVar7 + 0xc3e05e59 < uVar5;\n            uVar7 = (uVar7 + 0xc3e05e59) - uVar5;\n            iVar8 = param_1 + -1;\n            if (iVar8 == 0 || uVar7 == 0) {\n                puVar9[-0x16364fa8] = 0;\n                return puVar9;\n            }\n            if (iVar8 == 0) {\n                LOCK();\n                uVar5 = puVar9[0x49];\n                puVar9[0x49] = uVar5 - bVar12;\n                puVar6 = in(0x7a);\n                *unaff_EDI = *unaff_ESI;\n                if (bVar12 <= uVar5) {\n                    do {\n    // WARNING: Do nothing block with infinite loop\n                    } while( true );\n                }\n                swi(4);\n                bVar12 = false;\n                puVar9 = param_2 + -1;\n                while( true ) {\n                    if (!bVar12) {\n                        do {\n    // WARNING: Do nothing block with infinite loop\n                        } while( true );\n                    }\n                    if (-1 < puVar9) break;\n                    bVar12 = *0x433c493c < puVar6;\n                    *0x433c493c = *0x433c493c - puVar6;\n                    puVar6 = puVar6 + -1;\n                    puVar9 = puVar6;\n                    if (bVar12) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                }\n                return puVar6;\n            }\n            if (uVar7 < 0) break;\n            uVar5 = 9 < (uVar7 & 0xf) | in_AF;\n            uVar7 = uVar7 & 0xffff0000 | CONCAT11((uVar7 >> 8) - uVar5, uVar7 + uVar5 * -6) & 0xff0f;\n            unaff_EDI = unaff_EDI + -1;\n            puVar9 = puVar9 + -1;\n            piVar13 = piVar13 & 0xffff0000 | in_CS;\n            param_1 = param_1 + -2;\n            in_AF = uVar5;\n            if (param_1 == 0) {\n                *unaff_EDI = *unaff_ESI;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        unaff_ESI = unaff_ESI + 2;\n        unaff_EBP = piVar13 & 0xffff0000 | in_SS;\n        puVar1 = in_GS_OFFSET + -0x1374aa6c;\n        *puVar1 = *puVar1 + bVar12 * ((piVar13 & 3) - (*puVar1 & 3));\n        param_1 = iVar8;\n        param_2 = piVar13;\n        unaff_EBX = uVar3;\n        puVar6 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1390
    }
}